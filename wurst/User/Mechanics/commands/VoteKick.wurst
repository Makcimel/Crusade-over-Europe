package VoteKick
import Main
import HashSet
import CommandTools

public int array kick_count
public HashSet<player> array who_voted_for_player

init
  for i = 0 to PLAYER_SLOTS - 1
    who_voted_for_player[i] = new HashSet<player>()



function countVotesNeeded() returns int
  // How many active players.
  var c = 0
  for i = 0 to PLAYER_SLOTS - 1
    if players[i].isIngame()
      c++

  return ((c - 1) / 2).toInt() + 1

function tryToKickOrHowManyLeft(int kick_id)
  if kick_id < 0
    return

  if kick_count[kick_id] >= countVotesNeeded()
    CustomDefeatBJ(players[kick_id], "You've been kicked from the game!")
    textToAll("The player " + players[kick_id].getNameColored() + " has been kicked with the power of democracy!", 10.0)
  else
    textToAll(kick_count[kick_id].toString() + " |cffff0000out of|r " + countVotesNeeded().toString() + " |cffff0000voted to kick the player|r " + players[kick_id].getNameColored() + "! |cff00ffdd(player number is " + kick_id.toString() + ")|r", 10.0)

function getPlayerIdByName(string pl_str) returns int
  for i = 0 to PLAYER_SLOTS - 1
    if players[i].getName() == pl_str
      return i
  return -1

public function addVote(int kick_id, player who_votes)
  if kick_id < 0
    return

  if not who_voted_for_player[kick_id].has(who_votes)
    kick_count[kick_id]++
    who_voted_for_player[kick_id].add(who_votes)

public function voteKick(player who_votes, string who_kick)
  int kick_id

  // Number
  if who_kick.length() <= 2 and who_kick.toInt() > 0 and who_kick.toInt() < 24
    kick_id = who_kick.toInt()
  else if player_color_str.has(who_kick)
    kick_id = player_color_str.indexOf(who_kick)
  else if getPlayerIdByName(who_kick) != -1
    kick_id = getPlayerIdByName(who_kick)
  else
    noteToPlayer("Couldn't find player: '" + who_kick + "'", who_votes)
    return

  addVote(kick_id, who_votes)
  tryToKickOrHowManyLeft(kick_id)