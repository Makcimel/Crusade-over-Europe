package City
import Main
import ClosureEvents
import UnitTools

// Time of the last Click
real array lastClickTime
unit array lastClickUnit
let kClickInterval = 4.0

//-------------------------------------------------------CLICK-----------------------------------------------------------
// O(n)
function onClick()
	lastClickTime[GetTriggerPlayer().getId()] = GetElapsedTime()
	lastClickUnit[GetTriggerPlayer().getId()] = GetTriggerUnit()
	let city_id = GetCityId(GetTriggerUnit())
	cities[city_id].OnCityClick(GetTriggerPlayer())

//-------------------------------------------------------SETTLE----------------------------------------------------------
function Settle()
	// Adding player who is settling to the force that city is in
	let city_id = GetCityId(GetSpellTargetUnit())
	let force_id = cities[city_id].GetCityForceId()
	let player_id = GetSpellAbilityUnit().getOwner().getId()
	player_stats[player_id].ChangeForce(force_id)	

	// Spawning starting units
	for u in kStartingUnits[force_id]
		CreateNUnitsAtLoc(1, u, players[player_id], GetSpellTargetLoc(), 0)

	cities[city_id].SettleCity(player_id)


	KillUnit(GetSpellAbilityUnit())

init
	if (dbg_mode) 
		CreateNUnitsAtLoc(5, uSettlerReadyToSettle, players[dbg_player], Location(-3000.0, 1700.0), 0)
	//-------------------------------------------------------CLICK---------------------------------------------------------
	let t_click = CreateTrigger()
		..addCondition(Condition(() -> (lastClickUnit[GetTriggerPlayer().getId()] != GetTriggerUnit() or GetElapsedTime() - lastClickTime[GetTriggerPlayer().getId()] > kClickInterval)))
		..addAction(function onClick)
		
	for i = 0 to PLAYER_SLOTS
		t_click.registerPlayerUnitEvent(players[i], EVENT_PLAYER_UNIT_SELECTED, Filter(() -> isCity(GetFilterUnit()))) // O(n)

	//-----------------------------------------------------SETTLE--------------------------------------------------------
	let t_settle = CreateTrigger()
		..addCondition(Condition(() -> GetSpellAbilityUnit().getTypeId() == uSettlerReadyToSettle 
															 and GetSpellTargetUnit().getTypeId() == uTH
															 and GetSpellTargetUnit().getOwner().getId() == PLAYER_NEUTRAL_AGGRESSIVE))
		..addAction(function Settle)
		..registerAnyUnitEvent(EVENT_PLAYER_UNIT_SPELL_CAST)

	//----------------------------------------------------CONQUER CAPITOL---------------------------------------------------
	let t_counquer_capitol = CreateTrigger()
		..registerAnyUnitEvent(EVENT_PLAYER_UNIT_ATTACKED)
		
		..addCondition(Condition(() -> begin
			let u = GetAttackedUnitBJ().getTypeId()
			return GetUnitLifePercent(GetAttackedUnitBJ()) > kCityLifePercentToCapture and (u == uCapitol1 or u == uCapitol2 or u == uCapitol3)
		end))

		..addAction(() -> begin
			let city_id = GetCityId(GetAttackedUnitBJ())
			cities[city_id].ChangeOwner(GetAttacker().getOwner().getId())
			SetUnitLifePercentBJ(GetAttackedUnitBJ(), kCityLifePercentOnceItCaptured)

			AttentionToForce(GetAttacker().getOwner().getNameColored() + " has just captured " + GetAttackedUnitBJ().getOwner().getNameColored() + " Capitol!", GetPlayersAll())
		end)
		
	//--------------------------------------------AUTONOMOUS-------------------------------------------------------------
	registerSpellEffectEvent(aGrantIndependence) ->
		let city_id = GetCityId(GetSpellAbilityUnit())
		cities[city_id].ReplaceCity(uAutonomousTH)
	
	registerSpellEffectEvent(aSubjugate) ->
		let city_id = GetCityId(GetSpellAbilityUnit())
		cities[city_id].ReplaceCity(uTH)


	let t_auto_attacked = CreateTrigger()
		..registerAnyUnitEvent(EVENT_PLAYER_UNIT_ATTACKED)
		..addCondition(Condition(() -> GetAttackedUnitBJ().getTypeId() == uAutonomousTH))
		..addAction(() -> cities[GetCityId(GetAttackedUnitBJ())].ChangeOwner(PLAYER_NEUTRAL_AGGRESSIVE))
	
	//-----------------------------------------CONQUER-------------------------------------------------------------------------
	EventListener.add(EVENT_PLAYER_UNIT_ATTACKED) ->
		unit u = GetAttackedUnitBJ()
		if u.isCity() and u.getLifePercent() <= kCityLifePercentOnceItCaptured
			let city_id = u.getCityId()
			cities[city_id].Capture(GetAttacker().getOwner())

