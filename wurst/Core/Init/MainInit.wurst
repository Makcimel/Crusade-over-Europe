package MainInit
import Main
import SettingCities

// Players
// In the spawn point, players are spawned in shapes of co-centring rings
public let kSpawnPoint = vec2(311.2, 5166.7)
public let kSpawnPlayersInFirstRing = 6
public let kSpawnAddPerRing = 2
public let kSpawnFirstRingRadius = 100.0
public let kSpawnRingRadiusChange = 50.0


// Cinematic tutorial strings.
// How long a text(string) stays in the chat
public let kCTfade = 10.0
// How long does it take to turn to another string.
public let kCTchange = 12.5

public constant ksCT = asList(
"You're playing |cffffff65Crusade over Europe|r.\n\nUse your |cff0011ffsettler|r to choose the foundation of your new kingdom.\nThe location you choose will |cffff0000determine the faction you will get|r.\nUse the |cff00ffffF1|r menu to create alliances.\nExpand quickly, Capture cities and ores to |cffff0000increase your income|r.\nUse the |cff00fff2F2|r menu to set the taxes of your newly acquired |cff0026ffcities|r.\nFor more information, please, go to |cff00d3f8F9 menu|r."

//,"Use your |cffff8040Settler|r to choose the location of your Kingdom, use the ability |cffffff80Create Capitol|r on any Town Hall to build your Capitol.\nChoose your postion carefully and be mindful of the other players positions."

//,"|cfff5da16Mechanics|r\n\n|cff80ff00Supply & Nutrition:|r All units and building will continuously lose Hit Points if not supplied by |cff00f7ffCities or Supply Horses|r.\n|cffff0000Public Order|r represents satisfaction level of population of each city and can be checked in top-right menu.\nLow Public Order will cause revolts."

//,"|cfff5da16Combat & Diplomacy|r\n\nBuild your army but keep in mind that every army will have its weaknesses. Use general's Mass Control ability to quickly manipulate your army.\nUse |cffffff80Diplomacy|r (F1) menu to create Alliances and Declare War."

//,"|cfff5da16Economy|r\n\n|cffffff80Florins|r (Gold) are given each Turn (2 minutes), you can increase the amount generated by capturing |cffffff80Cities|r or precious |cffffff80Ores|r and upgrading them into |cffffff80Mines|r.\nLumber is harvested from Trees.\n|cffff0000You can check public order of currently selected city and your income in top-right menu|r"
)

// - - - - - - - - - - - - - - - - FUNCTIONS - - - - - - - - - - - - - - - - -

function countActivePlayers() returns int
  var c = 0
  for i = 0 to PLAYER_SLOTS - 1
    if players[i].isIngame()
      c++
  return c

function setPlayersAtStart()
  var pl_left = PLAYER_SLOTS
  var pl_in_ring = kSpawnPlayersInFirstRing
  var rad = kSpawnFirstRingRadius
  vec2 pos
  player curpl
  angle ang

  while pl_left > 0
    for i = 1 to pl_in_ring
      ang = angle(i * PI2 / pl_in_ring)
      pos = kSpawnPoint + vec2(rad * ang.cos(), rad * ang.sin())
      curpl = players[PLAYER_SLOTS - pl_left + i - 1]
      if player_stats[GetPlayerId(curpl)].isInGame()
        CreateNUnitsAtLocFacingLocBJ(1, uSettler, curpl, Location(pos.x, pos.y), Location (kSpawnPoint.x, kSpawnPoint.y))

    rad += kSpawnRingRadiusChange
    pl_left -= pl_in_ring
    pl_in_ring += kSpawnAddPerRing
    pl_in_ring = min(pl_left, pl_in_ring)

bool array voted
var pl_number = countActivePlayers()
var pl_esc = 0
bool skip_tutorial = false

function cinematicTutorial()
  if dbg_mode
    return

  /* EventListener.add(EVENT_PLAYER_END_CINEMATIC) ->
    if not voted[GetTriggerPlayer().getId()] and not skip_tutorial
      pl_number = countActivePlayers()
      voted[GetTriggerPlayer().getId()] = true
      pl_esc++
      textToAll("|cffff0000" + pl_esc.toString() + "|r out of |cffff0000" + ((pl_number + 1) / 2).toInt().toString() + "|r voted to skip the tutorial!", 5.0)

      if pl_esc >= ((pl_number + 1) / 2).toInt()
        skip_tutorial = true
        textToAll("|cffff0000Tutorial will shut down soon...|r", 5.0)
        CinematicModeBJ(false, GetPlayersAll()) */

  fogmodifier array fm
  for i = 0 to PLAYER_SLOTS - 1
    fm[i] = CreateFogModifierRadiusLocBJ(true, players[i], FOG_OF_WAR_VISIBLE, GetRectCenter(GetPlayableMapRect()), 999999.00)
    FogModifierStart(fm[i])

  ShowInterfaceForceOff(GetPlayersAll(), 0.50)
  for str in ksCT
    if not skip_tutorial
      DisplayTimedTextToForce(GetPlayersAll(), kCTfade, str)
      TriggerSleepAction(kCTchange)
  CinematicModeBJ(false, GetPlayersAll())

  for i = 0 to PLAYER_SLOTS - 1
    FogModifierStop(fm[i])
  skip_tutorial = true

//----------------------------INIT----------------------------------------------
init
  if (dbg_msg)
    dbg("Debug info is enabled. Only for Red.")
  if (dbg_mode)
    print("Debug mode is on.")

  setupCities()

  // - - - - - - - - - - - - - - - - PLAYERS - - - - - - - - - - - - - - - - -

  // All neutral to neutral-passive
  SetForceAllianceStateBJ(GetPlayersAll(), bj_FORCE_PLAYER[PLAYER_NEUTRAL_PASSIVE], bj_ALLIANCE_NEUTRAL)
  // All hostile to each other (will be replaced with neutral for teammates in a couple of lines)
  SetForceAllianceStateBJ(GetPlayersAll(), GetPlayersAll(), bj_ALLIANCE_UNALLIED)

  SetForceAllianceStateBJ(fWE, fWE, bj_ALLIANCE_NEUTRAL)
  SetForceAllianceStateBJ(fEE, fEE, bj_ALLIANCE_NEUTRAL)
  SetForceAllianceStateBJ(fME, fME, bj_ALLIANCE_NEUTRAL)
  SetForceAllianceStateBJ(fBZ, fBZ, bj_ALLIANCE_NEUTRAL)

  // Starting resources
  for i = 0 to PLAYER_SLOTS - 1
    SetPlayerState(players[i], PLAYER_STATE_RESOURCE_GOLD, kStartGold)
    SetPlayerState(players[i], PLAYER_STATE_RESOURCE_LUMBER, kStartLumber)
    if dbg_mode
      enableDebugForPlayer(players[i])
    // Uni limit
    SetPlayerTechMaxAllowedSwap(uUniversity, 1, players[i])

    player_stats[i] = new PlayerStats(players[i])
    player_stats[i].setInGame(players[i].isIngame())

  setPlayersAtStart()


  // - - - - - - - - - - - - - - -CINEMATIC TUTORIAL- - - - - - - - - - - - - -
  CreateTrigger()
    ..registerTimerEvent(0.01, false)
    ..addAction(function cinematicTutorial)
