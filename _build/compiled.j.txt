// this script was compiled with wurst 1.8.0.0-jenkins-Wurst-1091
globals
group w=null
location u=null
integer array r
force s=null
location t=null
location i=null
location S=null
location c=null
rect o=null
rect O=null
group l=null
group b=null
location y=null
boolean array p
boolean array e
rect q=null
rect a=null
rect n=null
rect d=null
rect f=null
rect R=null
rect T=null
rect Y=null
rect G=null
rect g=null
rect h=null
rect F=null
rect k=null
rect j=null
rect x=null
rect v=null
rect m=null
rect Q=null
rect W=null
rect E=null
rect Z=null
rect U=null
rect I=null
rect P=null
rect A=null
rect D=null
rect H=null
rect J=null
rect K=null
rect L=null
rect X=null
rect C=null
rect V=null
rect B=null
rect N=null
rect M=null
rect ww=null
rect uw=null
rect rw=null
rect sw=null
rect tw=null
rect iw=null
rect Sw=null
rect cw=null
rect ow=null
rect Ow=null
rect lw=null
rect bw=null
rect yw=null
rect pw=null
rect ew=null
rect qw=null
rect aw=null
rect nw=null
rect dw=null
rect fw=null
rect Rw=null
rect Tw=null
rect Yw=null
rect Gw=null
rect gw=null
rect hw=null
rect Fw=null
rect kw=null
rect jw=null
rect xw=null
rect vw=null
rect mw=null
rect Qw=null
rect Ww=null
rect Ew=null
rect Zw=null
rect Uw=null
rect Iw=null
rect Pw=null
rect Aw=null
rect Dw=null
rect Hw=null
rect Jw=null
rect Kw=null
rect Lw=null
rect Xw=null
rect Cw=null
rect Vw=null
rect Bw=null
rect Nw=null
rect Mw=null
rect wu=null
rect uu=null
rect ru=null
rect su=null
rect tu=null
rect iu=null
rect Su=null
rect cu=null
rect ou=null
rect Ou=null
rect lu=null
rect bu=null
rect yu=null
rect pu=null
rect eu=null
rect qu=null
rect au=null
rect nu=null
rect du=null
rect fu=null
rect Ru=null
rect Tu=null
rect Yu=null
rect Gu=null
rect gu=null
rect hu=null
rect Fu=null
rect ku=null
rect ju=null
rect xu=null
rect vu=null
rect mu=null
rect Qu=null
rect Wu=null
rect Eu=null
rect Zu=null
rect Uu=null
rect Iu=null
rect Pu=null
rect Au=null
rect Du=null
rect Hu=null
rect Ju=null
rect Ku=null
rect Lu=null
rect Xu=null
rect Cu=null
rect Vu=null
rect Bu=null
rect Nu=null
rect Mu=null
rect wr=null
rect ur=null
rect rr=null
rect sr=null
rect tr=null
rect ir=null
rect Sr=null
rect cr=null
rect lr=null
rect br=null
rect yr=null
rect pr=null
rect er=null
rect qr=null
rect ar=null
rect nr=null
rect dr=null
rect fr=null
rect Rr=null
rect Tr=null
rect Yr=null
rect Gr=null
rect gr=null
rect hr=null
rect Fr=null
rect kr=null
rect jr=null
rect xr=null
rect vr=null
rect mr=null
rect Qr=null
rect Wr=null
rect Er=null
rect Zr=null
rect Ur=null
rect Ir=null
rect Pr=null
rect Ar=null
rect Dr=null
rect Hr=null
rect Jr=null
rect Kr=null
rect Lr=null
rect Xr=null
rect Cr=null
rect Vr=null
rect Br=null
rect Nr=null
rect Mr=null
rect ws=null
rect us=null
rect rs=null
rect ss=null
rect ts=null
rect is=null
rect Ss=null
rect cs=null
rect os=null
rect Os=null
rect ls=null
rect bs=null
rect ys=null
rect ps=null
rect es=null
rect qs=null
rect as=null
rect ns=null
rect ds=null
sound fs=null
trigger Rs=null
trigger Ts=null
trigger Ys=null
trigger Gs=null
trigger gs=null
trigger hs=null
trigger Fs=null
trigger ks=null
trigger js=null
trigger xs=null
trigger vs=null
trigger ms=null
trigger Qs=null
trigger Ws=null
trigger Es=null
trigger Zs=null
trigger Us=null
trigger Is=null
trigger Ps=null
trigger As=null
trigger Ds=null
trigger Hs=null
trigger Js=null
trigger Ks=null
trigger Ls=null
trigger Xs=null
trigger Cs=null
trigger Vs=null
trigger Bs=null
trigger Ns=null
trigger Ms=null
trigger wt=null
trigger ut=null
trigger rt=null
trigger st=null
trigger tt=null
trigger St=null
trigger ct=null
trigger ot=null
trigger Ot=null
trigger lt=null
trigger bt=null
trigger yt=null
trigger pt=null
trigger et=null
trigger qt=null
trigger at=null
trigger nt=null
trigger dt=null
trigger ft=null
trigger Rt=null
trigger Tt=null
trigger Yt=null
trigger Gt=null
trigger gt=null
trigger ht=null
trigger Ft=null
trigger kt=null
trigger jt=null
trigger xt=null
trigger vt=null
trigger mt=null
trigger Qt=null
trigger Wt=null
trigger Et=null
trigger Zt=null
trigger Ut=null
trigger It=null
trigger Pt=null
trigger At=null
trigger Dt=null
trigger Ht=null
trigger Jt=null
trigger Kt=null
trigger Lt=null
trigger Xt=null
trigger Ct=null
trigger Vt=null
trigger Bt=null
trigger Nt=null
trigger Mt=null
trigger wi=null
trigger ui=null
trigger ri=null
trigger si=null
trigger ti=null
trigger ii=null
trigger Si=null
trigger ci=null
trigger oi=null
trigger Oi=null
trigger li=null
trigger bi=null
trigger yi=null
trigger pi=null
trigger ei=null
trigger qi=null
trigger ai=null
trigger ni=null
trigger di=null
trigger fi=null
trigger Ri=null
trigger Ti=null
trigger Yi=null
trigger Gi=null
trigger gi=null
trigger hi=null
trigger Fi=null
trigger ki=null
trigger ji=null
trigger xi=null
trigger vi=null
trigger mi=null
trigger Qi=null
trigger Wi=null
trigger Ei=null
trigger Zi=null
trigger Ui=null
trigger Ii=null
trigger Pi=null
trigger Ai=null
trigger Di=null
trigger Hi=null
trigger Ji=null
trigger Ki=null
trigger Li=null
trigger Xi=null
trigger Ci=null
trigger Vi=null
trigger Bi=null
trigger Ni=null
trigger Mi=null
trigger wS=null
trigger uS=null
trigger rS=null
integer sS=0
player tS=null
integer iS=0
integer array SS
integer cS=0
integer oS=0
integer OS=0
integer lS=0
integer bS=0
integer yS=0
integer pS=0
integer eS=0
integer qS=0
integer aS=0
integer nS=0
real dS=0.
real array fS
integer array RS
real array TS
real array YS
real array GS
real array gS
integer array hS
playerevent FS=null
trigger kS=null
trigger jS=null
trigger xS=null
integer array vS
integer mS=0
integer QS=0
integer WS=0
integer array ES
integer array ZS
boolean US=false
group IS=null
integer array PS
integer AS=0
integer DS=0
integer HS=0
filterfunc JS=null
integer KS=0
integer array LS
integer array XS
integer array CS
string array VS
integer BS=0
real NS=0.
integer array MS
integer array wc
integer array uc
integer array rc
integer sc=0
hashtable tc=null
force ic=null
force Sc=null
force cc=null
force oc=null
force array Oc
integer array lc
integer array bc
integer array yc
timer pc=null
real ec=0.
group qc=null
hashtable ac=null
hashtable nc=null
hashtable dc=null
integer array fc
integer array Rc
integer Tc=0
boolean Yc=false
boolean Gc=false
boolean gc=false
timer hc=null
real Fc=0.
rect kc=null
rect jc=null
region xc=null
real vc=0.
real mc=0.
integer Qc=0
integer Wc=0
integer Ec=0
integer array Zc
integer array Uc
integer array Ic
integer array Pc
integer array Ac
integer array Dc
integer array Hc
integer array Jc
integer array Kc
multiboard array Lc
integer Xc=0
trigger Cc=null
group Vc=null
unit array Bc
integer Nc=0
integer array Mc
player array wo
player uo=null
playercolor ro=null
playercolor so=null
playercolor io=null
playercolor So=null
playercolor array co
group oo=null
unit Oo=null
integer lo=0
real bo=0.
trigger array yo
integer po=0
real array eo
integer qo=0
string array ao
string array no
string array do
string array fo
string array Ro
string array To
string array Yo
string array Go
string array go
string array ho
string array Fo
string array ko
string array jo
string array xo
string array vo
string array mo
string array Qo
hashtable Wo=null
timer array Eo
integer Zo=0
integer Uo=0
integer Io=0
trigger Po=null
trigger Ao=null
unit array Do
integer Ho=0
integer Jo=0
integer Ko=0
integer array Lo
integer Xo=0
integer Co=0
integer Vo=0
integer Bo=0
integer array No
integer Mo=0
integer array wO
integer array uO
integer rO=0
integer array sO
integer tO=0
integer iO=0
integer array SO
integer array cO
integer oO=0
integer OO=0
integer array lO
integer bO=0
integer yO=0
integer array pO
integer array eO
integer qO=0
integer aO=0
integer array nO
integer array dO
integer fO=0
integer RO=0
integer array TO
integer array YO
integer GO=0
integer gO=0
integer array hO
integer FO=0
integer array kO
integer array jO
integer xO=0
integer vO=0
integer array mO
integer array QO
integer WO=0
integer EO=0
integer array ZO
integer array UO
integer IO=0
integer PO=0
integer array AO
integer DO=0
integer HO=0
integer array JO
integer KO=0
integer LO=0
integer array XO
integer array CO
integer VO=0
integer BO=0
integer array NO
integer array MO
integer wl=0
integer ul=0
integer array rl
integer array sl
integer tl=0
integer il=0
integer array Sl
integer cl=0
integer ol=0
integer array Ol
integer ll=0
integer bl=0
integer array yl
integer array pl
integer el=0
integer ql=0
integer array al
integer nl=0
integer dl=0
integer array fl
real array Rl
real array Tl
boolean array Yl
real array Gl
integer array gl
real array hl
real array Fl
string array kl
string array jl
unit array xl
string array vl
integer array ml
integer array Ql
integer array Wl
real array El
real array Zl
integer array Ul
integer array Il
real array Pl
real array Al
real array Dl
real array Hl
integer array Jl
real array Kl
integer array Ll
integer array Xl
integer array Cl
integer array Vl
integer array Bl
integer array Nl
integer array Ml
integer array wb
integer array ub
integer array rb
integer array sb
integer array tb
integer array ib
integer array Sb
unit array cb
timer array ob
real array Ob
integer array lb
integer array bb
integer array yb
integer array pb
integer array eb
integer array qb
integer array ab
unit array nb
unit array db
integer array fb
integer array Rb
integer array Tb
integer array Yb
integer array Gb
integer array gb
integer array hb
boolean array Fb
integer array kb
integer array jb
player array xb
unit array vb
integer array mb
unit array Qb
integer array Wb
real array Eb
real array Zb
unit array Ub
integer array Ib
player array Pb
boolean array Ab
integer array Db
integer array Hb
boolean array Jb
unit array Kb
unit array Lb
integer Xb=0
string array Cb
integer Vb=0
integer Bb=0
integer Nb=0
integer array Mb
integer array wy
integer array uy
integer array ry
integer array sy
integer array ty
integer array iy
integer array Sy
integer array cy
integer array oy
integer array Oy
integer array ly
integer array by
integer array yy
integer array py
integer array ey
integer array qy
integer array ay
integer array ny
integer array dy
integer array fy
integer array Ry
integer array Ty
integer array Yy
code Gy=null
code gy=null
code hy=null
code Fy=null
code ky=null
code jy=null
code xy=null
code vy=null
code my=null
code Qy=null
code Wy=null
code Ey=null
code Zy=null
code Uy=null
code Iy=null
code Py=null
code Ay=null
code Dy=null
code Hy=null
code Jy=null
code Ky=null
code Ly=null
code Xy=null
code Cy=null
code Vy=null
code By=null
code Ny=null
code My=null
code wp=null
code up=null
code rp=null
code sp=null
code tp=null
code ip=null
code Sp=null
code cp=null
code op=null
code Op=null
code lp=null
code bp=null
code yp=null
code pp=null
code ep=null
code qp=null
code ap=null
code np=null
code dp=null
code fp=null
code Rp=null
code Tp=null
code Yp=null
code Gp=null
code gp=null
code hp=null
code Fp=null
code kp=null
code jp=null
code xp=null
code vp=null
code mp=null
code Qp=null
code Wp=null
code Ep=null
code Zp=null
code Up=null
code Ip=null
code Pp=null
code Ap=null
code Dp=null
code Hp=null
code Jp=null
code Kp=null
code Lp=null
code Xp=null
code Cp=null
code Vp=null
code Bp=null
code Np=null
code Mp=null
code we=null
code ue=null
code re=null
code se=null
code te=null
code ie=null
code Se=null
code ce=null
code oe=null
code Oe=null
code le=null
code be=null
code ye=null
code pe=null
code ee=null
code qe=null
code ae=null
code ne=null
code de=null
code fe=null
code Re=null
code Te=null
code Ye=null
code Ge=null
code ge=null
code he=null
code Fe=null
code ke=null
code je=null
code xe=null
code ve=null
code me=null
code Qe=null
code We=null
code Ee=null
code Ze=null
code Ue=null
code Ie=null
code Pe=null
code Ae=null
code De=null
code He=null
code Je=null
code Ke=null
code Le=null
code Xe=null
code Ce=null
code Ve=null
code Be=null
code Ne=null
code Me=null
code wq=null
code uq=null
code rq=null
code sq=null
code tq=null
code iq=null
code Sq=null
code cq=null
code oq=null
code Oq=null
code lq=null
code bq=null
code yq=null
code pq=null
code eq=null
code qq=null
code aq=null
code nq=null
code dq=null
code fq=null
code Rq=null
code Tq=null
code Yq=null
code Gq=null
code gq=null
code hq=null
code Fq=null
code kq=null
code jq=null
code xq=null
code vq=null
code mq=null
code Qq=null
code Wq=null
code Eq=null
code Zq=null
code Uq=null
code Iq=null
code Pq=null
code Aq=null
code Dq=null
code Hq=null
code Jq=null
code Kq=null
code Lq=null
code Xq=null
code Cq=null
code Vq=null
code Bq=null
code Nq=null
code Mq=null
code wa=null
code ua=null
code ra=null
code sa=null
code ta=null
code ia=null
code Sa=null
code ca=null
code oa=null
code Oa=null
code la=null
code ba=null
code ya=null
code pa=null
code ea=null
code qa=null
code aa=null
code na=null
code da=null
code fa=null
code Ra=null
code Ta=null
code Ya=null
code Ga=null
code ga=null
code ha=null
code Fa=null
code ka=null
code ja=null
code xa=null
code va=null
code ma=null
code Qa=null
code Wa=null
code Ea=null
code Za=null
code Ua=null
code Ia=null
code Pa=null
code Aa=null
code Da=null
code Ha=null
code Ja=null
code Ka=null
code La=null
code Xa=null
code Ca=null
code Va=null
code Ba=null
code Na=null
code Ma=null
code wn=null
code un=null
code rn=null
code sn=null
code tn=null
code Sn=null
code cn=null
code on=null
code On=null
code ln=null
code bn=null
code yn=null
code pn=null
code en=null
code qn=null
code an=null
code nn=null
code dn=null
code fn=null
code Rn=null
code Tn=null
code Yn=null
code Gn=null
code gn=null
code hn=null
code Fn=null
code kn=null
code jn=null
code xn=null
code vn=null
code mn=null
code Qn=null
code Wn=null
code En=null
code Zn=null
code Un=null
code In=null
code Pn=null
code An=null
code Dn=null
code Hn=null
code Jn=null
code Kn=null
code Ln=null
code Xn=null
code Cn=null
code Vn=null
code Bn=null
code Nn=null
code Mn=null
code wd=null
code ud=null
code rd=null
code sd=null
code td=null
code id=null
code Sd=null
code cd=null
code od=null
code Od=null
code ld=null
code bd=null
code yd=null
code pd=null
code ed=null
code qd=null
code ad=null
code nd=null
code dd=null
code fd=null
code Rd=null
code Td=null
code Yd=null
code Gd=null
code gd=null
code hd=null
code Fd=null
code kd=null
code jd=null
code xd=null
code vd=null
code md=null
code Qd=null
code Wd=null
code Ed=null
code Zd=null
code Ud=null
code Id=null
code Pd=null
code Ad=null
code Dd=null
code Hd=null
code Jd=null
code Kd=null
code Ld=null
code Xd=null
code Cd=null
code Vd=null
code Bd=null
code Nd=null
code Md=null
code wf=null
code uf=null
code rf=null
code sf=null
code tf=null
code Sf=null
code cf=null
code of=null
code Of=null
code lf=null
code bf=null
code yf=null
code pf=null
code ef=null
code qf=null
code af=null
code nf=null
code df=null
code ff=null
code Rf=null
code Tf=null
code Yf=null
code Gf=null
code gf=null
code hf=null
code Ff=null
code kf=null
code jf=null
code xf=null
code vf=null
code mf=null
code Qf=null
code Wf=null
code Ef=null
code Zf=null
code Uf=null
code If=null
code Pf=null
code Af=null
code Df=null
code Hf=null
code Jf=null
code Kf=null
code Lf=null
code Xf=null
code Cf=null
code Vf=null
code Bf=null
code Nf=null
code Mf=null
code wR=null
code uR=null
code rR=null
code sR=null
code tR=null
code iR=null
unit SR=null
multiboard cR=null
timer oR=null
unit OR=null
trigger lR=null
rect bR=null
endglobals
function FR takes nothing returns nothing
local player gR=Player(3)
local unit hR=CreateUnit(gR,1211118391,-30468.2,30345.3,270.516)
call SetHeroLevel(hR,15,false)
call SetUnitState(hR,UNIT_STATE_MANA,85.)
set hR=CreateUnit(gR,1211118406,-30252.3,29576.9,270.316)
call SetHeroLevel(hR,15,false)
set gR=null
set hR=null
endfunction
function FT takes nothing returns nothing
local player gT=Player(22)
local unit hT=CreateUnit(gT,1211118391,-29948.2,29831.1,270.025)
call SetHeroLevel(hT,15,false)
call SetUnitState(hT,UNIT_STATE_MANA,85.)
set hT=CreateUnit(gT,1211118406,-29699.3,29565.4,269.787)
call SetHeroLevel(hT,15,false)
set gT=null
set hT=null
endfunction
function GR takes nothing returns nothing
local player TR=Player(2)
local unit YR=CreateUnit(TR,1211118391,-30324.4,30466.1,270.380)
call SetHeroLevel(YR,15,false)
call SetUnitState(YR,UNIT_STATE_MANA,85.)
set YR=CreateUnit(TR,1211118406,-30346.6,29573.7,270.406)
call SetHeroLevel(YR,15,false)
set TR=null
set YR=null
endfunction
function GT takes nothing returns nothing
local player TT=Player(19)
local unit YT=CreateUnit(TT,1211118391,-29820.0,29950.4,269.903)
call SetHeroLevel(YT,15,false)
call SetUnitState(YT,UNIT_STATE_MANA,85.)
set YT=CreateUnit(TT,1211118406,-29707.1,29309.8,269.793)
call SetHeroLevel(YT,15,false)
set TT=null
set YT=null
endfunction
function HR takes nothing returns nothing
local player AR=Player(8)
local unit DR=CreateUnit(AR,1211118391,-29946.0,30342.9,270.023)
call SetHeroLevel(DR,15,false)
call SetUnitState(DR,UNIT_STATE_MANA,85.)
set DR=CreateUnit(AR,1211118406,-30137.9,29561.1,270.206)
call SetHeroLevel(DR,15,false)
set AR=null
set DR=null
endfunction
function LR takes nothing returns nothing
local player JR=Player(9)
local unit KR=CreateUnit(JR,1211118391,-29693.5,30338.3,269.785)
call SetHeroLevel(KR,15,false)
call SetUnitState(KR,UNIT_STATE_MANA,85.)
set KR=CreateUnit(JR,1211118406,-30045.2,29554.8,270.118)
call SetHeroLevel(KR,15,false)
set JR=null
set KR=null
endfunction
function MR takes nothing returns nothing
local player BR=Player(11)
local unit NR=CreateUnit(BR,1211118391,-29827.0,30210.1,269.911)
call SetHeroLevel(NR,15,false)
call SetUnitState(NR,UNIT_STATE_MANA,85.)
set NR=CreateUnit(BR,1211118406,-30125.9,29321.4,270.196)
call SetHeroLevel(NR,15,false)
set BR=null
set NR=null
endfunction
function PR takes nothing returns nothing
local player UR=Player(7)
local unit IR=CreateUnit(UR,1211118391,-29818.2,30468.8,269.903)
call SetHeroLevel(IR,15,false)
call SetUnitState(IR,UNIT_STATE_MANA,85.)
set IR=CreateUnit(UR,1211118406,-29998.9,29444.3,270.074)
call SetHeroLevel(IR,15,false)
set UR=null
set IR=null
endfunction
function QR takes nothing returns nothing
local player vR=Player(5)
local unit mR=CreateUnit(vR,1211118391,-29950.2,30589.5,270.027)
call SetHeroLevel(mR,15,false)
call SetUnitState(mR,UNIT_STATE_MANA,85.)
set mR=CreateUnit(vR,1211118406,-30283.9,29308.8,270.348)
call SetHeroLevel(mR,15,false)
set vR=null
set mR=null
endfunction
function RR takes nothing returns nothing
local player dR=Player(1)
local unit fR=CreateUnit(dR,1211118391,-30205.9,30601.1,270.267)
call SetHeroLevel(fR,15,false)
call SetUnitState(fR,UNIT_STATE_MANA,85.)
set fR=CreateUnit(dR,1211118406,-30199.1,29448.7,270.266)
call SetHeroLevel(fR,15,false)
set dR=null
set fR=null
endfunction
function RT takes nothing returns nothing
local player dT=Player(18)
local unit fT=CreateUnit(dT,1211118391,-29691.7,30077.9,269.782)
call SetHeroLevel(fT,15,false)
call SetUnitState(fT,UNIT_STATE_MANA,85.)
set fT=CreateUnit(dT,1211118406,-29792.0,29571.7,269.875)
call SetHeroLevel(fT,15,false)
set dT=null
set fT=null
endfunction
function VR takes nothing returns nothing
local player XR=Player(10)
local unit CR=CreateUnit(XR,1211118391,-30338.2,30210.1,270.394)
call SetHeroLevel(CR,15,false)
call SetUnitState(CR,UNIT_STATE_MANA,85.)
set CR=CreateUnit(XR,1211118406,-29904.6,29442.8,269.983)
call SetHeroLevel(CR,15,false)
set XR=null
set CR=null
endfunction
function ZR takes nothing returns nothing
local player WR=Player(6)
local unit ER=CreateUnit(WR,1211118391,-29693.7,30597.0,269.786)
call SetHeroLevel(ER,15,false)
call SetUnitState(ER,UNIT_STATE_MANA,85.)
set ER=CreateUnit(WR,1211118406,-30199.8,29310.0,270.267)
call SetHeroLevel(ER,15,false)
set WR=null
set ER=null
endfunction
function bT takes nothing returns nothing
local player OT=Player(15)
local unit lT=CreateUnit(OT,1211118391,-30467.2,29834.7,270.519)
call SetHeroLevel(lT,15,false)
call SetUnitState(lT,UNIT_STATE_MANA,85.)
set lT=CreateUnit(OT,1211118406,-29874.4,29559.4,269.954)
call SetHeroLevel(lT,15,false)
set OT=null
set lT=null
endfunction
function eT takes nothing returns nothing
local player yT=Player(16)
local unit pT=CreateUnit(yT,1211118391,-30203.1,29826.8,270.268)
call SetHeroLevel(pT,15,false)
call SetUnitState(pT,UNIT_STATE_MANA,85.)
set pT=CreateUnit(yT,1211118406,-29780.4,29300.3,269.864)
call SetHeroLevel(pT,15,false)
set yT=null
set pT=null
endfunction
function iT takes nothing returns nothing
local player sT=Player(13)
local unit tT=CreateUnit(sT,1211118391,-30204.3,30080.3,270.268)
call SetHeroLevel(tT,15,false)
call SetUnitState(tT,UNIT_STATE_MANA,85.)
set tT=CreateUnit(sT,1211118406,-30039.0,29306.5,270.112)
call SetHeroLevel(tT,15,false)
set sT=null
set tT=null
endfunction
function nR takes nothing returns nothing
local player qR=Player(0)
local unit aR=CreateUnit(qR,1211118391,-30470.9,30602.5,270.516)
call SetHeroLevel(aR,15,false)
call SetUnitState(aR,UNIT_STATE_MANA,85.)
set aR=CreateUnit(qR,1211118406,-30360.2,29312.6,270.421)
call SetHeroLevel(aR,15,false)
set qR=null
set aR=null
endfunction
function nT takes nothing returns nothing
local player qT=Player(17)
local unit aT=CreateUnit(qT,1211118391,-29951.6,30084.7,270.028)
call SetHeroLevel(aT,15,false)
call SetUnitState(aT,UNIT_STATE_MANA,85.)
set aT=CreateUnit(qT,1211118406,-29862.1,29302.2,269.942)
call SetHeroLevel(aT,15,false)
set qT=null
set aT=null
endfunction
function oT takes nothing returns nothing
local player ST=Player(14)
local unit cT=CreateUnit(ST,1211118391,-30339.8,29950.4,270.397)
call SetHeroLevel(cT,15,false)
call SetUnitState(cT,UNIT_STATE_MANA,85.)
set cT=CreateUnit(ST,1211118406,-29968.7,29556.2,270.045)
call SetHeroLevel(cT,15,false)
set ST=null
set cT=null
endfunction
function rT takes nothing returns nothing
local player wT=Player(12)
local unit uT=CreateUnit(wT,1211118391,-30464.7,30089.7,270.515)
call SetHeroLevel(uT,15,false)
call SetUnitState(uT,UNIT_STATE_MANA,85.)
set uT=CreateUnit(wT,1211118406,-29962.2,29311.8,270.038)
call SetHeroLevel(uT,15,false)
set wT=null
set uT=null
endfunction
function xR takes nothing returns nothing
local player kR=Player(4)
local unit jR=CreateUnit(kR,1211118391,-30204.6,30339.2,270.267)
call SetHeroLevel(jR,15,false)
call SetUnitState(jR,UNIT_STATE_MANA,85.)
set jR=CreateUnit(kR,1211118406,-30106.5,29439.8,270.177)
call SetHeroLevel(jR,15,false)
set kR=null
set jR=null
endfunction
function xT takes nothing returns nothing
local player kT=Player(23)
local unit jT=CreateUnit(kT,1211118391,-29689.5,29824.6,269.779)
call SetHeroLevel(jT,15,false)
call SetUnitState(jT,UNIT_STATE_MANA,85.)
set jT=CreateUnit(kT,1211118406,-29815.4,29434.4,269.898)
call SetHeroLevel(jT,15,false)
set kT=null
set jT=null
endfunction
function QT takes nothing returns nothing
call nR()
call RR()
call GR()
call FR()
call xR()
call QR()
call ZR()
call PR()
call HR()
call LR()
call VR()
call MR()
call rT()
call iT()
call oT()
call bT()
call eT()
call nT()
call RT()
call GT()
call FT()
call xT()
endfunction
function eR takes nothing returns nothing
local integer pR=0
set pR=0
loop
exitwhen pR>8192
call CreateGroup()
set pR=pR+1
endloop
call CreateForce()
call CreateGroup()
call CreateForce()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateForce()
call CreateForce()
call CreateForce()
call CreateTimer()
call CreateForce()
call CreateGroup()
set w=CreateGroup()
call CreateGroup()
call CreateForce()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateTimer()
set pR=0
loop
exitwhen pR>24
set pR=pR+1
endloop
set pR=0
loop
exitwhen pR>24
set r[pR]=0
set pR=pR+1
endloop
set s=CreateForce()
set pR=0
loop
exitwhen pR>24
set pR=pR+1
endloop
call CreateGroup()
set pR=0
loop
exitwhen pR>24
set pR=pR+1
endloop
set pR=0
loop
exitwhen pR>24
set pR=pR+1
endloop
call CreateForce()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
set l=CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
set pR=0
loop
exitwhen pR>24
set pR=pR+1
endloop
set pR=0
loop
exitwhen pR>24
set pR=pR+1
endloop
call CreateGroup()
set pR=0
loop
exitwhen pR>24
set pR=pR+1
endloop
set pR=0
loop
exitwhen pR>24
set pR=pR+1
endloop
set pR=0
loop
exitwhen pR>24
set pR=pR+1
endloop
set pR=0
loop
exitwhen pR>24
set pR=pR+1
endloop
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateForce()
call CreateForce()
set pR=0
loop
exitwhen pR>1
set pR=pR+1
endloop
set pR=0
loop
exitwhen pR>1
set pR=pR+1
endloop
set pR=0
loop
exitwhen pR>1
set pR=pR+1
endloop
set b=CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
set pR=0
loop
exitwhen pR>24
set p[pR]=false
set pR=pR+1
endloop
set pR=0
loop
exitwhen pR>24
set e[pR]=false
set pR=pR+1
endloop
endfunction
function AI takes nothing returns nothing
local trigger UI
local playerunitevent II
local integer PI
set ti=CreateTrigger()
set UI=ti
set II=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set PI=0
loop
call TriggerRegisterPlayerUnitEvent(UI,Player(PI),II,null)
set PI=PI+1
exitwhen PI==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ti,Condition(Hq))
call TriggerAddAction(ti,Jq)
set UI=null
set II=null
endfunction
function BL takes nothing returns nothing
local trigger XL
local playerunitevent CL
local integer VL
set uS=CreateTrigger()
set XL=uS
set CL=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set VL=0
loop
call TriggerRegisterPlayerUnitEvent(XL,Player(VL),CL,null)
set VL=VL+1
exitwhen VL==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(uS,Condition(In))
call TriggerAddAction(uS,Pn)
set XL=null
set CL=null
endfunction
function BU takes nothing returns nothing
local trigger XU
local playerunitevent CU
local integer VU
set Nt=CreateTrigger()
set XU=Nt
set CU=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set VU=0
loop
call TriggerRegisterPlayerUnitEvent(XU,Player(VU),CU,null)
set VU=VU+1
exitwhen VU==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Nt,Condition(xq))
call TriggerAddAction(Nt,vq)
set XU=null
set CU=null
endfunction
function CF takes nothing returns nothing
local trigger KF
local playerunitevent LF
local integer XF
set Hs=CreateTrigger()
set KF=Hs
set LF=EVENT_PLAYER_UNIT_SPELL_CAST
set XF=0
loop
call TriggerRegisterPlayerUnitEvent(KF,Player(XF),LF,null)
set XF=XF+1
exitwhen XF==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Hs,Condition(np))
call TriggerAddAction(Hs,dp)
set KF=null
set LF=null
endfunction
function CI takes nothing returns nothing
local trigger KI
local playerunitevent LI
local integer XI
set ii=CreateTrigger()
set KI=ii
set LI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set XI=0
loop
call TriggerRegisterPlayerUnitEvent(KI,Player(XI),LI,null)
set XI=XI+1
exitwhen XI==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ii,Condition(Kq))
call TriggerAddAction(ii,Lq)
set KI=null
set LI=null
endfunction
function DP takes nothing returns nothing
local trigger IP
local playerunitevent PP
local integer AP
set yi=CreateTrigger()
set IP=yi
set PP=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set AP=0
loop
call TriggerRegisterPlayerUnitEvent(IP,Player(AP),PP,null)
set AP=AP+1
exitwhen AP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(yi,Condition(Sa))
call TriggerAddAction(yi,ca)
set IP=null
set PP=null
endfunction
function DZ takes nothing returns nothing
local trigger IZ
local playerunitevent PZ
local integer AZ
set Dt=CreateTrigger()
set IZ=Dt
set PZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set AZ=0
loop
call TriggerRegisterPlayerUnitEvent(IZ,Player(AZ),PZ,null)
set AZ=AZ+1
exitwhen AZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Dt,Condition(bq))
call TriggerAddAction(Dt,yq)
set IZ=null
set PZ=null
endfunction
function Dv takes nothing returns nothing
local trigger Iv
local playerunitevent Pv
local integer Av
set rt=CreateTrigger()
set Iv=rt
set Pv=EVENT_PLAYER_UNIT_DEATH
set Av=0
loop
call TriggerRegisterPlayerUnitEvent(Iv,Player(Av),Pv,null)
set Av=Av+1
exitwhen Av==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(rt,Condition(Ap))
call TriggerAddAction(rt,Dp)
set Iv=null
set Pv=null
endfunction
function EL takes nothing returns nothing
local trigger mL
local playerunitevent QL
local integer WL
set Mi=CreateTrigger()
set mL=Mi
set QL=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set WL=0
loop
call TriggerRegisterPlayerUnitEvent(mL,Player(WL),QL,null)
set WL=WL+1
exitwhen WL==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Mi,Condition(Wn))
call TriggerAddAction(Mi,En)
set mL=null
set QL=null
endfunction
function EU takes nothing returns nothing
local trigger mU
local playerunitevent QU
local integer WU
set Vt=CreateTrigger()
set mU=Vt
set QU=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set WU=0
loop
call TriggerRegisterPlayerUnitEvent(mU,Player(WU),QU,null)
set WU=WU+1
exitwhen WU==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Vt,Condition(hq))
call TriggerAddAction(Vt,Fq)
set mU=null
set QU=null
endfunction
function EW takes nothing returns nothing
local trigger mW
local playerunitevent QW
local integer WW
set gt=CreateTrigger()
set mW=gt
set QW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set WW=0
loop
call TriggerRegisterPlayerUnitEvent(mW,Player(WW),QW,null)
set WW=WW+1
exitwhen WW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(gt,Condition(ve))
call TriggerAddAction(gt,me)
set mW=null
set QW=null
endfunction
function FP takes nothing returns nothing
local trigger GP
local playerunitevent gP
local integer hP
set li=CreateTrigger()
set GP=li
set gP=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set hP=0
loop
call TriggerRegisterPlayerUnitEvent(GP,Player(hP),gP,null)
set hP=hP+1
exitwhen hP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(li,Condition(ra))
call TriggerAddAction(li,sa)
set GP=null
set gP=null
endfunction
function FY takes nothing returns nothing
local trigger GY
local playerunitevent gY
local integer hY
set hs=CreateTrigger()
set GY=hs
set gY=EVENT_PLAYER_UNIT_ATTACKED
set hY=0
loop
call TriggerRegisterPlayerUnitEvent(GY,Player(hY),gY,null)
set hY=hY+1
exitwhen hY==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(hs,Condition(vy))
call TriggerAddAction(hs,my)
set GY=null
set gY=null
endfunction
function FZ takes nothing returns nothing
local trigger GZ
local playerunitevent gZ
local integer hZ
set Pt=CreateTrigger()
set GZ=Pt
set gZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set hZ=0
loop
call TriggerRegisterPlayerUnitEvent(GZ,Player(hZ),gZ,null)
set hZ=hZ+1
exitwhen hZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Pt,Condition(cq))
call TriggerAddAction(Pt,oq)
set GZ=null
set gZ=null
endfunction
function Gv takes nothing returns nothing
local trigger Rv
local playerunitevent Tv
local integer Yv
set ut=CreateTrigger()
set Rv=ut
set Tv=EVENT_PLAYER_UNIT_DEATH
set Yv=0
loop
call TriggerRegisterPlayerUnitEvent(Rv,Player(Yv),Tv,null)
set Yv=Yv+1
exitwhen Yv==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ut,Condition(Ip))
call TriggerAddAction(ut,Pp)
set Rv=null
set Tv=null
endfunction
function HL takes nothing returns nothing
local trigger PL
local playerunitevent AL
local integer DL
set wS=CreateTrigger()
set PL=wS
set AL=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set DL=0
loop
call TriggerRegisterPlayerUnitEvent(PL,Player(DL),AL,null)
set DL=DL+1
exitwhen DL==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(wS,Condition(Zn))
call TriggerAddAction(wS,Un)
set PL=null
set AL=null
endfunction
function HT takes nothing returns nothing
set Ys=CreateTrigger()
call TriggerRegisterTimerEvent(Ys,1.00,false)
call TriggerAddAction(Ys,hy)
endfunction
function HU takes nothing returns nothing
local trigger PU
local playerunitevent AU
local integer DU
set Bt=CreateTrigger()
set PU=Bt
set AU=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set DU=0
loop
call TriggerRegisterPlayerUnitEvent(PU,Player(DU),AU,null)
set DU=DU+1
exitwhen DU==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Bt,Condition(kq))
call TriggerAddAction(Bt,jq)
set PU=null
set AU=null
endfunction
function HW takes nothing returns nothing
local trigger PW
local playerunitevent AW
local integer DW
set ht=CreateTrigger()
set PW=ht
set AW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set DW=0
loop
call TriggerRegisterPlayerUnitEvent(PW,Player(DW),AW,null)
set DW=DW+1
exitwhen DW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ht,Condition(Qe))
call TriggerAddAction(ht,We)
set PW=null
set AW=null
endfunction
function Ix takes nothing returns nothing
local trigger Ex
local playerunitevent Zx
local integer Ux
set Ns=CreateTrigger()
set Ex=Ns
set Zx=EVENT_PLAYER_UNIT_SPELL_CAST
set Ux=0
loop
call TriggerRegisterPlayerUnitEvent(Ex,Player(Ux),Zx,null)
set Ux=Ux+1
exitwhen Ux==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ns,Condition(Wp))
call TriggerAddAction(Ns,Ep)
set Ex=null
set Zx=null
endfunction
function JE takes nothing returns nothing
local trigger AE
local playerunitevent DE
local integer HE
set Wt=CreateTrigger()
set AE=Wt
set DE=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set HE=0
loop
call TriggerRegisterPlayerUnitEvent(AE,Player(HE),DE,null)
set HE=HE+1
exitwhen HE==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Wt,Condition(Be))
call TriggerAddAction(Wt,Ne)
set AE=null
set DE=null
endfunction
function KD takes nothing returns nothing
local trigger DD
local playerunitevent HD
local integer JD
set ki=CreateTrigger()
set DD=ki
set HD=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set JD=0
loop
call TriggerRegisterPlayerUnitEvent(DD,Player(JD),HD,null)
set JD=JD+1
exitwhen JD==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(ki,Pa)
set DD=null
set HD=null
endfunction
function KK takes nothing returns nothing
local trigger DK
local playerunitevent HK
local integer JK
set Li=CreateTrigger()
set DK=Li
set HK=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set JK=0
loop
call TriggerRegisterPlayerUnitEvent(DK,Player(JK),HK,null)
set JK=JK+1
exitwhen JK==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Li,Condition(Tn))
call TriggerAddAction(Li,Yn)
set DK=null
set HK=null
endfunction
function KQ takes nothing returns nothing
local trigger DQ
local playerunitevent HQ
local integer JQ
set dt=CreateTrigger()
set DQ=dt
set HQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set JQ=0
loop
call TriggerRegisterPlayerUnitEvent(DQ,Player(JQ),HQ,null)
set JQ=JQ+1
exitwhen JQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(dt,Condition(de))
call TriggerAddAction(dt,fe)
set DQ=null
set HQ=null
endfunction
function LW takes nothing returns nothing
set Ft=CreateTrigger()
call TriggerRegisterTimerEvent(Ft,0.10,false)
call TriggerAddAction(Ft,Ze)
endfunction
function MK takes nothing returns nothing
local trigger VK
local playerunitevent BK
local integer NK
set Xi=CreateTrigger()
set VK=Xi
set BK=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set NK=0
loop
call TriggerRegisterPlayerUnitEvent(VK,Player(NK),BK,null)
set NK=NK+1
exitwhen NK==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Xi,Condition(Gn))
call TriggerAddAction(Xi,gn)
set VK=null
set BK=null
endfunction
function MQ takes nothing returns nothing
local trigger VQ
local playerunitevent BQ
local integer NQ
set ft=CreateTrigger()
set VQ=ft
set BQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set NQ=0
loop
call TriggerRegisterPlayerUnitEvent(VQ,Player(NQ),BQ,null)
set NQ=NQ+1
exitwhen NQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ft,Condition(Re))
call TriggerAddAction(ft,Te)
set VQ=null
set BQ=null
endfunction
function MZ takes nothing returns nothing
set Jt=CreateTrigger()
call TriggerRegisterTimerEvent(Jt,0.10,false)
call TriggerAddAction(Jt,aq)
endfunction
function NE takes nothing returns nothing
local trigger CE
local playerunitevent VE
local integer BE
set Et=CreateTrigger()
set CE=Et
set VE=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set BE=0
loop
call TriggerRegisterPlayerUnitEvent(CE,Player(BE),VE,null)
set BE=BE+1
exitwhen BE==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Et,Condition(Me))
call TriggerAddAction(Et,wq)
set CE=null
set VE=null
endfunction
function NI takes nothing returns nothing
set Si=CreateTrigger()
call TriggerRegisterTimerEvent(Si,0.10,false)
call TriggerAddAction(Si,Cq)
endfunction
function PA takes nothing returns nothing
local trigger ZA
local playerunitevent UA
local integer IA
set fi=CreateTrigger()
set ZA=fi
set UA=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set IA=0
loop
call TriggerRegisterPlayerUnitEvent(ZA,Player(IA),UA,null)
set IA=IA+1
exitwhen IA==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(fi,Condition(Ra))
call TriggerAddAction(fi,Ta)
set ZA=null
set UA=null
endfunction
function PD takes nothing returns nothing
local trigger ZD
local playerunitevent UD
local integer ID
set Fi=CreateTrigger()
set ZD=Fi
set UD=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set ID=0
loop
call TriggerRegisterPlayerUnitEvent(ZD,Player(ID),UD,null)
set ID=ID+1
exitwhen ID==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Fi,Condition(Ua))
call TriggerAddAction(Fi,Ia)
set ZD=null
set UD=null
endfunction
function PJ takes nothing returns nothing
local trigger ZJ
local playerunitevent UJ
local integer IJ
set Ui=CreateTrigger()
set ZJ=Ui
set UJ=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set IJ=0
loop
call TriggerRegisterPlayerUnitEvent(ZJ,Player(IJ),UJ,null)
set IJ=IJ+1
exitwhen IJ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ui,Condition(tn))
call TriggerAddAction(Ui,Sn)
set ZJ=null
set UJ=null
endfunction
function PT takes nothing returns nothing
set Rs=CreateTrigger()
call TriggerRegisterTimerEvent(Rs,70.00,false)
call TriggerAddAction(Rs,gy)
endfunction
function PY takes nothing returns nothing
local trigger ZY
local playerunitevent UY
local integer IY
set Fs=CreateTrigger()
set ZY=Fs
set UY=EVENT_PLAYER_UNIT_ATTACKED
set IY=0
loop
call TriggerRegisterPlayerUnitEvent(ZY,Player(IY),UY,null)
set IY=IY+1
exitwhen IY==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Fs,Condition(Qy))
call TriggerAddAction(Fs,Wy)
set ZY=null
set UY=null
endfunction
function Pm takes nothing returns nothing
local trigger Zm
local playerunitevent Um
local integer Im
set lt=CreateTrigger()
set Zm=lt
set Um=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Im=0
loop
call TriggerRegisterPlayerUnitEvent(Zm,Player(Im),Um,null)
set Im=Im+1
exitwhen Im==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(lt,Condition(re))
call TriggerAddAction(lt,se)
set Zm=null
set Um=null
endfunction
function QI takes nothing returns nothing
local trigger xI
local playerunitevent vI
local integer mI
set si=CreateTrigger()
set xI=si
set vI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set mI=0
loop
call TriggerRegisterPlayerUnitEvent(xI,Player(mI),vI,null)
set mI=mI+1
exitwhen mI==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(si,Condition(Aq))
call TriggerAddAction(si,Dq)
set xI=null
set vI=null
endfunction
function RH takes nothing returns nothing
local trigger nH
local playerunitevent dH
local integer fH
set xi=CreateTrigger()
set nH=xi
set dH=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set fH=0
loop
call TriggerRegisterPlayerUnitEvent(nH,Player(fH),dH,null)
set fH=fH+1
exitwhen fH==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(xi,Condition(Ha))
call TriggerAddAction(xi,Ja)
set nH=null
set dH=null
endfunction
function RL takes nothing returns nothing
local trigger nL
local playerunitevent dL
local integer fL
set Bi=CreateTrigger()
set nL=Bi
set dL=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set fL=0
loop
call TriggerRegisterPlayerUnitEvent(nL,Player(fL),dL,null)
set fL=fL+1
exitwhen fL==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Bi,Condition(xn))
call TriggerAddAction(Bi,vn)
set nL=null
set dL=null
endfunction
function RU takes nothing returns nothing
local trigger nU
local playerunitevent dU
local integer fU
set Xt=CreateTrigger()
set nU=Xt
set dU=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set fU=0
loop
call TriggerRegisterPlayerUnitEvent(nU,Player(fU),dU,null)
set fU=fU+1
exitwhen fU==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Xt,Condition(Tq))
call TriggerAddAction(Xt,Yq)
set nU=null
set dU=null
endfunction
function RW takes nothing returns nothing
local trigger nW
local playerunitevent dW
local integer fW
set Yt=CreateTrigger()
set nW=Yt
set dW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set fW=0
loop
call TriggerRegisterPlayerUnitEvent(nW,Player(fW),dW,null)
set fW=fW+1
exitwhen fW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Yt,Condition(Fe))
call TriggerAddAction(Yt,ke)
set nW=null
set dW=null
endfunction
function SH takes nothing returns nothing
local trigger sH
local playerunitevent tH
local integer iH
set ji=CreateTrigger()
set sH=ji
set tH=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set iH=0
loop
call TriggerRegisterPlayerUnitEvent(sH,Player(iH),tH,null)
set iH=iH+1
exitwhen iH==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ji,Condition(Aa))
call TriggerAddAction(ji,Da)
set sH=null
set tH=null
endfunction
function SL takes nothing returns nothing
local trigger sL
local playerunitevent tL
local integer iL
set Ci=CreateTrigger()
set sL=Ci
set tL=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set iL=0
loop
call TriggerRegisterPlayerUnitEvent(sL,Player(iL),tL,null)
set iL=iL+1
exitwhen iL==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ci,Condition(hn))
call TriggerAddAction(Ci,Fn)
set sL=null
set tL=null
endfunction
function SU takes nothing returns nothing
local trigger sU
local playerunitevent tU
local integer iU
set Kt=CreateTrigger()
set sU=Kt
set tU=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set iU=0
loop
call TriggerRegisterPlayerUnitEvent(sU,Player(iU),tU,null)
set iU=iU+1
exitwhen iU==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Kt,Condition(nq))
call TriggerAddAction(Kt,dq)
set sU=null
set tU=null
endfunction
function SW takes nothing returns nothing
local trigger sW
local playerunitevent tW
local integer iW
set Rt=CreateTrigger()
set sW=Rt
set tW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set iW=0
loop
call TriggerRegisterPlayerUnitEvent(sW,Player(iW),tW,null)
set iW=iW+1
exitwhen iW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Rt,Condition(Ye))
call TriggerAddAction(Rt,Ge)
set sW=null
set tW=null
endfunction
function TE takes nothing returns nothing
local trigger dE
local playerunitevent fE
local integer RE
set vt=CreateTrigger()
set dE=vt
set fE=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set RE=0
loop
call TriggerRegisterPlayerUnitEvent(dE,Player(RE),fE,null)
set RE=RE+1
exitwhen RE==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(vt,Condition(Je))
call TriggerAddAction(vt,Ke)
set dE=null
set fE=null
endfunction
function UK takes nothing returns nothing
local trigger WK
local playerunitevent EK
local integer ZK
set Ki=CreateTrigger()
set WK=Ki
set EK=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set ZK=0
loop
call TriggerRegisterPlayerUnitEvent(WK,Player(ZK),EK,null)
set ZK=ZK+1
exitwhen ZK==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ki,Condition(fn))
call TriggerAddAction(Ki,Rn)
set WK=null
set EK=null
endfunction
function UQ takes nothing returns nothing
local trigger WQ
local playerunitevent EQ
local integer ZQ
set nt=CreateTrigger()
set WQ=nt
set EQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set ZQ=0
loop
call TriggerRegisterPlayerUnitEvent(WQ,Player(ZQ),EQ,null)
set ZQ=ZQ+1
exitwhen ZQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(nt,Condition(ae))
call TriggerAddAction(nt,ne)
set WQ=null
set EQ=null
endfunction
function VH takes nothing returns nothing
local trigger LH
local playerunitevent XH
local integer CH
set mi=CreateTrigger()
set LH=mi
set XH=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set CH=0
loop
call TriggerRegisterPlayerUnitEvent(LH,Player(CH),XH,null)
set CH=CH+1
exitwhen CH==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(mi,Condition(Xa))
call TriggerAddAction(mi,Ca)
set LH=null
set XH=null
endfunction
function VP takes nothing returns nothing
local trigger LP
local playerunitevent XP
local integer CP
set pi=CreateTrigger()
set LP=pi
set XP=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set CP=0
loop
call TriggerRegisterPlayerUnitEvent(LP,Player(CP),XP,null)
set CP=CP+1
exitwhen CP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(pi,Condition(oa))
call TriggerAddAction(pi,Oa)
set LP=null
set XP=null
endfunction
function VY takes nothing returns nothing
local trigger LY
local playerunitevent XY
local integer CY
set ks=CreateTrigger()
set LY=ks
set XY=EVENT_PLAYER_UNIT_SPELL_CAST
set CY=0
loop
call TriggerRegisterPlayerUnitEvent(LY,Player(CY),XY,null)
set CY=CY+1
exitwhen CY==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ks,Condition(Ey))
call TriggerAddAction(ks,Zy)
set LY=null
set XY=null
endfunction
function VZ takes nothing returns nothing
local trigger LZ
local playerunitevent XZ
local integer CZ
set Ht=CreateTrigger()
set LZ=Ht
set XZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set CZ=0
loop
call TriggerRegisterPlayerUnitEvent(LZ,Player(CZ),XZ,null)
set CZ=CZ+1
exitwhen CZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ht,Condition(pq))
call TriggerAddAction(Ht,eq)
set LZ=null
set XZ=null
endfunction
function Vv takes nothing returns nothing
local trigger Lv
local playerunitevent Xv
local integer Cv
set st=CreateTrigger()
set Lv=st
set Xv=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Cv=0
loop
call TriggerRegisterPlayerUnitEvent(Lv,Player(Cv),Xv,null)
set Cv=Cv+1
exitwhen Cv==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(st,Condition(Hp))
call TriggerAddAction(st,Jp)
set Lv=null
set Xv=null
endfunction
function WH takes nothing returns nothing
local trigger vH
local playerunitevent mH
local integer QH
set vi=CreateTrigger()
set vH=vi
set mH=EVENT_PLAYER_UNIT_SPELL_CAST
set QH=0
loop
call TriggerRegisterPlayerUnitEvent(vH,Player(QH),mH,null)
set QH=QH+1
exitwhen QH==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(vi,Condition(Ka))
call TriggerAddAction(vi,La)
set vH=null
set mH=null
endfunction
function WP takes nothing returns nothing
local trigger vP
local playerunitevent mP
local integer QP
set bi=CreateTrigger()
set vP=bi
set mP=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set QP=0
loop
call TriggerRegisterPlayerUnitEvent(vP,Player(QP),mP,null)
set QP=QP+1
exitwhen QP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(bi,Condition(ta))
call TriggerAddAction(bi,ia)
set vP=null
set mP=null
endfunction
function WZ takes nothing returns nothing
local trigger vZ
local playerunitevent mZ
local integer QZ
set At=CreateTrigger()
set vZ=At
set mZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set QZ=0
loop
call TriggerRegisterPlayerUnitEvent(vZ,Player(QZ),mZ,null)
set QZ=QZ+1
exitwhen QZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(At,Condition(Oq))
call TriggerAddAction(At,lq)
set vZ=null
set mZ=null
endfunction
function Wk takes nothing returns nothing
local trigger vk
local playerunitevent mk
local integer Qk
set Ks=CreateTrigger()
set vk=Ks
set mk=EVENT_PLAYER_UNIT_SPELL_CAST
set Qk=0
loop
call TriggerRegisterPlayerUnitEvent(vk,Player(Qk),mk,null)
set Qk=Qk+1
exitwhen Qk==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ks,Condition(Tp))
call TriggerAddAction(Ks,Yp)
set vk=null
set mk=null
endfunction
function XA takes nothing returns nothing
local trigger JA
local playerunitevent KA
local integer LA
set Ri=CreateTrigger()
set JA=Ri
set KA=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set LA=0
loop
call TriggerRegisterPlayerUnitEvent(JA,Player(LA),KA,null)
set LA=LA+1
exitwhen LA==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ri,Condition(Ya))
call TriggerAddAction(Ri,Ga)
set JA=null
set KA=null
endfunction
function XG takes nothing returns nothing
local trigger JG
local playerunitevent KG
local integer LG
set ms=CreateTrigger()
set JG=ms
set KG=EVENT_PLAYER_UNIT_SPELL_CAST
set LG=0
loop
call TriggerRegisterPlayerUnitEvent(JG,Player(LG),KG,null)
set LG=LG+1
exitwhen LG==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ms,Condition(Hy))
call TriggerAddAction(ms,Jy)
set JG=null
set KG=null
endfunction
function XJ takes nothing returns nothing
local trigger JJ
local playerunitevent KJ
local integer LJ
set Ii=CreateTrigger()
set JJ=Ii
set KJ=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set LJ=0
loop
call TriggerRegisterPlayerUnitEvent(JJ,Player(LJ),KJ,null)
set LJ=LJ+1
exitwhen LJ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ii,Condition(cn))
call TriggerAddAction(Ii,on)
set JJ=null
set KJ=null
endfunction
function Xg takes nothing returns nothing
local trigger Jg
local playerunitevent Kg
local integer Lg
set Es=CreateTrigger()
set Jg=Es
set Kg=EVENT_PLAYER_UNIT_SPELL_CAST
set Lg=0
loop
call TriggerRegisterPlayerUnitEvent(Jg,Player(Lg),Kg,null)
set Lg=Lg+1
exitwhen Lg==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Es,Condition(My))
call TriggerAddAction(Es,wp)
set Jg=null
set Kg=null
endfunction
function Xh takes nothing returns nothing
local trigger Jh
local playerunitevent Kh
local integer Lh
set Is=CreateTrigger()
set Jh=Is
set Kh=EVENT_PLAYER_UNIT_SPELL_CAST
set Lh=0
loop
call TriggerRegisterPlayerUnitEvent(Jh,Player(Lh),Kh,null)
set Lh=Lh+1
exitwhen Lh==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Is,Condition(op))
call TriggerAddAction(Is,Op)
set Jh=null
set Kh=null
endfunction
function Xm takes nothing returns nothing
local trigger Jm
local playerunitevent Km
local integer Lm
set bt=CreateTrigger()
set Jm=bt
set Km=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Lm=0
loop
call TriggerRegisterPlayerUnitEvent(Jm,Player(Lm),Km,null)
set Lm=Lm+1
exitwhen Lm==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(bt,Condition(te))
call TriggerAddAction(bt,ie)
set Jm=null
set Km=null
endfunction
function YD takes nothing returns nothing
local trigger fD
local playerunitevent RD
local integer TD
set gi=CreateTrigger()
set fD=gi
set RD=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set TD=0
loop
call TriggerRegisterPlayerUnitEvent(fD,Player(TD),RD,null)
set TD=TD+1
exitwhen TD==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(gi,Condition(va))
call TriggerAddAction(gi,ma)
set fD=null
set RD=null
endfunction
function YK takes nothing returns nothing
local trigger fK
local playerunitevent RK
local integer TK
set Hi=CreateTrigger()
set fK=Hi
set RK=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set TK=0
loop
call TriggerRegisterPlayerUnitEvent(fK,Player(TK),RK,null)
set TK=TK+1
exitwhen TK==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Hi,Condition(qn))
call TriggerAddAction(Hi,an)
set fK=null
set RK=null
endfunction
function YQ takes nothing returns nothing
local trigger fQ
local playerunitevent RQ
local integer TQ
set qt=CreateTrigger()
set fQ=qt
set RQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set TQ=0
loop
call TriggerRegisterPlayerUnitEvent(fQ,Player(TQ),RQ,null)
set TQ=TQ+1
exitwhen TQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(qt,Condition(ye))
call TriggerAddAction(qt,pe)
set fQ=null
set RQ=null
endfunction
function ZE takes nothing returns nothing
local trigger QE
local playerunitevent WE
local integer EE
set Qt=CreateTrigger()
set QE=Qt
set WE=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set EE=0
loop
call TriggerRegisterPlayerUnitEvent(QE,Player(EE),WE,null)
set EE=EE+1
exitwhen EE==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Qt,Condition(Ce))
call TriggerAddAction(Qt,Ve)
set QE=null
set WE=null
endfunction
function Zj takes nothing returns nothing
local trigger Qj
local playerunitevent Wj
local integer Ej
set Cs=CreateTrigger()
set Qj=Cs
set Wj=EVENT_PLAYER_UNIT_DEATH
set Ej=0
loop
call TriggerRegisterPlayerUnitEvent(Qj,Player(Ej),Wj,null)
set Ej=Ej+1
exitwhen Ej==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Cs,Condition(kp))
call TriggerAddAction(Cs,jp)
set Qj=null
set Wj=null
endfunction
function bF takes nothing returns nothing
local trigger oF
local playerunitevent OF
local integer lF
set Ps=CreateTrigger()
set oF=Ps
set OF=EVENT_PLAYER_UNIT_SPELL_CAST
set lF=0
loop
call TriggerRegisterPlayerUnitEvent(oF,Player(lF),OF,null)
set lF=lF+1
exitwhen lF==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ps,Condition(bp))
call TriggerAddAction(Ps,yp)
set oF=null
set OF=null
endfunction
function bI takes nothing returns nothing
local trigger oI
local playerunitevent OI
local integer lI
set wi=CreateTrigger()
set oI=wi
set OI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set lI=0
loop
call TriggerRegisterPlayerUnitEvent(oI,Player(lI),OI,null)
set lI=lI+1
exitwhen lI==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(wi,Condition(Wq))
call TriggerAddAction(wi,Eq)
set oI=null
set OI=null
endfunction
function bg takes nothing returns nothing
local trigger og
local playerunitevent Og
local integer lg
set Qs=CreateTrigger()
set og=Qs
set Og=EVENT_PLAYER_UNIT_SPELL_CAST
set lg=0
loop
call TriggerRegisterPlayerUnitEvent(og,Player(lg),Og,null)
set lg=lg+1
exitwhen lg==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Qs,Condition(Ly))
call TriggerAddAction(Qs,Xy)
set og=null
set Og=null
endfunction
function bh takes nothing returns nothing
local trigger oh
local playerunitevent Oh
local integer lh
set Zs=CreateTrigger()
set oh=Zs
set Oh=EVENT_PLAYER_UNIT_SPELL_CAST
set lh=0
loop
call TriggerRegisterPlayerUnitEvent(oh,Player(lh),Oh,null)
set lh=lh+1
exitwhen lh==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Zs,Condition(rp))
call TriggerAddAction(Zs,sp)
set oh=null
set Oh=null
endfunction
function cE takes nothing returns nothing
local trigger tE
local playerunitevent iE
local integer SE
set jt=CreateTrigger()
set tE=jt
set iE=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set SE=0
loop
call TriggerRegisterPlayerUnitEvent(tE,Player(SE),iE,null)
set SE=SE+1
exitwhen SE==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(jt,Condition(Pe))
call TriggerAddAction(jt,Ae)
set tE=null
set iE=null
endfunction
function dI takes nothing returns nothing
local trigger qI
local playerunitevent aI
local integer nI
set ui=CreateTrigger()
set qI=ui
set aI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set nI=0
loop
call TriggerRegisterPlayerUnitEvent(qI,Player(nI),aI,null)
set nI=nI+1
exitwhen nI==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ui,Condition(Zq))
call TriggerAddAction(ui,Uq)
set qI=null
set aI=null
endfunction
function dj takes nothing returns nothing
local trigger qj
local playerunitevent aj
local integer nj
set Xs=CreateTrigger()
set qj=Xs
set aj=EVENT_PLAYER_UNIT_DEATH
set nj=0
loop
call TriggerRegisterPlayerUnitEvent(qj,Player(nj),aj,null)
set nj=nj+1
exitwhen nj==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Xs,Condition(hp))
call TriggerAddAction(Xs,Fp)
set qj=null
set aj=null
endfunction
function dx takes nothing returns nothing
local trigger qx
local playerunitevent ax
local integer nx
set Bs=CreateTrigger()
set qx=Bs
set ax=EVENT_PLAYER_UNIT_DEATH
set nx=0
loop
call TriggerRegisterPlayerUnitEvent(qx,Player(nx),ax,null)
set nx=nx+1
exitwhen nx==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Bs,Condition(mp))
call TriggerAddAction(Bs,Qp)
set qx=null
set ax=null
endfunction
function eE takes nothing returns nothing
local trigger bE
local playerunitevent yE
local integer pE
set xt=CreateTrigger()
set bE=xt
set yE=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set pE=0
loop
call TriggerRegisterPlayerUnitEvent(bE,Player(pE),yE,null)
set pE=pE+1
exitwhen pE==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(xt,Condition(De))
call TriggerAddAction(xt,He)
set bE=null
set yE=null
endfunction
function eY takes nothing returns nothing
local trigger bY
local playerunitevent yY
local integer pY
set gs=CreateTrigger()
set bY=gs
set yY=EVENT_PLAYER_UNIT_ATTACKED
set pY=0
loop
call TriggerRegisterPlayerUnitEvent(bY,Player(pY),yY,null)
set pY=pY+1
exitwhen pY==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(gs,Condition(jy))
call TriggerAddAction(gs,xy)
set bY=null
set yY=null
endfunction
function ek takes nothing returns nothing
local trigger bk
local playerunitevent yk
local integer pk
set Js=CreateTrigger()
set bk=Js
set yk=EVENT_PLAYER_UNIT_SPELL_CAST
set pk=0
loop
call TriggerRegisterPlayerUnitEvent(bk,Player(pk),yk,null)
set pk=pk+1
exitwhen pk==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Js,Condition(fp))
call TriggerAddAction(Js,Rp)
set bk=null
set yk=null
endfunction
function fF takes nothing returns nothing
set As=CreateTrigger()
call TriggerRegisterTimerEvent(As,5.00,true)
call TriggerAddAction(As,ep)
endfunction
function fP takes nothing returns nothing
local trigger aP
local playerunitevent nP
local integer dP
set Oi=CreateTrigger()
set aP=Oi
set nP=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set dP=0
loop
call TriggerRegisterPlayerUnitEvent(aP,Player(dP),nP,null)
set dP=dP+1
exitwhen dP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Oi,Condition(wa))
call TriggerAddAction(Oi,ua)
set aP=null
set nP=null
endfunction
function fZ takes nothing returns nothing
local trigger aZ
local playerunitevent nZ
local integer dZ
set It=CreateTrigger()
set aZ=It
set nZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set dZ=0
loop
call TriggerRegisterPlayerUnitEvent(aZ,Player(dZ),nZ,null)
set dZ=dZ+1
exitwhen dZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(It,Condition(iq))
call TriggerAddAction(It,Sq)
set aZ=null
set nZ=null
endfunction
function gA takes nothing returns nothing
local trigger TA
local playerunitevent YA
local integer GA
set ni=CreateTrigger()
set TA=ni
set YA=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set GA=0
loop
call TriggerRegisterPlayerUnitEvent(TA,Player(GA),YA,null)
set GA=GA+1
exitwhen GA==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ni,Condition(aa))
call TriggerAddAction(ni,na)
set TA=null
set YA=null
endfunction
function gJ takes nothing returns nothing
local trigger TJ
local playerunitevent YJ
local integer GJ
set Ei=CreateTrigger()
set TJ=Ei
set YJ=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set GJ=0
loop
call TriggerRegisterPlayerUnitEvent(TJ,Player(GJ),YJ,null)
set GJ=GJ+1
exitwhen GJ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ei,Condition(wn))
call TriggerAddAction(Ei,un)
set TJ=null
set YJ=null
endfunction
function gm takes nothing returns nothing
local trigger Tm
local playerunitevent Ym
local integer Gm
set ot=CreateTrigger()
set Tm=ot
set Ym=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Gm=0
loop
call TriggerRegisterPlayerUnitEvent(Tm,Player(Gm),Ym,null)
set Gm=Gm+1
exitwhen Gm==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ot,Condition(Np))
call TriggerAddAction(ot,Mp)
set Tm=null
set Ym=null
endfunction
function hD takes nothing returns nothing
set hi=CreateTrigger()
call TriggerRegisterTimerEvent(hi,0.10,false)
call TriggerAddAction(hi,Wa)
endfunction
function hI takes nothing returns nothing
local trigger YI
local playerunitevent GI
local integer gI
set ri=CreateTrigger()
set YI=ri
set GI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set gI=0
loop
call TriggerRegisterPlayerUnitEvent(YI,Player(gI),GI,null)
set gI=gI+1
exitwhen gI==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ri,Condition(Iq))
call TriggerAddAction(ri,Pq)
set YI=null
set GI=null
endfunction
function iP takes nothing returns nothing
local trigger rP
local playerunitevent sP
local integer tP
set ci=CreateTrigger()
set rP=ci
set sP=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set tP=0
loop
call TriggerRegisterPlayerUnitEvent(rP,Player(tP),sP,null)
set tP=tP+1
exitwhen tP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ci,Condition(Vq))
call TriggerAddAction(ci,Bq)
set rP=null
set sP=null
endfunction
function iZ takes nothing returns nothing
local trigger rZ
local playerunitevent sZ
local integer tZ
set Zt=CreateTrigger()
set rZ=Zt
set sZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set tZ=0
loop
call TriggerRegisterPlayerUnitEvent(rZ,Player(tZ),sZ,null)
set tZ=tZ+1
exitwhen tZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Zt,Condition(uq))
call TriggerAddAction(Zt,rq)
set rZ=null
set sZ=null
endfunction
function iv takes nothing returns nothing
local trigger rv
local playerunitevent sv
local integer tv
set Ms=CreateTrigger()
set rv=Ms
set sv=EVENT_PLAYER_UNIT_SPELL_CAST
set tv=0
loop
call TriggerRegisterPlayerUnitEvent(rv,Player(tv),sv,null)
set tv=tv+1
exitwhen tv==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ms,Condition(Zp))
call TriggerAddAction(Ms,Up)
set rv=null
set sv=null
endfunction
function jE takes nothing returns nothing
local trigger hE
local playerunitevent FE
local integer kE
set mt=CreateTrigger()
set hE=mt
set FE=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set kE=0
loop
call TriggerRegisterPlayerUnitEvent(hE,Player(kE),FE,null)
set kE=kE+1
exitwhen kE==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(mt,Condition(Le))
call TriggerAddAction(mt,Xe)
set hE=null
set FE=null
endfunction
function jG takes nothing returns nothing
local trigger hG
local playerunitevent FG
local integer kG
set vs=CreateTrigger()
set hG=vs
set FG=EVENT_PLAYER_UNIT_SPELL_CAST
set kG=0
loop
call TriggerRegisterPlayerUnitEvent(hG,Player(kG),FG,null)
set kG=kG+1
exitwhen kG==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(vs,Ay)
set hG=null
set FG=null
endfunction
function jg takes nothing returns nothing
local trigger hg
local playerunitevent Fg
local integer kg
set Ws=CreateTrigger()
set hg=Ws
set Fg=EVENT_PLAYER_UNIT_SPELL_CAST
set kg=0
loop
call TriggerRegisterPlayerUnitEvent(hg,Player(kg),Fg,null)
set kg=kg+1
exitwhen kg==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ws,Condition(Vy))
call TriggerAddAction(Ws,By)
set hg=null
set Fg=null
endfunction
function jh takes nothing returns nothing
local trigger hh
local playerunitevent Fh
local integer kh
set Us=CreateTrigger()
set hh=Us
set Fh=EVENT_PLAYER_UNIT_SPELL_CAST
set kh=0
loop
call TriggerRegisterPlayerUnitEvent(hh,Player(kh),Fh,null)
set kh=kh+1
exitwhen kh==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Us,Condition(ip))
call TriggerAddAction(Us,Sp)
set hh=null
set Fh=null
endfunction
function kF takes nothing returns nothing
set Ds=CreateTrigger()
call TriggerRegisterTimerEvent(Ds,5.00,true)
call TriggerAddAction(Ds,ap)
endfunction
function kL takes nothing returns nothing
local trigger gL
local playerunitevent hL
local integer FL
set Ni=CreateTrigger()
set gL=Ni
set hL=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set FL=0
loop
call TriggerRegisterPlayerUnitEvent(gL,Player(FL),hL,null)
set FL=FL+1
exitwhen FL==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ni,Condition(mn))
call TriggerAddAction(Ni,Qn)
set gL=null
set hL=null
endfunction
function kU takes nothing returns nothing
local trigger gU
local playerunitevent hU
local integer FU
set Ct=CreateTrigger()
set gU=Ct
set hU=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set FU=0
loop
call TriggerRegisterPlayerUnitEvent(gU,Player(FU),hU,null)
set FU=FU+1
exitwhen FU==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ct,Condition(Gq))
call TriggerAddAction(Ct,gq)
set gU=null
set hU=null
endfunction
function kW takes nothing returns nothing
local trigger gW
local playerunitevent hW
local integer FW
set Gt=CreateTrigger()
set gW=Gt
set hW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set FW=0
loop
call TriggerRegisterPlayerUnitEvent(gW,Player(FW),hW,null)
set FW=FW+1
exitwhen FW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Gt,Condition(je))
call TriggerAddAction(Gt,xe)
set gW=null
set hW=null
endfunction
function lA takes nothing returns nothing
local trigger cA
local playerunitevent oA
local integer OA
set qi=CreateTrigger()
set cA=qi
set oA=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set OA=0
loop
call TriggerRegisterPlayerUnitEvent(cA,Player(OA),oA,null)
set OA=OA+1
exitwhen OA==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(qi,Condition(ya))
call TriggerAddAction(qi,pa)
set cA=null
set oA=null
endfunction
function lJ takes nothing returns nothing
local trigger cJ
local playerunitevent oJ
local integer OJ
set Qi=CreateTrigger()
set cJ=Qi
set oJ=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set OJ=0
loop
call TriggerRegisterPlayerUnitEvent(cJ,Player(OJ),oJ,null)
set OJ=OJ+1
exitwhen OJ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Qi,Condition(Va))
call TriggerAddAction(Qi,Ba)
set cJ=null
set oJ=null
endfunction
function lm takes nothing returns nothing
local trigger cm
local playerunitevent om
local integer Om
set St=CreateTrigger()
set cm=St
set om=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Om=0
loop
call TriggerRegisterPlayerUnitEvent(cm,Player(Om),om,null)
set Om=Om+1
exitwhen Om==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(St,Condition(Xp))
call TriggerAddAction(St,Cp)
set cm=null
set om=null
endfunction
function mA takes nothing returns nothing
local trigger jA
local playerunitevent xA
local integer vA
set di=CreateTrigger()
set jA=di
set xA=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set vA=0
loop
call TriggerRegisterPlayerUnitEvent(jA,Player(vA),xA,null)
set vA=vA+1
exitwhen vA==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(di,Condition(da))
call TriggerAddAction(di,fa)
set jA=null
set xA=null
endfunction
function mJ takes nothing returns nothing
local trigger jJ
local playerunitevent xJ
local integer vJ
set Zi=CreateTrigger()
set jJ=Zi
set xJ=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set vJ=0
loop
call TriggerRegisterPlayerUnitEvent(jJ,Player(vJ),xJ,null)
set vJ=vJ+1
exitwhen vJ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Zi,Condition(rn))
call TriggerAddAction(Zi,sn)
set jJ=null
set xJ=null
endfunction
function mm takes nothing returns nothing
local trigger jm
local playerunitevent xm
local integer vm
set Ot=CreateTrigger()
set jm=Ot
set xm=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set vm=0
loop
call TriggerRegisterPlayerUnitEvent(jm,Player(vm),xm,null)
set vm=vm+1
exitwhen vm==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ot,Condition(we))
call TriggerAddAction(Ot,ue)
set jm=null
set xm=null
endfunction
function nA takes nothing returns nothing
local trigger eA
local playerunitevent qA
local integer aA
set ai=CreateTrigger()
set eA=ai
set qA=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set aA=0
loop
call TriggerRegisterPlayerUnitEvent(eA,Player(aA),qA,null)
set aA=aA+1
exitwhen aA==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ai,Condition(ea))
call TriggerAddAction(ai,qa)
set eA=null
set qA=null
endfunction
function nJ takes nothing returns nothing
local trigger eJ
local playerunitevent qJ
local integer aJ
set Wi=CreateTrigger()
set eJ=Wi
set qJ=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set aJ=0
loop
call TriggerRegisterPlayerUnitEvent(eJ,Player(aJ),qJ,null)
set aJ=aJ+1
exitwhen aJ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Wi,Condition(Na))
call TriggerAddAction(Wi,Ma)
set eJ=null
set qJ=null
endfunction
function nm takes nothing returns nothing
local trigger em
local playerunitevent qm
local integer am
set ct=CreateTrigger()
set em=ct
set qm=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set am=0
loop
call TriggerRegisterPlayerUnitEvent(em,Player(am),qm,null)
set am=am+1
exitwhen am==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ct,Condition(Vp))
call TriggerAddAction(ct,Bp)
set em=null
set qm=null
endfunction
function oD takes nothing returns nothing
local trigger iD
local playerunitevent SD
local integer cD
set Yi=CreateTrigger()
set iD=Yi
set SD=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set cD=0
loop
call TriggerRegisterPlayerUnitEvent(iD,Player(cD),SD,null)
set cD=cD+1
exitwhen cD==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Yi,Condition(Fa))
call TriggerAddAction(Yi,ka)
set iD=null
set SD=null
endfunction
function oK takes nothing returns nothing
local trigger iK
local playerunitevent SK
local integer cK
set Ai=CreateTrigger()
set iK=Ai
set SK=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set cK=0
loop
call TriggerRegisterPlayerUnitEvent(iK,Player(cK),SK,null)
set cK=cK+1
exitwhen cK==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ai,Condition(bn))
call TriggerAddAction(Ai,yn)
set iK=null
set SK=null
endfunction
function oQ takes nothing returns nothing
local trigger iQ
local playerunitevent SQ
local integer cQ
set pt=CreateTrigger()
set iQ=pt
set SQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set cQ=0
loop
call TriggerRegisterPlayerUnitEvent(iQ,Player(cQ),SQ,null)
set cQ=cQ+1
exitwhen cQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(pt,Condition(oe))
call TriggerAddAction(pt,Oe)
set iQ=null
set SQ=null
endfunction
function pL takes nothing returns nothing
local trigger lL
local playerunitevent bL
local integer yL
set Vi=CreateTrigger()
set lL=Vi
set bL=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set yL=0
loop
call TriggerRegisterPlayerUnitEvent(lL,Player(yL),bL,null)
set yL=yL+1
exitwhen yL==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Vi,Condition(kn))
call TriggerAddAction(Vi,jn)
set lL=null
set bL=null
endfunction
function pU takes nothing returns nothing
local trigger lU
local playerunitevent bU
local integer yU
set Lt=CreateTrigger()
set lU=Lt
set bU=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set yU=0
loop
call TriggerRegisterPlayerUnitEvent(lU,Player(yU),bU,null)
set yU=yU+1
exitwhen yU==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Lt,Condition(fq))
call TriggerAddAction(Lt,Rq)
set lU=null
set bU=null
endfunction
function pW takes nothing returns nothing
local trigger lW
local playerunitevent bW
local integer yW
set Tt=CreateTrigger()
set lW=Tt
set bW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set yW=0
loop
call TriggerRegisterPlayerUnitEvent(lW,Player(yW),bW,null)
set yW=yW+1
exitwhen yW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Tt,Condition(ge))
call TriggerAddAction(Tt,he)
set lW=null
set bW=null
endfunction
function qD takes nothing returns nothing
local trigger yD
local playerunitevent pD
local integer eD
set Gi=CreateTrigger()
set yD=Gi
set pD=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set eD=0
loop
call TriggerRegisterPlayerUnitEvent(yD,Player(eD),pD,null)
set eD=eD+1
exitwhen eD==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Gi,Condition(ja))
call TriggerAddAction(Gi,xa)
set yD=null
set pD=null
endfunction
function qG takes nothing returns nothing
local trigger yG
local playerunitevent pG
local integer eG
set xs=CreateTrigger()
set yG=xs
set pG=EVENT_PLAYER_UNIT_SPELL_CAST
set eG=0
loop
call TriggerRegisterPlayerUnitEvent(yG,Player(eG),pG,null)
set eG=eG+1
exitwhen eG==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(xs,Py)
set yG=null
set pG=null
endfunction
function qK takes nothing returns nothing
local trigger yK
local playerunitevent pK
local integer eK
set Di=CreateTrigger()
set yK=Di
set pK=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set eK=0
loop
call TriggerRegisterPlayerUnitEvent(yK,Player(eK),pK,null)
set eK=eK+1
exitwhen eK==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Di,Condition(pn))
call TriggerAddAction(Di,en)
set yK=null
set pK=null
endfunction
function qQ takes nothing returns nothing
local trigger yQ
local playerunitevent pQ
local integer eQ
set et=CreateTrigger()
set yQ=et
set pQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set eQ=0
loop
call TriggerRegisterPlayerUnitEvent(yQ,Player(eQ),pQ,null)
set eQ=eQ+1
exitwhen eQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(et,Condition(le))
call TriggerAddAction(et,be)
set yQ=null
set pQ=null
endfunction
function rG takes nothing returns nothing
local trigger MY
local playerunitevent wG
local integer uG
set js=CreateTrigger()
set MY=js
set wG=EVENT_PLAYER_UNIT_SPELL_EFFECT
set uG=0
loop
call TriggerRegisterPlayerUnitEvent(MY,Player(uG),wG,null)
set uG=uG+1
exitwhen uG==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(js,Condition(Uy))
call TriggerAddAction(js,Iy)
set MY=null
set wG=null
endfunction
function rY takes nothing returns nothing
local trigger MT
local playerunitevent wY
local integer uY
set Gs=CreateTrigger()
set MT=Gs
set wY=EVENT_PLAYER_UNIT_ATTACKED
set uY=0
loop
call TriggerRegisterPlayerUnitEvent(MT,Player(uY),wY,null)
set uY=uY+1
exitwhen uY==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Gs,Condition(Fy))
call TriggerAddAction(Gs,ky)
set MT=null
set wY=null
endfunction
function sA takes nothing returns nothing
local trigger wA
local playerunitevent uA
local integer rA
set ei=CreateTrigger()
set wA=ei
set uA=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set rA=0
loop
call TriggerRegisterPlayerUnitEvent(wA,Player(rA),uA,null)
set rA=rA+1
exitwhen rA==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ei,Condition(la))
call TriggerAddAction(ei,ba)
set wA=null
set uA=null
endfunction
function sm takes nothing returns nothing
local trigger wm
local playerunitevent um
local integer rm
set tt=CreateTrigger()
set wm=tt
set um=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set rm=0
loop
call TriggerRegisterPlayerUnitEvent(wm,Player(rm),um,null)
set rm=rm+1
exitwhen rm==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(tt,Condition(Kp))
call TriggerAddAction(tt,Lp)
set wm=null
set um=null
endfunction
function tI takes nothing returns nothing
local trigger uI
local playerunitevent rI
local integer sI
set Mt=CreateTrigger()
set uI=Mt
set rI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set sI=0
loop
call TriggerRegisterPlayerUnitEvent(uI,Player(sI),rI,null)
set sI=sI+1
exitwhen sI==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Mt,Condition(mq))
call TriggerAddAction(Mt,Qq)
set uI=null
set rI=null
endfunction
function tX takes nothing returns nothing
local trigger uX
local playerunitevent rX
local integer sX
set rS=CreateTrigger()
set uX=rS
set rX=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set sX=0
loop
call TriggerRegisterPlayerUnitEvent(uX,Player(sX),rX,null)
set sX=sX+1
exitwhen sX==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(rS,Condition(An))
call TriggerAddAction(rS,Dn)
set uX=null
set rX=null
endfunction
function uD takes nothing returns nothing
local trigger NA
local playerunitevent MA
local integer wD
set Ti=CreateTrigger()
set NA=Ti
set MA=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set wD=0
loop
call TriggerRegisterPlayerUnitEvent(NA,Player(wD),MA,null)
set wD=wD+1
exitwhen wD==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ti,Condition(ga))
call TriggerAddAction(Ti,ha)
set NA=null
set MA=null
endfunction
function uK takes nothing returns nothing
local trigger NJ
local playerunitevent MJ
local integer wK
set Pi=CreateTrigger()
set NJ=Pi
set MJ=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set wK=0
loop
call TriggerRegisterPlayerUnitEvent(NJ,Player(wK),MJ,null)
set wK=wK+1
exitwhen wK==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Pi,Condition(On))
call TriggerAddAction(Pi,ln)
set NJ=null
set MJ=null
endfunction
function uQ takes nothing returns nothing
local trigger Nm
local playerunitevent Mm
local integer wQ
set yt=CreateTrigger()
set Nm=yt
set Mm=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set wQ=0
loop
call TriggerRegisterPlayerUnitEvent(Nm,Player(wQ),Mm,null)
set wQ=wQ+1
exitwhen wQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(yt,Condition(Se))
call TriggerAddAction(yt,ce)
set Nm=null
set Mm=null
endfunction
function uj takes nothing returns nothing
local trigger Nk
local playerunitevent Mk
local integer wj
set Ls=CreateTrigger()
set Nk=Ls
set Mk=EVENT_PLAYER_UNIT_SPELL_CAST
set wj=0
loop
call TriggerRegisterPlayerUnitEvent(Nk,Player(wj),Mk,null)
set wj=wj+1
exitwhen wj==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ls,Condition(Gp))
call TriggerAddAction(Ls,gp)
set Nk=null
set Mk=null
endfunction
function ux takes nothing returns nothing
local trigger Nj
local playerunitevent Mj
local integer wx
set Vs=CreateTrigger()
set Nj=Vs
set Mj=EVENT_PLAYER_UNIT_DEATH
set wx=0
loop
call TriggerRegisterPlayerUnitEvent(Nj,Player(wx),Mj,null)
set wx=wx+1
exitwhen wx==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Vs,Condition(xp))
call TriggerAddAction(Vs,vp)
set Nj=null
set Mj=null
endfunction
function wE takes nothing returns nothing
local trigger BW
local playerunitevent NW
local integer MW
set kt=CreateTrigger()
set BW=kt
set NW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set MW=0
loop
call TriggerRegisterPlayerUnitEvent(BW,Player(MW),NW,null)
set MW=MW+1
exitwhen MW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(kt,Condition(Ue))
call TriggerAddAction(kt,Ie)
set BW=null
set NW=null
endfunction
function xK takes nothing returns nothing
local trigger FK
local playerunitevent kK
local integer jK
set Ji=CreateTrigger()
set FK=Ji
set kK=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set jK=0
loop
call TriggerRegisterPlayerUnitEvent(FK,Player(jK),kK,null)
set jK=jK+1
exitwhen jK==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ji,Condition(nn))
call TriggerAddAction(Ji,dn)
set FK=null
set kK=null
endfunction
function xQ takes nothing returns nothing
local trigger FQ
local playerunitevent kQ
local integer jQ
set at=CreateTrigger()
set FQ=at
set kQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set jQ=0
loop
call TriggerRegisterPlayerUnitEvent(FQ,Player(jQ),kQ,null)
set jQ=jQ+1
exitwhen jQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(at,Condition(ee))
call TriggerAddAction(at,qe)
set FQ=null
set kQ=null
endfunction
function yP takes nothing returns nothing
local trigger OP
local playerunitevent lP
local integer bP
set oi=CreateTrigger()
set OP=oi
set lP=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set bP=0
loop
call TriggerRegisterPlayerUnitEvent(OP,Player(bP),lP,null)
set bP=bP+1
exitwhen bP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(oi,Condition(Nq))
call TriggerAddAction(oi,Mq)
set OP=null
set lP=null
endfunction
function yZ takes nothing returns nothing
local trigger OZ
local playerunitevent lZ
local integer bZ
set Ut=CreateTrigger()
set OZ=Ut
set lZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set bZ=0
loop
call TriggerRegisterPlayerUnitEvent(OZ,Player(bZ),lZ,null)
set bZ=bZ+1
exitwhen bZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ut,Condition(sq))
call TriggerAddAction(Ut,tq)
set OZ=null
set lZ=null
endfunction
function iX takes nothing returns nothing
call PT()
set Ts=CreateTrigger()
call TriggerAddAction(Ts,Hn)
call HT()
call rY()
call eY()
call FY()
call PY()
call VY()
call rG()
call qG()
call jG()
call XG()
call bg()
call jg()
call Xg()
call bh()
call jh()
call Xh()
call bF()
call fF()
call kF()
call CF()
call ek()
call Wk()
call uj()
call dj()
call Zj()
call ux()
call dx()
call Ix()
call iv()
set wt=CreateTrigger()
call TriggerAddAction(wt,Jn)
call Gv()
call Dv()
call Vv()
call sm()
call lm()
call nm()
call gm()
call mm()
call Pm()
call Xm()
call uQ()
call oQ()
call qQ()
call YQ()
call xQ()
call UQ()
call KQ()
call MQ()
call SW()
call pW()
call RW()
call kW()
call EW()
call HW()
call LW()
call wE()
call cE()
call eE()
call TE()
call jE()
call ZE()
call JE()
call NE()
call iZ()
call yZ()
call fZ()
call FZ()
call WZ()
call DZ()
call VZ()
call MZ()
call SU()
call pU()
call RU()
call kU()
call EU()
call HU()
call BU()
call tI()
call bI()
call dI()
call hI()
call QI()
call AI()
call CI()
call NI()
call iP()
call yP()
call fP()
call FP()
call WP()
call DP()
call VP()
call sA()
call lA()
call nA()
call gA()
call mA()
call PA()
call XA()
call uD()
call oD()
call qD()
call YD()
call hD()
call PD()
call KD()
call SH()
call RH()
call WH()
call VH()
call lJ()
call nJ()
call gJ()
call mJ()
call PJ()
call XJ()
call uK()
call oK()
call qK()
call YK()
call xK()
call UK()
call KK()
call MK()
call SL()
call pL()
call RL()
call kL()
call EL()
call HL()
call BL()
call tX()
endfunction
function mT takes nothing returns nothing
local player vT=Player(PLAYER_NEUTRAL_AGGRESSIVE)
call CreateUnit(vT,1747989297,-1600.0,-128.0,270.000)
call CreateUnit(vT,1747989297,-15040.0,10816.0,270.000)
call CreateUnit(vT,1747989297,-256.0,-2432.0,270.000)
call CreateUnit(vT,1747989297,-24320.0,3904.0,270.000)
call CreateUnit(vT,1747989297,-23552.0,-4544.0,270.000)
call CreateUnit(vT,1747989297,-23360.0,-64.0,270.000)
call CreateUnit(vT,1747989297,2176.0,-7744.0,270.000)
call CreateUnit(vT,1747989297,-6336.0,8000.0,270.000)
call CreateUnit(vT,1747989297,832.0,-5568.0,270.000)
call CreateUnit(vT,1747989297,-3648.0,1856.0,270.000)
call CreateUnit(vT,1747989042,-768.0,24384.0,270.000)
call CreateUnit(vT,1747989297,-26304.0,-8704.0,270.000)
call CreateUnit(vT,1747989297,2688.0,-3008.0,270.000)
call CreateUnit(vT,1747989297,-5568.0,-2752.0,270.000)
call CreateUnit(vT,1747989297,-3456.0,-2880.0,270.000)
call CreateUnit(vT,1747989297,-6464.0,1280.0,270.000)
call CreateUnit(vT,1747989297,-8064.0,3200.0,270.000)
call CreateUnit(vT,1747989297,-8768.0,1984.0,270.000)
call CreateUnit(vT,1747989297,-7104.0,-768.0,270.000)
call CreateUnit(vT,1747989297,-28544.0,0.0,270.000)
call CreateUnit(vT,1747989297,-27840.0,-2752.0,270.000)
call CreateUnit(vT,1747989297,-27008.0,2688.0,270.000)
call CreateUnit(vT,1747989297,-17024.0,512.0,270.000)
call CreateUnit(vT,1747989297,-21696.0,-4224.0,270.000)
call CreateUnit(vT,1747989042,17536.0,-9024.0,270.000)
call CreateUnit(vT,1747989297,10816.0,-7360.0,270.000)
call CreateUnit(vT,1747989297,12800.0,-6912.0,270.000)
call CreateUnit(vT,1747989297,15488.0,-7552.0,270.000)
call CreateUnit(vT,1747989297,19072.0,-7424.0,270.000)
call CreateUnit(vT,1747989297,15360.0,-5568.0,270.000)
call CreateUnit(vT,1747989297,17216.0,-8640.0,270.000)
call CreateUnit(vT,1747989297,16960.0,-16192.0,270.000)
call CreateUnit(vT,1747989297,6976.0,-6592.0,270.000)
call CreateUnit(vT,1747989297,24000.0,256.0,270.000)
call CreateUnit(vT,1747989297,-10688.0,-384.0,270.000)
call CreateUnit(vT,1747989297,13952.0,-11008.0,270.000)
call CreateUnit(vT,1747989297,-10944.0,-4608.0,270.000)
call CreateUnit(vT,1747989297,-21440.0,-8384.0,270.000)
call CreateUnit(vT,1747989297,17472.0,9472.0,270.000)
call CreateUnit(vT,1747989297,-16768.0,-8064.0,270.000)
call CreateUnit(vT,1747989297,-9920.0,-11264.0,270.000)
call CreateUnit(vT,1747989297,-7488.0,-16256.0,270.000)
call CreateUnit(vT,1747989297,448.0,-17600.0,270.000)
call CreateUnit(vT,1747989297,11008.0,-18496.0,270.000)
call CreateUnit(vT,1747989297,13248.0,-17856.0,270.000)
call CreateUnit(vT,1747989297,12288.0,-20864.0,270.000)
call CreateUnit(vT,1747989297,-11456.0,11008.0,270.000)
call CreateUnit(vT,1747989297,-8640.0,7104.0,270.000)
call CreateUnit(vT,1747989297,-7360.0,17088.0,270.000)
call CreateUnit(vT,1747989297,-5120.0,14528.0,270.000)
call CreateUnit(vT,1747989297,15488.0,-26816.0,270.000)
call CreateUnit(vT,1747989297,-9600.0,13120.0,270.000)
call CreateUnit(vT,1747989297,-11456.0,14528.0,270.000)
call CreateUnit(vT,1747989297,-12544.0,16320.0,270.000)
call CreateUnit(vT,1747989297,-7680.0,22272.0,270.000)
call CreateUnit(vT,1747989297,-6272.0,21376.0,270.000)
call CreateUnit(vT,1747989297,-4992.0,21888.0,270.000)
call CreateUnit(vT,1747989297,-1280.0,23936.0,270.000)
call CreateUnit(vT,1747989297,-3328.0,23232.0,270.000)
call CreateUnit(vT,1747989297,-2560.0,26368.0,270.000)
call CreateUnit(vT,1747989297,-6528.0,28288.0,270.000)
call CreateUnit(vT,1747989297,-9856.0,28416.0,270.000)
call CreateUnit(vT,1747989297,-13376.0,15104.0,270.000)
call CreateUnit(vT,1747989297,-10688.0,3520.0,270.000)
call CreateUnit(vT,1747989297,-9856.0,5440.0,270.000)
call CreateUnit(vT,1747989297,-6720.0,4096.0,270.000)
call CreateUnit(vT,1747989297,-13632.0,2368.0,270.000)
call CreateUnit(vT,1747989297,-10496.0,17728.0,270.000)
call CreateUnit(vT,1747989297,-7616.0,11200.0,270.000)
call CreateUnit(vT,1747989297,-18688.0,5760.0,270.000)
call CreateUnit(vT,1747989297,-25024.0,-3008.0,270.000)
call CreateUnit(vT,1747989297,-20096.0,1408.0,270.000)
call CreateUnit(vT,1747989297,-7040.0,-7808.0,270.000)
call CreateUnit(vT,1747989297,-5376.0,-9216.0,270.000)
call CreateUnit(vT,1747989297,24896.0,-27456.0,270.000)
call CreateUnit(vT,1747989297,-20352.0,12224.0,270.000)
call CreateUnit(vT,1747989297,-13568.0,5184.0,270.000)
call CreateUnit(vT,1747989297,-5120.0,24576.0,270.000)
call CreateUnit(vT,1747989297,-1856.0,27776.0,270.000)
call CreateUnit(vT,1747989297,-16704.0,24192.0,270.000)
call CreateUnit(vT,1747989297,-15936.0,17088.0,270.000)
call CreateUnit(vT,1747989297,-17792.0,16064.0,270.000)
call CreateUnit(vT,1747989297,-20224.0,21632.0,270.000)
call CreateUnit(vT,1747989297,-22400.0,19968.0,270.000)
call CreateUnit(vT,1747989297,-15872.0,20544.0,270.000)
call CreateUnit(vT,1747989297,-19776.0,16512.0,270.000)
call CreateUnit(vT,1747989297,-17088.0,12672.0,270.000)
call CreateUnit(vT,1747989297,-18560.0,19712.0,270.000)
call CreateUnit(vT,1747989297,-15680.0,26112.0,270.000)
call CreateUnit(vT,1747989297,-17088.0,26816.0,270.000)
call CreateUnit(vT,1747989297,-16704.0,3584.0,270.000)
call CreateUnit(vT,1747989297,-11456.0,7232.0,270.000)
call CreateUnit(vT,1747989297,-18176.0,10816.0,270.000)
call CreateUnit(vT,1747989297,-16000.0,6016.0,270.000)
call CreateUnit(vT,1747989297,-8896.0,26688.0,270.000)
call CreateUnit(vT,1747989297,9216.0,-4416.0,270.000)
call CreateUnit(vT,1747989297,6656.0,-4480.0,270.000)
call CreateUnit(vT,1747989297,5184.0,-1856.0,270.000)
call CreateUnit(vT,1747989297,18624.0,-448.0,270.000)
call CreateUnit(vT,1747989297,11008.0,-1984.0,270.000)
call CreateUnit(vT,1747989297,14144.0,-128.0,270.000)
call CreateUnit(vT,1747989297,8384.0,-10368.0,270.000)
call CreateUnit(vT,1747989297,5376.0,-12224.0,270.000)
call CreateUnit(vT,1747989297,3392.0,-7296.0,270.000)
call CreateUnit(vT,1747989297,12672.0,-3904.0,270.000)
call CreateUnit(vT,1747989297,27008.0,-11520.0,270.000)
call CreateUnit(vT,1747989297,-25216.0,1472.0,270.000)
call CreateUnit(vT,1747989297,23552.0,11072.0,270.000)
call CreateUnit(vT,1747989297,-20736.0,-2112.0,270.000)
call CreateUnit(vT,1747989297,-22592.0,2560.0,270.000)
call CreateUnit(vT,1747989297,-20864.0,3136.0,270.000)
call CreateUnit(vT,1747989297,-17280.0,-3136.0,270.000)
call CreateUnit(vT,1747989297,-3584.0,4608.0,270.000)
call CreateUnit(vT,1747989297,1536.0,29440.0,270.000)
call CreateUnit(vT,1747989297,-23104.0,-8832.0,270.000)
call CreateUnit(vT,1747989297,1216.0,-960.0,270.000)
call CreateUnit(vT,1747989297,-13312.0,-8512.0,270.000)
call CreateUnit(vT,1747989297,26240.0,-2688.0,270.000)
call CreateUnit(vT,1747989043,-7872.0,17536.0,270.000)
call CreateUnit(vT,1747989297,-13568.0,12160.0,270.000)
call CreateUnit(vT,1747989297,-13696.0,8064.0,270.000)
call CreateUnit(vT,1747989297,27648.0,-5824.0,270.000)
call CreateUnit(vT,1747989297,-4544.0,11648.0,270.000)
call CreateUnit(vT,1747989297,28992.0,-3200.0,270.000)
call CreateUnit(vT,1747989297,-3072.0,8320.0,270.000)
call CreateUnit(vT,1747989297,-384.0,8512.0,270.000)
call CreateUnit(vT,1747989297,28224.0,2752.0,270.000)
call CreateUnit(vT,1747989297,-4992.0,17280.0,270.000)
call CreateUnit(vT,1747989297,64.0,12608.0,270.000)
call CreateUnit(vT,1747989297,-2112.0,13696.0,270.000)
call CreateUnit(vT,1747989297,4160.0,5376.0,270.000)
call CreateUnit(vT,1747989297,4224.0,3904.0,270.000)
call CreateUnit(vT,1747989297,7232.0,2240.0,270.000)
call CreateUnit(vT,1747989297,-384.0,3072.0,270.000)
call CreateUnit(vT,1747989297,-8128.0,19968.0,270.000)
call CreateUnit(vT,1747989297,3072.0,192.0,270.000)
call CreateUnit(vT,1747989297,832.0,15872.0,270.000)
call CreateUnit(vT,1747989297,-2304.0,16064.0,270.000)
call CreateUnit(vT,1747989297,4416.0,19648.0,270.000)
call CreateUnit(vT,1747989297,1792.0,6976.0,270.000)
call CreateUnit(vT,1747989297,5888.0,24960.0,270.000)
call CreateUnit(vT,1747989297,-1792.0,19200.0,270.000)
call CreateUnit(vT,1747989297,3008.0,22784.0,270.000)
call CreateUnit(vT,1747989297,3200.0,18240.0,270.000)
call CreateUnit(vT,1747989297,-3712.0,-6528.0,270.000)
call CreateUnit(vT,1747989297,-17216.0,22208.0,270.000)
call CreateUnit(vT,1747989297,-18880.0,17920.0,270.000)
call CreateUnit(vT,1747989297,-17280.0,18304.0,270.000)
call CreateUnit(vT,1747989297,-22272.0,22400.0,270.000)
call CreateUnit(vT,1747989297,-10496.0,-9152.0,270.000)
call CreateUnit(vT,1747989297,13248.0,5120.0,270.000)
call CreateUnit(vT,1747989297,7936.0,-2368.0,270.000)
call CreateUnit(vT,1747989297,3520.0,27008.0,270.000)
call CreateUnit(vT,1747989297,8832.0,26368.0,270.000)
call CreateUnit(vT,1747989297,6848.0,21440.0,270.000)
call CreateUnit(vT,1747989297,6144.0,18560.0,270.000)
call CreateUnit(vT,1747989297,3904.0,11072.0,270.000)
call CreateUnit(vT,1747989297,8512.0,12352.0,270.000)
call CreateUnit(vT,1747989297,9280.0,20032.0,270.000)
call CreateUnit(vT,1747989297,1216.0,11008.0,270.000)
call CreateUnit(vT,1747989044,-15680.0,11200.0,270.000)
call CreateUnit(vT,1747989044,-15104.0,17408.0,270.000)
call CreateUnit(vT,1747989045,-1728.0,28608.0,270.000)
call CreateUnit(vT,1747989043,-18304.0,18112.0,270.000)
call CreateUnit(vT,1747989044,-9600.0,13888.0,270.000)
call CreateUnit(vT,1747989297,384.0,19456.0,270.000)
call CreateUnit(vT,1747989044,4864.0,5952.0,270.000)
call CreateUnit(vT,1747989044,8000.0,-1664.0,270.000)
call CreateUnit(vT,1747989044,9280.0,-3008.0,270.000)
call CreateUnit(vT,1747989045,-21056.0,21056.0,270.000)
call CreateUnit(vT,1747989045,-19648.0,12224.0,270.000)
call CreateUnit(vT,1747989045,17984.0,-13120.0,270.000)
call CreateUnit(vT,1747989042,-28544.0,704.0,270.000)
call CreateUnit(vT,1747989045,-9344.0,7168.0,270.000)
call CreateUnit(vT,1747989043,-6336.0,8576.0,270.000)
call CreateUnit(vT,1747989045,-15616.0,21248.0,270.000)
call CreateUnit(vT,1747989045,-16640.0,1024.0,270.000)
call CreateUnit(vT,1747989045,13760.0,-11584.0,270.000)
call CreateUnit(vT,1747989042,-11328.0,3712.0,270.000)
call CreateUnit(vT,1747989042,-16768.0,25920.0,270.000)
call CreateUnit(vT,1747989045,-19200.0,28352.0,270.000)
call CreateUnit(vT,1747989043,3456.0,11584.0,270.000)
call CreateUnit(vT,1747989044,-24640.0,4352.0,270.000)
call CreateUnit(vT,1747989044,-23232.0,-5120.0,270.000)
call CreateUnit(vT,1747989042,-23424.0,768.0,270.000)
call CreateUnit(vT,1747989045,-15936.0,-2688.0,270.000)
call CreateUnit(vT,1747989045,-10752.0,-3456.0,270.000)
call CreateUnit(vT,1747989044,-7552.0,4416.0,270.000)
call CreateUnit(vT,1747989045,-20160.0,-1600.0,270.000)
call CreateUnit(vT,1747989045,-21824.0,2560.0,270.000)
call CreateUnit(vT,1747989045,11392.0,-7104.0,270.000)
call CreateUnit(vT,1747989042,4352.0,20224.0,270.000)
call CreateUnit(vT,1747989044,-15360.0,4992.0,270.000)
call CreateUnit(vT,1747989042,-896.0,3392.0,270.000)
call CreateUnit(vT,1747989045,-6528.0,-832.0,270.000)
call CreateUnit(vT,1747989043,-4928.0,-3264.0,270.000)
call CreateUnit(vT,1747989042,-6144.0,-8192.0,270.000)
call CreateUnit(vT,1747989043,23424.0,640.0,270.000)
call CreateUnit(vT,1747989043,-6976.0,1344.0,270.000)
call CreateUnit(vT,1747989043,4352.0,128.0,270.000)
call CreateUnit(vT,1747989297,17472.0,19648.0,270.000)
call CreateUnit(vT,1747989044,-7872.0,22784.0,270.000)
call CreateUnit(vT,1747989297,20864.0,21504.0,270.000)
call CreateUnit(vT,1747989044,-9152.0,28480.0,270.000)
call CreateUnit(vT,1747989042,-27712.0,-9536.0,270.000)
call CreateUnit(vT,1747989042,4800.0,-12480.0,270.000)
call CreateUnit(vT,1747989045,7232.0,-11328.0,270.000)
call CreateUnit(vT,1747989045,1792.0,-8064.0,270.000)
call CreateUnit(vT,1747989297,-1600.0,5952.0,270.000)
call CreateUnit(vT,1747989043,-128.0,-1792.0,270.000)
call CreateUnit(vT,1747989042,-3392.0,8640.0,270.000)
call CreateUnit(vT,1747989044,-1856.0,16576.0,270.000)
call CreateUnit(vT,1747989043,-13888.0,14784.0,270.000)
call CreateUnit(vT,1747989297,-29568.0,-9792.0,270.000)
call CreateUnit(vT,1747989043,-9088.0,26240.0,270.000)
call CreateUnit(vT,1747989045,-5440.0,23808.0,270.000)
call CreateUnit(vT,1747989045,2176.0,30080.0,270.000)
call CreateUnit(vT,1747989043,1984.0,6464.0,270.000)
call CreateUnit(vT,1747989297,-26304.0,-1408.0,270.000)
call CreateUnit(vT,1747989043,448.0,13056.0,270.000)
call CreateUnit(vT,1747989045,3072.0,26752.0,270.000)
call CreateUnit(vT,1747989043,6656.0,18880.0,270.000)
call CreateUnit(vT,1747989043,3264.0,-3712.0,270.000)
call CreateUnit(vT,1747989297,15872.0,5760.0,270.000)
call CreateUnit(vT,1747989043,6528.0,22080.0,270.000)
call CreateUnit(vT,1747989044,8896.0,27008.0,270.000)
call CreateUnit(vT,1747989297,18496.0,-17280.0,270.000)
call CreateUnit(vT,1747989297,11392.0,7872.0,270.000)
call CreateUnit(vT,1747989297,12672.0,11328.0,270.000)
call CreateUnit(vT,1747989297,6016.0,12416.0,270.000)
call CreateUnit(vT,1747989297,7104.0,7808.0,270.000)
call CreateUnit(vT,1747989297,20864.0,2688.0,270.000)
call CreateUnit(vT,1747989297,24000.0,2560.0,270.000)
call CreateUnit(vT,1747989297,19648.0,11328.0,270.000)
call CreateUnit(vT,1747989297,11584.0,16960.0,270.000)
call CreateUnit(vT,1747989297,18496.0,-13248.0,270.000)
call CreateUnit(vT,1747989297,17216.0,-11456.0,270.000)
call CreateUnit(vT,1747989297,25088.0,-8320.0,270.000)
call CreateUnit(vT,1747989297,15680.0,-17536.0,270.000)
call CreateUnit(vT,1747989297,16640.0,-14208.0,270.000)
call CreateUnit(vT,1747989297,17280.0,-19584.0,270.000)
call CreateUnit(vT,1747989297,22912.0,-10240.0,270.000)
call CreateUnit(vT,1747989297,20864.0,-23040.0,270.000)
call CreateUnit(vT,1747989044,13120.0,-21696.0,270.000)
call CreateUnit(vT,1747989297,20096.0,-5760.0,270.000)
call CreateUnit(vT,1747989297,18816.0,-3776.0,270.000)
call CreateUnit(vT,1747989042,14464.0,-26432.0,270.000)
call CreateUnit(vT,1747989044,23808.0,-27776.0,270.000)
call CreateUnit(vT,1747989042,11776.0,-18688.0,270.000)
call CreateUnit(vT,1747989043,256.0,-18048.0,270.000)
call CreateUnit(vT,1747989045,-16192.0,-8192.0,270.000)
call CreateUnit(vT,1747989045,-11520.0,-10944.0,270.000)
call CreateUnit(vT,1747989045,16512.0,-19968.0,270.000)
call CreateUnit(vT,1747989045,20416.0,-22272.0,270.000)
call CreateUnit(vT,1747989044,28800.0,-11904.0,270.000)
call CreateUnit(vT,1747989297,15040.0,23104.0,270.000)
call CreateUnit(vT,1747989044,8128.0,12928.0,270.000)
call CreateUnit(vT,1747989044,16896.0,-15744.0,270.000)
call CreateUnit(vT,1747989042,17984.0,-640.0,270.000)
call CreateUnit(vT,1747989045,20608.0,3136.0,270.000)
call CreateUnit(vT,1747989045,7232.0,-5120.0,270.000)
call CreateUnit(vT,1747989045,25984.0,-8128.0,270.000)
call CreateUnit(vT,1747989045,20544.0,-5440.0,270.000)
call CreateUnit(vT,1747989045,11968.0,17856.0,270.000)
call CreateUnit(vT,1747989045,10048.0,20032.0,270.000)
call CreateUnit(vT,1747989043,15296.0,-7232.0,270.000)
call CreateUnit(vT,1747989043,13056.0,11776.0,270.000)
call CreateUnit(vT,1747989043,15744.0,23488.0,270.000)
call CreateUnit(vT,1747989043,17984.0,9280.0,270.000)
set vT=null
endfunction
function AB takes nothing returns boolean
local trigger UB=CreateTrigger()
local trigger ZB
local integer IB
local integer PB
call TriggerAddCondition(UB,Condition(Uf))
call TriggerAddAction(UB,If)
set ZB=UB
set IB=0
set PB=23
loop
exitwhen IB>PB
call TriggerRegisterPlayerChatEvent(ZB,wo[IB],"-",false)
set IB=IB+1
endloop
set ZB=null
set UB=null
return true
endfunction
function AD takes nothing returns nothing
call UnitRemoveAbility(GetTriggerUnit(),1093677402)
endfunction
function AK takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function AQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988812,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988559,0)
endfunction
function AT takes nothing returns nothing
call SetFloatGameState(GAME_STATE_TIME_OF_DAY,bj_MELEE_STARTING_TOD)
call MeleeStartingHeroLimit()
endfunction
function B9 takes integer V9 returns string
if V9==0 then
return "|cffADADADtrace|r"
elseif V9==1 then
return "|cff2685DCdebug|r"
elseif V9==2 then
return "|cffFFCC00info|r"
elseif V9==3 then
return "|cffF47E3Ewarning|r"
elseif V9==4 then
return "|cffFB2700error|r"
endif
return "?"
endfunction
function l1 takes string w1,string u1 returns nothing
local integer r1
local integer s1
local integer t1
local string i1
local integer S1
local integer c1
local string o1
local string O1
set Cb[Xb]=u1
set Xb=Xb+1
set r1=StringHash(w1)
if HaveSavedInteger(tc,-1,r1) then
if LoadInteger(tc,-1,r1)+60<ec then
set o1=w1
set u1=""
set s1=Xb
set t1=0
loop
set s1=s1-1
set t1=t1+1
exitwhen t1>20 or s1<0
set u1=u1+"\n   "+Cb[s1]
endloop
call DisplayTimedTextToPlayer(uo,0.,0.,45.,B9(4)+" - "+o1+u1)
call SaveInteger(tc,-1,r1,R2I(ec))
call SaveBoolean(tc,-1,r1,false)
elseif HaveSavedBoolean(tc,-1,r1) then
if not LoadBoolean(tc,-1,r1) then
call DisplayTimedTextToPlayer(uo,0.,0.,45.,B9(4)+" - "+"|cffFF3A29Excessive repeating errors are being omitted")
call SaveBoolean(tc,-1,r1,true)
endif
else
call DisplayTimedTextToPlayer(uo,0.,0.,45.,B9(4)+" - "+"|cffFF3A29Excessive repeating errors are being omitted")
call SaveBoolean(tc,-1,r1,true)
endif
else
call SaveInteger(tc,-1,r1,R2I(ec))
set O1="Message: "+w1
set i1=""
set S1=Xb
set c1=0
loop
set S1=S1-1
set c1=c1+1
exitwhen c1>20 or S1<0
set i1=i1+"\n   "+Cb[S1]
endloop
call DisplayTimedTextToPlayer(uo,0.,0.,45.,B9(4)+" - "+O1+i1)
endif
call I2S(1/0)
set Xb=Xb-1
endfunction
function G0w takes playerunitevent e0w,code q0w,code a0w,code n0w returns nothing
local integer d0w=GetHandleId(e0w)
local integer f0w
local filterfunc R0w
local trigger T0w
local player Y0w
if yo[d0w]==null then
set yo[d0w]=CreateTrigger()
set f0w=bj_MAX_PLAYER_SLOTS-1
loop
exitwhen f0w<0
set T0w=yo[d0w]
set Y0w=wo[f0w]
if q0w!=null then
set R0w=Filter(q0w)
else
set R0w=null
endif
call TriggerRegisterPlayerUnitEvent(T0w,Y0w,e0w,R0w)
set f0w=f0w-1
endloop
endif
if a0w!=null then
call TriggerAddCondition(yo[d0w],Filter(a0w))
endif
if n0w!=null then
call TriggerAddAction(yo[d0w],n0w)
endif
set R0w=null
set T0w=null
set Y0w=null
endfunction
function nV takes eventid iV,string SV returns integer
local integer cV
local integer oV
local integer OV
local trigger lV
local integer bV
local integer yV
local integer pV
local integer eV
local boolean qV
local boolean aV
set Cb[Xb]=SV
set Xb=Xb+1
set cV=GetHandleId(iV)
set mS=mS+1
set vS[cV]=mS
set bV=GetHandleId(iV)
if (bV>=18 and bV<=51)or(bV>=269 and bV<=277) then
call G0w(ConvertPlayerUnitEvent(cV),null,Ef,null)
else
if iV!=EVENT_UNIT_DAMAGED and iV!=EVENT_PLAYER_LEAVE and iV!=FS then
set yV=GetHandleId(iV)
set qV=yV<261 or yV>268 and yV!=17
else
set qV=false
endif
if qV then
set pV=GetHandleId(iV)
set aV=pV<305 or pV>307
else
set aV=false
endif
if aV then
call l1("registering handleid: "+I2S(cV)+" non-playerunitevent. Except EVENT_UNIT_DAMAGED and EVENT_PLAYER_LEAVE these are not supported right now.","when calling error in ClosureEvents, line 243")
endif
endif
set eV=GetHandleId(iV)
if eV>=305 and eV<=307 and(not US) then
set US=true
set oV=0
set OV=bj_MAX_PLAYERS-1
loop
exitwhen oV>OV
set lV=xS
call TriggerRegisterPlayerEvent(lV,wo[oV],EVENT_PLAYER_MOUSE_UP)
call TriggerRegisterPlayerEvent(lV,wo[oV],EVENT_PLAYER_MOUSE_DOWN)
call TriggerRegisterPlayerEvent(lV,wo[oV],EVENT_PLAYER_MOUSE_MOVE)
set oV=oV+1
endloop
endif
set Xb=Xb-1
set lV=null
return mS
endfunction
function xX takes string hX returns boolean
local playerunitevent FX
local integer kX
local integer jX
set Cb[Xb]=hX
set Xb=Xb+1
set FX=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set Cb[Xb]="when calling alloc_CityBuilded_EventListener_line9 in CityBuilded, line 9"
set Xb=Xb+1
if tO==0 then
if iO<32768 then
set iO=iO+1
set kX=iO
set SO[kX]=663
else
call l1("Out of memory: Could not create CityBuilded_EventListener_line9.","when calling error in CityBuilded, line 9")
set kX=0
endif
else
set tO=tO-1
set kX=sO[tO]
set SO[kX]=663
endif
set Xb=Xb-1
set ub[kX]=0
set rb[kX]=0
set sb[kX]=0
set Cb[Xb]="when calling add in CityBuilded, line 9"
set Xb=Xb+1
set Cb[Xb]="when calling toIntId in ClosureEvents, line 112"
set Xb=Xb+1
set jX=vS[GetHandleId(FX)]
if jX==0 then
set jX=nV(FX,"when calling registerEventId in ClosureEvents, line 229")
endif
set Xb=Xb-1
set ub[kX]=jX
if ES[ub[kX]]!=0 then
set sb[ES[ub[kX]]]=kX
set rb[kX]=ES[ub[kX]]
endif
set ES[ub[kX]]=kX
set Xb=Xb-1-1
set FX=null
return true
endfunction
function AYw takes nothing returns boolean
set Xb=0
return xX("CityBuilded, line 1")
endfunction
function BA takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990599,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990600,0)
endfunction
function VG takes nothing returns boolean
if IsUnitType(GetEnumUnit(),UNIT_TYPE_STRUCTURE)!=false then
return false
endif
return true
endfunction
function BG takes nothing returns nothing
if VG() then
call SetUnitPositionLoc(GetEnumUnit(),c)
endif
endfunction
function BI takes nothing returns nothing
set s=bj_FORCE_ALL_PLAYERS
call ForForce(s,Xq)
endfunction
function BJ takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function BY takes nothing returns boolean
if GetSpellAbilityId()!=1093677620 then
return false
endif
return true
endfunction
function W1 takes string F1 returns boolean
local playerunitevent k1
local playerunitevent j1
local integer x1
local integer v1
local integer m1
local integer Q1
set Cb[Xb]=F1
set Xb=Xb+1
set k1=EVENT_PLAYER_UNIT_DEATH
set Cb[Xb]="when calling alloc_LimitEncampments_EventListener_line8 in LimitEncampments, line 8"
set Xb=Xb+1
if tO==0 then
if iO<32768 then
set iO=iO+1
set x1=iO
set SO[x1]=670
else
call l1("Out of memory: Could not create LimitEncampments_EventListener_line8.","when calling error in LimitEncampments, line 8")
set x1=0
endif
else
set tO=tO-1
set x1=sO[tO]
set SO[x1]=670
endif
set Xb=Xb-1
set ub[x1]=0
set rb[x1]=0
set sb[x1]=0
set Cb[Xb]="when calling add in LimitEncampments, line 8"
set Xb=Xb+1
set Cb[Xb]="when calling toIntId in ClosureEvents, line 112"
set Xb=Xb+1
set v1=vS[GetHandleId(k1)]
if v1==0 then
set v1=nV(k1,"when calling registerEventId in ClosureEvents, line 229")
endif
set Xb=Xb-1
set ub[x1]=v1
if ES[ub[x1]]!=0 then
set sb[ES[ub[x1]]]=x1
set rb[x1]=ES[ub[x1]]
endif
set ES[ub[x1]]=x1
set Xb=Xb-1
set j1=EVENT_PLAYER_UNIT_CONSTRUCT_START
set Cb[Xb]="when calling alloc_LimitEncampments_EventListener_line12 in LimitEncampments, line 12"
set Xb=Xb+1
if tO==0 then
if iO<32768 then
set iO=iO+1
set m1=iO
set SO[m1]=669
else
call l1("Out of memory: Could not create LimitEncampments_EventListener_line12.","when calling error in LimitEncampments, line 12")
set m1=0
endif
else
set tO=tO-1
set m1=sO[tO]
set SO[m1]=669
endif
set Xb=Xb-1
set ub[m1]=0
set rb[m1]=0
set sb[m1]=0
set Cb[Xb]="when calling add in LimitEncampments, line 12"
set Xb=Xb+1
set Cb[Xb]="when calling toIntId in ClosureEvents, line 112"
set Xb=Xb+1
set Q1=vS[GetHandleId(j1)]
if Q1==0 then
set Q1=nV(j1,"when calling registerEventId in ClosureEvents, line 229")
endif
set Xb=Xb-1
set ub[m1]=Q1
if ES[ub[m1]]!=0 then
set sb[ES[ub[m1]]]=m1
set rb[m1]=ES[ub[m1]]
endif
set ES[ub[m1]]=m1
set Xb=Xb-1-1
set k1=null
set j1=null
return true
endfunction
function BYw takes nothing returns boolean
set Xb=0
return W1("LimitEncampments, line 1")
endfunction
function BZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989570,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989556,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989559,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989557,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989560,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989573,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989574,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651841,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651833,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651832,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989582,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990097,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989812,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990098,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990099,0)
endfunction
function Vg takes nothing returns boolean
if IsUnitType(GetEnumUnit(),UNIT_TYPE_STRUCTURE)!=false then
return false
endif
return true
endfunction
function Bg takes nothing returns nothing
if Vg() then
call SetUnitPositionLoc(GetEnumUnit(),c)
endif
endfunction
function Vh takes nothing returns boolean
if IsUnitType(GetEnumUnit(),UNIT_TYPE_STRUCTURE)!=false then
return false
endif
return true
endfunction
function Bh takes nothing returns nothing
if Vh() then
call SetUnitPositionLoc(GetEnumUnit(),S)
endif
endfunction
function Bj takes nothing returns nothing
local player Ij=GetOwningPlayer(GetKillingUnit())
local playerstate Pj=PLAYER_STATE_RESOURCE_GOLD
local playerstate Aj
local playerstate Dj
local player Hj
local force Jj
local location Kj
local real Lj
local real Xj
local player Cj
local force Vj
if Pj==PLAYER_STATE_RESOURCE_GOLD then
set Aj=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(Ij,Aj,GetPlayerState(Ij,Aj)+125)
elseif Pj==PLAYER_STATE_RESOURCE_LUMBER then
set Dj=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(Ij,Dj,GetPlayerState(Ij,Dj)+125)
endif
call SetPlayerState(Ij,Pj,GetPlayerState(Ij,Pj)+125)
set Hj=GetOwningPlayer(GetKillingUnit())
set Jj=CreateForce()
call ForceAddPlayer(Jj,Hj)
if IsPlayerInForce(GetLocalPlayer(),Jj) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_091")
endif
set y=GetUnitLoc(GetDyingUnit())
set Cj=GetOwningPlayer(GetDyingUnit())
set Vj=CreateForce()
call ForceAddPlayer(Vj,Cj)
set Kj=y
set Lj=GetLocationX(Kj)
set Xj=GetLocationY(Kj)
if IsPlayerInForce(GetLocalPlayer(),Vj) then
call PingMinimap(Lj,Xj,2.00)
endif
call RemoveLocation(y)
set Ij=null
set Pj=null
set Aj=null
set Dj=null
set Hj=null
set Jj=null
set Kj=null
set Cj=null
set Vj=null
endfunction
function Bk takes nothing returns nothing
local player Ik=GetOwningPlayer(GetSpellTargetUnit())
local playerstate Pk=PLAYER_STATE_RESOURCE_GOLD
local playerstate Ak
local playerstate Dk
local player Hk
local force Jk
local location Kk
local real Lk
local real Xk
local player Ck
local force Vk
if Pk==PLAYER_STATE_RESOURCE_GOLD then
set Ak=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(Ik,Ak,GetPlayerState(Ik,Ak)+500)
elseif Pk==PLAYER_STATE_RESOURCE_LUMBER then
set Dk=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(Ik,Dk,GetPlayerState(Ik,Dk)+500)
endif
call SetPlayerState(Ik,Pk,GetPlayerState(Ik,Pk)+500)
call RemoveUnit(GetSpellAbilityUnit())
set Hk=GetOwningPlayer(GetSpellTargetUnit())
set Jk=CreateForce()
call ForceAddPlayer(Jk,Hk)
if IsPlayerInForce(GetLocalPlayer(),Jk) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_1231")
endif
set y=GetUnitLoc(GetSpellTargetUnit())
set Ck=GetOwningPlayer(GetSpellTargetUnit())
set Vk=CreateForce()
call ForceAddPlayer(Vk,Ck)
set Kk=y
set Lk=GetLocationX(Kk)
set Xk=GetLocationY(Kk)
if IsPlayerInForce(GetLocalPlayer(),Vk) then
call PingMinimap(Lk,Xk,2.00)
endif
call RemoveLocation(y)
set Ik=null
set Pk=null
set Ak=null
set Dk=null
set Hk=null
set Jk=null
set Kk=null
set Ck=null
set Vk=null
endfunction
function Bm takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989066,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988551,0)
endfunction
function C9 takes nothing returns boolean
return true
endfunction
function CG takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747990091 then
return false
endif
return true
endfunction
function CK takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function CQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989072,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989073,0)
endfunction
function CV takes nothing returns boolean
set IS=CreateGroup()
set DS=2147483647
set JS=Filter(Zf)
return true
endfunction
function XW takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function CW takes nothing returns boolean
if not XW() then
return false
endif
return true
endfunction
function Uww takes timer mww,integer Qww,string Www returns nothing
local integer Eww
local integer Zww
set Cb[Xb]=Www
set Xb=Xb+1
set Eww=Uo
set Zww=GetHandleId(mww)
set Cb[Xb]="when calling saveInt in TimerUtils, line 17"
set Xb=Xb+1
if AO[Eww]==0 then
if Eww==0 then
call l1("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call l1("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Wo,Eww,Zww,Qww)
set Xb=Xb-1-1
endfunction
function Bnw takes integer Lnw,timer Xnw,real Cnw,string Vnw returns nothing
set Cb[Xb]=Vnw
set Xb=Xb+1
if hO[Lnw]==0 then
if Lnw==0 then
call l1("Nullpointer exception when calling CallbackPeriodic.start","when calling error in ClosureTimers, line 132")
else
call l1("Called CallbackPeriodic.start on invalid object.","when calling error in ClosureTimers, line 132")
endif
endif
set Cb[Xb]="when calling start in ClosureTimers, line 132"
set Xb=Xb+1
call Uww(Xnw,Lnw,"when calling setData in ClosureTimers, line 134")
call TimerStart(Xnw,Cnw,true,tR)
set Xb=Xb-1-1
endfunction
function Xww takes string Kww returns timer
local timer Lww
set Cb[Xb]=Kww
set Xb=Xb+1
if Zo>0 then
set Zo=Zo-1
call Uww(Eo[Zo],0,"when calling setData in TimerUtils, line 29")
set Xb=Xb-1
set Lww=null
return Eo[Zo]
else
set Lww=CreateTimer()
call Uww(Lww,0,"when calling setData in TimerUtils, line 32")
set Xb=Xb-1
set oR=Lww
set Lww=null
return oR
endif
endfunction
function CN takes string KN returns boolean
local integer LN
local timer XN
set Cb[Xb]=KN
set Xb=Xb+1
set Cb[Xb]="when calling alloc_DateTime_CallbackPeriodic_line31 in DateTime, line 31"
set Xb=Xb+1
if GO==0 then
if gO<32768 then
set gO=gO+1
set LN=gO
set hO[LN]=634
else
call l1("Out of memory: Could not create DateTime_CallbackPeriodic_line31.","when calling error in DateTime, line 31")
set LN=0
endif
else
set GO=GO-1
set LN=YO[GO]
set hO[LN]=634
endif
set Xb=Xb-1
set Ob[LN]=120.0
set Cb[Xb]="when calling doPeriodically in DateTime, line 31"
set Xb=Xb+1
set XN=Xww("when calling getTimer in ClosureTimers, line 57")
set Cb[Xb]="when calling doPeriodically in ClosureTimers, line 57"
set Xb=Xb+1
call Bnw(LN,XN,1.0,"when calling start in ClosureTimers, line 45")
set Xb=Xb-1-1-1
set XN=null
return true
endfunction
function CYw takes nothing returns boolean
set Xb=0
return CN("DateTime, line 1")
endfunction
function Cg takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989077 then
return false
endif
return true
endfunction
function Ch takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747990071 then
return false
endif
return true
endfunction
function AA takes nothing returns boolean
if GetResearched()!=1378890054 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890054,true)!=2 then
return false
endif
return true
endfunction
function DA takes nothing returns boolean
if not AA() then
return false
endif
return true
endfunction
function AJ takes nothing returns boolean
if GetUnitTypeId(GetConstructedStructure())!=1747990351 then
return false
endif
return true
endfunction
function DJ takes nothing returns boolean
if not AJ() then
return false
endif
return true
endfunction
function DT takes nothing returns nothing
call CreateQuestBJ(bj_QUESTTYPE_OPT_DISCOVERED,"TRIGSTR_097","TRIGSTR_098","ReplaceableTextures\\CommandButtons\\BTNSteelMelee.blp")
call CreateQuestBJ(bj_QUESTTYPE_OPT_DISCOVERED,"TRIGSTR_103","TRIGSTR_104","ReplaceableTextures\\WorldEditUI\\Doodad-Cinematic.blp")
call CreateQuestBJ(bj_QUESTTYPE_OPT_DISCOVERED,"TRIGSTR_2667","TRIGSTR_2668","ReplaceableTextures\\WorldEditUI\\Editor-MultipleUnits.blp")
endfunction
function AY takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1966092336 then
return false
endif
if GetSpellAbilityId()!=1093677906 then
return false
endif
if GetOwningPlayer(GetSpellTargetUnit())==Player(PLAYER_NEUTRAL_AGGRESSIVE) then
return false
endif
if IsUnitType(GetSpellTargetUnit(),UNIT_TYPE_STRUCTURE)!=true then
return false
endif
return true
endfunction
function DY takes nothing returns boolean
if not AY() then
return false
endif
return true
endfunction
function CX takes string vX returns boolean
local trigger mX
local playerunitevent QX
local playerunitevent WX
local integer EX
local integer ZX
local player UX
local location IX
local real PX
local integer AX
local integer DX
local trigger HX
local playerunitevent JX
local integer KX
local integer LX
local integer XX
set Cb[Xb]=vX
set Xb=Xb+1
if gc then
set EX=5
set ZX=1747988553
set UX=wo[0]
set IX=Location(-3000.0,1700.0)
set PX=0.
call GroupClear(bj_lastCreatedGroup)
loop
set EX=EX-1
exitwhen EX<0
call CreateUnitAtLocSaveLast(UX,ZX,IX,PX)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
endif
set QX=EVENT_PLAYER_UNIT_SELECTED
set Cb[Xb]="when calling alloc_CityManage_EventListener_line9 in CityManage, line 9"
set Xb=Xb+1
if tO==0 then
if iO<32768 then
set iO=iO+1
set AX=iO
set SO[AX]=665
else
call l1("Out of memory: Could not create CityManage_EventListener_line9.","when calling error in CityManage, line 9")
set AX=0
endif
else
set tO=tO-1
set AX=sO[tO]
set SO[AX]=665
endif
set Xb=Xb-1
set ub[AX]=0
set rb[AX]=0
set sb[AX]=0
set Cb[Xb]="when calling add in CityManage, line 9"
set Xb=Xb+1
set Cb[Xb]="when calling toIntId in ClosureEvents, line 112"
set Xb=Xb+1
set DX=vS[GetHandleId(QX)]
if DX==0 then
set DX=nV(QX,"when calling registerEventId in ClosureEvents, line 229")
endif
set Xb=Xb-1
set ub[AX]=DX
if ES[ub[AX]]!=0 then
set sb[ES[ub[AX]]]=AX
set rb[AX]=ES[ub[AX]]
endif
set ES[ub[AX]]=AX
set Xb=Xb-1
set mX=CreateTrigger()
call TriggerAddCondition(mX,Condition(vf))
call TriggerAddAction(mX,mf)
set HX=mX
set JX=EVENT_PLAYER_UNIT_SPELL_CAST
set KX=0
loop
call TriggerRegisterPlayerUnitEvent(HX,Player(KX),JX,null)
set KX=KX+1
exitwhen KX==bj_MAX_PLAYER_SLOTS
endloop
set WX=EVENT_PLAYER_UNIT_ATTACKED
set Cb[Xb]="when calling alloc_CityManage_EventListener_line34 in CityManage, line 34"
set Xb=Xb+1
if tO==0 then
if iO<32768 then
set iO=iO+1
set LX=iO
set SO[LX]=664
else
call l1("Out of memory: Could not create CityManage_EventListener_line34.","when calling error in CityManage, line 34")
set LX=0
endif
else
set tO=tO-1
set LX=sO[tO]
set SO[LX]=664
endif
set Xb=Xb-1
set ub[LX]=0
set rb[LX]=0
set sb[LX]=0
set Cb[Xb]="when calling add in CityManage, line 34"
set Xb=Xb+1
set Cb[Xb]="when calling toIntId in ClosureEvents, line 112"
set Xb=Xb+1
set XX=vS[GetHandleId(WX)]
if XX==0 then
set XX=nV(WX,"when calling registerEventId in ClosureEvents, line 229")
endif
set Xb=Xb-1
set ub[LX]=XX
if ES[ub[LX]]!=0 then
set sb[ES[ub[LX]]]=LX
set rb[LX]=ES[ub[LX]]
endif
set ES[ub[LX]]=LX
set Xb=Xb-1-1
set mX=null
set QX=null
set WX=null
set UX=null
set IX=null
set HX=null
set JX=null
return true
endfunction
function DYw takes nothing returns boolean
set Xb=0
return CX("CityManage, line 1")
endfunction
function Am takes nothing returns boolean
if GetResearched()!=1378889798 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889798,true)!=1 then
return false
endif
return true
endfunction
function Dm takes nothing returns boolean
if not Am() then
return false
endif
return true
endfunction
function Px takes nothing returns boolean
if GetUnitTypeId(GetSpellTargetUnit())==1747990581 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747990580 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747989813 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747988569 then
return true
endif
return false
endfunction
function Ax takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989049 then
return false
endif
if not Px() then
return false
endif
return true
endfunction
function Dx takes nothing returns boolean
if not Ax() then
return false
endif
return true
endfunction
function E9 takes nothing returns boolean
set ro=ConvertPlayerColor(24)
set so=ConvertPlayerColor(25)
set io=ConvertPlayerColor(26)
set So=ConvertPlayerColor(27)
set co[0]=PLAYER_COLOR_RED
set co[1]=PLAYER_COLOR_BLUE
set co[2]=PLAYER_COLOR_CYAN
set co[3]=PLAYER_COLOR_PURPLE
set co[4]=PLAYER_COLOR_YELLOW
set co[5]=PLAYER_COLOR_ORANGE
set co[6]=PLAYER_COLOR_GREEN
set co[7]=PLAYER_COLOR_PINK
set co[8]=PLAYER_COLOR_LIGHT_GRAY
set co[9]=PLAYER_COLOR_LIGHT_BLUE
set co[10]=PLAYER_COLOR_AQUA
set co[11]=PLAYER_COLOR_BROWN
set co[12]=PLAYER_COLOR_MAROON
set co[13]=PLAYER_COLOR_NAVY
set co[14]=PLAYER_COLOR_TURQUOISE
set co[15]=PLAYER_COLOR_VIOLET
set co[16]=PLAYER_COLOR_WHEAT
set co[17]=PLAYER_COLOR_PEACH
set co[18]=PLAYER_COLOR_MINT
set co[19]=PLAYER_COLOR_LAVENDER
set co[20]=PLAYER_COLOR_COAL
set co[21]=PLAYER_COLOR_SNOW
set co[22]=PLAYER_COLOR_EMERALD
set co[23]=PLAYER_COLOR_PEANUT
set co[24]=ro
set co[25]=so
set co[26]=io
set co[27]=So
return true
endfunction
function EA takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990604,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990602,0)
endfunction
function ED takes nothing returns nothing
local player mD=GetOwningPlayer(GetTriggerUnit())
local boolexpr QD=Condition(Ea)
local group WD=CreateGroup()
local code xD
local boolean vD
call GroupEnumUnitsOfPlayer(WD,mD,QD)
call DestroyBoolExpr(QD)
set xD=Za
set vD=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(WD,xD)
if vD then
call DestroyGroup(WD)
endif
set mD=null
set QD=null
set WD=null
endfunction
function WI takes nothing returns boolean
if GetResearched()!=1378890032 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890032,true)!=1 then
return false
endif
return true
endfunction
function EI takes nothing returns boolean
if not WI() then
return false
endif
return true
endfunction
function EJ takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function EY takes nothing returns nothing
local player xY=GetOwningPlayer(GetAttacker())
local player vY=GetOwningPlayer(GetAttacker())
local player mY
local player QY
local unit WY
set r[GetPlayerId(xY)+1]=r[GetPlayerId(vY)+1]+1
set mY=GetOwningPlayer(GetTriggerUnit())
set QY=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(mY)+1]=r[GetPlayerId(QY)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set WY=GetTriggerUnit()
call SetUnitState(WY,UNIT_STATE_LIFE,GetUnitState(WY,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set xY=null
set vY=null
set mY=null
set QY=null
set WY=null
endfunction
function Em takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988558,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989057,0)
endfunction
function hA takes nothing returns boolean
if GetResearched()!=1378890040 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890040,true)!=2 then
return false
endif
return true
endfunction
function FA takes nothing returns boolean
if not hA() then
return false
endif
return true
endfunction
function FD takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
return true
endfunction
function FF takes nothing returns nothing
local group GF
local code gF
local boolean hF
set b=GetUnitsOfTypeIdAll(1747989301)
set GF=b
set gF=qp
set hF=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(GF,gF)
if hF then
call DestroyGroup(GF)
endif
call DestroyGroup(b)
set GF=null
endfunction
function Edw takes integer vdw,integer mdw,string Qdw returns boolean
local boolean Wdw
set Cb[Xb]=Qdw
set Xb=Xb+1
if AO[vdw]==0 then
if vdw==0 then
call l1("Nullpointer exception when calling HashMap.has","when calling error in HashMap, line 13")
else
call l1("Called HashMap.has on invalid object.","when calling error in HashMap, line 13")
endif
endif
set Cb[Xb]="when calling has in HashMap, line 13"
set Xb=Xb+1
set Cb[Xb]="when calling hasInt in HashMap, line 14"
set Xb=Xb+1
if AO[vdw]==0 then
if vdw==0 then
call l1("Nullpointer exception when calling Table.hasInt","when calling error in Table, line 9")
else
call l1("Called Table.hasInt on invalid object.","when calling error in Table, line 9")
endif
endif
set Wdw=HaveSavedInteger(Wo,vdw,mdw)
set Xb=Xb-1-1-1
return Wdw
endfunction
function Ldw takes integer Ddw,integer Hdw,string Jdw returns integer
local integer Kdw
set Cb[Xb]=Jdw
set Xb=Xb+1
if AO[Ddw]==0 then
if Ddw==0 then
call l1("Nullpointer exception when calling HashMap.get","when calling error in HashMap, line 23")
else
call l1("Called HashMap.get on invalid object.","when calling error in HashMap, line 23")
endif
endif
set Cb[Xb]="when calling get in HashMap, line 23"
set Xb=Xb+1
set Cb[Xb]="when calling loadInt in HashMap, line 24"
set Xb=Xb+1
if AO[Ddw]==0 then
if Ddw==0 then
call l1("Nullpointer exception when calling Table.loadInt","when calling error in Table, line 39")
else
call l1("Called Table.loadInt on invalid object.","when calling error in Table, line 39")
endif
endif
set Kdw=LoadInteger(Wo,Ddw,Hdw)
set Xb=Xb-1-1-1
return Kdw
endfunction
function mnw takes integer jnw,unit xnw,string vnw returns nothing
set Cb[Xb]=vnw
set Xb=Xb+1
if kO[jnw]==0 then
if jnw==0 then
call l1("Nullpointer exception when calling OnCastListener.fire","when calling error in ClosureEvents, line 56")
else
call l1("Called OnCastListener.fire on invalid object.","when calling error in ClosureEvents, line 56")
endif
endif
set Xb=Xb-1
endfunction
function XV takes string DV returns nothing
local unit HV
local integer JV
local integer KV
local integer LV
set Cb[Xb]=DV
set Xb=Xb+1
set HV=GetTriggerUnit()
set JV=GetSpellAbilityId()
if Edw(WS,GetHandleId(HV),"when calling has in ClosureEvents, line 189") then
set KV=Ldw(WS,GetHandleId(HV),"when calling get in ClosureEvents, line 190")
loop
exitwhen KV==0
if Sb[KV]==-1 or Sb[KV]==JV then
call mnw(KV,GetSpellAbilityUnit(),"when calling fire in ClosureEvents, line 193")
endif
set KV=tb[KV]
endloop
endif
if Edw(QS,JV,"when calling has in ClosureEvents, line 195") then
set LV=Ldw(QS,JV,"when calling get in ClosureEvents, line 196")
loop
exitwhen LV==0
if cb[LV]==null or cb[LV]==HV then
call mnw(LV,GetSpellAbilityUnit(),"when calling fire in ClosureEvents, line 199")
endif
set LV=tb[LV]
endloop
endif
set Xb=Xb-1
set HV=null
endfunction
function FGw takes nothing returns nothing
set Xb=0
set Cb[Xb]="ClosureEvents, line 308"
set Xb=Xb+1
call XV("when calling onSpellEffect in ClosureEvents, line 308")
set Xb=Xb-1
endfunction
function hJ takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990354 then
return false
endif
return true
endfunction
function FJ takes nothing returns boolean
if not hJ() then
return false
endif
return true
endfunction
function row takes integer Ncw,timer Mcw,real wow,string uow returns nothing
set Cb[Xb]=uow
set Xb=Xb+1
call Uww(Mcw,Ncw,"when calling setData in ClosureTimers, line 113")
call TimerStart(Mcw,wow,false,wR)
set ob[Ncw]=Mcw
set Xb=Xb-1
endfunction
function odw takes integer tdw,timer idw,real Sdw,string cdw returns nothing
set Cb[Xb]=cdw
set Xb=Xb+1
if TO[tdw]==0 then
if tdw==0 then
call l1("Nullpointer exception when calling CallbackSingle.start","when calling error in ClosureTimers, line 111")
else
call l1("Called CallbackSingle.start on invalid object.","when calling error in ClosureTimers, line 111")
endif
endif
call row(tdw,idw,Sdw,"when calling start in ClosureTimers, line 111")
set Xb=Xb-1
endfunction
function H9 takes string Z9 returns boolean
local integer U9
local integer I9
local integer P9
local integer A9
local timer D9
set Cb[Xb]=Z9
set Xb=Xb+1
set oo=CreateGroup()
set Oo=CreateUnit(tS,2019849581,0.,0.,0)
if Oo==null then
set Z9=""
set U9=2019849581
set I9=0
loop
exitwhen I9>3
set P9=ModuloInteger(U9,256)
set U9=U9/256
set Z9=SubString(".................................!.#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[.]^_`abcdefghijklmnopqrstuvwxyz{|}~.................................................................................................................................",P9,P9+1)+Z9
set I9=I9+1
endloop
call l1("DUMMY_UNITID ("+Z9+") not added correctly to the map.","when calling error in Preloader, line 52")
endif
set Cb[Xb]="when calling alloc_Preloader_CallbackSingle_line54 in Preloader, line 54"
set Xb=Xb+1
if fO==0 then
if RO<32768 then
set RO=RO+1
set A9=RO
set TO[A9]=651
else
call l1("Out of memory: Could not create Preloader_CallbackSingle_line54.","when calling error in Preloader, line 54")
set A9=0
endif
else
set fO=fO-1
set A9=dO[fO]
set TO[A9]=651
endif
set Xb=Xb-1
set Cb[Xb]="when calling nullTimer in Preloader, line 54"
set Xb=Xb+1
set Cb[Xb]="when calling doAfter in ClosureTimers, line 33"
set Xb=Xb+1
set D9=Xww("when calling getTimer in ClosureTimers, line 27")
set Cb[Xb]="when calling doAfter in ClosureTimers, line 27"
set Xb=Xb+1
call odw(A9,D9,0.,"when calling start in ClosureTimers, line 16")
set Xb=Xb-1
set Xb=Xb-1-1-1
set D9=null
return true
endfunction
function FYw takes nothing returns boolean
set Xb=0
return H9("Preloader, line 1")
endfunction
function hm takes nothing returns boolean
if GetResearched()!=1378889796 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889796,true)!=1 then
return false
endif
return true
endfunction
function Fm takes nothing returns boolean
if not hm() then
return false
endif
return true
endfunction
function G1 takes nothing returns boolean
return true
endfunction
function G8 takes nothing returns boolean
return true
endfunction
function GD takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990584,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990594,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990583,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990607,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990598,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990606,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990599,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990601,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651855,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651852,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651850,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990595,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990596,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990604,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990603,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990322,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990323,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990321,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990324,0)
endfunction
function YE takes nothing returns boolean
if GetResearched()!=1378889807 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889807,true)!=1 then
return false
endif
return true
endfunction
function GE takes nothing returns boolean
if not YE() then
return false
endif
return true
endfunction
function Ubw takes integer Wbw,integer Ebw returns boolean
local integer Zbw=Yb[kb[Wbw]]
loop
exitwhen Zbw==kb[Wbw]
if Rb[Zbw]==Ebw then
return true
endif
set Zbw=Yb[Zbw]
endloop
return false
endfunction
function Apw takes integer Epw,string Zpw returns nothing
local unit Upw
local integer Ipw
local boolean Ppw
set Cb[Xb]=Zpw
set Xb=Xb+1
set Epw=Jo
set Ipw=GetUnitTypeId(GetDyingUnit())
set Cb[Xb]="when calling has in OreCapture, line 10"
set Xb=Xb+1
if Sl[Epw]==0 then
if Epw==0 then
call l1("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call l1("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set Ppw=Ubw(Epw,Ipw)
set Xb=Xb-1
if Ppw then
set Upw=GetTriggerUnit()
call CreateUnitAtLoc(GetOwningPlayer(Upw),GetUnitTypeId(Upw),GetUnitLoc(Upw),bj_UNIT_FACING)
endif
set Xb=Xb-1
set Upw=null
endfunction
function Bpw takes integer Dpw,string Hpw returns nothing
local unit Jpw
local integer Kpw
local integer Lpw
local boolean Xpw
local player Cpw
local integer Vpw
set Cb[Xb]=Hpw
set Xb=Xb+1
set Kpw=Jo
set Lpw=GetUnitTypeId(GetTriggerUnit())
set Cb[Xb]="when calling has in OreCapture, line 15"
set Xb=Xb+1
if Sl[Kpw]==0 then
if Kpw==0 then
call l1("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call l1("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set Xpw=Ubw(Kpw,Lpw)
set Xb=Xb-1
if Xpw then
set Jpw=GetTriggerUnit()
set Cpw=GetOwningPlayer(Jpw)
set Vpw=rc[GetPlayerId(GetOwningPlayer(Jpw))]
set Dpw=Ko
set rc[GetPlayerId(Cpw)]=Vpw+Ldw(Dpw,GetUnitTypeId(Jpw),"when calling get in OreCapture, line 19")
endif
set Xb=Xb-1
set Jpw=null
set Cpw=null
endfunction
function Caw takes integer Aaw,string Daw returns nothing
local unit Haw
local integer Jaw
local player Kaw
local integer Law
local boolean Xaw
set Cb[Xb]=Daw
set Xb=Xb+1
set Haw=GetDyingUnit()
set Jaw=GetPlayerId(GetOwningPlayer(Haw))
set Kaw=wo[Jaw]
if GetPlayerSlotState(Kaw)==PLAYER_SLOT_STATE_PLAYING then
set Xaw=GetPlayerController(Kaw)==MAP_CONTROL_USER
else
set Xaw=false
endif
if Xaw and(not IsUnitType(Haw,UNIT_TYPE_STRUCTURE)) then
set Law=Mc[Jaw]
set Aaw=GetUnitLevel(Haw)
set Cb[Xb]="when calling changeUpkeep in Upkeep, line 32"
set Xb=Xb+1
if yl[Law]==0 then
if Law==0 then
call l1("Nullpointer exception when calling PlayerStats.changeUpkeep","when calling error in PlayerStats, line 51")
else
call l1("Called PlayerStats.changeUpkeep on invalid object.","when calling error in PlayerStats, line 51")
endif
endif
set Hb[Law]=Hb[Law]+Aaw
set Xb=Xb-1
endif
set Xb=Xb-1
set Haw=null
set Kaw=null
endfunction
function HOw takes integer UOw,integer IOw,string POw returns nothing
local hashtable AOw
local integer DOw
set Cb[Xb]=POw
set Xb=Xb+1
set AOw=nc
set Cb[Xb]="when calling count in HashList, line 22"
set Xb=Xb+1
if ZO[UOw]==0 then
if UOw==0 then
call l1("Nullpointer exception when calling HashList.count","when calling error in HashList, line 15")
else
call l1("Called HashList.count on invalid object.","when calling error in HashList, line 15")
endif
endif
set DOw=LoadInteger(nc,UOw,IOw)
set Xb=Xb-1
call SaveInteger(AOw,UOw,IOw,DOw-1)
set Xb=Xb-1
set AOw=null
endfunction
function BOw takes integer JOw,integer KOw,string LOw returns nothing
local integer XOw
local integer COw
local integer VOw
set Cb[Xb]=LOw
set Xb=Xb+1
set VOw=LoadInteger(ac,JOw,KOw)
set Cb[Xb]="when calling decrOccurences in HashList, line 54"
set Xb=Xb+1
if ZO[JOw]==0 then
if JOw==0 then
call l1("Nullpointer exception when calling HashList.decrOccurences","when calling error in HashList, line 21")
else
call l1("Called HashList.decrOccurences on invalid object.","when calling error in HashList, line 21")
endif
endif
call HOw(JOw,VOw,"when calling decrOccurences in HashList, line 21")
set Xb=Xb-1
set XOw=KOw
set COw=eb[JOw]
loop
exitwhen XOw>COw
call SaveInteger(ac,JOw,XOw,LoadInteger(ac,JOw,XOw+1))
set XOw=XOw+1
endloop
set eb[JOw]=eb[JOw]-1
set Xb=Xb-1
endfunction
function Wlw takes integer Tlw,integer Ylw,string Glw returns nothing
local integer glw
local integer hlw
local hashtable Flw
local integer klw
local integer jlw
local hashtable xlw
local integer vlw
local hashtable mlw
local integer Qlw
set Cb[Xb]=Glw
set Xb=Xb+1
set Flw=dc
set Cb[Xb]="when calling get in HashSet, line 22"
set Xb=Xb+1
if ZO[Tlw]==0 then
if Tlw==0 then
call l1("Nullpointer exception when calling HashList.get","when calling error in HashList, line 79")
else
call l1("Called HashList.get on invalid object.","when calling error in HashList, line 79")
endif
endif
set klw=LoadInteger(ac,Tlw,Ylw)
set Xb=Xb-1
call RemoveSavedInteger(Flw,Tlw,klw)
set glw=Ylw+1
set Cb[Xb]="when calling size in HashSet, line 23"
set Xb=Xb+1
if ZO[Tlw]==0 then
if Tlw==0 then
call l1("Nullpointer exception when calling HashList.size","when calling error in HashList, line 67")
else
call l1("Called HashList.size on invalid object.","when calling error in HashList, line 67")
endif
endif
set jlw=eb[Tlw]
set Xb=Xb-1
set hlw=jlw
loop
exitwhen glw>hlw
set xlw=dc
set Glw="when calling get in HashSet, line 24"
set Cb[Xb]="when calling get in HashSet, line 24"
set Xb=Xb+1
if ZO[Tlw]==0 then
if Tlw==0 then
call l1("Nullpointer exception when calling HashList.get","when calling error in HashList, line 79")
else
call l1("Called HashList.get on invalid object.","when calling error in HashList, line 79")
endif
endif
set vlw=LoadInteger(ac,Tlw,glw)
set Xb=Xb-1
set mlw=dc
set Cb[Xb]="when calling get in HashSet, line 24"
set Xb=Xb+1
if ZO[Tlw]==0 then
if Tlw==0 then
call l1("Nullpointer exception when calling HashList.get","when calling error in HashList, line 79")
else
call l1("Called HashList.get on invalid object.","when calling error in HashList, line 79")
endif
endif
set Qlw=LoadInteger(ac,Tlw,glw)
set Xb=Xb-1
call SaveInteger(xlw,Tlw,vlw,LoadInteger(mlw,Tlw,Qlw)-1)
set glw=glw+1
endloop
call BOw(Tlw,Ylw,"when calling removeAt in HashSet, line 25")
set Xb=Xb-1
set Flw=null
set xlw=null
set mlw=null
endfunction
function Alw takes integer Elw,integer Zlw,string Ulw returns nothing
local integer Ilw
local integer Plw
set Cb[Xb]=Ulw
set Xb=Xb+1
set Cb[Xb]="when calling count in HashSet, line 17"
set Xb=Xb+1
if ZO[Elw]==0 then
if Elw==0 then
call l1("Nullpointer exception when calling HashList.count","when calling error in HashList, line 15")
else
call l1("Called HashList.count on invalid object.","when calling error in HashList, line 15")
endif
endif
set Ilw=LoadInteger(nc,Elw,Zlw)
set Xb=Xb-1
if Ilw>0 then
set Plw=LoadInteger(dc,Elw,Zlw)
set Cb[Xb]="when calling removeAt in HashSet, line 18"
set Xb=Xb+1
if ZO[Elw]==0 then
if Elw==0 then
call l1("Nullpointer exception when calling HashSet.removeAt","when calling error in HashSet, line 21")
else
call l1("Called HashSet.removeAt on invalid object.","when calling error in HashSet, line 21")
endif
endif
call Wlw(Elw,Plw,"when calling removeAt in HashSet, line 21")
set Xb=Xb-1
endif
set Xb=Xb-1
endfunction
function ZOw takes integer vOw,integer mOw,string QOw returns nothing
local hashtable WOw
local integer EOw
set Cb[Xb]=QOw
set Xb=Xb+1
set WOw=nc
set Cb[Xb]="when calling count in HashList, line 19"
set Xb=Xb+1
if ZO[vOw]==0 then
if vOw==0 then
call l1("Nullpointer exception when calling HashList.count","when calling error in HashList, line 15")
else
call l1("Called HashList.count on invalid object.","when calling error in HashList, line 15")
endif
endif
set EOw=LoadInteger(nc,vOw,mOw)
set Xb=Xb-1
call SaveInteger(WOw,vOw,mOw,EOw+1)
set Xb=Xb-1
set WOw=null
endfunction
function sYw takes integer wYw,integer uYw,string rYw returns nothing
set Cb[Xb]=rYw
set Xb=Xb+1
call SaveInteger(ac,wYw,eb[wYw],uYw)
set Cb[Xb]="when calling incrOccurences in HashList, line 28"
set Xb=Xb+1
if ZO[wYw]==0 then
if wYw==0 then
call l1("Nullpointer exception when calling HashList.incrOccurences","when calling error in HashList, line 18")
else
call l1("Called HashList.incrOccurences on invalid object.","when calling error in HashList, line 18")
endif
endif
call ZOw(wYw,uYw,"when calling incrOccurences in HashList, line 18")
set Xb=Xb-1
set eb[wYw]=eb[wYw]+1
set Xb=Xb-1
endfunction
function lYw takes integer tYw,integer iYw,string SYw returns nothing
local integer cYw
local hashtable oYw
local integer OYw
set Cb[Xb]=SYw
set Xb=Xb+1
set Cb[Xb]="when calling count in HashSet, line 11"
set Xb=Xb+1
if ZO[tYw]==0 then
if tYw==0 then
call l1("Nullpointer exception when calling HashList.count","when calling error in HashList, line 15")
else
call l1("Called HashList.count on invalid object.","when calling error in HashList, line 15")
endif
endif
set cYw=LoadInteger(nc,tYw,iYw)
set Xb=Xb-1
if cYw<=0 then
set oYw=dc
set Cb[Xb]="when calling size in HashSet, line 12"
set Xb=Xb+1
if ZO[tYw]==0 then
if tYw==0 then
call l1("Nullpointer exception when calling HashList.size","when calling error in HashList, line 67")
else
call l1("Called HashList.size on invalid object.","when calling error in HashList, line 67")
endif
endif
set OYw=eb[tYw]
set Xb=Xb-1
call SaveInteger(oYw,tYw,iYw,OYw)
call sYw(tYw,iYw,"when calling add in HashSet, line 13")
endif
set Xb=Xb-1
set oYw=null
endfunction
function xdw takes integer hdw,integer Fdw,string kdw returns boolean
local integer jdw
set Cb[Xb]=kdw
set Xb=Xb+1
if ZO[hdw]==0 then
if hdw==0 then
call l1("Nullpointer exception when calling HashList.has","when calling error in HashList, line 87")
else
call l1("Called HashList.has on invalid object.","when calling error in HashList, line 87")
endif
endif
set Cb[Xb]="when calling has in HashList, line 87"
set Xb=Xb+1
set Cb[Xb]="when calling count in HashList, line 88"
set Xb=Xb+1
if ZO[hdw]==0 then
if hdw==0 then
call l1("Nullpointer exception when calling HashList.count","when calling error in HashList, line 15")
else
call l1("Called HashList.count on invalid object.","when calling error in HashList, line 15")
endif
endif
set jdw=LoadInteger(nc,hdw,Fdw)
set Xb=Xb-1
set Xb=Xb-1-1
return jdw>0
endfunction
function Fpw takes integer dpw,string fpw returns nothing
local unit Rpw
local integer Tpw
local integer Ypw
local integer Gpw
local boolean gpw
local boolean hpw
set Cb[Xb]=fpw
set Xb=Xb+1
set Rpw=GetOrderedUnit()
if GetIssuedOrderId()==852056 then
set gpw=GetUnitAbilityLevel(Rpw,1093677904)>0
else
set gpw=false
endif
if gpw then
call UnitRemoveAbility(Rpw,1093677904)
set Tpw=Xc
set dpw=GetHandleId(Rpw)
set Cb[Xb]="when calling add in NoStarvationOnBoat, line 14"
set Xb=Xb+1
if ZO[Tpw]==0 then
if Tpw==0 then
call l1("Nullpointer exception when calling HashSet.add","when calling error in HashSet, line 9")
else
call l1("Called HashSet.add on invalid object.","when calling error in HashSet, line 9")
endif
endif
call lYw(Tpw,dpw,"when calling add in HashSet, line 9")
set Xb=Xb-1
endif
if GetIssuedOrderId()==851972 then
set hpw=xdw(Xc,GetHandleId(Rpw),"when calling has in NoStarvationOnBoat, line 16")
else
set hpw=false
endif
if hpw then
call UnitAddAbility(GetOrderedUnit(),1093677904)
set Ypw=Xc
set Gpw=GetHandleId(Rpw)
set Cb[Xb]="when calling remove in NoStarvationOnBoat, line 18"
set Xb=Xb+1
if ZO[Ypw]==0 then
if Ypw==0 then
call l1("Nullpointer exception when calling HashSet.remove","when calling error in HashSet, line 16")
else
call l1("Called HashSet.remove on invalid object.","when calling error in HashSet, line 16")
endif
endif
call Alw(Ypw,Gpw,"when calling remove in HashSet, line 16")
set Xb=Xb-1
endif
set Xb=Xb-1
set Rpw=null
endfunction
function Slw takes integer slw,integer tlw,string ilw returns nothing
set Cb[Xb]=ilw
set Xb=Xb+1
if Edw(slw,tlw,"when calling has in HashMap, line 28") then
set qb[slw]=qb[slw]-1
endif
set Cb[Xb]="when calling removeInt in HashMap, line 30"
set Xb=Xb+1
if AO[slw]==0 then
if slw==0 then
call l1("Nullpointer exception when calling Table.removeInt","when calling error in Table, line 24")
else
call l1("Called Table.removeInt on invalid object.","when calling error in Table, line 24")
endif
endif
call RemoveSavedInteger(Wo,slw,tlw)
set Xb=Xb-1-1
endfunction
function adw takes integer pdw,integer edw,string qdw returns nothing
set Cb[Xb]=qdw
set Xb=Xb+1
if ZO[pdw]==0 then
if pdw==0 then
call l1("Nullpointer exception when calling HashList.removeAt","when calling error in HashList, line 53")
else
call l1("Called HashList.removeAt on invalid object.","when calling error in HashList, line 53")
endif
endif
if ZO[pdw]<=695 then
call BOw(pdw,edw,"when calling removeAt in HashList, line 53")
else
call Wlw(pdw,edw,"when calling removeAt in HashList, line 53")
endif
set Xb=Xb-1
endfunction
function gdw takes integer ndw,integer ddw,string fdw returns nothing
local integer Rdw
local integer Tdw
local integer Ydw
local integer Gdw
set Cb[Xb]=fdw
set Xb=Xb+1
if ZO[ndw]==0 then
if ndw==0 then
call l1("Nullpointer exception when calling HashList.remove","when calling error in HashList, line 60")
else
call l1("Called HashList.remove on invalid object.","when calling error in HashList, line 60")
endif
endif
if ZO[ndw]<=695 then
set Rdw=ndw
set Tdw=ddw
set Cb[Xb]="when calling remove in HashList, line 60"
set Xb=Xb+1
set Ydw=0
set Gdw=eb[ndw]-1
loop
exitwhen Ydw>Gdw
if Tdw==LoadInteger(ac,Rdw,Ydw) then
call adw(Rdw,Ydw,"when calling removeAt in HashList, line 63")
exitwhen true
endif
set Ydw=Ydw+1
endloop
set Xb=Xb-1
else
call Alw(ndw,ddw,"when calling remove in HashList, line 60")
endif
set Xb=Xb-1
endfunction
function Rlw takes integer alw,integer nlw,string dlw returns nothing
local boolean flw
set Cb[Xb]=dlw
set Xb=Xb+1
call Slw(alw,nlw,"when calling remove in HashMap, line 66")
set Cb[Xb]="when calling hasKey in HashMap, line 67"
set Xb=Xb+1
if AO[alw]==0 then
if alw==0 then
call l1("Nullpointer exception when calling IterableMap.hasKey","when calling error in HashMap, line 87")
else
call l1("Called IterableMap.hasKey on invalid object.","when calling error in HashMap, line 87")
endif
endif
set Cb[Xb]="when calling hasKey in HashMap, line 87"
set Xb=Xb+1
set flw=xdw(ab[alw],nlw,"when calling has in HashMap, line 88")
set Xb=Xb-1-1
if flw then
call gdw(ab[alw],nlw,"when calling remove in HashMap, line 68")
endif
set Xb=Xb-1
endfunction
function Bdw takes integer Xdw,integer Cdw,string Vdw returns nothing
set Cb[Xb]=Vdw
set Xb=Xb+1
if AO[Xdw]==0 then
if Xdw==0 then
call l1("Nullpointer exception when calling HashMap.remove","when calling error in HashMap, line 27")
else
call l1("Called HashMap.remove on invalid object.","when calling error in HashMap, line 27")
endif
endif
if AO[Xdw]<=733 then
call Slw(Xdw,Cdw,"when calling remove in HashMap, line 27")
else
call Rlw(Xdw,Cdw,"when calling remove in HashMap, line 27")
endif
set Xb=Xb-1
endfunction
function Sfw takes integer tfw,string ifw returns nothing
set Cb[Xb]=ifw
set Xb=Xb+1
if rl[tfw]==0 then
if tfw==0 then
call l1("Nullpointer exception when calling LLIterator.LLIterator","when calling error in LinkedList, line 406")
else
call l1("Called LLIterator.LLIterator on invalid object.","when calling error in LinkedList, line 406")
endif
endif
set Cb[Xb]="when calling destroyLLIterator in LinkedList, line 406"
set Xb=Xb+1
set Cb[Xb]="when calling dealloc_LLIterator in LinkedList, line 406"
set Xb=Xb+1
if rl[tfw]==0 then
call l1("Double free: object of type LLIterator","when calling error in LinkedList, line 406")
else
set MO[wl]=tfw
set wl=wl+1
set rl[tfw]=0
endif
set Xb=Xb-1-1-1
endfunction
function aww takes integer lww,string bww returns unit
local integer yww
local fogstate pww
local integer eww
local unit qww
set Cb[Xb]=bww
set Xb=Xb+1
set yww=Io
set pww=ConvertFogState(lww)
set Cb[Xb]="when calling saveFogState in TypeCasting, line 52"
set Xb=Xb+1
if AO[yww]==0 then
if yww==0 then
call l1("Nullpointer exception when calling Table.saveFogState","when calling error in Table, line 168")
else
call l1("Called Table.saveFogState on invalid object.","when calling error in Table, line 168")
endif
endif
call SaveFogStateHandle(Wo,yww,0,pww)
set Xb=Xb-1
set eww=Io
set Cb[Xb]="when calling loadUnit in TypeCasting, line 53"
set Xb=Xb+1
if AO[eww]==0 then
if eww==0 then
call l1("Nullpointer exception when calling Table.loadUnit","when calling error in Table, line 75")
else
call l1("Called Table.loadUnit on invalid object.","when calling error in Table, line 75")
endif
endif
set qww=LoadUnitHandle(Wo,eww,0)
set Xb=Xb-1-1
set OR=qww
set pww=null
set qww=null
return OR
endfunction
function bfw takes integer cfw,string ofw returns nothing
local integer Ofw
local integer lfw
set Cb[Xb]=ofw
set Xb=Xb+1
if rl[cfw]==0 then
if cfw==0 then
call l1("Nullpointer exception when calling LLIterator.reset","when calling error in LinkedList, line 421")
else
call l1("Called LLIterator.reset on invalid object.","when calling error in LinkedList, line 421")
endif
endif
set Cb[Xb]="when calling reset in LinkedList, line 421"
set Xb=Xb+1
set Ofw=hb[cfw]
set Cb[Xb]="when calling getDummy in LinkedList, line 422"
set Xb=Xb+1
if Sl[Ofw]==0 then
if Ofw==0 then
call l1("Nullpointer exception when calling LinkedList.getDummy","when calling error in LinkedList, line 362")
else
call l1("Called LinkedList.getDummy on invalid object.","when calling error in LinkedList, line 362")
endif
endif
set lfw=kb[Ofw]
set Xb=Xb-1
set Gb[cfw]=lfw
set gb[cfw]=Gb[cfw]
set Xb=Xb-1-1
endfunction
function kbw takes integer gbw,string hbw returns integer
local integer Fbw
set Cb[Xb]=hbw
set Xb=Xb+1
set Cb[Xb]="when calling alloc_LLIterator in LinkedList, line 412"
set Xb=Xb+1
if wl==0 then
if ul<32768 then
set ul=ul+1
set Fbw=ul
set rl[Fbw]=704
else
call l1("Out of memory: Could not create LLIterator.","when calling error in LinkedList, line 406")
set Fbw=0
endif
else
set wl=wl-1
set Fbw=MO[wl]
set rl[Fbw]=704
endif
set Xb=Xb-1
set Cb[Xb]="when calling construct_LLIterator in LinkedList, line 412"
set Xb=Xb+1
set Fb[Fbw]=true
set hb[Fbw]=gbw
call bfw(Fbw,"when calling reset in LinkedList, line 414")
set Xb=Xb-1-1
return Fbw
endfunction
function Hyw takes integer jyw,string xyw returns nothing
local integer vyw
local integer myw
local real Qyw
local real Wyw
local integer Eyw
local unit Zyw
local integer Uyw
local integer Iyw
local boolean Pyw
local integer Ayw
local timer Dyw
set Cb[Xb]=xyw
set Xb=Xb+1
set Uyw=Ec
set Iyw=GetUnitTypeId(GetOrderedUnit())
set Cb[Xb]="when calling has in MassControl, line 33"
set Xb=Xb+1
if Sl[Uyw]==0 then
if Uyw==0 then
call l1("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call l1("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set Pyw=Ubw(Uyw,Iyw)
set Xb=Xb-1
if Pyw then
if Edw(Qc,GetHandleId(GetOrderedUnit()),"when calling has in MassControl, line 34") then
set vyw=Ldw(Qc,GetHandleId(GetOrderedUnit()),"when calling get in MassControl, line 35")
set myw=GetIssuedOrderId()
set Qyw=GetOrderPointX()
set Wyw=GetOrderPointY()
set Cb[Xb]="when calling iterator in MassControl, line 38"
set Xb=Xb+1
set Ayw=kbw(vyw,"when calling new_LLIterator in LinkedList, line 165")
set Xb=Xb-1
set Eyw=Ayw
loop
exitwhen Yb[gb[Eyw]]==Gb[Eyw]
set gb[Eyw]=Yb[gb[Eyw]]
set Zyw=aww(Rb[gb[Eyw]],"when calling unitFromIndex in MassControl, line 38")
set Cb[Xb]="when calling alloc_MassControl_CallbackSingle_line39 in MassControl, line 39"
set Xb=Xb+1
if fO==0 then
if RO<32768 then
set RO=RO+1
set jyw=RO
set TO[jyw]=647
else
call l1("Out of memory: Could not create MassControl_CallbackSingle_line39.","when calling error in MassControl, line 39")
set jyw=0
endif
else
set fO=fO-1
set jyw=dO[fO]
set TO[jyw]=647
endif
set Xb=Xb-1
set Qb[jyw]=Zyw
set Wb[jyw]=myw
set Eb[jyw]=Qyw
set Zb[jyw]=Wyw
set Cb[Xb]="when calling doAfter in MassControl, line 39"
set Xb=Xb+1
set Dyw=Xww("when calling getTimer in ClosureTimers, line 27")
set xyw="when calling doAfter in ClosureTimers, line 27"
set Cb[Xb]="when calling doAfter in ClosureTimers, line 27"
set Xb=Xb+1
call odw(jyw,Dyw,0.01,"when calling start in ClosureTimers, line 16")
set Xb=Xb-1-1
endloop
set Cb[Xb]="when calling close in MassControl, line 38"
set Xb=Xb+1
if Fb[Eyw]then
call Sfw(Eyw,"when calling dispatch_LLIterator_destroyLLIterator in LinkedList, line 450")
endif
set Xb=Xb-1
call Bdw(Qc,GetHandleId(GetOrderedUnit()),"when calling remove in MassControl, line 42")
endif
endif
set Xb=Xb-1
set Zyw=null
set Dyw=null
endfunction
function L2 takes player A2,string D2 returns string
local integer H2
local integer J2
local integer K2
set Cb[Xb]=D2
set Xb=Xb+1
set J2=Mc[GetPlayerId(A2)]
set Cb[Xb]="when calling getForceId in Messages, line 21"
set Xb=Xb+1
if yl[J2]==0 then
if J2==0 then
call l1("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 122")
else
call l1("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 122")
endif
endif
set K2=Ib[J2]
set Xb=Xb-1
set H2=GetRandomInt(0,2)
if K2==0 then
set D2=Ro[H2]
elseif K2==1 then
set D2=To[H2]
elseif K2==2 then
set D2=Yo[H2]
elseif K2==3 then
set D2=Go[H2]
else
set D2="Note:"
endif
set Xb=Xb-1
return "|cff00ccff"+D2+"|r"
endfunction
function Icw takes integer mcw,string Qcw returns nothing
local integer Wcw
local integer Ecw
local integer Zcw
local player Ucw
set Cb[Xb]=Qcw
set Xb=Xb+1
if GetSpellAbilityId()==1093677620 then
if GetPlayerId(GetOwningPlayer(GetSpellTargetUnit()))<24 then
set Wcw=Mc[GetPlayerId(GetOwningPlayer(GetSpellTargetUnit()))]
set Cb[Xb]="when calling getForceId in Clerics, line 10"
set Xb=Xb+1
if yl[Wcw]==0 then
if Wcw==0 then
call l1("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 122")
else
call l1("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 122")
endif
endif
set Ecw=Ib[Wcw]
set Xb=Xb-1
set Zcw=Mc[GetPlayerId(GetOwningPlayer(GetSpellAbilityUnit()))]
set Cb[Xb]="when calling getForceId in Clerics, line 10"
set Xb=Xb+1
if yl[Zcw]==0 then
if Zcw==0 then
call l1("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 122")
else
call l1("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 122")
endif
endif
set mcw=Ib[Zcw]
set Xb=Xb-1
if Ecw==mcw then
call IssueImmediateOrderById(GetSpellAbilityUnit(),851972)
set Ucw=GetOwningPlayer(GetSpellAbilityUnit())
set Cb[Xb]="when calling noteToPlayer in Clerics, line 12"
set Xb=Xb+1
call DisplayTimedTextToPlayer(Ucw,0.,0.,10.0,L2(Ucw,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(Ucw,0.,0.,10.0,"Clerics cannot convert someone who professes same religion as you.")
set Xb=Xb-1
endif
endif
endif
set Xb=Xb-1
set Ucw=null
endfunction
function CC takes unit DC,string HC returns integer
local integer JC
local integer KC
local integer LC
local unit XC
set Cb[Xb]=HC
set Xb=Xb+1
set JC=0
set KC=nS-1
loop
exitwhen JC>KC
set LC=hS[JC]
set HC="when calling getCityUnit in City, line 443"
set Cb[Xb]="when calling getCityUnit in City, line 443"
set Xb=Xb+1
if pO[LC]==0 then
if LC==0 then
call l1("Nullpointer exception when calling City.getCityUnit","when calling error in City, line 188")
else
call l1("Called City.getCityUnit on invalid object.","when calling error in City, line 188")
endif
endif
set XC=xl[LC]
set Xb=Xb-1
if XC==DC then
set Xb=Xb-1
set XC=null
return JC
endif
set JC=JC+1
endloop
set Xb=Xb-1
set XC=null
return -1
endfunction
function EB takes playercolor YB returns integer
local playercolor FB=YB
local integer kB=0
local integer jB=0
local integer xB=bj_MAX_PLAYER_SLOTS-1
local integer GB
local integer gB
local integer hB
local playercolor vB
local integer mB
local integer QB
local integer WB
loop
exitwhen jB>xB
if co[jB]==FB then
set kB=jB
exitwhen true
endif
set jB=jB+1
endloop
if kB<=23 then
set vB=YB
set mB=0
set QB=0
set WB=bj_MAX_PLAYER_SLOTS-1
loop
exitwhen QB>WB
if co[QB]==vB then
set mB=QB
exitwhen true
endif
set QB=QB+1
endloop
set GB=LS[mB]
set gB=XS[mB]
set hB=CS[mB]
else
set GB=0
set gB=0
set hB=0
endif
set Vb=GB
set Bb=gB
set Nb=hB
set FB=null
set vB=null
return Vb
endfunction
function TB takes player eB returns string
local integer dB=EB(GetPlayerColor(eB))
local integer fB=Bb
local integer RB=Nb
local integer qB=dB/16
local integer aB=fB/16
local integer nB=RB/16
return "|cff"+VS[qB]+VS[dB-qB*16]+VS[aB]+VS[fB-aB*16]+VS[nB]+VS[RB-nB*16]+GetPlayerName(eB)+"|r"
endfunction
function AC takes integer IC,integer PC returns integer
if IC==1 then
if PC==0 then
return 1747988529
elseif PC==1 then
return 1747990326
elseif PC==2 then
return 1747990084
elseif PC==3 then
return 1747989590
else
return 1747988529
endif
elseif IC==2 then
if PC==0 then
return 1747988530
elseif PC==1 then
return 1747990327
elseif PC==2 then
return 1747990087
elseif PC==3 then
return 1747989591
else
return 1747988530
endif
elseif IC==3 then
if PC==0 then
return 1747988531
elseif PC==1 then
return 1747990328
elseif PC==2 then
return 1747990086
elseif PC==3 then
return 1747989592
else
return 1747988531
endif
elseif PC==0 then
return 1747988529
elseif PC==1 then
return 1747990326
elseif PC==2 then
return 1747990084
elseif PC==3 then
return 1747989590
else
return 1747988529
endif
endfunction
function Ttw takes integer atw,integer ntw,string dtw returns nothing
local integer ftw
local boolean Rtw
set Cb[Xb]=dtw
set Xb=Xb+1
set ftw=Bo
set Cb[Xb]="when calling has in City, line 195"
set Xb=Xb+1
if Sl[ftw]==0 then
if ftw==0 then
call l1("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call l1("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set Rtw=Ubw(ftw,ntw)
set Xb=Xb-1
if not Rtw then
set Xb=Xb-1
return
endif
set xl[atw]=ReplaceUnitBJ(xl[atw],ntw,bj_UNIT_STATE_METHOD_RELATIVE)
set Xb=Xb-1
endfunction
function UC takes integer ZC returns integer
if ZC==1747988529 then
return 1
elseif ZC==1747988530 then
return 2
elseif ZC==1747988531 then
return 3
elseif ZC==1747990326 then
return 1
elseif ZC==1747990327 then
return 2
elseif ZC==1747990328 then
return 3
elseif ZC==1747990084 then
return 1
elseif ZC==1747990087 then
return 2
elseif ZC==1747990086 then
return 3
elseif ZC==1747989590 then
return 1
elseif ZC==1747989591 then
return 2
elseif ZC==1747989592 then
return 3
else
return 1
endif
endfunction
function Q2 takes string m2 returns nothing
if (not Gc)and(not gc) then
return
endif
call DisplayTimedTextToPlayer(wo[0],0.,0.,60.,m2)
endfunction
function Gbw takes integer dbw,integer fbw,integer Rbw,string Tbw returns integer
local integer Ybw
set Cb[Xb]=Tbw
set Xb=Xb+1
set Cb[Xb]="when calling alloc_LLEntry in LinkedList, line 401"
set Xb=Xb+1
if VO==0 then
if BO<32768 then
set BO=BO+1
set Ybw=BO
set NO[Ybw]=703
else
call l1("Out of memory: Could not create LLEntry.","when calling error in LinkedList, line 396")
set Ybw=0
endif
else
set VO=VO-1
set Ybw=CO[VO]
set NO[Ybw]=703
endif
set Xb=Xb-1
set Rb[Ybw]=dbw
set Tb[Ybw]=fbw
set Yb[Ybw]=Rbw
set Xb=Xb-1
return Ybw
endfunction
function Zfw takes integer mfw,integer Qfw,string Wfw returns nothing
local integer Efw
set Cb[Xb]=Wfw
set Xb=Xb+1
if Sl[mfw]==0 then
if mfw==0 then
call l1("Nullpointer exception when calling LinkedList.add","when calling error in LinkedList, line 37")
else
call l1("Called LinkedList.add on invalid object.","when calling error in LinkedList, line 37")
endif
endif
set Cb[Xb]="when calling add in LinkedList, line 37"
set Xb=Xb+1
set Efw=Gbw(Qfw,Tb[kb[mfw]],kb[mfw],"when calling new_LLEntry in LinkedList, line 39")
set Yb[Tb[kb[mfw]]]=Efw
set Tb[kb[mfw]]=Efw
set jb[mfw]=jb[mfw]+1
set Xb=Xb-1-1
endfunction
function nnw takes integer enw,integer qnw,string anw returns nothing
set Cb[Xb]=anw
set Xb=Xb+1
if pO[enw]==0 then
if enw==0 then
call l1("Nullpointer exception when calling City.getCityModifierOnAdd","when calling error in City, line 420")
else
call l1("Called City.getCityModifierOnAdd on invalid object.","when calling error in City, line 420")
endif
endif
set Cb[Xb]="when calling getCityModifierOnAdd in City, line 420"
set Xb=Xb+1
set Dl[enw]=Dl[enw]+Tl[Ldw(aS,qnw,"when calling get in City, line 421")]
set Hl[enw]=Hl[enw]+Fl[Ldw(aS,qnw,"when calling get in City, line 422")]
set Xb=Xb-1-1
endfunction
function ctw takes integer Msw,integer wtw,string utw returns boolean
local real rtw
local integer stw
local boolean ttw
local integer itw
local timer Stw
set Cb[Xb]=utw
set Xb=Xb+1
set stw=Ll[Msw]
set Cb[Xb]="when calling has in City, line 369"
set Xb=Xb+1
if Sl[stw]==0 then
if stw==0 then
call l1("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call l1("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set ttw=Ubw(stw,wtw)
set Xb=Xb-1
if ttw then
set Xb=Xb-1
set Stw=null
return false
endif
call Zfw(Ll[Msw],wtw,"when calling add in City, line 371")
call nnw(Msw,wtw,"when calling getCityModifierOnAdd in City, line 372")
call Q2("Added a modifier "+kl[Ldw(aS,wtw,"when calling get in City, line 373")]+" | "+R2SW(Rl[Ldw(aS,wtw,"when calling get in City, line 373")],3,3))
set rtw=Rl[Ldw(aS,wtw,"when calling get in City, line 374")]
set Cb[Xb]="when calling alloc_City_City_CallbackSingle_line374 in City, line 374"
set Xb=Xb+1
if fO==0 then
if RO<32768 then
set RO=RO+1
set itw=RO
set TO[itw]=639
else
call l1("Out of memory: Could not create City_City_CallbackSingle_line374.","when calling error in City, line 374")
set itw=0
endif
else
set fO=fO-1
set itw=dO[fO]
set TO[itw]=639
endif
set Xb=Xb-1
set Vl[itw]=Msw
set Bl[itw]=wtw
set Cb[Xb]="when calling doAfter in City, line 374"
set Xb=Xb+1
set Stw=Xww("when calling getTimer in ClosureTimers, line 27")
set Cb[Xb]="when calling doAfter in ClosureTimers, line 27"
set Xb=Xb+1
call odw(itw,Stw,rtw,"when calling start in ClosureTimers, line 16")
set Xb=Xb-1-1-1
set Stw=null
return true
endfunction
function D8 takes multiboard m8,integer Q8,integer W8,string E8,real Z8 returns nothing
local multiboarditem U8=MultiboardGetItem(m8,W8,Q8)
local string I8=E8
local string P8
local integer A8
set W8=R2I((R2I(Z8/0.004)-StringLength(E8))*1./2)
set P8=""
set A8=0
set Q8=W8-1
loop
exitwhen A8>Q8
set P8=P8+" "
set A8=A8+1
endloop
if ModuloReal(W8,2)==1. then
set I8=" "+I8
endif
set I8=P8+I8
call MultiboardSetItemValue(U8,I8)
set U8=null
endfunction
function Enw takes integer Qnw,string Wnw returns nothing
set Cb[Xb]=Wnw
set Xb=Xb+1
if nO[Qnw]==0 then
if Qnw==0 then
call l1("Nullpointer exception when calling ForGroupCallback.ForGroupCallback","when calling error in ClosureForGroups, line 3")
else
call l1("Called ForGroupCallback.ForGroupCallback on invalid object.","when calling error in ClosureForGroups, line 3")
endif
endif
set Cb[Xb]="when calling destroyForGroupCallback in ClosureForGroups, line 3"
set Xb=Xb+1
set Cb[Xb]="when calling dealloc_ForGroupCallback in ClosureForGroups, line 3"
set Xb=Xb+1
if nO[Qnw]==0 then
call l1("Double free: object of type ForGroupCallback","when calling error in ClosureForGroups, line 3")
else
set eO[qO]=Qnw
set qO=qO+1
set nO[Qnw]=0
endif
set Xb=Xb-1-1-1
endfunction
function cB takes real rB,real sB,real tB,integer iB,string SB returns nothing
set Cb[Xb]=SB
set Xb=Xb+1
set PS[AS]=iB
set AS=AS+1
set HS=0
set DS=2147483647
call GroupEnumUnitsInRange(IS,rB,sB,tB,JS)
set Cb[Xb]="when calling popCallback in ClosureForGroups, line 98"
set Xb=Xb+1
call GroupClear(IS)
set AS=AS-1
call Enw(PS[AS],"when calling dispatch_ForGroupCallback_destroyForGroupCallback in ClosureForGroups, line 30")
set Xb=Xb-1-1
endfunction
function i5 takes player w5,string u5 returns string
local integer r5
local integer s5
local integer t5
set Cb[Xb]=u5
set Xb=Xb+1
set s5=Mc[GetPlayerId(w5)]
set Cb[Xb]="when calling getForceId in Messages, line 53"
set Xb=Xb+1
if yl[s5]==0 then
if s5==0 then
call l1("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 122")
else
call l1("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 122")
endif
endif
set t5=Ib[s5]
set Xb=Xb-1
set r5=GetRandomInt(0,2)
if t5==0 then
set u5=jo[r5]
elseif t5==1 then
set u5=xo[r5]
elseif t5==2 then
set u5=vo[r5]
elseif t5==3 then
set u5=mo[r5]
else
set u5="Attention!"
endif
set Xb=Xb-1
return "|cffffa600"+u5+"|r"
endfunction
function onw takes integer wnw,string unw returns string
local integer rnw
local integer snw
local integer tnw
local integer inw
local integer Snw
local integer cnw
set Cb[Xb]=unw
set Xb=Xb+1
if pO[wnw]==0 then
if wnw==0 then
call l1("Nullpointer exception when calling City.getCityNameColored","when calling error in City, line 179")
else
call l1("Called City.getCityNameColored on invalid object.","when calling error in City, line 179")
endif
endif
set inw=lc[Ql[wnw]]
set Snw=bc[Ql[wnw]]
set cnw=yc[Ql[wnw]]
set rnw=inw/16
set snw=Snw/16
set tnw=cnw/16
set unw="|cff"+VS[rnw]+VS[inw-rnw*16]+VS[snw]+VS[Snw-snw*16]+VS[tnw]+VS[cnw-tnw*16]+vl[wnw]+"|r"
set Xb=Xb-1
return unw
endfunction
function sww takes integer j0w,string x0w returns nothing
local integer v0w
local unit m0w
local integer Q0w
local integer W0w
local integer E0w
local integer Z0w
local integer U0w
local integer I0w
local integer P0w
local real A0w
local integer D0w
local integer H0w
local integer J0w
local unit K0w
local player L0w
local integer X0w
local player C0w
local integer V0w
local integer B0w
local integer N0w
local integer M0w
local integer www
local integer uww
local boolean rww
set Cb[Xb]=x0w
set Xb=Xb+1
if j0w<0 or j0w>=nS then
set Xb=Xb-1
set m0w=null
set K0w=null
set L0w=null
set C0w=null
return
endif
if Fc-eo[j0w]<=60 then
set Xb=Xb-1
set m0w=null
set K0w=null
set L0w=null
set C0w=null
return
endif
set P0w=hS[j0w]
set Cb[Xb]="when calling getLastPublicOrder in Revolts, line 21"
set Xb=Xb+1
if pO[P0w]==0 then
if P0w==0 then
call l1("Nullpointer exception when calling City.getLastPublicOrder","when calling error in City, line 335")
else
call l1("Called City.getLastPublicOrder on invalid object.","when calling error in City, line 335")
endif
endif
set A0w=Al[P0w]
set Xb=Xb-1
set D0w=hS[j0w]
set Cb[Xb]="when calling getPopulation in Revolts, line 22"
set Xb=Xb+1
if pO[D0w]==0 then
if D0w==0 then
call l1("Nullpointer exception when calling City.getPopulation","when calling error in City, line 344")
else
call l1("Called City.getPopulation on invalid object.","when calling error in City, line 344")
endif
endif
set H0w=Ul[D0w]
set Xb=Xb-1
set v0w=H0w
set J0w=hS[j0w]
set Cb[Xb]="when calling getCityUnit in Revolts, line 23"
set Xb=Xb+1
if pO[J0w]==0 then
if J0w==0 then
call l1("Nullpointer exception when calling City.getCityUnit","when calling error in City, line 188")
else
call l1("Called City.getCityUnit on invalid object.","when calling error in City, line 188")
endif
endif
set K0w=xl[J0w]
set Xb=Xb-1
set m0w=K0w
set L0w=GetOwningPlayer(K0w)
if GetPlayerSlotState(L0w)==PLAYER_SLOT_STATE_PLAYING then
set rww=GetPlayerController(L0w)==MAP_CONTROL_USER
else
set rww=false
endif
if not rww then
set Xb=Xb-1
set m0w=null
set K0w=null
set L0w=null
set C0w=null
return
endif
if A0w<50.0 then
set eo[j0w]=Fc
set X0w=hS[j0w]
set Cb[Xb]="when calling addModifier in Revolts, line 28"
set Xb=Xb+1
if pO[X0w]==0 then
if X0w==0 then
call l1("Nullpointer exception when calling City.addModifier","when calling error in City, line 368")
else
call l1("Called City.addModifier on invalid object.","when calling error in City, line 368")
endif
endif
call ctw(X0w,1,"when calling addModifier in City, line 368")
set Xb=Xb-1
set x0w="A violent mob has appeared near the gates of "+onw(hS[j0w],"when calling getCityNameColored in Revolts, line 29")+"!"
set C0w=GetOwningPlayer(K0w)
set Cb[Xb]="when calling attentionToPlayer in Revolts, line 29"
set Xb=Xb+1
call DisplayTimedTextToPlayer(C0w,0.,0.,10.0,i5(C0w,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(C0w,0.,0.,10.0,x0w)
set Xb=Xb-1
if A0w>=30.0 then
set V0w=No[0]
set Cb[Xb]="when calling iterator in Revolts, line 32"
set Xb=Xb+1
set B0w=kbw(V0w,"when calling new_LLIterator in LinkedList, line 165")
set Xb=Xb-1
set Q0w=B0w
loop
exitwhen Yb[gb[Q0w]]==Gb[Q0w]
set gb[Q0w]=Yb[gb[Q0w]]
set W0w=Rb[gb[Q0w]]
call CreateUnit(wo[PLAYER_NEUTRAL_AGGRESSIVE],W0w,GetUnitX(m0w),GetUnitY(m0w),0.)
if GetRandomReal(0.0,1.0)<=v0w*1./150000 then
call CreateUnit(wo[PLAYER_NEUTRAL_AGGRESSIVE],W0w,GetUnitX(m0w),GetUnitY(m0w),0.)
endif
endloop
set Cb[Xb]="when calling close in Revolts, line 32"
set Xb=Xb+1
if Fb[Q0w]then
call Sfw(Q0w,"when calling dispatch_LLIterator_destroyLLIterator in LinkedList, line 450")
endif
set Xb=Xb-1
elseif A0w>=15.0 then
set N0w=No[1]
set Cb[Xb]="when calling iterator in Revolts, line 38"
set Xb=Xb+1
set M0w=kbw(N0w,"when calling new_LLIterator in LinkedList, line 165")
set Xb=Xb-1
set E0w=M0w
loop
exitwhen Yb[gb[E0w]]==Gb[E0w]
set gb[E0w]=Yb[gb[E0w]]
set Z0w=Rb[gb[E0w]]
call CreateUnit(wo[PLAYER_NEUTRAL_AGGRESSIVE],Z0w,GetUnitX(m0w),GetUnitY(m0w),0.)
if GetRandomReal(0.0,1.0)<=v0w*1./150000 then
call CreateUnit(wo[PLAYER_NEUTRAL_AGGRESSIVE],Z0w,GetUnitX(m0w),GetUnitY(m0w),0.)
endif
endloop
set Cb[Xb]="when calling close in Revolts, line 38"
set Xb=Xb+1
if Fb[E0w]then
call Sfw(E0w,"when calling dispatch_LLIterator_destroyLLIterator in LinkedList, line 450")
endif
set Xb=Xb-1
else
set www=No[2]
set Cb[Xb]="when calling iterator in Revolts, line 44"
set Xb=Xb+1
set uww=kbw(www,"when calling new_LLIterator in LinkedList, line 165")
set Xb=Xb-1
set U0w=uww
loop
exitwhen Yb[gb[U0w]]==Gb[U0w]
set gb[U0w]=Yb[gb[U0w]]
set I0w=Rb[gb[U0w]]
call CreateUnit(wo[PLAYER_NEUTRAL_AGGRESSIVE],I0w,GetUnitX(m0w),GetUnitY(m0w),0.)
if GetRandomReal(0.0,1.0)<=v0w*1./150000 then
call CreateUnit(wo[PLAYER_NEUTRAL_AGGRESSIVE],I0w,GetUnitX(m0w),GetUnitY(m0w),0.)
endif
endloop
set Cb[Xb]="when calling close in Revolts, line 44"
set Xb=Xb+1
if Fb[U0w]then
call Sfw(U0w,"when calling dispatch_LLIterator_destroyLLIterator in LinkedList, line 450")
endif
set Xb=Xb-1
endif
endif
set Xb=Xb-1
set m0w=null
set K0w=null
set L0w=null
set C0w=null
endfunction
function Riw takes integer biw,string yiw returns real
local integer piw
local integer eiw
local boolean qiw
local real aiw
local real niw
local real diw
local real fiw
set Cb[Xb]=yiw
set Xb=Xb+1
set Al[biw]=100.0-Pl[biw]*1000.-SquareRoot(Ul[biw]*1.)/17.+Dl[biw]-Ul[biw]*1./1000*GS[Jl[biw]]
set aiw=El[biw]
set niw=Zl[biw]
set Cb[Xb]="when calling alloc_City_City_ForGroupCallback_line313 in City, line 313"
set Xb=Xb+1
if qO==0 then
if aO<32768 then
set aO=aO+1
set piw=aO
set nO[piw]=688
else
call l1("Out of memory: Could not create City_City_ForGroupCallback_line313.","when calling error in City, line 313")
set piw=0
endif
else
set qO=qO-1
set piw=eO[qO]
set nO[piw]=688
endif
set Xb=Xb-1
set Xl[piw]=biw
call cB(aiw,niw,500,piw,"when calling forUnitsInRange in City, line 313")
set diw=El[biw]
set fiw=Zl[biw]
set Cb[Xb]="when calling alloc_City_City_ForGroupCallback_line317 in City, line 317"
set Xb=Xb+1
if qO==0 then
if aO<32768 then
set aO=aO+1
set eiw=aO
set nO[eiw]=689
else
call l1("Out of memory: Could not create City_City_ForGroupCallback_line317.","when calling error in City, line 317")
set eiw=0
endif
else
set qO=qO-1
set eiw=eO[qO]
set nO[eiw]=689
endif
set Xb=Xb-1
set Cl[eiw]=biw
call cB(diw,fiw,1500.0,eiw,"when calling forUnitsInRange in City, line 317")
if Al[biw]<0.0 then
set Al[biw]=0.0
endif
if Al[biw]>100.0 then
set Al[biw]=100.0
endif
if Al[biw]<50.0 then
set qiw=GetRandomReal(0.0,1.0)<=0.01
else
set qiw=false
endif
if qiw then
call sww(ml[biw],"when calling checkForRevolt in City, line 328")
endif
set Xb=Xb-1
return Al[biw]
endfunction
function jiw takes integer Tiw,string Yiw returns string
local real Giw
local integer giw
local integer hiw
local integer Fiw
local integer kiw
set Cb[Xb]=Yiw
set Xb=Xb+1
set Cb[Xb]="when calling countPublicOrder in City, line 339"
set Xb=Xb+1
if pO[Tiw]==0 then
if Tiw==0 then
call l1("Nullpointer exception when calling City.countPublicOrder","when calling error in City, line 308")
else
call l1("Called City.countPublicOrder on invalid object.","when calling error in City, line 308")
endif
endif
set Giw=Riw(Tiw,"when calling countPublicOrder in City, line 308")
set Xb=Xb-1
set Fiw=R2I(255.-Giw/100.*255.)
set kiw=R2I(Giw/100.*255.)
set giw=Fiw/16
set hiw=kiw/16
set Yiw=StringCase("|cff"+VS[giw]+VS[Fiw-giw*16]+VS[hiw]+VS[kiw-hiw*16]+VS[0]+VS[0],false)+I2S(R2I(Giw))+","+I2S(R2I(ModuloReal(R2I(Giw*10.),10)))+"%|r"
set Xb=Xb-1
return Yiw
endfunction
function liw takes integer riw,string siw returns integer
local integer tiw
local real iiw
local real Siw
local real ciw
local real oiw
local real Oiw
set Cb[Xb]=siw
set Xb=Xb+1
set tiw=0
set tiw=0+Ldw(iS,GetUnitTypeId(xl[riw]),"when calling get in City, line 283")
set Oiw=Ul[riw]*1.
set Cb[Xb]="when calling countPublicOrder in City, line 295"
set Xb=Xb+1
if pO[riw]==0 then
if riw==0 then
call l1("Nullpointer exception when calling City.countPublicOrder","when calling error in City, line 308")
else
call l1("Called City.countPublicOrder on invalid object.","when calling error in City, line 308")
endif
endif
set oiw=Riw(riw,"when calling countPublicOrder in City, line 308")
set Xb=Xb-1
set iiw=oiw/100.
set Siw=bo
if 0.75>Siw then
set ciw=0.75
else
set ciw=Siw
endif
if iiw>ciw then
set ciw=iiw
endif
set tiw=tiw+R2I(SquareRoot(Oiw*ciw)/6.)
set tiw=R2I(tiw*Hl[riw]*TS[Jl[riw]])
set Xb=Xb-1
return tiw
endfunction
function miw takes integer xiw returns string
local string viw
if Ul[xiw]<100000 then
set viw=I2S(R2I(Ul[xiw]*1./1000))+","+I2S(R2I(ModuloReal(Ul[xiw],1000)/100.))+"k"
else
set viw=I2S(R2I(Ul[xiw]*1./1000))+"k"
endif
return viw
endfunction
function Y2 takes real T2 returns real
if T2>0. then
return 1.
elseif T2<0. then
return -1.
else
return 0.
endif
endfunction
function nww takes integer qww returns string
local string aww_2="|cff15ff00+"
if Y2(qww*1.)==-1. then
set aww_2="|cffff0000"
endif
return aww_2+I2S(qww)+"|r"
endfunction
function Oww takes string uww,string rww returns integer
local integer sww_2
local integer tww
local boolean iww
local integer Sww
local string cww
local integer oww
set Cb[Xb]=rww
set Xb=Xb+1
set sww_2=StringHash(uww)
loop
set tww=Io
set Cb[Xb]="when calling hasString in TypeCasting, line 25"
set Xb=Xb+1
if AO[tww]==0 then
if tww==0 then
call l1("Nullpointer exception when calling Table.hasString","when calling error in Table, line 18")
else
call l1("Called Table.hasString on invalid object.","when calling error in Table, line 18")
endif
endif
set iww=HaveSavedString(Wo,tww,sww_2)
set Xb=Xb-1
if iww then
set Sww=Io
set Cb[Xb]="when calling loadString in TypeCasting, line 26"
set Xb=Xb+1
if AO[Sww]==0 then
if Sww==0 then
call l1("Nullpointer exception when calling Table.loadString","when calling error in Table, line 57")
else
call l1("Called Table.loadString on invalid object.","when calling error in Table, line 57")
endif
endif
set cww=LoadStr(Wo,Sww,sww_2)
set Xb=Xb-1
exitwhen cww==uww
else
set oww=Io
set rww="when calling saveString in TypeCasting, line 29"
set Cb[Xb]="when calling saveString in TypeCasting, line 29"
set Xb=Xb+1
if AO[oww]==0 then
if oww==0 then
call l1("Nullpointer exception when calling Table.saveString","when calling error in Table, line 60")
else
call l1("Called Table.saveString on invalid object.","when calling error in Table, line 60")
endif
endif
call SaveStr(Wo,oww,sww_2,uww)
set Xb=Xb-1
exitwhen true
endif
set sww_2=sww_2+1
endloop
set Xb=Xb-1
return sww_2
endfunction
function N1 takes integer L1,integer X1,integer C1,string V1 returns integer
local integer B1
set Cb[Xb]=V1
set Xb=Xb+1
set Cb[Xb]="when calling stringFromIndex in LinkedList, line 349"
set Xb=Xb+1
set B1=Io
set Cb[Xb]="when calling loadString in TypeCasting, line 35"
set Xb=Xb+1
if AO[B1]==0 then
if B1==0 then
call l1("Nullpointer exception when calling Table.loadString","when calling error in Table, line 57")
else
call l1("Called Table.loadString on invalid object.","when calling error in Table, line 57")
endif
endif
set V1=LoadStr(Wo,B1,C1)
set Xb=Xb-1-1
set L1=Oww(V1+I2S(X1)+",","when calling stringToIndex in LinkedList, line 349")
set Xb=Xb-1
return L1
endfunction
function wfw takes integer Ndw,string Mdw returns nothing
set Cb[Xb]=Mdw
set Xb=Xb+1
if XO[Ndw]==0 then
if Ndw==0 then
call l1("Nullpointer exception when calling FoldClosure.FoldClosure","when calling error in LinkedList, line 498")
else
call l1("Called FoldClosure.FoldClosure on invalid object.","when calling error in LinkedList, line 498")
endif
endif
set Cb[Xb]="when calling destroyFoldClosure in LinkedList, line 498"
set Xb=Xb+1
set Cb[Xb]="when calling dealloc_FoldClosure in LinkedList, line 498"
set Xb=Xb+1
if XO[Ndw]==0 then
call l1("Double free: object of type FoldClosure","when calling error in LinkedList, line 498")
else
set JO[KO]=Ndw
set KO=KO+1
set XO[Ndw]=0
endif
set Xb=Xb-1-1-1
endfunction
function ryw takes integer Xbw,integer Cbw,integer Vbw,string Bbw returns integer
local integer Nbw
local integer Mbw
local integer wyw
local integer uyw
set Cb[Xb]=Bbw
set Xb=Xb+1
set Nbw=Cbw
set Mbw=Yb[kb[Xbw]]
loop
exitwhen Mbw==kb[Xbw]
set wyw=Rb[Mbw]
set Bbw="when calling run in LinkedList, line 281"
set Cb[Xb]="when calling run in LinkedList, line 281"
set Xb=Xb+1
if XO[Vbw]==0 then
if Vbw==0 then
call l1("Nullpointer exception when calling FoldClosure.run","when calling error in LinkedList, line 499")
else
call l1("Called FoldClosure.run on invalid object.","when calling error in LinkedList, line 499")
endif
endif
set uyw=N1(Vbw,wyw,Nbw,"when calling run_wrapper in LinkedList, line 499")
set Xb=Xb-1
set Nbw=uyw
set Mbw=Yb[Mbw]
endloop
call wfw(Vbw,"when calling dispatch_FoldClosure_destroyFoldClosure in LinkedList, line 283")
set Xb=Xb-1
return Nbw
endfunction
function lyw takes integer syw,string tyw returns string
local string iyw
local integer Syw
local integer cyw
local integer oyw
local integer Oyw
set Cb[Xb]=tyw
set Xb=Xb+1
set Syw=Oww("[","when calling stringToIndex in LinkedList, line 349")
set Cb[Xb]="when calling alloc_LinkedList_LinkedList_FoldClosure_line349 in LinkedList, line 349"
set Xb=Xb+1
if KO==0 then
if LO<32768 then
set LO=LO+1
set cyw=LO
set XO[cyw]=686
else
call l1("Out of memory: Could not create LinkedList_LinkedList_FoldClosure_line349.","when calling error in LinkedList, line 349")
set cyw=0
endif
else
set KO=KO-1
set cyw=JO[KO]
set XO[cyw]=686
endif
set Xb=Xb-1
set Cb[Xb]="when calling foldl in LinkedList, line 349"
set Xb=Xb+1
if Sl[syw]==0 then
if syw==0 then
call l1("Nullpointer exception when calling LinkedList.foldl","when calling error in LinkedList, line 277")
else
call l1("Called LinkedList.foldl on invalid object.","when calling error in LinkedList, line 277")
endif
endif
set Oyw=ryw(syw,Syw,cyw,"when calling foldl in LinkedList, line 277")
set Xb=Xb-1
set Cb[Xb]="when calling stringFromIndex in LinkedList, line 349"
set Xb=Xb+1
set oyw=Io
set Cb[Xb]="when calling loadString in TypeCasting, line 35"
set Xb=Xb+1
if AO[oyw]==0 then
if oyw==0 then
call l1("Nullpointer exception when calling Table.loadString","when calling error in Table, line 57")
else
call l1("Called Table.loadString on invalid object.","when calling error in Table, line 57")
endif
endif
set tyw=LoadStr(Wo,oyw,Oyw)
set Xb=Xb-1-1
set iyw=SubString(tyw,0,StringLength(tyw)-1)+"]"
set Xb=Xb-1
return iyw
endfunction
function pnw takes integer Onw,string lnw returns integer
local integer bnw
local integer ynw
set Cb[Xb]=lnw
set Xb=Xb+1
if pO[Onw]==0 then
if Onw==0 then
call l1("Nullpointer exception when calling City.getModifiers","when calling error in City, line 391")
else
call l1("Called City.getModifiers on invalid object.","when calling error in City, line 391")
endif
endif
set Cb[Xb]="when calling getModifiers in City, line 391"
set Xb=Xb+1
set ynw=Ll[Onw]
set Cb[Xb]="when calling toString in City, line 392"
set Xb=Xb+1
if Sl[ynw]==0 then
if ynw==0 then
call l1("Nullpointer exception when calling LinkedList.toString","when calling error in LinkedList, line 348")
else
call l1("Called LinkedList.toString on invalid object.","when calling error in LinkedList, line 348")
endif
endif
set lnw=lyw(ynw,"when calling toString in LinkedList, line 348")
set Xb=Xb-1
call Q2(lnw)
set Xb=Xb-1
set bnw=Ll[Onw]
set Xb=Xb-1
return bnw
endfunction
function Pew takes integer lew,string bew returns nothing
local integer yew
local multiboard pew
local integer eew
local integer qew
local integer aew
local multiboard dew
local integer few
local integer Rew
local multiboard Tew
local integer Yew
local integer Gew
local integer gew
local string hew
local integer Few
local string kew
local integer jew
local string xew
local integer vew
local string mew
local integer Qew
local integer Wew
local string Eew
local integer Zew
local integer Uew
local string Iew
set Cb[Xb]=bew
set Xb=Xb+1
if Db[lew]==-1 then
set Xb=Xb-1
set pew=null
set dew=null
set Tew=null
return
endif
set yew=GetPlayerId(Pb[lew])
call D8(Lc[yew],Jc[0],Jc[1],onw(hS[Db[lew]],"when calling getCityNameColored in PlayerStats, line 76"),0.40)
set Yew=hS[Db[lew]]
set Cb[Xb]="when calling countTax in PlayerStats, line 85"
set Xb=Xb+1
if pO[Yew]==0 then
if Yew==0 then
call l1("Nullpointer exception when calling City.countTax","when calling error in City, line 279")
else
call l1("Called City.countTax on invalid object.","when calling error in City, line 279")
endif
endif
set Gew=liw(Yew,"when calling countTax in City, line 279")
set Xb=Xb-1
set gew=hS[Db[lew]]
set Cb[Xb]="when calling getTaxLevelString in PlayerStats, line 86"
set Xb=Xb+1
if pO[gew]==0 then
if gew==0 then
call l1("Nullpointer exception when calling City.getTaxLevelString","when calling error in City, line 176")
else
call l1("Called City.getTaxLevelString on invalid object.","when calling error in City, line 176")
endif
endif
set hew=Qo[Jl[gew]]
set Xb=Xb-1
set Few=hS[Db[lew]]
set Cb[Xb]="when calling getPublicOrderStr in PlayerStats, line 87"
set Xb=Xb+1
if pO[Few]==0 then
if Few==0 then
call l1("Nullpointer exception when calling City.getPublicOrderStr","when calling error in City, line 338")
else
call l1("Called City.getPublicOrderStr on invalid object.","when calling error in City, line 338")
endif
endif
set kew=jiw(Few,"when calling getPublicOrderStr in City, line 338")
set Xb=Xb-1
set jew=hS[Db[lew]]
set Cb[Xb]="when calling getPopulationStr in PlayerStats, line 88"
set Xb=Xb+1
if pO[jew]==0 then
if jew==0 then
call l1("Nullpointer exception when calling City.getPopulationStr","when calling error in City, line 359")
else
call l1("Called City.getPopulationStr on invalid object.","when calling error in City, line 359")
endif
endif
set xew=miw(jew)
set Xb=Xb-1
set vew=hS[Db[lew]]
set Cb[Xb]="when calling getPopulationGrowthStr in PlayerStats, line 89"
set Xb=Xb+1
if pO[vew]==0 then
if vew==0 then
call l1("Nullpointer exception when calling City.getPopulationGrowthStr","when calling error in City, line 356")
else
call l1("Called City.getPopulationGrowthStr on invalid object.","when calling error in City, line 356")
endif
endif
set mew=nww(Il[vew])
set Xb=Xb-1
set pew=Lc[yew]
set Qew=Pc[0]
set Wew=Pc[1]
set Eew=I2S(Gew)
call MultiboardSetItemValue(MultiboardGetItem(pew,Wew,Qew),Eew)
call MultiboardSetItemValue(MultiboardGetItem(pew,Pc[1],Pc[0]+1),hew)
call MultiboardSetItemValue(MultiboardGetItem(pew,Ac[1],Ac[0]),kew)
call MultiboardSetItemValue(MultiboardGetItem(pew,Dc[1],Dc[0]),xew)
call MultiboardSetItemValue(MultiboardGetItem(pew,Hc[1],Hc[0]),mew)
set eew=0
set Zew=pnw(hS[Db[lew]],"when calling getModifiers in PlayerStats, line 99")
set Cb[Xb]="when calling iterator in PlayerStats, line 99"
set Xb=Xb+1
set Uew=kbw(Zew,"when calling new_LLIterator in LinkedList, line 165")
set Xb=Xb-1
set qew=Uew
loop
exitwhen Yb[gb[qew]]==Gb[qew]
set gb[qew]=Yb[gb[qew]]
set aew=Rb[gb[qew]]
set dew=Lc[yew]
set Iew=kl[Ldw(aS,aew,"when calling get in PlayerStats, line 101")]
call MultiboardSetItemValue(MultiboardGetItem(dew,4+eew,4),Iew)
set bew="("+jl[Ldw(aS,aew,"when calling get in PlayerStats, line 102")]+")"
call MultiboardSetItemValue(MultiboardGetItem(dew,4+eew,5),bew)
set eew=eew+1
endloop
set Cb[Xb]="when calling close in PlayerStats, line 99"
set Xb=Xb+1
if Fb[qew]then
call Sfw(qew,"when calling dispatch_LLIterator_destroyLLIterator in LinkedList, line 450")
endif
set Xb=Xb-1
set few=eew
set Rew=9
loop
exitwhen few>Rew
set Tew=Lc[yew]
call MultiboardSetItemValue(MultiboardGetItem(Tew,4+few,4)," ")
call MultiboardSetItemValue(MultiboardGetItem(Tew,4+few,5)," ")
set few=few+1
endloop
set Xb=Xb-1
set pew=null
set dew=null
set Tew=null
endfunction
function qtw takes integer otw,string Otw returns nothing
local integer ltw
local integer btw
local integer ytw
local integer ptw
local integer etw
set Cb[Xb]=Otw
set Xb=Xb+1
set ltw=0
set btw=23
loop
exitwhen ltw>btw
set ytw=Mc[ltw]
set Otw="when calling getSelectedCityId in City, line 252"
set Cb[Xb]="when calling getSelectedCityId in City, line 252"
set Xb=Xb+1
if yl[ytw]==0 then
if ytw==0 then
call l1("Nullpointer exception when calling PlayerStats.getSelectedCityId","when calling error in PlayerStats, line 112")
else
call l1("Called PlayerStats.getSelectedCityId on invalid object.","when calling error in PlayerStats, line 112")
endif
endif
set ptw=Db[ytw]
set Xb=Xb-1
if ptw==ml[otw]then
set etw=Mc[ltw]
set Cb[Xb]="when calling refreshMultiboardCity in City, line 253"
set Xb=Xb+1
if yl[etw]==0 then
if etw==0 then
call l1("Nullpointer exception when calling PlayerStats.refreshMultiboardCity","when calling error in PlayerStats, line 71")
else
call l1("Called PlayerStats.refreshMultiboardCity on invalid object.","when calling error in PlayerStats, line 71")
endif
endif
call Pew(etw,"when calling refreshMultiboardCity in PlayerStats, line 71")
set Xb=Xb-1
endif
set ltw=ltw+1
endloop
set Xb=Xb-1
endfunction
function ktw takes integer Ytw,integer Gtw,string gtw returns nothing
local integer htw
local integer Ftw
set Cb[Xb]=gtw
set Xb=Xb+1
if Gtw==PLAYER_NEUTRAL_AGGRESSIVE then
call SetUnitOwner(xl[Ytw],Player(PLAYER_NEUTRAL_AGGRESSIVE),true)
set Cb[Xb]="when calling changeTaxLevelFORCED in City, line 204"
set Xb=Xb+1
if pO[Ytw]==0 then
if Ytw==0 then
call l1("Nullpointer exception when calling City.changeTaxLevelFORCED","when calling error in City, line 273")
else
call l1("Called City.changeTaxLevelFORCED on invalid object.","when calling error in City, line 273")
endif
endif
set Dl[Ytw]=Dl[Ytw]-YS[Jl[Ytw]]
set Dl[Ytw]=Dl[Ytw]+YS[0]
set Jl[Ytw]=0
set Xb=Xb-1
else
call SetUnitOwner(xl[Ytw],wo[Gtw],true)
endif
set Wl[Ytw]=Gtw
if Gtw>=0 and Gtw<24 then
set htw=Mc[Gtw]
set Cb[Xb]="when calling getForceId in City, line 211"
set Xb=Xb+1
if yl[htw]==0 then
if htw==0 then
call l1("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 122")
else
call l1("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 122")
endif
endif
set Ftw=Ib[htw]
set Xb=Xb-1
set Ql[Ytw]=Ftw
endif
set Cb[Xb]="when calling refreshMultiboardIfPossible in City, line 213"
set Xb=Xb+1
if pO[Ytw]==0 then
if Ytw==0 then
call l1("Nullpointer exception when calling City.refreshMultiboardIfPossible","when calling error in City, line 250")
else
call l1("Called City.refreshMultiboardIfPossible on invalid object.","when calling error in City, line 250")
endif
endif
call qtw(Ytw,"when calling refreshMultiboardIfPossible in City, line 250")
set Xb=Xb-1-1
endfunction
function Vtw takes integer Wtw,player Etw,string Ztw returns nothing
local integer Utw
local integer Itw
local unit Ptw
local unit Atw
local real Dtw
local integer Htw
local integer Jtw
local integer Ktw
local integer Ltw
local boolean Xtw
local integer Ctw
set Cb[Xb]=Ztw
set Xb=Xb+1
set Ptw=xl[Wtw]
call SetUnitState(Ptw,UNIT_STATE_LIFE,GetUnitState(Ptw,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,60.0)*0.01)
set Atw=xl[Wtw]
call SetUnitState(Atw,UNIT_STATE_MANA,GetUnitState(Atw,UNIT_STATE_MAX_MANA)*RMaxBJ(0.,30.0)*0.01)
set Cb[Xb]="when calling addModifier in City, line 234"
set Xb=Xb+1
if pO[Wtw]==0 then
if Wtw==0 then
call l1("Nullpointer exception when calling City.addModifier","when calling error in City, line 368")
else
call l1("Called City.addModifier on invalid object.","when calling error in City, line 368")
endif
endif
call ctw(Wtw,0,"when calling addModifier in City, line 368")
set Xb=Xb-1
set Dtw=Gl[Ldw(aS,6,"when calling get in City, line 235")]
if GetRandomReal(0.0,1.0)<=Dtw then
set Cb[Xb]="when calling addModifier in City, line 236"
set Xb=Xb+1
if pO[Wtw]==0 then
if Wtw==0 then
call l1("Nullpointer exception when calling City.addModifier","when calling error in City, line 368")
else
call l1("Called City.addModifier on invalid object.","when calling error in City, line 368")
endif
endif
call ctw(Wtw,6,"when calling addModifier in City, line 368")
set Xb=Xb-1
endif
set Utw=Ql[Wtw]
set Itw=GetPlayerId(Etw)
if Itw>=0 and Itw<24 then
set Htw=Mc[Itw]
set Cb[Xb]="when calling getForceId in City, line 242"
set Xb=Xb+1
if yl[Htw]==0 then
if Htw==0 then
call l1("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 122")
else
call l1("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 122")
endif
endif
set Jtw=Ib[Htw]
set Xb=Xb-1
set Utw=Jtw
endif
set Ktw=Co
set Ltw=GetUnitTypeId(xl[Wtw])
set Cb[Xb]="when calling has in City, line 244"
set Xb=Xb+1
if Sl[Ktw]==0 then
if Ktw==0 then
call l1("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call l1("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set Xtw=Ubw(Ktw,Ltw)
set Xb=Xb-1
if Xtw then
set Ctw=AC(UC(GetUnitTypeId(xl[Wtw])),Utw)
set Cb[Xb]="when calling replaceCity in City, line 245"
set Xb=Xb+1
if pO[Wtw]==0 then
if Wtw==0 then
call l1("Nullpointer exception when calling City.replaceCity","when calling error in City, line 194")
else
call l1("Called City.replaceCity on invalid object.","when calling error in City, line 194")
endif
endif
call Ttw(Wtw,Ctw,"when calling replaceCity in City, line 194")
set Xb=Xb-1
endif
set Cb[Xb]="when calling changeOwner in City, line 247"
set Xb=Xb+1
if pO[Wtw]==0 then
if Wtw==0 then
call l1("Nullpointer exception when calling City.changeOwner","when calling error in City, line 199")
else
call l1("Called City.changeOwner on invalid object.","when calling error in City, line 199")
endif
endif
call ktw(Wtw,Itw,"when calling changeOwner in City, line 199")
set Xb=Xb-1
call UnitAddAbility(xl[Wtw],1093677634)
set Xb=Xb-1
set Ptw=null
set Atw=null
endfunction
function e5 takes string S5,force c5,string o5 returns nothing
local integer O5
local integer l5
local player b5
local player y5
local force p5
set Cb[Xb]=o5
set Xb=Xb+1
set O5=0
set l5=23
loop
exitwhen O5>l5
set y5=wo[O5]
set p5=CreateForce()
call ForceAddPlayer(p5,y5)
if p5==c5 then
set b5=wo[O5]
call DisplayTimedTextToPlayer(b5,0.,0.,10.0,i5(b5,"when calling getAttentionStringForPlayer in Messages, line 116"))
call DisplayTimedTextToPlayer(b5,0.,0.,10.0,S5)
endif
set O5=O5+1
endloop
set Xb=Xb-1
set b5=null
set y5=null
set p5=null
endfunction
function Isw takes integer Rsw,string Tsw returns nothing
local unit Ysw
local integer Gsw
local integer gsw
local integer hsw
local boolean Fsw
local unit ksw
local integer jsw
local boolean xsw
local integer vsw
local player msw
local boolean Qsw
local real Wsw
local real Esw
local real Zsw
local real Usw
set Cb[Xb]=Tsw
set Xb=Xb+1
set Ysw=GetTriggerUnit()
set Cb[Xb]="when calling isCity in CityManage, line 37"
set Xb=Xb+1
set Cb[Xb]="when calling isCity in UnitTools, line 5"
set Xb=Xb+1
set gsw=Bo
set hsw=GetUnitTypeId(Ysw)
set Cb[Xb]="when calling has in City, line 437"
set Xb=Xb+1
if Sl[gsw]==0 then
if gsw==0 then
call l1("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call l1("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set Fsw=Ubw(gsw,hsw)
set Xb=Xb-1-1-1
if Fsw then
if GetUnitStatePercent(Ysw,UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)<=50.0 then
set Qsw=GetOwningPlayer(Ysw)!=GetOwningPlayer(GetAttacker())
else
set Qsw=false
endif
if Qsw then
set Wsw=GetUnitX(Ysw)
set Esw=GetUnitY(Ysw)
set ksw=GetAttacker()
set Zsw=Wsw-GetUnitX(ksw)
set Usw=Esw-GetUnitY(ksw)
if SquareRoot(Zsw*Zsw+Usw*Usw)>300.0 then
call SetUnitState(Ysw,UNIT_STATE_LIFE,GetUnitState(Ysw,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,50.0)*0.01)
else
set Cb[Xb]="when calling getCityId in CityManage, line 42"
set Xb=Xb+1
set jsw=CC(Ysw,"when calling getCityId in UnitTools, line 9")
set Xb=Xb-1
set Gsw=GetUnitTypeId(Ysw)
set Rsw=Co
set Cb[Xb]="when calling has in CityManage, line 44"
set Xb=Xb+1
if Sl[Rsw]==0 then
if Rsw==0 then
call l1("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call l1("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set xsw=Ubw(Rsw,Gsw)
set Xb=Xb-1
if xsw then
call e5(TB(GetOwningPlayer(GetAttacker()))+" has just captured "+TB(GetOwningPlayer(GetTriggerUnit()))+" Capitol!",bj_FORCE_ALL_PLAYERS,"when calling attentionToForce in CityManage, line 45")
endif
set vsw=hS[jsw]
set msw=GetOwningPlayer(GetAttacker())
set Cb[Xb]="when calling capture in CityManage, line 46"
set Xb=Xb+1
if pO[vsw]==0 then
if vsw==0 then
call l1("Nullpointer exception when calling City.capture","when calling error in City, line 230")
else
call l1("Called City.capture on invalid object.","when calling error in City, line 230")
endif
endif
call Vtw(vsw,msw,"when calling capture in City, line 230")
set Xb=Xb-1
endif
elseif GetUnitStatePercent(Ysw,UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)<=50.0 then
call SetUnitState(Ysw,UNIT_STATE_LIFE,GetUnitState(Ysw,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,50.0)*0.01)
endif
endif
set Xb=Xb-1
set Ysw=null
set ksw=null
set msw=null
endfunction
function Nww takes unit Kww,unit Lww returns real
local real Xww_2=GetUnitX(Kww)
local real Cww=GetUnitY(Kww)
local real Vww=Xww_2-GetUnitX(Lww)
local real Bww=Cww-GetUnitY(Lww)
return SquareRoot(Vww*Vww+Bww*Bww)
endfunction
function Lqw takes integer gqw,string hqw returns nothing
local unit Fqw
local integer kqw
local player jqw
local group xqw
local integer vqw
local boolean mqw
local location Qqw
local group Wqw
local unit Eqw
local integer Zqw
local boolean Uqw
local integer Iqw
local boolean Pqw
local integer Aqw
local timer Dqw
local boolean Hqw
local boolean Jqw
local boolean Kqw
set Cb[Xb]=hqw
set Xb=Xb+1
set Fqw=GetTriggerUnit()
set kqw=GetUnitTypeId(Fqw)
set vqw=lo
set Cb[Xb]="when calling has in RangeChecks, line 14"
set Xb=Xb+1
if Sl[vqw]==0 then
if vqw==0 then
call l1("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call l1("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set mqw=Ubw(vqw,kqw)
set Xb=Xb-1
if mqw then
set jqw=GetOwningPlayer(Fqw)
set Qqw=GetUnitLoc(Fqw)
set Wqw=CreateGroup()
call GroupEnumUnitsInRangeOfLoc(Wqw,Qqw,2000.0,null)
call DestroyBoolExpr(null)
set qc=CreateGroup()
call ForGroup(Wqw,Pf)
set xqw=qc
loop
exitwhen FirstOfGroup(xqw)==null
set Eqw=FirstOfGroup(xqw)
call GroupRemoveUnit(xqw,Eqw)
if GetOwningPlayer(Eqw)==jqw and Eqw!=Fqw then
if GetUnitTypeId(Eqw)==kqw and Nww(Eqw,Fqw)<=1500 then
set Jqw=true
else
set Zqw=Vo
set Cb[Xb]="when calling has in RangeChecks, line 21"
set Xb=Xb+1
if Sl[Zqw]==0 then
if Zqw==0 then
call l1("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call l1("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set Uqw=Ubw(Zqw,kqw)
set Xb=Xb-1
if Uqw then
set Iqw=Vo
set gqw=GetUnitTypeId(Eqw)
set Cb[Xb]="when calling has in RangeChecks, line 21"
set Xb=Xb+1
if Sl[Iqw]==0 then
if Iqw==0 then
call l1("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call l1("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set Pqw=Ubw(Iqw,gqw)
set Xb=Xb-1
set Hqw=Pqw
else
set Hqw=false
endif
set Jqw=Hqw
endif
set Kqw=Jqw
else
set Kqw=false
endif
if Kqw then
set Cb[Xb]="when calling alloc_RangeChecks_CallbackSingle_line23 in RangeChecks, line 23"
set Xb=Xb+1
if fO==0 then
if RO<32768 then
set RO=RO+1
set Aqw=RO
set TO[Aqw]=652
else
call l1("Out of memory: Could not create RangeChecks_CallbackSingle_line23.","when calling error in RangeChecks, line 23")
set Aqw=0
endif
else
set fO=fO-1
set Aqw=dO[fO]
set TO[Aqw]=652
endif
set Xb=Xb-1
set Kb[Aqw]=Fqw
set Cb[Xb]="when calling doAfter in RangeChecks, line 23"
set Xb=Xb+1
set Dqw=Xww("when calling getTimer in ClosureTimers, line 27")
set Cb[Xb]="when calling doAfter in ClosureTimers, line 27"
set Xb=Xb+1
call odw(Aqw,Dqw,0.01,"when calling start in ClosureTimers, line 16")
set Xb=Xb-1-1
if kqw==1747988557 then
set Cb[Xb]="when calling attentionToPlayer in RangeChecks, line 27"
set Xb=Xb+1
call DisplayTimedTextToPlayer(jqw,0.,0.,10.0,i5(jqw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(jqw,0.,0.,10.0,"You cannot build settlements too close to each other.")
set Xb=Xb-1
elseif kqw==1747989041 then
set hqw="You cannot build settlements too close to each other."
set Cb[Xb]="when calling attentionToPlayer in RangeChecks, line 29"
set Xb=Xb+1
call DisplayTimedTextToPlayer(jqw,0.,0.,10.0,i5(jqw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(jqw,0.,0.,10.0,"You cannot build settlements too close to each other.")
set Xb=Xb-1
elseif kqw==1747990344 then
set Cb[Xb]="when calling attentionToPlayer in RangeChecks, line 31"
set Xb=Xb+1
call DisplayTimedTextToPlayer(jqw,0.,0.,10.0,i5(jqw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(jqw,0.,0.,10.0,"You cannot build settlements too close to each other.")
set Xb=Xb-1
elseif kqw==1747989075 then
set Cb[Xb]="when calling attentionToPlayer in RangeChecks, line 33"
set Xb=Xb+1
call DisplayTimedTextToPlayer(jqw,0.,0.,10.0,i5(jqw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(jqw,0.,0.,10.0,"You cannot build churches too close to each other.")
set Xb=Xb-1
elseif kqw==1747990102 then
set Cb[Xb]="when calling attentionToPlayer in RangeChecks, line 35"
set Xb=Xb+1
call DisplayTimedTextToPlayer(jqw,0.,0.,10.0,i5(jqw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(jqw,0.,0.,10.0,"You cannot build churches too close to each other.")
set Xb=Xb-1
elseif kqw==1747988785 then
set Cb[Xb]="when calling attentionToPlayer in RangeChecks, line 37"
set Xb=Xb+1
call DisplayTimedTextToPlayer(jqw,0.,0.,10.0,i5(jqw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(jqw,0.,0.,10.0,"You cannot build churches too close to each other.")
set Xb=Xb-1
elseif kqw==1747989839 then
set Cb[Xb]="when calling attentionToPlayer in RangeChecks, line 39"
set Xb=Xb+1
call DisplayTimedTextToPlayer(jqw,0.,0.,10.0,i5(jqw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(jqw,0.,0.,10.0,"You cannot build mosques too close to each other.")
set Xb=Xb-1
elseif kqw==1747989059 then
set Cb[Xb]="when calling attentionToPlayer in RangeChecks, line 41"
set Xb=Xb+1
call DisplayTimedTextToPlayer(jqw,0.,0.,10.0,i5(jqw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(jqw,0.,0.,10.0,"You cannot build castles too close to each other.")
set Xb=Xb-1
elseif kqw==1747989331 then
set Cb[Xb]="when calling attentionToPlayer in RangeChecks, line 43"
set Xb=Xb+1
call DisplayTimedTextToPlayer(jqw,0.,0.,10.0,i5(jqw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(jqw,0.,0.,10.0,"You cannot build castles too close to each other.")
set Xb=Xb-1
elseif kqw==1747990351 then
set Cb[Xb]="when calling attentionToPlayer in RangeChecks, line 45"
set Xb=Xb+1
call DisplayTimedTextToPlayer(jqw,0.,0.,10.0,i5(jqw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(jqw,0.,0.,10.0,"You cannot build castles too close to each other.")
set Xb=Xb-1
elseif kqw==1747990353 then
set Cb[Xb]="when calling attentionToPlayer in RangeChecks, line 47"
set Xb=Xb+1
call DisplayTimedTextToPlayer(jqw,0.,0.,10.0,i5(jqw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(jqw,0.,0.,10.0,"You cannot build castles too close to each other.")
set Xb=Xb-1
elseif kqw==1747988568 then
set Cb[Xb]="when calling attentionToPlayer in RangeChecks, line 49"
set Xb=Xb+1
call DisplayTimedTextToPlayer(jqw,0.,0.,10.0,i5(jqw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(jqw,0.,0.,10.0,"You cannot build inns too close to each other.")
set Xb=Xb-1
elseif kqw==1747990341 then
set Cb[Xb]="when calling attentionToPlayer in RangeChecks, line 51"
set Xb=Xb+1
call DisplayTimedTextToPlayer(jqw,0.,0.,10.0,i5(jqw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(jqw,0.,0.,10.0,"You cannot build inns too close to each other.")
set Xb=Xb-1
endif
exitwhen true
endif
endloop
call GroupClear(xqw)
call DestroyGroup(xqw)
endif
set Xb=Xb-1
set Fqw=null
set jqw=null
set xqw=null
set Qqw=null
set Wqw=null
set Eqw=null
set Dqw=null
endfunction
function Obw takes integer ibw returns nothing
local unit Sbw=GetTriggerUnit()
local player cbw
local player obw
if GetUnitTypeId(Sbw)==1747990614 then
set cbw=GetOwningPlayer(Sbw)
set obw=GetOwningPlayer(Sbw)
set Rc[GetPlayerId(cbw)]=Rc[GetPlayerId(obw)]-1
endif
set Sbw=null
set cbw=null
set obw=null
endfunction
function Oew takes integer Npw,string Mpw returns nothing
local unit wew
local integer uew
local integer rew
local boolean sew
local player tew
local player iew
local integer Sew
local integer cew
local integer oew
set Cb[Xb]=Mpw
set Xb=Xb+1
set uew=Jo
set rew=GetUnitTypeId(GetTriggerUnit())
set Cb[Xb]="when calling has in OreCapture, line 22"
set Xb=Xb+1
if Sl[uew]==0 then
if uew==0 then
call l1("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call l1("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set sew=Ubw(uew,rew)
set Xb=Xb-1
if sew then
set wew=GetTriggerUnit()
if GetUnitStatePercent(wew,UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)<=80.0 then
call SetUnitOwner(wew,GetOwningPlayer(GetAttacker()),true)
call SetUnitState(wew,UNIT_STATE_LIFE,GetUnitState(wew,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.0)*0.01)
set tew=GetOwningPlayer(wew)
set Sew=rc[GetPlayerId(GetOwningPlayer(wew))]
set Npw=Ko
set rc[GetPlayerId(tew)]=Sew-Ldw(Npw,GetUnitTypeId(wew),"when calling get in OreCapture, line 29")
set iew=GetOwningPlayer(GetAttacker())
set oew=rc[GetPlayerId(GetOwningPlayer(GetAttacker()))]
set cew=Ko
set rc[GetPlayerId(iew)]=oew+Ldw(cew,GetUnitTypeId(wew),"when calling get in OreCapture, line 30")
endif
endif
set Xb=Xb-1
set wew=null
set tew=null
set iew=null
endfunction
function Paw takes integer haw,string Faw returns nothing
local unit kaw
local unit jaw
local integer xaw
local integer vaw
local player maw
local integer Qaw
local integer Waw
local player Eaw
local integer Zaw
local boolean Uaw
local boolean Iaw
set Cb[Xb]=Faw
set Xb=Xb+1
if GetSpellAbilityId()==1093677620 then
set kaw=GetSpellAbilityUnit()
set jaw=GetSpellTargetUnit()
set xaw=GetPlayerId(GetOwningPlayer(kaw))
set vaw=GetPlayerId(GetOwningPlayer(jaw))
set maw=wo[xaw]
if GetPlayerSlotState(maw)==PLAYER_SLOT_STATE_PLAYING then
set Uaw=GetPlayerController(maw)==MAP_CONTROL_USER
else
set Uaw=false
endif
if Uaw then
set Qaw=Mc[xaw]
set Waw=-GetUnitLevel(jaw)
set Cb[Xb]="when calling changeUpkeep in Upkeep, line 15"
set Xb=Xb+1
if yl[Qaw]==0 then
if Qaw==0 then
call l1("Nullpointer exception when calling PlayerStats.changeUpkeep","when calling error in PlayerStats, line 51")
else
call l1("Called PlayerStats.changeUpkeep on invalid object.","when calling error in PlayerStats, line 51")
endif
endif
set Hb[Qaw]=Hb[Qaw]+Waw
set Xb=Xb-1
endif
set Eaw=wo[vaw]
if GetPlayerSlotState(Eaw)==PLAYER_SLOT_STATE_PLAYING then
set Iaw=GetPlayerController(Eaw)==MAP_CONTROL_USER
else
set Iaw=false
endif
if Iaw then
set haw=Mc[vaw]
set Zaw=GetUnitLevel(jaw)
set Cb[Xb]="when calling changeUpkeep in Upkeep, line 17"
set Xb=Xb+1
if yl[haw]==0 then
if haw==0 then
call l1("Nullpointer exception when calling PlayerStats.changeUpkeep","when calling error in PlayerStats, line 51")
else
call l1("Called PlayerStats.changeUpkeep on invalid object.","when calling error in PlayerStats, line 51")
endif
endif
set Hb[haw]=Hb[haw]+Zaw
set Xb=Xb-1
endif
endif
set Xb=Xb-1
set kaw=null
set jaw=null
set maw=null
set Eaw=null
endfunction
function Vlw takes integer Klw returns nothing
local unit Llw=GetConstructingStructure()
local player Xlw
local player Clw
if GetUnitTypeId(Llw)==1747988808 then
set Xlw=GetOwningPlayer(Llw)
set Clw=GetOwningPlayer(Llw)
set fc[GetPlayerId(Xlw)]=fc[GetPlayerId(Clw)]-1
endif
set Llw=null
set Xlw=null
set Clw=null
endfunction
function kfw takes integer gfw,integer hfw,string Ffw returns nothing
set Cb[Xb]=Ffw
set Xb=Xb+1
if yl[gfw]==0 then
if gfw==0 then
call l1("Nullpointer exception when calling PlayerStats.setSelectedCityId","when calling error in PlayerStats, line 116")
else
call l1("Called PlayerStats.setSelectedCityId on invalid object.","when calling error in PlayerStats, line 116")
endif
endif
set Cb[Xb]="when calling setSelectedCityId in PlayerStats, line 116"
set Xb=Xb+1
if hfw>=0 and hfw<nS then
set Db[gfw]=hfw
set Cb[Xb]="when calling refreshMultiboardCity in PlayerStats, line 119"
set Xb=Xb+1
if yl[gfw]==0 then
if gfw==0 then
call l1("Nullpointer exception when calling PlayerStats.refreshMultiboardCity","when calling error in PlayerStats, line 71")
else
call l1("Called PlayerStats.refreshMultiboardCity on invalid object.","when calling error in PlayerStats, line 71")
endif
endif
call Pew(gfw,"when calling refreshMultiboardCity in PlayerStats, line 71")
set Xb=Xb-1
endif
set Xb=Xb-1-1
endfunction
function fsw takes integer esw,string qsw returns nothing
local unit asw
local integer nsw
local boolean dsw
set Cb[Xb]=qsw
set Xb=Xb+1
set asw=GetTriggerUnit()
set Cb[Xb]="when calling isCity in CityManage, line 10"
set Xb=Xb+1
set Cb[Xb]="when calling isCity in UnitTools, line 5"
set Xb=Xb+1
set nsw=Bo
set esw=GetUnitTypeId(asw)
set Cb[Xb]="when calling has in City, line 437"
set Xb=Xb+1
if Sl[nsw]==0 then
if nsw==0 then
call l1("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call l1("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set dsw=Ubw(nsw,esw)
set Xb=Xb-1-1-1
if dsw then
call kfw(Mc[GetPlayerId(GetTriggerPlayer())],CC(GetTriggerUnit(),"when calling getCityId in CityManage, line 11"),"when calling setSelectedCityId in CityManage, line 11")
endif
set Xb=Xb-1
set asw=null
endfunction
function eYw takes integer bYw,integer yYw,string pYw returns nothing
set Cb[Xb]=pYw
set Xb=Xb+1
if ZO[bYw]==0 then
if bYw==0 then
call l1("Nullpointer exception when calling HashList.add","when calling error in HashList, line 25")
else
call l1("Called HashList.add on invalid object.","when calling error in HashList, line 25")
endif
endif
if ZO[bYw]<=695 then
call sYw(bYw,yYw,"when calling add in HashList, line 25")
else
call lYw(bYw,yYw,"when calling add in HashList, line 25")
endif
set Xb=Xb-1
endfunction
function rlw takes integer NOw,integer MOw,integer wlw,string ulw returns nothing
set Cb[Xb]=ulw
set Xb=Xb+1
if not Edw(NOw,MOw,"when calling has in HashMap, line 18") then
set qb[NOw]=qb[NOw]+1
endif
set Cb[Xb]="when calling saveInt in HashMap, line 20"
set Xb=Xb+1
if AO[NOw]==0 then
if NOw==0 then
call l1("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call l1("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Wo,NOw,MOw,wlw)
set Xb=Xb-1-1
endfunction
function qlw takes integer llw,integer blw,integer ylw,string plw returns nothing
local boolean elw
set Cb[Xb]=plw
set Xb=Xb+1
call rlw(llw,blw,ylw,"when calling put in HashMap, line 60")
set Cb[Xb]="when calling hasKey in HashMap, line 61"
set Xb=Xb+1
if AO[llw]==0 then
if llw==0 then
call l1("Nullpointer exception when calling IterableMap.hasKey","when calling error in HashMap, line 87")
else
call l1("Called IterableMap.hasKey on invalid object.","when calling error in HashMap, line 87")
endif
endif
set Cb[Xb]="when calling hasKey in HashMap, line 87"
set Xb=Xb+1
set elw=xdw(ab[llw],blw,"when calling has in HashMap, line 88")
set Xb=Xb-1-1
if not elw then
call eYw(ab[llw],blw,"when calling add in HashMap, line 62")
endif
set Xb=Xb-1
endfunction
function Adw takes integer Zdw,integer Udw,integer Idw,string Pdw returns nothing
set Cb[Xb]=Pdw
set Xb=Xb+1
if AO[Zdw]==0 then
if Zdw==0 then
call l1("Nullpointer exception when calling HashMap.put","when calling error in HashMap, line 17")
else
call l1("Called HashMap.put on invalid object.","when calling error in HashMap, line 17")
endif
endif
if AO[Zdw]<=733 then
call rlw(Zdw,Udw,Idw,"when calling put in HashMap, line 17")
else
call qlw(Zdw,Udw,Idw,"when calling put in HashMap, line 17")
endif
set Xb=Xb-1
endfunction
function Lbw takes string Jbw returns integer
local integer Kbw
set Cb[Xb]=Jbw
set Xb=Xb+1
set Cb[Xb]="when calling alloc_LinkedList in LinkedList, line 31"
set Xb=Xb+1
if tl==0 then
if il<32768 then
set il=il+1
set Kbw=il
set Sl[Kbw]=707
else
call l1("Out of memory: Could not create LinkedList.","when calling error in LinkedList, line 17")
set Kbw=0
endif
else
set tl=tl-1
set Kbw=sl[tl]
set Sl[Kbw]=707
endif
set Xb=Xb-1
set Cb[Xb]="when calling construct_LinkedList2 in LinkedList, line 31"
set Xb=Xb+1
set kb[Kbw]=Gbw(0,0,0,"when calling new_LLEntry in LinkedList, line 18")
set jb[Kbw]=0
set Yb[kb[Kbw]]=kb[Kbw]
set Tb[kb[Kbw]]=kb[Kbw]
set Xb=Xb-1-1
return Kbw
endfunction
function ffw takes integer yfw,integer pfw,string efw returns integer
local integer qfw
local integer afw
local integer nfw
local integer dfw
set Cb[Xb]=efw
set Xb=Xb+1
if Sl[yfw]==0 then
if yfw==0 then
call l1("Nullpointer exception when calling LinkedList.get","when calling error in LinkedList, line 50")
else
call l1("Called LinkedList.get on invalid object.","when calling error in LinkedList, line 50")
endif
endif
set Cb[Xb]="when calling get in LinkedList, line 50"
set Xb=Xb+1
set Cb[Xb]="when calling getEntry in LinkedList, line 51"
set Xb=Xb+1
if Sl[yfw]==0 then
if yfw==0 then
call l1("Nullpointer exception when calling LinkedList.getEntry","when calling error in LinkedList, line 366")
else
call l1("Called LinkedList.getEntry on invalid object.","when calling error in LinkedList, line 366")
endif
endif
set afw=kb[yfw]
set nfw=0
set dfw=pfw
loop
exitwhen nfw>dfw
set afw=Yb[afw]
set nfw=nfw+1
endloop
set Xb=Xb-1
set qfw=Rb[afw]
set Xb=Xb-1-1
return qfw
endfunction
function fyw takes integer byw,string yyw returns nothing
local integer pyw
local unit eyw
local player qyw
local real ayw
local real nyw
local real dyw
set Cb[Xb]=yyw
set Xb=Xb+1
if GetSpellAbilityId()==1093678154 then
set pyw=Lbw("when calling new_LinkedList in MassControl, line 24")
set eyw=GetSpellAbilityUnit()
set qyw=GetOwningPlayer(eyw)
set nyw=GetSpellTargetX()
set dyw=GetSpellTargetY()
set ayw=ffw(Wc,GetLearnedSkillLevel(),"when calling get in MassControl, line 27")/1000.
set Cb[Xb]="when calling alloc_MassControl_ForGroupCallback_line27 in MassControl, line 27"
set Xb=Xb+1
if qO==0 then
if aO<32768 then
set aO=aO+1
set byw=aO
set nO[byw]=691
else
call l1("Out of memory: Could not create MassControl_ForGroupCallback_line27.","when calling error in MassControl, line 27")
set byw=0
endif
else
set qO=qO-1
set byw=eO[qO]
set nO[byw]=691
endif
set Xb=Xb-1
set xb[byw]=qyw
set vb[byw]=eyw
set mb[byw]=pyw
call cB(nyw,dyw,ayw,byw,"when calling forUnitsInRange in MassControl, line 27")
call Adw(Qc,GetHandleId(eyw),pyw,"when calling put in MassControl, line 30")
endif
set Xb=Xb-1
set eyw=null
set qyw=null
endfunction
function nbw takes integer lbw,string bbw returns nothing
local unit ybw
local player pbw
local player ebw
local player qbw
local timer abw
set Cb[Xb]=bbw
set Xb=Xb+1
set ybw=GetConstructingStructure()
if GetUnitTypeId(ybw)==1747990614 then
if Rc[GetPlayerId(GetOwningPlayer(ybw))]<3 then
set pbw=GetOwningPlayer(ybw)
set ebw=GetOwningPlayer(ybw)
set Rc[GetPlayerId(pbw)]=Rc[GetPlayerId(ebw)]+1
else
set qbw=GetOwningPlayer(ybw)
set Cb[Xb]="when calling attentionToPlayer in LimitMercenaryCamps, line 18"
set Xb=Xb+1
call DisplayTimedTextToPlayer(qbw,0.,0.,10.0,i5(qbw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(qbw,0.,0.,10.0,"You cannot build more than 3 mercenary camps.")
set Xb=Xb-1
set Cb[Xb]="when calling alloc_LimitMercenaryCamps_CallbackSingle_line19 in LimitMercenaryCamps, line 19"
set Xb=Xb+1
if fO==0 then
if RO<32768 then
set RO=RO+1
set lbw=RO
set TO[lbw]=646
else
call l1("Out of memory: Could not create LimitMercenaryCamps_CallbackSingle_line19.","when calling error in LimitMercenaryCamps, line 19")
set lbw=0
endif
else
set fO=fO-1
set lbw=dO[fO]
set TO[lbw]=646
endif
set Xb=Xb-1
set db[lbw]=ybw
set Cb[Xb]="when calling doAfter in LimitMercenaryCamps, line 19"
set Xb=Xb+1
set abw=Xww("when calling getTimer in ClosureTimers, line 27")
set Cb[Xb]="when calling doAfter in ClosureTimers, line 27"
set Xb=Xb+1
call odw(lbw,abw,0.01,"when calling start in ClosureTimers, line 16")
set Xb=Xb-1-1
endif
endif
set Xb=Xb-1
set ybw=null
set pbw=null
set ebw=null
set qbw=null
set abw=null
endfunction
function p0w takes rect c0w,real o0w,real O0w returns boolean
local boolean l0w
local boolean b0w
local boolean y0w
if o0w>GetRectMinX(c0w) then
set l0w=o0w<GetRectMaxX(c0w)
else
set l0w=false
endif
if l0w then
set b0w=O0w>GetRectMinY(c0w)
else
set b0w=false
endif
if b0w then
set y0w=O0w<GetRectMaxY(c0w)
else
set y0w=false
endif
return y0w
endfunction
function vww takes integer gww,string hww returns rect
local integer Fww
local fogstate kww
local integer jww
local rect xww
set Cb[Xb]=hww
set Xb=Xb+1
set Fww=Io
set kww=ConvertFogState(gww)
set Cb[Xb]="when calling saveFogState in TypeCasting, line 136"
set Xb=Xb+1
if AO[Fww]==0 then
if Fww==0 then
call l1("Nullpointer exception when calling Table.saveFogState","when calling error in Table, line 168")
else
call l1("Called Table.saveFogState on invalid object.","when calling error in Table, line 168")
endif
endif
call SaveFogStateHandle(Wo,Fww,0,kww)
set Xb=Xb-1
set jww=Io
set Cb[Xb]="when calling loadRect in TypeCasting, line 137"
set Xb=Xb+1
if AO[jww]==0 then
if jww==0 then
call l1("Nullpointer exception when calling Table.loadRect","when calling error in Table, line 147")
else
call l1("Called Table.loadRect on invalid object.","when calling error in Table, line 147")
endif
endif
set xww=LoadRectHandle(Wo,jww,0)
set Xb=Xb-1-1
set bR=xww
set kww=null
set xww=null
return bR
endfunction
function npw takes integer cpw,string opw returns nothing
local unit Opw
local real lpw
local real bpw
local integer ypw
local integer ppw
local integer epw
local timer qpw
local player apw
set Cb[Xb]=opw
set Xb=Xb+1
set Opw=GetTriggerUnit()
if GetUnitTypeId(Opw)==1747988569 then
set lpw=GetUnitX(Opw)
set bpw=GetUnitY(Opw)
set ppw=Mo
set Cb[Xb]="when calling iterator in NoShipsNearRivers, line 11"
set Xb=Xb+1
set cpw=kbw(ppw,"when calling new_LLIterator in LinkedList, line 165")
set Xb=Xb-1
set ypw=cpw
loop
exitwhen Yb[gb[ypw]]==Gb[ypw]
set gb[ypw]=Yb[gb[ypw]]
if p0w(vww(Rb[gb[ypw]],"when calling rectFromIndex in NoShipsNearRivers, line 11"),lpw,bpw) then
set Cb[Xb]="when calling alloc_NoShipsNearRivers_CallbackSingle_line14 in NoShipsNearRivers, line 14"
set Xb=Xb+1
if fO==0 then
if RO<32768 then
set RO=RO+1
set epw=RO
set TO[epw]=649
else
call l1("Out of memory: Could not create NoShipsNearRivers_CallbackSingle_line14.","when calling error in NoShipsNearRivers, line 14")
set epw=0
endif
else
set fO=fO-1
set epw=dO[fO]
set TO[epw]=649
endif
set Xb=Xb-1
set Ub[epw]=Opw
set Cb[Xb]="when calling doAfter in NoShipsNearRivers, line 14"
set Xb=Xb+1
set qpw=Xww("when calling getTimer in ClosureTimers, line 27")
set Cb[Xb]="when calling doAfter in ClosureTimers, line 27"
set Xb=Xb+1
call odw(epw,qpw,0.01,"when calling start in ClosureTimers, line 16")
set Xb=Xb-1-1
set apw=GetOwningPlayer(Opw)
set opw="when calling attentionToPlayer in NoShipsNearRivers, line 16"
set Cb[Xb]="when calling attentionToPlayer in NoShipsNearRivers, line 16"
set Xb=Xb+1
call DisplayTimedTextToPlayer(apw,0.,0.,10.0,i5(apw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(apw,0.,0.,10.0,"You cannot build shipyards near rivers")
set Xb=Xb-1
endif
endloop
set Cb[Xb]="when calling close in NoShipsNearRivers, line 11"
set Xb=Xb+1
if Fb[ypw]then
call Sfw(ypw,"when calling dispatch_LLIterator_destroyLLIterator in LinkedList, line 450")
endif
set Xb=Xb-1
endif
set Xb=Xb-1
set Opw=null
set qpw=null
set apw=null
endfunction
function j2 takes real G2,real g2,real h2,real F2,real k2 returns real
set h2=GetRandomReal(h2,F2)
return (G2+g2)/2.+Y2(h2)*Pow(2.718281828,-(Pow(h2,2.)/2.*k2))/SquareRoot(6.283185482*k2)*((g2-G2)/2.)
endfunction
function xSw takes integer OSw,unit lSw,string bSw,integer ySw,integer pSw,string eSw returns nothing
local playerunitevent qSw
local real aSw
local real nSw
local unit dSw
local player fSw
local integer RSw
local integer TSw
local real YSw
local integer GSw
local timer gSw
local integer hSw
local timer FSw
local real kSw
local real jSw
set Cb[Xb]=eSw
set Xb=Xb+1
set Jl[OSw]=0
set Kl[OSw]=0.
set Ll[OSw]=Lbw("when calling new_LinkedList in City, line 104")
set Hl[OSw]=1.0
set xl[OSw]=lSw
set dSw=xl[OSw]
set kSw=GetUnitX(dSw)
set jSw=GetUnitY(dSw)
set El[OSw]=kSw
set Zl[OSw]=jSw
set vl[OSw]=bSw
set Ql[OSw]=ySw
set fSw=GetOwningPlayer(xl[OSw])
set Wl[OSw]=GetPlayerId(fSw)
set vl[OSw]=SubString(bSw,0,24)
set ml[OSw]=nS
set nS=nS+1
set qSw=EVENT_PLAYER_UNIT_DEATH
set Cb[Xb]="when calling alloc_City_City_EventListener_line121 in City, line 121"
set Xb=Xb+1
if tO==0 then
if iO<32768 then
set iO=iO+1
set RSw=iO
set SO[RSw]=666
else
call l1("Out of memory: Could not create City_City_EventListener_line121.","when calling error in City, line 121")
set RSw=0
endif
else
set tO=tO-1
set RSw=sO[tO]
set SO[RSw]=666
endif
set Xb=Xb-1
set ub[RSw]=0
set rb[RSw]=0
set sb[RSw]=0
set Nl[RSw]=OSw
set Cb[Xb]="when calling add in City, line 121"
set Xb=Xb+1
set Cb[Xb]="when calling toIntId in ClosureEvents, line 112"
set Xb=Xb+1
set TSw=vS[GetHandleId(qSw)]
if TSw==0 then
set TSw=nV(qSw,"when calling registerEventId in ClosureEvents, line 229")
endif
set Xb=Xb-1
set ub[RSw]=TSw
if ES[ub[RSw]]!=0 then
set sb[ES[ub[RSw]]]=RSw
set rb[RSw]=ES[ub[RSw]]
endif
set ES[ub[RSw]]=RSw
set Xb=Xb-1
set Pl[OSw]=j2(fS[0],fS[1],-5.0,5.0,0.15)
set YSw=j2(ffw(RS[pSw],0,"when calling get in City, line 133")*1.,ffw(RS[pSw],1,"when calling get in City, line 133")*1.,-5.0,5.0,0.15)
set Ul[OSw]=R2I(YSw)
set Dl[OSw]=0.
set aSw=2.5+GetRandomReal(2.5,5.0)
set Cb[Xb]="when calling alloc_City_City_CallbackPeriodic_line138 in City, line 138"
set Xb=Xb+1
if GO==0 then
if gO<32768 then
set gO=gO+1
set GSw=gO
set hO[GSw]=631
else
call l1("Out of memory: Could not create City_City_CallbackPeriodic_line138.","when calling error in City, line 138")
set GSw=0
endif
else
set GO=GO-1
set GSw=YO[GO]
set hO[GSw]=631
endif
set Xb=Xb-1
set Ml[GSw]=OSw
set Cb[Xb]="when calling doPeriodically in City, line 138"
set Xb=Xb+1
set gSw=Xww("when calling getTimer in ClosureTimers, line 57")
set Cb[Xb]="when calling doPeriodically in ClosureTimers, line 57"
set Xb=Xb+1
call Bnw(GSw,gSw,aSw,"when calling start in ClosureTimers, line 45")
set Xb=Xb-1-1
set nSw=60+GetRandomReal(60,120.0)
set Cb[Xb]="when calling alloc_City_City_CallbackPeriodic_line154 in City, line 154"
set Xb=Xb+1
if GO==0 then
if gO<32768 then
set gO=gO+1
set hSw=gO
set hO[hSw]=632
else
call l1("Out of memory: Could not create City_City_CallbackPeriodic_line154.","when calling error in City, line 154")
set hSw=0
endif
else
set GO=GO-1
set hSw=YO[GO]
set hO[hSw]=632
endif
set Xb=Xb-1
set wb[hSw]=OSw
set Cb[Xb]="when calling doPeriodically in City, line 154"
set Xb=Xb+1
set FSw=Xww("when calling getTimer in ClosureTimers, line 57")
set Cb[Xb]="when calling doPeriodically in ClosureTimers, line 57"
set Xb=Xb+1
call Bnw(hSw,FSw,nSw,"when calling start in ClosureTimers, line 45")
set Xb=Xb-1-1-1
set qSw=null
set dSw=null
set fSw=null
set gSw=null
set FSw=null
endfunction
function oSw takes unit rSw,string sSw,integer tSw,integer iSw,string SSw returns integer
local integer cSw
set Cb[Xb]=SSw
set Xb=Xb+1
set Cb[Xb]="when calling alloc_City in City, line 101"
set Xb=Xb+1
if bO==0 then
if yO<32768 then
set yO=yO+1
set cSw=yO
set pO[cSw]=653
else
call l1("Out of memory: Could not create City.","when calling error in City, line 71")
set cSw=0
endif
else
set bO=bO-1
set cSw=lO[bO]
set pO[cSw]=653
endif
set Xb=Xb-1
call xSw(cSw,rSw,sSw,tSw,iSw,"when calling construct_City in City, line 101")
set Xb=Xb-1
return cSw
endfunction
function psw takes integer isw,string Ssw returns nothing
local unit csw
local integer osw
local integer Osw
local boolean lsw
local integer bsw
local unit ysw
set Cb[Xb]=Ssw
set Xb=Xb+1
set csw=GetConstructedStructure()
set Cb[Xb]="when calling isCity in CityBuilded, line 10"
set Xb=Xb+1
set Cb[Xb]="when calling isCity in UnitTools, line 5"
set Xb=Xb+1
set osw=Bo
set Osw=GetUnitTypeId(csw)
set Cb[Xb]="when calling has in City, line 437"
set Xb=Xb+1
if Sl[osw]==0 then
if osw==0 then
call l1("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call l1("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set lsw=Ubw(osw,Osw)
set Xb=Xb-1-1-1
if lsw then
set ysw=GetConstructedStructure()
set isw=Mc[GetPlayerId(GetOwningPlayer(GetConstructedStructure()))]
set Cb[Xb]="when calling getForceId in CityBuilded, line 11"
set Xb=Xb+1
if yl[isw]==0 then
if isw==0 then
call l1("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 122")
else
call l1("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 122")
endif
endif
set bsw=Ib[isw]
set Xb=Xb-1
set hS[nS]=oSw(ysw,"New",bsw,1,"when calling new_City in CityBuilded, line 11")
endif
set Xb=Xb-1
set csw=null
set ysw=null
endfunction
function uiw takes integer Btw,integer Ntw,string Mtw returns nothing
local player wiw
set Cb[Xb]=Mtw
set Xb=Xb+1
if Fc-Kl[Btw]>=dS then
set Kl[Btw]=Fc
set Dl[Btw]=Dl[Btw]-YS[Jl[Btw]]
set Dl[Btw]=Dl[Btw]+YS[Ntw]
set Jl[Btw]=Ntw
else
set wiw=wo[Wl[Btw]]
set Cb[Xb]="when calling noteToPlayer in City, line 271"
set Xb=Xb+1
call DisplayTimedTextToPlayer(wiw,0.,0.,10.0,L2(wiw,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(wiw,0.,0.,10.0,"Wait 1 turn to be able to change tax level.")
set Xb=Xb-1
endif
set Xb=Xb-1
set wiw=null
endfunction
function qaw takes integer taw,string iaw returns nothing
local integer Saw
local integer caw
local integer oaw
local boolean Oaw
local unit law
local integer baw
local integer yaw
local boolean paw
local integer eaw
set Cb[Xb]=iaw
set Xb=Xb+1
set caw=sS
set oaw=GetSpellAbilityId()
set Cb[Xb]="when calling has in Taxation, line 7"
set Xb=Xb+1
if Sl[caw]==0 then
if caw==0 then
call l1("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call l1("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set Oaw=Ubw(caw,oaw)
set Xb=Xb-1
if Oaw then
set law=GetSpellTargetUnit()
set Cb[Xb]="when calling isCity in Taxation, line 8"
set Xb=Xb+1
set baw=Bo
set yaw=GetUnitTypeId(law)
set Cb[Xb]="when calling has in City, line 437"
set Xb=Xb+1
if Sl[baw]==0 then
if baw==0 then
call l1("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call l1("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set paw=Ubw(baw,yaw)
set Xb=Xb-1-1
if paw then
if GetOwningPlayer(GetSpellTargetUnit())==GetOwningPlayer(GetSpellAbilityUnit()) then
set Saw=0
set taw=GetSpellAbilityId()
if taw==1093677642 then
set Saw=1
elseif taw==1093677641 then
set Saw=0
elseif taw==1093677640 then
set Saw=2
elseif taw==1093678155 then
set Saw=3
endif
set eaw=hS[CC(GetSpellTargetUnit(),"when calling getCityId in Taxation, line 20")]
set Cb[Xb]="when calling changeTaxLevel in Taxation, line 20"
set Xb=Xb+1
if pO[eaw]==0 then
if eaw==0 then
call l1("Nullpointer exception when calling City.changeTaxLevel","when calling error in City, line 262")
else
call l1("Called City.changeTaxLevel on invalid object.","when calling error in City, line 262")
endif
endif
call uiw(eaw,Saw,"when calling changeTaxLevel in City, line 262")
set Xb=Xb-1
endif
endif
endif
set Xb=Xb-1
set law=null
endfunction
function tbw takes integer Blw,string Nlw returns nothing
local unit Mlw
local player wbw
local player ubw
local player rbw
local timer sbw
set Cb[Xb]=Nlw
set Xb=Xb+1
set Mlw=GetConstructingStructure()
if GetUnitTypeId(Mlw)==1747988808 then
if fc[GetPlayerId(GetOwningPlayer(Mlw))]<3 then
set wbw=GetOwningPlayer(Mlw)
set ubw=GetOwningPlayer(Mlw)
set fc[GetPlayerId(wbw)]=fc[GetPlayerId(ubw)]+1
else
set rbw=GetOwningPlayer(Mlw)
set Cb[Xb]="when calling attentionToPlayer in LimitEncampments, line 18"
set Xb=Xb+1
call DisplayTimedTextToPlayer(rbw,0.,0.,10.0,i5(rbw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(rbw,0.,0.,10.0,"You cannot build more than 3 encampments.")
set Xb=Xb-1
set Cb[Xb]="when calling alloc_LimitEncampments_CallbackSingle_line19 in LimitEncampments, line 19"
set Xb=Xb+1
if fO==0 then
if RO<32768 then
set RO=RO+1
set Blw=RO
set TO[Blw]=645
else
call l1("Out of memory: Could not create LimitEncampments_CallbackSingle_line19.","when calling error in LimitEncampments, line 19")
set Blw=0
endif
else
set fO=fO-1
set Blw=dO[fO]
set TO[Blw]=645
endif
set Xb=Xb-1
set nb[Blw]=Mlw
set Cb[Xb]="when calling doAfter in LimitEncampments, line 19"
set Xb=Xb+1
set sbw=Xww("when calling getTimer in ClosureTimers, line 27")
set Cb[Xb]="when calling doAfter in ClosureTimers, line 27"
set Xb=Xb+1
call odw(Blw,sbw,0.01,"when calling start in ClosureTimers, line 16")
set Xb=Xb-1-1
endif
endif
set Xb=Xb-1
set Mlw=null
set wbw=null
set ubw=null
set rbw=null
set sbw=null
endfunction
function EC takes integer QC,integer WC returns integer
if QC==1 then
if WC==0 then
return 1747989059
elseif WC==1 then
return 1747990351
elseif WC==2 then
return 1747989331
elseif WC==3 then
return 1747990353
else
return 1747989059
endif
elseif QC==2 then
if WC==0 then
return 1747989060
elseif WC==1 then
return 1747990352
elseif WC==2 then
return 1747990350
elseif WC==3 then
return 1747990354
else
return 1747989060
endif
elseif QC==3 then
if WC==0 then
return 1747988844
elseif WC==1 then
return 1747990356
elseif WC==2 then
return 1747989809
elseif WC==3 then
return 1747990355
else
return 1747988844
endif
elseif WC==0 then
return 1747989059
elseif WC==1 then
return 1747990351
elseif WC==2 then
return 1747989331
elseif WC==3 then
return 1747990353
else
return 1747989059
endif
endfunction
function mC takes integer vC returns integer
if vC==1747989059 then
return 1
elseif vC==1747989060 then
return 2
elseif vC==1747988844 then
return 3
elseif vC==1747990351 then
return 1
elseif vC==1747990352 then
return 2
elseif vC==1747990356 then
return 3
elseif vC==1747989331 then
return 1
elseif vC==1747990350 then
return 2
elseif vC==1747989809 then
return 3
elseif vC==1747990353 then
return 1
elseif vC==1747990354 then
return 2
elseif vC==1747990355 then
return 3
else
return 1
endif
endfunction
function tsw takes integer Arw,string Drw returns nothing
local unit Hrw
local player Jrw
local integer Krw
local integer Lrw
local boolean Xrw
local unit Crw
local integer Vrw
local integer Brw
local boolean Nrw
local real Mrw
local boolean wsw
local real usw
local real rsw
local real ssw
set Cb[Xb]=Drw
set Xb=Xb+1
set Hrw=GetTriggerUnit()
set Krw=Vo
set Lrw=GetUnitTypeId(Hrw)
set Cb[Xb]="when calling has in CastleCapture, line 11"
set Xb=Xb+1
if Sl[Krw]==0 then
if Krw==0 then
call l1("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call l1("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set Xrw=Ubw(Krw,Lrw)
set Xb=Xb-1
if Xrw then
if GetUnitStatePercent(Hrw,UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)<=50.0 then
set Nrw=GetOwningPlayer(Hrw)!=GetOwningPlayer(GetAttacker())
else
set Nrw=false
endif
if Nrw then
set Mrw=GetUnitX(Hrw)
set usw=GetUnitY(Hrw)
set Crw=GetAttacker()
set rsw=Mrw-GetUnitX(Crw)
set ssw=usw-GetUnitY(Crw)
set wsw=SquareRoot(rsw*rsw+ssw*ssw)<=300.0
else
set wsw=false
endif
if wsw then
set Jrw=GetOwningPlayer(GetAttacker())
call SetUnitOwner(Hrw,Jrw,true)
if GetPlayerId(Jrw)!=PLAYER_NEUTRAL_AGGRESSIVE then
set Arw=mC(GetUnitTypeId(Hrw))
set Vrw=Mc[GetPlayerId(Jrw)]
set Cb[Xb]="when calling getForceId in CastleCapture, line 17"
set Xb=Xb+1
if yl[Vrw]==0 then
if Vrw==0 then
call l1("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 122")
else
call l1("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 122")
endif
endif
set Brw=Ib[Vrw]
set Xb=Xb-1
call ReplaceUnitBJ(Hrw,EC(Arw,Brw),bj_UNIT_STATE_METHOD_RELATIVE)
endif
call SetUnitState(Hrw,UNIT_STATE_LIFE,GetUnitState(Hrw,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,60.0)*0.01)
call SetUnitState(Hrw,UNIT_STATE_MANA,GetUnitState(Hrw,UNIT_STATE_MAX_MANA)*RMaxBJ(0.,0.0)*0.01)
call UnitAddAbility(Hrw,1093677896)
endif
endif
set Xb=Xb-1
set Hrw=null
set Jrw=null
set Crw=null
endfunction
function vpw takes integer kpw,string jpw returns nothing
local force xpw
set Cb[Xb]=jpw
set Xb=Xb+1
set jpw=TB(GetTriggerPlayer())+" has left the game!"
set xpw=bj_FORCE_ALL_PLAYERS
if IsPlayerInForce(GetLocalPlayer(),xpw) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,5.0,jpw)
endif
set kpw=Mc[GetPlayerId(GetTriggerPlayer())]
set Cb[Xb]="when calling setInGame in OnPlayerLeave, line 7"
set Xb=Xb+1
if yl[kpw]==0 then
if kpw==0 then
call l1("Nullpointer exception when calling PlayerStats.setInGame","when calling error in PlayerStats, line 45")
else
call l1("Called PlayerStats.setInGame on invalid object.","when calling error in PlayerStats, line 45")
endif
endif
set Ab[kpw]=false
set Xb=Xb-1
call SetPlayerName(GetTriggerPlayer(),GetPlayerName(GetTriggerPlayer())+" [LEFT]")
set Xb=Xb-1
set xpw=null
endfunction
function wcw takes integer JSw returns nothing
local unit KSw=GetDyingUnit()
local real LSw
local real XSw
local player CSw
local integer VSw
local real BSw
local unit NSw
local unitstate MSw
if KSw==xl[Nl[JSw]]then
set CSw=wo[Wl[Nl[JSw]]]
set VSw=GetUnitTypeId(KSw)
set xl[Nl[JSw]]=CreateUnitAtLoc(CSw,VSw,GetUnitLoc(KSw),bj_UNIT_FACING)
set NSw=xl[Nl[JSw]]
set MSw=UNIT_STATE_LIFE
set BSw=GetUnitState(xl[Nl[JSw]],UNIT_STATE_MAX_LIFE)
set LSw=bo
if 0.>LSw then
set XSw=0.
else
set XSw=LSw
endif
if 50.0>XSw then
set XSw=50.0
endif
call SetUnitState(NSw,MSw,BSw*XSw*0.01)
call SetUnitState(xl[Nl[JSw]],UNIT_STATE_MANA,GetUnitState(KSw,UNIT_STATE_MANA))
endif
set KSw=null
set CSw=null
set NSw=null
set MSw=null
endfunction
function xOw takes integer nOw,string dOw returns nothing
local unit fOw
local integer ROw
local integer TOw
local boolean YOw
local integer GOw
local boolean gOw
local player hOw
local boolean FOw
local boolean kOw
local boolean jOw
set Cb[Xb]=dOw
set Xb=Xb+1
set fOw=GetTriggerUnit()
set Cb[Xb]="when calling isCity in Garissons, line 9"
set Xb=Xb+1
set Cb[Xb]="when calling isCity in UnitTools, line 5"
set Xb=Xb+1
set ROw=Bo
set TOw=GetUnitTypeId(fOw)
set Cb[Xb]="when calling has in City, line 437"
set Xb=Xb+1
if Sl[ROw]==0 then
if ROw==0 then
call l1("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call l1("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set YOw=Ubw(ROw,TOw)
set Xb=Xb-1-1-1
if YOw then
set FOw=true
else
set nOw=Vo
set GOw=GetUnitTypeId(fOw)
set Cb[Xb]="when calling has in Garissons, line 9"
set Xb=Xb+1
if Sl[nOw]==0 then
if nOw==0 then
call l1("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call l1("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set gOw=Ubw(nOw,GOw)
set Xb=Xb-1
set FOw=gOw
endif
if FOw then
set hOw=GetOwningPlayer(fOw)
if GetPlayerSlotState(hOw)==PLAYER_SLOT_STATE_PLAYING then
set kOw=GetPlayerController(hOw)==MAP_CONTROL_USER
else
set kOw=false
endif
set jOw=not kOw
else
set jOw=false
endif
if jOw then
call IssueImmediateOrder(fOw,"spiritwolf")
endif
set Xb=Xb-1
set fOw=null
set hOw=null
endfunction
function gnw takes integer Ynw,string Gnw returns nothing
set Cb[Xb]=Gnw
set Xb=Xb+1
if SO[Ynw]==0 then
if Ynw==0 then
call l1("Nullpointer exception when calling EventListener.onEvent","when calling error in ClosureEvents, line 109")
else
call l1("Called EventListener.onEvent on invalid object.","when calling error in ClosureEvents, line 109")
endif
endif
if SO[Ynw]<=673 then
if SO[Ynw]<=667 then
if SO[Ynw]<=664 then
if SO[Ynw]<=663 then
if SO[Ynw]<=662 then
call tsw(Ynw,"when calling CastleCapture_onEvent_line8 in ClosureEvents, line 109")
else
call psw(Ynw,"when calling CityBuilded_onEvent_line9 in ClosureEvents, line 109")
endif
else
call Isw(Ynw,"when calling CityManage_onEvent_line34 in ClosureEvents, line 109")
endif
elseif SO[Ynw]<=666 then
if SO[Ynw]<=665 then
call fsw(Ynw,"when calling CityManage_onEvent_line9 in ClosureEvents, line 109")
else
call wcw(Ynw)
endif
else
call Icw(Ynw,"when calling Clerics_onEvent_line5 in ClosureEvents, line 109")
endif
elseif SO[Ynw]<=670 then
if SO[Ynw]<=669 then
if SO[Ynw]<=668 then
call xOw(Ynw,"when calling Garissons_onEvent_line7 in ClosureEvents, line 109")
else
call tbw(Ynw,"when calling LimitEncampments_onEvent_line12 in ClosureEvents, line 109")
endif
else
call Vlw(Ynw)
endif
elseif SO[Ynw]<=672 then
if SO[Ynw]<=671 then
call nbw(Ynw,"when calling LimitMercenaryCamps_onEvent_line12 in ClosureEvents, line 109")
else
call Obw(Ynw)
endif
else
call fyw(Ynw,"when calling MassControl_onEvent_line22 in ClosureEvents, line 109")
endif
elseif SO[Ynw]<=679 then
if SO[Ynw]<=676 then
if SO[Ynw]<=675 then
if SO[Ynw]<=674 then
call Hyw(Ynw,"when calling MassControl_onEvent_line32 in ClosureEvents, line 109")
else
call npw(Ynw,"when calling NoShipsNearRivers_onEvent_line7 in ClosureEvents, line 109")
endif
else
call Fpw(Ynw,"when calling NoStarvationOnBoat_onEvent_line9 in ClosureEvents, line 109")
endif
elseif SO[Ynw]<=678 then
if SO[Ynw]<=677 then
call vpw(Ynw,"when calling OnPlayerLeave_onEvent_line5 in ClosureEvents, line 109")
else
call Bpw(Ynw,"when calling OreCapture_onEvent_line14 in ClosureEvents, line 109")
endif
else
call Oew(Ynw,"when calling OreCapture_onEvent_line21 in ClosureEvents, line 109")
endif
elseif SO[Ynw]<=682 then
if SO[Ynw]<=681 then
if SO[Ynw]<=680 then
call Apw(Ynw,"when calling OreCapture_onEvent_line9 in ClosureEvents, line 109")
else
call Lqw(Ynw,"when calling RangeChecks_onEvent_line11 in ClosureEvents, line 109")
endif
else
call qaw(Ynw,"when calling Taxation_onEvent_line6 in ClosureEvents, line 109")
endif
elseif SO[Ynw]<=683 then
call Caw(Ynw,"when calling Upkeep_onEvent_line28 in ClosureEvents, line 109")
else
call Paw(Ynw,"when calling Upkeep_onEvent_line6 in ClosureEvents, line 109")
endif
set Xb=Xb-1
endfunction
function AV takes string mV returns nothing
local unit QV
local integer WV
local integer EV
local integer ZV
local eventid UV
local integer IV
local boolean PV
set Cb[Xb]=mV
set Xb=Xb+1
set QV=GetTriggerUnit()
set UV=GetTriggerEventId()
set Cb[Xb]="when calling toIntId in ClosureEvents, line 170"
set Xb=Xb+1
set IV=vS[GetHandleId(UV)]
if IV==0 then
set IV=nV(UV,"when calling registerEventId in ClosureEvents, line 229")
endif
set Xb=Xb-1
set WV=IV
if QV!=null then
set PV=GetUnitUserData(QV)>0
else
set PV=false
endif
if PV then
if ZS[GetUnitUserData(QV)]!=0 then
set EV=ZS[GetUnitUserData(QV)]
loop
exitwhen EV==0
if ub[EV]==WV then
call gnw(EV,"when calling onEvent in ClosureEvents, line 177")
endif
set EV=rb[EV]
endloop
endif
endif
if ES[WV]!=0 then
set ZV=ES[WV]
loop
exitwhen ZV==0
call gnw(ZV,"when calling onEvent in ClosureEvents, line 183")
set ZV=rb[ZV]
endloop
endif
set Xb=Xb-1
set QV=null
set UV=null
endfunction
function GGw takes nothing returns nothing
set Xb=0
set Cb[Xb]="ClosureEvents, line 291"
set Xb=Xb+1
call AV("when calling generalEventCallback in ClosureEvents, line 291")
set Xb=Xb-1
endfunction
function GL takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function GU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651848,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651846,0)
endfunction
function GW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651828,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651827,0)
endfunction
function GTw takes integer MRw,integer wTw,integer uTw,integer rTw,integer sTw,integer tTw,integer iTw,integer STw,integer cTw,integer oTw,integer OTw,integer lTw,integer bTw,integer yTw,integer pTw,integer eTw,integer qTw,integer aTw,integer nTw,integer dTw,integer fTw,integer RTw,string TTw returns integer
local integer YTw
set Cb[Xb]=TTw
set Xb=Xb+1
set YTw=Lbw("when calling new_LinkedList in LinkedList, line 391")
call Zfw(YTw,MRw,"when calling add in LinkedList, line 393")
call Zfw(YTw,wTw,"when calling add in LinkedList, line 393")
call Zfw(YTw,uTw,"when calling add in LinkedList, line 393")
call Zfw(YTw,rTw,"when calling add in LinkedList, line 393")
call Zfw(YTw,sTw,"when calling add in LinkedList, line 393")
call Zfw(YTw,tTw,"when calling add in LinkedList, line 393")
call Zfw(YTw,iTw,"when calling add in LinkedList, line 393")
call Zfw(YTw,STw,"when calling add in LinkedList, line 393")
call Zfw(YTw,cTw,"when calling add in LinkedList, line 393")
call Zfw(YTw,oTw,"when calling add in LinkedList, line 393")
call Zfw(YTw,OTw,"when calling add in LinkedList, line 393")
call Zfw(YTw,lTw,"when calling add in LinkedList, line 393")
call Zfw(YTw,bTw,"when calling add in LinkedList, line 393")
call Zfw(YTw,yTw,"when calling add in LinkedList, line 393")
call Zfw(YTw,pTw,"when calling add in LinkedList, line 393")
call Zfw(YTw,eTw,"when calling add in LinkedList, line 393")
call Zfw(YTw,qTw,"when calling add in LinkedList, line 393")
call Zfw(YTw,aTw,"when calling add in LinkedList, line 393")
call Zfw(YTw,nTw,"when calling add in LinkedList, line 393")
call Zfw(YTw,dTw,"when calling add in LinkedList, line 393")
call Zfw(YTw,fTw,"when calling add in LinkedList, line 393")
call Zfw(YTw,RTw,"when calling add in LinkedList, line 393")
set Xb=Xb-1
return YTw
endfunction
function NRw takes integer QRw,integer WRw,integer ERw,integer ZRw,integer URw,integer IRw,integer PRw,integer ARw,integer DRw,integer HRw,integer JRw,integer KRw,integer LRw,integer XRw,integer CRw,string VRw returns integer
local integer BRw
set Cb[Xb]=VRw
set Xb=Xb+1
set BRw=Lbw("when calling new_LinkedList in LinkedList, line 391")
call Zfw(BRw,QRw,"when calling add in LinkedList, line 393")
call Zfw(BRw,WRw,"when calling add in LinkedList, line 393")
call Zfw(BRw,ERw,"when calling add in LinkedList, line 393")
call Zfw(BRw,ZRw,"when calling add in LinkedList, line 393")
call Zfw(BRw,URw,"when calling add in LinkedList, line 393")
call Zfw(BRw,IRw,"when calling add in LinkedList, line 393")
call Zfw(BRw,PRw,"when calling add in LinkedList, line 393")
call Zfw(BRw,ARw,"when calling add in LinkedList, line 393")
call Zfw(BRw,DRw,"when calling add in LinkedList, line 393")
call Zfw(BRw,HRw,"when calling add in LinkedList, line 393")
call Zfw(BRw,JRw,"when calling add in LinkedList, line 393")
call Zfw(BRw,KRw,"when calling add in LinkedList, line 393")
call Zfw(BRw,LRw,"when calling add in LinkedList, line 393")
call Zfw(BRw,XRw,"when calling add in LinkedList, line 393")
call Zfw(BRw,CRw,"when calling add in LinkedList, line 393")
set Xb=Xb-1
return BRw
endfunction
function Olw takes string clw returns integer
local integer olw
set Cb[Xb]=clw
set Xb=Xb+1
set Cb[Xb]="when calling alloc_HashMap in HashMap, line 7"
set Xb=Xb+1
if IO==0 then
if PO<32768 then
set PO=PO+1
set olw=PO
set AO[olw]=733
else
call l1("Out of memory: Could not create HashMap.","when calling error in HashMap, line 8")
set olw=0
endif
else
set IO=IO-1
set olw=UO[IO]
set AO[olw]=733
endif
set Xb=Xb-1
set qb[olw]=0
set Xb=Xb-1
return olw
endfunction
function mRw takes integer bRw,integer yRw,integer pRw,integer eRw,integer qRw,integer aRw,integer nRw,integer dRw,integer fRw,integer RRw,integer TRw,integer YRw,integer GRw,integer gRw,integer hRw,integer FRw,integer kRw,integer jRw,string xRw returns integer
local integer vRw
set Cb[Xb]=xRw
set Xb=Xb+1
set vRw=Lbw("when calling new_LinkedList in LinkedList, line 391")
call Zfw(vRw,bRw,"when calling add in LinkedList, line 393")
call Zfw(vRw,yRw,"when calling add in LinkedList, line 393")
call Zfw(vRw,pRw,"when calling add in LinkedList, line 393")
call Zfw(vRw,eRw,"when calling add in LinkedList, line 393")
call Zfw(vRw,qRw,"when calling add in LinkedList, line 393")
call Zfw(vRw,aRw,"when calling add in LinkedList, line 393")
call Zfw(vRw,nRw,"when calling add in LinkedList, line 393")
call Zfw(vRw,dRw,"when calling add in LinkedList, line 393")
call Zfw(vRw,fRw,"when calling add in LinkedList, line 393")
call Zfw(vRw,RRw,"when calling add in LinkedList, line 393")
call Zfw(vRw,TRw,"when calling add in LinkedList, line 393")
call Zfw(vRw,YRw,"when calling add in LinkedList, line 393")
call Zfw(vRw,GRw,"when calling add in LinkedList, line 393")
call Zfw(vRw,gRw,"when calling add in LinkedList, line 393")
call Zfw(vRw,hRw,"when calling add in LinkedList, line 393")
call Zfw(vRw,FRw,"when calling add in LinkedList, line 393")
call Zfw(vRw,kRw,"when calling add in LinkedList, line 393")
call Zfw(vRw,jRw,"when calling add in LinkedList, line 393")
set Xb=Xb-1
return vRw
endfunction
function xuw takes string Mww returns boolean
local integer wuw
local integer uuw
local integer ruw
local integer suw
local integer tuw
local integer iuw
local integer Suw
local integer cuw
local integer ouw
local integer Ouw
local integer luw
local integer buw
local integer yuw
local integer puw
local integer euw
local integer quw
local integer auw
local integer nuw
local integer duw
local integer fuw
local integer Ruw
local integer Tuw
local integer Yuw
local integer Guw
local integer guw
local integer huw
local integer Fuw
local integer kuw
local integer juw
set Cb[Xb]=Mww
set Xb=Xb+1
set Cb[Xb]="when calling asList in Units, line 112"
set Xb=Xb+1
set uuw=Lbw("when calling new_LinkedList in LinkedList, line 391")
call Zfw(uuw,1747989317,"when calling add in LinkedList, line 393")
call Zfw(uuw,1747989305,"when calling add in LinkedList, line 393")
call Zfw(uuw,1747989316,"when calling add in LinkedList, line 393")
call Zfw(uuw,1747989315,"when calling add in LinkedList, line 393")
set Xb=Xb-1
set Jo=uuw
set Ko=Olw("when calling new_HashMap in Units, line 113")
set Lo[0]=mRw(1747988528,1747988528,1747988528,1747988528,1747988528,1747988528,1747988532,1747988532,1747988532,1747988532,1211118401,1747989058,1747989058,1747989058,1747989058,1747989058,1747989058,1747988790,"when calling asList in Units, line 120")
set Lo[1]=mRw(1747990339,1747990339,1747990339,1747990339,1747990339,1747990339,1747990340,1747990340,1747990340,1747990340,1211119699,1747990593,1747990593,1747990593,1747990593,1747990593,1747990593,1747988790,"when calling asList in Units, line 126")
set Lo[2]=mRw(1747990087,1747990087,1747990087,1747990087,1747990087,1747990087,1747990088,1747990088,1747990088,1747990088,1211119701,1747989817,1747989817,1747989817,1747989817,1747989817,1747989817,1747988790,"when calling asList in Units, line 133")
set Lo[3]=mRw(1747989558,1747989558,1747989558,1747989558,1747989558,1747989558,1747989575,1747989575,1747989575,1747989575,1211119700,1747989571,1747989571,1747989571,1747989571,1747989571,1747989571,1747988790,"when calling asList in Units, line 140")
set Cb[Xb]="when calling asList in Units, line 149"
set Xb=Xb+1
set ruw=Lbw("when calling new_LinkedList in LinkedList, line 391")
call Zfw(ruw,1747989558,"when calling add in LinkedList, line 393")
call Zfw(ruw,1747990339,"when calling add in LinkedList, line 393")
call Zfw(ruw,1747990087,"when calling add in LinkedList, line 393")
call Zfw(ruw,1747988528,"when calling add in LinkedList, line 393")
call Zfw(ruw,1747989575,"when calling add in LinkedList, line 393")
call Zfw(ruw,1747990340,"when calling add in LinkedList, line 393")
call Zfw(ruw,1747990088,"when calling add in LinkedList, line 393")
call Zfw(ruw,1747988532,"when calling add in LinkedList, line 393")
set Xb=Xb-1
set Xo=ruw
set Cb[Xb]="when calling asList in Units, line 161"
set Xb=Xb+1
set suw=Lbw("when calling new_LinkedList in LinkedList, line 391")
call Zfw(suw,1747988529,"when calling add in LinkedList, line 393")
call Zfw(suw,1747988530,"when calling add in LinkedList, line 393")
call Zfw(suw,1747988531,"when calling add in LinkedList, line 393")
call Zfw(suw,1747990326,"when calling add in LinkedList, line 393")
call Zfw(suw,1747990327,"when calling add in LinkedList, line 393")
call Zfw(suw,1747990328,"when calling add in LinkedList, line 393")
call Zfw(suw,1747990084,"when calling add in LinkedList, line 393")
call Zfw(suw,1747990087,"when calling add in LinkedList, line 393")
call Zfw(suw,1747990086,"when calling add in LinkedList, line 393")
call Zfw(suw,1747989590,"when calling add in LinkedList, line 393")
call Zfw(suw,1747989591,"when calling add in LinkedList, line 393")
call Zfw(suw,1747989592,"when calling add in LinkedList, line 393")
set Xb=Xb-1
set Co=suw
set Cb[Xb]="when calling asList in Units, line 176"
set Xb=Xb+1
set tuw=Lbw("when calling new_LinkedList in LinkedList, line 391")
call Zfw(tuw,1747989059,"when calling add in LinkedList, line 393")
call Zfw(tuw,1747989060,"when calling add in LinkedList, line 393")
call Zfw(tuw,1747988844,"when calling add in LinkedList, line 393")
call Zfw(tuw,1747990351,"when calling add in LinkedList, line 393")
call Zfw(tuw,1747990352,"when calling add in LinkedList, line 393")
call Zfw(tuw,1747990356,"when calling add in LinkedList, line 393")
call Zfw(tuw,1747989331,"when calling add in LinkedList, line 393")
call Zfw(tuw,1747990350,"when calling add in LinkedList, line 393")
call Zfw(tuw,1747989809,"when calling add in LinkedList, line 393")
call Zfw(tuw,1747990353,"when calling add in LinkedList, line 393")
call Zfw(tuw,1747990354,"when calling add in LinkedList, line 393")
call Zfw(tuw,1747990355,"when calling add in LinkedList, line 393")
set Xb=Xb-1
set Vo=tuw
set Bo=NRw(1747988529,1747988530,1747988531,1747990326,1747990327,1747990328,1747990084,1747990087,1747990086,1747989590,1747989591,1747989592,1747989555,1747989297,1747989325,"when calling asList in Units, line 191")
set Cb[Xb]="when calling asList in Units, line 200"
set Xb=Xb+1
set iuw=Lbw("when calling new_LinkedList in LinkedList, line 391")
call Zfw(iuw,1747989321,"when calling add in LinkedList, line 393")
call Zfw(iuw,1747989321,"when calling add in LinkedList, line 393")
call Zfw(iuw,1747989321,"when calling add in LinkedList, line 393")
call Zfw(iuw,1747989321,"when calling add in LinkedList, line 393")
call Zfw(iuw,1747989321,"when calling add in LinkedList, line 393")
call Zfw(iuw,1747989321,"when calling add in LinkedList, line 393")
call Zfw(iuw,1747988790,"when calling add in LinkedList, line 393")
set Xb=Xb-1
set No[0]=iuw
set Cb[Xb]="when calling asList in Units, line 201"
set Xb=Xb+1
set Suw=Lbw("when calling new_LinkedList in LinkedList, line 391")
call Zfw(Suw,1747989321,"when calling add in LinkedList, line 393")
call Zfw(Suw,1747989321,"when calling add in LinkedList, line 393")
call Zfw(Suw,1747989321,"when calling add in LinkedList, line 393")
call Zfw(Suw,1747989326,"when calling add in LinkedList, line 393")
call Zfw(Suw,1747989326,"when calling add in LinkedList, line 393")
call Zfw(Suw,1747989321,"when calling add in LinkedList, line 393")
call Zfw(Suw,1747989321,"when calling add in LinkedList, line 393")
call Zfw(Suw,1747989321,"when calling add in LinkedList, line 393")
call Zfw(Suw,1747988790,"when calling add in LinkedList, line 393")
set Xb=Xb-1
set No[1]=Suw
set Cb[Xb]="when calling asList in Units, line 202"
set Xb=Xb+1
set cuw=Lbw("when calling new_LinkedList in LinkedList, line 391")
call Zfw(cuw,1747989321,"when calling add in LinkedList, line 393")
call Zfw(cuw,1747989321,"when calling add in LinkedList, line 393")
call Zfw(cuw,1747989321,"when calling add in LinkedList, line 393")
call Zfw(cuw,1747989321,"when calling add in LinkedList, line 393")
call Zfw(cuw,1747989326,"when calling add in LinkedList, line 393")
call Zfw(cuw,1747989326,"when calling add in LinkedList, line 393")
call Zfw(cuw,1747989326,"when calling add in LinkedList, line 393")
call Zfw(cuw,1747989326,"when calling add in LinkedList, line 393")
call Zfw(cuw,1747989337,"when calling add in LinkedList, line 393")
call Zfw(cuw,1747989337,"when calling add in LinkedList, line 393")
call Zfw(cuw,1747988790,"when calling add in LinkedList, line 393")
set Xb=Xb-1
set No[2]=cuw
set ouw=GetHandleId(gu)
set Ouw=GetHandleId(kw)
set luw=GetHandleId(ew)
set buw=GetHandleId(qw)
set yuw=GetHandleId(Ow)
set puw=GetHandleId(hu)
set euw=GetHandleId(Yu)
set quw=GetHandleId(Vw)
set auw=GetHandleId(q)
set nuw=GetHandleId(Gu)
set duw=GetHandleId(a)
set fuw=GetHandleId(fw)
set Ruw=GetHandleId(dw)
set Tuw=GetHandleId(Rw)
set Yuw=GetHandleId(ow)
set Guw=GetHandleId(lw)
set guw=GetHandleId(bw)
set huw=GetHandleId(yw)
set Fuw=GetHandleId(pw)
set kuw=GetHandleId(aw)
set juw=GetHandleId(d)
set Mo=GTw(ouw,Ouw,luw,buw,yuw,puw,euw,quw,auw,nuw,duw,fuw,Ruw,Tuw,Yuw,Guw,guw,huw,Fuw,kuw,juw,GetHandleId(n),"when calling asList in Units, line 205")
set wuw=Ko
call Adw(wuw,1747989317,15,"when calling put in Units, line 232")
call Adw(wuw,1747989305,50,"when calling put in Units, line 233")
call Adw(wuw,1747989316,25,"when calling put in Units, line 234")
call Adw(wuw,1747989315,40,"when calling put in Units, line 235")
set Xb=Xb-1
return true
endfunction
function GYw takes nothing returns boolean
set Xb=0
return xuw("Units, line 1")
endfunction
function Gww takes nothing returns boolean
set Wo=InitHashtable()
return true
endfunction
function HA takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990603,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990604,0)
endfunction
function HG takes nothing returns nothing
local location QG
local location WG
local real EG
local real ZG
local rect UG
local group IG
local group PG
local code AG
local boolean DG
set u=GetUnitLoc(GetSpellAbilityUnit())
set QG=u
set c=Location(GetLocationX(QG)+200.00,GetLocationY(QG)+0.00)
set WG=u
set EG=GetLocationX(WG)
set ZG=GetLocationY(WG)
set O=Rect(EG-150,ZG-140,EG+150,ZG+140)
set UG=O
set IG=CreateGroup()
call GroupEnumUnitsInRect(IG,UG,null)
call DestroyBoolExpr(null)
set l=IG
set PG=l
set AG=Dy
set DG=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(PG,AG)
if DG then
call DestroyGroup(PG)
endif
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747988825,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"stand")
call DestroyGroup(l)
call RemoveLocation(c)
call RemoveLocation(u)
set QG=null
set WG=null
set UG=null
set IG=null
set PG=null
endfunction
function DI takes nothing returns boolean
if GetResearched()!=1378890038 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890038,true)!=1 then
return false
endif
return true
endfunction
function HI takes nothing returns boolean
if not DI() then
return false
endif
return true
endfunction
function HJ takes nothing returns nothing
call UnitAddAbility(GetConstructedStructure(),1093677896)
endfunction
function Nsw takes string Psw,string Asw,real Dsw,real Hsw,real Jsw,integer Ksw,real Lsw,real Xsw,boolean Csw,string Vsw returns integer
local integer Bsw
set Cb[Xb]=Vsw
set Xb=Xb+1
set Cb[Xb]="when calling alloc_CityModifierClass in CityModifiers, line 37"
set Xb=Xb+1
if oO==0 then
if OO<32768 then
set OO=OO+1
set Bsw=OO
else
call l1("Out of memory: Could not create CityModifierClass.","when calling error in CityModifiers, line 26")
set Bsw=0
endif
else
set oO=oO-1
set Bsw=cO[oO]
endif
set Xb=Xb-1
set Rl[Bsw]=Dsw
set Tl[Bsw]=Xsw
set Yl[Bsw]=Csw
set Gl[Bsw]=Hsw
set gl[Bsw]=Ksw
set hl[Bsw]=Lsw
set Fl[Bsw]=Jsw
set kl[Bsw]=Psw
set jl[Bsw]=Asw
set Xb=Xb-1
return Bsw
endfunction
function xC takes string qC returns boolean
local integer aC
local integer nC
local integer dC
local integer fC
local integer RC
local integer TC
local integer YC
local integer GC
local integer gC
local integer hC
local integer FC
local integer kC
local integer jC
set Cb[Xb]=qC
set Xb=Xb+1
set nC=R2I(0.5)
set dC=R2I(1)
set Cb[Xb]="when calling asList in CityModifiers, line 7"
set Xb=Xb+1
set fC=Lbw("when calling new_LinkedList in LinkedList, line 391")
call Zfw(fC,nC,"when calling add in LinkedList, line 393")
call Zfw(fC,dC,"when calling add in LinkedList, line 393")
set Xb=Xb-1
set SS[0]=fC
set RC=R2I(1)
set TC=R2I(3)
set Cb[Xb]="when calling asList in CityModifiers, line 8"
set Xb=Xb+1
set YC=Lbw("when calling new_LinkedList in LinkedList, line 391")
call Zfw(YC,RC,"when calling add in LinkedList, line 393")
call Zfw(YC,TC,"when calling add in LinkedList, line 393")
set Xb=Xb-1
set SS[1]=YC
set GC=R2I(3)
set gC=R2I(10)
set Cb[Xb]="when calling asList in CityModifiers, line 9"
set Xb=Xb+1
set hC=Lbw("when calling new_LinkedList in LinkedList, line 391")
call Zfw(hC,GC,"when calling add in LinkedList, line 393")
call Zfw(hC,gC,"when calling add in LinkedList, line 393")
set Xb=Xb-1
set SS[2]=hC
set FC=R2I(10)
set kC=R2I(20)
set Cb[Xb]="when calling asList in CityModifiers, line 10"
set Xb=Xb+1
set jC=Lbw("when calling new_LinkedList in LinkedList, line 391")
call Zfw(jC,FC,"when calling add in LinkedList, line 393")
call Zfw(jC,kC,"when calling add in LinkedList, line 393")
set Xb=Xb-1
set SS[3]=jC
set cS=Nsw("|cffff0000Just conquered|r","|cffc00000-PO -pop|r",240,1.0,0.0,1,-1.0,-30.0,false,"when calling new_CityModifierClass in CityModifiers, line 68")
set oS=Nsw("|cfffffb00Just revolted|r","|cff00af00+PO|r|cffc00000 -pop|r",120.0,1.0,0.0,0,0.,30.0,false,"when calling new_CityModifierClass in CityModifiers, line 76")
set OS=Nsw("|cff33ff00Population Boom|r","|cff33ff00++pop|r",120.0,0.01,0.,0,0.,0.,true,"when calling new_CityModifierClass in CityModifiers, line 84")
set lS=Nsw("|cffff0000Plague outburst|r","|cffff0000--pop|r",240,0.03,0.,2,-1.,0.,true,"when calling new_CityModifierClass in CityModifiers, line 92")
set bS=Nsw("|cffaf0000Big Fire|r","|cffc00000-pop|r",30,0.01,0.,2,-1.,0.,true,"when calling new_CityModifierClass in CityModifiers, line 100")
set yS=Nsw("|cff15ff00More trade estabilished|r","|cff00af00+tax +pop|r",240,0.01,0.15,0,1.,0.,true,"when calling new_CityModifierClass in CityModifiers, line 108")
set pS=Nsw("|cffff0000Massacred population|r","|cff00af00+PO |r|cffff0000--pop|r",30,0.05,0.,3,-1.,10.,true,"when calling new_CityModifierClass in CityModifiers, line 116")
set eS=Nsw("|cff00ff00Prospering|r","|cff00af00+PO +pop +tax|r",240,0.01,0.10,1,1.,20.0,true,"when calling new_CityModifierClass in CityModifiers, line 124")
set qS=Nsw("|cffff0000Sieged|r","|cffc00000-PO -pop|r",5,1.0,0.,0,-1.,-10.0,true,"when calling new_CityModifierClass in CityModifiers, line 132")
set aS=Olw("when calling new_HashMap in CityModifiers, line 142")
set aC=aS
call Adw(aC,0,cS,"when calling put in CityModifiers, line 149")
call Adw(aC,1,oS,"when calling put in CityModifiers, line 150")
call Adw(aC,2,OS,"when calling put in CityModifiers, line 151")
call Adw(aC,3,lS,"when calling put in CityModifiers, line 152")
call Adw(aC,4,bS,"when calling put in CityModifiers, line 153")
call Adw(aC,5,yS,"when calling put in CityModifiers, line 154")
call Adw(aC,6,pS,"when calling put in CityModifiers, line 155")
call Adw(aC,7,eS,"when calling put in CityModifiers, line 156")
call Adw(aC,8,qS,"when calling put in CityModifiers, line 157")
set Xb=Xb-1
return true
endfunction
function HYw takes nothing returns boolean
set Xb=0
return xC("CityModifiers, line 1")
endfunction
function Hg takes nothing returns nothing
local location Qg
local location Wg
local real Eg
local real Zg
local rect Ug
local group Ig
local group Pg
local code Ag
local boolean Dg
set u=GetUnitLoc(GetSpellAbilityUnit())
set Qg=u
set S=Location(GetLocationX(Qg)+0.00,GetLocationY(Qg)+200.00)
set Wg=u
set Eg=GetLocationX(Wg)
set Zg=GetLocationY(Wg)
set o=Rect(Eg-140,Zg-150,Eg+140,Zg+150)
set Ug=o
set Ig=CreateGroup()
call GroupEnumUnitsInRect(Ig,Ug,null)
call DestroyBoolExpr(null)
set l=Ig
set Pg=l
set Ag=Ny
set Dg=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(Pg,Ag)
if Dg then
call DestroyGroup(Pg)
endif
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747990090,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"stand")
call DestroyGroup(l)
call RemoveLocation(S)
call RemoveLocation(u)
set Qg=null
set Wg=null
set Ug=null
set Ig=null
set Pg=null
endfunction
function Hh takes nothing returns nothing
local location Qh
local location Wh
local real Eh
local real Zh
local rect Uh
local group Ih
local group Ph
local code Ah
local boolean Dh
set u=GetUnitLoc(GetSpellAbilityUnit())
set Qh=u
set S=Location(GetLocationX(Qh)+0.00,GetLocationY(Qh)+200.00)
set Wh=u
set Eh=GetLocationX(Wh)
set Zh=GetLocationY(Wh)
set o=Rect(Eh-140,Zh-150,Eh+140,Zh+150)
set Uh=o
set Ih=CreateGroup()
call GroupEnumUnitsInRect(Ih,Uh,null)
call DestroyBoolExpr(null)
set l=Ih
set Ph=l
set Ah=cp
set Dh=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(Ph,Ah)
if Dh then
call DestroyGroup(Ph)
endif
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747989079,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"stand")
call DestroyGroup(l)
call RemoveLocation(S)
call RemoveLocation(u)
set Qh=null
set Wh=null
set Uh=null
set Ih=null
set Ph=null
endfunction
function Hm takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988551,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989081,0)
endfunction
function UE takes nothing returns boolean
if GetResearched()!=1378889806 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889806,true)!=1 then
return false
endif
return true
endfunction
function IE takes nothing returns boolean
if not UE() then
return false
endif
return true
endfunction
function IL takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function IT takes nothing returns nothing
local group ET=GetUnitsOfTypeIdAll(1747988554)
local code ZT=Gy
local boolean UT=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(ET,ZT)
if UT then
call DestroyGroup(ET)
endif
set ET=null
endfunction
function IU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989816,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989815,0)
endfunction
function IW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989301,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988790,0)
endfunction
function Y8 takes string E5 returns boolean
local integer Z5
local integer U5
local integer I5
local integer P5
local integer A5
local integer D5
local integer H5
local integer J5
local integer K5
local integer L5
local integer X5
local integer C5
local integer V5
local integer B5
local integer N5
local integer M5
local integer w6
local integer u6
local integer r6
local integer s6
local integer t6
local integer i6
local integer S6
local integer c6
local integer o6
local integer O6
local integer l6
local integer b6
local integer y6
local integer p6
local integer e6
local integer q6
local integer a6
local integer n6
local integer d6
local integer f6
local integer R6
local integer T6
local integer Y6
local integer G6
local integer g6
local integer h6
local integer F6
local integer k6
local integer j6
local integer x6
local integer v6
local integer m6
local integer Q6
local integer W6
local integer E6
local integer Z6
local integer U6
local integer I6
local integer P6
local integer A6
local integer D6
local integer H6
local integer J6
local integer K6
local integer L6
local integer X6
local integer C6
local integer V6
local integer B6
local integer N6
local integer M6
local integer w7
local integer u7
local integer r7
local integer s7
local integer t7
local integer i7
local integer S7
local integer c7
local integer o7
local integer O7
local integer l7
local integer b7
local integer y7
local integer p7
local integer e7
local integer q7
local integer a7
local integer n7
local integer d7
local integer f7
local integer R7
local integer T7
local integer Y7
local integer G7
local integer g7
local integer h7
local integer F7
local integer k7
local integer j7
local integer x7
local integer v7
local integer m7
local integer Q7
local integer W7
local integer E7
local integer Z7
local integer U7
local integer I7
local integer P7
local integer A7
local integer D7
local integer H7
local integer J7
local integer K7
local integer L7
local integer X7
local integer C7
local integer V7
local integer B7
local integer N7
local integer M7
local integer w8
local integer u8
local integer r8
local integer s8
local integer t8
local integer i8
local integer S8
local integer c8
local integer o8
local integer O8
local integer l8
local integer b8
local integer y8
local integer p8
local integer e8
local integer q8
local integer a8
local integer n8
local integer d8
local integer f8
local integer R8
local integer T8
set Cb[Xb]=E5
set Xb=Xb+1
set Z5=R2I(70)
set U5=R2I(30)
set I5=R2I(10)
set P5=R2I(70)
set A5=R2I(30)
set D5=R2I(140)
set Cb[Xb]="when calling asList in Multiboards, line 23"
set Xb=Xb+1
set H5=Lbw("when calling new_LinkedList in LinkedList, line 391")
call Zfw(H5,Z5,"when calling add in LinkedList, line 393")
call Zfw(H5,U5,"when calling add in LinkedList, line 393")
call Zfw(H5,I5,"when calling add in LinkedList, line 393")
call Zfw(H5,P5,"when calling add in LinkedList, line 393")
call Zfw(H5,A5,"when calling add in LinkedList, line 393")
call Zfw(H5,D5,"when calling add in LinkedList, line 393")
set Xb=Xb-1
set Zc[0]=H5
set J5=R2I(70)
set K5=R2I(30)
set L5=R2I(10)
set X5=R2I(70)
set C5=R2I(30)
set V5=R2I(140)
set Cb[Xb]="when calling asList in Multiboards, line 24"
set Xb=Xb+1
set B5=Lbw("when calling new_LinkedList in LinkedList, line 391")
call Zfw(B5,J5,"when calling add in LinkedList, line 393")
call Zfw(B5,K5,"when calling add in LinkedList, line 393")
call Zfw(B5,L5,"when calling add in LinkedList, line 393")
call Zfw(B5,X5,"when calling add in LinkedList, line 393")
call Zfw(B5,C5,"when calling add in LinkedList, line 393")
call Zfw(B5,V5,"when calling add in LinkedList, line 393")
set Xb=Xb-1
set Zc[1]=B5
set N5=R2I(70)
set M5=R2I(30)
set w6=R2I(10)
set u6=R2I(70)
set r6=R2I(30)
set s6=R2I(140)
set Cb[Xb]="when calling asList in Multiboards, line 25"
set Xb=Xb+1
set t6=Lbw("when calling new_LinkedList in LinkedList, line 391")
call Zfw(t6,N5,"when calling add in LinkedList, line 393")
call Zfw(t6,M5,"when calling add in LinkedList, line 393")
call Zfw(t6,w6,"when calling add in LinkedList, line 393")
call Zfw(t6,u6,"when calling add in LinkedList, line 393")
call Zfw(t6,r6,"when calling add in LinkedList, line 393")
call Zfw(t6,s6,"when calling add in LinkedList, line 393")
set Xb=Xb-1
set Zc[2]=t6
set i6=R2I(2.5)
set S6=R2I(2.5)
set c6=R2I(400)
set o6=R2I(2.5)
set O6=R2I(2.5)
set l6=R2I(2.5)
set Cb[Xb]="when calling asList in Multiboards, line 27"
set Xb=Xb+1
set b6=Lbw("when calling new_LinkedList in LinkedList, line 391")
call Zfw(b6,i6,"when calling add in LinkedList, line 393")
call Zfw(b6,S6,"when calling add in LinkedList, line 393")
call Zfw(b6,c6,"when calling add in LinkedList, line 393")
call Zfw(b6,o6,"when calling add in LinkedList, line 393")
call Zfw(b6,O6,"when calling add in LinkedList, line 393")
call Zfw(b6,l6,"when calling add in LinkedList, line 393")
set Xb=Xb-1
set Zc[3]=b6
set y6=R2I(70)
set p6=R2I(30)
set e6=R2I(30)
set q6=R2I(10)
set a6=R2I(126)
set n6=R2I(84.000007629)
set Cb[Xb]="when calling asList in Multiboards, line 28"
set Xb=Xb+1
set d6=Lbw("when calling new_LinkedList in LinkedList, line 391")
call Zfw(d6,y6,"when calling add in LinkedList, line 393")
call Zfw(d6,p6,"when calling add in LinkedList, line 393")
call Zfw(d6,e6,"when calling add in LinkedList, line 393")
call Zfw(d6,q6,"when calling add in LinkedList, line 393")
call Zfw(d6,a6,"when calling add in LinkedList, line 393")
call Zfw(d6,n6,"when calling add in LinkedList, line 393")
set Xb=Xb-1
set Zc[4]=d6
set f6=R2I(70)
set R6=R2I(30)
set T6=R2I(30)
set Y6=R2I(10)
set G6=R2I(126)
set g6=R2I(84.000007629)
set Cb[Xb]="when calling asList in Multiboards, line 29"
set Xb=Xb+1
set h6=Lbw("when calling new_LinkedList in LinkedList, line 391")
call Zfw(h6,f6,"when calling add in LinkedList, line 393")
call Zfw(h6,R6,"when calling add in LinkedList, line 393")
call Zfw(h6,T6,"when calling add in LinkedList, line 393")
call Zfw(h6,Y6,"when calling add in LinkedList, line 393")
call Zfw(h6,G6,"when calling add in LinkedList, line 393")
call Zfw(h6,g6,"when calling add in LinkedList, line 393")
set Xb=Xb-1
set Zc[5]=h6
set F6=R2I(70)
set k6=R2I(30)
set j6=R2I(30)
set x6=R2I(10)
set v6=R2I(126)
set m6=R2I(84.000007629)
set Cb[Xb]="when calling asList in Multiboards, line 30"
set Xb=Xb+1
set Q6=Lbw("when calling new_LinkedList in LinkedList, line 391")
call Zfw(Q6,F6,"when calling add in LinkedList, line 393")
call Zfw(Q6,k6,"when calling add in LinkedList, line 393")
call Zfw(Q6,j6,"when calling add in LinkedList, line 393")
call Zfw(Q6,x6,"when calling add in LinkedList, line 393")
call Zfw(Q6,v6,"when calling add in LinkedList, line 393")
call Zfw(Q6,m6,"when calling add in LinkedList, line 393")
set Xb=Xb-1
set Zc[6]=Q6
set W6=R2I(70)
set E6=R2I(30)
set Z6=R2I(30)
set U6=R2I(10)
set I6=R2I(126)
set P6=R2I(84.000007629)
set Cb[Xb]="when calling asList in Multiboards, line 31"
set Xb=Xb+1
set A6=Lbw("when calling new_LinkedList in LinkedList, line 391")
call Zfw(A6,W6,"when calling add in LinkedList, line 393")
call Zfw(A6,E6,"when calling add in LinkedList, line 393")
call Zfw(A6,Z6,"when calling add in LinkedList, line 393")
call Zfw(A6,U6,"when calling add in LinkedList, line 393")
call Zfw(A6,I6,"when calling add in LinkedList, line 393")
call Zfw(A6,P6,"when calling add in LinkedList, line 393")
set Xb=Xb-1
set Zc[7]=A6
set D6=R2I(70)
set H6=R2I(30)
set J6=R2I(30)
set K6=R2I(10)
set L6=R2I(126)
set X6=R2I(84.000007629)
set Cb[Xb]="when calling asList in Multiboards, line 32"
set Xb=Xb+1
set C6=Lbw("when calling new_LinkedList in LinkedList, line 391")
call Zfw(C6,D6,"when calling add in LinkedList, line 393")
call Zfw(C6,H6,"when calling add in LinkedList, line 393")
call Zfw(C6,J6,"when calling add in LinkedList, line 393")
call Zfw(C6,K6,"when calling add in LinkedList, line 393")
call Zfw(C6,L6,"when calling add in LinkedList, line 393")
call Zfw(C6,X6,"when calling add in LinkedList, line 393")
set Xb=Xb-1
set Zc[8]=C6
set V6=R2I(70)
set B6=R2I(30)
set N6=R2I(30)
set M6=R2I(10)
set w7=R2I(126)
set u7=R2I(84.000007629)
set Cb[Xb]="when calling asList in Multiboards, line 33"
set Xb=Xb+1
set r7=Lbw("when calling new_LinkedList in LinkedList, line 391")
call Zfw(r7,V6,"when calling add in LinkedList, line 393")
call Zfw(r7,B6,"when calling add in LinkedList, line 393")
call Zfw(r7,N6,"when calling add in LinkedList, line 393")
call Zfw(r7,M6,"when calling add in LinkedList, line 393")
call Zfw(r7,w7,"when calling add in LinkedList, line 393")
call Zfw(r7,u7,"when calling add in LinkedList, line 393")
set Xb=Xb-1
set Zc[9]=r7
set Uc[0]=4
set Uc[1]=0
set Ic[0]=4
set Ic[1]=1
set Pc[0]=1
set Pc[1]=4
set Ac[0]=1
set Ac[1]=5
set Dc[0]=1
set Dc[1]=6
set Hc[0]=2
set Hc[1]=6
set Jc[0]=2
set Jc[1]=3
set s7=Oww("Food","when calling stringToIndex in Multiboards, line 56")
set t7=Oww("0","when calling stringToIndex in Multiboards, line 56")
set i7=Oww("|","when calling stringToIndex in Multiboards, line 56")
set S7=Oww("Income","when calling stringToIndex in Multiboards, line 56")
set c7=Oww("0","when calling stringToIndex in Multiboards, line 56")
set o7=Oww(" ","when calling stringToIndex in Multiboards, line 56")
set Cb[Xb]="when calling asList in Multiboards, line 56"
set Xb=Xb+1
set O7=Lbw("when calling new_LinkedList in LinkedList, line 391")
call Zfw(O7,s7,"when calling add in LinkedList, line 393")
call Zfw(O7,t7,"when calling add in LinkedList, line 393")
call Zfw(O7,i7,"when calling add in LinkedList, line 393")
call Zfw(O7,S7,"when calling add in LinkedList, line 393")
call Zfw(O7,c7,"when calling add in LinkedList, line 393")
call Zfw(O7,o7,"when calling add in LinkedList, line 393")
set Xb=Xb-1
set Kc[0]=O7
set l7=Oww("Iron","when calling stringToIndex in Multiboards, line 57")
set b7=Oww("0","when calling stringToIndex in Multiboards, line 57")
set y7=Oww("|","when calling stringToIndex in Multiboards, line 57")
set p7=Oww("Upkeep","when calling stringToIndex in Multiboards, line 57")
set e7=Oww("0","when calling stringToIndex in Multiboards, line 57")
set q7=Oww(" ","when calling stringToIndex in Multiboards, line 57")
set Cb[Xb]="when calling asList in Multiboards, line 57"
set Xb=Xb+1
set a7=Lbw("when calling new_LinkedList in LinkedList, line 391")
call Zfw(a7,l7,"when calling add in LinkedList, line 393")
call Zfw(a7,b7,"when calling add in LinkedList, line 393")
call Zfw(a7,y7,"when calling add in LinkedList, line 393")
call Zfw(a7,p7,"when calling add in LinkedList, line 393")
call Zfw(a7,e7,"when calling add in LinkedList, line 393")
call Zfw(a7,q7,"when calling add in LinkedList, line 393")
set Xb=Xb-1
set Kc[1]=a7
set n7=Oww("Stone","when calling stringToIndex in Multiboards, line 58")
set d7=Oww("0","when calling stringToIndex in Multiboards, line 58")
set f7=Oww("|","when calling stringToIndex in Multiboards, line 58")
set R7=Oww(" ","when calling stringToIndex in Multiboards, line 58")
set T7=Oww(" ","when calling stringToIndex in Multiboards, line 58")
set Y7=Oww(" ","when calling stringToIndex in Multiboards, line 58")
set Cb[Xb]="when calling asList in Multiboards, line 58"
set Xb=Xb+1
set G7=Lbw("when calling new_LinkedList in LinkedList, line 391")
call Zfw(G7,n7,"when calling add in LinkedList, line 393")
call Zfw(G7,d7,"when calling add in LinkedList, line 393")
call Zfw(G7,f7,"when calling add in LinkedList, line 393")
call Zfw(G7,R7,"when calling add in LinkedList, line 393")
call Zfw(G7,T7,"when calling add in LinkedList, line 393")
call Zfw(G7,Y7,"when calling add in LinkedList, line 393")
set Xb=Xb-1
set Kc[2]=G7
set g7=Oww(" ","when calling stringToIndex in Multiboards, line 60")
set h7=Oww(" ","when calling stringToIndex in Multiboards, line 60")
set F7=Oww("                           City info","when calling stringToIndex in Multiboards, line 60")
set k7=Oww(" ","when calling stringToIndex in Multiboards, line 60")
set j7=Oww(" ","when calling stringToIndex in Multiboards, line 60")
set x7=Oww(" ","when calling stringToIndex in Multiboards, line 60")
set Cb[Xb]="when calling asList in Multiboards, line 60"
set Xb=Xb+1
set v7=Lbw("when calling new_LinkedList in LinkedList, line 391")
call Zfw(v7,g7,"when calling add in LinkedList, line 393")
call Zfw(v7,h7,"when calling add in LinkedList, line 393")
call Zfw(v7,F7,"when calling add in LinkedList, line 393")
call Zfw(v7,k7,"when calling add in LinkedList, line 393")
call Zfw(v7,j7,"when calling add in LinkedList, line 393")
call Zfw(v7,x7,"when calling add in LinkedList, line 393")
set Xb=Xb-1
set Kc[3]=v7
set m7=Oww("Tax","when calling stringToIndex in Multiboards, line 61")
set Q7=Oww("0","when calling stringToIndex in Multiboards, line 61")
set W7=Oww(" ","when calling stringToIndex in Multiboards, line 61")
set E7=Oww("|","when calling stringToIndex in Multiboards, line 61")
set Z7=Oww(" ","when calling stringToIndex in Multiboards, line 61")
set U7=Oww(" ","when calling stringToIndex in Multiboards, line 61")
set Cb[Xb]="when calling asList in Multiboards, line 61"
set Xb=Xb+1
set I7=Lbw("when calling new_LinkedList in LinkedList, line 391")
call Zfw(I7,m7,"when calling add in LinkedList, line 393")
call Zfw(I7,Q7,"when calling add in LinkedList, line 393")
call Zfw(I7,W7,"when calling add in LinkedList, line 393")
call Zfw(I7,E7,"when calling add in LinkedList, line 393")
call Zfw(I7,Z7,"when calling add in LinkedList, line 393")
call Zfw(I7,U7,"when calling add in LinkedList, line 393")
set Xb=Xb-1
set Kc[4]=I7
set P7=Oww("Public order","when calling stringToIndex in Multiboards, line 62")
set A7=Oww("0","when calling stringToIndex in Multiboards, line 62")
set D7=Oww(" ","when calling stringToIndex in Multiboards, line 62")
set H7=Oww("|","when calling stringToIndex in Multiboards, line 62")
set J7=Oww(" ","when calling stringToIndex in Multiboards, line 62")
set K7=Oww(" ","when calling stringToIndex in Multiboards, line 62")
set Cb[Xb]="when calling asList in Multiboards, line 62"
set Xb=Xb+1
set L7=Lbw("when calling new_LinkedList in LinkedList, line 391")
call Zfw(L7,P7,"when calling add in LinkedList, line 393")
call Zfw(L7,A7,"when calling add in LinkedList, line 393")
call Zfw(L7,D7,"when calling add in LinkedList, line 393")
call Zfw(L7,H7,"when calling add in LinkedList, line 393")
call Zfw(L7,J7,"when calling add in LinkedList, line 393")
call Zfw(L7,K7,"when calling add in LinkedList, line 393")
set Xb=Xb-1
set Kc[5]=L7
set X7=Oww("Population","when calling stringToIndex in Multiboards, line 63")
set C7=Oww("0","when calling stringToIndex in Multiboards, line 63")
set V7=Oww(" ","when calling stringToIndex in Multiboards, line 63")
set B7=Oww("|","when calling stringToIndex in Multiboards, line 63")
set N7=Oww(" ","when calling stringToIndex in Multiboards, line 63")
set M7=Oww(" ","when calling stringToIndex in Multiboards, line 63")
set Cb[Xb]="when calling asList in Multiboards, line 63"
set Xb=Xb+1
set w8=Lbw("when calling new_LinkedList in LinkedList, line 391")
call Zfw(w8,X7,"when calling add in LinkedList, line 393")
call Zfw(w8,C7,"when calling add in LinkedList, line 393")
call Zfw(w8,V7,"when calling add in LinkedList, line 393")
call Zfw(w8,B7,"when calling add in LinkedList, line 393")
call Zfw(w8,N7,"when calling add in LinkedList, line 393")
call Zfw(w8,M7,"when calling add in LinkedList, line 393")
set Xb=Xb-1
set Kc[6]=w8
set u8=Oww(" ","when calling stringToIndex in Multiboards, line 64")
set r8=Oww(" ","when calling stringToIndex in Multiboards, line 64")
set s8=Oww(" ","when calling stringToIndex in Multiboards, line 64")
set t8=Oww("|","when calling stringToIndex in Multiboards, line 64")
set i8=Oww(" ","when calling stringToIndex in Multiboards, line 64")
set S8=Oww(" ","when calling stringToIndex in Multiboards, line 64")
set Cb[Xb]="when calling asList in Multiboards, line 64"
set Xb=Xb+1
set c8=Lbw("when calling new_LinkedList in LinkedList, line 391")
call Zfw(c8,u8,"when calling add in LinkedList, line 393")
call Zfw(c8,r8,"when calling add in LinkedList, line 393")
call Zfw(c8,s8,"when calling add in LinkedList, line 393")
call Zfw(c8,t8,"when calling add in LinkedList, line 393")
call Zfw(c8,i8,"when calling add in LinkedList, line 393")
call Zfw(c8,S8,"when calling add in LinkedList, line 393")
set Xb=Xb-1
set Kc[7]=c8
set o8=Oww(" ","when calling stringToIndex in Multiboards, line 65")
set O8=Oww(" ","when calling stringToIndex in Multiboards, line 65")
set l8=Oww(" ","when calling stringToIndex in Multiboards, line 65")
set b8=Oww("|","when calling stringToIndex in Multiboards, line 65")
set y8=Oww(" ","when calling stringToIndex in Multiboards, line 65")
set p8=Oww(" ","when calling stringToIndex in Multiboards, line 65")
set Cb[Xb]="when calling asList in Multiboards, line 65"
set Xb=Xb+1
set e8=Lbw("when calling new_LinkedList in LinkedList, line 391")
call Zfw(e8,o8,"when calling add in LinkedList, line 393")
call Zfw(e8,O8,"when calling add in LinkedList, line 393")
call Zfw(e8,l8,"when calling add in LinkedList, line 393")
call Zfw(e8,b8,"when calling add in LinkedList, line 393")
call Zfw(e8,y8,"when calling add in LinkedList, line 393")
call Zfw(e8,p8,"when calling add in LinkedList, line 393")
set Xb=Xb-1
set Kc[8]=e8
set q8=Oww(" ","when calling stringToIndex in Multiboards, line 66")
set a8=Oww(" ","when calling stringToIndex in Multiboards, line 66")
set n8=Oww(" ","when calling stringToIndex in Multiboards, line 66")
set d8=Oww("|","when calling stringToIndex in Multiboards, line 66")
set f8=Oww(" ","when calling stringToIndex in Multiboards, line 66")
set R8=Oww(" ","when calling stringToIndex in Multiboards, line 66")
set Cb[Xb]="when calling asList in Multiboards, line 66"
set Xb=Xb+1
set T8=Lbw("when calling new_LinkedList in LinkedList, line 391")
call Zfw(T8,q8,"when calling add in LinkedList, line 393")
call Zfw(T8,a8,"when calling add in LinkedList, line 393")
call Zfw(T8,n8,"when calling add in LinkedList, line 393")
call Zfw(T8,d8,"when calling add in LinkedList, line 393")
call Zfw(T8,f8,"when calling add in LinkedList, line 393")
call Zfw(T8,R8,"when calling add in LinkedList, line 393")
set Xb=Xb-1
set Kc[9]=T8
set Xb=Xb-1
return true
endfunction
function IYw takes nothing returns boolean
set Xb=0
return Y8("Multiboards, line 1")
endfunction
function JF takes nothing returns nothing
local player mF=GetOwningPlayer(GetSpellTargetUnit())
local playerstate QF=PLAYER_STATE_RESOURCE_LUMBER
local playerstate WF
local playerstate EF
local player ZF
local force UF
local location IF
local real PF
local real AF
local player DF
local force HF
if QF==PLAYER_STATE_RESOURCE_GOLD then
set WF=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(mF,WF,GetPlayerState(mF,WF)+250)
elseif QF==PLAYER_STATE_RESOURCE_LUMBER then
set EF=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(mF,EF,GetPlayerState(mF,EF)+250)
endif
call SetPlayerState(mF,QF,GetPlayerState(mF,QF)+250)
call RemoveUnit(GetSpellAbilityUnit())
set ZF=GetOwningPlayer(GetSpellTargetUnit())
set UF=CreateForce()
call ForceAddPlayer(UF,ZF)
if IsPlayerInForce(GetLocalPlayer(),UF) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_1229")
endif
set y=GetUnitLoc(GetSpellTargetUnit())
set DF=GetOwningPlayer(GetSpellTargetUnit())
set HF=CreateForce()
call ForceAddPlayer(HF,DF)
set IF=y
set PF=GetLocationX(IF)
set AF=GetLocationY(IF)
if IsPlayerInForce(GetLocalPlayer(),HF) then
call PingMinimap(PF,AF,2.00)
endif
call RemoveLocation(y)
set mF=null
set QF=null
set WF=null
set EF=null
set ZF=null
set UF=null
set IF=null
set DF=null
set HF=null
endfunction
function JI takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989830,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989829,0)
endfunction
function HP takes nothing returns boolean
if GetResearched()!=1378890051 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890051,true)!=1 then
return false
endif
return true
endfunction
function JP takes nothing returns boolean
if not HP() then
return false
endif
return true
endfunction
function JW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989057,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988558,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988551,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989066,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651824,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651826,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988818,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989080,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989072,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989082,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988559,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988812,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651828,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989065,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989067,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989301,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651843,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988561,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988788,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988565,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988566,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988567,0)
endfunction
function wV takes string VC returns boolean
local playerunitevent BC
local integer NC
local integer MC
set Cb[Xb]=VC
set Xb=Xb+1
set BC=EVENT_PLAYER_UNIT_SPELL_CAST
set Cb[Xb]="when calling alloc_Clerics_EventListener_line5 in Clerics, line 5"
set Xb=Xb+1
if tO==0 then
if iO<32768 then
set iO=iO+1
set NC=iO
set SO[NC]=667
else
call l1("Out of memory: Could not create Clerics_EventListener_line5.","when calling error in Clerics, line 5")
set NC=0
endif
else
set tO=tO-1
set NC=sO[tO]
set SO[NC]=667
endif
set Xb=Xb-1
set ub[NC]=0
set rb[NC]=0
set sb[NC]=0
set Cb[Xb]="when calling add in Clerics, line 5"
set Xb=Xb+1
set Cb[Xb]="when calling toIntId in ClosureEvents, line 112"
set Xb=Xb+1
set MC=vS[GetHandleId(BC)]
if MC==0 then
set MC=nV(BC,"when calling registerEventId in ClosureEvents, line 229")
endif
set Xb=Xb-1
set ub[NC]=MC
if ES[ub[NC]]!=0 then
set sb[ES[ub[NC]]]=NC
set rb[NC]=ES[ub[NC]]
endif
set ES[ub[NC]]=NC
set Xb=Xb-1-1
set BC=null
return true
endfunction
function JYw takes nothing returns boolean
set Xb=0
return wV("Clerics, line 1")
endfunction
function HZ takes nothing returns boolean
if GetResearched()!=1378890035 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890035,true)!=1 then
return false
endif
return true
endfunction
function JZ takes nothing returns boolean
if not HZ() then
return false
endif
return true
endfunction
function Hv takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function Jv takes nothing returns boolean
if not Hv() then
return false
endif
return true
endfunction
function KH takes nothing returns nothing
local integer UH=1
local integer IH=1751868773
local player PH=GetOwningPlayer(GetTriggerUnit())
local rect JH=bj_mapInitialPlayableArea
local location HH=Location(GetRectCenterX(JH),GetRectCenterY(JH))
local location AH=Location(GetLocationX(HH)+100000000.00,GetLocationY(HH)+100000000.00)
local real DH=bj_UNIT_FACING
call GroupClear(bj_lastCreatedGroup)
loop
set UH=UH-1
exitwhen UH<0
call CreateUnitAtLocSaveLast(PH,IH,AH,DH)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
call ShowUnit(bj_lastCreatedUnit,false)
set PH=null
set AH=null
set HH=null
set JH=null
endfunction
function JL takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990328 then
return false
endif
return true
endfunction
function KL takes nothing returns boolean
if not JL() then
return false
endif
return true
endfunction
function KP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989825,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989817,0)
endfunction
function JT takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989043 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function KT takes nothing returns boolean
if not JT() then
return false
endif
return true
endfunction
function JU takes nothing returns boolean
if GetResearched()!=1378890033 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890033,true)!=1 then
return false
endif
return true
endfunction
function KU takes nothing returns boolean
if not JU() then
return false
endif
return true
endfunction
function KW takes nothing returns nothing
set s=bj_FORCE_ALL_PLAYERS
call ForForce(s,Ee)
endfunction
function KY takes nothing returns nothing
local unit HY=GetSpellTargetUnit()
local unitstate JY=UNIT_STATE_MANA
call SetUnitState(HY,UNIT_STATE_MANA,RMaxBJ(0.,GetUnitState(GetSpellTargetUnit(),JY)-600.00))
set HY=null
set JY=null
endfunction
function Jlw takes string Dlw returns integer
local integer Hlw
set Cb[Xb]=Dlw
set Xb=Xb+1
set Cb[Xb]="when calling alloc_HashSet in HashSet, line 4"
set Xb=Xb+1
if WO==0 then
if EO<32768 then
set EO=EO+1
set Hlw=EO
set ZO[Hlw]=696
else
call l1("Out of memory: Could not create HashSet.","when calling error in HashSet, line 5")
set Hlw=0
endif
else
set WO=WO-1
set Hlw=QO[WO]
set ZO[Hlw]=696
endif
set Xb=Xb-1
set eb[Hlw]=0
set Xb=Xb-1
return Hlw
endfunction
function MTw takes integer gTw,integer hTw,integer FTw,integer kTw,integer jTw,integer xTw,integer vTw,integer mTw,integer QTw,integer WTw,integer ETw,integer ZTw,integer UTw,integer ITw,integer PTw,integer ATw,integer DTw,integer HTw,integer JTw,integer KTw,integer LTw,integer XTw,integer CTw,integer VTw,string BTw returns integer
local integer NTw
set Cb[Xb]=BTw
set Xb=Xb+1
set NTw=Lbw("when calling new_LinkedList in LinkedList, line 391")
call Zfw(NTw,gTw,"when calling add in LinkedList, line 393")
call Zfw(NTw,hTw,"when calling add in LinkedList, line 393")
call Zfw(NTw,FTw,"when calling add in LinkedList, line 393")
call Zfw(NTw,kTw,"when calling add in LinkedList, line 393")
call Zfw(NTw,jTw,"when calling add in LinkedList, line 393")
call Zfw(NTw,xTw,"when calling add in LinkedList, line 393")
call Zfw(NTw,vTw,"when calling add in LinkedList, line 393")
call Zfw(NTw,mTw,"when calling add in LinkedList, line 393")
call Zfw(NTw,QTw,"when calling add in LinkedList, line 393")
call Zfw(NTw,WTw,"when calling add in LinkedList, line 393")
call Zfw(NTw,ETw,"when calling add in LinkedList, line 393")
call Zfw(NTw,ZTw,"when calling add in LinkedList, line 393")
call Zfw(NTw,UTw,"when calling add in LinkedList, line 393")
call Zfw(NTw,ITw,"when calling add in LinkedList, line 393")
call Zfw(NTw,PTw,"when calling add in LinkedList, line 393")
call Zfw(NTw,ATw,"when calling add in LinkedList, line 393")
call Zfw(NTw,DTw,"when calling add in LinkedList, line 393")
call Zfw(NTw,HTw,"when calling add in LinkedList, line 393")
call Zfw(NTw,JTw,"when calling add in LinkedList, line 393")
call Zfw(NTw,KTw,"when calling add in LinkedList, line 393")
call Zfw(NTw,LTw,"when calling add in LinkedList, line 393")
call Zfw(NTw,XTw,"when calling add in LinkedList, line 393")
call Zfw(NTw,CTw,"when calling add in LinkedList, line 393")
call Zfw(NTw,VTw,"when calling add in LinkedList, line 393")
set Xb=Xb-1
return NTw
endfunction
function rrw takes string Muw returns boolean
local integer wrw
local integer urw
set Cb[Xb]=Muw
set Xb=Xb+1
set wrw=0
set urw=23
loop
exitwhen wrw>urw
set uO[wrw]=Jlw("when calling new_HashSet in VoteKick, line 10")
set wrw=wrw+1
endloop
set rO=MTw(Oww("red","when calling stringToIndex in VoteKick, line 13"),Oww("blue","when calling stringToIndex in VoteKick, line 14"),Oww("teal","when calling stringToIndex in VoteKick, line 15"),Oww("purple","when calling stringToIndex in VoteKick, line 16"),Oww("yellow","when calling stringToIndex in VoteKick, line 17"),Oww("orange","when calling stringToIndex in VoteKick, line 18"),Oww("green","when calling stringToIndex in VoteKick, line 19"),Oww("pink","when calling stringToIndex in VoteKick, line 20"),Oww("grey","when calling stringToIndex in VoteKick, line 21"),Oww("light blue","when calling stringToIndex in VoteKick, line 22"),Oww("dark green","when calling stringToIndex in VoteKick, line 23"),Oww("brown","when calling stringToIndex in VoteKick, line 24"),Oww("maroon","when calling stringToIndex in VoteKick, line 25"),Oww("navy","when calling stringToIndex in VoteKick, line 26"),Oww("turquoise","when calling stringToIndex in VoteKick, line 27"),Oww("violet","when calling stringToIndex in VoteKick, line 28"),Oww("wheat","when calling stringToIndex in VoteKick, line 29"),Oww("peach","when calling stringToIndex in VoteKick, line 30"),Oww("mint","when calling stringToIndex in VoteKick, line 31"),Oww("lavender","when calling stringToIndex in VoteKick, line 32"),Oww("coal","when calling stringToIndex in VoteKick, line 33"),Oww("snow","when calling stringToIndex in VoteKick, line 34"),Oww("emerald","when calling stringToIndex in VoteKick, line 35"),Oww("peanut","when calling stringToIndex in VoteKick, line 36"),"when calling asList in VoteKick, line 12")
set Xb=Xb-1
return true
endfunction
function KYw takes nothing returns boolean
set Xb=0
return rrw("VoteKick, line 1")
endfunction
function KZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989582,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989583,0)
endfunction
function Kv takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988788,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988535,0)
endfunction
function KE takes nothing returns boolean
if GetResearched()!=1378889806 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889806,true)!=2 then
return false
endif
return true
endfunction
function LE takes nothing returns boolean
if not KE() then
return false
endif
return true
endfunction
function LL takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function LU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989828,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989827,0)
endfunction
function JN takes string AN returns boolean
local integer DN
local timer HN
set Cb[Xb]=AN
set Xb=Xb+1
set Cb[Xb]="when calling alloc_Credits_CallbackPeriodic_line5 in Credits, line 5"
set Xb=Xb+1
if GO==0 then
if gO<32768 then
set gO=gO+1
set DN=gO
set hO[DN]=633
else
call l1("Out of memory: Could not create Credits_CallbackPeriodic_line5.","when calling error in Credits, line 5")
set DN=0
endif
else
set GO=GO-1
set DN=YO[GO]
set hO[DN]=633
endif
set Xb=Xb-1
set Cb[Xb]="when calling doPeriodically in Credits, line 5"
set Xb=Xb+1
set HN=Xww("when calling getTimer in ClosureTimers, line 57")
set Cb[Xb]="when calling doPeriodically in ClosureTimers, line 57"
set Xb=Xb+1
call Bnw(DN,HN,600,"when calling start in ClosureTimers, line 45")
set Xb=Xb-1-1-1
set HN=null
return true
endfunction
function LYw takes nothing returns boolean
set Xb=0
return JN("Credits, line 1")
endfunction
function M1 takes nothing returns boolean
return true
endfunction
function M3 takes nothing returns boolean
set tc=InitHashtable()
return true
endfunction
function NL takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747988531 then
return false
endif
return true
endfunction
function ML takes nothing returns boolean
if not NL() then
return false
endif
return true
endfunction
function MP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990607,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990583,0)
endfunction
function NU takes nothing returns boolean
if GetResearched()!=1378890033 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890033,true)!=2 then
return false
endif
return true
endfunction
function MU takes nothing returns boolean
if not NU() then
return false
endif
return true
endfunction
function EGw takes integer vGw,integer mGw,integer QGw,string WGw returns nothing
if mGw<0 or mGw>=24 then
call l1("Index out of Bounds",WGw)
elseif mGw<=11 then
if mGw<=5 then
if mGw<=2 then
if mGw<=1 then
if mGw<=0 then
set Mb[vGw]=QGw
else
set wy[vGw]=QGw
endif
else
set uy[vGw]=QGw
endif
elseif mGw<=4 then
if mGw<=3 then
set ry[vGw]=QGw
else
set sy[vGw]=QGw
endif
else
set ty[vGw]=QGw
endif
elseif mGw<=8 then
if mGw<=7 then
if mGw<=6 then
set iy[vGw]=QGw
else
set Sy[vGw]=QGw
endif
else
set cy[vGw]=QGw
endif
elseif mGw<=10 then
if mGw<=9 then
set oy[vGw]=QGw
else
set Oy[vGw]=QGw
endif
else
set ly[vGw]=QGw
endif
elseif mGw<=17 then
if mGw<=14 then
if mGw<=13 then
if mGw<=12 then
set by[vGw]=QGw
else
set yy[vGw]=QGw
endif
else
set py[vGw]=QGw
endif
elseif mGw<=16 then
if mGw<=15 then
set ey[vGw]=QGw
else
set qy[vGw]=QGw
endif
else
set ay[vGw]=QGw
endif
elseif mGw<=20 then
if mGw<=19 then
if mGw<=18 then
set ny[vGw]=QGw
else
set dy[vGw]=QGw
endif
else
set fy[vGw]=QGw
endif
elseif mGw<=22 then
if mGw<=21 then
set Ry[vGw]=QGw
else
set Ty[vGw]=QGw
endif
else
set Yy[vGw]=QGw
endif
endfunction
function Gqw takes player eqw,string qqw returns integer
local integer aqw
local integer nqw
local integer dqw
local player fqw
local integer Rqw
local integer Tqw
local boolean Yqw
set Cb[Xb]=qqw
set Xb=Xb+1
set Cb[Xb]="when calling alloc_PlayerStats in PlayerStats, line 16"
set Xb=Xb+1
if ll==0 then
if bl<32768 then
set bl=bl+1
set nqw=bl
set yl[nqw]=718
else
call l1("Out of memory: Could not create PlayerStats.","when calling error in PlayerStats, line 6")
set nqw=0
endif
else
set ll=ll-1
set nqw=Ol[ll]
set yl[nqw]=718
endif
set Xb=Xb-1
set aqw=nqw
set dqw=nqw
set fqw=eqw
set Cb[Xb]="when calling construct_PlayerStats in PlayerStats, line 16"
set Xb=Xb+1
set Ab[nqw]=false
set Jb[nqw]=false
set Hb[nqw]=0
set Ib[nqw]=-1
set Db[nqw]=-1
set Pb[nqw]=eqw
if GetPlayerSlotState(eqw)==PLAYER_SLOT_STATE_PLAYING then
set Yqw=GetPlayerController(eqw)==MAP_CONTROL_USER
else
set Yqw=false
endif
set Ab[nqw]=Yqw
set Rqw=0
set Tqw=23
loop
exitwhen Rqw>Tqw
if wo[Rqw]==fqw then
call EGw(dqw,Rqw,-1,"when writing array PlayerStats_alliance_states in PlayerStats, line 25")
else
call EGw(dqw,Rqw,bj_ALLIANCE_UNALLIED,"when writing array PlayerStats_alliance_states in PlayerStats, line 27")
endif
set Rqw=Rqw+1
endloop
set Xb=Xb-1-1
set fqw=null
return aqw
endfunction
function bww takes rect tww,string iww,integer Sww,integer cww,string oww returns nothing
local group Oww_2
local unit lww
set Cb[Xb]=oww
set Xb=Xb+1
set Oww_2=CreateGroup()
call GroupEnumUnitsInRect(Oww_2,tww,null)
call DestroyBoolExpr(null)
set lww=FirstOfGroup(Oww_2)
call GroupRemoveUnit(Oww_2,lww)
set hS[nS]=oSw(lww,iww,Sww,cww,"when calling new_City in SettingCities, line 8")
set Xb=Xb-1
set Oww_2=null
set lww=null
endfunction
function m4 takes string n4 returns nothing
local integer d4
local integer f4
local real R4
local player T4
local integer Y4
local integer G4
local integer g4
local boolean h4
local location F4
local integer k4
local real j4
local real x4
local real v4
set Cb[Xb]=n4
set Xb=Xb+1
set d4=24
set f4=6
set R4=100.0
loop
exitwhen d4<=0
set Y4=1
set G4=f4
loop
exitwhen Y4>G4
set j4=Y4*6.28318/f4
set x4=311.2+R4*Cos(j4)
set v4=5166.7+R4*Sin(j4)
set T4=wo[24-d4+Y4-1]
set g4=Mc[GetPlayerId(T4)]
set n4="when calling isInGame in MainInit, line 54"
set Cb[Xb]="when calling isInGame in MainInit, line 54"
set Xb=Xb+1
if yl[g4]==0 then
if g4==0 then
call l1("Nullpointer exception when calling PlayerStats.isInGame","when calling error in PlayerStats, line 42")
else
call l1("Called PlayerStats.isInGame on invalid object.","when calling error in PlayerStats, line 42")
endif
endif
set h4=Ab[g4]
set Xb=Xb-1
if h4 then
set F4=Location(x4,v4)
call CreateNUnitsAtLoc(1,1747988554,T4,F4,AngleBetweenPoints(F4,Location(311.2,5166.7)))
endif
set Y4=Y4+1
endloop
set R4=R4+50.0
set d4=d4-f4
set f4=f4+2
if d4<2147483647 then
set k4=d4
else
set k4=2147483647
endif
if f4<k4 then
set k4=f4
endif
set f4=k4
endloop
set Xb=Xb-1
set T4=null
set F4=null
endfunction
function t2 takes player w2 returns nothing
local fogstate u2
local location r2
local rect s2
call SetPlayerState(w2,PLAYER_STATE_RESOURCE_GOLD,99999999)
call SetPlayerState(w2,PLAYER_STATE_RESOURCE_LUMBER,99999999)
set u2=FOG_OF_WAR_VISIBLE
set s2=bj_mapInitialPlayableArea
set r2=Location(GetRectCenterX(s2),GetRectCenterY(s2))
set bj_lastCreatedFogModifier=CreateFogModifierRadiusLoc(w2,u2,r2,999999.00,true,false)
call FogModifierStart(bj_lastCreatedFogModifier)
set u2=null
set r2=null
set s2=null
endfunction
function a4 takes string r4 returns boolean
local integer s4
local integer t4
local trigger i4
local integer S4
local integer c4
local integer o4
local integer O4
local integer l4
local player b4
local integer y4
local player p4
local boolean e4
local boolean q4
set Cb[Xb]=r4
set Xb=Xb+1
set S4=Oww("You're playing |cffffff65Crusade over Europe|r.\n\nUse your |cff0011ffsettler|r to choose the foundation of your new kingdom.\nThe location you choose will |cffff0000determine the faction you will get|r.\nUse the |cff00ffffF1|r menu to create alliances.\nExpand quickly, Capture cities and ores to |cffff0000increase your income|r.\nUse the |cff00fff2F2|r menu to set the taxes of your newly acquired |cff0026ffcities|r.\nFor more information, please, go to |cff00d3f8F9 menu|r.","when calling stringToIndex in MainInit, line 21")
set Cb[Xb]="when calling asList in MainInit, line 20"
set Xb=Xb+1
set c4=Lbw("when calling new_LinkedList in LinkedList, line 391")
call Zfw(c4,S4,"when calling add in LinkedList, line 393")
set Xb=Xb-1
set Tc=c4
set o4=0
set O4=0
set l4=23
loop
exitwhen O4>l4
set b4=wo[O4]
if GetPlayerSlotState(b4)==PLAYER_SLOT_STATE_PLAYING then
set e4=GetPlayerController(b4)==MAP_CONTROL_USER
else
set e4=false
endif
if e4 then
set o4=o4+1
endif
set O4=O4+1
endloop
if Gc then
call Q2("Debug info is enabled. Only for Red.")
endif
if gc then
call DisplayTimedTextToPlayer(uo,0.,0.,45.,"Debug mode is on.")
endif
set Cb[Xb]="when calling setupCities in MainInit, line 106"
set Xb=Xb+1
call bww(h,"Adrianopolis",3,1,"when calling newCity in SettingCities, line 27")
call bww(Ss,"Arta",3,0,"when calling newCity in SettingCities, line 28")
call bww(Br,"Athens",3,1,"when calling newCity in SettingCities, line 29")
call bww(Vr,"Ragusa",3,0,"when calling newCity in SettingCities, line 30")
call bww(ls,"Canakkale",3,0,"when calling newCity in SettingCities, line 31")
call bww(cs,"Candia",3,0,"when calling newCity in SettingCities, line 32")
call bww(k,"Constantinople",3,4,"when calling newCity in SettingCities, line 33")
call bww(is,"Corinth",3,0,"when calling newCity in SettingCities, line 34")
call bww(g,"Durazzo",3,0,"when calling newCity in SettingCities, line 35")
call bww(ws,"Nikomedeia",3,0,"when calling newCity in SettingCities, line 36")
call bww(lu,"Kutaisi",3,0,"when calling newCity in SettingCities, line 37")
call bww(Dw,"Nicae",3,2,"when calling newCity in SettingCities, line 38")
call bww(Zw,"Nicosia",3,0,"when calling newCity in SettingCities, line 39")
call bww(Nr,"Rhodes",3,0,"when calling newCity in SettingCities, line 40")
call bww(x,"Scopia",3,0,"when calling newCity in SettingCities, line 41")
call bww(Pw,"Smyrna",3,0,"when calling newCity in SettingCities, line 42")
call bww(bu,"Tbilisi",3,0,"when calling newCity in SettingCities, line 43")
call bww(Ew,"Trebizond",3,1,"when calling newCity in SettingCities, line 44")
call bww(F,"Thessalonika",3,3,"when calling newCity in SettingCities, line 45")
call bww(Qu,"Astrakhan'",1,2,"when calling newCity in SettingCities, line 49")
call bww(Gw,"Azaq",1,0,"when calling newCity in SettingCities, line 50")
call bww(ru,"Baia",1,0,"when calling newCity in SettingCities, line 51")
call bww(cu,"Bryansk",1,0,"when calling newCity in SettingCities, line 52")
call bww(sw,"Caffa",1,0,"when calling newCity in SettingCities, line 53")
call bww(U,"Constanta",1,0,"when calling newCity in SettingCities, line 54")
call bww(iu,"Dnipro",1,0,"when calling newCity in SettingCities, line 55")
call bww(nw,"Halych",1,0,"when calling newCity in SettingCities, line 56")
call bww(gw,"Kiev",1,2,"when calling newCity in SettingCities, line 57")
call bww(N,"Konigsberg",1,0,"when calling newCity in SettingCities, line 58")
call bww(uw,"Hrodna",1,0,"when calling newCity in SettingCities, line 59")
call bww(hw,"Minsk",1,1,"when calling newCity in SettingCities, line 60")
call bww(Su,"Moscow",1,0,"when calling newCity in SettingCities, line 61")
call bww(Sw,"Novgorod",1,0,"when calling newCity in SettingCities, line 62")
call bww(tu,"Olesh'e",1,0,"when calling newCity in SettingCities, line 63")
call bww(cw,"Polotsk",1,0,"when calling newCity in SettingCities, line 64")
call bww(tw,"Pskov",1,0,"when calling newCity in SettingCities, line 65")
call bww(iw,"Reval",1,0,"when calling newCity in SettingCities, line 66")
call bww(M,"Riga",1,1,"when calling newCity in SettingCities, line 67")
call bww(bs,"Bulgar",1,0,"when calling newCity in SettingCities, line 68")
call bww(Wu,"Ryazan'",1,0,"when calling newCity in SettingCities, line 69")
call bww(Ou,"Sarkel",1,0,"when calling newCity in SettingCities, line 70")
call bww(Fw,"Smolensk",1,1,"when calling newCity in SettingCities, line 71")
call bww(L,"Sofia",1,0,"when calling newCity in SettingCities, line 72")
call bww(I,"Targovitse",1,1,"when calling newCity in SettingCities, line 73")
call bww(uu,"Tmutarakan'",1,0,"when calling newCity in SettingCities, line 74")
call bww(Mr,"Turku",1,0,"when calling newCity in SettingCities, line 75")
call bww(rw,"Vilnius",1,1,"when calling newCity in SettingCities, line 76")
call bww(su,"Zhytomir",1,0,"when calling newCity in SettingCities, line 77")
call bww(au,"Acre",2,2,"when calling newCity in SettingCities, line 81")
call bww(mw,"Adana",2,0,"when calling newCity in SettingCities, line 82")
call bww(as,"Alamut",2,0,"when calling newCity in SettingCities, line 83")
call bww(nu,"Al-Aqaba",2,0,"when calling newCity in SettingCities, line 84")
call bww(Nw,"Alexandria",2,2,"when calling newCity in SettingCities, line 85")
call bww(Kw,"Algiers",2,0,"when calling newCity in SettingCities, line 86")
call bww(Aw,"Ankara",2,1,"when calling newCity in SettingCities, line 87")
call bww(Ww,"Antioch",2,2,"when calling newCity in SettingCities, line 88")
call bww(us,"Badajoz",2,0,"when calling newCity in SettingCities, line 89")
call bww(Os,"Baghdad",2,4,"when calling newCity in SettingCities, line 90")
call bww(ns,"Baku",2,0,"when calling newCity in SettingCities, line 91")
call bww(Cw,"Benghazi",2,1,"when calling newCity in SettingCities, line 92")
call bww(es,"Beleb-el-Anab",2,0,"when calling newCity in SettingCities, line 93")
call bww(wu,"Cairo",2,3,"when calling newCity in SettingCities, line 94")
call bww(Tr,"Cordoba",2,4,"when calling newCity in SettingCities, line 95")
call bww(yu,"Damascus",2,2,"when calling newCity in SettingCities, line 96")
call bww(Mw,"Damietta",2,1,"when calling newCity in SettingCities, line 97")
call bww(Ru,"Diyarbakir",2,0,"when calling newCity in SettingCities, line 98")
call bww(Iw,"Edessa",2,1,"when calling newCity in SettingCities, line 99")
call bww(Tu,"Erez",2,1,"when calling newCity in SettingCities, line 100")
call bww(Hw,"Fes",2,3,"when calling newCity in SettingCities, line 101")
call bww(eu,"Gaza",2,0,"when calling newCity in SettingCities, line 102")
call bww(Rr,"Granada",2,2,"when calling newCity in SettingCities, line 103")
call bww(xw,"Isparta",2,0,"when calling newCity in SettingCities, line 104")
call bww(Uw,"Jerusalem",2,3,"when calling newCity in SettingCities, line 105")
call bww(vw,"Kayseri",2,1,"when calling newCity in SettingCities, line 106")
call bww(os,"Kerak",2,0,"when calling newCity in SettingCities, line 107")
call bww(ds,"Kermanshah",2,0,"when calling newCity in SettingCities, line 108")
call bww(Qw,"Konya",2,0,"when calling newCity in SettingCities, line 109")
call bww(Sr,"Lisbon",2,0,"when calling newCity in SettingCities, line 110")
call bww(Ur,"Luxor",2,0,"when calling newCity in SettingCities, line 111")
call bww(tr,"Madrid",2,0,"when calling newCity in SettingCities, line 112")
call bww(Lw,"Mahdya",2,0,"when calling newCity in SettingCities, line 113")
call bww(Zr,"Marrakesh",2,3,"when calling newCity in SettingCities, line 114")
call bww(Bw,"Medina",2,2,"when calling newCity in SettingCities, line 115")
call bww(ps,"Melilla",2,0,"when calling newCity in SettingCities, line 116")
call bww(qu,"Mosul",2,1,"when calling newCity in SettingCities, line 117")
call bww(Yr,"Murcia",2,1,"when calling newCity in SettingCities, line 118")
call bww(Jw,"Oran",2,0,"when calling newCity in SettingCities, line 119")
call bww(mu,"Palma",2,1,"when calling newCity in SettingCities, line 120")
call bww(du,"Quarisiya",2,1,"when calling newCity in SettingCities, line 121")
call bww(Er,"Silves",2,0,"when calling newCity in SettingCities, line 122")
call bww(jw,"Sinop",2,0,"when calling newCity in SettingCities, line 123")
call bww(fu,"Tamiya",2,0,"when calling newCity in SettingCities, line 124")
call bww(pu,"Tartus",2,0,"when calling newCity in SettingCities, line 125")
call bww(qs,"Tabriz",2,0,"when calling newCity in SettingCities, line 126")
call bww(Xw,"Tripoli",2,1,"when calling newCity in SettingCities, line 127")
call bww(Yw,"Tunis",2,1,"when calling newCity in SettingCities, line 128")
call bww(Gr,"Valencia",2,0,"when calling newCity in SettingCities, line 129")
call bww(ou,"Yerevan",2,0,"when calling newCity in SettingCities, line 130")
call bww(J,"Aarhus",0,1,"when calling newCity in SettingCities, line 134")
call bww(Zu,"Aberdeen",0,1,"when calling newCity in SettingCities, line 135")
call bww(Ar,"Ajaccio",0,0,"when calling newCity in SettingCities, line 136")
call bww(dr,"Ancona",0,1,"when calling newCity in SettingCities, line 137")
call bww(Pr,"Angers",0,0,"when calling newCity in SettingCities, line 138")
call bww(yr,"Antwerp",0,0,"when calling newCity in SettingCities, line 139")
call bww(ur,"Barcelona",0,1,"when calling newCity in SettingCities, line 140")
call bww(Kr,"Bari",0,0,"when calling newCity in SettingCities, line 141")
call bww(A,"Belgrade",0,1,"when calling newCity in SettingCities, line 142")
call bww(mr,"Bergen",0,1,"when calling newCity in SettingCities, line 143")
call bww(hr,"Bern",0,0,"when calling newCity in SettingCities, line 144")
call bww(ar,"Bologna",0,1,"when calling newCity in SettingCities, line 145")
call bww(Mu,"Bordeaux",0,1,"when calling newCity in SettingCities, line 146")
call bww(P,"Brasov",0,0,"when calling newCity in SettingCities, line 147")
call bww(br,"Bruges",0,0,"when calling newCity in SettingCities, line 148")
call bww(f,"Burgh",0,0,"when calling newCity in SettingCities, line 149")
call bww(sr,"Burgos",0,1,"when calling newCity in SettingCities, line 150")
call bww(Lu,"Caen",0,0,"when calling newCity in SettingCities, line 151")
call bww(Du,"Caenarfon",0,0,"when calling newCity in SettingCities, line 152")
call bww(Dr,"Cagliari",0,0,"when calling newCity in SettingCities, line 153")
call bww(R,"Cardiff",0,0,"when calling newCity in SettingCities, line 154")
call bww(Bu,"Clermont",0,1,"when calling newCity in SettingCities, line 155")
call bww(ju,"Cologne",0,1,"when calling newCity in SettingCities, line 156")
call bww(Vu,"Dijon",0,0,"when calling newCity in SettingCities, line 157")
call bww(Pu,"Dublin",0,0,"when calling newCity in SettingCities, line 158")
call bww(Eu,"Edinburgh",0,0,"when calling newCity in SettingCities, line 159")
call bww(vr,"Eikundarsund",0,0,"when calling newCity in SettingCities, line 160")
call bww(Q,"Esztergom",0,1,"when calling newCity in SettingCities, line 161")
call bww(Ku,"Exeter",0,0,"when calling newCity in SettingCities, line 162")
call bww(ww,"Gdansk",0,0,"when calling newCity in SettingCities, line 163")
call bww(D,"Flensburg",0,0,"when calling newCity in SettingCities, line 164")
call bww(xu,"Frankfurt",0,1,"when calling newCity in SettingCities, line 165")
call bww(T,"Galway",0,0,"when calling newCity in SettingCities, line 166")
call bww(pr,"Genoa",0,2,"when calling newCity in SettingCities, line 167")
call bww(Tw,"Groningen",0,0,"when calling newCity in SettingCities, line 168")
call bww(ku,"Innsbruck",0,0,"when calling newCity in SettingCities, line 169")
call bww(Uu,"Inverness",0,0,"when calling newCity in SettingCities, line 170")
call bww(Au,"Desmond",0,0,"when calling newCity in SettingCities, line 171")
call bww(Jr,"Reggio",0,0,"when calling newCity in SettingCities, line 173")
call bww(ts,"Kalmar",0,0,"when calling newCity in SettingCities, line 174")
call bww(V,"Kassa",0,0,"when calling newCity in SettingCities, line 175")
call bww(E,"Krakow",0,2,"when calling newCity in SettingCities, line 176")
call bww(rr,"Leon",0,1,"when calling newCity in SettingCities, line 177")
call bww(Hu,"London",0,0,"when calling newCity in SettingCities, line 178")
call bww(kr,"Lund",0,0,"when calling newCity in SettingCities, line 179")
call bww(Fr,"Lyon",0,0,"when calling newCity in SettingCities, line 180")
call bww(K,"Madgeburg",0,0,"when calling newCity in SettingCities, line 181")
call bww(lr,"Marsellie",0,1,"when calling newCity in SettingCities, line 182")
call bww(Cr,"Metz",0,0,"when calling newCity in SettingCities, line 183")
call bww(er,"Milan",0,1,"when calling newCity in SettingCities, line 184")
call bww(Hr,"Naples",0,1,"when calling newCity in SettingCities, line 185")
call bww(gr,"Nuremburg",0,0,"when calling newCity in SettingCities, line 186")
call bww(Wr,"Nykoping",0,0,"when calling newCity in SettingCities, line 187")
call bww(rs,"Oporto",0,0,"when calling newCity in SettingCities, line 188")
call bww(xr,"Oslo",0,1,"when calling newCity in SettingCities, line 189")
call bww(ys,"Buda",0,1,"when calling newCity in SettingCities, line 190")
call bww(Lr,"Palermo",0,3,"when calling newCity in SettingCities, line 191")
call bww(cr,"Pamplona",0,0,"when calling newCity in SettingCities, line 192")
call bww(Cu,"Paris",0,1,"when calling newCity in SettingCities, line 193")
call bww(nr,"Pisa",0,0,"when calling newCity in SettingCities, line 194")
call bww(X,"Plock",0,0,"when calling newCity in SettingCities, line 195")
call bww(C,"Poznan",0,1,"when calling newCity in SettingCities, line 196")
call bww(m,"Prague",0,0,"when calling newCity in SettingCities, line 197")
call bww(G,"Zadar",0,0,"when calling newCity in SettingCities, line 198")
call bww(Ir,"Rennes",0,0,"when calling newCity in SettingCities, line 199")
call bww(Xu,"Rheims",0,0,"when calling newCity in SettingCities, line 200")
call bww(fr,"Rome",0,1,"when calling newCity in SettingCities, line 201")
call bww(H,"Roskilde",0,0,"when calling newCity in SettingCities, line 202")
call bww(ir,"Salamanca",0,0,"when calling newCity in SettingCities, line 203")
call bww(Fu,"Salzburg",0,0,"when calling newCity in SettingCities, line 204")
call bww(jr,"Skara",0,0,"when calling newCity in SettingCities, line 205")
call bww(W,"Stettin",0,0,"when calling newCity in SettingCities, line 206")
call bww(ss,"Stockholm",0,1,"when calling newCity in SettingCities, line 207")
call bww(Xr,"Syracuse",0,0,"when calling newCity in SettingCities, line 208")
call bww(Nu,"Toulouse",0,0,"when calling newCity in SettingCities, line 209")
call bww(B,"Varad",0,0,"when calling newCity in SettingCities, line 210")
call bww(qr,"Venice",0,2,"when calling newCity in SettingCities, line 211")
call bww(v,"Vienna",0,0,"when calling newCity in SettingCities, line 212")
call bww(Qr,"Visby",0,0,"when calling newCity in SettingCities, line 213")
call bww(j,"Warwick",0,0,"when calling newCity in SettingCities, line 214")
call bww(Ju,"Winchester",0,1,"when calling newCity in SettingCities, line 215")
call bww(Z,"Wroclaw",0,0,"when calling newCity in SettingCities, line 216")
call bww(Iu,"York",0,1,"when calling newCity in SettingCities, line 217")
call bww(Y,"Zagreb",0,0,"when calling newCity in SettingCities, line 218")
call bww(wr,"Zaragoza",0,0,"when calling newCity in SettingCities, line 219")
call bww(vu,"Hamburg",0,1,"when calling newCity in SettingCities, line 220")
set Xb=Xb-1
call SetForceAllianceStateBJ(bj_FORCE_ALL_PLAYERS,bj_FORCE_PLAYER[PLAYER_NEUTRAL_PASSIVE],bj_ALLIANCE_NEUTRAL)
call SetForceAllianceStateBJ(bj_FORCE_ALL_PLAYERS,bj_FORCE_ALL_PLAYERS,bj_ALLIANCE_UNALLIED)
call SetForceAllianceStateBJ(ic,ic,bj_ALLIANCE_NEUTRAL)
call SetForceAllianceStateBJ(Sc,Sc,bj_ALLIANCE_NEUTRAL)
call SetForceAllianceStateBJ(cc,cc,bj_ALLIANCE_NEUTRAL)
call SetForceAllianceStateBJ(oc,oc,bj_ALLIANCE_NEUTRAL)
set s4=0
set t4=23
loop
exitwhen s4>t4
call SetPlayerState(wo[s4],PLAYER_STATE_RESOURCE_GOLD,200)
call SetPlayerState(wo[s4],PLAYER_STATE_RESOURCE_LUMBER,200)
if gc then
call t2(wo[s4])
endif
call SetPlayerTechMaxAllowed(wo[s4],1747988789,1)
set Mc[s4]=Gqw(wo[s4],"when calling new_PlayerStats in MainInit, line 129")
set y4=Mc[s4]
set p4=wo[s4]
if GetPlayerSlotState(p4)==PLAYER_SLOT_STATE_PLAYING then
set q4=GetPlayerController(p4)==MAP_CONTROL_USER
else
set q4=false
endif
set Cb[Xb]="when calling setInGame in MainInit, line 130"
set Xb=Xb+1
if yl[y4]==0 then
if y4==0 then
call l1("Nullpointer exception when calling PlayerStats.setInGame","when calling error in PlayerStats, line 45")
else
call l1("Called PlayerStats.setInGame on invalid object.","when calling error in PlayerStats, line 45")
endif
endif
set Ab[y4]=q4
set Xb=Xb-1
set s4=s4+1
endloop
call m4("when calling setPlayersAtStart in MainInit, line 132")
set i4=CreateTrigger()
call TriggerRegisterTimerEvent(i4,0.01,false)
call TriggerAddAction(i4,Kf)
set Xb=Xb-1
set i4=null
set b4=null
set p4=null
return true
endfunction
function MYw takes nothing returns boolean
set Xb=0
return a4("MainInit, line 1")
endfunction
function Mv takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988561,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988784,0)
endfunction
function VF takes nothing returns boolean
if GetUnitTypeId(GetSpellTargetUnit())==1747988787 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747990361 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747989831 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747989040 then
return true
endif
return false
endfunction
function BF takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988801 then
return false
endif
if not VF() then
return false
endif
return true
endfunction
function NF takes nothing returns boolean
if not BF() then
return false
endif
return true
endfunction
function BH takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())==1747988531 then
return true
endif
if GetUnitTypeId(GetTriggerUnit())==1747990328 then
return true
endif
if GetUnitTypeId(GetTriggerUnit())==1747989592 then
return true
endif
if GetUnitTypeId(GetTriggerUnit())==1747990086 then
return true
endif
return false
endfunction
function NH takes nothing returns boolean
if not BH() then
return false
endif
return true
endfunction
function BP takes nothing returns boolean
if GetResearched()!=1378890051 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890051,true)!=2 then
return false
endif
return true
endfunction
function NP takes nothing returns boolean
if not BP() then
return false
endif
return true
endfunction
function NT takes nothing returns nothing
local player LT=GetOwningPlayer(GetAttacker())
local player XT=GetOwningPlayer(GetAttacker())
local player CT
local player VT
local unit BT
set r[GetPlayerId(LT)+1]=r[GetPlayerId(XT)+1]+1
set CT=GetOwningPlayer(GetTriggerUnit())
set VT=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(CT)+1]=r[GetPlayerId(VT)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set BT=GetTriggerUnit()
call SetUnitState(BT,UNIT_STATE_LIFE,GetUnitState(BT,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set LT=null
set XT=null
set CT=null
set VT=null
set BT=null
endfunction
function NX takes nothing returns boolean
local boolean VX
local boolean BX
if GetUnitTypeId(GetSpellAbilityUnit())==1747988553 then
set VX=GetUnitTypeId(GetSpellTargetUnit())==1747989297
else
set VX=false
endif
if VX then
set BX=GetPlayerId(GetOwningPlayer(GetSpellTargetUnit()))==PLAYER_NEUTRAL_AGGRESSIVE
else
set BX=false
endif
return BX
endfunction
function NY takes nothing returns nothing
set t=GetUnitLoc(GetSpellTargetUnit())
set bj_lastCreatedEffect=AddSpecialEffectLoc("Abilities\\Spells\\Orc\\Voodoo\\VoodooAuraTarget.mdl",t)
call DestroyEffect(bj_lastCreatedEffect)
set i=GetUnitLoc(GetSpellAbilityUnit())
set bj_lastCreatedEffect=AddSpecialEffectLoc("Abilities\\Spells\\Orc\\Voodoo\\VoodooAura.mdl",i)
call DestroyEffect(bj_lastCreatedEffect)
call RemoveLocation(t)
call RemoveLocation(i)
endfunction
function H1 takes string E1 returns boolean
local playerunitevent Z1
local playerunitevent U1
local integer I1
local integer P1
local integer A1
local integer D1
set Cb[Xb]=E1
set Xb=Xb+1
set Z1=EVENT_PLAYER_UNIT_DEATH
set Cb[Xb]="when calling alloc_LimitMercenaryCamps_EventListener_line8 in LimitMercenaryCamps, line 8"
set Xb=Xb+1
if tO==0 then
if iO<32768 then
set iO=iO+1
set I1=iO
set SO[I1]=672
else
call l1("Out of memory: Could not create LimitMercenaryCamps_EventListener_line8.","when calling error in LimitMercenaryCamps, line 8")
set I1=0
endif
else
set tO=tO-1
set I1=sO[tO]
set SO[I1]=672
endif
set Xb=Xb-1
set ub[I1]=0
set rb[I1]=0
set sb[I1]=0
set Cb[Xb]="when calling add in LimitMercenaryCamps, line 8"
set Xb=Xb+1
set Cb[Xb]="when calling toIntId in ClosureEvents, line 112"
set Xb=Xb+1
set P1=vS[GetHandleId(Z1)]
if P1==0 then
set P1=nV(Z1,"when calling registerEventId in ClosureEvents, line 229")
endif
set Xb=Xb-1
set ub[I1]=P1
if ES[ub[I1]]!=0 then
set sb[ES[ub[I1]]]=I1
set rb[I1]=ES[ub[I1]]
endif
set ES[ub[I1]]=I1
set Xb=Xb-1
set U1=EVENT_PLAYER_UNIT_CONSTRUCT_START
set Cb[Xb]="when calling alloc_LimitMercenaryCamps_EventListener_line12 in LimitMercenaryCamps, line 12"
set Xb=Xb+1
if tO==0 then
if iO<32768 then
set iO=iO+1
set A1=iO
set SO[A1]=671
else
call l1("Out of memory: Could not create LimitMercenaryCamps_EventListener_line12.","when calling error in LimitMercenaryCamps, line 12")
set A1=0
endif
else
set tO=tO-1
set A1=sO[tO]
set SO[A1]=671
endif
set Xb=Xb-1
set ub[A1]=0
set rb[A1]=0
set sb[A1]=0
set Cb[Xb]="when calling add in LimitMercenaryCamps, line 12"
set Xb=Xb+1
set Cb[Xb]="when calling toIntId in ClosureEvents, line 112"
set Xb=Xb+1
set D1=vS[GetHandleId(U1)]
if D1==0 then
set D1=nV(U1,"when calling registerEventId in ClosureEvents, line 229")
endif
set Xb=Xb-1
set ub[A1]=D1
if ES[ub[A1]]!=0 then
set sb[ES[ub[A1]]]=A1
set rb[A1]=ES[ub[A1]]
endif
set ES[ub[A1]]=A1
set Xb=Xb-1-1
set Z1=null
set U1=null
return true
endfunction
function NYw takes nothing returns boolean
set Xb=0
return H1("LimitMercenaryCamps, line 1")
endfunction
function NZ takes nothing returns nothing
set s=bj_FORCE_ALL_PLAYERS
call ForForce(s,qq)
endfunction
function Nuw takes nothing returns boolean
call Location(0.,0.)
return true
endfunction
function Bv takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function Nv takes nothing returns boolean
if not Bv() then
return false
endif
return true
endfunction
function oE takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function OE takes nothing returns boolean
if not oE() then
return false
endif
return true
endfunction
function Duw takes string vuw returns boolean
local trigger muw
local playerunitevent Quw
local playerunitevent Wuw
local integer Euw
local integer Zuw
local rect Uuw
local region Iuw
local integer Puw
local integer Auw
set Cb[Xb]=vuw
set Xb=Xb+1
set Quw=EVENT_PLAYER_UNIT_SPELL_FINISH
set Cb[Xb]="when calling alloc_Upkeep_EventListener_line6 in Upkeep, line 6"
set Xb=Xb+1
if tO==0 then
if iO<32768 then
set iO=iO+1
set Euw=iO
set SO[Euw]=684
else
call l1("Out of memory: Could not create Upkeep_EventListener_line6.","when calling error in Upkeep, line 6")
set Euw=0
endif
else
set tO=tO-1
set Euw=sO[tO]
set SO[Euw]=684
endif
set Xb=Xb-1
set ub[Euw]=0
set rb[Euw]=0
set sb[Euw]=0
set Cb[Xb]="when calling add in Upkeep, line 6"
set Xb=Xb+1
set Cb[Xb]="when calling toIntId in ClosureEvents, line 112"
set Xb=Xb+1
set Zuw=vS[GetHandleId(Quw)]
if Zuw==0 then
set Zuw=nV(Quw,"when calling registerEventId in ClosureEvents, line 229")
endif
set Xb=Xb-1
set ub[Euw]=Zuw
if ES[ub[Euw]]!=0 then
set sb[ES[ub[Euw]]]=Euw
set rb[Euw]=ES[ub[Euw]]
endif
set ES[ub[Euw]]=Euw
set Xb=Xb-1
set muw=CreateTrigger()
set Uuw=GetWorldBounds()
set Iuw=CreateRegion()
call RegionAddRect(Iuw,Uuw)
call TriggerRegisterEnterRegion(muw,Iuw,null)
call TriggerAddAction(muw,Cf)
set Wuw=EVENT_PLAYER_UNIT_DEATH
set Cb[Xb]="when calling alloc_Upkeep_EventListener_line28 in Upkeep, line 28"
set Xb=Xb+1
if tO==0 then
if iO<32768 then
set iO=iO+1
set Puw=iO
set SO[Puw]=683
else
call l1("Out of memory: Could not create Upkeep_EventListener_line28.","when calling error in Upkeep, line 28")
set Puw=0
endif
else
set tO=tO-1
set Puw=sO[tO]
set SO[Puw]=683
endif
set Xb=Xb-1
set ub[Puw]=0
set rb[Puw]=0
set sb[Puw]=0
set Cb[Xb]="when calling add in Upkeep, line 28"
set Xb=Xb+1
set Cb[Xb]="when calling toIntId in ClosureEvents, line 112"
set Xb=Xb+1
set Auw=vS[GetHandleId(Wuw)]
if Auw==0 then
set Auw=nV(Wuw,"when calling registerEventId in ClosureEvents, line 229")
endif
set Xb=Xb-1
set ub[Puw]=Auw
if ES[ub[Puw]]!=0 then
set sb[ES[ub[Puw]]]=Puw
set rb[Puw]=ES[ub[Puw]]
endif
set ES[ub[Puw]]=Puw
set Xb=Xb-1-1
set muw=null
set Quw=null
set Wuw=null
set Uuw=null
set Iuw=null
return true
endfunction
function OGw takes nothing returns boolean
set Xb=0
return Duw("Upkeep, line 1")
endfunction
function OL takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function OU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989814,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989825,0)
endfunction
function OW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988818,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988552,0)
endfunction
function PE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989559,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989569,0)
endfunction
function IK takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747988809 then
return false
endif
return true
endfunction
function PK takes nothing returns boolean
if not IK() then
return false
endif
return true
endfunction
function Tww takes string dww,string fww returns boolean
local integer Rww=StringLength(dww)
if StringLength(fww)>Rww then
return false
endif
return SubString(dww,0,StringLength(fww))==fww
endfunction
function PN takes nothing returns boolean
return Tww(GetEventPlayerChatString(),"-")
endfunction
function IQ takes nothing returns boolean
if GetResearched()!=1378889799 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889799,true)!=2 then
return false
endif
return true
endfunction
function PQ takes nothing returns boolean
if not IQ() then
return false
endif
return true
endfunction
function TX takes string nX returns boolean
local playerunitevent dX
local integer fX
local integer RX
set Cb[Xb]=nX
set Xb=Xb+1
set dX=EVENT_PLAYER_UNIT_ATTACKED
set Cb[Xb]="when calling alloc_CastleCapture_EventListener_line8 in CastleCapture, line 8"
set Xb=Xb+1
if tO==0 then
if iO<32768 then
set iO=iO+1
set fX=iO
set SO[fX]=662
else
call l1("Out of memory: Could not create CastleCapture_EventListener_line8.","when calling error in CastleCapture, line 8")
set fX=0
endif
else
set tO=tO-1
set fX=sO[tO]
set SO[fX]=662
endif
set Xb=Xb-1
set ub[fX]=0
set rb[fX]=0
set sb[fX]=0
set Cb[Xb]="when calling add in CastleCapture, line 8"
set Xb=Xb+1
set Cb[Xb]="when calling toIntId in ClosureEvents, line 112"
set Xb=Xb+1
set RX=vS[GetHandleId(dX)]
if RX==0 then
set RX=nV(dX,"when calling registerEventId in ClosureEvents, line 229")
endif
set Xb=Xb-1
set ub[fX]=RX
if ES[ub[fX]]!=0 then
set sb[ES[ub[fX]]]=fX
set rb[fX]=ES[ub[fX]]
endif
set ES[ub[fX]]=fX
set Xb=Xb-1-1
set dX=null
return true
endfunction
function PYw takes nothing returns boolean
set Xb=0
return TX("CastleCapture, line 1")
endfunction
function Q9 takes nothing returns boolean
local integer v9
local integer m9
set uo=GetLocalPlayer()
set v9=0
set m9=bj_MAX_PLAYER_SLOTS-1
loop
exitwhen v9>m9
set wo[v9]=Player(v9)
set v9=v9+1
endloop
return true
endfunction
function QK takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function QQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988559,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989064,0)
endfunction
function Qww takes nothing returns boolean
return true
endfunction
function R1 takes nothing returns nothing
call GroupAddUnit(qc,GetEnumUnit())
endfunction
function R2 takes nothing returns boolean
return true
endfunction
function RA takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990595,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990608,0)
endfunction
function Yaw takes integer Raw,unit Taw returns nothing
set Lb[Raw]=Taw
call SetUnitUserData(Lb[Raw],Raw)
set Do[Ho]=Taw
set Ho=Ho+1
call TriggerEvaluate(Po)
set Ho=Ho-1
endfunction
function faw takes unit aaw,string naw returns integer
local integer daw
set Cb[Xb]=naw
set Xb=Xb+1
set Cb[Xb]="when calling alloc_UnitIndex in UnitIndexer, line 181"
set Xb=Xb+1
if nl==0 then
if dl<32768 then
set dl=dl+1
set daw=dl
set fl[daw]=742
else
call l1("Out of memory: Could not create UnitIndex.","when calling error in UnitIndexer, line 172")
set daw=0
endif
else
set nl=nl-1
set daw=al[nl]
set fl[daw]=742
endif
set Xb=Xb-1
call Yaw(daw,aaw)
set Xb=Xb-1
return daw
endfunction
function Dww takes string Pww returns nothing
local unit Aww
set Cb[Xb]=Pww
set Xb=Xb+1
set Aww=Bc[Nc-1]
set Cb[Xb]="when calling toUnitIndex in UnitIndexer, line 196"
set Xb=Xb+1
if GetUnitUserData(Aww)==0 then
call faw(Aww,"when calling new_UnitIndex in UnitIndexer, line 135")
endif
set Xb=Xb-1-1
set Aww=null
endfunction
function RGw takes nothing returns nothing
set Xb=0
call Dww("UnitIndexer, line 196")
endfunction
function fI takes nothing returns boolean
if GetResearched()!=1378890036 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890036,true)!=1 then
return false
endif
return true
endfunction
function RI takes nothing returns boolean
if not fI() then
return false
endif
return true
endfunction
function RJ takes nothing returns nothing
call UnitAddAbility(GetConstructedStructure(),1093677896)
endfunction
function saw takes string uaw returns integer
local integer raw
set Cb[Xb]=uaw
set Xb=Xb+1
set Cb[Xb]="when calling alloc_Table in Table, line 5"
set Xb=Xb+1
if IO==0 then
if PO<32768 then
set PO=PO+1
set raw=PO
set AO[raw]=732
else
call l1("Out of memory: Could not create Table.","when calling error in Table, line 6")
set raw=0
endif
else
set IO=IO-1
set raw=UO[IO]
set AO[raw]=732
endif
set Xb=Xb-1-1
return raw
endfunction
function RYw takes nothing returns boolean
set Xb=0
set Cb[Xb]="EventHelper, line 1"
set Xb=Xb+1
call Olw("when calling new_HashMap in EventHelper, line 6")
call Olw("when calling new_HashMap in EventHelper, line 7")
call saw("when calling new_Table in EventHelper, line 8")
set Xb=Xb-1
return true
endfunction
function Rm takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988567,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988564,0)
endfunction
function S0w takes nothing returns boolean
set bo=-340282366920938000000000000000000000000.
return true
endfunction
function initMapBounds takes nothing returns nothing
local rect cond_result
local region receiver
local real temp
local real tuple_temp
set kc=bj_mapInitialPlayableArea
call RegionAddRect(CreateRegion(),kc)
set cond_result=GetWorldBounds()
set jc=cond_result
set receiver=CreateRegion()
call RegionAddRect(receiver,jc)
set xc=receiver
set temp=GetRectMaxX(jc)
set tuple_temp=GetRectMaxY(jc)
set vc=temp
set mc=tuple_temp
endfunction
function S2 takes nothing returns boolean
call initMapBounds()
return true
endfunction
function SA takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651855,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651851,0)
endfunction
function lRw takes integer Ufw,integer Ifw,integer Pfw,integer Afw,integer Dfw,integer Hfw,integer Jfw,integer Kfw,integer Lfw,integer Xfw,integer Cfw,integer Vfw,integer Bfw,integer Nfw,integer Mfw,integer wRw,integer uRw,integer rRw,integer sRw,integer tRw,integer iRw,integer SRw,integer cRw,string oRw returns integer
local integer ORw
set Cb[Xb]=oRw
set Xb=Xb+1
set ORw=Lbw("when calling new_LinkedList in LinkedList, line 391")
call Zfw(ORw,Ufw,"when calling add in LinkedList, line 393")
call Zfw(ORw,Ifw,"when calling add in LinkedList, line 393")
call Zfw(ORw,Pfw,"when calling add in LinkedList, line 393")
call Zfw(ORw,Afw,"when calling add in LinkedList, line 393")
call Zfw(ORw,Dfw,"when calling add in LinkedList, line 393")
call Zfw(ORw,Hfw,"when calling add in LinkedList, line 393")
call Zfw(ORw,Jfw,"when calling add in LinkedList, line 393")
call Zfw(ORw,Kfw,"when calling add in LinkedList, line 393")
call Zfw(ORw,Lfw,"when calling add in LinkedList, line 393")
call Zfw(ORw,Xfw,"when calling add in LinkedList, line 393")
call Zfw(ORw,Cfw,"when calling add in LinkedList, line 393")
call Zfw(ORw,Vfw,"when calling add in LinkedList, line 393")
call Zfw(ORw,Bfw,"when calling add in LinkedList, line 393")
call Zfw(ORw,Nfw,"when calling add in LinkedList, line 393")
call Zfw(ORw,Mfw,"when calling add in LinkedList, line 393")
call Zfw(ORw,wRw,"when calling add in LinkedList, line 393")
call Zfw(ORw,uRw,"when calling add in LinkedList, line 393")
call Zfw(ORw,rRw,"when calling add in LinkedList, line 393")
call Zfw(ORw,sRw,"when calling add in LinkedList, line 393")
call Zfw(ORw,tRw,"when calling add in LinkedList, line 393")
call Zfw(ORw,iRw,"when calling add in LinkedList, line 393")
call Zfw(ORw,SRw,"when calling add in LinkedList, line 393")
call Zfw(ORw,cRw,"when calling add in LinkedList, line 393")
set Xb=Xb-1
return ORw
endfunction
function i0w takes string u0w returns boolean
local playerunitevent r0w
local integer s0w
local integer t0w
set Cb[Xb]=u0w
set Xb=Xb+1
set lo=lRw(1747988557,1747989075,1747990102,1747988785,1747989839,1747990101,1747989554,1747989041,1747990344,1747989059,1747989060,1747988844,1747990351,1747990352,1747990356,1747989331,1747990350,1747989809,1747990353,1747990354,1747990355,1747988568,1747990341,"when calling asList in RangeChecks, line 5")
set r0w=EVENT_PLAYER_UNIT_CONSTRUCT_START
set Cb[Xb]="when calling alloc_RangeChecks_EventListener_line11 in RangeChecks, line 11"
set Xb=Xb+1
if tO==0 then
if iO<32768 then
set iO=iO+1
set s0w=iO
set SO[s0w]=681
else
call l1("Out of memory: Could not create RangeChecks_EventListener_line11.","when calling error in RangeChecks, line 11")
set s0w=0
endif
else
set tO=tO-1
set s0w=sO[tO]
set SO[s0w]=681
endif
set Xb=Xb-1
set ub[s0w]=0
set rb[s0w]=0
set sb[s0w]=0
set Cb[Xb]="when calling add in RangeChecks, line 11"
set Xb=Xb+1
set Cb[Xb]="when calling toIntId in ClosureEvents, line 112"
set Xb=Xb+1
set t0w=vS[GetHandleId(r0w)]
if t0w==0 then
set t0w=nV(r0w,"when calling registerEventId in ClosureEvents, line 229")
endif
set Xb=Xb-1
set ub[s0w]=t0w
if ES[ub[s0w]]!=0 then
set sb[ES[ub[s0w]]]=s0w
set rb[s0w]=ES[ub[s0w]]
endif
set ES[ub[s0w]]=s0w
set Xb=Xb-1-1
set r0w=null
return true
endfunction
function SGw takes nothing returns boolean
set Xb=0
return i0w("RangeChecks, line 1")
endfunction
function iI takes nothing returns boolean
if GetResearched()!=1378889797 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889797,true)!=1 then
return false
endif
return true
endfunction
function SI takes nothing returns boolean
if not iI() then
return false
endif
return true
endfunction
function SJ takes nothing returns nothing
local integer MH=1
local integer wJ=1751343475
local player uJ=GetOwningPlayer(GetTriggerUnit())
local rect iJ=bj_mapInitialPlayableArea
local location tJ=Location(GetRectCenterX(iJ),GetRectCenterY(iJ))
local location rJ=Location(GetLocationX(tJ)+100000000.00,GetLocationY(tJ)+100000000.00)
local real sJ=bj_UNIT_FACING
call GroupClear(bj_lastCreatedGroup)
loop
set MH=MH-1
exitwhen MH<0
call CreateUnitAtLocSaveLast(uJ,wJ,rJ,sJ)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
call ShowUnit(bj_lastCreatedUnit,false)
set uJ=null
set rJ=null
set tJ=null
set iJ=null
endfunction
function Sm takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988565,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988563,0)
endfunction
function Sv takes nothing returns nothing
call SetMapFlag(MAP_LOCK_RESOURCE_TRADING,false)
endfunction
function T1 takes nothing returns boolean
set ac=InitHashtable()
set nc=InitHashtable()
return true
endfunction
function gaw takes integer Gaw returns nothing
set Do[Ho]=Lb[Gaw]
set Ho=Ho+1
call TriggerEvaluate(Ao)
set Ho=Ho-1
call SetUnitUserData(Lb[Gaw],0)
endfunction
function vfw takes integer jfw,string xfw returns nothing
set Cb[Xb]=xfw
set Xb=Xb+1
if fl[jfw]==0 then
if jfw==0 then
call l1("Nullpointer exception when calling UnitIndex.UnitIndex","when calling error in UnitIndexer, line 172")
else
call l1("Called UnitIndex.UnitIndex on invalid object.","when calling error in UnitIndexer, line 172")
endif
endif
set Cb[Xb]="when calling destroyUnitIndex in UnitIndexer, line 172"
set Xb=Xb+1
call gaw(jfw)
set Cb[Xb]="when calling dealloc_UnitIndex in UnitIndexer, line 188"
set Xb=Xb+1
if fl[jfw]==0 then
call l1("Double free: object of type UnitIndex","when calling error in UnitIndexer, line 172")
else
set al[nl]=jfw
set nl=nl+1
set fl[jfw]=0
endif
set Xb=Xb-1-1-1
endfunction
function Iww takes unit Eww,string Zww returns boolean
local integer Uww_2
set Cb[Xb]=Zww
set Xb=Xb+1
if GetUnitUserData(Eww)==0 then
set Xb=Xb-1
return false
else
set Cb[Xb]="when calling toUnitIndex in UnitIndexer, line 169"
set Xb=Xb+1
set Uww_2=GetUnitUserData(Eww)
if Uww_2==0 then
set Uww_2=faw(Eww,"when calling new_UnitIndex in UnitIndexer, line 135")
endif
set Xb=Xb-1
call vfw(Uww_2,"when calling dispatch_UnitIndex_destroyUnitIndex in UnitIndexer, line 169")
set Xb=Xb-1
return true
endif
endfunction
function Jww takes string Hww returns nothing
set Cb[Xb]=Hww
set Xb=Xb+1
call Iww(Bc[Nc-1],"when calling deindex in UnitIndexer, line 197")
set Xb=Xb-1
endfunction
function TGw takes nothing returns nothing
set Xb=0
call Jww("UnitIndexer, line 197")
endfunction
function TH takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747988553 then
return false
endif
return true
endfunction
function TI takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989836,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989837,0)
endfunction
function RP takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function TP takes nothing returns boolean
if not RP() then
return false
endif
return true
endfunction
function TYw takes nothing returns boolean
set Xb=0
set Cb[Xb]="RegisterEvents, line 1"
set Xb=Xb+1
set po=Olw("when calling new_HashMap in RegisterEvents, line 55")
call G0w(EVENT_PLAYER_UNIT_SPELL_EFFECT,null,iR,null)
set Xb=Xb-1
return true
endfunction
function RZ takes nothing returns boolean
if GetResearched()!=1378889810 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889810,true)!=1 then
return false
endif
return true
endfunction
function TZ takes nothing returns boolean
if not RZ() then
return false
endif
return true
endfunction
function fx takes nothing returns boolean
if GetUnitTypeId(GetSpellTargetUnit())==1747990581 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747990580 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747989813 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747988569 then
return true
endif
return false
endfunction
function Rx takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989048 then
return false
endif
if not fx() then
return false
endif
return true
endfunction
function Tx takes nothing returns boolean
if not Rx() then
return false
endif
return true
endfunction
function ZL takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990086 then
return false
endif
return true
endfunction
function UL takes nothing returns boolean
if not ZL() then
return false
endif
return true
endfunction
function UP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990594,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990584,0)
endfunction
function ZU takes nothing returns boolean
if GetResearched()!=1378890034 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890034,true)!=2 then
return false
endif
return true
endfunction
function UU takes nothing returns boolean
if not ZU() then
return false
endif
return true
endfunction
function ZW takes nothing returns boolean
if GetResearched()!=1378889783 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889783,true)!=2 then
return false
endif
return true
endfunction
function UW takes nothing returns boolean
if not ZW() then
return false
endif
return true
endfunction
function UYw takes nothing returns boolean
local integer mYw
local integer QYw
local integer WYw
local integer EYw
local integer ZYw
set Xb=0
set Cb[Xb]="City, line 1"
set Xb=Xb+1
set dS=120.0
set fS[0]=0.0020
set fS[1]=0.0025
set Cb[Xb]="when calling asList in City, line 37"
set Xb=Xb+1
set mYw=Lbw("when calling new_LinkedList in LinkedList, line 391")
call Zfw(mYw,10000,"when calling add in LinkedList, line 393")
call Zfw(mYw,20000,"when calling add in LinkedList, line 393")
set Xb=Xb-1
set RS[0]=mYw
set Cb[Xb]="when calling asList in City, line 38"
set Xb=Xb+1
set QYw=Lbw("when calling new_LinkedList in LinkedList, line 391")
call Zfw(QYw,30000,"when calling add in LinkedList, line 393")
call Zfw(QYw,40000,"when calling add in LinkedList, line 393")
set Xb=Xb-1
set RS[1]=QYw
set Cb[Xb]="when calling asList in City, line 39"
set Xb=Xb+1
set WYw=Lbw("when calling new_LinkedList in LinkedList, line 391")
call Zfw(WYw,60000,"when calling add in LinkedList, line 393")
call Zfw(WYw,90000,"when calling add in LinkedList, line 393")
set Xb=Xb-1
set RS[2]=WYw
set Cb[Xb]="when calling asList in City, line 40"
set Xb=Xb+1
set EYw=Lbw("when calling new_LinkedList in LinkedList, line 391")
call Zfw(EYw,120000,"when calling add in LinkedList, line 393")
call Zfw(EYw,160000,"when calling add in LinkedList, line 393")
set Xb=Xb-1
set RS[3]=EYw
set Cb[Xb]="when calling asList in City, line 41"
set Xb=Xb+1
set ZYw=Lbw("when calling new_LinkedList in LinkedList, line 391")
call Zfw(ZYw,180000,"when calling add in LinkedList, line 393")
call Zfw(ZYw,220000,"when calling add in LinkedList, line 393")
set Xb=Xb-1
set RS[4]=ZYw
set TS[0]=1.0
set TS[1]=0.5
set TS[2]=1.6
set TS[3]=2.0
set YS[0]=0.0
set YS[1]=20.0
set YS[2]=-25.0
set YS[3]=-60.0
set GS[0]=0.05
set GS[1]=0.0
set GS[2]=0.15
set GS[3]=0.30
set gS[0]=1.0
set gS[1]=1.1
set gS[2]=0.85
set gS[3]=0.7
set Xb=Xb-1
return true
endfunction
function UZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651832,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651830,0)
endfunction
function Uj takes nothing returns boolean
if GetUnitTypeId(GetDyingUnit())!=1747988791 then
return false
endif
return true
endfunction
function Ek takes nothing returns boolean
if GetUnitTypeId(GetSpellTargetUnit())==1747988787 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747990361 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747989831 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747989040 then
return true
endif
return false
endfunction
function Zk takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988793 then
return false
endif
if not Ek() then
return false
endif
return true
endfunction
function Uk takes nothing returns boolean
if not Zk() then
return false
endif
return true
endfunction
function Urw takes nothing returns boolean
return true
endfunction
function Uv takes nothing returns nothing
local player hv=GetOwningPlayer(GetKillingUnit())
local playerstate Fv=PLAYER_STATE_RESOURCE_LUMBER
local playerstate kv
local playerstate jv
local player xv
local force vv
local location mv
local real Qv
local real Wv
local player Ev
local force Zv
if Fv==PLAYER_STATE_RESOURCE_GOLD then
set kv=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(hv,kv,GetPlayerState(hv,kv)+500)
elseif Fv==PLAYER_STATE_RESOURCE_LUMBER then
set jv=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(hv,jv,GetPlayerState(hv,jv)+500)
endif
call SetPlayerState(hv,Fv,GetPlayerState(hv,Fv)+500)
set xv=GetOwningPlayer(GetKillingUnit())
set vv=CreateForce()
call ForceAddPlayer(vv,xv)
if IsPlayerInForce(GetLocalPlayer(),vv) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_084")
endif
set y=GetUnitLoc(GetDyingUnit())
set Ev=GetOwningPlayer(GetDyingUnit())
set Zv=CreateForce()
call ForceAddPlayer(Zv,Ev)
set mv=y
set Qv=GetLocationX(mv)
set Wv=GetLocationY(mv)
if IsPlayerInForce(GetLocalPlayer(),Zv) then
call PingMinimap(Qv,Wv,2.00)
endif
call RemoveLocation(y)
set hv=null
set Fv=null
set kv=null
set jv=null
set xv=null
set vv=null
set mv=null
set Ev=null
set Zv=null
endfunction
function CA takes nothing returns boolean
if GetResearched()!=1378890052 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890052,true)!=1 then
return false
endif
return true
endfunction
function VA takes nothing returns boolean
if not CA() then
return false
endif
return true
endfunction
function VI takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989815,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989816,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989825,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989814,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989830,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651844,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989833,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989832,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989835,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989836,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651848,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651846,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989828,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989826,0)
endfunction
function CJ takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990352 then
return false
endif
return true
endfunction
function VJ takes nothing returns boolean
if not CJ() then
return false
endif
return true
endfunction
function VW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990097,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989594,0)
endfunction
function d1 takes string e1 returns boolean
local playerunitevent q1
local integer a1
local integer n1
set Cb[Xb]=e1
set Xb=Xb+1
set q1=EVENT_PLAYER_UNIT_ATTACKED
set Cb[Xb]="when calling alloc_Garissons_EventListener_line7 in Garissons, line 7"
set Xb=Xb+1
if tO==0 then
if iO<32768 then
set iO=iO+1
set a1=iO
set SO[a1]=668
else
call l1("Out of memory: Could not create Garissons_EventListener_line7.","when calling error in Garissons, line 7")
set a1=0
endif
else
set tO=tO-1
set a1=sO[tO]
set SO[a1]=668
endif
set Xb=Xb-1
set ub[a1]=0
set rb[a1]=0
set sb[a1]=0
set Cb[Xb]="when calling add in Garissons, line 7"
set Xb=Xb+1
set Cb[Xb]="when calling toIntId in ClosureEvents, line 112"
set Xb=Xb+1
set n1=vS[GetHandleId(q1)]
if n1==0 then
set n1=nV(q1,"when calling registerEventId in ClosureEvents, line 229")
endif
set Xb=Xb-1
set ub[a1]=n1
if ES[ub[a1]]!=0 then
set sb[ES[ub[a1]]]=a1
set rb[a1]=ES[ub[a1]]
endif
set ES[ub[a1]]=a1
set Xb=Xb-1-1
set q1=null
return true
endfunction
function VYw takes nothing returns boolean
set Xb=0
return d1("Garissons, line 1")
endfunction
function Cm takes nothing returns boolean
if GetResearched()!=1378889798 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889798,true)!=2 then
return false
endif
return true
endfunction
function Vm takes nothing returns boolean
if not Cm() then
return false
endif
return true
endfunction
function W9 takes nothing returns boolean
return true
endfunction
function QA takes nothing returns boolean
if GetResearched()!=1378890054 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890054,true)!=1 then
return false
endif
return true
endfunction
function WA takes nothing returns boolean
if not QA() then
return false
endif
return true
endfunction
function QJ takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990356 then
return false
endif
return true
endfunction
function WJ takes nothing returns boolean
if not QJ() then
return false
endif
return true
endfunction
function WT takes nothing returns nothing
call ReplaceUnitBJ(GetEnumUnit(),1747988553,bj_UNIT_STATE_METHOD_RELATIVE)
endfunction
function Qm takes nothing returns boolean
if GetResearched()!=1378889796 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889796,true)!=2 then
return false
endif
return true
endfunction
function Wm takes nothing returns boolean
if not Qm() then
return false
endif
return true
endfunction
function Www takes nothing returns boolean
set Po=CreateTrigger()
set Ao=CreateTrigger()
call TriggerAddCondition(Cc,Filter(Lf))
call TriggerAddAction(Cc,Xf)
return true
endfunction
function Wx takes nothing returns nothing
local player Yx=GetOwningPlayer(GetSpellTargetUnit())
local playerstate Gx=PLAYER_STATE_RESOURCE_LUMBER
local playerstate gx
local playerstate hx
local player Fx
local force kx
local location jx
local real xx
local real vx
local player mx
local force Qx
if Gx==PLAYER_STATE_RESOURCE_GOLD then
set gx=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(Yx,gx,GetPlayerState(Yx,gx)+500)
elseif Gx==PLAYER_STATE_RESOURCE_LUMBER then
set hx=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(Yx,hx,GetPlayerState(Yx,hx)+500)
endif
call SetPlayerState(Yx,Gx,GetPlayerState(Yx,Gx)+500)
call RemoveUnit(GetSpellAbilityUnit())
set Fx=GetOwningPlayer(GetSpellTargetUnit())
set kx=CreateForce()
call ForceAddPlayer(kx,Fx)
if IsPlayerInForce(GetLocalPlayer(),kx) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_1232")
endif
set y=GetUnitLoc(GetSpellTargetUnit())
set mx=GetOwningPlayer(GetSpellTargetUnit())
set Qx=CreateForce()
call ForceAddPlayer(Qx,mx)
set jx=y
set xx=GetLocationX(jx)
set vx=GetLocationY(jx)
if IsPlayerInForce(GetLocalPlayer(),Qx) then
call PingMinimap(xx,vx,2.00)
endif
call RemoveLocation(y)
set Yx=null
set Gx=null
set gx=null
set hx=null
set Fx=null
set kx=null
set jx=null
set mx=null
set Qx=null
endfunction
function LD takes nothing returns boolean
if GetUnitTypeId(GetConstructedStructure())==1747989040 then
return true
endif
if GetUnitTypeId(GetConstructedStructure())==1747990361 then
return true
endif
if GetUnitTypeId(GetConstructedStructure())==1747989831 then
return true
endif
return false
endfunction
function XD takes nothing returns boolean
if e[GetPlayerId(GetOwningPlayer(GetConstructedStructure()))+1]!=false then
return false
endif
if not LD() then
return false
endif
return true
endfunction
function XE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989557,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989559,0)
endfunction
function LK takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989060 then
return false
endif
return true
endfunction
function XK takes nothing returns boolean
if not LK() then
return false
endif
return true
endfunction
function LQ takes nothing returns boolean
if GetResearched()!=1378889801 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889801,true)!=1 then
return false
endif
return true
endfunction
function XQ takes nothing returns boolean
if not LQ() then
return false
endif
return true
endfunction
function U3 takes string x3 returns boolean
local integer v3
local integer m3
local integer Q3
local timer W3
local integer E3
local timer Z3
set Cb[Xb]=x3
set Xb=Xb+1
set v3=0
set m3=23
loop
exitwhen v3>m3
set rc[v3]=0
set v3=v3+1
endloop
set Cb[Xb]="when calling alloc_Economy_CallbackPeriodic_line47 in Economy, line 47"
set Xb=Xb+1
if GO==0 then
if gO<32768 then
set gO=gO+1
set Q3=gO
set hO[Q3]=635
else
call l1("Out of memory: Could not create Economy_CallbackPeriodic_line47.","when calling error in Economy, line 47")
set Q3=0
endif
else
set GO=GO-1
set Q3=YO[GO]
set hO[Q3]=635
endif
set Xb=Xb-1
set Cb[Xb]="when calling doPeriodically in Economy, line 47"
set Xb=Xb+1
set W3=Xww("when calling getTimer in ClosureTimers, line 57")
set Cb[Xb]="when calling doPeriodically in ClosureTimers, line 57"
set Xb=Xb+1
call Bnw(Q3,W3,0.333333343,"when calling start in ClosureTimers, line 45")
set Xb=Xb-1-1
set Cb[Xb]="when calling alloc_Economy_CallbackPeriodic_line54 in Economy, line 54"
set Xb=Xb+1
if GO==0 then
if gO<32768 then
set gO=gO+1
set E3=gO
set hO[E3]=636
else
call l1("Out of memory: Could not create Economy_CallbackPeriodic_line54.","when calling error in Economy, line 54")
set E3=0
endif
else
set GO=GO-1
set E3=YO[GO]
set hO[E3]=636
endif
set Xb=Xb-1
set Cb[Xb]="when calling doPeriodically in Economy, line 54"
set Xb=Xb+1
set Z3=Xww("when calling getTimer in ClosureTimers, line 57")
set Cb[Xb]="when calling doPeriodically in ClosureTimers, line 57"
set Xb=Xb+1
call Bnw(E3,Z3,10.0,"when calling start in ClosureTimers, line 45")
set Xb=Xb-1-1-1
set W3=null
set Z3=null
return true
endfunction
function XYw takes nothing returns boolean
set Xb=0
return U3("Economy, line 1")
endfunction
function Y1 takes nothing returns boolean
set dc=InitHashtable()
return true
endfunction
function TF takes nothing returns boolean
local unitstate RF=UNIT_STATE_MANA
if GetUnitState(GetEnumUnit(),RF)>0.00 then
set RF=null
return false
endif
set RF=null
return true
endfunction
function YF takes nothing returns nothing
if TF() then
call KillUnit(GetEnumUnit())
endif
endfunction
function Buw takes string Huw returns nothing
local unit Juw
local integer Kuw
local player Luw
local integer Xuw
local integer Cuw
local boolean Vuw
set Cb[Xb]=Huw
set Xb=Xb+1
set Juw=GetEnteringUnit()
set Kuw=GetPlayerId(GetOwningPlayer(Juw))
set Luw=wo[Kuw]
if GetPlayerSlotState(Luw)==PLAYER_SLOT_STATE_PLAYING then
set Vuw=GetPlayerController(Luw)==MAP_CONTROL_USER
else
set Vuw=false
endif
if Vuw and(not IsUnitType(Juw,UNIT_TYPE_STRUCTURE)) then
set Xuw=Mc[Kuw]
set Cuw=-GetUnitLevel(Juw)
set Cb[Xb]="when calling changeUpkeep in Upkeep, line 25"
set Xb=Xb+1
if yl[Xuw]==0 then
if Xuw==0 then
call l1("Nullpointer exception when calling PlayerStats.changeUpkeep","when calling error in PlayerStats, line 51")
else
call l1("Called PlayerStats.changeUpkeep on invalid object.","when calling error in PlayerStats, line 51")
endif
endif
set Hb[Xuw]=Hb[Xuw]+Cuw
set Xb=Xb-1
endif
set Xb=Xb-1
set Juw=null
set Luw=null
endfunction
function YGw takes nothing returns nothing
set Xb=0
call Buw("Upkeep, line 21")
endfunction
function TL takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990085 then
return false
endif
return true
endfunction
function YL takes nothing returns boolean
if not TL() then
return false
endif
return true
endfunction
function YP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990323,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990106,0)
endfunction
function TU takes nothing returns boolean
if GetResearched()!=1378890037 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890037,true)!=2 then
return false
endif
return true
endfunction
function YU takes nothing returns boolean
if not TU() then
return false
endif
return true
endfunction
function TW takes nothing returns boolean
if GetResearched()!=1378889803 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889803,true)!=1 then
return false
endif
return true
endfunction
function YW takes nothing returns boolean
if not TW() then
return false
endif
return true
endfunction
function YY takes nothing returns nothing
local player nY=GetOwningPlayer(GetAttacker())
local player dY=GetOwningPlayer(GetAttacker())
local player fY
local player RY
local unit TY
set r[GetPlayerId(nY)+1]=r[GetPlayerId(dY)+1]+1
set fY=GetOwningPlayer(GetTriggerUnit())
set RY=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(fY)+1]=r[GetPlayerId(RY)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set TY=GetTriggerUnit()
call SetUnitState(TY,UNIT_STATE_LIFE,GetUnitState(TY,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set nY=null
set dY=null
set fY=null
set RY=null
set TY=null
endfunction
function YYw takes nothing returns boolean
set Xb=0
set Cb[Xb]="TimerUtils, line 1"
set Xb=Xb+1
set Uo=saw("when calling new_Table in TimerUtils, line 12")
call CreateTimer()
call CreateTrigger()
set Xb=Xb-1
return true
endfunction
function YZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989573,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989572,0)
endfunction
function Yww takes nothing returns boolean
set ao[0]="Terrible! Terrible news, my lord!"
set ao[1]="The messenger came to us with horrific news! May we execute him?"
set ao[2]="A mere nightmare, Your Mightiness!"
set no[0]="Holy Mother of God, we have horrific news!"
set no[1]="Lord Preserve us, Great Prince!"
set no[2]="Great Prince, we have horrific news!"
set do[0]="Allah be merciful! I bring terrible news"
set do[1]="Oh, Great Sultan! We have terrible news"
set do[2]="Oh, Great one! I bring ill news"
set fo[0]="Saints save us, we have some most horrific news!"
set fo[1]="My Basileus! We have horrific news!"
set fo[2]="My Basileus, by the grace of our lord. We have horrific news!"
set Ro[0]="My King, we have received news concerning our realm"
set Ro[1]="The messenger arrived with news. No matter, could I execute him?"
set Ro[2]="My liege I bring news about the realm"
set To[0]="Great Prince, a messenger came with news"
set To[1]="May the God bless you, Great Prince, we have some news"
set To[2]="There is something you should know, Great Prince"
set Yo[0]="My Sultan! We have news"
set Yo[1]="Praise be to Allah, Sultan! We bring news"
set Yo[2]="Great Sultan! We have some news"
set Go[0]="My Basileus, we have some news"
set Go[1]="My Basileus, we have some news"
set Go[2]="My Basileus, we have some news"
set go[0]="Milord! Good news!"
set go[1]="Praise the Holy Lord! We have good news"
set go[2]="My King, we bring great news for you!"
set ho[0]="By the grace of our Lord, we bring good news!"
set ho[1]="We received great news my Lord! Still the Messenger deserves to be pusnished"
set ho[2]="My Lord, we have received delightful news!"
set Fo[0]="Praise be to Allah, Sultan! We have great news"
set Fo[1]="Good tidings Sultan! I bring good news"
set Fo[2]="Allah is glorious, Sultan! We have great news"
set ko[0]="Good news, my Basileus!"
set ko[1]="Praise the Holy Lord, we bring great news, my Basileus!"
set ko[2]="We received good news my Basileus! We shouldn’t blind this messenger"
set jo[0]="Your Majesty, important news!"
set jo[1]="May the God bless you, my lord. There is something you must know!"
set jo[2]="There is something that needs your attention, my lord!"
set xo[0]="By the Saints! Great Prince, you must hear to this"
set xo[1]="You should hear this, Great Prince!"
set xo[2]="You need to see this, Great Prince!"
set vo[0]="Great one, urgent news must be brought to your attention!"
set vo[1]="My Sultan, there is something you need to know!"
set vo[2]="My Great Sultan, there is something you must know!"
set mo[0]="My Basileus, there is something you need to know!"
set mo[1]="My Basileus, we can not delay this news!"
set mo[2]="My Basileus, you should be aware of this!"
set Qo[0]="|cffffd900Med."
set Qo[1]="|cff00ff00Low"
set Qo[2]="|cffff0000High"
set Qo[3]="|cff940000Harsh"
return true
endfunction
function EH takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())==1747988530 then
return true
endif
if GetUnitTypeId(GetTriggerUnit())==1747990327 then
return true
endif
if GetUnitTypeId(GetTriggerUnit())==1747989591 then
return true
endif
if GetUnitTypeId(GetTriggerUnit())==1747990085 then
return true
endif
return false
endfunction
function ZH takes nothing returns boolean
if not EH() then
return false
endif
return true
endfunction
function ZI takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651844,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651845,0)
endfunction
function EP takes nothing returns boolean
if GetResearched()!=1378890049 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890049,true)!=2 then
return false
endif
return true
endfunction
function ZP takes nothing returns boolean
if not EP() then
return false
endif
return true
endfunction
function EZ takes nothing returns boolean
if GetResearched()!=1378889808 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889808,true)!=1 then
return false
endif
return true
endfunction
function ZZ takes nothing returns boolean
if not EZ() then
return false
endif
return true
endfunction
function a3 takes nothing returns boolean
return true
endfunction
function qE takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function aE takes nothing returns boolean
if not qE() then
return false
endif
return true
endfunction
function q3 takes string c3 returns boolean
local integer o3
local integer O3
local boolean l3
local integer b3
local boolean y3
local boolean p3
local boolean e3
set Cb[Xb]=c3
set Xb=Xb+1
if GetOwningPlayer(GetSpellAbilityUnit())==GetOwningPlayer(GetSpellTargetUnit()) then
set p3=true
else
set O3=Mc[GetPlayerId(GetOwningPlayer(GetSpellAbilityUnit()))]
set Cb[Xb]="when calling isObserver in Diplomacy, line 107"
set Xb=Xb+1
if yl[O3]==0 then
if O3==0 then
call l1("Nullpointer exception when calling PlayerStats.isObserver","when calling error in PlayerStats, line 29")
else
call l1("Called PlayerStats.isObserver on invalid object.","when calling error in PlayerStats, line 29")
endif
endif
set l3=Jb[O3]
set Xb=Xb-1
set p3=l3
endif
if p3 then
set e3=true
else
set b3=Mc[GetPlayerId(GetOwningPlayer(GetSpellTargetUnit()))]
set Cb[Xb]="when calling isObserver in Diplomacy, line 108"
set Xb=Xb+1
if yl[b3]==0 then
if b3==0 then
call l1("Nullpointer exception when calling PlayerStats.isObserver","when calling error in PlayerStats, line 29")
else
call l1("Called PlayerStats.isObserver on invalid object.","when calling error in PlayerStats, line 29")
endif
endif
set y3=Jb[b3]
set Xb=Xb-1
set e3=y3
endif
if e3 then
set Xb=Xb-1
return false
endif
set o3=GetSpellAbilityId()
set Xb=Xb-1
return o3==1093677396 or o3==1093677397 or o3==1093677398 or o3==1093677400 or o3==1093677399
endfunction
function aGw takes nothing returns boolean
set Xb=0
return q3("Diplomacy, line 118")
endfunction
function aH takes nothing returns nothing
local integer OH=1
local integer lH=1751277938
local player bH=GetOwningPlayer(GetConstructedStructure())
local rect qH=bj_mapInitialPlayableArea
local location eH=Location(GetRectCenterX(qH),GetRectCenterY(qH))
local location yH=Location(GetLocationX(eH)+100000000.00,GetLocationY(eH)+1000000000.00)
local real pH=bj_UNIT_FACING
call GroupClear(bj_lastCreatedGroup)
loop
set OH=OH-1
exitwhen OH<0
call CreateUnitAtLocSaveLast(bH,lH,yH,pH)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
call ShowUnit(bj_lastCreatedUnit,false)
set p[GetPlayerId(GetOwningPlayer(GetConstructedStructure()))+1]=true
set bH=null
set yH=null
set eH=null
set qH=null
endfunction
function aL takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function aU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651846,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651847,0)
endfunction
function aW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989080,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988818,0)
endfunction
function aX takes nothing returns boolean
return true
endfunction
function qY takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989042 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function aY takes nothing returns boolean
if not qY() then
return false
endif
return true
endfunction
function www takes string Nww_2 returns boolean
local integer Mww
set Cb[Xb]=Nww_2
set Xb=Xb+1
set Io=saw("when calling new_Table in TypeCasting, line 6")
set Cb[Xb]="when calling initTypecastData in TypeCasting, line 14"
set Xb=Xb+1
set Mww=Io
set Cb[Xb]="when calling saveString in TypeCasting, line 11"
set Xb=Xb+1
if AO[Mww]==0 then
if Mww==0 then
call l1("Nullpointer exception when calling Table.saveString","when calling error in Table, line 60")
else
call l1("Called Table.saveString on invalid object.","when calling error in Table, line 60")
endif
endif
call SaveStr(Wo,Mww,0,"")
set Xb=Xb-1-1-1
return true
endfunction
function aYw takes nothing returns boolean
set Xb=0
return www("TypeCasting, line 1")
endfunction
function b1 takes nothing returns boolean
set ic=CreateForce()
set Sc=CreateForce()
set cc=CreateForce()
set oc=CreateForce()
set Oc[0]=ic
set Oc[1]=Sc
set Oc[2]=cc
set Oc[3]=oc
set lc[0]=62
set bc[0]=194
set yc[0]=255
set lc[1]=255
set bc[1]=238
set yc[1]=0
set lc[2]=0
set bc[2]=201
set yc[2]=10
set lc[3]=219
set bc[3]=0
set yc[3]=201
return true
endfunction
function bD takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990598,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990597,0)
endfunction
function iG takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988824 then
return false
endif
return true
endfunction
function SG takes nothing returns boolean
if not iG() then
return false
endif
return true
endfunction
function OG takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989079 then
return false
endif
return true
endfunction
function lG takes nothing returns boolean
if not OG() then
return false
endif
return true
endfunction
function cG takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988826 then
return false
endif
return true
endfunction
function oG takes nothing returns boolean
if not cG() then
return false
endif
return true
endfunction
function sG takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988825 then
return false
endif
return true
endfunction
function tG takes nothing returns boolean
if not sG() then
return false
endif
return true
endfunction
function bG takes nothing returns nothing
if tG() then
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747989047,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"Death Alternate")
endif
if SG() then
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747989046,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"Death Alternate")
endif
if oG() then
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747989077,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"Death Alternate")
endif
if lG() then
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747989078,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"Death Alternate")
endif
endfunction
function Bcw takes integer Ccw,string Vcw returns nothing
set Cb[Xb]=Vcw
set Xb=Xb+1
if cb[Ccw]!=null then
if Ldw(WS,GetHandleId(cb[Ccw]),"when calling get in ClosureEvents, line 60")==Ccw then
call Adw(WS,GetHandleId(cb[Ccw]),tb[Ccw],"when calling put in ClosureEvents, line 62")
elseif ib[Ccw]!=0 then
set tb[ib[Ccw]]=tb[Ccw]
endif
elseif Ldw(QS,Sb[Ccw],"when calling get in ClosureEvents, line 66")==Ccw then
call Adw(QS,Sb[Ccw],tb[Ccw],"when calling put in ClosureEvents, line 68")
elseif ib[Ccw]!=0 then
set tb[ib[Ccw]]=tb[Ccw]
endif
set ib[tb[Ccw]]=ib[Ccw]
set tb[Ccw]=0
set ib[Ccw]=0
set Xb=Xb-1
endfunction
function knw takes integer hnw,string Fnw returns nothing
set Cb[Xb]=Fnw
set Xb=Xb+1
if kO[hnw]==0 then
if hnw==0 then
call l1("Nullpointer exception when calling OnCastListener.OnCastListener","when calling error in ClosureEvents, line 50")
else
call l1("Called OnCastListener.OnCastListener on invalid object.","when calling error in ClosureEvents, line 50")
endif
endif
set Cb[Xb]="when calling destroyOnCastListener in ClosureEvents, line 50"
set Xb=Xb+1
call Bcw(hnw,"when calling OnCastListener_onDestroy in ClosureEvents, line 58")
set Cb[Xb]="when calling dealloc_OnCastListener in ClosureEvents, line 58"
set Xb=Xb+1
if kO[hnw]==0 then
call l1("Double free: object of type OnCastListener","when calling error in ClosureEvents, line 50")
else
set FO=FO+1
set kO[hnw]=0
endif
set Xb=Xb-1-1-1
endfunction
function Xcw takes integer Jcw,string Kcw returns nothing
local integer Lcw
set Cb[Xb]=Kcw
set Xb=Xb+1
set Lcw=ES[ub[Jcw]]
if Lcw==Jcw then
set ES[ub[Jcw]]=rb[Jcw]
elseif sb[Jcw]!=0 then
set rb[sb[Jcw]]=rb[Jcw]
endif
set sb[rb[Jcw]]=sb[Jcw]
set Lcw=ZS[ub[Jcw]]
if Lcw==Jcw then
set ZS[ub[Jcw]]=rb[Jcw]
elseif sb[Jcw]!=0 then
set rb[sb[Jcw]]=rb[Jcw]
endif
set sb[rb[Jcw]]=sb[Jcw]
set rb[Jcw]=0
set sb[Jcw]=0
set Cb[Xb]="when calling dealloc_EventListener in ClosureEvents, line 202"
set Xb=Xb+1
if SO[Jcw]==0 then
call l1("Double free: object of type EventListener","when calling error in ClosureEvents, line 98")
else
set sO[tO]=Jcw
set tO=tO+1
set SO[Jcw]=0
endif
set Xb=Xb-1-1
endfunction
function xV takes integer hV,string FV returns nothing
local integer kV
local integer jV
set Cb[Xb]=FV
set Xb=Xb+1
if hV>0 then
if ZS[hV]!=0 then
set kV=ZS[hV]
set ZS[hV]=0
loop
exitwhen kV==0
set jV=kV
set kV=rb[kV]
set Cb[Xb]="when calling dispatch_EventListener_destroyEventListener in ClosureEvents, line 282"
set Xb=Xb+1
if SO[jV]==0 then
if jV==0 then
call l1("Nullpointer exception when calling EventListener.EventListener","when calling error in ClosureEvents, line 98")
else
call l1("Called EventListener.EventListener on invalid object.","when calling error in ClosureEvents, line 98")
endif
endif
call Xcw(jV,"when calling destroyEventListener in ClosureEvents, line 98")
set Xb=Xb-1
endloop
endif
endif
set Xb=Xb-1
endfunction
function gV takes unit dV,string fV returns nothing
local integer RV
local integer TV
local integer YV
local integer GV
set Cb[Xb]=fV
set Xb=Xb+1
call xV(GetUnitUserData(dV),"when calling unregisterEvents in ClosureEvents, line 258")
if Edw(WS,GetHandleId(dV),"when calling has in ClosureEvents, line 259") then
set RV=Ldw(WS,GetHandleId(dV),"when calling get in ClosureEvents, line 260")
call Bdw(WS,GetHandleId(dV),"when calling remove in ClosureEvents, line 261")
loop
exitwhen RV==0
set TV=RV
set RV=tb[RV]
call knw(TV,"when calling dispatch_OnCastListener_destroyOnCastListener in ClosureEvents, line 265")
endloop
endif
if Edw(WS,GetHandleId(dV),"when calling has in ClosureEvents, line 266") then
set YV=Ldw(WS,GetHandleId(dV),"when calling get in ClosureEvents, line 267")
loop
exitwhen YV==0
set GV=YV
set YV=tb[YV]
call knw(GV,"when calling dispatch_OnCastListener_destroyOnCastListener in ClosureEvents, line 271")
endloop
endif
set Xb=Xb-1
endfunction
function bGw takes nothing returns nothing
set Xb=0
set Cb[Xb]="ClosureEvents, line 288"
set Xb=Xb+1
call gV(Do[Ho-1],"when calling unregisterEventsForUnit in ClosureEvents, line 288")
set Xb=Xb-1
endfunction
function bK takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function bQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651826,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651824,0)
endfunction
function cF takes nothing returns nothing
local location Nh
local location Mh
local real wF
local real uF
local rect rF
local group sF
local group tF
local code iF
local boolean SF
set u=GetUnitLoc(GetSpellAbilityUnit())
set Nh=u
set S=Location(GetLocationX(Nh)+0.00,GetLocationY(Nh)+200.00)
set Mh=u
set wF=GetLocationX(Mh)
set uF=GetLocationY(Mh)
set o=Rect(wF-140,uF-150,wF+140,uF+150)
set rF=o
set sF=CreateGroup()
call GroupEnumUnitsInRect(sF,rF,null)
call DestroyBoolExpr(null)
set l=sF
set tF=l
set iF=lp
set SF=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(tF,iF)
if SF then
call DestroyGroup(tF)
endif
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747990072,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"stand")
call DestroyGroup(l)
call RemoveLocation(S)
call RemoveLocation(u)
set Nh=null
set Mh=null
set rF=null
set sF=null
set tF=null
endfunction
function waw takes string Xqw,string Cqw,integer Vqw,integer Bqw,integer Nqw,string Mqw returns integer
set Cb[Xb]=Mqw
set Xb=Xb+1
set Cb[Xb]="when calling alloc_ReligionClass in Religion, line 15"
set Xb=Xb+1
if el==0 then
if ql<32768 then
set ql=ql+1
set Vqw=ql
else
call l1("Out of memory: Could not create ReligionClass.","when calling error in Religion, line 10")
set Vqw=0
endif
else
set el=el-1
set Vqw=pl[el]
endif
set Xb=Xb-1-1
return Vqw
endfunction
function cGw takes nothing returns boolean
set Xb=0
set Cb[Xb]="Religion, line 1"
set Xb=Xb+1
call waw("Catholicism","Catholic",244,255,96,"when calling new_ReligionClass in Religion, line 29")
call waw("Orthodoxy","Orthodox",234,0,255,"when calling new_ReligionClass in Religion, line 35")
call waw("Islam","Muslim",0,151,0,"when calling new_ReligionClass in Religion, line 41")
call waw("Orthodoxy","Orthodox",234,0,255,"when calling new_ReligionClass in Religion, line 47")
set Xb=Xb-1
return true
endfunction
function cI takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989833,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989834,0)
endfunction
function SP takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function cP takes nothing returns boolean
if not SP() then
return false
endif
return true
endfunction
function SZ takes nothing returns boolean
if GetResearched()!=1378889809 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889809,true)!=2 then
return false
endif
return true
endfunction
function cZ takes nothing returns boolean
if not SZ() then
return false
endif
return true
endfunction
function cg takes nothing returns nothing
local location NG
local location MG
local real wg
local real ug
local rect rg
local group sg
local group tg
local code ig
local boolean Sg
set u=GetUnitLoc(GetSpellAbilityUnit())
set NG=u
set c=Location(GetLocationX(NG)+200.00,GetLocationY(NG)+0.00)
set MG=u
set wg=GetLocationX(MG)
set ug=GetLocationY(MG)
set O=Rect(wg-150,ug-140,wg+150,ug+140)
set rg=O
set sg=CreateGroup()
call GroupEnumUnitsInRect(sg,rg,null)
call DestroyBoolExpr(null)
set l=sg
set tg=l
set ig=Ky
set Sg=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(tg,ig)
if Sg then
call DestroyGroup(tg)
endif
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747990092,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"stand")
call DestroyGroup(l)
call RemoveLocation(c)
call RemoveLocation(u)
set NG=null
set MG=null
set rg=null
set sg=null
set tg=null
endfunction
function ch takes nothing returns nothing
local location Ng
local location Mg
local real wh
local real uh
local rect rh
local group sh
local group th
local code ih
local boolean Sh
set u=GetUnitLoc(GetSpellAbilityUnit())
set Ng=u
set c=Location(GetLocationX(Ng)+200.00,GetLocationY(Ng)+0.00)
set Mg=u
set wh=GetLocationX(Mg)
set uh=GetLocationY(Mg)
set O=Rect(wh-150,uh-140,wh+150,uh+140)
set rh=O
set sh=CreateGroup()
call GroupEnumUnitsInRect(sh,rh,null)
call DestroyBoolExpr(null)
set l=sh
set th=l
set ih=up
set Sh=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(th,ih)
if Sh then
call DestroyGroup(th)
endif
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747988826,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"stand")
call DestroyGroup(l)
call RemoveLocation(c)
call RemoveLocation(u)
set Ng=null
set Mg=null
set rh=null
set sh=null
set th=null
endfunction
function cv takes nothing returns boolean
if GetUnitTypeId(GetDyingUnit())!=1747989049 then
return false
endif
return true
endfunction
function e9 takes unit p9 returns nothing
call UnitAddAbility(p9,1095577649)
call UnitMakeAbilityPermanent(p9,true,1095577649)
set Bc[Nc]=p9
set Nc=Nc+1
call TriggerEvaluate(Cc)
set Nc=Nc-1
endfunction
function d9 takes nothing returns nothing
call e9(GetEnumUnit())
endfunction
function dD takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651850,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651849,0)
endfunction
function dF takes nothing returns nothing
local group qF
local code aF
local boolean nF
set w=GetUnitsOfTypeIdAll(1747988790)
set qF=w
set aF=pp
set nF=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(qF,aF)
if nF then
call DestroyGroup(qF)
endif
call DestroyGroup(w)
set qF=null
endfunction
function M4 takes string Q4 returns nothing
local fogmodifier array W4
local integer E4
local integer Z4
local integer U4
local integer I4
local integer P4
local player A4
local fogstate D4
local location H4
local rect J4
local force K4
local integer L4
local integer X4
local integer C4
local integer V4
local string B4
local force N4
set Cb[Xb]=Q4
set Xb=Xb+1
if gc then
set Xb=Xb-1
set A4=null
set D4=null
set H4=null
set J4=null
set K4=null
set N4=null
return
endif
set E4=0
set Z4=23
loop
exitwhen E4>Z4
set A4=wo[E4]
set D4=FOG_OF_WAR_VISIBLE
set J4=bj_mapInitialPlayableArea
set H4=Location(GetRectCenterX(J4),GetRectCenterY(J4))
set bj_lastCreatedFogModifier=CreateFogModifierRadiusLoc(A4,D4,H4,999999.00,true,false)
call FogModifierStart(bj_lastCreatedFogModifier)
set W4[E4]=bj_lastCreatedFogModifier
call FogModifierStart(W4[E4])
set E4=E4+1
endloop
set K4=bj_FORCE_ALL_PLAYERS
if IsPlayerInForce(GetLocalPlayer(),K4) then
call ShowInterface(false,0.50)
endif
set L4=Tc
set Cb[Xb]="when calling iterator in MainInit, line 89"
set Xb=Xb+1
set X4=kbw(L4,"when calling new_LLIterator in LinkedList, line 165")
set Xb=Xb-1
set U4=X4
loop
exitwhen Yb[gb[U4]]==Gb[U4]
set gb[U4]=Yb[gb[U4]]
set C4=Rb[gb[U4]]
set Q4="when calling stringFromIndex in MainInit, line 89"
set Cb[Xb]="when calling stringFromIndex in MainInit, line 89"
set Xb=Xb+1
set V4=Io
set Cb[Xb]="when calling loadString in TypeCasting, line 35"
set Xb=Xb+1
if AO[V4]==0 then
if V4==0 then
call l1("Nullpointer exception when calling Table.loadString","when calling error in Table, line 57")
else
call l1("Called Table.loadString on invalid object.","when calling error in Table, line 57")
endif
endif
set B4=LoadStr(Wo,V4,C4)
set Xb=Xb-1-1
if not Yc then
set N4=bj_FORCE_ALL_PLAYERS
if IsPlayerInForce(GetLocalPlayer(),N4) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,10.0,B4)
endif
call TriggerSleepAction(12.5)
endif
endloop
set Cb[Xb]="when calling close in MainInit, line 89"
set Xb=Xb+1
if Fb[U4]then
call Sfw(U4,"when calling dispatch_LLIterator_destroyLLIterator in LinkedList, line 450")
endif
set Xb=Xb-1
call CinematicModeExBJ(false,bj_FORCE_ALL_PLAYERS,bj_CINEMODE_INTERFACEFADE)
set I4=0
set P4=23
loop
exitwhen I4>P4
call FogModifierStop(W4[I4])
set I4=I4+1
endloop
set Yc=true
set Xb=Xb-1
set A4=null
set D4=null
set H4=null
set J4=null
set K4=null
set N4=null
endfunction
function dGw takes nothing returns nothing
set Xb=0
call M4("MainInit, line 138")
endfunction
function dK takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function dQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989065,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989296,0)
endfunction
function pF takes nothing returns boolean
local unitstate yF=UNIT_STATE_MANA
if GetUnitState(GetEnumUnit(),yF)>0.00 then
set yF=null
return false
endif
set yF=null
return true
endfunction
function eF takes nothing returns nothing
if pF() then
call KillUnit(GetEnumUnit())
endif
endfunction
function M9 takes integer N9 returns real
if N9==1747988785 then
return 10.0
elseif N9==1747989075 then
return 10.0
elseif N9==1747990102 then
return 10.0
elseif N9==1747989839 then
return 10.0
elseif N9==1747988568 then
return 5.0
elseif N9==1747990341 then
return 5.0
elseif N9==1747988789 then
return 15.0
elseif N9==1747990103 then
return 15.0
elseif N9==1747990064 then
return 15.0
elseif N9==1747989846 then
return 15.0
else
return 0.0
endif
endfunction
function HSw takes integer PSw,unit ASw returns nothing
local boolean DSw
if IsUnitType(ASw,UNIT_TYPE_STRUCTURE) then
set DSw=GetOwningPlayer(ASw)==wo[Wl[Cl[PSw]]]
else
set DSw=false
endif
if DSw then
set Al[Cl[PSw]]=Al[Cl[PSw]]+M9(GetUnitTypeId(ASw))
endif
endfunction
function ISw takes integer vSw,unit mSw,string QSw returns nothing
local integer WSw
local integer ESw
local boolean ZSw
local boolean USw
set Cb[Xb]=QSw
set Xb=Xb+1
set WSw=Xo
set ESw=GetUnitTypeId(mSw)
set Cb[Xb]="when calling has in City, line 314"
set Xb=Xb+1
if Sl[WSw]==0 then
if WSw==0 then
call l1("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call l1("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set ZSw=Ubw(WSw,ESw)
set Xb=Xb-1
if not ZSw then
set USw=GetOwningPlayer(mSw)==wo[Wl[Xl[vSw]]]
else
set USw=false
endif
if USw then
set Al[Xl[vSw]]=Al[Xl[vSw]]+0.5
endif
set Xb=Xb-1
endfunction
function kyw takes integer Ryw,unit Tyw,string Yyw returns nothing
local integer Gyw
local integer gyw
local boolean hyw
local boolean Fyw
set Cb[Xb]=Yyw
set Xb=Xb+1
if GetOwningPlayer(Tyw)==xb[Ryw]then
set Gyw=Xo
set gyw=GetUnitTypeId(Tyw)
set Cb[Xb]="when calling has in MassControl, line 28"
set Xb=Xb+1
if Sl[Gyw]==0 then
if Gyw==0 then
call l1("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call l1("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set hyw=Ubw(Gyw,gyw)
set Xb=Xb-1
set Fyw=not hyw
else
set Fyw=false
endif
if Fyw and Tyw!=vb[Ryw] and(not IsUnitType(Tyw,UNIT_TYPE_STRUCTURE)) then
call Zfw(mb[Ryw],GetHandleId(Tyw),"when calling add in MassControl, line 29")
endif
set Xb=Xb-1
endfunction
function Pnw takes integer Znw,unit Unw,string Inw returns nothing
set Cb[Xb]=Inw
set Xb=Xb+1
if nO[Znw]==0 then
if Znw==0 then
call l1("Nullpointer exception when calling ForGroupCallback.callback","when calling error in ClosureForGroups, line 4")
else
call l1("Called ForGroupCallback.callback on invalid object.","when calling error in ClosureForGroups, line 4")
endif
endif
if nO[Znw]<=690 then
if nO[Znw]<=689 then
if nO[Znw]<=688 then
call ISw(Znw,Unw,"when calling City_City_callback_line313 in ClosureForGroups, line 4")
else
call HSw(Znw,Unw)
endif
else
set Cb[Xb]="when calling LinkedList_callback_line514 in ClosureForGroups, line 4"
set Xb=Xb+1
call Zfw(fb[Znw],GetHandleId(Unw),"when calling add in LinkedList, line 515")
set Xb=Xb-1
endif
elseif nO[Znw]<=691 then
call kyw(Znw,Unw,"when calling MassControl_callback_line27 in ClosureForGroups, line 4")
else
call RemoveUnit(Unw)
endif
set Xb=Xb-1
endfunction
function eGw takes nothing returns nothing
local unit pGw
set Xb=0
set Cb[Xb]="ClosureForGroups, line 14"
set Xb=Xb+1
set pGw=GetFilterUnit()
set Cb[Xb]="when calling filterCallback in ClosureForGroups, line 14"
set Xb=Xb+1
if HS<DS then
call Pnw(PS[AS-1],pGw,"when calling callback in ClosureForGroups, line 18")
endif
set HS=HS+1
set Xb=Xb-1-1
set pGw=null
endfunction
function eI takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989832,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989833,0)
endfunction
function pP takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function eP takes nothing returns boolean
if not pP() then
return false
endif
return true
endfunction
function eX takes nothing returns boolean
set tS=wo[PLAYER_NEUTRAL_PASSIVE]
return true
endfunction
function pZ takes nothing returns boolean
if GetResearched()!=1378889811 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889811,true)!=1 then
return false
endif
return true
endfunction
function eZ takes nothing returns boolean
if not pZ() then
return false
endif
return true
endfunction
function pg takes nothing returns boolean
if IsUnitType(GetEnumUnit(),UNIT_TYPE_STRUCTURE)!=false then
return false
endif
return true
endfunction
function eg takes nothing returns nothing
if pg() then
call SetUnitPositionLoc(GetEnumUnit(),S)
endif
endfunction
function ph takes nothing returns boolean
if IsUnitType(GetEnumUnit(),UNIT_TYPE_STRUCTURE)!=false then
return false
endif
return true
endfunction
function eh takes nothing returns nothing
if ph() then
call SetUnitPositionLoc(GetEnumUnit(),c)
endif
endfunction
function ej takes nothing returns nothing
local player sj=GetOwningPlayer(GetKillingUnit())
local playerstate tj=PLAYER_STATE_RESOURCE_LUMBER
local playerstate ij
local playerstate Sj
local player cj
local force oj
local location Oj
local real lj
local real bj
local player yj
local force pj
if tj==PLAYER_STATE_RESOURCE_GOLD then
set ij=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(sj,ij,GetPlayerState(sj,ij)+125)
elseif tj==PLAYER_STATE_RESOURCE_LUMBER then
set Sj=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(sj,Sj,GetPlayerState(sj,Sj)+125)
endif
call SetPlayerState(sj,tj,GetPlayerState(sj,tj)+125)
set cj=GetOwningPlayer(GetKillingUnit())
set oj=CreateForce()
call ForceAddPlayer(oj,cj)
if IsPlayerInForce(GetLocalPlayer(),oj) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_089")
endif
set y=GetUnitLoc(GetDyingUnit())
set yj=GetOwningPlayer(GetDyingUnit())
set pj=CreateForce()
call ForceAddPlayer(pj,yj)
set Oj=y
set lj=GetLocationX(Oj)
set bj=GetLocationY(Oj)
if IsPlayerInForce(GetLocalPlayer(),pj) then
call PingMinimap(lj,bj,2.00)
endif
call RemoveLocation(y)
set sj=null
set tj=null
set ij=null
set Sj=null
set cj=null
set oj=null
set Oj=null
set yj=null
set pj=null
endfunction
function eww takes nothing returns boolean
return true
endfunction
function ex takes nothing returns nothing
local player sx=GetOwningPlayer(GetKillingUnit())
local playerstate tx=PLAYER_STATE_RESOURCE_GOLD
local playerstate ix
local playerstate Sx
local player cx
local force ox
local location Ox
local real lx
local real bx
local player yx
local force px
if tx==PLAYER_STATE_RESOURCE_GOLD then
set ix=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(sx,ix,GetPlayerState(sx,ix)+250)
elseif tx==PLAYER_STATE_RESOURCE_LUMBER then
set Sx=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(sx,Sx,GetPlayerState(sx,Sx)+250)
endif
call SetPlayerState(sx,tx,GetPlayerState(sx,tx)+250)
set cx=GetOwningPlayer(GetKillingUnit())
set ox=CreateForce()
call ForceAddPlayer(ox,cx)
if IsPlayerInForce(GetLocalPlayer(),ox) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_092")
endif
set y=GetUnitLoc(GetDyingUnit())
set yx=GetOwningPlayer(GetDyingUnit())
set px=CreateForce()
call ForceAddPlayer(px,yx)
set Ox=y
set lx=GetLocationX(Ox)
set bx=GetLocationY(Ox)
if IsPlayerInForce(GetLocalPlayer(),px) then
call PingMinimap(lx,bx,2.00)
endif
call RemoveLocation(y)
set sx=null
set tx=null
set ix=null
set Sx=null
set cx=null
set ox=null
set Ox=null
set yx=null
set px=null
endfunction
function f1 takes nothing returns boolean
call CreateGroup()
return true
endfunction
function dA takes nothing returns boolean
if GetResearched()!=1378890040 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890040,true)!=1 then
return false
endif
return true
endfunction
function fA takes nothing returns boolean
if not dA() then
return false
endif
return true
endfunction
function Gww_2 takes integer nww_2,string dww returns trigger
local integer fww
local fogstate Rww
local integer Tww_2
local trigger Yww_2
set Cb[Xb]=dww
set Xb=Xb+1
set fww=Io
set Rww=ConvertFogState(nww_2)
set Cb[Xb]="when calling saveFogState in TypeCasting, line 94"
set Xb=Xb+1
if AO[fww]==0 then
if fww==0 then
call l1("Nullpointer exception when calling Table.saveFogState","when calling error in Table, line 168")
else
call l1("Called Table.saveFogState on invalid object.","when calling error in Table, line 168")
endif
endif
call SaveFogStateHandle(Wo,fww,0,Rww)
set Xb=Xb-1
set Tww_2=Io
set Cb[Xb]="when calling loadTrigger in TypeCasting, line 95"
set Xb=Xb+1
if AO[Tww_2]==0 then
if Tww_2==0 then
call l1("Nullpointer exception when calling Table.loadTrigger","when calling error in Table, line 111")
else
call l1("Called Table.loadTrigger on invalid object.","when calling error in Table, line 111")
endif
endif
set Yww_2=LoadTriggerHandle(Wo,Tww_2,0)
set Xb=Xb-1-1
set lR=Yww_2
set Rww=null
set Yww_2=null
return lR
endfunction
function F0w takes string g0w returns boolean
local boolean h0w
set Cb[Xb]=g0w
set Xb=Xb+1
set h0w=TriggerEvaluate(Gww_2(Ldw(po,GetSpellAbilityId(),"when calling get in RegisterEvents, line 58"),"when calling triggerFromIndex in RegisterEvents, line 58"))
set Xb=Xb-1
return h0w
endfunction
function fGw takes nothing returns boolean
set Xb=0
return F0w("RegisterEvents, line 58")
endfunction
function dJ takes nothing returns boolean
if GetUnitTypeId(GetConstructedStructure())!=1747990353 then
return false
endif
return true
endfunction
function fJ takes nothing returns boolean
if not dJ() then
return false
endif
return true
endfunction
function fYw takes nothing returns boolean
local integer dYw
set Xb=0
set Cb[Xb]="Abilities, line 1"
set Xb=Xb+1
set Cb[Xb]="when calling asList in Abilities, line 17"
set Xb=Xb+1
set dYw=Lbw("when calling new_LinkedList in LinkedList, line 391")
call Zfw(dYw,1093677642,"when calling add in LinkedList, line 393")
call Zfw(dYw,1093677641,"when calling add in LinkedList, line 393")
call Zfw(dYw,1093677640,"when calling add in LinkedList, line 393")
call Zfw(dYw,1093678155,"when calling add in LinkedList, line 393")
set Xb=Xb-1
set sS=dYw
set Xb=Xb-1
return true
endfunction
function fj takes nothing returns boolean
if GetUnitTypeId(GetDyingUnit())!=1747988801 then
return false
endif
return true
endfunction
function dm takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function fm takes nothing returns boolean
if not dm() then
return false
endif
return true
endfunction
function fv takes nothing returns nothing
local player ov=GetOwningPlayer(GetKillingUnit())
local playerstate Ov=PLAYER_STATE_RESOURCE_GOLD
local playerstate lv
local playerstate bv
local player yv
local force pv
local location ev
local real qv
local real av
local player nv
local force dv
if Ov==PLAYER_STATE_RESOURCE_GOLD then
set lv=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(ov,lv,GetPlayerState(ov,lv)+500)
elseif Ov==PLAYER_STATE_RESOURCE_LUMBER then
set bv=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(ov,bv,GetPlayerState(ov,bv)+500)
endif
call SetPlayerState(ov,Ov,GetPlayerState(ov,Ov)+500)
set yv=GetOwningPlayer(GetKillingUnit())
set pv=CreateForce()
call ForceAddPlayer(pv,yv)
if IsPlayerInForce(GetLocalPlayer(),pv) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_083")
endif
set y=GetUnitLoc(GetDyingUnit())
set nv=GetOwningPlayer(GetDyingUnit())
set dv=CreateForce()
call ForceAddPlayer(dv,nv)
set ev=y
set qv=GetLocationX(ev)
set av=GetLocationY(ev)
if IsPlayerInForce(GetLocalPlayer(),dv) then
call PingMinimap(qv,av,2.00)
endif
call RemoveLocation(y)
set ov=null
set Ov=null
set lv=null
set bv=null
set yv=null
set pv=null
set ev=null
set nv=null
set dv=null
endfunction
function g1 takes nothing returns boolean
return true
endfunction
function gD takes nothing returns nothing
set s=bj_FORCE_ALL_PLAYERS
call ForForce(s,Qa)
endfunction
function gE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989570,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989571,0)
endfunction
function YG takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747990072 then
return false
endif
return true
endfunction
function GG takes nothing returns boolean
if not YG() then
return false
endif
return true
endfunction
function RG takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747990081 then
return false
endif
return true
endfunction
function TG takes nothing returns boolean
if not RG() then
return false
endif
return true
endfunction
function dG takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747990090 then
return false
endif
return true
endfunction
function fG takes nothing returns boolean
if not dG() then
return false
endif
return true
endfunction
function aG takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747990092 then
return false
endif
return true
endfunction
function nG takes nothing returns boolean
if not aG() then
return false
endif
return true
endfunction
function gG takes nothing returns nothing
if nG() then
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747990091,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"Death Alternate")
endif
if fG() then
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747990089,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"Death Alternate")
endif
if TG() then
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747990073,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"Death Alternate")
endif
if GG() then
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747990071,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"Death Alternate")
endif
endfunction
function gGw takes nothing returns nothing
set Xb=0
set Cb[Xb]="ClosureEvents, line 292"
set Xb=Xb+1
call AV("when calling generalEventCallback in ClosureEvents, line 292")
set Xb=Xb-1
endfunction
function GK takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989809 then
return false
endif
return true
endfunction
function gK takes nothing returns boolean
if not GK() then
return false
endif
return true
endfunction
function GQ takes nothing returns boolean
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889797,true)!=2 then
return false
endif
return true
endfunction
function gQ takes nothing returns boolean
if not GQ() then
return false
endif
return true
endfunction
function j3 takes real G3,real g3,player h3,real F3 returns unit
local unit k3=CreateUnit(h3,2019849581,G3,g3,F3*57.295779513)
call SetUnitX(k3,G3)
call SetUnitY(k3,g3)
call UnitAddAbility(k3,1097691750)
call UnitRemoveAbility(k3,1097691750)
call UnitAddAbility(k3,1097625443)
set SR=k3
set k3=null
return SR
endfunction
function ydw takes integer Odw,unit ldw,string bdw returns nothing
set Cb[Xb]=bdw
set Xb=Xb+1
if mO[Odw]==0 then
if Odw==0 then
call l1("Nullpointer exception when calling ArrayQueue.enqueue","when calling error in DummyRecycler, line 55")
else
call l1("Called ArrayQueue.enqueue on invalid object.","when calling error in DummyRecycler, line 55")
endif
endif
set Cb[Xb]="when calling enqueue in DummyRecycler, line 55"
set Xb=Xb+1
if bb[Odw]<6 then
set bb[Odw]=bb[Odw]+1
set lb[Odw]=ModuloInteger(lb[Odw]+1,6)
else
call l1("Queue Overflow","when calling error in DummyRecycler, line 61")
endif
set Xb=Xb-1-1
endfunction
function yow takes string low returns integer
local integer bow
set Cb[Xb]=low
set Xb=Xb+1
set Cb[Xb]="when calling alloc_ArrayQueue in DummyRecycler, line 49"
set Xb=Xb+1
if xO==0 then
if vO<32768 then
set vO=vO+1
set bow=vO
set mO[bow]=626
else
call l1("Out of memory: Could not create ArrayQueue.","when calling error in DummyRecycler, line 49")
set bow=0
endif
else
set xO=xO-1
set bow=jO[xO]
set mO[bow]=626
endif
set Xb=Xb-1
set lb[bow]=0
set bb[bow]=0
set Xb=Xb-1
return bow
endfunction
function Y3 takes string n3 returns boolean
local integer d3
local integer f3
local integer R3
local integer T3
set Cb[Xb]=n3
set Xb=Xb+1
set NS=360*1./8
call CreateTimer()
set d3=0
set f3=7
loop
exitwhen d3>f3
set MS[d3]=yow("when calling new_ArrayQueue in DummyRecycler, line 140")
set R3=0
set T3=5
loop
exitwhen R3>T3
call ydw(MS[d3],j3(vc,mc,tS,d3*NS*0.017453293),"when calling enqueue in DummyRecycler, line 142")
set R3=R3+1
endloop
set d3=d3+1
endloop
set Xb=Xb-1
return true
endfunction
function gYw takes nothing returns boolean
set Xb=0
return Y3("DummyRecycler, line 1")
endfunction
function gg takes nothing returns nothing
local location qg
local location ag
local real ng
local real dg
local rect fg
local group Rg
local group Tg
local code Yg
local boolean Gg
set u=GetUnitLoc(GetSpellAbilityUnit())
set qg=u
set S=Location(GetLocationX(qg)+0.00,GetLocationY(qg)+200.00)
set ag=u
set ng=GetLocationX(ag)
set dg=GetLocationY(ag)
set o=Rect(ng-140,dg-150,ng+140,dg+150)
set fg=o
set Rg=CreateGroup()
call GroupEnumUnitsInRect(Rg,fg,null)
call DestroyBoolExpr(null)
set l=Rg
set Tg=l
set Yg=Cy
set Gg=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(Tg,Yg)
if Gg then
call DestroyGroup(Tg)
endif
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747988824,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"stand")
call DestroyGroup(l)
call RemoveLocation(S)
call RemoveLocation(u)
set qg=null
set ag=null
set fg=null
set Rg=null
set Tg=null
endfunction
function gh takes nothing returns nothing
local location qh
local location ah
local real nh
local real dh
local rect fh
local group Rh
local group Th
local code Yh
local boolean Gh
set u=GetUnitLoc(GetSpellAbilityUnit())
set qh=u
set c=Location(GetLocationX(qh)+200.00,GetLocationY(qh)+0.00)
set ah=u
set nh=GetLocationX(ah)
set dh=GetLocationY(ah)
set O=Rect(nh-150,dh-140,nh+150,dh+140)
set fh=O
set Rh=CreateGroup()
call GroupEnumUnitsInRect(Rh,fh,null)
call DestroyBoolExpr(null)
set l=Rh
set Th=l
set Yh=tp
set Gh=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(Th,Yh)
if Gh then
call DestroyGroup(Th)
endif
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747990081,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"stand")
call DestroyGroup(l)
call RemoveLocation(c)
call RemoveLocation(u)
set qh=null
set ah=null
set fh=null
set Rh=null
set Th=null
endfunction
function gv takes nothing returns boolean
if GetUnitTypeId(GetDyingUnit())!=1747989048 then
return false
endif
return true
endfunction
function gww takes nothing returns boolean
return true
endfunction
function h1 takes nothing returns boolean
return true
endfunction
function hGw takes nothing returns nothing
set Xb=0
set Cb[Xb]="ClosureEvents, line 293"
set Xb=Xb+1
call AV("when calling generalEventCallback in ClosureEvents, line 293")
set Xb=Xb-1
endfunction
function hK takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function hQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989067,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989065,0)
endfunction
function initialize takes nothing returns nothing
local integer i_2=0
local integer temp=qo
loop
exitwhen i_2>temp
set i_2=i_2+1
endloop
endfunction
function hYw takes nothing returns boolean
set Xb=0
set Cb[Xb]="StringUtils, line 1"
set Xb=Xb+1
set qo=127
call initialize()
call Oww("","when calling stringToIndex in StringUtils, line 167")
set Xb=Xb-1
return true
endfunction
function i2 takes nothing returns nothing
set Fc=Fc+0.01
endfunction
function tA takes nothing returns boolean
if GetResearched()!=1378890053 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890053,true)!=1 then
return false
endif
return true
endfunction
function iA takes nothing returns boolean
if not tA() then
return false
endif
return true
endfunction
function x9 takes string f9 returns boolean
local playerunitevent R9
local playerunitevent T9
local playerunitevent Y9
local integer G9
local integer g9
local integer h9
local integer F9
local integer k9
local integer j9
set Cb[Xb]=f9
set Xb=Xb+1
set R9=EVENT_PLAYER_UNIT_DEATH
set Cb[Xb]="when calling alloc_OreCapture_EventListener_line9 in OreCapture, line 9"
set Xb=Xb+1
if tO==0 then
if iO<32768 then
set iO=iO+1
set G9=iO
set SO[G9]=680
else
call l1("Out of memory: Could not create OreCapture_EventListener_line9.","when calling error in OreCapture, line 9")
set G9=0
endif
else
set tO=tO-1
set G9=sO[tO]
set SO[G9]=680
endif
set Xb=Xb-1
set ub[G9]=0
set rb[G9]=0
set sb[G9]=0
set Cb[Xb]="when calling add in OreCapture, line 9"
set Xb=Xb+1
set Cb[Xb]="when calling toIntId in ClosureEvents, line 112"
set Xb=Xb+1
set g9=vS[GetHandleId(R9)]
if g9==0 then
set g9=nV(R9,"when calling registerEventId in ClosureEvents, line 229")
endif
set Xb=Xb-1
set ub[G9]=g9
if ES[ub[G9]]!=0 then
set sb[ES[ub[G9]]]=G9
set rb[G9]=ES[ub[G9]]
endif
set ES[ub[G9]]=G9
set Xb=Xb-1
set T9=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set Cb[Xb]="when calling alloc_OreCapture_EventListener_line14 in OreCapture, line 14"
set Xb=Xb+1
if tO==0 then
if iO<32768 then
set iO=iO+1
set h9=iO
set SO[h9]=678
else
call l1("Out of memory: Could not create OreCapture_EventListener_line14.","when calling error in OreCapture, line 14")
set h9=0
endif
else
set tO=tO-1
set h9=sO[tO]
set SO[h9]=678
endif
set Xb=Xb-1
set ub[h9]=0
set rb[h9]=0
set sb[h9]=0
set Cb[Xb]="when calling add in OreCapture, line 14"
set Xb=Xb+1
set Cb[Xb]="when calling toIntId in ClosureEvents, line 112"
set Xb=Xb+1
set F9=vS[GetHandleId(T9)]
if F9==0 then
set F9=nV(T9,"when calling registerEventId in ClosureEvents, line 229")
endif
set Xb=Xb-1
set ub[h9]=F9
if ES[ub[h9]]!=0 then
set sb[ES[ub[h9]]]=h9
set rb[h9]=ES[ub[h9]]
endif
set ES[ub[h9]]=h9
set Xb=Xb-1
set Y9=EVENT_PLAYER_UNIT_ATTACKED
set Cb[Xb]="when calling alloc_OreCapture_EventListener_line21 in OreCapture, line 21"
set Xb=Xb+1
if tO==0 then
if iO<32768 then
set iO=iO+1
set k9=iO
set SO[k9]=679
else
call l1("Out of memory: Could not create OreCapture_EventListener_line21.","when calling error in OreCapture, line 21")
set k9=0
endif
else
set tO=tO-1
set k9=sO[tO]
set SO[k9]=679
endif
set Xb=Xb-1
set ub[k9]=0
set rb[k9]=0
set sb[k9]=0
set Cb[Xb]="when calling add in OreCapture, line 21"
set Xb=Xb+1
set Cb[Xb]="when calling toIntId in ClosureEvents, line 112"
set Xb=Xb+1
set j9=vS[GetHandleId(Y9)]
if j9==0 then
set j9=nV(Y9,"when calling registerEventId in ClosureEvents, line 229")
endif
set Xb=Xb-1
set ub[k9]=j9
if ES[ub[k9]]!=0 then
set sb[ES[ub[k9]]]=k9
set rb[k9]=ES[ub[k9]]
endif
set ES[ub[k9]]=k9
set Xb=Xb-1-1
set R9=null
set T9=null
set Y9=null
return true
endfunction
function iGw takes nothing returns boolean
set Xb=0
return x9("OreCapture, line 1")
endfunction
function tm takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function im takes nothing returns boolean
if not tm() then
return false
endif
return true
endfunction
function jD takes nothing returns nothing
if GetUnitTypeId(GetEnumUnit())==1747988535 then
call ReplaceUnitBJ(GetEnumUnit(),1747988788,bj_UNIT_STATE_METHOD_RELATIVE)
endif
if GetUnitTypeId(GetEnumUnit())==1747990325 then
call ReplaceUnitBJ(GetEnumUnit(),1747990324,bj_UNIT_STATE_METHOD_RELATIVE)
endif
if GetUnitTypeId(GetEnumUnit())==1747989594 then
call ReplaceUnitBJ(GetEnumUnit(),1747990097,bj_UNIT_STATE_METHOD_RELATIVE)
endif
if GetUnitTypeId(GetEnumUnit())==1747988784 then
call ReplaceUnitBJ(GetEnumUnit(),1747988561,bj_UNIT_STATE_METHOD_RELATIVE)
endif
if GetUnitTypeId(GetEnumUnit())==1747988563 then
call ReplaceUnitBJ(GetEnumUnit(),1747988565,bj_UNIT_STATE_METHOD_RELATIVE)
endif
if GetUnitTypeId(GetEnumUnit())==1747988562 then
call ReplaceUnitBJ(GetEnumUnit(),1747988566,bj_UNIT_STATE_METHOD_RELATIVE)
endif
if GetUnitTypeId(GetEnumUnit())==1747988564 then
call ReplaceUnitBJ(GetEnumUnit(),1747988567,bj_UNIT_STATE_METHOD_RELATIVE)
endif
if GetUnitTypeId(GetEnumUnit())==1747990104 then
call ReplaceUnitBJ(GetEnumUnit(),1747990321,bj_UNIT_STATE_METHOD_RELATIVE)
endif
if GetUnitTypeId(GetEnumUnit())==1747990105 then
call ReplaceUnitBJ(GetEnumUnit(),1747990322,bj_UNIT_STATE_METHOD_RELATIVE)
endif
if GetUnitTypeId(GetEnumUnit())==1747990106 then
call ReplaceUnitBJ(GetEnumUnit(),1747990323,bj_UNIT_STATE_METHOD_RELATIVE)
endif
if GetUnitTypeId(GetEnumUnit())==1747989811 then
call ReplaceUnitBJ(GetEnumUnit(),1747989812,bj_UNIT_STATE_METHOD_RELATIVE)
endif
if GetUnitTypeId(GetEnumUnit())==1747990095 then
call ReplaceUnitBJ(GetEnumUnit(),1747990098,bj_UNIT_STATE_METHOD_RELATIVE)
endif
if GetUnitTypeId(GetEnumUnit())==1747990096 then
call ReplaceUnitBJ(GetEnumUnit(),1747990099,bj_UNIT_STATE_METHOD_RELATIVE)
endif
endfunction
function Jww_2 takes timer Iww_2,string Pww returns integer
local integer Aww
local integer Dww_2
local integer Hww
set Cb[Xb]=Pww
set Xb=Xb+1
set Aww=Uo
set Dww_2=GetHandleId(Iww_2)
set Cb[Xb]="when calling loadInt in TimerUtils, line 21"
set Xb=Xb+1
if AO[Aww]==0 then
if Aww==0 then
call l1("Nullpointer exception when calling Table.loadInt","when calling error in Table, line 39")
else
call l1("Called Table.loadInt on invalid object.","when calling error in Table, line 39")
endif
endif
set Hww=LoadInteger(Wo,Aww,Dww_2)
set Xb=Xb-1-1
return Hww
endfunction
function Jow takes integer mow,integer Qow,string Wow returns nothing
local integer Eow
local integer Zow
local multiboard Uow
local integer Iow
local boolean Aow
local integer Dow
local integer How
set Cb[Xb]=Wow
set Xb=Xb+1
set Eow=0
set Zow=23
loop
exitwhen Eow>Zow
set Iow=Mc[Eow]
set Cb[Xb]="when calling isInGame in Economy, line 49"
set Xb=Xb+1
if yl[Iow]==0 then
if Iow==0 then
call l1("Nullpointer exception when calling PlayerStats.isInGame","when calling error in PlayerStats, line 42")
else
call l1("Called PlayerStats.isInGame on invalid object.","when calling error in PlayerStats, line 42")
endif
endif
set Aow=Ab[Iow]
set Xb=Xb-1
if Aow then
set Uow=Lc[Eow]
set mow=Ic[0]
set Qow=Ic[1]
set Dow=Mc[Eow]
set Cb[Xb]="when calling getUpkeep in Economy, line 51"
set Xb=Xb+1
if yl[Dow]==0 then
if Dow==0 then
call l1("Nullpointer exception when calling PlayerStats.getUpkeep","when calling error in PlayerStats, line 48")
else
call l1("Called PlayerStats.getUpkeep on invalid object.","when calling error in PlayerStats, line 48")
endif
endif
set How=Hb[Dow]
set Xb=Xb-1
set Wow=nww(How)
call MultiboardSetItemValue(MultiboardGetItem(Uow,Qow,mow),Wow)
endif
set Eow=Eow+1
endloop
set Xb=Xb-1
set Uow=null
endfunction
function Oow takes integer Sow,integer cow returns nothing
local integer oow
set Ob[Sow]=Ob[Sow]-1.
set oow=0
set cow=23
loop
exitwhen oow>cow
call MultiboardSetTitleText(Lc[oow],"Income: "+I2S(R2I(Ob[Sow]/60.))+":"+I2S(R2I(ModuloReal(Ob[Sow],60.)/10.))+I2S(R2I(ModuloReal(ModuloReal(Ob[Sow],60.),10.))))
set oow=oow+1
endloop
if Ob[Sow]<=0. then
set Ob[Sow]=120.0
endif
endfunction
function Spw takes integer wpw,integer upw,string rpw returns nothing
local integer spw
local boolean tpw
local integer ipw
set Cb[Xb]=rpw
set Xb=Xb+1
set spw=0
set wpw=23
loop
exitwhen spw>wpw
set upw=Mc[spw]
set Cb[Xb]="when calling isInGame in MultiboardCityUpdate, line 27"
set Xb=Xb+1
if yl[upw]==0 then
if upw==0 then
call l1("Nullpointer exception when calling PlayerStats.isInGame","when calling error in PlayerStats, line 42")
else
call l1("Called PlayerStats.isInGame on invalid object.","when calling error in PlayerStats, line 42")
endif
endif
set tpw=Ab[upw]
set Xb=Xb-1
if tpw then
set ipw=Mc[spw]
set rpw="when calling refreshMultiboardCity in MultiboardCityUpdate, line 28"
set Cb[Xb]="when calling refreshMultiboardCity in MultiboardCityUpdate, line 28"
set Xb=Xb+1
if yl[ipw]==0 then
if ipw==0 then
call l1("Nullpointer exception when calling PlayerStats.refreshMultiboardCity","when calling error in PlayerStats, line 71")
else
call l1("Called PlayerStats.refreshMultiboardCity on invalid object.","when calling error in PlayerStats, line 71")
endif
endif
call Pew(ipw,"when calling refreshMultiboardCity in PlayerStats, line 71")
set Xb=Xb-1
endif
set spw=spw+1
endloop
set Xb=Xb-1
endfunction
function N3 takes string I3 returns nothing
local integer P3
local integer A3
local integer D3
local integer H3
local integer J3
local real K3
local integer L3
local timer X3
local integer C3
local integer V3
local integer B3
set Cb[Xb]=I3
set Xb=Xb+1
set P3=0
set A3=23
loop
exitwhen P3>A3
set wc[P3]=rc[P3]
set uc[P3]=0
set P3=P3+1
endloop
set D3=R2I(nS*0.5/10.0)+1
set H3=0
set J3=R2I(20)-1
loop
exitwhen H3>J3
set K3=H3*0.5
set Cb[Xb]="when calling alloc_Economy_CallbackSingle_line34 in Economy, line 34"
set Xb=Xb+1
if fO==0 then
if RO<32768 then
set RO=RO+1
set L3=RO
set TO[L3]=644
else
call l1("Out of memory: Could not create Economy_CallbackSingle_line34.","when calling error in Economy, line 34")
set L3=0
endif
else
set fO=fO-1
set L3=dO[fO]
set TO[L3]=644
endif
set Xb=Xb-1
set yb[L3]=H3
set pb[L3]=D3
set I3="when calling doAfter in Economy, line 34"
set Cb[Xb]="when calling doAfter in Economy, line 34"
set Xb=Xb+1
set X3=Xww("when calling getTimer in ClosureTimers, line 27")
set Cb[Xb]="when calling doAfter in ClosureTimers, line 27"
set Xb=Xb+1
call odw(L3,X3,K3,"when calling start in ClosureTimers, line 16")
set Xb=Xb-1-1
set C3=nS-1
set V3=(H3+1)*D3-1
if C3<2147483647 then
set B3=C3
else
set B3=2147483647
endif
if V3<B3 then
set B3=V3
endif
exitwhen B3==nS-1
set H3=H3+1
endloop
set Xb=Xb-1
set X3=null
endfunction
function aOw takes integer Kow,integer Low,string Xow returns nothing
local integer Cow
local integer Vow
local multiboard Bow
local integer Now
local integer Mow
local integer wOw
local integer uOw
local integer rOw
local boolean sOw
local integer tOw
local integer iOw
local integer SOw
local string cOw
local integer oOw
local integer OOw
local boolean lOw
local integer bOw
local integer yOw
local integer pOw
local player eOw
local playerstate qOw
set Cb[Xb]=Xow
set Xb=Xb+1
set sc=sc+1
set Cow=0
set Vow=23
loop
exitwhen Cow>Vow
set rOw=Mc[Cow]
set Cb[Xb]="when calling isInGame in Economy, line 57"
set Xb=Xb+1
if yl[rOw]==0 then
if rOw==0 then
call l1("Nullpointer exception when calling PlayerStats.isInGame","when calling error in PlayerStats, line 42")
else
call l1("Called PlayerStats.isInGame on invalid object.","when calling error in PlayerStats, line 42")
endif
endif
set sOw=Ab[rOw]
set Xb=Xb-1
if sOw then
set Bow=Lc[Cow]
set tOw=Uc[0]
set iOw=Uc[1]
set Xow=nww(wc[Cow])
call MultiboardSetItemValue(MultiboardGetItem(Bow,iOw,tOw),Xow)
set Low=Ic[0]
set SOw=Ic[1]
set oOw=Mc[Cow]
set Cb[Xb]="when calling getUpkeep in Economy, line 60"
set Xb=Xb+1
if yl[oOw]==0 then
if oOw==0 then
call l1("Nullpointer exception when calling PlayerStats.getUpkeep","when calling error in PlayerStats, line 48")
else
call l1("Called PlayerStats.getUpkeep on invalid object.","when calling error in PlayerStats, line 48")
endif
endif
set Kow=Hb[oOw]
set Xb=Xb-1
set cOw=nww(Kow)
call MultiboardSetItemValue(MultiboardGetItem(Bow,SOw,Low),cOw)
endif
set Cow=Cow+1
endloop
if sc==R2I(12) then
set sc=0
set Now=0
set Mow=23
loop
exitwhen Now>Mow
set OOw=Mc[Now]
set Cb[Xb]="when calling isInGame in Economy, line 65"
set Xb=Xb+1
if yl[OOw]==0 then
if OOw==0 then
call l1("Nullpointer exception when calling PlayerStats.isInGame","when calling error in PlayerStats, line 42")
else
call l1("Called PlayerStats.isInGame on invalid object.","when calling error in PlayerStats, line 42")
endif
endif
set lOw=Ab[OOw]
set Xb=Xb-1
if lOw then
set wOw=GetPlayerState(wo[Now],PLAYER_STATE_RESOURCE_GOLD)
set uOw=GetPlayerState(wo[Now],PLAYER_STATE_RESOURCE_LUMBER)
set eOw=wo[Now]
set qOw=PLAYER_STATE_RESOURCE_GOLD
set pOw=wOw+wc[Now]
set bOw=Mc[Now]
set Cb[Xb]="when calling getUpkeep in Economy, line 68"
set Xb=Xb+1
if yl[bOw]==0 then
if bOw==0 then
call l1("Nullpointer exception when calling PlayerStats.getUpkeep","when calling error in PlayerStats, line 48")
else
call l1("Called PlayerStats.getUpkeep on invalid object.","when calling error in PlayerStats, line 48")
endif
endif
set yOw=Hb[bOw]
set Xb=Xb-1
call SetPlayerState(eOw,qOw,pOw+yOw)
call SetPlayerState(wo[Now],PLAYER_STATE_RESOURCE_LUMBER,uOw+uc[Now])
endif
set Now=Now+1
endloop
endif
call N3("when calling countIncomeForAll in Economy, line 72")
set Xb=Xb-1
set Bow=null
set eOw=null
set qOw=null
endfunction
function Ciw takes integer Aiw,integer Diw,real Hiw,string Jiw returns nothing
local integer Kiw
local real Liw
local integer Xiw
set Cb[Xb]=Jiw
set Xb=Xb+1
set Kiw=Ul[Aiw]
set Xiw=Ul[Aiw]
set Liw=Hiw*GetRandomReal(ffw(SS[Diw],0,"when calling get in City, line 403")/1000.,ffw(SS[Diw],1,"when calling get in City, line 403")/1000.)*Ul[Aiw]
set Ul[Aiw]=Xiw+R2I(Liw)
set Il[Aiw]=Il[Aiw]+(Ul[Aiw]-Kiw)
set Xb=Xb-1
endfunction
function uSw takes integer Viw,integer Biw,string Niw returns nothing
local integer Miw
local real wSw
set Cb[Xb]=Niw
set Xb=Xb+1
set Miw=gl[Ldw(aS,Biw,"when calling get in City, line 408")]
set wSw=hl[Ldw(aS,Biw,"when calling get in City, line 409")]
set Cb[Xb]="when calling addPopulation in City, line 410"
set Xb=Xb+1
if pO[Viw]==0 then
if Viw==0 then
call l1("Nullpointer exception when calling City.addPopulation","when calling error in City, line 401")
else
call l1("Called City.addPopulation on invalid object.","when calling error in City, line 401")
endif
endif
call Ciw(Viw,Miw,wSw,"when calling addPopulation in City, line 401")
set Xb=Xb-1
if Yl[Ldw(aS,Biw,"when calling get in City, line 412")]==false then
set Dl[Viw]=Dl[Viw]-Tl[Ldw(aS,Biw,"when calling get in City, line 413")]*5.0/Rl[Ldw(aS,Biw,"when calling get in City, line 413")]
endif
set Xb=Xb-1
endfunction
function pcw takes integer ucw,integer rcw,string scw returns nothing
local integer tcw
local integer icw
local integer Scw
local integer ccw
local integer ocw
local real Ocw
local integer lcw
local integer bcw
local integer ycw
set Cb[Xb]=scw
set Xb=Xb+1
set Pl[Ml[ucw]]=Pl[Ml[ucw]]+GetRandomReal(-0.0001,0.00015)*Pl[Ml[ucw]]
set tcw=Ul[Ml[ucw]]
set rcw=Ul[Ml[ucw]]
set Ocw=Pow(Ul[Ml[ucw]]*Pl[Ml[ucw]],0.8)*gS[Jl[Ml[ucw]]]
set Ul[Ml[ucw]]=rcw+R2I(Ocw)
set icw=Ul[Ml[ucw]]-tcw
set Scw=GetRandomInt(R2I(-(0.25*icw)),R2I(0.25*icw))
set Ul[Ml[ucw]]=Ul[Ml[ucw]]+Scw
set Il[Ml[ucw]]=Ul[Ml[ucw]]-tcw
set lcw=Ll[Ml[ucw]]
set Cb[Xb]="when calling iterator in City, line 149"
set Xb=Xb+1
set bcw=kbw(lcw,"when calling new_LLIterator in LinkedList, line 165")
set Xb=Xb-1
set ccw=bcw
loop
exitwhen Yb[gb[ccw]]==Gb[ccw]
set gb[ccw]=Yb[gb[ccw]]
set ocw=Rb[gb[ccw]]
set ycw=Ml[ucw]
set Cb[Xb]="when calling getCityModifierOnFastCount in City, line 150"
set Xb=Xb+1
if pO[ycw]==0 then
if ycw==0 then
call l1("Nullpointer exception when calling City.getCityModifierOnFastCount","when calling error in City, line 407")
else
call l1("Called City.getCityModifierOnFastCount on invalid object.","when calling error in City, line 407")
endif
endif
call uSw(ycw,ocw,"when calling getCityModifierOnFastCount in City, line 407")
set Xb=Xb-1
endloop
set Cb[Xb]="when calling close in City, line 149"
set Xb=Xb+1
if Fb[ccw]then
call Sfw(ccw,"when calling dispatch_LLIterator_destroyLLIterator in LinkedList, line 450")
endif
set Xb=Xb-1-1
endfunction
function vcw takes integer ecw,integer qcw,string acw returns nothing
local integer ncw
local real dcw
local integer fcw
local real Rcw
local integer Tcw
local real Ycw
local integer Gcw
local real gcw
local integer hcw
local real Fcw
local integer kcw
local integer jcw
local integer xcw
set Cb[Xb]=acw
set Xb=Xb+1
set dcw=Gl[Ldw(aS,2,"when calling get in City, line 155")]
if GetRandomReal(0.0,1.0)<=dcw then
set fcw=wb[ecw]
set Cb[Xb]="when calling addModifier in City, line 156"
set Xb=Xb+1
if pO[fcw]==0 then
if fcw==0 then
call l1("Nullpointer exception when calling City.addModifier","when calling error in City, line 368")
else
call l1("Called City.addModifier on invalid object.","when calling error in City, line 368")
endif
endif
call ctw(fcw,2,"when calling addModifier in City, line 368")
set Xb=Xb-1
endif
set Rcw=Gl[Ldw(aS,5,"when calling get in City, line 157")]
if GetRandomReal(0.0,1.0)<=Rcw then
set Tcw=wb[ecw]
set Cb[Xb]="when calling addModifier in City, line 158"
set Xb=Xb+1
if pO[Tcw]==0 then
if Tcw==0 then
call l1("Nullpointer exception when calling City.addModifier","when calling error in City, line 368")
else
call l1("Called City.addModifier on invalid object.","when calling error in City, line 368")
endif
endif
call ctw(Tcw,5,"when calling addModifier in City, line 368")
set Xb=Xb-1
endif
set Ycw=Gl[Ldw(aS,7,"when calling get in City, line 159")]
if GetRandomReal(0.0,1.0)<=Ycw then
set Gcw=wb[ecw]
set Cb[Xb]="when calling addModifier in City, line 160"
set Xb=Xb+1
if pO[Gcw]==0 then
if Gcw==0 then
call l1("Nullpointer exception when calling City.addModifier","when calling error in City, line 368")
else
call l1("Called City.addModifier on invalid object.","when calling error in City, line 368")
endif
endif
call ctw(Gcw,7,"when calling addModifier in City, line 368")
set Xb=Xb-1
endif
set gcw=Gl[Ldw(aS,3,"when calling get in City, line 161")]
if GetRandomReal(0.0,1.0)<=gcw then
set hcw=wb[ecw]
set Cb[Xb]="when calling addModifier in City, line 162"
set Xb=Xb+1
if pO[hcw]==0 then
if hcw==0 then
call l1("Nullpointer exception when calling City.addModifier","when calling error in City, line 368")
else
call l1("Called City.addModifier on invalid object.","when calling error in City, line 368")
endif
endif
call ctw(hcw,3,"when calling addModifier in City, line 368")
set Xb=Xb-1
endif
set Fcw=Gl[Ldw(aS,4,"when calling get in City, line 163")]
if GetRandomReal(0.0,1.0)<=Fcw then
set qcw=wb[ecw]
set Cb[Xb]="when calling addModifier in City, line 164"
set Xb=Xb+1
if pO[qcw]==0 then
if qcw==0 then
call l1("Nullpointer exception when calling City.addModifier","when calling error in City, line 368")
else
call l1("Called City.addModifier on invalid object.","when calling error in City, line 368")
endif
endif
call ctw(qcw,4,"when calling addModifier in City, line 368")
set Xb=Xb-1
endif
set kcw=Ll[wb[ecw]]
set Cb[Xb]="when calling iterator in City, line 166"
set Xb=Xb+1
set jcw=kbw(kcw,"when calling new_LLIterator in LinkedList, line 165")
set Xb=Xb-1
set ncw=jcw
loop
exitwhen Yb[gb[ncw]]==Gb[ncw]
set gb[ncw]=Yb[gb[ncw]]
set xcw=wb[ecw]
set Cb[Xb]="when calling getCityModifierOnLongCount in City, line 167"
set Xb=Xb+1
if pO[xcw]==0 then
if xcw==0 then
call l1("Nullpointer exception when calling City.getCityModifierOnLongCount","when calling error in City, line 416")
else
call l1("Called City.getCityModifierOnLongCount on invalid object.","when calling error in City, line 416")
endif
endif
set Xb=Xb-1
endloop
set Cb[Xb]="when calling close in City, line 166"
set Xb=Xb+1
if Fb[ncw]then
call Sfw(ncw,"when calling dispatch_LLIterator_destroyLLIterator in LinkedList, line 450")
endif
set Xb=Xb-1-1
endfunction
function Knw takes integer Anw,integer Dnw,string Hnw returns nothing
local force Jnw
set Cb[Xb]=Hnw
set Xb=Xb+1
if hO[Anw]==0 then
if Anw==0 then
call l1("Nullpointer exception when calling CallbackPeriodic.call","when calling error in ClosureTimers, line 130")
else
call l1("Called CallbackPeriodic.call on invalid object.","when calling error in ClosureTimers, line 130")
endif
endif
if hO[Anw]<=634 then
if hO[Anw]<=632 then
if hO[Anw]<=631 then
call pcw(Anw,Dnw,"when calling City_City_call_line138 in ClosureTimers, line 130")
else
call vcw(Anw,Dnw,"when calling City_City_call_line154 in ClosureTimers, line 130")
endif
elseif hO[Anw]<=633 then
set Jnw=bj_FORCE_ALL_PLAYERS
if IsPlayerInForce(GetLocalPlayer(),Jnw) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,20.0,"Enjoying the map? Join the |cffe100ffofficial CoE discord channel|r! Link: |cffffff00discord.gg/V6kmxsy|r")
endif
else
call Oow(Anw,Dnw)
endif
elseif hO[Anw]<=636 then
if hO[Anw]<=635 then
call Jow(Anw,Dnw,"when calling Economy_call_line47 in ClosureTimers, line 130")
else
call aOw(Anw,Dnw,"when calling Economy_call_line54 in ClosureTimers, line 130")
endif
else
call Spw(Anw,Dnw,"when calling MultiboardCityUpdate_call_line25 in ClosureTimers, line 130")
endif
set Xb=Xb-1
set Jnw=null
endfunction
function jGw takes nothing returns nothing
local integer kGw
set Xb=0
set Cb[Xb]="ClosureTimers, line 135"
set Xb=Xb+1
set kGw=Jww_2(GetExpiredTimer(),"when calling getData in ClosureTimers, line 138")
call Knw(kGw,kGw,"when calling call in ClosureTimers, line 139")
set Xb=Xb-1
endfunction
function jI takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989835,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989836,0)
endfunction
function kP takes nothing returns boolean
if GetResearched()!=1378890049 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890049,true)!=1 then
return false
endif
return true
endfunction
function jP takes nothing returns boolean
if not kP() then
return false
endif
return true
endfunction
function kY takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989044 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function jY takes nothing returns boolean
if not kY() then
return false
endif
return true
endfunction
function y9 takes string c9 returns boolean
local integer o9
local integer O9
local integer l9
local timer b9
set Cb[Xb]=c9
set Xb=Xb+1
set Cc=CreateTrigger()
set Vc=CreateGroup()
set o9=0
set O9=bj_MAX_PLAYER_SLOTS-1
loop
exitwhen o9>O9
call SetPlayerAbilityAvailable(wo[o9],1095577649,false)
set o9=o9+1
endloop
set Cb[Xb]="when calling alloc_OnUnitEnterLeave_CallbackSingle_line62 in OnUnitEnterLeave, line 62"
set Xb=Xb+1
if fO==0 then
if RO<32768 then
set RO=RO+1
set l9=RO
set TO[l9]=650
else
call l1("Out of memory: Could not create OnUnitEnterLeave_CallbackSingle_line62.","when calling error in OnUnitEnterLeave, line 62")
set l9=0
endif
else
set fO=fO-1
set l9=dO[fO]
set TO[l9]=650
endif
set Xb=Xb-1
set Cb[Xb]="when calling nullTimer in OnUnitEnterLeave, line 62"
set Xb=Xb+1
set Cb[Xb]="when calling doAfter in ClosureTimers, line 33"
set Xb=Xb+1
set b9=Xww("when calling getTimer in ClosureTimers, line 27")
set Cb[Xb]="when calling doAfter in ClosureTimers, line 27"
set Xb=Xb+1
call odw(l9,b9,0.,"when calling start in ClosureTimers, line 16")
set Xb=Xb-1
set Xb=Xb-1-1-1
set b9=null
return true
endfunction
function jYw takes nothing returns boolean
set Xb=0
return y9("OnUnitEnterLeave, line 1")
endfunction
function kZ takes nothing returns boolean
if GetResearched()!=1378889810 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889810,true)!=2 then
return false
endif
return true
endfunction
function jZ takes nothing returns boolean
if not kZ() then
return false
endif
return true
endfunction
function k0w takes nothing returns boolean
return true
endfunction
function kA takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990596,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990595,0)
endfunction
function kD takes nothing returns boolean
return IsUnitType(GetTriggerUnit(),UNIT_TYPE_STRUCTURE)==true
endfunction
function FI takes nothing returns boolean
if GetResearched()!=1378890036 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890036,true)!=2 then
return false
endif
return true
endfunction
function kI takes nothing returns boolean
if not FI() then
return false
endif
return true
endfunction
function kJ takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function kYw takes nothing returns boolean
set Xb=0
set Cb[Xb]="ObjectIdGenerator, line 1"
set Xb=Xb+1
set Cb[Xb]="when calling new_IdGenerator in ObjectIdGenerator, line 7"
set Xb=Xb+1
set Cb[Xb]="when calling alloc_IdGenerator in ObjectIdGenerator, line 20"
set Xb=Xb+1
if cl==0 then
if ol<32768 then
set ol=ol+1
else
call l1("Out of memory: Could not create IdGenerator.","when calling error in ObjectIdGenerator, line 14")
endif
else
set cl=cl-1
endif
set Xb=Xb-1-1
set Cb[Xb]="when calling new_IdGenerator in ObjectIdGenerator, line 8"
set Xb=Xb+1
set Cb[Xb]="when calling alloc_IdGenerator in ObjectIdGenerator, line 20"
set Xb=Xb+1
if cl==0 then
if ol<32768 then
set ol=ol+1
else
call l1("Out of memory: Could not create IdGenerator.","when calling error in ObjectIdGenerator, line 14")
endif
else
set cl=cl-1
endif
set Xb=Xb-1-1
set Cb[Xb]="when calling new_IdGenerator in ObjectIdGenerator, line 9"
set Xb=Xb+1
set Cb[Xb]="when calling alloc_IdGenerator in ObjectIdGenerator, line 20"
set Xb=Xb+1
if cl==0 then
if ol<32768 then
set ol=ol+1
else
call l1("Out of memory: Could not create IdGenerator.","when calling error in ObjectIdGenerator, line 14")
endif
else
set cl=cl-1
endif
set Xb=Xb-1-1
set Cb[Xb]="when calling new_IdGenerator in ObjectIdGenerator, line 10"
set Xb=Xb+1
set Cb[Xb]="when calling alloc_IdGenerator in ObjectIdGenerator, line 20"
set Xb=Xb+1
if cl==0 then
if ol<32768 then
set ol=ol+1
else
call l1("Out of memory: Could not create IdGenerator.","when calling error in ObjectIdGenerator, line 14")
endif
else
set cl=cl-1
endif
set Xb=Xb-1-1
set Cb[Xb]="when calling new_IdGenerator in ObjectIdGenerator, line 11"
set Xb=Xb+1
set Cb[Xb]="when calling alloc_IdGenerator in ObjectIdGenerator, line 20"
set Xb=Xb+1
if cl==0 then
if ol<32768 then
set ol=ol+1
else
call l1("Out of memory: Could not create IdGenerator.","when calling error in ObjectIdGenerator, line 14")
endif
else
set cl=cl-1
endif
set Xb=Xb-1-1
set Cb[Xb]="when calling new_IdGenerator in ObjectIdGenerator, line 12"
set Xb=Xb+1
set Cb[Xb]="when calling alloc_IdGenerator in ObjectIdGenerator, line 20"
set Xb=Xb+1
if cl==0 then
if ol<32768 then
set ol=ol+1
else
call l1("Out of memory: Could not create IdGenerator.","when calling error in ObjectIdGenerator, line 14")
endif
else
set cl=cl-1
endif
set Xb=Xb-1-1-1
return true
endfunction
function km takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989057,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989058,0)
endfunction
function OD takes nothing returns boolean
if GetResearched()!=1378889818 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889818,true)!=1 then
return false
endif
return true
endfunction
function lD takes nothing returns boolean
if not OD() then
return false
endif
return true
endfunction
function lE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990098,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990095,0)
endfunction
function Qtw takes integer jtw,integer xtw,string vtw returns nothing
local integer mtw
set Cb[Xb]=vtw
set Xb=Xb+1
set mtw=Ql[jtw]
if mtw==0 then
set Cb[Xb]="when calling replaceCity in City, line 218"
set Xb=Xb+1
if pO[jtw]==0 then
if jtw==0 then
call l1("Nullpointer exception when calling City.replaceCity","when calling error in City, line 194")
else
call l1("Called City.replaceCity on invalid object.","when calling error in City, line 194")
endif
endif
call Ttw(jtw,1747988529,"when calling replaceCity in City, line 194")
set Xb=Xb-1
elseif mtw==3 then
set Cb[Xb]="when calling replaceCity in City, line 220"
set Xb=Xb+1
if pO[jtw]==0 then
if jtw==0 then
call l1("Nullpointer exception when calling City.replaceCity","when calling error in City, line 194")
else
call l1("Called City.replaceCity on invalid object.","when calling error in City, line 194")
endif
endif
call Ttw(jtw,1747989590,"when calling replaceCity in City, line 194")
set Xb=Xb-1
elseif mtw==1 then
set Cb[Xb]="when calling replaceCity in City, line 222"
set Xb=Xb+1
if pO[jtw]==0 then
if jtw==0 then
call l1("Nullpointer exception when calling City.replaceCity","when calling error in City, line 194")
else
call l1("Called City.replaceCity on invalid object.","when calling error in City, line 194")
endif
endif
call Ttw(jtw,1747990326,"when calling replaceCity in City, line 194")
set Xb=Xb-1
elseif mtw==2 then
set Cb[Xb]="when calling replaceCity in City, line 224"
set Xb=Xb+1
if pO[jtw]==0 then
if jtw==0 then
call l1("Nullpointer exception when calling City.replaceCity","when calling error in City, line 194")
else
call l1("Called City.replaceCity on invalid object.","when calling error in City, line 194")
endif
endif
call Ttw(jtw,1747990084,"when calling replaceCity in City, line 194")
set Xb=Xb-1
endif
set Cb[Xb]="when calling changeOwner in City, line 225"
set Xb=Xb+1
if pO[jtw]==0 then
if jtw==0 then
call l1("Nullpointer exception when calling City.changeOwner","when calling error in City, line 199")
else
call l1("Called City.changeOwner on invalid object.","when calling error in City, line 199")
endif
endif
call ktw(jtw,xtw,"when calling changeOwner in City, line 199")
set Xb=Xb-1-1
endfunction
function pqw takes integer lqw,integer bqw returns nothing
local integer yqw
if Ib[lqw]!=-1 then
call ForceRemovePlayer(Oc[Ib[lqw]],Pb[lqw])
endif
set Ib[lqw]=bqw
call ForceAddPlayer(Oc[Ib[lqw]],Pb[lqw])
call SetPlayerTechMaxAllowed(Pb[lqw],1747990087,0)
call SetPlayerTechMaxAllowed(Pb[lqw],1747990088,0)
call SetPlayerTechMaxAllowed(Pb[lqw],1747989558,0)
call SetPlayerTechMaxAllowed(Pb[lqw],1747989575,0)
call SetPlayerTechMaxAllowed(Pb[lqw],1747990339,0)
call SetPlayerTechMaxAllowed(Pb[lqw],1747990340,0)
call SetPlayerTechMaxAllowed(Pb[lqw],1747988528,0)
call SetPlayerTechMaxAllowed(Pb[lqw],1747988532,0)
set yqw=Ib[lqw]
if yqw==0 then
call SetPlayerTechMaxAllowed(Pb[lqw],1747988528,-1)
call SetPlayerTechMaxAllowed(Pb[lqw],1747988532,-1)
elseif yqw==1 then
call SetPlayerTechMaxAllowed(Pb[lqw],1747990339,-1)
call SetPlayerTechMaxAllowed(Pb[lqw],1747990340,-1)
elseif yqw==2 then
call SetPlayerTechMaxAllowed(Pb[lqw],1747990087,-1)
call SetPlayerTechMaxAllowed(Pb[lqw],1747990088,-1)
elseif yqw==3 then
call SetPlayerTechMaxAllowed(Pb[lqw],1747989558,-1)
call SetPlayerTechMaxAllowed(Pb[lqw],1747989575,-1)
endif
endfunction
function eC takes string MX returns nothing
local integer wC
local integer uC
local integer rC
local integer sC
local integer tC
local integer iC
local integer SC
local integer cC
local integer oC
local integer OC
local player lC
local location bC
local real yC
local integer pC
set Cb[Xb]=MX
set Xb=Xb+1
set wC=CC(GetSpellTargetUnit(),"when calling getCityId in CityManage, line 19")
set sC=hS[wC]
set Cb[Xb]="when calling getCityForceId in CityManage, line 20"
set Xb=Xb+1
if pO[sC]==0 then
if sC==0 then
call l1("Nullpointer exception when calling City.getCityForceId","when calling error in City, line 191")
else
call l1("Called City.getCityForceId on invalid object.","when calling error in City, line 191")
endif
endif
set tC=Ql[sC]
set Xb=Xb-1
set uC=GetPlayerId(GetOwningPlayer(GetSpellAbilityUnit()))
set iC=Mc[uC]
set Cb[Xb]="when calling changeForce in CityManage, line 22"
set Xb=Xb+1
if yl[iC]==0 then
if iC==0 then
call l1("Nullpointer exception when calling PlayerStats.changeForce","when calling error in PlayerStats, line 125")
else
call l1("Called PlayerStats.changeForce on invalid object.","when calling error in PlayerStats, line 125")
endif
endif
call pqw(iC,tC)
set Xb=Xb-1
set SC=Lo[tC]
set Cb[Xb]="when calling iterator in CityManage, line 25"
set Xb=Xb+1
set cC=kbw(SC,"when calling new_LLIterator in LinkedList, line 165")
set Xb=Xb-1
set rC=cC
loop
exitwhen Yb[gb[rC]]==Gb[rC]
set gb[rC]=Yb[gb[rC]]
set oC=1
set OC=Rb[gb[rC]]
set lC=wo[uC]
set bC=GetSpellTargetLoc()
set yC=0.
call GroupClear(bj_lastCreatedGroup)
loop
set oC=oC-1
exitwhen oC<0
call CreateUnitAtLocSaveLast(lC,OC,bC,yC)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
endloop
set Cb[Xb]="when calling close in CityManage, line 25"
set Xb=Xb+1
if Fb[rC]then
call Sfw(rC,"when calling dispatch_LLIterator_destroyLLIterator in LinkedList, line 450")
endif
set Xb=Xb-1
set pC=hS[wC]
set Cb[Xb]="when calling settleCity in CityManage, line 28"
set Xb=Xb+1
if pO[pC]==0 then
if pC==0 then
call l1("Nullpointer exception when calling City.settleCity","when calling error in City, line 215")
else
call l1("Called City.settleCity on invalid object.","when calling error in City, line 215")
endif
endif
call Qtw(pC,uC,"when calling settleCity in City, line 215")
set Xb=Xb-1
call KillUnit(GetSpellAbilityUnit())
set Xb=Xb-1
set lC=null
set bC=null
endfunction
function lGw takes nothing returns nothing
set Xb=0
call eC("CityManage, line 18")
endfunction
function OK takes nothing returns boolean
if GetUnitTypeId(GetConstructedStructure())!=1747989331 then
return false
endif
return true
endfunction
function lK takes nothing returns boolean
if not OK() then
return false
endif
return true
endfunction
function OQ takes nothing returns boolean
if GetResearched()!=1378889802 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889802,true)!=2 then
return false
endif
return true
endfunction
function lQ takes nothing returns boolean
if not OQ() then
return false
endif
return true
endfunction
function lY takes nothing returns nothing
local player iY=GetOwningPlayer(GetAttacker())
local player SY=GetOwningPlayer(GetAttacker())
local player cY
local player oY
local unit OY
set r[GetPlayerId(iY)+1]=r[GetPlayerId(SY)+1]+1
set cY=GetOwningPlayer(GetTriggerUnit())
set oY=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(cY)+1]=r[GetPlayerId(oY)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set OY=GetTriggerUnit()
call SetUnitState(OY,UNIT_STATE_LIFE,GetUnitState(OY,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set iY=null
set SY=null
set cY=null
set oY=null
set OY=null
endfunction
function lk takes nothing returns nothing
local player MF=GetOwningPlayer(GetSpellTargetUnit())
local playerstate wk=PLAYER_STATE_RESOURCE_LUMBER
local playerstate uk
local playerstate rk
local player sk
local force tk
local location ik
local real Sk
local real ck
local player ok
local force Ok
if wk==PLAYER_STATE_RESOURCE_GOLD then
set uk=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(MF,uk,GetPlayerState(MF,uk)+500)
elseif wk==PLAYER_STATE_RESOURCE_LUMBER then
set rk=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(MF,rk,GetPlayerState(MF,rk)+500)
endif
call SetPlayerState(MF,wk,GetPlayerState(MF,wk)+500)
call RemoveUnit(GetSpellAbilityUnit())
set sk=GetOwningPlayer(GetSpellTargetUnit())
set tk=CreateForce()
call ForceAddPlayer(tk,sk)
if IsPlayerInForce(GetLocalPlayer(),tk) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_1228")
endif
set y=GetUnitLoc(GetSpellTargetUnit())
set ok=GetOwningPlayer(GetSpellTargetUnit())
set Ok=CreateForce()
call ForceAddPlayer(Ok,ok)
set ik=y
set Sk=GetLocationX(ik)
set ck=GetLocationY(ik)
if IsPlayerInForce(GetLocalPlayer(),Ok) then
call PingMinimap(Sk,ck,2.00)
endif
call RemoveLocation(y)
set MF=null
set wk=null
set uk=null
set rk=null
set sk=null
set tk=null
set ik=null
set ok=null
set Ok=null
endfunction
function mE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989556,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989570,0)
endfunction
function vG takes nothing returns boolean
if IsUnitType(GetEnumUnit(),UNIT_TYPE_STRUCTURE)!=false then
return false
endif
return true
endfunction
function mG takes nothing returns nothing
if vG() then
call SetUnitPositionLoc(GetEnumUnit(),c)
endif
endfunction
function vK takes nothing returns boolean
if GetUnitTypeId(GetConstructedStructure())!=1747989059 then
return false
endif
return true
endfunction
function mK takes nothing returns boolean
if not vK() then
return false
endif
return true
endfunction
function vQ takes nothing returns boolean
if GetResearched()!=1378889799 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889799,true)!=1 then
return false
endif
return true
endfunction
function mQ takes nothing returns boolean
if not vQ() then
return false
endif
return true
endfunction
function vg takes nothing returns boolean
if IsUnitType(GetEnumUnit(),UNIT_TYPE_STRUCTURE)!=false then
return false
endif
return true
endfunction
function mg takes nothing returns nothing
if vg() then
call SetUnitPositionLoc(GetEnumUnit(),S)
endif
endfunction
function vh takes nothing returns boolean
if IsUnitType(GetEnumUnit(),UNIT_TYPE_STRUCTURE)!=false then
return false
endif
return true
endfunction
function mh takes nothing returns nothing
if vh() then
call SetUnitPositionLoc(GetEnumUnit(),S)
endif
endfunction
function mj takes nothing returns nothing
local player Rj=GetOwningPlayer(GetKillingUnit())
local playerstate Tj=PLAYER_STATE_RESOURCE_LUMBER
local playerstate Yj
local playerstate Gj
local player gj
local force hj
local location Fj
local real kj
local real jj
local player xj
local force vj
if Tj==PLAYER_STATE_RESOURCE_GOLD then
set Yj=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(Rj,Yj,GetPlayerState(Rj,Yj)+250)
elseif Tj==PLAYER_STATE_RESOURCE_LUMBER then
set Gj=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(Rj,Gj,GetPlayerState(Rj,Gj)+250)
endif
call SetPlayerState(Rj,Tj,GetPlayerState(Rj,Tj)+250)
set gj=GetOwningPlayer(GetKillingUnit())
set hj=CreateForce()
call ForceAddPlayer(hj,gj)
if IsPlayerInForce(GetLocalPlayer(),hj) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_090")
endif
set y=GetUnitLoc(GetDyingUnit())
set xj=GetOwningPlayer(GetDyingUnit())
set vj=CreateForce()
call ForceAddPlayer(vj,xj)
set Fj=y
set kj=GetLocationX(Fj)
set jj=GetLocationY(Fj)
if IsPlayerInForce(GetLocalPlayer(),vj) then
call PingMinimap(kj,jj,2.00)
endif
call RemoveLocation(y)
set Rj=null
set Tj=null
set Yj=null
set Gj=null
set gj=null
set hj=null
set Fj=null
set xj=null
set vj=null
endfunction
function mww takes nothing returns boolean
return true
endfunction
function n9 takes nothing returns nothing
local unit a9=GetTriggerUnit()
if GetUnitAbilityLevel(a9,1095577649)==0 then
set Bc[Nc]=a9
set Nc=Nc+1
call TriggerExecute(Cc)
set Nc=Nc-1
endif
set a9=null
endfunction
function aD takes nothing returns boolean
if GetResearched()!=1378890041 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890041,true)!=1 then
return false
endif
return true
endfunction
function nD takes nothing returns boolean
if not aD() then
return false
endif
return true
endfunction
function nE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990099,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990096,0)
endfunction
function AGw takes integer ZGw,integer UGw,string IGw returns integer
local integer PGw
if UGw<0 or UGw>=24 then
call l1("Index out of Bounds",IGw)
elseif UGw<=11 then
if UGw<=5 then
if UGw<=2 then
if UGw<=1 then
if UGw<=0 then
set PGw=Mb[ZGw]
else
set PGw=wy[ZGw]
endif
else
set PGw=uy[ZGw]
endif
elseif UGw<=4 then
if UGw<=3 then
set PGw=ry[ZGw]
else
set PGw=sy[ZGw]
endif
else
set PGw=ty[ZGw]
endif
elseif UGw<=8 then
if UGw<=7 then
if UGw<=6 then
set PGw=iy[ZGw]
else
set PGw=Sy[ZGw]
endif
else
set PGw=cy[ZGw]
endif
elseif UGw<=10 then
if UGw<=9 then
set PGw=oy[ZGw]
else
set PGw=Oy[ZGw]
endif
else
set PGw=ly[ZGw]
endif
elseif UGw<=17 then
if UGw<=14 then
if UGw<=13 then
if UGw<=12 then
set PGw=by[ZGw]
else
set PGw=yy[ZGw]
endif
else
set PGw=py[ZGw]
endif
elseif UGw<=16 then
if UGw<=15 then
set PGw=ey[ZGw]
else
set PGw=qy[ZGw]
endif
else
set PGw=ay[ZGw]
endif
elseif UGw<=20 then
if UGw<=19 then
if UGw<=18 then
set PGw=ny[ZGw]
else
set PGw=dy[ZGw]
endif
else
set PGw=fy[ZGw]
endif
elseif UGw<=22 then
if UGw<=21 then
set PGw=Ry[ZGw]
else
set PGw=Ty[ZGw]
endif
else
set PGw=Yy[ZGw]
endif
return PGw
endfunction
function M2 takes player X2,string C2 returns string
local integer V2
local integer B2
local integer N2
set Cb[Xb]=C2
set Xb=Xb+1
set B2=Mc[GetPlayerId(X2)]
set Cb[Xb]="when calling getForceId in Messages, line 37"
set Xb=Xb+1
if yl[B2]==0 then
if B2==0 then
call l1("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 122")
else
call l1("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 122")
endif
endif
set N2=Ib[B2]
set Xb=Xb-1
set V2=GetRandomInt(0,2)
if N2==0 then
set C2=go[V2]
elseif N2==1 then
set C2=ho[V2]
elseif N2==2 then
set C2=Fo[V2]
elseif N2==3 then
set C2=ko[V2]
else
set C2="Good news!"
endif
set Xb=Xb-1
return "|cff00ff00"+C2+"|r"
endfunction
function Oqw takes integer tqw,player iqw,integer Sqw,string cqw returns nothing
local integer oqw
set Cb[Xb]=cqw
set Xb=Xb+1
set oqw=GetPlayerId(iqw)
if not Ab[tqw]then
set Xb=Xb-1
return
endif
if oqw>=24 then
set Xb=Xb-1
return
endif
if AGw(tqw,oqw,"when reading array PlayerStats_alliance_states in  in PlayerStats, line 61")==Sqw or iqw==Pb[tqw]then
set Xb=Xb-1
return
endif
call EGw(tqw,oqw,Sqw,"when writing array PlayerStats_alliance_states in PlayerStats, line 63")
call SetPlayerAllianceStateBJ(Pb[tqw],iqw,Sqw)
set Xb=Xb-1
endfunction
function P2 takes player W2,string E2 returns string
local integer Z2
local integer U2
local integer I2
set Cb[Xb]=E2
set Xb=Xb+1
set U2=Mc[GetPlayerId(W2)]
set Cb[Xb]="when calling getForceId in Messages, line 5"
set Xb=Xb+1
if yl[U2]==0 then
if U2==0 then
call l1("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 122")
else
call l1("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 122")
endif
endif
set I2=Ib[U2]
set Xb=Xb-1
set Z2=GetRandomInt(0,2)
if I2==0 then
set E2=ao[Z2]
elseif I2==1 then
set E2=no[Z2]
elseif I2==2 then
set E2=do[Z2]
elseif I2==3 then
set E2=fo[Z2]
else
set E2="Warning!"
endif
set Xb=Xb-1
return "|cffff0000"+E2+"|r"
endfunction
function S3 takes string uM returns nothing
local player rM
local player sM
local string tM
local integer iM
local force SM
local force cM
local integer oM
local integer OM
local integer lM
local integer bM
local integer yM
local integer pM
local integer eM
local integer qM
local integer aM
local force nM
local force dM
local integer fM
local integer RM
local integer TM
local integer YM
local integer GM
local integer gM
local player hM
local force FM
local player kM
local player jM
local player xM
local integer vM
local integer mM
local integer QM
local integer WM
local player EM
local force ZM
local player UM
local player IM
local player PM
local integer AM
local integer DM
local integer HM
local integer JM
local player KM
local force LM
local player XM
local player CM
local player VM
local integer BM
local integer NM
local integer MM
local integer w3
local player u3
local force r3
local player s3
local player t3
local player i3
set Cb[Xb]=uM
set Xb=Xb+1
set rM=GetOwningPlayer(GetSpellAbilityUnit())
set sM=GetOwningPlayer(GetSpellTargetUnit())
set uM=TB(rM)
set tM=TB(sM)
set iM=GetPlayerId(rM)
set nM=CreateForce()
call ForceAddPlayer(nM,rM)
set SM=nM
set dM=CreateForce()
call ForceAddPlayer(dM,rM)
set cM=dM
set oM=GetSpellAbilityId()
if oM==1093677396 then
set fM=Mc[iM]
set Cb[Xb]="when calling getAllianceState in Diplomacy, line 16"
set Xb=Xb+1
if yl[fM]==0 then
if fM==0 then
call l1("Nullpointer exception when calling PlayerStats.getAllianceState","when calling error in PlayerStats, line 66")
else
call l1("Called PlayerStats.getAllianceState on invalid object.","when calling error in PlayerStats, line 66")
endif
endif
set Cb[Xb]="when calling getAllianceState in PlayerStats, line 66"
set Xb=Xb+1
set RM=AGw(fM,GetPlayerId(sM),"when reading array PlayerStats_alliance_states in  in PlayerStats, line 67")
set Xb=Xb-1-1
if RM==bj_ALLIANCE_UNALLIED then
set Xb=Xb-1
set rM=null
set sM=null
set SM=null
set cM=null
set nM=null
set dM=null
set hM=null
set FM=null
set kM=null
set jM=null
set xM=null
set EM=null
set ZM=null
set UM=null
set IM=null
set PM=null
set KM=null
set LM=null
set XM=null
set CM=null
set VM=null
set u3=null
set r3=null
set s3=null
set t3=null
set i3=null
return
endif
set TM=Mc[iM]
set YM=bj_ALLIANCE_UNALLIED
set Cb[Xb]="when calling setAlliance in Diplomacy, line 18"
set Xb=Xb+1
if yl[TM]==0 then
if TM==0 then
call l1("Nullpointer exception when calling PlayerStats.setAlliance","when calling error in PlayerStats, line 55")
else
call l1("Called PlayerStats.setAlliance on invalid object.","when calling error in PlayerStats, line 55")
endif
endif
call Oqw(TM,sM,YM,"when calling setAlliance in PlayerStats, line 55")
set Xb=Xb-1
set GM=Mc[GetPlayerId(sM)]
set gM=bj_ALLIANCE_UNALLIED
set Cb[Xb]="when calling setAlliance in Diplomacy, line 19"
set Xb=Xb+1
if yl[GM]==0 then
if GM==0 then
call l1("Nullpointer exception when calling PlayerStats.setAlliance","when calling error in PlayerStats, line 55")
else
call l1("Called PlayerStats.setAlliance on invalid object.","when calling error in PlayerStats, line 55")
endif
endif
call Oqw(GM,rM,gM,"when calling setAlliance in PlayerStats, line 55")
set Xb=Xb-1
set OM=0
set lM=23
loop
exitwhen OM>lM
set hM=wo[OM]
set FM=CreateForce()
call ForceAddPlayer(FM,hM)
if wo[OM]==sM then
set kM=wo[OM]
set Cb[Xb]="when calling warningToPlayer in Diplomacy, line 24"
set Xb=Xb+1
call DisplayTimedTextToPlayer(kM,0.,0.,10.0,P2(kM,"when calling getWarningStringForPlayer in Messages, line 79"))
call DisplayTimedTextToPlayer(kM,0.,0.,10.0,uM+" has declared war on you!")
set Xb=Xb-1
elseif FM==SM or FM==cM then
set jM=wo[OM]
set Cb[Xb]="when calling attentionToPlayer in Diplomacy, line 26"
set Xb=Xb+1
call DisplayTimedTextToPlayer(jM,0.,0.,10.0,i5(jM,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(jM,0.,0.,10.0,uM+" has declared war on your brother-in-arms, "+tM+"!")
set Xb=Xb-1
else
set xM=wo[OM]
set Cb[Xb]="when calling noteToPlayer in Diplomacy, line 28"
set Xb=Xb+1
call DisplayTimedTextToPlayer(xM,0.,0.,10.0,L2(xM,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(xM,0.,0.,10.0,uM+" has declared war on "+tM)
set Xb=Xb-1
endif
set OM=OM+1
endloop
elseif oM==1093677397 then
set vM=Mc[iM]
set Cb[Xb]="when calling getAllianceState in Diplomacy, line 31"
set Xb=Xb+1
if yl[vM]==0 then
if vM==0 then
call l1("Nullpointer exception when calling PlayerStats.getAllianceState","when calling error in PlayerStats, line 66")
else
call l1("Called PlayerStats.getAllianceState on invalid object.","when calling error in PlayerStats, line 66")
endif
endif
set Cb[Xb]="when calling getAllianceState in PlayerStats, line 66"
set Xb=Xb+1
set mM=AGw(vM,GetPlayerId(sM),"when reading array PlayerStats_alliance_states in  in PlayerStats, line 67")
set Xb=Xb-1-1
if mM==bj_ALLIANCE_ALLIED_VISION then
set Xb=Xb-1
set rM=null
set sM=null
set SM=null
set cM=null
set nM=null
set dM=null
set hM=null
set FM=null
set kM=null
set jM=null
set xM=null
set EM=null
set ZM=null
set UM=null
set IM=null
set PM=null
set KM=null
set LM=null
set XM=null
set CM=null
set VM=null
set u3=null
set r3=null
set s3=null
set t3=null
set i3=null
return
endif
set QM=Mc[iM]
set WM=bj_ALLIANCE_ALLIED_VISION
set Cb[Xb]="when calling setAlliance in Diplomacy, line 33"
set Xb=Xb+1
if yl[QM]==0 then
if QM==0 then
call l1("Nullpointer exception when calling PlayerStats.setAlliance","when calling error in PlayerStats, line 55")
else
call l1("Called PlayerStats.setAlliance on invalid object.","when calling error in PlayerStats, line 55")
endif
endif
call Oqw(QM,sM,WM,"when calling setAlliance in PlayerStats, line 55")
set Xb=Xb-1
set bM=0
set yM=23
loop
exitwhen bM>yM
set EM=wo[bM]
set ZM=CreateForce()
call ForceAddPlayer(ZM,EM)
if wo[bM]==sM then
set UM=wo[bM]
set Cb[Xb]="when calling goodNewsToPlayer in Diplomacy, line 38"
set Xb=Xb+1
call DisplayTimedTextToPlayer(UM,0.,0.,10.0,M2(UM,"when calling getGoodNewsStringForPlayer in Messages, line 85"))
call DisplayTimedTextToPlayer(UM,0.,0.,10.0,uM+" seeks an alliance with you!")
set Xb=Xb-1
elseif ZM==SM or ZM==cM then
set IM=wo[bM]
set Cb[Xb]="when calling noteToPlayer in Diplomacy, line 40"
set Xb=Xb+1
call DisplayTimedTextToPlayer(IM,0.,0.,10.0,L2(IM,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(IM,0.,0.,10.0,uM+" has allied "+tM)
set Xb=Xb-1
else
set PM=wo[bM]
set Cb[Xb]="when calling noteToPlayer in Diplomacy, line 42"
set Xb=Xb+1
call DisplayTimedTextToPlayer(PM,0.,0.,10.0,L2(PM,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(PM,0.,0.,10.0,uM+" has allied "+tM)
set Xb=Xb-1
endif
set bM=bM+1
endloop
elseif oM==1093677398 then
set AM=Mc[iM]
set Cb[Xb]="when calling getAllianceState in Diplomacy, line 45"
set Xb=Xb+1
if yl[AM]==0 then
if AM==0 then
call l1("Nullpointer exception when calling PlayerStats.getAllianceState","when calling error in PlayerStats, line 66")
else
call l1("Called PlayerStats.getAllianceState on invalid object.","when calling error in PlayerStats, line 66")
endif
endif
set Cb[Xb]="when calling getAllianceState in PlayerStats, line 66"
set Xb=Xb+1
set DM=AGw(AM,GetPlayerId(sM),"when reading array PlayerStats_alliance_states in  in PlayerStats, line 67")
set Xb=Xb-1-1
if DM==bj_ALLIANCE_NEUTRAL then
set Xb=Xb-1
set rM=null
set sM=null
set SM=null
set cM=null
set nM=null
set dM=null
set hM=null
set FM=null
set kM=null
set jM=null
set xM=null
set EM=null
set ZM=null
set UM=null
set IM=null
set PM=null
set KM=null
set LM=null
set XM=null
set CM=null
set VM=null
set u3=null
set r3=null
set s3=null
set t3=null
set i3=null
return
endif
set HM=Mc[iM]
set JM=bj_ALLIANCE_NEUTRAL
set Cb[Xb]="when calling setAlliance in Diplomacy, line 47"
set Xb=Xb+1
if yl[HM]==0 then
if HM==0 then
call l1("Nullpointer exception when calling PlayerStats.setAlliance","when calling error in PlayerStats, line 55")
else
call l1("Called PlayerStats.setAlliance on invalid object.","when calling error in PlayerStats, line 55")
endif
endif
call Oqw(HM,sM,JM,"when calling setAlliance in PlayerStats, line 55")
set Xb=Xb-1
set pM=0
set eM=23
loop
exitwhen pM>eM
set KM=wo[pM]
set LM=CreateForce()
call ForceAddPlayer(LM,KM)
if wo[pM]==sM then
set XM=wo[pM]
set Cb[Xb]="when calling noteToPlayer in Diplomacy, line 52"
set Xb=Xb+1
call DisplayTimedTextToPlayer(XM,0.,0.,10.0,L2(XM,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(XM,0.,0.,10.0,uM+" is now neutral towards you!")
set Xb=Xb-1
elseif LM==SM or LM==cM then
set CM=wo[pM]
set Cb[Xb]="when calling noteToPlayer in Diplomacy, line 54"
set Xb=Xb+1
call DisplayTimedTextToPlayer(CM,0.,0.,10.0,L2(CM,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(CM,0.,0.,10.0,uM+" shows neutrality towards "+tM)
set Xb=Xb-1
else
set VM=wo[pM]
set Cb[Xb]="when calling noteToPlayer in Diplomacy, line 56"
set Xb=Xb+1
call DisplayTimedTextToPlayer(VM,0.,0.,10.0,L2(VM,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(VM,0.,0.,10.0,uM+" shows neutrality towards "+tM)
set Xb=Xb-1
endif
set pM=pM+1
endloop
elseif oM==1093677400 then
set BM=Mc[iM]
set Cb[Xb]="when calling getAllianceState in Diplomacy, line 59"
set Xb=Xb+1
if yl[BM]==0 then
if BM==0 then
call l1("Nullpointer exception when calling PlayerStats.getAllianceState","when calling error in PlayerStats, line 66")
else
call l1("Called PlayerStats.getAllianceState on invalid object.","when calling error in PlayerStats, line 66")
endif
endif
set Cb[Xb]="when calling getAllianceState in PlayerStats, line 66"
set Xb=Xb+1
set NM=AGw(BM,GetPlayerId(sM),"when reading array PlayerStats_alliance_states in  in PlayerStats, line 67")
set Xb=Xb-1-1
if NM==bj_ALLIANCE_NEUTRAL then
set Xb=Xb-1
set rM=null
set sM=null
set SM=null
set cM=null
set nM=null
set dM=null
set hM=null
set FM=null
set kM=null
set jM=null
set xM=null
set EM=null
set ZM=null
set UM=null
set IM=null
set PM=null
set KM=null
set LM=null
set XM=null
set CM=null
set VM=null
set u3=null
set r3=null
set s3=null
set t3=null
set i3=null
return
endif
set MM=Mc[iM]
set w3=bj_ALLIANCE_NEUTRAL
set Cb[Xb]="when calling setAlliance in Diplomacy, line 61"
set Xb=Xb+1
if yl[MM]==0 then
if MM==0 then
call l1("Nullpointer exception when calling PlayerStats.setAlliance","when calling error in PlayerStats, line 55")
else
call l1("Called PlayerStats.setAlliance on invalid object.","when calling error in PlayerStats, line 55")
endif
endif
call Oqw(MM,sM,w3,"when calling setAlliance in PlayerStats, line 55")
set Xb=Xb-1
set qM=0
set aM=23
loop
exitwhen qM>aM
set u3=wo[qM]
set r3=CreateForce()
call ForceAddPlayer(r3,u3)
if wo[qM]==sM then
set s3=wo[qM]
set Cb[Xb]="when calling noteToPlayer in Diplomacy, line 66"
set Xb=Xb+1
call DisplayTimedTextToPlayer(s3,0.,0.,10.0,L2(s3,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(s3,0.,0.,10.0,uM+" unallies you!")
set Xb=Xb-1
elseif r3==SM or r3==cM then
set t3=wo[qM]
set Cb[Xb]="when calling noteToPlayer in Diplomacy, line 68"
set Xb=Xb+1
call DisplayTimedTextToPlayer(t3,0.,0.,10.0,L2(t3,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(t3,0.,0.,10.0,uM+" has unallied "+tM)
set Xb=Xb-1
else
set i3=wo[qM]
set Cb[Xb]="when calling noteToPlayer in Diplomacy, line 70"
set Xb=Xb+1
call DisplayTimedTextToPlayer(i3,0.,0.,10.0,L2(i3,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(i3,0.,0.,10.0,uM+" has unallied "+tM)
set Xb=Xb-1
endif
set qM=qM+1
endloop
endif
set Xb=Xb-1
set rM=null
set sM=null
set SM=null
set cM=null
set nM=null
set dM=null
set hM=null
set FM=null
set kM=null
set jM=null
set xM=null
set EM=null
set ZM=null
set UM=null
set IM=null
set PM=null
set KM=null
set LM=null
set XM=null
set CM=null
set VM=null
set u3=null
set r3=null
set s3=null
set t3=null
set i3=null
endfunction
function nGw takes nothing returns nothing
set Xb=0
call S3("Diplomacy, line 119")
endfunction
function aK takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990350 then
return false
endif
return true
endfunction
function nK takes nothing returns boolean
if not aK() then
return false
endif
return true
endfunction
function aQ takes nothing returns boolean
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889797,true)!=1 then
return false
endif
return true
endfunction
function nQ takes nothing returns boolean
if not aQ() then
return false
endif
return true
endfunction
function K1 takes string J1 returns boolean
set Cb[Xb]=J1
set Xb=Xb+1
set Cb[Xb]="when calling alloc_LinkedList_Comparator_line504 in LinkedList, line 504"
set Xb=Xb+1
if DO==0 then
if HO<32768 then
set HO=HO+1
else
call l1("Out of memory: Could not create LinkedList_Comparator_line504.","when calling error in LinkedList, line 504")
endif
else
set DO=DO-1
endif
set Xb=Xb-1
set Cb[Xb]="when calling alloc_LinkedList_Comparator_line508 in LinkedList, line 508"
set Xb=Xb+1
if DO==0 then
if HO<32768 then
set HO=HO+1
else
call l1("Out of memory: Could not create LinkedList_Comparator_line508.","when calling error in LinkedList, line 508")
endif
else
set DO=DO-1
endif
set Xb=Xb-1-1
return true
endfunction
function nYw takes nothing returns boolean
set Xb=0
return K1("LinkedList, line 1")
endfunction
function qk takes nothing returns boolean
if GetUnitTypeId(GetSpellTargetUnit())==1747988787 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747990361 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747989831 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747989040 then
return true
endif
return false
endfunction
function ak takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988791 then
return false
endif
if not qk() then
return false
endif
return true
endfunction
function nk takes nothing returns boolean
if not ak() then
return false
endif
return true
endfunction
function oB takes nothing returns boolean
set KS=200
return true
endfunction
function xww takes string hww returns boolean
local playerunitevent Fww
local integer kww
local integer jww
set Cb[Xb]=hww
set Xb=Xb+1
set Fww=EVENT_PLAYER_UNIT_SPELL_CAST
set Cb[Xb]="when calling alloc_Taxation_EventListener_line6 in Taxation, line 6"
set Xb=Xb+1
if tO==0 then
if iO<32768 then
set iO=iO+1
set kww=iO
set SO[kww]=682
else
call l1("Out of memory: Could not create Taxation_EventListener_line6.","when calling error in Taxation, line 6")
set kww=0
endif
else
set tO=tO-1
set kww=sO[tO]
set SO[kww]=682
endif
set Xb=Xb-1
set ub[kww]=0
set rb[kww]=0
set sb[kww]=0
set Cb[Xb]="when calling add in Taxation, line 6"
set Xb=Xb+1
set Cb[Xb]="when calling toIntId in ClosureEvents, line 112"
set Xb=Xb+1
set jww=vS[GetHandleId(Fww)]
if jww==0 then
set jww=nV(Fww,"when calling registerEventId in ClosureEvents, line 229")
endif
set Xb=Xb-1
set ub[kww]=jww
if ES[ub[kww]]!=0 then
set sb[ES[ub[kww]]]=kww
set rb[kww]=ES[ub[kww]]
endif
set ES[ub[kww]]=kww
set Xb=Xb-1-1
set Fww=null
return true
endfunction
function oGw takes nothing returns boolean
set Xb=0
return xww("Taxation, line 1")
endfunction
function cH takes nothing returns boolean
if GetUnitTypeId(GetConstructedStructure())==1747988545 then
return true
endif
if GetUnitTypeId(GetConstructedStructure())==1747989577 then
return true
endif
if GetUnitTypeId(GetConstructedStructure())==1747990320 then
return true
endif
if GetUnitTypeId(GetConstructedStructure())==1747989845 then
return true
endif
return false
endfunction
function oH takes nothing returns boolean
if p[GetPlayerId(GetOwningPlayer(GetConstructedStructure()))+1]!=false then
return false
endif
if not cH() then
return false
endif
return true
endfunction
function cL takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989591 then
return false
endif
return true
endfunction
function oL takes nothing returns boolean
if not cL() then
return false
endif
return true
endfunction
function oP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990321,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990104,0)
endfunction
function cU takes nothing returns boolean
if GetResearched()!=1378889818 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889818,true)!=2 then
return false
endif
return true
endfunction
function oU takes nothing returns boolean
if not cU() then
return false
endif
return true
endfunction
function cW takes nothing returns boolean
if GetResearched()!=1378889800 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889800,true)!=1 then
return false
endif
return true
endfunction
function oW takes nothing returns boolean
if not cW() then
return false
endif
return true
endfunction
function oZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651833,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651841,0)
endfunction
function p1 takes nothing returns nothing
set ec=ec+0.030
endfunction
function pA takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651852,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651855,0)
endfunction
function yI takes nothing returns boolean
if GetResearched()!=1378889797 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889797,true)!=2 then
return false
endif
return true
endfunction
function pI takes nothing returns boolean
if not yI() then
return false
endif
return true
endfunction
function pJ takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function pX takes nothing returns boolean
return true
endfunction
function pm takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988566,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988562,0)
endfunction
function pww takes nothing returns boolean
return true
endfunction
function q9 takes nothing returns nothing
call e9(GetFilterUnit())
endfunction
function Maw takes integer Vaw,string Baw,string Naw returns nothing
set Cb[Xb]=Naw
set Xb=Xb+1
if pO[Vaw]==0 then
if Vaw==0 then
call l1("Nullpointer exception when calling City.changeCityName","when calling error in City, line 171")
else
call l1("Called City.changeCityName on invalid object.","when calling error in City, line 171")
endif
endif
set Cb[Xb]="when calling changeCityName in City, line 171"
set Xb=Xb+1
set vl[Vaw]=SubString(Baw,0,24)
set Cb[Xb]="when calling refreshMultiboardIfPossible in City, line 174"
set Xb=Xb+1
if pO[Vaw]==0 then
if Vaw==0 then
call l1("Nullpointer exception when calling City.refreshMultiboardIfPossible","when calling error in City, line 250")
else
call l1("Called City.refreshMultiboardIfPossible on invalid object.","when calling error in City, line 250")
endif
endif
call qtw(Vaw,"when calling refreshMultiboardIfPossible in City, line 250")
set Xb=Xb-1-1-1
endfunction
function Qbw takes integer jbw,integer xbw returns integer
local integer vbw=Yb[kb[jbw]]
local integer mbw=0
loop
exitwhen vbw==kb[jbw]
if Rb[vbw]==xbw then
return mbw
endif
set vbw=Yb[vbw]
set mbw=mbw+1
endloop
return -1
endfunction
function Yrw takes integer frw,player Rrw,string Trw returns nothing
set Cb[Xb]=Trw
set Xb=Xb+1
if frw<0 then
set Xb=Xb-1
return
endif
if not xdw(uO[frw],GetPlayerId(Rrw),"when calling has in VoteKick, line 68") then
set wO[frw]=wO[frw]+1
endif
set Xb=Xb-1
endfunction
function drw takes string qrw returns integer
local integer arw=0
local integer nrw=23
loop
exitwhen arw>nrw
if GetPlayerName(wo[arw])==qrw then
return arw
endif
set arw=arw+1
endloop
return -1
endfunction
function orw takes nothing returns integer
local integer srw=0
local integer trw=0
local integer irw=23
local player Srw
local boolean crw
loop
exitwhen trw>irw
set Srw=wo[trw]
if GetPlayerSlotState(Srw)==PLAYER_SLOT_STATE_PLAYING then
set crw=GetPlayerController(Srw)==MAP_CONTROL_USER
else
set crw=false
endif
if crw then
set srw=srw+1
endif
set trw=trw+1
endloop
set Srw=null
return R2I((srw-1)*1./2)+1
endfunction
function erw takes integer Orw returns nothing
local string lrw
local force brw
local string yrw
local force prw
if Orw<0 then
set brw=null
set prw=null
return
endif
if wO[Orw]>=orw() then
call CustomDefeatBJ(wo[Orw],"You've been kicked from the game!")
set lrw="The player "+TB(wo[Orw])+" has been kicked with the power of democracy!"
set brw=bj_FORCE_ALL_PLAYERS
if IsPlayerInForce(GetLocalPlayer(),brw) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,10.0,lrw)
endif
else
set yrw=I2S(wO[Orw])+" |cffff0000out of|r "+I2S(orw())+" |cffff0000voted to kick the player|r "+TB(wo[Orw])+"! |cff00ffdd(player number is "+I2S(Orw)+")|r"
set prw=bj_FORCE_ALL_PLAYERS
if IsPlayerInForce(GetLocalPlayer(),prw) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,10.0,yrw)
endif
endif
set brw=null
set prw=null
endfunction
function Zrw takes player Grw,string grw,string hrw returns nothing
local integer Frw
local integer krw
local integer jrw
local boolean xrw
local integer vrw
local integer mrw
local integer Qrw
local boolean Wrw
local boolean Erw
set Cb[Xb]=hrw
set Xb=Xb+1
if StringLength(grw)<=2 then
set Wrw=S2I(grw)>0
else
set Wrw=false
endif
if Wrw then
set Erw=S2I(grw)<24
else
set Erw=false
endif
if Erw then
set Frw=S2I(grw)
else
set krw=rO
set jrw=Oww(grw,"when calling stringToIndex in VoteKick, line 77")
set Cb[Xb]="when calling has in VoteKick, line 77"
set Xb=Xb+1
if Sl[krw]==0 then
if krw==0 then
call l1("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call l1("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set xrw=Ubw(krw,jrw)
set Xb=Xb-1
if xrw then
set vrw=rO
set mrw=Oww(grw,"when calling stringToIndex in VoteKick, line 78")
set Cb[Xb]="when calling indexOf in VoteKick, line 78"
set Xb=Xb+1
if Sl[vrw]==0 then
if vrw==0 then
call l1("Nullpointer exception when calling LinkedList.indexOf","when calling error in LinkedList, line 54")
else
call l1("Called LinkedList.indexOf on invalid object.","when calling error in LinkedList, line 54")
endif
endif
set Qrw=Qbw(vrw,mrw)
set Xb=Xb-1
set Frw=Qrw
elseif drw(grw)!=-1 then
set Frw=drw(grw)
else
set Cb[Xb]="when calling noteToPlayer in VoteKick, line 82"
set Xb=Xb+1
call DisplayTimedTextToPlayer(Grw,0.,0.,10.0,L2(Grw,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(Grw,0.,0.,10.0,"Couldn't find player: '"+grw+"'")
set Xb=Xb-1-1
return
endif
endif
call Yrw(Frw,Grw,"when calling addVote in VoteKick, line 85")
call erw(Frw)
set Xb=Xb-1
endfunction
function sqw takes integer Aew,string Dew returns nothing
local integer Hew
local integer Jew
local integer Kew
local integer Lew
local player Xew
local integer Cew
local integer Vew
local player Bew
local integer New
local player Mew
local fogstate wqw
local location uqw
local rect rqw
set Cb[Xb]=Dew
set Xb=Xb+1
set Jb[Aew]=true
set Hew=GetPlayerId(Pb[Aew])
set Jew=0
set Kew=23
loop
exitwhen Jew>Kew
set Lew=Mc[Jew]
set Xew=Pb[Aew]
set Cew=bj_ALLIANCE_UNALLIED
set Dew="when calling setAlliance in PlayerStats, line 37"
set Cb[Xb]="when calling setAlliance in PlayerStats, line 37"
set Xb=Xb+1
if yl[Lew]==0 then
if Lew==0 then
call l1("Nullpointer exception when calling PlayerStats.setAlliance","when calling error in PlayerStats, line 55")
else
call l1("Called PlayerStats.setAlliance on invalid object.","when calling error in PlayerStats, line 55")
endif
endif
call Oqw(Lew,Xew,Cew,"when calling setAlliance in PlayerStats, line 55")
set Xb=Xb-1
set Vew=Mc[Hew]
set Bew=wo[Jew]
set New=bj_ALLIANCE_UNALLIED
set Cb[Xb]="when calling setAlliance in PlayerStats, line 38"
set Xb=Xb+1
if yl[Vew]==0 then
if Vew==0 then
call l1("Nullpointer exception when calling PlayerStats.setAlliance","when calling error in PlayerStats, line 55")
else
call l1("Called PlayerStats.setAlliance on invalid object.","when calling error in PlayerStats, line 55")
endif
endif
call Oqw(Vew,Bew,New,"when calling setAlliance in PlayerStats, line 55")
set Xb=Xb-1
set Jew=Jew+1
endloop
set Mew=Pb[Aew]
set wqw=FOG_OF_WAR_VISIBLE
set rqw=bj_mapInitialPlayableArea
set uqw=Location(GetRectCenterX(rqw),GetRectCenterY(rqw))
set bj_lastCreatedFogModifier=CreateFogModifierRadiusLoc(Mew,wqw,uqw,999999.00,true,false)
call FogModifierStart(bj_lastCreatedFogModifier)
set Xb=Xb-1
set Xew=null
set Bew=null
set Mew=null
set wqw=null
set uqw=null
set rqw=null
endfunction
function IN takes string DB returns nothing
local string HB
local string array JB
local string KB
local player LB
local integer XB
local integer CB
local integer VB
local string BB
local integer NB
local boolean MB
local group wN
local player uN
local camerafield rN
local player sN
local camerafield tN
local integer iN
local integer SN
local integer cN
local unit oN
local integer ON
local integer lN
local integer bN
local integer yN
local integer pN
local integer eN
local integer qN
local integer aN
local integer nN
local integer dN
local integer fN
local player RN
local camerafield TN
local real YN
local integer GN
local boolean gN
local group hN
local unit FN
local integer kN
local string jN
local force xN
local integer vN
local integer mN
local integer QN
local real WN
local boolean EN
local boolean ZN
local boolean UN
set Cb[Xb]=DB
set Xb=Xb+1
set HB=GetEventPlayerChatString()
set KB=""
set LB=GetTriggerPlayer()
set XB=0
set CB=1
set VB=StringLength(HB)
loop
exitwhen CB>VB
set DB=SubString(HB,CB,CB+1)
if XB>0 then
set EN=CB>StringLength(JB[0])+1
else
set EN=false
endif
if EN then
set KB=KB+DB
endif
if DB!=" " then
set JB[XB]=JB[XB]+DB
else
set XB=XB+1
endif
set CB=CB+1
endloop
if JB[0]=="far" then
set uN=GetTriggerPlayer()
set rN=CAMERA_FIELD_TARGET_DISTANCE
if GetLocalPlayer()==uN then
call SetCameraField(rN,3000.0,0.)
endif
elseif JB[0]=="med" then
set sN=GetTriggerPlayer()
set tN=CAMERA_FIELD_TARGET_DISTANCE
if GetLocalPlayer()==sN then
call SetCameraField(tN,2300.0,0.)
endif
elseif JB[0]=="name" then
call SetPlayerName(GetTriggerPlayer(),SubString(KB,0,40))
elseif JB[0]=="rename" then
set iN=Mc[GetPlayerId(LB)]
set Cb[Xb]="when calling getSelectedCityId in Commands, line 51"
set Xb=Xb+1
if yl[iN]==0 then
if iN==0 then
call l1("Nullpointer exception when calling PlayerStats.getSelectedCityId","when calling error in PlayerStats, line 112")
else
call l1("Called PlayerStats.getSelectedCityId on invalid object.","when calling error in PlayerStats, line 112")
endif
endif
set SN=Db[iN]
set Xb=Xb-1
if SN>=0 and SN<nS then
set cN=hS[SN]
set Cb[Xb]="when calling getCityUnit in Commands, line 53"
set Xb=Xb+1
if pO[cN]==0 then
if cN==0 then
call l1("Nullpointer exception when calling City.getCityUnit","when calling error in City, line 188")
else
call l1("Called City.getCityUnit on invalid object.","when calling error in City, line 188")
endif
endif
set oN=xl[cN]
set Xb=Xb-1
if GetOwningPlayer(oN)!=LB then
set Cb[Xb]="when calling noteToPlayer in Commands, line 54"
set Xb=Xb+1
call DisplayTimedTextToPlayer(LB,0.,0.,10.0,L2(LB,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(LB,0.,0.,10.0,"The city you wanted to rename so eagerly doesn't belong to you!")
set Xb=Xb-1
else
call Maw(hS[SN],KB,"when calling changeCityName in Commands, line 56")
endif
endif
elseif JB[0]=="add_mod" then
set ON=Mc[GetPlayerId(LB)]
set Cb[Xb]="when calling getSelectedCityId in Commands, line 58"
set Xb=Xb+1
if yl[ON]==0 then
if ON==0 then
call l1("Nullpointer exception when calling PlayerStats.getSelectedCityId","when calling error in PlayerStats, line 112")
else
call l1("Called PlayerStats.getSelectedCityId on invalid object.","when calling error in PlayerStats, line 112")
endif
endif
set lN=Db[ON]
set Xb=Xb-1
if not gc then
set Xb=Xb-1
set LB=null
set wN=null
set uN=null
set rN=null
set sN=null
set tN=null
set oN=null
set RN=null
set TN=null
set hN=null
set FN=null
set xN=null
return
endif
if lN>=0 and lN<nS then
set BB=JB[1]
if BB=="massacred_pop" then
set bN=hS[lN]
set Cb[Xb]="when calling addModifier in Commands, line 64"
set Xb=Xb+1
if pO[bN]==0 then
if bN==0 then
call l1("Nullpointer exception when calling City.addModifier","when calling error in City, line 368")
else
call l1("Called City.addModifier on invalid object.","when calling error in City, line 368")
endif
endif
call ctw(bN,6,"when calling addModifier in City, line 368")
set Xb=Xb-1
elseif BB=="recently_conquered" then
set yN=hS[lN]
set Cb[Xb]="when calling addModifier in Commands, line 66"
set Xb=Xb+1
if pO[yN]==0 then
if yN==0 then
call l1("Nullpointer exception when calling City.addModifier","when calling error in City, line 368")
else
call l1("Called City.addModifier on invalid object.","when calling error in City, line 368")
endif
endif
call ctw(yN,0,"when calling addModifier in City, line 368")
set Xb=Xb-1
elseif BB=="recently_revolted" then
set pN=hS[lN]
set Cb[Xb]="when calling addModifier in Commands, line 68"
set Xb=Xb+1
if pO[pN]==0 then
if pN==0 then
call l1("Nullpointer exception when calling City.addModifier","when calling error in City, line 368")
else
call l1("Called City.addModifier on invalid object.","when calling error in City, line 368")
endif
endif
call ctw(pN,1,"when calling addModifier in City, line 368")
set Xb=Xb-1
elseif BB=="more_trade_estabilished" then
set eN=hS[lN]
set Cb[Xb]="when calling addModifier in Commands, line 70"
set Xb=Xb+1
if pO[eN]==0 then
if eN==0 then
call l1("Nullpointer exception when calling City.addModifier","when calling error in City, line 368")
else
call l1("Called City.addModifier on invalid object.","when calling error in City, line 368")
endif
endif
call ctw(eN,5,"when calling addModifier in City, line 368")
set Xb=Xb-1
elseif BB=="on_fire" then
set qN=hS[lN]
set Cb[Xb]="when calling addModifier in Commands, line 72"
set Xb=Xb+1
if pO[qN]==0 then
if qN==0 then
call l1("Nullpointer exception when calling City.addModifier","when calling error in City, line 368")
else
call l1("Called City.addModifier on invalid object.","when calling error in City, line 368")
endif
endif
call ctw(qN,4,"when calling addModifier in City, line 368")
set Xb=Xb-1
elseif BB=="plague_outburst" then
set aN=hS[lN]
set Cb[Xb]="when calling addModifier in Commands, line 74"
set Xb=Xb+1
if pO[aN]==0 then
if aN==0 then
call l1("Nullpointer exception when calling City.addModifier","when calling error in City, line 368")
else
call l1("Called City.addModifier on invalid object.","when calling error in City, line 368")
endif
endif
call ctw(aN,3,"when calling addModifier in City, line 368")
set Xb=Xb-1
elseif BB=="population_boom" then
set nN=hS[lN]
set Cb[Xb]="when calling addModifier in Commands, line 76"
set Xb=Xb+1
if pO[nN]==0 then
if nN==0 then
call l1("Nullpointer exception when calling City.addModifier","when calling error in City, line 368")
else
call l1("Called City.addModifier on invalid object.","when calling error in City, line 368")
endif
endif
call ctw(nN,2,"when calling addModifier in City, line 368")
set Xb=Xb-1
elseif BB=="prospering" then
set dN=hS[lN]
set Cb[Xb]="when calling addModifier in Commands, line 78"
set Xb=Xb+1
if pO[dN]==0 then
if dN==0 then
call l1("Nullpointer exception when calling City.addModifier","when calling error in City, line 368")
else
call l1("Called City.addModifier on invalid object.","when calling error in City, line 368")
endif
endif
call ctw(dN,7,"when calling addModifier in City, line 368")
set Xb=Xb-1
elseif BB=="sieged" then
set fN=hS[lN]
set Cb[Xb]="when calling addModifier in Commands, line 80"
set Xb=Xb+1
if pO[fN]==0 then
if fN==0 then
call l1("Nullpointer exception when calling City.addModifier","when calling error in City, line 368")
else
call l1("Called City.addModifier on invalid object.","when calling error in City, line 368")
endif
endif
call ctw(fN,8,"when calling addModifier in City, line 368")
set Xb=Xb-1
endif
endif
elseif JB[0]=="непереводимоесочетаниебукв" then
set gc=not gc
set Gc=not Gc
call t2(LB)
elseif JB[0]=="votekick" then
call Zrw(LB,KB,"when calling voteKick in Commands, line 86")
elseif JB[0]=="zoom" then
set NB=S2I(JB[1])
set RN=GetTriggerPlayer()
set TN=CAMERA_FIELD_TARGET_DISTANCE
set YN=NB*1.
if GetLocalPlayer()==RN then
call SetCameraField(TN,YN,0.)
endif
elseif JB[0]=="observe" then
set GN=Mc[GetPlayerId(LB)]
set Cb[Xb]="when calling isObserver in Commands, line 91"
set Xb=Xb+1
if yl[GN]==0 then
if GN==0 then
call l1("Nullpointer exception when calling PlayerStats.isObserver","when calling error in PlayerStats, line 29")
else
call l1("Called PlayerStats.isObserver on invalid object.","when calling error in PlayerStats, line 29")
endif
endif
set gN=Jb[GN]
set Xb=Xb-1
if not gN then
set MB=true
set hN=CreateGroup()
call GroupEnumUnitsOfPlayer(hN,LB,null)
call DestroyBoolExpr(null)
set qc=CreateGroup()
call ForGroup(hN,Pf)
set wN=qc
loop
exitwhen FirstOfGroup(wN)==null
set FN=FirstOfGroup(wN)
call GroupRemoveUnit(wN,FN)
if not IsUnitHidden(FN) then
set ZN=GetUnitTypeId(FN)!=1211118391
else
set ZN=false
endif
if ZN then
set UN=GetUnitTypeId(FN)!=1211118406
else
set UN=false
endif
if UN then
set MB=false
endif
endloop
call GroupClear(wN)
call DestroyGroup(wN)
if MB then
set kN=Mc[GetPlayerId(LB)]
set Cb[Xb]="when calling becomeObserver in Commands, line 98"
set Xb=Xb+1
if yl[kN]==0 then
if kN==0 then
call l1("Nullpointer exception when calling PlayerStats.becomeObserver","when calling error in PlayerStats, line 32")
else
call l1("Called PlayerStats.becomeObserver on invalid object.","when calling error in PlayerStats, line 32")
endif
endif
call sqw(kN,"when calling becomeObserver in PlayerStats, line 32")
set Xb=Xb-1
set jN=TB(LB)+" has just became an observer."
set xN=bj_FORCE_ALL_PLAYERS
if IsPlayerInForce(GetLocalPlayer(),xN) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,10.0,jN)
endif
else
set Cb[Xb]="when calling noteToPlayer in Commands, line 101"
set Xb=Xb+1
call DisplayTimedTextToPlayer(LB,0.,0.,10.0,L2(LB,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(LB,0.,0.,10.0,"To become an observer, you should have no units!")
set Xb=Xb-1
endif
endif
elseif JB[0]=="add_po" then
if not gc then
set Xb=Xb-1
set LB=null
set wN=null
set uN=null
set rN=null
set sN=null
set tN=null
set oN=null
set RN=null
set TN=null
set hN=null
set FN=null
set xN=null
return
endif
set vN=Mc[GetPlayerId(LB)]
set Cb[Xb]="when calling getSelectedCityId in Commands, line 105"
set Xb=Xb+1
if yl[vN]==0 then
if vN==0 then
call l1("Nullpointer exception when calling PlayerStats.getSelectedCityId","when calling error in PlayerStats, line 112")
else
call l1("Called PlayerStats.getSelectedCityId on invalid object.","when calling error in PlayerStats, line 112")
endif
endif
set mN=Db[vN]
set Xb=Xb-1
if mN>=0 and mN<nS then
set QN=hS[mN]
set WN=S2R(JB[1])
set Cb[Xb]="when calling addPublicOrder in Commands, line 107"
set Xb=Xb+1
if pO[QN]==0 then
if QN==0 then
call l1("Nullpointer exception when calling City.addPublicOrder","when calling error in City, line 332")
else
call l1("Called City.addPublicOrder on invalid object.","when calling error in City, line 332")
endif
endif
set Dl[QN]=Dl[QN]+WN
set Xb=Xb-1
endif
else
set Cb[Xb]="when calling noteToPlayer in Commands, line 109"
set Xb=Xb+1
call DisplayTimedTextToPlayer(LB,0.,0.,10.0,L2(LB,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(LB,0.,0.,10.0,"Couldn't find command: '"+JB[0]+"'")
set Xb=Xb-1
endif
set Xb=Xb-1
set LB=null
set wN=null
set uN=null
set rN=null
set sN=null
set tN=null
set oN=null
set RN=null
set TN=null
set hN=null
set FN=null
set xN=null
endfunction
function qGw takes nothing returns nothing
set Xb=0
call IN("Commands, line 118")
endfunction
function eL takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990327 then
return false
endif
return true
endfunction
function qL takes nothing returns boolean
if not eL() then
return false
endif
return true
endfunction
function qP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990322,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990105,0)
endfunction
function eU takes nothing returns boolean
if GetResearched()!=1378890037 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890037,true)!=1 then
return false
endif
return true
endfunction
function qU takes nothing returns boolean
if not eU() then
return false
endif
return true
endfunction
function eW takes nothing returns boolean
if GetResearched()!=1378889800 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889800,true)!=2 then
return false
endif
return true
endfunction
function qW takes nothing returns boolean
if not eW() then
return false
endif
return true
endfunction
function qX takes nothing returns boolean
return true
endfunction
function initializeTable takes string stackPos returns nothing
local integer i_2
local integer this
local integer parentKey
set Cb[Xb]=stackPos
set Xb=Xb+1
set i_2=0
loop
exitwhen i_2>15
set this=BS
set parentKey=StringHash(VS[i_2])
set stackPos="when calling saveInt in Colors, line 206"
set Cb[Xb]="when calling saveInt in Colors, line 206"
set Xb=Xb+1
if AO[this]==0 then
if this==0 then
call l1("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call l1("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Wo,this,parentKey,i_2)
set Xb=Xb-1
set i_2=i_2+1
endloop
set Xb=Xb-1
endfunction
function pB takes string yB returns boolean
set Cb[Xb]=yB
set Xb=Xb+1
set LS[0]=255
set XS[0]=2
set CS[0]=2
set LS[1]=0
set XS[1]=65
set CS[1]=255
set LS[2]=27
set XS[2]=229
set CS[2]=184
set LS[3]=83
set XS[3]=0
set CS[3]=128
set LS[4]=255
set XS[4]=252
set CS[4]=0
set LS[5]=254
set XS[5]=137
set CS[5]=13
set LS[6]=31
set XS[6]=191
set CS[6]=0
set LS[7]=228
set XS[7]=90
set CS[7]=175
set LS[8]=148
set XS[8]=149
set CS[8]=150
set LS[9]=125
set XS[9]=190
set CS[9]=241
set LS[10]=15
set XS[10]=97
set CS[10]=69
set LS[11]=77
set XS[11]=41
set CS[11]=3
set LS[12]=155
set XS[12]=0
set CS[12]=0
set LS[13]=0
set XS[13]=0
set CS[13]=195
set LS[14]=0
set XS[14]=234
set CS[14]=255
set LS[15]=190
set XS[15]=0
set CS[15]=254
set LS[16]=235
set XS[16]=205
set CS[16]=135
set LS[17]=248
set XS[17]=164
set CS[17]=139
set LS[18]=191
set XS[18]=255
set CS[18]=128
set LS[19]=220
set XS[19]=185
set CS[19]=235
set LS[20]=40
set XS[20]=40
set CS[20]=40
set LS[21]=235
set XS[21]=240
set CS[21]=255
set LS[22]=0
set XS[22]=120
set CS[22]=30
set LS[23]=164
set XS[23]=11
set CS[23]=51
set VS[0]="0"
set VS[1]="1"
set VS[2]="2"
set VS[3]="3"
set VS[4]="4"
set VS[5]="5"
set VS[6]="6"
set VS[7]="7"
set VS[8]="8"
set VS[9]="9"
set VS[10]="A"
set VS[11]="B"
set VS[12]="C"
set VS[13]="D"
set VS[14]="E"
set VS[15]="F"
set BS=saw("when calling new_Table in Colors, line 154")
call initializeTable("when calling initializeTable in Colors, line 209")
set Xb=Xb-1
return true
endfunction
function qYw takes nothing returns boolean
set Xb=0
return pB("Colors, line 1")
endfunction
function qZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989560,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989579,0)
endfunction
function uE takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function rE takes nothing returns boolean
if not uE() then
return false
endif
return true
endfunction
function X8 takes string H8 returns boolean
local playerunitevent J8
local integer K8
local integer L8
set Cb[Xb]=H8
set Xb=Xb+1
set J8=EVENT_PLAYER_UNIT_CONSTRUCT_START
set Cb[Xb]="when calling alloc_NoShipsNearRivers_EventListener_line7 in NoShipsNearRivers, line 7"
set Xb=Xb+1
if tO==0 then
if iO<32768 then
set iO=iO+1
set K8=iO
set SO[K8]=675
else
call l1("Out of memory: Could not create NoShipsNearRivers_EventListener_line7.","when calling error in NoShipsNearRivers, line 7")
set K8=0
endif
else
set tO=tO-1
set K8=sO[tO]
set SO[K8]=675
endif
set Xb=Xb-1
set ub[K8]=0
set rb[K8]=0
set sb[K8]=0
set Cb[Xb]="when calling add in NoShipsNearRivers, line 7"
set Xb=Xb+1
set Cb[Xb]="when calling toIntId in ClosureEvents, line 112"
set Xb=Xb+1
set L8=vS[GetHandleId(J8)]
if L8==0 then
set L8=nV(J8,"when calling registerEventId in ClosureEvents, line 229")
endif
set Xb=Xb-1
set ub[K8]=L8
if ES[ub[K8]]!=0 then
set sb[ES[ub[K8]]]=K8
set rb[K8]=ES[ub[K8]]
endif
set ES[ub[K8]]=K8
set Xb=Xb-1-1
set J8=null
return true
endfunction
function rGw takes nothing returns boolean
set Xb=0
return X8("NoShipsNearRivers, line 1")
endfunction
function rH takes nothing returns nothing
local integer CD=1
local integer VD=1747988787
local player BD=GetOwningPlayer(GetConstructedStructure())
local rect uH=bj_mapInitialPlayableArea
local location wH=Location(GetRectCenterX(uH),GetRectCenterY(uH))
local location ND=Location(GetLocationX(wH)+100000000.00,GetLocationY(wH)+1000000000.00)
local real MD=bj_UNIT_FACING
call GroupClear(bj_lastCreatedGroup)
loop
set CD=CD-1
exitwhen CD<0
call CreateUnitAtLocSaveLast(BD,VD,ND,MD)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
call UnitRemoveAbility(bj_lastCreatedUnit,1093677905)
call ShowUnit(bj_lastCreatedUnit,false)
set e[GetPlayerId(GetOwningPlayer(GetConstructedStructure()))+1]=true
set BD=null
set ND=null
set wH=null
set uH=null
endfunction
function rL takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function rU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989825,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989817,0)
endfunction
function rW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989082,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989072,0)
endfunction
function rj takes nothing returns boolean
if GetUnitTypeId(GetDyingUnit())!=1747988792 then
return false
endif
return true
endfunction
function rx takes nothing returns boolean
if GetUnitTypeId(GetDyingUnit())!=1747988793 then
return false
endif
return true
endfunction
function rD takes nothing returns boolean
if GetResearched()!=1378890052 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890052,true)!=2 then
return false
endif
return true
endfunction
function sD takes nothing returns boolean
if not rD() then
return false
endif
return true
endfunction
function sE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989812,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989811,0)
endfunction
function M8 takes string C8 returns boolean
local playerunitevent V8
local integer B8
local integer N8
set Cb[Xb]=C8
set Xb=Xb+1
set Xc=Jlw("when calling new_HashSet in NoStarvationOnBoat, line 6")
set V8=EVENT_PLAYER_UNIT_ISSUED_ORDER
set Cb[Xb]="when calling alloc_NoStarvationOnBoat_EventListener_line9 in NoStarvationOnBoat, line 9"
set Xb=Xb+1
if tO==0 then
if iO<32768 then
set iO=iO+1
set B8=iO
set SO[B8]=676
else
call l1("Out of memory: Could not create NoStarvationOnBoat_EventListener_line9.","when calling error in NoStarvationOnBoat, line 9")
set B8=0
endif
else
set tO=tO-1
set B8=sO[tO]
set SO[B8]=676
endif
set Xb=Xb-1
set ub[B8]=0
set rb[B8]=0
set sb[B8]=0
set Cb[Xb]="when calling add in NoStarvationOnBoat, line 9"
set Xb=Xb+1
set Cb[Xb]="when calling toIntId in ClosureEvents, line 112"
set Xb=Xb+1
set N8=vS[GetHandleId(V8)]
if N8==0 then
set N8=nV(V8,"when calling registerEventId in ClosureEvents, line 229")
endif
set Xb=Xb-1
set ub[B8]=N8
if ES[ub[B8]]!=0 then
set sb[ES[ub[B8]]]=B8
set rb[B8]=ES[ub[B8]]
endif
set ES[ub[B8]]=B8
set Xb=Xb-1-1
set V8=null
return true
endfunction
function sGw takes nothing returns boolean
set Xb=0
return M8("NoStarvationOnBoat, line 1")
endfunction
function rK takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990356 then
return false
endif
return true
endfunction
function sK takes nothing returns boolean
if not rK() then
return false
endif
return true
endfunction
function rQ takes nothing returns boolean
if GetResearched()!=1378889802 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889802,true)!=1 then
return false
endif
return true
endfunction
function sQ takes nothing returns boolean
if not rQ() then
return false
endif
return true
endfunction
function tD takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990601,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990599,0)
endfunction
function S9 takes string r9 returns boolean
local playerevent s9
local integer t9
local integer i9
set Cb[Xb]=r9
set Xb=Xb+1
set s9=EVENT_PLAYER_LEAVE
set Cb[Xb]="when calling alloc_OnPlayerLeave_EventListener_line5 in OnPlayerLeave, line 5"
set Xb=Xb+1
if tO==0 then
if iO<32768 then
set iO=iO+1
set t9=iO
set SO[t9]=677
else
call l1("Out of memory: Could not create OnPlayerLeave_EventListener_line5.","when calling error in OnPlayerLeave, line 5")
set t9=0
endif
else
set tO=tO-1
set t9=sO[tO]
set SO[t9]=677
endif
set Xb=Xb-1
set ub[t9]=0
set rb[t9]=0
set sb[t9]=0
set Cb[Xb]="when calling add in OnPlayerLeave, line 5"
set Xb=Xb+1
set Cb[Xb]="when calling toIntId in ClosureEvents, line 112"
set Xb=Xb+1
set i9=vS[GetHandleId(s9)]
if i9==0 then
set i9=nV(s9,"when calling registerEventId in ClosureEvents, line 229")
endif
set Xb=Xb-1
set ub[t9]=i9
if ES[ub[t9]]!=0 then
set sb[ES[ub[t9]]]=t9
set rb[t9]=ES[ub[t9]]
endif
set ES[ub[t9]]=t9
set Xb=Xb-1-1
set s9=null
return true
endfunction
function tGw takes nothing returns boolean
set Xb=0
return S9("OnPlayerLeave, line 1")
endfunction
function tK takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function tQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651824,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651825,0)
endfunction
function sY takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989045 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function tY takes nothing returns boolean
if not sY() then
return false
endif
return true
endfunction
function u4 takes nothing returns boolean
set Gc=false
set gc=false
set hc=CreateTimer()
call TimerStart(hc,0.01,true,Jf)
return true
endfunction
function u9 takes nothing returns boolean
return true
endfunction
function R5 takes string q5 returns boolean
local integer a5
local timer n5
local integer d5
local timer f5
set Cb[Xb]=q5
set Xb=Xb+1
set Cb[Xb]="when calling alloc_MultiboardCityUpdate_CallbackSingle_line18 in MultiboardCityUpdate, line 18"
set Xb=Xb+1
if fO==0 then
if RO<32768 then
set RO=RO+1
set a5=RO
set TO[a5]=648
else
call l1("Out of memory: Could not create MultiboardCityUpdate_CallbackSingle_line18.","when calling error in MultiboardCityUpdate, line 18")
set a5=0
endif
else
set fO=fO-1
set a5=dO[fO]
set TO[a5]=648
endif
set Xb=Xb-1
set Cb[Xb]="when calling doAfter in MultiboardCityUpdate, line 18"
set Xb=Xb+1
set n5=Xww("when calling getTimer in ClosureTimers, line 27")
set Cb[Xb]="when calling doAfter in ClosureTimers, line 27"
set Xb=Xb+1
call odw(a5,n5,0.01,"when calling start in ClosureTimers, line 16")
set Xb=Xb-1-1
set Cb[Xb]="when calling alloc_MultiboardCityUpdate_CallbackPeriodic_line25 in MultiboardCityUpdate, line 25"
set Xb=Xb+1
if GO==0 then
if gO<32768 then
set gO=gO+1
set d5=gO
set hO[d5]=637
else
call l1("Out of memory: Could not create MultiboardCityUpdate_CallbackPeriodic_line25.","when calling error in MultiboardCityUpdate, line 25")
set d5=0
endif
else
set GO=GO-1
set d5=YO[GO]
set hO[d5]=637
endif
set Xb=Xb-1
set Cb[Xb]="when calling doPeriodically in MultiboardCityUpdate, line 25"
set Xb=Xb+1
set f5=Xww("when calling getTimer in ClosureTimers, line 57")
set Cb[Xb]="when calling doPeriodically in ClosureTimers, line 57"
set Xb=Xb+1
call Bnw(d5,f5,1.0,"when calling start in ClosureTimers, line 45")
set Xb=Xb-1-1-1
set n5=null
set f5=null
return true
endfunction
function uGw takes nothing returns boolean
set Xb=0
return R5("MultiboardCityUpdate, line 1")
endfunction
function wL takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747988530 then
return false
endif
return true
endfunction
function uL takes nothing returns boolean
if not wL() then
return false
endif
return true
endfunction
function uP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990324,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990325,0)
endfunction
function wU takes nothing returns boolean
if GetResearched()!=1378889818 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889818,true)!=1 then
return false
endif
return true
endfunction
function uU takes nothing returns boolean
if not wU() then
return false
endif
return true
endfunction
function wW takes nothing returns boolean
if GetResearched()!=1378889801 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889801,true)!=2 then
return false
endif
return true
endfunction
function uW takes nothing returns boolean
if not wW() then
return false
endif
return true
endfunction
function uZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651841,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651831,0)
endfunction
function uv takes nothing returns nothing
local player Hx=GetOwningPlayer(GetSpellTargetUnit())
local playerstate Jx=PLAYER_STATE_RESOURCE_GOLD
local playerstate Kx
local playerstate Lx
local player Xx
local force Cx
local location Vx
local real Bx
local real Nx
local player Mx
local force wv
if Jx==PLAYER_STATE_RESOURCE_GOLD then
set Kx=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(Hx,Kx,GetPlayerState(Hx,Kx)+500)
elseif Jx==PLAYER_STATE_RESOURCE_LUMBER then
set Lx=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(Hx,Lx,GetPlayerState(Hx,Lx)+500)
endif
call SetPlayerState(Hx,Jx,GetPlayerState(Hx,Jx)+500)
call RemoveUnit(GetSpellAbilityUnit())
set Xx=GetOwningPlayer(GetSpellTargetUnit())
set Cx=CreateForce()
call ForceAddPlayer(Cx,Xx)
if IsPlayerInForce(GetLocalPlayer(),Cx) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_1234")
endif
set y=GetUnitLoc(GetSpellTargetUnit())
set Mx=GetOwningPlayer(GetSpellTargetUnit())
set wv=CreateForce()
call ForceAddPlayer(wv,Mx)
set Vx=y
set Bx=GetLocationX(Vx)
set Nx=GetLocationY(Vx)
if IsPlayerInForce(GetLocalPlayer(),wv) then
call PingMinimap(Bx,Nx,2.00)
endif
call RemoveLocation(y)
set Hx=null
set Jx=null
set Kx=null
set Lx=null
set Xx=null
set Cx=null
set Vx=null
set Mx=null
set wv=null
endfunction
function v2 takes nothing returns boolean
return true
endfunction
function xE takes nothing returns boolean
if GetResearched()!=1378889807 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889807,true)!=2 then
return false
endif
return true
endfunction
function vE takes nothing returns boolean
if not xE() then
return false
endif
return true
endfunction
function jF takes nothing returns boolean
if GetUnitTypeId(GetSpellTargetUnit())==1747988787 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747990361 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747989831 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747989040 then
return true
endif
return false
endfunction
function xF takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988792 then
return false
endif
if not jF() then
return false
endif
return true
endfunction
function vF takes nothing returns boolean
if not xF() then
return false
endif
return true
endfunction
function vL takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function vU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989815,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989838,0)
endfunction
function vV takes nothing returns nothing
call TriggerRegisterUnitEvent(kS,Do[Ho-1],EVENT_UNIT_DAMAGED)
endfunction
function vW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651843,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651842,0)
endfunction
function gX takes string YX returns boolean
local integer GX
set Cb[Xb]=YX
set Xb=Xb+1
set iS=Olw("when calling new_HashMap in CityBaseTaxes, line 5")
set GX=iS
set Cb[Xb]="when calling saveInt in CityBaseTaxes, line 9"
set Xb=Xb+1
if AO[GX]==0 then
if GX==0 then
call l1("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call l1("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Wo,GX,1747988529,20)
set Xb=Xb-1
set Cb[Xb]="when calling saveInt in CityBaseTaxes, line 10"
set Xb=Xb+1
if AO[GX]==0 then
if GX==0 then
call l1("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call l1("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Wo,GX,1747988530,50)
set Xb=Xb-1
set Cb[Xb]="when calling saveInt in CityBaseTaxes, line 11"
set Xb=Xb+1
if AO[GX]==0 then
if GX==0 then
call l1("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call l1("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Wo,GX,1747988531,120)
set Xb=Xb-1
set Cb[Xb]="when calling saveInt in CityBaseTaxes, line 12"
set Xb=Xb+1
if AO[GX]==0 then
if GX==0 then
call l1("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call l1("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Wo,GX,1747990326,20)
set Xb=Xb-1
set Cb[Xb]="when calling saveInt in CityBaseTaxes, line 13"
set Xb=Xb+1
if AO[GX]==0 then
if GX==0 then
call l1("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call l1("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Wo,GX,1747990327,50)
set Xb=Xb-1
set Cb[Xb]="when calling saveInt in CityBaseTaxes, line 14"
set Xb=Xb+1
if AO[GX]==0 then
if GX==0 then
call l1("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call l1("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Wo,GX,1747990328,120)
set Xb=Xb-1
set Cb[Xb]="when calling saveInt in CityBaseTaxes, line 15"
set Xb=Xb+1
if AO[GX]==0 then
if GX==0 then
call l1("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call l1("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Wo,GX,1747990084,20)
set Xb=Xb-1
set Cb[Xb]="when calling saveInt in CityBaseTaxes, line 16"
set Xb=Xb+1
if AO[GX]==0 then
if GX==0 then
call l1("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call l1("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Wo,GX,1747990087,50)
set Xb=Xb-1
set Cb[Xb]="when calling saveInt in CityBaseTaxes, line 17"
set Xb=Xb+1
if AO[GX]==0 then
if GX==0 then
call l1("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call l1("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Wo,GX,1747990086,120)
set Xb=Xb-1
set Cb[Xb]="when calling saveInt in CityBaseTaxes, line 18"
set Xb=Xb+1
if AO[GX]==0 then
if GX==0 then
call l1("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call l1("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Wo,GX,1747989590,20)
set Xb=Xb-1
set Cb[Xb]="when calling saveInt in CityBaseTaxes, line 19"
set Xb=Xb+1
if AO[GX]==0 then
if GX==0 then
call l1("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call l1("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Wo,GX,1747989591,50)
set Xb=Xb-1
set Cb[Xb]="when calling saveInt in CityBaseTaxes, line 20"
set Xb=Xb+1
if AO[GX]==0 then
if GX==0 then
call l1("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call l1("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Wo,GX,1747989592,120)
set Xb=Xb-1
set Cb[Xb]="when calling saveInt in CityBaseTaxes, line 22"
set Xb=Xb+1
if AO[GX]==0 then
if GX==0 then
call l1("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call l1("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Wo,GX,1747989555,5)
set Xb=Xb-1
set Cb[Xb]="when calling saveInt in CityBaseTaxes, line 23"
set Xb=Xb+1
if AO[GX]==0 then
if GX==0 then
call l1("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call l1("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Wo,GX,1747989297,10)
set Xb=Xb-1
set Cb[Xb]="when calling saveInt in CityBaseTaxes, line 24"
set Xb=Xb+1
if AO[GX]==0 then
if GX==0 then
call l1("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call l1("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Wo,GX,1747989325,30)
set Xb=Xb-1-1
return true
endfunction
function vYw takes nothing returns boolean
set Xb=0
return gX("CityBaseTaxes, line 1")
endfunction
function vww_2 takes nothing returns boolean
return true
endfunction
function w0w takes nothing returns boolean
return true
endfunction
function w4 takes nothing returns boolean
return true
endfunction
function w9 takes nothing returns boolean
return true
endfunction
function f2 takes string c2 returns boolean
local playerunitevent o2
local playerunitevent O2
local integer l2
local integer b2
local integer y2
local integer p2
local integer e2
local integer q2
local integer a2
local integer n2
local integer d2
set Cb[Xb]=c2
set Xb=Xb+1
set Qc=Olw("when calling new_HashMap in MassControl, line 7")
set l2=R2I(500000)
set b2=R2I(700000)
set y2=R2I(1000000)
set Cb[Xb]="when calling asList in MassControl, line 8"
set Xb=Xb+1
set p2=Lbw("when calling new_LinkedList in LinkedList, line 391")
call Zfw(p2,l2,"when calling add in LinkedList, line 393")
call Zfw(p2,b2,"when calling add in LinkedList, line 393")
call Zfw(p2,y2,"when calling add in LinkedList, line 393")
set Xb=Xb-1
set Wc=p2
set Cb[Xb]="when calling asList in MassControl, line 14"
set Xb=Xb+1
set e2=Lbw("when calling new_LinkedList in LinkedList, line 391")
call Zfw(e2,1211118401,"when calling add in LinkedList, line 393")
call Zfw(e2,1211119699,"when calling add in LinkedList, line 393")
call Zfw(e2,1211119701,"when calling add in LinkedList, line 393")
call Zfw(e2,1211119700,"when calling add in LinkedList, line 393")
set Xb=Xb-1
set Ec=e2
set o2=EVENT_PLAYER_UNIT_SPELL_CAST
set Cb[Xb]="when calling alloc_MassControl_EventListener_line22 in MassControl, line 22"
set Xb=Xb+1
if tO==0 then
if iO<32768 then
set iO=iO+1
set q2=iO
set SO[q2]=673
else
call l1("Out of memory: Could not create MassControl_EventListener_line22.","when calling error in MassControl, line 22")
set q2=0
endif
else
set tO=tO-1
set q2=sO[tO]
set SO[q2]=673
endif
set Xb=Xb-1
set ub[q2]=0
set rb[q2]=0
set sb[q2]=0
set Cb[Xb]="when calling add in MassControl, line 22"
set Xb=Xb+1
set Cb[Xb]="when calling toIntId in ClosureEvents, line 112"
set Xb=Xb+1
set a2=vS[GetHandleId(o2)]
if a2==0 then
set a2=nV(o2,"when calling registerEventId in ClosureEvents, line 229")
endif
set Xb=Xb-1
set ub[q2]=a2
if ES[ub[q2]]!=0 then
set sb[ES[ub[q2]]]=q2
set rb[q2]=ES[ub[q2]]
endif
set ES[ub[q2]]=q2
set Xb=Xb-1
set O2=EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER
set Cb[Xb]="when calling alloc_MassControl_EventListener_line32 in MassControl, line 32"
set Xb=Xb+1
if tO==0 then
if iO<32768 then
set iO=iO+1
set n2=iO
set SO[n2]=674
else
call l1("Out of memory: Could not create MassControl_EventListener_line32.","when calling error in MassControl, line 32")
set n2=0
endif
else
set tO=tO-1
set n2=sO[tO]
set SO[n2]=674
endif
set Xb=Xb-1
set ub[n2]=0
set rb[n2]=0
set sb[n2]=0
set Cb[Xb]="when calling add in MassControl, line 32"
set Xb=Xb+1
set Cb[Xb]="when calling toIntId in ClosureEvents, line 112"
set Xb=Xb+1
set d2=vS[GetHandleId(O2)]
if d2==0 then
set d2=nV(O2,"when calling registerEventId in ClosureEvents, line 229")
endif
set Xb=Xb-1
set ub[n2]=d2
if ES[ub[n2]]!=0 then
set sb[ES[ub[n2]]]=n2
set rb[n2]=ES[ub[n2]]
endif
set ES[ub[n2]]=n2
set Xb=Xb-1-1
set o2=null
set O2=null
return true
endfunction
function wGw takes nothing returns boolean
set Xb=0
return f2("MassControl, line 1")
endfunction
function wI takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989826,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989828,0)
endfunction
function wM takes nothing returns boolean
local trigger VN=CreateTrigger()
local trigger BN=VN
local playerunitevent NN=EVENT_PLAYER_UNIT_SPELL_EFFECT
local integer MN=0
loop
call TriggerRegisterPlayerUnitEvent(BN,Player(MN),NN,null)
set MN=MN+1
exitwhen MN==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(VN,Condition(Af))
call TriggerAddAction(VN,Df)
set VN=null
set BN=null
set NN=null
return true
endfunction
function MI takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function wP takes nothing returns boolean
if not MI() then
return false
endif
return true
endfunction
function wX takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function ME takes nothing returns boolean
if GetResearched()!=1378889809 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889809,true)!=1 then
return false
endif
return true
endfunction
function wZ takes nothing returns boolean
if not ME() then
return false
endif
return true
endfunction
function x2 takes nothing returns boolean
return true
endfunction
function xG takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989047 then
return false
endif
return true
endfunction
function Bww takes timer Cww,string Vww returns nothing
set Cb[Xb]=Vww
set Xb=Xb+1
if Cww==null then
call l1("Trying to release a null timer","when calling error in TimerUtils, line 37")
set Xb=Xb-1
return
endif
if Jww_2(Cww,"when calling getData in TimerUtils, line 39")==679645218 then
call l1("ReleaseTimer: Double free!","when calling error in TimerUtils, line 40")
set Xb=Xb-1
return
endif
call Uww(Cww,679645218,"when calling setData in TimerUtils, line 42")
call PauseTimer(Cww)
set Eo[Zo]=Cww
set Zo=Zo+1
set Xb=Xb-1
endfunction
function iow takes integer sow,string tow returns nothing
set Cb[Xb]=tow
set Xb=Xb+1
set Cb[Xb]="when calling CallbackSingle_onDestroy in ClosureTimers, line 123"
set Xb=Xb+1
call Bww(ob[sow],"when calling release in ClosureTimers, line 124")
set Xb=Xb-1
set Cb[Xb]="when calling dealloc_CallbackSingle in ClosureTimers, line 123"
set Xb=Xb+1
if TO[sow]==0 then
call l1("Double free: object of type CallbackSingle","when calling error in ClosureTimers, line 107")
else
set dO[fO]=sow
set fO=fO+1
set TO[sow]=0
endif
set Xb=Xb-1-1
endfunction
function Hcw takes integer Pcw returns nothing
local integer Acw
local trigger Dcw
call TriggerAddAction(kS,Vf)
call TriggerAddAction(jS,Bf)
call TriggerAddAction(xS,Nf)
set Pcw=0
set Acw=bj_MAX_PLAYERS-1
loop
exitwhen Pcw>Acw
call TriggerRegisterPlayerEvent(jS,wo[Pcw],EVENT_PLAYER_LEAVE)
set Dcw=xS
call TriggerRegisterPlayerEvent(Dcw,wo[Pcw],EVENT_PLAYER_ARROW_DOWN_DOWN)
call TriggerRegisterPlayerEvent(Dcw,wo[Pcw],EVENT_PLAYER_ARROW_DOWN_UP)
call TriggerRegisterPlayerEvent(Dcw,wo[Pcw],EVENT_PLAYER_ARROW_UP_DOWN)
call TriggerRegisterPlayerEvent(Dcw,wo[Pcw],EVENT_PLAYER_ARROW_UP_UP)
call TriggerRegisterPlayerEvent(Dcw,wo[Pcw],EVENT_PLAYER_ARROW_LEFT_DOWN)
call TriggerRegisterPlayerEvent(Dcw,wo[Pcw],EVENT_PLAYER_ARROW_LEFT_UP)
call TriggerRegisterPlayerEvent(Dcw,wo[Pcw],EVENT_PLAYER_ARROW_RIGHT_DOWN)
call TriggerRegisterPlayerEvent(Dcw,wo[Pcw],EVENT_PLAYER_ARROW_RIGHT_UP)
call TriggerRegisterPlayerEvent(Dcw,wo[Pcw],EVENT_PLAYER_END_CINEMATIC)
call TriggerRegisterPlayerChatEvent(Dcw,wo[Pcw],"",false)
set Pcw=Pcw+1
endloop
call G0w(EVENT_PLAYER_UNIT_SPELL_EFFECT,null,Mf,null)
set Dcw=null
endfunction
function v8 takes multiboard g8,integer h8,integer F8,real k8,string j8 returns nothing
local multiboarditem x8=MultiboardGetItem(g8,F8,h8)
call MultiboardSetItemWidth(x8,k8)
call MultiboardSetItemValue(x8,j8)
set x8=null
endfunction
function W5 takes string T5 returns multiboard
local multiboard Y5
local integer G5
local integer g5
local integer h5
local integer F5
local integer k5
local integer j5
local integer x5
local integer v5
local string m5
local real Q5
set Cb[Xb]=T5
set Xb=Xb+1
set Y5=CreateMultiboardBJ(6,10,"Income: 2:00")
call MultiboardMinimize(Y5,true)
call MultiboardSetItemsStyle(Y5,true,false)
set G5=0
set g5=23
loop
exitwhen G5>g5
if uo==wo[G5]then
call MultiboardDisplay(Y5,false)
endif
set G5=G5+1
endloop
set h5=0
set F5=9
loop
exitwhen h5>F5
set k5=0
set j5=5
loop
exitwhen k5>j5
set Q5=ffw(Zc[h5],k5,"when calling get in MultiboardCityUpdate, line 14")/1000.
set x5=ffw(Kc[h5],k5,"when calling get in MultiboardCityUpdate, line 14")
set T5="when calling stringFromIndex in MultiboardCityUpdate, line 14"
set Cb[Xb]="when calling stringFromIndex in MultiboardCityUpdate, line 14"
set Xb=Xb+1
set v5=Io
set Cb[Xb]="when calling loadString in TypeCasting, line 35"
set Xb=Xb+1
if AO[v5]==0 then
if v5==0 then
call l1("Nullpointer exception when calling Table.loadString","when calling error in Table, line 57")
else
call l1("Called Table.loadString on invalid object.","when calling error in Table, line 57")
endif
endif
set m5=LoadStr(Wo,v5,x5)
set Xb=Xb-1-1
call v8(Y5,k5,h5,Q5,m5)
set k5=k5+1
endloop
set h5=h5+1
endloop
set Xb=Xb-1
set cR=Y5
set Y5=null
return cR
endfunction
function Myw takes integer Jyw,string Kyw returns nothing
local integer Lyw
local integer Xyw
local integer Cyw
local integer Vyw
local boolean Byw
local multiboard Nyw
set Cb[Xb]=Kyw
set Xb=Xb+1
set Lyw=0
set Xyw=23
loop
exitwhen Lyw>Xyw
set Vyw=Mc[Lyw]
set Kyw="when calling isInGame in MultiboardCityUpdate, line 20"
set Cb[Xb]="when calling isInGame in MultiboardCityUpdate, line 20"
set Xb=Xb+1
if yl[Vyw]==0 then
if Vyw==0 then
call l1("Nullpointer exception when calling PlayerStats.isInGame","when calling error in PlayerStats, line 42")
else
call l1("Called PlayerStats.isInGame on invalid object.","when calling error in PlayerStats, line 42")
endif
endif
set Byw=Ab[Vyw]
set Xb=Xb-1
if Byw then
set Lc[Lyw]=W5("when calling createCoEMultiboard in MultiboardCityUpdate, line 21")
endif
set Lyw=Lyw+1
endloop
set Jyw=0
set Cyw=23
loop
exitwhen Jyw>Cyw
set Nyw=Lc[Jyw]
if uo==wo[Jyw]then
call MultiboardDisplay(Nyw,true)
endif
set Jyw=Jyw+1
endloop
set Xb=Xb-1
set Nyw=null
endfunction
function sfw takes integer ufw,string rfw returns nothing
set Cb[Xb]=rfw
set Xb=Xb+1
if NO[ufw]==0 then
if ufw==0 then
call l1("Nullpointer exception when calling LLEntry.LLEntry","when calling error in LinkedList, line 396")
else
call l1("Called LLEntry.LLEntry on invalid object.","when calling error in LinkedList, line 396")
endif
endif
set Cb[Xb]="when calling destroyLLEntry in LinkedList, line 396"
set Xb=Xb+1
set Cb[Xb]="when calling dealloc_LLEntry in LinkedList, line 396"
set Xb=Xb+1
if NO[ufw]==0 then
call l1("Double free: object of type LLEntry","when calling error in LinkedList, line 396")
else
set CO[VO]=ufw
set VO=VO+1
set NO[ufw]=0
endif
set Xb=Xb-1-1-1
endfunction
function Gfw takes integer Rfw,integer Tfw,string Yfw returns nothing
set Cb[Xb]=Yfw
set Xb=Xb+1
if Sl[Rfw]==0 then
if Rfw==0 then
call l1("Nullpointer exception when calling LinkedList.removeEntry","when calling error in LinkedList, line 373")
else
call l1("Called LinkedList.removeEntry on invalid object.","when calling error in LinkedList, line 373")
endif
endif
set Cb[Xb]="when calling removeEntry in LinkedList, line 373"
set Xb=Xb+1
set Yb[Tb[Tfw]]=Yb[Tfw]
set Tb[Yb[Tfw]]=Tb[Tfw]
call sfw(Tfw,"when calling dispatch_LLEntry_destroyLLEntry in LinkedList, line 376")
set jb[Rfw]=jb[Rfw]-1
set Xb=Xb-1-1
endfunction
function Hbw takes integer Ibw,integer Pbw,string Abw returns nothing
local integer Dbw
set Cb[Xb]=Abw
set Xb=Xb+1
set Dbw=Yb[kb[Ibw]]
loop
exitwhen Dbw==kb[Ibw]
if Rb[Dbw]==Pbw then
call Gfw(Ibw,Dbw,"when calling removeEntry in LinkedList, line 126")
set Xb=Xb-1
return
endif
set Dbw=Yb[Dbw]
endloop
set Xb=Xb-1
endfunction
function Tnw takes integer dnw,integer fnw,string Rnw returns nothing
set Cb[Xb]=Rnw
set Xb=Xb+1
if pO[dnw]==0 then
if dnw==0 then
call l1("Nullpointer exception when calling City.getCityModifierOnRemove","when calling error in City, line 425")
else
call l1("Called City.getCityModifierOnRemove on invalid object.","when calling error in City, line 425")
endif
endif
set Cb[Xb]="when calling getCityModifierOnRemove in City, line 425"
set Xb=Xb+1
if Yl[Ldw(aS,fnw,"when calling get in City, line 426")]then
set Dl[dnw]=Dl[dnw]-Tl[Ldw(aS,fnw,"when calling get in City, line 427")]
endif
set Hl[dnw]=Hl[dnw]-Fl[Ldw(aS,fnw,"when calling get in City, line 428")]
set Xb=Xb-1-1
endfunction
function Piw takes integer Qiw,integer Wiw,string Eiw returns boolean
local integer Ziw
local boolean Uiw
local integer Iiw
set Cb[Xb]=Eiw
set Xb=Xb+1
set Ziw=Ll[Qiw]
set Cb[Xb]="when calling has in City, line 379"
set Xb=Xb+1
if Sl[Ziw]==0 then
if Ziw==0 then
call l1("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call l1("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set Uiw=Ubw(Ziw,Wiw)
set Xb=Xb-1
if not Uiw then
set Xb=Xb-1
return false
endif
set Iiw=Ll[Qiw]
set Cb[Xb]="when calling remove in City, line 381"
set Xb=Xb+1
if Sl[Iiw]==0 then
if Iiw==0 then
call l1("Nullpointer exception when calling LinkedList.remove","when calling error in LinkedList, line 122")
else
call l1("Called LinkedList.remove on invalid object.","when calling error in LinkedList, line 122")
endif
endif
call Hbw(Iiw,Wiw,"when calling remove in LinkedList, line 122")
set Xb=Xb-1
call Q2("Removed a modifier "+kl[Ldw(aS,Wiw,"when calling get in City, line 382")])
call Tnw(Qiw,Wiw,"when calling getCityModifierOnRemove in City, line 383")
set Xb=Xb-1
return true
endfunction
function Prw takes string Irw returns nothing
endfunction
function Wpw takes integer mpw returns nothing
local group Qpw
call TriggerRegisterEnterRegion(CreateTrigger(),xc,Filter(uR))
call G0w(EVENT_PLAYER_UNIT_ISSUED_ORDER,null,rR,null)
call GroupEnumUnitsInRect(Vc,jc,null)
call ForGroup(Vc,sR)
set Qpw=Vc
call GroupClear(Qpw)
call DestroyGroup(Qpw)
set Qpw=null
endfunction
function uB takes group VV,integer BV,string NV returns nothing
local group MV
local unit wB
set Cb[Xb]=NV
set Xb=Xb+1
set MV=VV
loop
exitwhen FirstOfGroup(MV)==null
set wB=FirstOfGroup(MV)
call GroupRemoveUnit(MV,wB)
call Pnw(BV,wB,"when calling callback in ClosureForGroups, line 40")
endloop
call Enw(BV,"when calling dispatch_ForGroupCallback_destroyForGroupCallback in ClosureForGroups, line 41")
set Xb=Xb-1
set MV=null
set wB=null
endfunction
function X9 takes string J9 returns nothing
local group K9
local integer L9
set Cb[Xb]=J9
set Xb=Xb+1
call RemoveUnit(Oo)
set K9=oo
set Cb[Xb]="when calling alloc_Preloader_ForGroupCallback_line45 in Preloader, line 45"
set Xb=Xb+1
if qO==0 then
if aO<32768 then
set aO=aO+1
set L9=aO
set nO[L9]=692
else
call l1("Out of memory: Could not create Preloader_ForGroupCallback_line45.","when calling error in Preloader, line 45")
set L9=0
endif
else
set qO=qO-1
set L9=eO[qO]
set nO[L9]=692
endif
set Xb=Xb-1
call uB(K9,L9,"when calling forEachFrom in Preloader, line 45")
call DestroyGroup(oo)
set oo=null
set Xb=Xb-1
set K9=null
endfunction
function vow takes integer pow,string eow returns nothing
local integer qow
local integer aow
local integer now
local integer dow
local integer fow
local integer Row
local integer Tow
local unit Yow
local player Gow
local integer gow
local unit how
local integer Fow
local integer kow
local boolean jow
local integer xow
set Cb[Xb]=eow
set Xb=Xb+1
set qow=yb[pow]*pb[pow]
set dow=nS-1
set fow=(yb[pow]+1)*pb[pow]-1
if dow<2147483647 then
set Row=dow
else
set Row=2147483647
endif
if fow<Row then
set Row=fow
endif
set aow=Row
loop
exitwhen qow>aow
set Tow=hS[qow]
set Cb[Xb]="when calling getCityUnit in Economy, line 36"
set Xb=Xb+1
if pO[Tow]==0 then
if Tow==0 then
call l1("Nullpointer exception when calling City.getCityUnit","when calling error in City, line 188")
else
call l1("Called City.getCityUnit on invalid object.","when calling error in City, line 188")
endif
endif
set Yow=xl[Tow]
set Xb=Xb-1
set now=GetPlayerId(GetOwningPlayer(Yow))
set gow=hS[qow]
set eow="when calling getCityUnit in Economy, line 37"
set Cb[Xb]="when calling getCityUnit in Economy, line 37"
set Xb=Xb+1
if pO[gow]==0 then
if gow==0 then
call l1("Nullpointer exception when calling City.getCityUnit","when calling error in City, line 188")
else
call l1("Called City.getCityUnit on invalid object.","when calling error in City, line 188")
endif
endif
set how=xl[gow]
set Xb=Xb-1
set Gow=GetOwningPlayer(how)
if GetPlayerSlotState(Gow)==PLAYER_SLOT_STATE_PLAYING then
set jow=GetPlayerController(Gow)==MAP_CONTROL_USER
else
set jow=false
endif
if jow then
set xow=wc[now]
set Fow=hS[qow]
set Cb[Xb]="when calling countTax in Economy, line 38"
set Xb=Xb+1
if pO[Fow]==0 then
if Fow==0 then
call l1("Nullpointer exception when calling City.countTax","when calling error in City, line 279")
else
call l1("Called City.countTax on invalid object.","when calling error in City, line 279")
endif
endif
set kow=liw(Fow,"when calling countTax in City, line 279")
set Xb=Xb-1
set wc[now]=xow+kow
endif
set qow=qow+1
endloop
set Xb=Xb-1
set Yow=null
set Gow=null
set how=null
endfunction
function sdw takes integer Nnw,string Mnw returns nothing
local integer wdw
local integer udw
local integer rdw
set Cb[Xb]=Mnw
set Xb=Xb+1
if TO[Nnw]==0 then
if Nnw==0 then
call l1("Nullpointer exception when calling CallbackSingle.call","when calling error in ClosureTimers, line 109")
else
call l1("Called CallbackSingle.call on invalid object.","when calling error in ClosureTimers, line 109")
endif
endif
if TO[Nnw]<=645 then
if TO[Nnw]<=642 then
if TO[Nnw]<=640 then
if TO[Nnw]<=639 then
set Cb[Xb]="when calling City_City_call_line374 in ClosureTimers, line 109"
set Xb=Xb+1
set wdw=Vl[Nnw]
set udw=Bl[Nnw]
set Cb[Xb]="when calling removeModifier in City, line 375"
set Xb=Xb+1
if pO[wdw]==0 then
if wdw==0 then
call l1("Nullpointer exception when calling City.removeModifier","when calling error in City, line 378")
else
call l1("Called City.removeModifier on invalid object.","when calling error in City, line 378")
endif
endif
call Piw(wdw,udw,"when calling removeModifier in City, line 378")
set Xb=Xb-1-1
else
call Hcw(Nnw)
endif
elseif TO[Nnw]<=641 then
set KS=KS+50
else
set KS=KS*2
endif
elseif TO[Nnw]<=644 then
if TO[Nnw]<=643 then
set KS=KS/2
set rdw=KS
if rdw!=250 then
call Prw("Expected <"+I2S(250)+">, Actual <"+I2S(rdw)+">")
endif
else
call vow(Nnw,"when calling Economy_call_line34 in ClosureTimers, line 109")
endif
else
call IssueImmediateOrderById(nb[Nnw],851976)
endif
elseif TO[Nnw]<=649 then
if TO[Nnw]<=647 then
if TO[Nnw]<=646 then
call IssueImmediateOrderById(db[Nnw],851976)
else
call IssuePointOrderById(Qb[Nnw],Wb[Nnw],Eb[Nnw],Zb[Nnw])
endif
elseif TO[Nnw]<=648 then
call Myw(Nnw,"when calling MultiboardCityUpdate_call_line18 in ClosureTimers, line 109")
else
call IssueImmediateOrderById(Ub[Nnw],851976)
endif
elseif TO[Nnw]<=651 then
if TO[Nnw]<=650 then
call Wpw(Nnw)
else
set Cb[Xb]="when calling Preloader_call_line54 in ClosureTimers, line 109"
set Xb=Xb+1
call X9("when calling finishPreload in Preloader, line 54")
set Xb=Xb-1
endif
else
call IssueImmediateOrderById(Kb[Nnw],851976)
endif
set Xb=Xb-1
endfunction
function bB takes string OB returns nothing
local integer lB
set Cb[Xb]=OB
set Xb=Xb+1
set lB=Jww_2(GetExpiredTimer(),"when calling getData in ClosureTimers, line 119")
call sdw(lB,"when calling call in ClosureTimers, line 120")
set Cb[Xb]="when calling dispatch_CallbackSingle_destroyCallbackSingle in ClosureTimers, line 121"
set Xb=Xb+1
if TO[lB]==0 then
if lB==0 then
call l1("Nullpointer exception when calling CallbackSingle.CallbackSingle","when calling error in ClosureTimers, line 107")
else
call l1("Called CallbackSingle.CallbackSingle on invalid object.","when calling error in ClosureTimers, line 107")
endif
endif
call iow(lB,"when calling destroyCallbackSingle in ClosureTimers, line 107")
set Xb=Xb-1-1
endfunction
function xGw takes nothing returns nothing
set Xb=0
set Cb[Xb]="ClosureTimers, line 114"
set Xb=Xb+1
call bB("when calling staticCallback in ClosureTimers, line 114")
set Xb=Xb-1
endfunction
function xH takes nothing returns nothing
local integer YH=1
local integer GH=1752461175
local player gH=GetOwningPlayer(GetTriggerUnit())
local rect jH=bj_mapInitialPlayableArea
local location kH=Location(GetRectCenterX(jH),GetRectCenterY(jH))
local location hH=Location(GetLocationX(kH)+100000000.00,GetLocationY(kH)+100000000.00)
local real FH=bj_UNIT_FACING
call GroupClear(bj_lastCreatedGroup)
loop
set YH=YH-1
exitwhen YH<0
call CreateUnitAtLocSaveLast(gH,GH,hH,FH)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
call ShowUnit(bj_lastCreatedUnit,false)
set gH=null
set hH=null
set kH=null
set jH=null
endfunction
function jL takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989592 then
return false
endif
return true
endfunction
function xL takes nothing returns boolean
if not jL() then
return false
endif
return true
endfunction
function xP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990584,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990593,0)
endfunction
function jU takes nothing returns boolean
if GetResearched()!=1378890034 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890034,true)!=1 then
return false
endif
return true
endfunction
function xU takes nothing returns boolean
if not jU() then
return false
endif
return true
endfunction
function jW takes nothing returns boolean
if GetResearched()!=1378889812 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889812,true)!=1 then
return false
endif
return true
endfunction
function xW takes nothing returns boolean
if not jW() then
return false
endif
return true
endfunction
function tV takes string uV returns boolean
local integer rV
local timer sV
set Cb[Xb]=uV
set Xb=Xb+1
set FS=ConvertPlayerEvent(96)
set QS=Olw("when calling new_HashMap in ClosureEvents, line 99")
set WS=Olw("when calling new_HashMap in ClosureEvents, line 100")
set kS=CreateTrigger()
set jS=CreateTrigger()
set xS=CreateTrigger()
call TriggerAddCondition(Po,Condition(Qf))
call TriggerAddCondition(Ao,Condition(Wf))
set Cb[Xb]="when calling alloc_ClosureEvents_CallbackSingle_line290 in ClosureEvents, line 290"
set Xb=Xb+1
if fO==0 then
if RO<32768 then
set RO=RO+1
set rV=RO
set TO[rV]=640
else
call l1("Out of memory: Could not create ClosureEvents_CallbackSingle_line290.","when calling error in ClosureEvents, line 290")
set rV=0
endif
else
set fO=fO-1
set rV=dO[fO]
set TO[rV]=640
endif
set Xb=Xb-1
set Cb[Xb]="when calling nullTimer in ClosureEvents, line 290"
set Xb=Xb+1
set Cb[Xb]="when calling doAfter in ClosureTimers, line 33"
set Xb=Xb+1
set sV=Xww("when calling getTimer in ClosureTimers, line 27")
set Cb[Xb]="when calling doAfter in ClosureTimers, line 27"
set Xb=Xb+1
call odw(rV,sV,0.,"when calling start in ClosureTimers, line 16")
set Xb=Xb-1
set Xb=Xb-1-1-1
set sV=null
return true
endfunction
function xYw takes nothing returns boolean
set Xb=0
return tV("ClosureEvents, line 1")
endfunction
function xZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989574,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989573,0)
endfunction
function xg takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747990089 then
return false
endif
return true
endfunction
function xh takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989078 then
return false
endif
return true
endfunction
function xk takes nothing returns nothing
local player dk=GetOwningPlayer(GetSpellTargetUnit())
local playerstate fk=PLAYER_STATE_RESOURCE_GOLD
local playerstate Rk
local playerstate Tk
local player Yk
local force Gk
local location gk
local real hk
local real Fk
local player kk
local force jk
if fk==PLAYER_STATE_RESOURCE_GOLD then
set Rk=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(dk,Rk,GetPlayerState(dk,Rk)+250)
elseif fk==PLAYER_STATE_RESOURCE_LUMBER then
set Tk=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(dk,Tk,GetPlayerState(dk,Tk)+250)
endif
call SetPlayerState(dk,fk,GetPlayerState(dk,fk)+250)
call RemoveUnit(GetSpellAbilityUnit())
set Yk=GetOwningPlayer(GetSpellTargetUnit())
set Gk=CreateForce()
call ForceAddPlayer(Gk,Yk)
if IsPlayerInForce(GetLocalPlayer(),Gk) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_1230")
endif
set y=GetUnitLoc(GetSpellTargetUnit())
set kk=GetOwningPlayer(GetSpellTargetUnit())
set jk=CreateForce()
call ForceAddPlayer(jk,kk)
set gk=y
set hk=GetLocationX(gk)
set Fk=GetLocationY(gk)
if IsPlayerInForce(GetLocalPlayer(),jk) then
call PingMinimap(hk,Fk,2.00)
endif
call RemoveLocation(y)
set dk=null
set fk=null
set Rk=null
set Tk=null
set Yk=null
set Gk=null
set gk=null
set kk=null
set jk=null
endfunction
function y1 takes nothing returns boolean
set pc=CreateTimer()
call TimerStart(pc,100000.,false,null)
call TimerStart(CreateTimer(),0.030,true,Hf)
return true
endfunction
function bA takes nothing returns boolean
if GetResearched()!=1378890053 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890053,true)!=2 then
return false
endif
return true
endfunction
function yA takes nothing returns boolean
if not bA() then
return false
endif
return true
endfunction
function yGw takes nothing returns nothing
set Xb=0
call AV("ClosureEvents, line 241")
endfunction
function bJ takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989325 then
return false
endif
return true
endfunction
function yJ takes nothing returns boolean
if not bJ() then
return false
endif
return true
endfunction
function yX takes nothing returns boolean
return true
endfunction
function yg takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989046 then
return false
endif
return true
endfunction
function yh takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747990073 then
return false
endif
return true
endfunction
function bm takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function ym takes nothing returns boolean
if not bm() then
return false
endif
return true
endfunction
function yww takes nothing returns boolean
return true
endfunction
function yR takes nothing returns nothing
set w=null
set u=null
set s=null
set t=null
set i=null
set S=null
set c=null
set o=null
set O=null
set l=null
set b=null
set y=null
set q=null
set a=null
set n=null
set d=null
set f=null
set R=null
set T=null
set Y=null
set G=null
set g=null
set h=null
set F=null
set k=null
set j=null
set x=null
set v=null
set m=null
set Q=null
set W=null
set E=null
set Z=null
set U=null
set I=null
set P=null
set A=null
set D=null
set H=null
set J=null
set K=null
set L=null
set X=null
set C=null
set V=null
set B=null
set N=null
set M=null
set ww=null
set uw=null
set rw=null
set sw=null
set tw=null
set iw=null
set Sw=null
set cw=null
set ow=null
set Ow=null
set lw=null
set bw=null
set yw=null
set pw=null
set ew=null
set qw=null
set aw=null
set nw=null
set dw=null
set fw=null
set Rw=null
set Tw=null
set Yw=null
set Gw=null
set gw=null
set hw=null
set Fw=null
set kw=null
set jw=null
set xw=null
set vw=null
set mw=null
set Qw=null
set Ww=null
set Ew=null
set Zw=null
set Uw=null
set Iw=null
set Pw=null
set Aw=null
set Dw=null
set Hw=null
set Jw=null
set Kw=null
set Lw=null
set Xw=null
set Cw=null
set Vw=null
set Bw=null
set Nw=null
set Mw=null
set wu=null
set uu=null
set ru=null
set su=null
set tu=null
set iu=null
set Su=null
set cu=null
set ou=null
set Ou=null
set lu=null
set bu=null
set yu=null
set pu=null
set eu=null
set qu=null
set au=null
set nu=null
set du=null
set fu=null
set Ru=null
set Tu=null
set Yu=null
set Gu=null
set gu=null
set hu=null
set Fu=null
set ku=null
set ju=null
set xu=null
set vu=null
set mu=null
set Qu=null
set Wu=null
set Eu=null
set Zu=null
set Uu=null
set Iu=null
set Pu=null
set Au=null
set Du=null
set Hu=null
set Ju=null
set Ku=null
set Lu=null
set Xu=null
set Cu=null
set Vu=null
set Bu=null
set Nu=null
set Mu=null
set wr=null
set ur=null
set rr=null
set sr=null
set tr=null
set ir=null
set Sr=null
set cr=null
set lr=null
set br=null
set yr=null
set pr=null
set er=null
set qr=null
set ar=null
set nr=null
set dr=null
set fr=null
set Rr=null
set Tr=null
set Yr=null
set Gr=null
set gr=null
set hr=null
set Fr=null
set kr=null
set jr=null
set xr=null
set vr=null
set mr=null
set Qr=null
set Wr=null
set Er=null
set Zr=null
set Ur=null
set Ir=null
set Pr=null
set Ar=null
set Dr=null
set Hr=null
set Jr=null
set Kr=null
set Lr=null
set Xr=null
set Cr=null
set Vr=null
set Br=null
set Nr=null
set Mr=null
set ws=null
set us=null
set rs=null
set ss=null
set ts=null
set is=null
set Ss=null
set cs=null
set os=null
set Os=null
set ls=null
set bs=null
set ys=null
set ps=null
set es=null
set qs=null
set as=null
set ns=null
set ds=null
set fs=null
set Rs=null
set Ts=null
set Ys=null
set Gs=null
set gs=null
set hs=null
set Fs=null
set ks=null
set js=null
set xs=null
set vs=null
set ms=null
set Qs=null
set Ws=null
set Es=null
set Zs=null
set Us=null
set Is=null
set Ps=null
set As=null
set Ds=null
set Hs=null
set Js=null
set Ks=null
set Ls=null
set Xs=null
set Cs=null
set Vs=null
set Bs=null
set Ns=null
set Ms=null
set wt=null
set ut=null
set rt=null
set st=null
set tt=null
set St=null
set ct=null
set ot=null
set Ot=null
set lt=null
set bt=null
set yt=null
set pt=null
set et=null
set qt=null
set at=null
set nt=null
set dt=null
set ft=null
set Rt=null
set Tt=null
set Yt=null
set Gt=null
set gt=null
set ht=null
set Ft=null
set kt=null
set jt=null
set xt=null
set vt=null
set mt=null
set Qt=null
set Wt=null
set Et=null
set Zt=null
set Ut=null
set It=null
set Pt=null
set At=null
set Dt=null
set Ht=null
set Jt=null
set Kt=null
set Lt=null
set Xt=null
set Ct=null
set Vt=null
set Bt=null
set Nt=null
set Mt=null
set wi=null
set ui=null
set ri=null
set si=null
set ti=null
set ii=null
set Si=null
set ci=null
set oi=null
set Oi=null
set li=null
set bi=null
set yi=null
set pi=null
set ei=null
set qi=null
set ai=null
set ni=null
set di=null
set fi=null
set Ri=null
set Ti=null
set Yi=null
set Gi=null
set gi=null
set hi=null
set Fi=null
set ki=null
set ji=null
set xi=null
set vi=null
set mi=null
set Qi=null
set Wi=null
set Ei=null
set Zi=null
set Ui=null
set Ii=null
set Pi=null
set Ai=null
set Di=null
set Hi=null
set Ji=null
set Ki=null
set Li=null
set Xi=null
set Ci=null
set Vi=null
set Bi=null
set Ni=null
set Mi=null
set wS=null
set uS=null
set rS=null
set Gy=function WT
set gy=function IT
set hy=function DT
set Fy=function KT
set ky=function NT
set jy=function tY
set xy=function lY
set vy=function aY
set my=function YY
set Qy=function jY
set Wy=function EY
set Ey=function DY
set Zy=function KY
set Uy=function BY
set Iy=function NY
set Py=function bG
set Ay=function gG
set Dy=function mG
set Hy=function xG
set Jy=function HG
set Ky=function BG
set Ly=function CG
set Xy=function cg
set Cy=function eg
set Vy=function yg
set By=function gg
set Ny=function mg
set My=function xg
set wp=function Hg
set up=function Bg
set rp=function Cg
set sp=function ch
set tp=function eh
set ip=function yh
set Sp=function gh
set cp=function mh
set op=function xh
set Op=function Hh
set lp=function Bh
set bp=function Ch
set yp=function cF
set pp=function eF
set ep=function dF
set qp=function YF
set ap=function FF
set np=function vF
set dp=function JF
set fp=function NF
set Rp=function lk
set Tp=function nk
set Yp=function xk
set Gp=function Uk
set gp=function Bk
set hp=function rj
set Fp=function ej
set kp=function fj
set jp=function mj
set xp=function Uj
set vp=function Bj
set mp=function rx
set Qp=function ex
set Wp=function Tx
set Ep=function Wx
set Zp=function Dx
set Up=function uv
set Ip=function cv
set Pp=function fv
set Ap=function gv
set Dp=function Uv
set Hp=function Jv
set Jp=function Kv
set Kp=function Nv
set Lp=function Mv
set Xp=function im
set Cp=function Sm
set Vp=function ym
set Bp=function pm
set Np=function fm
set Mp=function Rm
set we=function Fm
set ue=function km
set re=function Wm
set se=function Em
set te=function Dm
set ie=function Hm
set Se=function Vm
set ce=function Bm
set oe=function sQ
set Oe=function tQ
set le=function lQ
set be=function bQ
set ye=function nQ
set pe=function dQ
set ee=function gQ
set qe=function hQ
set ae=function mQ
set ne=function QQ
set de=function PQ
set fe=function AQ
set Re=function XQ
set Te=function CQ
set Ye=function uW
set Ge=function rW
set ge=function oW
set he=function OW
set Fe=function qW
set ke=function aW
set je=function YW
set xe=function GW
set ve=function xW
set me=function vW
set Qe=function UW
set We=function IW
set Ee=function JW
set Ze=function KW
set Ue=function CW
set Ie=function VW
set Pe=function rE
set Ae=function sE
set De=function OE
set He=function lE
set Je=function aE
set Ke=function nE
set Le=function GE
set Xe=function gE
set Ce=function vE
set Ve=function mE
set Be=function IE
set Ne=function PE
set Me=function LE
set wq=function XE
set uq=function wZ
set rq=function uZ
set sq=function cZ
set tq=function oZ
set iq=function eZ
set Sq=function qZ
set cq=function TZ
set oq=function YZ
set Oq=function jZ
set lq=function xZ
set bq=function ZZ
set yq=function UZ
set pq=function JZ
set eq=function KZ
set qq=function BZ
set aq=function NZ
set nq=function uU
set dq=function rU
set fq=function oU
set Rq=function OU
set Tq=function qU
set Yq=function aU
set Gq=function YU
set gq=function GU
set hq=function xU
set Fq=function vU
set kq=function UU
set jq=function IU
set xq=function KU
set vq=function LU
set mq=function MU
set Qq=function wI
set Wq=function SI
set Eq=function cI
set Zq=function pI
set Uq=function eI
set Iq=function RI
set Pq=function TI
set Aq=function kI
set Dq=function jI
set Hq=function EI
set Jq=function ZI
set Kq=function HI
set Lq=function JI
set Xq=function VI
set Cq=function BI
set Vq=function wP
set Bq=function uP
set Nq=function cP
set Mq=function oP
set wa=function eP
set ua=function qP
set ra=function TP
set sa=function YP
set ta=function jP
set ia=function xP
set Sa=function ZP
set ca=function UP
set oa=function JP
set Oa=function KP
set la=function NP
set ba=function MP
set ya=function iA
set pa=function SA
set ea=function yA
set qa=function pA
set aa=function fA
set na=function RA
set da=function FA
set fa=function kA
set Ra=function WA
set Ta=function EA
set Ya=function DA
set Ga=function HA
set ga=function VA
set ha=function BA
set Fa=function sD
set ka=function tD
set ja=function lD
set xa=function bD
set va=function nD
set ma=function dD
set Qa=function GD
set Wa=function gD
set Ea=function kD
set Za=function jD
set Ua=function FD
set Ia=function ED
set Pa=function AD
set Aa=function XD
set Da=function rH
set Ha=function oH
set Ja=function aH
set Ka=function TH
set La=function xH
set Xa=function ZH
set Ca=function KH
set Va=function NH
set Ba=function SJ
set Na=function yJ
set Ma=function pJ
set wn=function fJ
set un=function RJ
set rn=function FJ
set sn=function kJ
set tn=function WJ
set Sn=function EJ
set cn=function DJ
set on=function HJ
set On=function VJ
set ln=function BJ
set bn=function sK
set yn=function tK
set pn=function lK
set en=function bK
set qn=function nK
set an=function dK
set nn=function gK
set dn=function hK
set fn=function mK
set Rn=function QK
set Tn=function PK
set Yn=function AK
set Gn=function XK
set gn=function CK
set hn=function uL
set Fn=function rL
set kn=function oL
set jn=function OL
set xn=function qL
set vn=function aL
set mn=function YL
set Qn=function GL
set Wn=function xL
set En=function vL
set Zn=function UL
set Un=function IL
set In=function KL
set Pn=function LL
set An=function ML
set Dn=function wX
set Hn=function AT
set Jn=function Sv
set Kn=function S0w
set Ln=function g1
set Xn=function eww
set Cn=function pX
set Vn=function Nuw
set Bn=function x2
set Nn=function Q9
set Mn=function C9
set wd=function eX
set ud=function y1
set rd=function w4
set sd=function M3
set td=function v2
set id=function w0w
set Sd=function Gww
set cd=function E9
set od=function qYw
set Od=function f1
set ld=function h1
set bd=function Urw
set yd=function aYw
set pd=function CV
set ed=function nYw
set qd=function fYw
set ad=function yX
set nd=function qX
set dd=function aX
set fd=function G8
set Rd=function T1
set Td=function RYw
set Yd=function TYw
set Gd=function YYw
set gd=function oB
set hd=function gww
set Fd=function a3
set kd=function G1
set jd=function u9
set xd=function yww
set vd=function pww
set md=function vww_2
set Qd=function mww
set Wd=function GYw
set Ed=function Qww
set Zd=function S2
set Ud=function gYw
set Id=function hYw
set Pd=function w9
set Ad=function FYw
set Dd=function kYw
set Hd=function jYw
set Jd=function Www
set Kd=function xYw
set Ld=function R2
set Xd=function b1
set Cd=function Yww
set Vd=function vYw
set Bd=function k0w
set Nd=function UYw
set Md=function IYw
set wf=function W9
set uf=function u4
set rf=function PYw
set sf=function AYw
set tf=function DYw
set Sf=function HYw
set cf=function JYw
set of=function Y1
set Of=function KYw
set lf=function AB
set bf=function LYw
set yf=function XYw
set pf=function CYw
set ef=function wM
set qf=function VYw
set af=function BYw
set nf=function NYw
set df=function M1
set ff=function MYw
set Rf=function wGw
set Tf=function uGw
set Yf=function rGw
set Gf=function sGw
set gf=function tGw
set hf=function iGw
set Ff=function SGw
set kf=function cGw
set jf=function oGw
set xf=function OGw
set vf=function NX
set mf=function lGw
set Qf=function vV
set Wf=function bGw
set Ef=function yGw
set Zf=function eGw
set Uf=function PN
set If=function qGw
set Pf=function R1
set Af=function aGw
set Df=function nGw
set Hf=function p1
set Jf=function i2
set Kf=function dGw
set Lf=function RGw
set Xf=function TGw
set Cf=function YGw
set Vf=function GGw
set Bf=function gGw
set Nf=function hGw
set Mf=function FGw
set wR=function xGw
set uR=function q9
set rR=function n9
set sR=function d9
set tR=function jGw
set iR=function fGw
endfunction
function main takes nothing returns nothing
local trigger OX
local trigger lX
local trigger bX
call yR()
call SetCameraBounds((-30720.0)+GetCameraMargin(CAMERA_MARGIN_LEFT),(-30720.0)+GetCameraMargin(CAMERA_MARGIN_BOTTOM),30720.0-GetCameraMargin(CAMERA_MARGIN_RIGHT),30720.0-GetCameraMargin(CAMERA_MARGIN_TOP),(-30720.0)+GetCameraMargin(CAMERA_MARGIN_LEFT),30720.0-GetCameraMargin(CAMERA_MARGIN_TOP),30720.0-GetCameraMargin(CAMERA_MARGIN_RIGHT),(-30720.0)+GetCameraMargin(CAMERA_MARGIN_BOTTOM))
call SetDayNightModels("Environment\\DNC\\DNCLordaeron\\DNCLordaeronTerrain\\DNCLordaeronTerrain.mdl","Environment\\DNC\\DNCLordaeron\\DNCLordaeronUnit\\DNCLordaeronUnit.mdl")
call NewSoundEnvironment("Default")
call SetAmbientDaySound("LordaeronSummerDay")
call SetAmbientNightSound("LordaeronSummerNight")
call SetMapMusic("Music",true,0)
set fs=CreateSound("Sound\\Interface\\Warning.wav",false,false,false,10,10,"")
call SetSoundParamsFromLabel(fs,"Warning")
call SetSoundDuration(fs,1903)
set q=Rect(11872.0,-24096.0,13376.0,-18304.0)
set a=Rect(14080.0,-30720.0,16256.0,-25664.0)
set n=Rect(12096.0,-26240.0,14944.0,-23776.0)
set d=Rect(-17120.0,15936.0,-15520.0,17408.0)
call Rect(-29824.0,-30080.0,-29312.0,-28672.0)
call Rect(-29216.0,-30112.0,-28672.0,-28672.0)
call Rect(-25984.0,-29760.0,-24992.0,-29504.0)
call Rect(-25984.0,-30080.0,-25472.0,-29824.0)
call Rect(-25984.0,-30400.0,-25472.0,-30144.0)
call Rect(-26464.0,-30048.0,-26176.0,-29056.0)
call Rect(-25440.0,-30368.0,-25184.0,-29856.0)
call Rect(-25184.0,-30368.0,-24928.0,-29856.0)
call Rect(-24672.0,-29568.0,-24064.0,-28800.0)
call Rect(-24704.0,-30208.0,-24064.0,-29696.0)
set f=Rect(-17408.0,22016.0,-17056.0,22368.0)
set R=Rect(-19072.0,17728.0,-18688.0,18080.0)
set T=Rect(-22464.0,22208.0,-22112.0,22560.0)
set Y=Rect(-3776.0,4416.0,-3392.0,4768.0)
set G=Rect(-3872.0,1664.0,-3456.0,2016.0)
set g=Rect(-416.0,-2592.0,-128.0,-2272.0)
set h=Rect(4992.0,-2016.0,5344.0,-1696.0)
set F=Rect(2528.0,-3168.0,2848.0,-2880.0)
set k=Rect(7744.0,-2528.0,8096.0,-2208.0)
set j=Rect(-17504.0,18080.0,-17056.0,18496.0)
set x=Rect(1024.0,-1120.0,1376.0,-800.0)
set v=Rect(-3328.0,8096.0,-2848.0,8512.0)
set m=Rect(-4704.0,11488.0,-4416.0,11776.0)
set Q=Rect(-640.0,8288.0,-160.0,8704.0)
set W=Rect(-5184.0,17120.0,-4832.0,17440.0)
set E=Rect(-96.0,12448.0,224.0,12768.0)
set Z=Rect(-2272.0,13536.0,-1984.0,13856.0)
set U=Rect(7008.0,1984.0,7456.0,2432.0)
set I=Rect(4032.0,3744.0,4416.0,4064.0)
set P=Rect(4000.0,5216.0,4320.0,5536.0)
set A=Rect(-576.0,2880.0,-224.0,3232.0)
set D=Rect(-8288.0,19776.0,-7936.0,20160.0)
set H=Rect(-6464.0,21184.0,-6080.0,21568.0)
set J=Rect(-7904.0,22048.0,-7488.0,22464.0)
set K=Rect(-5344.0,14304.0,-4960.0,14720.0)
set L=Rect(2880.0,32.0,3264.0,352.0)
set X=Rect(608.0,15680.0,992.0,16096.0)
set C=Rect(-2496.0,15872.0,-2112.0,16224.0)
set V=Rect(1056.0,10848.0,1344.0,11136.0)
set B=Rect(1600.0,6784.0,1984.0,7136.0)
set N=Rect(224.0,19296.0,544.0,19648.0)
set M=Rect(2784.0,22592.0,3200.0,22944.0)
set ww=Rect(-1984.0,19008.0,-1600.0,19360.0)
set uw=Rect(3008.0,18048.0,3392.0,18400.0)
call Rect(-28544.0,-30080.0,-28064.0,-29344.0)
call Rect(-27744.0,-30080.0,-27456.0,-29760.0)
set rw=Rect(4224.0,19488.0,4608.0,19776.0)
set sw=Rect(13056.0,4960.0,13408.0,5280.0)
set tw=Rect(5696.0,24768.0,6048.0,25088.0)
set iw=Rect(3328.0,26816.0,3680.0,27168.0)
set Sw=Rect(8608.0,26144.0,9024.0,26528.0)
set cw=Rect(6656.0,21248.0,7008.0,21600.0)
set ow=Rect(-16640.0,10368.0,-13504.0,13056.0)
set Ow=Rect(-18944.0,5312.0,-16864.0,7328.0)
set lw=Rect(-28032.0,-1120.0,-22464.0,640.0)
set bw=Rect(-27264.0,2784.0,-26208.0,3328.0)
set yw=Rect(-26912.0,-4320.0,-23872.0,-2976.0)
set pw=Rect(-19328.0,-288.0,-18592.0,1568.0)
set ew=Rect(-11936.0,7616.0,-448.0,11424.0)
set qw=Rect(-1664.0,1216.0,6848.0,7776.0)
set aw=Rect(-5472.0,24704.0,-3232.0,27616.0)
set nw=Rect(3744.0,10880.0,4064.0,11232.0)
set dw=Rect(-12064.0,11392.0,-8832.0,16576.0)
set fw=Rect(-8832.0,10176.0,23520.0,17760.0)
set Rw=Rect(4384.0,17728.0,23424.0,27040.0)
set Tw=Rect(-10688.0,17536.0,-10304.0,17888.0)
set Yw=Rect(-10688.0,-9312.0,-10336.0,-9024.0)
set Gw=Rect(17280.0,9280.0,17632.0,9632.0)
set gw=Rect(8352.0,12192.0,8672.0,12512.0)
set hw=Rect(5952.0,18400.0,6304.0,18688.0)
set Fw=Rect(9120.0,19872.0,9408.0,20192.0)
set kw=Rect(23328.0,-14080.0,30688.0,17792.0)
set jw=Rect(13984.0,-288.0,14336.0,0.0)
set xw=Rect(10624.0,-7552.0,11008.0,-7200.0)
set vw=Rect(15168.0,-5792.0,15552.0,-5408.0)
set mw=Rect(15328.0,-7712.0,15648.0,-7424.0)
set Qw=Rect(12640.0,-7104.0,12992.0,-6752.0)
set Ww=Rect(17056.0,-8800.0,17376.0,-8512.0)
set Ew=Rect(18432.0,-608.0,18784.0,-320.0)
set Zw=Rect(13760.0,-11168.0,14112.0,-10752.0)
set Uw=Rect(16768.0,-16416.0,17120.0,-16032.0)
set Iw=Rect(18880.0,-7616.0,19232.0,-7296.0)
set Pw=Rect(6816.0,-6752.0,7136.0,-6464.0)
set Aw=Rect(12512.0,-4064.0,12832.0,-3712.0)
set Dw=Rect(9056.0,-4576.0,9344.0,-4288.0)
set Hw=Rect(-26464.0,-8896.0,-26144.0,-8544.0)
set Jw=Rect(-21632.0,-8544.0,-21248.0,-8224.0)
set Kw=Rect(-16928.0,-8224.0,-16608.0,-7904.0)
set Lw=Rect(-10112.0,-11424.0,-9760.0,-11136.0)
set Xw=Rect(-7680.0,-16416.0,-7328.0,-16128.0)
set Cw=Rect(288.0,-17760.0,608.0,-17472.0)
set Vw=Rect(9248.0,-21376.0,9984.0,-20640.0)
set Bw=Rect(24704.0,-27648.0,25088.0,-27264.0)
set Nw=Rect(10816.0,-18688.0,11168.0,-18304.0)
set Mw=Rect(13056.0,-18016.0,13408.0,-17760.0)
set wu=Rect(12096.0,-21024.0,12448.0,-20704.0)
set uu=Rect(15680.0,5600.0,16032.0,5920.0)
set ru=Rect(6944.0,7648.0,7264.0,7968.0)
set su=Rect(5824.0,12256.0,6176.0,12576.0)
set tu=Rect(11200.0,7712.0,11552.0,8064.0)
set iu=Rect(12480.0,11136.0,12832.0,11456.0)
set Su=Rect(14880.0,22944.0,15200.0,23232.0)
set cu=Rect(11392.0,16768.0,11744.0,17088.0)
set ou=Rect(23840.0,96.0,24128.0,384.0)
set Ou=Rect(19488.0,11168.0,19808.0,11488.0)
set lu=Rect(20672.0,2528.0,21056.0,2848.0)
set bu=Rect(23776.0,2368.0,24160.0,2720.0)
set yu=Rect(18336.0,-13408.0,18624.0,-13120.0)
set pu=Rect(17056.0,-11648.0,17376.0,-11264.0)
set eu=Rect(15488.0,-17696.0,15840.0,-17376.0)
set qu=Rect(24896.0,-8480.0,25248.0,-8128.0)
set au=Rect(16480.0,-14368.0,16768.0,-14048.0)
set nu=Rect(17088.0,-19744.0,17440.0,-19456.0)
set du=Rect(22720.0,-10432.0,23072.0,-10048.0)
set fu=Rect(20672.0,-23232.0,21056.0,-22848.0)
set Ru=Rect(19904.0,-5920.0,20256.0,-5632.0)
set Tu=Rect(18624.0,-3936.0,18976.0,-3616.0)
set Yu=Rect(-13632.0,-14816.0,-12192.0,-13376.0)
set Gu=Rect(17760.0,-10400.0,23360.0,-1344.0)
set gu=Rect(12384.0,-5984.0,13824.0,-4352.0)
set hu=Rect(-10944.0,3968.0,-7680.0,5120.0)
set Fu=Rect(-6528.0,7808.0,-6176.0,8160.0)
set ku=Rect(-8864.0,6912.0,-8448.0,7264.0)
set ju=Rect(-11680.0,14304.0,-11264.0,14752.0)
set xu=Rect(-9760.0,12928.0,-9472.0,13280.0)
set vu=Rect(-7552.0,16928.0,-7232.0,17248.0)
set mu=Rect(-17472.0,-3328.0,-17120.0,-2976.0)
call Rect(-24576.0,-1376.0,-24224.0,-1024.0)
set Qu=Rect(23392.0,10912.0,23712.0,11232.0)
set Wu=Rect(17280.0,19456.0,17632.0,19808.0)
set Eu=Rect(-16896.0,24032.0,-16544.0,24352.0)
set Zu=Rect(-15904.0,25952.0,-15520.0,26304.0)
set Uu=Rect(-17312.0,26624.0,-16896.0,27008.0)
set Iu=Rect(-16096.0,20352.0,-15712.0,20768.0)
set Pu=Rect(-20448.0,21440.0,-20064.0,21792.0)
set Au=Rect(-22560.0,19808.0,-22272.0,20128.0)
set Du=Rect(-18752.0,19520.0,-18400.0,19872.0)
set Hu=Rect(-16128.0,16896.0,-15808.0,17248.0)
set Ju=Rect(-17952.0,15904.0,-17632.0,16224.0)
set Ku=Rect(-19936.0,16352.0,-19648.0,16672.0)
set Lu=Rect(-17248.0,12448.0,-16928.0,12832.0)
set Xu=Rect(-13728.0,11968.0,-13408.0,12352.0)
set Cu=Rect(-15232.0,10624.0,-14880.0,10976.0)
set Vu=Rect(-13856.0,7872.0,-13568.0,8256.0)
set Bu=Rect(-16192.0,5824.0,-15840.0,6208.0)
set Nu=Rect(-16864.0,3392.0,-16576.0,3776.0)
set Mu=Rect(-18880.0,5568.0,-18528.0,5920.0)
set wr=Rect(-20288.0,1216.0,-19936.0,1600.0)
set ur=Rect(-17216.0,352.0,-16896.0,736.0)
set rr=Rect(-24512.0,3744.0,-24128.0,4064.0)
set sr=Rect(-22720.0,2368.0,-22432.0,2752.0)
set tr=Rect(-23552.0,-256.0,-23200.0,128.0)
set ir=Rect(-25376.0,1312.0,-25056.0,1632.0)
set Sr=Rect(-28736.0,-192.0,-28352.0,160.0)
set cr=Rect(-21024.0,2944.0,-20704.0,3360.0)
set lr=Rect(-13792.0,2144.0,-13440.0,2592.0)
set br=Rect(-13568.0,14912.0,-13216.0,15296.0)
set yr=Rect(-12736.0,16128.0,-12352.0,16512.0)
set pr=Rect(-10880.0,3360.0,-10528.0,3712.0)
set er=Rect(-10048.0,5280.0,-9696.0,5600.0)
set qr=Rect(-6880.0,3936.0,-6560.0,4256.0)
set ar=Rect(-8224.0,3040.0,-7904.0,3392.0)
set nr=Rect(-8960.0,1760.0,-8608.0,2176.0)
set dr=Rect(-6624.0,1088.0,-6304.0,1472.0)
set fr=Rect(-7296.0,-960.0,-6944.0,-544.0)
set Rr=Rect(-23712.0,-4704.0,-23392.0,-4416.0)
set Tr=Rect(-25184.0,-3168.0,-24864.0,-2848.0)
set Yr=Rect(-21888.0,-4416.0,-21536.0,-4032.0)
set Gr=Rect(-20928.0,-2304.0,-20576.0,-1888.0)
set gr=Rect(-7776.0,11040.0,-7456.0,11392.0)
set hr=Rect(-11648.0,7072.0,-11296.0,7360.0)
set Fr=Rect(-13728.0,4992.0,-13408.0,5376.0)
set kr=Rect(-5152.0,21696.0,-4832.0,22080.0)
set jr=Rect(-5248.0,24416.0,-4960.0,24768.0)
set xr=Rect(-6688.0,28096.0,-6368.0,28480.0)
set vr=Rect(-9024.0,26496.0,-8736.0,26880.0)
set mr=Rect(-10048.0,28224.0,-9696.0,28576.0)
set Qr=Rect(-1408.0,23776.0,-1152.0,24096.0)
set Wr=Rect(-2720.0,26176.0,-2432.0,26560.0)
set Er=Rect(-28032.0,-2944.0,-27680.0,-2560.0)
set Zr=Rect(-29760.0,-10016.0,-29408.0,-9632.0)
set Ur=Rect(15296.0,-26976.0,15648.0,-26624.0)
set Ir=Rect(-20544.0,12032.0,-20160.0,12416.0)
set Pr=Rect(-18368.0,10624.0,-18016.0,11008.0)
set Ar=Rect(-10880.0,-576.0,-10528.0,-224.0)
set Dr=Rect(-11104.0,-4768.0,-10816.0,-4448.0)
set Hr=Rect(-5728.0,-2912.0,-5440.0,-2560.0)
set Jr=Rect(-3904.0,-6720.0,-3552.0,-6336.0)
set Kr=Rect(-3616.0,-3040.0,-3328.0,-2688.0)
set Lr=Rect(-7200.0,-8000.0,-6880.0,-7616.0)
set Xr=Rect(-5504.0,-9344.0,-5248.0,-9056.0)
set Cr=Rect(-11616.0,10848.0,-11296.0,11168.0)
set Vr=Rect(-1792.0,-320.0,-1440.0,64.0)
set Br=Rect(3232.0,-7488.0,3552.0,-7136.0)
set Nr=Rect(8224.0,-10496.0,8512.0,-10208.0)
set Mr=Rect(1344.0,29280.0,1696.0,29632.0)
set ws=Rect(10848.0,-2144.0,11136.0,-1824.0)
set us=Rect(-26496.0,-1568.0,-26144.0,-1248.0)
set rs=Rect(-27168.0,2528.0,-26880.0,2816.0)
set ss=Rect(-2016.0,27552.0,-1696.0,27936.0)
set ts=Rect(-3488.0,23040.0,-3200.0,23392.0)
set is=Rect(2016.0,-7904.0,2336.0,-7584.0)
set Ss=Rect(640.0,-5760.0,992.0,-5376.0)
set cs=Rect(5216.0,-12384.0,5504.0,-12064.0)
set os=Rect(18272.0,-17504.0,18656.0,-17056.0)
set Os=Rect(26848.0,-11680.0,27168.0,-11360.0)
set ls=Rect(6464.0,-4672.0,6816.0,-4288.0)
set bs=Rect(20672.0,21312.0,21024.0,21696.0)
set ys=Rect(-1824.0,5792.0,-1440.0,6144.0)
set ps=Rect(-23264.0,-8992.0,-22944.0,-8704.0)
set es=Rect(-13504.0,-8640.0,-13184.0,-8384.0)
set qs=Rect(26048.0,-2848.0,26400.0,-2528.0)
set as=Rect(28864.0,-3360.0,29152.0,-3040.0)
set ns=Rect(28064.0,2592.0,28352.0,2880.0)
set ds=Rect(27488.0,-5984.0,27808.0,-5664.0)
call mT()
call QT()
call InitBlizzard()
call eR()
call iX()
set lX=Ts
if TriggerEvaluate(lX) then
call TriggerExecute(lX)
endif
set bX=wt
if TriggerEvaluate(bX) then
call TriggerExecute(bX)
endif
set OX=CreateTrigger()
call TriggerAddCondition(OX,Condition(Kn))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Real.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(Ln))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Integer.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(Xn))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package String.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(Cn))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Angle.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(Vn))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Vectors.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(Bn))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Maths.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(Nn))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Player.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(Mn))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Printing.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(wd))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Basics.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(ud))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package GameTimer.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(rd))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MagicFunctions.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(sd))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package ErrorHandling.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(td))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Matrices.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(id))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Quaternion.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(Sd))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Table.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(cd))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Playercolor.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(od))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Colors.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(Od))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Group.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(ld))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Lightning.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(bd))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package WeatherEffects.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(yd))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package TypeCasting.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(pd))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package ClosureForGroups.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(ed))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package LinkedList.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(qd))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Abilities.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(ad))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package AbilityIds.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(nd))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Bootleg.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(dd))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Buildings.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(fd))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MutliboardTools.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(Rd))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package HashList.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(Td))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package EventHelper.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(Yd))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package RegisterEvents.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(Gd))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package TimerUtils.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(gd))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package ClosureTimers.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(hd))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package TargetsAllowed.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(Fd))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Doodads.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(kd))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Icons.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(jd))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Objects.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(xd))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Sounds.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(vd))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Soundsets.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(md))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Textures.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(Qd))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package UI.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(Wd))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Units.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(Ed))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package UnitIds.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(Zd))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MapBounds.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(Ud))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package DummyRecycler.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(Id))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package StringUtils.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(Pd))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package ObjectIds.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(Ad))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Preloader.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(Dd))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package ObjectIdGenerator.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(Hd))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package OnUnitEnterLeave.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(Jd))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package UnitIndexer.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(Kd))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package ClosureEvents.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(Ld))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MathTools.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(Xd))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Forces.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(Cd))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Strings.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(Vd))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package CityBaseTaxes.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(Bd))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Revolts.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(Nd))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package City.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(Md))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Multiboards.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(wf))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package PlayerStats.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(uf))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Main.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(rf))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package CastleCapture.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(sf))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package CityBuilded.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(tf))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package CityManage.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(Sf))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package CityModifiers.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(cf))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Clerics.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(of))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package HashSet.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(Of))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package VoteKick.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(lf))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Commands.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(bf))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Credits.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(yf))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Economy.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(pf))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package DateTime.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(ef))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Diplomacy.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(qf))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Garissons.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(af))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package LimitEncampments.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(nf))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package LimitMercenaryCamps.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(df))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Logarithm.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(ff))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MainInit.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(Rf))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MassControl.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(Tf))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MultiboardCityUpdate.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(Yf))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package NoShipsNearRivers.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(Gf))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package NoStarvationOnBoat.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(gf))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package OnPlayerLeave.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(hf))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package OreCapture.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(Ff))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package RangeChecks.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(kf))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Religion.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(jf))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Taxation.")
endif
call TriggerClearConditions(OX)
call TriggerAddCondition(OX,Condition(xf))
if not TriggerEvaluate(OX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Upkeep.")
endif
call TriggerClearConditions(OX)
call DestroyTrigger(OX)
set OX=null
set lX=null
set bX=null
endfunction
function SX takes nothing returns nothing
call SetPlayerStartLocation(Player(0),0)
call ForcePlayerStartLocation(Player(0),0)
call SetPlayerColor(Player(0),ConvertPlayerColor(0))
call SetPlayerRacePreference(Player(0),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(0),false)
call SetPlayerController(Player(0),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(1),1)
call ForcePlayerStartLocation(Player(1),1)
call SetPlayerColor(Player(1),ConvertPlayerColor(1))
call SetPlayerRacePreference(Player(1),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(1),false)
call SetPlayerController(Player(1),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(2),2)
call ForcePlayerStartLocation(Player(2),2)
call SetPlayerColor(Player(2),ConvertPlayerColor(2))
call SetPlayerRacePreference(Player(2),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(2),false)
call SetPlayerController(Player(2),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(3),3)
call ForcePlayerStartLocation(Player(3),3)
call SetPlayerColor(Player(3),ConvertPlayerColor(3))
call SetPlayerRacePreference(Player(3),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(3),false)
call SetPlayerController(Player(3),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(4),4)
call ForcePlayerStartLocation(Player(4),4)
call SetPlayerColor(Player(4),ConvertPlayerColor(4))
call SetPlayerRacePreference(Player(4),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(4),false)
call SetPlayerController(Player(4),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(5),5)
call ForcePlayerStartLocation(Player(5),5)
call SetPlayerColor(Player(5),ConvertPlayerColor(5))
call SetPlayerRacePreference(Player(5),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(5),false)
call SetPlayerController(Player(5),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(6),6)
call ForcePlayerStartLocation(Player(6),6)
call SetPlayerColor(Player(6),ConvertPlayerColor(6))
call SetPlayerRacePreference(Player(6),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(6),false)
call SetPlayerController(Player(6),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(7),7)
call ForcePlayerStartLocation(Player(7),7)
call SetPlayerColor(Player(7),ConvertPlayerColor(7))
call SetPlayerRacePreference(Player(7),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(7),false)
call SetPlayerController(Player(7),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(8),8)
call ForcePlayerStartLocation(Player(8),8)
call SetPlayerColor(Player(8),ConvertPlayerColor(8))
call SetPlayerRacePreference(Player(8),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(8),false)
call SetPlayerController(Player(8),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(9),9)
call ForcePlayerStartLocation(Player(9),9)
call SetPlayerColor(Player(9),ConvertPlayerColor(9))
call SetPlayerRacePreference(Player(9),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(9),false)
call SetPlayerController(Player(9),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(10),10)
call ForcePlayerStartLocation(Player(10),10)
call SetPlayerColor(Player(10),ConvertPlayerColor(10))
call SetPlayerRacePreference(Player(10),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(10),false)
call SetPlayerController(Player(10),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(11),11)
call ForcePlayerStartLocation(Player(11),11)
call SetPlayerColor(Player(11),ConvertPlayerColor(11))
call SetPlayerRacePreference(Player(11),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(11),false)
call SetPlayerController(Player(11),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(12),12)
call ForcePlayerStartLocation(Player(12),12)
call SetPlayerColor(Player(12),ConvertPlayerColor(12))
call SetPlayerRacePreference(Player(12),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(12),false)
call SetPlayerController(Player(12),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(13),13)
call ForcePlayerStartLocation(Player(13),13)
call SetPlayerColor(Player(13),ConvertPlayerColor(13))
call SetPlayerRacePreference(Player(13),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(13),false)
call SetPlayerController(Player(13),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(14),14)
call ForcePlayerStartLocation(Player(14),14)
call SetPlayerColor(Player(14),ConvertPlayerColor(14))
call SetPlayerRacePreference(Player(14),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(14),false)
call SetPlayerController(Player(14),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(15),15)
call ForcePlayerStartLocation(Player(15),15)
call SetPlayerColor(Player(15),ConvertPlayerColor(15))
call SetPlayerRacePreference(Player(15),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(15),false)
call SetPlayerController(Player(15),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(16),16)
call ForcePlayerStartLocation(Player(16),16)
call SetPlayerColor(Player(16),ConvertPlayerColor(16))
call SetPlayerRacePreference(Player(16),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(16),false)
call SetPlayerController(Player(16),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(17),17)
call ForcePlayerStartLocation(Player(17),17)
call SetPlayerColor(Player(17),ConvertPlayerColor(17))
call SetPlayerRacePreference(Player(17),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(17),false)
call SetPlayerController(Player(17),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(18),18)
call ForcePlayerStartLocation(Player(18),18)
call SetPlayerColor(Player(18),ConvertPlayerColor(18))
call SetPlayerRacePreference(Player(18),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(18),false)
call SetPlayerController(Player(18),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(19),19)
call ForcePlayerStartLocation(Player(19),19)
call SetPlayerColor(Player(19),ConvertPlayerColor(19))
call SetPlayerRacePreference(Player(19),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(19),false)
call SetPlayerController(Player(19),MAP_CONTROL_USER)
endfunction
function cX takes nothing returns nothing
call SetPlayerTeam(Player(0),0)
call SetPlayerTeam(Player(1),0)
call SetPlayerTeam(Player(2),0)
call SetPlayerTeam(Player(3),0)
call SetPlayerTeam(Player(4),0)
call SetPlayerTeam(Player(5),0)
call SetPlayerTeam(Player(6),0)
call SetPlayerTeam(Player(7),0)
call SetPlayerTeam(Player(8),0)
call SetPlayerTeam(Player(9),0)
call SetPlayerTeam(Player(10),0)
call SetPlayerTeam(Player(11),0)
call SetPlayerTeam(Player(12),1)
call SetPlayerTeam(Player(13),1)
call SetPlayerTeam(Player(14),1)
call SetPlayerTeam(Player(15),1)
call SetPlayerTeam(Player(16),1)
call SetPlayerTeam(Player(17),1)
call SetPlayerTeam(Player(18),1)
call SetPlayerTeam(Player(19),1)
endfunction
function oX takes nothing returns nothing
call SetStartLocPrioCount(0,19)
call SetStartLocPrio(0,0,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,1,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,2,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,3,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,4,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,9,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,10,11,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,11,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,12,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,13,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,14,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,15,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,16,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,17,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,18,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(1,9)
call SetStartLocPrio(1,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,1,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,2,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,3,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,4,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(2,9)
call SetStartLocPrio(2,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,2,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,3,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,4,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(3,9)
call SetStartLocPrio(3,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,3,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,4,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(4,9)
call SetStartLocPrio(4,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,4,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(5,9)
call SetStartLocPrio(5,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(6,9)
call SetStartLocPrio(6,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(7,9)
call SetStartLocPrio(7,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(8,9)
call SetStartLocPrio(8,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(9,9)
call SetStartLocPrio(9,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,8,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(10,16)
call SetStartLocPrio(10,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,8,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,9,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,10,12,MAP_LOC_PRIO_LOW)
call SetStartLocPrio(10,11,13,MAP_LOC_PRIO_LOW)
call SetStartLocPrio(10,12,14,MAP_LOC_PRIO_LOW)
call SetStartLocPrio(10,13,15,MAP_LOC_PRIO_LOW)
call SetStartLocPrio(10,14,16,MAP_LOC_PRIO_LOW)
call SetStartLocPrio(10,15,17,MAP_LOC_PRIO_LOW)
call SetStartLocPrioCount(11,19)
call SetStartLocPrio(11,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,8,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,9,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,10,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,11,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,12,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,13,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,14,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,15,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,16,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,17,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,18,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(12,5)
call SetStartLocPrio(12,0,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,1,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,2,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,3,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,4,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(13,5)
call SetStartLocPrio(13,0,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,1,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,2,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,3,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,4,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(14,5)
call SetStartLocPrio(14,0,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,1,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,2,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,3,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,4,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(15,5)
call SetStartLocPrio(15,0,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,1,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,2,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,3,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,4,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(16,5)
call SetStartLocPrio(16,0,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,1,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,2,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,3,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,4,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(17,5)
call SetStartLocPrio(17,0,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,1,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,2,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,3,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,4,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(18,1)
call SetStartLocPrio(18,0,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(19,1)
call SetStartLocPrio(19,0,18,MAP_LOC_PRIO_HIGH)
endfunction
function config takes nothing returns nothing
call SetMapName("TRIGSTR_001")
call SetMapDescription("TRIGSTR_003")
call SetPlayers(20)
call SetTeams(20)
call SetGamePlacement(MAP_PLACEMENT_TEAMS_TOGETHER)
call DefineStartLocation(0,320.0,5184.0)
call DefineStartLocation(1,320.0,5184.0)
call DefineStartLocation(2,320.0,5184.0)
call DefineStartLocation(3,320.0,5184.0)
call DefineStartLocation(4,320.0,5184.0)
call DefineStartLocation(5,320.0,5184.0)
call DefineStartLocation(6,320.0,5184.0)
call DefineStartLocation(7,320.0,5184.0)
call DefineStartLocation(8,320.0,5184.0)
call DefineStartLocation(9,320.0,5184.0)
call DefineStartLocation(10,320.0,5184.0)
call DefineStartLocation(11,320.0,5184.0)
call DefineStartLocation(12,320.0,5184.0)
call DefineStartLocation(13,320.0,5184.0)
call DefineStartLocation(14,320.0,5184.0)
call DefineStartLocation(15,320.0,5184.0)
call DefineStartLocation(16,320.0,5184.0)
call DefineStartLocation(17,320.0,5184.0)
call DefineStartLocation(18,320.0,5184.0)
call DefineStartLocation(19,320.0,5184.0)
call SX()
call cX()
call oX()
endfunction
