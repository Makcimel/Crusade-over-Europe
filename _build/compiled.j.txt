// this script was compiled with wurst 1.8.0.0-jenkins-Wurst-1072
globals
group w=null
location u=null
integer array r
force s=null
integer array t
location i=null
location S=null
location c=null
location o=null
rect O=null
rect l=null
group b=null
integer array y
group p=null
location e=null
boolean array q
rect a=null
rect n=null
rect d=null
rect f=null
rect R=null
rect T=null
rect Y=null
rect G=null
rect g=null
rect h=null
rect F=null
rect k=null
rect j=null
rect x=null
rect v=null
rect m=null
rect Q=null
rect W=null
rect E=null
rect Z=null
rect U=null
rect I=null
rect P=null
rect A=null
rect D=null
rect H=null
rect J=null
rect K=null
rect L=null
rect X=null
rect C=null
rect V=null
rect B=null
rect N=null
rect M=null
rect ww=null
rect uw=null
rect rw=null
rect sw=null
rect tw=null
rect iw=null
rect Sw=null
rect cw=null
rect ow=null
rect Ow=null
rect lw=null
rect bw=null
rect yw=null
rect pw=null
rect ew=null
rect qw=null
rect aw=null
rect nw=null
rect dw=null
rect fw=null
rect Rw=null
rect Tw=null
rect Yw=null
rect Gw=null
rect gw=null
rect hw=null
rect Fw=null
rect kw=null
rect jw=null
rect xw=null
rect vw=null
rect mw=null
rect Qw=null
rect Ww=null
rect Ew=null
rect Zw=null
rect Uw=null
rect Iw=null
rect Pw=null
rect Aw=null
rect Dw=null
rect Hw=null
rect Jw=null
rect Kw=null
rect Lw=null
rect Xw=null
rect Cw=null
rect Vw=null
rect Bw=null
rect Nw=null
rect Mw=null
rect wu=null
rect uu=null
rect ru=null
rect su=null
rect tu=null
rect iu=null
rect Su=null
rect cu=null
rect ou=null
rect Ou=null
rect lu=null
rect bu=null
rect yu=null
rect pu=null
rect eu=null
rect qu=null
rect au=null
rect nu=null
rect du=null
rect fu=null
rect Ru=null
rect Tu=null
rect Yu=null
rect Gu=null
rect gu=null
rect hu=null
rect Fu=null
rect ku=null
rect ju=null
rect xu=null
rect vu=null
rect mu=null
rect Qu=null
rect Wu=null
rect Eu=null
rect Zu=null
rect Uu=null
rect Iu=null
rect Pu=null
rect Au=null
rect Du=null
rect Hu=null
rect Ju=null
rect Ku=null
rect Lu=null
rect Xu=null
rect Cu=null
rect Vu=null
rect Bu=null
rect Nu=null
rect Mu=null
rect wr=null
rect ur=null
rect rr=null
rect sr=null
rect tr=null
rect ir=null
rect Sr=null
rect cr=null
rect lr=null
rect br=null
rect yr=null
rect pr=null
rect er=null
rect qr=null
rect ar=null
rect nr=null
rect dr=null
rect fr=null
rect Rr=null
rect Tr=null
rect Yr=null
rect Gr=null
rect gr=null
rect hr=null
rect Fr=null
rect kr=null
rect jr=null
rect xr=null
rect vr=null
rect mr=null
rect Qr=null
rect Wr=null
rect Er=null
rect Zr=null
rect Ur=null
rect Ir=null
rect Pr=null
rect Ar=null
rect Dr=null
rect Hr=null
rect Jr=null
rect Kr=null
rect Lr=null
rect Xr=null
rect Cr=null
rect Vr=null
rect Br=null
rect Nr=null
rect Mr=null
rect ws=null
rect us=null
rect rs=null
rect ss=null
rect ts=null
rect is=null
rect Ss=null
rect cs=null
rect os=null
rect Os=null
rect ls=null
rect bs=null
rect ys=null
rect ps=null
rect es=null
rect qs=null
rect as=null
rect ns=null
rect ds=null
rect fs=null
sound Rs=null
trigger Ts=null
trigger Ys=null
trigger Gs=null
trigger gs=null
trigger hs=null
trigger Fs=null
trigger ks=null
trigger js=null
trigger xs=null
trigger vs=null
trigger ms=null
trigger Qs=null
trigger Ws=null
trigger Es=null
trigger Zs=null
trigger Us=null
trigger Is=null
trigger Ps=null
trigger As=null
trigger Ds=null
trigger Hs=null
trigger Js=null
trigger Ks=null
trigger Ls=null
trigger Xs=null
trigger Cs=null
trigger Vs=null
trigger Bs=null
trigger Ns=null
trigger Ms=null
trigger wt=null
trigger ut=null
trigger rt=null
trigger st=null
trigger tt=null
trigger St=null
trigger ct=null
trigger ot=null
trigger Ot=null
trigger lt=null
trigger bt=null
trigger yt=null
trigger pt=null
trigger et=null
trigger qt=null
trigger at=null
trigger nt=null
trigger dt=null
trigger ft=null
trigger Rt=null
trigger Tt=null
trigger Yt=null
trigger Gt=null
trigger gt=null
trigger ht=null
trigger Ft=null
trigger kt=null
trigger jt=null
trigger xt=null
trigger vt=null
trigger mt=null
trigger Qt=null
trigger Wt=null
trigger Et=null
trigger Zt=null
trigger Ut=null
trigger It=null
trigger Pt=null
trigger At=null
trigger Dt=null
trigger Ht=null
trigger Jt=null
trigger Kt=null
trigger Lt=null
trigger Xt=null
trigger Ct=null
trigger Vt=null
trigger Bt=null
trigger Nt=null
trigger Mt=null
trigger wi=null
trigger ui=null
trigger ri=null
trigger si=null
trigger ti=null
trigger ii=null
trigger Si=null
trigger ci=null
trigger oi=null
trigger Oi=null
trigger li=null
trigger bi=null
trigger yi=null
trigger pi=null
trigger ei=null
trigger qi=null
trigger ai=null
trigger ni=null
trigger di=null
trigger fi=null
trigger Ri=null
trigger Ti=null
trigger Yi=null
trigger Gi=null
trigger gi=null
trigger hi=null
trigger Fi=null
trigger ki=null
trigger ji=null
trigger xi=null
trigger vi=null
trigger mi=null
trigger Qi=null
trigger Wi=null
trigger Ei=null
trigger Zi=null
trigger Ui=null
trigger Ii=null
trigger Pi=null
trigger Ai=null
trigger Di=null
trigger Hi=null
trigger Ji=null
trigger Ki=null
trigger Li=null
trigger Xi=null
trigger Ci=null
trigger Vi=null
trigger Bi=null
trigger Ni=null
trigger Mi=null
trigger wS=null
trigger uS=null
trigger rS=null
trigger sS=null
trigger tS=null
trigger iS=null
trigger SS=null
trigger cS=null
trigger oS=null
integer OS=0
player lS=null
integer bS=0
integer array yS
integer pS=0
integer eS=0
integer qS=0
integer aS=0
integer nS=0
integer dS=0
integer fS=0
integer RS=0
integer TS=0
integer YS=0
real array GS
real array gS
boolean array hS
real array FS
integer array kS
real array jS
real array xS
string array vS
string array mS
integer QS=0
real WS=0.
real array ES
integer array ZS
real array US
real array IS
real array PS
integer array AS
integer array DS
integer array HS
integer array JS
integer array KS
unit array LS
string array XS
integer array CS
integer array VS
integer array BS
real array NS
real array MS
integer array wc
integer array uc
real array rc
real array sc
real array tc
real array ic
integer array Sc
real array cc
integer array oc
integer array Oc
integer array lc
playerevent bc=null
trigger yc=null
trigger pc=null
trigger ec=null
integer array qc
integer ac=0
integer nc=0
integer dc=0
integer array fc
integer array Rc
integer array Tc
integer array Yc
integer array Gc
integer array gc
integer array hc
integer array Fc
unit array kc
group jc=null
integer array xc
integer vc=0
filterfunc mc=null
integer Qc=0
timer array Wc
timer array Ec
integer array Zc
integer array Uc
integer array Ic
string array Pc
integer Ac=0
real array Dc
real Hc=0.
integer array Jc
integer array Kc
integer array Lc
integer array Xc
integer array Cc
integer Vc=0
integer array Bc
integer array Nc
hashtable Mc=null
force wo=null
force uo=null
force ro=null
force so=null
force array io
integer array So
integer array co
integer array oo
timer Oo=null
real lo=0.
group bo=null
hashtable yo=null
hashtable po=null
integer array eo
integer array qo
integer array ao
unit array no
integer array do
unit array fo
integer array Ro
integer array To
integer array Yo
integer array Go
integer array go
integer array ho
integer array Fo
boolean array ko
integer array jo
integer array xo
string array vo
boolean array mo
integer Qo=0
integer Wo=0
boolean Eo=false
boolean Zo=false
boolean Uo=false
timer Io=null
real Po=0.
rect Ao=null
rect Do=null
region Ho=null
real Jo=0.
real Ko=0.
integer Lo=0
integer Xo=0
integer Co=0
player array Vo
unit array Bo
integer array No
unit array Mo
integer array wO
real array uO
real array rO
integer array sO
integer array tO
integer array iO
integer array SO
integer array cO
integer array oO
integer array OO
integer array lO
integer array bO
multiboard array yO
unit array pO
trigger eO=null
group qO=null
unit array aO
integer nO=0
integer array dO
integer array fO
player array RO
boolean array TO
integer array YO
integer array GO
player array gO
player hO=null
playercolor FO=null
playercolor kO=null
playercolor jO=null
playercolor xO=null
playercolor array vO
group mO=null
unit QO=null
integer WO=0
unit array EO
boolean array ZO
integer array UO
player array IO
unit array PO
real AO=0.
trigger array DO
integer HO=0
real array JO
integer KO=0
string array LO
string array XO
string array CO
string array VO
string array BO
string array NO
string array MO
string array wl
string array ul
string array rl
string array sl
string array tl
string array il
string array Sl
string array cl
string array ol
string array Ol
hashtable ll=null
timer array bl
integer yl=0
integer pl=0
integer el=0
trigger ql=null
trigger al=null
unit nl=null
unit dl=null
unit array fl
integer Rl=0
integer Tl=0
integer array Yl
integer Gl=0
integer gl=0
integer hl=0
integer Fl=0
integer array kl
integer jl=0
integer array xl
integer vl=0
integer ml=0
integer array Ql
integer array Wl
integer El=0
integer Zl=0
integer array Ul
integer Il=0
integer Pl=0
integer array Al
integer array Dl
integer Hl=0
integer Jl=0
integer array Kl
integer array Ll
integer Xl=0
integer Cl=0
integer array Vl
integer array Bl
integer Nl=0
integer Ml=0
integer array wb
integer ub=0
integer array rb
integer array sb
integer tb=0
integer ib=0
integer array Sb
integer array cb
integer array ob
integer Ob=0
integer lb=0
integer array bb
integer yb=0
integer pb=0
integer array eb
integer qb=0
integer ab=0
integer array nb
integer array db
integer fb=0
integer Rb=0
integer array Tb
integer array Yb
integer Gb=0
integer gb=0
integer array hb
integer Fb=0
integer kb=0
integer array jb
integer xb=0
integer vb=0
integer array mb
integer array Qb
integer Wb=0
integer Eb=0
integer array Zb
integer Ub=0
string array Ib
integer Pb=0
integer Ab=0
integer Db=0
integer array Hb
integer array Jb
integer array Kb
integer array Lb
integer array Xb
integer array Cb
integer array Vb
integer array Bb
integer array Nb
integer array Mb
integer array wy
integer array uy
integer array ry
integer array sy
integer array ty
integer array iy
integer array Sy
integer array cy
integer array oy
integer array Oy
integer array ly
integer array by
integer array yy
integer array py
code ey=null
code qy=null
code ay=null
code ny=null
code dy=null
code fy=null
code Ry=null
code Ty=null
code Yy=null
code Gy=null
code gy=null
code hy=null
code Fy=null
code ky=null
code jy=null
code xy=null
code vy=null
code my=null
code Qy=null
code Wy=null
code Ey=null
code Zy=null
code Uy=null
code Iy=null
code Py=null
code Ay=null
code Dy=null
code Hy=null
code Jy=null
code Ky=null
code Ly=null
code Xy=null
code Cy=null
code Vy=null
code By=null
code Ny=null
code My=null
code wp=null
code up=null
code rp=null
code sp=null
code tp=null
code ip=null
code Sp=null
code cp=null
code op=null
code Op=null
code lp=null
code bp=null
code yp=null
code pp=null
code ep=null
code qp=null
code ap=null
code np=null
code dp=null
code fp=null
code Rp=null
code Tp=null
code Yp=null
code Gp=null
code gp=null
code hp=null
code Fp=null
code kp=null
code jp=null
code xp=null
code vp=null
code mp=null
code Qp=null
code Wp=null
code Ep=null
code Zp=null
code Up=null
code Ip=null
code Pp=null
code Ap=null
code Dp=null
code Hp=null
code Jp=null
code Kp=null
code Lp=null
code Xp=null
code Cp=null
code Vp=null
code Bp=null
code Np=null
code Mp=null
code we=null
code ue=null
code re=null
code se=null
code te=null
code ie=null
code Se=null
code ce=null
code oe=null
code Oe=null
code le=null
code be=null
code ye=null
code pe=null
code ee=null
code qe=null
code ae=null
code ne=null
code de=null
code fe=null
code Re=null
code Te=null
code Ye=null
code Ge=null
code ge=null
code he=null
code Fe=null
code ke=null
code je=null
code xe=null
code ve=null
code me=null
code Qe=null
code We=null
code Ee=null
code Ze=null
code Ue=null
code Ie=null
code Pe=null
code Ae=null
code De=null
code He=null
code Je=null
code Ke=null
code Le=null
code Xe=null
code Ce=null
code Ve=null
code Be=null
code Ne=null
code Me=null
code wq=null
code uq=null
code rq=null
code sq=null
code tq=null
code iq=null
code Sq=null
code cq=null
code oq=null
code Oq=null
code lq=null
code bq=null
code yq=null
code pq=null
code eq=null
code qq=null
code aq=null
code nq=null
code dq=null
code fq=null
code Rq=null
code Tq=null
code Yq=null
code Gq=null
code gq=null
code hq=null
code Fq=null
code kq=null
code jq=null
code xq=null
code vq=null
code mq=null
code Qq=null
code Wq=null
code Eq=null
code Zq=null
code Uq=null
code Iq=null
code Pq=null
code Aq=null
code Dq=null
code Hq=null
code Jq=null
code Kq=null
code Lq=null
code Xq=null
code Cq=null
code Vq=null
code Bq=null
code Nq=null
code Mq=null
code wa=null
code ua=null
code ra=null
code sa=null
code ta=null
code ia=null
code Sa=null
code ca=null
code oa=null
code Oa=null
code la=null
code ba=null
code ya=null
code pa=null
code ea=null
code qa=null
code aa=null
code na=null
code da=null
code fa=null
code Ra=null
code Ta=null
code Ya=null
code Ga=null
code ga=null
code ha=null
code Fa=null
code ka=null
code ja=null
code xa=null
code va=null
code ma=null
code Qa=null
code Wa=null
code Ea=null
code Za=null
code Ua=null
code Ia=null
code Pa=null
code Aa=null
code Da=null
code Ha=null
code Ja=null
code Ka=null
code La=null
code Xa=null
code Ca=null
code Va=null
code Ba=null
code Na=null
code Ma=null
code wn=null
code un=null
code rn=null
code sn=null
code tn=null
code Sn=null
code cn=null
code on=null
code On=null
code ln=null
code bn=null
code yn=null
code pn=null
code en=null
code qn=null
code an=null
code nn=null
code dn=null
code fn=null
code Rn=null
code Tn=null
code Yn=null
code Gn=null
code gn=null
code hn=null
code Fn=null
code kn=null
code jn=null
code xn=null
code vn=null
code mn=null
code Qn=null
code Wn=null
code En=null
code Zn=null
code Un=null
code In=null
code Pn=null
code An=null
code Dn=null
code Hn=null
code Jn=null
code Kn=null
code Ln=null
code Xn=null
code Cn=null
code Vn=null
code Bn=null
code Nn=null
code Mn=null
code wd=null
code ud=null
code rd=null
code sd=null
code td=null
code id=null
code Sd=null
code cd=null
code od=null
code Od=null
code ld=null
code bd=null
code yd=null
code pd=null
code ed=null
code qd=null
code ad=null
code nd=null
code dd=null
code fd=null
code Rd=null
code Td=null
code Yd=null
code Gd=null
code gd=null
code hd=null
code Fd=null
code kd=null
code jd=null
code xd=null
code vd=null
code md=null
code Qd=null
code Wd=null
code Ed=null
code Zd=null
code Ud=null
code Id=null
code Pd=null
code Ad=null
code Dd=null
code Hd=null
code Jd=null
code Kd=null
code Ld=null
code Xd=null
code Cd=null
code Vd=null
code Bd=null
code Nd=null
code Md=null
code wf=null
code uf=null
code rf=null
code sf=null
code tf=null
code Sf=null
code cf=null
code of=null
code Of=null
code lf=null
code bf=null
code yf=null
code pf=null
code ef=null
code qf=null
code af=null
code nf=null
code df=null
code ff=null
code Rf=null
code Tf=null
code Yf=null
code Gf=null
code gf=null
code hf=null
code Ff=null
code kf=null
code jf=null
code xf=null
code vf=null
code mf=null
code Qf=null
code Wf=null
code Ef=null
code Zf=null
code Uf=null
code If=null
code Pf=null
code Af=null
code Df=null
code Hf=null
code Jf=null
unit Kf=null
multiboard Lf=null
timer Xf=null
unit Cf=null
trigger Vf=null
rect Bf=null
endglobals
function CR takes nothing returns nothing
local player XR=Player(PLAYER_NEUTRAL_AGGRESSIVE)
call CreateUnit(XR,1747989297,-1600.0,-128.0,270.000)
call CreateUnit(XR,1747989297,-15040.0,10816.0,270.000)
call CreateUnit(XR,1747989297,-256.0,-2432.0,270.000)
call CreateUnit(XR,1747989297,-24320.0,3904.0,270.000)
call CreateUnit(XR,1747989297,-23552.0,-4544.0,270.000)
call CreateUnit(XR,1747989297,-23360.0,-64.0,270.000)
call CreateUnit(XR,1747989297,2176.0,-7744.0,270.000)
call CreateUnit(XR,1747989297,-6336.0,8000.0,270.000)
call CreateUnit(XR,1747989297,832.0,-5568.0,270.000)
call CreateUnit(XR,1747989297,-3648.0,1856.0,270.000)
call CreateUnit(XR,1747989042,-768.0,24384.0,270.000)
call CreateUnit(XR,1747989297,-26304.0,-8704.0,270.000)
call CreateUnit(XR,1747989297,2688.0,-3008.0,270.000)
call CreateUnit(XR,1747989297,-5568.0,-2752.0,270.000)
call CreateUnit(XR,1747989297,-3456.0,-2880.0,270.000)
call CreateUnit(XR,1747989297,-6464.0,1280.0,270.000)
call CreateUnit(XR,1747989297,-8064.0,3200.0,270.000)
call CreateUnit(XR,1747989297,-8768.0,1984.0,270.000)
call CreateUnit(XR,1747989297,-7104.0,-768.0,270.000)
call CreateUnit(XR,1747989297,-28544.0,0.0,270.000)
call CreateUnit(XR,1747989297,-27840.0,-2752.0,270.000)
call CreateUnit(XR,1747989297,-27008.0,2688.0,270.000)
call CreateUnit(XR,1747989297,-17024.0,512.0,270.000)
call CreateUnit(XR,1747989297,-21696.0,-4224.0,270.000)
call CreateUnit(XR,1747989042,17536.0,-9024.0,270.000)
call CreateUnit(XR,1747989297,10816.0,-7360.0,270.000)
call CreateUnit(XR,1747989297,12800.0,-6912.0,270.000)
call CreateUnit(XR,1747989297,15488.0,-7552.0,270.000)
call CreateUnit(XR,1747989297,19072.0,-7424.0,270.000)
call CreateUnit(XR,1747989297,15360.0,-5568.0,270.000)
call CreateUnit(XR,1747989297,17216.0,-8640.0,270.000)
call CreateUnit(XR,1747989297,16960.0,-16192.0,270.000)
call CreateUnit(XR,1747989297,6976.0,-6592.0,270.000)
call CreateUnit(XR,1747989297,24000.0,256.0,270.000)
call CreateUnit(XR,1747989297,-10688.0,-384.0,270.000)
call CreateUnit(XR,1747989297,13952.0,-11008.0,270.000)
call CreateUnit(XR,1747989297,-10944.0,-4608.0,270.000)
call CreateUnit(XR,1747989297,-21440.0,-8384.0,270.000)
call CreateUnit(XR,1747989297,17472.0,9472.0,270.000)
call CreateUnit(XR,1747989297,-16768.0,-8064.0,270.000)
call CreateUnit(XR,1747989297,-9920.0,-11264.0,270.000)
call CreateUnit(XR,1747989297,-7488.0,-16256.0,270.000)
call CreateUnit(XR,1747989297,448.0,-17600.0,270.000)
call CreateUnit(XR,1747989297,11008.0,-18496.0,270.000)
call CreateUnit(XR,1747989297,13248.0,-17856.0,270.000)
call CreateUnit(XR,1747989297,12288.0,-20864.0,270.000)
call CreateUnit(XR,1747989297,-11456.0,11008.0,270.000)
call CreateUnit(XR,1747989297,-8640.0,7104.0,270.000)
call CreateUnit(XR,1747989297,-7360.0,17088.0,270.000)
call CreateUnit(XR,1747989297,-5120.0,14528.0,270.000)
call CreateUnit(XR,1747989297,15488.0,-26816.0,270.000)
call CreateUnit(XR,1747989297,-9600.0,13120.0,270.000)
call CreateUnit(XR,1747989297,-11456.0,14528.0,270.000)
call CreateUnit(XR,1747989297,-12544.0,16320.0,270.000)
call CreateUnit(XR,1747989297,-7680.0,22272.0,270.000)
call CreateUnit(XR,1747989297,-6272.0,21376.0,270.000)
call CreateUnit(XR,1747989297,-4992.0,21888.0,270.000)
call CreateUnit(XR,1747989297,-1280.0,23936.0,270.000)
call CreateUnit(XR,1747989297,-3328.0,23232.0,270.000)
call CreateUnit(XR,1747989297,-2560.0,26368.0,270.000)
call CreateUnit(XR,1747989297,-6528.0,28288.0,270.000)
call CreateUnit(XR,1747989297,-9856.0,28416.0,270.000)
call CreateUnit(XR,1747989297,-13376.0,15104.0,270.000)
call CreateUnit(XR,1747989297,-10688.0,3520.0,270.000)
call CreateUnit(XR,1747989297,-9856.0,5440.0,270.000)
call CreateUnit(XR,1747989297,-6720.0,4096.0,270.000)
call CreateUnit(XR,1747989297,-13632.0,2368.0,270.000)
call CreateUnit(XR,1747989297,-10496.0,17728.0,270.000)
call CreateUnit(XR,1747989297,-7616.0,11200.0,270.000)
call CreateUnit(XR,1747989297,-18688.0,5760.0,270.000)
call CreateUnit(XR,1747989297,-25024.0,-3008.0,270.000)
call CreateUnit(XR,1747989297,-20096.0,1408.0,270.000)
call CreateUnit(XR,1747989297,-7040.0,-7808.0,270.000)
call CreateUnit(XR,1747989297,-5376.0,-9216.0,270.000)
call CreateUnit(XR,1747989297,24896.0,-27456.0,270.000)
call CreateUnit(XR,1747989297,-20352.0,12224.0,270.000)
call CreateUnit(XR,1747989297,-13568.0,5184.0,270.000)
call CreateUnit(XR,1747989297,-5120.0,24576.0,270.000)
call CreateUnit(XR,1747989297,-1856.0,27776.0,270.000)
call CreateUnit(XR,1747989297,-16704.0,24192.0,270.000)
call CreateUnit(XR,1747989297,-15936.0,17088.0,270.000)
call CreateUnit(XR,1747989297,-17792.0,16064.0,270.000)
call CreateUnit(XR,1747989297,-20224.0,21632.0,270.000)
call CreateUnit(XR,1747989297,-22400.0,19968.0,270.000)
call CreateUnit(XR,1747989297,-15872.0,20544.0,270.000)
call CreateUnit(XR,1747989297,-19776.0,16512.0,270.000)
call CreateUnit(XR,1747989297,-17088.0,12672.0,270.000)
call CreateUnit(XR,1747989297,-18560.0,19712.0,270.000)
call CreateUnit(XR,1747989297,-15680.0,26112.0,270.000)
call CreateUnit(XR,1747989297,-17088.0,26816.0,270.000)
call CreateUnit(XR,1747989297,-16704.0,3584.0,270.000)
call CreateUnit(XR,1747989297,-11456.0,7232.0,270.000)
call CreateUnit(XR,1747989297,-18176.0,10816.0,270.000)
call CreateUnit(XR,1747989297,-16000.0,6016.0,270.000)
call CreateUnit(XR,1747989297,-8896.0,26688.0,270.000)
call CreateUnit(XR,1747989297,9216.0,-4416.0,270.000)
call CreateUnit(XR,1747989297,6656.0,-4480.0,270.000)
call CreateUnit(XR,1747989297,5184.0,-1856.0,270.000)
call CreateUnit(XR,1747989297,18624.0,-448.0,270.000)
call CreateUnit(XR,1747989297,11008.0,-1984.0,270.000)
call CreateUnit(XR,1747989297,14144.0,-128.0,270.000)
call CreateUnit(XR,1747989297,8384.0,-10368.0,270.000)
call CreateUnit(XR,1747989297,5376.0,-12224.0,270.000)
call CreateUnit(XR,1747989297,3392.0,-7296.0,270.000)
call CreateUnit(XR,1747989297,12672.0,-3904.0,270.000)
call CreateUnit(XR,1747989297,27008.0,-11520.0,270.000)
call CreateUnit(XR,1747989297,-25216.0,1472.0,270.000)
call CreateUnit(XR,1747989297,23552.0,11072.0,270.000)
call CreateUnit(XR,1747989297,-20736.0,-2112.0,270.000)
call CreateUnit(XR,1747989297,-22592.0,2560.0,270.000)
call CreateUnit(XR,1747989297,-20864.0,3136.0,270.000)
call CreateUnit(XR,1747989297,-17280.0,-3136.0,270.000)
call CreateUnit(XR,1747989297,-3584.0,4608.0,270.000)
call CreateUnit(XR,1747989297,1536.0,29440.0,270.000)
call CreateUnit(XR,1747989297,-23104.0,-8832.0,270.000)
call CreateUnit(XR,1747989297,1216.0,-960.0,270.000)
call CreateUnit(XR,1747989297,-13312.0,-8512.0,270.000)
call CreateUnit(XR,1747989297,26240.0,-2688.0,270.000)
call CreateUnit(XR,1747989043,-7872.0,17536.0,270.000)
call CreateUnit(XR,1747989297,-13568.0,12160.0,270.000)
call CreateUnit(XR,1747989297,-13696.0,8064.0,270.000)
call CreateUnit(XR,1747989297,27648.0,-5824.0,270.000)
call CreateUnit(XR,1747989297,-4544.0,11648.0,270.000)
call CreateUnit(XR,1747989297,28992.0,-3200.0,270.000)
call CreateUnit(XR,1747989297,-3072.0,8320.0,270.000)
call CreateUnit(XR,1747989297,-384.0,8512.0,270.000)
call CreateUnit(XR,1747989297,28224.0,2752.0,270.000)
call CreateUnit(XR,1747989297,-4992.0,17280.0,270.000)
call CreateUnit(XR,1747989297,64.0,12608.0,270.000)
call CreateUnit(XR,1747989297,-2112.0,13696.0,270.000)
call CreateUnit(XR,1747989297,4160.0,5376.0,270.000)
call CreateUnit(XR,1747989297,4224.0,3904.0,270.000)
call CreateUnit(XR,1747989297,7232.0,2240.0,270.000)
call CreateUnit(XR,1747989297,-384.0,3072.0,270.000)
call CreateUnit(XR,1747989297,-8128.0,19968.0,270.000)
call CreateUnit(XR,1747989297,3072.0,192.0,270.000)
call CreateUnit(XR,1747989297,832.0,15872.0,270.000)
call CreateUnit(XR,1747989297,-2304.0,16064.0,270.000)
call CreateUnit(XR,1747989297,4416.0,19648.0,270.000)
call CreateUnit(XR,1747989297,1792.0,6976.0,270.000)
call CreateUnit(XR,1747989297,5888.0,24960.0,270.000)
call CreateUnit(XR,1747989297,-1792.0,19200.0,270.000)
call CreateUnit(XR,1747989297,3008.0,22784.0,270.000)
call CreateUnit(XR,1747989297,3200.0,18240.0,270.000)
call CreateUnit(XR,1747989297,-3712.0,-6528.0,270.000)
call CreateUnit(XR,1747989297,-17216.0,22208.0,270.000)
call CreateUnit(XR,1747989297,-18880.0,17920.0,270.000)
call CreateUnit(XR,1747989297,-17280.0,18304.0,270.000)
call CreateUnit(XR,1747989297,-22272.0,22400.0,270.000)
call CreateUnit(XR,1747989297,-10496.0,-9152.0,270.000)
call CreateUnit(XR,1747989297,13248.0,5120.0,270.000)
call CreateUnit(XR,1747989297,7936.0,-2368.0,270.000)
call CreateUnit(XR,1747989297,3520.0,27008.0,270.000)
call CreateUnit(XR,1747989297,8832.0,26368.0,270.000)
call CreateUnit(XR,1747989297,6848.0,21440.0,270.000)
call CreateUnit(XR,1747989297,6144.0,18560.0,270.000)
call CreateUnit(XR,1747989297,3904.0,11072.0,270.000)
call CreateUnit(XR,1747989297,8512.0,12352.0,270.000)
call CreateUnit(XR,1747989297,9280.0,20032.0,270.000)
call CreateUnit(XR,1747989297,1216.0,11008.0,270.000)
call CreateUnit(XR,1747989044,-15680.0,11200.0,270.000)
call CreateUnit(XR,1747989044,-15104.0,17408.0,270.000)
call CreateUnit(XR,1747989045,-1728.0,28608.0,270.000)
call CreateUnit(XR,1747989043,-18304.0,18112.0,270.000)
call CreateUnit(XR,1747989044,-9600.0,13888.0,270.000)
call CreateUnit(XR,1747989297,384.0,19456.0,270.000)
call CreateUnit(XR,1747989044,4864.0,5952.0,270.000)
call CreateUnit(XR,1747989044,8000.0,-1664.0,270.000)
call CreateUnit(XR,1747989044,9280.0,-3008.0,270.000)
call CreateUnit(XR,1747989045,-21056.0,21056.0,270.000)
call CreateUnit(XR,1747989045,-19648.0,12224.0,270.000)
call CreateUnit(XR,1747989045,17984.0,-13120.0,270.000)
call CreateUnit(XR,1747989042,-28544.0,704.0,270.000)
call CreateUnit(XR,1747989045,-9344.0,7168.0,270.000)
call CreateUnit(XR,1747989043,-6336.0,8576.0,270.000)
call CreateUnit(XR,1747989045,-15616.0,21248.0,270.000)
call CreateUnit(XR,1747989045,-16640.0,1024.0,270.000)
call CreateUnit(XR,1747989045,13760.0,-11584.0,270.000)
call CreateUnit(XR,1747989042,-11328.0,3712.0,270.000)
call CreateUnit(XR,1747989042,-16768.0,25920.0,270.000)
call CreateUnit(XR,1747989045,-19200.0,28352.0,270.000)
call CreateUnit(XR,1747989043,3456.0,11584.0,270.000)
call CreateUnit(XR,1747989044,-24640.0,4352.0,270.000)
call CreateUnit(XR,1747989044,-23232.0,-5120.0,270.000)
call CreateUnit(XR,1747989042,-23424.0,768.0,270.000)
call CreateUnit(XR,1747989045,-15936.0,-2688.0,270.000)
call CreateUnit(XR,1747989045,-10752.0,-3456.0,270.000)
call CreateUnit(XR,1747989044,-7552.0,4416.0,270.000)
call CreateUnit(XR,1747989045,-20160.0,-1600.0,270.000)
call CreateUnit(XR,1747989045,-21824.0,2560.0,270.000)
call CreateUnit(XR,1747989045,11392.0,-7104.0,270.000)
call CreateUnit(XR,1747989042,4352.0,20224.0,270.000)
call CreateUnit(XR,1747989044,-15360.0,4992.0,270.000)
call CreateUnit(XR,1747989042,-896.0,3392.0,270.000)
call CreateUnit(XR,1747989045,-6528.0,-832.0,270.000)
call CreateUnit(XR,1747989043,-4928.0,-3264.0,270.000)
call CreateUnit(XR,1747989042,-6144.0,-8192.0,270.000)
call CreateUnit(XR,1747989043,23424.0,640.0,270.000)
call CreateUnit(XR,1747989043,-6976.0,1344.0,270.000)
call CreateUnit(XR,1747989043,4352.0,128.0,270.000)
call CreateUnit(XR,1747989297,17472.0,19648.0,270.000)
call CreateUnit(XR,1747989044,-7872.0,22784.0,270.000)
call CreateUnit(XR,1747989297,20864.0,21504.0,270.000)
call CreateUnit(XR,1747989044,-9152.0,28480.0,270.000)
call CreateUnit(XR,1747989042,-27712.0,-9536.0,270.000)
call CreateUnit(XR,1747989042,4800.0,-12480.0,270.000)
call CreateUnit(XR,1747989045,7232.0,-11328.0,270.000)
call CreateUnit(XR,1747989045,1792.0,-8064.0,270.000)
call CreateUnit(XR,1747989297,-1600.0,5952.0,270.000)
call CreateUnit(XR,1747989043,-128.0,-1792.0,270.000)
call CreateUnit(XR,1747989042,-3392.0,8640.0,270.000)
call CreateUnit(XR,1747989044,-1856.0,16576.0,270.000)
call CreateUnit(XR,1747989043,-13888.0,14784.0,270.000)
call CreateUnit(XR,1747989297,-29568.0,-9792.0,270.000)
call CreateUnit(XR,1747989043,-9088.0,26240.0,270.000)
call CreateUnit(XR,1747989045,-5440.0,23808.0,270.000)
call CreateUnit(XR,1747989045,2176.0,30080.0,270.000)
call CreateUnit(XR,1747989043,1984.0,6464.0,270.000)
call CreateUnit(XR,1747989297,-26304.0,-1408.0,270.000)
call CreateUnit(XR,1747989043,448.0,13056.0,270.000)
call CreateUnit(XR,1747989045,3072.0,26752.0,270.000)
call CreateUnit(XR,1747989043,6656.0,18880.0,270.000)
call CreateUnit(XR,1747989043,3264.0,-3712.0,270.000)
call CreateUnit(XR,1747989297,15872.0,5760.0,270.000)
call CreateUnit(XR,1747989043,6528.0,22080.0,270.000)
call CreateUnit(XR,1747989044,8896.0,27008.0,270.000)
call CreateUnit(XR,1747989297,18496.0,-17280.0,270.000)
call CreateUnit(XR,1747989297,11392.0,7872.0,270.000)
call CreateUnit(XR,1747989297,12672.0,11328.0,270.000)
call CreateUnit(XR,1747989297,6016.0,12416.0,270.000)
call CreateUnit(XR,1747989297,7104.0,7808.0,270.000)
call CreateUnit(XR,1747989297,20864.0,2688.0,270.000)
call CreateUnit(XR,1747989297,24000.0,2560.0,270.000)
call CreateUnit(XR,1747989297,19648.0,11328.0,270.000)
call CreateUnit(XR,1747989297,11584.0,16960.0,270.000)
call CreateUnit(XR,1747989297,18496.0,-13248.0,270.000)
call CreateUnit(XR,1747989297,17216.0,-11456.0,270.000)
call CreateUnit(XR,1747989297,25088.0,-8320.0,270.000)
call CreateUnit(XR,1747989297,15680.0,-17536.0,270.000)
call CreateUnit(XR,1747989297,16640.0,-14208.0,270.000)
call CreateUnit(XR,1747989297,17280.0,-19584.0,270.000)
call CreateUnit(XR,1747989297,22912.0,-10240.0,270.000)
call CreateUnit(XR,1747989297,20864.0,-23040.0,270.000)
call CreateUnit(XR,1747989044,13120.0,-21696.0,270.000)
call CreateUnit(XR,1747989297,20096.0,-5760.0,270.000)
call CreateUnit(XR,1747989297,18816.0,-3776.0,270.000)
call CreateUnit(XR,1747989042,14464.0,-26432.0,270.000)
call CreateUnit(XR,1747989044,23808.0,-27776.0,270.000)
call CreateUnit(XR,1747989042,11776.0,-18688.0,270.000)
call CreateUnit(XR,1747989043,256.0,-18048.0,270.000)
call CreateUnit(XR,1747989045,-16192.0,-8192.0,270.000)
call CreateUnit(XR,1747989045,-11520.0,-10944.0,270.000)
call CreateUnit(XR,1747989045,16512.0,-19968.0,270.000)
call CreateUnit(XR,1747989045,20416.0,-22272.0,270.000)
call CreateUnit(XR,1747989044,28800.0,-11904.0,270.000)
call CreateUnit(XR,1747989297,15040.0,23104.0,270.000)
call CreateUnit(XR,1747989044,8128.0,12928.0,270.000)
call CreateUnit(XR,1747989044,16896.0,-15744.0,270.000)
call CreateUnit(XR,1747989042,17984.0,-640.0,270.000)
call CreateUnit(XR,1747989045,20608.0,3136.0,270.000)
call CreateUnit(XR,1747989045,7232.0,-5120.0,270.000)
call CreateUnit(XR,1747989045,25984.0,-8128.0,270.000)
call CreateUnit(XR,1747989045,20544.0,-5440.0,270.000)
call CreateUnit(XR,1747989045,11968.0,17856.0,270.000)
call CreateUnit(XR,1747989045,10048.0,20032.0,270.000)
call CreateUnit(XR,1747989043,15296.0,-7232.0,270.000)
call CreateUnit(XR,1747989043,13056.0,11776.0,270.000)
call CreateUnit(XR,1747989043,15744.0,23488.0,270.000)
call CreateUnit(XR,1747989043,17984.0,9280.0,270.000)
set XR=null
endfunction
function AZ takes nothing returns nothing
local trigger UZ
local playerunitevent IZ
local integer PZ
set ui=CreateTrigger()
set UZ=ui
set IZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set PZ=0
loop
call TriggerRegisterPlayerUnitEvent(UZ,Player(PZ),IZ,null)
set PZ=PZ+1
exitwhen PZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ui,Condition(fq))
call TriggerAddAction(ui,Rq)
set UZ=null
set IZ=null
endfunction
function Ah takes nothing returns nothing
local trigger Uh
local playerunitevent Ih
local integer Ph
set Js=CreateTrigger()
set Uh=Js
set Ih=EVENT_PLAYER_UNIT_SPELL_CAST
set Ph=0
loop
call TriggerRegisterPlayerUnitEvent(Uh,Player(Ph),Ih,null)
set Ph=Ph+1
exitwhen Ph==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Js,Condition(sp))
call TriggerAddAction(Js,tp)
set Uh=null
set Ih=null
endfunction
function BE takes nothing returns nothing
local trigger XE
local playerunitevent CE
local integer VE
set Ct=CreateTrigger()
set XE=Ct
set CE=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set VE=0
loop
call TriggerRegisterPlayerUnitEvent(XE,Player(VE),CE,null)
set VE=VE+1
exitwhen VE==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ct,Condition(cq))
call TriggerAddAction(Ct,oq)
set XE=null
set CE=null
endfunction
function BJ takes nothing returns nothing
local trigger XJ
local playerunitevent CJ
local integer VJ
set wS=CreateTrigger()
set XJ=wS
set CJ=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set VJ=0
loop
call TriggerRegisterPlayerUnitEvent(XJ,Player(VJ),CJ,null)
set VJ=VJ+1
exitwhen VJ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(wS,Condition(nn))
call TriggerAddAction(wS,dn)
set XJ=null
set CJ=null
endfunction
function Bm takes nothing returns nothing
local trigger Xm
local playerunitevent Cm
local integer Vm
set Gt=CreateTrigger()
set Xm=Gt
set Cm=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Vm=0
loop
call TriggerRegisterPlayerUnitEvent(Xm,Player(Vm),Cm,null)
set Vm=Vm+1
exitwhen Vm==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Gt,Condition(ye))
call TriggerAddAction(Gt,pe)
set Xm=null
set Cm=null
endfunction
function CP takes nothing returns nothing
set hi=CreateTrigger()
call TriggerRegisterTimerEvent(hi,0.10,false)
call TriggerAddAction(hi,na)
endfunction
function CZ takes nothing returns nothing
local trigger KZ
local playerunitevent LZ
local integer XZ
set ri=CreateTrigger()
set KZ=ri
set LZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set XZ=0
loop
call TriggerRegisterPlayerUnitEvent(KZ,Player(XZ),LZ,null)
set XZ=XZ+1
exitwhen XZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ri,Condition(Tq))
call TriggerAddAction(ri,Yq)
set KZ=null
set LZ=null
endfunction
function Cg takes nothing returns nothing
set As=CreateTrigger()
call TriggerRegisterTimerEvent(As,5.00,true)
call TriggerAddAction(As,Ny)
endfunction
function DU takes nothing returns nothing
local trigger IU
local playerunitevent PU
local integer AU
set Oi=CreateTrigger()
set IU=Oi
set PU=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set AU=0
loop
call TriggerRegisterPlayerUnitEvent(IU,Player(AU),PU,null)
set AU=AU+1
exitwhen AU==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Oi,Condition(Zq))
call TriggerAddAction(Oi,Uq)
set IU=null
set PU=null
endfunction
function DW takes nothing returns nothing
local trigger IW
local playerunitevent PW
local integer AW
set It=CreateTrigger()
set IW=It
set PW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set AW=0
loop
call TriggerRegisterPlayerUnitEvent(IW,Player(AW),PW,null)
set AW=AW+1
exitwhen AW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(It,Condition(De))
call TriggerAddAction(It,He)
set IW=null
set PW=null
endfunction
function EE takes nothing returns nothing
local trigger mE
local playerunitevent QE
local integer WE
set Lt=CreateTrigger()
set mE=Lt
set QE=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set WE=0
loop
call TriggerRegisterPlayerUnitEvent(mE,Player(WE),QE,null)
set WE=WE+1
exitwhen WE==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Lt,Condition(sq))
call TriggerAddAction(Lt,tq)
set mE=null
set QE=null
endfunction
function EJ takes nothing returns nothing
local trigger mJ
local playerunitevent QJ
local integer WJ
set Ni=CreateTrigger()
set mJ=Ni
set QJ=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set WJ=0
loop
call TriggerRegisterPlayerUnitEvent(mJ,Player(WJ),QJ,null)
set WJ=WJ+1
exitwhen WJ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ni,Condition(pn))
call TriggerAddAction(Ni,en)
set mJ=null
set QJ=null
endfunction
function Em takes nothing returns nothing
local trigger mm
local playerunitevent Qm
local integer Wm
set Tt=CreateTrigger()
set mm=Tt
set Qm=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Wm=0
loop
call TriggerRegisterPlayerUnitEvent(mm,Player(Wm),Qm,null)
set Wm=Wm+1
exitwhen Wm==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Tt,Condition(oe))
call TriggerAddAction(Tt,Oe)
set mm=null
set Qm=null
endfunction
function FU takes nothing returns nothing
local trigger GU
local playerunitevent gU
local integer hU
set ci=CreateTrigger()
set GU=ci
set gU=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set hU=0
loop
call TriggerRegisterPlayerUnitEvent(GU,Player(hU),gU,null)
set hU=hU+1
exitwhen hU==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ci,Condition(mq))
call TriggerAddAction(ci,Qq)
set GU=null
set gU=null
endfunction
function FW takes nothing returns nothing
local trigger GW
local playerunitevent gW
local integer hW
set Zt=CreateTrigger()
set GW=Zt
set gW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set hW=0
loop
call TriggerRegisterPlayerUnitEvent(GW,Player(hW),gW,null)
set hW=hW+1
exitwhen hW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Zt,Condition(Ue))
call TriggerAddAction(Zt,Ie)
set GW=null
set gW=null
endfunction
function Fj takes nothing returns nothing
local trigger Gj
local playerunitevent gj
local integer hj
set Ms=CreateTrigger()
set Gj=Ms
set gj=EVENT_PLAYER_UNIT_SPELL_CAST
set hj=0
loop
call TriggerRegisterPlayerUnitEvent(Gj,Player(hj),gj,null)
set hj=hj+1
exitwhen hj==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ms,Condition(fp))
call TriggerAddAction(Ms,Rp)
set Gj=null
set gj=null
endfunction
function HA takes nothing returns nothing
local trigger PA
local playerunitevent AA
local integer DA
set xi=CreateTrigger()
set PA=xi
set AA=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set DA=0
loop
call TriggerRegisterPlayerUnitEvent(PA,Player(DA),AA,null)
set DA=DA+1
exitwhen DA==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(xi,Condition(Ga))
call TriggerAddAction(xi,ga)
set PA=null
set AA=null
endfunction
function HE takes nothing returns nothing
local trigger PE
local playerunitevent AE
local integer DE
set Xt=CreateTrigger()
set PE=Xt
set AE=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set DE=0
loop
call TriggerRegisterPlayerUnitEvent(PE,Player(DE),AE,null)
set DE=DE+1
exitwhen DE==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Xt,Condition(iq))
call TriggerAddAction(Xt,Sq)
set PE=null
set AE=null
endfunction
function HF takes nothing returns nothing
local trigger PF
local playerunitevent AF
local integer DF
set Xs=CreateTrigger()
set PF=Xs
set AF=EVENT_PLAYER_UNIT_DEATH
set DF=0
loop
call TriggerRegisterPlayerUnitEvent(PF,Player(DF),AF,null)
set DF=DF+1
exitwhen DF==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Xs,Condition(Op))
call TriggerAddAction(Xs,lp)
set PF=null
set AF=null
endfunction
function HJ takes nothing returns nothing
local trigger PJ
local playerunitevent AJ
local integer DJ
set Mi=CreateTrigger()
set PJ=Mi
set AJ=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set DJ=0
loop
call TriggerRegisterPlayerUnitEvent(PJ,Player(DJ),AJ,null)
set DJ=DJ+1
exitwhen DJ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Mi,Condition(qn))
call TriggerAddAction(Mi,an)
set PJ=null
set AJ=null
endfunction
function Hk takes nothing returns nothing
local trigger Pk
local playerunitevent Ak
local integer Dk
set Bs=CreateTrigger()
set Pk=Bs
set Ak=EVENT_PLAYER_UNIT_DEATH
set Dk=0
loop
call TriggerRegisterPlayerUnitEvent(Pk,Player(Dk),Ak,null)
set Dk=Dk+1
exitwhen Dk==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Bs,Condition(qp))
call TriggerAddAction(Bs,ap)
set Pk=null
set Ak=null
endfunction
function Hm takes nothing returns nothing
local trigger Pm
local playerunitevent Am
local integer Dm
set Yt=CreateTrigger()
set Pm=Yt
set Am=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Dm=0
loop
call TriggerRegisterPlayerUnitEvent(Pm,Player(Dm),Am,null)
set Dm=Dm+1
exitwhen Dm==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Yt,Condition(le))
call TriggerAddAction(Yt,be)
set Pm=null
set Am=null
endfunction
function IK takes nothing returns nothing
local trigger EK
local playerunitevent ZK
local integer UK
set iS=CreateTrigger()
set EK=iS
set ZK=EVENT_PLAYER_UNIT_ATTACKED
set UK=0
loop
call TriggerRegisterPlayerUnitEvent(EK,Player(UK),ZK,null)
set UK=UK+1
exitwhen UK==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(iS,Condition(kn))
call TriggerAddAction(iS,jn)
set EK=null
set ZK=null
endfunction
function JQ takes nothing returns nothing
local trigger AQ
local playerunitevent DQ
local integer HQ
set vt=CreateTrigger()
set AQ=vt
set DQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set HQ=0
loop
call TriggerRegisterPlayerUnitEvent(AQ,Player(HQ),DQ,null)
set HQ=HQ+1
exitwhen HQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(vt,Condition(Fe))
call TriggerAddAction(vt,ke)
set AQ=null
set DQ=null
endfunction
function KH takes nothing returns nothing
local trigger DH
local playerunitevent HH
local integer JH
set Ki=CreateTrigger()
set DH=Ki
set HH=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set JH=0
loop
call TriggerRegisterPlayerUnitEvent(DH,Player(JH),HH,null)
set JH=JH+1
exitwhen JH==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ki,Condition(wn))
call TriggerAddAction(Ki,un)
set DH=null
set HH=null
endfunction
function KP takes nothing returns nothing
local trigger DP
local playerunitevent HP
local integer JP
set gi=CreateTrigger()
set DP=gi
set HP=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set JP=0
loop
call TriggerRegisterPlayerUnitEvent(DP,Player(JP),HP,null)
set JP=JP+1
exitwhen JP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(gi,Condition(ea))
call TriggerAddAction(gi,qa)
set DP=null
set HP=null
endfunction
function Kv takes nothing returns nothing
local trigger Dv
local playerunitevent Hv
local integer Jv
set qt=CreateTrigger()
set Dv=qt
set Hv=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Jv=0
loop
call TriggerRegisterPlayerUnitEvent(Dv,Player(Jv),Hv,null)
set Jv=Jv+1
exitwhen Jv==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(qt,Condition(Vp))
call TriggerAddAction(qt,Bp)
set Dv=null
set Hv=null
endfunction
function LY takes nothing returns nothing
local trigger HY
local playerunitevent JY
local integer KY
set ms=CreateTrigger()
set HY=ms
set JY=EVENT_PLAYER_UNIT_ATTACKED
set KY=0
loop
call TriggerRegisterPlayerUnitEvent(HY,Player(KY),JY,null)
set KY=KY+1
exitwhen KY==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ms,Condition(xy))
call TriggerAddAction(ms,vy)
set HY=null
set JY=null
endfunction
function Lj takes nothing returns nothing
local trigger Hj
local playerunitevent Jj
local integer Kj
set ut=CreateTrigger()
set Hj=ut
set Jj=EVENT_PLAYER_UNIT_DEATH
set Kj=0
loop
call TriggerRegisterPlayerUnitEvent(Hj,Player(Kj),Jj,null)
set Kj=Kj+1
exitwhen Kj==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ut,Condition(Tp))
call TriggerAddAction(ut,Yp)
set Hj=null
set Jj=null
endfunction
function MH takes nothing returns nothing
local trigger VH
local playerunitevent BH
local integer NH
set Li=CreateTrigger()
set VH=Li
set BH=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set NH=0
loop
call TriggerRegisterPlayerUnitEvent(VH,Player(NH),BH,null)
set NH=NH+1
exitwhen NH==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Li,Condition(rn))
call TriggerAddAction(Li,sn)
set VH=null
set BH=null
endfunction
function Mv takes nothing returns nothing
local trigger Vv
local playerunitevent Bv
local integer Nv
set at=CreateTrigger()
set Vv=at
set Bv=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Nv=0
loop
call TriggerRegisterPlayerUnitEvent(Vv,Player(Nv),Bv,null)
set Nv=Nv+1
exitwhen Nv==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(at,Condition(Np))
call TriggerAddAction(at,Mp)
set Vv=null
set Bv=null
endfunction
function NK takes nothing returns nothing
local trigger CK
local playerunitevent VK
local integer BK
set SS=CreateTrigger()
set CK=SS
set VK=EVENT_PLAYER_UNIT_ATTACKED
set BK=0
loop
call TriggerRegisterPlayerUnitEvent(CK,Player(BK),VK,null)
set BK=BK+1
exitwhen BK==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(SS,Condition(xn))
call TriggerAddAction(SS,vn)
set CK=null
set VK=null
endfunction
function NQ takes nothing returns nothing
local trigger CQ
local playerunitevent VQ
local integer BQ
set mt=CreateTrigger()
set CQ=mt
set VQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set BQ=0
loop
call TriggerRegisterPlayerUnitEvent(CQ,Player(BQ),VQ,null)
set BQ=BQ+1
exitwhen BQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(mt,Condition(je))
call TriggerAddAction(mt,xe)
set CQ=null
set VQ=null
endfunction
function OU takes nothing returns nothing
local trigger SU
local playerunitevent cU
local integer oU
set ti=CreateTrigger()
set SU=ti
set cU=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set oU=0
loop
call TriggerRegisterPlayerUnitEvent(SU,Player(oU),cU,null)
set oU=oU+1
exitwhen oU==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ti,Condition(hq))
call TriggerAddAction(ti,Fq)
set SU=null
set cU=null
endfunction
function PD takes nothing returns nothing
local trigger ZD
local playerunitevent UD
local integer ID
set Zi=CreateTrigger()
set ZD=Zi
set UD=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set ID=0
loop
call TriggerRegisterPlayerUnitEvent(ZD,Player(ID),UD,null)
set ID=ID+1
exitwhen ID==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Zi,Condition(Za))
call TriggerAddAction(Zi,Ua)
set ZD=null
set UD=null
endfunction
function PG takes nothing returns nothing
local trigger ZG
local playerunitevent UG
local integer IG
set Zs=CreateTrigger()
set ZG=Zs
set UG=EVENT_PLAYER_UNIT_SPELL_CAST
set IG=0
loop
call TriggerRegisterPlayerUnitEvent(ZG,Player(IG),UG,null)
set IG=IG+1
exitwhen IG==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Zs,Condition(Iy))
call TriggerAddAction(Zs,Py)
set ZG=null
set UG=null
endfunction
function PI takes nothing returns nothing
local trigger ZI
local playerunitevent UI
local integer II
set ai=CreateTrigger()
set ZI=ai
set UI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set II=0
loop
call TriggerRegisterPlayerUnitEvent(ZI,Player(II),UI,null)
set II=II+1
exitwhen II==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ai,Condition(Nq))
call TriggerAddAction(ai,Mq)
set ZI=null
set UI=null
endfunction
function PT takes nothing returns nothing
local trigger ZT
local playerunitevent UT
local integer IT
set Fs=CreateTrigger()
set ZT=Fs
set UT=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set IT=0
loop
call TriggerRegisterPlayerUnitEvent(ZT,Player(IT),UT,null)
set IT=IT+1
exitwhen IT==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Fs,Condition(fy))
call TriggerAddAction(Fs,Ry)
set ZT=null
set UT=null
endfunction
function Pg takes nothing returns nothing
local trigger Zg
local playerunitevent Ug
local integer Ig
set Ps=CreateTrigger()
set Zg=Ps
set Ug=EVENT_PLAYER_UNIT_SPELL_CAST
set Ig=0
loop
call TriggerRegisterPlayerUnitEvent(Zg,Player(Ig),Ug,null)
set Ig=Ig+1
exitwhen Ig==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ps,Condition(Cy))
call TriggerAddAction(Ps,Vy)
set Zg=null
set Ug=null
endfunction
function Px takes nothing returns nothing
local trigger Zx
local playerunitevent Ux
local integer Ix
set ct=CreateTrigger()
set Zx=ct
set Ux=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Ix=0
loop
call TriggerRegisterPlayerUnitEvent(Zx,Player(Ix),Ux,null)
set Ix=Ix+1
exitwhen Ix==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ct,Condition(mp))
call TriggerAddAction(ct,Qp)
set Zx=null
set Ux=null
endfunction
function QY takes nothing returns nothing
local trigger xY
local playerunitevent vY
local integer mY
set vs=CreateTrigger()
set xY=vs
set vY=EVENT_PLAYER_UNIT_ATTACKED
set mY=0
loop
call TriggerRegisterPlayerUnitEvent(xY,Player(mY),vY,null)
set mY=mY+1
exitwhen mY==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(vs,Condition(ky))
call TriggerAddAction(vs,jy)
set xY=null
set vY=null
endfunction
function QZ takes nothing returns nothing
local trigger xZ
local playerunitevent vZ
local integer mZ
set wi=CreateTrigger()
set xZ=wi
set vZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set mZ=0
loop
call TriggerRegisterPlayerUnitEvent(xZ,Player(mZ),vZ,null)
set mZ=mZ+1
exitwhen mZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(wi,Condition(nq))
call TriggerAddAction(wi,dq)
set xZ=null
set vZ=null
endfunction
function RE takes nothing returns nothing
set Jt=CreateTrigger()
call TriggerRegisterTimerEvent(Jt,0.10,false)
call TriggerAddAction(Jt,wq)
endfunction
function RJ takes nothing returns nothing
local trigger nJ
local playerunitevent dJ
local integer fJ
set Vi=CreateTrigger()
set nJ=Vi
set dJ=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set fJ=0
loop
call TriggerRegisterPlayerUnitEvent(nJ,Player(fJ),dJ,null)
set fJ=fJ+1
exitwhen fJ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Vi,Condition(On))
call TriggerAddAction(Vi,ln)
set nJ=null
set dJ=null
endfunction
function RT takes nothing returns nothing
local trigger nT
local playerunitevent dT
local integer fT
set gs=CreateTrigger()
set nT=gs
set dT=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set fT=0
loop
call TriggerRegisterPlayerUnitEvent(nT,Player(fT),dT,null)
set fT=fT+1
exitwhen fT==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(gs,Condition(qy))
call TriggerAddAction(gs,ay)
set nT=null
set dT=null
endfunction
function RY takes nothing returns nothing
local trigger nY
local playerunitevent dY
local integer fY
set xs=CreateTrigger()
set nY=xs
set dY=EVENT_PLAYER_UNIT_ATTACKED
set fY=0
loop
call TriggerRegisterPlayerUnitEvent(nY,Player(fY),dY,null)
set fY=fY+1
exitwhen fY==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(xs,Condition(hy))
call TriggerAddAction(xs,Fy)
set nY=null
set dY=null
endfunction
function Rm takes nothing returns nothing
local trigger nm
local playerunitevent dm
local integer fm
set ft=CreateTrigger()
set nm=ft
set dm=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set fm=0
loop
call TriggerRegisterPlayerUnitEvent(nm,Player(fm),dm,null)
set fm=fm+1
exitwhen fm==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ft,Condition(te))
call TriggerAddAction(ft,ie)
set nm=null
set dm=null
endfunction
function SF takes nothing returns nothing
local trigger sF
local playerunitevent tF
local integer iF
set Ks=CreateTrigger()
set sF=Ks
set tF=EVENT_PLAYER_UNIT_SPELL_CAST
set iF=0
loop
call TriggerRegisterPlayerUnitEvent(sF,Player(iF),tF,null)
set iF=iF+1
exitwhen iF==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ks,Condition(ip))
call TriggerAddAction(Ks,Sp)
set sF=null
set tF=null
endfunction
function SJ takes nothing returns nothing
local trigger sJ
local playerunitevent tJ
local integer iJ
set Xi=CreateTrigger()
set sJ=Xi
set tJ=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set iJ=0
loop
call TriggerRegisterPlayerUnitEvent(sJ,Player(iJ),tJ,null)
set iJ=iJ+1
exitwhen iJ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Xi,Condition(tn))
call TriggerAddAction(Xi,Sn)
set sJ=null
set tJ=null
endfunction
function Sm takes nothing returns nothing
local trigger sm
local playerunitevent tm
local integer im
set nt=CreateTrigger()
set sm=nt
set tm=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set im=0
loop
call TriggerRegisterPlayerUnitEvent(sm,Player(im),tm,null)
set im=im+1
exitwhen im==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(nt,Condition(we))
call TriggerAddAction(nt,ue)
set sm=null
set tm=null
endfunction
function TG takes nothing returns nothing
local trigger dG
local playerunitevent fG
local integer RG
set Es=CreateTrigger()
set dG=Es
set fG=EVENT_PLAYER_UNIT_SPELL_CAST
set RG=0
loop
call TriggerRegisterPlayerUnitEvent(dG,Player(RG),fG,null)
set RG=RG+1
exitwhen RG==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(Es,Zy)
set dG=null
set fG=null
endfunction
function TQ takes nothing returns nothing
local trigger dQ
local playerunitevent fQ
local integer RQ
set kt=CreateTrigger()
set dQ=kt
set fQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set RQ=0
loop
call TriggerRegisterPlayerUnitEvent(dQ,Player(RQ),fQ,null)
set RQ=RQ+1
exitwhen RQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(kt,Condition(Re))
call TriggerAddAction(kt,Te)
set dQ=null
set fQ=null
endfunction
function Tg takes nothing returns nothing
local trigger dg
local playerunitevent fg
local integer Rg
set Is=CreateTrigger()
set dg=Is
set fg=EVENT_PLAYER_UNIT_SPELL_CAST
set Rg=0
loop
call TriggerRegisterPlayerUnitEvent(dg,Player(Rg),fg,null)
set Rg=Rg+1
exitwhen Rg==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Is,Condition(Ky))
call TriggerAddAction(Is,Ly)
set dg=null
set fg=null
endfunction
function Th takes nothing returns nothing
local trigger dh
local playerunitevent fh
local integer Rh
set Hs=CreateTrigger()
set dh=Hs
set fh=EVENT_PLAYER_UNIT_SPELL_CAST
set Rh=0
loop
call TriggerRegisterPlayerUnitEvent(dh,Player(Rh),fh,null)
set Rh=Rh+1
exitwhen Rh==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Hs,Condition(up))
call TriggerAddAction(Hs,rp)
set dh=null
set fh=null
endfunction
function UH takes nothing returns nothing
local trigger WH
local playerunitevent EH
local integer ZH
set Ji=CreateTrigger()
set WH=Ji
set EH=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set ZH=0
loop
call TriggerRegisterPlayerUnitEvent(WH,Player(ZH),EH,null)
set ZH=ZH+1
exitwhen ZH==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ji,Condition(Na))
call TriggerAddAction(Ji,Ma)
set WH=null
set EH=null
endfunction
function UP takes nothing returns nothing
local trigger WP
local playerunitevent EP
local integer ZP
set Gi=CreateTrigger()
set WP=Gi
set EP=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set ZP=0
loop
call TriggerRegisterPlayerUnitEvent(WP,Player(ZP),EP,null)
set ZP=ZP+1
exitwhen ZP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Gi,Condition(ya))
call TriggerAddAction(Gi,pa)
set WP=null
set EP=null
endfunction
function Uv takes nothing returns nothing
local trigger Wv
local playerunitevent Ev
local integer Zv
set et=CreateTrigger()
set Wv=et
set Ev=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Zv=0
loop
call TriggerRegisterPlayerUnitEvent(Wv,Player(Zv),Ev,null)
set Zv=Zv+1
exitwhen Zv==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(et,Condition(Xp))
call TriggerAddAction(et,Cp)
set Wv=null
set Ev=null
endfunction
function VT takes nothing returns nothing
local trigger LT
local playerunitevent XT
local integer CT
set ks=CreateTrigger()
set LT=ks
set XT=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set CT=0
loop
call TriggerRegisterPlayerUnitEvent(LT,Player(CT),XT,null)
set CT=CT+1
exitwhen CT==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ks,Condition(Ty))
call TriggerAddAction(ks,Yy)
set LT=null
set XT=null
endfunction
function VU takes nothing returns nothing
local trigger LU
local playerunitevent XU
local integer CU
set li=CreateTrigger()
set LU=li
set XU=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set CU=0
loop
call TriggerRegisterPlayerUnitEvent(LU,Player(CU),XU,null)
set CU=CU+1
exitwhen CU==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(li,Condition(Iq))
call TriggerAddAction(li,Pq)
set LU=null
set XU=null
endfunction
function VW takes nothing returns nothing
local trigger LW
local playerunitevent XW
local integer CW
set Pt=CreateTrigger()
set LW=Pt
set XW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set CW=0
loop
call TriggerRegisterPlayerUnitEvent(LW,Player(CW),XW,null)
set CW=CW+1
exitwhen CW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Pt,Condition(Je))
call TriggerAddAction(Pt,Ke)
set LW=null
set XW=null
endfunction
function WU takes nothing returns nothing
local trigger vU
local playerunitevent mU
local integer QU
set oi=CreateTrigger()
set vU=oi
set mU=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set QU=0
loop
call TriggerRegisterPlayerUnitEvent(vU,Player(QU),mU,null)
set QU=QU+1
exitwhen QU==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(oi,Condition(Wq))
call TriggerAddAction(oi,Eq)
set vU=null
set mU=null
endfunction
function WW takes nothing returns nothing
local trigger vW
local playerunitevent mW
local integer QW
set Ut=CreateTrigger()
set vW=Ut
set mW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set QW=0
loop
call TriggerRegisterPlayerUnitEvent(vW,Player(QW),mW,null)
set QW=QW+1
exitwhen QW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ut,Condition(Pe))
call TriggerAddAction(Ut,Ae)
set vW=null
set mW=null
endfunction
function XD takes nothing returns nothing
local trigger JD
local playerunitevent KD
local integer LD
set Ui=CreateTrigger()
set JD=Ui
set KD=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set LD=0
loop
call TriggerRegisterPlayerUnitEvent(JD,Player(LD),KD,null)
set LD=LD+1
exitwhen LD==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ui,Condition(Ia))
call TriggerAddAction(Ui,Pa)
set JD=null
set KD=null
endfunction
function XI takes nothing returns nothing
local trigger JI
local playerunitevent KI
local integer LI
set ni=CreateTrigger()
set JI=ni
set KI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set LI=0
loop
call TriggerRegisterPlayerUnitEvent(JI,Player(LI),KI,null)
set LI=LI+1
exitwhen LI==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ni,Condition(wa))
call TriggerAddAction(ni,ua)
set JI=null
set KI=null
endfunction
function Xx takes nothing returns nothing
local trigger Jx
local playerunitevent Kx
local integer Lx
set ot=CreateTrigger()
set Jx=ot
set Kx=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Lx=0
loop
call TriggerRegisterPlayerUnitEvent(Jx,Player(Lx),Kx,null)
set Lx=Lx+1
exitwhen Lx==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ot,Condition(Wp))
call TriggerAddAction(ot,Ep)
set Jx=null
set Kx=null
endfunction
function YH takes nothing returns nothing
local trigger fH
local playerunitevent RH
local integer TH
set Di=CreateTrigger()
set fH=Di
set RH=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set TH=0
loop
call TriggerRegisterPlayerUnitEvent(fH,Player(TH),RH,null)
set TH=TH+1
exitwhen TH==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Di,Condition(Xa))
call TriggerAddAction(Di,Ca)
set fH=null
set RH=null
endfunction
function YL takes nothing returns nothing
local trigger fL
local playerunitevent RL
local integer TL
set oS=CreateTrigger()
set fL=oS
set RL=EVENT_PLAYER_UNIT_ATTACKED
set TL=0
loop
call TriggerRegisterPlayerUnitEvent(fL,Player(TL),RL,null)
set TL=TL+1
exitwhen TL==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(oS,Condition(Wn))
call TriggerAddAction(oS,En)
set fL=null
set RL=null
endfunction
function YP takes nothing returns nothing
local trigger fP
local playerunitevent RP
local integer TP
set Ti=CreateTrigger()
set fP=Ti
set RP=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set TP=0
loop
call TriggerRegisterPlayerUnitEvent(fP,Player(TP),RP,null)
set TP=TP+1
exitwhen TP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ti,Condition(oa))
call TriggerAddAction(Ti,Oa)
set fP=null
set RP=null
endfunction
function Yv takes nothing returns nothing
local trigger fv
local playerunitevent Rv
local integer Tv
set yt=CreateTrigger()
set fv=yt
set Rv=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Tv=0
loop
call TriggerRegisterPlayerUnitEvent(fv,Player(Tv),Rv,null)
set Tv=Tv+1
exitwhen Tv==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(yt,Condition(Hp))
call TriggerAddAction(yt,Jp)
set fv=null
set Rv=null
endfunction
function ZQ takes nothing returns nothing
local trigger QQ
local playerunitevent WQ
local integer EQ
set xt=CreateTrigger()
set QQ=xt
set WQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set EQ=0
loop
call TriggerRegisterPlayerUnitEvent(QQ,Player(EQ),WQ,null)
set EQ=EQ+1
exitwhen EQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(xt,Condition(ge))
call TriggerAddAction(xt,he)
set QQ=null
set WQ=null
endfunction
function aU takes nothing returns nothing
local trigger pU
local playerunitevent eU
local integer qU
set ii=CreateTrigger()
set pU=ii
set eU=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set qU=0
loop
call TriggerRegisterPlayerUnitEvent(pU,Player(qU),eU,null)
set qU=qU+1
exitwhen qU==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ii,Condition(kq))
call TriggerAddAction(ii,jq)
set pU=null
set eU=null
endfunction
function bK takes nothing returns nothing
local trigger oK
local playerunitevent OK
local integer lK
set rS=CreateTrigger()
set oK=rS
set OK=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set lK=0
loop
call TriggerRegisterPlayerUnitEvent(oK,Player(lK),OK,null)
set lK=lK+1
exitwhen lK==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(rS,Condition(Tn))
call TriggerAddAction(rS,Yn)
set oK=null
set OK=null
endfunction
function bQ takes nothing returns nothing
local trigger oQ
local playerunitevent OQ
local integer lQ
set ht=CreateTrigger()
set oQ=ht
set OQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set lQ=0
loop
call TriggerRegisterPlayerUnitEvent(oQ,Player(lQ),OQ,null)
set lQ=lQ+1
exitwhen lQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ht,Condition(ae))
call TriggerAddAction(ht,ne)
set oQ=null
set OQ=null
endfunction
function bZ takes nothing returns nothing
local trigger oZ
local playerunitevent OZ
local integer lZ
set Bt=CreateTrigger()
set oZ=Bt
set OZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set lZ=0
loop
call TriggerRegisterPlayerUnitEvent(oZ,Player(lZ),OZ,null)
set lZ=lZ+1
exitwhen lZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Bt,Condition(bq))
call TriggerAddAction(Bt,yq)
set oZ=null
set OZ=null
endfunction
function ck takes nothing returns nothing
local trigger tk
local playerunitevent ik
local integer Sk
set Cs=CreateTrigger()
set tk=Cs
set ik=EVENT_PLAYER_UNIT_DEATH
set Sk=0
loop
call TriggerRegisterPlayerUnitEvent(tk,Player(Sk),ik,null)
set Sk=Sk+1
exitwhen Sk==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Cs,Condition(bp))
call TriggerAddAction(Cs,yp)
set tk=null
set ik=null
endfunction
function dK takes nothing returns nothing
local trigger qK
local playerunitevent aK
local integer nK
set sS=CreateTrigger()
set qK=sS
set aK=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set nK=0
loop
call TriggerRegisterPlayerUnitEvent(qK,Player(nK),aK,null)
set nK=nK+1
exitwhen nK==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(sS,Condition(Gn))
call TriggerAddAction(sS,gn)
set qK=null
set aK=null
endfunction
function dZ takes nothing returns nothing
local trigger qZ
local playerunitevent aZ
local integer nZ
set Nt=CreateTrigger()
set qZ=Nt
set aZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set nZ=0
loop
call TriggerRegisterPlayerUnitEvent(qZ,Player(nZ),aZ,null)
set nZ=nZ+1
exitwhen nZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Nt,Condition(pq))
call TriggerAddAction(Nt,eq)
set qZ=null
set aZ=null
endfunction
function eA takes nothing returns nothing
local trigger bA
local playerunitevent yA
local integer pA
set ki=CreateTrigger()
set bA=ki
set yA=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set pA=0
loop
call TriggerRegisterPlayerUnitEvent(bA,Player(pA),yA,null)
set pA=pA+1
exitwhen pA==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ki,Condition(fa))
call TriggerAddAction(ki,Ra)
set bA=null
set yA=null
endfunction
function eQ takes nothing returns nothing
set Ft=CreateTrigger()
call TriggerRegisterTimerEvent(Ft,0.10,false)
call TriggerAddAction(Ft,fe)
endfunction
function fU takes nothing returns nothing
set Si=CreateTrigger()
call TriggerRegisterTimerEvent(Si,0.10,false)
call TriggerAddAction(Si,vq)
endfunction
function fW takes nothing returns nothing
local trigger aW
local playerunitevent nW
local integer dW
set Et=CreateTrigger()
set aW=Et
set nW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set dW=0
loop
call TriggerRegisterPlayerUnitEvent(aW,Player(dW),nW,null)
set dW=dW+1
exitwhen dW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Et,Condition(Ee))
call TriggerAddAction(Et,Ze)
set aW=null
set nW=null
endfunction
function gD takes nothing returns nothing
local trigger TD
local playerunitevent YD
local integer GD
set Wi=CreateTrigger()
set TD=Wi
set YD=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set GD=0
loop
call TriggerRegisterPlayerUnitEvent(TD,Player(GD),YD,null)
set GD=GD+1
exitwhen GD==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Wi,Condition(ma))
call TriggerAddAction(Wi,Qa)
set TD=null
set YD=null
endfunction
function gF takes nothing returns nothing
local trigger TF
local playerunitevent YF
local integer GF
set Ls=CreateTrigger()
set TF=Ls
set YF=EVENT_PLAYER_UNIT_SPELL_CAST
set GF=0
loop
call TriggerRegisterPlayerUnitEvent(TF,Player(GF),YF,null)
set GF=GF+1
exitwhen GF==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ls,Condition(cp))
call TriggerAddAction(Ls,op)
set TF=null
set YF=null
endfunction
function gI takes nothing returns nothing
local trigger TI
local playerunitevent YI
local integer GI
set ei=CreateTrigger()
set TI=ei
set YI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set GI=0
loop
call TriggerRegisterPlayerUnitEvent(TI,Player(GI),YI,null)
set GI=GI+1
exitwhen GI==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ei,Condition(Xq))
call TriggerAddAction(ei,Cq)
set TI=null
set YI=null
endfunction
function gk takes nothing returns nothing
local trigger Tk
local playerunitevent Yk
local integer Gk
set Vs=CreateTrigger()
set Tk=Vs
set Yk=EVENT_PLAYER_UNIT_DEATH
set Gk=0
loop
call TriggerRegisterPlayerUnitEvent(Tk,Player(Gk),Yk,null)
set Gk=Gk+1
exitwhen Gk==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Vs,Condition(pp))
call TriggerAddAction(Vs,ep)
set Tk=null
set Yk=null
endfunction
function gx takes nothing returns nothing
local trigger Tx
local playerunitevent Yx
local integer Gx
set tt=CreateTrigger()
set Tx=tt
set Yx=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Gx=0
loop
call TriggerRegisterPlayerUnitEvent(Tx,Player(Gx),Yx,null)
set Gx=Gx+1
exitwhen Gx==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(tt,Condition(kp))
call TriggerAddAction(tt,jp)
set Tx=null
set Yx=null
endfunction
function hK takes nothing returns nothing
local trigger YK
local playerunitevent GK
local integer gK
set tS=CreateTrigger()
set YK=tS
set GK=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set gK=0
loop
call TriggerRegisterPlayerUnitEvent(YK,Player(gK),GK,null)
set gK=gK+1
exitwhen gK==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(tS,Condition(hn))
call TriggerAddAction(tS,Fn)
set YK=null
set GK=null
endfunction
function hZ takes nothing returns nothing
local trigger YZ
local playerunitevent GZ
local integer gZ
set Mt=CreateTrigger()
set YZ=Mt
set GZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set gZ=0
loop
call TriggerRegisterPlayerUnitEvent(YZ,Player(gZ),GZ,null)
set gZ=gZ+1
exitwhen gZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Mt,Condition(qq))
call TriggerAddAction(Mt,aq)
set YZ=null
set GZ=null
endfunction
function iW takes nothing returns nothing
local trigger rW
local playerunitevent sW
local integer tW
set Qt=CreateTrigger()
set rW=Qt
set sW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set tW=0
loop
call TriggerRegisterPlayerUnitEvent(rW,Player(tW),sW,null)
set tW=tW+1
exitwhen tW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Qt,Condition(ve))
call TriggerAddAction(Qt,me)
set rW=null
set sW=null
endfunction
function jQ takes nothing returns nothing
local trigger hQ
local playerunitevent FQ
local integer kQ
set jt=CreateTrigger()
set hQ=jt
set FQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set kQ=0
loop
call TriggerRegisterPlayerUnitEvent(hQ,Player(kQ),FQ,null)
set kQ=kQ+1
exitwhen kQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(jt,Condition(Ye))
call TriggerAddAction(jt,Ge)
set hQ=null
set FQ=null
endfunction
function kA takes nothing returns nothing
local trigger gA
local playerunitevent hA
local integer FA
set ji=CreateTrigger()
set gA=ji
set hA=EVENT_PLAYER_UNIT_SPELL_CAST
set FA=0
loop
call TriggerRegisterPlayerUnitEvent(gA,Player(FA),hA,null)
set FA=FA+1
exitwhen FA==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ji,Condition(Ta))
call TriggerAddAction(ji,Ya)
set gA=null
set hA=null
endfunction
function kE takes nothing returns nothing
local trigger gE
local playerunitevent hE
local integer FE
set Kt=CreateTrigger()
set gE=Kt
set hE=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set FE=0
loop
call TriggerRegisterPlayerUnitEvent(gE,Player(FE),hE,null)
set FE=FE+1
exitwhen FE==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Kt,Condition(uq))
call TriggerAddAction(Kt,rq)
set gE=null
set hE=null
endfunction
function kJ takes nothing returns nothing
local trigger gJ
local playerunitevent hJ
local integer FJ
set Bi=CreateTrigger()
set gJ=Bi
set hJ=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set FJ=0
loop
call TriggerRegisterPlayerUnitEvent(gJ,Player(FJ),hJ,null)
set FJ=FJ+1
exitwhen FJ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Bi,Condition(bn))
call TriggerAddAction(Bi,yn)
set gJ=null
set hJ=null
endfunction
function km takes nothing returns nothing
local trigger gm
local playerunitevent hm
local integer Fm
set Rt=CreateTrigger()
set gm=Rt
set hm=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Fm=0
loop
call TriggerRegisterPlayerUnitEvent(gm,Player(Fm),hm,null)
set Fm=Fm+1
exitwhen Fm==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Rt,Condition(Se))
call TriggerAddAction(Rt,ce)
set gm=null
set hm=null
endfunction
function lD takes nothing returns nothing
set mi=CreateTrigger()
call TriggerRegisterTimerEvent(mi,120.00,false)
call TriggerAddAction(mi,ja)
endfunction
function lE takes nothing returns nothing
local trigger cE
local playerunitevent oE
local integer OE
set Dt=CreateTrigger()
set cE=Dt
set oE=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set OE=0
loop
call TriggerRegisterPlayerUnitEvent(cE,Player(OE),oE,null)
set OE=OE+1
exitwhen OE==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Dt,Condition(Ce))
call TriggerAddAction(Dt,Ve)
set cE=null
set oE=null
endfunction
function lI takes nothing returns nothing
local trigger cI
local playerunitevent oI
local integer OI
set yi=CreateTrigger()
set cI=yi
set oI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set OI=0
loop
call TriggerRegisterPlayerUnitEvent(cI,Player(OI),oI,null)
set OI=OI+1
exitwhen OI==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(yi,Condition(Hq))
call TriggerAddAction(yi,Jq)
set cI=null
set oI=null
endfunction
function lL takes nothing returns nothing
local trigger cL
local playerunitevent oL
local integer OL
set cS=CreateTrigger()
set cL=cS
set oL=EVENT_PLAYER_UNIT_ATTACKED
set OL=0
loop
call TriggerRegisterPlayerUnitEvent(cL,Player(OL),oL,null)
set OL=OL+1
exitwhen OL==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(cS,Condition(mn))
call TriggerAddAction(cS,Qn)
set cL=null
set oL=null
endfunction
function lx takes nothing returns nothing
local trigger cx
local playerunitevent ox
local integer Ox
set rt=CreateTrigger()
set cx=rt
set ox=EVENT_PLAYER_UNIT_DEATH
set Ox=0
loop
call TriggerRegisterPlayerUnitEvent(cx,Player(Ox),ox,null)
set Ox=Ox+1
exitwhen Ox==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(rt,Condition(Gp))
call TriggerAddAction(rt,gp)
set cx=null
set ox=null
endfunction
function mD takes nothing returns nothing
local trigger jD
local playerunitevent xD
local integer vD
set Ei=CreateTrigger()
set jD=Ei
set xD=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set vD=0
loop
call TriggerRegisterPlayerUnitEvent(jD,Player(vD),xD,null)
set vD=vD+1
exitwhen vD==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ei,Condition(Wa))
call TriggerAddAction(Ei,Ea)
set jD=null
set xD=null
endfunction
function mI takes nothing returns nothing
local trigger jI
local playerunitevent xI
local integer vI
set qi=CreateTrigger()
set jI=qi
set xI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set vI=0
loop
call TriggerRegisterPlayerUnitEvent(jI,Player(vI),xI,null)
set vI=vI+1
exitwhen vI==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(qi,Condition(Vq))
call TriggerAddAction(qi,Bq)
set jI=null
set xI=null
endfunction
function mx takes nothing returns nothing
local trigger jx
local playerunitevent xx
local integer vx
set St=CreateTrigger()
set jx=St
set xx=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set vx=0
loop
call TriggerRegisterPlayerUnitEvent(jx,Player(vx),xx,null)
set vx=vx+1
exitwhen vx==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(St,Condition(xp))
call TriggerAddAction(St,vp)
set jx=null
set xx=null
endfunction
function nD takes nothing returns nothing
local trigger eD
local playerunitevent qD
local integer aD
set Qi=CreateTrigger()
set eD=Qi
set qD=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set aD=0
loop
call TriggerRegisterPlayerUnitEvent(eD,Player(aD),qD,null)
set aD=aD+1
exitwhen aD==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Qi,Condition(xa))
call TriggerAddAction(Qi,va)
set eD=null
set qD=null
endfunction
function nE takes nothing returns nothing
local trigger eE
local playerunitevent qE
local integer aE
set Ht=CreateTrigger()
set eE=Ht
set qE=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set aE=0
loop
call TriggerRegisterPlayerUnitEvent(eE,Player(aE),qE,null)
set aE=aE+1
exitwhen aE==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ht,Condition(Be))
call TriggerAddAction(Ht,Ne)
set eE=null
set qE=null
endfunction
function nI takes nothing returns nothing
local trigger eI
local playerunitevent qI
local integer aI
set pi=CreateTrigger()
set eI=pi
set qI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set aI=0
loop
call TriggerRegisterPlayerUnitEvent(eI,Player(aI),qI,null)
set aI=aI+1
exitwhen aI==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(pi,Condition(Kq))
call TriggerAddAction(pi,Lq)
set eI=null
set qI=null
endfunction
function nx takes nothing returns nothing
local trigger ex
local playerunitevent qx
local integer ax
set st=CreateTrigger()
set ex=st
set qx=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set ax=0
loop
call TriggerRegisterPlayerUnitEvent(ex,Player(ax),qx,null)
set ax=ax+1
exitwhen ax==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(st,Condition(hp))
call TriggerAddAction(st,Fp)
set ex=null
set qx=null
endfunction
function oG takes nothing returns nothing
local trigger iG
local playerunitevent SG
local integer cG
set Ws=CreateTrigger()
set iG=Ws
set SG=EVENT_PLAYER_UNIT_SPELL_EFFECT
set cG=0
loop
call TriggerRegisterPlayerUnitEvent(iG,Player(cG),SG,null)
set cG=cG+1
exitwhen cG==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ws,Condition(Wy))
call TriggerAddAction(Ws,Ey)
set iG=null
set SG=null
endfunction
function oH takes nothing returns nothing
local trigger iH
local playerunitevent SH
local integer cH
set Pi=CreateTrigger()
set iH=Pi
set SH=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set cH=0
loop
call TriggerRegisterPlayerUnitEvent(iH,Player(cH),SH,null)
set cH=cH+1
exitwhen cH==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Pi,Condition(Ha))
call TriggerAddAction(Pi,Ja)
set iH=null
set SH=null
endfunction
function oP takes nothing returns nothing
local trigger iP
local playerunitevent SP
local integer cP
set fi=CreateTrigger()
set iP=fi
set SP=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set cP=0
loop
call TriggerRegisterPlayerUnitEvent(iP,Player(cP),SP,null)
set cP=cP+1
exitwhen cP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(fi,Condition(ta))
call TriggerAddAction(fi,ia)
set iP=null
set SP=null
endfunction
function oY takes nothing returns nothing
local trigger iY
local playerunitevent SY
local integer cY
set js=CreateTrigger()
set iY=js
set SY=EVENT_PLAYER_UNIT_ATTACKED
set cY=0
loop
call TriggerRegisterPlayerUnitEvent(iY,Player(cY),SY,null)
set cY=cY+1
exitwhen cY==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(js,Condition(Gy))
call TriggerAddAction(js,gy)
set iY=null
set SY=null
endfunction
function oj takes nothing returns nothing
local trigger ij
local playerunitevent Sj
local integer cj
set Ns=CreateTrigger()
set ij=Ns
set Sj=EVENT_PLAYER_UNIT_SPELL_CAST
set cj=0
loop
call TriggerRegisterPlayerUnitEvent(ij,Player(cj),Sj,null)
set cj=cj+1
exitwhen cj==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ns,Condition(np))
call TriggerAddAction(Ns,dp)
set ij=null
set Sj=null
endfunction
function ov takes nothing returns nothing
local trigger iv
local playerunitevent Sv
local integer cv
set lt=CreateTrigger()
set iv=lt
set Sv=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set cv=0
loop
call TriggerRegisterPlayerUnitEvent(iv,Player(cv),Sv,null)
set cv=cv+1
exitwhen cv==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(lt,Condition(Ip))
call TriggerAddAction(lt,Pp)
set iv=null
set Sv=null
endfunction
function pJ takes nothing returns nothing
local trigger lJ
local playerunitevent bJ
local integer yJ
set Ci=CreateTrigger()
set lJ=Ci
set bJ=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set yJ=0
loop
call TriggerRegisterPlayerUnitEvent(lJ,Player(yJ),bJ,null)
set yJ=yJ+1
exitwhen yJ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ci,Condition(cn))
call TriggerAddAction(Ci,on)
set lJ=null
set bJ=null
endfunction
function pm takes nothing returns nothing
local trigger lm
local playerunitevent bm
local integer ym
set dt=CreateTrigger()
set lm=dt
set bm=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set ym=0
loop
call TriggerRegisterPlayerUnitEvent(lm,Player(ym),bm,null)
set ym=ym+1
exitwhen ym==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(dt,Condition(re))
call TriggerAddAction(dt,se)
set lm=null
set bm=null
endfunction
function qH takes nothing returns nothing
local trigger yH
local playerunitevent pH
local integer eH
set Ai=CreateTrigger()
set yH=Ai
set pH=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set eH=0
loop
call TriggerRegisterPlayerUnitEvent(yH,Player(eH),pH,null)
set eH=eH+1
exitwhen eH==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ai,Condition(Ka))
call TriggerAddAction(Ai,La)
set yH=null
set pH=null
endfunction
function qP takes nothing returns nothing
local trigger yP
local playerunitevent pP
local integer eP
set Ri=CreateTrigger()
set yP=Ri
set pP=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set eP=0
loop
call TriggerRegisterPlayerUnitEvent(yP,Player(eP),pP,null)
set eP=eP+1
exitwhen eP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ri,Condition(Sa))
call TriggerAddAction(Ri,ca)
set yP=null
set pP=null
endfunction
function qv takes nothing returns nothing
local trigger yv
local playerunitevent pv
local integer ev
set bt=CreateTrigger()
set yv=bt
set pv=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set ev=0
loop
call TriggerRegisterPlayerUnitEvent(yv,Player(ev),pv,null)
set ev=ev+1
exitwhen ev==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(bt,Condition(Ap))
call TriggerAddAction(bt,Dp)
set yv=null
set pv=null
endfunction
function rG takes nothing returns nothing
local trigger MY
local playerunitevent wG
local integer uG
set Qs=CreateTrigger()
set MY=Qs
set wG=EVENT_PLAYER_UNIT_SPELL_CAST
set uG=0
loop
call TriggerRegisterPlayerUnitEvent(MY,Player(uG),wG,null)
set uG=uG+1
exitwhen uG==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Qs,Condition(my))
call TriggerAddAction(Qs,Qy)
set MY=null
set wG=null
endfunction
function rU takes nothing returns nothing
local trigger MZ
local playerunitevent wU
local integer uU
set si=CreateTrigger()
set MZ=si
set wU=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set uU=0
loop
call TriggerRegisterPlayerUnitEvent(MZ,Player(uU),wU,null)
set uU=uU+1
exitwhen uU==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(si,Condition(Gq))
call TriggerAddAction(si,gq)
set MZ=null
set wU=null
endfunction
function sE takes nothing returns nothing
local trigger wE
local playerunitevent uE
local integer rE
set At=CreateTrigger()
set wE=At
set uE=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set rE=0
loop
call TriggerRegisterPlayerUnitEvent(wE,Player(rE),uE,null)
set rE=rE+1
exitwhen rE==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(At,Condition(Le))
call TriggerAddAction(At,Xe)
set wE=null
set uE=null
endfunction
function sI takes nothing returns nothing
local trigger wI
local playerunitevent uI
local integer rI
set bi=CreateTrigger()
set wI=bi
set uI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set rI=0
loop
call TriggerRegisterPlayerUnitEvent(wI,Player(rI),uI,null)
set rI=rI+1
exitwhen rI==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(bi,Condition(Aq))
call TriggerAddAction(bi,Dq)
set wI=null
set uI=null
endfunction
function sh takes nothing returns nothing
set Ds=CreateTrigger()
call TriggerRegisterTimerEvent(Ds,5.00,true)
call TriggerAddAction(Ds,wp)
endfunction
function tD takes nothing returns nothing
local trigger uD
local playerunitevent rD
local integer sD
set vi=CreateTrigger()
set uD=vi
set rD=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set sD=0
loop
call TriggerRegisterPlayerUnitEvent(uD,Player(sD),rD,null)
set sD=sD+1
exitwhen sD==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(vi,Condition(ha))
call TriggerAddAction(vi,Fa)
set uD=null
set rD=null
endfunction
function tK takes nothing returns nothing
local trigger uK
local playerunitevent rK
local integer sK
set uS=CreateTrigger()
set uK=uS
set rK=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set sK=0
loop
call TriggerRegisterPlayerUnitEvent(uK,Player(sK),rK,null)
set sK=sK+1
exitwhen sK==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(uS,Condition(fn))
call TriggerAddAction(uS,Rn)
set uK=null
set rK=null
endfunction
function tQ takes nothing returns nothing
local trigger uQ
local playerunitevent rQ
local integer sQ
set gt=CreateTrigger()
set uQ=gt
set rQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set sQ=0
loop
call TriggerRegisterPlayerUnitEvent(uQ,Player(sQ),rQ,null)
set sQ=sQ+1
exitwhen sQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(gt,Condition(ee))
call TriggerAddAction(gt,qe)
set uQ=null
set rQ=null
endfunction
function tZ takes nothing returns nothing
local trigger uZ
local playerunitevent rZ
local integer sZ
set Vt=CreateTrigger()
set uZ=Vt
set rZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set sZ=0
loop
call TriggerRegisterPlayerUnitEvent(uZ,Player(sZ),rZ,null)
set sZ=sZ+1
exitwhen sZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Vt,Condition(Oq))
call TriggerAddAction(Vt,lq)
set uZ=null
set rZ=null
endfunction
function tg takes nothing returns nothing
local trigger ug
local playerunitevent rg
local integer sg
set Us=CreateTrigger()
set ug=Us
set rg=EVENT_PLAYER_UNIT_SPELL_CAST
set sg=0
loop
call TriggerRegisterPlayerUnitEvent(ug,Player(sg),rg,null)
set sg=sg+1
exitwhen sg==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Us,Condition(Dy))
call TriggerAddAction(Us,Hy)
set ug=null
set rg=null
endfunction
function uH takes nothing returns nothing
local trigger ND
local playerunitevent MD
local integer wH
set Ii=CreateTrigger()
set ND=Ii
set MD=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set wH=0
loop
call TriggerRegisterPlayerUnitEvent(ND,Player(wH),MD,null)
set wH=wH+1
exitwhen wH==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ii,Condition(Aa))
call TriggerAddAction(Ii,Da)
set ND=null
set MD=null
endfunction
function uP takes nothing returns nothing
local trigger NI
local playerunitevent MI
local integer wP
set di=CreateTrigger()
set NI=di
set MI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set wP=0
loop
call TriggerRegisterPlayerUnitEvent(NI,Player(wP),MI,null)
set wP=wP+1
exitwhen wP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(di,Condition(ra))
call TriggerAddAction(di,sa)
set NI=null
set MI=null
endfunction
function uv takes nothing returns nothing
local trigger Nx
local playerunitevent Mx
local integer wv
set Ot=CreateTrigger()
set Nx=Ot
set Mx=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set wv=0
loop
call TriggerRegisterPlayerUnitEvent(Nx,Player(wv),Mx,null)
set wv=wv+1
exitwhen wv==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ot,Condition(Zp))
call TriggerAddAction(Ot,Up)
set Nx=null
set Mx=null
endfunction
function wA takes nothing returns nothing
local trigger BP
local playerunitevent NP
local integer MP
set Fi=CreateTrigger()
set BP=Fi
set NP=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set MP=0
loop
call TriggerRegisterPlayerUnitEvent(BP,Player(MP),NP,null)
set MP=MP+1
exitwhen MP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(Fi,da)
set BP=null
set NP=null
endfunction
function wT takes nothing returns nothing
set Gs=CreateTrigger()
call TriggerRegisterTimerEvent(Gs,1.00,false)
call TriggerAddAction(Gs,ey)
endfunction
function xH takes nothing returns nothing
local trigger FH
local playerunitevent kH
local integer jH
set Hi=CreateTrigger()
set FH=Hi
set kH=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set jH=0
loop
call TriggerRegisterPlayerUnitEvent(FH,Player(jH),kH,null)
set jH=jH+1
exitwhen jH==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Hi,Condition(Va))
call TriggerAddAction(Hi,Ba)
set FH=null
set kH=null
endfunction
function xP takes nothing returns nothing
local trigger FP
local playerunitevent kP
local integer jP
set Yi=CreateTrigger()
set FP=Yi
set kP=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set jP=0
loop
call TriggerRegisterPlayerUnitEvent(FP,Player(jP),kP,null)
set jP=jP+1
exitwhen jP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Yi,Condition(la))
call TriggerAddAction(Yi,ba)
set FP=null
set kP=null
endfunction
function xT takes nothing returns nothing
local trigger FT
local playerunitevent kT
local integer jT
set hs=CreateTrigger()
set FT=hs
set kT=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set jT=0
loop
call TriggerRegisterPlayerUnitEvent(FT,Player(jT),kT,null)
set jT=jT+1
exitwhen jT==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(hs,Condition(ny))
call TriggerAddAction(hs,dy)
set FT=null
set kT=null
endfunction
function xv takes nothing returns nothing
local trigger Fv
local playerunitevent kv
local integer jv
set pt=CreateTrigger()
set Fv=pt
set kv=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set jv=0
loop
call TriggerRegisterPlayerUnitEvent(Fv,Player(jv),kv,null)
set jv=jv+1
exitwhen jv==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(pt,Condition(Kp))
call TriggerAddAction(pt,Lp)
set Fv=null
set kv=null
endfunction
function yW takes nothing returns nothing
local trigger OW
local playerunitevent lW
local integer bW
set Wt=CreateTrigger()
set OW=Wt
set lW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set bW=0
loop
call TriggerRegisterPlayerUnitEvent(OW,Player(bW),lW,null)
set bW=bW+1
exitwhen bW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Wt,Condition(Qe))
call TriggerAddAction(Wt,We)
set OW=null
set lW=null
endfunction
function GL takes nothing returns nothing
set Ts=CreateTrigger()
call TriggerAddAction(Ts,Zn)
set Ys=CreateTrigger()
call TriggerAddAction(Ys,Un)
call wT()
call RT()
call xT()
call PT()
call VT()
call oY()
call RY()
call QY()
call LY()
call rG()
call oG()
call TG()
call PG()
call tg()
call Tg()
call Pg()
call Cg()
call sh()
call Th()
call Ah()
call SF()
call gF()
call HF()
call ck()
call gk()
call Hk()
call oj()
call Fj()
set wt=CreateTrigger()
call TriggerAddAction(wt,In)
call Lj()
call lx()
call nx()
call gx()
call mx()
call Px()
call Xx()
call uv()
call ov()
call qv()
call Yv()
call xv()
call Uv()
call Kv()
call Mv()
call Sm()
call pm()
call Rm()
call km()
call Em()
call Hm()
call Bm()
call tQ()
call bQ()
call eQ()
call TQ()
call jQ()
call ZQ()
call JQ()
call NQ()
call iW()
call yW()
call fW()
call FW()
call WW()
call DW()
call VW()
call sE()
call lE()
call nE()
call RE()
call kE()
call EE()
call HE()
call BE()
call tZ()
call bZ()
call dZ()
call hZ()
call QZ()
call AZ()
call CZ()
call rU()
call OU()
call aU()
call fU()
call FU()
call WU()
call DU()
call VU()
call sI()
call lI()
call nI()
call gI()
call mI()
call PI()
call XI()
call uP()
call oP()
call qP()
call YP()
call xP()
call UP()
call KP()
call CP()
call wA()
call eA()
call kA()
call HA()
call tD()
call lD()
call nD()
call gD()
call mD()
call PD()
call XD()
call uH()
call oH()
call qH()
call YH()
call xH()
call UH()
call KH()
call MH()
call SJ()
call pJ()
call RJ()
call kJ()
call EJ()
call HJ()
call BJ()
call tK()
call bK()
call dK()
call hK()
call IK()
call NK()
call lL()
call YL()
endfunction
function AG takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989046 then
return false
endif
return true
endfunction
function AH takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function PK takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989316 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function AK takes nothing returns boolean
if not PK() then
return false
endif
return true
endfunction
function AP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651850,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651849,0)
endfunction
function Av takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989065,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989296,0)
endfunction
function B3 takes nothing returns boolean
set Qc=200
return true
endfunction
function BD takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function BI takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990596,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990595,0)
endfunction
function BR takes nothing returns nothing
call SetFloatGameState(GAME_STATE_TIME_OF_DAY,bj_MELEE_STARTING_TOD)
call MeleeStartingHeroLimit()
endfunction
function VZ takes nothing returns boolean
if GetResearched()!=1378890036 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890036,true)!=2 then
return false
endif
return true
endfunction
function BZ takes nothing returns boolean
if not VZ() then
return false
endif
return true
endfunction
function qSw takes integer eSw returns string
if eSw==0 then
return "|cffADADADtrace|r"
elseif eSw==1 then
return "|cff2685DCdebug|r"
elseif eSw==2 then
return "|cffFFCC00info|r"
elseif eSw==3 then
return "|cffF47E3Ewarning|r"
elseif eSw==4 then
return "|cffFB2700error|r"
endif
return "?"
endfunction
function i7 takes string C6,string V6 returns nothing
local integer B6
local string N6
local integer M6
local integer w7
local integer u7
local integer r7
local string s7
local string t7
set Ib[Ub]=V6
set Ub=Ub+1
set B6=StringHash(C6)
if HaveSavedInteger(Mc,-1,B6) then
if LoadInteger(Mc,-1,B6)+60<lo then
set s7=C6
set N6=""
set M6=Ub
set w7=0
loop
set M6=M6-1
set w7=w7+1
exitwhen w7>20 or M6<0
set N6=N6+"\n   "+Ib[M6]
endloop
call DisplayTimedTextToPlayer(hO,0.,0.,45.,qSw(4)+" - "+s7+N6)
call SaveInteger(Mc,-1,B6,R2I(lo))
call SaveBoolean(Mc,-1,B6,false)
elseif HaveSavedBoolean(Mc,-1,B6) then
if not LoadBoolean(Mc,-1,B6) then
call DisplayTimedTextToPlayer(hO,0.,0.,45.,qSw(4)+" - "+"|cffFF3A29Excessive repeating errors are being omitted")
call SaveBoolean(Mc,-1,B6,true)
endif
else
call DisplayTimedTextToPlayer(hO,0.,0.,45.,qSw(4)+" - "+"|cffFF3A29Excessive repeating errors are being omitted")
call SaveBoolean(Mc,-1,B6,true)
endif
else
call SaveInteger(Mc,-1,B6,R2I(lo))
set t7="Message: "+C6
set V6=""
set u7=Ub
set r7=0
loop
set u7=u7-1
set r7=r7+1
exitwhen r7>20 or u7<0
set V6=V6+"\n   "+Ib[u7]
endloop
call DisplayTimedTextToPlayer(hO,0.,0.,45.,qSw(4)+" - "+t7+V6)
endif
call I2S(1/0)
set Ub=Ub-1
endfunction
function Bqw takes nothing returns boolean
set Ub=0
set Ib[Ub]="ObjectIdGenerator, line 1"
set Ub=Ub+1
set Ib[Ub]="when calling new_IdGenerator in ObjectIdGenerator, line 7"
set Ub=Ub+1
set Ib[Ub]="when calling IdGenerator in ObjectIdGenerator, line 20"
set Ub=Ub+1
if Fb==0 then
if kb<32768 then
set kb=kb+1
else
call i7("Out of memory: Could not create IdGenerator.","when calling error in ObjectIdGenerator, line 14")
endif
else
set Fb=Fb-1
endif
set Ub=Ub-1-1
set Ib[Ub]="when calling new_IdGenerator in ObjectIdGenerator, line 8"
set Ub=Ub+1
set Ib[Ub]="when calling IdGenerator in ObjectIdGenerator, line 20"
set Ub=Ub+1
if Fb==0 then
if kb<32768 then
set kb=kb+1
else
call i7("Out of memory: Could not create IdGenerator.","when calling error in ObjectIdGenerator, line 14")
endif
else
set Fb=Fb-1
endif
set Ub=Ub-1-1
set Ib[Ub]="when calling new_IdGenerator in ObjectIdGenerator, line 9"
set Ub=Ub+1
set Ib[Ub]="when calling IdGenerator in ObjectIdGenerator, line 20"
set Ub=Ub+1
if Fb==0 then
if kb<32768 then
set kb=kb+1
else
call i7("Out of memory: Could not create IdGenerator.","when calling error in ObjectIdGenerator, line 14")
endif
else
set Fb=Fb-1
endif
set Ub=Ub-1-1
set Ib[Ub]="when calling new_IdGenerator in ObjectIdGenerator, line 10"
set Ub=Ub+1
set Ib[Ub]="when calling IdGenerator in ObjectIdGenerator, line 20"
set Ub=Ub+1
if Fb==0 then
if kb<32768 then
set kb=kb+1
else
call i7("Out of memory: Could not create IdGenerator.","when calling error in ObjectIdGenerator, line 14")
endif
else
set Fb=Fb-1
endif
set Ub=Ub-1-1
set Ib[Ub]="when calling new_IdGenerator in ObjectIdGenerator, line 11"
set Ub=Ub+1
set Ib[Ub]="when calling IdGenerator in ObjectIdGenerator, line 20"
set Ub=Ub+1
if Fb==0 then
if kb<32768 then
set kb=kb+1
else
call i7("Out of memory: Could not create IdGenerator.","when calling error in ObjectIdGenerator, line 14")
endif
else
set Fb=Fb-1
endif
set Ub=Ub-1-1
set Ib[Ub]="when calling new_IdGenerator in ObjectIdGenerator, line 12"
set Ub=Ub+1
set Ib[Ub]="when calling IdGenerator in ObjectIdGenerator, line 20"
set Ub=Ub+1
if Fb==0 then
if kb<32768 then
set kb=kb+1
else
call i7("Out of memory: Could not create IdGenerator.","when calling error in ObjectIdGenerator, line 14")
endif
else
set Fb=Fb-1
endif
set Ub=Ub-1-1-1
return true
endfunction
function Btw takes nothing returns nothing
local unit Vtw=GetTriggerUnit()
if GetUnitAbilityLevel(Vtw,1095577649)==0 then
set aO[nO]=Vtw
set nO=nO+1
call TriggerExecute(eO)
set nO=nO-1
endif
set Vtw=null
endfunction
function Bx takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989057,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989058,0)
endfunction
function C2 takes nothing returns boolean
local integer J2
local player K2
local boolean L2
local boolean X2
if GetOwningPlayer(GetSpellAbilityUnit())==GetOwningPlayer(GetSpellTargetUnit()) then
set X2=true
else
set K2=GetOwningPlayer(GetSpellTargetUnit())
if GetPlayerSlotState(K2)==PLAYER_SLOT_STATE_PLAYING then
set L2=GetPlayerController(K2)==MAP_CONTROL_USER
else
set L2=false
endif
set X2=not L2
endif
if X2 then
set K2=null
return false
endif
set J2=GetSpellAbilityId()
set K2=null
return J2==1093677396 or J2==1093677397 or J2==1093677398 or J2==1093677400 or J2==1093677399
endfunction
function CH takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function XY takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1966092336 then
return false
endif
if GetSpellAbilityId()!=1093677906 then
return false
endif
if GetOwningPlayer(GetSpellTargetUnit())==Player(PLAYER_NEUTRAL_AGGRESSIVE) then
return false
endif
if IsUnitType(GetSpellTargetUnit(),UNIT_TYPE_STRUCTURE)!=true then
return false
endif
return true
endfunction
function CY takes nothing returns boolean
if not XY() then
return false
endif
return true
endfunction
function fOw takes string pOw,string eOw returns integer
local integer qOw
local integer aOw
local boolean nOw
local integer dOw
set Ib[Ub]=eOw
set Ub=Ub+1
set qOw=StringHash(pOw)
set aOw=el
set Ib[Ub]="when calling hasString in TypeCasting, line 24"
set Ub=Ub+1
if bb[aOw]==0 then
if aOw==0 then
call i7("Nullpointer exception when calling Table.hasString","when calling error in Table, line 18")
else
call i7("Called Table.hasString on invalid object.","when calling error in Table, line 18")
endif
endif
set nOw=HaveSavedString(ll,aOw,qOw)
set Ub=Ub-1
if not nOw then
set dOw=el
set Ib[Ub]="when calling saveString in TypeCasting, line 25"
set Ub=Ub+1
if bb[dOw]==0 then
if dOw==0 then
call i7("Nullpointer exception when calling Table.saveString","when calling error in Table, line 60")
else
call i7("Called Table.saveString on invalid object.","when calling error in Table, line 60")
endif
endif
call SaveStr(ll,dOw,qOw,pOw)
set Ub=Ub-1
endif
set Ub=Ub-1
return qOw
endfunction
function initialize takes nothing returns nothing
local integer i_2=0
local integer temp=KO
loop
exitwhen i_2>temp
set i_2=i_2+1
endloop
endfunction
function Cqw takes nothing returns boolean
set Ub=0
set Ib[Ub]="StringUtils, line 1"
set Ub=Ub+1
set KO=127
call initialize()
call fOw("","when calling stringToIndex in StringUtils, line 167")
set Ub=Ub-1
return true
endfunction
function Jtw takes unit Htw returns nothing
call UnitAddAbility(Htw,1095577649)
call UnitMakeAbilityPermanent(Htw,true,1095577649)
set aO[nO]=Htw
set nO=nO+1
call TriggerEvaluate(eO)
set nO=nO-1
endfunction
function Ctw takes nothing returns nothing
call Jtw(GetFilterUnit())
endfunction
function Cv takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989067,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989065,0)
endfunction
function D1 takes nothing returns boolean
local trigger I1=CreateTrigger()
local trigger U1
local integer P1
local integer A1
call TriggerAddCondition(I1,Condition(jf))
call TriggerAddAction(I1,xf)
set U1=I1
set P1=0
set A1=23
loop
exitwhen P1>A1
call TriggerRegisterPlayerChatEvent(U1,gO[P1],"-",false)
set P1=P1+1
endloop
set U1=null
set I1=null
return true
endfunction
function AD takes nothing returns boolean
if GetUnitTypeId(GetConstructedStructure())!=1747990353 then
return false
endif
return true
endfunction
function DD takes nothing returns boolean
if not AD() then
return false
endif
return true
endfunction
function AI takes nothing returns boolean
if GetResearched()!=1378890040 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890040,true)!=1 then
return false
endif
return true
endfunction
function DI takes nothing returns boolean
if not AI() then
return false
endif
return true
endfunction
function AT takes nothing returns boolean
if GetUnitTypeId(GetConstructedStructure())==1747988789 then
return true
endif
return false
endfunction
function DT takes nothing returns boolean
if not AT() then
return false
endif
return true
endfunction
function DY takes nothing returns nothing
local player ZY=GetOwningPlayer(GetAttacker())
local player UY=GetOwningPlayer(GetAttacker())
local player IY
local player PY
local unit AY
set r[GetPlayerId(ZY)+1]=r[GetPlayerId(UY)+1]+1
set IY=GetOwningPlayer(GetTriggerUnit())
set PY=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(IY)+1]=r[GetPlayerId(PY)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set AY=GetTriggerUnit()
call SetUnitState(AY,UNIT_STATE_LIFE,GetUnitState(AY,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set ZY=null
set UY=null
set IY=null
set PY=null
set AY=null
endfunction
function Dj takes nothing returns nothing
local player xj=GetOwningPlayer(GetKillingUnit())
local playerstate vj=PLAYER_STATE_RESOURCE_GOLD
local playerstate mj
local playerstate Qj
local player Wj
local force Ej
local location Zj
local real Uj
local real Ij
local player Pj
local force Aj
if vj==PLAYER_STATE_RESOURCE_GOLD then
set mj=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(xj,mj,GetPlayerState(xj,mj)+500)
elseif vj==PLAYER_STATE_RESOURCE_LUMBER then
set Qj=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(xj,Qj,GetPlayerState(xj,Qj)+500)
endif
call SetPlayerState(xj,vj,GetPlayerState(xj,vj)+500)
set Wj=GetOwningPlayer(GetKillingUnit())
set Ej=CreateForce()
call ForceAddPlayer(Ej,Wj)
if IsPlayerInForce(GetLocalPlayer(),Ej) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_083")
endif
set e=GetUnitLoc(GetDyingUnit())
set Pj=GetOwningPlayer(GetDyingUnit())
set Aj=CreateForce()
call ForceAddPlayer(Aj,Pj)
set Zj=e
set Uj=GetLocationX(Zj)
set Ij=GetLocationY(Zj)
if IsPlayerInForce(GetLocalPlayer(),Aj) then
call PingMinimap(Uj,Ij,2.00)
endif
call RemoveLocation(e)
set xj=null
set vj=null
set mj=null
set Qj=null
set Wj=null
set Ej=null
set Zj=null
set Pj=null
set Aj=null
endfunction
function Ax takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function Dx takes nothing returns boolean
if not Ax() then
return false
endif
return true
endfunction
function ED takes nothing returns nothing
call UnitAddAbility(GetConstructedStructure(),1093677896)
endfunction
function EG takes nothing returns nothing
local location hG
local location FG
local real kG
local real jG
local rect xG
local group vG
local group mG
local code QG
local boolean WG
set u=GetUnitLoc(GetSpellAbilityUnit())
set hG=u
set o=Location(GetLocationX(hG)+200.00,GetLocationY(hG)+0.00)
set FG=u
set kG=GetLocationX(FG)
set jG=GetLocationY(FG)
set l=Rect(kG-150,jG-140,kG+150,jG+140)
set xG=l
set vG=CreateGroup()
call GroupEnumUnitsInRect(vG,xG,null)
call DestroyBoolExpr(null)
set b=vG
set mG=b
set QG=Uy
set WG=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(mG,QG)
if WG then
call DestroyGroup(mG)
endif
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747988825,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"stand")
call DestroyGroup(b)
call RemoveLocation(o)
call RemoveLocation(u)
set hG=null
set FG=null
set xG=null
set vG=null
set mG=null
endfunction
function EI takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651852,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651855,0)
endfunction
function ET takes nothing returns nothing
local player QT=GetOwningPlayer(GetTriggerUnit())
local player WT=GetOwningPlayer(GetTriggerUnit())
set y[GetPlayerId(QT)+1]=y[GetPlayerId(WT)+1]+100
call UnitAddAbility(GetConstructedStructure(),1093677647)
set QT=null
set WT=null
endfunction
function WY takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989044 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function EY takes nothing returns boolean
if not WY() then
return false
endif
return true
endfunction
function WZ takes nothing returns boolean
if GetResearched()!=1378889797 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889797,true)!=2 then
return false
endif
return true
endfunction
function EZ takes nothing returns boolean
if not WZ() then
return false
endif
return true
endfunction
function rbw takes string Clw returns nothing
local unit Vlw
local integer Blw
local player Nlw
local integer Mlw
local integer wbw
local boolean ubw
set Ib[Ub]=Clw
set Ub=Ub+1
set Vlw=GetEnteringUnit()
set Blw=GetPlayerId(GetOwningPlayer(Vlw))
set Nlw=gO[Blw]
if GetPlayerSlotState(Nlw)==PLAYER_SLOT_STATE_PLAYING then
set ubw=GetPlayerController(Nlw)==MAP_CONTROL_USER
else
set ubw=false
endif
if ubw and(not IsUnitType(Vlw,UNIT_TYPE_STRUCTURE)) then
set Mlw=dO[Blw]
set wbw=-GetUnitLevel(Vlw)
set Ib[Ub]="when calling changeUpkeep in Upkeep, line 12"
set Ub=Ub+1
if mb[Mlw]==0 then
if Mlw==0 then
call i7("Nullpointer exception when calling PlayerStats.changeUpkeep","when calling error in PlayerStats, line 23")
else
call i7("Called PlayerStats.changeUpkeep on invalid object.","when calling error in PlayerStats, line 23")
endif
endif
set GO[Mlw]=GO[Mlw]+wbw
set Ub=Ub-1
endif
set Ub=Ub-1
set Vlw=null
set Nlw=null
endfunction
function Eaw takes nothing returns nothing
set Ub=0
call rbw("Upkeep, line 8")
endfunction
function Eg takes nothing returns nothing
local location hg
local location Fg
local real kg
local real jg
local rect xg
local group vg
local group mg
local code Qg
local boolean Wg
set u=GetUnitLoc(GetSpellAbilityUnit())
set hg=u
set c=Location(GetLocationX(hg)+0.00,GetLocationY(hg)+200.00)
set Fg=u
set kg=GetLocationX(Fg)
set jg=GetLocationY(Fg)
set O=Rect(kg-140,jg-150,kg+140,jg+150)
set xg=O
set vg=CreateGroup()
call GroupEnumUnitsInRect(vg,xg,null)
call DestroyBoolExpr(null)
set b=vg
set mg=b
set Qg=Xy
set Wg=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(mg,Qg)
if Wg then
call DestroyGroup(mg)
endif
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747989079,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"stand")
call DestroyGroup(b)
call RemoveLocation(c)
call RemoveLocation(u)
set hg=null
set Fg=null
set xg=null
set vg=null
set mg=null
endfunction
function A7 takes string I7 returns integer
local integer P7
set Ib[Ub]=I7
set Ub=Ub+1
set Ib[Ub]="when calling HashMap in HashMap, line 7"
set Ub=Ub+1
if Ob==0 then
if lb<32768 then
set lb=lb+1
set P7=lb
set bb[P7]=725
else
call i7("Out of memory: Could not create HashMap.","when calling error in HashMap, line 8")
set P7=0
endif
else
set Ob=Ob-1
set P7=ob[Ob]
set bb[P7]=725
endif
set Ub=Ub-1-1
return P7
endfunction
function u9 takes integer V8,integer B8,integer N8,string M8 returns integer
local integer w9
set Ib[Ub]=M8
set Ub=Ub+1
set Ib[Ub]="when calling LLEntry in LinkedList, line 401"
set Ub=Ub+1
if qb==0 then
if ab<32768 then
set ab=ab+1
set w9=ab
set nb[w9]=696
else
call i7("Out of memory: Could not create LLEntry.","when calling error in LinkedList, line 396")
set w9=0
endif
else
set qb=qb-1
set w9=eb[qb]
set nb[w9]=696
endif
set Ub=Ub-1
set To[w9]=V8
set Yo[w9]=B8
set Go[w9]=N8
set Ub=Ub-1
return w9
endfunction
function Tpw takes integer npw,integer dpw,string fpw returns nothing
local integer Rpw
set Ib[Ub]=fpw
set Ub=Ub+1
if hb[npw]==0 then
if npw==0 then
call i7("Nullpointer exception when calling LinkedList.add","when calling error in LinkedList, line 37")
else
call i7("Called LinkedList.add on invalid object.","when calling error in LinkedList, line 37")
endif
endif
set Ib[Ub]="when calling add in LinkedList, line 37"
set Ub=Ub+1
set Rpw=u9(dpw,Yo[jo[npw]],jo[npw],"when calling new_LLEntry in LinkedList, line 39")
set Go[Yo[jo[npw]]]=Rpw
set Yo[jo[npw]]=Rpw
set xo[npw]=xo[npw]+1
set Ub=Ub-1-1
endfunction
function n9 takes string q9 returns integer
local integer a9
set Ib[Ub]=q9
set Ub=Ub+1
set Ib[Ub]="when calling LinkedList in LinkedList, line 31"
set Ub=Ub+1
if Gb==0 then
if gb<32768 then
set gb=gb+1
set a9=gb
set hb[a9]=700
else
call i7("Out of memory: Could not create LinkedList.","when calling error in LinkedList, line 17")
set a9=0
endif
else
set Gb=Gb-1
set a9=Yb[Gb]
set hb[a9]=700
endif
set Ub=Ub-1
set Ib[Ub]="when calling construct_LinkedList2 in LinkedList, line 31"
set Ub=Ub+1
set jo[a9]=u9(0,0,0,"when calling new_LLEntry in LinkedList, line 18")
set xo[a9]=0
set Go[jo[a9]]=jo[a9]
set Yo[jo[a9]]=jo[a9]
set Ub=Ub-1-1
return a9
endfunction
function Tew takes integer uew,integer rew,integer sew,integer tew,integer iew,integer Sew,integer cew,integer oew,integer Oew,integer lew,integer bew,integer yew,integer pew,integer eew,integer qew,integer aew,integer dew,string few returns integer
local integer Rew
set Ib[Ub]=few
set Ub=Ub+1
set Rew=n9("when calling new_LinkedList in LinkedList, line 391")
call Tpw(Rew,uew,"when calling add in LinkedList, line 393")
call Tpw(Rew,rew,"when calling add in LinkedList, line 393")
call Tpw(Rew,sew,"when calling add in LinkedList, line 393")
call Tpw(Rew,tew,"when calling add in LinkedList, line 393")
call Tpw(Rew,iew,"when calling add in LinkedList, line 393")
call Tpw(Rew,Sew,"when calling add in LinkedList, line 393")
call Tpw(Rew,cew,"when calling add in LinkedList, line 393")
call Tpw(Rew,oew,"when calling add in LinkedList, line 393")
call Tpw(Rew,Oew,"when calling add in LinkedList, line 393")
call Tpw(Rew,lew,"when calling add in LinkedList, line 393")
call Tpw(Rew,bew,"when calling add in LinkedList, line 393")
call Tpw(Rew,yew,"when calling add in LinkedList, line 393")
call Tpw(Rew,pew,"when calling add in LinkedList, line 393")
call Tpw(Rew,eew,"when calling add in LinkedList, line 393")
call Tpw(Rew,qew,"when calling add in LinkedList, line 393")
call Tpw(Rew,aew,"when calling add in LinkedList, line 393")
call Tpw(Rew,dew,"when calling add in LinkedList, line 393")
set Ub=Ub-1
return Rew
endfunction
function jqw takes integer tqw,integer iqw,integer Sqw,integer cqw,integer oqw,integer Oqw,integer lqw,integer bqw,integer yqw,integer pqw,integer eqw,integer qqw,integer aqw,integer nqw,integer dqw,integer fqw,integer Rqw,integer Tqw,integer Yqw,integer Gqw,integer gqw,integer hqw,string Fqw returns integer
local integer kqw
set Ib[Ub]=Fqw
set Ub=Ub+1
set kqw=n9("when calling new_LinkedList in LinkedList, line 391")
call Tpw(kqw,tqw,"when calling add in LinkedList, line 393")
call Tpw(kqw,iqw,"when calling add in LinkedList, line 393")
call Tpw(kqw,Sqw,"when calling add in LinkedList, line 393")
call Tpw(kqw,cqw,"when calling add in LinkedList, line 393")
call Tpw(kqw,oqw,"when calling add in LinkedList, line 393")
call Tpw(kqw,Oqw,"when calling add in LinkedList, line 393")
call Tpw(kqw,lqw,"when calling add in LinkedList, line 393")
call Tpw(kqw,bqw,"when calling add in LinkedList, line 393")
call Tpw(kqw,yqw,"when calling add in LinkedList, line 393")
call Tpw(kqw,pqw,"when calling add in LinkedList, line 393")
call Tpw(kqw,eqw,"when calling add in LinkedList, line 393")
call Tpw(kqw,qqw,"when calling add in LinkedList, line 393")
call Tpw(kqw,aqw,"when calling add in LinkedList, line 393")
call Tpw(kqw,nqw,"when calling add in LinkedList, line 393")
call Tpw(kqw,dqw,"when calling add in LinkedList, line 393")
call Tpw(kqw,fqw,"when calling add in LinkedList, line 393")
call Tpw(kqw,Rqw,"when calling add in LinkedList, line 393")
call Tpw(kqw,Tqw,"when calling add in LinkedList, line 393")
call Tpw(kqw,Yqw,"when calling add in LinkedList, line 393")
call Tpw(kqw,Gqw,"when calling add in LinkedList, line 393")
call Tpw(kqw,gqw,"when calling add in LinkedList, line 393")
call Tpw(kqw,hqw,"when calling add in LinkedList, line 393")
set Ub=Ub-1
return kqw
endfunction
function Tyw takes integer nyw,integer dyw,string fyw returns boolean
local integer Ryw
set Ib[Ub]=fyw
set Ub=Ub+1
if cb[nyw]==0 then
if nyw==0 then
call i7("Nullpointer exception when calling HashList.has","when calling error in HashList, line 87")
else
call i7("Called HashList.has on invalid object.","when calling error in HashList, line 87")
endif
endif
set Ib[Ub]="when calling has in HashList, line 87"
set Ub=Ub+1
set Ib[Ub]="when calling count in HashList, line 88"
set Ub=Ub+1
if cb[nyw]==0 then
if nyw==0 then
call i7("Nullpointer exception when calling HashList.count","when calling error in HashList, line 15")
else
call i7("Called HashList.count on invalid object.","when calling error in HashList, line 15")
endif
endif
set Ryw=LoadInteger(po,nyw,dyw)
set Ub=Ub-1
set Ub=Ub-1-1
return Ryw>0
endfunction
function n7 takes integer y7,integer p7,string e7 returns nothing
local hashtable q7
local integer a7
set Ib[Ub]=e7
set Ub=Ub+1
set q7=po
set Ib[Ub]="when calling count in HashList, line 19"
set Ub=Ub+1
if cb[y7]==0 then
if y7==0 then
call i7("Nullpointer exception when calling HashList.count","when calling error in HashList, line 15")
else
call i7("Called HashList.count on invalid object.","when calling error in HashList, line 15")
endif
endif
set a7=LoadInteger(po,y7,p7)
set Ub=Ub-1
call SaveInteger(q7,y7,p7,a7+1)
set Ub=Ub-1
set q7=null
endfunction
function hpw takes integer Ypw,integer Gpw,string gpw returns nothing
set Ib[Ub]=gpw
set Ub=Ub+1
call SaveInteger(yo,Ypw,eo[Ypw],Gpw)
set Ib[Ub]="when calling incrOccurences in HashList, line 28"
set Ub=Ub+1
if cb[Ypw]==0 then
if Ypw==0 then
call i7("Nullpointer exception when calling HashList.incrOccurences","when calling error in HashList, line 18")
else
call i7("Called HashList.incrOccurences on invalid object.","when calling error in HashList, line 18")
endif
endif
call n7(Ypw,Gpw,"when calling incrOccurences in HashList, line 18")
set Ub=Ub-1
set eo[Ypw]=eo[Ypw]+1
set Ub=Ub-1
endfunction
function C7 takes integer D7,integer H7,integer J7,string K7 returns nothing
local boolean L7
local integer X7
set Ib[Ub]=K7
set Ub=Ub+1
set Ib[Ub]="when calling put in HashMap, line 48"
set Ub=Ub+1
set Ib[Ub]="when calling saveInt in HashMap, line 16"
set Ub=Ub+1
if bb[D7]==0 then
if D7==0 then
call i7("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call i7("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(ll,D7,H7,J7)
set Ub=Ub-1-1
set Ib[Ub]="when calling hasKey in HashMap, line 49"
set Ub=Ub+1
if bb[D7]==0 then
if D7==0 then
call i7("Nullpointer exception when calling IterableMap.hasKey","when calling error in HashMap, line 75")
else
call i7("Called IterableMap.hasKey on invalid object.","when calling error in HashMap, line 75")
endif
endif
set Ib[Ub]="when calling hasKey in HashMap, line 75"
set Ub=Ub+1
set L7=Tyw(qo[D7],H7,"when calling has in HashMap, line 76")
set Ub=Ub-1-1
if not L7 then
set X7=qo[D7]
set Ib[Ub]="when calling add in HashMap, line 50"
set Ub=Ub+1
if cb[X7]==0 then
if X7==0 then
call i7("Nullpointer exception when calling HashList.add","when calling error in HashList, line 25")
else
call i7("Called HashList.add on invalid object.","when calling error in HashList, line 25")
endif
endif
call hpw(X7,H7,"when calling add in HashList, line 25")
set Ub=Ub-1
endif
set Ub=Ub-1
endfunction
function myw takes integer kyw,integer jyw,integer xyw,string vyw returns nothing
set Ib[Ub]=vyw
set Ub=Ub+1
if bb[kyw]==0 then
if kyw==0 then
call i7("Nullpointer exception when calling HashMap.put","when calling error in HashMap, line 15")
else
call i7("Called HashMap.put on invalid object.","when calling error in HashMap, line 15")
endif
endif
if bb[kyw]<=725 then
set Ib[Ub]="when calling put in HashMap, line 15"
set Ub=Ub+1
set Ib[Ub]="when calling saveInt in HashMap, line 16"
set Ub=Ub+1
if bb[kyw]==0 then
if kyw==0 then
call i7("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call i7("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(ll,kyw,jyw,xyw)
set Ub=Ub-1-1
else
call C7(kyw,jyw,xyw,"when calling put in HashMap, line 15")
endif
set Ub=Ub-1
endfunction
function sqw takes integer Yew,integer Gew,integer gew,integer hew,integer Few,integer kew,integer jew,integer xew,integer vew,integer mew,integer Qew,integer Wew,integer Eew,integer Zew,integer Uew,integer Iew,integer Pew,integer Aew,integer Dew,integer Hew,integer Jew,integer Kew,integer Lew,integer Xew,integer Cew,integer Vew,integer Bew,integer New,integer Mew,integer wqw,string uqw returns integer
local integer rqw
set Ib[Ub]=uqw
set Ub=Ub+1
set rqw=n9("when calling new_LinkedList in LinkedList, line 391")
call Tpw(rqw,Yew,"when calling add in LinkedList, line 393")
call Tpw(rqw,Gew,"when calling add in LinkedList, line 393")
call Tpw(rqw,gew,"when calling add in LinkedList, line 393")
call Tpw(rqw,hew,"when calling add in LinkedList, line 393")
call Tpw(rqw,Few,"when calling add in LinkedList, line 393")
call Tpw(rqw,kew,"when calling add in LinkedList, line 393")
call Tpw(rqw,jew,"when calling add in LinkedList, line 393")
call Tpw(rqw,xew,"when calling add in LinkedList, line 393")
call Tpw(rqw,vew,"when calling add in LinkedList, line 393")
call Tpw(rqw,mew,"when calling add in LinkedList, line 393")
call Tpw(rqw,Qew,"when calling add in LinkedList, line 393")
call Tpw(rqw,Wew,"when calling add in LinkedList, line 393")
call Tpw(rqw,Eew,"when calling add in LinkedList, line 393")
call Tpw(rqw,Zew,"when calling add in LinkedList, line 393")
call Tpw(rqw,Uew,"when calling add in LinkedList, line 393")
call Tpw(rqw,Iew,"when calling add in LinkedList, line 393")
call Tpw(rqw,Pew,"when calling add in LinkedList, line 393")
call Tpw(rqw,Aew,"when calling add in LinkedList, line 393")
call Tpw(rqw,Dew,"when calling add in LinkedList, line 393")
call Tpw(rqw,Hew,"when calling add in LinkedList, line 393")
call Tpw(rqw,Jew,"when calling add in LinkedList, line 393")
call Tpw(rqw,Kew,"when calling add in LinkedList, line 393")
call Tpw(rqw,Lew,"when calling add in LinkedList, line 393")
call Tpw(rqw,Xew,"when calling add in LinkedList, line 393")
call Tpw(rqw,Cew,"when calling add in LinkedList, line 393")
call Tpw(rqw,Vew,"when calling add in LinkedList, line 393")
call Tpw(rqw,Bew,"when calling add in LinkedList, line 393")
call Tpw(rqw,New,"when calling add in LinkedList, line 393")
call Tpw(rqw,Mew,"when calling add in LinkedList, line 393")
call Tpw(rqw,wqw,"when calling add in LinkedList, line 393")
set Ub=Ub-1
return rqw
endfunction
function Ilw takes string clw returns boolean
local integer olw
local integer Olw
local integer llw
local integer blw
local integer ylw
local integer plw
local integer elw
local integer qlw
local integer alw
local integer nlw
local integer dlw
local integer flw
local integer Rlw
local integer Tlw
local integer Ylw
local integer Glw
local integer glw
local integer hlw
local integer Flw
local integer klw
local integer jlw
local integer xlw
local integer vlw
local integer mlw
local integer Qlw
local integer Wlw
local integer Elw
local integer Zlw
local integer Ulw
set Ib[Ub]=clw
set Ub=Ub+1
set Ib[Ub]="when calling asList in Units, line 115"
set Ub=Ub+1
set Olw=n9("when calling new_LinkedList in LinkedList, line 391")
call Tpw(Olw,1747989317,"when calling add in LinkedList, line 393")
call Tpw(Olw,1747989305,"when calling add in LinkedList, line 393")
call Tpw(Olw,1747989316,"when calling add in LinkedList, line 393")
call Tpw(Olw,1747989315,"when calling add in LinkedList, line 393")
set Ub=Ub-1
set Rl=Olw
set Tl=A7("when calling new_HashMap in Units, line 116")
set Yl[0]=Tew(1747988528,1747988528,1747988528,1747988528,1747988528,1747988528,1747988532,1747988532,1747988532,1747988532,1211118401,1747989058,1747989058,1747989058,1747989058,1747989058,1747989058,"when calling asList in Units, line 123")
set Yl[1]=Tew(1747990339,1747990339,1747990339,1747990339,1747990339,1747990339,1747990340,1747990340,1747990340,1747990340,1211119699,1747990593,1747990593,1747990593,1747990593,1747990593,1747990593,"when calling asList in Units, line 128")
set Yl[2]=Tew(1747990087,1747990087,1747990087,1747990087,1747990087,1747990087,1747990088,1747990088,1747990088,1747990088,1211119701,1747989817,1747989817,1747989817,1747989817,1747989817,1747989817,"when calling asList in Units, line 134")
set Yl[3]=Tew(1747989558,1747989558,1747989558,1747989558,1747989558,1747989558,1747989575,1747989575,1747989575,1747989575,1211119700,1747989571,1747989571,1747989571,1747989571,1747989571,1747989571,"when calling asList in Units, line 140")
set Ib[Ub]="when calling asList in Units, line 148"
set Ub=Ub+1
set llw=n9("when calling new_LinkedList in LinkedList, line 391")
call Tpw(llw,1747989558,"when calling add in LinkedList, line 393")
call Tpw(llw,1747990339,"when calling add in LinkedList, line 393")
call Tpw(llw,1747990087,"when calling add in LinkedList, line 393")
call Tpw(llw,1747988528,"when calling add in LinkedList, line 393")
call Tpw(llw,1747989575,"when calling add in LinkedList, line 393")
call Tpw(llw,1747990340,"when calling add in LinkedList, line 393")
call Tpw(llw,1747990088,"when calling add in LinkedList, line 393")
call Tpw(llw,1747988532,"when calling add in LinkedList, line 393")
set Ub=Ub-1
set Gl=llw
set Ib[Ub]="when calling asList in Units, line 160"
set Ub=Ub+1
set blw=n9("when calling new_LinkedList in LinkedList, line 391")
call Tpw(blw,1747988529,"when calling add in LinkedList, line 393")
call Tpw(blw,1747988530,"when calling add in LinkedList, line 393")
call Tpw(blw,1747988531,"when calling add in LinkedList, line 393")
call Tpw(blw,1747990326,"when calling add in LinkedList, line 393")
call Tpw(blw,1747990327,"when calling add in LinkedList, line 393")
call Tpw(blw,1747990328,"when calling add in LinkedList, line 393")
call Tpw(blw,1747990084,"when calling add in LinkedList, line 393")
call Tpw(blw,1747990087,"when calling add in LinkedList, line 393")
call Tpw(blw,1747990085,"when calling add in LinkedList, line 393")
call Tpw(blw,1747989590,"when calling add in LinkedList, line 393")
call Tpw(blw,1747989591,"when calling add in LinkedList, line 393")
call Tpw(blw,1747989592,"when calling add in LinkedList, line 393")
set Ub=Ub-1
set gl=blw
set Ib[Ub]="when calling asList in Units, line 175"
set Ub=Ub+1
set ylw=n9("when calling new_LinkedList in LinkedList, line 391")
call Tpw(ylw,1747989059,"when calling add in LinkedList, line 393")
call Tpw(ylw,1747989060,"when calling add in LinkedList, line 393")
call Tpw(ylw,1747988844,"when calling add in LinkedList, line 393")
call Tpw(ylw,1747990351,"when calling add in LinkedList, line 393")
call Tpw(ylw,1747990352,"when calling add in LinkedList, line 393")
call Tpw(ylw,1747990356,"when calling add in LinkedList, line 393")
call Tpw(ylw,1747989331,"when calling add in LinkedList, line 393")
call Tpw(ylw,1747990350,"when calling add in LinkedList, line 393")
call Tpw(ylw,1747989809,"when calling add in LinkedList, line 393")
call Tpw(ylw,1747990353,"when calling add in LinkedList, line 393")
call Tpw(ylw,1747990354,"when calling add in LinkedList, line 393")
call Tpw(ylw,1747990355,"when calling add in LinkedList, line 393")
set Ub=Ub-1
set hl=ylw
set Fl=sqw(1747988529,1747988530,1747988531,1747990326,1747990327,1747990328,1747990084,1747990087,1747990085,1747989590,1747989591,1747989592,1747989555,1747989297,1747989325,1747989059,1747989060,1747988844,1747990351,1747990352,1747990356,1747989331,1747990350,1747989809,1747990353,1747990354,1747990355,1747989589,1747988555,1747988556,"when calling asList in Units, line 190")
set Ib[Ub]="when calling asList in Units, line 204"
set Ub=Ub+1
set plw=n9("when calling new_LinkedList in LinkedList, line 391")
call Tpw(plw,1747989321,"when calling add in LinkedList, line 393")
call Tpw(plw,1747989321,"when calling add in LinkedList, line 393")
call Tpw(plw,1747989321,"when calling add in LinkedList, line 393")
call Tpw(plw,1747989321,"when calling add in LinkedList, line 393")
call Tpw(plw,1747989321,"when calling add in LinkedList, line 393")
call Tpw(plw,1747989321,"when calling add in LinkedList, line 393")
call Tpw(plw,1747989321,"when calling add in LinkedList, line 393")
call Tpw(plw,1747989321,"when calling add in LinkedList, line 393")
set Ub=Ub-1
set kl[0]=plw
set Ib[Ub]="when calling asList in Units, line 205"
set Ub=Ub+1
set elw=n9("when calling new_LinkedList in LinkedList, line 391")
call Tpw(elw,1747989321,"when calling add in LinkedList, line 393")
call Tpw(elw,1747989321,"when calling add in LinkedList, line 393")
call Tpw(elw,1747989321,"when calling add in LinkedList, line 393")
call Tpw(elw,1747989321,"when calling add in LinkedList, line 393")
call Tpw(elw,1747989326,"when calling add in LinkedList, line 393")
call Tpw(elw,1747989326,"when calling add in LinkedList, line 393")
call Tpw(elw,1747989321,"when calling add in LinkedList, line 393")
call Tpw(elw,1747989321,"when calling add in LinkedList, line 393")
call Tpw(elw,1747989321,"when calling add in LinkedList, line 393")
call Tpw(elw,1747989321,"when calling add in LinkedList, line 393")
set Ub=Ub-1
set kl[1]=elw
set Ib[Ub]="when calling asList in Units, line 206"
set Ub=Ub+1
set qlw=n9("when calling new_LinkedList in LinkedList, line 391")
call Tpw(qlw,1747989321,"when calling add in LinkedList, line 393")
call Tpw(qlw,1747989321,"when calling add in LinkedList, line 393")
call Tpw(qlw,1747989321,"when calling add in LinkedList, line 393")
call Tpw(qlw,1747989321,"when calling add in LinkedList, line 393")
call Tpw(qlw,1747989326,"when calling add in LinkedList, line 393")
call Tpw(qlw,1747989326,"when calling add in LinkedList, line 393")
call Tpw(qlw,1747989326,"when calling add in LinkedList, line 393")
call Tpw(qlw,1747989326,"when calling add in LinkedList, line 393")
call Tpw(qlw,1747989326,"when calling add in LinkedList, line 393")
call Tpw(qlw,1747989326,"when calling add in LinkedList, line 393")
call Tpw(qlw,1747989337,"when calling add in LinkedList, line 393")
call Tpw(qlw,1747989337,"when calling add in LinkedList, line 393")
set Ub=Ub-1
set kl[2]=qlw
set alw=GetHandleId(hu)
set nlw=GetHandleId(jw)
set dlw=GetHandleId(qw)
set flw=GetHandleId(aw)
set Rlw=GetHandleId(lw)
set Tlw=GetHandleId(Fu)
set Ylw=GetHandleId(Gu)
set Glw=GetHandleId(Bw)
set glw=GetHandleId(a)
set hlw=GetHandleId(gu)
set Flw=GetHandleId(n)
set klw=GetHandleId(Rw)
set jlw=GetHandleId(fw)
set xlw=GetHandleId(Tw)
set vlw=GetHandleId(Ow)
set mlw=GetHandleId(bw)
set Qlw=GetHandleId(yw)
set Wlw=GetHandleId(pw)
set Elw=GetHandleId(ew)
set Zlw=GetHandleId(nw)
set Ulw=GetHandleId(f)
set jl=jqw(alw,nlw,dlw,flw,Rlw,Tlw,Ylw,Glw,glw,hlw,Flw,klw,jlw,xlw,vlw,mlw,Qlw,Wlw,Elw,Zlw,Ulw,GetHandleId(d),"when calling asList in Units, line 209")
set olw=Tl
call myw(olw,1747989317,15,"when calling put in Units, line 236")
call myw(olw,1747989305,50,"when calling put in Units, line 237")
call myw(olw,1747989316,25,"when calling put in Units, line 238")
call myw(olw,1747989315,40,"when calling put in Units, line 239")
set Ub=Ub-1
return true
endfunction
function Eqw takes nothing returns boolean
set Ub=0
return Ilw("Units, line 1")
endfunction
function Eww takes nothing returns boolean
return true
endfunction
function Ex takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988566,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988562,0)
endfunction
function F3 takes nothing returns boolean
set jc=CreateGroup()
set mc=Filter(hf)
return true
endfunction
function hD takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989325 then
return false
endif
return true
endfunction
function FD takes nothing returns boolean
if not hD() then
return false
endif
return true
endfunction
function hI takes nothing returns boolean
if GetResearched()!=1378890053 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890053,true)!=1 then
return false
endif
return true
endfunction
function FI takes nothing returns boolean
if not hI() then
return false
endif
return true
endfunction
function Bbw takes integer Cbw,string Vbw returns nothing
set Ib[Ub]=Vbw
set Ub=Ub+1
if Kl[Cbw]==0 then
if Cbw==0 then
call i7("Nullpointer exception when calling ForGroupCallback.ForGroupCallback","when calling error in ClosureForGroups, line 3")
else
call i7("Called ForGroupCallback.ForGroupCallback on invalid object.","when calling error in ClosureForGroups, line 3")
endif
endif
set Ib[Ub]="when calling destroyForGroupCallback in ClosureForGroups, line 3"
set Ub=Ub+1
set Ib[Ub]="when calling ForGroupCallback in ClosureForGroups, line 3"
set Ub=Ub+1
if Kl[Cbw]==0 then
call i7("Double free: object of type ForGroupCallback","when calling error in ClosureForGroups, line 3")
else
set Dl[Hl]=Cbw
set Hl=Hl+1
set Kl[Cbw]=0
endif
set Ub=Ub-1-1-1
endfunction
function H3 takes integer I3,string P3 returns nothing
local integer A3
local integer D3
set Ib[Ub]=P3
set Ub=Ub+1
set A3=0
set D3=bj_MAX_PLAYER_SLOTS-1
loop
exitwhen A3>D3
set xc[vc]=I3
set vc=vc+1
call GroupEnumUnitsOfPlayer(jc,gO[A3],mc)
call GroupClear(jc)
set vc=vc-1
set A3=A3+1
endloop
call Bbw(I3,"when calling ForGroupCallback in ClosureForGroups, line 66")
set Ub=Ub-1
endfunction
function Bow takes timer Kow,integer Low,string Xow returns nothing
local integer Cow
local integer Vow
set Ib[Ub]=Xow
set Ub=Ub+1
set Cow=pl
set Vow=GetHandleId(Kow)
set Ib[Ub]="when calling saveInt in TimerUtils, line 17"
set Ub=Ub+1
if bb[Cow]==0 then
if Cow==0 then
call i7("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call i7("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(ll,Cow,Vow,Low)
set Ub=Ub-1-1
endfunction
function SOw takes string tOw returns timer
local timer iOw
set Ib[Ub]=tOw
set Ub=Ub+1
if yl>0 then
set yl=yl-1
call Bow(bl[yl],0,"when calling setData in TimerUtils, line 29")
set Ub=Ub-1
set iOw=null
return bl[yl]
else
set iOw=CreateTimer()
call Bow(iOw,0,"when calling setData in TimerUtils, line 32")
set Ub=Ub-1
set Xf=iOw
set iOw=null
return Xf
endif
endfunction
function S1 takes integer r1,real s1,string t1 returns nothing
local timer i1
set Ib[Ub]=t1
set Ub=Ub+1
set i1=SOw("when calling getTimer in ClosureTimers, line 68")
call Bow(i1,r1,"when calling setData in ClosureTimers, line 69")
call TimerStart(i1,s1,false,kf)
set Ec[r1]=i1
set Ub=Ub-1
set i1=null
endfunction
function j5 takes string a5 returns nothing
local integer n5
local integer d5
local integer f5
local integer R5
local integer T5
local real Y5
local integer G5
local integer g5
local integer h5
local integer F5
local integer k5
set Ib[Ub]=a5
set Ub=Ub+1
set n5=0
set d5=23
loop
exitwhen n5>d5
set Xc[n5]=0
set Cc[n5]=0
set n5=n5+1
endloop
set f5=R2I(QS*0.5/10.0)+1
set R5=0
set T5=R2I(20)-1
loop
exitwhen R5>T5
set Y5=R5*0.5
set Ib[Ub]="when calling alloc_Closure in Economy, line 29"
set Ub=Ub+1
if Xl==0 then
if Cl<32768 then
set Cl=Cl+1
set G5=Cl
set Vl[G5]=644
else
call i7("Out of memory: Could not create Closure.","when calling error in Economy, line 29")
set G5=0
endif
else
set Xl=Xl-1
set G5=Ll[Xl]
set Vl[G5]=644
endif
set Ub=Ub-1
set Bc[G5]=R5
set Nc[G5]=f5
set a5="when calling doAfter in Economy, line 29"
set Ib[Ub]="when calling doAfter in Economy, line 29"
set Ub=Ub+1
set Ib[Ub]="when calling start in ClosureTimers, line 15"
set Ub=Ub+1
if Vl[G5]==0 then
if G5==0 then
call i7("Nullpointer exception when calling CallbackSingle.start","when calling error in ClosureTimers, line 67")
else
call i7("Called CallbackSingle.start on invalid object.","when calling error in ClosureTimers, line 67")
endif
endif
call S1(G5,Y5,"when calling start in ClosureTimers, line 67")
set Ub=Ub-1-1
set g5=QS-1
set h5=(R5+1)*f5-1
if g5<2147483647 then
set F5=g5
else
set F5=2147483647
endif
if h5<F5 then
set F5=h5
endif
exitwhen F5==QS-1
set R5=R5+1
endloop
set Ib[Ub]="when calling alloc_Closure in Economy, line 38"
set Ub=Ub+1
if Hl==0 then
if Jl<32768 then
set Jl=Jl+1
set k5=Jl
set Kl[k5]=682
else
call i7("Out of memory: Could not create Closure.","when calling error in Economy, line 38")
set k5=0
endif
else
set Hl=Hl-1
set k5=Dl[Hl]
set Kl[k5]=682
endif
set Ub=Ub-1
call H3(k5,"when calling forUnitsAll in Economy, line 38")
set Ub=Ub-1
endfunction
function Fww takes real hww returns real
if hww>0. then
return 1.
elseif hww<0. then
return -1.
else
return 0.
endif
endfunction
function pow takes integer bow returns string
local string yow="|cff15ff00+"
if Fww(bow*1.)==-1. then
set yow="|cffff0000"
endif
return yow+I2S(bow)+"|r"
endfunction
function L6 takes integer f6,integer R6,string T6 returns nothing
local integer Y6
local multiboard G6
local integer g6
local integer h6
local integer F6
local integer k6
local integer j6
local boolean x6
local integer v6
local string m6
local integer Q6
local integer W6
local string E6
local integer Z6
local integer U6
local integer I6
local boolean P6
local integer A6
local integer D6
local integer H6
local player J6
local playerstate K6
set Ib[Ub]=T6
set Ub=Ub+1
set Vc=Vc+1
set Y6=0
set R6=23
loop
exitwhen Y6>R6
set j6=dO[Y6]
set Ib[Ub]="when calling isInGame in Economy, line 53"
set Ub=Ub+1
if mb[j6]==0 then
if j6==0 then
call i7("Nullpointer exception when calling PlayerStats.isInGame","when calling error in PlayerStats, line 14")
else
call i7("Called PlayerStats.isInGame on invalid object.","when calling error in PlayerStats, line 14")
endif
endif
set x6=TO[j6]
set Ub=Ub-1
if x6 then
set G6=yO[Y6]
set v6=tO[0]
set f6=tO[1]
set m6=pow(Xc[Y6])
call MultiboardSetItemValue(MultiboardGetItem(G6,f6,v6),m6)
set Q6=iO[0]
set W6=iO[1]
set Z6=dO[Y6]
set T6="when calling getUpkeep in Economy, line 56"
set Ib[Ub]="when calling getUpkeep in Economy, line 56"
set Ub=Ub+1
if mb[Z6]==0 then
if Z6==0 then
call i7("Nullpointer exception when calling PlayerStats.getUpkeep","when calling error in PlayerStats, line 20")
else
call i7("Called PlayerStats.getUpkeep on invalid object.","when calling error in PlayerStats, line 20")
endif
endif
set U6=GO[Z6]
set Ub=Ub-1
set E6=pow(U6)
call MultiboardSetItemValue(MultiboardGetItem(G6,W6,Q6),E6)
endif
set Y6=Y6+1
endloop
if Vc==R2I(12) then
set Vc=0
set g6=0
set h6=23
loop
exitwhen g6>h6
set I6=dO[g6]
set Ib[Ub]="when calling isInGame in Economy, line 61"
set Ub=Ub+1
if mb[I6]==0 then
if I6==0 then
call i7("Nullpointer exception when calling PlayerStats.isInGame","when calling error in PlayerStats, line 14")
else
call i7("Called PlayerStats.isInGame on invalid object.","when calling error in PlayerStats, line 14")
endif
endif
set P6=TO[I6]
set Ub=Ub-1
if P6 then
set F6=GetPlayerState(gO[g6],PLAYER_STATE_RESOURCE_GOLD)
set k6=GetPlayerState(gO[g6],PLAYER_STATE_RESOURCE_LUMBER)
set J6=gO[g6]
set K6=PLAYER_STATE_RESOURCE_GOLD
set H6=F6+Xc[g6]
set A6=dO[g6]
set Ib[Ub]="when calling getUpkeep in Economy, line 64"
set Ub=Ub+1
if mb[A6]==0 then
if A6==0 then
call i7("Nullpointer exception when calling PlayerStats.getUpkeep","when calling error in PlayerStats, line 20")
else
call i7("Called PlayerStats.getUpkeep on invalid object.","when calling error in PlayerStats, line 20")
endif
endif
set D6=GO[A6]
set Ub=Ub-1
call SetPlayerState(J6,K6,H6+D6)
call SetPlayerState(gO[g6],PLAYER_STATE_RESOURCE_LUMBER,k6+Cc[g6])
endif
set g6=g6+1
endloop
endif
call j5("when calling countIncomeForAll in Economy, line 68")
set Ub=Ub-1
set G6=null
set J6=null
set K6=null
endfunction
function d6 takes integer o6,integer O6,string l6 returns nothing
local integer b6
local multiboard y6
local integer p6
local boolean e6
local integer q6
local integer a6
local integer n6
set Ib[Ub]=l6
set Ub=Ub+1
set O6=0
set b6=23
loop
exitwhen O6>b6
set p6=dO[O6]
set Ib[Ub]="when calling isInGame in Economy, line 45"
set Ub=Ub+1
if mb[p6]==0 then
if p6==0 then
call i7("Nullpointer exception when calling PlayerStats.isInGame","when calling error in PlayerStats, line 14")
else
call i7("Called PlayerStats.isInGame on invalid object.","when calling error in PlayerStats, line 14")
endif
endif
set e6=TO[p6]
set Ub=Ub-1
if e6 then
set y6=yO[O6]
set q6=iO[0]
set o6=iO[1]
set a6=dO[O6]
set Ib[Ub]="when calling getUpkeep in Economy, line 47"
set Ub=Ub+1
if mb[a6]==0 then
if a6==0 then
call i7("Nullpointer exception when calling PlayerStats.getUpkeep","when calling error in PlayerStats, line 20")
else
call i7("Called PlayerStats.getUpkeep on invalid object.","when calling error in PlayerStats, line 20")
endif
endif
set n6=GO[a6]
set Ub=Ub-1
set l6=pow(n6)
call MultiboardSetItemValue(MultiboardGetItem(y6,o6,q6),l6)
endif
set O6=O6+1
endloop
set Ub=Ub-1
set y6=null
endfunction
function Cyw takes integer Lyw,string Xyw returns nothing
set Ib[Ub]=Xyw
set Ub=Ub+1
if Tb[Lyw]==0 then
if Lyw==0 then
call i7("Nullpointer exception when calling LLIterator.LLIterator","when calling error in LinkedList, line 406")
else
call i7("Called LLIterator.LLIterator on invalid object.","when calling error in LinkedList, line 406")
endif
endif
set Ib[Ub]="when calling destroyLLIterator in LinkedList, line 406"
set Ub=Ub+1
set Ib[Ub]="when calling LLIterator in LinkedList, line 406"
set Ub=Ub+1
if Tb[Lyw]==0 then
call i7("Double free: object of type LLIterator","when calling error in LinkedList, line 406")
else
set db[fb]=Lyw
set fb=fb+1
set Tb[Lyw]=0
endif
set Ub=Ub-1-1-1
endfunction
function O9 takes integer S9,integer c9 returns boolean
local integer o9=Go[jo[S9]]
loop
exitwhen o9==jo[S9]
if To[o9]==c9 then
return true
endif
set o9=Go[o9]
endloop
return false
endfunction
function Uyw takes integer Qyw,integer Wyw,string Eyw returns integer
local integer Zyw
set Ib[Ub]=Eyw
set Ub=Ub+1
if bb[Qyw]==0 then
if Qyw==0 then
call i7("Nullpointer exception when calling HashMap.get","when calling error in HashMap, line 19")
else
call i7("Called HashMap.get on invalid object.","when calling error in HashMap, line 19")
endif
endif
set Ib[Ub]="when calling get in HashMap, line 19"
set Ub=Ub+1
set Ib[Ub]="when calling loadInt in HashMap, line 20"
set Ub=Ub+1
if bb[Qyw]==0 then
if Qyw==0 then
call i7("Nullpointer exception when calling Table.loadInt","when calling error in Table, line 39")
else
call i7("Called Table.loadInt on invalid object.","when calling error in Table, line 39")
endif
endif
set Zyw=LoadInteger(ll,Qyw,Wyw)
set Ub=Ub-1-1-1
return Zyw
endfunction
function mbw takes integer jbw,integer xbw,string vbw returns nothing
set Ib[Ub]=vbw
set Ub=Ub+1
if Al[jbw]==0 then
if jbw==0 then
call i7("Nullpointer exception when calling City.getCityModifierOnAdd","when calling error in City, line 399")
else
call i7("Called City.getCityModifierOnAdd on invalid object.","when calling error in City, line 399")
endif
endif
set Ib[Ub]="when calling getCityModifierOnAdd in City, line 399"
set Ub=Ub+1
set tc[jbw]=tc[jbw]+gS[Uyw(YS,xbw,"when calling get in City, line 400")]
set ic[jbw]=ic[jbw]+xS[Uyw(YS,xbw,"when calling get in City, line 401")]
set Ub=Ub-1-1
endfunction
function QV takes integer hV,integer FV,string kV returns boolean
local real jV
local integer xV
local boolean vV
local integer mV
set Ib[Ub]=kV
set Ub=Ub+1
set xV=oc[hV]
set Ib[Ub]="when calling has in City, line 349"
set Ub=Ub+1
if hb[xV]==0 then
if xV==0 then
call i7("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call i7("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set vV=O9(xV,FV)
set Ub=Ub-1
if vV then
set Ub=Ub-1
return false
endif
call Tpw(oc[hV],FV,"when calling add in City, line 351")
call mbw(hV,FV,"when calling getCityModifierOnAdd in City, line 352")
set jV=GS[Uyw(YS,FV,"when calling get in City, line 354")]
set Ib[Ub]="when calling alloc_Closure in City, line 354"
set Ub=Ub+1
if Xl==0 then
if Cl<32768 then
set Cl=Cl+1
set mV=Cl
set Vl[mV]=639
else
call i7("Out of memory: Could not create Closure.","when calling error in City, line 354")
set mV=0
endif
else
set Xl=Xl-1
set mV=Ll[Xl]
set Vl[mV]=639
endif
set Ub=Ub-1
set JS[mV]=hV
set KS[mV]=FV
set Ib[Ub]="when calling doAfter in City, line 354"
set Ub=Ub+1
set Ib[Ub]="when calling start in ClosureTimers, line 15"
set Ub=Ub+1
if Vl[mV]==0 then
if mV==0 then
call i7("Nullpointer exception when calling CallbackSingle.start","when calling error in ClosureTimers, line 67")
else
call i7("Called CallbackSingle.start on invalid object.","when calling error in ClosureTimers, line 67")
endif
endif
call S1(mV,jV,"when calling start in ClosureTimers, line 67")
set Ub=Ub-1-1-1
return true
endfunction
function wpw takes integer Vyw,string Byw returns nothing
local integer Nyw
local integer Myw
set Ib[Ub]=Byw
set Ub=Ub+1
if Tb[Vyw]==0 then
if Vyw==0 then
call i7("Nullpointer exception when calling LLIterator.reset","when calling error in LinkedList, line 421")
else
call i7("Called LLIterator.reset on invalid object.","when calling error in LinkedList, line 421")
endif
endif
set Ib[Ub]="when calling reset in LinkedList, line 421"
set Ub=Ub+1
set Nyw=Fo[Vyw]
set Ib[Ub]="when calling getDummy in LinkedList, line 422"
set Ub=Ub+1
if hb[Nyw]==0 then
if Nyw==0 then
call i7("Nullpointer exception when calling LinkedList.getDummy","when calling error in LinkedList, line 362")
else
call i7("Called LinkedList.getDummy on invalid object.","when calling error in LinkedList, line 362")
endif
endif
set Myw=jo[Nyw]
set Ub=Ub-1
set go[Vyw]=Myw
set ho[Vyw]=go[Vyw]
set Ub=Ub-1-1
endfunction
function i9 takes integer r9,string s9 returns integer
local integer t9
set Ib[Ub]=s9
set Ub=Ub+1
set Ib[Ub]="when calling LLIterator in LinkedList, line 412"
set Ub=Ub+1
if fb==0 then
if Rb<32768 then
set Rb=Rb+1
set t9=Rb
set Tb[t9]=697
else
call i7("Out of memory: Could not create LLIterator.","when calling error in LinkedList, line 406")
set t9=0
endif
else
set fb=fb-1
set t9=db[fb]
set Tb[t9]=697
endif
set Ub=Ub-1
set Ib[Ub]="when calling construct_LLIterator in LinkedList, line 412"
set Ub=Ub+1
set ko[t9]=true
set Fo[t9]=r9
call wpw(t9,"when calling reset in LinkedList, line 414")
set Ub=Ub-1-1
return t9
endfunction
function hM takes integer OM,integer lM,string bM returns nothing
local integer yM
local real pM
local integer eM
local real qM
local real aM
local integer nM
local real dM
local integer fM
local real RM
local integer TM
local integer YM
local integer GM
local integer gM
set Ib[Ub]=bM
set Ub=Ub+1
set pM=FS[Uyw(YS,2,"when calling get in City, line 141")]
if GetRandomReal(0.0,1.0)<=pM then
set eM=lc[OM]
set Ib[Ub]="when calling addModifier in City, line 142"
set Ub=Ub+1
if Al[eM]==0 then
if eM==0 then
call i7("Nullpointer exception when calling City.addModifier","when calling error in City, line 348")
else
call i7("Called City.addModifier on invalid object.","when calling error in City, line 348")
endif
endif
call QV(eM,2,"when calling addModifier in City, line 348")
set Ub=Ub-1
endif
set qM=FS[Uyw(YS,5,"when calling get in City, line 143")]
if GetRandomReal(0.0,1.0)<=qM then
set lM=lc[OM]
set Ib[Ub]="when calling addModifier in City, line 144"
set Ub=Ub+1
if Al[lM]==0 then
if lM==0 then
call i7("Nullpointer exception when calling City.addModifier","when calling error in City, line 348")
else
call i7("Called City.addModifier on invalid object.","when calling error in City, line 348")
endif
endif
call QV(lM,5,"when calling addModifier in City, line 348")
set Ub=Ub-1
endif
set aM=FS[Uyw(YS,7,"when calling get in City, line 145")]
if GetRandomReal(0.0,1.0)<=aM then
set nM=lc[OM]
set Ib[Ub]="when calling addModifier in City, line 146"
set Ub=Ub+1
if Al[nM]==0 then
if nM==0 then
call i7("Nullpointer exception when calling City.addModifier","when calling error in City, line 348")
else
call i7("Called City.addModifier on invalid object.","when calling error in City, line 348")
endif
endif
call QV(nM,7,"when calling addModifier in City, line 348")
set Ub=Ub-1
endif
set dM=FS[Uyw(YS,3,"when calling get in City, line 147")]
if GetRandomReal(0.0,1.0)<=dM then
set fM=lc[OM]
set Ib[Ub]="when calling addModifier in City, line 148"
set Ub=Ub+1
if Al[fM]==0 then
if fM==0 then
call i7("Nullpointer exception when calling City.addModifier","when calling error in City, line 348")
else
call i7("Called City.addModifier on invalid object.","when calling error in City, line 348")
endif
endif
call QV(fM,3,"when calling addModifier in City, line 348")
set Ub=Ub-1
endif
set RM=FS[Uyw(YS,4,"when calling get in City, line 149")]
if GetRandomReal(0.0,1.0)<=RM then
set TM=lc[OM]
set Ib[Ub]="when calling addModifier in City, line 150"
set Ub=Ub+1
if Al[TM]==0 then
if TM==0 then
call i7("Nullpointer exception when calling City.addModifier","when calling error in City, line 348")
else
call i7("Called City.addModifier on invalid object.","when calling error in City, line 348")
endif
endif
call QV(TM,4,"when calling addModifier in City, line 348")
set Ub=Ub-1
endif
set YM=oc[lc[OM]]
set Ib[Ub]="when calling iterator in City, line 152"
set Ub=Ub+1
set GM=i9(YM,"when calling new_LLIterator in LinkedList, line 165")
set Ub=Ub-1
set yM=GM
loop
exitwhen Go[ho[yM]]==go[yM]
set ho[yM]=Go[ho[yM]]
set gM=lc[OM]
set Ib[Ub]="when calling getCityModifierOnLongCount in City, line 153"
set Ub=Ub+1
if Al[gM]==0 then
if gM==0 then
call i7("Nullpointer exception when calling City.getCityModifierOnLongCount","when calling error in City, line 395")
else
call i7("Called City.getCityModifierOnLongCount on invalid object.","when calling error in City, line 395")
endif
endif
set Ub=Ub-1
endloop
set Ib[Ub]="when calling close in City, line 152"
set Ub=Ub+1
if ko[yM]then
call Cyw(yM,"when calling LLIterator in LinkedList, line 450")
endif
set Ub=Ub-1-1
endfunction
function opw takes integer upw,integer rpw,string spw returns integer
local integer tpw
local integer ipw
local integer Spw
local integer cpw
set Ib[Ub]=spw
set Ub=Ub+1
if hb[upw]==0 then
if upw==0 then
call i7("Nullpointer exception when calling LinkedList.get","when calling error in LinkedList, line 50")
else
call i7("Called LinkedList.get on invalid object.","when calling error in LinkedList, line 50")
endif
endif
set Ib[Ub]="when calling get in LinkedList, line 50"
set Ub=Ub+1
set Ib[Ub]="when calling getEntry in LinkedList, line 51"
set Ub=Ub+1
if hb[upw]==0 then
if upw==0 then
call i7("Nullpointer exception when calling LinkedList.getEntry","when calling error in LinkedList, line 366")
else
call i7("Called LinkedList.getEntry on invalid object.","when calling error in LinkedList, line 366")
endif
endif
set ipw=jo[upw]
set Spw=0
set cpw=rpw
loop
exitwhen Spw>cpw
set ipw=Go[ipw]
set Spw=Spw+1
endloop
set Ub=Ub-1
set tpw=To[ipw]
set Ub=Ub-1-1
return tpw
endfunction
function aN takes integer ON,integer lN,real bN,string yN returns nothing
local integer pN
local real eN
local integer qN
set Ib[Ub]=yN
set Ub=Ub+1
set pN=wc[ON]
set qN=wc[ON]
set eN=bN*GetRandomReal(opw(yS[lN],0,"when calling get in City, line 382")/1000.,opw(yS[lN],1,"when calling get in City, line 382")/1000.)*wc[ON]
set wc[ON]=qN+R2I(eN)
set uc[ON]=uc[ON]+(wc[ON]-pN)
set Ub=Ub-1
endfunction
function YN takes integer nN,integer dN,string fN returns nothing
local integer RN
local real TN
set Ib[Ub]=fN
set Ub=Ub+1
set RN=kS[Uyw(YS,dN,"when calling get in City, line 387")]
set TN=jS[Uyw(YS,dN,"when calling get in City, line 388")]
set Ib[Ub]="when calling addPopulation in City, line 389"
set Ub=Ub+1
if Al[nN]==0 then
if nN==0 then
call i7("Nullpointer exception when calling City.addPopulation","when calling error in City, line 380")
else
call i7("Called City.addPopulation on invalid object.","when calling error in City, line 380")
endif
endif
call aN(nN,RN,TN,"when calling addPopulation in City, line 380")
set Ub=Ub-1
if hS[Uyw(YS,dN,"when calling get in City, line 391")]==false then
set tc[nN]=tc[nN]-gS[Uyw(YS,dN,"when calling get in City, line 392")]*5.0/GS[Uyw(YS,dN,"when calling get in City, line 392")]
endif
set Ub=Ub-1
endfunction
function oM takes integer NN,integer MN,string wM returns nothing
local integer uM
local integer rM
local integer sM
local integer tM
local integer iM
local integer SM
local integer cM
set Ib[Ub]=wM
set Ub=Ub+1
set rc[Oc[NN]]=rc[Oc[NN]]+GetRandomReal(-0.003,0.005)*rc[Oc[NN]]
set uM=wc[Oc[NN]]
set wc[Oc[NN]]=wc[Oc[NN]]+R2I(wc[Oc[NN]]*rc[Oc[NN]])
set rM=wc[Oc[NN]]-uM
set sM=GetRandomInt(R2I(-(0.25*rM)),R2I(0.25*rM))
set wc[Oc[NN]]=wc[Oc[NN]]+sM
set uc[Oc[NN]]=wc[Oc[NN]]-uM
set iM=oc[Oc[NN]]
set Ib[Ub]="when calling iterator in City, line 135"
set Ub=Ub+1
set SM=i9(iM,"when calling new_LLIterator in LinkedList, line 165")
set Ub=Ub-1
set MN=SM
loop
exitwhen Go[ho[MN]]==go[MN]
set ho[MN]=Go[ho[MN]]
set tM=To[ho[MN]]
set cM=Oc[NN]
set wM="when calling getCityModifierOnFastCount in City, line 136"
set Ib[Ub]="when calling getCityModifierOnFastCount in City, line 136"
set Ub=Ub+1
if Al[cM]==0 then
if cM==0 then
call i7("Nullpointer exception when calling City.getCityModifierOnFastCount","when calling error in City, line 386")
else
call i7("Called City.getCityModifierOnFastCount on invalid object.","when calling error in City, line 386")
endif
endif
call YN(cM,tM,"when calling getCityModifierOnFastCount in City, line 386")
set Ub=Ub-1
endloop
set Ib[Ub]="when calling close in City, line 135"
set Ub=Ub+1
if ko[MN]then
call Cyw(MN,"when calling LLIterator in LinkedList, line 450")
endif
set Ub=Ub-1-1
endfunction
function v4 takes integer k4,integer j4 returns nothing
local integer x4
set Dc[k4]=Dc[k4]-1.
set j4=0
set x4=23
loop
exitwhen j4>x4
call MultiboardSetTitleText(yO[j4],"Income: "+I2S(R2I(Dc[k4]/60.))+":"+I2S(R2I(ModuloReal(Dc[k4],60.)/10.))+I2S(R2I(ModuloReal(ModuloReal(Dc[k4],60.),10.))))
set j4=j4+1
endloop
if Dc[k4]<=0. then
set Dc[k4]=120.0
endif
endfunction
function cww takes player rww,string sww returns string
local integer tww
local integer iww
local integer Sww
set Ib[Ub]=sww
set Ub=Ub+1
set iww=dO[GetPlayerId(rww)]
set Ib[Ub]="when calling getForceId in Messages, line 53"
set Ub=Ub+1
if mb[iww]==0 then
if iww==0 then
call i7("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 94")
else
call i7("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 94")
endif
endif
set Sww=fO[iww]
set Ub=Ub-1
set tww=GetRandomInt(0,2)
if Sww==0 then
set sww=il[tww]
elseif Sww==1 then
set sww=Sl[tww]
elseif Sww==2 then
set sww=cl[tww]
elseif Sww==3 then
set sww=ol[tww]
else
set sww="Attention!"
endif
set Ub=Ub-1
return "|cffffa600"+sww+"|r"
endfunction
function kbw takes integer fbw,string Rbw returns string
local integer Tbw
local integer Ybw
local integer Gbw
local integer gbw
local integer hbw
local integer Fbw
set Ib[Ub]=Rbw
set Ub=Ub+1
if Al[fbw]==0 then
if fbw==0 then
call i7("Nullpointer exception when calling City.getCityNameColored","when calling error in City, line 165")
else
call i7("Called City.getCityNameColored on invalid object.","when calling error in City, line 165")
endif
endif
set gbw=So[VS[fbw]]
set hbw=co[VS[fbw]]
set Fbw=oo[VS[fbw]]
set Tbw=gbw/16
set Ybw=hbw/16
set Gbw=Fbw/16
set Rbw="|cff"+Pc[Tbw]+Pc[gbw-Tbw*16]+Pc[Ybw]+Pc[hbw-Ybw*16]+Pc[Gbw]+Pc[Fbw-Gbw*16]+XS[fbw]+"|r"
set Ub=Ub-1
return Rbw
endfunction
function Mcw takes integer Fcw,string kcw returns nothing
local unit jcw
local integer xcw
local integer vcw
local integer mcw
local integer Qcw
local real Wcw
local integer Ecw
local unit Zcw
local player Ucw
local integer Icw
local integer Pcw
local integer Acw
local unit Dcw
local integer Hcw
local player Jcw
local integer Kcw
local integer Lcw
local integer Xcw
local integer Ccw
local integer Vcw
local integer Bcw
local boolean Ncw
set Ib[Ub]=kcw
set Ub=Ub+1
if Fcw<0 or Fcw>=QS then
set Ub=Ub-1
set jcw=null
set Zcw=null
set Ucw=null
set Dcw=null
set Jcw=null
return
endif
if Po-JO[Fcw]<=60 then
set Ub=Ub-1
set jcw=null
set Zcw=null
set Ucw=null
set Dcw=null
set Jcw=null
return
endif
set Qcw=AS[Fcw]
set Ib[Ub]="when calling getLastPublicOrder in Revolts, line 18"
set Ub=Ub+1
if Al[Qcw]==0 then
if Qcw==0 then
call i7("Nullpointer exception when calling City.getLastPublicOrder","when calling error in City, line 312")
else
call i7("Called City.getLastPublicOrder on invalid object.","when calling error in City, line 312")
endif
endif
set Wcw=sc[Qcw]
set Ub=Ub-1
set Ecw=AS[Fcw]
set Ib[Ub]="when calling getCityUnit in Revolts, line 19"
set Ub=Ub+1
if Al[Ecw]==0 then
if Ecw==0 then
call i7("Nullpointer exception when calling City.getCityUnit","when calling error in City, line 174")
else
call i7("Called City.getCityUnit on invalid object.","when calling error in City, line 174")
endif
endif
set Zcw=LS[Ecw]
set Ub=Ub-1
set jcw=Zcw
set Ucw=GetOwningPlayer(Zcw)
if GetPlayerSlotState(Ucw)==PLAYER_SLOT_STATE_PLAYING then
set Ncw=GetPlayerController(Ucw)==MAP_CONTROL_USER
else
set Ncw=false
endif
if not Ncw then
set Ub=Ub-1
set jcw=null
set Zcw=null
set Ucw=null
set Dcw=null
set Jcw=null
return
endif
set Icw=hl
set Acw=AS[Fcw]
set Ib[Ub]="when calling getCityUnit in Revolts, line 22"
set Ub=Ub+1
if Al[Acw]==0 then
if Acw==0 then
call i7("Nullpointer exception when calling City.getCityUnit","when calling error in City, line 174")
else
call i7("Called City.getCityUnit on invalid object.","when calling error in City, line 174")
endif
endif
set Dcw=LS[Acw]
set Ub=Ub-1
set Pcw=GetUnitTypeId(Dcw)
set Ib[Ub]="when calling has in Revolts, line 22"
set Ub=Ub+1
if hb[Icw]==0 then
if Icw==0 then
call i7("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call i7("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
call O9(Icw,Pcw)
set Ub=Ub-1
if Wcw<50.0 then
set JO[Fcw]=Po
set Hcw=AS[Fcw]
set Ib[Ub]="when calling addModifier in Revolts, line 25"
set Ub=Ub+1
if Al[Hcw]==0 then
if Hcw==0 then
call i7("Nullpointer exception when calling City.addModifier","when calling error in City, line 348")
else
call i7("Called City.addModifier on invalid object.","when calling error in City, line 348")
endif
endif
call QV(Hcw,1,"when calling addModifier in City, line 348")
set Ub=Ub-1
set kcw="A violent mob has appeared near the gates of "+kbw(AS[Fcw],"when calling getCityNameColored in Revolts, line 26")+"!"
set Jcw=GetOwningPlayer(Zcw)
set Ib[Ub]="when calling attentionToPlayer in Revolts, line 26"
set Ub=Ub+1
call DisplayTimedTextToPlayer(Jcw,0.,0.,10.0,cww(Jcw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(Jcw,0.,0.,10.0,kcw)
set Ub=Ub-1
if Wcw>=30.0 then
set Kcw=kl[0]
set Ib[Ub]="when calling iterator in Revolts, line 29"
set Ub=Ub+1
set Lcw=i9(Kcw,"when calling new_LLIterator in LinkedList, line 165")
set Ub=Ub-1
set xcw=Lcw
loop
exitwhen Go[ho[xcw]]==go[xcw]
set ho[xcw]=Go[ho[xcw]]
call CreateUnit(gO[PLAYER_NEUTRAL_AGGRESSIVE],To[ho[xcw]],GetUnitX(jcw),GetUnitY(jcw),0.)
endloop
set Ib[Ub]="when calling close in Revolts, line 29"
set Ub=Ub+1
if ko[xcw]then
call Cyw(xcw,"when calling LLIterator in LinkedList, line 450")
endif
set Ub=Ub-1
elseif Wcw>=15.0 then
set Xcw=kl[1]
set Ib[Ub]="when calling iterator in Revolts, line 33"
set Ub=Ub+1
set Ccw=i9(Xcw,"when calling new_LLIterator in LinkedList, line 165")
set Ub=Ub-1
set vcw=Ccw
loop
exitwhen Go[ho[vcw]]==go[vcw]
set ho[vcw]=Go[ho[vcw]]
call CreateUnit(gO[PLAYER_NEUTRAL_AGGRESSIVE],To[ho[vcw]],GetUnitX(jcw),GetUnitY(jcw),0.)
endloop
set Ib[Ub]="when calling close in Revolts, line 33"
set Ub=Ub+1
if ko[vcw]then
call Cyw(vcw,"when calling LLIterator in LinkedList, line 450")
endif
set Ub=Ub-1
else
set Vcw=kl[2]
set Ib[Ub]="when calling iterator in Revolts, line 37"
set Ub=Ub+1
set Bcw=i9(Vcw,"when calling new_LLIterator in LinkedList, line 165")
set Ub=Ub-1
set mcw=Bcw
loop
exitwhen Go[ho[mcw]]==go[mcw]
set ho[mcw]=Go[ho[mcw]]
call CreateUnit(gO[PLAYER_NEUTRAL_AGGRESSIVE],To[ho[mcw]],GetUnitX(jcw),GetUnitY(jcw),0.)
endloop
set Ib[Ub]="when calling close in Revolts, line 37"
set Ub=Ub+1
if ko[mcw]then
call Cyw(mcw,"when calling LLIterator in LinkedList, line 450")
endif
set Ub=Ub-1
endif
endif
set Ub=Ub-1
set jcw=null
set Zcw=null
set Ucw=null
set Dcw=null
set Jcw=null
endfunction
function V3 takes real J3,real K3,real L3,integer X3,string C3 returns nothing
set Ib[Ub]=C3
set Ub=Ub+1
set xc[vc]=X3
set vc=vc+1
call GroupEnumUnitsInRange(jc,J3,K3,L3,mc)
set Ib[Ub]="when calling popCallback in ClosureForGroups, line 85"
set Ub=Ub+1
call GroupClear(jc)
set vc=vc-1
call Bbw(xc[vc],"when calling ForGroupCallback in ClosureForGroups, line 21")
set Ub=Ub-1-1
endfunction
function DB takes integer mB,string QB returns real
local integer WB
local integer EB
local boolean ZB
local real UB
local real IB
local real PB
local real AB
set Ib[Ub]=QB
set Ub=Ub+1
set sc[mB]=100.0-rc[mB]*1000.-SquareRoot(wc[mB]*1.)/17.+tc[mB]-wc[mB]*1./1000*PS[Sc[mB]]
set UB=NS[mB]
set IB=MS[mB]
set Ib[Ub]="when calling alloc_Closure in City, line 293"
set Ub=Ub+1
if Hl==0 then
if Jl<32768 then
set Jl=Jl+1
set WB=Jl
set Kl[WB]=680
else
call i7("Out of memory: Could not create Closure.","when calling error in City, line 293")
set WB=0
endif
else
set Hl=Hl-1
set WB=Dl[Hl]
set Kl[WB]=680
endif
set Ub=Ub-1
set DS[WB]=mB
call V3(UB,IB,500,WB,"when calling forUnitsInRange in City, line 293")
set PB=NS[mB]
set AB=MS[mB]
set Ib[Ub]="when calling alloc_Closure in City, line 297"
set Ub=Ub+1
if Hl==0 then
if Jl<32768 then
set Jl=Jl+1
set EB=Jl
set Kl[EB]=681
else
call i7("Out of memory: Could not create Closure.","when calling error in City, line 297")
set EB=0
endif
else
set Hl=Hl-1
set EB=Dl[Hl]
set Kl[EB]=681
endif
set Ub=Ub-1
set HS[EB]=mB
call V3(PB,AB,1500.0,EB,"when calling forUnitsInRange in City, line 297")
if sc[mB]<0.0 then
set sc[mB]=0.0
endif
if sc[mB]>100.0 then
set sc[mB]=100.0
endif
if sc[mB]<50.0 then
set ZB=GetRandomReal(0.0,1.0)<=0.01
else
set ZB=false
endif
if ZB then
call Mcw(CS[mB],"when calling checkForRevolt in City, line 308")
endif
set Ub=Ub-1
return sc[mB]
endfunction
function TV takes integer eV,string qV returns string
local real aV
local integer nV
local integer dV
local integer fV
local integer RV
set Ib[Ub]=qV
set Ub=Ub+1
set Ib[Ub]="when calling countPublicOrder in City, line 316"
set Ub=Ub+1
if Al[eV]==0 then
if eV==0 then
call i7("Nullpointer exception when calling City.countPublicOrder","when calling error in City, line 288")
else
call i7("Called City.countPublicOrder on invalid object.","when calling error in City, line 288")
endif
endif
set aV=DB(eV,"when calling countPublicOrder in City, line 288")
set Ub=Ub-1
set fV=R2I(255.-aV/100.*255.)
set RV=R2I(aV/100.*255.)
set nV=fV/16
set dV=RV/16
set qV=StringCase("|cff"+Pc[nV]+Pc[fV-nV*16]+Pc[dV]+Pc[RV-dV*16]+Pc[0]+Pc[0],false)+I2S(R2I(aV))+","+I2S(R2I(ModuloReal(R2I(aV*10.),10)))+"%|r"
set Ub=Ub-1
return qV
endfunction
function ctw takes multiboard Nsw,integer Msw,integer wtw,string utw,real rtw returns nothing
local multiboarditem stw=MultiboardGetItem(Nsw,wtw,Msw)
local string ttw=utw
local integer itw=R2I((R2I(rtw/0.004)-StringLength(utw))*1./2)
local string Stw=""
set wtw=0
set Msw=itw-1
loop
exitwhen wtw>Msw
set Stw=Stw+" "
set wtw=wtw+1
endloop
if ModuloReal(itw,2)==1. then
set ttw=" "+ttw
endif
set ttw=Stw+ttw
call MultiboardSetItemValue(stw,ttw)
set stw=null
endfunction
function gV takes integer YV returns string
local string GV
if Zo then
return I2S(wc[YV])
endif
if wc[YV]<100000 then
set GV=I2S(R2I(wc[YV]*1./1000))+","+I2S(R2I(ModuloReal(wc[YV],1000)/100.))+"k"
else
set GV=I2S(R2I(wc[YV]*1./1000))+"k"
endif
return GV
endfunction
function pV takes integer rV,string sV returns integer
local integer tV
local real iV
local real SV
local real cV
local real oV
local integer OV
local integer lV
local boolean bV
local real yV
set Ib[Ub]=sV
set Ub=Ub+1
set tV=0
set tV=0+Uyw(bS,GetUnitTypeId(LS[rV]),"when calling get in City, line 260")
set yV=wc[rV]*1.
set Ib[Ub]="when calling countPublicOrder in City, line 272"
set Ub=Ub+1
if Al[rV]==0 then
if rV==0 then
call i7("Nullpointer exception when calling City.countPublicOrder","when calling error in City, line 288")
else
call i7("Called City.countPublicOrder on invalid object.","when calling error in City, line 288")
endif
endif
set oV=DB(rV,"when calling countPublicOrder in City, line 288")
set Ub=Ub-1
set iV=oV/100.
set SV=AO
if 0.75>SV then
set cV=0.75
else
set cV=SV
endif
if iV>cV then
set cV=iV
endif
set tV=tV+R2I(SquareRoot(yV*cV)/6.)
set tV=R2I(tV*ic[rV]*US[Sc[rV]])
set OV=hl
set lV=GetUnitTypeId(LS[rV])
set Ib[Ub]="when calling has in City, line 282"
set Ub=Ub+1
if hb[OV]==0 then
if OV==0 then
call i7("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call i7("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set bV=O9(OV,lV)
set Ub=Ub-1
if bV then
set tV=R2I(tV*0.4)
endif
set Ub=Ub-1
return tV
endfunction
function Iiw takes integer Oiw,string liw returns nothing
local integer biw
local multiboard yiw
local integer piw
local integer eiw
local integer qiw
local multiboard aiw
local integer niw
local integer diw
local multiboard fiw
local integer Riw
local integer Tiw
local integer Yiw
local string Giw
local integer giw
local string hiw
local integer Fiw
local string kiw
local integer jiw
local integer xiw
local integer viw
local string miw
local integer Qiw
local integer Wiw
local integer Eiw
local string Ziw
local string Uiw
set Ib[Ub]=liw
set Ub=Ub+1
if YO[Oiw]==-1 then
set Ub=Ub-1
set yiw=null
set aiw=null
set fiw=null
return
endif
set biw=GetPlayerId(RO[Oiw])
call ctw(yO[biw],lO[0],lO[1],kbw(AS[YO[Oiw]],"when calling getCityNameColored in PlayerStats, line 48"),0.40)
set Riw=AS[YO[Oiw]]
set Ib[Ub]="when calling countTax in PlayerStats, line 57"
set Ub=Ub+1
if Al[Riw]==0 then
if Riw==0 then
call i7("Nullpointer exception when calling City.countTax","when calling error in City, line 256")
else
call i7("Called City.countTax on invalid object.","when calling error in City, line 256")
endif
endif
set Tiw=pV(Riw,"when calling countTax in City, line 256")
set Ub=Ub-1
set Yiw=AS[YO[Oiw]]
set Ib[Ub]="when calling getTaxLevel in PlayerStats, line 58"
set Ub=Ub+1
if Al[Yiw]==0 then
if Yiw==0 then
call i7("Nullpointer exception when calling City.getTaxLevel","when calling error in City, line 162")
else
call i7("Called City.getTaxLevel on invalid object.","when calling error in City, line 162")
endif
endif
set Giw=Ol[Sc[Yiw]]
set Ub=Ub-1
set giw=AS[YO[Oiw]]
set Ib[Ub]="when calling getPublicOrderStr in PlayerStats, line 59"
set Ub=Ub+1
if Al[giw]==0 then
if giw==0 then
call i7("Nullpointer exception when calling City.getPublicOrderStr","when calling error in City, line 315")
else
call i7("Called City.getPublicOrderStr on invalid object.","when calling error in City, line 315")
endif
endif
set hiw=TV(giw,"when calling getPublicOrderStr in City, line 315")
set Ub=Ub-1
set Fiw=AS[YO[Oiw]]
set Ib[Ub]="when calling getPopulationStr in PlayerStats, line 60"
set Ub=Ub+1
if Al[Fiw]==0 then
if Fiw==0 then
call i7("Nullpointer exception when calling City.getPopulationStr","when calling error in City, line 336")
else
call i7("Called City.getPopulationStr on invalid object.","when calling error in City, line 336")
endif
endif
set kiw=gV(Fiw)
set Ub=Ub-1
set jiw=AS[YO[Oiw]]
set Ib[Ub]="when calling getPopulationGrowthStr in PlayerStats, line 61"
set Ub=Ub+1
if Al[jiw]==0 then
if jiw==0 then
call i7("Nullpointer exception when calling City.getPopulationGrowthStr","when calling error in City, line 333")
else
call i7("Called City.getPopulationGrowthStr on invalid object.","when calling error in City, line 333")
endif
endif
set liw=pow(uc[jiw])
set Ub=Ub-1
set yiw=yO[biw]
set xiw=SO[0]
set viw=SO[1]
set miw=I2S(Tiw)
call MultiboardSetItemValue(MultiboardGetItem(yiw,viw,xiw),miw)
call MultiboardSetItemValue(MultiboardGetItem(yiw,SO[1],SO[0]+1),Giw)
call MultiboardSetItemValue(MultiboardGetItem(yiw,cO[1],cO[0]),hiw)
call MultiboardSetItemValue(MultiboardGetItem(yiw,oO[1],oO[0]),kiw)
call MultiboardSetItemValue(MultiboardGetItem(yiw,OO[1],OO[0]),liw)
set piw=0
set Wiw=AS[YO[Oiw]]
set Ib[Ub]="when calling getModifiers in PlayerStats, line 71"
set Ub=Ub+1
if Al[Wiw]==0 then
if Wiw==0 then
call i7("Nullpointer exception when calling City.getModifiers","when calling error in City, line 371")
else
call i7("Called City.getModifiers on invalid object.","when calling error in City, line 371")
endif
endif
set Eiw=oc[Wiw]
set Ub=Ub-1
set Ib[Ub]="when calling iterator in PlayerStats, line 71"
set Ub=Ub+1
set Qiw=i9(Eiw,"when calling new_LLIterator in LinkedList, line 165")
set Ub=Ub-1
set eiw=Qiw
loop
exitwhen Go[ho[eiw]]==go[eiw]
set ho[eiw]=Go[ho[eiw]]
set qiw=To[ho[eiw]]
set aiw=yO[biw]
set Ziw=vS[Uyw(YS,qiw,"when calling get in PlayerStats, line 73")]
call MultiboardSetItemValue(MultiboardGetItem(aiw,4+piw,4),Ziw)
set Uiw="("+mS[Uyw(YS,qiw,"when calling get in PlayerStats, line 74")]+")"
call MultiboardSetItemValue(MultiboardGetItem(aiw,4+piw,5),Uiw)
set piw=piw+1
endloop
set Ib[Ub]="when calling close in PlayerStats, line 71"
set Ub=Ub+1
if ko[eiw]then
call Cyw(eiw,"when calling LLIterator in LinkedList, line 450")
endif
set Ub=Ub-1
set niw=piw
set diw=9
loop
exitwhen niw>diw
set fiw=yO[biw]
call MultiboardSetItemValue(MultiboardGetItem(fiw,4+niw,4)," ")
call MultiboardSetItemValue(MultiboardGetItem(fiw,4+niw,5)," ")
set niw=niw+1
endloop
set Ub=Ub-1
set yiw=null
set aiw=null
set fiw=null
endfunction
function wuw takes integer Xww,integer Cww,string Vww returns nothing
local integer Bww
local boolean Nww
local integer Mww
set Ib[Ub]=Vww
set Ub=Ub+1
set Cww=0
set Bww=23
loop
exitwhen Cww>Bww
set Xww=dO[Cww]
set Ib[Ub]="when calling isInGame in MultiboardCityUpdate, line 27"
set Ub=Ub+1
if mb[Xww]==0 then
if Xww==0 then
call i7("Nullpointer exception when calling PlayerStats.isInGame","when calling error in PlayerStats, line 14")
else
call i7("Called PlayerStats.isInGame on invalid object.","when calling error in PlayerStats, line 14")
endif
endif
set Nww=TO[Xww]
set Ub=Ub-1
if Nww then
set Mww=dO[Cww]
set Vww="when calling refreshMultiboardCity in MultiboardCityUpdate, line 28"
set Ib[Ub]="when calling refreshMultiboardCity in MultiboardCityUpdate, line 28"
set Ub=Ub+1
if mb[Mww]==0 then
if Mww==0 then
call i7("Nullpointer exception when calling PlayerStats.refreshMultiboardCity","when calling error in PlayerStats, line 43")
else
call i7("Called PlayerStats.refreshMultiboardCity on invalid object.","when calling error in PlayerStats, line 43")
endif
endif
call Iiw(Mww,"when calling refreshMultiboardCity in PlayerStats, line 43")
set Ub=Ub-1
endif
set Cww=Cww+1
endloop
set Ub=Ub-1
endfunction
function Syw takes integer ryw,integer syw,string tyw returns nothing
local force iyw
set Ib[Ub]=tyw
set Ub=Ub+1
if wb[ryw]==0 then
if ryw==0 then
call i7("Nullpointer exception when calling CallbackPeriodic.call","when calling error in ClosureTimers, line 86")
else
call i7("Called CallbackPeriodic.call on invalid object.","when calling error in ClosureTimers, line 86")
endif
endif
if wb[ryw]<=634 then
if wb[ryw]<=632 then
if wb[ryw]<=631 then
call oM(ryw,syw,"when calling City_closure_impl in ClosureTimers, line 86")
else
call hM(ryw,syw,"when calling City_closure_impl in ClosureTimers, line 86")
endif
elseif wb[ryw]<=633 then
set iyw=bj_FORCE_ALL_PLAYERS
if IsPlayerInForce(GetLocalPlayer(),iyw) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,20.0,"Enjoying the map? Join the |cffe100ffofficial CoE discord channel|r! Link: |cffffff00discord.gg/V6kmxsy|r")
endif
else
call v4(ryw,syw)
endif
elseif wb[ryw]<=636 then
if wb[ryw]<=635 then
call d6(ryw,syw,"when calling Economy_closure_impl in ClosureTimers, line 86")
else
call L6(ryw,syw,"when calling Economy_closure_impl in ClosureTimers, line 86")
endif
else
call wuw(ryw,syw,"when calling MultiboardCityUpdate_closure_impl in ClosureTimers, line 86")
endif
set Ub=Ub-1
set iyw=null
endfunction
function sOw takes timer Now,string Mow returns integer
local integer wOw
local integer uOw
local integer rOw
set Ib[Ub]=Mow
set Ub=Ub+1
set wOw=pl
set uOw=GetHandleId(Now)
set Ib[Ub]="when calling loadInt in TimerUtils, line 21"
set Ub=Ub+1
if bb[wOw]==0 then
if wOw==0 then
call i7("Nullpointer exception when calling Table.loadInt","when calling error in Table, line 39")
else
call i7("Called Table.loadInt on invalid object.","when calling error in Table, line 39")
endif
endif
set rOw=LoadInteger(ll,wOw,uOw)
set Ub=Ub-1-1
return rOw
endfunction
function Faw takes nothing returns nothing
local integer haw
set Ub=0
set Ib[Ub]="ClosureTimers, line 91"
set Ub=Ub+1
set haw=sOw(GetExpiredTimer(),"when calling getData in ClosureTimers, line 94")
call Syw(haw,haw,"when calling call in ClosureTimers, line 95")
set Ub=Ub-1
endfunction
function hx takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function Fx takes nothing returns boolean
if not hx() then
return false
endif
return true
endfunction
function GA takes nothing returns nothing
local integer aA=1
local integer nA=1752461175
local player dA=GetOwningPlayer(GetTriggerUnit())
local rect YA=bj_mapInitialPlayableArea
local location TA=Location(GetRectCenterX(YA),GetRectCenterY(YA))
local location fA=Location(GetLocationX(TA)+100000000.00,GetLocationY(TA)+100000000.00)
local real RA=bj_UNIT_FACING
call GroupClear(bj_lastCreatedGroup)
loop
set aA=aA-1
exitwhen aA<0
call CreateUnitAtLocSaveLast(dA,nA,fA,RA)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
call ShowUnit(bj_lastCreatedUnit,false)
set dA=null
set fA=null
set TA=null
set YA=null
endfunction
function GE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989825,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989817,0)
endfunction
function GJ takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function YQ takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function GQ takes nothing returns boolean
if not YQ() then
return false
endif
return true
endfunction
function Fyw takes integer Yyw,integer Gyw,string gyw returns boolean
local boolean hyw
set Ib[Ub]=gyw
set Ub=Ub+1
if bb[Yyw]==0 then
if Yyw==0 then
call i7("Nullpointer exception when calling HashMap.has","when calling error in HashMap, line 11")
else
call i7("Called HashMap.has on invalid object.","when calling error in HashMap, line 11")
endif
endif
set Ib[Ub]="when calling has in HashMap, line 11"
set Ub=Ub+1
set Ib[Ub]="when calling hasInt in HashMap, line 12"
set Ub=Ub+1
if bb[Yyw]==0 then
if Yyw==0 then
call i7("Nullpointer exception when calling Table.hasInt","when calling error in Table, line 9")
else
call i7("Called Table.hasInt on invalid object.","when calling error in Table, line 9")
endif
endif
set hyw=HaveSavedInteger(ll,Yyw,Gyw)
set Ub=Ub-1-1-1
return hyw
endfunction
function Xbw takes integer Jbw,unit Kbw,string Lbw returns nothing
set Ib[Ub]=Lbw
set Ub=Ub+1
if rb[Jbw]==0 then
if Jbw==0 then
call i7("Nullpointer exception when calling OnCastListener.fire","when calling error in ClosureEvents, line 56")
else
call i7("Called OnCastListener.fire on invalid object.","when calling error in ClosureEvents, line 56")
endif
endif
set Ub=Ub-1
endfunction
function d3 takes string p3 returns nothing
local unit e3
local integer q3
local integer a3
local integer n3
set Ib[Ub]=p3
set Ub=Ub+1
set e3=GetTriggerUnit()
set q3=GetSpellAbilityId()
if Fyw(dc,GetHandleId(e3),"when calling has in ClosureEvents, line 188") then
set a3=Uyw(dc,GetHandleId(e3),"when calling get in ClosureEvents, line 189")
loop
exitwhen a3==0
if Fc[a3]==-1 or Fc[a3]==q3 then
call Xbw(a3,GetSpellAbilityUnit(),"when calling fire in ClosureEvents, line 192")
endif
set a3=gc[a3]
endloop
endif
if Fyw(nc,q3,"when calling has in ClosureEvents, line 194") then
set n3=Uyw(nc,q3,"when calling get in ClosureEvents, line 195")
loop
exitwhen n3==0
if kc[n3]==null or kc[n3]==e3 then
call Xbw(n3,GetSpellAbilityUnit(),"when calling fire in ClosureEvents, line 198")
endif
set n3=gc[n3]
endloop
endif
set Ub=Ub-1
set e3=null
endfunction
function Gaw takes nothing returns nothing
set Ub=0
set Ib[Ub]="ClosureEvents, line 306"
set Ub=Ub+1
call d3("when calling onSpellEffect in ClosureEvents, line 306")
set Ub=Ub-1
endfunction
function Yh takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988801 then
return false
endif
if GetUnitTypeId(GetSpellTargetUnit())!=1747988787 then
return false
endif
return true
endfunction
function Gh takes nothing returns boolean
if not Yh() then
return false
endif
return true
endfunction
function Gm takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989082,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989072,0)
endfunction
function Gow takes nothing returns boolean
return true
endfunction
function Gtw takes nothing returns boolean
return true
endfunction
function HD takes nothing returns nothing
call UnitAddAbility(GetConstructedStructure(),1093677896)
endfunction
function DG takes nothing returns boolean
if IsUnitType(GetEnumUnit(),UNIT_TYPE_STRUCTURE)!=false then
return false
endif
return true
endfunction
function HG takes nothing returns nothing
if DG() then
call SetUnitPositionLoc(GetEnumUnit(),c)
endif
endfunction
function HI takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990595,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990608,0)
endfunction
function HOw takes nothing returns boolean
return true
endfunction
function DZ takes nothing returns boolean
if GetResearched()!=1378890036 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890036,true)!=1 then
return false
endif
return true
endfunction
function HZ takes nothing returns boolean
if not DZ() then
return false
endif
return true
endfunction
function Dg takes nothing returns boolean
local unitstate Ag=UNIT_STATE_MANA
if GetUnitState(GetEnumUnit(),Ag)>0.00 then
set Ag=null
return false
endif
set Ag=null
return true
endfunction
function Hg takes nothing returns nothing
if Dg() then
call KillUnit(GetEnumUnit())
endif
endfunction
function Dh takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988791 then
return false
endif
if GetUnitTypeId(GetSpellTargetUnit())!=1747988787 then
return false
endif
return true
endfunction
function Hh takes nothing returns boolean
if not Dh() then
return false
endif
return true
endfunction
function Hqw takes nothing returns boolean
local integer Uqw
local integer Iqw
local integer Pqw
local integer Aqw
local integer Dqw
set Ub=0
set Ib[Ub]="City, line 1"
set Ub=Ub+1
set WS=120.0
set ES[0]=0.0010
set ES[1]=0.0015
set Ib[Ub]="when calling asList in City, line 36"
set Ub=Ub+1
set Uqw=n9("when calling new_LinkedList in LinkedList, line 391")
call Tpw(Uqw,10000,"when calling add in LinkedList, line 393")
call Tpw(Uqw,20000,"when calling add in LinkedList, line 393")
set Ub=Ub-1
set ZS[0]=Uqw
set Ib[Ub]="when calling asList in City, line 37"
set Ub=Ub+1
set Iqw=n9("when calling new_LinkedList in LinkedList, line 391")
call Tpw(Iqw,30000,"when calling add in LinkedList, line 393")
call Tpw(Iqw,40000,"when calling add in LinkedList, line 393")
set Ub=Ub-1
set ZS[1]=Iqw
set Ib[Ub]="when calling asList in City, line 38"
set Ub=Ub+1
set Pqw=n9("when calling new_LinkedList in LinkedList, line 391")
call Tpw(Pqw,60000,"when calling add in LinkedList, line 393")
call Tpw(Pqw,90000,"when calling add in LinkedList, line 393")
set Ub=Ub-1
set ZS[2]=Pqw
set Ib[Ub]="when calling asList in City, line 39"
set Ub=Ub+1
set Aqw=n9("when calling new_LinkedList in LinkedList, line 391")
call Tpw(Aqw,120000,"when calling add in LinkedList, line 393")
call Tpw(Aqw,160000,"when calling add in LinkedList, line 393")
set Ub=Ub-1
set ZS[3]=Aqw
set Ib[Ub]="when calling asList in City, line 40"
set Ub=Ub+1
set Dqw=n9("when calling new_LinkedList in LinkedList, line 391")
call Tpw(Dqw,180000,"when calling add in LinkedList, line 393")
call Tpw(Dqw,220000,"when calling add in LinkedList, line 393")
set Ub=Ub-1
set ZS[4]=Dqw
set US[0]=1.0
set US[1]=0.5
set US[2]=1.6
set IS[0]=0.0
set IS[1]=20.0
set IS[2]=-30.0
set PS[0]=0.05
set PS[1]=0.0
set PS[2]=0.15
set Ub=Ub-1
return true
endfunction
function Hsw takes nothing returns boolean
return true
endfunction
function Hx takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988567,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988564,0)
endfunction
function IA takes nothing returns nothing
local integer vA=1
local integer mA=1751868773
local player QA=GetOwningPlayer(GetTriggerUnit())
local rect UA=bj_mapInitialPlayableArea
local location ZA=Location(GetRectCenterX(UA),GetRectCenterY(UA))
local location WA=Location(GetLocationX(ZA)+100000000.00,GetLocationY(ZA)+100000000.00)
local real EA=bj_UNIT_FACING
call GroupClear(bj_lastCreatedGroup)
loop
set vA=vA-1
exitwhen vA<0
call CreateUnitAtLocSaveLast(QA,mA,WA,EA)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
call ShowUnit(bj_lastCreatedUnit,false)
set QA=null
set WA=null
set ZA=null
set UA=null
endfunction
function IE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651846,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651847,0)
endfunction
function IF takes nothing returns nothing
local player FF=GetOwningPlayer(GetKillingUnit())
local playerstate kF=PLAYER_STATE_RESOURCE_LUMBER
local playerstate jF
local playerstate xF
local player vF
local force mF
local location QF
local real WF
local real EF
local player ZF
local force UF
if kF==PLAYER_STATE_RESOURCE_GOLD then
set jF=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(FF,jF,GetPlayerState(FF,jF)+125)
elseif kF==PLAYER_STATE_RESOURCE_LUMBER then
set xF=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(FF,xF,GetPlayerState(FF,xF)+125)
endif
call SetPlayerState(FF,kF,GetPlayerState(FF,kF)+125)
set vF=GetOwningPlayer(GetKillingUnit())
set mF=CreateForce()
call ForceAddPlayer(mF,vF)
if IsPlayerInForce(GetLocalPlayer(),mF) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_089")
endif
set e=GetUnitLoc(GetDyingUnit())
set ZF=GetOwningPlayer(GetDyingUnit())
set UF=CreateForce()
call ForceAddPlayer(UF,ZF)
set QF=e
set WF=GetLocationX(QF)
set EF=GetLocationY(QF)
if IsPlayerInForce(GetLocalPlayer(),UF) then
call PingMinimap(WF,EF,2.00)
endif
call RemoveLocation(e)
set FF=null
set kF=null
set jF=null
set xF=null
set vF=null
set mF=null
set QF=null
set ZF=null
set UF=null
endfunction
function IJ takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function UQ takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function IQ takes nothing returns boolean
if not UQ() then
return false
endif
return true
endfunction
function Ik takes nothing returns nothing
local player Fk=GetOwningPlayer(GetKillingUnit())
local playerstate kk=PLAYER_STATE_RESOURCE_GOLD
local playerstate jk
local playerstate xk
local player vk
local force mk
local location Qk
local real Wk
local real Ek
local player Zk
local force Uk
if kk==PLAYER_STATE_RESOURCE_GOLD then
set jk=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(Fk,jk,GetPlayerState(Fk,jk)+250)
elseif kk==PLAYER_STATE_RESOURCE_LUMBER then
set xk=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(Fk,xk,GetPlayerState(Fk,xk)+250)
endif
call SetPlayerState(Fk,kk,GetPlayerState(Fk,kk)+250)
set vk=GetOwningPlayer(GetKillingUnit())
set mk=CreateForce()
call ForceAddPlayer(mk,vk)
if IsPlayerInForce(GetLocalPlayer(),mk) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_092")
endif
set e=GetUnitLoc(GetDyingUnit())
set Zk=GetOwningPlayer(GetDyingUnit())
set Uk=CreateForce()
call ForceAddPlayer(Uk,Zk)
set Qk=e
set Wk=GetLocationX(Qk)
set Ek=GetLocationY(Qk)
if IsPlayerInForce(GetLocalPlayer(),Uk) then
call PingMinimap(Wk,Ek,2.00)
endif
call RemoveLocation(e)
set Fk=null
set kk=null
set jk=null
set xk=null
set vk=null
set mk=null
set Qk=null
set Zk=null
set Uk=null
endfunction
function Im takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989080,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988818,0)
endfunction
function JF takes nothing returns boolean
if GetUnitTypeId(GetDyingUnit())!=1747988801 then
return false
endif
return true
endfunction
function JOw takes nothing returns boolean
return true
endfunction
function HU takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function JU takes nothing returns boolean
if not HU() then
return false
endif
return true
endfunction
function HW takes nothing returns boolean
if GetResearched()!=1378889810 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889810,true)!=1 then
return false
endif
return true
endfunction
function JW takes nothing returns boolean
if not HW() then
return false
endif
return true
endfunction
function JZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989836,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989837,0)
endfunction
function Jow takes nothing returns boolean
return true
endfunction
function Yow takes string Row returns integer
local integer Tow
set Ib[Ub]=Row
set Ub=Ub+1
set Ib[Ub]="when calling Table in Table, line 5"
set Ub=Ub+1
if Ob==0 then
if lb<32768 then
set lb=lb+1
set Tow=lb
set bb[Tow]=724
else
call i7("Out of memory: Could not create Table.","when calling error in Table, line 6")
set Tow=0
endif
else
set Ob=Ob-1
set Tow=ob[Ob]
set bb[Tow]=724
endif
set Ub=Ub-1-1
return Tow
endfunction
function Jqw takes nothing returns boolean
set Ub=0
set Ib[Ub]="EventHelper, line 1"
set Ub=Ub+1
call A7("when calling new_HashMap in EventHelper, line 6")
call A7("when calling new_HashMap in EventHelper, line 7")
call Yow("when calling new_Table in EventHelper, line 8")
set Ub=Ub-1
return true
endfunction
function JA takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())==1747988531 then
return true
endif
if GetUnitTypeId(GetTriggerUnit())==1747990328 then
return true
endif
if GetUnitTypeId(GetTriggerUnit())==1747989592 then
return true
endif
if GetUnitTypeId(GetTriggerUnit())==1747990086 then
return true
endif
return false
endfunction
function KA takes nothing returns boolean
if not JA() then
return false
endif
return true
endfunction
function JE takes nothing returns boolean
if GetResearched()!=1378890037 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890037,true)!=2 then
return false
endif
return true
endfunction
function KE takes nothing returns boolean
if not JE() then
return false
endif
return true
endfunction
function JJ takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990085 then
return false
endif
return true
endfunction
function KJ takes nothing returns boolean
if not JJ() then
return false
endif
return true
endfunction
function KOw takes nothing returns boolean
set ql=CreateTrigger()
set al=CreateTrigger()
set nl=null
set dl=null
call TriggerAddCondition(eO,Filter(Af))
call TriggerAddAction(eO,Df)
return true
endfunction
function KT takes nothing returns nothing
local player HT=GetOwningPlayer(GetConstructedStructure())
local player JT=GetOwningPlayer(GetConstructedStructure())
set y[GetPlayerId(HT)+1]=y[GetPlayerId(JT)+1]+75
call UnitAddAbility(GetConstructedStructure(),1093677891)
set HT=null
set JT=null
endfunction
function KU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990323,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990106,0)
endfunction
function KW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989573,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989572,0)
endfunction
function Jk takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989048 then
return false
endif
if GetUnitTypeId(GetSpellTargetUnit())!=1747988569 then
return false
endif
return true
endfunction
function Kk takes nothing returns boolean
if not Jk() then
return false
endif
return true
endfunction
function Jm takes nothing returns boolean
if GetResearched()!=1378889803 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889803,true)!=1 then
return false
endif
return true
endfunction
function Km takes nothing returns boolean
if not Jm() then
return false
endif
return true
endfunction
function Tcw takes playerunitevent ycw,code pcw,code ecw,code qcw returns nothing
local integer acw=GetHandleId(ycw)
local integer ncw
local filterfunc dcw
local trigger fcw
local player Rcw
if DO[acw]==null then
set DO[acw]=CreateTrigger()
set ncw=bj_MAX_PLAYER_SLOTS-1
loop
exitwhen ncw<0
set fcw=DO[acw]
set Rcw=gO[ncw]
if pcw!=null then
set dcw=Filter(pcw)
else
set dcw=null
endif
call TriggerRegisterPlayerUnitEvent(fcw,Rcw,ycw,dcw)
set ncw=ncw-1
endloop
endif
if ecw!=null then
call TriggerAddCondition(DO[acw],Filter(ecw))
endif
if qcw!=null then
call TriggerAddAction(DO[acw],qcw)
endif
set dcw=null
set fcw=null
set Rcw=null
endfunction
function Kqw takes nothing returns boolean
set Ub=0
set Ib[Ub]="RegisterEvents, line 1"
set Ub=Ub+1
set HO=A7("when calling new_HashMap in RegisterEvents, line 55")
call Tcw(EVENT_PLAYER_UNIT_SPELL_EFFECT,null,Jf,null)
set Ub=Ub-1
return true
endfunction
function LE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651848,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651846,0)
endfunction
function LJ takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function LP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990584,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990594,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990583,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990607,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990598,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990606,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990599,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990601,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651855,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651852,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651850,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990595,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990596,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990604,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990603,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990322,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990323,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990321,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990324,0)
endfunction
function KQ takes nothing returns boolean
if GetResearched()!=1378889807 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889807,true)!=1 then
return false
endif
return true
endfunction
function LQ takes nothing returns boolean
if not KQ() then
return false
endif
return true
endfunction
function Lm takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651828,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651827,0)
endfunction
function Lqw takes nothing returns boolean
set Ub=0
set Ib[Ub]="TimerUtils, line 1"
set Ub=Ub+1
set pl=Yow("when calling new_Table in TimerUtils, line 12")
call CreateTimer()
call CreateTrigger()
set Ub=Ub-1
return true
endfunction
function NE takes nothing returns boolean
if GetResearched()!=1378890034 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890034,true)!=1 then
return false
endif
return true
endfunction
function ME takes nothing returns boolean
if not NE() then
return false
endif
return true
endfunction
function NJ takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989592 then
return false
endif
return true
endfunction
function MJ takes nothing returns boolean
if not NJ() then
return false
endif
return true
endfunction
function MR takes nothing returns nothing
call CreateQuestBJ(bj_QUESTTYPE_OPT_DISCOVERED,"TRIGSTR_097","TRIGSTR_098","ReplaceableTextures\\CommandButtons\\BTNSteelMelee.blp")
call CreateQuestBJ(bj_QUESTTYPE_OPT_DISCOVERED,"TRIGSTR_103","TRIGSTR_104","ReplaceableTextures\\WorldEditUI\\Doodad-Cinematic.blp")
call CreateQuestBJ(bj_QUESTTYPE_OPT_DISCOVERED,"TRIGSTR_2667","TRIGSTR_2668","ReplaceableTextures\\WorldEditUI\\Editor-MultipleUnits.blp")
endfunction
function MU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990584,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990593,0)
endfunction
function MW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989574,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989573,0)
endfunction
function Nm takes nothing returns boolean
if GetResearched()!=1378889812 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889812,true)!=1 then
return false
endif
return true
endfunction
function Mm takes nothing returns boolean
if not Nm() then
return false
endif
return true
endfunction
function jM takes string FM returns boolean
local integer kM
set Ib[Ub]=FM
set Ub=Ub+1
set bc=ConvertPlayerEvent(96)
set nc=A7("when calling new_HashMap in ClosureEvents, line 99")
set dc=A7("when calling new_HashMap in ClosureEvents, line 100")
set yc=CreateTrigger()
set pc=CreateTrigger()
set ec=CreateTrigger()
set Ib[Ub]="when calling alloc_Closure in ClosureEvents, line 279"
set Ub=Ub+1
if Xl==0 then
if Cl<32768 then
set Cl=Cl+1
set kM=Cl
set Vl[kM]=640
else
call i7("Out of memory: Could not create Closure.","when calling error in ClosureEvents, line 279")
set kM=0
endif
else
set Xl=Xl-1
set kM=Ll[Xl]
set Vl[kM]=640
endif
set Ub=Ub-1
set Ib[Ub]="when calling nullTimer in ClosureEvents, line 279"
set Ub=Ub+1
set Ib[Ub]="when calling doAfter in ClosureTimers, line 22"
set Ub=Ub+1
set Ib[Ub]="when calling start in ClosureTimers, line 15"
set Ub=Ub+1
if Vl[kM]==0 then
if kM==0 then
call i7("Nullpointer exception when calling CallbackSingle.start","when calling error in ClosureTimers, line 67")
else
call i7("Called CallbackSingle.start on invalid object.","when calling error in ClosureTimers, line 67")
endif
endif
call S1(kM,0.,"when calling start in ClosureTimers, line 67")
set Ub=Ub-1-1-1-1
return true
endfunction
function Mqw takes nothing returns boolean
set Ub=0
return jM("ClosureEvents, line 1")
endfunction
function NR takes nothing returns nothing
endfunction
function BT takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989043 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function NT takes nothing returns boolean
if not BT() then
return false
endif
return true
endfunction
function BU takes nothing returns boolean
if GetResearched()!=1378890049 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890049,true)!=1 then
return false
endif
return true
endfunction
function NU takes nothing returns boolean
if not BU() then
return false
endif
return true
endfunction
function BW takes nothing returns boolean
if GetResearched()!=1378889810 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889810,true)!=2 then
return false
endif
return true
endfunction
function NW takes nothing returns boolean
if not BW() then
return false
endif
return true
endfunction
function NY takes nothing returns nothing
local unit VY=GetSpellTargetUnit()
local unitstate BY=UNIT_STATE_MANA
call SetUnitState(VY,UNIT_STATE_MANA,RMaxBJ(0.,GetUnitState(GetSpellTargetUnit(),BY)-600.00))
set VY=null
set BY=null
endfunction
function NZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989835,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989836,0)
endfunction
function Bg takes nothing returns boolean
local unitstate Vg=UNIT_STATE_MANA
if GetUnitState(GetEnumUnit(),Vg)>0.00 then
set Vg=null
return false
endif
set Vg=null
return true
endfunction
function Ng takes nothing returns nothing
if Bg() then
call KillUnit(GetEnumUnit())
endif
endfunction
function Dtw takes string Utw returns boolean
local integer Itw
local integer Ptw
local integer Atw
set Ib[Ub]=Utw
set Ub=Ub+1
set eO=CreateTrigger()
set qO=CreateGroup()
set Itw=0
set Ptw=bj_MAX_PLAYER_SLOTS-1
loop
exitwhen Itw>Ptw
call SetPlayerAbilityAvailable(gO[Itw],1095577649,false)
set Itw=Itw+1
endloop
set Ib[Ub]="when calling alloc_Closure in OnUnitEnterLeave, line 59"
set Ub=Ub+1
if Xl==0 then
if Cl<32768 then
set Cl=Cl+1
set Atw=Cl
set Vl[Atw]=650
else
call i7("Out of memory: Could not create Closure.","when calling error in OnUnitEnterLeave, line 59")
set Atw=0
endif
else
set Xl=Xl-1
set Atw=Ll[Xl]
set Vl[Atw]=650
endif
set Ub=Ub-1
set Ib[Ub]="when calling nullTimer in OnUnitEnterLeave, line 59"
set Ub=Ub+1
set Ib[Ub]="when calling doAfter in ClosureTimers, line 22"
set Ub=Ub+1
set Ib[Ub]="when calling start in ClosureTimers, line 15"
set Ub=Ub+1
if Vl[Atw]==0 then
if Atw==0 then
call i7("Nullpointer exception when calling CallbackSingle.start","when calling error in ClosureTimers, line 67")
else
call i7("Called CallbackSingle.start on invalid object.","when calling error in ClosureTimers, line 67")
endif
endif
call S1(Atw,0.,"when calling start in ClosureTimers, line 67")
set Ub=Ub-1-1-1-1
return true
endfunction
function Nqw takes nothing returns boolean
set Ub=0
return Dtw("OnUnitEnterLeave, line 1")
endfunction
function Ntw takes nothing returns nothing
call Jtw(GetEnumUnit())
endfunction
function O7 takes nothing returns boolean
call CreateGroup()
return true
endfunction
function OD takes nothing returns nothing
local group SD=GetUnitsOfTypeIdAll(1747988554)
local code cD=ka
local boolean oD=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(SD,cD)
if oD then
call DestroyGroup(SD)
endif
set SD=null
endfunction
function OJ takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function IM takes eventid xM,string vM returns integer
local integer mM
local integer QM
local integer WM
local integer EM
local boolean ZM
local boolean UM
set Ib[Ub]=vM
set Ub=Ub+1
set mM=GetHandleId(xM)
set ac=ac+1
set qc[mM]=ac
set QM=GetHandleId(xM)
if (QM>=18 and QM<=51)or(QM>=269 and QM<=277) then
call Tcw(ConvertPlayerUnitEvent(mM),null,df,null)
else
if xM!=EVENT_UNIT_DAMAGED and xM!=EVENT_PLAYER_LEAVE and xM!=bc then
set WM=GetHandleId(xM)
set ZM=WM<261 or WM>268 and WM!=17
else
set ZM=false
endif
if ZM then
set EM=GetHandleId(xM)
set UM=EM<305 or EM>307
else
set UM=false
endif
if UM then
call i7("registering handleid: "+I2S(mM)+" non-playerunitevent. Except EVENT_UNIT_DAMAGED and EVENT_PLAYER_LEAVE these are not supported right now.","when calling error in ClosureEvents, line 242")
endif
endif
set Ub=Ub-1
return ac
endfunction
function Q8 takes string h8 returns boolean
local playerunitevent F8
local playerunitevent k8
local integer j8
local integer x8
local integer v8
local integer m8
set Ib[Ub]=h8
set Ub=Ub+1
set F8=EVENT_PLAYER_UNIT_DEATH
set Ib[Ub]="when calling alloc_Closure in LimitMercenaryCamps, line 8"
set Ub=Ub+1
if vl==0 then
if ml<32768 then
set ml=ml+1
set j8=ml
set Ql[j8]=667
else
call i7("Out of memory: Could not create Closure.","when calling error in LimitMercenaryCamps, line 8")
set j8=0
endif
else
set vl=vl-1
set j8=xl[vl]
set Ql[j8]=667
endif
set Ub=Ub-1
set Tc[j8]=0
set Yc[j8]=0
set Gc[j8]=0
set Ib[Ub]="when calling add in LimitMercenaryCamps, line 8"
set Ub=Ub+1
set Ib[Ub]="when calling toIntId in ClosureEvents, line 111"
set Ub=Ub+1
set x8=qc[GetHandleId(F8)]
if x8==0 then
set x8=IM(F8,"when calling registerEventId in ClosureEvents, line 228")
endif
set Ub=Ub-1
set Tc[j8]=x8
if fc[Tc[j8]]!=0 then
set Gc[fc[Tc[j8]]]=j8
set Yc[j8]=fc[Tc[j8]]
endif
set fc[Tc[j8]]=j8
set Ub=Ub-1
set k8=EVENT_PLAYER_UNIT_CONSTRUCT_START
set Ib[Ub]="when calling alloc_Closure in LimitMercenaryCamps, line 12"
set Ub=Ub+1
if vl==0 then
if ml<32768 then
set ml=ml+1
set v8=ml
set Ql[v8]=668
else
call i7("Out of memory: Could not create Closure.","when calling error in LimitMercenaryCamps, line 12")
set v8=0
endif
else
set vl=vl-1
set v8=xl[vl]
set Ql[v8]=668
endif
set Ub=Ub-1
set Tc[v8]=0
set Yc[v8]=0
set Gc[v8]=0
set Ib[Ub]="when calling add in LimitMercenaryCamps, line 12"
set Ub=Ub+1
set Ib[Ub]="when calling toIntId in ClosureEvents, line 111"
set Ub=Ub+1
set m8=qc[GetHandleId(k8)]
if m8==0 then
set m8=IM(k8,"when calling registerEventId in ClosureEvents, line 228")
endif
set Ub=Ub-1
set Tc[v8]=m8
if fc[Tc[v8]]!=0 then
set Gc[fc[Tc[v8]]]=v8
set Yc[v8]=fc[Tc[v8]]
endif
set fc[Tc[v8]]=v8
set Ub=Ub-1-1
set F8=null
set k8=null
return true
endfunction
function Oaw takes nothing returns boolean
set Ub=0
return Q8("LimitMercenaryCamps, line 1")
endfunction
function Om takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988812,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988559,0)
endfunction
function Oow takes nothing returns boolean
return true
endfunction
function IH takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990350 then
return false
endif
return true
endfunction
function PH takes nothing returns boolean
if not IH() then
return false
endif
return true
endfunction
function IP takes nothing returns boolean
if GetResearched()!=1378890041 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890041,true)!=1 then
return false
endif
return true
endfunction
function PP takes nothing returns boolean
if not IP() then
return false
endif
return true
endfunction
function PQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990099,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990096,0)
endfunction
function Iv takes nothing returns boolean
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889797,true)!=1 then
return false
endif
return true
endfunction
function Pv takes nothing returns boolean
if not Iv() then
return false
endif
return true
endfunction
function QH takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function QL takes nothing returns boolean
set lS=gO[PLAYER_NEUTRAL_PASSIVE]
return true
endfunction
function QP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990598,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990597,0)
endfunction
function slw takes unit wlw,string ulw returns integer
local integer rlw
set Ib[Ub]=ulw
set Ub=Ub+1
set Ib[Ub]="when calling UnitIndex in UnitIndexer, line 166"
set Ub=Ub+1
if Wb==0 then
if Eb<32768 then
set Eb=Eb+1
set rlw=Eb
set Zb[rlw]=734
else
call i7("Out of memory: Could not create UnitIndex.","when calling error in UnitIndexer, line 157")
set rlw=0
endif
else
set Wb=Wb-1
set rlw=Qb[Wb]
set Zb[rlw]=734
endif
set Ub=Ub-1
set fl[rlw]=wlw
call SetUnitUserData(fl[rlw],rlw)
set nl=fl[rlw]
call TriggerEvaluate(ql)
set Ub=Ub-1
return rlw
endfunction
function MOw takes string BOw returns nothing
local unit NOw
set Ib[Ub]=BOw
set Ub=Ub+1
set NOw=aO[nO-1]
set Ib[Ub]="when calling toUnitIndex in UnitIndexer, line 179"
set Ub=Ub+1
if GetUnitUserData(NOw)==0 then
call slw(NOw,"when calling new_UnitIndex in UnitIndexer, line 125")
endif
set Ub=Ub-1-1
set NOw=null
endfunction
function Qaw takes nothing returns nothing
set Ub=0
call MOw("UnitIndexer, line 179")
endfunction
function Qv takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651826,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651824,0)
endfunction
function now takes string eow,string qow returns boolean
local integer aow=StringLength(eow)
if StringLength(qow)>aow then
return false
endif
return SubString(eow,0,StringLength(qow))==qow
endfunction
function R4 takes nothing returns boolean
return now(GetEventPlayerChatString(),"-")
endfunction
function R9 takes nothing returns boolean
set Zo=false
set Uo=false
set Io=CreateTimer()
call TimerStart(Io,0.01,true,Wf)
return true
endfunction
function RD takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function RF takes nothing returns nothing
local player OF=GetOwningPlayer(GetSpellTargetUnit())
local playerstate lF=PLAYER_STATE_RESOURCE_GOLD
local playerstate bF
local playerstate yF
local player pF
local force eF
local location qF
local real aF
local real nF
local player dF
local force fF
if lF==PLAYER_STATE_RESOURCE_GOLD then
set bF=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(OF,bF,GetPlayerState(OF,bF)+500)
elseif lF==PLAYER_STATE_RESOURCE_LUMBER then
set yF=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(OF,yF,GetPlayerState(OF,yF)+500)
endif
call SetPlayerState(OF,lF,GetPlayerState(OF,lF)+500)
call RemoveUnit(GetSpellAbilityUnit())
set pF=GetOwningPlayer(GetSpellTargetUnit())
set eF=CreateForce()
call ForceAddPlayer(eF,pF)
if IsPlayerInForce(GetLocalPlayer(),eF) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_1231")
endif
set e=GetUnitLoc(GetSpellTargetUnit())
set dF=GetOwningPlayer(GetSpellTargetUnit())
set fF=CreateForce()
call ForceAddPlayer(fF,dF)
set qF=e
set aF=GetLocationX(qF)
set nF=GetLocationY(qF)
if IsPlayerInForce(GetLocalPlayer(),fF) then
call PingMinimap(aF,nF,2.00)
endif
call RemoveLocation(e)
set OF=null
set lF=null
set bF=null
set yF=null
set pF=null
set eF=null
set qF=null
set dF=null
set fF=null
endfunction
function RI takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990607,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990583,0)
endfunction
function fK takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747988531 then
return false
endif
return true
endfunction
function RK takes nothing returns boolean
if not fK() then
return false
endif
return true
endfunction
function fZ takes nothing returns boolean
if GetResearched()!=1378890033 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890033,true)!=2 then
return false
endif
return true
endfunction
function RZ takes nothing returns boolean
if not fZ() then
return false
endif
return true
endfunction
function G7 takes integer d7,integer f7,string R7 returns nothing
local hashtable T7
local integer Y7
set Ib[Ub]=R7
set Ub=Ub+1
set T7=po
set Ib[Ub]="when calling count in HashList, line 22"
set Ub=Ub+1
if cb[d7]==0 then
if d7==0 then
call i7("Nullpointer exception when calling HashList.count","when calling error in HashList, line 15")
else
call i7("Called HashList.count on invalid object.","when calling error in HashList, line 15")
endif
endif
set Y7=LoadInteger(po,d7,f7)
set Ub=Ub-1
call SaveInteger(T7,d7,f7,Y7-1)
set Ub=Ub-1
set T7=null
endfunction
function v7 takes integer g7,integer h7,string F7 returns nothing
local integer k7
local integer j7
local integer x7
set Ib[Ub]=F7
set Ub=Ub+1
set x7=LoadInteger(yo,g7,h7)
set Ib[Ub]="when calling decrOccurences in HashList, line 54"
set Ub=Ub+1
if cb[g7]==0 then
if g7==0 then
call i7("Nullpointer exception when calling HashList.decrOccurences","when calling error in HashList, line 21")
else
call i7("Called HashList.decrOccurences on invalid object.","when calling error in HashList, line 21")
endif
endif
call G7(g7,x7,"when calling decrOccurences in HashList, line 21")
set Ub=Ub-1
set k7=h7
set j7=eo[g7]
loop
exitwhen k7>j7
call SaveInteger(yo,g7,k7,LoadInteger(yo,g7,k7+1))
set k7=k7+1
endloop
set eo[g7]=eo[g7]-1
set Ub=Ub-1
endfunction
function U7 takes integer m7,integer Q7,string W7 returns nothing
local integer E7
local integer Z7
set Ib[Ub]=W7
set Ub=Ub+1
set E7=0
set Z7=eo[m7]-1
loop
exitwhen E7>Z7
if Q7==LoadInteger(yo,m7,E7) then
set W7="when calling removeAt in HashList, line 63"
set Ib[Ub]="when calling removeAt in HashList, line 63"
set Ub=Ub+1
if cb[m7]==0 then
if m7==0 then
call i7("Nullpointer exception when calling HashList.removeAt","when calling error in HashList, line 53")
else
call i7("Called HashList.removeAt on invalid object.","when calling error in HashList, line 53")
endif
endif
call v7(m7,E7,"when calling removeAt in HashList, line 53")
set Ub=Ub-1
exitwhen true
endif
set E7=E7+1
endloop
set Ub=Ub-1
endfunction
function u8 takes integer V7,integer B7,string N7 returns nothing
local boolean M7
local integer w8
set Ib[Ub]=N7
set Ub=Ub+1
set Ib[Ub]="when calling remove in HashMap, line 54"
set Ub=Ub+1
set Ib[Ub]="when calling removeInt in HashMap, line 24"
set Ub=Ub+1
if bb[V7]==0 then
if V7==0 then
call i7("Nullpointer exception when calling Table.removeInt","when calling error in Table, line 24")
else
call i7("Called Table.removeInt on invalid object.","when calling error in Table, line 24")
endif
endif
call RemoveSavedInteger(ll,V7,B7)
set Ub=Ub-1-1
set Ib[Ub]="when calling hasKey in HashMap, line 55"
set Ub=Ub+1
if bb[V7]==0 then
if V7==0 then
call i7("Nullpointer exception when calling IterableMap.hasKey","when calling error in HashMap, line 75")
else
call i7("Called IterableMap.hasKey on invalid object.","when calling error in HashMap, line 75")
endif
endif
set Ib[Ub]="when calling hasKey in HashMap, line 75"
set Ub=Ub+1
set M7=Tyw(qo[V7],B7,"when calling has in HashMap, line 76")
set Ub=Ub-1-1
if M7 then
set w8=qo[V7]
set Ib[Ub]="when calling remove in HashMap, line 56"
set Ub=Ub+1
if cb[w8]==0 then
if w8==0 then
call i7("Nullpointer exception when calling HashList.remove","when calling error in HashList, line 60")
else
call i7("Called HashList.remove on invalid object.","when calling error in HashList, line 60")
endif
endif
call U7(w8,B7,"when calling remove in HashList, line 60")
set Ub=Ub-1
endif
set Ub=Ub-1
endfunction
function Dyw takes integer Iyw,integer Pyw,string Ayw returns nothing
set Ib[Ub]=Ayw
set Ub=Ub+1
if bb[Iyw]==0 then
if Iyw==0 then
call i7("Nullpointer exception when calling HashMap.remove","when calling error in HashMap, line 23")
else
call i7("Called HashMap.remove on invalid object.","when calling error in HashMap, line 23")
endif
endif
if bb[Iyw]<=725 then
set Ib[Ub]="when calling remove in HashMap, line 23"
set Ub=Ub+1
set Ib[Ub]="when calling removeInt in HashMap, line 24"
set Ub=Ub+1
if bb[Iyw]==0 then
if Iyw==0 then
call i7("Nullpointer exception when calling Table.removeInt","when calling error in Table, line 24")
else
call i7("Called Table.removeInt on invalid object.","when calling error in Table, line 24")
endif
endif
call RemoveSavedInteger(ll,Iyw,Pyw)
set Ub=Ub-1-1
else
call u8(Iyw,Pyw,"when calling remove in HashMap, line 23")
endif
set Ub=Ub-1
endfunction
function FOw takes integer ROw,string TOw returns unit
local integer YOw
local fogstate GOw
local integer gOw
local unit hOw
set Ib[Ub]=TOw
set Ub=Ub+1
set YOw=el
set GOw=ConvertFogState(ROw)
set Ib[Ub]="when calling saveFogState in TypeCasting, line 46"
set Ub=Ub+1
if bb[YOw]==0 then
if YOw==0 then
call i7("Nullpointer exception when calling Table.saveFogState","when calling error in Table, line 168")
else
call i7("Called Table.saveFogState on invalid object.","when calling error in Table, line 168")
endif
endif
call SaveFogStateHandle(ll,YOw,0,GOw)
set Ub=Ub-1
set gOw=el
set Ib[Ub]="when calling loadUnit in TypeCasting, line 47"
set Ub=Ub+1
if bb[gOw]==0 then
if gOw==0 then
call i7("Nullpointer exception when calling Table.loadUnit","when calling error in Table, line 75")
else
call i7("Called Table.loadUnit on invalid object.","when calling error in Table, line 75")
endif
endif
set hOw=LoadUnitHandle(ll,gOw,0)
set Ub=Ub-1-1
set Cf=hOw
set GOw=null
set hOw=null
return Cf
endfunction
function Oww takes string oww returns nothing
if (not Zo)and(not Uo) then
return
endif
call DisplayTimedTextToPlayer(gO[0],0.,0.,60.,oww)
endfunction
function Gww takes integer Oww_2,string lww returns nothing
local integer bww
local real yww
local real pww
local integer eww
local unit qww
local integer aww
local integer nww
local boolean dww
local integer fww
local integer Rww
local integer Tww
local integer Yww
set Ib[Ub]=lww
set Ub=Ub+1
set aww=Co
set nww=GetUnitTypeId(GetOrderedUnit())
set Ib[Ub]="when calling has in MassControl, line 33"
set Ub=Ub+1
if hb[aww]==0 then
if aww==0 then
call i7("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call i7("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set dww=O9(aww,nww)
set Ub=Ub-1
if dww then
if Fyw(Lo,GetHandleId(GetOrderedUnit()),"when calling has in MassControl, line 34") then
set fww=Uyw(Lo,GetHandleId(GetOrderedUnit()),"when calling get in MassControl, line 35")
set Ib[Ub]="when calling size in MassControl, line 35"
set Ub=Ub+1
if hb[fww]==0 then
if fww==0 then
call i7("Nullpointer exception when calling LinkedList.size","when calling error in LinkedList, line 135")
else
call i7("Called LinkedList.size on invalid object.","when calling error in LinkedList, line 135")
endif
endif
set Rww=xo[fww]
set Ub=Ub-1
call Oww(I2S(Rww))
set bww=Uyw(Lo,GetHandleId(GetOrderedUnit()),"when calling get in MassControl, line 36")
set Oww_2=GetIssuedOrderId()
set yww=GetOrderPointX()
set pww=GetOrderPointY()
set Ib[Ub]="when calling iterator in MassControl, line 39"
set Ub=Ub+1
set Tww=i9(bww,"when calling new_LLIterator in LinkedList, line 165")
set Ub=Ub-1
set eww=Tww
loop
exitwhen Go[ho[eww]]==go[eww]
set ho[eww]=Go[ho[eww]]
set qww=FOw(To[ho[eww]],"when calling unitFromIndex in MassControl, line 39")
set Ib[Ub]="when calling alloc_Closure in MassControl, line 40"
set Ub=Ub+1
if Xl==0 then
if Cl<32768 then
set Cl=Cl+1
set Yww=Cl
set Vl[Yww]=647
else
call i7("Out of memory: Could not create Closure.","when calling error in MassControl, line 40")
set Yww=0
endif
else
set Xl=Xl-1
set Yww=Ll[Xl]
set Vl[Yww]=647
endif
set Ub=Ub-1
set Mo[Yww]=qww
set wO[Yww]=Oww_2
set uO[Yww]=yww
set rO[Yww]=pww
set Ib[Ub]="when calling doAfter in MassControl, line 40"
set Ub=Ub+1
set Ib[Ub]="when calling start in ClosureTimers, line 15"
set Ub=Ub+1
if Vl[Yww]==0 then
if Yww==0 then
call i7("Nullpointer exception when calling CallbackSingle.start","when calling error in ClosureTimers, line 67")
else
call i7("Called CallbackSingle.start on invalid object.","when calling error in ClosureTimers, line 67")
endif
endif
call S1(Yww,0.01,"when calling start in ClosureTimers, line 67")
set Ub=Ub-1-1
call Oww(" issued = "+GetUnitName(qww))
endloop
set Ib[Ub]="when calling close in MassControl, line 39"
set Ub=Ub+1
if ko[eww]then
call Cyw(eww,"when calling LLIterator in LinkedList, line 450")
endif
set Ub=Ub-1
call Dyw(Lo,GetHandleId(GetOrderedUnit()),"when calling remove in MassControl, line 44")
endif
endif
set Ub=Ub-1
set qww=null
endfunction
function uV takes unit CC,string VC returns integer
local integer BC
local integer NC
local integer MC
local unit wV
set Ib[Ub]=VC
set Ub=Ub+1
set BC=0
set NC=QS-1
loop
exitwhen BC>NC
set MC=AS[BC]
set VC="when calling getCityUnit in City, line 422"
set Ib[Ub]="when calling getCityUnit in City, line 422"
set Ub=Ub+1
if Al[MC]==0 then
if MC==0 then
call i7("Nullpointer exception when calling City.getCityUnit","when calling error in City, line 174")
else
call i7("Called City.getCityUnit on invalid object.","when calling error in City, line 174")
endif
endif
set wV=LS[MC]
set Ub=Ub-1
if wV==CC then
set Ub=Ub-1
set wV=null
return BC
endif
set BC=BC+1
endloop
set Ub=Ub-1
set wV=null
return -1
endfunction
function Cww takes player Hww,string Jww returns string
local integer Kww
local integer Lww
local integer Xww
set Ib[Ub]=Jww
set Ub=Ub+1
set Lww=dO[GetPlayerId(Hww)]
set Ib[Ub]="when calling getForceId in Messages, line 21"
set Ub=Ub+1
if mb[Lww]==0 then
if Lww==0 then
call i7("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 94")
else
call i7("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 94")
endif
endif
set Xww=fO[Lww]
set Ub=Ub-1
set Kww=GetRandomInt(0,2)
if Xww==0 then
set Jww=BO[Kww]
elseif Xww==1 then
set Jww=NO[Kww]
elseif Xww==2 then
set Jww=MO[Kww]
elseif Xww==3 then
set Jww=wl[Kww]
else
set Jww="Note:"
endif
set Ub=Ub-1
return "|cff00ccff"+Jww+"|r"
endfunction
function vB takes integer FB,integer kB,string jB returns nothing
local player xB
set Ib[Ub]=jB
set Ub=Ub+1
if Po-cc[FB]>=WS then
set cc[FB]=Po
set tc[FB]=tc[FB]-IS[Sc[FB]]
set tc[FB]=tc[FB]+IS[kB]
set Sc[FB]=kB
else
set xB=gO[BS[FB]]
set Ib[Ub]="when calling noteToPlayer in City, line 254"
set Ub=Ub+1
call DisplayTimedTextToPlayer(xB,0.,0.,10.0,Cww(xB,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(xB,0.,0.,10.0,"Wait 1 turn to be able to change tax level.")
set Ub=Ub-1
endif
set Ub=Ub-1
set xB=null
endfunction
function How takes integer xow,string vow returns nothing
local integer mow
local integer Qow
local integer Wow
local boolean Eow
local unit Zow
local integer Uow
local integer Iow
local boolean Aow
local integer Dow
set Ib[Ub]=vow
set Ub=Ub+1
set Qow=OS
set Wow=GetSpellAbilityId()
set Ib[Ub]="when calling has in Taxation, line 7"
set Ub=Ub+1
if hb[Qow]==0 then
if Qow==0 then
call i7("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call i7("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set Eow=O9(Qow,Wow)
set Ub=Ub-1
if Eow then
set Zow=GetSpellTargetUnit()
set Ib[Ub]="when calling isCity in Taxation, line 8"
set Ub=Ub+1
set Uow=Fl
set Iow=GetUnitTypeId(Zow)
set Ib[Ub]="when calling has in City, line 416"
set Ub=Ub+1
if hb[Uow]==0 then
if Uow==0 then
call i7("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call i7("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set Aow=O9(Uow,Iow)
set Ub=Ub-1-1
if Aow then
if GetOwningPlayer(GetSpellTargetUnit())==GetOwningPlayer(GetSpellAbilityUnit()) then
set mow=0
set xow=GetSpellAbilityId()
if xow==1093677642 then
set mow=1
elseif xow==1093677641 then
set mow=0
elseif xow==1093677640 then
set mow=2
endif
set Dow=AS[uV(GetSpellTargetUnit(),"when calling getCityId in Taxation, line 18")]
set Ib[Ub]="when calling changeTaxLevel in Taxation, line 18"
set Ub=Ub+1
if Al[Dow]==0 then
if Dow==0 then
call i7("Nullpointer exception when calling City.changeTaxLevel","when calling error in City, line 245")
else
call i7("Called City.changeTaxLevel on invalid object.","when calling error in City, line 245")
endif
endif
call vB(Dow,mow,"when calling changeTaxLevel in City, line 245")
set Ub=Ub-1
endif
endif
endif
set Ub=Ub-1
set Zow=null
endfunction
function I8 takes integer W8 returns nothing
local unit E8=GetConstructingStructure()
local player Z8
local player U8
if GetUnitTypeId(E8)==1747990614 then
set Z8=GetOwningPlayer(E8)
set U8=GetOwningPlayer(E8)
set do[GetPlayerId(Z8)]=do[GetPlayerId(U8)]-1
endif
set E8=null
set Z8=null
set U8=null
endfunction
function L8 takes integer P8,string A8 returns nothing
local unit D8
local player H8
local player J8
local player K8
set Ib[Ub]=A8
set Ub=Ub+1
set D8=GetConstructingStructure()
if GetUnitTypeId(D8)==1747990614 then
if do[GetPlayerId(GetOwningPlayer(D8))]<3 then
set H8=GetOwningPlayer(D8)
set J8=GetOwningPlayer(D8)
set do[GetPlayerId(H8)]=do[GetPlayerId(J8)]+1
else
set K8=GetOwningPlayer(D8)
set Ib[Ub]="when calling attentionToPlayer in LimitMercenaryCamps, line 18"
set Ub=Ub+1
call DisplayTimedTextToPlayer(K8,0.,0.,10.0,cww(K8,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(K8,0.,0.,10.0,"You cannot build more than 3 mercenary camps.")
set Ub=Ub-1
set Ib[Ub]="when calling alloc_Closure in LimitMercenaryCamps, line 19"
set Ub=Ub+1
if Xl==0 then
if Cl<32768 then
set Cl=Cl+1
set P8=Cl
set Vl[P8]=646
else
call i7("Out of memory: Could not create Closure.","when calling error in LimitMercenaryCamps, line 19")
set P8=0
endif
else
set Xl=Xl-1
set P8=Ll[Xl]
set Vl[P8]=646
endif
set Ub=Ub-1
set fo[P8]=D8
set Ib[Ub]="when calling doAfter in LimitMercenaryCamps, line 19"
set Ub=Ub+1
set Ib[Ub]="when calling start in ClosureTimers, line 15"
set Ub=Ub+1
if Vl[P8]==0 then
if P8==0 then
call i7("Nullpointer exception when calling CallbackSingle.start","when calling error in ClosureTimers, line 67")
else
call i7("Called CallbackSingle.start on invalid object.","when calling error in ClosureTimers, line 67")
endif
endif
call S1(P8,0.01,"when calling start in ClosureTimers, line 67")
set Ub=Ub-1-1
endif
endif
set Ub=Ub-1
set D8=null
set H8=null
set J8=null
set K8=null
endfunction
function Qww takes real kww,real jww,real xww,real vww,real mww returns real
set xww=GetRandomReal(xww,vww)
return (kww+jww)/2.+Fww(xww)*Pow(2.718281828,-(Pow(xww,2.)/2.*mww))/SquareRoot(6.283185482*mww)*((jww-kww)/2.)
endfunction
function u1 takes integer N3,real M3,string w1 returns nothing
set Ib[Ub]=w1
set Ub=Ub+1
set Wc[N3]=SOw("when calling getTimer in ClosureTimers, line 89")
call Bow(Wc[N3],N3,"when calling setData in ClosureTimers, line 90")
call TimerStart(Wc[N3],M3,true,Ff)
set Ub=Ub-1
endfunction
function BN takes integer vN,unit mN,string QN,integer WN,integer EN,string ZN returns nothing
local real UN
local real IN
local unit PN
local player AN
local real DN
local integer HN
local integer JN
local boolean KN
local integer LN
local integer XN
local real CN
local real VN
set Ib[Ub]=ZN
set Ub=Ub+1
set Sc[vN]=0
set cc[vN]=0.
set oc[vN]=n9("when calling new_LinkedList in City, line 97")
set ic[vN]=1.0
set LS[vN]=mN
set PN=LS[vN]
set CN=GetUnitX(PN)
set VN=GetUnitY(PN)
set NS[vN]=CN
set MS[vN]=VN
set XS[vN]=QN
set VS[vN]=WN
set AN=GetOwningPlayer(LS[vN])
set BS[vN]=GetPlayerId(AN)
set XS[vN]=SubString(QN,0,24)
set CS[vN]=QS
set QS=QS+1
set rc[vN]=Qww(ES[0],ES[1],-5.0,5.0,0.15)
set DN=Qww(opw(ZS[EN],0,"when calling get in City, line 115")*1.,opw(ZS[EN],1,"when calling get in City, line 115")*1.,-5.0,5.0,0.15)
set wc[vN]=R2I(DN)
set tc[vN]=0.
set HN=hl
set JN=GetUnitTypeId(LS[vN])
set Ib[Ub]="when calling has in City, line 118"
set Ub=Ub+1
if hb[HN]==0 then
if HN==0 then
call i7("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call i7("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set KN=O9(HN,JN)
set Ub=Ub-1
if KN then
set wc[vN]=R2I(wc[vN]*0.1)+100
set rc[vN]=rc[vN]*2.
endif
set UN=2.5+GetRandomReal(2.5,5.0)
set Ib[Ub]="when calling alloc_Closure in City, line 124"
set Ub=Ub+1
if Nl==0 then
if Ml<32768 then
set Ml=Ml+1
set LN=Ml
set wb[LN]=631
else
call i7("Out of memory: Could not create Closure.","when calling error in City, line 124")
set LN=0
endif
else
set Nl=Nl-1
set LN=Bl[Nl]
set wb[LN]=631
endif
set Ub=Ub-1
set Oc[LN]=vN
set Ib[Ub]="when calling doPeriodically in City, line 124"
set Ub=Ub+1
set Ib[Ub]="when calling start in ClosureTimers, line 36"
set Ub=Ub+1
if wb[LN]==0 then
if LN==0 then
call i7("Nullpointer exception when calling CallbackPeriodic.start","when calling error in ClosureTimers, line 88")
else
call i7("Called CallbackPeriodic.start on invalid object.","when calling error in ClosureTimers, line 88")
endif
endif
call u1(LN,UN,"when calling start in ClosureTimers, line 88")
set Ub=Ub-1-1
set IN=60+GetRandomReal(60,120.0)
set Ib[Ub]="when calling alloc_Closure in City, line 140"
set Ub=Ub+1
if Nl==0 then
if Ml<32768 then
set Ml=Ml+1
set XN=Ml
set wb[XN]=632
else
call i7("Out of memory: Could not create Closure.","when calling error in City, line 140")
set XN=0
endif
else
set Nl=Nl-1
set XN=Bl[Nl]
set wb[XN]=632
endif
set Ub=Ub-1
set lc[XN]=vN
set Ib[Ub]="when calling doPeriodically in City, line 140"
set Ub=Ub+1
set Ib[Ub]="when calling start in ClosureTimers, line 36"
set Ub=Ub+1
if wb[XN]==0 then
if XN==0 then
call i7("Nullpointer exception when calling CallbackPeriodic.start","when calling error in ClosureTimers, line 88")
else
call i7("Called CallbackPeriodic.start on invalid object.","when calling error in ClosureTimers, line 88")
endif
endif
call u1(XN,IN,"when calling start in ClosureTimers, line 88")
set Ub=Ub-1-1-1
set PN=null
set AN=null
endfunction
function xN takes unit GN,string gN,integer hN,integer FN,string kN returns integer
local integer jN
set Ib[Ub]=kN
set Ub=Ub+1
set Ib[Ub]="when calling City in City, line 94"
set Ub=Ub+1
if Il==0 then
if Pl<32768 then
set Pl=Pl+1
set jN=Pl
set Al[jN]=653
else
call i7("Out of memory: Could not create City.","when calling error in City, line 62")
set jN=0
endif
else
set Il=Il-1
set jN=Ul[Il]
set Al[jN]=653
endif
set Ub=Ub-1
call BN(jN,GN,gN,hN,FN,"when calling construct_City in City, line 94")
set Ub=Ub-1
return jN
endfunction
function ML takes integer JL,string KL returns nothing
local unit LL
local integer XL
local integer CL
local boolean VL
local integer BL
local unit NL
set Ib[Ub]=KL
set Ub=Ub+1
set LL=GetConstructedStructure()
set Ib[Ub]="when calling isCity in CityBuilded, line 8"
set Ub=Ub+1
set Ib[Ub]="when calling isCity in UnitTools, line 5"
set Ub=Ub+1
set XL=Fl
set CL=GetUnitTypeId(LL)
set Ib[Ub]="when calling has in City, line 416"
set Ub=Ub+1
if hb[XL]==0 then
if XL==0 then
call i7("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call i7("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set VL=O9(XL,CL)
set Ub=Ub-1-1-1
if VL then
set NL=GetConstructedStructure()
set JL=dO[GetPlayerId(GetOwningPlayer(GetConstructedStructure()))]
set Ib[Ub]="when calling getForceId in CityBuilded, line 9"
set Ub=Ub+1
if mb[JL]==0 then
if JL==0 then
call i7("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 94")
else
call i7("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 94")
endif
endif
set BL=fO[JL]
set Ub=Ub-1
set AS[QS]=xN(NL,"Castle",BL,1,"when calling new_City in CityBuilded, line 9")
endif
set Ub=Ub-1
set LL=null
set NL=null
endfunction
function WSw takes integer gSw,string hSw returns nothing
local unit FSw
local integer kSw
local player jSw
local boolean xSw
local integer vSw
local real mSw
local real QSw
set Ib[Ub]=hSw
set Ub=Ub+1
set FSw=GetTriggerUnit()
set kSw=GetUnitTypeId(FSw)
set mSw=GetUnitX(FSw)
set QSw=GetUnitY(FSw)
set jSw=GetOwningPlayer(FSw)
set gSw=WO
set Ib[Ub]="when calling has in RangeChecks, line 13"
set Ub=Ub+1
if hb[gSw]==0 then
if gSw==0 then
call i7("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call i7("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set xSw=O9(gSw,kSw)
set Ub=Ub-1
if xSw then
set Ib[Ub]="when calling alloc_Closure in RangeChecks, line 15"
set Ub=Ub+1
if Hl==0 then
if Jl<32768 then
set Jl=Jl+1
set vSw=Jl
set Kl[vSw]=687
else
call i7("Out of memory: Could not create Closure.","when calling error in RangeChecks, line 15")
set vSw=0
endif
else
set Hl=Hl-1
set vSw=Dl[Hl]
set Kl[vSw]=687
endif
set Ub=Ub-1
set ZO[vSw]=false
set UO[vSw]=kSw
set IO[vSw]=jSw
set PO[vSw]=FSw
call V3(mSw,QSw,1500.0,vSw,"when calling forUnitsInRange in RangeChecks, line 15")
endif
set Ub=Ub-1
set FSw=null
set jSw=null
endfunction
function apw takes integer ppw,integer epw,string qpw returns nothing
set Ib[Ub]=qpw
set Ub=Ub+1
if mb[ppw]==0 then
if ppw==0 then
call i7("Nullpointer exception when calling PlayerStats.setSelectedCityId","when calling error in PlayerStats, line 88")
else
call i7("Called PlayerStats.setSelectedCityId on invalid object.","when calling error in PlayerStats, line 88")
endif
endif
set Ib[Ub]="when calling setSelectedCityId in PlayerStats, line 88"
set Ub=Ub+1
if epw>=0 and epw<QS then
set YO[ppw]=epw
set Ib[Ub]="when calling refreshMultiboardCity in PlayerStats, line 91"
set Ub=Ub+1
if mb[ppw]==0 then
if ppw==0 then
call i7("Nullpointer exception when calling PlayerStats.refreshMultiboardCity","when calling error in PlayerStats, line 43")
else
call i7("Called PlayerStats.refreshMultiboardCity on invalid object.","when calling error in PlayerStats, line 43")
endif
endif
call Iiw(ppw,"when calling refreshMultiboardCity in PlayerStats, line 43")
set Ub=Ub-1
endif
set Ub=Ub-1-1
endfunction
function YX takes integer nX,string dX returns nothing
local unit fX
local integer RX
local boolean TX
set Ib[Ub]=dX
set Ub=Ub+1
set fX=GetTriggerUnit()
set Ib[Ub]="when calling isCity in CityManage, line 10"
set Ub=Ub+1
set Ib[Ub]="when calling isCity in UnitTools, line 5"
set Ub=Ub+1
set nX=Fl
set RX=GetUnitTypeId(fX)
set Ib[Ub]="when calling has in City, line 416"
set Ub=Ub+1
if hb[nX]==0 then
if nX==0 then
call i7("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call i7("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set TX=O9(nX,RX)
set Ub=Ub-1-1-1
if TX then
call apw(dO[GetPlayerId(GetTriggerPlayer())],uV(GetTriggerUnit(),"when calling getCityId in CityManage, line 11"),"when calling setSelectedCityId in CityManage, line 11")
endif
set Ub=Ub-1
set fX=null
endfunction
function DOw takes integer EOw,string ZOw returns rect
local integer UOw
local fogstate IOw
local integer POw
local rect AOw
set Ib[Ub]=ZOw
set Ub=Ub+1
set UOw=el
set IOw=ConvertFogState(EOw)
set Ib[Ub]="when calling saveFogState in TypeCasting, line 130"
set Ub=Ub+1
if bb[UOw]==0 then
if UOw==0 then
call i7("Nullpointer exception when calling Table.saveFogState","when calling error in Table, line 168")
else
call i7("Called Table.saveFogState on invalid object.","when calling error in Table, line 168")
endif
endif
call SaveFogStateHandle(ll,UOw,0,IOw)
set Ub=Ub-1
set POw=el
set Ib[Ub]="when calling loadRect in TypeCasting, line 131"
set Ub=Ub+1
if bb[POw]==0 then
if POw==0 then
call i7("Nullpointer exception when calling Table.loadRect","when calling error in Table, line 147")
else
call i7("Called Table.loadRect on invalid object.","when calling error in Table, line 147")
endif
endif
set AOw=LoadRectHandle(ll,POw,0)
set Ub=Ub-1-1
set Bf=AOw
set IOw=null
set AOw=null
return Bf
endfunction
function bcw takes rect icw,real Scw,real ccw returns boolean
local boolean ocw
local boolean Ocw
local boolean lcw
if Scw>GetRectMinX(icw) then
set ocw=Scw<GetRectMaxX(icw)
else
set ocw=false
endif
if ocw then
set Ocw=ccw>GetRectMinY(icw)
else
set Ocw=false
endif
if Ocw then
set lcw=ccw<GetRectMaxY(icw)
else
set lcw=false
endif
return lcw
endfunction
function Ytw takes integer ptw,string etw returns nothing
local unit qtw
local real atw
local real ntw
local integer dtw
local integer ftw
local integer Rtw
local player Ttw
set Ib[Ub]=etw
set Ub=Ub+1
set qtw=GetTriggerUnit()
if GetUnitTypeId(qtw)==1747988569 then
set atw=GetUnitX(qtw)
set ntw=GetUnitY(qtw)
set ptw=jl
set Ib[Ub]="when calling iterator in NoShipsNearRivers, line 11"
set Ub=Ub+1
set ftw=i9(ptw,"when calling new_LLIterator in LinkedList, line 165")
set Ub=Ub-1
set dtw=ftw
loop
exitwhen Go[ho[dtw]]==go[dtw]
set ho[dtw]=Go[ho[dtw]]
if bcw(DOw(To[ho[dtw]],"when calling rectFromIndex in NoShipsNearRivers, line 11"),atw,ntw) then
set Ib[Ub]="when calling alloc_Closure in NoShipsNearRivers, line 14"
set Ub=Ub+1
if Xl==0 then
if Cl<32768 then
set Cl=Cl+1
set Rtw=Cl
set Vl[Rtw]=649
else
call i7("Out of memory: Could not create Closure.","when calling error in NoShipsNearRivers, line 14")
set Rtw=0
endif
else
set Xl=Xl-1
set Rtw=Ll[Xl]
set Vl[Rtw]=649
endif
set Ub=Ub-1
set pO[Rtw]=qtw
set etw="when calling doAfter in NoShipsNearRivers, line 14"
set Ib[Ub]="when calling doAfter in NoShipsNearRivers, line 14"
set Ub=Ub+1
set Ib[Ub]="when calling start in ClosureTimers, line 15"
set Ub=Ub+1
if Vl[Rtw]==0 then
if Rtw==0 then
call i7("Nullpointer exception when calling CallbackSingle.start","when calling error in ClosureTimers, line 67")
else
call i7("Called CallbackSingle.start on invalid object.","when calling error in ClosureTimers, line 67")
endif
endif
call S1(Rtw,0.01,"when calling start in ClosureTimers, line 67")
set Ub=Ub-1-1
set Ttw=GetOwningPlayer(qtw)
set Ib[Ub]="when calling attentionToPlayer in NoShipsNearRivers, line 16"
set Ub=Ub+1
call DisplayTimedTextToPlayer(Ttw,0.,0.,10.0,cww(Ttw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(Ttw,0.,0.,10.0,"You cannot build shipyards near rivers")
set Ub=Ub-1
endif
endloop
set Ib[Ub]="when calling close in NoShipsNearRivers, line 11"
set Ub=Ub+1
if ko[dtw]then
call Cyw(dtw,"when calling LLIterator in LinkedList, line 450")
endif
set Ub=Ub-1
endif
set Ub=Ub-1
set qtw=null
set Ttw=null
endfunction
function U3 takes player W3,integer E3,string Z3 returns nothing
set Ib[Ub]=Z3
set Ub=Ub+1
set xc[vc]=E3
set vc=vc+1
call GroupEnumUnitsOfPlayer(jc,W3,mc)
set Ib[Ub]="when calling popCallback in ClosureForGroups, line 57"
set Ub=Ub+1
call GroupClear(jc)
set vc=vc-1
call Bbw(xc[vc],"when calling ForGroupCallback in ClosureForGroups, line 21")
set Ub=Ub-1-1
endfunction
function Z1 takes playercolor G1 returns integer
local playercolor k1=G1
local integer j1=0
local integer x1=0
local integer v1=bj_MAX_PLAYER_SLOTS-1
local integer g1
local integer h1
local integer F1
local playercolor m1
local integer Q1
local integer W1
local integer E1
loop
exitwhen x1>v1
if vO[x1]==k1 then
set j1=x1
exitwhen true
endif
set x1=x1+1
endloop
if j1<=23 then
set m1=G1
set Q1=0
set W1=0
set E1=bj_MAX_PLAYER_SLOTS-1
loop
exitwhen W1>E1
if vO[W1]==m1 then
set Q1=W1
exitwhen true
endif
set W1=W1+1
endloop
set g1=Zc[Q1]
set h1=Uc[Q1]
set F1=Ic[Q1]
else
set g1=0
set h1=0
set F1=0
endif
set Pb=g1
set Ab=h1
set Db=F1
set k1=null
set m1=null
return Pb
endfunction
function Y1 takes player q1 returns string
local integer f1=Z1(GetPlayerColor(q1))
local integer R1=Ab
local integer T1=Db
local integer a1=f1/16
local integer n1=R1/16
local integer d1=T1/16
return "|cff"+Pc[a1]+Pc[f1-a1*16]+Pc[n1]+Pc[R1-n1*16]+Pc[d1]+Pc[T1-d1*16]+GetPlayerName(q1)+"|r"
endfunction
function Ztw takes integer vtw,string mtw returns nothing
local player Qtw
local force Wtw
local integer Etw
set Ib[Ub]=mtw
set Ub=Ub+1
set mtw=Y1(GetTriggerPlayer())+" has left the game!"
set Wtw=bj_FORCE_ALL_PLAYERS
if IsPlayerInForce(GetLocalPlayer(),Wtw) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,5.0,mtw)
endif
set Etw=dO[GetPlayerId(GetTriggerPlayer())]
set Ib[Ub]="when calling setInGame in OnPlayerLeave, line 8"
set Ub=Ub+1
if mb[Etw]==0 then
if Etw==0 then
call i7("Nullpointer exception when calling PlayerStats.setInGame","when calling error in PlayerStats, line 17")
else
call i7("Called PlayerStats.setInGame on invalid object.","when calling error in PlayerStats, line 17")
endif
endif
set TO[Etw]=false
set Ub=Ub-1
set Qtw=GetTriggerPlayer()
set Ib[Ub]="when calling alloc_Closure in OnPlayerLeave, line 9"
set Ub=Ub+1
if Hl==0 then
if Jl<32768 then
set Jl=Jl+1
set vtw=Jl
set Kl[vtw]=685
else
call i7("Out of memory: Could not create Closure.","when calling error in OnPlayerLeave, line 9")
set vtw=0
endif
else
set Hl=Hl-1
set vtw=Dl[Hl]
set Kl[vtw]=685
endif
set Ub=Ub-1
call U3(Qtw,vtw,"when calling forUnitsOfPlayer in OnPlayerLeave, line 9")
set Ub=Ub-1
set Qtw=null
set Wtw=null
endfunction
function a0w takes integer o0w returns nothing
local integer O0w
local integer l0w
local player b0w
local string y0w
local force p0w
local force e0w
local boolean q0w
if (not mo[GetPlayerId(GetTriggerPlayer())])and(not Eo) then
set o0w=0
set O0w=0
set l0w=23
loop
exitwhen O0w>l0w
set b0w=gO[O0w]
if GetPlayerSlotState(b0w)==PLAYER_SLOT_STATE_PLAYING then
set q0w=GetPlayerController(b0w)==MAP_CONTROL_USER
else
set q0w=false
endif
if q0w then
set o0w=o0w+1
endif
set O0w=O0w+1
endloop
set Qo=o0w
set mo[GetPlayerId(GetTriggerPlayer())]=true
set Wo=Wo+1
set y0w="|cffff0000"+I2S(Wo)+"|r out of |cffff0000"+I2S(R2I((Qo+1)*1./2))+"|r voted to skip the tutorial!"
set p0w=bj_FORCE_ALL_PLAYERS
if IsPlayerInForce(GetLocalPlayer(),p0w) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,5.0,y0w)
endif
if Wo>=R2I((Qo+1)*1./2) then
set Eo=true
set e0w=bj_FORCE_ALL_PLAYERS
if IsPlayerInForce(GetLocalPlayer(),e0w) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,5.0,"|cffff0000Tutorial will shut down soon...|r")
endif
endif
endif
set b0w=null
set p0w=null
set e0w=null
endfunction
function g8 takes integer d8,string f8 returns nothing
local unit R8
local player T8
local player Y8
local player G8
set Ib[Ub]=f8
set Ub=Ub+1
set R8=GetConstructingStructure()
if GetUnitTypeId(R8)==1747988808 then
if ao[GetPlayerId(GetOwningPlayer(R8))]<3 then
set T8=GetOwningPlayer(R8)
set Y8=GetOwningPlayer(R8)
set ao[GetPlayerId(T8)]=ao[GetPlayerId(Y8)]+1
else
set G8=GetOwningPlayer(R8)
set Ib[Ub]="when calling attentionToPlayer in LimitEncampments, line 18"
set Ub=Ub+1
call DisplayTimedTextToPlayer(G8,0.,0.,10.0,cww(G8,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(G8,0.,0.,10.0,"You cannot build more than 3 encampments.")
set Ub=Ub-1
set Ib[Ub]="when calling alloc_Closure in LimitEncampments, line 19"
set Ub=Ub+1
if Xl==0 then
if Cl<32768 then
set Cl=Cl+1
set d8=Cl
set Vl[d8]=645
else
call i7("Out of memory: Could not create Closure.","when calling error in LimitEncampments, line 19")
set d8=0
endif
else
set Xl=Xl-1
set d8=Ll[Xl]
set Vl[d8]=645
endif
set Ub=Ub-1
set no[d8]=R8
set Ib[Ub]="when calling doAfter in LimitEncampments, line 19"
set Ub=Ub+1
set Ib[Ub]="when calling start in ClosureTimers, line 15"
set Ub=Ub+1
if Vl[d8]==0 then
if d8==0 then
call i7("Nullpointer exception when calling CallbackSingle.start","when calling error in ClosureTimers, line 67")
else
call i7("Called CallbackSingle.start on invalid object.","when calling error in ClosureTimers, line 67")
endif
endif
call S1(d8,0.01,"when calling start in ClosureTimers, line 67")
set Ub=Ub-1-1
endif
endif
set Ub=Ub-1
set R8=null
set T8=null
set Y8=null
set G8=null
endfunction
function lbw takes integer sbw,string tbw returns nothing
local unit ibw
local integer Sbw
local player cbw
local integer obw
local boolean Obw
set Ib[Ub]=tbw
set Ub=Ub+1
set ibw=GetDyingUnit()
set Sbw=GetPlayerId(GetOwningPlayer(ibw))
set cbw=gO[Sbw]
if GetPlayerSlotState(cbw)==PLAYER_SLOT_STATE_PLAYING then
set Obw=GetPlayerController(cbw)==MAP_CONTROL_USER
else
set Obw=false
endif
if Obw and(not IsUnitType(ibw,UNIT_TYPE_STRUCTURE)) then
set obw=dO[Sbw]
set sbw=GetUnitLevel(ibw)
set Ib[Ub]="when calling changeUpkeep in Upkeep, line 19"
set Ub=Ub+1
if mb[obw]==0 then
if obw==0 then
call i7("Nullpointer exception when calling PlayerStats.changeUpkeep","when calling error in PlayerStats, line 23")
else
call i7("Called PlayerStats.changeUpkeep on invalid object.","when calling error in PlayerStats, line 23")
endif
endif
set GO[obw]=GO[obw]+sbw
set Ub=Ub-1
endif
set Ub=Ub-1
set ibw=null
set cbw=null
endfunction
function n8 takes integer p8 returns nothing
local unit e8=GetConstructingStructure()
local player q8
local player a8
if GetUnitTypeId(e8)==1747988808 then
set q8=GetOwningPlayer(e8)
set a8=GetOwningPlayer(e8)
set ao[GetPlayerId(q8)]=ao[GetPlayerId(a8)]-1
endif
set e8=null
set q8=null
set a8=null
endfunction
function dww takes string lww,force bww,string yww returns nothing
local integer pww
local integer eww
local player qww
local player aww
local force nww
set Ib[Ub]=yww
set Ub=Ub+1
set pww=0
set eww=23
loop
exitwhen pww>eww
set aww=gO[pww]
set nww=CreateForce()
call ForceAddPlayer(nww,aww)
if nww==bww then
set qww=gO[pww]
call DisplayTimedTextToPlayer(qww,0.,0.,10.0,cww(qww,"when calling getAttentionStringForPlayer in Messages, line 116"))
call DisplayTimedTextToPlayer(qww,0.,0.,10.0,lww)
endif
set pww=pww+1
endloop
set Ub=Ub-1
set qww=null
set aww=null
set nww=null
endfunction
function CV takes integer HV,integer JV,string KV returns nothing
local integer LV
local boolean XV
set Ib[Ub]=KV
set Ub=Ub+1
set LV=Fl
set Ib[Ub]="when calling has in City, line 181"
set Ub=Ub+1
if hb[LV]==0 then
if LV==0 then
call i7("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call i7("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set XV=O9(LV,JV)
set Ub=Ub-1
if not XV then
set Ub=Ub-1
return
endif
set LS[HV]=ReplaceUnitBJ(LS[HV],JV,bj_UNIT_STATE_METHOD_RELATIVE)
set Ub=Ub-1
endfunction
function DC takes integer PC,integer AC returns integer
if PC==1 then
if AC==0 then
return 1747989059
elseif AC==1 then
return 1747990351
elseif AC==2 then
return 1747989331
elseif AC==3 then
return 1747990353
else
return 1747989059
endif
elseif PC==2 then
if AC==0 then
return 1747989060
elseif AC==1 then
return 1747990352
elseif AC==2 then
return 1747990350
elseif AC==3 then
return 1747990354
else
return 1747989060
endif
elseif PC==3 then
if AC==0 then
return 1747988844
elseif AC==1 then
return 1747990356
elseif AC==2 then
return 1747989809
elseif AC==3 then
return 1747990355
else
return 1747988844
endif
elseif AC==0 then
return 1747989059
elseif AC==1 then
return 1747990351
elseif AC==2 then
return 1747989331
elseif AC==3 then
return 1747990353
else
return 1747989059
endif
endfunction
function IC takes integer UC returns integer
if UC==1747989059 then
return 1
elseif UC==1747989060 then
return 2
elseif UC==1747988844 then
return 3
elseif UC==1747990351 then
return 1
elseif UC==1747990352 then
return 2
elseif UC==1747990356 then
return 3
elseif UC==1747989331 then
return 1
elseif UC==1747990350 then
return 2
elseif UC==1747989809 then
return 3
elseif UC==1747990353 then
return 1
elseif UC==1747990354 then
return 2
elseif UC==1747990355 then
return 3
else
return 1
endif
endfunction
function JC takes integer HC returns integer
if HC==1747988529 then
return 1
elseif HC==1747988530 then
return 2
elseif HC==1747988531 then
return 3
elseif HC==1747990326 then
return 1
elseif HC==1747990327 then
return 2
elseif HC==1747990328 then
return 3
elseif HC==1747990084 then
return 1
elseif HC==1747990087 then
return 2
elseif HC==1747990085 then
return 3
elseif HC==1747989590 then
return 1
elseif HC==1747989591 then
return 2
elseif HC==1747989592 then
return 3
else
return 1
endif
endfunction
function XC takes integer KC,integer LC returns integer
if KC==1 then
if LC==0 then
return 1747988529
elseif LC==1 then
return 1747990326
elseif LC==2 then
return 1747990084
elseif LC==3 then
return 1747989590
else
return 1747988529
endif
elseif KC==2 then
if LC==0 then
return 1747988530
elseif LC==1 then
return 1747990327
elseif LC==2 then
return 1747990087
elseif LC==3 then
return 1747989591
else
return 1747988530
endif
elseif KC==3 then
if LC==0 then
return 1747988531
elseif LC==1 then
return 1747990328
elseif LC==2 then
return 1747990085
elseif LC==3 then
return 1747989592
else
return 1747988531
endif
elseif LC==0 then
return 1747988529
elseif LC==1 then
return 1747990326
elseif LC==2 then
return 1747990084
elseif LC==3 then
return 1747989590
else
return 1747988529
endif
endfunction
function DV takes integer WV,string EV returns nothing
local integer ZV
local integer UV
local integer IV
local integer PV
local integer AV
set Ib[Ub]=EV
set Ub=Ub+1
set ZV=0
set UV=23
loop
exitwhen ZV>UV
set IV=dO[ZV]
set EV="when calling getSelectedCityId in City, line 236"
set Ib[Ub]="when calling getSelectedCityId in City, line 236"
set Ub=Ub+1
if mb[IV]==0 then
if IV==0 then
call i7("Nullpointer exception when calling PlayerStats.getSelectedCityId","when calling error in PlayerStats, line 84")
else
call i7("Called PlayerStats.getSelectedCityId on invalid object.","when calling error in PlayerStats, line 84")
endif
endif
set PV=YO[IV]
set Ub=Ub-1
if PV==CS[WV]then
set AV=dO[ZV]
set Ib[Ub]="when calling refreshMultiboardCity in City, line 237"
set Ub=Ub+1
if mb[AV]==0 then
if AV==0 then
call i7("Nullpointer exception when calling PlayerStats.refreshMultiboardCity","when calling error in PlayerStats, line 43")
else
call i7("Called PlayerStats.refreshMultiboardCity on invalid object.","when calling error in PlayerStats, line 43")
endif
endif
call Iiw(AV,"when calling refreshMultiboardCity in PlayerStats, line 43")
set Ub=Ub-1
endif
set ZV=ZV+1
endloop
set Ub=Ub-1
endfunction
function uB takes integer VV,integer BV,string NV returns nothing
local integer MV
local integer wB
set Ib[Ub]=NV
set Ub=Ub+1
call SetUnitOwner(LS[VV],gO[BV],true)
set BS[VV]=BV
if BV>=0 and BV<24 then
set MV=dO[BV]
set Ib[Ub]="when calling getForceId in City, line 190"
set Ub=Ub+1
if mb[MV]==0 then
if MV==0 then
call i7("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 94")
else
call i7("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 94")
endif
endif
set wB=fO[MV]
set Ub=Ub-1
set VS[VV]=wB
endif
set Ib[Ub]="when calling refreshMultiboardIfPossible in City, line 192"
set Ub=Ub+1
if Al[VV]==0 then
if VV==0 then
call i7("Nullpointer exception when calling City.refreshMultiboardIfPossible","when calling error in City, line 234")
else
call i7("Called City.refreshMultiboardIfPossible on invalid object.","when calling error in City, line 234")
endif
endif
call DV(VV,"when calling refreshMultiboardIfPossible in City, line 234")
set Ub=Ub-1-1
endfunction
function hB takes integer cB,player oB,string OB returns nothing
local integer lB
local integer bB
local unit yB
local unit pB
local real eB
local integer qB
local integer aB
local integer nB
local integer dB
local boolean fB
local integer RB
local integer TB
local integer YB
local boolean GB
local integer gB
set Ib[Ub]=OB
set Ub=Ub+1
set yB=LS[cB]
call SetUnitState(yB,UNIT_STATE_LIFE,GetUnitState(yB,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,60.0)*0.01)
set pB=LS[cB]
call SetUnitState(pB,UNIT_STATE_MANA,GetUnitState(pB,UNIT_STATE_MAX_MANA)*RMaxBJ(0.,30.0)*0.01)
set Ib[Ub]="when calling addModifier in City, line 213"
set Ub=Ub+1
if Al[cB]==0 then
if cB==0 then
call i7("Nullpointer exception when calling City.addModifier","when calling error in City, line 348")
else
call i7("Called City.addModifier on invalid object.","when calling error in City, line 348")
endif
endif
call QV(cB,0,"when calling addModifier in City, line 348")
set Ub=Ub-1
set eB=FS[Uyw(YS,6,"when calling get in City, line 214")]
if GetRandomReal(0.0,1.0)<=eB then
set Ib[Ub]="when calling addModifier in City, line 215"
set Ub=Ub+1
if Al[cB]==0 then
if cB==0 then
call i7("Nullpointer exception when calling City.addModifier","when calling error in City, line 348")
else
call i7("Called City.addModifier on invalid object.","when calling error in City, line 348")
endif
endif
call QV(cB,6,"when calling addModifier in City, line 348")
set Ub=Ub-1
endif
set lB=VS[cB]
set bB=GetPlayerId(oB)
if bB>=0 and bB<24 then
set qB=dO[bB]
set Ib[Ub]="when calling getForceId in City, line 220"
set Ub=Ub+1
if mb[qB]==0 then
if qB==0 then
call i7("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 94")
else
call i7("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 94")
endif
endif
set aB=fO[qB]
set Ub=Ub-1
set lB=aB
else
set Ib[Ub]="when calling changeOwner in City, line 222"
set Ub=Ub+1
if Al[cB]==0 then
if cB==0 then
call i7("Nullpointer exception when calling City.changeOwner","when calling error in City, line 185")
else
call i7("Called City.changeOwner on invalid object.","when calling error in City, line 185")
endif
endif
call uB(cB,bB,"when calling changeOwner in City, line 185")
set Ub=Ub-1
endif
set nB=hl
set dB=GetUnitTypeId(LS[cB])
set Ib[Ub]="when calling has in City, line 224"
set Ub=Ub+1
if hb[nB]==0 then
if nB==0 then
call i7("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call i7("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set fB=O9(nB,dB)
set Ub=Ub-1
if fB then
set RB=DC(IC(GetUnitTypeId(LS[cB])),lB)
set Ib[Ub]="when calling replaceCity in City, line 225"
set Ub=Ub+1
if Al[cB]==0 then
if cB==0 then
call i7("Nullpointer exception when calling City.replaceCity","when calling error in City, line 180")
else
call i7("Called City.replaceCity on invalid object.","when calling error in City, line 180")
endif
endif
call CV(cB,RB,"when calling replaceCity in City, line 180")
set Ub=Ub-1
call UnitAddAbility(LS[cB],1093677896)
endif
set TB=gl
set YB=GetUnitTypeId(LS[cB])
set Ib[Ub]="when calling has in City, line 228"
set Ub=Ub+1
if hb[TB]==0 then
if TB==0 then
call i7("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call i7("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set GB=O9(TB,YB)
set Ub=Ub-1
if GB then
set gB=XC(JC(GetUnitTypeId(LS[cB])),lB)
set Ib[Ub]="when calling replaceCity in City, line 229"
set Ub=Ub+1
if Al[cB]==0 then
if cB==0 then
call i7("Nullpointer exception when calling City.replaceCity","when calling error in City, line 180")
else
call i7("Called City.replaceCity on invalid object.","when calling error in City, line 180")
endif
endif
call CV(cB,gB,"when calling replaceCity in City, line 180")
set Ub=Ub-1
call UnitAddAbility(LS[cB],1093677634)
endif
set Ib[Ub]="when calling changeOwner in City, line 232"
set Ub=Ub+1
if Al[cB]==0 then
if cB==0 then
call i7("Nullpointer exception when calling City.changeOwner","when calling error in City, line 185")
else
call i7("Called City.changeOwner on invalid object.","when calling error in City, line 185")
endif
endif
call uB(cB,bB,"when calling changeOwner in City, line 185")
set Ub=Ub-1-1
set yB=null
set pB=null
endfunction
function oC takes integer JX,string KX returns nothing
local unit LX
local integer XX
local integer CX
local boolean VX
local unit BX
local integer NX
local integer MX
local player wC
local integer uC
local boolean rC
local boolean sC
local real tC
local real iC
local real SC
local real cC
set Ib[Ub]=KX
set Ub=Ub+1
set LX=GetTriggerUnit()
set Ib[Ub]="when calling isCity in CityManage, line 36"
set Ub=Ub+1
set Ib[Ub]="when calling isCity in UnitTools, line 5"
set Ub=Ub+1
set XX=Fl
set CX=GetUnitTypeId(LX)
set Ib[Ub]="when calling has in City, line 416"
set Ub=Ub+1
if hb[XX]==0 then
if XX==0 then
call i7("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call i7("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set VX=O9(XX,CX)
set Ub=Ub-1-1-1
if VX then
if GetUnitStatePercent(LX,UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)<=50.0 then
set sC=GetOwningPlayer(LX)!=GetOwningPlayer(GetAttacker())
else
set sC=false
endif
if sC then
set tC=GetUnitX(LX)
set iC=GetUnitY(LX)
set BX=GetAttacker()
set SC=tC-GetUnitX(BX)
set cC=iC-GetUnitY(BX)
if SquareRoot(SC*SC+cC*cC)>300.0 then
call SetUnitState(LX,UNIT_STATE_LIFE,GetUnitState(LX,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,50.0)*0.01)
else
set Ib[Ub]="when calling getCityId in CityManage, line 41"
set Ub=Ub+1
set NX=uV(LX,"when calling getCityId in UnitTools, line 9")
set Ub=Ub-1
set MX=AS[NX]
set wC=GetOwningPlayer(GetAttacker())
set Ib[Ub]="when calling capture in CityManage, line 42"
set Ub=Ub+1
if Al[MX]==0 then
if MX==0 then
call i7("Nullpointer exception when calling City.capture","when calling error in City, line 209")
else
call i7("Called City.capture on invalid object.","when calling error in City, line 209")
endif
endif
call hB(MX,wC,"when calling capture in City, line 209")
set Ub=Ub-1
set JX=GetUnitTypeId(LX)
set uC=gl
set Ib[Ub]="when calling has in CityManage, line 44"
set Ub=Ub+1
if hb[uC]==0 then
if uC==0 then
call i7("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call i7("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set rC=O9(uC,JX)
set Ub=Ub-1
if rC then
call dww(Y1(GetOwningPlayer(GetAttacker()))+" has just captured "+Y1(GetOwningPlayer(GetTriggerUnit()))+" Capitol!",bj_FORCE_ALL_PLAYERS,"when calling attentionToForce in CityManage, line 45")
endif
endif
elseif GetUnitStatePercent(LX,UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)<=50.0 then
call SetUnitState(LX,UNIT_STATE_LIFE,GetUnitState(LX,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,50.0)*0.01)
endif
endif
set Ub=Ub-1
set LX=null
set BX=null
set wC=null
endfunction
function www takes integer K0w,string L0w returns nothing
local integer X0w
local unit C0w
local player V0w
local real B0w
local real N0w
local real M0w
set Ib[Ub]=L0w
set Ub=Ub+1
if GetSpellAbilityId()==1093678154 then
set X0w=n9("when calling new_LinkedList in MassControl, line 24")
set C0w=GetSpellAbilityUnit()
set V0w=GetOwningPlayer(C0w)
set N0w=GetSpellTargetX()
set M0w=GetSpellTargetY()
set B0w=opw(Xo,GetLearnedSkillLevel(),"when calling get in MassControl, line 27")/1000.
set Ib[Ub]="when calling alloc_Closure in MassControl, line 27"
set Ub=Ub+1
if Hl==0 then
if Jl<32768 then
set Jl=Jl+1
set K0w=Jl
set Kl[K0w]=684
else
call i7("Out of memory: Could not create Closure.","when calling error in MassControl, line 27")
set K0w=0
endif
else
set Hl=Hl-1
set K0w=Dl[Hl]
set Kl[K0w]=684
endif
set Ub=Ub-1
set Vo[K0w]=V0w
set Bo[K0w]=C0w
set No[K0w]=X0w
call V3(N0w,M0w,B0w,K0w,"when calling forUnitsInRange in MassControl, line 27")
call myw(Lo,GetHandleId(C0w),X0w,"when calling put in MassControl, line 30")
endif
set Ub=Ub-1
set C0w=null
set V0w=null
endfunction
function Pbw takes integer Ubw,string Ibw returns nothing
set Ib[Ub]=Ibw
set Ub=Ub+1
if Ql[Ubw]==0 then
if Ubw==0 then
call i7("Nullpointer exception when calling EventListener.onEvent","when calling error in ClosureEvents, line 108")
else
call i7("Called EventListener.onEvent on invalid object.","when calling error in ClosureEvents, line 108")
endif
endif
if Ql[Ubw]<=669 then
if Ql[Ubw]<=665 then
if Ql[Ubw]<=663 then
if Ql[Ubw]<=662 then
call ML(Ubw,"when calling CityBuilded_closure_impl in ClosureEvents, line 108")
else
call YX(Ubw,"when calling CityManage_closure_impl in ClosureEvents, line 108")
endif
elseif Ql[Ubw]<=664 then
call oC(Ubw,"when calling CityManage_closure_impl in ClosureEvents, line 108")
else
call n8(Ubw)
endif
elseif Ql[Ubw]<=667 then
if Ql[Ubw]<=666 then
call g8(Ubw,"when calling LimitEncampments_closure_impl in ClosureEvents, line 108")
else
call I8(Ubw)
endif
elseif Ql[Ubw]<=668 then
call L8(Ubw,"when calling LimitMercenaryCamps_closure_impl in ClosureEvents, line 108")
else
call a0w(Ubw)
endif
elseif Ql[Ubw]<=673 then
if Ql[Ubw]<=671 then
if Ql[Ubw]<=670 then
call www(Ubw,"when calling MassControl_closure_impl in ClosureEvents, line 108")
else
call Gww(Ubw,"when calling MassControl_closure_impl in ClosureEvents, line 108")
endif
elseif Ql[Ubw]<=672 then
call Ytw(Ubw,"when calling NoShipsNearRivers_closure_impl in ClosureEvents, line 108")
else
call Ztw(Ubw,"when calling OnPlayerLeave_closure_impl in ClosureEvents, line 108")
endif
elseif Ql[Ubw]<=675 then
if Ql[Ubw]<=674 then
call WSw(Ubw,"when calling RangeChecks_closure_impl in ClosureEvents, line 108")
else
call How(Ubw,"when calling Taxation_closure_impl in ClosureEvents, line 108")
endif
else
call lbw(Ubw,"when calling Upkeep_closure_impl in ClosureEvents, line 108")
endif
set Ub=Ub-1
endfunction
function y3 takes string t3 returns nothing
local unit i3
local integer S3
local integer c3
local integer o3
local eventid O3
local integer l3
local boolean b3
set Ib[Ub]=t3
set Ub=Ub+1
set i3=GetTriggerUnit()
set O3=GetTriggerEventId()
set Ib[Ub]="when calling toIntId in ClosureEvents, line 169"
set Ub=Ub+1
set l3=qc[GetHandleId(O3)]
if l3==0 then
set l3=IM(O3,"when calling registerEventId in ClosureEvents, line 228")
endif
set Ub=Ub-1
set S3=l3
if i3!=null then
set b3=GetUnitUserData(i3)>0
else
set b3=false
endif
if b3 then
if Rc[GetUnitUserData(i3)]!=0 then
set c3=Rc[GetUnitUserData(i3)]
loop
exitwhen c3==0
if Tc[c3]==S3 then
call Pbw(c3,"when calling onEvent in ClosureEvents, line 176")
endif
set c3=Yc[c3]
endloop
endif
endif
if fc[S3]!=0 then
set o3=fc[S3]
loop
exitwhen o3==0
call Pbw(o3,"when calling onEvent in ClosureEvents, line 182")
set o3=Yc[o3]
endloop
endif
set Ub=Ub-1
set i3=null
set O3=null
endfunction
function Raw takes nothing returns nothing
set Ub=0
set Ib[Ub]="ClosureEvents, line 286"
set Ub=Ub+1
call y3("when calling generalEventCallback in ClosureEvents, line 286")
set Ub=Ub-1
endfunction
function Rk takes nothing returns nothing
local player Ok=GetOwningPlayer(GetKillingUnit())
local playerstate lk=PLAYER_STATE_RESOURCE_GOLD
local playerstate bk
local playerstate yk
local player pk
local force ek
local location qk
local real ak
local real nk
local player dk
local force fk
if lk==PLAYER_STATE_RESOURCE_GOLD then
set bk=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(Ok,bk,GetPlayerState(Ok,bk)+125)
elseif lk==PLAYER_STATE_RESOURCE_LUMBER then
set yk=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(Ok,yk,GetPlayerState(Ok,yk)+125)
endif
call SetPlayerState(Ok,lk,GetPlayerState(Ok,lk)+125)
set pk=GetOwningPlayer(GetKillingUnit())
set ek=CreateForce()
call ForceAddPlayer(ek,pk)
if IsPlayerInForce(GetLocalPlayer(),ek) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_091")
endif
set e=GetUnitLoc(GetDyingUnit())
set dk=GetOwningPlayer(GetDyingUnit())
set fk=CreateForce()
call ForceAddPlayer(fk,dk)
set qk=e
set ak=GetLocationX(qk)
set nk=GetLocationY(qk)
if IsPlayerInForce(GetLocalPlayer(),fk) then
call PingMinimap(ak,nk,2.00)
endif
call RemoveLocation(e)
set Ok=null
set lk=null
set bk=null
set yk=null
set pk=null
set ek=null
set qk=null
set dk=null
set fk=null
endfunction
function Rx takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988561,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988784,0)
endfunction
function S7 takes nothing returns boolean
set wo=CreateForce()
set uo=CreateForce()
set ro=CreateForce()
set so=CreateForce()
set io[0]=wo
set io[1]=uo
set io[2]=ro
set io[3]=so
set So[0]=62
set co[0]=194
set oo[0]=255
set So[1]=255
set co[1]=238
set oo[1]=0
set So[2]=0
set co[2]=201
set oo[2]=10
set So[3]=219
set co[3]=0
set oo[3]=201
return true
endfunction
function SE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651832,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651830,0)
endfunction
function SI takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990594,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990584,0)
endfunction
function iK takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990086 then
return false
endif
return true
endfunction
function SK takes nothing returns boolean
if not iK() then
return false
endif
return true
endfunction
function SL takes nothing returns nothing
local player uL=GetOwningPlayer(GetAttacker())
local player rL=GetOwningPlayer(GetAttacker())
local player sL
local player tL
local unit iL
set r[GetPlayerId(uL)+1]=r[GetPlayerId(rL)+1]+1
set sL=GetOwningPlayer(GetTriggerUnit())
set tL=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(sL)+1]=r[GetPlayerId(tL)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set iL=GetTriggerUnit()
call SetUnitState(iL,UNIT_STATE_LIFE,GetUnitState(iL,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set uL=null
set rL=null
set sL=null
set tL=null
set iL=null
endfunction
function iQ takes nothing returns boolean
if GetResearched()!=1378889783 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889783,true)!=2 then
return false
endif
return true
endfunction
function SQ takes nothing returns boolean
if not iQ() then
return false
endif
return true
endfunction
function iZ takes nothing returns boolean
if GetResearched()!=1378890034 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890034,true)!=2 then
return false
endif
return true
endfunction
function SZ takes nothing returns boolean
if not iZ() then
return false
endif
return true
endfunction
function F4 takes string g4 returns boolean
local integer h4
set Ib[Ub]=g4
set Ub=Ub+1
set Ib[Ub]="when calling alloc_Closure in DateTime, line 32"
set Ub=Ub+1
if Nl==0 then
if Ml<32768 then
set Ml=Ml+1
set h4=Ml
set wb[h4]=634
else
call i7("Out of memory: Could not create Closure.","when calling error in DateTime, line 32")
set h4=0
endif
else
set Nl=Nl-1
set h4=Bl[Nl]
set wb[h4]=634
endif
set Ub=Ub-1
set Dc[h4]=120.0
set Ib[Ub]="when calling doPeriodically in DateTime, line 32"
set Ub=Ub+1
set Ib[Ub]="when calling start in ClosureTimers, line 36"
set Ub=Ub+1
if wb[h4]==0 then
if h4==0 then
call i7("Nullpointer exception when calling CallbackPeriodic.start","when calling error in ClosureTimers, line 88")
else
call i7("Called CallbackPeriodic.start on invalid object.","when calling error in ClosureTimers, line 88")
endif
endif
call u1(h4,1.0,"when calling start in ClosureTimers, line 88")
set Ub=Ub-1-1-1
return true
endfunction
function Saw takes nothing returns boolean
set Ub=0
return F4("DateTime, line 1")
endfunction
function Sx takes nothing returns nothing
local player Cj=GetOwningPlayer(GetKillingUnit())
local playerstate Vj=PLAYER_STATE_RESOURCE_LUMBER
local playerstate Bj
local playerstate Nj
local player Mj
local force wx
local location ux
local real rx
local real sx
local player tx
local force ix
if Vj==PLAYER_STATE_RESOURCE_GOLD then
set Bj=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(Cj,Bj,GetPlayerState(Cj,Bj)+500)
elseif Vj==PLAYER_STATE_RESOURCE_LUMBER then
set Nj=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(Cj,Nj,GetPlayerState(Cj,Nj)+500)
endif
call SetPlayerState(Cj,Vj,GetPlayerState(Cj,Vj)+500)
set Mj=GetOwningPlayer(GetKillingUnit())
set wx=CreateForce()
call ForceAddPlayer(wx,Mj)
if IsPlayerInForce(GetLocalPlayer(),wx) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_084")
endif
set e=GetUnitLoc(GetDyingUnit())
set tx=GetOwningPlayer(GetDyingUnit())
set ix=CreateForce()
call ForceAddPlayer(ix,tx)
set ux=e
set rx=GetLocationX(ux)
set sx=GetLocationY(ux)
if IsPlayerInForce(GetLocalPlayer(),ix) then
call PingMinimap(rx,sx,2.00)
endif
call RemoveLocation(e)
set Cj=null
set Vj=null
set Bj=null
set Nj=null
set Mj=null
set wx=null
set ux=null
set tx=null
set ix=null
endfunction
function TK takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function RU takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function TU takes nothing returns boolean
if not RU() then
return false
endif
return true
endfunction
function RW takes nothing returns boolean
if GetResearched()!=1378889809 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889809,true)!=1 then
return false
endif
return true
endfunction
function TW takes nothing returns boolean
if not RW() then
return false
endif
return true
endfunction
function TZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989826,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989828,0)
endfunction
function Taw takes nothing returns nothing
set Ub=0
set Ib[Ub]="ClosureEvents, line 287"
set Ub=Ub+1
call y3("when calling generalEventCallback in ClosureEvents, line 287")
set Ub=Ub-1
endfunction
function ZE takes nothing returns boolean
if GetResearched()!=1378890037 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890037,true)!=1 then
return false
endif
return true
endfunction
function UE takes nothing returns boolean
if not ZE() then
return false
endif
return true
endfunction
function ZJ takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990327 then
return false
endif
return true
endfunction
function UJ takes nothing returns boolean
if not ZJ() then
return false
endif
return true
endfunction
function UU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990322,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990105,0)
endfunction
function UW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989560,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989579,0)
endfunction
function Zm takes nothing returns boolean
if GetResearched()!=1378889800 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889800,true)!=2 then
return false
endif
return true
endfunction
function Um takes nothing returns boolean
if not Zm() then
return false
endif
return true
endfunction
function V2 takes nothing returns boolean
return true
endfunction
function CD takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990354 then
return false
endif
return true
endfunction
function VD takes nothing returns boolean
if not CD() then
return false
endif
return true
endfunction
function CI takes nothing returns boolean
if GetResearched()!=1378890040 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890040,true)!=2 then
return false
endif
return true
endfunction
function VI takes nothing returns boolean
if not CI() then
return false
endif
return true
endfunction
function VP takes nothing returns nothing
call UnitRemoveAbility(GetTriggerUnit(),1093677402)
endfunction
function oSw takes string rSw returns boolean
local string sSw
local integer tSw
local integer iSw
local integer SSw
local integer cSw
set Ib[Ub]=rSw
set Ub=Ub+1
set mO=CreateGroup()
set QO=CreateUnit(lS,2019849581,0.,0.,0)
if QO==null then
set sSw=""
set tSw=2019849581
set iSw=0
loop
exitwhen iSw>3
set SSw=ModuloInteger(tSw,256)
set tSw=tSw/256
set rSw=".................................!.#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[.]^_`abcdefghijklmnopqrstuvwxyz{|}~................................................................................................................................."
set sSw=SubString(".................................!.#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[.]^_`abcdefghijklmnopqrstuvwxyz{|}~.................................................................................................................................",SSw,SSw+1)+sSw
set iSw=iSw+1
endloop
call i7("DUMMY_UNITID ("+sSw+") not added correctly to the map.","when calling error in Preloader, line 52")
endif
set Ib[Ub]="when calling alloc_Closure in Preloader, line 54"
set Ub=Ub+1
if Xl==0 then
if Cl<32768 then
set Cl=Cl+1
set cSw=Cl
set Vl[cSw]=651
else
call i7("Out of memory: Could not create Closure.","when calling error in Preloader, line 54")
set cSw=0
endif
else
set Xl=Xl-1
set cSw=Ll[Xl]
set Vl[cSw]=651
endif
set Ub=Ub-1
set Ib[Ub]="when calling nullTimer in Preloader, line 54"
set Ub=Ub+1
set Ib[Ub]="when calling doAfter in ClosureTimers, line 22"
set Ub=Ub+1
set Ib[Ub]="when calling start in ClosureTimers, line 15"
set Ub=Ub+1
if Vl[cSw]==0 then
if cSw==0 then
call i7("Nullpointer exception when calling CallbackSingle.start","when calling error in ClosureTimers, line 67")
else
call i7("Called CallbackSingle.start on invalid object.","when calling error in ClosureTimers, line 67")
endif
endif
call S1(cSw,0.,"when calling start in ClosureTimers, line 67")
set Ub=Ub-1-1-1-1
return true
endfunction
function Vqw takes nothing returns boolean
set Ub=0
return oSw("Preloader, line 1")
endfunction
function Cx takes nothing returns boolean
if GetResearched()!=1378889796 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889796,true)!=1 then
return false
endif
return true
endfunction
function Vx takes nothing returns boolean
if not Cx() then
return false
endif
return true
endfunction
function QD takes nothing returns boolean
if GetUnitTypeId(GetConstructedStructure())!=1747990353 then
return false
endif
return true
endfunction
function WD takes nothing returns boolean
if not QD() then
return false
endif
return true
endfunction
function QI takes nothing returns boolean
if GetResearched()!=1378890053 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890053,true)!=2 then
return false
endif
return true
endfunction
function WI takes nothing returns boolean
if not QI() then
return false
endif
return true
endfunction
function WK takes nothing returns nothing
local player jK=GetOwningPlayer(GetAttacker())
local player xK=GetOwningPlayer(GetAttacker())
local player vK
local player mK
local unit QK
set r[GetPlayerId(jK)+1]=r[GetPlayerId(xK)+1]+1
set vK=GetOwningPlayer(GetTriggerUnit())
set mK=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(vK)+1]=r[GetPlayerId(mK)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set QK=GetTriggerUnit()
call SetUnitState(QK,UNIT_STATE_LIFE,GetUnitState(QK,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set jK=null
set xK=null
set vK=null
set mK=null
set QK=null
endfunction
function WL takes nothing returns boolean
return true
endfunction
function Slw takes integer tlw,string ilw returns nothing
set Ib[Ub]=ilw
set Ub=Ub+1
set dl=fl[tlw]
call TriggerEvaluate(al)
call SetUnitUserData(fl[tlw],0)
set Ib[Ub]="when calling UnitIndex in UnitIndexer, line 172"
set Ub=Ub+1
if Zb[tlw]==0 then
call i7("Double free: object of type UnitIndex","when calling error in UnitIndexer, line 157")
else
set Qb[Wb]=tlw
set Wb=Wb+1
set Zb[tlw]=0
endif
set Ub=Ub-1-1
endfunction
function VOw takes unit LOw,string XOw returns boolean
local integer COw
set Ib[Ub]=XOw
set Ub=Ub+1
if GetUnitUserData(LOw)==0 then
set Ub=Ub-1
return false
else
set Ib[Ub]="when calling toUnitIndex in UnitIndexer, line 154"
set Ub=Ub+1
set COw=GetUnitUserData(LOw)
if COw==0 then
set COw=slw(LOw,"when calling new_UnitIndex in UnitIndexer, line 125")
endif
set Ub=Ub-1
set Ib[Ub]="when calling UnitIndex in UnitIndexer, line 154"
set Ub=Ub+1
if Zb[COw]==0 then
if COw==0 then
call i7("Nullpointer exception when calling UnitIndex.UnitIndex","when calling error in UnitIndexer, line 157")
else
call i7("Called UnitIndex.UnitIndex on invalid object.","when calling error in UnitIndexer, line 157")
endif
endif
call Slw(COw,"when calling destroyUnitIndex in UnitIndexer, line 157")
set Ub=Ub-1-1
return true
endif
endfunction
function Waw takes nothing returns nothing
set Ub=0
set Ib[Ub]="UnitIndexer, line 180"
set Ub=Ub+1
call VOw(aO[nO-1],"when calling deindex in UnitIndexer, line 180")
set Ub=Ub-1
endfunction
function Wqw takes nothing returns boolean
local integer Qqw
set Ub=0
set Ib[Ub]="Abilities, line 1"
set Ub=Ub+1
set Ib[Ub]="when calling asList in Abilities, line 16"
set Ub=Ub+1
set Qqw=n9("when calling new_LinkedList in LinkedList, line 391")
call Tpw(Qqw,1093677642,"when calling add in LinkedList, line 393")
call Tpw(Qqw,1093677641,"when calling add in LinkedList, line 393")
call Tpw(Qqw,1093677640,"when calling add in LinkedList, line 393")
set Ub=Ub-1
set OS=Qqw
set Ub=Ub-1
return true
endfunction
function Www takes nothing returns boolean
return true
endfunction
function Qx takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function Wx takes nothing returns boolean
if not Qx() then
return false
endif
return true
endfunction
function X6 takes nothing returns boolean
set Mc=InitHashtable()
return true
endfunction
function LH takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989809 then
return false
endif
return true
endfunction
function XH takes nothing returns boolean
if not LH() then
return false
endif
return true
endfunction
function XK takes nothing returns nothing
local player DK=GetOwningPlayer(GetAttacker())
local player HK=GetOwningPlayer(GetAttacker())
local player JK
local player KK
local unit LK
set r[GetPlayerId(DK)+1]=r[GetPlayerId(HK)+1]+1
set JK=GetOwningPlayer(GetTriggerUnit())
set KK=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(JK)+1]=r[GetPlayerId(KK)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set LK=GetTriggerUnit()
call SetUnitState(LK,UNIT_STATE_LIFE,GetUnitState(LK,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set DK=null
set HK=null
set JK=null
set KK=null
set LK=null
endfunction
function XP takes nothing returns nothing
set s=bj_FORCE_ALL_PLAYERS
call ForForce(s,aa)
endfunction
function XQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989570,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989571,0)
endfunction
function Xg takes nothing returns nothing
local group Jg
local code Kg
local boolean Lg
set w=GetUnitsOfTypeIdAll(1747988790)
set Jg=w
set Kg=By
set Lg=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(Jg,Kg)
if Lg then
call DestroyGroup(Jg)
endif
call DestroyGroup(w)
set Jg=null
endfunction
function Xj takes nothing returns boolean
if GetUnitTypeId(GetDyingUnit())!=1747989048 then
return false
endif
return true
endfunction
function ayw takes integer pyw,unit eyw,string qyw returns nothing
set Ib[Ub]=qyw
set Ub=Ub+1
if Sb[pyw]==0 then
if pyw==0 then
call i7("Nullpointer exception when calling ArrayQueue.enqueue","when calling error in DummyRecycler, line 54")
else
call i7("Called ArrayQueue.enqueue on invalid object.","when calling error in DummyRecycler, line 54")
endif
endif
set Ib[Ub]="when calling enqueue in DummyRecycler, line 54"
set Ub=Ub+1
if Kc[pyw]<6 then
set Kc[pyw]=Kc[pyw]+1
set Jc[pyw]=ModuloInteger(Jc[pyw]+1,6)
else
call i7("Queue Overflow","when calling error in DummyRecycler, line 60")
endif
set Ub=Ub-1-1
endfunction
function b5 takes string O5 returns integer
local integer l5
set Ib[Ub]=O5
set Ub=Ub+1
set Ib[Ub]="when calling ArrayQueue in DummyRecycler, line 48"
set Ub=Ub+1
if tb==0 then
if ib<32768 then
set ib=ib+1
set l5=ib
set Sb[l5]=626
else
call i7("Out of memory: Could not create ArrayQueue.","when calling error in DummyRecycler, line 48")
set l5=0
endif
else
set tb=tb-1
set l5=sb[tb]
set Sb[l5]=626
endif
set Ub=Ub-1
set Jc[l5]=0
set Kc[l5]=0
set Ub=Ub-1
return l5
endfunction
function o5 takes real s5,real t5,player i5,real S5 returns unit
local unit c5=CreateUnit(i5,2019849581,s5,t5,S5*57.295779513)
call SetUnitX(c5,s5)
call SetUnitY(c5,t5)
call UnitAddAbility(c5,1097691750)
call UnitRemoveAbility(c5,1097691750)
call UnitAddAbility(c5,1097625443)
set Kf=c5
set c5=null
return Kf
endfunction
function r5 takes string B2 returns boolean
local integer N2
local integer M2
local integer w5
local integer u5
set Ib[Ub]=B2
set Ub=Ub+1
set Hc=360*1./8
call CreateTimer()
set N2=0
set M2=7
loop
exitwhen N2>M2
set Lc[N2]=b5("when calling new_ArrayQueue in DummyRecycler, line 139")
set w5=0
set u5=5
loop
exitwhen w5>u5
call ayw(Lc[N2],o5(Jo,Ko,lS,N2*Hc*0.017453293),"when calling enqueue in DummyRecycler, line 141")
set w5=w5+1
endloop
set N2=N2+1
endloop
set Ub=Ub-1
return true
endfunction
function Xqw takes nothing returns boolean
set Ub=0
return r5("DummyRecycler, line 1")
endfunction
function Lv takes nothing returns boolean
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889797,true)!=2 then
return false
endif
return true
endfunction
function Xv takes nothing returns boolean
if not Lv() then
return false
endif
return true
endfunction
function TE takes nothing returns boolean
if GetResearched()!=1378889818 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889818,true)!=1 then
return false
endif
return true
endfunction
function YE takes nothing returns boolean
if not TE() then
return false
endif
return true
endfunction
function YG takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989047 then
return false
endif
return true
endfunction
function TJ takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747988530 then
return false
endif
return true
endfunction
function YJ takes nothing returns boolean
if not TJ() then
return false
endif
return true
endfunction
function TT takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())==1747988568 then
return true
endif
return false
endfunction
function YT takes nothing returns boolean
if not TT() then
return false
endif
return true
endfunction
function YU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990324,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990325,0)
endfunction
function YW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651841,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651831,0)
endfunction
function TY takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989042 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function YY takes nothing returns boolean
if not TY() then
return false
endif
return true
endfunction
function Yaw takes nothing returns nothing
set Ub=0
set Ib[Ub]="ClosureEvents, line 288"
set Ub=Ub+1
call y3("when calling generalEventCallback in ClosureEvents, line 288")
set Ub=Ub-1
endfunction
function Yg takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989078 then
return false
endif
return true
endfunction
function Yj takes nothing returns nothing
local player bj=GetOwningPlayer(GetSpellTargetUnit())
local playerstate yj=PLAYER_STATE_RESOURCE_GOLD
local playerstate pj
local playerstate ej
local player qj
local force aj
local location nj
local real dj
local real fj
local player Rj
local force Tj
if yj==PLAYER_STATE_RESOURCE_GOLD then
set pj=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(bj,pj,GetPlayerState(bj,pj)+500)
elseif yj==PLAYER_STATE_RESOURCE_LUMBER then
set ej=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(bj,ej,GetPlayerState(bj,ej)+500)
endif
call SetPlayerState(bj,yj,GetPlayerState(bj,yj)+500)
call RemoveUnit(GetSpellAbilityUnit())
set qj=GetOwningPlayer(GetSpellTargetUnit())
set aj=CreateForce()
call ForceAddPlayer(aj,qj)
if IsPlayerInForce(GetLocalPlayer(),aj) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_1234")
endif
set e=GetUnitLoc(GetSpellTargetUnit())
set Rj=GetOwningPlayer(GetSpellTargetUnit())
set Tj=CreateForce()
call ForceAddPlayer(Tj,Rj)
set nj=e
set dj=GetLocationX(nj)
set fj=GetLocationY(nj)
if IsPlayerInForce(GetLocalPlayer(),Tj) then
call PingMinimap(dj,fj,2.00)
endif
call RemoveLocation(e)
set bj=null
set yj=null
set pj=null
set ej=null
set qj=null
set aj=null
set nj=null
set Rj=null
set Tj=null
endfunction
function Tm takes nothing returns boolean
if GetResearched()!=1378889801 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889801,true)!=2 then
return false
endif
return true
endfunction
function Ym takes nothing returns boolean
if not Tm() then
return false
endif
return true
endfunction
function Z4 takes nothing returns boolean
local trigger m4=CreateTrigger()
local trigger Q4=m4
local playerunitevent W4=EVENT_PLAYER_UNIT_SPELL_EFFECT
local integer E4=0
loop
call TriggerRegisterPlayerUnitEvent(Q4,Player(E4),W4,null)
set E4=E4+1
exitwhen E4==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(m4,Condition(vf))
call TriggerAddAction(m4,mf)
set m4=null
set Q4=null
set W4=null
return true
endfunction
function EU takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function ZU takes nothing returns boolean
if not EU() then
return false
endif
return true
endfunction
function EW takes nothing returns boolean
if GetResearched()!=1378889811 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889811,true)!=1 then
return false
endif
return true
endfunction
function ZW takes nothing returns boolean
if not EW() then
return false
endif
return true
endfunction
function ZZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989832,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989833,0)
endfunction
function Zh takes nothing returns nothing
local player gh=GetOwningPlayer(GetSpellTargetUnit())
local playerstate hh=PLAYER_STATE_RESOURCE_LUMBER
local playerstate Fh
local playerstate kh
local player jh
local force xh
local location vh
local real mh
local real Qh
local player Wh
local force Eh
if hh==PLAYER_STATE_RESOURCE_GOLD then
set Fh=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(gh,Fh,GetPlayerState(gh,Fh)+500)
elseif hh==PLAYER_STATE_RESOURCE_LUMBER then
set kh=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(gh,kh,GetPlayerState(gh,kh)+500)
endif
call SetPlayerState(gh,hh,GetPlayerState(gh,hh)+500)
call RemoveUnit(GetSpellAbilityUnit())
set jh=GetOwningPlayer(GetSpellTargetUnit())
set xh=CreateForce()
call ForceAddPlayer(xh,jh)
if IsPlayerInForce(GetLocalPlayer(),xh) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_1228")
endif
set e=GetUnitLoc(GetSpellTargetUnit())
set Wh=GetOwningPlayer(GetSpellTargetUnit())
set Eh=CreateForce()
call ForceAddPlayer(Eh,Wh)
set vh=e
set mh=GetLocationX(vh)
set Qh=GetLocationY(vh)
if IsPlayerInForce(GetLocalPlayer(),Eh) then
call PingMinimap(mh,Qh,2.00)
endif
call RemoveLocation(e)
set gh=null
set hh=null
set Fh=null
set kh=null
set jh=null
set xh=null
set vh=null
set Wh=null
set Eh=null
endfunction
function UL takes string EL returns boolean
local integer ZL
set Ib[Ub]=EL
set Ub=Ub+1
set bS=A7("when calling new_HashMap in CityBaseTaxes, line 5")
set ZL=bS
set Ib[Ub]="when calling saveInt in CityBaseTaxes, line 9"
set Ub=Ub+1
if bb[ZL]==0 then
if ZL==0 then
call i7("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call i7("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(ll,ZL,1747988529,20)
set Ub=Ub-1
set Ib[Ub]="when calling saveInt in CityBaseTaxes, line 10"
set Ub=Ub+1
if bb[ZL]==0 then
if ZL==0 then
call i7("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call i7("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(ll,ZL,1747988530,50)
set Ub=Ub-1
set Ib[Ub]="when calling saveInt in CityBaseTaxes, line 11"
set Ub=Ub+1
if bb[ZL]==0 then
if ZL==0 then
call i7("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call i7("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(ll,ZL,1747988531,120)
set Ub=Ub-1
set Ib[Ub]="when calling saveInt in CityBaseTaxes, line 12"
set Ub=Ub+1
if bb[ZL]==0 then
if ZL==0 then
call i7("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call i7("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(ll,ZL,1747990326,20)
set Ub=Ub-1
set Ib[Ub]="when calling saveInt in CityBaseTaxes, line 13"
set Ub=Ub+1
if bb[ZL]==0 then
if ZL==0 then
call i7("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call i7("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(ll,ZL,1747990327,50)
set Ub=Ub-1
set Ib[Ub]="when calling saveInt in CityBaseTaxes, line 14"
set Ub=Ub+1
if bb[ZL]==0 then
if ZL==0 then
call i7("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call i7("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(ll,ZL,1747990328,120)
set Ub=Ub-1
set Ib[Ub]="when calling saveInt in CityBaseTaxes, line 15"
set Ub=Ub+1
if bb[ZL]==0 then
if ZL==0 then
call i7("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call i7("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(ll,ZL,1747990084,20)
set Ub=Ub-1
set Ib[Ub]="when calling saveInt in CityBaseTaxes, line 16"
set Ub=Ub+1
if bb[ZL]==0 then
if ZL==0 then
call i7("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call i7("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(ll,ZL,1747990087,50)
set Ub=Ub-1
set Ib[Ub]="when calling saveInt in CityBaseTaxes, line 17"
set Ub=Ub+1
if bb[ZL]==0 then
if ZL==0 then
call i7("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call i7("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(ll,ZL,1747990085,120)
set Ub=Ub-1
set Ib[Ub]="when calling saveInt in CityBaseTaxes, line 18"
set Ub=Ub+1
if bb[ZL]==0 then
if ZL==0 then
call i7("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call i7("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(ll,ZL,1747989590,20)
set Ub=Ub-1
set Ib[Ub]="when calling saveInt in CityBaseTaxes, line 19"
set Ub=Ub+1
if bb[ZL]==0 then
if ZL==0 then
call i7("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call i7("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(ll,ZL,1747989591,50)
set Ub=Ub-1
set Ib[Ub]="when calling saveInt in CityBaseTaxes, line 20"
set Ub=Ub+1
if bb[ZL]==0 then
if ZL==0 then
call i7("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call i7("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(ll,ZL,1747989592,120)
set Ub=Ub-1
set Ib[Ub]="when calling saveInt in CityBaseTaxes, line 22"
set Ub=Ub+1
if bb[ZL]==0 then
if ZL==0 then
call i7("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call i7("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(ll,ZL,1747989555,5)
set Ub=Ub-1
set Ib[Ub]="when calling saveInt in CityBaseTaxes, line 23"
set Ub=Ub+1
if bb[ZL]==0 then
if ZL==0 then
call i7("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call i7("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(ll,ZL,1747989297,10)
set Ub=Ub-1
set Ib[Ub]="when calling saveInt in CityBaseTaxes, line 24"
set Ub=Ub+1
if bb[ZL]==0 then
if ZL==0 then
call i7("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call i7("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(ll,ZL,1747989325,30)
set Ub=Ub-1
set Ib[Ub]="when calling saveInt in CityBaseTaxes, line 25"
set Ub=Ub+1
if bb[ZL]==0 then
if ZL==0 then
call i7("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call i7("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(ll,ZL,1747989059,15)
set Ub=Ub-1
set Ib[Ub]="when calling saveInt in CityBaseTaxes, line 26"
set Ub=Ub+1
if bb[ZL]==0 then
if ZL==0 then
call i7("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call i7("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(ll,ZL,1747989060,20)
set Ub=Ub-1
set Ib[Ub]="when calling saveInt in CityBaseTaxes, line 27"
set Ub=Ub+1
if bb[ZL]==0 then
if ZL==0 then
call i7("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call i7("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(ll,ZL,1747988844,40)
set Ub=Ub-1
set Ib[Ub]="when calling saveInt in CityBaseTaxes, line 28"
set Ub=Ub+1
if bb[ZL]==0 then
if ZL==0 then
call i7("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call i7("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(ll,ZL,1747989331,15)
set Ub=Ub-1
set Ib[Ub]="when calling saveInt in CityBaseTaxes, line 29"
set Ub=Ub+1
if bb[ZL]==0 then
if ZL==0 then
call i7("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call i7("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(ll,ZL,1747990350,20)
set Ub=Ub-1
set Ib[Ub]="when calling saveInt in CityBaseTaxes, line 30"
set Ub=Ub+1
if bb[ZL]==0 then
if ZL==0 then
call i7("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call i7("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(ll,ZL,1747989809,40)
set Ub=Ub-1
set Ib[Ub]="when calling saveInt in CityBaseTaxes, line 31"
set Ub=Ub+1
if bb[ZL]==0 then
if ZL==0 then
call i7("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call i7("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(ll,ZL,1747990351,15)
set Ub=Ub-1
set Ib[Ub]="when calling saveInt in CityBaseTaxes, line 32"
set Ub=Ub+1
if bb[ZL]==0 then
if ZL==0 then
call i7("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call i7("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(ll,ZL,1747990352,20)
set Ub=Ub-1
set Ib[Ub]="when calling saveInt in CityBaseTaxes, line 33"
set Ub=Ub+1
if bb[ZL]==0 then
if ZL==0 then
call i7("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call i7("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(ll,ZL,1747990356,40)
set Ub=Ub-1
set Ib[Ub]="when calling saveInt in CityBaseTaxes, line 34"
set Ub=Ub+1
if bb[ZL]==0 then
if ZL==0 then
call i7("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call i7("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(ll,ZL,1747990353,15)
set Ub=Ub-1
set Ib[Ub]="when calling saveInt in CityBaseTaxes, line 35"
set Ub=Ub+1
if bb[ZL]==0 then
if ZL==0 then
call i7("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call i7("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(ll,ZL,1747990354,20)
set Ub=Ub-1
set Ib[Ub]="when calling saveInt in CityBaseTaxes, line 36"
set Ub=Ub+1
if bb[ZL]==0 then
if ZL==0 then
call i7("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call i7("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(ll,ZL,1747990355,40)
set Ub=Ub-1-1
return true
endfunction
function Zqw takes nothing returns boolean
set Ub=0
return UL("CityBaseTaxes, line 1")
endfunction
function aJ takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function qQ takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function aQ takes nothing returns boolean
if not qQ() then
return false
endif
return true
endfunction
function cT takes nothing returns boolean
local player tT=GetOwningPlayer(GetConstructedStructure())
local integer iT=GetUnitTypeId(GetConstructedStructure())
local group ST=CreateGroup()
local boolean sT
set bj_groupEnumTypeId=iT
call GroupEnumUnitsOfPlayer(ST,tT,filterGetUnitsOfPlayerAndTypeId)
set sT=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
set bj_groupCountUnits=0
call ForGroup(ST,function CountUnitsInGroupEnum)
if sT then
call DestroyGroup(ST)
endif
if bj_groupCountUnits>3 then
set tT=null
set ST=null
return false
endif
set tT=null
set ST=null
return true
endfunction
function aT takes nothing returns nothing
local player oT
local player OT
local player lT
local player bT
local player yT
local player pT
local player eT
local player qT
if cT() then
set oT=GetOwningPlayer(GetConstructedStructure())
set OT=GetOwningPlayer(GetConstructedStructure())
set y[GetPlayerId(oT)+1]=y[GetPlayerId(OT)+1]+50
set lT=GetOwningPlayer(GetConstructedStructure())
set bT=GetOwningPlayer(GetConstructedStructure())
set t[GetPlayerId(lT)+1]=t[GetPlayerId(bT)+1]-10
else
set yT=GetOwningPlayer(GetConstructedStructure())
set pT=GetOwningPlayer(GetConstructedStructure())
set y[GetPlayerId(yT)+1]=y[GetPlayerId(pT)+1]+25
set eT=GetOwningPlayer(GetConstructedStructure())
set qT=GetOwningPlayer(GetConstructedStructure())
set t[GetPlayerId(eT)+1]=t[GetPlayerId(qT)+1]-10
endif
call UnitAddAbility(GetConstructedStructure(),1093677647)
set oT=null
set OT=null
set lT=null
set bT=null
set yT=null
set pT=null
set eT=null
set qT=null
endfunction
function aY takes nothing returns nothing
local player bY=GetOwningPlayer(GetAttacker())
local player yY=GetOwningPlayer(GetAttacker())
local player pY
local player eY
local unit qY
set r[GetPlayerId(bY)+1]=r[GetPlayerId(yY)+1]+1
set pY=GetOwningPlayer(GetTriggerUnit())
set eY=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(pY)+1]=r[GetPlayerId(eY)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set qY=GetTriggerUnit()
call SetUnitState(qY,UNIT_STATE_LIFE,GetUnitState(qY,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set bY=null
set yY=null
set pY=null
set eY=null
set qY=null
endfunction
function Xlw takes string Plw returns boolean
local trigger Alw
local playerunitevent Dlw
local rect Hlw
local region Jlw
local integer Klw
local integer Llw
set Ib[Ub]=Plw
set Ub=Ub+1
set Alw=CreateTrigger()
set Hlw=GetWorldBounds()
set Jlw=CreateRegion()
call RegionAddRect(Jlw,Hlw)
call TriggerRegisterEnterRegion(Alw,Jlw,null)
call TriggerAddAction(Alw,Hf)
set Dlw=EVENT_PLAYER_UNIT_DEATH
set Ib[Ub]="when calling alloc_Closure in Upkeep, line 15"
set Ub=Ub+1
if vl==0 then
if ml<32768 then
set ml=ml+1
set Klw=ml
set Ql[Klw]=676
else
call i7("Out of memory: Could not create Closure.","when calling error in Upkeep, line 15")
set Klw=0
endif
else
set vl=vl-1
set Klw=xl[vl]
set Ql[Klw]=676
endif
set Ub=Ub-1
set Tc[Klw]=0
set Yc[Klw]=0
set Gc[Klw]=0
set Ib[Ub]="when calling add in Upkeep, line 15"
set Ub=Ub+1
set Ib[Ub]="when calling toIntId in ClosureEvents, line 111"
set Ub=Ub+1
set Llw=qc[GetHandleId(Dlw)]
if Llw==0 then
set Llw=IM(Dlw,"when calling registerEventId in ClosureEvents, line 228")
endif
set Ub=Ub-1
set Tc[Klw]=Llw
if fc[Tc[Klw]]!=0 then
set Gc[fc[Tc[Klw]]]=Klw
set Yc[Klw]=fc[Tc[Klw]]
endif
set fc[Tc[Klw]]=Klw
set Ub=Ub-1-1
set Alw=null
set Dlw=null
set Hlw=null
set Jlw=null
return true
endfunction
function aaw takes nothing returns boolean
set Ub=0
return Xlw("Upkeep, line 1")
endfunction
function am takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989072,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989073,0)
endfunction
function b7 takes nothing returns boolean
set yo=InitHashtable()
set po=InitHashtable()
return true
endfunction
function bH takes nothing returns nothing
call UnitAddAbility(GetConstructedStructure(),1093677896)
endfunction
function bP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990603,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990604,0)
endfunction
function lU takes nothing returns boolean
if GetResearched()!=1378890038 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890038,true)!=1 then
return false
endif
return true
endfunction
function bU takes nothing returns boolean
if not lU() then
return false
endif
return true
endfunction
function J0w takes string v0w returns boolean
local playerunitevent m0w
local playerunitevent Q0w
local integer W0w
local integer E0w
local integer Z0w
local integer U0w
local integer I0w
local integer P0w
local integer A0w
local integer D0w
local integer H0w
set Ib[Ub]=v0w
set Ub=Ub+1
set Lo=A7("when calling new_HashMap in MassControl, line 7")
set W0w=R2I(500000)
set E0w=R2I(700000)
set Z0w=R2I(1000000)
set Ib[Ub]="when calling asList in MassControl, line 8"
set Ub=Ub+1
set U0w=n9("when calling new_LinkedList in LinkedList, line 391")
call Tpw(U0w,W0w,"when calling add in LinkedList, line 393")
call Tpw(U0w,E0w,"when calling add in LinkedList, line 393")
call Tpw(U0w,Z0w,"when calling add in LinkedList, line 393")
set Ub=Ub-1
set Xo=U0w
set Ib[Ub]="when calling asList in MassControl, line 14"
set Ub=Ub+1
set I0w=n9("when calling new_LinkedList in LinkedList, line 391")
call Tpw(I0w,1211118401,"when calling add in LinkedList, line 393")
call Tpw(I0w,1211119699,"when calling add in LinkedList, line 393")
call Tpw(I0w,1211119701,"when calling add in LinkedList, line 393")
call Tpw(I0w,1211119700,"when calling add in LinkedList, line 393")
set Ub=Ub-1
set Co=I0w
set m0w=EVENT_PLAYER_UNIT_SPELL_CAST
set Ib[Ub]="when calling alloc_Closure in MassControl, line 22"
set Ub=Ub+1
if vl==0 then
if ml<32768 then
set ml=ml+1
set P0w=ml
set Ql[P0w]=670
else
call i7("Out of memory: Could not create Closure.","when calling error in MassControl, line 22")
set P0w=0
endif
else
set vl=vl-1
set P0w=xl[vl]
set Ql[P0w]=670
endif
set Ub=Ub-1
set Tc[P0w]=0
set Yc[P0w]=0
set Gc[P0w]=0
set Ib[Ub]="when calling add in MassControl, line 22"
set Ub=Ub+1
set Ib[Ub]="when calling toIntId in ClosureEvents, line 111"
set Ub=Ub+1
set A0w=qc[GetHandleId(m0w)]
if A0w==0 then
set A0w=IM(m0w,"when calling registerEventId in ClosureEvents, line 228")
endif
set Ub=Ub-1
set Tc[P0w]=A0w
if fc[Tc[P0w]]!=0 then
set Gc[fc[Tc[P0w]]]=P0w
set Yc[P0w]=fc[Tc[P0w]]
endif
set fc[Tc[P0w]]=P0w
set Ub=Ub-1
set Q0w=EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER
set Ib[Ub]="when calling alloc_Closure in MassControl, line 32"
set Ub=Ub+1
if vl==0 then
if ml<32768 then
set ml=ml+1
set D0w=ml
set Ql[D0w]=671
else
call i7("Out of memory: Could not create Closure.","when calling error in MassControl, line 32")
set D0w=0
endif
else
set vl=vl-1
set D0w=xl[vl]
set Ql[D0w]=671
endif
set Ub=Ub-1
set Tc[D0w]=0
set Yc[D0w]=0
set Gc[D0w]=0
set Ib[Ub]="when calling add in MassControl, line 32"
set Ub=Ub+1
set Ib[Ub]="when calling toIntId in ClosureEvents, line 111"
set Ub=Ub+1
set H0w=qc[GetHandleId(Q0w)]
if H0w==0 then
set H0w=IM(Q0w,"when calling registerEventId in ClosureEvents, line 228")
endif
set Ub=Ub-1
set Tc[D0w]=H0w
if fc[Tc[D0w]]!=0 then
set Gc[fc[Tc[D0w]]]=D0w
set Yc[D0w]=fc[Tc[D0w]]
endif
set fc[Tc[D0w]]=D0w
set Ub=Ub-1-1
set m0w=null
set Q0w=null
return true
endfunction
function baw takes nothing returns boolean
set Ub=0
return J0w("MassControl, line 1")
endfunction
function bbw takes nothing returns boolean
call Location(0.,0.)
return true
endfunction
function bv takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988551,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989081,0)
endfunction
function c7 takes nothing returns boolean
set Oo=CreateTimer()
call TimerStart(Oo,100000.,false,null)
call TimerStart(CreateTimer(),0.030,true,Qf)
return true
endfunction
function cK takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function cQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989301,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988790,0)
endfunction
function SW takes nothing returns boolean
if GetResearched()!=1378889806 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889806,true)!=1 then
return false
endif
return true
endfunction
function cW takes nothing returns boolean
if not SW() then
return false
endif
return true
endfunction
function cZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989816,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989815,0)
endfunction
function Yww takes string fww returns boolean
local integer Rww
local integer Tww
set Ib[Ub]=fww
set Ub=Ub+1
set Ib[Ub]="when calling alloc_Closure in MultiboardCityUpdate, line 18"
set Ub=Ub+1
if Xl==0 then
if Cl<32768 then
set Cl=Cl+1
set Rww=Cl
set Vl[Rww]=648
else
call i7("Out of memory: Could not create Closure.","when calling error in MultiboardCityUpdate, line 18")
set Rww=0
endif
else
set Xl=Xl-1
set Rww=Ll[Xl]
set Vl[Rww]=648
endif
set Ub=Ub-1
set Ib[Ub]="when calling doAfter in MultiboardCityUpdate, line 18"
set Ub=Ub+1
set Ib[Ub]="when calling start in ClosureTimers, line 15"
set Ub=Ub+1
if Vl[Rww]==0 then
if Rww==0 then
call i7("Nullpointer exception when calling CallbackSingle.start","when calling error in ClosureTimers, line 67")
else
call i7("Called CallbackSingle.start on invalid object.","when calling error in ClosureTimers, line 67")
endif
endif
call S1(Rww,0.01,"when calling start in ClosureTimers, line 67")
set Ub=Ub-1-1
set Ib[Ub]="when calling alloc_Closure in MultiboardCityUpdate, line 25"
set Ub=Ub+1
if Nl==0 then
if Ml<32768 then
set Ml=Ml+1
set Tww=Ml
set wb[Tww]=637
else
call i7("Out of memory: Could not create Closure.","when calling error in MultiboardCityUpdate, line 25")
set Tww=0
endif
else
set Nl=Nl-1
set Tww=Bl[Nl]
set wb[Tww]=637
endif
set Ub=Ub-1
set Ib[Ub]="when calling doPeriodically in MultiboardCityUpdate, line 25"
set Ub=Ub+1
set Ib[Ub]="when calling start in ClosureTimers, line 36"
set Ub=Ub+1
if wb[Tww]==0 then
if Tww==0 then
call i7("Nullpointer exception when calling CallbackPeriodic.start","when calling error in ClosureTimers, line 88")
else
call i7("Called CallbackPeriodic.start on invalid object.","when calling error in ClosureTimers, line 88")
endif
endif
call u1(Tww,1.0,"when calling start in ClosureTimers, line 88")
set Ub=Ub-1-1-1
return true
endfunction
function caw takes nothing returns boolean
set Ub=0
return Yww("MultiboardCityUpdate, line 1")
endfunction
function Sg takes nothing returns boolean
if IsUnitType(GetEnumUnit(),UNIT_TYPE_STRUCTURE)!=false then
return false
endif
return true
endfunction
function cg takes nothing returns nothing
if Sg() then
call SetUnitPositionLoc(GetEnumUnit(),o)
endif
endfunction
function d9 takes nothing returns boolean
return true
endfunction
function dE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989570,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989556,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989559,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989557,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989560,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989573,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989574,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651841,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651833,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651832,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989582,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990097,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989812,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990098,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990099,0)
endfunction
function dH takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function dL takes nothing returns nothing
local player pL=GetOwningPlayer(GetAttacker())
local player eL=GetOwningPlayer(GetAttacker())
local player qL
local player aL
local unit nL
set r[GetPlayerId(pL)+1]=r[GetPlayerId(eL)+1]+1
set qL=GetOwningPlayer(GetTriggerUnit())
set aL=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(qL)+1]=r[GetPlayerId(aL)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set nL=GetTriggerUnit()
call SetUnitState(nL,UNIT_STATE_LIFE,GetUnitState(nL,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set pL=null
set eL=null
set qL=null
set aL=null
set nL=null
endfunction
function dP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990599,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990600,0)
endfunction
function dSw takes nothing returns boolean
return true
endfunction
function dU takes nothing returns nothing
set s=bj_FORCE_ALL_PLAYERS
call ForForce(s,xq)
endfunction
function daw takes nothing returns nothing
set Ub=0
call y3("ClosureEvents, line 240")
endfunction
function dow takes nothing returns boolean
set LO[0]="Terrible! Terrible news, my lord!"
set LO[1]="The messenger came to us with horrific news! May we execute him?"
set LO[2]="A mere nightmare, Your Mightiness!"
set XO[0]="Holy Mother of God, we have horrific news!"
set XO[1]="Lord Preserve us, Great Prince!"
set XO[2]="Great Prince, we have horrific news!"
set CO[0]="Allah be merciful! I bring terrible news"
set CO[1]="Oh, Great Sultan! We have terrible news"
set CO[2]="Oh, Great one! I bring ill news"
set VO[0]="Saints save us, we have some most horrific news!"
set VO[1]="My Basileus! We have horrific news!"
set VO[2]="My Basileus, by the grace of our lord. We have horrific news!"
set BO[0]="My King, we have received news concerning our realm"
set BO[1]="The messenger arrived with news. No matter, could I execute him?"
set BO[2]="My liege I bring news about the realm"
set NO[0]="Great Prince, a messenger came with news"
set NO[1]="May the God bless you, Great Prince, we have some news"
set NO[2]="There is something you should know, Great Prince"
set MO[0]="My Sultan! We have news"
set MO[1]="Praise be to Allah, Sultan! We bring news"
set MO[2]="Great Sultan! We have some news"
set wl[0]="My Basileus, we have some news"
set wl[1]="My Basileus, we have some news"
set wl[2]="My Basileus, we have some news"
set ul[0]="Milord! Good news!"
set ul[1]="Praise the Holy Lord! We have good news"
set ul[2]="My King, we bring great news for you!"
set rl[0]="By the grace of our Lord, we bring good news!"
set rl[1]="We received great news my Lord! Still the Messenger deserves to be pusnished"
set rl[2]="My Lord, we have received delightful news!"
set sl[0]="Praise be to Allah, Sultan! We have great news"
set sl[1]="Good tidings Sultan! I bring good news"
set sl[2]="Allah is glorious, Sultan! We have great news"
set tl[0]="Good news, my Basileus!"
set tl[1]="Praise the Holy Lord, we bring great news, my Basileus!"
set tl[2]="We received good news my Basileus! We shouldn’t blind this messenger"
set il[0]="Your Majesty, important news!"
set il[1]="May the God bless you, my lord. There is something you must know!"
set il[2]="There is something that needs your attention, my lord!"
set Sl[0]="By the Saints! Great Prince, you must hear to this"
set Sl[1]="You should hear this, Great Prince!"
set Sl[2]="You need to see this, Great Prince!"
set cl[0]="Great one, urgent news must be brought to your attention!"
set cl[1]="My Sultan, there is something you need to know!"
set cl[2]="My Great Sultan, there is something you must know!"
set ol[0]="My Basileus, there is something you need to know!"
set ol[1]="My Basileus, we can not delay this news!"
set ol[2]="My Basileus, you should be aware of this!"
set Ol[0]="|cffffd900Med."
set Ol[1]="|cff00ff00Low"
set Ol[2]="|cffff0000High"
return true
endfunction
function dv takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989066,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988551,0)
endfunction
function eK takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function pW takes nothing returns boolean
if GetResearched()!=1378889806 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889806,true)!=2 then
return false
endif
return true
endfunction
function eW takes nothing returns boolean
if not pW() then
return false
endif
return true
endfunction
function eZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989828,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989827,0)
endfunction
function wew takes integer Fpw,integer kpw,integer jpw,integer xpw,integer vpw,integer mpw,integer Qpw,integer Wpw,integer Epw,integer Zpw,integer Upw,integer Ipw,integer Ppw,integer Apw,integer Dpw,integer Hpw,integer Jpw,integer Kpw,integer Lpw,integer Xpw,integer Cpw,integer Vpw,integer Bpw,string Npw returns integer
local integer Mpw
set Ib[Ub]=Npw
set Ub=Ub+1
set Mpw=n9("when calling new_LinkedList in LinkedList, line 391")
call Tpw(Mpw,Fpw,"when calling add in LinkedList, line 393")
call Tpw(Mpw,kpw,"when calling add in LinkedList, line 393")
call Tpw(Mpw,jpw,"when calling add in LinkedList, line 393")
call Tpw(Mpw,xpw,"when calling add in LinkedList, line 393")
call Tpw(Mpw,vpw,"when calling add in LinkedList, line 393")
call Tpw(Mpw,mpw,"when calling add in LinkedList, line 393")
call Tpw(Mpw,Qpw,"when calling add in LinkedList, line 393")
call Tpw(Mpw,Wpw,"when calling add in LinkedList, line 393")
call Tpw(Mpw,Epw,"when calling add in LinkedList, line 393")
call Tpw(Mpw,Zpw,"when calling add in LinkedList, line 393")
call Tpw(Mpw,Upw,"when calling add in LinkedList, line 393")
call Tpw(Mpw,Ipw,"when calling add in LinkedList, line 393")
call Tpw(Mpw,Ppw,"when calling add in LinkedList, line 393")
call Tpw(Mpw,Apw,"when calling add in LinkedList, line 393")
call Tpw(Mpw,Dpw,"when calling add in LinkedList, line 393")
call Tpw(Mpw,Hpw,"when calling add in LinkedList, line 393")
call Tpw(Mpw,Jpw,"when calling add in LinkedList, line 393")
call Tpw(Mpw,Kpw,"when calling add in LinkedList, line 393")
call Tpw(Mpw,Lpw,"when calling add in LinkedList, line 393")
call Tpw(Mpw,Xpw,"when calling add in LinkedList, line 393")
call Tpw(Mpw,Cpw,"when calling add in LinkedList, line 393")
call Tpw(Mpw,Vpw,"when calling add in LinkedList, line 393")
call Tpw(Mpw,Bpw,"when calling add in LinkedList, line 393")
set Ub=Ub-1
return Mpw
endfunction
function GSw takes string fSw returns boolean
local playerunitevent RSw
local integer TSw
local integer YSw
set Ib[Ub]=fSw
set Ub=Ub+1
set WO=wew(1747988557,1747989075,1747990102,1747988785,1747989839,1747990101,1747989554,1747989041,1747990344,1747989059,1747989060,1747988844,1747990351,1747990352,1747990356,1747989331,1747990350,1747989809,1747990353,1747990354,1747990355,1747988568,1747990341,"when calling asList in RangeChecks, line 5")
set RSw=EVENT_PLAYER_UNIT_CONSTRUCT_START
set Ib[Ub]="when calling alloc_Closure in RangeChecks, line 8"
set Ub=Ub+1
if vl==0 then
if ml<32768 then
set ml=ml+1
set TSw=ml
set Ql[TSw]=674
else
call i7("Out of memory: Could not create Closure.","when calling error in RangeChecks, line 8")
set TSw=0
endif
else
set vl=vl-1
set TSw=xl[vl]
set Ql[TSw]=674
endif
set Ub=Ub-1
set Tc[TSw]=0
set Yc[TSw]=0
set Gc[TSw]=0
set Ib[Ub]="when calling add in RangeChecks, line 8"
set Ub=Ub+1
set Ib[Ub]="when calling toIntId in ClosureEvents, line 111"
set Ub=Ub+1
set YSw=qc[GetHandleId(RSw)]
if YSw==0 then
set YSw=IM(RSw,"when calling registerEventId in ClosureEvents, line 228")
endif
set Ub=Ub-1
set Tc[TSw]=YSw
if fc[Tc[TSw]]!=0 then
set Gc[fc[Tc[TSw]]]=TSw
set Yc[TSw]=fc[Tc[TSw]]
endif
set fc[Tc[TSw]]=TSw
set Ub=Ub-1-1
set RSw=null
return true
endfunction
function eaw takes nothing returns boolean
set Ub=0
return GSw("RangeChecks, line 1")
endfunction
function f9 takes nothing returns boolean
return true
endfunction
function dD takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989325 then
return false
endif
return true
endfunction
function fD takes nothing returns boolean
if not dD() then
return false
endif
return true
endfunction
function fE takes nothing returns nothing
set s=bj_FORCE_ALL_PLAYERS
call ForForce(s,Me)
endfunction
function dI takes nothing returns boolean
if GetResearched()!=1378890051 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890051,true)!=2 then
return false
endif
return true
endfunction
function fI takes nothing returns boolean
if not dI() then
return false
endif
return true
endfunction
function h3 takes integer G3,string g3 returns nothing
set Ib[Ub]=g3
set Ub=Ub+1
if kc[G3]!=null then
if Uyw(dc,GetHandleId(kc[G3]),"when calling get in ClosureEvents, line 60")==G3 then
call myw(dc,GetHandleId(kc[G3]),gc[G3],"when calling put in ClosureEvents, line 62")
elseif hc[G3]!=0 then
set gc[hc[G3]]=gc[G3]
endif
elseif Uyw(nc,Fc[G3],"when calling get in ClosureEvents, line 66")==G3 then
call myw(nc,Fc[G3],gc[G3],"when calling put in ClosureEvents, line 68")
elseif hc[G3]!=0 then
set gc[hc[G3]]=gc[G3]
endif
set hc[gc[G3]]=hc[G3]
set gc[G3]=0
set hc[G3]=0
set Ub=Ub-1
endfunction
function Hbw takes integer Abw,string Dbw returns nothing
set Ib[Ub]=Dbw
set Ub=Ub+1
if rb[Abw]==0 then
if Abw==0 then
call i7("Nullpointer exception when calling OnCastListener.OnCastListener","when calling error in ClosureEvents, line 50")
else
call i7("Called OnCastListener.OnCastListener on invalid object.","when calling error in ClosureEvents, line 50")
endif
endif
set Ib[Ub]="when calling destroyOnCastListener in ClosureEvents, line 50"
set Ub=Ub+1
call h3(Abw,"when calling OnCastListener_onDestroy in ClosureEvents, line 58")
set Ib[Ub]="when calling OnCastListener in ClosureEvents, line 58"
set Ub=Ub+1
if rb[Abw]==0 then
call i7("Double free: object of type OnCastListener","when calling error in ClosureEvents, line 50")
else
set ub=ub+1
set rb[Abw]=0
endif
set Ub=Ub-1-1-1
endfunction
function Y3 takes integer f3,string R3 returns nothing
local integer T3
set Ib[Ub]=R3
set Ub=Ub+1
set T3=fc[Tc[f3]]
if T3==f3 then
set fc[Tc[f3]]=Yc[f3]
elseif Gc[f3]!=0 then
set Yc[Gc[f3]]=Yc[f3]
endif
set Gc[Yc[f3]]=Gc[f3]
set T3=Rc[Tc[f3]]
if T3==f3 then
set Rc[Tc[f3]]=Yc[f3]
elseif Gc[f3]!=0 then
set Yc[Gc[f3]]=Yc[f3]
endif
set Gc[Yc[f3]]=Gc[f3]
set Yc[f3]=0
set Gc[f3]=0
set Ib[Ub]="when calling EventListener in ClosureEvents, line 201"
set Ub=Ub+1
if Ql[f3]==0 then
call i7("Double free: object of type EventListener","when calling error in ClosureEvents, line 98")
else
set xl[vl]=f3
set vl=vl+1
set Ql[f3]=0
endif
set Ub=Ub-1-1
endfunction
function NM takes integer XM,string CM returns nothing
local integer VM
local integer BM
set Ib[Ub]=CM
set Ub=Ub+1
if XM>0 then
if Rc[XM]!=0 then
set VM=Rc[XM]
set Rc[XM]=0
loop
exitwhen VM==0
set BM=VM
set VM=Yc[VM]
set CM="when calling EventListener in ClosureEvents, line 275"
set Ib[Ub]="when calling EventListener in ClosureEvents, line 275"
set Ub=Ub+1
if Ql[BM]==0 then
if BM==0 then
call i7("Nullpointer exception when calling EventListener.EventListener","when calling error in ClosureEvents, line 98")
else
call i7("Called EventListener.EventListener on invalid object.","when calling error in ClosureEvents, line 98")
endif
endif
call Y3(BM,"when calling destroyEventListener in ClosureEvents, line 98")
set Ub=Ub-1
endloop
endif
endif
set Ub=Ub-1
endfunction
function LM takes unit PM,string AM returns nothing
local integer DM
local integer HM
local integer JM
local integer KM
set Ib[Ub]=AM
set Ub=Ub+1
call NM(GetUnitUserData(PM),"when calling unregisterEvents in ClosureEvents, line 251")
if Fyw(dc,GetHandleId(PM),"when calling has in ClosureEvents, line 252") then
set DM=Uyw(dc,GetHandleId(PM),"when calling get in ClosureEvents, line 253")
call Dyw(dc,GetHandleId(PM),"when calling remove in ClosureEvents, line 254")
loop
exitwhen DM==0
set HM=DM
set DM=gc[DM]
call Hbw(HM,"when calling OnCastListener in ClosureEvents, line 258")
endloop
endif
if Fyw(dc,GetHandleId(PM),"when calling has in ClosureEvents, line 259") then
set JM=Uyw(dc,GetHandleId(PM),"when calling get in ClosureEvents, line 260")
loop
exitwhen JM==0
set KM=JM
set JM=gc[JM]
call Hbw(KM,"when calling OnCastListener in ClosureEvents, line 264")
endloop
endif
set Ub=Ub-1
endfunction
function faw takes nothing returns nothing
set Ub=0
set Ib[Ub]="ClosureEvents, line 283"
set Ub=Ub+1
call LM(dl,"when calling unregisterEventsForUnit in ClosureEvents, line 283")
set Ub=Ub-1
endfunction
function fow takes nothing returns boolean
set ll=InitHashtable()
return true
endfunction
function dx takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function fx takes nothing returns boolean
if not dx() then
return false
endif
return true
endfunction
function GG takes nothing returns boolean
if IsUnitType(GetEnumUnit(),UNIT_TYPE_STRUCTURE)!=false then
return false
endif
return true
endfunction
function gG takes nothing returns nothing
if GG() then
call SetUnitPositionLoc(GetEnumUnit(),o)
endif
endfunction
function GH takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990356 then
return false
endif
return true
endfunction
function gH takes nothing returns boolean
if not GH() then
return false
endif
return true
endfunction
function GP takes nothing returns boolean
if GetResearched()!=1378890052 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890052,true)!=2 then
return false
endif
return true
endfunction
function gP takes nothing returns boolean
if not GP() then
return false
endif
return true
endfunction
function gQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989812,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989811,0)
endfunction
function BB takes integer HB,unit JB,string KB returns nothing
local integer LB
local integer XB
local boolean CB
local boolean VB
set Ib[Ub]=KB
set Ub=Ub+1
set LB=Gl
set XB=GetUnitTypeId(JB)
set Ib[Ub]="when calling has in City, line 294"
set Ub=Ub+1
if hb[LB]==0 then
if LB==0 then
call i7("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call i7("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set CB=O9(LB,XB)
set Ub=Ub-1
if not CB then
set VB=GetOwningPlayer(JB)==gO[BS[DS[HB]]]
else
set VB=false
endif
if VB then
set sc[DS[HB]]=sc[DS[HB]]+0.5
endif
set Ub=Ub-1
endfunction
function c6 takes integer V5,unit B5,string N5 returns nothing
local integer M5
local integer w6
local boolean u6
local player r6
local player s6
local boolean t6
local boolean i6
local integer S6
set Ib[Ub]=N5
set Ub=Ub+1
set M5=Rl
set w6=GetUnitTypeId(B5)
set Ib[Ub]="when calling has in Economy, line 39"
set Ub=Ub+1
if hb[M5]==0 then
if M5==0 then
call i7("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call i7("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set u6=O9(M5,w6)
set Ub=Ub-1
if u6 then
set r6=gO[GetPlayerId(GetOwningPlayer(B5))]
if GetPlayerSlotState(r6)==PLAYER_SLOT_STATE_PLAYING then
set t6=GetPlayerController(r6)==MAP_CONTROL_USER
else
set t6=false
endif
set i6=t6
else
set i6=false
endif
if i6 then
set s6=GetOwningPlayer(B5)
set S6=Xc[GetPlayerId(GetOwningPlayer(B5))]
set V5=Tl
set Xc[GetPlayerId(s6)]=S6+Uyw(V5,GetUnitTypeId(B5),"when calling get in Economy, line 40")
endif
set Ub=Ub-1
set r6=null
set s6=null
endfunction
function oww takes integer uww,unit rww,string sww returns nothing
local integer tww
local integer iww
local boolean Sww
local boolean cww_2
set Ib[Ub]=sww
set Ub=Ub+1
if GetOwningPlayer(rww)==Vo[uww]then
set tww=Gl
set iww=GetUnitTypeId(rww)
set Ib[Ub]="when calling has in MassControl, line 28"
set Ub=Ub+1
if hb[tww]==0 then
if tww==0 then
call i7("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call i7("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set Sww=O9(tww,iww)
set Ub=Ub-1
set cww_2=not Sww
else
set cww_2=false
endif
if cww_2 and rww!=Bo[uww] and(not IsUnitType(rww,UNIT_TYPE_STRUCTURE)) then
call Tpw(No[uww],GetHandleId(rww),"when calling add in MassControl, line 29")
endif
set Ub=Ub-1
endfunction
function scw takes integer ESw,unit ZSw,string USw returns nothing
local integer ISw
local integer PSw
local player ASw
local player DSw
local player HSw
local player JSw
local player KSw
local player LSw
local player XSw
local player CSw
local player VSw
local player BSw
local player NSw
local boolean MSw
local boolean wcw
local boolean ucw
local boolean rcw
set Ib[Ub]=USw
set Ub=Ub+1
if not ZO[ESw]then
if GetUnitTypeId(ZSw)==UO[ESw]then
set wcw=true
else
if GetUnitTypeId(ZSw)==1747990101 then
set MSw=true
else
set MSw=GetUnitTypeId(ZSw)==1747989554
endif
set wcw=MSw and UO[ESw]==1747989041 or UO[ESw]==1747990344 or UO[ESw]==1747988557
endif
set ucw=wcw
else
set ucw=false
endif
if ucw then
set rcw=GetOwningPlayer(ZSw)==IO[ESw]
else
set rcw=false
endif
if rcw and ZSw!=PO[ESw]then
set ZO[ESw]=true
set Ib[Ub]="when calling alloc_Closure in RangeChecks, line 20"
set Ub=Ub+1
if Xl==0 then
if Cl<32768 then
set Cl=Cl+1
set PSw=Cl
set Vl[PSw]=652
else
call i7("Out of memory: Could not create Closure.","when calling error in RangeChecks, line 20")
set PSw=0
endif
else
set Xl=Xl-1
set PSw=Ll[Xl]
set Vl[PSw]=652
endif
set Ub=Ub-1
set EO[PSw]=PO[ESw]
set Ib[Ub]="when calling doAfter in RangeChecks, line 20"
set Ub=Ub+1
set Ib[Ub]="when calling start in ClosureTimers, line 15"
set Ub=Ub+1
if Vl[PSw]==0 then
if PSw==0 then
call i7("Nullpointer exception when calling CallbackSingle.start","when calling error in ClosureTimers, line 67")
else
call i7("Called CallbackSingle.start on invalid object.","when calling error in ClosureTimers, line 67")
endif
endif
call S1(PSw,0.01,"when calling start in ClosureTimers, line 67")
set Ub=Ub-1-1
set ISw=UO[ESw]
if ISw==1747988557 then
set ASw=IO[ESw]
set Ib[Ub]="when calling attentionToPlayer in RangeChecks, line 24"
set Ub=Ub+1
call DisplayTimedTextToPlayer(ASw,0.,0.,10.0,cww(ASw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(ASw,0.,0.,10.0,"You cannot build settlements too close to each other.")
set Ub=Ub-1
elseif ISw==1747989075 then
set DSw=IO[ESw]
set Ib[Ub]="when calling attentionToPlayer in RangeChecks, line 26"
set Ub=Ub+1
call DisplayTimedTextToPlayer(DSw,0.,0.,10.0,cww(DSw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(DSw,0.,0.,10.0,"You cannot build churches too close to each other.")
set Ub=Ub-1
elseif ISw==1747990102 then
set HSw=IO[ESw]
set Ib[Ub]="when calling attentionToPlayer in RangeChecks, line 28"
set Ub=Ub+1
call DisplayTimedTextToPlayer(HSw,0.,0.,10.0,cww(HSw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(HSw,0.,0.,10.0,"You cannot build churches too close to each other.")
set Ub=Ub-1
elseif ISw==1747988785 then
set JSw=IO[ESw]
set Ib[Ub]="when calling attentionToPlayer in RangeChecks, line 30"
set Ub=Ub+1
call DisplayTimedTextToPlayer(JSw,0.,0.,10.0,cww(JSw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(JSw,0.,0.,10.0,"You cannot build churches too close to each other.")
set Ub=Ub-1
elseif ISw==1747989839 then
set KSw=IO[ESw]
set Ib[Ub]="when calling attentionToPlayer in RangeChecks, line 32"
set Ub=Ub+1
call DisplayTimedTextToPlayer(KSw,0.,0.,10.0,cww(KSw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(KSw,0.,0.,10.0,"You cannot build mosques too close to each other.")
set Ub=Ub-1
elseif ISw==1747989059 then
set LSw=IO[ESw]
set Ib[Ub]="when calling attentionToPlayer in RangeChecks, line 34"
set Ub=Ub+1
call DisplayTimedTextToPlayer(LSw,0.,0.,10.0,cww(LSw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(LSw,0.,0.,10.0,"You cannot build castles too close to each other.")
set Ub=Ub-1
elseif ISw==1747989331 then
set XSw=IO[ESw]
set Ib[Ub]="when calling attentionToPlayer in RangeChecks, line 36"
set Ub=Ub+1
call DisplayTimedTextToPlayer(XSw,0.,0.,10.0,cww(XSw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(XSw,0.,0.,10.0,"You cannot build castles too close to each other.")
set Ub=Ub-1
elseif ISw==1747990351 then
set CSw=IO[ESw]
set Ib[Ub]="when calling attentionToPlayer in RangeChecks, line 38"
set Ub=Ub+1
call DisplayTimedTextToPlayer(CSw,0.,0.,10.0,cww(CSw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(CSw,0.,0.,10.0,"You cannot build castles too close to each other.")
set Ub=Ub-1
elseif ISw==1747990353 then
set VSw=IO[ESw]
set Ib[Ub]="when calling attentionToPlayer in RangeChecks, line 40"
set Ub=Ub+1
call DisplayTimedTextToPlayer(VSw,0.,0.,10.0,cww(VSw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(VSw,0.,0.,10.0,"You cannot build castles too close to each other.")
set Ub=Ub-1
elseif ISw==1747988568 then
set BSw=IO[ESw]
set Ib[Ub]="when calling attentionToPlayer in RangeChecks, line 42"
set Ub=Ub+1
call DisplayTimedTextToPlayer(BSw,0.,0.,10.0,cww(BSw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(BSw,0.,0.,10.0,"You cannot build inns too close to each other.")
set Ub=Ub-1
elseif ISw==1747990341 then
set NSw=IO[ESw]
set Ib[Ub]="when calling attentionToPlayer in RangeChecks, line 44"
set Ub=Ub+1
call DisplayTimedTextToPlayer(NSw,0.,0.,10.0,cww(NSw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(NSw,0.,0.,10.0,"You cannot build inns too close to each other.")
set Ub=Ub-1
endif
endif
set Ub=Ub-1
set ASw=null
set DSw=null
set HSw=null
set JSw=null
set KSw=null
set LSw=null
set XSw=null
set CSw=null
set VSw=null
set BSw=null
set NSw=null
endfunction
function nSw takes integer aSw returns real
if aSw==1747988785 then
return 10.0
elseif aSw==1747989075 then
return 10.0
elseif aSw==1747990102 then
return 10.0
elseif aSw==1747989839 then
return 10.0
elseif aSw==1747988568 then
return 5.0
elseif aSw==1747990341 then
return 5.0
elseif aSw==1747988789 then
return 15.0
elseif aSw==1747990103 then
return 15.0
elseif aSw==1747990064 then
return 15.0
elseif aSw==1747989846 then
return 15.0
else
return 0.0
endif
endfunction
function uN takes integer NB,unit MB returns nothing
local boolean wN
if IsUnitType(MB,UNIT_TYPE_STRUCTURE) then
set wN=GetOwningPlayer(MB)==gO[BS[HS[NB]]]
else
set wN=false
endif
if wN then
set sc[HS[NB]]=sc[HS[NB]]+nSw(GetUnitTypeId(MB))
endif
endfunction
function uyw takes integer Nbw,unit Mbw,string wyw returns nothing
set Ib[Ub]=wyw
set Ub=Ub+1
if Kl[Nbw]==0 then
if Nbw==0 then
call i7("Nullpointer exception when calling ForGroupCallback.callback","when calling error in ClosureForGroups, line 4")
else
call i7("Called ForGroupCallback.callback on invalid object.","when calling error in ClosureForGroups, line 4")
endif
endif
if Kl[Nbw]<=683 then
if Kl[Nbw]<=681 then
if Kl[Nbw]<=680 then
call BB(Nbw,Mbw,"when calling City_closure_impl in ClosureForGroups, line 4")
else
call uN(Nbw,Mbw)
endif
elseif Kl[Nbw]<=682 then
call c6(Nbw,Mbw,"when calling Economy_closure_impl in ClosureForGroups, line 4")
else
set Ib[Ub]="when calling LinkedList_closure_impl in ClosureForGroups, line 4"
set Ub=Ub+1
call Tpw(Ro[Nbw],GetHandleId(Mbw),"when calling add in LinkedList, line 515")
set Ub=Ub-1
endif
elseif Kl[Nbw]<=685 then
if Kl[Nbw]<=684 then
call oww(Nbw,Mbw,"when calling MassControl_closure_impl in ClosureForGroups, line 4")
else
call SetUnitOwner(Mbw,gO[PLAYER_NEUTRAL_AGGRESSIVE],true)
endif
elseif Kl[Nbw]<=686 then
call RemoveUnit(Mbw)
else
call scw(Nbw,Mbw,"when calling RangeChecks_closure_impl in ClosureForGroups, line 4")
endif
set Ub=Ub-1
endfunction
function gaw takes nothing returns nothing
set Ub=0
set Ib[Ub]="ClosureForGroups, line 12"
set Ub=Ub+1
call uyw(xc[vc-1],GetFilterUnit(),"when calling callback in ClosureForGroups, line 12")
set Ub=Ub-1
endfunction
function Gg takes nothing returns boolean
if IsUnitType(GetEnumUnit(),UNIT_TYPE_STRUCTURE)!=false then
return false
endif
return true
endfunction
function gg takes nothing returns nothing
if Gg() then
call SetUnitPositionLoc(GetEnumUnit(),c)
endif
endfunction
function gtw takes nothing returns boolean
return true
endfunction
function Gv takes nothing returns boolean
if GetResearched()!=1378889802 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889802,true)!=1 then
return false
endif
return true
endfunction
function gv takes nothing returns boolean
if not Gv() then
return false
endif
return true
endfunction
function gww takes nothing returns boolean
return true
endfunction
function hF takes nothing returns boolean
if GetUnitTypeId(GetDyingUnit())!=1747988792 then
return false
endif
return true
endfunction
function hH takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function hP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990601,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990599,0)
endfunction
function hT takes nothing returns nothing
local player GT=GetOwningPlayer(GetTriggerUnit())
local player gT=GetOwningPlayer(GetTriggerUnit())
set y[GetPlayerId(GT)+1]=y[GetPlayerId(gT)+1]+10
call UnitAddAbility(GetConstructedStructure(),1093677647)
set GT=null
set gT=null
endfunction
function hX takes nothing returns boolean
local boolean GX
local boolean gX
if GetUnitTypeId(GetSpellAbilityUnit())==1747988553 then
set GX=GetUnitTypeId(GetSpellTargetUnit())==1747989297
else
set GX=false
endif
if GX then
set gX=GetPlayerId(GetOwningPlayer(GetSpellTargetUnit()))==PLAYER_NEUTRAL_AGGRESSIVE
else
set gX=false
endif
return gX
endfunction
function hcw takes nothing returns boolean
return true
endfunction
function hk takes nothing returns boolean
if GetUnitTypeId(GetDyingUnit())!=1747988793 then
return false
endif
return true
endfunction
function hv takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651824,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651825,0)
endfunction
function iD takes nothing returns nothing
call ReplaceUnitBJ(GetEnumUnit(),1747988553,bj_UNIT_STATE_METHOD_RELATIVE)
endfunction
function tE takes nothing returns boolean
if GetResearched()!=1378889808 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889808,true)!=1 then
return false
endif
return true
endfunction
function iE takes nothing returns boolean
if not tE() then
return false
endif
return true
endfunction
function tI takes nothing returns boolean
if GetResearched()!=1378890049 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890049,true)!=2 then
return false
endif
return true
endfunction
function iI takes nothing returns boolean
if not tI() then
return false
endif
return true
endfunction
function iU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651844,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651845,0)
endfunction
function q5 takes string y5 returns boolean
local integer p5
local integer e5
set Ib[Ub]=y5
set Ub=Ub+1
set Ib[Ub]="when calling alloc_Closure in Economy, line 43"
set Ub=Ub+1
if Nl==0 then
if Ml<32768 then
set Ml=Ml+1
set p5=Ml
set wb[p5]=635
else
call i7("Out of memory: Could not create Closure.","when calling error in Economy, line 43")
set p5=0
endif
else
set Nl=Nl-1
set p5=Bl[Nl]
set wb[p5]=635
endif
set Ub=Ub-1
set Ib[Ub]="when calling doPeriodically in Economy, line 43"
set Ub=Ub+1
set Ib[Ub]="when calling start in ClosureTimers, line 36"
set Ub=Ub+1
if wb[p5]==0 then
if p5==0 then
call i7("Nullpointer exception when calling CallbackPeriodic.start","when calling error in ClosureTimers, line 88")
else
call i7("Called CallbackPeriodic.start on invalid object.","when calling error in ClosureTimers, line 88")
endif
endif
call u1(p5,0.333333343,"when calling start in ClosureTimers, line 88")
set Ub=Ub-1-1
set Ib[Ub]="when calling alloc_Closure in Economy, line 50"
set Ub=Ub+1
if Nl==0 then
if Ml<32768 then
set Ml=Ml+1
set e5=Ml
set wb[e5]=636
else
call i7("Out of memory: Could not create Closure.","when calling error in Economy, line 50")
set e5=0
endif
else
set Nl=Nl-1
set e5=Bl[Nl]
set wb[e5]=636
endif
set Ub=Ub-1
set Ib[Ub]="when calling doPeriodically in Economy, line 50"
set Ub=Ub+1
set Ib[Ub]="when calling start in ClosureTimers, line 36"
set Ub=Ub+1
if wb[e5]==0 then
if e5==0 then
call i7("Nullpointer exception when calling CallbackPeriodic.start","when calling error in ClosureTimers, line 88")
else
call i7("Called CallbackPeriodic.start on invalid object.","when calling error in ClosureTimers, line 88")
endif
endif
call u1(e5,10.0,"when calling start in ClosureTimers, line 88")
set Ub=Ub-1-1-1
return true
endfunction
function iaw takes nothing returns boolean
set Ub=0
return q5("Economy, line 1")
endfunction
function ig takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989077 then
return false
endif
return true
endfunction
function th takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988792 then
return false
endif
if GetUnitTypeId(GetSpellTargetUnit())!=1747988787 then
return false
endif
return true
endfunction
function ih takes nothing returns boolean
if not th() then
return false
endif
return true
endfunction
function j0w takes nothing returns nothing
set Po=Po+0.01
endfunction
function kU takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function jU takes nothing returns boolean
if not kU() then
return false
endif
return true
endfunction
function kW takes nothing returns boolean
if GetResearched()!=1378889809 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889809,true)!=2 then
return false
endif
return true
endfunction
function jW takes nothing returns boolean
if not kW() then
return false
endif
return true
endfunction
function jY takes nothing returns nothing
local player GY=GetOwningPlayer(GetAttacker())
local player gY=GetOwningPlayer(GetAttacker())
local player hY
local player FY
local unit kY
set r[GetPlayerId(GY)+1]=r[GetPlayerId(gY)+1]+1
set hY=GetOwningPlayer(GetTriggerUnit())
set FY=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(hY)+1]=r[GetPlayerId(FY)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set kY=GetTriggerUnit()
call SetUnitState(kY,UNIT_STATE_LIFE,GetUnitState(kY,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set GY=null
set gY=null
set hY=null
set FY=null
set kY=null
endfunction
function jZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989833,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989834,0)
endfunction
function dbw takes integer qbw,string abw,string nbw returns nothing
set Ib[Ub]=nbw
set Ub=Ub+1
if Al[qbw]==0 then
if qbw==0 then
call i7("Nullpointer exception when calling City.changeCityName","when calling error in City, line 157")
else
call i7("Called City.changeCityName on invalid object.","when calling error in City, line 157")
endif
endif
set Ib[Ub]="when calling changeCityName in City, line 157"
set Ub=Ub+1
set XS[qbw]=SubString(abw,0,24)
set Ib[Ub]="when calling refreshMultiboardIfPossible in City, line 160"
set Ub=Ub+1
if Al[qbw]==0 then
if qbw==0 then
call i7("Nullpointer exception when calling City.refreshMultiboardIfPossible","when calling error in City, line 234")
else
call i7("Called City.refreshMultiboardIfPossible on invalid object.","when calling error in City, line 234")
endif
endif
call DV(qbw,"when calling refreshMultiboardIfPossible in City, line 234")
set Ub=Ub-1-1-1
endfunction
function k0w takes player G0w returns nothing
local fogstate g0w
local location h0w
local rect F0w
call SetPlayerState(G0w,PLAYER_STATE_RESOURCE_GOLD,99999999)
call SetPlayerState(G0w,PLAYER_STATE_RESOURCE_LUMBER,99999999)
set g0w=FOG_OF_WAR_VISIBLE
set F0w=bj_mapInitialPlayableArea
set h0w=Location(GetRectCenterX(F0w),GetRectCenterY(F0w))
set bj_lastCreatedFogModifier=CreateFogModifierRadiusLoc(G0w,g0w,h0w,999999.00,true,false)
call FogModifierStart(bj_lastCreatedFogModifier)
set g0w=null
set h0w=null
set F0w=null
endfunction
function f4 takes string H1 returns nothing
local string J1
local string array K1
local string L1
local player X1
local integer C1
local integer V1
local integer B1
local string N1
local player M1
local camerafield w4
local player u4
local camerafield r4
local integer s4
local integer t4
local integer i4
local unit S4
local integer c4
local integer o4
local integer O4
local integer l4
local integer b4
local integer y4
local integer p4
local integer e4
local integer q4
local integer a4
local integer n4
local boolean d4
set Ib[Ub]=H1
set Ub=Ub+1
set J1=GetEventPlayerChatString()
set L1=""
set X1=GetTriggerPlayer()
set C1=0
set V1=1
set B1=StringLength(J1)
loop
exitwhen V1>B1
set H1=SubString(J1,V1,V1+1)
if C1>0 then
set d4=V1>StringLength(K1[0])+1
else
set d4=false
endif
if d4 then
set L1=L1+H1
endif
if H1!=" " then
set K1[C1]=K1[C1]+H1
else
set C1=C1+1
endif
set V1=V1+1
endloop
if K1[0]=="far" then
set M1=GetTriggerPlayer()
set w4=CAMERA_FIELD_TARGET_DISTANCE
if GetLocalPlayer()==M1 then
call SetCameraField(w4,3000.0,0.)
endif
elseif K1[0]=="med" then
set u4=GetTriggerPlayer()
set r4=CAMERA_FIELD_TARGET_DISTANCE
if GetLocalPlayer()==u4 then
call SetCameraField(r4,2300.0,0.)
endif
elseif K1[0]=="name" then
call SetPlayerName(GetTriggerPlayer(),L1)
elseif K1[0]=="rename" then
set s4=dO[GetPlayerId(X1)]
set Ib[Ub]="when calling getSelectedCityId in Commands, line 45"
set Ub=Ub+1
if mb[s4]==0 then
if s4==0 then
call i7("Nullpointer exception when calling PlayerStats.getSelectedCityId","when calling error in PlayerStats, line 84")
else
call i7("Called PlayerStats.getSelectedCityId on invalid object.","when calling error in PlayerStats, line 84")
endif
endif
set t4=YO[s4]
set Ub=Ub-1
if t4>=0 and t4<QS then
set i4=AS[t4]
set Ib[Ub]="when calling getCityUnit in Commands, line 47"
set Ub=Ub+1
if Al[i4]==0 then
if i4==0 then
call i7("Nullpointer exception when calling City.getCityUnit","when calling error in City, line 174")
else
call i7("Called City.getCityUnit on invalid object.","when calling error in City, line 174")
endif
endif
set S4=LS[i4]
set Ub=Ub-1
if GetOwningPlayer(S4)!=X1 then
set Ib[Ub]="when calling noteToPlayer in Commands, line 48"
set Ub=Ub+1
call DisplayTimedTextToPlayer(X1,0.,0.,10.0,Cww(X1,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(X1,0.,0.,10.0,"The city you wanted to rename so eagerly doesn't belong to you!")
set Ub=Ub-1
else
call dbw(AS[t4],L1,"when calling changeCityName in Commands, line 50")
endif
endif
elseif K1[0]=="add_mod" then
set c4=dO[GetPlayerId(X1)]
set Ib[Ub]="when calling getSelectedCityId in Commands, line 52"
set Ub=Ub+1
if mb[c4]==0 then
if c4==0 then
call i7("Nullpointer exception when calling PlayerStats.getSelectedCityId","when calling error in PlayerStats, line 84")
else
call i7("Called PlayerStats.getSelectedCityId on invalid object.","when calling error in PlayerStats, line 84")
endif
endif
set o4=YO[c4]
set Ub=Ub-1
if not Uo then
set Ub=Ub-1
set X1=null
set M1=null
set w4=null
set u4=null
set r4=null
set S4=null
return
endif
if o4>=0 and o4<QS then
set N1=K1[1]
if N1=="massacred_pop" then
set O4=AS[o4]
set Ib[Ub]="when calling addModifier in Commands, line 58"
set Ub=Ub+1
if Al[O4]==0 then
if O4==0 then
call i7("Nullpointer exception when calling City.addModifier","when calling error in City, line 348")
else
call i7("Called City.addModifier on invalid object.","when calling error in City, line 348")
endif
endif
call QV(O4,6,"when calling addModifier in City, line 348")
set Ub=Ub-1
elseif N1=="recently_conquered" then
set l4=AS[o4]
set Ib[Ub]="when calling addModifier in Commands, line 60"
set Ub=Ub+1
if Al[l4]==0 then
if l4==0 then
call i7("Nullpointer exception when calling City.addModifier","when calling error in City, line 348")
else
call i7("Called City.addModifier on invalid object.","when calling error in City, line 348")
endif
endif
call QV(l4,0,"when calling addModifier in City, line 348")
set Ub=Ub-1
elseif N1=="recently_revolted" then
set b4=AS[o4]
set Ib[Ub]="when calling addModifier in Commands, line 62"
set Ub=Ub+1
if Al[b4]==0 then
if b4==0 then
call i7("Nullpointer exception when calling City.addModifier","when calling error in City, line 348")
else
call i7("Called City.addModifier on invalid object.","when calling error in City, line 348")
endif
endif
call QV(b4,1,"when calling addModifier in City, line 348")
set Ub=Ub-1
elseif N1=="more_trade_estabilished" then
set y4=AS[o4]
set Ib[Ub]="when calling addModifier in Commands, line 64"
set Ub=Ub+1
if Al[y4]==0 then
if y4==0 then
call i7("Nullpointer exception when calling City.addModifier","when calling error in City, line 348")
else
call i7("Called City.addModifier on invalid object.","when calling error in City, line 348")
endif
endif
call QV(y4,5,"when calling addModifier in City, line 348")
set Ub=Ub-1
elseif N1=="on_fire" then
set p4=AS[o4]
set Ib[Ub]="when calling addModifier in Commands, line 66"
set Ub=Ub+1
if Al[p4]==0 then
if p4==0 then
call i7("Nullpointer exception when calling City.addModifier","when calling error in City, line 348")
else
call i7("Called City.addModifier on invalid object.","when calling error in City, line 348")
endif
endif
call QV(p4,4,"when calling addModifier in City, line 348")
set Ub=Ub-1
elseif N1=="plague_outburst" then
set e4=AS[o4]
set Ib[Ub]="when calling addModifier in Commands, line 68"
set Ub=Ub+1
if Al[e4]==0 then
if e4==0 then
call i7("Nullpointer exception when calling City.addModifier","when calling error in City, line 348")
else
call i7("Called City.addModifier on invalid object.","when calling error in City, line 348")
endif
endif
call QV(e4,3,"when calling addModifier in City, line 348")
set Ub=Ub-1
elseif N1=="population_boom" then
set q4=AS[o4]
set Ib[Ub]="when calling addModifier in Commands, line 70"
set Ub=Ub+1
if Al[q4]==0 then
if q4==0 then
call i7("Nullpointer exception when calling City.addModifier","when calling error in City, line 348")
else
call i7("Called City.addModifier on invalid object.","when calling error in City, line 348")
endif
endif
call QV(q4,2,"when calling addModifier in City, line 348")
set Ub=Ub-1
elseif N1=="prospering" then
set a4=AS[o4]
set Ib[Ub]="when calling addModifier in Commands, line 72"
set Ub=Ub+1
if Al[a4]==0 then
if a4==0 then
call i7("Nullpointer exception when calling City.addModifier","when calling error in City, line 348")
else
call i7("Called City.addModifier on invalid object.","when calling error in City, line 348")
endif
endif
call QV(a4,7,"when calling addModifier in City, line 348")
set Ub=Ub-1
elseif N1=="sieged" then
set n4=AS[o4]
set Ib[Ub]="when calling addModifier in Commands, line 74"
set Ub=Ub+1
if Al[n4]==0 then
if n4==0 then
call i7("Nullpointer exception when calling City.addModifier","when calling error in City, line 348")
else
call i7("Called City.addModifier on invalid object.","when calling error in City, line 348")
endif
endif
call QV(n4,8,"when calling addModifier in City, line 348")
set Ub=Ub-1
endif
endif
elseif K1[0]=="непереводимоесочетаниебукв" then
set Uo=not Uo
set Zo=not Zo
call k0w(gO[0])
endif
set Ub=Ub-1
set X1=null
set M1=null
set w4=null
set u4=null
set r4=null
set S4=null
endfunction
function jaw takes nothing returns nothing
set Ub=0
call f4("Commands, line 85")
endfunction
function jj takes nothing returns boolean
if GetUnitTypeId(GetDyingUnit())!=1747989049 then
return false
endif
return true
endfunction
function kD takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function kI takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651855,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651851,0)
endfunction
function FK takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989317 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function kK takes nothing returns boolean
if not FK() then
return false
endif
return true
endfunction
function FZ takes nothing returns boolean
if GetResearched()!=1378889797 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889797,true)!=1 then
return false
endif
return true
endfunction
function kZ takes nothing returns boolean
if not FZ() then
return false
endif
return true
endfunction
function OOw takes timer cOw,string oOw returns nothing
set Ib[Ub]=oOw
set Ub=Ub+1
if cOw==null then
call i7("Trying to release a null timer","when calling error in TimerUtils, line 37")
set Ub=Ub-1
return
endif
if sOw(cOw,"when calling getData in TimerUtils, line 39")==679645218 then
call i7("ReleaseTimer: Double free!","when calling error in TimerUtils, line 40")
set Ub=Ub-1
return
endif
call Bow(cOw,679645218,"when calling setData in TimerUtils, line 42")
call PauseTimer(cOw)
set bl[yl]=cOw
set yl=yl+1
set Ub=Ub-1
endfunction
function y1 takes integer l1,string b1 returns nothing
set Ib[Ub]=b1
set Ub=Ub+1
set Ib[Ub]="when calling CallbackSingle_onDestroy in ClosureTimers, line 79"
set Ub=Ub+1
call OOw(Ec[l1],"when calling release in ClosureTimers, line 80")
set Ub=Ub-1
set Ib[Ub]="when calling CallbackSingle in ClosureTimers, line 79"
set Ub=Ub+1
if Vl[l1]==0 then
call i7("Double free: object of type CallbackSingle","when calling error in ClosureTimers, line 63")
else
set Ll[Xl]=l1
set Xl=Xl+1
set Vl[l1]=0
endif
set Ub=Ub-1-1
endfunction
function C5 takes integer x5,string v5 returns nothing
local integer m5
local integer Q5
local integer W5
local integer E5
local integer Z5
local integer U5
local integer I5
local unit P5
local player A5
local integer D5
local unit H5
local integer J5
local integer K5
local boolean L5
local integer X5
set Ib[Ub]=v5
set Ub=Ub+1
set m5=Bc[x5]*Nc[x5]
set E5=QS-1
set Z5=(Bc[x5]+1)*Nc[x5]-1
if E5<2147483647 then
set U5=E5
else
set U5=2147483647
endif
if Z5<U5 then
set U5=Z5
endif
set Q5=U5
loop
exitwhen m5>Q5
set I5=AS[m5]
set Ib[Ub]="when calling getCityUnit in Economy, line 31"
set Ub=Ub+1
if Al[I5]==0 then
if I5==0 then
call i7("Nullpointer exception when calling City.getCityUnit","when calling error in City, line 174")
else
call i7("Called City.getCityUnit on invalid object.","when calling error in City, line 174")
endif
endif
set P5=LS[I5]
set Ub=Ub-1
set W5=GetPlayerId(GetOwningPlayer(P5))
set D5=AS[m5]
set Ib[Ub]="when calling getCityUnit in Economy, line 32"
set Ub=Ub+1
if Al[D5]==0 then
if D5==0 then
call i7("Nullpointer exception when calling City.getCityUnit","when calling error in City, line 174")
else
call i7("Called City.getCityUnit on invalid object.","when calling error in City, line 174")
endif
endif
set H5=LS[D5]
set Ub=Ub-1
set A5=GetOwningPlayer(H5)
if GetPlayerSlotState(A5)==PLAYER_SLOT_STATE_PLAYING then
set L5=GetPlayerController(A5)==MAP_CONTROL_USER
else
set L5=false
endif
if L5 then
set X5=Xc[W5]
set J5=AS[m5]
set v5="when calling countTax in Economy, line 33"
set Ib[Ub]="when calling countTax in Economy, line 33"
set Ub=Ub+1
if Al[J5]==0 then
if J5==0 then
call i7("Nullpointer exception when calling City.countTax","when calling error in City, line 256")
else
call i7("Called City.countTax on invalid object.","when calling error in City, line 256")
endif
endif
set K5=pV(J5,"when calling countTax in City, line 256")
set Ub=Ub-1
set Xc[W5]=X5+K5
endif
set m5=m5+1
endloop
set Ub=Ub-1
set P5=null
set A5=null
set H5=null
endfunction
function Bsw takes multiboard Jsw,integer Ksw,integer Lsw,real Xsw,string Csw returns nothing
local multiboarditem Vsw=MultiboardGetItem(Jsw,Lsw,Ksw)
call MultiboardSetItemWidth(Vsw,Xsw)
call MultiboardSetItemValue(Vsw,Csw)
set Vsw=null
endfunction
function Zww takes string Gww_2 returns multiboard
local multiboard gww_2
local integer hww
local integer Fww_2
local integer kww
local integer jww
local integer xww
local integer vww
local integer mww
local integer Qww_2
local string Www_2
local real Eww_2
set Ib[Ub]=Gww_2
set Ub=Ub+1
set bj_lastCreatedMultiboard=CreateMultiboard()
call MultiboardSetRowCount(bj_lastCreatedMultiboard,10)
call MultiboardSetColumnCount(bj_lastCreatedMultiboard,6)
call MultiboardSetTitleText(bj_lastCreatedMultiboard,"Income: 2:00")
call MultiboardDisplay(bj_lastCreatedMultiboard,true)
set gww_2=bj_lastCreatedMultiboard
call MultiboardMinimize(gww_2,true)
call MultiboardSetItemsStyle(gww_2,true,false)
set hww=0
set Fww_2=23
loop
exitwhen hww>Fww_2
if hO==gO[hww]then
call MultiboardDisplay(gww_2,false)
endif
set hww=hww+1
endloop
set kww=0
set jww=9
loop
exitwhen kww>jww
set xww=0
set vww=5
loop
exitwhen xww>vww
set Eww_2=opw(sO[kww],xww,"when calling get in MultiboardCityUpdate, line 14")/1000.
set mww=opw(bO[kww],xww,"when calling get in MultiboardCityUpdate, line 14")
set Ib[Ub]="when calling stringFromIndex in MultiboardCityUpdate, line 14"
set Ub=Ub+1
set Qww_2=el
set Gww_2="when calling loadString in TypeCasting, line 29"
set Ib[Ub]="when calling loadString in TypeCasting, line 29"
set Ub=Ub+1
if bb[Qww_2]==0 then
if Qww_2==0 then
call i7("Nullpointer exception when calling Table.loadString","when calling error in Table, line 57")
else
call i7("Called Table.loadString on invalid object.","when calling error in Table, line 57")
endif
endif
set Www_2=LoadStr(ll,Qww_2,mww)
set Ub=Ub-1-1
call Bsw(gww_2,xww,kww,Eww_2,Www_2)
set xww=xww+1
endloop
set kww=kww+1
endloop
set Ub=Ub-1
set Lf=gww_2
set gww_2=null
return Lf
endfunction
function Lww takes integer Uww,string Iww returns nothing
local integer Pww
local integer Aww
local integer Dww
local integer Hww
local boolean Jww
local multiboard Kww
set Ib[Ub]=Iww
set Ub=Ub+1
set Pww=0
set Aww=23
loop
exitwhen Pww>Aww
set Uww=dO[Pww]
set Iww="when calling isInGame in MultiboardCityUpdate, line 20"
set Ib[Ub]="when calling isInGame in MultiboardCityUpdate, line 20"
set Ub=Ub+1
if mb[Uww]==0 then
if Uww==0 then
call i7("Nullpointer exception when calling PlayerStats.isInGame","when calling error in PlayerStats, line 14")
else
call i7("Called PlayerStats.isInGame on invalid object.","when calling error in PlayerStats, line 14")
endif
endif
set Jww=TO[Uww]
set Ub=Ub-1
if Jww then
set yO[Pww]=Zww("when calling createCoEMultiboard in MultiboardCityUpdate, line 21")
endif
set Pww=Pww+1
endloop
set Dww=0
set Hww=23
loop
exitwhen Dww>Hww
set Kww=yO[Dww]
if hO==gO[Dww]then
call MultiboardDisplay(Kww,true)
endif
set Dww=Dww+1
endloop
set Ub=Ub-1
set Kww=null
endfunction
function Xtw takes integer Ktw returns nothing
local group Ltw
call TriggerRegisterEnterRegion(CreateTrigger(),Ho,Filter(Uf))
call Tcw(EVENT_PLAYER_UNIT_ISSUED_ORDER,null,If,null)
call GroupEnumUnitsInRect(qO,Do,null)
call ForGroup(qO,Pf)
set Ltw=qO
call GroupClear(Ltw)
call DestroyGroup(Ltw)
set Ltw=null
endfunction
function ebw takes string pbw returns nothing
endfunction
function Zbw takes integer Qbw,integer Wbw,string Ebw returns nothing
set Ib[Ub]=Ebw
set Ub=Ub+1
if Al[Qbw]==0 then
if Qbw==0 then
call i7("Nullpointer exception when calling City.getCityModifierOnRemove","when calling error in City, line 404")
else
call i7("Called City.getCityModifierOnRemove on invalid object.","when calling error in City, line 404")
endif
endif
set Ib[Ub]="when calling getCityModifierOnRemove in City, line 404"
set Ub=Ub+1
if hS[Uyw(YS,Wbw,"when calling get in City, line 405")]then
set tc[Qbw]=tc[Qbw]-gS[Uyw(YS,Wbw,"when calling get in City, line 406")]
endif
set ic[Qbw]=ic[Qbw]-xS[Uyw(YS,Wbw,"when calling get in City, line 407")]
set Ub=Ub-1-1
endfunction
function Kyw takes integer Hyw,string Jyw returns nothing
set Ib[Ub]=Jyw
set Ub=Ub+1
if nb[Hyw]==0 then
if Hyw==0 then
call i7("Nullpointer exception when calling LLEntry.LLEntry","when calling error in LinkedList, line 396")
else
call i7("Called LLEntry.LLEntry on invalid object.","when calling error in LinkedList, line 396")
endif
endif
set Ib[Ub]="when calling destroyLLEntry in LinkedList, line 396"
set Ub=Ub+1
set Ib[Ub]="when calling LLEntry in LinkedList, line 396"
set Ub=Ub+1
if nb[Hyw]==0 then
call i7("Double free: object of type LLEntry","when calling error in LinkedList, line 396")
else
set eb[qb]=Hyw
set qb=qb+1
set nb[Hyw]=0
endif
set Ub=Ub-1-1-1
endfunction
function ypw takes integer Opw,integer lpw,string bpw returns nothing
set Ib[Ub]=bpw
set Ub=Ub+1
if hb[Opw]==0 then
if Opw==0 then
call i7("Nullpointer exception when calling LinkedList.removeEntry","when calling error in LinkedList, line 373")
else
call i7("Called LinkedList.removeEntry on invalid object.","when calling error in LinkedList, line 373")
endif
endif
set Ib[Ub]="when calling removeEntry in LinkedList, line 373"
set Ub=Ub+1
set Go[Yo[lpw]]=Go[lpw]
set Yo[Go[lpw]]=Yo[lpw]
call Kyw(lpw,"when calling LLEntry in LinkedList, line 376")
set xo[Opw]=xo[Opw]-1
set Ub=Ub-1-1
endfunction
function e9 takes integer l9,integer b9,string y9 returns nothing
local integer p9
set Ib[Ub]=y9
set Ub=Ub+1
set p9=Go[jo[l9]]
loop
exitwhen p9==jo[l9]
if To[p9]==b9 then
call ypw(l9,p9,"when calling removeEntry in LinkedList, line 126")
set Ub=Ub-1
return
endif
set p9=Go[p9]
endloop
set Ub=Ub-1
endfunction
function oN takes integer rN,integer sN,string tN returns boolean
local integer iN
local boolean SN
local integer cN
set Ib[Ub]=tN
set Ub=Ub+1
set iN=oc[rN]
set Ib[Ub]="when calling has in City, line 359"
set Ub=Ub+1
if hb[iN]==0 then
if iN==0 then
call i7("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call i7("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set SN=O9(iN,sN)
set Ub=Ub-1
if not SN then
set Ub=Ub-1
return false
endif
set cN=oc[rN]
set Ib[Ub]="when calling remove in City, line 361"
set Ub=Ub+1
if hb[cN]==0 then
if cN==0 then
call i7("Nullpointer exception when calling LinkedList.remove","when calling error in LinkedList, line 122")
else
call i7("Called LinkedList.remove on invalid object.","when calling error in LinkedList, line 122")
endif
endif
call e9(cN,sN,"when calling remove in LinkedList, line 122")
set Ub=Ub-1
call Zbw(rN,sN,"when calling getCityModifierOnRemove in City, line 363")
set Ub=Ub-1
return true
endfunction
function r3 takes integer MM returns nothing
local integer w3
local trigger u3
call TriggerAddCondition(ql,Condition(ff))
call TriggerAddCondition(al,Condition(Rf))
call TriggerAddAction(yc,Tf)
call TriggerAddAction(pc,Yf)
call TriggerAddAction(ec,Gf)
set w3=0
set MM=bj_MAX_PLAYERS-1
loop
exitwhen w3>MM
call TriggerRegisterPlayerEvent(pc,gO[w3],EVENT_PLAYER_LEAVE)
set u3=ec
call TriggerRegisterPlayerEvent(u3,gO[w3],EVENT_PLAYER_ARROW_DOWN_DOWN)
call TriggerRegisterPlayerEvent(u3,gO[w3],EVENT_PLAYER_ARROW_DOWN_UP)
call TriggerRegisterPlayerEvent(u3,gO[w3],EVENT_PLAYER_ARROW_UP_DOWN)
call TriggerRegisterPlayerEvent(u3,gO[w3],EVENT_PLAYER_ARROW_UP_UP)
call TriggerRegisterPlayerEvent(u3,gO[w3],EVENT_PLAYER_ARROW_LEFT_DOWN)
call TriggerRegisterPlayerEvent(u3,gO[w3],EVENT_PLAYER_ARROW_LEFT_UP)
call TriggerRegisterPlayerEvent(u3,gO[w3],EVENT_PLAYER_ARROW_RIGHT_DOWN)
call TriggerRegisterPlayerEvent(u3,gO[w3],EVENT_PLAYER_ARROW_RIGHT_UP)
call TriggerRegisterPlayerEvent(u3,gO[w3],EVENT_PLAYER_END_CINEMATIC)
call TriggerRegisterPlayerEvent(u3,gO[w3],EVENT_PLAYER_MOUSE_UP)
call TriggerRegisterPlayerEvent(u3,gO[w3],EVENT_PLAYER_MOUSE_DOWN)
call TriggerRegisterPlayerEvent(u3,gO[w3],EVENT_PLAYER_MOUSE_MOVE)
call TriggerRegisterPlayerChatEvent(u3,gO[w3],"",false)
set w3=w3+1
endloop
call Tcw(EVENT_PLAYER_UNIT_SPELL_EFFECT,null,gf,null)
set u3=null
endfunction
function Q3 takes group k3,integer j3,string x3 returns nothing
local group v3
local unit m3
set Ib[Ub]=x3
set Ub=Ub+1
set v3=k3
loop
exitwhen FirstOfGroup(v3)==null
set m3=FirstOfGroup(v3)
call GroupRemoveUnit(v3,m3)
call uyw(j3,m3,"when calling callback in ClosureForGroups, line 31")
endloop
set Ub=Ub-1
set v3=null
set m3=null
endfunction
function ySw takes string OSw returns nothing
local group lSw
local integer bSw
set Ib[Ub]=OSw
set Ub=Ub+1
call RemoveUnit(QO)
set lSw=mO
set Ib[Ub]="when calling alloc_Closure in Preloader, line 45"
set Ub=Ub+1
if Hl==0 then
if Jl<32768 then
set Jl=Jl+1
set bSw=Jl
set Kl[bSw]=686
else
call i7("Out of memory: Could not create Closure.","when calling error in Preloader, line 45")
set bSw=0
endif
else
set Hl=Hl-1
set bSw=Dl[Hl]
set Kl[bSw]=686
endif
set Ub=Ub-1
call Q3(lSw,bSw,"when calling forEachFrom in Preloader, line 45")
call DestroyGroup(mO)
set mO=null
set Ub=Ub-1
set lSw=null
endfunction
function yyw takes integer cyw,string oyw returns nothing
local integer Oyw
local integer lyw
local integer byw
set Ib[Ub]=oyw
set Ub=Ub+1
if Vl[cyw]==0 then
if cyw==0 then
call i7("Nullpointer exception when calling CallbackSingle.call","when calling error in ClosureTimers, line 65")
else
call i7("Called CallbackSingle.call on invalid object.","when calling error in ClosureTimers, line 65")
endif
endif
if Vl[cyw]<=645 then
if Vl[cyw]<=642 then
if Vl[cyw]<=640 then
if Vl[cyw]<=639 then
set Ib[Ub]="when calling City_closure_impl in ClosureTimers, line 65"
set Ub=Ub+1
set Oyw=JS[cyw]
set lyw=KS[cyw]
set Ib[Ub]="when calling removeModifier in City, line 355"
set Ub=Ub+1
if Al[Oyw]==0 then
if Oyw==0 then
call i7("Nullpointer exception when calling City.removeModifier","when calling error in City, line 358")
else
call i7("Called City.removeModifier on invalid object.","when calling error in City, line 358")
endif
endif
call oN(Oyw,lyw,"when calling removeModifier in City, line 358")
set Ub=Ub-1-1
else
call r3(cyw)
endif
elseif Vl[cyw]<=641 then
set Qc=Qc+50
else
set Qc=Qc*2
endif
elseif Vl[cyw]<=644 then
if Vl[cyw]<=643 then
set Qc=Qc/2
set byw=Qc
if byw!=250 then
call ebw("Expected <"+I2S(250)+">, Actual <"+I2S(byw)+">")
endif
else
call C5(cyw,"when calling Economy_closure_impl in ClosureTimers, line 65")
endif
else
call IssueImmediateOrderById(no[cyw],851976)
endif
elseif Vl[cyw]<=649 then
if Vl[cyw]<=647 then
if Vl[cyw]<=646 then
call IssueImmediateOrderById(fo[cyw],851976)
else
call IssuePointOrderById(Mo[cyw],wO[cyw],uO[cyw],rO[cyw])
endif
elseif Vl[cyw]<=648 then
call Lww(cyw,"when calling MultiboardCityUpdate_closure_impl in ClosureTimers, line 65")
else
call IssueImmediateOrderById(pO[cyw],851976)
endif
elseif Vl[cyw]<=651 then
if Vl[cyw]<=650 then
call Xtw(cyw)
else
set Ib[Ub]="when calling Preloader_closure_impl in ClosureTimers, line 65"
set Ub=Ub+1
call ySw("when calling finishPreload in Preloader, line 54")
set Ub=Ub-1
endif
else
call IssueImmediateOrderById(EO[cyw],851976)
endif
set Ub=Ub-1
endfunction
function O1 takes string c1 returns nothing
local integer o1
set Ib[Ub]=c1
set Ub=Ub+1
set o1=sOw(GetExpiredTimer(),"when calling getData in ClosureTimers, line 75")
call yyw(o1,"when calling call in ClosureTimers, line 76")
set Ib[Ub]="when calling CallbackSingle in ClosureTimers, line 77"
set Ub=Ub+1
if Vl[o1]==0 then
if o1==0 then
call i7("Nullpointer exception when calling CallbackSingle.CallbackSingle","when calling error in ClosureTimers, line 63")
else
call i7("Called CallbackSingle.CallbackSingle on invalid object.","when calling error in ClosureTimers, line 63")
endif
endif
call y1(o1,"when calling destroyCallbackSingle in ClosureTimers, line 63")
set Ub=Ub-1-1
endfunction
function kaw takes nothing returns nothing
set Ub=0
set Ib[Ub]="ClosureTimers, line 68"
set Ub=Ub+1
call O1("when calling staticCallback in ClosureTimers, line 70")
set Ub=Ub-1
endfunction
function kj takes nothing returns nothing
call SetMapFlag(MAP_LOCK_RESOURCE_TRADING,false)
endfunction
function kx takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988565,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988563,0)
endfunction
function l7 takes nothing returns nothing
call GroupAddUnit(bo,GetEnumUnit())
endfunction
function lA takes nothing returns nothing
local integer sA=1
local integer tA=1751277938
local player iA=GetOwningPlayer(GetConstructedStructure())
local rect OA=bj_mapInitialPlayableArea
local location oA=Location(GetRectCenterX(OA),GetRectCenterY(OA))
local location SA=Location(GetLocationX(oA)+100000000.00,GetLocationY(oA)+1000000000.00)
local real cA=bj_UNIT_FACING
call GroupClear(bj_lastCreatedGroup)
loop
set sA=sA-1
exitwhen sA<0
call CreateUnitAtLocSaveLast(iA,tA,SA,cA)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
call ShowUnit(bj_lastCreatedUnit,false)
set q[GetPlayerId(GetOwningPlayer(GetConstructedStructure()))+1]=true
set iA=null
set SA=null
set oA=null
set OA=null
endfunction
function OH takes nothing returns boolean
if GetUnitTypeId(GetConstructedStructure())!=1747990351 then
return false
endif
return true
endfunction
function lH takes nothing returns boolean
if not OH() then
return false
endif
return true
endfunction
function OP takes nothing returns boolean
if GetResearched()!=1378890054 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890054,true)!=2 then
return false
endif
return true
endfunction
function lP takes nothing returns boolean
if not OP() then
return false
endif
return true
endfunction
function OY takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989045 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function lY takes nothing returns boolean
if not OY() then
return false
endif
return true
endfunction
function N9 takes string E9 returns nothing
local integer Z9
local integer U9
local real I9
local player P9
local integer A9
local integer D9
local integer H9
local boolean J9
local location K9
local location L9
local integer X9
local real C9
local real V9
local real B9
set Ib[Ub]=E9
set Ub=Ub+1
set Z9=24
set U9=6
set I9=100.0
loop
exitwhen Z9<=0
set A9=1
set D9=U9
loop
exitwhen A9>D9
set C9=A9*6.28318/U9
set V9=311.2+I9*Cos(C9)
set B9=5166.7+I9*Sin(C9)
set P9=gO[24-Z9+A9-1]
set H9=dO[GetPlayerId(P9)]
set E9="when calling isInGame in MainInit, line 55"
set Ib[Ub]="when calling isInGame in MainInit, line 55"
set Ub=Ub+1
if mb[H9]==0 then
if H9==0 then
call i7("Nullpointer exception when calling PlayerStats.isInGame","when calling error in PlayerStats, line 14")
else
call i7("Called PlayerStats.isInGame on invalid object.","when calling error in PlayerStats, line 14")
endif
endif
set J9=TO[H9]
set Ub=Ub-1
if J9 then
set K9=Location(V9,B9)
set L9=Location(311.2,5166.7)
call CreateNUnitsAtLoc(1,1747988554,P9,K9,bj_RADTODEG*Atan2(GetLocationY(L9)-GetLocationY(K9),GetLocationX(L9)-GetLocationX(K9)))
endif
set A9=A9+1
endloop
set I9=I9+50.0
set Z9=Z9-U9
set U9=U9+2
if Z9<2147483647 then
set X9=Z9
else
set X9=2147483647
endif
if U9<X9 then
set X9=U9
endif
set U9=X9
endloop
set Ub=Ub-1
set P9=null
set K9=null
set L9=null
endfunction
function Y0w takes nothing returns nothing
local rect d0w=bj_mapInitialPlayableArea
local group f0w=CreateGroup()
local group n0w
local unit R0w
local boolean T0w
call GroupEnumUnitsInRect(f0w,d0w,null)
call DestroyBoolExpr(null)
set bo=CreateGroup()
call ForGroup(f0w,Zf)
set n0w=bo
loop
exitwhen FirstOfGroup(n0w)==null
set R0w=FirstOfGroup(n0w)
call GroupRemoveUnit(n0w,R0w)
if GetUnitTypeId(R0w)==1211118391 then
set T0w=true
else
set T0w=GetUnitTypeId(R0w)==1211118406
endif
if T0w then
call SetUnitAcquireRange(R0w,340282366920938000000000000000000000000.)
endif
endloop
call GroupClear(n0w)
call DestroyGroup(n0w)
set n0w=null
set d0w=null
set f0w=null
set R0w=null
endfunction
function cow takes rect wow,string uow,integer row,integer sow,string tow returns nothing
local group iow
local unit Sow
set Ib[Ub]=tow
set Ub=Ub+1
set iow=CreateGroup()
call GroupEnumUnitsInRect(iow,wow,null)
call DestroyBoolExpr(null)
set Sow=FirstOfGroup(iow)
call GroupRemoveUnit(iow,Sow)
set AS[QS]=xN(Sow,uow,row,sow,"when calling new_City in SettingCities, line 8")
set Ub=Ub-1
set iow=null
set Sow=null
endfunction
function Aaw takes integer Zaw,integer Uaw,integer Iaw,string Paw returns nothing
if Uaw<0 or Uaw>=24 then
call i7("Index out of Bounds",Paw)
elseif Uaw<=11 then
if Uaw<=5 then
if Uaw<=2 then
if Uaw<=1 then
if Uaw<=0 then
set Hb[Zaw]=Iaw
else
set Jb[Zaw]=Iaw
endif
else
set Kb[Zaw]=Iaw
endif
elseif Uaw<=4 then
if Uaw<=3 then
set Lb[Zaw]=Iaw
else
set Xb[Zaw]=Iaw
endif
else
set Cb[Zaw]=Iaw
endif
elseif Uaw<=8 then
if Uaw<=7 then
if Uaw<=6 then
set Vb[Zaw]=Iaw
else
set Bb[Zaw]=Iaw
endif
else
set Nb[Zaw]=Iaw
endif
elseif Uaw<=10 then
if Uaw<=9 then
set Mb[Zaw]=Iaw
else
set wy[Zaw]=Iaw
endif
else
set uy[Zaw]=Iaw
endif
elseif Uaw<=17 then
if Uaw<=14 then
if Uaw<=13 then
if Uaw<=12 then
set ry[Zaw]=Iaw
else
set sy[Zaw]=Iaw
endif
else
set ty[Zaw]=Iaw
endif
elseif Uaw<=16 then
if Uaw<=15 then
set iy[Zaw]=Iaw
else
set Sy[Zaw]=Iaw
endif
else
set cy[Zaw]=Iaw
endif
elseif Uaw<=20 then
if Uaw<=19 then
if Uaw<=18 then
set oy[Zaw]=Iaw
else
set Oy[Zaw]=Iaw
endif
else
set ly[Zaw]=Iaw
endif
elseif Uaw<=22 then
if Uaw<=21 then
set by[Zaw]=Iaw
else
set yy[Zaw]=Iaw
endif
else
set py[Zaw]=Iaw
endif
endfunction
function wSw takes player Jiw,string Kiw returns integer
local integer Liw
local integer Xiw
local integer Ciw
local player Viw
local integer Biw
local integer Niw
local boolean Miw
set Ib[Ub]=Kiw
set Ub=Ub+1
set Ib[Ub]="when calling PlayerStats in PlayerStats, line 129"
set Ub=Ub+1
if xb==0 then
if vb<32768 then
set vb=vb+1
set Xiw=vb
set mb[Xiw]=711
else
call i7("Out of memory: Could not create PlayerStats.","when calling error in PlayerStats, line 6")
set Xiw=0
endif
else
set xb=xb-1
set Xiw=jb[xb]
set mb[Xiw]=711
endif
set Ub=Ub-1
set Liw=Xiw
set Ciw=Xiw
set Viw=Jiw
set Ib[Ub]="when calling construct_PlayerStats in PlayerStats, line 129"
set Ub=Ub+1
set TO[Xiw]=false
set GO[Xiw]=0
set fO[Xiw]=-1
set YO[Xiw]=-1
set RO[Xiw]=Jiw
if GetPlayerSlotState(Jiw)==PLAYER_SLOT_STATE_PLAYING then
set Miw=GetPlayerController(Jiw)==MAP_CONTROL_USER
else
set Miw=false
endif
set TO[Xiw]=Miw
set Biw=0
set Niw=23
loop
exitwhen Biw>Niw
if gO[Biw]==Viw then
call Aaw(Ciw,Biw,-1,"when writing array PlayerStats_alliance_states in PlayerStats, line 137")
else
call Aaw(Ciw,Biw,bj_ALLIANCE_UNALLIED,"when writing array PlayerStats_alliance_states in PlayerStats, line 139")
endif
set Biw=Biw+1
endloop
set Ub=Ub-1-1
set Viw=null
return Liw
endfunction
function W9 takes string T9 returns boolean
local integer Y9
local integer G9
local trigger g9
local integer h9
local integer F9
local integer k9
local player j9
local integer x9
local player v9
local boolean m9
local boolean Q9
set Ib[Ub]=T9
set Ub=Ub+1
set vo[0]="You're playing |cffffff65Crusade over Europe|r.\nA grand strategy medieval game inspired by many games and genres.\nCreate alliances and dissolve them just as easily, declare war on your neighbours and |cfff5da16Conquer Europe|r.\n|cffff0000To skip the tutorial, press ESC|r"
set vo[1]="Use your |cffff8040Settler|r to choose the location of your Kingdom, use the ability |cffffff80Create Capitol|r on any Town Hall to build your Capitol.\nChoose your postion carefully and be mindful of the other players positions."
set vo[2]="|cfff5da16Mechanics|r\n\n|cff80ff00Supply & Nutrition:|r All units and building will continuously lose Hit Points if not supplied by |cff00f7ffCities or Supply Horses|r.\n|cffff0000Public Order|r represents satisfaction level of population of each city and can be checked in top-right menu.\nLow Public Order will cause revolts."
set vo[3]="|cfff5da16Combat & Diplomacy|r\n\nBuild your army but keep in mind that every army will have its weaknesses. Use general's Mass Control ability to quickly manipulate your army.\nUse |cffffff80Diplomacy|r (F1) menu to create Alliances and Declare War."
set vo[4]="|cfff5da16Economy|r\n\n|cffffff80Florins|r (Gold) are given each Turn (2 minutes), you can increase the amount generated by capturing |cffffff80Cities|r or precious |cffffff80Ores|r and upgrading them into |cffffff80Mines|r.\nLumber is harvested from Trees.\n|cffff0000You can check public order of currently selected city and your income in top-right menu|r"
set h9=0
set F9=0
set k9=23
loop
exitwhen F9>k9
set j9=gO[F9]
if GetPlayerSlotState(j9)==PLAYER_SLOT_STATE_PLAYING then
set m9=GetPlayerController(j9)==MAP_CONTROL_USER
else
set m9=false
endif
if m9 then
set h9=h9+1
endif
set F9=F9+1
endloop
set Qo=h9
if Zo then
call Oww("Debug info is enabled. Only for Red.")
endif
if Uo then
call DisplayTimedTextToPlayer(hO,0.,0.,45.,"Debug mode is on.")
endif
set Ib[Ub]="when calling SetupCities in MainInit, line 111"
set Ub=Ub+1
call cow(F,"Adrianopolis",3,1,"when calling NewCity in SettingCities, line 27")
call cow(cs,"Arta",3,0,"when calling NewCity in SettingCities, line 28")
call cow(Nr,"Athens",3,1,"when calling NewCity in SettingCities, line 29")
call cow(Br,"Ragusa",3,0,"when calling NewCity in SettingCities, line 30")
call cow(bs,"Canakkale",3,0,"when calling NewCity in SettingCities, line 31")
call cow(os,"Candia",3,0,"when calling NewCity in SettingCities, line 32")
call cow(j,"Constantinople",3,4,"when calling NewCity in SettingCities, line 33")
call cow(Ss,"Corinth",3,0,"when calling NewCity in SettingCities, line 34")
call cow(h,"Durazzo",3,0,"when calling NewCity in SettingCities, line 35")
call cow(us,"Nikomedeia",3,0,"when calling NewCity in SettingCities, line 36")
call cow(bu,"Kutaisi",3,0,"when calling NewCity in SettingCities, line 37")
call cow(Hw,"Nicae",3,2,"when calling NewCity in SettingCities, line 38")
call cow(Uw,"Nicosia",3,0,"when calling NewCity in SettingCities, line 39")
call cow(Mr,"Rhodes",3,0,"when calling NewCity in SettingCities, line 40")
call cow(v,"Scopia",3,0,"when calling NewCity in SettingCities, line 41")
call cow(Aw,"Smyrna",3,0,"when calling NewCity in SettingCities, line 42")
call cow(yu,"Tbilisi",3,0,"when calling NewCity in SettingCities, line 43")
call cow(Zw,"Trebizond",3,1,"when calling NewCity in SettingCities, line 44")
call cow(k,"Thessalonika",3,3,"when calling NewCity in SettingCities, line 45")
call cow(Wu,"Astrakhan'",1,2,"when calling NewCity in SettingCities, line 49")
call cow(gw,"Azaq",1,0,"when calling NewCity in SettingCities, line 50")
call cow(su,"Baia",1,0,"when calling NewCity in SettingCities, line 51")
call cow(ou,"Bryansk",1,0,"when calling NewCity in SettingCities, line 52")
call cow(tw,"Caffa",1,0,"when calling NewCity in SettingCities, line 53")
call cow(I,"Constanta",1,0,"when calling NewCity in SettingCities, line 54")
call cow(Su,"Dnipro",1,0,"when calling NewCity in SettingCities, line 55")
call cow(dw,"Halych",1,0,"when calling NewCity in SettingCities, line 56")
call cow(hw,"Kiev",1,2,"when calling NewCity in SettingCities, line 57")
call cow(M,"Konigsberg",1,0,"when calling NewCity in SettingCities, line 58")
call cow(rw,"Hrodna",1,0,"when calling NewCity in SettingCities, line 59")
call cow(Fw,"Minsk",1,1,"when calling NewCity in SettingCities, line 60")
call cow(cu,"Moscow",1,0,"when calling NewCity in SettingCities, line 61")
call cow(cw,"Novgorod",1,0,"when calling NewCity in SettingCities, line 62")
call cow(iu,"Olesh'e",1,0,"when calling NewCity in SettingCities, line 63")
call cow(ow,"Polotsk",1,0,"when calling NewCity in SettingCities, line 64")
call cow(iw,"Pskov",1,0,"when calling NewCity in SettingCities, line 65")
call cow(Sw,"Reval",1,0,"when calling NewCity in SettingCities, line 66")
call cow(ww,"Riga",1,1,"when calling NewCity in SettingCities, line 67")
call cow(ys,"Bulgar",1,0,"when calling NewCity in SettingCities, line 68")
call cow(Eu,"Ryazan'",1,0,"when calling NewCity in SettingCities, line 69")
call cow(lu,"Sarkel",1,0,"when calling NewCity in SettingCities, line 70")
call cow(kw,"Smolensk",1,1,"when calling NewCity in SettingCities, line 71")
call cow(X,"Sofia",1,0,"when calling NewCity in SettingCities, line 72")
call cow(P,"Targovitse",1,1,"when calling NewCity in SettingCities, line 73")
call cow(ru,"Tmutarakan'",1,0,"when calling NewCity in SettingCities, line 74")
call cow(ws,"Turku",1,0,"when calling NewCity in SettingCities, line 75")
call cow(sw,"Vilnius",1,1,"when calling NewCity in SettingCities, line 76")
call cow(tu,"Zhytomir",1,0,"when calling NewCity in SettingCities, line 77")
call cow(nu,"Acre",2,2,"when calling NewCity in SettingCities, line 81")
call cow(Qw,"Adana",2,0,"when calling NewCity in SettingCities, line 82")
call cow(ns,"Alamut",2,0,"when calling NewCity in SettingCities, line 83")
call cow(du,"Al-Aqaba",2,0,"when calling NewCity in SettingCities, line 84")
call cow(Mw,"Alexandria",2,2,"when calling NewCity in SettingCities, line 85")
call cow(Lw,"Algiers",2,0,"when calling NewCity in SettingCities, line 86")
call cow(Dw,"Ankara",2,1,"when calling NewCity in SettingCities, line 87")
call cow(Ew,"Antioch",2,2,"when calling NewCity in SettingCities, line 88")
call cow(rs,"Badajoz",2,0,"when calling NewCity in SettingCities, line 89")
call cow(ls,"Baghdad",2,4,"when calling NewCity in SettingCities, line 90")
call cow(ds,"Baku",2,0,"when calling NewCity in SettingCities, line 91")
call cow(Vw,"Benghazi",2,1,"when calling NewCity in SettingCities, line 92")
call cow(qs,"Beleb-el-Anab",2,0,"when calling NewCity in SettingCities, line 93")
call cow(uu,"Cairo",2,3,"when calling NewCity in SettingCities, line 94")
call cow(Yr,"Cordoba",2,4,"when calling NewCity in SettingCities, line 95")
call cow(pu,"Damascus",2,2,"when calling NewCity in SettingCities, line 96")
call cow(wu,"Damietta",2,1,"when calling NewCity in SettingCities, line 97")
call cow(Tu,"Diyarbakir",2,0,"when calling NewCity in SettingCities, line 98")
call cow(Pw,"Edessa",2,1,"when calling NewCity in SettingCities, line 99")
call cow(Yu,"Erez",2,1,"when calling NewCity in SettingCities, line 100")
call cow(Jw,"Fes",2,3,"when calling NewCity in SettingCities, line 101")
call cow(qu,"Gaza",2,0,"when calling NewCity in SettingCities, line 102")
call cow(Tr,"Granada",2,2,"when calling NewCity in SettingCities, line 103")
call cow(vw,"Isparta",2,0,"when calling NewCity in SettingCities, line 104")
call cow(Iw,"Jerusalem",2,3,"when calling NewCity in SettingCities, line 105")
call cow(mw,"Kayseri",2,1,"when calling NewCity in SettingCities, line 106")
call cow(Os,"Kerak",2,0,"when calling NewCity in SettingCities, line 107")
call cow(fs,"Kermanshah",2,0,"when calling NewCity in SettingCities, line 108")
call cow(Ww,"Konya",2,0,"when calling NewCity in SettingCities, line 109")
call cow(cr,"Lisbon",2,0,"when calling NewCity in SettingCities, line 110")
call cow(Ir,"Luxor",2,0,"when calling NewCity in SettingCities, line 111")
call cow(ir,"Madrid",2,0,"when calling NewCity in SettingCities, line 112")
call cow(Xw,"Mahdya",2,0,"when calling NewCity in SettingCities, line 113")
call cow(Ur,"Marrakesh",2,3,"when calling NewCity in SettingCities, line 114")
call cow(Nw,"Medina",2,2,"when calling NewCity in SettingCities, line 115")
call cow(es,"Melilla",2,0,"when calling NewCity in SettingCities, line 116")
call cow(au,"Mosul",2,1,"when calling NewCity in SettingCities, line 117")
call cow(Gr,"Murcia",2,1,"when calling NewCity in SettingCities, line 118")
call cow(Kw,"Oran",2,0,"when calling NewCity in SettingCities, line 119")
call cow(Qu,"Palma",2,1,"when calling NewCity in SettingCities, line 120")
call cow(fu,"Quarisiya",2,1,"when calling NewCity in SettingCities, line 121")
call cow(Zr,"Silves",2,0,"when calling NewCity in SettingCities, line 122")
call cow(xw,"Sinop",2,0,"when calling NewCity in SettingCities, line 123")
call cow(Ru,"Tamiya",2,0,"when calling NewCity in SettingCities, line 124")
call cow(eu,"Tartus",2,0,"when calling NewCity in SettingCities, line 125")
call cow(as,"Tabriz",2,0,"when calling NewCity in SettingCities, line 126")
call cow(Cw,"Tripoli",2,1,"when calling NewCity in SettingCities, line 127")
call cow(Gw,"Tunis",2,1,"when calling NewCity in SettingCities, line 128")
call cow(gr,"Valencia",2,0,"when calling NewCity in SettingCities, line 129")
call cow(Ou,"Yerevan",2,0,"when calling NewCity in SettingCities, line 130")
call cow(K,"Aarhus",0,1,"when calling NewCity in SettingCities, line 134")
call cow(Uu,"Aberdeen",0,1,"when calling NewCity in SettingCities, line 135")
call cow(Dr,"Ajaccio",0,0,"when calling NewCity in SettingCities, line 136")
call cow(fr,"Ancona",0,1,"when calling NewCity in SettingCities, line 137")
call cow(Ar,"Angers",0,0,"when calling NewCity in SettingCities, line 138")
call cow(pr,"Antwerp",0,0,"when calling NewCity in SettingCities, line 139")
call cow(rr,"Barcelona",0,1,"when calling NewCity in SettingCities, line 140")
call cow(Lr,"Bari",0,0,"when calling NewCity in SettingCities, line 141")
call cow(D,"Belgrade",0,1,"when calling NewCity in SettingCities, line 142")
call cow(Qr,"Bergen",0,1,"when calling NewCity in SettingCities, line 143")
call cow(Fr,"Bern",0,0,"when calling NewCity in SettingCities, line 144")
call cow(nr,"Bologna",0,1,"when calling NewCity in SettingCities, line 145")
call cow(wr,"Bordeaux",0,1,"when calling NewCity in SettingCities, line 146")
call cow(A,"Brasov",0,0,"when calling NewCity in SettingCities, line 147")
call cow(yr,"Bruges",0,0,"when calling NewCity in SettingCities, line 148")
call cow(R,"Burgh",0,0,"when calling NewCity in SettingCities, line 149")
call cow(tr,"Burgos",0,1,"when calling NewCity in SettingCities, line 150")
call cow(Xu,"Caen",0,0,"when calling NewCity in SettingCities, line 151")
call cow(Hu,"Caenarfon",0,0,"when calling NewCity in SettingCities, line 152")
call cow(Hr,"Cagliari",0,0,"when calling NewCity in SettingCities, line 153")
call cow(T,"Cardiff",0,0,"when calling NewCity in SettingCities, line 154")
call cow(Nu,"Clermont",0,1,"when calling NewCity in SettingCities, line 155")
call cow(xu,"Cologne",0,1,"when calling NewCity in SettingCities, line 156")
call cow(Bu,"Dijon",0,0,"when calling NewCity in SettingCities, line 157")
call cow(Au,"Dublin",0,0,"when calling NewCity in SettingCities, line 158")
call cow(Zu,"Edinburgh",0,0,"when calling NewCity in SettingCities, line 159")
call cow(mr,"Eikundarsund",0,0,"when calling NewCity in SettingCities, line 160")
call cow(W,"Esztergom",0,1,"when calling NewCity in SettingCities, line 161")
call cow(Lu,"Exeter",0,0,"when calling NewCity in SettingCities, line 162")
call cow(uw,"Gdansk",0,0,"when calling NewCity in SettingCities, line 163")
call cow(H,"Flensburg",0,0,"when calling NewCity in SettingCities, line 164")
call cow(vu,"Frankfurt",0,1,"when calling NewCity in SettingCities, line 165")
call cow(Y,"Galway",0,0,"when calling NewCity in SettingCities, line 166")
call cow(er,"Genoa",0,2,"when calling NewCity in SettingCities, line 167")
call cow(Yw,"Groningen",0,0,"when calling NewCity in SettingCities, line 168")
call cow(ju,"Innsbruck",0,0,"when calling NewCity in SettingCities, line 169")
call cow(Iu,"Inverness",0,0,"when calling NewCity in SettingCities, line 170")
call cow(Du,"Desmond",0,0,"when calling NewCity in SettingCities, line 171")
call cow(Kr,"Reggio",0,0,"when calling NewCity in SettingCities, line 173")
call cow(is,"Kalmar",0,0,"when calling NewCity in SettingCities, line 174")
call cow(B,"Kassa",0,0,"when calling NewCity in SettingCities, line 175")
call cow(Z,"Krakow",0,2,"when calling NewCity in SettingCities, line 176")
call cow(sr,"Leon",0,1,"when calling NewCity in SettingCities, line 177")
call cow(Ju,"London",0,0,"when calling NewCity in SettingCities, line 178")
call cow(jr,"Lund",0,0,"when calling NewCity in SettingCities, line 179")
call cow(kr,"Lyon",0,0,"when calling NewCity in SettingCities, line 180")
call cow(L,"Madgeburg",0,0,"when calling NewCity in SettingCities, line 181")
call cow(br,"Marsellie",0,1,"when calling NewCity in SettingCities, line 182")
call cow(Vr,"Metz",0,0,"when calling NewCity in SettingCities, line 183")
call cow(qr,"Milan",0,1,"when calling NewCity in SettingCities, line 184")
call cow(Jr,"Naples",0,1,"when calling NewCity in SettingCities, line 185")
call cow(hr,"Nuremburg",0,0,"when calling NewCity in SettingCities, line 186")
call cow(Er,"Nykoping",0,0,"when calling NewCity in SettingCities, line 187")
call cow(ss,"Oporto",0,0,"when calling NewCity in SettingCities, line 188")
call cow(vr,"Oslo",0,1,"when calling NewCity in SettingCities, line 189")
call cow(ps,"Buda",0,1,"when calling NewCity in SettingCities, line 190")
call cow(Xr,"Palermo",0,3,"when calling NewCity in SettingCities, line 191")
call cow(lr,"Pamplona",0,0,"when calling NewCity in SettingCities, line 192")
call cow(Vu,"Paris",0,1,"when calling NewCity in SettingCities, line 193")
call cow(dr,"Pisa",0,0,"when calling NewCity in SettingCities, line 194")
call cow(C,"Plock",0,0,"when calling NewCity in SettingCities, line 195")
call cow(V,"Poznan",0,1,"when calling NewCity in SettingCities, line 196")
call cow(Q,"Prague",0,0,"when calling NewCity in SettingCities, line 197")
call cow(g,"Zadar",0,0,"when calling NewCity in SettingCities, line 198")
call cow(Pr,"Rennes",0,0,"when calling NewCity in SettingCities, line 199")
call cow(Cu,"Rheims",0,0,"when calling NewCity in SettingCities, line 200")
call cow(Rr,"Rome",0,1,"when calling NewCity in SettingCities, line 201")
call cow(J,"Roskilde",0,0,"when calling NewCity in SettingCities, line 202")
call cow(Sr,"Salamanca",0,0,"when calling NewCity in SettingCities, line 203")
call cow(ku,"Salzburg",0,0,"when calling NewCity in SettingCities, line 204")
call cow(xr,"Skara",0,0,"when calling NewCity in SettingCities, line 205")
call cow(E,"Stettin",0,0,"when calling NewCity in SettingCities, line 206")
call cow(ts,"Stockholm",0,1,"when calling NewCity in SettingCities, line 207")
call cow(Cr,"Syracuse",0,0,"when calling NewCity in SettingCities, line 208")
call cow(Mu,"Toulouse",0,0,"when calling NewCity in SettingCities, line 209")
call cow(N,"Varad",0,0,"when calling NewCity in SettingCities, line 210")
call cow(ar,"Venice",0,2,"when calling NewCity in SettingCities, line 211")
call cow(m,"Vienna",0,0,"when calling NewCity in SettingCities, line 212")
call cow(Wr,"Visby",0,0,"when calling NewCity in SettingCities, line 213")
call cow(x,"Warwick",0,0,"when calling NewCity in SettingCities, line 214")
call cow(Ku,"Winchester",0,1,"when calling NewCity in SettingCities, line 215")
call cow(U,"Wroclaw",0,0,"when calling NewCity in SettingCities, line 216")
call cow(Pu,"York",0,1,"when calling NewCity in SettingCities, line 217")
call cow(G,"Zagreb",0,0,"when calling NewCity in SettingCities, line 218")
call cow(ur,"Zaragoza",0,0,"when calling NewCity in SettingCities, line 219")
call cow(mu,"Hamburg",0,1,"when calling NewCity in SettingCities, line 220")
set Ub=Ub-1
call Y0w()
call SetForceAllianceStateBJ(bj_FORCE_ALL_PLAYERS,bj_FORCE_PLAYER[PLAYER_NEUTRAL_PASSIVE],bj_ALLIANCE_NEUTRAL)
call SetForceAllianceStateBJ(bj_FORCE_ALL_PLAYERS,bj_FORCE_ALL_PLAYERS,bj_ALLIANCE_UNALLIED)
call SetForceAllianceStateBJ(wo,wo,bj_ALLIANCE_NEUTRAL)
call SetForceAllianceStateBJ(uo,uo,bj_ALLIANCE_NEUTRAL)
call SetForceAllianceStateBJ(ro,ro,bj_ALLIANCE_NEUTRAL)
call SetForceAllianceStateBJ(so,so,bj_ALLIANCE_NEUTRAL)
set Y9=0
set G9=23
loop
exitwhen Y9>G9
call SetPlayerState(gO[Y9],PLAYER_STATE_RESOURCE_GOLD,260)
call SetPlayerState(gO[Y9],PLAYER_STATE_RESOURCE_LUMBER,250)
if Uo then
call k0w(gO[Y9])
endif
call SetPlayerTechMaxAllowed(gO[Y9],1747988789,1)
set dO[Y9]=wSw(gO[Y9],"when calling new_PlayerStats in MainInit, line 135")
set x9=dO[Y9]
set v9=gO[Y9]
if GetPlayerSlotState(v9)==PLAYER_SLOT_STATE_PLAYING then
set Q9=GetPlayerController(v9)==MAP_CONTROL_USER
else
set Q9=false
endif
set Ib[Ub]="when calling setInGame in MainInit, line 136"
set Ub=Ub+1
if mb[x9]==0 then
if x9==0 then
call i7("Nullpointer exception when calling PlayerStats.setInGame","when calling error in PlayerStats, line 17")
else
call i7("Called PlayerStats.setInGame on invalid object.","when calling error in PlayerStats, line 17")
endif
endif
set TO[x9]=Q9
set Ub=Ub-1
set Y9=Y9+1
endloop
call N9("when calling SetPlayersAtStart in MainInit, line 138")
set g9=CreateTrigger()
call TriggerRegisterTimerEvent(g9,0.01,false)
call TriggerAddAction(g9,Ef)
set Ub=Ub-1
set g9=null
set j9=null
set v9=null
return true
endfunction
function law takes nothing returns boolean
set Ub=0
return W9("MainInit, line 1")
endfunction
function Oj takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989049 then
return false
endif
if GetUnitTypeId(GetSpellTargetUnit())!=1747988569 then
return false
endif
return true
endfunction
function lj takes nothing returns boolean
if not Oj() then
return false
endif
return true
endfunction
function low takes nothing returns boolean
return true
endfunction
function Ov takes nothing returns boolean
if GetResearched()!=1378889798 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889798,true)!=1 then
return false
endif
return true
endfunction
function lv takes nothing returns boolean
if not Ov() then
return false
endif
return true
endfunction
function vH takes nothing returns boolean
if GetUnitTypeId(GetConstructedStructure())!=1747989331 then
return false
endif
return true
endfunction
function mH takes nothing returns boolean
if not vH() then
return false
endif
return true
endfunction
function mL takes nothing returns boolean
return true
endfunction
function vP takes nothing returns boolean
if GetResearched()!=1378889818 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889818,true)!=1 then
return false
endif
return true
endfunction
function mP takes nothing returns boolean
if not vP() then
return false
endif
return true
endfunction
function mQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990098,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990095,0)
endfunction
function vT takes nothing returns boolean
if GetUnitTypeId(GetConstructedStructure())==1747988803 then
return true
endif
return false
endfunction
function mT takes nothing returns boolean
if not vT() then
return false
endif
return true
endfunction
function WOw takes integer kOw,string jOw returns trigger
local integer xOw
local fogstate vOw
local integer mOw
local trigger QOw
set Ib[Ub]=jOw
set Ub=Ub+1
set xOw=el
set vOw=ConvertFogState(kOw)
set Ib[Ub]="when calling saveFogState in TypeCasting, line 88"
set Ub=Ub+1
if bb[xOw]==0 then
if xOw==0 then
call i7("Nullpointer exception when calling Table.saveFogState","when calling error in Table, line 168")
else
call i7("Called Table.saveFogState on invalid object.","when calling error in Table, line 168")
endif
endif
call SaveFogStateHandle(ll,xOw,0,vOw)
set Ub=Ub-1
set mOw=el
set Ib[Ub]="when calling loadTrigger in TypeCasting, line 89"
set Ub=Ub+1
if bb[mOw]==0 then
if mOw==0 then
call i7("Nullpointer exception when calling Table.loadTrigger","when calling error in Table, line 111")
else
call i7("Called Table.loadTrigger on invalid object.","when calling error in Table, line 111")
endif
endif
set QOw=LoadTriggerHandle(ll,mOw,0)
set Ub=Ub-1-1
set Vf=QOw
set vOw=null
set QOw=null
return Vf
endfunction
function gcw takes string Ycw returns boolean
local boolean Gcw
set Ib[Ub]=Ycw
set Ub=Ub+1
set Gcw=TriggerEvaluate(WOw(Uyw(HO,GetSpellAbilityId(),"when calling get in RegisterEvents, line 58"),"when calling triggerFromIndex in RegisterEvents, line 58"))
set Ub=Ub-1
return Gcw
endfunction
function maw takes nothing returns boolean
set Ub=0
return gcw("RegisterEvents, line 58")
endfunction
function C8 takes string X8 returns boolean
set Ib[Ub]=X8
set Ub=Ub+1
set Ib[Ub]="when calling alloc_Closure in LinkedList, line 504"
set Ub=Ub+1
if yb==0 then
if pb<32768 then
set pb=pb+1
else
call i7("Out of memory: Could not create Closure.","when calling error in LinkedList, line 504")
endif
else
set yb=yb-1
endif
set Ub=Ub-1
set Ib[Ub]="when calling alloc_Closure in LinkedList, line 508"
set Ub=Ub+1
if yb==0 then
if pb<32768 then
set pb=pb+1
else
call i7("Out of memory: Could not create Closure.","when calling error in LinkedList, line 508")
endif
else
set yb=yb-1
endif
set Ub=Ub-1-1
return true
endfunction
function mqw takes nothing returns boolean
set Ub=0
return C8("LinkedList, line 1")
endfunction
function vv takes nothing returns boolean
if GetResearched()!=1378889802 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889802,true)!=2 then
return false
endif
return true
endfunction
function mv takes nothing returns boolean
if not vv() then
return false
endif
return true
endfunction
function qG takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989079 then
return false
endif
return true
endfunction
function aG takes nothing returns boolean
if not qG() then
return false
endif
return true
endfunction
function pG takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988826 then
return false
endif
return true
endfunction
function eG takes nothing returns boolean
if not pG() then
return false
endif
return true
endfunction
function OG takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988825 then
return false
endif
return true
endfunction
function lG takes nothing returns boolean
if not OG() then
return false
endif
return true
endfunction
function bG takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988824 then
return false
endif
return true
endfunction
function yG takes nothing returns boolean
if not bG() then
return false
endif
return true
endfunction
function nG takes nothing returns nothing
if lG() then
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747989047,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"Death Alternate")
endif
if yG() then
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747989046,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"Death Alternate")
endif
if eG() then
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747989077,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"Death Alternate")
endif
if aG() then
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747989078,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"Death Alternate")
endif
endfunction
function aH takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990352 then
return false
endif
return true
endfunction
function nH takes nothing returns boolean
if not aH() then
return false
endif
return true
endfunction
function aP takes nothing returns boolean
if GetResearched()!=1378890052 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890052,true)!=1 then
return false
endif
return true
endfunction
function nP takes nothing returns boolean
if not aP() then
return false
endif
return true
endfunction
function nQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990097,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989594,0)
endfunction
function nU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989815,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989816,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989825,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989814,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989830,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651844,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989833,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989832,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989835,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989836,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651848,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651846,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989828,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989826,0)
endfunction
function Hiw takes integer Piw,integer Aiw returns nothing
local integer Diw
if fO[Piw]!=-1 then
call ForceRemovePlayer(io[fO[Piw]],RO[Piw])
endif
set fO[Piw]=Aiw
call ForceAddPlayer(io[fO[Piw]],RO[Piw])
call SetPlayerTechMaxAllowed(RO[Piw],1747990087,0)
call SetPlayerTechMaxAllowed(RO[Piw],1747990088,0)
call SetPlayerTechMaxAllowed(RO[Piw],1747989558,0)
call SetPlayerTechMaxAllowed(RO[Piw],1747989575,0)
call SetPlayerTechMaxAllowed(RO[Piw],1747990339,0)
call SetPlayerTechMaxAllowed(RO[Piw],1747990340,0)
call SetPlayerTechMaxAllowed(RO[Piw],1747988528,0)
call SetPlayerTechMaxAllowed(RO[Piw],1747988532,0)
set Diw=fO[Piw]
if Diw==0 then
call SetPlayerTechMaxAllowed(RO[Piw],1747988528,-1)
call SetPlayerTechMaxAllowed(RO[Piw],1747988532,-1)
elseif Diw==1 then
call SetPlayerTechMaxAllowed(RO[Piw],1747990339,-1)
call SetPlayerTechMaxAllowed(RO[Piw],1747990340,-1)
elseif Diw==2 then
call SetPlayerTechMaxAllowed(RO[Piw],1747990087,-1)
call SetPlayerTechMaxAllowed(RO[Piw],1747990088,-1)
elseif Diw==3 then
call SetPlayerTechMaxAllowed(RO[Piw],1747989558,-1)
call SetPlayerTechMaxAllowed(RO[Piw],1747989575,-1)
endif
endfunction
function SB takes integer rB,integer sB,string tB returns nothing
local integer iB
set Ib[Ub]=tB
set Ub=Ub+1
set iB=VS[rB]
if iB==0 then
set Ib[Ub]="when calling replaceCity in City, line 197"
set Ub=Ub+1
if Al[rB]==0 then
if rB==0 then
call i7("Nullpointer exception when calling City.replaceCity","when calling error in City, line 180")
else
call i7("Called City.replaceCity on invalid object.","when calling error in City, line 180")
endif
endif
call CV(rB,1747988529,"when calling replaceCity in City, line 180")
set Ub=Ub-1
elseif iB==3 then
set Ib[Ub]="when calling replaceCity in City, line 199"
set Ub=Ub+1
if Al[rB]==0 then
if rB==0 then
call i7("Nullpointer exception when calling City.replaceCity","when calling error in City, line 180")
else
call i7("Called City.replaceCity on invalid object.","when calling error in City, line 180")
endif
endif
call CV(rB,1747989590,"when calling replaceCity in City, line 180")
set Ub=Ub-1
elseif iB==1 then
set Ib[Ub]="when calling replaceCity in City, line 201"
set Ub=Ub+1
if Al[rB]==0 then
if rB==0 then
call i7("Nullpointer exception when calling City.replaceCity","when calling error in City, line 180")
else
call i7("Called City.replaceCity on invalid object.","when calling error in City, line 180")
endif
endif
call CV(rB,1747990326,"when calling replaceCity in City, line 180")
set Ub=Ub-1
elseif iB==2 then
set Ib[Ub]="when calling replaceCity in City, line 203"
set Ub=Ub+1
if Al[rB]==0 then
if rB==0 then
call i7("Nullpointer exception when calling City.replaceCity","when calling error in City, line 180")
else
call i7("Called City.replaceCity on invalid object.","when calling error in City, line 180")
endif
endif
call CV(rB,1747990084,"when calling replaceCity in City, line 180")
set Ub=Ub-1
endif
set Ib[Ub]="when calling changeOwner in City, line 204"
set Ub=Ub+1
if Al[rB]==0 then
if rB==0 then
call i7("Nullpointer exception when calling City.changeOwner","when calling error in City, line 185")
else
call i7("Called City.changeOwner on invalid object.","when calling error in City, line 185")
endif
endif
call uB(rB,sB,"when calling changeOwner in City, line 185")
set Ub=Ub-1-1
endfunction
function HX takes string FX returns nothing
local integer kX
local integer jX
local integer xX
local integer vX
local integer mX
local integer QX
local integer WX
local integer EX
local integer ZX
local integer UX
local player IX
local location PX
local real AX
local integer DX
set Ib[Ub]=FX
set Ub=Ub+1
set kX=uV(GetSpellTargetUnit(),"when calling getCityId in CityManage, line 18")
set vX=AS[kX]
set Ib[Ub]="when calling getCityForceId in CityManage, line 19"
set Ub=Ub+1
if Al[vX]==0 then
if vX==0 then
call i7("Nullpointer exception when calling City.getCityForceId","when calling error in City, line 177")
else
call i7("Called City.getCityForceId on invalid object.","when calling error in City, line 177")
endif
endif
set mX=VS[vX]
set Ub=Ub-1
set jX=GetPlayerId(GetOwningPlayer(GetSpellAbilityUnit()))
set QX=dO[jX]
set Ib[Ub]="when calling changeForce in CityManage, line 21"
set Ub=Ub+1
if mb[QX]==0 then
if QX==0 then
call i7("Nullpointer exception when calling PlayerStats.changeForce","when calling error in PlayerStats, line 97")
else
call i7("Called PlayerStats.changeForce on invalid object.","when calling error in PlayerStats, line 97")
endif
endif
call Hiw(QX,mX)
set Ub=Ub-1
set WX=Yl[mX]
set Ib[Ub]="when calling iterator in CityManage, line 24"
set Ub=Ub+1
set EX=i9(WX,"when calling new_LLIterator in LinkedList, line 165")
set Ub=Ub-1
set xX=EX
loop
exitwhen Go[ho[xX]]==go[xX]
set ho[xX]=Go[ho[xX]]
set ZX=1
set UX=To[ho[xX]]
set IX=gO[jX]
set PX=GetSpellTargetLoc()
set AX=0.
call GroupClear(bj_lastCreatedGroup)
loop
set ZX=ZX-1
exitwhen ZX<0
call CreateUnitAtLocSaveLast(IX,UX,PX,AX)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
endloop
set Ib[Ub]="when calling close in CityManage, line 24"
set Ub=Ub+1
if ko[xX]then
call Cyw(xX,"when calling LLIterator in LinkedList, line 450")
endif
set Ub=Ub-1
set DX=AS[kX]
set Ib[Ub]="when calling settleCity in CityManage, line 27"
set Ub=Ub+1
if Al[DX]==0 then
if DX==0 then
call i7("Nullpointer exception when calling City.settleCity","when calling error in City, line 194")
else
call i7("Called City.settleCity on invalid object.","when calling error in City, line 194")
endif
endif
call SB(DX,jX,"when calling settleCity in City, line 194")
set Ub=Ub-1
call KillUnit(GetSpellAbilityUnit())
set Ub=Ub-1
set IX=null
set PX=null
endfunction
function naw takes nothing returns nothing
set Ub=0
call HX("CityManage, line 14")
endfunction
function ng takes nothing returns nothing
local location og
local location Og
local real lg
local real bg
local rect yg
local group pg
local group eg
local code qg
local boolean ag
set u=GetUnitLoc(GetSpellAbilityUnit())
set og=u
set o=Location(GetLocationX(og)+200.00,GetLocationY(og)+0.00)
set Og=u
set lg=GetLocationX(Og)
set bg=GetLocationY(Og)
set l=Rect(lg-150,bg-140,lg+150,bg+140)
set yg=l
set pg=CreateGroup()
call GroupEnumUnitsInRect(pg,yg,null)
call DestroyBoolExpr(null)
set b=pg
set eg=b
set qg=Jy
set ag=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(eg,qg)
if ag then
call DestroyGroup(eg)
endif
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747988826,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"stand")
call DestroyGroup(b)
call RemoveLocation(o)
call RemoveLocation(u)
set og=null
set Og=null
set yg=null
set pg=null
set eg=null
endfunction
function nh takes nothing returns nothing
local player Sh=GetOwningPlayer(GetSpellTargetUnit())
local playerstate ch=PLAYER_STATE_RESOURCE_LUMBER
local playerstate oh
local playerstate Oh
local player lh
local force bh
local location yh
local real ph
local real eh
local player qh
local force ah
if ch==PLAYER_STATE_RESOURCE_GOLD then
set oh=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(Sh,oh,GetPlayerState(Sh,oh)+250)
elseif ch==PLAYER_STATE_RESOURCE_LUMBER then
set Oh=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(Sh,Oh,GetPlayerState(Sh,Oh)+250)
endif
call SetPlayerState(Sh,ch,GetPlayerState(Sh,ch)+250)
call RemoveUnit(GetSpellAbilityUnit())
set lh=GetOwningPlayer(GetSpellTargetUnit())
set bh=CreateForce()
call ForceAddPlayer(bh,lh)
if IsPlayerInForce(GetLocalPlayer(),bh) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_1229")
endif
set e=GetUnitLoc(GetSpellTargetUnit())
set qh=GetOwningPlayer(GetSpellTargetUnit())
set ah=CreateForce()
call ForceAddPlayer(ah,qh)
set yh=e
set ph=GetLocationX(yh)
set eh=GetLocationY(yh)
if IsPlayerInForce(GetLocalPlayer(),ah) then
call PingMinimap(ph,eh,2.00)
endif
call RemoveLocation(e)
set Sh=null
set ch=null
set oh=null
set Oh=null
set lh=null
set bh=null
set yh=null
set qh=null
set ah=null
endfunction
function av takes nothing returns boolean
if GetResearched()!=1378889798 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889798,true)!=2 then
return false
endif
return true
endfunction
function nv takes nothing returns boolean
if not av() then
return false
endif
return true
endfunction
function o7 takes nothing returns nothing
set lo=lo+0.030
endfunction
function cF takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988793 then
return false
endif
if GetUnitTypeId(GetSpellTargetUnit())!=1747988787 then
return false
endif
return true
endfunction
function oF takes nothing returns boolean
if not cF() then
return false
endif
return true
endfunction
function cJ takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747988809 then
return false
endif
return true
endfunction
function oJ takes nothing returns boolean
if not cJ() then
return false
endif
return true
endfunction
function oW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989559,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989569,0)
endfunction
function y8 takes string i8 returns boolean
local playerunitevent S8
local playerunitevent c8
local integer o8
local integer O8
local integer l8
local integer b8
set Ib[Ub]=i8
set Ub=Ub+1
set S8=EVENT_PLAYER_UNIT_DEATH
set Ib[Ub]="when calling alloc_Closure in LimitEncampments, line 8"
set Ub=Ub+1
if vl==0 then
if ml<32768 then
set ml=ml+1
set o8=ml
set Ql[o8]=665
else
call i7("Out of memory: Could not create Closure.","when calling error in LimitEncampments, line 8")
set o8=0
endif
else
set vl=vl-1
set o8=xl[vl]
set Ql[o8]=665
endif
set Ub=Ub-1
set Tc[o8]=0
set Yc[o8]=0
set Gc[o8]=0
set Ib[Ub]="when calling add in LimitEncampments, line 8"
set Ub=Ub+1
set Ib[Ub]="when calling toIntId in ClosureEvents, line 111"
set Ub=Ub+1
set O8=qc[GetHandleId(S8)]
if O8==0 then
set O8=IM(S8,"when calling registerEventId in ClosureEvents, line 228")
endif
set Ub=Ub-1
set Tc[o8]=O8
if fc[Tc[o8]]!=0 then
set Gc[fc[Tc[o8]]]=o8
set Yc[o8]=fc[Tc[o8]]
endif
set fc[Tc[o8]]=o8
set Ub=Ub-1
set c8=EVENT_PLAYER_UNIT_CONSTRUCT_START
set Ib[Ub]="when calling alloc_Closure in LimitEncampments, line 12"
set Ub=Ub+1
if vl==0 then
if ml<32768 then
set ml=ml+1
set l8=ml
set Ql[l8]=666
else
call i7("Out of memory: Could not create Closure.","when calling error in LimitEncampments, line 12")
set l8=0
endif
else
set vl=vl-1
set l8=xl[vl]
set Ql[l8]=666
endif
set Ub=Ub-1
set Tc[l8]=0
set Yc[l8]=0
set Gc[l8]=0
set Ib[Ub]="when calling add in LimitEncampments, line 12"
set Ub=Ub+1
set Ib[Ub]="when calling toIntId in ClosureEvents, line 111"
set Ub=Ub+1
set b8=qc[GetHandleId(c8)]
if b8==0 then
set b8=IM(c8,"when calling registerEventId in ClosureEvents, line 228")
endif
set Ub=Ub-1
set Tc[l8]=b8
if fc[Tc[l8]]!=0 then
set Gc[fc[Tc[l8]]]=l8
set Yc[l8]=fc[Tc[l8]]
endif
set fc[Tc[l8]]=l8
set Ub=Ub-1-1
set S8=null
set c8=null
return true
endfunction
function oaw takes nothing returns boolean
set Ub=0
return y8("LimitEncampments, line 1")
endfunction
function ok takes nothing returns boolean
if GetUnitTypeId(GetDyingUnit())!=1747988791 then
return false
endif
return true
endfunction
function cm takes nothing returns boolean
if GetResearched()!=1378889799 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889799,true)!=2 then
return false
endif
return true
endfunction
function om takes nothing returns boolean
if not cm() then
return false
endif
return true
endfunction
function oow takes nothing returns boolean
return true
endfunction
function pD takes nothing returns nothing
call ReplaceUnitBJ(GetTriggerUnit(),1747989554,bj_UNIT_STATE_METHOD_RELATIVE)
call UnitAddAbility(bj_lastReplacedUnit,1093677635)
endfunction
function pE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989582,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989583,0)
endfunction
function pI takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989825,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989817,0)
endfunction
function yK takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990328 then
return false
endif
return true
endfunction
function pK takes nothing returns boolean
if not yK() then
return false
endif
return true
endfunction
function pQ takes nothing returns nothing
set s=bj_FORCE_ALL_PLAYERS
call ForForce(s,de)
endfunction
function pSw takes nothing returns boolean
return true
endfunction
function yZ takes nothing returns boolean
if GetResearched()!=1378890033 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890033,true)!=1 then
return false
endif
return true
endfunction
function pZ takes nothing returns boolean
if not yZ() then
return false
endif
return true
endfunction
function xtw takes string htw returns boolean
local playerevent Ftw
local integer ktw
local integer jtw
set Ib[Ub]=htw
set Ub=Ub+1
set Ftw=EVENT_PLAYER_LEAVE
set Ib[Ub]="when calling alloc_Closure in OnPlayerLeave, line 6"
set Ub=Ub+1
if vl==0 then
if ml<32768 then
set ml=ml+1
set ktw=ml
set Ql[ktw]=673
else
call i7("Out of memory: Could not create Closure.","when calling error in OnPlayerLeave, line 6")
set ktw=0
endif
else
set vl=vl-1
set ktw=xl[vl]
set Ql[ktw]=673
endif
set Ub=Ub-1
set Tc[ktw]=0
set Yc[ktw]=0
set Gc[ktw]=0
set Ib[Ub]="when calling add in OnPlayerLeave, line 6"
set Ub=Ub+1
set Ib[Ub]="when calling toIntId in ClosureEvents, line 111"
set Ub=Ub+1
set jtw=qc[GetHandleId(Ftw)]
if jtw==0 then
set jtw=IM(Ftw,"when calling registerEventId in ClosureEvents, line 228")
endif
set Ub=Ub-1
set Tc[ktw]=jtw
if fc[Tc[ktw]]!=0 then
set Gc[fc[Tc[ktw]]]=ktw
set Yc[ktw]=fc[Tc[ktw]]
endif
set fc[Tc[ktw]]=ktw
set Ub=Ub-1-1
set Ftw=null
return true
endfunction
function paw takes nothing returns boolean
set Ub=0
return xtw("OnPlayerLeave, line 1")
endfunction
function px takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988788,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988535,0)
endfunction
function qA takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747988553 then
return false
endif
return true
endfunction
function eJ takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989060 then
return false
endif
return true
endfunction
function qJ takes nothing returns boolean
if not eJ() then
return false
endif
return true
endfunction
function qW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989557,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989559,0)
endfunction
function jow takes string gow returns boolean
local playerunitevent how
local integer Fow
local integer kow
set Ib[Ub]=gow
set Ub=Ub+1
set how=EVENT_PLAYER_UNIT_SPELL_CAST
set Ib[Ub]="when calling alloc_Closure in Taxation, line 6"
set Ub=Ub+1
if vl==0 then
if ml<32768 then
set ml=ml+1
set Fow=ml
set Ql[Fow]=675
else
call i7("Out of memory: Could not create Closure.","when calling error in Taxation, line 6")
set Fow=0
endif
else
set vl=vl-1
set Fow=xl[vl]
set Ql[Fow]=675
endif
set Ub=Ub-1
set Tc[Fow]=0
set Yc[Fow]=0
set Gc[Fow]=0
set Ib[Ub]="when calling add in Taxation, line 6"
set Ub=Ub+1
set Ib[Ub]="when calling toIntId in ClosureEvents, line 111"
set Ub=Ub+1
set kow=qc[GetHandleId(how)]
if kow==0 then
set kow=IM(how,"when calling registerEventId in ClosureEvents, line 228")
endif
set Ub=Ub-1
set Tc[Fow]=kow
if fc[Tc[Fow]]!=0 then
set Gc[fc[Tc[Fow]]]=Fow
set Yc[Fow]=fc[Tc[Fow]]
endif
set fc[Tc[Fow]]=Fow
set Ub=Ub-1-1
set how=null
return true
endfunction
function qaw takes nothing returns boolean
set Ub=0
return jow("Taxation, line 1")
endfunction
function em takes nothing returns boolean
if GetResearched()!=1378889801 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889801,true)!=1 then
return false
endif
return true
endfunction
function qm takes nothing returns boolean
if not em() then
return false
endif
return true
endfunction
function r8 takes nothing returns boolean
return true
endfunction
function uA takes nothing returns boolean
if GetUnitTypeId(GetConstructedStructure())==1747988545 then
return true
endif
if GetUnitTypeId(GetConstructedStructure())==1747989577 then
return true
endif
if GetUnitTypeId(GetConstructedStructure())==1747990320 then
return true
endif
if GetUnitTypeId(GetConstructedStructure())==1747989845 then
return true
endif
return false
endfunction
function rA takes nothing returns boolean
if q[GetPlayerId(GetOwningPlayer(GetConstructedStructure()))+1]!=false then
return false
endif
if not uA() then
return false
endif
return true
endfunction
function rF takes nothing returns nothing
local player Jh=GetOwningPlayer(GetSpellTargetUnit())
local playerstate Kh=PLAYER_STATE_RESOURCE_GOLD
local playerstate Lh
local playerstate Xh
local player Ch
local force Vh
local location Bh
local real Nh
local real Mh
local player wF
local force uF
if Kh==PLAYER_STATE_RESOURCE_GOLD then
set Lh=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(Jh,Lh,GetPlayerState(Jh,Lh)+250)
elseif Kh==PLAYER_STATE_RESOURCE_LUMBER then
set Xh=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(Jh,Xh,GetPlayerState(Jh,Xh)+250)
endif
call SetPlayerState(Jh,Kh,GetPlayerState(Jh,Kh)+250)
call RemoveUnit(GetSpellAbilityUnit())
set Ch=GetOwningPlayer(GetSpellTargetUnit())
set Vh=CreateForce()
call ForceAddPlayer(Vh,Ch)
if IsPlayerInForce(GetLocalPlayer(),Vh) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_1230")
endif
set e=GetUnitLoc(GetSpellTargetUnit())
set wF=GetOwningPlayer(GetSpellTargetUnit())
set uF=CreateForce()
call ForceAddPlayer(uF,wF)
set Bh=e
set Nh=GetLocationX(Bh)
set Mh=GetLocationY(Bh)
if IsPlayerInForce(GetLocalPlayer(),uF) then
call PingMinimap(Nh,Mh,2.00)
endif
call RemoveLocation(e)
set Jh=null
set Kh=null
set Lh=null
set Xh=null
set Ch=null
set Vh=null
set Bh=null
set wF=null
set uF=null
endfunction
function rJ takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function uT takes nothing returns boolean
if GetUnitTypeId(GetConstructedStructure())==1747988785 then
return true
endif
return false
endfunction
function rT takes nothing returns boolean
if not uT() then
return false
endif
return true
endfunction
function HL takes string IL returns boolean
local playerunitevent PL
local integer AL
local integer DL
set Ib[Ub]=IL
set Ub=Ub+1
set PL=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set Ib[Ub]="when calling alloc_Closure in CityBuilded, line 7"
set Ub=Ub+1
if vl==0 then
if ml<32768 then
set ml=ml+1
set AL=ml
set Ql[AL]=662
else
call i7("Out of memory: Could not create Closure.","when calling error in CityBuilded, line 7")
set AL=0
endif
else
set vl=vl-1
set AL=xl[vl]
set Ql[AL]=662
endif
set Ub=Ub-1
set Tc[AL]=0
set Yc[AL]=0
set Gc[AL]=0
set Ib[Ub]="when calling add in CityBuilded, line 7"
set Ub=Ub+1
set Ib[Ub]="when calling toIntId in ClosureEvents, line 111"
set Ub=Ub+1
set DL=qc[GetHandleId(PL)]
if DL==0 then
set DL=IM(PL,"when calling registerEventId in ClosureEvents, line 228")
endif
set Ub=Ub-1
set Tc[AL]=DL
if fc[Tc[AL]]!=0 then
set Gc[fc[Tc[AL]]]=AL
set Yc[AL]=fc[Tc[AL]]
endif
set fc[Tc[AL]]=AL
set Ub=Ub-1-1
set PL=null
return true
endfunction
function raw takes nothing returns boolean
set Ub=0
return HL("CityBuilded, line 1")
endfunction
function rh takes nothing returns nothing
local group Mg
local code wh
local boolean uh
set p=GetUnitsOfTypeIdAll(1747989301)
set Mg=w
set wh=My
set uh=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(Mg,wh)
if uh then
call DestroyGroup(Mg)
endif
call DestroyGroup(p)
set Mg=null
endfunction
function riw takes nothing returns boolean
return true
endfunction
function rm takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988559,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989064,0)
endfunction
function s3 takes nothing returns nothing
call TriggerRegisterUnitEvent(yc,nl,EVENT_UNIT_DAMAGED)
endfunction
function s8 takes nothing returns boolean
return true
endfunction
function sG takes nothing returns boolean
if GetSpellAbilityId()!=1093677620 then
return false
endif
return true
endfunction
function rH takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990356 then
return false
endif
return true
endfunction
function sH takes nothing returns boolean
if not rH() then
return false
endif
return true
endfunction
function rP takes nothing returns boolean
if GetResearched()!=1378890054 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890054,true)!=1 then
return false
endif
return true
endfunction
function sP takes nothing returns boolean
if not rP() then
return false
endif
return true
endfunction
function aX takes string wX returns boolean
local trigger uX
local playerunitevent rX
local playerunitevent sX
local integer tX
local integer iX
local player SX
local location cX
local real oX
local integer OX
local integer lX
local trigger bX
local playerunitevent yX
local integer pX
local integer eX
local integer qX
set Ib[Ub]=wX
set Ub=Ub+1
if Uo then
set tX=5
set iX=1747988553
set SX=gO[0]
set cX=Location(-3000.0,1700.0)
set oX=0.
call GroupClear(bj_lastCreatedGroup)
loop
set tX=tX-1
exitwhen tX<0
call CreateUnitAtLocSaveLast(SX,iX,cX,oX)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
endif
set rX=EVENT_PLAYER_UNIT_SELECTED
set Ib[Ub]="when calling alloc_Closure in CityManage, line 9"
set Ub=Ub+1
if vl==0 then
if ml<32768 then
set ml=ml+1
set OX=ml
set Ql[OX]=663
else
call i7("Out of memory: Could not create Closure.","when calling error in CityManage, line 9")
set OX=0
endif
else
set vl=vl-1
set OX=xl[vl]
set Ql[OX]=663
endif
set Ub=Ub-1
set Tc[OX]=0
set Yc[OX]=0
set Gc[OX]=0
set Ib[Ub]="when calling add in CityManage, line 9"
set Ub=Ub+1
set Ib[Ub]="when calling toIntId in ClosureEvents, line 111"
set Ub=Ub+1
set lX=qc[GetHandleId(rX)]
if lX==0 then
set lX=IM(rX,"when calling registerEventId in ClosureEvents, line 228")
endif
set Ub=Ub-1
set Tc[OX]=lX
if fc[Tc[OX]]!=0 then
set Gc[fc[Tc[OX]]]=OX
set Yc[OX]=fc[Tc[OX]]
endif
set fc[Tc[OX]]=OX
set Ub=Ub-1
set uX=CreateTrigger()
call TriggerAddCondition(uX,Condition(af))
call TriggerAddAction(uX,nf)
set bX=uX
set yX=EVENT_PLAYER_UNIT_SPELL_CAST
set pX=0
loop
call TriggerRegisterPlayerUnitEvent(bX,Player(pX),yX,null)
set pX=pX+1
exitwhen pX==bj_MAX_PLAYER_SLOTS
endloop
set sX=EVENT_PLAYER_UNIT_ATTACKED
set Ib[Ub]="when calling alloc_Closure in CityManage, line 33"
set Ub=Ub+1
if vl==0 then
if ml<32768 then
set ml=ml+1
set eX=ml
set Ql[eX]=664
else
call i7("Out of memory: Could not create Closure.","when calling error in CityManage, line 33")
set eX=0
endif
else
set vl=vl-1
set eX=xl[vl]
set Ql[eX]=664
endif
set Ub=Ub-1
set Tc[eX]=0
set Yc[eX]=0
set Gc[eX]=0
set Ib[Ub]="when calling add in CityManage, line 33"
set Ub=Ub+1
set Ib[Ub]="when calling toIntId in ClosureEvents, line 111"
set Ub=Ub+1
set qX=qc[GetHandleId(sX)]
if qX==0 then
set qX=IM(sX,"when calling registerEventId in ClosureEvents, line 228")
endif
set Ub=Ub-1
set Tc[eX]=qX
if fc[Tc[eX]]!=0 then
set Gc[fc[Tc[eX]]]=eX
set Yc[eX]=fc[Tc[eX]]
endif
set fc[Tc[eX]]=eX
set Ub=Ub-1-1
set uX=null
set rX=null
set sX=null
set SX=null
set cX=null
set bX=null
set yX=null
return true
endfunction
function saw takes nothing returns boolean
set Ub=0
return aX("CityManage, line 1")
endfunction
function sk takes nothing returns nothing
local player KF=GetOwningPlayer(GetKillingUnit())
local playerstate LF=PLAYER_STATE_RESOURCE_LUMBER
local playerstate XF
local playerstate CF
local player VF
local force BF
local location NF
local real MF
local real wk
local player uk
local force rk
if LF==PLAYER_STATE_RESOURCE_GOLD then
set XF=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(KF,XF,GetPlayerState(KF,XF)+250)
elseif LF==PLAYER_STATE_RESOURCE_LUMBER then
set CF=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(KF,CF,GetPlayerState(KF,CF)+250)
endif
call SetPlayerState(KF,LF,GetPlayerState(KF,LF)+250)
set VF=GetOwningPlayer(GetKillingUnit())
set BF=CreateForce()
call ForceAddPlayer(BF,VF)
if IsPlayerInForce(GetLocalPlayer(),BF) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_090")
endif
set e=GetUnitLoc(GetDyingUnit())
set uk=GetOwningPlayer(GetDyingUnit())
set rk=CreateForce()
call ForceAddPlayer(rk,uk)
set NF=e
set MF=GetLocationX(NF)
set wk=GetLocationY(NF)
if IsPlayerInForce(GetLocalPlayer(),rk) then
call PingMinimap(MF,wk,2.00)
endif
call RemoveLocation(e)
set KF=null
set LF=null
set XF=null
set CF=null
set VF=null
set BF=null
set NF=null
set uk=null
set rk=null
endfunction
function rv takes nothing returns boolean
if GetResearched()!=1378889796 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889796,true)!=2 then
return false
endif
return true
endfunction
function sv takes nothing returns boolean
if not rv() then
return false
endif
return true
endfunction
function t8 takes nothing returns boolean
return true
endfunction
function tG takes nothing returns nothing
set i=GetUnitLoc(GetSpellTargetUnit())
set bj_lastCreatedEffect=AddSpecialEffectLoc("Abilities\\Spells\\Orc\\Voodoo\\VoodooAuraTarget.mdl",i)
call DestroyEffect(bj_lastCreatedEffect)
set S=GetUnitLoc(GetSpellAbilityUnit())
set bj_lastCreatedEffect=AddSpecialEffectLoc("Abilities\\Spells\\Orc\\Voodoo\\VoodooAura.mdl",S)
call DestroyEffect(bj_lastCreatedEffect)
call RemoveLocation(i)
call RemoveLocation(S)
endfunction
function tH takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function tP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990604,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990602,0)
endfunction
function sU takes nothing returns boolean
if GetResearched()!=1378890032 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890032,true)!=1 then
return false
endif
return true
endfunction
function tU takes nothing returns boolean
if not sU() then
return false
endif
return true
endfunction
function tY takes nothing returns nothing
local player MT=GetOwningPlayer(GetAttacker())
local player wY=GetOwningPlayer(GetAttacker())
local player uY
local player rY
local unit sY
set r[GetPlayerId(MT)+1]=r[GetPlayerId(wY)+1]+1
set uY=GetOwningPlayer(GetTriggerUnit())
set rY=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(uY)+1]=r[GetPlayerId(rY)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set sY=GetTriggerUnit()
call SetUnitState(sY,UNIT_STATE_LIFE,GetUnitState(sY,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set MT=null
set wY=null
set uY=null
set rY=null
set sY=null
endfunction
function G4 takes string T4 returns boolean
local integer Y4
set Ib[Ub]=T4
set Ub=Ub+1
set Ib[Ub]="when calling alloc_Closure in Credits, line 5"
set Ub=Ub+1
if Nl==0 then
if Ml<32768 then
set Ml=Ml+1
set Y4=Ml
set wb[Y4]=633
else
call i7("Out of memory: Could not create Closure.","when calling error in Credits, line 5")
set Y4=0
endif
else
set Nl=Nl-1
set Y4=Bl[Nl]
set wb[Y4]=633
endif
set Ub=Ub-1
set Ib[Ub]="when calling doPeriodically in Credits, line 5"
set Ub=Ub+1
set Ib[Ub]="when calling start in ClosureTimers, line 36"
set Ub=Ub+1
if wb[Y4]==0 then
if Y4==0 then
call i7("Nullpointer exception when calling CallbackPeriodic.start","when calling error in ClosureTimers, line 88")
else
call i7("Called CallbackPeriodic.start on invalid object.","when calling error in ClosureTimers, line 88")
endif
endif
call u1(Y4,600,"when calling start in ClosureTimers, line 88")
set Ub=Ub-1-1-1
return true
endfunction
function taw takes nothing returns boolean
set Ub=0
return G4("Credits, line 1")
endfunction
function tcw takes nothing returns boolean
set AO=-340282366920938000000000000000000000000.
return true
endfunction
function tj takes nothing returns nothing
local player Lk=GetOwningPlayer(GetSpellTargetUnit())
local playerstate Xk=PLAYER_STATE_RESOURCE_LUMBER
local playerstate Ck
local playerstate Vk
local player Bk
local force Nk
local location Mk
local real wj
local real uj
local player rj
local force sj
if Xk==PLAYER_STATE_RESOURCE_GOLD then
set Ck=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(Lk,Ck,GetPlayerState(Lk,Ck)+500)
elseif Xk==PLAYER_STATE_RESOURCE_LUMBER then
set Vk=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(Lk,Vk,GetPlayerState(Lk,Vk)+500)
endif
call SetPlayerState(Lk,Xk,GetPlayerState(Lk,Xk)+500)
call RemoveUnit(GetSpellAbilityUnit())
set Bk=GetOwningPlayer(GetSpellTargetUnit())
set Nk=CreateForce()
call ForceAddPlayer(Nk,Bk)
if IsPlayerInForce(GetLocalPlayer(),Nk) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_1232")
endif
set e=GetUnitLoc(GetSpellTargetUnit())
set rj=GetOwningPlayer(GetSpellTargetUnit())
set sj=CreateForce()
call ForceAddPlayer(sj,rj)
set Mk=e
set wj=GetLocationX(Mk)
set uj=GetLocationY(Mk)
if IsPlayerInForce(GetLocalPlayer(),sj) then
call PingMinimap(wj,uj,2.00)
endif
call RemoveLocation(e)
set Lk=null
set Xk=null
set Ck=null
set Vk=null
set Bk=null
set Nk=null
set Mk=null
set rj=null
set sj=null
endfunction
function tv takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988558,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989057,0)
endfunction
function wJ takes nothing returns boolean
if GetUnitTypeId(GetConstructedStructure())!=1747989059 then
return false
endif
return true
endfunction
function uJ takes nothing returns boolean
if not wJ() then
return false
endif
return true
endfunction
function uSw takes nothing returns boolean
set FO=ConvertPlayerColor(24)
set kO=ConvertPlayerColor(25)
set jO=ConvertPlayerColor(26)
set xO=ConvertPlayerColor(27)
set vO[0]=PLAYER_COLOR_RED
set vO[1]=PLAYER_COLOR_BLUE
set vO[2]=PLAYER_COLOR_CYAN
set vO[3]=PLAYER_COLOR_PURPLE
set vO[4]=PLAYER_COLOR_YELLOW
set vO[5]=PLAYER_COLOR_ORANGE
set vO[6]=PLAYER_COLOR_GREEN
set vO[7]=PLAYER_COLOR_PINK
set vO[8]=PLAYER_COLOR_LIGHT_GRAY
set vO[9]=PLAYER_COLOR_LIGHT_BLUE
set vO[10]=PLAYER_COLOR_AQUA
set vO[11]=PLAYER_COLOR_BROWN
set vO[12]=PLAYER_COLOR_MAROON
set vO[13]=PLAYER_COLOR_NAVY
set vO[14]=PLAYER_COLOR_TURQUOISE
set vO[15]=PLAYER_COLOR_VIOLET
set vO[16]=PLAYER_COLOR_WHEAT
set vO[17]=PLAYER_COLOR_PEACH
set vO[18]=PLAYER_COLOR_MINT
set vO[19]=PLAYER_COLOR_LAVENDER
set vO[20]=PLAYER_COLOR_COAL
set vO[21]=PLAYER_COLOR_SNOW
set vO[22]=PLAYER_COLOR_EMERALD
set vO[23]=PLAYER_COLOR_PEANUT
set vO[24]=FO
set vO[25]=kO
set vO[26]=jO
set vO[27]=xO
return true
endfunction
function uW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989556,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989570,0)
endfunction
function ZC takes string gC,string hC,real FC,real kC,real jC,integer xC,real vC,real mC,boolean QC,string WC returns integer
local integer EC
set Ib[Ub]=WC
set Ub=Ub+1
set Ib[Ub]="when calling CityModifierClass in CityModifiers, line 39"
set Ub=Ub+1
if El==0 then
if Zl<32768 then
set Zl=Zl+1
set EC=Zl
else
call i7("Out of memory: Could not create CityModifierClass.","when calling error in CityModifiers, line 28")
set EC=0
endif
else
set El=El-1
set EC=Wl[El]
endif
set Ub=Ub-1
set GS[EC]=FC
set gS[EC]=mC
set hS[EC]=QC
set FS[EC]=kC
set kS[EC]=xC
set jS[EC]=vC
set xS[EC]=jC
set vS[EC]=gC
set mS[EC]=hC
set Ub=Ub-1
return EC
endfunction
function GC takes string OC returns boolean
local integer lC
local integer bC
local integer yC
local integer pC
local integer eC
local integer qC
local integer aC
local integer nC
local integer dC
local integer fC
local integer RC
local integer TC
local integer YC
set Ib[Ub]=OC
set Ub=Ub+1
set bC=R2I(0.5)
set yC=R2I(1)
set Ib[Ub]="when calling asList in CityModifiers, line 9"
set Ub=Ub+1
set pC=n9("when calling new_LinkedList in LinkedList, line 391")
call Tpw(pC,bC,"when calling add in LinkedList, line 393")
call Tpw(pC,yC,"when calling add in LinkedList, line 393")
set Ub=Ub-1
set yS[0]=pC
set eC=R2I(1)
set qC=R2I(3)
set Ib[Ub]="when calling asList in CityModifiers, line 10"
set Ub=Ub+1
set aC=n9("when calling new_LinkedList in LinkedList, line 391")
call Tpw(aC,eC,"when calling add in LinkedList, line 393")
call Tpw(aC,qC,"when calling add in LinkedList, line 393")
set Ub=Ub-1
set yS[1]=aC
set nC=R2I(3)
set dC=R2I(10)
set Ib[Ub]="when calling asList in CityModifiers, line 11"
set Ub=Ub+1
set fC=n9("when calling new_LinkedList in LinkedList, line 391")
call Tpw(fC,nC,"when calling add in LinkedList, line 393")
call Tpw(fC,dC,"when calling add in LinkedList, line 393")
set Ub=Ub-1
set yS[2]=fC
set RC=R2I(10)
set TC=R2I(20)
set Ib[Ub]="when calling asList in CityModifiers, line 12"
set Ub=Ub+1
set YC=n9("when calling new_LinkedList in LinkedList, line 391")
call Tpw(YC,RC,"when calling add in LinkedList, line 393")
call Tpw(YC,TC,"when calling add in LinkedList, line 393")
set Ub=Ub-1
set yS[3]=YC
set pS=ZC("|cffff0000Just conquered|r","|cffc00000-PO -pop|r",240,1.0,0.0,1,-1.0,-30.0,false,"when calling new_CityModifierClass in CityModifiers, line 69")
set eS=ZC("|cfffffb00Just revolted|r","|cff00af00+PO|r|cffc00000 -pop|r",120.0,1.0,0.0,0,0.,30.0,false,"when calling new_CityModifierClass in CityModifiers, line 77")
set qS=ZC("|cff33ff00Population Boom|r","|cff33ff00++pop|r",120.0,0.01,0.,0,0.,0.,true,"when calling new_CityModifierClass in CityModifiers, line 85")
set aS=ZC("|cffff0000Plague outburst|r","|cffff0000--pop|r",240,0.03,0.,2,-1.,0.,true,"when calling new_CityModifierClass in CityModifiers, line 93")
set nS=ZC("|cffaf0000Big Fire|r","|cffc00000-pop|r",30,0.01,0.,2,-1.,0.,true,"when calling new_CityModifierClass in CityModifiers, line 101")
set dS=ZC("|cff15ff00More trade estabilished|r","|cff00af00+tax +pop|r",240,0.01,0.15,0,1.,0.,true,"when calling new_CityModifierClass in CityModifiers, line 109")
set fS=ZC("|cffff0000Massacred population|r","|cff00af00+PO |r|cffff0000--pop|r",30,0.05,0.,3,-1.,10.,true,"when calling new_CityModifierClass in CityModifiers, line 117")
set RS=ZC("|cff00ff00Prospering|r","|cff00af00+PO +pop +tax|r",240,0.01,0.10,1,1.,20.0,true,"when calling new_CityModifierClass in CityModifiers, line 125")
set TS=ZC("|cffff0000Sieged|r","|cffc00000-PO -pop|r",5,1.0,0.,0,-1.,-10.0,true,"when calling new_CityModifierClass in CityModifiers, line 133")
set YS=A7("when calling new_HashMap in CityModifiers, line 143")
set lC=YS
call myw(lC,0,pS,"when calling put in CityModifiers, line 150")
call myw(lC,1,eS,"when calling put in CityModifiers, line 151")
call myw(lC,2,qS,"when calling put in CityModifiers, line 152")
call myw(lC,3,aS,"when calling put in CityModifiers, line 153")
call myw(lC,4,nS,"when calling put in CityModifiers, line 154")
call myw(lC,5,dS,"when calling put in CityModifiers, line 155")
call myw(lC,6,fS,"when calling put in CityModifiers, line 156")
call myw(lC,7,RS,"when calling put in CityModifiers, line 157")
call myw(lC,8,TS,"when calling put in CityModifiers, line 158")
set Ub=Ub-1
return true
endfunction
function uaw takes nothing returns boolean
set Ub=0
return GC("CityModifiers, line 1")
endfunction
function uiw takes nothing returns boolean
local integer Mtw
local integer wiw
set hO=GetLocalPlayer()
set Mtw=0
set wiw=bj_MAX_PLAYER_SLOTS-1
loop
exitwhen Mtw>wiw
set gO[Mtw]=Player(Mtw)
set Mtw=Mtw+1
endloop
return true
endfunction
function wm takes nothing returns boolean
if GetResearched()!=1378889799 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889799,true)!=1 then
return false
endif
return true
endfunction
function um takes nothing returns boolean
if not wm() then
return false
endif
return true
endfunction
function vE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989814,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989825,0)
endfunction
function vJ takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function vL takes nothing returns boolean
return true
endfunction
function xQ takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function vQ takes nothing returns boolean
if not xQ() then
return false
endif
return true
endfunction
function c0w takes string M9 returns nothing
local integer w0w
local integer u0w
local playerevent r0w
local integer s0w
local integer t0w
local force i0w
local force S0w
set Ib[Ub]=M9
set Ub=Ub+1
if Uo then
set Ub=Ub-1
set r0w=null
set i0w=null
set S0w=null
return
endif
set r0w=EVENT_PLAYER_END_CINEMATIC
set Ib[Ub]="when calling alloc_Closure in MainInit, line 72"
set Ub=Ub+1
if vl==0 then
if ml<32768 then
set ml=ml+1
set s0w=ml
set Ql[s0w]=669
else
call i7("Out of memory: Could not create Closure.","when calling error in MainInit, line 72")
set s0w=0
endif
else
set vl=vl-1
set s0w=xl[vl]
set Ql[s0w]=669
endif
set Ub=Ub-1
set Tc[s0w]=0
set Yc[s0w]=0
set Gc[s0w]=0
set Ib[Ub]="when calling add in MainInit, line 72"
set Ub=Ub+1
set Ib[Ub]="when calling toIntId in ClosureEvents, line 111"
set Ub=Ub+1
set t0w=qc[GetHandleId(r0w)]
if t0w==0 then
set t0w=IM(r0w,"when calling registerEventId in ClosureEvents, line 228")
endif
set Ub=Ub-1
set Tc[s0w]=t0w
if fc[Tc[s0w]]!=0 then
set Gc[fc[Tc[s0w]]]=s0w
set Yc[s0w]=fc[Tc[s0w]]
endif
set fc[Tc[s0w]]=s0w
set Ub=Ub-1
set i0w=bj_FORCE_ALL_PLAYERS
if IsPlayerInForce(GetLocalPlayer(),i0w) then
call ShowInterface(false,0.50)
endif
set w0w=0
set u0w=4
loop
exitwhen w0w>u0w
if not Eo then
set S0w=bj_FORCE_ALL_PLAYERS
set M9=vo[w0w]
if IsPlayerInForce(GetLocalPlayer(),S0w) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,10.0,M9)
endif
call TriggerSleepAction(12.5)
endif
set w0w=w0w+1
endloop
call CinematicModeExBJ(false,bj_FORCE_ALL_PLAYERS,bj_CINEMODE_INTERFACEFADE)
set Eo=true
set Ub=Ub-1
set r0w=null
set i0w=null
set S0w=null
endfunction
function vaw takes nothing returns nothing
set Ub=0
call c0w("MainInit, line 142")
endfunction
function vm takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988818,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988552,0)
endfunction
function yOw takes string lOw returns boolean
local integer bOw
set Ib[Ub]=lOw
set Ub=Ub+1
set el=Yow("when calling new_Table in TypeCasting, line 6")
set Ib[Ub]="when calling initTypecastData in TypeCasting, line 14"
set Ub=Ub+1
set bOw=el
set Ib[Ub]="when calling saveString in TypeCasting, line 11"
set Ub=Ub+1
if bb[bOw]==0 then
if bOw==0 then
call i7("Nullpointer exception when calling Table.saveString","when calling error in Table, line 60")
else
call i7("Called Table.saveString on invalid object.","when calling error in Table, line 60")
endif
endif
call SaveStr(ll,bOw,0,"")
set Ub=Ub-1-1-1
return true
endfunction
function vqw takes nothing returns boolean
set Ub=0
return yOw("TypeCasting, line 1")
endfunction
function wD takes nothing returns nothing
local integer LA=1
local integer XA=1751343475
local player CA=GetOwningPlayer(GetTriggerUnit())
local rect MA=bj_mapInitialPlayableArea
local location NA=Location(GetRectCenterX(MA),GetRectCenterY(MA))
local location VA=Location(GetLocationX(NA)+100000000.00,GetLocationY(NA)+100000000.00)
local real BA=bj_UNIT_FACING
call GroupClear(bj_lastCreatedGroup)
loop
set LA=LA-1
exitwhen LA<0
call CreateUnitAtLocSaveLast(CA,XA,VA,BA)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
call ShowUnit(bj_lastCreatedUnit,false)
set CA=null
set VA=null
set NA=null
set MA=null
endfunction
function wK takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function MK takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989315 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function wL takes nothing returns boolean
if not MK() then
return false
endif
return true
endfunction
function wQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651843,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651842,0)
endfunction
function MQ takes nothing returns boolean
if GetResearched()!=1378889807 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889807,true)!=2 then
return false
endif
return true
endfunction
function wW takes nothing returns boolean
if not MQ() then
return false
endif
return true
endfunction
function wZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989815,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989838,0)
endfunction
function Dsw takes string uuw returns boolean
local integer ruw
local integer suw
local integer tuw
local integer iuw
local integer Suw
local integer cuw
local integer ouw
local integer Ouw
local integer luw
local integer buw
local integer yuw
local integer puw
local integer euw
local integer quw
local integer auw
local integer nuw
local integer duw
local integer fuw
local integer Ruw
local integer Tuw
local integer Yuw
local integer Guw
local integer guw
local integer huw
local integer Fuw
local integer kuw
local integer juw
local integer xuw
local integer vuw
local integer muw
local integer Quw
local integer Wuw
local integer Euw
local integer Zuw
local integer Uuw
local integer Iuw
local integer Puw
local integer Auw
local integer Duw
local integer Huw
local integer Juw
local integer Kuw
local integer Luw
local integer Xuw
local integer Cuw
local integer Vuw
local integer Buw
local integer Nuw
local integer Muw
local integer wrw
local integer urw
local integer rrw
local integer srw
local integer trw
local integer irw
local integer Srw
local integer crw
local integer orw
local integer Orw
local integer lrw
local integer brw
local integer yrw
local integer prw
local integer erw
local integer qrw
local integer arw
local integer nrw
local integer drw
local integer frw
local integer Rrw
local integer Trw
local integer Yrw
local integer Grw
local integer grw
local integer hrw
local integer Frw
local integer krw
local integer jrw
local integer xrw
local integer vrw
local integer mrw
local integer Qrw
local integer Wrw
local integer Erw
local integer Zrw
local integer Urw
local integer Irw
local integer Prw
local integer Arw
local integer Drw
local integer Hrw
local integer Jrw
local integer Krw
local integer Lrw
local integer Xrw
local integer Crw
local integer Vrw
local integer Brw
local integer Nrw
local integer Mrw
local integer wsw
local integer usw
local integer rsw
local integer ssw
local integer tsw
local integer isw
local integer Ssw
local integer csw
local integer osw
local integer Osw
local integer lsw
local integer bsw
local integer ysw
local integer psw
local integer esw
local integer qsw
local integer asw
local integer nsw
local integer dsw
local integer fsw
local integer Rsw
local integer Tsw
local integer Ysw
local integer Gsw
local integer gsw
local integer hsw
local integer Fsw
local integer ksw
local integer jsw
local integer xsw
local integer vsw
local integer msw
local integer Qsw
local integer Wsw
local integer Esw
local integer Zsw
local integer Usw
local integer Isw
local integer Psw
local integer Asw
set Ib[Ub]=uuw
set Ub=Ub+1
set ruw=R2I(70)
set suw=R2I(30)
set tuw=R2I(10)
set iuw=R2I(70)
set Suw=R2I(30)
set cuw=R2I(140)
set Ib[Ub]="when calling asList in Multiboards, line 23"
set Ub=Ub+1
set ouw=n9("when calling new_LinkedList in LinkedList, line 391")
call Tpw(ouw,ruw,"when calling add in LinkedList, line 393")
call Tpw(ouw,suw,"when calling add in LinkedList, line 393")
call Tpw(ouw,tuw,"when calling add in LinkedList, line 393")
call Tpw(ouw,iuw,"when calling add in LinkedList, line 393")
call Tpw(ouw,Suw,"when calling add in LinkedList, line 393")
call Tpw(ouw,cuw,"when calling add in LinkedList, line 393")
set Ub=Ub-1
set sO[0]=ouw
set Ouw=R2I(70)
set luw=R2I(30)
set buw=R2I(10)
set yuw=R2I(70)
set puw=R2I(30)
set euw=R2I(140)
set Ib[Ub]="when calling asList in Multiboards, line 24"
set Ub=Ub+1
set quw=n9("when calling new_LinkedList in LinkedList, line 391")
call Tpw(quw,Ouw,"when calling add in LinkedList, line 393")
call Tpw(quw,luw,"when calling add in LinkedList, line 393")
call Tpw(quw,buw,"when calling add in LinkedList, line 393")
call Tpw(quw,yuw,"when calling add in LinkedList, line 393")
call Tpw(quw,puw,"when calling add in LinkedList, line 393")
call Tpw(quw,euw,"when calling add in LinkedList, line 393")
set Ub=Ub-1
set sO[1]=quw
set auw=R2I(70)
set nuw=R2I(30)
set duw=R2I(10)
set fuw=R2I(70)
set Ruw=R2I(30)
set Tuw=R2I(140)
set Ib[Ub]="when calling asList in Multiboards, line 25"
set Ub=Ub+1
set Yuw=n9("when calling new_LinkedList in LinkedList, line 391")
call Tpw(Yuw,auw,"when calling add in LinkedList, line 393")
call Tpw(Yuw,nuw,"when calling add in LinkedList, line 393")
call Tpw(Yuw,duw,"when calling add in LinkedList, line 393")
call Tpw(Yuw,fuw,"when calling add in LinkedList, line 393")
call Tpw(Yuw,Ruw,"when calling add in LinkedList, line 393")
call Tpw(Yuw,Tuw,"when calling add in LinkedList, line 393")
set Ub=Ub-1
set sO[2]=Yuw
set Guw=R2I(2.5)
set guw=R2I(2.5)
set huw=R2I(400)
set Fuw=R2I(2.5)
set kuw=R2I(2.5)
set juw=R2I(2.5)
set Ib[Ub]="when calling asList in Multiboards, line 27"
set Ub=Ub+1
set xuw=n9("when calling new_LinkedList in LinkedList, line 391")
call Tpw(xuw,Guw,"when calling add in LinkedList, line 393")
call Tpw(xuw,guw,"when calling add in LinkedList, line 393")
call Tpw(xuw,huw,"when calling add in LinkedList, line 393")
call Tpw(xuw,Fuw,"when calling add in LinkedList, line 393")
call Tpw(xuw,kuw,"when calling add in LinkedList, line 393")
call Tpw(xuw,juw,"when calling add in LinkedList, line 393")
set Ub=Ub-1
set sO[3]=xuw
set vuw=R2I(70)
set muw=R2I(30)
set Quw=R2I(30)
set Wuw=R2I(10)
set Euw=R2I(126)
set Zuw=R2I(84.000007629)
set Ib[Ub]="when calling asList in Multiboards, line 28"
set Ub=Ub+1
set Uuw=n9("when calling new_LinkedList in LinkedList, line 391")
call Tpw(Uuw,vuw,"when calling add in LinkedList, line 393")
call Tpw(Uuw,muw,"when calling add in LinkedList, line 393")
call Tpw(Uuw,Quw,"when calling add in LinkedList, line 393")
call Tpw(Uuw,Wuw,"when calling add in LinkedList, line 393")
call Tpw(Uuw,Euw,"when calling add in LinkedList, line 393")
call Tpw(Uuw,Zuw,"when calling add in LinkedList, line 393")
set Ub=Ub-1
set sO[4]=Uuw
set Iuw=R2I(70)
set Puw=R2I(30)
set Auw=R2I(30)
set Duw=R2I(10)
set Huw=R2I(126)
set Juw=R2I(84.000007629)
set Ib[Ub]="when calling asList in Multiboards, line 29"
set Ub=Ub+1
set Kuw=n9("when calling new_LinkedList in LinkedList, line 391")
call Tpw(Kuw,Iuw,"when calling add in LinkedList, line 393")
call Tpw(Kuw,Puw,"when calling add in LinkedList, line 393")
call Tpw(Kuw,Auw,"when calling add in LinkedList, line 393")
call Tpw(Kuw,Duw,"when calling add in LinkedList, line 393")
call Tpw(Kuw,Huw,"when calling add in LinkedList, line 393")
call Tpw(Kuw,Juw,"when calling add in LinkedList, line 393")
set Ub=Ub-1
set sO[5]=Kuw
set Luw=R2I(70)
set Xuw=R2I(30)
set Cuw=R2I(30)
set Vuw=R2I(10)
set Buw=R2I(126)
set Nuw=R2I(84.000007629)
set Ib[Ub]="when calling asList in Multiboards, line 30"
set Ub=Ub+1
set Muw=n9("when calling new_LinkedList in LinkedList, line 391")
call Tpw(Muw,Luw,"when calling add in LinkedList, line 393")
call Tpw(Muw,Xuw,"when calling add in LinkedList, line 393")
call Tpw(Muw,Cuw,"when calling add in LinkedList, line 393")
call Tpw(Muw,Vuw,"when calling add in LinkedList, line 393")
call Tpw(Muw,Buw,"when calling add in LinkedList, line 393")
call Tpw(Muw,Nuw,"when calling add in LinkedList, line 393")
set Ub=Ub-1
set sO[6]=Muw
set wrw=R2I(70)
set urw=R2I(30)
set rrw=R2I(30)
set srw=R2I(10)
set trw=R2I(126)
set irw=R2I(84.000007629)
set Ib[Ub]="when calling asList in Multiboards, line 31"
set Ub=Ub+1
set Srw=n9("when calling new_LinkedList in LinkedList, line 391")
call Tpw(Srw,wrw,"when calling add in LinkedList, line 393")
call Tpw(Srw,urw,"when calling add in LinkedList, line 393")
call Tpw(Srw,rrw,"when calling add in LinkedList, line 393")
call Tpw(Srw,srw,"when calling add in LinkedList, line 393")
call Tpw(Srw,trw,"when calling add in LinkedList, line 393")
call Tpw(Srw,irw,"when calling add in LinkedList, line 393")
set Ub=Ub-1
set sO[7]=Srw
set crw=R2I(70)
set orw=R2I(30)
set Orw=R2I(30)
set lrw=R2I(10)
set brw=R2I(126)
set yrw=R2I(84.000007629)
set Ib[Ub]="when calling asList in Multiboards, line 32"
set Ub=Ub+1
set prw=n9("when calling new_LinkedList in LinkedList, line 391")
call Tpw(prw,crw,"when calling add in LinkedList, line 393")
call Tpw(prw,orw,"when calling add in LinkedList, line 393")
call Tpw(prw,Orw,"when calling add in LinkedList, line 393")
call Tpw(prw,lrw,"when calling add in LinkedList, line 393")
call Tpw(prw,brw,"when calling add in LinkedList, line 393")
call Tpw(prw,yrw,"when calling add in LinkedList, line 393")
set Ub=Ub-1
set sO[8]=prw
set erw=R2I(70)
set qrw=R2I(30)
set arw=R2I(30)
set nrw=R2I(10)
set drw=R2I(126)
set frw=R2I(84.000007629)
set Ib[Ub]="when calling asList in Multiboards, line 33"
set Ub=Ub+1
set Rrw=n9("when calling new_LinkedList in LinkedList, line 391")
call Tpw(Rrw,erw,"when calling add in LinkedList, line 393")
call Tpw(Rrw,qrw,"when calling add in LinkedList, line 393")
call Tpw(Rrw,arw,"when calling add in LinkedList, line 393")
call Tpw(Rrw,nrw,"when calling add in LinkedList, line 393")
call Tpw(Rrw,drw,"when calling add in LinkedList, line 393")
call Tpw(Rrw,frw,"when calling add in LinkedList, line 393")
set Ub=Ub-1
set sO[9]=Rrw
set tO[0]=4
set tO[1]=0
set iO[0]=4
set iO[1]=1
set SO[0]=1
set SO[1]=4
set cO[0]=1
set cO[1]=5
set oO[0]=1
set oO[1]=6
set OO[0]=2
set OO[1]=6
set lO[0]=2
set lO[1]=3
set Trw=fOw("Food","when calling stringToIndex in Multiboards, line 56")
set Yrw=fOw("0","when calling stringToIndex in Multiboards, line 56")
set Grw=fOw("|","when calling stringToIndex in Multiboards, line 56")
set grw=fOw("Income","when calling stringToIndex in Multiboards, line 56")
set hrw=fOw("0","when calling stringToIndex in Multiboards, line 56")
set Frw=fOw(" ","when calling stringToIndex in Multiboards, line 56")
set Ib[Ub]="when calling asList in Multiboards, line 56"
set Ub=Ub+1
set krw=n9("when calling new_LinkedList in LinkedList, line 391")
call Tpw(krw,Trw,"when calling add in LinkedList, line 393")
call Tpw(krw,Yrw,"when calling add in LinkedList, line 393")
call Tpw(krw,Grw,"when calling add in LinkedList, line 393")
call Tpw(krw,grw,"when calling add in LinkedList, line 393")
call Tpw(krw,hrw,"when calling add in LinkedList, line 393")
call Tpw(krw,Frw,"when calling add in LinkedList, line 393")
set Ub=Ub-1
set bO[0]=krw
set jrw=fOw("Iron","when calling stringToIndex in Multiboards, line 57")
set xrw=fOw("0","when calling stringToIndex in Multiboards, line 57")
set vrw=fOw("|","when calling stringToIndex in Multiboards, line 57")
set mrw=fOw("Upkeep","when calling stringToIndex in Multiboards, line 57")
set Qrw=fOw("0","when calling stringToIndex in Multiboards, line 57")
set Wrw=fOw(" ","when calling stringToIndex in Multiboards, line 57")
set Ib[Ub]="when calling asList in Multiboards, line 57"
set Ub=Ub+1
set Erw=n9("when calling new_LinkedList in LinkedList, line 391")
call Tpw(Erw,jrw,"when calling add in LinkedList, line 393")
call Tpw(Erw,xrw,"when calling add in LinkedList, line 393")
call Tpw(Erw,vrw,"when calling add in LinkedList, line 393")
call Tpw(Erw,mrw,"when calling add in LinkedList, line 393")
call Tpw(Erw,Qrw,"when calling add in LinkedList, line 393")
call Tpw(Erw,Wrw,"when calling add in LinkedList, line 393")
set Ub=Ub-1
set bO[1]=Erw
set Zrw=fOw("Stone","when calling stringToIndex in Multiboards, line 58")
set Urw=fOw("0","when calling stringToIndex in Multiboards, line 58")
set Irw=fOw("|","when calling stringToIndex in Multiboards, line 58")
set Prw=fOw(" ","when calling stringToIndex in Multiboards, line 58")
set Arw=fOw(" ","when calling stringToIndex in Multiboards, line 58")
set Drw=fOw(" ","when calling stringToIndex in Multiboards, line 58")
set Ib[Ub]="when calling asList in Multiboards, line 58"
set Ub=Ub+1
set Hrw=n9("when calling new_LinkedList in LinkedList, line 391")
call Tpw(Hrw,Zrw,"when calling add in LinkedList, line 393")
call Tpw(Hrw,Urw,"when calling add in LinkedList, line 393")
call Tpw(Hrw,Irw,"when calling add in LinkedList, line 393")
call Tpw(Hrw,Prw,"when calling add in LinkedList, line 393")
call Tpw(Hrw,Arw,"when calling add in LinkedList, line 393")
call Tpw(Hrw,Drw,"when calling add in LinkedList, line 393")
set Ub=Ub-1
set bO[2]=Hrw
set Jrw=fOw(" ","when calling stringToIndex in Multiboards, line 60")
set Krw=fOw(" ","when calling stringToIndex in Multiboards, line 60")
set Lrw=fOw("                           City info","when calling stringToIndex in Multiboards, line 60")
set Xrw=fOw(" ","when calling stringToIndex in Multiboards, line 60")
set Crw=fOw(" ","when calling stringToIndex in Multiboards, line 60")
set Vrw=fOw(" ","when calling stringToIndex in Multiboards, line 60")
set Ib[Ub]="when calling asList in Multiboards, line 60"
set Ub=Ub+1
set Brw=n9("when calling new_LinkedList in LinkedList, line 391")
call Tpw(Brw,Jrw,"when calling add in LinkedList, line 393")
call Tpw(Brw,Krw,"when calling add in LinkedList, line 393")
call Tpw(Brw,Lrw,"when calling add in LinkedList, line 393")
call Tpw(Brw,Xrw,"when calling add in LinkedList, line 393")
call Tpw(Brw,Crw,"when calling add in LinkedList, line 393")
call Tpw(Brw,Vrw,"when calling add in LinkedList, line 393")
set Ub=Ub-1
set bO[3]=Brw
set Nrw=fOw("Tax","when calling stringToIndex in Multiboards, line 61")
set Mrw=fOw("0","when calling stringToIndex in Multiboards, line 61")
set wsw=fOw(" ","when calling stringToIndex in Multiboards, line 61")
set usw=fOw("|","when calling stringToIndex in Multiboards, line 61")
set rsw=fOw(" ","when calling stringToIndex in Multiboards, line 61")
set ssw=fOw(" ","when calling stringToIndex in Multiboards, line 61")
set Ib[Ub]="when calling asList in Multiboards, line 61"
set Ub=Ub+1
set tsw=n9("when calling new_LinkedList in LinkedList, line 391")
call Tpw(tsw,Nrw,"when calling add in LinkedList, line 393")
call Tpw(tsw,Mrw,"when calling add in LinkedList, line 393")
call Tpw(tsw,wsw,"when calling add in LinkedList, line 393")
call Tpw(tsw,usw,"when calling add in LinkedList, line 393")
call Tpw(tsw,rsw,"when calling add in LinkedList, line 393")
call Tpw(tsw,ssw,"when calling add in LinkedList, line 393")
set Ub=Ub-1
set bO[4]=tsw
set isw=fOw("Public order","when calling stringToIndex in Multiboards, line 62")
set Ssw=fOw("0","when calling stringToIndex in Multiboards, line 62")
set csw=fOw(" ","when calling stringToIndex in Multiboards, line 62")
set osw=fOw("|","when calling stringToIndex in Multiboards, line 62")
set Osw=fOw(" ","when calling stringToIndex in Multiboards, line 62")
set lsw=fOw(" ","when calling stringToIndex in Multiboards, line 62")
set Ib[Ub]="when calling asList in Multiboards, line 62"
set Ub=Ub+1
set bsw=n9("when calling new_LinkedList in LinkedList, line 391")
call Tpw(bsw,isw,"when calling add in LinkedList, line 393")
call Tpw(bsw,Ssw,"when calling add in LinkedList, line 393")
call Tpw(bsw,csw,"when calling add in LinkedList, line 393")
call Tpw(bsw,osw,"when calling add in LinkedList, line 393")
call Tpw(bsw,Osw,"when calling add in LinkedList, line 393")
call Tpw(bsw,lsw,"when calling add in LinkedList, line 393")
set Ub=Ub-1
set bO[5]=bsw
set ysw=fOw("Population","when calling stringToIndex in Multiboards, line 63")
set psw=fOw("0","when calling stringToIndex in Multiboards, line 63")
set esw=fOw(" ","when calling stringToIndex in Multiboards, line 63")
set qsw=fOw("|","when calling stringToIndex in Multiboards, line 63")
set asw=fOw(" ","when calling stringToIndex in Multiboards, line 63")
set nsw=fOw(" ","when calling stringToIndex in Multiboards, line 63")
set Ib[Ub]="when calling asList in Multiboards, line 63"
set Ub=Ub+1
set dsw=n9("when calling new_LinkedList in LinkedList, line 391")
call Tpw(dsw,ysw,"when calling add in LinkedList, line 393")
call Tpw(dsw,psw,"when calling add in LinkedList, line 393")
call Tpw(dsw,esw,"when calling add in LinkedList, line 393")
call Tpw(dsw,qsw,"when calling add in LinkedList, line 393")
call Tpw(dsw,asw,"when calling add in LinkedList, line 393")
call Tpw(dsw,nsw,"when calling add in LinkedList, line 393")
set Ub=Ub-1
set bO[6]=dsw
set fsw=fOw(" ","when calling stringToIndex in Multiboards, line 64")
set Rsw=fOw(" ","when calling stringToIndex in Multiboards, line 64")
set Tsw=fOw(" ","when calling stringToIndex in Multiboards, line 64")
set Ysw=fOw("|","when calling stringToIndex in Multiboards, line 64")
set Gsw=fOw(" ","when calling stringToIndex in Multiboards, line 64")
set gsw=fOw(" ","when calling stringToIndex in Multiboards, line 64")
set Ib[Ub]="when calling asList in Multiboards, line 64"
set Ub=Ub+1
set hsw=n9("when calling new_LinkedList in LinkedList, line 391")
call Tpw(hsw,fsw,"when calling add in LinkedList, line 393")
call Tpw(hsw,Rsw,"when calling add in LinkedList, line 393")
call Tpw(hsw,Tsw,"when calling add in LinkedList, line 393")
call Tpw(hsw,Ysw,"when calling add in LinkedList, line 393")
call Tpw(hsw,Gsw,"when calling add in LinkedList, line 393")
call Tpw(hsw,gsw,"when calling add in LinkedList, line 393")
set Ub=Ub-1
set bO[7]=hsw
set Fsw=fOw(" ","when calling stringToIndex in Multiboards, line 65")
set ksw=fOw(" ","when calling stringToIndex in Multiboards, line 65")
set jsw=fOw(" ","when calling stringToIndex in Multiboards, line 65")
set xsw=fOw("|","when calling stringToIndex in Multiboards, line 65")
set vsw=fOw(" ","when calling stringToIndex in Multiboards, line 65")
set msw=fOw(" ","when calling stringToIndex in Multiboards, line 65")
set Ib[Ub]="when calling asList in Multiboards, line 65"
set Ub=Ub+1
set Qsw=n9("when calling new_LinkedList in LinkedList, line 391")
call Tpw(Qsw,Fsw,"when calling add in LinkedList, line 393")
call Tpw(Qsw,ksw,"when calling add in LinkedList, line 393")
call Tpw(Qsw,jsw,"when calling add in LinkedList, line 393")
call Tpw(Qsw,xsw,"when calling add in LinkedList, line 393")
call Tpw(Qsw,vsw,"when calling add in LinkedList, line 393")
call Tpw(Qsw,msw,"when calling add in LinkedList, line 393")
set Ub=Ub-1
set bO[8]=Qsw
set Wsw=fOw(" ","when calling stringToIndex in Multiboards, line 66")
set Esw=fOw(" ","when calling stringToIndex in Multiboards, line 66")
set Zsw=fOw(" ","when calling stringToIndex in Multiboards, line 66")
set Usw=fOw("|","when calling stringToIndex in Multiboards, line 66")
set Isw=fOw(" ","when calling stringToIndex in Multiboards, line 66")
set Psw=fOw(" ","when calling stringToIndex in Multiboards, line 66")
set Ib[Ub]="when calling asList in Multiboards, line 66"
set Ub=Ub+1
set Asw=n9("when calling new_LinkedList in LinkedList, line 391")
call Tpw(Asw,Wsw,"when calling add in LinkedList, line 393")
call Tpw(Asw,Esw,"when calling add in LinkedList, line 393")
call Tpw(Asw,Zsw,"when calling add in LinkedList, line 393")
call Tpw(Asw,Usw,"when calling add in LinkedList, line 393")
call Tpw(Asw,Isw,"when calling add in LinkedList, line 393")
call Tpw(Asw,Psw,"when calling add in LinkedList, line 393")
set Ub=Ub-1
set bO[9]=Asw
set Ub=Ub-1
return true
endfunction
function waw takes nothing returns boolean
set Ub=0
return Dsw("Multiboards, line 1")
endfunction
function wg takes nothing returns nothing
local location JG
local location KG
local real LG
local real XG
local rect CG
local group VG
local group BG
local code NG
local boolean MG
set u=GetUnitLoc(GetSpellAbilityUnit())
set JG=u
set c=Location(GetLocationX(JG)+0.00,GetLocationY(JG)+200.00)
set KG=u
set LG=GetLocationX(KG)
set XG=GetLocationY(KG)
set O=Rect(LG-140,XG-150,LG+140,XG+150)
set CG=O
set VG=CreateGroup()
call GroupEnumUnitsInRect(VG,CG,null)
call DestroyBoolExpr(null)
set b=VG
set BG=b
set NG=Ay
set MG=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(BG,NG)
if MG then
call DestroyGroup(BG)
endif
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747988824,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"stand")
call DestroyGroup(b)
call RemoveLocation(c)
call RemoveLocation(u)
set JG=null
set KG=null
set CG=null
set VG=null
set BG=null
endfunction
function initMapBounds takes nothing returns nothing
local rect cond_result
local region receiver
local real temp
local real tuple_temp
set Ao=bj_mapInitialPlayableArea
call RegionAddRect(CreateRegion(),Ao)
set cond_result=GetWorldBounds()
set Do=cond_result
set receiver=CreateRegion()
call RegionAddRect(receiver,Do)
set Ho=receiver
set temp=GetRectMaxX(Do)
set tuple_temp=GetRectMaxY(Do)
set Jo=temp
set Ko=tuple_temp
endfunction
function x0w takes nothing returns boolean
call initMapBounds()
return true
endfunction
function jA takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())==1747988530 then
return true
endif
if GetUnitTypeId(GetTriggerUnit())==1747990327 then
return true
endif
if GetUnitTypeId(GetTriggerUnit())==1747989591 then
return true
endif
if GetUnitTypeId(GetTriggerUnit())==1747990085 then
return true
endif
return false
endfunction
function xA takes nothing returns boolean
if not jA() then
return false
endif
return true
endfunction
function jE takes nothing returns boolean
if GetResearched()!=1378889818 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889818,true)!=2 then
return false
endif
return true
endfunction
function xE takes nothing returns boolean
if not jE() then
return false
endif
return true
endfunction
function jJ takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989591 then
return false
endif
return true
endfunction
function xJ takes nothing returns boolean
if not jJ() then
return false
endif
return true
endfunction
function xU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990321,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990104,0)
endfunction
function xW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651833,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651841,0)
endfunction
function Dww takes player Zww_2,string Uww returns string
local integer Iww
local integer Pww
local integer Aww
set Ib[Ub]=Uww
set Ub=Ub+1
set Pww=dO[GetPlayerId(Zww_2)]
set Ib[Ub]="when calling getForceId in Messages, line 5"
set Ub=Ub+1
if mb[Pww]==0 then
if Pww==0 then
call i7("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 94")
else
call i7("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 94")
endif
endif
set Aww=fO[Pww]
set Ub=Ub-1
set Iww=GetRandomInt(0,2)
if Aww==0 then
set Uww=LO[Iww]
elseif Aww==1 then
set Uww=XO[Iww]
elseif Aww==2 then
set Uww=CO[Iww]
elseif Aww==3 then
set Uww=VO[Iww]
else
set Uww="Warning!"
endif
set Ub=Ub-1
return "|cffff0000"+Uww+"|r"
endfunction
function Law takes integer Daw,integer Haw,string Jaw returns integer
local integer Kaw
if Haw<0 or Haw>=24 then
call i7("Index out of Bounds",Jaw)
elseif Haw<=11 then
if Haw<=5 then
if Haw<=2 then
if Haw<=1 then
if Haw<=0 then
set Kaw=Hb[Daw]
else
set Kaw=Jb[Daw]
endif
else
set Kaw=Kb[Daw]
endif
elseif Haw<=4 then
if Haw<=3 then
set Kaw=Lb[Daw]
else
set Kaw=Xb[Daw]
endif
else
set Kaw=Cb[Daw]
endif
elseif Haw<=8 then
if Haw<=7 then
if Haw<=6 then
set Kaw=Vb[Daw]
else
set Kaw=Bb[Daw]
endif
else
set Kaw=Nb[Daw]
endif
elseif Haw<=10 then
if Haw<=9 then
set Kaw=Mb[Daw]
else
set Kaw=wy[Daw]
endif
else
set Kaw=uy[Daw]
endif
elseif Haw<=17 then
if Haw<=14 then
if Haw<=13 then
if Haw<=12 then
set Kaw=ry[Daw]
else
set Kaw=sy[Daw]
endif
else
set Kaw=ty[Daw]
endif
elseif Haw<=16 then
if Haw<=15 then
set Kaw=iy[Daw]
else
set Kaw=Sy[Daw]
endif
else
set Kaw=cy[Daw]
endif
elseif Haw<=20 then
if Haw<=19 then
if Haw<=18 then
set Kaw=oy[Daw]
else
set Kaw=Oy[Daw]
endif
else
set Kaw=ly[Daw]
endif
elseif Haw<=22 then
if Haw<=21 then
set Kaw=by[Daw]
else
set Kaw=yy[Daw]
endif
else
set Kaw=py[Daw]
endif
return Kaw
endfunction
function oiw takes integer siw,player tiw,integer iiw,string Siw returns nothing
local integer ciw
set Ib[Ub]=Siw
set Ub=Ub+1
set ciw=GetPlayerId(tiw)
if not TO[siw]then
set Ub=Ub-1
return
endif
if ciw>=24 then
set Ub=Ub-1
return
endif
if Law(siw,ciw,"when reading array PlayerStats_alliance_states in PlayerStats, line 33")==iiw or tiw==RO[siw]then
set Ub=Ub-1
return
endif
call Aaw(siw,ciw,iiw,"when writing array PlayerStats_alliance_states in PlayerStats, line 35")
call SetPlayerAllianceStateBJ(RO[siw],tiw,iiw)
set Ub=Ub-1
endfunction
function uww takes player Vww,string Bww returns string
local integer Nww
local integer Mww
local integer www_2
set Ib[Ub]=Bww
set Ub=Ub+1
set Mww=dO[GetPlayerId(Vww)]
set Ib[Ub]="when calling getForceId in Messages, line 37"
set Ub=Ub+1
if mb[Mww]==0 then
if Mww==0 then
call i7("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 94")
else
call i7("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 94")
endif
endif
set www_2=fO[Mww]
set Ub=Ub-1
set Nww=GetRandomInt(0,2)
if www_2==0 then
set Bww=ul[Nww]
elseif www_2==1 then
set Bww=rl[Nww]
elseif www_2==2 then
set Bww=sl[Nww]
elseif www_2==3 then
set Bww=tl[Nww]
else
set Bww="Good news!"
endif
set Ub=Ub-1
return "|cff00ff00"+Bww+"|r"
endfunction
function H2 takes string U4 returns nothing
local player I4
local player P4
local string A4
local integer D4
local force H4
local force J4
local integer K4
local integer L4
local integer X4
local integer C4
local integer V4
local integer B4
local integer N4
local integer M4
local integer w2
local force u2
local force r2
local integer s2
local integer t2
local integer i2
local integer S2
local integer c2
local integer o2
local player O2
local force l2
local player b2
local player y2
local player p2
local integer e2
local integer q2
local integer a2
local integer n2
local player d2
local force f2
local player R2
local player T2
local player Y2
local integer G2
local integer g2
local integer h2
local integer F2
local player k2
local force j2
local player x2
local player v2
local player m2
local integer Q2
local integer W2
local integer E2
local integer Z2
local player U2
local force I2
local player P2
local player A2
local player D2
set Ib[Ub]=U4
set Ub=Ub+1
set I4=GetOwningPlayer(GetSpellAbilityUnit())
set P4=GetOwningPlayer(GetSpellTargetUnit())
set A4=Y1(I4)
set U4=Y1(P4)
set D4=GetPlayerId(I4)
set u2=CreateForce()
call ForceAddPlayer(u2,I4)
set H4=u2
set r2=CreateForce()
call ForceAddPlayer(r2,I4)
set J4=r2
set K4=GetSpellAbilityId()
if K4==1093677396 then
set s2=dO[D4]
set Ib[Ub]="when calling getAllianceState in Diplomacy, line 17"
set Ub=Ub+1
if mb[s2]==0 then
if s2==0 then
call i7("Nullpointer exception when calling PlayerStats.getAllianceState","when calling error in PlayerStats, line 38")
else
call i7("Called PlayerStats.getAllianceState on invalid object.","when calling error in PlayerStats, line 38")
endif
endif
set Ib[Ub]="when calling getAllianceState in PlayerStats, line 38"
set Ub=Ub+1
set t2=Law(s2,GetPlayerId(P4),"when reading array PlayerStats_alliance_states in PlayerStats, line 39")
set Ub=Ub-1-1
if t2==bj_ALLIANCE_UNALLIED then
set Ub=Ub-1
set I4=null
set P4=null
set H4=null
set J4=null
set u2=null
set r2=null
set O2=null
set l2=null
set b2=null
set y2=null
set p2=null
set d2=null
set f2=null
set R2=null
set T2=null
set Y2=null
set k2=null
set j2=null
set x2=null
set v2=null
set m2=null
set U2=null
set I2=null
set P2=null
set A2=null
set D2=null
return
endif
set i2=dO[D4]
set S2=bj_ALLIANCE_UNALLIED
set Ib[Ub]="when calling setAlliance in Diplomacy, line 19"
set Ub=Ub+1
if mb[i2]==0 then
if i2==0 then
call i7("Nullpointer exception when calling PlayerStats.setAlliance","when calling error in PlayerStats, line 27")
else
call i7("Called PlayerStats.setAlliance on invalid object.","when calling error in PlayerStats, line 27")
endif
endif
call oiw(i2,P4,S2,"when calling setAlliance in PlayerStats, line 27")
set Ub=Ub-1
set c2=dO[GetPlayerId(P4)]
set o2=bj_ALLIANCE_UNALLIED
set Ib[Ub]="when calling setAlliance in Diplomacy, line 20"
set Ub=Ub+1
if mb[c2]==0 then
if c2==0 then
call i7("Nullpointer exception when calling PlayerStats.setAlliance","when calling error in PlayerStats, line 27")
else
call i7("Called PlayerStats.setAlliance on invalid object.","when calling error in PlayerStats, line 27")
endif
endif
call oiw(c2,I4,o2,"when calling setAlliance in PlayerStats, line 27")
set Ub=Ub-1
set L4=0
set X4=23
loop
exitwhen L4>X4
set O2=gO[L4]
set l2=CreateForce()
call ForceAddPlayer(l2,O2)
if gO[L4]==P4 then
set b2=gO[L4]
set Ib[Ub]="when calling warningToPlayer in Diplomacy, line 25"
set Ub=Ub+1
call DisplayTimedTextToPlayer(b2,0.,0.,10.0,Dww(b2,"when calling getWarningStringForPlayer in Messages, line 79"))
call DisplayTimedTextToPlayer(b2,0.,0.,10.0,A4+" has declared war on you!")
set Ub=Ub-1
elseif l2==H4 or l2==J4 then
set y2=gO[L4]
set Ib[Ub]="when calling attentionToPlayer in Diplomacy, line 27"
set Ub=Ub+1
call DisplayTimedTextToPlayer(y2,0.,0.,10.0,cww(y2,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(y2,0.,0.,10.0,A4+" has declared war on your brother-in-arms, "+U4+"!")
set Ub=Ub-1
else
set p2=gO[L4]
set Ib[Ub]="when calling noteToPlayer in Diplomacy, line 29"
set Ub=Ub+1
call DisplayTimedTextToPlayer(p2,0.,0.,10.0,Cww(p2,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(p2,0.,0.,10.0,A4+" has declared war on "+U4)
set Ub=Ub-1
endif
set L4=L4+1
endloop
elseif K4==1093677397 then
set e2=dO[D4]
set Ib[Ub]="when calling getAllianceState in Diplomacy, line 32"
set Ub=Ub+1
if mb[e2]==0 then
if e2==0 then
call i7("Nullpointer exception when calling PlayerStats.getAllianceState","when calling error in PlayerStats, line 38")
else
call i7("Called PlayerStats.getAllianceState on invalid object.","when calling error in PlayerStats, line 38")
endif
endif
set Ib[Ub]="when calling getAllianceState in PlayerStats, line 38"
set Ub=Ub+1
set q2=Law(e2,GetPlayerId(P4),"when reading array PlayerStats_alliance_states in PlayerStats, line 39")
set Ub=Ub-1-1
if q2==bj_ALLIANCE_ALLIED_VISION then
set Ub=Ub-1
set I4=null
set P4=null
set H4=null
set J4=null
set u2=null
set r2=null
set O2=null
set l2=null
set b2=null
set y2=null
set p2=null
set d2=null
set f2=null
set R2=null
set T2=null
set Y2=null
set k2=null
set j2=null
set x2=null
set v2=null
set m2=null
set U2=null
set I2=null
set P2=null
set A2=null
set D2=null
return
endif
set a2=dO[D4]
set n2=bj_ALLIANCE_ALLIED_VISION
set Ib[Ub]="when calling setAlliance in Diplomacy, line 34"
set Ub=Ub+1
if mb[a2]==0 then
if a2==0 then
call i7("Nullpointer exception when calling PlayerStats.setAlliance","when calling error in PlayerStats, line 27")
else
call i7("Called PlayerStats.setAlliance on invalid object.","when calling error in PlayerStats, line 27")
endif
endif
call oiw(a2,P4,n2,"when calling setAlliance in PlayerStats, line 27")
set Ub=Ub-1
set C4=0
set V4=23
loop
exitwhen C4>V4
set d2=gO[C4]
set f2=CreateForce()
call ForceAddPlayer(f2,d2)
if gO[C4]==P4 then
set R2=gO[C4]
set Ib[Ub]="when calling goodNewsToPlayer in Diplomacy, line 39"
set Ub=Ub+1
call DisplayTimedTextToPlayer(R2,0.,0.,10.0,uww(R2,"when calling getGoodNewsStringForPlayer in Messages, line 85"))
call DisplayTimedTextToPlayer(R2,0.,0.,10.0,A4+" wants to ally you")
set Ub=Ub-1
elseif f2==H4 or f2==J4 then
set T2=gO[C4]
set Ib[Ub]="when calling noteToPlayer in Diplomacy, line 41"
set Ub=Ub+1
call DisplayTimedTextToPlayer(T2,0.,0.,10.0,Cww(T2,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(T2,0.,0.,10.0,A4+" allied "+U4)
set Ub=Ub-1
else
set Y2=gO[C4]
set Ib[Ub]="when calling noteToPlayer in Diplomacy, line 43"
set Ub=Ub+1
call DisplayTimedTextToPlayer(Y2,0.,0.,10.0,Cww(Y2,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(Y2,0.,0.,10.0,A4+" allied "+U4)
set Ub=Ub-1
endif
set C4=C4+1
endloop
elseif K4==1093677398 then
set G2=dO[D4]
set Ib[Ub]="when calling getAllianceState in Diplomacy, line 46"
set Ub=Ub+1
if mb[G2]==0 then
if G2==0 then
call i7("Nullpointer exception when calling PlayerStats.getAllianceState","when calling error in PlayerStats, line 38")
else
call i7("Called PlayerStats.getAllianceState on invalid object.","when calling error in PlayerStats, line 38")
endif
endif
set Ib[Ub]="when calling getAllianceState in PlayerStats, line 38"
set Ub=Ub+1
set g2=Law(G2,GetPlayerId(P4),"when reading array PlayerStats_alliance_states in PlayerStats, line 39")
set Ub=Ub-1-1
if g2==bj_ALLIANCE_NEUTRAL then
set Ub=Ub-1
set I4=null
set P4=null
set H4=null
set J4=null
set u2=null
set r2=null
set O2=null
set l2=null
set b2=null
set y2=null
set p2=null
set d2=null
set f2=null
set R2=null
set T2=null
set Y2=null
set k2=null
set j2=null
set x2=null
set v2=null
set m2=null
set U2=null
set I2=null
set P2=null
set A2=null
set D2=null
return
endif
set h2=dO[D4]
set F2=bj_ALLIANCE_NEUTRAL
set Ib[Ub]="when calling setAlliance in Diplomacy, line 48"
set Ub=Ub+1
if mb[h2]==0 then
if h2==0 then
call i7("Nullpointer exception when calling PlayerStats.setAlliance","when calling error in PlayerStats, line 27")
else
call i7("Called PlayerStats.setAlliance on invalid object.","when calling error in PlayerStats, line 27")
endif
endif
call oiw(h2,P4,F2,"when calling setAlliance in PlayerStats, line 27")
set Ub=Ub-1
set B4=0
set N4=23
loop
exitwhen B4>N4
set k2=gO[B4]
set j2=CreateForce()
call ForceAddPlayer(j2,k2)
if gO[B4]==P4 then
set x2=gO[B4]
set Ib[Ub]="when calling noteToPlayer in Diplomacy, line 53"
set Ub=Ub+1
call DisplayTimedTextToPlayer(x2,0.,0.,10.0,Cww(x2,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(x2,0.,0.,10.0,A4+" is now neutral towards you")
set Ub=Ub-1
elseif j2==H4 or j2==J4 then
set v2=gO[B4]
set Ib[Ub]="when calling noteToPlayer in Diplomacy, line 55"
set Ub=Ub+1
call DisplayTimedTextToPlayer(v2,0.,0.,10.0,Cww(v2,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(v2,0.,0.,10.0,A4+" shows "+U4+" neutrality")
set Ub=Ub-1
else
set m2=gO[B4]
set Ib[Ub]="when calling noteToPlayer in Diplomacy, line 57"
set Ub=Ub+1
call DisplayTimedTextToPlayer(m2,0.,0.,10.0,Cww(m2,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(m2,0.,0.,10.0,A4+" shows "+U4+" neutrality")
set Ub=Ub-1
endif
set B4=B4+1
endloop
elseif K4==1093677400 then
set Q2=dO[D4]
set Ib[Ub]="when calling getAllianceState in Diplomacy, line 60"
set Ub=Ub+1
if mb[Q2]==0 then
if Q2==0 then
call i7("Nullpointer exception when calling PlayerStats.getAllianceState","when calling error in PlayerStats, line 38")
else
call i7("Called PlayerStats.getAllianceState on invalid object.","when calling error in PlayerStats, line 38")
endif
endif
set Ib[Ub]="when calling getAllianceState in PlayerStats, line 38"
set Ub=Ub+1
set W2=Law(Q2,GetPlayerId(P4),"when reading array PlayerStats_alliance_states in PlayerStats, line 39")
set Ub=Ub-1-1
if W2==bj_ALLIANCE_NEUTRAL then
set Ub=Ub-1
set I4=null
set P4=null
set H4=null
set J4=null
set u2=null
set r2=null
set O2=null
set l2=null
set b2=null
set y2=null
set p2=null
set d2=null
set f2=null
set R2=null
set T2=null
set Y2=null
set k2=null
set j2=null
set x2=null
set v2=null
set m2=null
set U2=null
set I2=null
set P2=null
set A2=null
set D2=null
return
endif
set E2=dO[D4]
set Z2=bj_ALLIANCE_NEUTRAL
set Ib[Ub]="when calling setAlliance in Diplomacy, line 62"
set Ub=Ub+1
if mb[E2]==0 then
if E2==0 then
call i7("Nullpointer exception when calling PlayerStats.setAlliance","when calling error in PlayerStats, line 27")
else
call i7("Called PlayerStats.setAlliance on invalid object.","when calling error in PlayerStats, line 27")
endif
endif
call oiw(E2,P4,Z2,"when calling setAlliance in PlayerStats, line 27")
set Ub=Ub-1
set M4=0
set w2=23
loop
exitwhen M4>w2
set U2=gO[M4]
set I2=CreateForce()
call ForceAddPlayer(I2,U2)
if gO[M4]==P4 then
set P2=gO[M4]
set Ib[Ub]="when calling noteToPlayer in Diplomacy, line 67"
set Ub=Ub+1
call DisplayTimedTextToPlayer(P2,0.,0.,10.0,Cww(P2,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(P2,0.,0.,10.0,A4+" unallies you!")
set Ub=Ub-1
elseif I2==H4 or I2==J4 then
set A2=gO[M4]
set Ib[Ub]="when calling noteToPlayer in Diplomacy, line 69"
set Ub=Ub+1
call DisplayTimedTextToPlayer(A2,0.,0.,10.0,Cww(A2,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(A2,0.,0.,10.0,A4+" unallied "+U4)
set Ub=Ub-1
else
set D2=gO[M4]
set Ib[Ub]="when calling noteToPlayer in Diplomacy, line 71"
set Ub=Ub+1
call DisplayTimedTextToPlayer(D2,0.,0.,10.0,Cww(D2,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(D2,0.,0.,10.0,A4+" unallied "+U4)
set Ub=Ub-1
endif
set M4=M4+1
endloop
endif
set Ub=Ub-1
set I4=null
set P4=null
set H4=null
set J4=null
set u2=null
set r2=null
set O2=null
set l2=null
set b2=null
set y2=null
set p2=null
set d2=null
set f2=null
set R2=null
set T2=null
set Y2=null
set k2=null
set j2=null
set x2=null
set v2=null
set m2=null
set U2=null
set I2=null
set P2=null
set A2=null
set D2=null
endfunction
function xaw takes nothing returns nothing
set Ub=0
call H2("Diplomacy, line 116")
endfunction
function jm takes nothing returns boolean
if GetResearched()!=1378889800 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889800,true)!=1 then
return false
endif
return true
endfunction
function xm takes nothing returns boolean
if not jm() then
return false
endif
return true
endfunction
function initializeTable takes string stackPos returns nothing
local integer i_2
local integer this
local integer parentKey
set Ib[Ub]=stackPos
set Ub=Ub+1
set i_2=0
loop
exitwhen i_2>15
set this=Ac
set parentKey=StringHash(Pc[i_2])
set stackPos="when calling saveInt in Colors, line 206"
set Ib[Ub]="when calling saveInt in Colors, line 206"
set Ub=Ub+1
if bb[this]==0 then
if this==0 then
call i7("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call i7("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(ll,this,parentKey,i_2)
set Ub=Ub-1
set i_2=i_2+1
endloop
set Ub=Ub-1
endfunction
function e1 takes string p1 returns boolean
set Ib[Ub]=p1
set Ub=Ub+1
set Zc[0]=255
set Uc[0]=2
set Ic[0]=2
set Zc[1]=0
set Uc[1]=65
set Ic[1]=255
set Zc[2]=27
set Uc[2]=229
set Ic[2]=184
set Zc[3]=83
set Uc[3]=0
set Ic[3]=128
set Zc[4]=255
set Uc[4]=252
set Ic[4]=0
set Zc[5]=254
set Uc[5]=137
set Ic[5]=13
set Zc[6]=31
set Uc[6]=191
set Ic[6]=0
set Zc[7]=228
set Uc[7]=90
set Ic[7]=175
set Zc[8]=148
set Uc[8]=149
set Ic[8]=150
set Zc[9]=125
set Uc[9]=190
set Ic[9]=241
set Zc[10]=15
set Uc[10]=97
set Ic[10]=69
set Zc[11]=77
set Uc[11]=41
set Ic[11]=3
set Zc[12]=155
set Uc[12]=0
set Ic[12]=0
set Zc[13]=0
set Uc[13]=0
set Ic[13]=195
set Zc[14]=0
set Uc[14]=234
set Ic[14]=255
set Zc[15]=190
set Uc[15]=0
set Ic[15]=254
set Zc[16]=235
set Uc[16]=205
set Ic[16]=135
set Zc[17]=248
set Uc[17]=164
set Ic[17]=139
set Zc[18]=191
set Uc[18]=255
set Ic[18]=128
set Zc[19]=220
set Uc[19]=185
set Ic[19]=235
set Zc[20]=40
set Uc[20]=40
set Ic[20]=40
set Zc[21]=235
set Uc[21]=240
set Ic[21]=255
set Zc[22]=0
set Uc[22]=120
set Ic[22]=30
set Zc[23]=164
set Uc[23]=11
set Ic[23]=51
set Pc[0]="0"
set Pc[1]="1"
set Pc[2]="2"
set Pc[3]="3"
set Pc[4]="4"
set Pc[5]="5"
set Pc[6]="6"
set Pc[7]="7"
set Pc[8]="8"
set Pc[9]="9"
set Pc[10]="A"
set Pc[11]="B"
set Pc[12]="C"
set Pc[13]="D"
set Pc[14]="E"
set Pc[15]="F"
set Ac=Yow("when calling new_Table in Colors, line 154")
call initializeTable("when calling initializeTable in Colors, line 209")
set Ub=Ub-1
return true
endfunction
function xqw takes nothing returns boolean
set Ub=0
return e1("Colors, line 1")
endfunction
function bD takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747988557 then
return false
endif
return true
endfunction
function yD takes nothing returns boolean
if not bD() then
return false
endif
return true
endfunction
function bE takes nothing returns boolean
if GetResearched()!=1378890035 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890035,true)!=1 then
return false
endif
return true
endfunction
function yE takes nothing returns boolean
if not bE() then
return false
endif
return true
endfunction
function bI takes nothing returns boolean
if GetResearched()!=1378890051 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890051,true)!=1 then
return false
endif
return true
endfunction
function yI takes nothing returns boolean
if not bI() then
return false
endif
return true
endfunction
function bL takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989305 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function yL takes nothing returns boolean
if not bL() then
return false
endif
return true
endfunction
function yQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989057,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988558,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988551,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989066,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651824,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651826,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988818,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989080,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989072,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989082,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988559,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988812,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651828,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989065,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989067,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989301,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651843,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988561,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988788,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988565,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988566,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988567,0)
endfunction
function yU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989830,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989829,0)
endfunction
function ytw takes string otw returns boolean
local playerunitevent Otw
local integer ltw
local integer btw
set Ib[Ub]=otw
set Ub=Ub+1
set Otw=EVENT_PLAYER_UNIT_CONSTRUCT_START
set Ib[Ub]="when calling alloc_Closure in NoShipsNearRivers, line 7"
set Ub=Ub+1
if vl==0 then
if ml<32768 then
set ml=ml+1
set ltw=ml
set Ql[ltw]=672
else
call i7("Out of memory: Could not create Closure.","when calling error in NoShipsNearRivers, line 7")
set ltw=0
endif
else
set vl=vl-1
set ltw=xl[vl]
set Ql[ltw]=672
endif
set Ub=Ub-1
set Tc[ltw]=0
set Yc[ltw]=0
set Gc[ltw]=0
set Ib[Ub]="when calling add in NoShipsNearRivers, line 7"
set Ub=Ub+1
set Ib[Ub]="when calling toIntId in ClosureEvents, line 111"
set Ub=Ub+1
set btw=qc[GetHandleId(Otw)]
if btw==0 then
set btw=IM(Otw,"when calling registerEventId in ClosureEvents, line 228")
endif
set Ub=Ub-1
set Tc[ltw]=btw
if fc[Tc[ltw]]!=0 then
set Gc[fc[Tc[ltw]]]=ltw
set Yc[ltw]=fc[Tc[ltw]]
endif
set fc[Tc[ltw]]=ltw
set Ub=Ub-1-1
set Otw=null
return true
endfunction
function yaw takes nothing returns boolean
set Ub=0
return ytw("NoShipsNearRivers, line 1")
endfunction
function ybw takes nothing returns boolean
return true
endfunction
function bx takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function yx takes nothing returns boolean
if not bx() then
return false
endif
return true
endfunction
function Nf takes nothing returns nothing
set w=null
set u=null
set s=null
set i=null
set S=null
set c=null
set o=null
set O=null
set l=null
set b=null
set p=null
set e=null
set a=null
set n=null
set d=null
set f=null
set R=null
set T=null
set Y=null
set G=null
set g=null
set h=null
set F=null
set k=null
set j=null
set x=null
set v=null
set m=null
set Q=null
set W=null
set E=null
set Z=null
set U=null
set I=null
set P=null
set A=null
set D=null
set H=null
set J=null
set K=null
set L=null
set X=null
set C=null
set V=null
set B=null
set N=null
set M=null
set ww=null
set uw=null
set rw=null
set sw=null
set tw=null
set iw=null
set Sw=null
set cw=null
set ow=null
set Ow=null
set lw=null
set bw=null
set yw=null
set pw=null
set ew=null
set qw=null
set aw=null
set nw=null
set dw=null
set fw=null
set Rw=null
set Tw=null
set Yw=null
set Gw=null
set gw=null
set hw=null
set Fw=null
set kw=null
set jw=null
set xw=null
set vw=null
set mw=null
set Qw=null
set Ww=null
set Ew=null
set Zw=null
set Uw=null
set Iw=null
set Pw=null
set Aw=null
set Dw=null
set Hw=null
set Jw=null
set Kw=null
set Lw=null
set Xw=null
set Cw=null
set Vw=null
set Bw=null
set Nw=null
set Mw=null
set wu=null
set uu=null
set ru=null
set su=null
set tu=null
set iu=null
set Su=null
set cu=null
set ou=null
set Ou=null
set lu=null
set bu=null
set yu=null
set pu=null
set eu=null
set qu=null
set au=null
set nu=null
set du=null
set fu=null
set Ru=null
set Tu=null
set Yu=null
set Gu=null
set gu=null
set hu=null
set Fu=null
set ku=null
set ju=null
set xu=null
set vu=null
set mu=null
set Qu=null
set Wu=null
set Eu=null
set Zu=null
set Uu=null
set Iu=null
set Pu=null
set Au=null
set Du=null
set Hu=null
set Ju=null
set Ku=null
set Lu=null
set Xu=null
set Cu=null
set Vu=null
set Bu=null
set Nu=null
set Mu=null
set wr=null
set ur=null
set rr=null
set sr=null
set tr=null
set ir=null
set Sr=null
set cr=null
set lr=null
set br=null
set yr=null
set pr=null
set er=null
set qr=null
set ar=null
set nr=null
set dr=null
set fr=null
set Rr=null
set Tr=null
set Yr=null
set Gr=null
set gr=null
set hr=null
set Fr=null
set kr=null
set jr=null
set xr=null
set vr=null
set mr=null
set Qr=null
set Wr=null
set Er=null
set Zr=null
set Ur=null
set Ir=null
set Pr=null
set Ar=null
set Dr=null
set Hr=null
set Jr=null
set Kr=null
set Lr=null
set Xr=null
set Cr=null
set Vr=null
set Br=null
set Nr=null
set Mr=null
set ws=null
set us=null
set rs=null
set ss=null
set ts=null
set is=null
set Ss=null
set cs=null
set os=null
set Os=null
set ls=null
set bs=null
set ys=null
set ps=null
set es=null
set qs=null
set as=null
set ns=null
set ds=null
set fs=null
set Rs=null
set Ts=null
set Ys=null
set Gs=null
set gs=null
set hs=null
set Fs=null
set ks=null
set js=null
set xs=null
set vs=null
set ms=null
set Qs=null
set Ws=null
set Es=null
set Zs=null
set Us=null
set Is=null
set Ps=null
set As=null
set Ds=null
set Hs=null
set Js=null
set Ks=null
set Ls=null
set Xs=null
set Cs=null
set Vs=null
set Bs=null
set Ns=null
set Ms=null
set wt=null
set ut=null
set rt=null
set st=null
set tt=null
set St=null
set ct=null
set ot=null
set Ot=null
set lt=null
set bt=null
set yt=null
set pt=null
set et=null
set qt=null
set at=null
set nt=null
set dt=null
set ft=null
set Rt=null
set Tt=null
set Yt=null
set Gt=null
set gt=null
set ht=null
set Ft=null
set kt=null
set jt=null
set xt=null
set vt=null
set mt=null
set Qt=null
set Wt=null
set Et=null
set Zt=null
set Ut=null
set It=null
set Pt=null
set At=null
set Dt=null
set Ht=null
set Jt=null
set Kt=null
set Lt=null
set Xt=null
set Ct=null
set Vt=null
set Bt=null
set Nt=null
set Mt=null
set wi=null
set ui=null
set ri=null
set si=null
set ti=null
set ii=null
set Si=null
set ci=null
set oi=null
set Oi=null
set li=null
set bi=null
set yi=null
set pi=null
set ei=null
set qi=null
set ai=null
set ni=null
set di=null
set fi=null
set Ri=null
set Ti=null
set Yi=null
set Gi=null
set gi=null
set hi=null
set Fi=null
set ki=null
set ji=null
set xi=null
set vi=null
set mi=null
set Qi=null
set Wi=null
set Ei=null
set Zi=null
set Ui=null
set Ii=null
set Pi=null
set Ai=null
set Di=null
set Hi=null
set Ji=null
set Ki=null
set Li=null
set Xi=null
set Ci=null
set Vi=null
set Bi=null
set Ni=null
set Mi=null
set wS=null
set uS=null
set rS=null
set sS=null
set tS=null
set iS=null
set SS=null
set cS=null
set oS=null
set ey=function MR
set qy=function rT
set ay=function aT
set ny=function YT
set dy=function hT
set fy=function mT
set Ry=function ET
set Ty=function DT
set Yy=function KT
set Gy=function NT
set gy=function tY
set hy=function lY
set Fy=function aY
set ky=function YY
set jy=function jY
set xy=function EY
set vy=function DY
set my=function CY
set Qy=function NY
set Wy=function sG
set Ey=function tG
set Zy=function nG
set Uy=function gG
set Iy=function YG
set Py=function EG
set Ay=function HG
set Dy=function AG
set Hy=function wg
set Jy=function cg
set Ky=function ig
set Ly=function ng
set Xy=function gg
set Cy=function Yg
set Vy=function Eg
set By=function Hg
set Ny=function Xg
set My=function Ng
set wp=function rh
set up=function ih
set rp=function nh
set sp=function Gh
set tp=function Zh
set ip=function Hh
set Sp=function rF
set cp=function oF
set op=function RF
set Op=function hF
set lp=function IF
set bp=function JF
set yp=function sk
set pp=function ok
set ep=function Rk
set qp=function hk
set ap=function Ik
set np=function Kk
set dp=function tj
set fp=function lj
set Rp=function Yj
set Tp=function jj
set Yp=function Dj
set Gp=function Xj
set gp=function Sx
set hp=function yx
set Fp=function px
set kp=function fx
set jp=function Rx
set xp=function Fx
set vp=function kx
set mp=function Wx
set Qp=function Ex
set Wp=function Dx
set Ep=function Hx
set Zp=function Vx
set Up=function Bx
set Ip=function sv
set Pp=function tv
set Ap=function lv
set Dp=function bv
set Hp=function nv
set Jp=function dv
set Kp=function gv
set Lp=function hv
set Xp=function mv
set Cp=function Qv
set Vp=function Pv
set Bp=function Av
set Np=function Xv
set Mp=function Cv
set we=function um
set ue=function rm
set re=function om
set se=function Om
set te=function qm
set ie=function am
set Se=function Ym
set ce=function Gm
set oe=function xm
set Oe=function vm
set le=function Um
set be=function Im
set ye=function Km
set pe=function Lm
set ee=function Mm
set qe=function wQ
set ae=function SQ
set ne=function cQ
set de=function yQ
set fe=function pQ
set Re=function aQ
set Te=function nQ
set Ye=function GQ
set Ge=function gQ
set ge=function vQ
set he=function mQ
set Fe=function IQ
set ke=function PQ
set je=function LQ
set xe=function XQ
set ve=function wW
set me=function uW
set Qe=function cW
set We=function oW
set Ee=function eW
set Ze=function qW
set Ue=function TW
set Ie=function YW
set Pe=function jW
set Ae=function xW
set De=function ZW
set He=function UW
set Je=function JW
set Ke=function KW
set Le=function NW
set Xe=function MW
set Ce=function iE
set Ve=function SE
set Be=function yE
set Ne=function pE
set Me=function dE
set wq=function fE
set uq=function YE
set rq=function GE
set sq=function xE
set tq=function vE
set iq=function UE
set Sq=function IE
set cq=function KE
set oq=function LE
set Oq=function ME
set lq=function wZ
set bq=function SZ
set yq=function cZ
set pq=function pZ
set eq=function eZ
set qq=function RZ
set aq=function TZ
set nq=function kZ
set dq=function jZ
set fq=function EZ
set Rq=function ZZ
set Tq=function HZ
set Yq=function JZ
set Gq=function BZ
set gq=function NZ
set hq=function tU
set Fq=function iU
set kq=function bU
set jq=function yU
set xq=function nU
set vq=function dU
set mq=function TU
set Qq=function YU
set Wq=function jU
set Eq=function xU
set Zq=function ZU
set Uq=function UU
set Iq=function JU
set Pq=function KU
set Aq=function NU
set Dq=function MU
set Hq=function iI
set Jq=function SI
set Kq=function yI
set Lq=function pI
set Xq=function fI
set Cq=function RI
set Vq=function FI
set Bq=function kI
set Nq=function WI
set Mq=function EI
set wa=function DI
set ua=function HI
set ra=function VI
set sa=function BI
set ta=function sP
set ia=function tP
set Sa=function lP
set ca=function bP
set oa=function nP
set Oa=function dP
set la=function gP
set ba=function hP
set ya=function mP
set pa=function QP
set ea=function PP
set qa=function AP
set aa=function LP
set na=function XP
set da=function VP
set fa=function rA
set Ra=function lA
set Ta=function qA
set Ya=function GA
set Ga=function xA
set ga=function IA
set ha=function KA
set Fa=function wD
set ka=function iD
set ja=function OD
set xa=function yD
set va=function pD
set ma=function fD
set Qa=function RD
set Wa=function FD
set Ea=function kD
set Za=function WD
set Ua=function ED
set Ia=function DD
set Pa=function HD
set Aa=function VD
set Da=function BD
set Ha=function sH
set Ja=function tH
set Ka=function lH
set La=function bH
set Xa=function nH
set Ca=function dH
set Va=function gH
set Ba=function hH
set Na=function mH
set Ma=function QH
set wn=function PH
set un=function AH
set rn=function XH
set sn=function CH
set tn=function uJ
set Sn=function rJ
set cn=function oJ
set on=function OJ
set On=function qJ
set ln=function aJ
set bn=function YJ
set yn=function GJ
set pn=function xJ
set en=function vJ
set qn=function UJ
set an=function IJ
set nn=function KJ
set dn=function LJ
set fn=function MJ
set Rn=function wK
set Tn=function SK
set Yn=function cK
set Gn=function pK
set gn=function eK
set hn=function RK
set Fn=function TK
set kn=function kK
set jn=function WK
set xn=function AK
set vn=function XK
set mn=function wL
set Qn=function SL
set Wn=function yL
set En=function dL
set Zn=function BR
set Un=function NR
set In=function kj
set Pn=function tcw
set An=function s8
set Dn=function low
set Hn=function mL
set Jn=function bbw
set Kn=function Www
set Ln=function uiw
set Xn=function pSw
set Cn=function QL
set Vn=function c7
set Bn=function f9
set Nn=function X6
set Mn=function Eww
set wd=function dSw
set ud=function fow
set rd=function uSw
set sd=function xqw
set td=function O7
set id=function t8
set Sd=function ybw
set cd=function vqw
set od=function F3
set Od=function mqw
set ld=function Wqw
set bd=function vL
set yd=function WL
set pd=function b7
set ed=function Eqw
set qd=function Zqw
set ad=function S7
set nd=function hcw
set dd=function Hqw
set fd=function Hsw
set Rd=function Jqw
set Td=function Kqw
set Yd=function Lqw
set Gd=function B3
set gd=function Gow
set hd=function V2
set Fd=function r8
set kd=function gtw
set jd=function oow
set xd=function Oow
set vd=function Jow
set md=function HOw
set Qd=function JOw
set Wd=function x0w
set Ed=function Xqw
set Zd=function Cqw
set Ud=function Gtw
set Id=function Vqw
set Pd=function Bqw
set Ad=function Nqw
set Dd=function KOw
set Hd=function Mqw
set Jd=function gww
set Kd=function dow
set Ld=function waw
set Xd=function riw
set Cd=function uaw
set Vd=function R9
set Bd=function raw
set Nd=function saw
set Md=function D1
set wf=function taw
set uf=function iaw
set rf=function Saw
set sf=function caw
set tf=function Z4
set Sf=function oaw
set cf=function Oaw
set of=function d9
set Of=function law
set lf=function baw
set bf=function yaw
set yf=function paw
set pf=function eaw
set ef=function qaw
set qf=function aaw
set af=function hX
set nf=function naw
set df=function daw
set ff=function s3
set Rf=function faw
set Tf=function Raw
set Yf=function Taw
set Gf=function Yaw
set gf=function Gaw
set hf=function gaw
set Ff=function Faw
set kf=function kaw
set jf=function R4
set xf=function jaw
set vf=function C2
set mf=function xaw
set Qf=function o7
set Wf=function j0w
set Ef=function vaw
set Zf=function l7
set Uf=function Ctw
set If=function Btw
set Pf=function Ntw
set Af=function Qaw
set Df=function Waw
set Hf=function Eaw
set Jf=function maw
endfunction
function DR takes nothing returns nothing
local player AR=Player(19)
call CreateUnit(AR,1211118391,-29820.0,29950.4,269.903)
call SetHeroLevel(CreateUnit(AR,1211118406,-29707.1,29309.8,269.793),15,false)
set AR=null
endfunction
function ER takes nothing returns nothing
local player WR=Player(16)
call CreateUnit(WR,1211118391,-30203.1,29826.8,270.268)
call SetHeroLevel(CreateUnit(WR,1211118406,-29780.4,29300.3,269.864),15,false)
set WR=null
endfunction
function FR takes nothing returns nothing
local player hR=Player(12)
call CreateUnit(hR,1211118391,-30464.7,30089.7,270.515)
call SetHeroLevel(CreateUnit(hR,1211118406,-29962.2,29311.8,270.038),15,false)
set hR=null
endfunction
function JR takes nothing returns nothing
local player HR=Player(22)
call CreateUnit(HR,1211118391,-29948.2,29831.1,270.025)
call SetHeroLevel(CreateUnit(HR,1211118406,-29699.3,29565.4,269.787),15,false)
set HR=null
endfunction
function LR takes nothing returns nothing
local player KR=Player(23)
call CreateUnit(KR,1211118391,-29689.5,29824.6,269.779)
call SetHeroLevel(CreateUnit(KR,1211118406,-29815.4,29434.4,269.898),15,false)
set KR=null
endfunction
function PR takes nothing returns nothing
local player IR=Player(18)
call CreateUnit(IR,1211118391,-29691.7,30077.9,269.782)
call SetHeroLevel(CreateUnit(IR,1211118406,-29792.0,29571.7,269.875),15,false)
set IR=null
endfunction
function QR takes nothing returns nothing
local player mR=Player(15)
call CreateUnit(mR,1211118391,-30467.2,29834.7,270.519)
call SetHeroLevel(CreateUnit(mR,1211118406,-29874.4,29559.4,269.954),15,false)
set mR=null
endfunction
function RR takes nothing returns nothing
local player fR=Player(9)
call CreateUnit(fR,1211118391,-29693.5,30338.3,269.785)
call SetHeroLevel(CreateUnit(fR,1211118406,-30045.2,29554.8,270.118),15,false)
set fR=null
endfunction
function SR takes nothing returns nothing
local player iR=Player(2)
call CreateUnit(iR,1211118391,-30324.4,30466.1,270.380)
call SetHeroLevel(CreateUnit(iR,1211118406,-30346.6,29573.7,270.406),15,false)
set iR=null
endfunction
function UR takes nothing returns nothing
local player ZR=Player(17)
call CreateUnit(ZR,1211118391,-29951.6,30084.7,270.028)
call SetHeroLevel(CreateUnit(ZR,1211118406,-29862.1,29302.2,269.942),15,false)
set ZR=null
endfunction
function YR takes nothing returns nothing
local player TR=Player(10)
call CreateUnit(TR,1211118391,-30338.2,30210.1,270.394)
call SetHeroLevel(CreateUnit(TR,1211118406,-29904.6,29442.8,269.983),15,false)
set TR=null
endfunction
function aR takes nothing returns nothing
local player qR=Player(7)
call CreateUnit(qR,1211118391,-29818.2,30468.8,269.903)
call SetHeroLevel(CreateUnit(qR,1211118406,-29998.9,29444.3,270.074),15,false)
set qR=null
endfunction
function dR takes nothing returns nothing
local player nR=Player(8)
call CreateUnit(nR,1211118391,-29946.0,30342.9,270.023)
call SetHeroLevel(CreateUnit(nR,1211118406,-30137.9,29561.1,270.206),15,false)
set nR=null
endfunction
function eR takes nothing returns nothing
local player pR=Player(6)
call CreateUnit(pR,1211118391,-29693.7,30597.0,269.786)
call SetHeroLevel(CreateUnit(pR,1211118406,-30199.8,29310.0,270.267),15,false)
set pR=null
endfunction
function gR takes nothing returns nothing
local player GR=Player(11)
call CreateUnit(GR,1211118391,-29827.0,30210.1,269.911)
call SetHeroLevel(CreateUnit(GR,1211118406,-30125.9,29321.4,270.196),15,false)
set GR=null
endfunction
function jR takes nothing returns nothing
local player kR=Player(13)
call CreateUnit(kR,1211118391,-30204.3,30080.3,270.268)
call SetHeroLevel(CreateUnit(kR,1211118406,-30039.0,29306.5,270.112),15,false)
set kR=null
endfunction
function lR takes nothing returns nothing
local player OR=Player(4)
call CreateUnit(OR,1211118391,-30204.6,30339.2,270.267)
call SetHeroLevel(CreateUnit(OR,1211118406,-30106.5,29439.8,270.177),15,false)
set OR=null
endfunction
function oR takes nothing returns nothing
local player cR=Player(3)
call CreateUnit(cR,1211118391,-30468.2,30345.3,270.516)
call SetHeroLevel(CreateUnit(cR,1211118406,-30252.3,29576.9,270.316),15,false)
set cR=null
endfunction
function rR takes nothing returns nothing
local player uR=Player(0)
call CreateUnit(uR,1211118391,-30470.9,30602.5,270.516)
call SetHeroLevel(CreateUnit(uR,1211118406,-30360.2,29312.6,270.421),15,false)
set uR=null
endfunction
function tR takes nothing returns nothing
local player sR=Player(1)
call CreateUnit(sR,1211118391,-30205.9,30601.1,270.267)
call SetHeroLevel(CreateUnit(sR,1211118406,-30199.1,29448.7,270.266),15,false)
set sR=null
endfunction
function vR takes nothing returns nothing
local player xR=Player(14)
call CreateUnit(xR,1211118391,-30339.8,29950.4,270.397)
call SetHeroLevel(CreateUnit(xR,1211118406,-29968.7,29556.2,270.045),15,false)
set xR=null
endfunction
function yR takes nothing returns nothing
local player bR=Player(5)
call CreateUnit(bR,1211118391,-29950.2,30589.5,270.027)
call SetHeroLevel(CreateUnit(bR,1211118406,-30283.9,29308.8,270.348),15,false)
set bR=null
endfunction
function VR takes nothing returns nothing
call rR()
call tR()
call SR()
call oR()
call lR()
call yR()
call eR()
call aR()
call dR()
call RR()
call YR()
call gR()
call FR()
call jR()
call vR()
call QR()
call ER()
call UR()
call PR()
call DR()
call JR()
call LR()
endfunction
function wR takes nothing returns nothing
local integer Mf=0
set Mf=0
loop
exitwhen Mf>8192
call CreateGroup()
set Mf=Mf+1
endloop
call CreateForce()
call CreateGroup()
call CreateForce()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateForce()
call CreateForce()
call CreateForce()
call CreateTimer()
call CreateForce()
call CreateGroup()
set w=CreateGroup()
call CreateGroup()
call CreateForce()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateTimer()
set Mf=0
loop
exitwhen Mf>24
set Mf=Mf+1
endloop
set Mf=0
loop
exitwhen Mf>24
set r[Mf]=0
set Mf=Mf+1
endloop
set s=CreateForce()
set Mf=0
loop
exitwhen Mf>24
set t[Mf]=0
set Mf=Mf+1
endloop
call CreateGroup()
set Mf=0
loop
exitwhen Mf>24
set Mf=Mf+1
endloop
set Mf=0
loop
exitwhen Mf>24
set Mf=Mf+1
endloop
call CreateForce()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
set b=CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
set Mf=0
loop
exitwhen Mf>24
set Mf=Mf+1
endloop
set Mf=0
loop
exitwhen Mf>24
set Mf=Mf+1
endloop
call CreateGroup()
set Mf=0
loop
exitwhen Mf>24
set Mf=Mf+1
endloop
set Mf=0
loop
exitwhen Mf>24
set Mf=Mf+1
endloop
set Mf=0
loop
exitwhen Mf>24
set Mf=Mf+1
endloop
set Mf=0
loop
exitwhen Mf>24
set y[Mf]=0
set Mf=Mf+1
endloop
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateForce()
call CreateForce()
set Mf=0
loop
exitwhen Mf>1
set Mf=Mf+1
endloop
set Mf=0
loop
exitwhen Mf>1
set Mf=Mf+1
endloop
set Mf=0
loop
exitwhen Mf>1
set Mf=Mf+1
endloop
set p=CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
set Mf=0
loop
exitwhen Mf>24
set q[Mf]=false
set Mf=Mf+1
endloop
endfunction
function main takes nothing returns nothing
local trigger kL
local trigger jL
local trigger xL
call Nf()
call SetCameraBounds((-30720.0)+GetCameraMargin(CAMERA_MARGIN_LEFT),(-30720.0)+GetCameraMargin(CAMERA_MARGIN_BOTTOM),30720.0-GetCameraMargin(CAMERA_MARGIN_RIGHT),30720.0-GetCameraMargin(CAMERA_MARGIN_TOP),(-30720.0)+GetCameraMargin(CAMERA_MARGIN_LEFT),30720.0-GetCameraMargin(CAMERA_MARGIN_TOP),30720.0-GetCameraMargin(CAMERA_MARGIN_RIGHT),(-30720.0)+GetCameraMargin(CAMERA_MARGIN_BOTTOM))
call SetDayNightModels("Environment\\DNC\\DNCLordaeron\\DNCLordaeronTerrain\\DNCLordaeronTerrain.mdl","Environment\\DNC\\DNCLordaeron\\DNCLordaeronUnit\\DNCLordaeronUnit.mdl")
call NewSoundEnvironment("Default")
call SetAmbientDaySound("LordaeronSummerDay")
call SetAmbientNightSound("LordaeronSummerNight")
call SetMapMusic("Music",true,0)
set Rs=CreateSound("Sound\\Interface\\Warning.wav",false,false,false,10,10,"")
call SetSoundParamsFromLabel(Rs,"Warning")
call SetSoundDuration(Rs,1903)
set a=Rect(11872.0,-24096.0,13376.0,-18304.0)
set n=Rect(14080.0,-30720.0,16256.0,-25664.0)
set d=Rect(12096.0,-26240.0,14944.0,-23776.0)
set f=Rect(-17120.0,15936.0,-15520.0,17408.0)
call Rect(-29824.0,-30080.0,-29312.0,-28672.0)
call Rect(-29216.0,-30112.0,-28672.0,-28672.0)
call Rect(-25984.0,-29760.0,-24992.0,-29504.0)
call Rect(-25984.0,-30080.0,-25472.0,-29824.0)
call Rect(-25984.0,-30400.0,-25472.0,-30144.0)
call Rect(-26464.0,-30048.0,-26176.0,-29056.0)
call Rect(-25440.0,-30368.0,-25184.0,-29856.0)
call Rect(-25184.0,-30368.0,-24928.0,-29856.0)
call Rect(-24672.0,-29568.0,-24064.0,-28800.0)
call Rect(-24704.0,-30208.0,-24064.0,-29696.0)
set R=Rect(-17408.0,22016.0,-17056.0,22368.0)
set T=Rect(-19072.0,17728.0,-18688.0,18080.0)
set Y=Rect(-22464.0,22208.0,-22112.0,22560.0)
set G=Rect(-3776.0,4416.0,-3392.0,4768.0)
set g=Rect(-3872.0,1664.0,-3456.0,2016.0)
set h=Rect(-416.0,-2592.0,-128.0,-2272.0)
set F=Rect(4992.0,-2016.0,5344.0,-1696.0)
set k=Rect(2528.0,-3168.0,2848.0,-2880.0)
set j=Rect(7744.0,-2528.0,8096.0,-2208.0)
set x=Rect(-17504.0,18080.0,-17056.0,18496.0)
set v=Rect(1024.0,-1120.0,1376.0,-800.0)
set m=Rect(-3328.0,8096.0,-2848.0,8512.0)
set Q=Rect(-4704.0,11488.0,-4416.0,11776.0)
set W=Rect(-640.0,8288.0,-160.0,8704.0)
set E=Rect(-5184.0,17120.0,-4832.0,17440.0)
set Z=Rect(-96.0,12448.0,224.0,12768.0)
set U=Rect(-2272.0,13536.0,-1984.0,13856.0)
set I=Rect(7008.0,1984.0,7456.0,2432.0)
set P=Rect(4032.0,3744.0,4416.0,4064.0)
set A=Rect(4000.0,5216.0,4320.0,5536.0)
set D=Rect(-576.0,2880.0,-224.0,3232.0)
set H=Rect(-8288.0,19776.0,-7936.0,20160.0)
set J=Rect(-6464.0,21184.0,-6080.0,21568.0)
set K=Rect(-7904.0,22048.0,-7488.0,22464.0)
set L=Rect(-5344.0,14304.0,-4960.0,14720.0)
set X=Rect(2880.0,32.0,3264.0,352.0)
set C=Rect(608.0,15680.0,992.0,16096.0)
set V=Rect(-2496.0,15872.0,-2112.0,16224.0)
set B=Rect(1056.0,10848.0,1344.0,11136.0)
set N=Rect(1600.0,6784.0,1984.0,7136.0)
set M=Rect(160.0,19232.0,544.0,19648.0)
set ww=Rect(2784.0,22592.0,3200.0,22944.0)
set uw=Rect(-1984.0,19008.0,-1600.0,19360.0)
set rw=Rect(3008.0,18048.0,3392.0,18400.0)
call Rect(-28544.0,-30080.0,-28064.0,-29344.0)
call Rect(-27744.0,-30080.0,-27456.0,-29760.0)
set sw=Rect(4224.0,19488.0,4608.0,19776.0)
set tw=Rect(13056.0,4960.0,13408.0,5280.0)
set iw=Rect(5696.0,24768.0,6048.0,25088.0)
set Sw=Rect(3328.0,26816.0,3680.0,27168.0)
set cw=Rect(8608.0,26144.0,9024.0,26528.0)
set ow=Rect(6656.0,21248.0,7008.0,21600.0)
set Ow=Rect(-16640.0,10368.0,-13504.0,13056.0)
set lw=Rect(-18944.0,5312.0,-16864.0,7328.0)
set bw=Rect(-28032.0,-1120.0,-22464.0,640.0)
set yw=Rect(-27264.0,2784.0,-26208.0,3328.0)
set pw=Rect(-26912.0,-4320.0,-23872.0,-2976.0)
set ew=Rect(-19328.0,-288.0,-18592.0,1568.0)
set qw=Rect(-11936.0,7616.0,-448.0,11424.0)
set aw=Rect(-1664.0,1216.0,6848.0,7776.0)
set nw=Rect(-5472.0,24704.0,-3232.0,27616.0)
set dw=Rect(3744.0,10880.0,4064.0,11232.0)
set fw=Rect(-12064.0,11392.0,-8832.0,16576.0)
set Rw=Rect(-8832.0,10176.0,23520.0,17760.0)
set Tw=Rect(4384.0,17728.0,23424.0,27040.0)
set Yw=Rect(-10688.0,17536.0,-10304.0,17888.0)
set Gw=Rect(-10688.0,-9312.0,-10336.0,-9024.0)
set gw=Rect(17280.0,9280.0,17632.0,9632.0)
set hw=Rect(8352.0,12192.0,8672.0,12512.0)
set Fw=Rect(5952.0,18400.0,6304.0,18688.0)
set kw=Rect(9120.0,19872.0,9408.0,20192.0)
set jw=Rect(23328.0,-14080.0,30688.0,17792.0)
set xw=Rect(13984.0,-288.0,14336.0,0.0)
set vw=Rect(10624.0,-7552.0,11008.0,-7200.0)
set mw=Rect(15168.0,-5792.0,15552.0,-5408.0)
set Qw=Rect(15328.0,-7712.0,15648.0,-7424.0)
set Ww=Rect(12640.0,-7104.0,12992.0,-6752.0)
set Ew=Rect(17056.0,-8800.0,17376.0,-8512.0)
set Zw=Rect(18432.0,-608.0,18784.0,-320.0)
set Uw=Rect(13760.0,-11168.0,14112.0,-10752.0)
set Iw=Rect(16768.0,-16416.0,17120.0,-16032.0)
set Pw=Rect(18880.0,-7616.0,19232.0,-7296.0)
set Aw=Rect(6816.0,-6752.0,7136.0,-6464.0)
set Dw=Rect(12512.0,-4064.0,12832.0,-3712.0)
set Hw=Rect(9056.0,-4576.0,9344.0,-4288.0)
set Jw=Rect(-26464.0,-8896.0,-26144.0,-8544.0)
set Kw=Rect(-21632.0,-8544.0,-21248.0,-8224.0)
set Lw=Rect(-16928.0,-8224.0,-16608.0,-7904.0)
set Xw=Rect(-10112.0,-11424.0,-9760.0,-11136.0)
set Cw=Rect(-7680.0,-16416.0,-7328.0,-16128.0)
set Vw=Rect(288.0,-17760.0,608.0,-17472.0)
set Bw=Rect(9248.0,-21376.0,9984.0,-20640.0)
set Nw=Rect(24704.0,-27680.0,25088.0,-27264.0)
set Mw=Rect(10816.0,-18688.0,11168.0,-18304.0)
set wu=Rect(13056.0,-17984.0,13408.0,-17760.0)
set uu=Rect(12096.0,-21024.0,12448.0,-20768.0)
set ru=Rect(15680.0,5600.0,16032.0,5920.0)
set su=Rect(6944.0,7648.0,7264.0,7968.0)
set tu=Rect(5824.0,12256.0,6176.0,12576.0)
set iu=Rect(11200.0,7712.0,11552.0,8064.0)
set Su=Rect(12480.0,11136.0,12832.0,11456.0)
set cu=Rect(14880.0,22944.0,15200.0,23232.0)
set ou=Rect(11392.0,16768.0,11744.0,17088.0)
set Ou=Rect(23840.0,96.0,24128.0,384.0)
set lu=Rect(19488.0,11168.0,19808.0,11488.0)
set bu=Rect(20672.0,2528.0,21056.0,2848.0)
set yu=Rect(23776.0,2368.0,24160.0,2720.0)
set pu=Rect(18336.0,-13408.0,18624.0,-13120.0)
set eu=Rect(17056.0,-11648.0,17376.0,-11264.0)
set qu=Rect(15488.0,-17696.0,15840.0,-17376.0)
set au=Rect(24896.0,-8480.0,25248.0,-8128.0)
set nu=Rect(16480.0,-14368.0,16768.0,-14048.0)
set du=Rect(17088.0,-19744.0,17440.0,-19456.0)
set fu=Rect(22720.0,-10432.0,23072.0,-10048.0)
set Ru=Rect(20672.0,-23232.0,21056.0,-22848.0)
set Tu=Rect(19904.0,-5920.0,20256.0,-5632.0)
set Yu=Rect(18624.0,-3936.0,18976.0,-3616.0)
set Gu=Rect(-13632.0,-14816.0,-12192.0,-13376.0)
set gu=Rect(17760.0,-10400.0,23360.0,-1344.0)
set hu=Rect(12384.0,-5984.0,13824.0,-4352.0)
set Fu=Rect(-10944.0,3968.0,-7680.0,5120.0)
set ku=Rect(-6528.0,7808.0,-6176.0,8160.0)
set ju=Rect(-8864.0,6912.0,-8448.0,7264.0)
set xu=Rect(-11680.0,14304.0,-11264.0,14752.0)
set vu=Rect(-9760.0,12928.0,-9472.0,13280.0)
set mu=Rect(-7552.0,16928.0,-7232.0,17248.0)
set Qu=Rect(-17472.0,-3328.0,-17120.0,-2976.0)
call Rect(-24576.0,-1376.0,-24224.0,-1024.0)
set Wu=Rect(23392.0,10912.0,23712.0,11232.0)
set Eu=Rect(17280.0,19456.0,17632.0,19808.0)
set Zu=Rect(-16896.0,24032.0,-16544.0,24352.0)
set Uu=Rect(-15904.0,25952.0,-15520.0,26304.0)
set Iu=Rect(-17312.0,26624.0,-16896.0,27008.0)
set Pu=Rect(-16096.0,20352.0,-15712.0,20768.0)
set Au=Rect(-20448.0,21440.0,-20064.0,21792.0)
set Du=Rect(-22560.0,19808.0,-22272.0,20128.0)
set Hu=Rect(-18752.0,19520.0,-18400.0,19872.0)
set Ju=Rect(-16128.0,16896.0,-15808.0,17248.0)
set Ku=Rect(-17952.0,15904.0,-17632.0,16224.0)
set Lu=Rect(-19936.0,16352.0,-19648.0,16672.0)
set Xu=Rect(-17248.0,12448.0,-16928.0,12832.0)
set Cu=Rect(-13728.0,11968.0,-13408.0,12352.0)
set Vu=Rect(-15232.0,10624.0,-14880.0,10976.0)
set Bu=Rect(-13856.0,7872.0,-13568.0,8256.0)
set Nu=Rect(-16192.0,5824.0,-15840.0,6208.0)
set Mu=Rect(-16864.0,3392.0,-16576.0,3776.0)
set wr=Rect(-18880.0,5568.0,-18528.0,5920.0)
set ur=Rect(-20288.0,1216.0,-19936.0,1600.0)
set rr=Rect(-17216.0,352.0,-16896.0,736.0)
set sr=Rect(-24512.0,3744.0,-24128.0,4064.0)
set tr=Rect(-22720.0,2368.0,-22432.0,2752.0)
set ir=Rect(-23552.0,-256.0,-23200.0,128.0)
set Sr=Rect(-25376.0,1312.0,-25056.0,1632.0)
set cr=Rect(-28736.0,-192.0,-28352.0,160.0)
set lr=Rect(-21024.0,2944.0,-20704.0,3360.0)
set br=Rect(-13792.0,2144.0,-13440.0,2592.0)
set yr=Rect(-13568.0,14912.0,-13216.0,15296.0)
set pr=Rect(-12736.0,16128.0,-12352.0,16512.0)
set er=Rect(-10880.0,3360.0,-10528.0,3712.0)
set qr=Rect(-10048.0,5280.0,-9696.0,5600.0)
set ar=Rect(-6880.0,3936.0,-6560.0,4256.0)
set nr=Rect(-8224.0,3040.0,-7904.0,3392.0)
set dr=Rect(-8960.0,1760.0,-8608.0,2176.0)
set fr=Rect(-6624.0,1088.0,-6304.0,1472.0)
set Rr=Rect(-7296.0,-960.0,-6944.0,-544.0)
set Tr=Rect(-23712.0,-4704.0,-23392.0,-4416.0)
set Yr=Rect(-25184.0,-3168.0,-24864.0,-2848.0)
set Gr=Rect(-21888.0,-4416.0,-21536.0,-4032.0)
set gr=Rect(-20928.0,-2304.0,-20576.0,-1888.0)
set hr=Rect(-7776.0,11040.0,-7456.0,11392.0)
set Fr=Rect(-11648.0,7072.0,-11296.0,7360.0)
set kr=Rect(-13728.0,4928.0,-13376.0,5408.0)
set jr=Rect(-5152.0,21696.0,-4832.0,22080.0)
set xr=Rect(-5248.0,24416.0,-4960.0,24768.0)
set vr=Rect(-6688.0,28096.0,-6368.0,28480.0)
set mr=Rect(-9024.0,26496.0,-8736.0,26880.0)
set Qr=Rect(-10048.0,28224.0,-9696.0,28576.0)
set Wr=Rect(-1408.0,23776.0,-1152.0,24096.0)
set Er=Rect(-2720.0,26176.0,-2432.0,26560.0)
set Zr=Rect(-28032.0,-2944.0,-27680.0,-2560.0)
set Ur=Rect(-29760.0,-10016.0,-29408.0,-9632.0)
set Ir=Rect(15296.0,-26976.0,15648.0,-26624.0)
set Pr=Rect(-20544.0,12032.0,-20160.0,12416.0)
set Ar=Rect(-18368.0,10624.0,-18016.0,11008.0)
set Dr=Rect(-10880.0,-576.0,-10528.0,-224.0)
set Hr=Rect(-11104.0,-4768.0,-10816.0,-4448.0)
set Jr=Rect(-5728.0,-2912.0,-5440.0,-2560.0)
set Kr=Rect(-3904.0,-6720.0,-3552.0,-6336.0)
set Lr=Rect(-3616.0,-3040.0,-3328.0,-2688.0)
set Xr=Rect(-7200.0,-8000.0,-6880.0,-7616.0)
set Cr=Rect(-5504.0,-9344.0,-5248.0,-9056.0)
set Vr=Rect(-11616.0,10848.0,-11296.0,11168.0)
set Br=Rect(-1792.0,-320.0,-1440.0,64.0)
set Nr=Rect(3232.0,-7488.0,3552.0,-7136.0)
set Mr=Rect(8224.0,-10496.0,8512.0,-10208.0)
set ws=Rect(1344.0,29280.0,1696.0,29632.0)
set us=Rect(10848.0,-2144.0,11136.0,-1824.0)
set rs=Rect(-26496.0,-1568.0,-26144.0,-1248.0)
set ss=Rect(-27168.0,2528.0,-26880.0,2816.0)
set ts=Rect(-2016.0,27552.0,-1696.0,27936.0)
set is=Rect(-3488.0,23040.0,-3200.0,23392.0)
set Ss=Rect(2016.0,-7904.0,2336.0,-7584.0)
set cs=Rect(640.0,-5760.0,992.0,-5376.0)
set os=Rect(5216.0,-12384.0,5504.0,-12064.0)
set Os=Rect(18272.0,-17504.0,18656.0,-17056.0)
set ls=Rect(26848.0,-11680.0,27168.0,-11360.0)
set bs=Rect(6464.0,-4672.0,6816.0,-4288.0)
set ys=Rect(20672.0,21312.0,21024.0,21696.0)
set ps=Rect(-1824.0,5792.0,-1440.0,6144.0)
set es=Rect(-23264.0,-8992.0,-22944.0,-8704.0)
set qs=Rect(-13504.0,-8640.0,-13184.0,-8384.0)
set as=Rect(26048.0,-2848.0,26400.0,-2528.0)
set ns=Rect(28864.0,-3360.0,29152.0,-3040.0)
set ds=Rect(28064.0,2592.0,28352.0,2880.0)
set fs=Rect(27488.0,-5984.0,27808.0,-5664.0)
call CR()
call VR()
call InitBlizzard()
call wR()
call GL()
set jL=Ts
if TriggerEvaluate(jL) then
call TriggerExecute(jL)
endif
set xL=wt
if TriggerEvaluate(xL) then
call TriggerExecute(xL)
endif
set kL=CreateTrigger()
call TriggerAddCondition(kL,Condition(Pn))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Real.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(An))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Integer.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(Dn))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package String.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(Hn))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Angle.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(Jn))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Vectors.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(Kn))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Maths.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(Ln))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Player.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(Xn))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Printing.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(Cn))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Basics.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(Vn))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package GameTimer.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(Bn))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MagicFunctions.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(Nn))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package ErrorHandling.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(Mn))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Matrices.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(wd))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Quaternion.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(ud))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Table.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(rd))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Playercolor.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(sd))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Colors.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(td))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Group.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(id))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Lightning.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(Sd))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package WeatherEffects.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(cd))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package TypeCasting.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(od))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package ClosureForGroups.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(Od))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package LinkedList.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(ld))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Abilities.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(bd))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package AbilityIds.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(yd))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Buildings.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(pd))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package HashList.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(ed))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Units.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(qd))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package CityBaseTaxes.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(ad))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Forces.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(nd))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Revolts.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(dd))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package City.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(fd))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MutliboardTools.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(Rd))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package EventHelper.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(Td))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package RegisterEvents.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(Yd))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package TimerUtils.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(Gd))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package ClosureTimers.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(gd))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package TargetsAllowed.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(hd))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Doodads.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(Fd))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Icons.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(kd))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Objects.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(jd))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Sounds.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(xd))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Soundsets.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(vd))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Textures.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(md))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package UI.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(Qd))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package UnitIds.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(Wd))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MapBounds.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(Ed))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package DummyRecycler.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(Zd))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package StringUtils.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(Ud))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package ObjectIds.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(Id))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Preloader.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(Pd))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package ObjectIdGenerator.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(Ad))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package OnUnitEnterLeave.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(Dd))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package UnitIndexer.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(Hd))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package ClosureEvents.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(Jd))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MathTools.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(Kd))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Strings.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(Ld))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Multiboards.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(Xd))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package PlayerStats.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(Cd))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package CityModifiers.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(Vd))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Main.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(Bd))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package CityBuilded.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(Nd))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package CityManage.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(Md))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Commands.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(wf))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Credits.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(uf))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Economy.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(rf))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package DateTime.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(sf))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MultiboardCityUpdate.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(tf))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Diplomacy.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(Sf))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package LimitEncampments.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(cf))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package LimitMercenaryCamps.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(of))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Logarithm.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(Of))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MainInit.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(lf))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MassControl.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(bf))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package NoShipsNearRivers.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(yf))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package OnPlayerLeave.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(pf))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package RangeChecks.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(ef))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Taxation.")
endif
call TriggerClearConditions(kL)
call TriggerAddCondition(kL,Condition(qf))
if not TriggerEvaluate(kL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Upkeep.")
endif
call TriggerClearConditions(kL)
call DestroyTrigger(kL)
set kL=null
set jL=null
set xL=null
endfunction
function FL takes nothing returns nothing
call SetStartLocPrioCount(0,19)
call SetStartLocPrio(0,0,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,1,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,2,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,3,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,4,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,9,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,10,11,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,11,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,12,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,13,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,14,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,15,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,16,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,17,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,18,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(1,9)
call SetStartLocPrio(1,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,1,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,2,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,3,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,4,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(2,9)
call SetStartLocPrio(2,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,2,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,3,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,4,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(3,9)
call SetStartLocPrio(3,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,3,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,4,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(4,9)
call SetStartLocPrio(4,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,4,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(5,9)
call SetStartLocPrio(5,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(6,9)
call SetStartLocPrio(6,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(7,9)
call SetStartLocPrio(7,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(8,9)
call SetStartLocPrio(8,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(9,9)
call SetStartLocPrio(9,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,8,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(10,16)
call SetStartLocPrio(10,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,8,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,9,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,10,12,MAP_LOC_PRIO_LOW)
call SetStartLocPrio(10,11,13,MAP_LOC_PRIO_LOW)
call SetStartLocPrio(10,12,14,MAP_LOC_PRIO_LOW)
call SetStartLocPrio(10,13,15,MAP_LOC_PRIO_LOW)
call SetStartLocPrio(10,14,16,MAP_LOC_PRIO_LOW)
call SetStartLocPrio(10,15,17,MAP_LOC_PRIO_LOW)
call SetStartLocPrioCount(11,19)
call SetStartLocPrio(11,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,8,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,9,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,10,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,11,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,12,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,13,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,14,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,15,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,16,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,17,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,18,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(12,5)
call SetStartLocPrio(12,0,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,1,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,2,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,3,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,4,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(13,5)
call SetStartLocPrio(13,0,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,1,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,2,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,3,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,4,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(14,5)
call SetStartLocPrio(14,0,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,1,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,2,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,3,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,4,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(15,5)
call SetStartLocPrio(15,0,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,1,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,2,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,3,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,4,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(16,5)
call SetStartLocPrio(16,0,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,1,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,2,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,3,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,4,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(17,5)
call SetStartLocPrio(17,0,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,1,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,2,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,3,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,4,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(18,1)
call SetStartLocPrio(18,0,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(19,1)
call SetStartLocPrio(19,0,18,MAP_LOC_PRIO_HIGH)
endfunction
function gL takes nothing returns nothing
call SetPlayerStartLocation(Player(0),0)
call ForcePlayerStartLocation(Player(0),0)
call SetPlayerColor(Player(0),ConvertPlayerColor(0))
call SetPlayerRacePreference(Player(0),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(0),false)
call SetPlayerController(Player(0),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(1),1)
call ForcePlayerStartLocation(Player(1),1)
call SetPlayerColor(Player(1),ConvertPlayerColor(1))
call SetPlayerRacePreference(Player(1),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(1),false)
call SetPlayerController(Player(1),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(2),2)
call ForcePlayerStartLocation(Player(2),2)
call SetPlayerColor(Player(2),ConvertPlayerColor(2))
call SetPlayerRacePreference(Player(2),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(2),false)
call SetPlayerController(Player(2),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(3),3)
call ForcePlayerStartLocation(Player(3),3)
call SetPlayerColor(Player(3),ConvertPlayerColor(3))
call SetPlayerRacePreference(Player(3),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(3),false)
call SetPlayerController(Player(3),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(4),4)
call ForcePlayerStartLocation(Player(4),4)
call SetPlayerColor(Player(4),ConvertPlayerColor(4))
call SetPlayerRacePreference(Player(4),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(4),false)
call SetPlayerController(Player(4),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(5),5)
call ForcePlayerStartLocation(Player(5),5)
call SetPlayerColor(Player(5),ConvertPlayerColor(5))
call SetPlayerRacePreference(Player(5),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(5),false)
call SetPlayerController(Player(5),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(6),6)
call ForcePlayerStartLocation(Player(6),6)
call SetPlayerColor(Player(6),ConvertPlayerColor(6))
call SetPlayerRacePreference(Player(6),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(6),false)
call SetPlayerController(Player(6),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(7),7)
call ForcePlayerStartLocation(Player(7),7)
call SetPlayerColor(Player(7),ConvertPlayerColor(7))
call SetPlayerRacePreference(Player(7),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(7),false)
call SetPlayerController(Player(7),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(8),8)
call ForcePlayerStartLocation(Player(8),8)
call SetPlayerColor(Player(8),ConvertPlayerColor(8))
call SetPlayerRacePreference(Player(8),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(8),false)
call SetPlayerController(Player(8),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(9),9)
call ForcePlayerStartLocation(Player(9),9)
call SetPlayerColor(Player(9),ConvertPlayerColor(9))
call SetPlayerRacePreference(Player(9),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(9),false)
call SetPlayerController(Player(9),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(10),10)
call ForcePlayerStartLocation(Player(10),10)
call SetPlayerColor(Player(10),ConvertPlayerColor(10))
call SetPlayerRacePreference(Player(10),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(10),false)
call SetPlayerController(Player(10),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(11),11)
call ForcePlayerStartLocation(Player(11),11)
call SetPlayerColor(Player(11),ConvertPlayerColor(11))
call SetPlayerRacePreference(Player(11),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(11),false)
call SetPlayerController(Player(11),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(12),12)
call ForcePlayerStartLocation(Player(12),12)
call SetPlayerColor(Player(12),ConvertPlayerColor(12))
call SetPlayerRacePreference(Player(12),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(12),false)
call SetPlayerController(Player(12),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(13),13)
call ForcePlayerStartLocation(Player(13),13)
call SetPlayerColor(Player(13),ConvertPlayerColor(13))
call SetPlayerRacePreference(Player(13),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(13),false)
call SetPlayerController(Player(13),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(14),14)
call ForcePlayerStartLocation(Player(14),14)
call SetPlayerColor(Player(14),ConvertPlayerColor(14))
call SetPlayerRacePreference(Player(14),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(14),false)
call SetPlayerController(Player(14),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(15),15)
call ForcePlayerStartLocation(Player(15),15)
call SetPlayerColor(Player(15),ConvertPlayerColor(15))
call SetPlayerRacePreference(Player(15),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(15),false)
call SetPlayerController(Player(15),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(16),16)
call ForcePlayerStartLocation(Player(16),16)
call SetPlayerColor(Player(16),ConvertPlayerColor(16))
call SetPlayerRacePreference(Player(16),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(16),false)
call SetPlayerController(Player(16),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(17),17)
call ForcePlayerStartLocation(Player(17),17)
call SetPlayerColor(Player(17),ConvertPlayerColor(17))
call SetPlayerRacePreference(Player(17),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(17),false)
call SetPlayerController(Player(17),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(18),18)
call ForcePlayerStartLocation(Player(18),18)
call SetPlayerColor(Player(18),ConvertPlayerColor(18))
call SetPlayerRacePreference(Player(18),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(18),false)
call SetPlayerController(Player(18),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(19),19)
call ForcePlayerStartLocation(Player(19),19)
call SetPlayerColor(Player(19),ConvertPlayerColor(19))
call SetPlayerRacePreference(Player(19),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(19),false)
call SetPlayerController(Player(19),MAP_CONTROL_USER)
endfunction
function hL takes nothing returns nothing
call SetPlayerTeam(Player(0),0)
call SetPlayerTeam(Player(1),0)
call SetPlayerTeam(Player(2),0)
call SetPlayerTeam(Player(3),0)
call SetPlayerTeam(Player(4),0)
call SetPlayerTeam(Player(5),0)
call SetPlayerTeam(Player(6),0)
call SetPlayerTeam(Player(7),0)
call SetPlayerTeam(Player(8),0)
call SetPlayerTeam(Player(9),0)
call SetPlayerTeam(Player(10),0)
call SetPlayerTeam(Player(11),0)
call SetPlayerTeam(Player(12),1)
call SetPlayerTeam(Player(13),1)
call SetPlayerTeam(Player(14),1)
call SetPlayerTeam(Player(15),1)
call SetPlayerTeam(Player(16),1)
call SetPlayerTeam(Player(17),1)
call SetPlayerTeam(Player(18),1)
call SetPlayerTeam(Player(19),1)
endfunction
function config takes nothing returns nothing
call SetMapName("TRIGSTR_001")
call SetMapDescription("TRIGSTR_003")
call SetPlayers(20)
call SetTeams(20)
call SetGamePlacement(MAP_PLACEMENT_TEAMS_TOGETHER)
call DefineStartLocation(0,320.0,5184.0)
call DefineStartLocation(1,320.0,5184.0)
call DefineStartLocation(2,320.0,5184.0)
call DefineStartLocation(3,320.0,5184.0)
call DefineStartLocation(4,320.0,5184.0)
call DefineStartLocation(5,320.0,5184.0)
call DefineStartLocation(6,320.0,5184.0)
call DefineStartLocation(7,320.0,5184.0)
call DefineStartLocation(8,320.0,5184.0)
call DefineStartLocation(9,320.0,5184.0)
call DefineStartLocation(10,320.0,5184.0)
call DefineStartLocation(11,320.0,5184.0)
call DefineStartLocation(12,320.0,5184.0)
call DefineStartLocation(13,320.0,5184.0)
call DefineStartLocation(14,320.0,5184.0)
call DefineStartLocation(15,320.0,5184.0)
call DefineStartLocation(16,320.0,5184.0)
call DefineStartLocation(17,320.0,5184.0)
call DefineStartLocation(18,320.0,5184.0)
call DefineStartLocation(19,320.0,5184.0)
call gL()
call hL()
call FL()
endfunction
