// this script was compiled with wurst 1.8.0.0-jenkins-Wurst-1072
globals
group w=null
location u=null
integer array r
force s=null
location t=null
location i=null
location S=null
location c=null
rect o=null
rect O=null
group l=null
group b=null
location y=null
boolean array p
boolean array e
rect q=null
rect a=null
rect n=null
rect d=null
rect f=null
rect R=null
rect T=null
rect Y=null
rect G=null
rect g=null
rect h=null
rect F=null
rect k=null
rect j=null
rect x=null
rect v=null
rect m=null
rect Q=null
rect W=null
rect E=null
rect Z=null
rect U=null
rect I=null
rect P=null
rect A=null
rect D=null
rect H=null
rect J=null
rect K=null
rect L=null
rect X=null
rect C=null
rect V=null
rect B=null
rect N=null
rect M=null
rect ww=null
rect uw=null
rect rw=null
rect sw=null
rect tw=null
rect iw=null
rect Sw=null
rect cw=null
rect ow=null
rect Ow=null
rect lw=null
rect bw=null
rect yw=null
rect pw=null
rect ew=null
rect qw=null
rect aw=null
rect nw=null
rect dw=null
rect fw=null
rect Rw=null
rect Tw=null
rect Yw=null
rect Gw=null
rect gw=null
rect hw=null
rect Fw=null
rect kw=null
rect jw=null
rect xw=null
rect vw=null
rect mw=null
rect Qw=null
rect Ww=null
rect Ew=null
rect Zw=null
rect Uw=null
rect Iw=null
rect Pw=null
rect Aw=null
rect Dw=null
rect Hw=null
rect Jw=null
rect Kw=null
rect Lw=null
rect Xw=null
rect Cw=null
rect Vw=null
rect Bw=null
rect Nw=null
rect Mw=null
rect wu=null
rect uu=null
rect ru=null
rect su=null
rect tu=null
rect iu=null
rect Su=null
rect cu=null
rect ou=null
rect Ou=null
rect lu=null
rect bu=null
rect yu=null
rect pu=null
rect eu=null
rect qu=null
rect au=null
rect nu=null
rect du=null
rect fu=null
rect Ru=null
rect Tu=null
rect Yu=null
rect Gu=null
rect gu=null
rect hu=null
rect Fu=null
rect ku=null
rect ju=null
rect xu=null
rect vu=null
rect mu=null
rect Qu=null
rect Wu=null
rect Eu=null
rect Zu=null
rect Uu=null
rect Iu=null
rect Pu=null
rect Au=null
rect Du=null
rect Hu=null
rect Ju=null
rect Ku=null
rect Lu=null
rect Xu=null
rect Cu=null
rect Vu=null
rect Bu=null
rect Nu=null
rect Mu=null
rect wr=null
rect ur=null
rect rr=null
rect sr=null
rect tr=null
rect ir=null
rect Sr=null
rect cr=null
rect lr=null
rect br=null
rect yr=null
rect pr=null
rect er=null
rect qr=null
rect ar=null
rect nr=null
rect dr=null
rect fr=null
rect Rr=null
rect Tr=null
rect Yr=null
rect Gr=null
rect gr=null
rect hr=null
rect Fr=null
rect kr=null
rect jr=null
rect xr=null
rect vr=null
rect mr=null
rect Qr=null
rect Wr=null
rect Er=null
rect Zr=null
rect Ur=null
rect Ir=null
rect Pr=null
rect Ar=null
rect Dr=null
rect Hr=null
rect Jr=null
rect Kr=null
rect Lr=null
rect Xr=null
rect Cr=null
rect Vr=null
rect Br=null
rect Nr=null
rect Mr=null
rect ws=null
rect us=null
rect rs=null
rect ss=null
rect ts=null
rect is=null
rect Ss=null
rect cs=null
rect os=null
rect Os=null
rect ls=null
rect bs=null
rect ys=null
rect ps=null
rect es=null
rect qs=null
rect as=null
rect ns=null
rect ds=null
sound fs=null
trigger Rs=null
trigger Ts=null
trigger Ys=null
trigger Gs=null
trigger gs=null
trigger hs=null
trigger Fs=null
trigger ks=null
trigger js=null
trigger xs=null
trigger vs=null
trigger ms=null
trigger Qs=null
trigger Ws=null
trigger Es=null
trigger Zs=null
trigger Us=null
trigger Is=null
trigger Ps=null
trigger As=null
trigger Ds=null
trigger Hs=null
trigger Js=null
trigger Ks=null
trigger Ls=null
trigger Xs=null
trigger Cs=null
trigger Vs=null
trigger Bs=null
trigger Ns=null
trigger Ms=null
trigger wt=null
trigger ut=null
trigger rt=null
trigger st=null
trigger tt=null
trigger St=null
trigger ct=null
trigger ot=null
trigger Ot=null
trigger lt=null
trigger bt=null
trigger yt=null
trigger pt=null
trigger et=null
trigger qt=null
trigger at=null
trigger nt=null
trigger dt=null
trigger ft=null
trigger Rt=null
trigger Tt=null
trigger Yt=null
trigger Gt=null
trigger gt=null
trigger ht=null
trigger Ft=null
trigger kt=null
trigger jt=null
trigger xt=null
trigger vt=null
trigger mt=null
trigger Qt=null
trigger Wt=null
trigger Et=null
trigger Zt=null
trigger Ut=null
trigger It=null
trigger Pt=null
trigger At=null
trigger Dt=null
trigger Ht=null
trigger Jt=null
trigger Kt=null
trigger Lt=null
trigger Xt=null
trigger Ct=null
trigger Vt=null
trigger Bt=null
trigger Nt=null
trigger Mt=null
trigger wi=null
trigger ui=null
trigger ri=null
trigger si=null
trigger ti=null
trigger ii=null
trigger Si=null
trigger ci=null
trigger oi=null
trigger Oi=null
trigger li=null
trigger bi=null
trigger yi=null
trigger pi=null
trigger ei=null
trigger qi=null
trigger ai=null
trigger ni=null
trigger di=null
trigger fi=null
trigger Ri=null
trigger Ti=null
trigger Yi=null
trigger Gi=null
trigger gi=null
trigger hi=null
trigger Fi=null
trigger ki=null
trigger ji=null
trigger xi=null
trigger vi=null
trigger mi=null
trigger Qi=null
trigger Wi=null
trigger Ei=null
trigger Zi=null
trigger Ui=null
trigger Ii=null
trigger Pi=null
trigger Ai=null
trigger Di=null
trigger Hi=null
trigger Ji=null
trigger Ki=null
trigger Li=null
trigger Xi=null
trigger Ci=null
trigger Vi=null
trigger Bi=null
trigger Ni=null
trigger Mi=null
trigger wS=null
trigger uS=null
trigger rS=null
trigger sS=null
trigger tS=null
trigger iS=null
trigger SS=null
integer cS=0
player oS=null
integer OS=0
integer array lS
integer bS=0
integer yS=0
integer pS=0
integer eS=0
integer qS=0
integer aS=0
integer nS=0
integer dS=0
integer fS=0
integer RS=0
real array TS
real array YS
boolean array GS
real array gS
integer array hS
real array FS
real array kS
string array jS
string array xS
integer vS=0
real mS=0.
real array QS
integer array WS
real array ES
real array ZS
real array US
real array IS
integer array PS
integer array AS
integer array DS
integer array HS
integer array JS
unit array KS
string array LS
integer array XS
integer array CS
integer array VS
real array BS
real array NS
integer array MS
integer array wc
real array uc
real array rc
real array sc
real array tc
integer array ic
real array Sc
integer array cc
integer array oc
integer array Oc
playerevent lc=null
trigger bc=null
trigger yc=null
trigger pc=null
integer array ec
integer qc=0
integer ac=0
integer nc=0
integer array dc
integer array fc
integer array Rc
integer array Tc
integer array Yc
integer array Gc
integer array gc
integer array hc
unit array Fc
group kc=null
integer array jc
integer xc=0
filterfunc vc=null
integer mc=0
timer array Qc
timer array Wc
integer array Ec
integer array Zc
integer array Uc
string array Ic
integer Pc=0
real array Ac
real Dc=0.
integer array Hc
integer array Jc
integer array Kc
integer array Lc
integer array Xc
integer Cc=0
integer array Vc
integer array Bc
hashtable Nc=null
force Mc=null
force wo=null
force uo=null
force ro=null
force array so
integer array io
integer array So
integer array co
timer oo=null
real Oo=0.
group lo=null
hashtable bo=null
hashtable yo=null
integer array po
integer array eo
hashtable qo=null
integer array ao
unit array no
integer array do
unit array fo
integer array Ro
integer array To
integer array Yo
integer array Go
integer array go
integer array ho
integer array Fo
boolean array ko
integer array jo
integer array xo
integer vo=0
boolean mo=false
boolean Qo=false
boolean Wo=false
timer Eo=null
real Zo=0.
rect Uo=null
rect Io=null
region Po=null
real Ao=0.
real Do=0.
integer Ho=0
integer Jo=0
integer Ko=0
player array Lo
unit array Xo
integer array Co
unit array Vo
integer array Bo
real array No
real array Mo
integer array wO
integer array uO
integer array rO
integer array sO
integer array tO
integer array iO
integer array SO
integer array cO
integer array oO
multiboard array OO
unit array lO
trigger bO=null
group yO=null
unit array pO
integer eO=0
integer array qO
integer array aO
player array nO
boolean array dO
integer array fO
integer array RO
player array TO
player YO=null
playercolor GO=null
playercolor gO=null
playercolor hO=null
playercolor FO=null
playercolor array kO
group jO=null
unit xO=null
integer vO=0
unit array mO
real QO=0.
trigger array WO
integer EO=0
real array ZO
integer UO=0
string array IO
string array PO
string array AO
string array DO
string array HO
string array JO
string array KO
string array LO
string array XO
string array CO
string array VO
string array BO
string array NO
string array MO
string array wl
string array ul
string array rl
hashtable sl=null
timer array tl
integer il=0
integer Sl=0
integer cl=0
trigger ol=null
trigger Ol=null
unit ll=null
unit bl=null
unit array yl
integer pl=0
integer el=0
integer array ql
integer al=0
integer nl=0
integer dl=0
integer fl=0
integer array Rl
integer Tl=0
integer array Yl
integer array Gl
integer gl=0
integer array hl
integer Fl=0
integer kl=0
integer array jl
integer array xl
integer vl=0
integer ml=0
integer array Ql
integer Wl=0
integer El=0
integer array Zl
integer array Ul
integer Il=0
integer Pl=0
integer array Al
integer array Dl
integer Hl=0
integer Jl=0
integer array Kl
integer array Ll
integer Xl=0
integer Cl=0
integer array Vl
integer Bl=0
integer array Nl
integer array Ml
integer wb=0
integer ub=0
integer array rb
integer array sb
integer tb=0
integer ib=0
integer array Sb
integer array cb
integer ob=0
integer Ob=0
integer array lb
integer bb=0
integer yb=0
integer array pb
integer eb=0
integer qb=0
integer array ab
integer array nb
integer db=0
integer fb=0
integer array Rb
integer array Tb
integer Yb=0
integer Gb=0
integer array gb
integer hb=0
integer Fb=0
integer array kb
integer jb=0
integer xb=0
integer array vb
integer array mb
integer Qb=0
integer Wb=0
integer array Eb
integer Zb=0
string array Ub
integer Ib=0
integer Pb=0
integer Ab=0
integer array Db
integer array Hb
integer array Jb
integer array Kb
integer array Lb
integer array Xb
integer array Cb
integer array Vb
integer array Bb
integer array Nb
integer array Mb
integer array wy
integer array uy
integer array ry
integer array sy
integer array ty
integer array iy
integer array Sy
integer array cy
integer array oy
integer array Oy
integer array ly
integer array by
integer array yy
code py=null
code ey=null
code qy=null
code ay=null
code ny=null
code dy=null
code fy=null
code Ry=null
code Ty=null
code Yy=null
code Gy=null
code gy=null
code hy=null
code Fy=null
code ky=null
code jy=null
code xy=null
code vy=null
code my=null
code Qy=null
code Wy=null
code Ey=null
code Zy=null
code Uy=null
code Iy=null
code Py=null
code Ay=null
code Dy=null
code Hy=null
code Jy=null
code Ky=null
code Ly=null
code Xy=null
code Cy=null
code Vy=null
code By=null
code Ny=null
code My=null
code wp=null
code up=null
code rp=null
code sp=null
code tp=null
code ip=null
code Sp=null
code cp=null
code op=null
code Op=null
code lp=null
code bp=null
code yp=null
code pp=null
code ep=null
code qp=null
code ap=null
code np=null
code dp=null
code fp=null
code Rp=null
code Tp=null
code Yp=null
code Gp=null
code gp=null
code hp=null
code Fp=null
code kp=null
code jp=null
code xp=null
code vp=null
code mp=null
code Qp=null
code Wp=null
code Ep=null
code Zp=null
code Up=null
code Ip=null
code Pp=null
code Ap=null
code Dp=null
code Hp=null
code Jp=null
code Kp=null
code Lp=null
code Xp=null
code Cp=null
code Vp=null
code Bp=null
code Np=null
code Mp=null
code we=null
code ue=null
code re=null
code se=null
code te=null
code ie=null
code Se=null
code ce=null
code oe=null
code Oe=null
code le=null
code be=null
code ye=null
code pe=null
code ee=null
code qe=null
code ae=null
code ne=null
code de=null
code fe=null
code Re=null
code Te=null
code Ye=null
code Ge=null
code ge=null
code he=null
code Fe=null
code ke=null
code je=null
code xe=null
code ve=null
code me=null
code Qe=null
code We=null
code Ee=null
code Ze=null
code Ue=null
code Ie=null
code Pe=null
code Ae=null
code De=null
code He=null
code Je=null
code Ke=null
code Le=null
code Xe=null
code Ce=null
code Ve=null
code Be=null
code Ne=null
code Me=null
code wq=null
code uq=null
code rq=null
code sq=null
code tq=null
code iq=null
code Sq=null
code cq=null
code oq=null
code Oq=null
code lq=null
code bq=null
code yq=null
code pq=null
code eq=null
code qq=null
code aq=null
code nq=null
code dq=null
code fq=null
code Rq=null
code Tq=null
code Yq=null
code Gq=null
code gq=null
code hq=null
code Fq=null
code kq=null
code jq=null
code xq=null
code vq=null
code mq=null
code Qq=null
code Wq=null
code Eq=null
code Zq=null
code Uq=null
code Iq=null
code Pq=null
code Aq=null
code Dq=null
code Hq=null
code Jq=null
code Kq=null
code Lq=null
code Xq=null
code Cq=null
code Vq=null
code Bq=null
code Nq=null
code Mq=null
code wa=null
code ua=null
code ra=null
code sa=null
code ta=null
code ia=null
code Sa=null
code ca=null
code oa=null
code Oa=null
code la=null
code ba=null
code ya=null
code pa=null
code ea=null
code qa=null
code aa=null
code na=null
code da=null
code fa=null
code Ra=null
code Ta=null
code Ya=null
code Ga=null
code ga=null
code ha=null
code Fa=null
code ka=null
code ja=null
code xa=null
code va=null
code ma=null
code Qa=null
code Wa=null
code Ea=null
code Za=null
code Ua=null
code Ia=null
code Pa=null
code Aa=null
code Da=null
code Ha=null
code Ja=null
code Ka=null
code La=null
code Xa=null
code Ca=null
code Va=null
code Ba=null
code Na=null
code Ma=null
code wn=null
code un=null
code rn=null
code sn=null
code tn=null
code Sn=null
code cn=null
code on=null
code On=null
code ln=null
code bn=null
code yn=null
code pn=null
code en=null
code qn=null
code an=null
code nn=null
code dn=null
code fn=null
code Rn=null
code Tn=null
code Yn=null
code Gn=null
code gn=null
code hn=null
code Fn=null
code kn=null
code jn=null
code xn=null
code vn=null
code mn=null
code Qn=null
code Wn=null
code En=null
code Zn=null
code Un=null
code In=null
code Pn=null
code An=null
code Dn=null
code Hn=null
code Jn=null
code Kn=null
code Ln=null
code Xn=null
code Cn=null
code Vn=null
code Bn=null
code Nn=null
code Mn=null
code wd=null
code ud=null
code rd=null
code sd=null
code td=null
code id=null
code Sd=null
code cd=null
code od=null
code Od=null
code ld=null
code bd=null
code yd=null
code pd=null
code ed=null
code qd=null
code ad=null
code nd=null
code dd=null
code fd=null
code Rd=null
code Td=null
code Yd=null
code Gd=null
code gd=null
code hd=null
code Fd=null
code kd=null
code jd=null
code xd=null
code vd=null
code md=null
code Qd=null
code Wd=null
code Ed=null
code Zd=null
code Ud=null
code Id=null
code Pd=null
code Ad=null
code Dd=null
code Hd=null
code Jd=null
code Kd=null
code Ld=null
code Xd=null
code Cd=null
code Vd=null
code Bd=null
code Nd=null
code Md=null
code wf=null
code uf=null
code rf=null
code sf=null
code tf=null
code Sf=null
code cf=null
code of=null
code Of=null
code lf=null
code bf=null
code yf=null
code pf=null
code ef=null
code qf=null
code af=null
code nf=null
code df=null
code ff=null
code Rf=null
code Tf=null
code Yf=null
code Gf=null
code gf=null
code hf=null
code Ff=null
code kf=null
code jf=null
code xf=null
code vf=null
code mf=null
code Qf=null
code Wf=null
code Ef=null
code Zf=null
code Uf=null
code If=null
code Pf=null
code Af=null
code Df=null
code Hf=null
code Jf=null
code Kf=null
code Lf=null
code Xf=null
code Cf=null
code Vf=null
code Bf=null
code Nf=null
unit Mf=null
multiboard wR=null
timer uR=null
unit rR=null
trigger sR=null
rect tR=null
endglobals
function AP takes nothing returns nothing
set li=CreateTrigger()
call TriggerRegisterTimerEvent(li,0.10,false)
call TriggerAddAction(li,Lq)
endfunction
function AZ takes nothing returns nothing
local trigger UZ
local playerunitevent IZ
local integer PZ
set Pt=CreateTrigger()
set UZ=Pt
set IZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set PZ=0
loop
call TriggerRegisterPlayerUnitEvent(UZ,Player(PZ),IZ,null)
set PZ=PZ+1
exitwhen PZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Pt,Condition(Be))
call TriggerAddAction(Pt,Ne)
set UZ=null
set IZ=null
endfunction
function BE takes nothing returns nothing
local trigger XE
local playerunitevent CE
local integer VE
set Qt=CreateTrigger()
set XE=Qt
set CE=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set VE=0
loop
call TriggerRegisterPlayerUnitEvent(XE,Player(VE),CE,null)
set VE=VE+1
exitwhen VE==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Qt,Condition(Ue))
call TriggerAddAction(Qt,Ie)
set XE=null
set CE=null
endfunction
function CP takes nothing returns nothing
local trigger KP
local playerunitevent LP
local integer XP
set bi=CreateTrigger()
set KP=bi
set LP=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set XP=0
loop
call TriggerRegisterPlayerUnitEvent(KP,Player(XP),LP,null)
set XP=XP+1
exitwhen XP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(bi,Condition(Xq))
call TriggerAddAction(bi,Cq)
set KP=null
set LP=null
endfunction
function CT takes nothing returns nothing
local trigger KT
local playerunitevent LT
local integer XT
set Gs=CreateTrigger()
set KT=Gs
set LT=EVENT_PLAYER_UNIT_ATTACKED
set XT=0
loop
call TriggerRegisterPlayerUnitEvent(KT,Player(XT),LT,null)
set XT=XT+1
exitwhen XT==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Gs,Condition(ay))
call TriggerAddAction(Gs,ny)
set KT=null
set LT=null
endfunction
function CZ takes nothing returns nothing
local trigger KZ
local playerunitevent LZ
local integer XZ
set At=CreateTrigger()
set KZ=At
set LZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set XZ=0
loop
call TriggerRegisterPlayerUnitEvent(KZ,Player(XZ),LZ,null)
set XZ=XZ+1
exitwhen XZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(At,Condition(Me))
call TriggerAddAction(At,wq)
set KZ=null
set LZ=null
endfunction
function Cv takes nothing returns nothing
local trigger Kv
local playerunitevent Lv
local integer Xv
set st=CreateTrigger()
set Kv=st
set Lv=EVENT_PLAYER_UNIT_SPELL_CAST
set Xv=0
loop
call TriggerRegisterPlayerUnitEvent(Kv,Player(Xv),Lv,null)
set Xv=Xv+1
exitwhen Xv==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(st,Condition(Wp))
call TriggerAddAction(st,Ep)
set Kv=null
set Lv=null
endfunction
function DL takes nothing returns nothing
local trigger IL
local playerunitevent PL
local integer AL
set Ni=CreateTrigger()
set IL=Ni
set PL=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set AL=0
loop
call TriggerRegisterPlayerUnitEvent(IL,Player(AL),PL,null)
set AL=AL+1
exitwhen AL==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ni,Condition(Tn))
call TriggerAddAction(Ni,Yn)
set IL=null
set PL=null
endfunction
function DU takes nothing returns nothing
set Ct=CreateTrigger()
call TriggerRegisterTimerEvent(Ct,0.10,false)
call TriggerAddAction(Ct,eq)
endfunction
function DW takes nothing returns nothing
local trigger IW
local playerunitevent PW
local integer AW
set Gt=CreateTrigger()
set IW=Gt
set PW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set AW=0
loop
call TriggerRegisterPlayerUnitEvent(IW,Player(AW),PW,null)
set AW=AW+1
exitwhen AW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Gt,Condition(de))
call TriggerAddAction(Gt,fe)
set IW=null
set PW=null
endfunction
function EE takes nothing returns nothing
set vt=CreateTrigger()
call TriggerRegisterTimerEvent(vt,0.10,false)
call TriggerAddAction(vt,We)
endfunction
function ET takes nothing returns nothing
set Ys=CreateTrigger()
call TriggerRegisterTimerEvent(Ys,1.00,false)
call TriggerAddAction(Ys,qy)
endfunction
function FL takes nothing returns nothing
local trigger GL
local playerunitevent gL
local integer hL
set Vi=CreateTrigger()
set GL=Vi
set gL=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set hL=0
loop
call TriggerRegisterPlayerUnitEvent(GL,Player(hL),gL,null)
set hL=hL+1
exitwhen hL==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Vi,Condition(nn))
call TriggerAddAction(Vi,dn)
set GL=null
set gL=null
endfunction
function FW takes nothing returns nothing
local trigger GW
local playerunitevent gW
local integer hW
set Tt=CreateTrigger()
set GW=Tt
set gW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set hW=0
loop
call TriggerRegisterPlayerUnitEvent(GW,Player(hW),gW,null)
set hW=hW+1
exitwhen hW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Tt,Condition(ee))
call TriggerAddAction(Tt,qe)
set GW=null
set gW=null
endfunction
function GA takes nothing returns nothing
local trigger RA
local playerunitevent TA
local integer YA
set qi=CreateTrigger()
set RA=qi
set TA=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set YA=0
loop
call TriggerRegisterPlayerUnitEvent(RA,Player(YA),TA,null)
set YA=YA+1
exitwhen YA==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(qi,Condition(ra))
call TriggerAddAction(qi,sa)
set RA=null
set TA=null
endfunction
function GJ takes nothing returns nothing
local trigger RJ
local playerunitevent TJ
local integer YJ
set Ei=CreateTrigger()
set RJ=Ei
set TJ=EVENT_PLAYER_UNIT_SPELL_CAST
set YJ=0
loop
call TriggerRegisterPlayerUnitEvent(RJ,Player(YJ),TJ,null)
set YJ=YJ+1
exitwhen YJ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ei,Condition(Ha))
call TriggerAddAction(Ei,Ja)
set RJ=null
set TJ=null
endfunction
function GU takes nothing returns nothing
local trigger RU
local playerunitevent TU
local integer YU
set Kt=CreateTrigger()
set RU=Kt
set TU=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set YU=0
loop
call TriggerRegisterPlayerUnitEvent(RU,Player(YU),TU,null)
set YU=YU+1
exitwhen YU==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Kt,Condition(cq))
call TriggerAddAction(Kt,oq)
set RU=null
set TU=null
endfunction
function Gj takes nothing returns nothing
local trigger Rj
local playerunitevent Tj
local integer Yj
set Vs=CreateTrigger()
set Rj=Vs
set Tj=EVENT_PLAYER_UNIT_SPELL_CAST
set Yj=0
loop
call TriggerRegisterPlayerUnitEvent(Rj,Player(Yj),Tj,null)
set Yj=Yj+1
exitwhen Yj==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Vs,Condition(fp))
call TriggerAddAction(Vs,Rp)
set Rj=null
set Tj=null
endfunction
function HE takes nothing returns nothing
local trigger PE
local playerunitevent AE
local integer DE
set mt=CreateTrigger()
set PE=mt
set AE=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set DE=0
loop
call TriggerRegisterPlayerUnitEvent(PE,Player(DE),AE,null)
set DE=DE+1
exitwhen DE==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(mt,Condition(Ee))
call TriggerAddAction(mt,Ze)
set PE=null
set AE=null
endfunction
function IA takes nothing returns nothing
local trigger EA
local playerunitevent ZA
local integer UA
set ni=CreateTrigger()
set EA=ni
set ZA=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set UA=0
loop
call TriggerRegisterPlayerUnitEvent(EA,Player(UA),ZA,null)
set UA=UA+1
exitwhen UA==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ni,Condition(Sa))
call TriggerAddAction(ni,ca)
set EA=null
set ZA=null
endfunction
function IG takes nothing returns nothing
local trigger EG
local playerunitevent ZG
local integer UG
set ms=CreateTrigger()
set EG=ms
set ZG=EVENT_PLAYER_UNIT_SPELL_CAST
set UG=0
loop
call TriggerRegisterPlayerUnitEvent(EG,Player(UG),ZG,null)
set UG=UG+1
exitwhen UG==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ms,Condition(Qy))
call TriggerAddAction(ms,Wy)
set EG=null
set ZG=null
endfunction
function IJ takes nothing returns nothing
local trigger EJ
local playerunitevent ZJ
local integer UJ
set Zi=CreateTrigger()
set EJ=Zi
set ZJ=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set UJ=0
loop
call TriggerRegisterPlayerUnitEvent(EJ,Player(UJ),ZJ,null)
set UJ=UJ+1
exitwhen UJ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Zi,Condition(Ka))
call TriggerAddAction(Zi,La)
set EJ=null
set ZJ=null
endfunction
function IU takes nothing returns nothing
local trigger EU
local playerunitevent ZU
local integer UU
set Xt=CreateTrigger()
set EU=Xt
set ZU=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set UU=0
loop
call TriggerRegisterPlayerUnitEvent(EU,Player(UU),ZU,null)
set UU=UU+1
exitwhen UU==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Xt,Condition(bq))
call TriggerAddAction(Xt,yq)
set EU=null
set ZU=null
endfunction
function Im takes nothing returns nothing
local trigger Em
local playerunitevent Zm
local integer Um
set ot=CreateTrigger()
set Em=ot
set Zm=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Um=0
loop
call TriggerRegisterPlayerUnitEvent(Em,Player(Um),Zm,null)
set Um=Um+1
exitwhen Um==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ot,Condition(Ap))
call TriggerAddAction(ot,Dp)
set Em=null
set Zm=null
endfunction
function JD takes nothing returns nothing
local trigger AD
local playerunitevent DD
local integer HD
set hi=CreateTrigger()
set AD=hi
set DD=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set HD=0
loop
call TriggerRegisterPlayerUnitEvent(AD,Player(HD),DD,null)
set HD=HD+1
exitwhen HD==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(hi,Condition(Ya))
call TriggerAddAction(hi,Ga)
set AD=null
set DD=null
endfunction
function JK takes nothing returns nothing
local trigger AK
local playerunitevent DK
local integer HK
set Ji=CreateTrigger()
set AK=Ji
set DK=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set HK=0
loop
call TriggerRegisterPlayerUnitEvent(AK,Player(HK),DK,null)
set HK=HK+1
exitwhen HK==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ji,Condition(cn))
call TriggerAddAction(Ji,on)
set AK=null
set DK=null
endfunction
function JQ takes nothing returns nothing
local trigger AQ
local playerunitevent DQ
local integer HQ
set at=CreateTrigger()
set AQ=at
set DQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set HQ=0
loop
call TriggerRegisterPlayerUnitEvent(AQ,Player(HQ),DQ,null)
set HQ=HQ+1
exitwhen HQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(at,Condition(te))
call TriggerAddAction(at,ie)
set AQ=null
set DQ=null
endfunction
function Jj takes nothing returns nothing
local trigger Aj
local playerunitevent Dj
local integer Hj
set Bs=CreateTrigger()
set Aj=Bs
set Dj=EVENT_PLAYER_UNIT_SPELL_CAST
set Hj=0
loop
call TriggerRegisterPlayerUnitEvent(Aj,Player(Hj),Dj,null)
set Hj=Hj+1
exitwhen Hj==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Bs,Condition(Tp))
call TriggerAddAction(Bs,Yp)
set Aj=null
set Dj=null
endfunction
function Jx takes nothing returns nothing
local trigger Ax
local playerunitevent Dx
local integer Hx
set wt=CreateTrigger()
set Ax=wt
set Dx=EVENT_PLAYER_UNIT_DEATH
set Hx=0
loop
call TriggerRegisterPlayerUnitEvent(Ax,Player(Hx),Dx,null)
set Hx=Hx+1
exitwhen Hx==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(wt,Condition(kp))
call TriggerAddAction(wt,jp)
set Ax=null
set Dx=null
endfunction
function KG takes nothing returns nothing
local trigger DG
local playerunitevent HG
local integer JG
set Qs=CreateTrigger()
set DG=Qs
set HG=EVENT_PLAYER_UNIT_SPELL_EFFECT
set JG=0
loop
call TriggerRegisterPlayerUnitEvent(DG,Player(JG),HG,null)
set JG=JG+1
exitwhen JG==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Qs,Condition(Ey))
call TriggerAddAction(Qs,Zy)
set DG=null
set HG=null
endfunction
function KY takes nothing returns nothing
local trigger DY
local playerunitevent HY
local integer JY
set ks=CreateTrigger()
set DY=ks
set HY=EVENT_PLAYER_UNIT_ATTACKED
set JY=0
loop
call TriggerRegisterPlayerUnitEvent(DY,Player(JY),HY,null)
set JY=JY+1
exitwhen JY==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ks,Condition(gy))
call TriggerAddAction(ks,hy)
set DY=null
set HY=null
endfunction
function LA takes nothing returns nothing
local trigger HA
local playerunitevent JA
local integer KA
set di=CreateTrigger()
set HA=di
set JA=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set KA=0
loop
call TriggerRegisterPlayerUnitEvent(HA,Player(KA),JA,null)
set KA=KA+1
exitwhen KA==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(di,Condition(oa))
call TriggerAddAction(di,Oa)
set HA=null
set JA=null
endfunction
function Lm takes nothing returns nothing
local trigger Hm
local playerunitevent Jm
local integer Km
set Ot=CreateTrigger()
set Hm=Ot
set Jm=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Km=0
loop
call TriggerRegisterPlayerUnitEvent(Hm,Player(Km),Jm,null)
set Km=Km+1
exitwhen Km==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ot,Condition(Hp))
call TriggerAddAction(Ot,Jp)
set Hm=null
set Jm=null
endfunction
function ND takes nothing returns nothing
local trigger CD
local playerunitevent VD
local integer BD
set Fi=CreateTrigger()
set CD=Fi
set VD=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set BD=0
loop
call TriggerRegisterPlayerUnitEvent(CD,Player(BD),VD,null)
set BD=BD+1
exitwhen BD==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Fi,Condition(ga))
call TriggerAddAction(Fi,ha)
set CD=null
set VD=null
endfunction
function NK takes nothing returns nothing
local trigger CK
local playerunitevent VK
local integer BK
set Ki=CreateTrigger()
set CK=Ki
set VK=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set BK=0
loop
call TriggerRegisterPlayerUnitEvent(CK,Player(BK),VK,null)
set BK=BK+1
exitwhen BK==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ki,Condition(On))
call TriggerAddAction(Ki,ln)
set CK=null
set VK=null
endfunction
function NQ takes nothing returns nothing
local trigger CQ
local playerunitevent VQ
local integer BQ
set nt=CreateTrigger()
set CQ=nt
set VQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set BQ=0
loop
call TriggerRegisterPlayerUnitEvent(CQ,Player(BQ),VQ,null)
set BQ=BQ+1
exitwhen BQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(nt,Condition(Se))
call TriggerAddAction(nt,ce)
set CQ=null
set VQ=null
endfunction
function OA takes nothing returns nothing
local trigger SA
local playerunitevent cA
local integer oA
set pi=CreateTrigger()
set SA=pi
set cA=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set oA=0
loop
call TriggerRegisterPlayerUnitEvent(SA,Player(oA),cA,null)
set oA=oA+1
exitwhen oA==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(pi,Condition(Nq))
call TriggerAddAction(pi,Mq)
set SA=null
set cA=null
endfunction
function OU takes nothing returns nothing
local trigger SU
local playerunitevent cU
local integer oU
set Ht=CreateTrigger()
set SU=Ht
set cU=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set oU=0
loop
call TriggerRegisterPlayerUnitEvent(SU,Player(oU),cU,null)
set oU=oU+1
exitwhen oU==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ht,Condition(sq))
call TriggerAddAction(Ht,tq)
set SU=null
set cU=null
endfunction
function Ok takes nothing returns nothing
set Ks=CreateTrigger()
call TriggerRegisterTimerEvent(Ks,5.00,true)
call TriggerAddAction(Ks,yp)
endfunction
function PI takes nothing returns nothing
local trigger ZI
local playerunitevent UI
local integer II
set ri=CreateTrigger()
set ZI=ri
set UI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set II=0
loop
call TriggerRegisterPlayerUnitEvent(ZI,Player(II),UI,null)
set II=II+1
exitwhen II==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ri,Condition(kq))
call TriggerAddAction(ri,jq)
set ZI=null
set UI=null
endfunction
function PX takes nothing returns nothing
local trigger ZX
local playerunitevent UX
local integer IX
set iS=CreateTrigger()
set ZX=iS
set UX=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set IX=0
loop
call TriggerRegisterPlayerUnitEvent(ZX,Player(IX),UX,null)
set IX=IX+1
exitwhen IX==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(iS,Condition(Zn))
call TriggerAddAction(iS,Un)
set ZX=null
set UX=null
endfunction
function QZ takes nothing returns nothing
local trigger xZ
local playerunitevent vZ
local integer mZ
set It=CreateTrigger()
set xZ=It
set vZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set mZ=0
loop
call TriggerRegisterPlayerUnitEvent(xZ,Player(mZ),vZ,null)
set mZ=mZ+1
exitwhen mZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(It,Condition(Ce))
call TriggerAddAction(It,Ve)
set xZ=null
set vZ=null
endfunction
function TD takes nothing returns nothing
local trigger dD
local playerunitevent fD
local integer RD
set Yi=CreateTrigger()
set dD=Yi
set fD=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set RD=0
loop
call TriggerRegisterPlayerUnitEvent(dD,Player(RD),fD,null)
set RD=RD+1
exitwhen RD==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Yi,Condition(aa))
call TriggerAddAction(Yi,na)
set dD=null
set fD=null
endfunction
function TK takes nothing returns nothing
local trigger dK
local playerunitevent fK
local integer RK
set Ai=CreateTrigger()
set dK=Ai
set fK=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set RK=0
loop
call TriggerRegisterPlayerUnitEvent(dK,Player(RK),fK,null)
set RK=RK+1
exitwhen RK==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ai,Condition(wn))
call TriggerAddAction(Ai,un)
set dK=null
set fK=null
endfunction
function TQ takes nothing returns nothing
local trigger dQ
local playerunitevent fQ
local integer RQ
set pt=CreateTrigger()
set dQ=pt
set fQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set RQ=0
loop
call TriggerRegisterPlayerUnitEvent(dQ,Player(RQ),fQ,null)
set RQ=RQ+1
exitwhen RQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(pt,Condition(Np))
call TriggerAddAction(pt,Mp)
set dQ=null
set fQ=null
endfunction
function UP takes nothing returns nothing
local trigger WP
local playerunitevent EP
local integer ZP
set Oi=CreateTrigger()
set WP=Oi
set EP=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set ZP=0
loop
call TriggerRegisterPlayerUnitEvent(WP,Player(ZP),EP,null)
set ZP=ZP+1
exitwhen ZP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Oi,Condition(Hq))
call TriggerAddAction(Oi,Jq)
set WP=null
set EP=null
endfunction
function Uk takes nothing returns nothing
local trigger Wk
local playerunitevent Ek
local integer Zk
set Xs=CreateTrigger()
set Wk=Xs
set Ek=EVENT_PLAYER_UNIT_SPELL_CAST
set Zk=0
loop
call TriggerRegisterPlayerUnitEvent(Wk,Player(Zk),Ek,null)
set Zk=Zk+1
exitwhen Zk==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Xs,Condition(qp))
call TriggerAddAction(Xs,ap)
set Wk=null
set Ek=null
endfunction
function VH takes nothing returns nothing
local trigger LH
local playerunitevent XH
local integer CH
set Qi=CreateTrigger()
set LH=Qi
set XH=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set CH=0
loop
call TriggerRegisterPlayerUnitEvent(LH,Player(CH),XH,null)
set CH=CH+1
exitwhen CH==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Qi,Condition(Ia))
call TriggerAddAction(Qi,Pa)
set LH=null
set XH=null
endfunction
function VL takes nothing returns nothing
local trigger LL
local playerunitevent XL
local integer CL
set Mi=CreateTrigger()
set LL=Mi
set XL=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set CL=0
loop
call TriggerRegisterPlayerUnitEvent(LL,Player(CL),XL,null)
set CL=CL+1
exitwhen CL==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Mi,Condition(Gn))
call TriggerAddAction(Mi,gn)
set LL=null
set XL=null
endfunction
function VU takes nothing returns nothing
local trigger LU
local playerunitevent XU
local integer CU
set Vt=CreateTrigger()
set LU=Vt
set XU=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set CU=0
loop
call TriggerRegisterPlayerUnitEvent(LU,Player(CU),XU,null)
set CU=CU+1
exitwhen CU==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Vt,Condition(qq))
call TriggerAddAction(Vt,aq)
set LU=null
set XU=null
endfunction
function VW takes nothing returns nothing
local trigger LW
local playerunitevent XW
local integer CW
set gt=CreateTrigger()
set LW=gt
set XW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set CW=0
loop
call TriggerRegisterPlayerUnitEvent(LW,Player(CW),XW,null)
set CW=CW+1
exitwhen CW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(gt,Condition(Re))
call TriggerAddAction(gt,Te)
set LW=null
set XW=null
endfunction
function WH takes nothing returns nothing
local trigger vH
local playerunitevent mH
local integer QH
set mi=CreateTrigger()
set vH=mi
set mH=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set QH=0
loop
call TriggerRegisterPlayerUnitEvent(vH,Player(QH),mH,null)
set QH=QH+1
exitwhen QH==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(mi,Ua)
set vH=null
set mH=null
endfunction
function WL takes nothing returns nothing
local trigger vL
local playerunitevent mL
local integer QL
set Bi=CreateTrigger()
set vL=Bi
set mL=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set QL=0
loop
call TriggerRegisterPlayerUnitEvent(vL,Player(QL),mL,null)
set QL=QL+1
exitwhen QL==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Bi,Condition(fn))
call TriggerAddAction(Bi,Rn)
set vL=null
set mL=null
endfunction
function WW takes nothing returns nothing
local trigger vW
local playerunitevent mW
local integer QW
set Yt=CreateTrigger()
set vW=Yt
set mW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set QW=0
loop
call TriggerRegisterPlayerUnitEvent(vW,Player(QW),mW,null)
set QW=QW+1
exitwhen QW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Yt,Condition(ae))
call TriggerAddAction(Yt,ne)
set vW=null
set mW=null
endfunction
function XI takes nothing returns nothing
local trigger JI
local playerunitevent KI
local integer LI
set si=CreateTrigger()
set JI=si
set KI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set LI=0
loop
call TriggerRegisterPlayerUnitEvent(JI,Player(LI),KI,null)
set LI=LI+1
exitwhen LI==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(si,Condition(xq))
call TriggerAddAction(si,vq)
set JI=null
set KI=null
endfunction
function XX takes nothing returns nothing
local trigger JX
local playerunitevent KX
local integer LX
set SS=CreateTrigger()
set JX=SS
set KX=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set LX=0
loop
call TriggerRegisterPlayerUnitEvent(JX,Player(LX),KX,null)
set LX=LX+1
exitwhen LX==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(SS,Condition(In))
call TriggerAddAction(SS,Pn)
set JX=null
set KX=null
endfunction
function YP takes nothing returns nothing
local trigger fP
local playerunitevent RP
local integer TP
set ci=CreateTrigger()
set fP=ci
set RP=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set TP=0
loop
call TriggerRegisterPlayerUnitEvent(fP,Player(TP),RP,null)
set TP=TP+1
exitwhen TP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ci,Condition(Iq))
call TriggerAddAction(ci,Pq)
set fP=null
set RP=null
endfunction
function ZD takes nothing returns nothing
local trigger QD
local playerunitevent WD
local integer ED
set gi=CreateTrigger()
set QD=gi
set WD=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set ED=0
loop
call TriggerRegisterPlayerUnitEvent(QD,Player(ED),WD,null)
set ED=ED+1
exitwhen ED==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(gi,Condition(Ra))
call TriggerAddAction(gi,Ta)
set QD=null
set WD=null
endfunction
function ZF takes nothing returns nothing
local trigger QF
local playerunitevent WF
local integer EF
set Hs=CreateTrigger()
set QF=Hs
set WF=EVENT_PLAYER_UNIT_SPELL_CAST
set EF=0
loop
call TriggerRegisterPlayerUnitEvent(QF,Player(EF),WF,null)
set EF=EF+1
exitwhen EF==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Hs,Condition(Sp))
call TriggerAddAction(Hs,cp)
set QF=null
set WF=null
endfunction
function ZK takes nothing returns nothing
local trigger QK
local playerunitevent WK
local integer EK
set Hi=CreateTrigger()
set QK=Hi
set WK=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set EK=0
loop
call TriggerRegisterPlayerUnitEvent(QK,Player(EK),WK,null)
set EK=EK+1
exitwhen EK==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Hi,Condition(tn))
call TriggerAddAction(Hi,Sn)
set QK=null
set WK=null
endfunction
function ZQ takes nothing returns nothing
local trigger QQ
local playerunitevent WQ
local integer EQ
set qt=CreateTrigger()
set QQ=qt
set WQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set EQ=0
loop
call TriggerRegisterPlayerUnitEvent(QQ,Player(EQ),WQ,null)
set EQ=EQ+1
exitwhen EQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(qt,Condition(re))
call TriggerAddAction(qt,se)
set QQ=null
set WQ=null
endfunction
function Zg takes nothing returns nothing
local trigger Qg
local playerunitevent Wg
local integer Eg
set Zs=CreateTrigger()
set Qg=Zs
set Wg=EVENT_PLAYER_UNIT_SPELL_CAST
set Eg=0
loop
call TriggerRegisterPlayerUnitEvent(Qg,Player(Eg),Wg,null)
set Eg=Eg+1
exitwhen Eg==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Zs,Condition(Ay))
call TriggerAddAction(Zs,Dy)
set Qg=null
set Wg=null
endfunction
function Zh takes nothing returns nothing
local trigger Qh
local playerunitevent Wh
local integer Eh
set Ps=CreateTrigger()
set Qh=Ps
set Wh=EVENT_PLAYER_UNIT_SPELL_CAST
set Eh=0
loop
call TriggerRegisterPlayerUnitEvent(Qh,Player(Eh),Wh,null)
set Eh=Eh+1
exitwhen Eh==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ps,Condition(By))
call TriggerAddAction(Ps,Ny)
set Qh=null
set Wh=null
endfunction
function aA takes nothing returns nothing
local trigger pA
local playerunitevent eA
local integer qA
set ei=CreateTrigger()
set pA=ei
set eA=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set qA=0
loop
call TriggerRegisterPlayerUnitEvent(pA,Player(qA),eA,null)
set qA=qA+1
exitwhen qA==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ei,Condition(wa))
call TriggerAddAction(ei,ua)
set pA=null
set eA=null
endfunction
function aG takes nothing returns nothing
local trigger pG
local playerunitevent eG
local integer qG
set xs=CreateTrigger()
set pG=xs
set eG=EVENT_PLAYER_UNIT_ATTACKED
set qG=0
loop
call TriggerRegisterPlayerUnitEvent(pG,Player(qG),eG,null)
set qG=qG+1
exitwhen qG==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(xs,Condition(jy))
call TriggerAddAction(xs,xy)
set pG=null
set eG=null
endfunction
function aU takes nothing returns nothing
local trigger pU
local playerunitevent eU
local integer qU
set Jt=CreateTrigger()
set pU=Jt
set eU=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set qU=0
loop
call TriggerRegisterPlayerUnitEvent(pU,Player(qU),eU,null)
set qU=qU+1
exitwhen qU==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Jt,Condition(iq))
call TriggerAddAction(Jt,Sq)
set pU=null
set eU=null
endfunction
function bZ takes nothing returns nothing
local trigger oZ
local playerunitevent OZ
local integer lZ
set Et=CreateTrigger()
set oZ=Et
set OZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set lZ=0
loop
call TriggerRegisterPlayerUnitEvent(oZ,Player(lZ),OZ,null)
set lZ=lZ+1
exitwhen lZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Et,Condition(De))
call TriggerAddAction(Et,He)
set oZ=null
set OZ=null
endfunction
function cD takes nothing returns nothing
local trigger tD
local playerunitevent iD
local integer SD
set Ri=CreateTrigger()
set tD=Ri
set iD=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set SD=0
loop
call TriggerRegisterPlayerUnitEvent(tD,Player(SD),iD,null)
set SD=SD+1
exitwhen SD==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ri,Condition(ya))
call TriggerAddAction(Ri,pa)
set tD=null
set iD=null
endfunction
function cK takes nothing returns nothing
local trigger tK
local playerunitevent iK
local integer SK
set Ii=CreateTrigger()
set tK=Ii
set iK=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set SK=0
loop
call TriggerRegisterPlayerUnitEvent(tK,Player(SK),iK,null)
set SK=SK+1
exitwhen SK==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ii,Condition(Va))
call TriggerAddAction(Ii,Ba)
set tK=null
set iK=null
endfunction
function cQ takes nothing returns nothing
local trigger tQ
local playerunitevent iQ
local integer SQ
set bt=CreateTrigger()
set tQ=bt
set iQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set SQ=0
loop
call TriggerRegisterPlayerUnitEvent(tQ,Player(SQ),iQ,null)
set SQ=SQ+1
exitwhen SQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(bt,Condition(Xp))
call TriggerAddAction(bt,Cp)
set tQ=null
set iQ=null
endfunction
function cY takes nothing returns nothing
local trigger tY
local playerunitevent iY
local integer SY
set gs=CreateTrigger()
set tY=gs
set iY=EVENT_PLAYER_UNIT_ATTACKED
set SY=0
loop
call TriggerRegisterPlayerUnitEvent(tY,Player(SY),iY,null)
set SY=SY+1
exitwhen SY==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(gs,Condition(dy))
call TriggerAddAction(gs,fy)
set tY=null
set iY=null
endfunction
function dF takes nothing returns nothing
local trigger qF
local playerunitevent aF
local integer nF
set Ds=CreateTrigger()
set qF=Ds
set aF=EVENT_PLAYER_UNIT_SPELL_CAST
set nF=0
loop
call TriggerRegisterPlayerUnitEvent(qF,Player(nF),aF,null)
set nF=nF+1
exitwhen nF==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ds,Condition(sp))
call TriggerAddAction(Ds,tp)
set qF=null
set aF=null
endfunction
function dZ takes nothing returns nothing
local trigger qZ
local playerunitevent aZ
local integer nZ
set Zt=CreateTrigger()
set qZ=Zt
set aZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set nZ=0
loop
call TriggerRegisterPlayerUnitEvent(qZ,Player(nZ),aZ,null)
set nZ=nZ+1
exitwhen nZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Zt,Condition(Je))
call TriggerAddAction(Zt,Ke)
set qZ=null
set aZ=null
endfunction
function dg takes nothing returns nothing
local trigger qg
local playerunitevent ag
local integer ng
set Es=CreateTrigger()
set qg=Es
set ag=EVENT_PLAYER_UNIT_SPELL_CAST
set ng=0
loop
call TriggerRegisterPlayerUnitEvent(qg,Player(ng),ag,null)
set ng=ng+1
exitwhen ng==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(Es,Iy)
set qg=null
set ag=null
endfunction
function dh takes nothing returns nothing
local trigger qh
local playerunitevent ah
local integer nh
set Is=CreateTrigger()
set qh=Is
set ah=EVENT_PLAYER_UNIT_SPELL_CAST
set nh=0
loop
call TriggerRegisterPlayerUnitEvent(qh,Player(nh),ah,null)
set nh=nh+1
exitwhen nh==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Is,Condition(Xy))
call TriggerAddAction(Is,Cy)
set qh=null
set ah=null
endfunction
function eD takes nothing returns nothing
local trigger bD
local playerunitevent yD
local integer pD
set Ti=CreateTrigger()
set bD=Ti
set yD=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set pD=0
loop
call TriggerRegisterPlayerUnitEvent(bD,Player(pD),yD,null)
set pD=pD+1
exitwhen pD==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ti,Condition(ea))
call TriggerAddAction(Ti,qa)
set bD=null
set yD=null
endfunction
function eK takes nothing returns nothing
local trigger bK
local playerunitevent yK
local integer pK
set Pi=CreateTrigger()
set bK=Pi
set yK=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set pK=0
loop
call TriggerRegisterPlayerUnitEvent(bK,Player(pK),yK,null)
set pK=pK+1
exitwhen pK==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Pi,Condition(Na))
call TriggerAddAction(Pi,Ma)
set bK=null
set yK=null
endfunction
function eQ takes nothing returns nothing
local trigger bQ
local playerunitevent yQ
local integer pQ
set yt=CreateTrigger()
set bQ=yt
set yQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set pQ=0
loop
call TriggerRegisterPlayerUnitEvent(bQ,Player(pQ),yQ,null)
set pQ=pQ+1
exitwhen pQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(yt,Condition(Vp))
call TriggerAddAction(yt,Bp)
set bQ=null
set yQ=null
endfunction
function fL takes nothing returns nothing
local trigger aL
local playerunitevent nL
local integer dL
set Ci=CreateTrigger()
set aL=Ci
set nL=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set dL=0
loop
call TriggerRegisterPlayerUnitEvent(aL,Player(dL),nL,null)
set dL=dL+1
exitwhen dL==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ci,Condition(qn))
call TriggerAddAction(Ci,an)
set aL=null
set nL=null
endfunction
function fW takes nothing returns nothing
local trigger aW
local playerunitevent nW
local integer dW
set Rt=CreateTrigger()
set aW=Rt
set nW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set dW=0
loop
call TriggerRegisterPlayerUnitEvent(aW,Player(dW),nW,null)
set dW=dW+1
exitwhen dW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Rt,Condition(ye))
call TriggerAddAction(Rt,pe)
set aW=null
set nW=null
endfunction
function fY takes nothing returns nothing
local trigger aY
local playerunitevent nY
local integer dY
set hs=CreateTrigger()
set aY=hs
set nY=EVENT_PLAYER_UNIT_ATTACKED
set dY=0
loop
call TriggerRegisterPlayerUnitEvent(aY,Player(dY),nY,null)
set dY=dY+1
exitwhen dY==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(hs,Condition(Ry))
call TriggerAddAction(hs,Ty)
set aY=null
set nY=null
endfunction
function gE takes nothing returns nothing
local trigger TE
local playerunitevent YE
local integer GE
set jt=CreateTrigger()
set TE=jt
set YE=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set GE=0
loop
call TriggerRegisterPlayerUnitEvent(TE,Player(GE),YE,null)
set GE=GE+1
exitwhen GE==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(jt,Condition(je))
call TriggerAddAction(jt,xe)
set TE=null
set YE=null
endfunction
function gI takes nothing returns nothing
local trigger TI
local playerunitevent YI
local integer GI
set wi=CreateTrigger()
set TI=wi
set YI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set GI=0
loop
call TriggerRegisterPlayerUnitEvent(TI,Player(GI),YI,null)
set GI=GI+1
exitwhen GI==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(wi,Condition(Gq))
call TriggerAddAction(wi,gq)
set TI=null
set YI=null
endfunction
function gX takes nothing returns nothing
local trigger TX
local playerunitevent YX
local integer GX
set sS=CreateTrigger()
set TX=sS
set YX=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set GX=0
loop
call TriggerRegisterPlayerUnitEvent(TX,Player(GX),YX,null)
set GX=GX+1
exitwhen GX==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(sS,Condition(mn))
call TriggerAddAction(sS,Qn)
set TX=null
set YX=null
endfunction
function hZ takes nothing returns nothing
local trigger YZ
local playerunitevent GZ
local integer gZ
set Ut=CreateTrigger()
set YZ=Ut
set GZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set gZ=0
loop
call TriggerRegisterPlayerUnitEvent(YZ,Player(gZ),GZ,null)
set gZ=gZ+1
exitwhen gZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ut,Condition(Le))
call TriggerAddAction(Ut,Xe)
set YZ=null
set GZ=null
endfunction
function hx takes nothing returns nothing
local trigger Yx
local playerunitevent Gx
local integer gx
set Ms=CreateTrigger()
set Yx=Ms
set Gx=EVENT_PLAYER_UNIT_DEATH
set gx=0
loop
call TriggerRegisterPlayerUnitEvent(Yx,Player(gx),Gx,null)
set gx=gx+1
exitwhen gx==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ms,Condition(hp))
call TriggerAddAction(Ms,Fp)
set Yx=null
set Gx=null
endfunction
function iH takes nothing returns nothing
local trigger rH
local playerunitevent sH
local integer tH
set ki=CreateTrigger()
set rH=ki
set sH=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set tH=0
loop
call TriggerRegisterPlayerUnitEvent(rH,Player(tH),sH,null)
set tH=tH+1
exitwhen tH==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ki,Condition(Fa))
call TriggerAddAction(ki,ka)
set rH=null
set sH=null
endfunction
function iL takes nothing returns nothing
local trigger rL
local playerunitevent sL
local integer tL
set Li=CreateTrigger()
set rL=Li
set sL=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set tL=0
loop
call TriggerRegisterPlayerUnitEvent(rL,Player(tL),sL,null)
set tL=tL+1
exitwhen tL==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Li,Condition(bn))
call TriggerAddAction(Li,yn)
set rL=null
set sL=null
endfunction
function iW takes nothing returns nothing
local trigger rW
local playerunitevent sW
local integer tW
set dt=CreateTrigger()
set rW=dt
set sW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set tW=0
loop
call TriggerRegisterPlayerUnitEvent(rW,Player(tW),sW,null)
set tW=tW+1
exitwhen tW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(dt,Condition(oe))
call TriggerAddAction(dt,Oe)
set rW=null
set sW=null
endfunction
function ig takes nothing returns nothing
local trigger rg
local playerunitevent sg
local integer tg
set Ws=CreateTrigger()
set rg=Ws
set sg=EVENT_PLAYER_UNIT_SPELL_CAST
set tg=0
loop
call TriggerRegisterPlayerUnitEvent(rg,Player(tg),sg,null)
set tg=tg+1
exitwhen tg==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(Ws,Uy)
set rg=null
set sg=null
endfunction
function jD takes nothing returns nothing
local trigger hD
local playerunitevent FD
local integer kD
set Gi=CreateTrigger()
set hD=Gi
set FD=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set kD=0
loop
call TriggerRegisterPlayerUnitEvent(hD,Player(kD),FD,null)
set kD=kD+1
exitwhen kD==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Gi,Condition(da))
call TriggerAddAction(Gi,fa)
set hD=null
set FD=null
endfunction
function jG takes nothing returns nothing
local trigger hG
local playerunitevent FG
local integer kG
set vs=CreateTrigger()
set hG=vs
set FG=EVENT_PLAYER_UNIT_ATTACKED
set kG=0
loop
call TriggerRegisterPlayerUnitEvent(hG,Player(kG),FG,null)
set kG=kG+1
exitwhen kG==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(vs,Condition(vy))
call TriggerAddAction(vs,my)
set hG=null
set FG=null
endfunction
function jH takes nothing returns nothing
local trigger hH
local playerunitevent FH
local integer kH
set vi=CreateTrigger()
set hH=vi
set FH=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set kH=0
loop
call TriggerRegisterPlayerUnitEvent(hH,Player(kH),FH,null)
set kH=kH+1
exitwhen kH==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(vi,Condition(Ea))
call TriggerAddAction(vi,Za)
set hH=null
set FH=null
endfunction
function jK takes nothing returns nothing
local trigger hK
local playerunitevent FK
local integer kK
set Di=CreateTrigger()
set hK=Di
set FK=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set kK=0
loop
call TriggerRegisterPlayerUnitEvent(hK,Player(kK),FK,null)
set kK=kK+1
exitwhen kK==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Di,Condition(rn))
call TriggerAddAction(Di,sn)
set hK=null
set FK=null
endfunction
function jQ takes nothing returns nothing
local trigger hQ
local playerunitevent FQ
local integer kQ
set et=CreateTrigger()
set hQ=et
set FQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set kQ=0
loop
call TriggerRegisterPlayerUnitEvent(hQ,Player(kQ),FQ,null)
set kQ=kQ+1
exitwhen kQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(et,Condition(we))
call TriggerAddAction(et,ue)
set hQ=null
set FQ=null
endfunction
function kv takes nothing returns nothing
local trigger gv
local playerunitevent hv
local integer Fv
set rt=CreateTrigger()
set gv=rt
set hv=EVENT_PLAYER_UNIT_SPELL_CAST
set Fv=0
loop
call TriggerRegisterPlayerUnitEvent(gv,Player(Fv),hv,null)
set Fv=Fv+1
exitwhen Fv==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(rt,Condition(mp))
call TriggerAddAction(rt,Qp)
set gv=null
set hv=null
endfunction
function lE takes nothing returns nothing
local trigger cE
local playerunitevent oE
local integer OE
set Ft=CreateTrigger()
set cE=Ft
set oE=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set OE=0
loop
call TriggerRegisterPlayerUnitEvent(cE,Player(OE),oE,null)
set OE=OE+1
exitwhen OE==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ft,Condition(ge))
call TriggerAddAction(Ft,he)
set cE=null
set oE=null
endfunction
function lI takes nothing returns nothing
local trigger cI
local playerunitevent oI
local integer OI
set Nt=CreateTrigger()
set cI=Nt
set oI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set OI=0
loop
call TriggerRegisterPlayerUnitEvent(cI,Player(OI),oI,null)
set OI=OI+1
exitwhen OI==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Nt,Condition(fq))
call TriggerAddAction(Nt,Rq)
set cI=null
set oI=null
endfunction
function lJ takes nothing returns nothing
local trigger cJ
local playerunitevent oJ
local integer OJ
set Wi=CreateTrigger()
set cJ=Wi
set oJ=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set OJ=0
loop
call TriggerRegisterPlayerUnitEvent(cJ,Player(OJ),oJ,null)
set OJ=OJ+1
exitwhen OJ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Wi,Condition(Aa))
call TriggerAddAction(Wi,Da)
set cJ=null
set oJ=null
endfunction
function lX takes nothing returns nothing
local trigger cX
local playerunitevent oX
local integer OX
set uS=CreateTrigger()
set cX=uS
set oX=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set OX=0
loop
call TriggerRegisterPlayerUnitEvent(cX,Player(OX),oX,null)
set OX=OX+1
exitwhen OX==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(uS,Condition(kn))
call TriggerAddAction(uS,jn)
set cX=null
set oX=null
endfunction
function mE takes nothing returns nothing
local trigger jE
local playerunitevent xE
local integer vE
set xt=CreateTrigger()
set jE=xt
set xE=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set vE=0
loop
call TriggerRegisterPlayerUnitEvent(jE,Player(vE),xE,null)
set vE=vE+1
exitwhen vE==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(xt,Condition(ve))
call TriggerAddAction(xt,me)
set jE=null
set xE=null
endfunction
function mI takes nothing returns nothing
local trigger jI
local playerunitevent xI
local integer vI
set ui=CreateTrigger()
set jI=ui
set xI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set vI=0
loop
call TriggerRegisterPlayerUnitEvent(jI,Player(vI),xI,null)
set vI=vI+1
exitwhen vI==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ui,Condition(hq))
call TriggerAddAction(ui,Fq)
set jI=null
set xI=null
endfunction
function mT takes nothing returns nothing
set Rs=CreateTrigger()
call TriggerRegisterTimerEvent(Rs,70.00,false)
call TriggerAddAction(Rs,ey)
endfunction
function mX takes nothing returns nothing
local trigger jX
local playerunitevent xX
local integer vX
set tS=CreateTrigger()
set jX=tS
set xX=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set vX=0
loop
call TriggerRegisterPlayerUnitEvent(jX,Player(vX),xX,null)
set vX=vX+1
exitwhen vX==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(tS,Condition(Wn))
call TriggerAddAction(tS,En)
set jX=null
set xX=null
endfunction
function mY takes nothing returns nothing
local trigger jY
local playerunitevent xY
local integer vY
set Fs=CreateTrigger()
set jY=Fs
set xY=EVENT_PLAYER_UNIT_ATTACKED
set vY=0
loop
call TriggerRegisterPlayerUnitEvent(jY,Player(vY),xY,null)
set vY=vY+1
exitwhen vY==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Fs,Condition(Yy))
call TriggerAddAction(Fs,Gy)
set jY=null
set xY=null
endfunction
function nE takes nothing returns nothing
local trigger eE
local playerunitevent qE
local integer aE
set kt=CreateTrigger()
set eE=kt
set qE=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set aE=0
loop
call TriggerRegisterPlayerUnitEvent(eE,Player(aE),qE,null)
set aE=aE+1
exitwhen aE==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(kt,Condition(Fe))
call TriggerAddAction(kt,ke)
set eE=null
set qE=null
endfunction
function nI takes nothing returns nothing
local trigger eI
local playerunitevent qI
local integer aI
set Mt=CreateTrigger()
set eI=Mt
set qI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set aI=0
loop
call TriggerRegisterPlayerUnitEvent(eI,Player(aI),qI,null)
set aI=aI+1
exitwhen aI==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Mt,Condition(Tq))
call TriggerAddAction(Mt,Yq)
set eI=null
set qI=null
endfunction
function nX takes nothing returns nothing
local trigger eX
local playerunitevent qX
local integer aX
set rS=CreateTrigger()
set eX=rS
set qX=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set aX=0
loop
call TriggerRegisterPlayerUnitEvent(eX,Player(aX),qX,null)
set aX=aX+1
exitwhen aX==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(rS,Condition(xn))
call TriggerAddAction(rS,vn)
set eX=null
set qX=null
endfunction
function nk takes nothing returns nothing
set Ls=CreateTrigger()
call TriggerRegisterTimerEvent(Ls,5.00,true)
call TriggerAddAction(Ls,ep)
endfunction
function oP takes nothing returns nothing
local trigger iP
local playerunitevent SP
local integer cP
set ii=CreateTrigger()
set iP=ii
set SP=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set cP=0
loop
call TriggerRegisterPlayerUnitEvent(iP,Player(cP),SP,null)
set cP=cP+1
exitwhen cP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ii,Condition(Wq))
call TriggerAddAction(ii,Eq)
set iP=null
set SP=null
endfunction
function ov takes nothing returns nothing
local trigger iv
local playerunitevent Sv
local integer cv
set ut=CreateTrigger()
set iv=ut
set Sv=EVENT_PLAYER_UNIT_DEATH
set cv=0
loop
call TriggerRegisterPlayerUnitEvent(iv,Player(cv),Sv,null)
set cv=cv+1
exitwhen cv==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ut,Condition(xp))
call TriggerAddAction(ut,vp)
set iv=null
set Sv=null
endfunction
function ox takes nothing returns nothing
local trigger ix
local playerunitevent Sx
local integer cx
set Ns=CreateTrigger()
set ix=Ns
set Sx=EVENT_PLAYER_UNIT_DEATH
set cx=0
loop
call TriggerRegisterPlayerUnitEvent(ix,Player(cx),Sx,null)
set cx=cx+1
exitwhen cx==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ns,Condition(Gp))
call TriggerAddAction(Ns,gp)
set ix=null
set Sx=null
endfunction
function pm takes nothing returns nothing
local trigger lm
local playerunitevent bm
local integer ym
set St=CreateTrigger()
set lm=St
set bm=EVENT_PLAYER_UNIT_DEATH
set ym=0
loop
call TriggerRegisterPlayerUnitEvent(lm,Player(ym),bm,null)
set ym=ym+1
exitwhen ym==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(St,Condition(Zp))
call TriggerAddAction(St,Up)
set lm=null
set bm=null
endfunction
function qH takes nothing returns nothing
set xi=CreateTrigger()
call TriggerRegisterTimerEvent(xi,0.10,false)
call TriggerAddAction(xi,ma)
endfunction
function qP takes nothing returns nothing
local trigger yP
local playerunitevent pP
local integer eP
set Si=CreateTrigger()
set yP=Si
set pP=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set eP=0
loop
call TriggerRegisterPlayerUnitEvent(yP,Player(eP),pP,null)
set eP=eP+1
exitwhen eP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Si,Condition(Zq))
call TriggerAddAction(Si,Uq)
set yP=null
set pP=null
endfunction
function rA takes nothing returns nothing
local trigger MP
local playerunitevent wA
local integer uA
set yi=CreateTrigger()
set MP=yi
set wA=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set uA=0
loop
call TriggerRegisterPlayerUnitEvent(MP,Player(uA),wA,null)
set uA=uA+1
exitwhen uA==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(yi,Condition(Vq))
call TriggerAddAction(yi,Bq)
set MP=null
set wA=null
endfunction
function rU takes nothing returns nothing
local trigger MZ
local playerunitevent wU
local integer uU
set Dt=CreateTrigger()
set MZ=Dt
set wU=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set uU=0
loop
call TriggerRegisterPlayerUnitEvent(MZ,Player(uU),wU,null)
set uU=uU+1
exitwhen uU==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Dt,Condition(uq))
call TriggerAddAction(Dt,rq)
set MZ=null
set wU=null
endfunction
function sE takes nothing returns nothing
local trigger wE
local playerunitevent uE
local integer rE
set ht=CreateTrigger()
set wE=ht
set uE=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set rE=0
loop
call TriggerRegisterPlayerUnitEvent(wE,Player(rE),uE,null)
set rE=rE+1
exitwhen rE==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ht,Condition(Ye))
call TriggerAddAction(ht,Ge)
set wE=null
set uE=null
endfunction
function sI takes nothing returns nothing
local trigger wI
local playerunitevent uI
local integer rI
set Bt=CreateTrigger()
set wI=Bt
set uI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set rI=0
loop
call TriggerRegisterPlayerUnitEvent(wI,Player(rI),uI,null)
set rI=rI+1
exitwhen rI==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Bt,Condition(nq))
call TriggerAddAction(Bt,dq)
set wI=null
set uI=null
endfunction
function sX takes nothing returns nothing
local trigger wX
local playerunitevent uX
local integer rX
set wS=CreateTrigger()
set wX=wS
set uX=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set rX=0
loop
call TriggerRegisterPlayerUnitEvent(wX,Player(rX),uX,null)
set rX=rX+1
exitwhen rX==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(wS,Condition(hn))
call TriggerAddAction(wS,Fn)
set wX=null
set uX=null
endfunction
function tG takes nothing returns nothing
local trigger uG
local playerunitevent rG
local integer sG
set js=CreateTrigger()
set uG=js
set rG=EVENT_PLAYER_UNIT_ATTACKED
set sG=0
loop
call TriggerRegisterPlayerUnitEvent(uG,Player(sG),rG,null)
set sG=sG+1
exitwhen sG==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(js,Condition(Fy))
call TriggerAddAction(js,ky)
set uG=null
set rG=null
endfunction
function tZ takes nothing returns nothing
local trigger uZ
local playerunitevent rZ
local integer sZ
set Wt=CreateTrigger()
set uZ=Wt
set rZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set sZ=0
loop
call TriggerRegisterPlayerUnitEvent(uZ,Player(sZ),rZ,null)
set sZ=sZ+1
exitwhen sZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Wt,Condition(Pe))
call TriggerAddAction(Wt,Ae)
set uZ=null
set rZ=null
endfunction
function tj takes nothing returns nothing
local trigger uj
local playerunitevent rj
local integer sj
set Cs=CreateTrigger()
set uj=Cs
set rj=EVENT_PLAYER_UNIT_SPELL_CAST
set sj=0
loop
call TriggerRegisterPlayerUnitEvent(uj,Player(sj),rj,null)
set sj=sj+1
exitwhen sj==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Cs,Condition(np))
call TriggerAddAction(Cs,dp)
set uj=null
set rj=null
endfunction
function uF takes nothing returns nothing
local trigger Nh
local playerunitevent Mh
local integer wF
set As=CreateTrigger()
set Nh=As
set Mh=EVENT_PLAYER_UNIT_SPELL_CAST
set wF=0
loop
call TriggerRegisterPlayerUnitEvent(Nh,Player(wF),Mh,null)
set wF=wF+1
exitwhen wF==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(As,Condition(wp))
call TriggerAddAction(As,up)
set Nh=null
set Mh=null
endfunction
function uP takes nothing returns nothing
local trigger NI
local playerunitevent MI
local integer wP
set ti=CreateTrigger()
set NI=ti
set MI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set wP=0
loop
call TriggerRegisterPlayerUnitEvent(NI,Player(wP),MI,null)
set wP=wP+1
exitwhen wP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ti,Condition(mq))
call TriggerAddAction(ti,Qq)
set NI=null
set MI=null
endfunction
function uh takes nothing returns nothing
local trigger Ng
local playerunitevent Mg
local integer wh
set Us=CreateTrigger()
set Ng=Us
set Mg=EVENT_PLAYER_UNIT_SPELL_CAST
set wh=0
loop
call TriggerRegisterPlayerUnitEvent(Ng,Player(wh),Mg,null)
set wh=wh+1
exitwhen wh==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Us,Condition(Jy))
call TriggerAddAction(Us,Ky)
set Ng=null
set Mg=null
endfunction
function uk takes nothing returns nothing
local trigger NF
local playerunitevent MF
local integer wk
set Js=CreateTrigger()
set NF=Js
set MF=EVENT_PLAYER_UNIT_SPELL_CAST
set wk=0
loop
call TriggerRegisterPlayerUnitEvent(NF,Player(wk),MF,null)
set wk=wk+1
exitwhen wk==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Js,Condition(Op))
call TriggerAddAction(Js,lp)
set NF=null
set MF=null
endfunction
function vA takes nothing returns nothing
local trigger kA
local playerunitevent jA
local integer xA
set ai=CreateTrigger()
set kA=ai
set jA=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set xA=0
loop
call TriggerRegisterPlayerUnitEvent(kA,Player(xA),jA,null)
set xA=xA+1
exitwhen xA==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ai,Condition(ta))
call TriggerAddAction(ai,ia)
set kA=null
set jA=null
endfunction
function vU takes nothing returns nothing
local trigger kU
local playerunitevent jU
local integer xU
set Lt=CreateTrigger()
set kU=Lt
set jU=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set xU=0
loop
call TriggerRegisterPlayerUnitEvent(kU,Player(xU),jU,null)
set xU=xU+1
exitwhen xU==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Lt,Condition(Oq))
call TriggerAddAction(Lt,lq)
set kU=null
set jU=null
endfunction
function vm takes nothing returns nothing
local trigger km
local playerunitevent jm
local integer xm
set ct=CreateTrigger()
set km=ct
set jm=EVENT_PLAYER_UNIT_DEATH
set xm=0
loop
call TriggerRegisterPlayerUnitEvent(km,Player(xm),jm,null)
set xm=xm+1
exitwhen xm==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ct,Condition(Ip))
call TriggerAddAction(ct,Pp)
set km=null
set jm=null
endfunction
function wD takes nothing returns nothing
local trigger BA
local playerunitevent NA
local integer MA
set fi=CreateTrigger()
set BA=fi
set NA=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set MA=0
loop
call TriggerRegisterPlayerUnitEvent(BA,Player(MA),NA,null)
set MA=MA+1
exitwhen MA==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(fi,Condition(la))
call TriggerAddAction(fi,ba)
set BA=null
set NA=null
endfunction
function wK takes nothing returns nothing
local trigger BJ
local playerunitevent NJ
local integer MJ
set Ui=CreateTrigger()
set BJ=Ui
set NJ=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set MJ=0
loop
call TriggerRegisterPlayerUnitEvent(BJ,Player(MJ),NJ,null)
set MJ=MJ+1
exitwhen MJ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ui,Condition(Xa))
call TriggerAddAction(Ui,Ca)
set BJ=null
set NJ=null
endfunction
function wQ takes nothing returns nothing
local trigger Bm
local playerunitevent Nm
local integer Mm
set lt=CreateTrigger()
set Bm=lt
set Nm=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Mm=0
loop
call TriggerRegisterPlayerUnitEvent(Bm,Player(Mm),Nm,null)
set Mm=Mm+1
exitwhen Mm==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(lt,Condition(Kp))
call TriggerAddAction(lt,Lp)
set Bm=null
set Nm=null
endfunction
function xP takes nothing returns nothing
local trigger FP
local playerunitevent kP
local integer jP
set oi=CreateTrigger()
set FP=oi
set kP=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set jP=0
loop
call TriggerRegisterPlayerUnitEvent(FP,Player(jP),kP,null)
set jP=jP+1
exitwhen jP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(oi,Condition(Aq))
call TriggerAddAction(oi,Dq)
set FP=null
set kP=null
endfunction
function yH takes nothing returns nothing
local trigger OH
local playerunitevent lH
local integer bH
set ji=CreateTrigger()
set OH=ji
set lH=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set bH=0
loop
call TriggerRegisterPlayerUnitEvent(OH,Player(bH),lH,null)
set bH=bH+1
exitwhen bH==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ji,Condition(ja))
call TriggerAddAction(ji,xa)
set OH=null
set lH=null
endfunction
function yL takes nothing returns nothing
local trigger OL
local playerunitevent lL
local integer bL
set Xi=CreateTrigger()
set OL=Xi
set lL=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set bL=0
loop
call TriggerRegisterPlayerUnitEvent(OL,Player(bL),lL,null)
set bL=bL+1
exitwhen bL==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Xi,Condition(pn))
call TriggerAddAction(Xi,en)
set OL=null
set lL=null
endfunction
function yW takes nothing returns nothing
local trigger OW
local playerunitevent lW
local integer bW
set ft=CreateTrigger()
set OW=ft
set lW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set bW=0
loop
call TriggerRegisterPlayerUnitEvent(OW,Player(bW),lW,null)
set bW=bW+1
exitwhen bW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ft,Condition(le))
call TriggerAddAction(ft,be)
set OW=null
set lW=null
endfunction
function CX takes nothing returns nothing
call mT()
set Ts=CreateTrigger()
call TriggerAddAction(Ts,An)
call ET()
call CT()
call cY()
call fY()
call mY()
call KY()
call tG()
call aG()
call jG()
call IG()
call KG()
call ig()
call dg()
call Zg()
call uh()
call dh()
call Zh()
call uF()
call dF()
call ZF()
call uk()
call Ok()
call nk()
call Uk()
call tj()
call Gj()
call Jj()
call ox()
call hx()
call Jx()
call ov()
call kv()
call Cv()
set tt=CreateTrigger()
call TriggerAddAction(tt,Dn)
call pm()
call vm()
call Im()
call Lm()
call wQ()
call cQ()
call eQ()
call TQ()
call jQ()
call ZQ()
call JQ()
call NQ()
call iW()
call yW()
call fW()
call FW()
call WW()
call DW()
call VW()
call sE()
call lE()
call nE()
call gE()
call mE()
call EE()
call HE()
call BE()
call tZ()
call bZ()
call dZ()
call hZ()
call QZ()
call AZ()
call CZ()
call rU()
call OU()
call aU()
call GU()
call vU()
call IU()
call DU()
call VU()
call sI()
call lI()
call nI()
call gI()
call mI()
call PI()
call XI()
call uP()
call oP()
call qP()
call YP()
call xP()
call UP()
call AP()
call CP()
call rA()
call OA()
call aA()
call GA()
call vA()
call IA()
call LA()
call wD()
call cD()
call eD()
call TD()
call jD()
call ZD()
call JD()
call ND()
call iH()
call yH()
call qH()
call jH()
call WH()
call VH()
call lJ()
call GJ()
call IJ()
call wK()
call cK()
call eK()
call TK()
call jK()
call ZK()
call JK()
call NK()
call iL()
call yL()
call fL()
call FL()
call WL()
call DL()
call VL()
call sX()
call lX()
call nX()
call gX()
call mX()
call PX()
call XX()
endfunction
function cR takes nothing returns nothing
local integer SR=0
set SR=0
loop
exitwhen SR>8192
call CreateGroup()
set SR=SR+1
endloop
call CreateForce()
call CreateGroup()
call CreateForce()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateForce()
call CreateForce()
call CreateForce()
call CreateTimer()
call CreateForce()
call CreateGroup()
set w=CreateGroup()
call CreateGroup()
call CreateForce()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateTimer()
set SR=0
loop
exitwhen SR>24
set SR=SR+1
endloop
set SR=0
loop
exitwhen SR>24
set r[SR]=0
set SR=SR+1
endloop
set s=CreateForce()
set SR=0
loop
exitwhen SR>24
set SR=SR+1
endloop
call CreateGroup()
set SR=0
loop
exitwhen SR>24
set SR=SR+1
endloop
set SR=0
loop
exitwhen SR>24
set SR=SR+1
endloop
call CreateForce()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
set l=CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
set SR=0
loop
exitwhen SR>24
set SR=SR+1
endloop
set SR=0
loop
exitwhen SR>24
set SR=SR+1
endloop
call CreateGroup()
set SR=0
loop
exitwhen SR>24
set SR=SR+1
endloop
set SR=0
loop
exitwhen SR>24
set SR=SR+1
endloop
set SR=0
loop
exitwhen SR>24
set SR=SR+1
endloop
set SR=0
loop
exitwhen SR>24
set SR=SR+1
endloop
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateForce()
call CreateForce()
set SR=0
loop
exitwhen SR>1
set SR=SR+1
endloop
set SR=0
loop
exitwhen SR>1
set SR=SR+1
endloop
set SR=0
loop
exitwhen SR>1
set SR=SR+1
endloop
set b=CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
set SR=0
loop
exitwhen SR>24
set p[SR]=false
set SR=SR+1
endloop
set SR=0
loop
exitwhen SR>24
set e[SR]=false
set SR=SR+1
endloop
endfunction
function gT takes nothing returns nothing
local player GT=Player(PLAYER_NEUTRAL_AGGRESSIVE)
call CreateUnit(GT,1747989297,-1600.0,-128.0,270.000)
call CreateUnit(GT,1747989297,-15040.0,10816.0,270.000)
call CreateUnit(GT,1747989297,-256.0,-2432.0,270.000)
call CreateUnit(GT,1747989297,-24320.0,3904.0,270.000)
call CreateUnit(GT,1747989297,-23552.0,-4544.0,270.000)
call CreateUnit(GT,1747989297,-23360.0,-64.0,270.000)
call CreateUnit(GT,1747989297,2176.0,-7744.0,270.000)
call CreateUnit(GT,1747989297,-6336.0,8000.0,270.000)
call CreateUnit(GT,1747989297,832.0,-5568.0,270.000)
call CreateUnit(GT,1747989297,-3648.0,1856.0,270.000)
call CreateUnit(GT,1747989042,-768.0,24384.0,270.000)
call CreateUnit(GT,1747989297,-26304.0,-8704.0,270.000)
call CreateUnit(GT,1747989297,2688.0,-3008.0,270.000)
call CreateUnit(GT,1747989297,-5568.0,-2752.0,270.000)
call CreateUnit(GT,1747989297,-3456.0,-2880.0,270.000)
call CreateUnit(GT,1747989297,-6464.0,1280.0,270.000)
call CreateUnit(GT,1747989297,-8064.0,3200.0,270.000)
call CreateUnit(GT,1747989297,-8768.0,1984.0,270.000)
call CreateUnit(GT,1747989297,-7104.0,-768.0,270.000)
call CreateUnit(GT,1747989297,-28544.0,0.0,270.000)
call CreateUnit(GT,1747989297,-27840.0,-2752.0,270.000)
call CreateUnit(GT,1747989297,-27008.0,2688.0,270.000)
call CreateUnit(GT,1747989297,-17024.0,512.0,270.000)
call CreateUnit(GT,1747989297,-21696.0,-4224.0,270.000)
call CreateUnit(GT,1747989042,17536.0,-9024.0,270.000)
call CreateUnit(GT,1747989297,10816.0,-7360.0,270.000)
call CreateUnit(GT,1747989297,12800.0,-6912.0,270.000)
call CreateUnit(GT,1747989297,15488.0,-7552.0,270.000)
call CreateUnit(GT,1747989297,19072.0,-7424.0,270.000)
call CreateUnit(GT,1747989297,15360.0,-5568.0,270.000)
call CreateUnit(GT,1747989297,17216.0,-8640.0,270.000)
call CreateUnit(GT,1747989297,16960.0,-16192.0,270.000)
call CreateUnit(GT,1747989297,6976.0,-6592.0,270.000)
call CreateUnit(GT,1747989297,24000.0,256.0,270.000)
call CreateUnit(GT,1747989297,-10688.0,-384.0,270.000)
call CreateUnit(GT,1747989297,13952.0,-11008.0,270.000)
call CreateUnit(GT,1747989297,-10944.0,-4608.0,270.000)
call CreateUnit(GT,1747989297,-21440.0,-8384.0,270.000)
call CreateUnit(GT,1747989297,17472.0,9472.0,270.000)
call CreateUnit(GT,1747989297,-16768.0,-8064.0,270.000)
call CreateUnit(GT,1747989297,-9920.0,-11264.0,270.000)
call CreateUnit(GT,1747989297,-7488.0,-16256.0,270.000)
call CreateUnit(GT,1747989297,448.0,-17600.0,270.000)
call CreateUnit(GT,1747989297,11008.0,-18496.0,270.000)
call CreateUnit(GT,1747989297,13248.0,-17856.0,270.000)
call CreateUnit(GT,1747989297,12288.0,-20864.0,270.000)
call CreateUnit(GT,1747989297,-11456.0,11008.0,270.000)
call CreateUnit(GT,1747989297,-8640.0,7104.0,270.000)
call CreateUnit(GT,1747989297,-7360.0,17088.0,270.000)
call CreateUnit(GT,1747989297,-5120.0,14528.0,270.000)
call CreateUnit(GT,1747989297,15488.0,-26816.0,270.000)
call CreateUnit(GT,1747989297,-9600.0,13120.0,270.000)
call CreateUnit(GT,1747989297,-11456.0,14528.0,270.000)
call CreateUnit(GT,1747989297,-12544.0,16320.0,270.000)
call CreateUnit(GT,1747989297,-7680.0,22272.0,270.000)
call CreateUnit(GT,1747989297,-6272.0,21376.0,270.000)
call CreateUnit(GT,1747989297,-4992.0,21888.0,270.000)
call CreateUnit(GT,1747989297,-1280.0,23936.0,270.000)
call CreateUnit(GT,1747989297,-3328.0,23232.0,270.000)
call CreateUnit(GT,1747989297,-2560.0,26368.0,270.000)
call CreateUnit(GT,1747989297,-6528.0,28288.0,270.000)
call CreateUnit(GT,1747989297,-9856.0,28416.0,270.000)
call CreateUnit(GT,1747989297,-13376.0,15104.0,270.000)
call CreateUnit(GT,1747989297,-10688.0,3520.0,270.000)
call CreateUnit(GT,1747989297,-9856.0,5440.0,270.000)
call CreateUnit(GT,1747989297,-6720.0,4096.0,270.000)
call CreateUnit(GT,1747989297,-13632.0,2368.0,270.000)
call CreateUnit(GT,1747989297,-10496.0,17728.0,270.000)
call CreateUnit(GT,1747989297,-7616.0,11200.0,270.000)
call CreateUnit(GT,1747989297,-18688.0,5760.0,270.000)
call CreateUnit(GT,1747989297,-25024.0,-3008.0,270.000)
call CreateUnit(GT,1747989297,-20096.0,1408.0,270.000)
call CreateUnit(GT,1747989297,-7040.0,-7808.0,270.000)
call CreateUnit(GT,1747989297,-5376.0,-9216.0,270.000)
call CreateUnit(GT,1747989297,24896.0,-27456.0,270.000)
call CreateUnit(GT,1747989297,-20352.0,12224.0,270.000)
call CreateUnit(GT,1747989297,-13568.0,5184.0,270.000)
call CreateUnit(GT,1747989297,-5120.0,24576.0,270.000)
call CreateUnit(GT,1747989297,-1856.0,27776.0,270.000)
call CreateUnit(GT,1747989297,-16704.0,24192.0,270.000)
call CreateUnit(GT,1747989297,-15936.0,17088.0,270.000)
call CreateUnit(GT,1747989297,-17792.0,16064.0,270.000)
call CreateUnit(GT,1747989297,-20224.0,21632.0,270.000)
call CreateUnit(GT,1747989297,-22400.0,19968.0,270.000)
call CreateUnit(GT,1747989297,-15872.0,20544.0,270.000)
call CreateUnit(GT,1747989297,-19776.0,16512.0,270.000)
call CreateUnit(GT,1747989297,-17088.0,12672.0,270.000)
call CreateUnit(GT,1747989297,-18560.0,19712.0,270.000)
call CreateUnit(GT,1747989297,-15680.0,26112.0,270.000)
call CreateUnit(GT,1747989297,-17088.0,26816.0,270.000)
call CreateUnit(GT,1747989297,-16704.0,3584.0,270.000)
call CreateUnit(GT,1747989297,-11456.0,7232.0,270.000)
call CreateUnit(GT,1747989297,-18176.0,10816.0,270.000)
call CreateUnit(GT,1747989297,-16000.0,6016.0,270.000)
call CreateUnit(GT,1747989297,-8896.0,26688.0,270.000)
call CreateUnit(GT,1747989297,9216.0,-4416.0,270.000)
call CreateUnit(GT,1747989297,6656.0,-4480.0,270.000)
call CreateUnit(GT,1747989297,5184.0,-1856.0,270.000)
call CreateUnit(GT,1747989297,18624.0,-448.0,270.000)
call CreateUnit(GT,1747989297,11008.0,-1984.0,270.000)
call CreateUnit(GT,1747989297,14144.0,-128.0,270.000)
call CreateUnit(GT,1747989297,8384.0,-10368.0,270.000)
call CreateUnit(GT,1747989297,5376.0,-12224.0,270.000)
call CreateUnit(GT,1747989297,3392.0,-7296.0,270.000)
call CreateUnit(GT,1747989297,12672.0,-3904.0,270.000)
call CreateUnit(GT,1747989297,27008.0,-11520.0,270.000)
call CreateUnit(GT,1747989297,-25216.0,1472.0,270.000)
call CreateUnit(GT,1747989297,23552.0,11072.0,270.000)
call CreateUnit(GT,1747989297,-20736.0,-2112.0,270.000)
call CreateUnit(GT,1747989297,-22592.0,2560.0,270.000)
call CreateUnit(GT,1747989297,-20864.0,3136.0,270.000)
call CreateUnit(GT,1747989297,-17280.0,-3136.0,270.000)
call CreateUnit(GT,1747989297,-3584.0,4608.0,270.000)
call CreateUnit(GT,1747989297,1536.0,29440.0,270.000)
call CreateUnit(GT,1747989297,-23104.0,-8832.0,270.000)
call CreateUnit(GT,1747989297,1216.0,-960.0,270.000)
call CreateUnit(GT,1747989297,-13312.0,-8512.0,270.000)
call CreateUnit(GT,1747989297,26240.0,-2688.0,270.000)
call CreateUnit(GT,1747989043,-7872.0,17536.0,270.000)
call CreateUnit(GT,1747989297,-13568.0,12160.0,270.000)
call CreateUnit(GT,1747989297,-13696.0,8064.0,270.000)
call CreateUnit(GT,1747989297,27648.0,-5824.0,270.000)
call CreateUnit(GT,1747989297,-4544.0,11648.0,270.000)
call CreateUnit(GT,1747989297,28992.0,-3200.0,270.000)
call CreateUnit(GT,1747989297,-3072.0,8320.0,270.000)
call CreateUnit(GT,1747989297,-384.0,8512.0,270.000)
call CreateUnit(GT,1747989297,28224.0,2752.0,270.000)
call CreateUnit(GT,1747989297,-4992.0,17280.0,270.000)
call CreateUnit(GT,1747989297,64.0,12608.0,270.000)
call CreateUnit(GT,1747989297,-2112.0,13696.0,270.000)
call CreateUnit(GT,1747989297,4160.0,5376.0,270.000)
call CreateUnit(GT,1747989297,4224.0,3904.0,270.000)
call CreateUnit(GT,1747989297,7232.0,2240.0,270.000)
call CreateUnit(GT,1747989297,-384.0,3072.0,270.000)
call CreateUnit(GT,1747989297,-8128.0,19968.0,270.000)
call CreateUnit(GT,1747989297,3072.0,192.0,270.000)
call CreateUnit(GT,1747989297,832.0,15872.0,270.000)
call CreateUnit(GT,1747989297,-2304.0,16064.0,270.000)
call CreateUnit(GT,1747989297,4416.0,19648.0,270.000)
call CreateUnit(GT,1747989297,1792.0,6976.0,270.000)
call CreateUnit(GT,1747989297,5888.0,24960.0,270.000)
call CreateUnit(GT,1747989297,-1792.0,19200.0,270.000)
call CreateUnit(GT,1747989297,3008.0,22784.0,270.000)
call CreateUnit(GT,1747989297,3200.0,18240.0,270.000)
call CreateUnit(GT,1747989297,-3712.0,-6528.0,270.000)
call CreateUnit(GT,1747989297,-17216.0,22208.0,270.000)
call CreateUnit(GT,1747989297,-18880.0,17920.0,270.000)
call CreateUnit(GT,1747989297,-17280.0,18304.0,270.000)
call CreateUnit(GT,1747989297,-22272.0,22400.0,270.000)
call CreateUnit(GT,1747989297,-10496.0,-9152.0,270.000)
call CreateUnit(GT,1747989297,13248.0,5120.0,270.000)
call CreateUnit(GT,1747989297,7936.0,-2368.0,270.000)
call CreateUnit(GT,1747989297,3520.0,27008.0,270.000)
call CreateUnit(GT,1747989297,8832.0,26368.0,270.000)
call CreateUnit(GT,1747989297,6848.0,21440.0,270.000)
call CreateUnit(GT,1747989297,6144.0,18560.0,270.000)
call CreateUnit(GT,1747989297,3904.0,11072.0,270.000)
call CreateUnit(GT,1747989297,8512.0,12352.0,270.000)
call CreateUnit(GT,1747989297,9280.0,20032.0,270.000)
call CreateUnit(GT,1747989297,1216.0,11008.0,270.000)
call CreateUnit(GT,1747989044,-15680.0,11200.0,270.000)
call CreateUnit(GT,1747989044,-15104.0,17408.0,270.000)
call CreateUnit(GT,1747989045,-1728.0,28608.0,270.000)
call CreateUnit(GT,1747989043,-18304.0,18112.0,270.000)
call CreateUnit(GT,1747989044,-9600.0,13888.0,270.000)
call CreateUnit(GT,1747989297,384.0,19456.0,270.000)
call CreateUnit(GT,1747989044,4864.0,5952.0,270.000)
call CreateUnit(GT,1747989044,8000.0,-1664.0,270.000)
call CreateUnit(GT,1747989044,9280.0,-3008.0,270.000)
call CreateUnit(GT,1747989045,-21056.0,21056.0,270.000)
call CreateUnit(GT,1747989045,-19648.0,12224.0,270.000)
call CreateUnit(GT,1747989045,17984.0,-13120.0,270.000)
call CreateUnit(GT,1747989042,-28544.0,704.0,270.000)
call CreateUnit(GT,1747989045,-9344.0,7168.0,270.000)
call CreateUnit(GT,1747989043,-6336.0,8576.0,270.000)
call CreateUnit(GT,1747989045,-15616.0,21248.0,270.000)
call CreateUnit(GT,1747989045,-16640.0,1024.0,270.000)
call CreateUnit(GT,1747989045,13760.0,-11584.0,270.000)
call CreateUnit(GT,1747989042,-11328.0,3712.0,270.000)
call CreateUnit(GT,1747989042,-16768.0,25920.0,270.000)
call CreateUnit(GT,1747989045,-19200.0,28352.0,270.000)
call CreateUnit(GT,1747989043,3456.0,11584.0,270.000)
call CreateUnit(GT,1747989044,-24640.0,4352.0,270.000)
call CreateUnit(GT,1747989044,-23232.0,-5120.0,270.000)
call CreateUnit(GT,1747989042,-23424.0,768.0,270.000)
call CreateUnit(GT,1747989045,-15936.0,-2688.0,270.000)
call CreateUnit(GT,1747989045,-10752.0,-3456.0,270.000)
call CreateUnit(GT,1747989044,-7552.0,4416.0,270.000)
call CreateUnit(GT,1747989045,-20160.0,-1600.0,270.000)
call CreateUnit(GT,1747989045,-21824.0,2560.0,270.000)
call CreateUnit(GT,1747989045,11392.0,-7104.0,270.000)
call CreateUnit(GT,1747989042,4352.0,20224.0,270.000)
call CreateUnit(GT,1747989044,-15360.0,4992.0,270.000)
call CreateUnit(GT,1747989042,-896.0,3392.0,270.000)
call CreateUnit(GT,1747989045,-6528.0,-832.0,270.000)
call CreateUnit(GT,1747989043,-4928.0,-3264.0,270.000)
call CreateUnit(GT,1747989042,-6144.0,-8192.0,270.000)
call CreateUnit(GT,1747989043,23424.0,640.0,270.000)
call CreateUnit(GT,1747989043,-6976.0,1344.0,270.000)
call CreateUnit(GT,1747989043,4352.0,128.0,270.000)
call CreateUnit(GT,1747989297,17472.0,19648.0,270.000)
call CreateUnit(GT,1747989044,-7872.0,22784.0,270.000)
call CreateUnit(GT,1747989297,20864.0,21504.0,270.000)
call CreateUnit(GT,1747989044,-9152.0,28480.0,270.000)
call CreateUnit(GT,1747989042,-27712.0,-9536.0,270.000)
call CreateUnit(GT,1747989042,4800.0,-12480.0,270.000)
call CreateUnit(GT,1747989045,7232.0,-11328.0,270.000)
call CreateUnit(GT,1747989045,1792.0,-8064.0,270.000)
call CreateUnit(GT,1747989297,-1600.0,5952.0,270.000)
call CreateUnit(GT,1747989043,-128.0,-1792.0,270.000)
call CreateUnit(GT,1747989042,-3392.0,8640.0,270.000)
call CreateUnit(GT,1747989044,-1856.0,16576.0,270.000)
call CreateUnit(GT,1747989043,-13888.0,14784.0,270.000)
call CreateUnit(GT,1747989297,-29568.0,-9792.0,270.000)
call CreateUnit(GT,1747989043,-9088.0,26240.0,270.000)
call CreateUnit(GT,1747989045,-5440.0,23808.0,270.000)
call CreateUnit(GT,1747989045,2176.0,30080.0,270.000)
call CreateUnit(GT,1747989043,1984.0,6464.0,270.000)
call CreateUnit(GT,1747989297,-26304.0,-1408.0,270.000)
call CreateUnit(GT,1747989043,448.0,13056.0,270.000)
call CreateUnit(GT,1747989045,3072.0,26752.0,270.000)
call CreateUnit(GT,1747989043,6656.0,18880.0,270.000)
call CreateUnit(GT,1747989043,3264.0,-3712.0,270.000)
call CreateUnit(GT,1747989297,15872.0,5760.0,270.000)
call CreateUnit(GT,1747989043,6528.0,22080.0,270.000)
call CreateUnit(GT,1747989044,8896.0,27008.0,270.000)
call CreateUnit(GT,1747989297,18496.0,-17280.0,270.000)
call CreateUnit(GT,1747989297,11392.0,7872.0,270.000)
call CreateUnit(GT,1747989297,12672.0,11328.0,270.000)
call CreateUnit(GT,1747989297,6016.0,12416.0,270.000)
call CreateUnit(GT,1747989297,7104.0,7808.0,270.000)
call CreateUnit(GT,1747989297,20864.0,2688.0,270.000)
call CreateUnit(GT,1747989297,24000.0,2560.0,270.000)
call CreateUnit(GT,1747989297,19648.0,11328.0,270.000)
call CreateUnit(GT,1747989297,11584.0,16960.0,270.000)
call CreateUnit(GT,1747989297,18496.0,-13248.0,270.000)
call CreateUnit(GT,1747989297,17216.0,-11456.0,270.000)
call CreateUnit(GT,1747989297,25088.0,-8320.0,270.000)
call CreateUnit(GT,1747989297,15680.0,-17536.0,270.000)
call CreateUnit(GT,1747989297,16640.0,-14208.0,270.000)
call CreateUnit(GT,1747989297,17280.0,-19584.0,270.000)
call CreateUnit(GT,1747989297,22912.0,-10240.0,270.000)
call CreateUnit(GT,1747989297,20864.0,-23040.0,270.000)
call CreateUnit(GT,1747989044,13120.0,-21696.0,270.000)
call CreateUnit(GT,1747989297,20096.0,-5760.0,270.000)
call CreateUnit(GT,1747989297,18816.0,-3776.0,270.000)
call CreateUnit(GT,1747989042,14464.0,-26432.0,270.000)
call CreateUnit(GT,1747989044,23808.0,-27776.0,270.000)
call CreateUnit(GT,1747989042,11776.0,-18688.0,270.000)
call CreateUnit(GT,1747989043,256.0,-18048.0,270.000)
call CreateUnit(GT,1747989045,-16192.0,-8192.0,270.000)
call CreateUnit(GT,1747989045,-11520.0,-10944.0,270.000)
call CreateUnit(GT,1747989045,16512.0,-19968.0,270.000)
call CreateUnit(GT,1747989045,20416.0,-22272.0,270.000)
call CreateUnit(GT,1747989044,28800.0,-11904.0,270.000)
call CreateUnit(GT,1747989297,15040.0,23104.0,270.000)
call CreateUnit(GT,1747989044,8128.0,12928.0,270.000)
call CreateUnit(GT,1747989044,16896.0,-15744.0,270.000)
call CreateUnit(GT,1747989042,17984.0,-640.0,270.000)
call CreateUnit(GT,1747989045,20608.0,3136.0,270.000)
call CreateUnit(GT,1747989045,7232.0,-5120.0,270.000)
call CreateUnit(GT,1747989045,25984.0,-8128.0,270.000)
call CreateUnit(GT,1747989045,20544.0,-5440.0,270.000)
call CreateUnit(GT,1747989045,11968.0,17856.0,270.000)
call CreateUnit(GT,1747989045,10048.0,20032.0,270.000)
call CreateUnit(GT,1747989043,15296.0,-7232.0,270.000)
call CreateUnit(GT,1747989043,13056.0,11776.0,270.000)
call CreateUnit(GT,1747989043,15744.0,23488.0,270.000)
call CreateUnit(GT,1747989043,17984.0,9280.0,270.000)
set GT=null
endfunction
function CR takes nothing returns nothing
local player LR=Player(12)
local unit XR=CreateUnit(LR,1211118391,-30464.7,30089.7,270.515)
call SetHeroLevel(XR,15,false)
call SetUnitState(XR,UNIT_STATE_MANA,85.)
set XR=CreateUnit(LR,1211118406,-29962.2,29311.8,270.038)
call SetHeroLevel(XR,15,false)
set LR=null
set XR=null
endfunction
function DR takes nothing returns nothing
local player PR=Player(10)
local unit AR=CreateUnit(PR,1211118391,-30338.2,30210.1,270.394)
call SetHeroLevel(AR,15,false)
call SetUnitState(AR,UNIT_STATE_MANA,85.)
set AR=CreateUnit(PR,1211118406,-29904.6,29442.8,269.983)
call SetHeroLevel(AR,15,false)
set PR=null
set AR=null
endfunction
function ER takes nothing returns nothing
local player QR=Player(8)
local unit WR=CreateUnit(QR,1211118391,-29946.0,30342.9,270.023)
call SetHeroLevel(WR,15,false)
call SetUnitState(WR,UNIT_STATE_MANA,85.)
set WR=CreateUnit(QR,1211118406,-30137.9,29561.1,270.206)
call SetHeroLevel(WR,15,false)
set QR=null
set WR=null
endfunction
function IR takes nothing returns nothing
local player ZR=Player(9)
local unit UR=CreateUnit(ZR,1211118391,-29693.5,30338.3,269.785)
call SetHeroLevel(UR,15,false)
call SetUnitState(UR,UNIT_STATE_MANA,85.)
set UR=CreateUnit(ZR,1211118406,-30045.2,29554.8,270.118)
call SetHeroLevel(UR,15,false)
set ZR=null
set UR=null
endfunction
function KR takes nothing returns nothing
local player HR=Player(11)
local unit JR=CreateUnit(HR,1211118391,-29827.0,30210.1,269.911)
call SetHeroLevel(JR,15,false)
call SetUnitState(JR,UNIT_STATE_MANA,85.)
set JR=CreateUnit(HR,1211118406,-30125.9,29321.4,270.196)
call SetHeroLevel(JR,15,false)
set HR=null
set JR=null
endfunction
function NR takes nothing returns nothing
local player VR=Player(13)
local unit BR=CreateUnit(VR,1211118391,-30204.3,30080.3,270.268)
call SetHeroLevel(BR,15,false)
call SetUnitState(BR,UNIT_STATE_MANA,85.)
set BR=CreateUnit(VR,1211118406,-30039.0,29306.5,270.112)
call SetHeroLevel(BR,15,false)
set VR=null
set BR=null
endfunction
function YR takes nothing returns nothing
local player RR=Player(4)
local unit TR=CreateUnit(RR,1211118391,-30204.6,30339.2,270.267)
call SetHeroLevel(TR,15,false)
call SetUnitState(TR,UNIT_STATE_MANA,85.)
set TR=CreateUnit(RR,1211118406,-30106.5,29439.8,270.177)
call SetHeroLevel(TR,15,false)
set RR=null
set TR=null
endfunction
function YT takes nothing returns nothing
local player RT=Player(23)
local unit TT=CreateUnit(RT,1211118391,-29689.5,29824.6,269.779)
call SetHeroLevel(TT,15,false)
call SetUnitState(TT,UNIT_STATE_MANA,85.)
set TT=CreateUnit(RT,1211118406,-29815.4,29434.4,269.898)
call SetHeroLevel(TT,15,false)
set RT=null
set TT=null
endfunction
function aR takes nothing returns nothing
local player eR=Player(2)
local unit qR=CreateUnit(eR,1211118391,-30324.4,30466.1,270.380)
call SetHeroLevel(qR,15,false)
call SetUnitState(qR,UNIT_STATE_MANA,85.)
set qR=CreateUnit(eR,1211118406,-30346.6,29573.7,270.406)
call SetHeroLevel(qR,15,false)
set eR=null
set qR=null
endfunction
function aT takes nothing returns nothing
local player eT=Player(19)
local unit qT=CreateUnit(eT,1211118391,-29820.0,29950.4,269.903)
call SetHeroLevel(qT,15,false)
call SetUnitState(qT,UNIT_STATE_MANA,85.)
set qT=CreateUnit(eT,1211118406,-29707.1,29309.8,269.793)
call SetHeroLevel(qT,15,false)
set eT=null
set qT=null
endfunction
function cT takes nothing returns nothing
local player iT=Player(16)
local unit ST=CreateUnit(iT,1211118391,-30203.1,29826.8,270.268)
call SetHeroLevel(ST,15,false)
call SetUnitState(ST,UNIT_STATE_MANA,85.)
set ST=CreateUnit(iT,1211118406,-29780.4,29300.3,269.864)
call SetHeroLevel(ST,15,false)
set iT=null
set ST=null
endfunction
function fR takes nothing returns nothing
local player nR=Player(3)
local unit dR=CreateUnit(nR,1211118391,-30468.2,30345.3,270.516)
call SetHeroLevel(dR,15,false)
call SetUnitState(dR,UNIT_STATE_MANA,85.)
set dR=CreateUnit(nR,1211118406,-30252.3,29576.9,270.316)
call SetHeroLevel(dR,15,false)
set nR=null
set dR=null
endfunction
function fT takes nothing returns nothing
local player nT=Player(22)
local unit dT=CreateUnit(nT,1211118391,-29948.2,29831.1,270.025)
call SetHeroLevel(dT,15,false)
call SetUnitState(dT,UNIT_STATE_MANA,85.)
set dT=CreateUnit(nT,1211118406,-29699.3,29565.4,269.787)
call SetHeroLevel(dT,15,false)
set nT=null
set dT=null
endfunction
function hR takes nothing returns nothing
local player GR=Player(5)
local unit gR=CreateUnit(GR,1211118391,-29950.2,30589.5,270.027)
call SetHeroLevel(gR,15,false)
call SetUnitState(gR,UNIT_STATE_MANA,85.)
set gR=CreateUnit(GR,1211118406,-30283.9,29308.8,270.348)
call SetHeroLevel(gR,15,false)
set GR=null
set gR=null
endfunction
function jR takes nothing returns nothing
local player FR=Player(6)
local unit kR=CreateUnit(FR,1211118391,-29693.7,30597.0,269.786)
call SetHeroLevel(kR,15,false)
call SetUnitState(kR,UNIT_STATE_MANA,85.)
set kR=CreateUnit(FR,1211118406,-30199.8,29310.0,270.267)
call SetHeroLevel(kR,15,false)
set FR=null
set kR=null
endfunction
function lR takes nothing returns nothing
local player oR=Player(0)
local unit OR=CreateUnit(oR,1211118391,-30470.9,30602.5,270.516)
call SetHeroLevel(OR,15,false)
call SetUnitState(OR,UNIT_STATE_MANA,85.)
set OR=CreateUnit(oR,1211118406,-30360.2,29312.6,270.421)
call SetHeroLevel(OR,15,false)
set oR=null
set OR=null
endfunction
function lT takes nothing returns nothing
local player oT=Player(17)
local unit OT=CreateUnit(oT,1211118391,-29951.6,30084.7,270.028)
call SetHeroLevel(OT,15,false)
call SetUnitState(OT,UNIT_STATE_MANA,85.)
set OT=CreateUnit(oT,1211118406,-29862.1,29302.2,269.942)
call SetHeroLevel(OT,15,false)
set oT=null
set OT=null
endfunction
function mR takes nothing returns nothing
local player xR=Player(7)
local unit vR=CreateUnit(xR,1211118391,-29818.2,30468.8,269.903)
call SetHeroLevel(vR,15,false)
call SetUnitState(vR,UNIT_STATE_MANA,85.)
set vR=CreateUnit(xR,1211118406,-29998.9,29444.3,270.074)
call SetHeroLevel(vR,15,false)
set xR=null
set vR=null
endfunction
function pR takes nothing returns nothing
local player bR=Player(1)
local unit yR=CreateUnit(bR,1211118391,-30205.9,30601.1,270.267)
call SetHeroLevel(yR,15,false)
call SetUnitState(yR,UNIT_STATE_MANA,85.)
set yR=CreateUnit(bR,1211118406,-30199.1,29448.7,270.266)
call SetHeroLevel(yR,15,false)
set bR=null
set yR=null
endfunction
function pT takes nothing returns nothing
local player bT=Player(18)
local unit yT=CreateUnit(bT,1211118391,-29691.7,30077.9,269.782)
call SetHeroLevel(yT,15,false)
call SetUnitState(yT,UNIT_STATE_MANA,85.)
set yT=CreateUnit(bT,1211118406,-29792.0,29571.7,269.875)
call SetHeroLevel(yT,15,false)
set bT=null
set yT=null
endfunction
function tT takes nothing returns nothing
local player rT=Player(15)
local unit sT=CreateUnit(rT,1211118391,-30467.2,29834.7,270.519)
call SetHeroLevel(sT,15,false)
call SetUnitState(sT,UNIT_STATE_MANA,85.)
set sT=CreateUnit(rT,1211118406,-29874.4,29559.4,269.954)
call SetHeroLevel(sT,15,false)
set rT=null
set sT=null
endfunction
function uT takes nothing returns nothing
local player MR=Player(14)
local unit wT=CreateUnit(MR,1211118391,-30339.8,29950.4,270.397)
call SetHeroLevel(wT,15,false)
call SetUnitState(wT,UNIT_STATE_MANA,85.)
set wT=CreateUnit(MR,1211118406,-29968.7,29556.2,270.045)
call SetHeroLevel(wT,15,false)
set MR=null
set wT=null
endfunction
function hT takes nothing returns nothing
call lR()
call pR()
call aR()
call fR()
call YR()
call hR()
call jR()
call mR()
call ER()
call IR()
call DR()
call KR()
call CR()
call NR()
call uT()
call tT()
call cT()
call lT()
call pT()
call aT()
call fT()
call YT()
endfunction
function PA takes nothing returns boolean
if GetResearched()!=1378890051 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890051,true)!=2 then
return false
endif
return true
endfunction
function AA takes nothing returns boolean
if not PA() then
return false
endif
return true
endfunction
function AG takes nothing returns nothing
set t=GetUnitLoc(GetSpellTargetUnit())
set bj_lastCreatedEffect=AddSpecialEffectLoc("Abilities\\Spells\\Orc\\Voodoo\\VoodooAuraTarget.mdl",t)
call DestroyEffect(bj_lastCreatedEffect)
set i=GetUnitLoc(GetSpellAbilityUnit())
set bj_lastCreatedEffect=AddSpecialEffectLoc("Abilities\\Spells\\Orc\\Voodoo\\VoodooAura.mdl",i)
call DestroyEffect(bj_lastCreatedEffect)
call RemoveLocation(t)
call RemoveLocation(i)
endfunction
function PJ takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())==1747988531 then
return true
endif
if GetUnitTypeId(GetTriggerUnit())==1747990328 then
return true
endif
if GetUnitTypeId(GetTriggerUnit())==1747989592 then
return true
endif
if GetUnitTypeId(GetTriggerUnit())==1747990086 then
return true
endif
return false
endfunction
function AJ takes nothing returns boolean
if not PJ() then
return false
endif
return true
endfunction
function AU takes nothing returns nothing
set s=bj_FORCE_ALL_PLAYERS
call ForForce(s,pq)
endfunction
function AY takes nothing returns nothing
local player EY=GetOwningPlayer(GetAttacker())
local player ZY=GetOwningPlayer(GetAttacker())
local player UY
local player IY
local unit PY
set r[GetPlayerId(EY)+1]=r[GetPlayerId(ZY)+1]+1
set UY=GetOwningPlayer(GetTriggerUnit())
set IY=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(UY)+1]=r[GetPlayerId(IY)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set PY=GetTriggerUnit()
call SetUnitState(PY,UNIT_STATE_LIFE,GetUnitState(PY,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set EY=null
set ZY=null
set UY=null
set IY=null
set PY=null
endfunction
function eow takes integer pow returns string
if pow==0 then
return "|cffADADADtrace|r"
elseif pow==1 then
return "|cff2685DCdebug|r"
elseif pow==2 then
return "|cffFFCC00info|r"
elseif pow==3 then
return "|cffF47E3Ewarning|r"
elseif pow==4 then
return "|cffFB2700error|r"
endif
return "?"
endfunction
function K8 takes string W8,string E8 returns nothing
local integer Z8
local string U8
local integer I8
local integer P8
local integer A8
local integer D8
local string H8
local string J8
set Ub[Zb]=E8
set Zb=Zb+1
set Z8=StringHash(W8)
if HaveSavedInteger(Nc,-1,Z8) then
if LoadInteger(Nc,-1,Z8)+60<Oo then
set H8=W8
set U8=""
set I8=Zb
set P8=0
loop
set I8=I8-1
set P8=P8+1
exitwhen P8>20 or I8<0
set U8=U8+"\n   "+Ub[I8]
endloop
call DisplayTimedTextToPlayer(YO,0.,0.,45.,eow(4)+" - "+H8+U8)
call SaveInteger(Nc,-1,Z8,R2I(Oo))
call SaveBoolean(Nc,-1,Z8,false)
elseif HaveSavedBoolean(Nc,-1,Z8) then
if not LoadBoolean(Nc,-1,Z8) then
call DisplayTimedTextToPlayer(YO,0.,0.,45.,eow(4)+" - "+"|cffFF3A29Excessive repeating errors are being omitted")
call SaveBoolean(Nc,-1,Z8,true)
endif
else
call DisplayTimedTextToPlayer(YO,0.,0.,45.,eow(4)+" - "+"|cffFF3A29Excessive repeating errors are being omitted")
call SaveBoolean(Nc,-1,Z8,true)
endif
else
call SaveInteger(Nc,-1,Z8,R2I(Oo))
set J8="Message: "+W8
set E8=""
set A8=Zb
set D8=0
loop
set A8=A8-1
set D8=D8+1
exitwhen D8>20 or A8<0
set E8=E8+"\n   "+Ub[A8]
endloop
call DisplayTimedTextToPlayer(YO,0.,0.,45.,eow(4)+" - "+J8+E8)
endif
call I2S(1/0)
set Zb=Zb-1
endfunction
function Bqw takes integer Lqw,integer Xqw,string Cqw returns integer
local integer Vqw
set Ub[Zb]=Cqw
set Zb=Zb+1
if lb[Lqw]==0 then
if Lqw==0 then
call K8("Nullpointer exception when calling HashMap.get","when calling error in HashMap, line 19")
else
call K8("Called HashMap.get on invalid object.","when calling error in HashMap, line 19")
endif
endif
set Ub[Zb]="when calling get in HashMap, line 19"
set Zb=Zb+1
set Ub[Zb]="when calling loadInt in HashMap, line 20"
set Zb=Zb+1
if lb[Lqw]==0 then
if Lqw==0 then
call K8("Nullpointer exception when calling Table.loadInt","when calling error in Table, line 39")
else
call K8("Called Table.loadInt on invalid object.","when calling error in Table, line 39")
endif
endif
set Vqw=LoadInteger(sl,Lqw,Xqw)
set Zb=Zb-1-1-1
return Vqw
endfunction
function t9 takes integer M8,integer w9,string u9 returns nothing
local hashtable r9
local integer s9
set Ub[Zb]=u9
set Zb=Zb+1
set r9=yo
set Ub[Zb]="when calling count in HashList, line 19"
set Zb=Zb+1
if Sb[M8]==0 then
if M8==0 then
call K8("Nullpointer exception when calling HashList.count","when calling error in HashList, line 15")
else
call K8("Called HashList.count on invalid object.","when calling error in HashList, line 15")
endif
endif
set s9=LoadInteger(yo,M8,w9)
set Zb=Zb-1
call SaveInteger(r9,M8,w9,s9+1)
set Zb=Zb-1
set r9=null
endfunction
function Iaw takes integer Eaw,integer Zaw,string Uaw returns nothing
set Ub[Zb]=Uaw
set Zb=Zb+1
call SaveInteger(bo,Eaw,po[Eaw],Zaw)
set Ub[Zb]="when calling incrOccurences in HashList, line 28"
set Zb=Zb+1
if Sb[Eaw]==0 then
if Eaw==0 then
call K8("Nullpointer exception when calling HashList.incrOccurences","when calling error in HashList, line 18")
else
call K8("Called HashList.incrOccurences on invalid object.","when calling error in HashList, line 18")
endif
endif
call t9(Eaw,Zaw,"when calling incrOccurences in HashList, line 18")
set Zb=Zb-1
set po[Eaw]=po[Eaw]+1
set Zb=Zb-1
endfunction
function Law takes integer Paw,integer Aaw,string Daw returns nothing
local integer Haw
local hashtable Jaw
local integer Kaw
set Ub[Zb]=Daw
set Zb=Zb+1
set Ub[Zb]="when calling count in HashSet, line 11"
set Zb=Zb+1
if Sb[Paw]==0 then
if Paw==0 then
call K8("Nullpointer exception when calling HashList.count","when calling error in HashList, line 15")
else
call K8("Called HashList.count on invalid object.","when calling error in HashList, line 15")
endif
endif
set Haw=LoadInteger(yo,Paw,Aaw)
set Zb=Zb-1
if Haw<=0 then
set Jaw=qo
set Ub[Zb]="when calling size in HashSet, line 12"
set Zb=Zb+1
if Sb[Paw]==0 then
if Paw==0 then
call K8("Nullpointer exception when calling HashList.size","when calling error in HashList, line 67")
else
call K8("Called HashList.size on invalid object.","when calling error in HashList, line 67")
endif
endif
set Kaw=po[Paw]
set Zb=Zb-1
call SaveInteger(Jaw,Paw,Aaw,Kaw)
call Iaw(Paw,Aaw,"when calling add in HashSet, line 13")
endif
set Zb=Zb-1
set Jaw=null
endfunction
function Baw takes integer Xaw,integer Caw,string Vaw returns nothing
set Ub[Zb]=Vaw
set Zb=Zb+1
if Sb[Xaw]==0 then
if Xaw==0 then
call K8("Nullpointer exception when calling HashList.add","when calling error in HashList, line 25")
else
call K8("Called HashList.add on invalid object.","when calling error in HashList, line 25")
endif
endif
if Sb[Xaw]<=690 then
call Iaw(Xaw,Caw,"when calling add in HashList, line 25")
else
call Law(Xaw,Caw,"when calling add in HashList, line 25")
endif
set Zb=Zb-1
endfunction
function Wqw takes integer xqw,integer vqw,string mqw returns boolean
local integer Qqw
set Ub[Zb]=mqw
set Zb=Zb+1
if Sb[xqw]==0 then
if xqw==0 then
call K8("Nullpointer exception when calling HashList.has","when calling error in HashList, line 87")
else
call K8("Called HashList.has on invalid object.","when calling error in HashList, line 87")
endif
endif
set Ub[Zb]="when calling has in HashList, line 87"
set Zb=Zb+1
set Ub[Zb]="when calling count in HashList, line 88"
set Zb=Zb+1
if Sb[xqw]==0 then
if xqw==0 then
call K8("Nullpointer exception when calling HashList.count","when calling error in HashList, line 15")
else
call K8("Called HashList.count on invalid object.","when calling error in HashList, line 15")
endif
endif
set Qqw=LoadInteger(yo,xqw,vqw)
set Zb=Zb-1
set Zb=Zb-1-1
return Qqw>0
endfunction
function F9 takes integer T9,integer Y9,integer G9,string g9 returns nothing
local boolean h9
set Ub[Zb]=g9
set Zb=Zb+1
set Ub[Zb]="when calling put in HashMap, line 48"
set Zb=Zb+1
set Ub[Zb]="when calling saveInt in HashMap, line 16"
set Zb=Zb+1
if lb[T9]==0 then
if T9==0 then
call K8("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call K8("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(sl,T9,Y9,G9)
set Zb=Zb-1-1
set Ub[Zb]="when calling hasKey in HashMap, line 49"
set Zb=Zb+1
if lb[T9]==0 then
if T9==0 then
call K8("Nullpointer exception when calling IterableMap.hasKey","when calling error in HashMap, line 75")
else
call K8("Called IterableMap.hasKey on invalid object.","when calling error in HashMap, line 75")
endif
endif
set Ub[Zb]="when calling hasKey in HashMap, line 75"
set Zb=Zb+1
set h9=Wqw(eo[T9],Y9,"when calling has in HashMap, line 76")
set Zb=Zb-1-1
if not h9 then
call Baw(eo[T9],Y9,"when calling add in HashMap, line 50")
endif
set Zb=Zb-1
endfunction
function Kqw takes integer Aqw,integer Dqw,integer Hqw,string Jqw returns nothing
set Ub[Zb]=Jqw
set Zb=Zb+1
if lb[Aqw]==0 then
if Aqw==0 then
call K8("Nullpointer exception when calling HashMap.put","when calling error in HashMap, line 15")
else
call K8("Called HashMap.put on invalid object.","when calling error in HashMap, line 15")
endif
endif
if lb[Aqw]<=726 then
set Ub[Zb]="when calling put in HashMap, line 15"
set Zb=Zb+1
set Ub[Zb]="when calling saveInt in HashMap, line 16"
set Zb=Zb+1
if lb[Aqw]==0 then
if Aqw==0 then
call K8("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call K8("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(sl,Aqw,Dqw,Hqw)
set Zb=Zb-1-1
else
call F9(Aqw,Dqw,Hqw,"when calling put in HashMap, line 15")
endif
set Zb=Zb-1
endfunction
function b4 takes integer O4,string l4 returns nothing
set Ub[Zb]=l4
set Zb=Zb+1
if Fc[O4]!=null then
if Bqw(nc,GetHandleId(Fc[O4]),"when calling get in ClosureEvents, line 60")==O4 then
call Kqw(nc,GetHandleId(Fc[O4]),Gc[O4],"when calling put in ClosureEvents, line 62")
elseif gc[O4]!=0 then
set Gc[gc[O4]]=Gc[O4]
endif
elseif Bqw(ac,hc[O4],"when calling get in ClosureEvents, line 66")==O4 then
call Kqw(ac,hc[O4],Gc[O4],"when calling put in ClosureEvents, line 68")
elseif gc[O4]!=0 then
set Gc[gc[O4]]=Gc[O4]
endif
set gc[Gc[O4]]=gc[O4]
set Gc[O4]=0
set gc[O4]=0
set Zb=Zb-1
endfunction
function Iew takes integer Zew,string Uew returns nothing
set Ub[Zb]=Uew
set Zb=Zb+1
if Nl[Zew]==0 then
if Zew==0 then
call K8("Nullpointer exception when calling OnCastListener.OnCastListener","when calling error in ClosureEvents, line 50")
else
call K8("Called OnCastListener.OnCastListener on invalid object.","when calling error in ClosureEvents, line 50")
endif
endif
set Ub[Zb]="when calling destroyOnCastListener in ClosureEvents, line 50"
set Zb=Zb+1
call b4(Zew,"when calling OnCastListener_onDestroy in ClosureEvents, line 58")
set Ub[Zb]="when calling OnCastListener in ClosureEvents, line 58"
set Zb=Zb+1
if Nl[Zew]==0 then
call K8("Double free: object of type OnCastListener","when calling error in ClosureEvents, line 50")
else
set Bl=Bl+1
set Nl[Zew]=0
endif
set Zb=Zb-1-1-1
endfunction
function Pqw takes integer Eqw,integer Zqw,string Uqw returns boolean
local boolean Iqw
set Ub[Zb]=Uqw
set Zb=Zb+1
if lb[Eqw]==0 then
if Eqw==0 then
call K8("Nullpointer exception when calling HashMap.has","when calling error in HashMap, line 11")
else
call K8("Called HashMap.has on invalid object.","when calling error in HashMap, line 11")
endif
endif
set Ub[Zb]="when calling has in HashMap, line 11"
set Zb=Zb+1
set Ub[Zb]="when calling hasInt in HashMap, line 12"
set Zb=Zb+1
if lb[Eqw]==0 then
if Eqw==0 then
call K8("Nullpointer exception when calling Table.hasInt","when calling error in Table, line 9")
else
call K8("Called Table.hasInt on invalid object.","when calling error in Table, line 9")
endif
endif
set Iqw=HaveSavedInteger(sl,Eqw,Zqw)
set Zb=Zb-1-1-1
return Iqw
endfunction
function o4 takes integer i4,string S4 returns nothing
local integer c4
set Ub[Zb]=S4
set Zb=Zb+1
set c4=dc[Rc[i4]]
if c4==i4 then
set dc[Rc[i4]]=Tc[i4]
elseif Yc[i4]!=0 then
set Tc[Yc[i4]]=Tc[i4]
endif
set Yc[Tc[i4]]=Yc[i4]
set c4=fc[Rc[i4]]
if c4==i4 then
set fc[Rc[i4]]=Tc[i4]
elseif Yc[i4]!=0 then
set Tc[Yc[i4]]=Tc[i4]
endif
set Yc[Tc[i4]]=Yc[i4]
set Tc[i4]=0
set Yc[i4]=0
set Ub[Zb]="when calling EventListener in ClosureEvents, line 201"
set Zb=Zb+1
if jl[i4]==0 then
call K8("Double free: object of type EventListener","when calling error in ClosureEvents, line 98")
else
set hl[Fl]=i4
set Fl=Fl+1
set jl[i4]=0
endif
set Zb=Zb-1-1
endfunction
function Z1 takes integer m1,string Q1 returns nothing
local integer W1
local integer E1
set Ub[Zb]=Q1
set Zb=Zb+1
if m1>0 then
if fc[m1]!=0 then
set W1=fc[m1]
set fc[m1]=0
loop
exitwhen W1==0
set E1=W1
set W1=Tc[W1]
set Ub[Zb]="when calling EventListener in ClosureEvents, line 275"
set Zb=Zb+1
if jl[E1]==0 then
if E1==0 then
call K8("Nullpointer exception when calling EventListener.EventListener","when calling error in ClosureEvents, line 98")
else
call K8("Called EventListener.EventListener on invalid object.","when calling error in ClosureEvents, line 98")
endif
endif
call o4(E1,"when calling destroyEventListener in ClosureEvents, line 98")
set Zb=Zb-1
endloop
endif
endif
set Zb=Zb-1
endfunction
function l9 takes integer i9,integer S9,string c9 returns nothing
local hashtable o9
local integer O9
set Ub[Zb]=c9
set Zb=Zb+1
set o9=yo
set Ub[Zb]="when calling count in HashList, line 22"
set Zb=Zb+1
if Sb[i9]==0 then
if i9==0 then
call K8("Nullpointer exception when calling HashList.count","when calling error in HashList, line 15")
else
call K8("Called HashList.count on invalid object.","when calling error in HashList, line 15")
endif
endif
set O9=LoadInteger(yo,i9,S9)
set Zb=Zb-1
call SaveInteger(o9,i9,S9,O9-1)
set Zb=Zb-1
set o9=null
endfunction
function n9 takes integer b9,integer y9,string p9 returns nothing
local integer e9
local integer q9
local integer a9
set Ub[Zb]=p9
set Zb=Zb+1
set a9=LoadInteger(bo,b9,y9)
set Ub[Zb]="when calling decrOccurences in HashList, line 54"
set Zb=Zb+1
if Sb[b9]==0 then
if b9==0 then
call K8("Nullpointer exception when calling HashList.decrOccurences","when calling error in HashList, line 21")
else
call K8("Called HashList.decrOccurences on invalid object.","when calling error in HashList, line 21")
endif
endif
call l9(b9,a9,"when calling decrOccurences in HashList, line 21")
set Zb=Zb-1
set e9=y9
set q9=po[b9]
loop
exitwhen e9>q9
call SaveInteger(bo,b9,e9,LoadInteger(bo,b9,e9+1))
set e9=e9+1
endloop
set po[b9]=po[b9]-1
set Zb=Zb-1
endfunction
function X9 takes integer W9,integer E9,string Z9 returns nothing
local integer U9
local integer I9
local hashtable P9
local integer A9
local integer D9
local hashtable H9
local integer J9
local hashtable K9
local integer L9
set Ub[Zb]=Z9
set Zb=Zb+1
set P9=qo
set Ub[Zb]="when calling get in HashSet, line 22"
set Zb=Zb+1
if Sb[W9]==0 then
if W9==0 then
call K8("Nullpointer exception when calling HashList.get","when calling error in HashList, line 79")
else
call K8("Called HashList.get on invalid object.","when calling error in HashList, line 79")
endif
endif
set A9=LoadInteger(bo,W9,E9)
set Zb=Zb-1
call RemoveSavedInteger(P9,W9,A9)
set U9=E9+1
set Ub[Zb]="when calling size in HashSet, line 23"
set Zb=Zb+1
if Sb[W9]==0 then
if W9==0 then
call K8("Nullpointer exception when calling HashList.size","when calling error in HashList, line 67")
else
call K8("Called HashList.size on invalid object.","when calling error in HashList, line 67")
endif
endif
set D9=po[W9]
set Zb=Zb-1
set I9=D9
loop
exitwhen U9>I9
set H9=qo
set Ub[Zb]="when calling get in HashSet, line 24"
set Zb=Zb+1
if Sb[W9]==0 then
if W9==0 then
call K8("Nullpointer exception when calling HashList.get","when calling error in HashList, line 79")
else
call K8("Called HashList.get on invalid object.","when calling error in HashList, line 79")
endif
endif
set J9=LoadInteger(bo,W9,U9)
set Zb=Zb-1
set K9=qo
set Ub[Zb]="when calling get in HashSet, line 24"
set Zb=Zb+1
if Sb[W9]==0 then
if W9==0 then
call K8("Nullpointer exception when calling HashList.get","when calling error in HashList, line 79")
else
call K8("Called HashList.get on invalid object.","when calling error in HashList, line 79")
endif
endif
set L9=LoadInteger(bo,W9,U9)
set Zb=Zb-1
call SaveInteger(H9,W9,J9,LoadInteger(K9,W9,L9)-1)
set U9=U9+1
endloop
call n9(W9,E9,"when calling removeAt in HashSet, line 25")
set Zb=Zb-1
set P9=null
set H9=null
set K9=null
endfunction
function Rqw takes integer nqw,integer dqw,string fqw returns nothing
set Ub[Zb]=fqw
set Zb=Zb+1
if Sb[nqw]==0 then
if nqw==0 then
call K8("Nullpointer exception when calling HashList.removeAt","when calling error in HashList, line 53")
else
call K8("Called HashList.removeAt on invalid object.","when calling error in HashList, line 53")
endif
endif
if Sb[nqw]<=690 then
call n9(nqw,dqw,"when calling removeAt in HashList, line 53")
else
call X9(nqw,dqw,"when calling removeAt in HashList, line 53")
endif
set Zb=Zb-1
endfunction
function w0w takes integer C9,integer V9,string B9 returns nothing
local integer N9
local integer M9
set Ub[Zb]=B9
set Zb=Zb+1
set Ub[Zb]="when calling count in HashSet, line 17"
set Zb=Zb+1
if Sb[C9]==0 then
if C9==0 then
call K8("Nullpointer exception when calling HashList.count","when calling error in HashList, line 15")
else
call K8("Called HashList.count on invalid object.","when calling error in HashList, line 15")
endif
endif
set N9=LoadInteger(yo,C9,V9)
set Zb=Zb-1
if N9>0 then
set M9=LoadInteger(qo,C9,V9)
set Ub[Zb]="when calling removeAt in HashSet, line 18"
set Zb=Zb+1
if Sb[C9]==0 then
if C9==0 then
call K8("Nullpointer exception when calling HashSet.removeAt","when calling error in HashSet, line 21")
else
call K8("Called HashSet.removeAt on invalid object.","when calling error in HashSet, line 21")
endif
endif
call X9(C9,M9,"when calling removeAt in HashSet, line 21")
set Zb=Zb-1
endif
set Zb=Zb-1
endfunction
function jqw takes integer Tqw,integer Yqw,string Gqw returns nothing
local integer gqw
local integer hqw
local integer Fqw
local integer kqw
set Ub[Zb]=Gqw
set Zb=Zb+1
if Sb[Tqw]==0 then
if Tqw==0 then
call K8("Nullpointer exception when calling HashList.remove","when calling error in HashList, line 60")
else
call K8("Called HashList.remove on invalid object.","when calling error in HashList, line 60")
endif
endif
if Sb[Tqw]<=690 then
set gqw=Tqw
set hqw=Yqw
set Ub[Zb]="when calling remove in HashList, line 60"
set Zb=Zb+1
set Fqw=0
set kqw=po[Tqw]-1
loop
exitwhen Fqw>kqw
if hqw==LoadInteger(bo,gqw,Fqw) then
call Rqw(gqw,Fqw,"when calling removeAt in HashList, line 63")
exitwhen true
endif
set Fqw=Fqw+1
endloop
set Zb=Zb-1
else
call w0w(Tqw,Yqw,"when calling remove in HashList, line 60")
endif
set Zb=Zb-1
endfunction
function m9 takes integer k9,integer j9,string x9 returns nothing
local boolean v9
set Ub[Zb]=x9
set Zb=Zb+1
set Ub[Zb]="when calling remove in HashMap, line 54"
set Zb=Zb+1
set Ub[Zb]="when calling removeInt in HashMap, line 24"
set Zb=Zb+1
if lb[k9]==0 then
if k9==0 then
call K8("Nullpointer exception when calling Table.removeInt","when calling error in Table, line 24")
else
call K8("Called Table.removeInt on invalid object.","when calling error in Table, line 24")
endif
endif
call RemoveSavedInteger(sl,k9,j9)
set Zb=Zb-1-1
set Ub[Zb]="when calling hasKey in HashMap, line 55"
set Zb=Zb+1
if lb[k9]==0 then
if k9==0 then
call K8("Nullpointer exception when calling IterableMap.hasKey","when calling error in HashMap, line 75")
else
call K8("Called IterableMap.hasKey on invalid object.","when calling error in HashMap, line 75")
endif
endif
set Ub[Zb]="when calling hasKey in HashMap, line 75"
set Zb=Zb+1
set v9=Wqw(eo[k9],j9,"when calling has in HashMap, line 76")
set Zb=Zb-1-1
if v9 then
call jqw(eo[k9],j9,"when calling remove in HashMap, line 56")
endif
set Zb=Zb-1
endfunction
function uaw takes integer Nqw,integer Mqw,string waw returns nothing
set Ub[Zb]=waw
set Zb=Zb+1
if lb[Nqw]==0 then
if Nqw==0 then
call K8("Nullpointer exception when calling HashMap.remove","when calling error in HashMap, line 23")
else
call K8("Called HashMap.remove on invalid object.","when calling error in HashMap, line 23")
endif
endif
if lb[Nqw]<=726 then
set Ub[Zb]="when calling remove in HashMap, line 23"
set Zb=Zb+1
set Ub[Zb]="when calling removeInt in HashMap, line 24"
set Zb=Zb+1
if lb[Nqw]==0 then
if Nqw==0 then
call K8("Nullpointer exception when calling Table.removeInt","when calling error in Table, line 24")
else
call K8("Called Table.removeInt on invalid object.","when calling error in Table, line 24")
endif
endif
call RemoveSavedInteger(sl,Nqw,Mqw)
set Zb=Zb-1-1
else
call m9(Nqw,Mqw,"when calling remove in HashMap, line 23")
endif
set Zb=Zb-1
endfunction
function v1 takes unit g1,string h1 returns nothing
local integer F1
local integer k1
local integer j1
local integer x1
set Ub[Zb]=h1
set Zb=Zb+1
call Z1(GetUnitUserData(g1),"when calling unregisterEvents in ClosureEvents, line 251")
if Pqw(nc,GetHandleId(g1),"when calling has in ClosureEvents, line 252") then
set F1=Bqw(nc,GetHandleId(g1),"when calling get in ClosureEvents, line 253")
call uaw(nc,GetHandleId(g1),"when calling remove in ClosureEvents, line 254")
loop
exitwhen F1==0
set k1=F1
set F1=Gc[F1]
call Iew(k1,"when calling OnCastListener in ClosureEvents, line 258")
endloop
endif
if Pqw(nc,GetHandleId(g1),"when calling has in ClosureEvents, line 259") then
set j1=Bqw(nc,GetHandleId(g1),"when calling get in ClosureEvents, line 260")
loop
exitwhen j1==0
set x1=j1
set j1=Gc[j1]
call Iew(x1,"when calling OnCastListener in ClosureEvents, line 264")
endloop
endif
set Zb=Zb-1
endfunction
function Afw takes nothing returns nothing
set Zb=0
set Ub[Zb]="ClosureEvents, line 283"
set Zb=Zb+1
call v1(bl,"when calling unregisterEventsForUnit in ClosureEvents, line 283")
set Zb=Zb-1
endfunction
function Ik takes nothing returns boolean
if GetUnitTypeId(GetSpellTargetUnit())==1747988787 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747990361 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747989831 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747989040 then
return true
endif
return false
endfunction
function Pk takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988801 then
return false
endif
if not Ik() then
return false
endif
return true
endfunction
function Ak takes nothing returns boolean
if not Pk() then
return false
endif
return true
endfunction
function Pm takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function Am takes nothing returns boolean
if not Pm() then
return false
endif
return true
endfunction
function B8 takes nothing returns nothing
call GroupAddUnit(lo,GetEnumUnit())
endfunction
function BF takes nothing returns nothing
local location AF
local location DF
local real HF
local real JF
local rect KF
local group LF
local group XF
local code CF
local boolean VF
set u=GetUnitLoc(GetSpellAbilityUnit())
set AF=u
set S=Location(GetLocationX(AF)+0.00,GetLocationY(AF)+200.00)
set DF=u
set HF=GetLocationX(DF)
set JF=GetLocationY(DF)
set o=Rect(HF-140,JF-150,HF+140,JF+150)
set KF=o
set LF=CreateGroup()
call GroupEnumUnitsInRect(LF,KF,null)
call DestroyBoolExpr(null)
set l=LF
set XF=l
set CF=op
set VF=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(XF,CF)
if VF then
call DestroyGroup(XF)
endif
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747990072,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"stand")
call DestroyGroup(l)
call RemoveLocation(S)
call RemoveLocation(u)
set AF=null
set DF=null
set KF=null
set LF=null
set XF=null
endfunction
function BI takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989833,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989834,0)
endfunction
function VP takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function BP takes nothing returns boolean
if not VP() then
return false
endif
return true
endfunction
function BSw takes nothing returns nothing
local unit VSw=GetTriggerUnit()
if GetUnitAbilityLevel(VSw,1095577649)==0 then
set pO[eO]=VSw
set eO=eO+1
call TriggerExecute(bO)
set eO=eO-1
endif
set VSw=null
endfunction
function VT takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989317 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function BT takes nothing returns boolean
if not VT() then
return false
endif
return true
endfunction
function VZ takes nothing returns boolean
if GetResearched()!=1378889809 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889809,true)!=2 then
return false
endif
return true
endfunction
function BZ takes nothing returns boolean
if not VZ() then
return false
endif
return true
endfunction
function B0w takes string V0w returns boolean
set Ub[Zb]=V0w
set Zb=Zb+1
set Ub[Zb]="when calling alloc_Closure in LinkedList, line 504"
set Zb=Zb+1
if bb==0 then
if yb<32768 then
set yb=yb+1
else
call K8("Out of memory: Could not create Closure.","when calling error in LinkedList, line 504")
endif
else
set bb=bb-1
endif
set Zb=Zb-1
set Ub[Zb]="when calling alloc_Closure in LinkedList, line 508"
set Zb=Zb+1
if bb==0 then
if yb<32768 then
set yb=yb+1
else
call K8("Out of memory: Could not create Closure.","when calling error in LinkedList, line 508")
endif
else
set bb=bb-1
endif
set Zb=Zb-1-1
return true
endfunction
function Bdw takes nothing returns boolean
set Zb=0
return B0w("LinkedList, line 1")
endfunction
function Auw takes player Euw,string Zuw returns string
local integer Uuw
local integer Iuw
local integer Puw
set Ub[Zb]=Zuw
set Zb=Zb+1
set Iuw=qO[GetPlayerId(Euw)]
set Ub[Zb]="when calling getForceId in Messages, line 21"
set Zb=Zb+1
if vb[Iuw]==0 then
if Iuw==0 then
call K8("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 94")
else
call K8("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 94")
endif
endif
set Puw=aO[Iuw]
set Zb=Zb-1
set Uuw=GetRandomInt(0,2)
if Puw==0 then
set Zuw=HO[Uuw]
elseif Puw==1 then
set Zuw=JO[Uuw]
elseif Puw==2 then
set Zuw=KO[Uuw]
elseif Puw==3 then
set Zuw=LO[Uuw]
else
set Zuw="Note:"
endif
set Zb=Zb-1
return "|cff00ccff"+Zuw+"|r"
endfunction
function sww takes integer N0w,integer M0w,integer www,string uww returns integer
local integer rww
set Ub[Zb]=uww
set Zb=Zb+1
set Ub[Zb]="when calling LLEntry in LinkedList, line 401"
set Zb=Zb+1
if eb==0 then
if qb<32768 then
set qb=qb+1
set rww=qb
set ab[rww]=697
else
call K8("Out of memory: Could not create LLEntry.","when calling error in LinkedList, line 396")
set rww=0
endif
else
set eb=eb-1
set rww=pb[eb]
set ab[rww]=697
endif
set Zb=Zb-1
set To[rww]=N0w
set Yo[rww]=M0w
set Go[rww]=www
set Zb=Zb-1
return rww
endfunction
function Waw takes integer xaw,integer vaw,string maw returns nothing
local integer Qaw
set Ub[Zb]=maw
set Zb=Zb+1
if gb[xaw]==0 then
if xaw==0 then
call K8("Nullpointer exception when calling LinkedList.add","when calling error in LinkedList, line 37")
else
call K8("Called LinkedList.add on invalid object.","when calling error in LinkedList, line 37")
endif
endif
set Ub[Zb]="when calling add in LinkedList, line 37"
set Zb=Zb+1
set Qaw=sww(vaw,Yo[jo[xaw]],jo[xaw],"when calling new_LLEntry in LinkedList, line 39")
set Go[Yo[jo[xaw]]]=Qaw
set Yo[jo[xaw]]=Qaw
set xo[xaw]=xo[xaw]+1
set Zb=Zb-1-1
endfunction
function aww takes integer pww,integer eww returns boolean
local integer qww=Go[jo[pww]]
loop
exitwhen qww==jo[pww]
if To[qww]==eww then
return true
endif
set qww=Go[qww]
endloop
return false
endfunction
function kew takes integer gew,integer hew,string Few returns nothing
set Ub[Zb]=Few
set Zb=Zb+1
if Zl[gew]==0 then
if gew==0 then
call K8("Nullpointer exception when calling City.getCityModifierOnAdd","when calling error in City, line 406")
else
call K8("Called City.getCityModifierOnAdd on invalid object.","when calling error in City, line 406")
endif
endif
set Ub[Zb]="when calling getCityModifierOnAdd in City, line 406"
set Zb=Zb+1
set sc[gew]=sc[gew]+YS[Bqw(RS,hew,"when calling get in City, line 407")]
set tc[gew]=tc[gew]+kS[Bqw(RS,hew,"when calling get in City, line 408")]
set Zb=Zb-1-1
endfunction
function Qlw takes timer klw,integer jlw,string xlw returns nothing
local integer vlw
local integer mlw
set Ub[Zb]=xlw
set Zb=Zb+1
set vlw=Sl
set mlw=GetHandleId(klw)
set Ub[Zb]="when calling saveInt in TimerUtils, line 17"
set Zb=Zb+1
if lb[vlw]==0 then
if vlw==0 then
call K8("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call K8("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(sl,vlw,mlw,jlw)
set Zb=Zb-1-1
endfunction
function Hlw takes string Alw returns timer
local timer Dlw
set Ub[Zb]=Alw
set Zb=Zb+1
if il>0 then
set il=il-1
call Qlw(tl[il],0,"when calling setData in TimerUtils, line 29")
set Zb=Zb-1
set Dlw=null
return tl[il]
else
set Dlw=CreateTimer()
call Qlw(Dlw,0,"when calling setData in TimerUtils, line 32")
set Zb=Zb-1
set uR=Dlw
set Dlw=null
return uR
endif
endfunction
function A4 takes integer Z4,real U4,string I4 returns nothing
local timer P4
set Ub[Zb]=I4
set Zb=Zb+1
set P4=Hlw("when calling getTimer in ClosureTimers, line 68")
call Qlw(P4,Z4,"when calling setData in ClosureTimers, line 69")
call TimerStart(P4,U4,false,Ef)
set Wc[Z4]=P4
set Zb=Zb-1
set P4=null
endfunction
function yqw takes integer Oqw,real lqw,string bqw returns nothing
set Ub[Zb]=bqw
set Zb=Zb+1
if Kl[Oqw]==0 then
if Oqw==0 then
call K8("Nullpointer exception when calling CallbackSingle.start","when calling error in ClosureTimers, line 67")
else
call K8("Called CallbackSingle.start on invalid object.","when calling error in ClosureTimers, line 67")
endif
endif
call A4(Oqw,lqw,"when calling start in ClosureTimers, line 67")
set Zb=Zb-1
endfunction
function GN takes integer aN,integer nN,string dN returns boolean
local real fN
local integer RN
local boolean TN
local integer YN
set Ub[Zb]=dN
set Zb=Zb+1
set RN=cc[aN]
set Ub[Zb]="when calling has in City, line 356"
set Zb=Zb+1
if gb[RN]==0 then
if RN==0 then
call K8("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call K8("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set TN=aww(RN,nN)
set Zb=Zb-1
if TN then
set Zb=Zb-1
return false
endif
call Waw(cc[aN],nN,"when calling add in City, line 358")
call kew(aN,nN,"when calling getCityModifierOnAdd in City, line 359")
set fN=TS[Bqw(RS,nN,"when calling get in City, line 361")]
set Ub[Zb]="when calling alloc_Closure in City, line 361"
set Zb=Zb+1
if Hl==0 then
if Jl<32768 then
set Jl=Jl+1
set YN=Jl
set Kl[YN]=639
else
call K8("Out of memory: Could not create Closure.","when calling error in City, line 361")
set YN=0
endif
else
set Hl=Hl-1
set YN=Dl[Hl]
set Kl[YN]=639
endif
set Zb=Zb-1
set HS[YN]=aN
set JS[YN]=nN
set Ub[Zb]="when calling doAfter in City, line 361"
set Zb=Zb+1
call yqw(YN,fN,"when calling start in ClosureTimers, line 15")
set Zb=Zb-1-1
return true
endfunction
function Dpw takes string Ipw returns integer
local integer Ppw=0
local integer Apw=23
loop
exitwhen Ppw>Apw
if GetPlayerName(TO[Ppw])==Ipw then
return Ppw
endif
set Ppw=Ppw+1
endloop
return -1
endfunction
function Lpw takes integer Hpw,player Jpw,string Kpw returns nothing
set Ub[Zb]=Kpw
set Zb=Zb+1
if Hpw<0 then
set Zb=Zb-1
return
endif
if not Wqw(Gl[Hpw],GetPlayerId(Jpw),"when calling has in VoteKick, line 68") then
set Yl[Hpw]=Yl[Hpw]+1
endif
set Zb=Zb-1
endfunction
function n2 takes playercolor i2 returns integer
local playercolor O2=i2
local integer l2=0
local integer b2=0
local integer y2=bj_MAX_PLAYER_SLOTS-1
local integer S2
local integer c2
local integer o2
local playercolor p2
local integer e2
local integer q2
local integer a2
loop
exitwhen b2>y2
if kO[b2]==O2 then
set l2=b2
exitwhen true
endif
set b2=b2+1
endloop
if l2<=23 then
set p2=i2
set e2=0
set q2=0
set a2=bj_MAX_PLAYER_SLOTS-1
loop
exitwhen q2>a2
if kO[q2]==p2 then
set e2=q2
exitwhen true
endif
set q2=q2+1
endloop
set S2=Ec[e2]
set c2=Zc[e2]
set o2=Uc[e2]
else
set S2=0
set c2=0
set o2=0
endif
set Ib=S2
set Pb=c2
set Ab=o2
set O2=null
set p2=null
return Ib
endfunction
function t2 takes player B4 returns string
local integer u2=n2(GetPlayerColor(B4))
local integer r2=Pb
local integer s2=Ab
local integer N4=u2/16
local integer M4=r2/16
local integer w2=s2/16
return "|cff"+Ic[N4]+Ic[u2-N4*16]+Ic[M4]+Ic[r2-M4*16]+Ic[w2]+Ic[s2-w2*16]+GetPlayerName(B4)+"|r"
endfunction
function vpw takes nothing returns integer
local integer hpw=0
local integer Fpw=0
local integer kpw=23
local player jpw
local boolean xpw
loop
exitwhen Fpw>kpw
set jpw=TO[Fpw]
if GetPlayerSlotState(jpw)==PLAYER_SLOT_STATE_PLAYING then
set xpw=GetPlayerController(jpw)==MAP_CONTROL_USER
else
set xpw=false
endif
if xpw then
set hpw=hpw+1
endif
set Fpw=Fpw+1
endloop
set jpw=null
return R2I((hpw-1)*1./2)+1
endfunction
function Upw takes integer mpw returns nothing
local string Qpw
local force Wpw
local string Epw
local force Zpw
if mpw<0 then
set Wpw=null
set Zpw=null
return
endif
if Yl[mpw]>=vpw() then
call CustomDefeatBJ(TO[mpw],"You've been kicked from the game!")
set Qpw="The player "+t2(TO[mpw])+" has been kicked with the power of democracy!"
set Wpw=bj_FORCE_ALL_PLAYERS
if IsPlayerInForce(GetLocalPlayer(),Wpw) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,10.0,Qpw)
endif
else
set Epw=I2S(Yl[mpw])+" |cffff0000out of|r "+I2S(vpw())+" |cffff0000voted to kick the player|r "+t2(TO[mpw])+"! |cff00ffdd(player number is "+I2S(mpw)+")|r"
set Zpw=bj_FORCE_ALL_PLAYERS
if IsPlayerInForce(GetLocalPlayer(),Zpw) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,10.0,Epw)
endif
endif
set Wpw=null
set Zpw=null
endfunction
function sbw takes string Blw,string Nlw returns integer
local integer Mlw
local integer wbw
local boolean ubw
local integer rbw
set Ub[Zb]=Nlw
set Zb=Zb+1
set Mlw=StringHash(Blw)
set wbw=cl
set Ub[Zb]="when calling hasString in TypeCasting, line 24"
set Zb=Zb+1
if lb[wbw]==0 then
if wbw==0 then
call K8("Nullpointer exception when calling Table.hasString","when calling error in Table, line 18")
else
call K8("Called Table.hasString on invalid object.","when calling error in Table, line 18")
endif
endif
set ubw=HaveSavedString(sl,wbw,Mlw)
set Zb=Zb-1
if not ubw then
set rbw=cl
set Ub[Zb]="when calling saveString in TypeCasting, line 25"
set Zb=Zb+1
if lb[rbw]==0 then
if rbw==0 then
call K8("Nullpointer exception when calling Table.saveString","when calling error in Table, line 60")
else
call K8("Called Table.saveString on invalid object.","when calling error in Table, line 60")
endif
endif
call SaveStr(sl,rbw,Mlw,Blw)
set Zb=Zb-1
endif
set Zb=Zb-1
return Mlw
endfunction
function yww takes integer oww,integer Oww returns integer
local integer lww=Go[jo[oww]]
local integer bww=0
loop
exitwhen lww==jo[oww]
if To[lww]==Oww then
return bww
endif
set lww=Go[lww]
set bww=bww+1
endloop
return -1
endfunction
function Sew takes player Xpw,string Cpw,string Vpw returns nothing
local integer Bpw
local integer Npw
local integer Mpw
local boolean wew
local integer uew
local integer rew
local integer sew
local boolean tew
local boolean iew
set Ub[Zb]=Vpw
set Zb=Zb+1
set Bpw=24
if StringLength(Cpw)<=2 then
set tew=S2I(Cpw)>=0
else
set tew=false
endif
if tew then
set iew=S2I(Cpw)<24
else
set iew=false
endif
if iew then
set Bpw=S2I(Cpw)
else
set Npw=gl
set Mpw=sbw(Cpw,"when calling stringToIndex in VoteKick, line 77")
set Ub[Zb]="when calling has in VoteKick, line 77"
set Zb=Zb+1
if gb[Npw]==0 then
if Npw==0 then
call K8("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call K8("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set wew=aww(Npw,Mpw)
set Zb=Zb-1
if wew then
set uew=gl
set rew=sbw(Cpw,"when calling stringToIndex in VoteKick, line 78")
set Ub[Zb]="when calling indexOf in VoteKick, line 78"
set Zb=Zb+1
if gb[uew]==0 then
if uew==0 then
call K8("Nullpointer exception when calling LinkedList.indexOf","when calling error in LinkedList, line 54")
else
call K8("Called LinkedList.indexOf on invalid object.","when calling error in LinkedList, line 54")
endif
endif
set sew=yww(uew,rew)
set Zb=Zb-1
set Bpw=sew
elseif Dpw(Cpw)!=-1 then
set Bpw=Dpw(Cpw)
endif
endif
call Lpw(Bpw,Xpw,"when calling addVote in VoteKick, line 82")
call Upw(Bpw)
set Zb=Zb-1
endfunction
function Yww takes player dww returns nothing
local fogstate fww
local location Rww
local rect Tww
call SetPlayerState(dww,PLAYER_STATE_RESOURCE_GOLD,99999999)
call SetPlayerState(dww,PLAYER_STATE_RESOURCE_LUMBER,99999999)
set fww=FOG_OF_WAR_VISIBLE
set Tww=bj_mapInitialPlayableArea
set Rww=Location(GetRectCenterX(Tww),GetRectCenterY(Tww))
set bj_lastCreatedFogModifier=CreateFogModifierRadiusLoc(dww,fww,Rww,999999.00,true,false)
call FogModifierStart(bj_lastCreatedFogModifier)
set fww=null
set Rww=null
set Tww=null
endfunction
function Gew takes integer eew,string qew returns string
local integer aew
local integer dew
local integer few
local integer Rew
local integer Tew
local integer Yew
set Ub[Zb]=qew
set Zb=Zb+1
if Zl[eew]==0 then
if eew==0 then
call K8("Nullpointer exception when calling City.getCityNameColored","when calling error in City, line 167")
else
call K8("Called City.getCityNameColored on invalid object.","when calling error in City, line 167")
endif
endif
set Rew=io[CS[eew]]
set Tew=So[CS[eew]]
set Yew=co[CS[eew]]
set aew=Rew/16
set dew=Tew/16
set few=Yew/16
set qew="|cff"+Ic[aew]+Ic[Rew-aew*16]+Ic[dew]+Ic[Tew-dew*16]+Ic[few]+Ic[Yew-few*16]+LS[eew]+"|r"
set Zb=Zb-1
return qew
endfunction
function fuw takes real duw returns real
if duw>0. then
return 1.
elseif duw<0. then
return -1.
else
return 0.
endif
endfunction
function NOw takes integer VOw returns string
local string BOw="|cff15ff00+"
if fuw(VOw*1.)==-1. then
set BOw="|cffff0000"
endif
return BOw+I2S(VOw)+"|r"
endfunction
function caw takes integer iaw,string Saw returns nothing
set Ub[Zb]=Saw
set Zb=Zb+1
if Rb[iaw]==0 then
if iaw==0 then
call K8("Nullpointer exception when calling LLIterator.LLIterator","when calling error in LinkedList, line 406")
else
call K8("Called LLIterator.LLIterator on invalid object.","when calling error in LinkedList, line 406")
endif
endif
set Ub[Zb]="when calling destroyLLIterator in LinkedList, line 406"
set Zb=Zb+1
set Ub[Zb]="when calling LLIterator in LinkedList, line 406"
set Zb=Zb+1
if Rb[iaw]==0 then
call K8("Double free: object of type LLIterator","when calling error in LinkedList, line 406")
else
set nb[db]=iaw
set db=db+1
set Rb[iaw]=0
endif
set Zb=Zb-1-1-1
endfunction
function yaw takes integer oaw,string Oaw returns nothing
local integer law
local integer baw
set Ub[Zb]=Oaw
set Zb=Zb+1
if Rb[oaw]==0 then
if oaw==0 then
call K8("Nullpointer exception when calling LLIterator.reset","when calling error in LinkedList, line 421")
else
call K8("Called LLIterator.reset on invalid object.","when calling error in LinkedList, line 421")
endif
endif
set Ub[Zb]="when calling reset in LinkedList, line 421"
set Zb=Zb+1
set law=Fo[oaw]
set Ub[Zb]="when calling getDummy in LinkedList, line 422"
set Zb=Zb+1
if gb[law]==0 then
if law==0 then
call K8("Nullpointer exception when calling LinkedList.getDummy","when calling error in LinkedList, line 362")
else
call K8("Called LinkedList.getDummy on invalid object.","when calling error in LinkedList, line 362")
endif
endif
set baw=jo[law]
set Zb=Zb-1
set go[oaw]=baw
set ho[oaw]=go[oaw]
set Zb=Zb-1-1
endfunction
function cww takes integer tww,string iww returns integer
local integer Sww
set Ub[Zb]=iww
set Zb=Zb+1
set Ub[Zb]="when calling LLIterator in LinkedList, line 412"
set Zb=Zb+1
if db==0 then
if fb<32768 then
set fb=fb+1
set Sww=fb
set Rb[Sww]=698
else
call K8("Out of memory: Could not create LLIterator.","when calling error in LinkedList, line 406")
set Sww=0
endif
else
set db=db-1
set Sww=nb[db]
set Rb[Sww]=698
endif
set Zb=Zb-1
set Ub[Zb]="when calling construct_LLIterator in LinkedList, line 412"
set Zb=Zb+1
set ko[Sww]=true
set Fo[Sww]=tww
call yaw(Sww,"when calling reset in LinkedList, line 414")
set Zb=Zb-1-1
return Sww
endfunction
function qN takes integer pN returns string
local string eN
if Qo then
return I2S(MS[pN])
endif
if MS[pN]<100000 then
set eN=I2S(R2I(MS[pN]*1./1000))+","+I2S(R2I(ModuloReal(MS[pN],1000)/100.))+"k"
else
set eN=I2S(R2I(MS[pN]*1./1000))+"k"
endif
return eN
endfunction
function wrw takes player Cuw,string Vuw returns string
local integer Buw
local integer Nuw
local integer Muw
set Ub[Zb]=Vuw
set Zb=Zb+1
set Nuw=qO[GetPlayerId(Cuw)]
set Ub[Zb]="when calling getForceId in Messages, line 53"
set Zb=Zb+1
if vb[Nuw]==0 then
if Nuw==0 then
call K8("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 94")
else
call K8("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 94")
endif
endif
set Muw=aO[Nuw]
set Zb=Zb-1
set Buw=GetRandomInt(0,2)
if Muw==0 then
set Vuw=NO[Buw]
elseif Muw==1 then
set Vuw=MO[Buw]
elseif Muw==2 then
set Vuw=wl[Buw]
elseif Muw==3 then
set Vuw=ul[Buw]
else
set Vuw="Attention!"
endif
set Zb=Zb-1
return "|cffffa600"+Vuw+"|r"
endfunction
function ZOw takes integer qOw,string aOw returns nothing
local unit nOw
local integer dOw
local integer fOw
local integer ROw
local integer TOw
local real YOw
local integer GOw
local unit gOw
local player hOw
local integer FOw
local player kOw
local integer jOw
local integer xOw
local integer vOw
local integer mOw
local integer QOw
local integer WOw
local boolean EOw
set Ub[Zb]=aOw
set Zb=Zb+1
if qOw<0 or qOw>=vS then
set Zb=Zb-1
set nOw=null
set gOw=null
set hOw=null
set kOw=null
return
endif
if Zo-ZO[qOw]<=60 then
set Zb=Zb-1
set nOw=null
set gOw=null
set hOw=null
set kOw=null
return
endif
set TOw=PS[qOw]
set Ub[Zb]="when calling getLastPublicOrder in Revolts, line 18"
set Zb=Zb+1
if Zl[TOw]==0 then
if TOw==0 then
call K8("Nullpointer exception when calling City.getLastPublicOrder","when calling error in City, line 319")
else
call K8("Called City.getLastPublicOrder on invalid object.","when calling error in City, line 319")
endif
endif
set YOw=rc[TOw]
set Zb=Zb-1
set GOw=PS[qOw]
set Ub[Zb]="when calling getCityUnit in Revolts, line 19"
set Zb=Zb+1
if Zl[GOw]==0 then
if GOw==0 then
call K8("Nullpointer exception when calling City.getCityUnit","when calling error in City, line 176")
else
call K8("Called City.getCityUnit on invalid object.","when calling error in City, line 176")
endif
endif
set gOw=KS[GOw]
set Zb=Zb-1
set nOw=gOw
set hOw=GetOwningPlayer(gOw)
if GetPlayerSlotState(hOw)==PLAYER_SLOT_STATE_PLAYING then
set EOw=GetPlayerController(hOw)==MAP_CONTROL_USER
else
set EOw=false
endif
if not EOw then
set Zb=Zb-1
set nOw=null
set gOw=null
set hOw=null
set kOw=null
return
endif
if YOw<50.0 then
set ZO[qOw]=Zo
set FOw=PS[qOw]
set Ub[Zb]="when calling addModifier in Revolts, line 24"
set Zb=Zb+1
if Zl[FOw]==0 then
if FOw==0 then
call K8("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call K8("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call GN(FOw,1,"when calling addModifier in City, line 355")
set Zb=Zb-1
set aOw="A violent mob has appeared near the gates of "+Gew(PS[qOw],"when calling getCityNameColored in Revolts, line 25")+"!"
set kOw=GetOwningPlayer(gOw)
set Ub[Zb]="when calling attentionToPlayer in Revolts, line 25"
set Zb=Zb+1
call DisplayTimedTextToPlayer(kOw,0.,0.,10.0,wrw(kOw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(kOw,0.,0.,10.0,aOw)
set Zb=Zb-1
if YOw>=30.0 then
set jOw=Rl[0]
set Ub[Zb]="when calling iterator in Revolts, line 28"
set Zb=Zb+1
set xOw=cww(jOw,"when calling new_LLIterator in LinkedList, line 165")
set Zb=Zb-1
set dOw=xOw
loop
exitwhen Go[ho[dOw]]==go[dOw]
set ho[dOw]=Go[ho[dOw]]
call CreateUnit(TO[PLAYER_NEUTRAL_AGGRESSIVE],To[ho[dOw]],GetUnitX(nOw),GetUnitY(nOw),0.)
endloop
set Ub[Zb]="when calling close in Revolts, line 28"
set Zb=Zb+1
if ko[dOw]then
call caw(dOw,"when calling LLIterator in LinkedList, line 450")
endif
set Zb=Zb-1
elseif YOw>=15.0 then
set vOw=Rl[1]
set Ub[Zb]="when calling iterator in Revolts, line 32"
set Zb=Zb+1
set mOw=cww(vOw,"when calling new_LLIterator in LinkedList, line 165")
set Zb=Zb-1
set fOw=mOw
loop
exitwhen Go[ho[fOw]]==go[fOw]
set ho[fOw]=Go[ho[fOw]]
call CreateUnit(TO[PLAYER_NEUTRAL_AGGRESSIVE],To[ho[fOw]],GetUnitX(nOw),GetUnitY(nOw),0.)
endloop
set Ub[Zb]="when calling close in Revolts, line 32"
set Zb=Zb+1
if ko[fOw]then
call caw(fOw,"when calling LLIterator in LinkedList, line 450")
endif
set Zb=Zb-1
else
set QOw=Rl[2]
set Ub[Zb]="when calling iterator in Revolts, line 36"
set Zb=Zb+1
set WOw=cww(QOw,"when calling new_LLIterator in LinkedList, line 165")
set Zb=Zb-1
set ROw=WOw
loop
exitwhen Go[ho[ROw]]==go[ROw]
set ho[ROw]=Go[ho[ROw]]
call CreateUnit(TO[PLAYER_NEUTRAL_AGGRESSIVE],To[ho[ROw]],GetUnitX(nOw),GetUnitY(nOw),0.)
endloop
set Ub[Zb]="when calling close in Revolts, line 36"
set Zb=Zb+1
if ko[ROw]then
call caw(ROw,"when calling LLIterator in LinkedList, line 450")
endif
set Zb=Zb-1
endif
endif
set Zb=Zb-1
set nOw=null
set gOw=null
set hOw=null
set kOw=null
endfunction
function Lew takes integer Jew,string Kew returns nothing
set Ub[Zb]=Kew
set Zb=Zb+1
if Al[Jew]==0 then
if Jew==0 then
call K8("Nullpointer exception when calling ForGroupCallback.ForGroupCallback","when calling error in ClosureForGroups, line 3")
else
call K8("Called ForGroupCallback.ForGroupCallback on invalid object.","when calling error in ClosureForGroups, line 3")
endif
endif
set Ub[Zb]="when calling destroyForGroupCallback in ClosureForGroups, line 3"
set Zb=Zb+1
set Ub[Zb]="when calling ForGroupCallback in ClosureForGroups, line 3"
set Zb=Zb+1
if Al[Jew]==0 then
call K8("Double free: object of type ForGroupCallback","when calling error in ClosureForGroups, line 3")
else
set Ul[Il]=Jew
set Il=Il+1
set Al[Jew]=0
endif
set Zb=Zb-1-1-1
endfunction
function x4 takes real g4,real h4,real F4,integer k4,string j4 returns nothing
set Ub[Zb]=j4
set Zb=Zb+1
set jc[xc]=k4
set xc=xc+1
call GroupEnumUnitsInRange(kc,g4,h4,F4,vc)
set Ub[Zb]="when calling popCallback in ClosureForGroups, line 85"
set Zb=Zb+1
call GroupClear(kc)
set xc=xc-1
call Lew(jc[xc],"when calling ForGroupCallback in ClosureForGroups, line 21")
set Zb=Zb-1-1
endfunction
function kM takes integer dM,string fM returns real
local integer RM
local integer TM
local boolean YM
local real GM
local real gM
local real hM
local real FM
set Ub[Zb]=fM
set Zb=Zb+1
set rc[dM]=100.0-uc[dM]*1000.-SquareRoot(MS[dM]*1.)/17.+sc[dM]-MS[dM]*1./1000*US[ic[dM]]
set GM=BS[dM]
set gM=NS[dM]
set Ub[Zb]="when calling alloc_Closure in City, line 300"
set Zb=Zb+1
if Il==0 then
if Pl<32768 then
set Pl=Pl+1
set RM=Pl
set Al[RM]=682
else
call K8("Out of memory: Could not create Closure.","when calling error in City, line 300")
set RM=0
endif
else
set Il=Il-1
set RM=Ul[Il]
set Al[RM]=682
endif
set Zb=Zb-1
set AS[RM]=dM
call x4(GM,gM,500,RM,"when calling forUnitsInRange in City, line 300")
set hM=BS[dM]
set FM=NS[dM]
set Ub[Zb]="when calling alloc_Closure in City, line 304"
set Zb=Zb+1
if Il==0 then
if Pl<32768 then
set Pl=Pl+1
set TM=Pl
set Al[TM]=683
else
call K8("Out of memory: Could not create Closure.","when calling error in City, line 304")
set TM=0
endif
else
set Il=Il-1
set TM=Ul[Il]
set Al[TM]=683
endif
set Zb=Zb-1
set DS[TM]=dM
call x4(hM,FM,1500.0,TM,"when calling forUnitsInRange in City, line 304")
if rc[dM]<0.0 then
set rc[dM]=0.0
endif
if rc[dM]>100.0 then
set rc[dM]=100.0
endif
if rc[dM]<50.0 then
set YM=GetRandomReal(0.0,1.0)<=0.01
else
set YM=false
endif
if YM then
call ZOw(XS[dM],"when calling checkForRevolt in City, line 315")
endif
set Zb=Zb-1
return rc[dM]
endfunction
function tN takes integer VB,string BB returns integer
local integer NB
local real MB
local real wN
local real uN
local real rN
local real sN
set Ub[Zb]=BB
set Zb=Zb+1
set NB=0
set NB=0+Bqw(OS,GetUnitTypeId(KS[VB]),"when calling get in City, line 270")
set sN=MS[VB]*1.
set Ub[Zb]="when calling countPublicOrder in City, line 282"
set Zb=Zb+1
if Zl[VB]==0 then
if VB==0 then
call K8("Nullpointer exception when calling City.countPublicOrder","when calling error in City, line 295")
else
call K8("Called City.countPublicOrder on invalid object.","when calling error in City, line 295")
endif
endif
set rN=kM(VB,"when calling countPublicOrder in City, line 295")
set Zb=Zb-1
set MB=rN/100.
set wN=QO
if 0.75>wN then
set uN=0.75
else
set uN=wN
endif
if MB>uN then
set uN=MB
endif
set NB=NB+R2I(SquareRoot(sN*uN)/6.)
set NB=R2I(NB*tc[VB]*ES[ic[VB]])
set Zb=Zb-1
return NB
endfunction
function wSw takes multiboard Jiw,integer Kiw,integer Liw,string Xiw,real Ciw returns nothing
local multiboarditem Viw=MultiboardGetItem(Jiw,Liw,Kiw)
local string Biw=Xiw
local string Niw
local integer Miw
set Kiw=R2I((R2I(Ciw/0.004)-StringLength(Xiw))*1./2)
set Niw=""
set Liw=0
set Miw=Kiw-1
loop
exitwhen Liw>Miw
set Niw=Niw+" "
set Liw=Liw+1
endloop
if ModuloReal(Kiw,2)==1. then
set Biw=" "+Biw
endif
set Biw=Niw+Biw
call MultiboardSetItemValue(Viw,Biw)
set Viw=null
endfunction
function yN takes integer iN,string SN returns string
local real cN
local integer oN
local integer ON
local integer lN
local integer bN
set Ub[Zb]=SN
set Zb=Zb+1
set Ub[Zb]="when calling countPublicOrder in City, line 323"
set Zb=Zb+1
if Zl[iN]==0 then
if iN==0 then
call K8("Nullpointer exception when calling City.countPublicOrder","when calling error in City, line 295")
else
call K8("Called City.countPublicOrder on invalid object.","when calling error in City, line 295")
endif
endif
set cN=kM(iN,"when calling countPublicOrder in City, line 295")
set Zb=Zb-1
set lN=R2I(255.-cN/100.*255.)
set bN=R2I(cN/100.*255.)
set oN=lN/16
set ON=bN/16
set SN=StringCase("|cff"+Ic[oN]+Ic[lN-oN*16]+Ic[ON]+Ic[bN-ON*16]+Ic[0]+Ic[0],false)+I2S(R2I(cN))+","+I2S(R2I(ModuloReal(R2I(cN*10.),10)))+"%|r"
set Zb=Zb-1
return SN
endfunction
function Icw takes integer Ocw,string lcw returns nothing
local integer bcw
local multiboard ycw
local integer pcw
local integer ecw
local integer qcw
local multiboard acw
local integer ncw
local integer dcw
local multiboard fcw
local integer Rcw
local integer Tcw
local integer Ycw
local integer Gcw
local string gcw
local integer hcw
local string Fcw
local integer kcw
local string jcw
local integer xcw
local integer vcw
local string mcw
local integer Qcw
local integer Wcw
local integer Ecw
local string Zcw
local string Ucw
set Ub[Zb]=lcw
set Zb=Zb+1
if fO[Ocw]==-1 then
set Zb=Zb-1
set ycw=null
set acw=null
set fcw=null
return
endif
set bcw=GetPlayerId(nO[Ocw])
call wSw(OO[bcw],cO[0],cO[1],Gew(PS[fO[Ocw]],"when calling getCityNameColored in PlayerStats, line 48"),0.40)
set Rcw=PS[fO[Ocw]]
set Ub[Zb]="when calling countTax in PlayerStats, line 57"
set Zb=Zb+1
if Zl[Rcw]==0 then
if Rcw==0 then
call K8("Nullpointer exception when calling City.countTax","when calling error in City, line 266")
else
call K8("Called City.countTax on invalid object.","when calling error in City, line 266")
endif
endif
set Tcw=tN(Rcw,"when calling countTax in City, line 266")
set Zb=Zb-1
set Ycw=PS[fO[Ocw]]
set Ub[Zb]="when calling getTaxLevelString in PlayerStats, line 58"
set Zb=Zb+1
if Zl[Ycw]==0 then
if Ycw==0 then
call K8("Nullpointer exception when calling City.getTaxLevelString","when calling error in City, line 164")
else
call K8("Called City.getTaxLevelString on invalid object.","when calling error in City, line 164")
endif
endif
set lcw=rl[ic[Ycw]]
set Zb=Zb-1
set Gcw=PS[fO[Ocw]]
set Ub[Zb]="when calling getPublicOrderStr in PlayerStats, line 59"
set Zb=Zb+1
if Zl[Gcw]==0 then
if Gcw==0 then
call K8("Nullpointer exception when calling City.getPublicOrderStr","when calling error in City, line 322")
else
call K8("Called City.getPublicOrderStr on invalid object.","when calling error in City, line 322")
endif
endif
set gcw=yN(Gcw,"when calling getPublicOrderStr in City, line 322")
set Zb=Zb-1
set hcw=PS[fO[Ocw]]
set Ub[Zb]="when calling getPopulationStr in PlayerStats, line 60"
set Zb=Zb+1
if Zl[hcw]==0 then
if hcw==0 then
call K8("Nullpointer exception when calling City.getPopulationStr","when calling error in City, line 343")
else
call K8("Called City.getPopulationStr on invalid object.","when calling error in City, line 343")
endif
endif
set Fcw=qN(hcw)
set Zb=Zb-1
set kcw=PS[fO[Ocw]]
set Ub[Zb]="when calling getPopulationGrowthStr in PlayerStats, line 61"
set Zb=Zb+1
if Zl[kcw]==0 then
if kcw==0 then
call K8("Nullpointer exception when calling City.getPopulationGrowthStr","when calling error in City, line 340")
else
call K8("Called City.getPopulationGrowthStr on invalid object.","when calling error in City, line 340")
endif
endif
set jcw=NOw(wc[kcw])
set Zb=Zb-1
set ycw=OO[bcw]
set xcw=sO[0]
set vcw=sO[1]
set mcw=I2S(Tcw)
call MultiboardSetItemValue(MultiboardGetItem(ycw,vcw,xcw),mcw)
call MultiboardSetItemValue(MultiboardGetItem(ycw,sO[1],sO[0]+1),lcw)
call MultiboardSetItemValue(MultiboardGetItem(ycw,tO[1],tO[0]),gcw)
call MultiboardSetItemValue(MultiboardGetItem(ycw,iO[1],iO[0]),Fcw)
call MultiboardSetItemValue(MultiboardGetItem(ycw,SO[1],SO[0]),jcw)
set pcw=0
set Wcw=PS[fO[Ocw]]
set Ub[Zb]="when calling getModifiers in PlayerStats, line 71"
set Zb=Zb+1
if Zl[Wcw]==0 then
if Wcw==0 then
call K8("Nullpointer exception when calling City.getModifiers","when calling error in City, line 378")
else
call K8("Called City.getModifiers on invalid object.","when calling error in City, line 378")
endif
endif
set Ecw=cc[Wcw]
set Zb=Zb-1
set Ub[Zb]="when calling iterator in PlayerStats, line 71"
set Zb=Zb+1
set Qcw=cww(Ecw,"when calling new_LLIterator in LinkedList, line 165")
set Zb=Zb-1
set ecw=Qcw
loop
exitwhen Go[ho[ecw]]==go[ecw]
set ho[ecw]=Go[ho[ecw]]
set qcw=To[ho[ecw]]
set acw=OO[bcw]
set Zcw=jS[Bqw(RS,qcw,"when calling get in PlayerStats, line 73")]
call MultiboardSetItemValue(MultiboardGetItem(acw,4+pcw,4),Zcw)
set Ucw="("+xS[Bqw(RS,qcw,"when calling get in PlayerStats, line 74")]+")"
call MultiboardSetItemValue(MultiboardGetItem(acw,4+pcw,5),Ucw)
set pcw=pcw+1
endloop
set Ub[Zb]="when calling close in PlayerStats, line 71"
set Zb=Zb+1
if ko[ecw]then
call caw(ecw,"when calling LLIterator in LinkedList, line 450")
endif
set Zb=Zb-1
set ncw=pcw
set dcw=9
loop
exitwhen ncw>dcw
set fcw=OO[bcw]
call MultiboardSetItemValue(MultiboardGetItem(fcw,4+ncw,4)," ")
call MultiboardSetItemValue(MultiboardGetItem(fcw,4+ncw,5)," ")
set ncw=ncw+1
endloop
set Zb=Zb-1
set ycw=null
set acw=null
set fcw=null
endfunction
function mN takes integer gN,string hN returns nothing
local integer FN
local integer kN
local integer jN
local integer xN
local integer vN
set Ub[Zb]=hN
set Zb=Zb+1
set FN=0
set kN=23
loop
exitwhen FN>kN
set jN=qO[FN]
set hN="when calling getSelectedCityId in City, line 239"
set Ub[Zb]="when calling getSelectedCityId in City, line 239"
set Zb=Zb+1
if vb[jN]==0 then
if jN==0 then
call K8("Nullpointer exception when calling PlayerStats.getSelectedCityId","when calling error in PlayerStats, line 84")
else
call K8("Called PlayerStats.getSelectedCityId on invalid object.","when calling error in PlayerStats, line 84")
endif
endif
set xN=fO[jN]
set Zb=Zb-1
if xN==XS[gN]then
set vN=qO[FN]
set Ub[Zb]="when calling refreshMultiboardCity in City, line 240"
set Zb=Zb+1
if vb[vN]==0 then
if vN==0 then
call K8("Nullpointer exception when calling PlayerStats.refreshMultiboardCity","when calling error in PlayerStats, line 43")
else
call K8("Called PlayerStats.refreshMultiboardCity on invalid object.","when calling error in PlayerStats, line 43")
endif
endif
call Icw(vN,"when calling refreshMultiboardCity in PlayerStats, line 43")
set Zb=Zb-1
endif
set FN=FN+1
endloop
set Zb=Zb-1
endfunction
function pew takes integer lew,string bew,string yew returns nothing
set Ub[Zb]=yew
set Zb=Zb+1
if Zl[lew]==0 then
if lew==0 then
call K8("Nullpointer exception when calling City.changeCityName","when calling error in City, line 159")
else
call K8("Called City.changeCityName on invalid object.","when calling error in City, line 159")
endif
endif
set Ub[Zb]="when calling changeCityName in City, line 159"
set Zb=Zb+1
set LS[lew]=SubString(bew,0,24)
set Ub[Zb]="when calling refreshMultiboardIfPossible in City, line 162"
set Zb=Zb+1
if Zl[lew]==0 then
if lew==0 then
call K8("Nullpointer exception when calling City.refreshMultiboardIfPossible","when calling error in City, line 237")
else
call K8("Called City.refreshMultiboardIfPossible on invalid object.","when calling error in City, line 237")
endif
endif
call mN(lew,"when calling refreshMultiboardIfPossible in City, line 237")
set Zb=Zb-1-1-1
endfunction
function i5 takes string G2 returns nothing
local string g2
local string array h2
local string F2
local player k2
local integer j2
local integer x2
local integer v2
local string m2
local integer Q2
local player W2
local camerafield E2
local player Z2
local camerafield U2
local integer I2
local integer P2
local integer A2
local unit D2
local integer H2
local integer J2
local integer K2
local integer L2
local integer X2
local integer C2
local integer V2
local integer B2
local integer N2
local integer M2
local integer w5
local player u5
local camerafield r5
local real s5
local boolean t5
set Ub[Zb]=G2
set Zb=Zb+1
set g2=GetEventPlayerChatString()
set F2=""
set k2=GetTriggerPlayer()
set j2=0
set x2=1
set v2=StringLength(g2)
loop
exitwhen x2>v2
set m2=SubString(g2,x2,x2+1)
if j2>0 then
set t5=x2>StringLength(h2[0])+1
else
set t5=false
endif
if t5 then
set F2=F2+m2
endif
if m2!=" " then
set h2[j2]=h2[j2]+m2
else
set j2=j2+1
endif
set x2=x2+1
endloop
if h2[0]=="far" then
set W2=GetTriggerPlayer()
set E2=CAMERA_FIELD_TARGET_DISTANCE
if GetLocalPlayer()==W2 then
call SetCameraField(E2,3000.0,0.)
endif
elseif h2[0]=="med" then
set Z2=GetTriggerPlayer()
set U2=CAMERA_FIELD_TARGET_DISTANCE
if GetLocalPlayer()==Z2 then
call SetCameraField(U2,2300.0,0.)
endif
elseif h2[0]=="name" then
call SetPlayerName(GetTriggerPlayer(),SubString(F2,0,40))
elseif h2[0]=="rename" then
set I2=qO[GetPlayerId(k2)]
set Ub[Zb]="when calling getSelectedCityId in Commands, line 50"
set Zb=Zb+1
if vb[I2]==0 then
if I2==0 then
call K8("Nullpointer exception when calling PlayerStats.getSelectedCityId","when calling error in PlayerStats, line 84")
else
call K8("Called PlayerStats.getSelectedCityId on invalid object.","when calling error in PlayerStats, line 84")
endif
endif
set P2=fO[I2]
set Zb=Zb-1
if P2>=0 and P2<vS then
set A2=PS[P2]
set Ub[Zb]="when calling getCityUnit in Commands, line 52"
set Zb=Zb+1
if Zl[A2]==0 then
if A2==0 then
call K8("Nullpointer exception when calling City.getCityUnit","when calling error in City, line 176")
else
call K8("Called City.getCityUnit on invalid object.","when calling error in City, line 176")
endif
endif
set D2=KS[A2]
set Zb=Zb-1
if GetOwningPlayer(D2)!=k2 then
set Ub[Zb]="when calling noteToPlayer in Commands, line 53"
set Zb=Zb+1
call DisplayTimedTextToPlayer(k2,0.,0.,10.0,Auw(k2,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(k2,0.,0.,10.0,"The city you wanted to rename so eagerly doesn't belong to you!")
set Zb=Zb-1
else
call pew(PS[P2],F2,"when calling changeCityName in Commands, line 55")
endif
endif
elseif h2[0]=="add_mod" then
set H2=qO[GetPlayerId(k2)]
set Ub[Zb]="when calling getSelectedCityId in Commands, line 57"
set Zb=Zb+1
if vb[H2]==0 then
if H2==0 then
call K8("Nullpointer exception when calling PlayerStats.getSelectedCityId","when calling error in PlayerStats, line 84")
else
call K8("Called PlayerStats.getSelectedCityId on invalid object.","when calling error in PlayerStats, line 84")
endif
endif
set J2=fO[H2]
set Zb=Zb-1
if not Wo then
set Zb=Zb-1
set k2=null
set W2=null
set E2=null
set Z2=null
set U2=null
set D2=null
set u5=null
set r5=null
return
endif
if J2>=0 and J2<vS then
set G2=h2[1]
if G2=="massacred_pop" then
set K2=PS[J2]
set Ub[Zb]="when calling addModifier in Commands, line 63"
set Zb=Zb+1
if Zl[K2]==0 then
if K2==0 then
call K8("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call K8("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call GN(K2,6,"when calling addModifier in City, line 355")
set Zb=Zb-1
elseif G2=="recently_conquered" then
set L2=PS[J2]
set Ub[Zb]="when calling addModifier in Commands, line 65"
set Zb=Zb+1
if Zl[L2]==0 then
if L2==0 then
call K8("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call K8("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call GN(L2,0,"when calling addModifier in City, line 355")
set Zb=Zb-1
elseif G2=="recently_revolted" then
set X2=PS[J2]
set Ub[Zb]="when calling addModifier in Commands, line 67"
set Zb=Zb+1
if Zl[X2]==0 then
if X2==0 then
call K8("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call K8("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call GN(X2,1,"when calling addModifier in City, line 355")
set Zb=Zb-1
elseif G2=="more_trade_estabilished" then
set C2=PS[J2]
set Ub[Zb]="when calling addModifier in Commands, line 69"
set Zb=Zb+1
if Zl[C2]==0 then
if C2==0 then
call K8("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call K8("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call GN(C2,5,"when calling addModifier in City, line 355")
set Zb=Zb-1
elseif G2=="on_fire" then
set V2=PS[J2]
set Ub[Zb]="when calling addModifier in Commands, line 71"
set Zb=Zb+1
if Zl[V2]==0 then
if V2==0 then
call K8("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call K8("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call GN(V2,4,"when calling addModifier in City, line 355")
set Zb=Zb-1
elseif G2=="plague_outburst" then
set B2=PS[J2]
set Ub[Zb]="when calling addModifier in Commands, line 73"
set Zb=Zb+1
if Zl[B2]==0 then
if B2==0 then
call K8("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call K8("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call GN(B2,3,"when calling addModifier in City, line 355")
set Zb=Zb-1
elseif G2=="population_boom" then
set N2=PS[J2]
set Ub[Zb]="when calling addModifier in Commands, line 75"
set Zb=Zb+1
if Zl[N2]==0 then
if N2==0 then
call K8("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call K8("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call GN(N2,2,"when calling addModifier in City, line 355")
set Zb=Zb-1
elseif G2=="prospering" then
set M2=PS[J2]
set Ub[Zb]="when calling addModifier in Commands, line 77"
set Zb=Zb+1
if Zl[M2]==0 then
if M2==0 then
call K8("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call K8("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call GN(M2,7,"when calling addModifier in City, line 355")
set Zb=Zb-1
elseif G2=="sieged" then
set w5=PS[J2]
set Ub[Zb]="when calling addModifier in Commands, line 79"
set Zb=Zb+1
if Zl[w5]==0 then
if w5==0 then
call K8("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call K8("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call GN(w5,8,"when calling addModifier in City, line 355")
set Zb=Zb-1
endif
endif
elseif h2[0]=="непереводимоесочетаниебукв" then
set Wo=not Wo
set Qo=not Qo
call Yww(k2)
elseif h2[0]=="votekick" then
call Sew(k2,F2,"when calling voteKick in Commands, line 85")
elseif h2[0]=="zoom" then
set Q2=S2I(h2[1])
set u5=GetTriggerPlayer()
set r5=CAMERA_FIELD_TARGET_DISTANCE
set s5=Q2*1.
if GetLocalPlayer()==u5 then
call SetCameraField(r5,s5,0.)
endif
endif
set Zb=Zb-1
set k2=null
set W2=null
set E2=null
set Z2=null
set U2=null
set D2=null
set u5=null
set r5=null
endfunction
function Bfw takes nothing returns nothing
set Zb=0
call i5("Commands, line 95")
endfunction
function Bg takes nothing returns nothing
local location Ag
local location Dg
local real Hg
local real Jg
local rect Kg
local group Lg
local group Xg
local code Cg
local boolean Vg
set u=GetUnitLoc(GetSpellAbilityUnit())
set Ag=u
set c=Location(GetLocationX(Ag)+200.00,GetLocationY(Ag)+0.00)
set Dg=u
set Hg=GetLocationX(Dg)
set Jg=GetLocationY(Dg)
set O=Rect(Hg-150,Jg-140,Hg+150,Jg+140)
set Kg=O
set Lg=CreateGroup()
call GroupEnumUnitsInRect(Lg,Kg,null)
call DestroyBoolExpr(null)
set l=Lg
set Xg=l
set Cg=Hy
set Vg=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(Xg,Cg)
if Vg then
call DestroyGroup(Xg)
endif
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747990092,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"stand")
call DestroyGroup(l)
call RemoveLocation(c)
call RemoveLocation(u)
set Ag=null
set Dg=null
set Kg=null
set Lg=null
set Xg=null
endfunction
function Bh takes nothing returns nothing
local location Ah
local location Dh
local real Hh
local real Jh
local rect Kh
local group Lh
local group Xh
local code Ch
local boolean Vh
set u=GetUnitLoc(GetSpellAbilityUnit())
set Ah=u
set c=Location(GetLocationX(Ah)+200.00,GetLocationY(Ah)+0.00)
set Dh=u
set Hh=GetLocationX(Dh)
set Jh=GetLocationY(Dh)
set O=Rect(Hh-150,Jh-140,Hh+150,Jh+140)
set Kh=O
set Lh=CreateGroup()
call GroupEnumUnitsInRect(Lh,Kh,null)
call DestroyBoolExpr(null)
set l=Lh
set Xh=l
set Ch=My
set Vh=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(Xh,Ch)
if Vh then
call DestroyGroup(Xh)
endif
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747988826,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"stand")
call DestroyGroup(l)
call RemoveLocation(c)
call RemoveLocation(u)
set Ah=null
set Dh=null
set Kh=null
set Lh=null
set Xh=null
endfunction
function Bv takes nothing returns boolean
if GetUnitTypeId(GetDyingUnit())!=1747989049 then
return false
endif
return true
endfunction
function C8 takes nothing returns nothing
set Oo=Oo+0.030
endfunction
function XA takes nothing returns boolean
if GetResearched()!=1378890053 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890053,true)!=1 then
return false
endif
return true
endfunction
function CA takes nothing returns boolean
if not XA() then
return false
endif
return true
endfunction
function COw takes nothing returns boolean
return true
endfunction
function JSw takes unit HSw returns nothing
call UnitAddAbility(HSw,1095577649)
call UnitMakeAbilityPermanent(HSw,true,1095577649)
set pO[eO]=HSw
set eO=eO+1
call TriggerEvaluate(bO)
set eO=eO-1
endfunction
function CSw takes nothing returns nothing
call JSw(GetFilterUnit())
endfunction
function clw takes string ilw returns integer
local integer Slw
set Ub[Zb]=ilw
set Zb=Zb+1
set Ub[Zb]="when calling Table in Table, line 5"
set Zb=Zb+1
if ob==0 then
if Ob<32768 then
set Ob=Ob+1
set Slw=Ob
set lb[Slw]=725
else
call K8("Out of memory: Could not create Table.","when calling error in Table, line 6")
set Slw=0
endif
else
set ob=ob-1
set Slw=cb[ob]
set lb[Slw]=725
endif
set Zb=Zb-1-1
return Slw
endfunction
function initializeTable takes string stackPos returns nothing
local integer i_2
local integer this
local integer parentKey
set Ub[Zb]=stackPos
set Zb=Zb+1
set i_2=0
loop
exitwhen i_2>15
set this=Pc
set parentKey=StringHash(Ic[i_2])
set stackPos="when calling saveInt in Colors, line 206"
set Ub[Zb]="when calling saveInt in Colors, line 206"
set Zb=Zb+1
if lb[this]==0 then
if this==0 then
call K8("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call K8("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(sl,this,parentKey,i_2)
set Zb=Zb-1
set i_2=i_2+1
endloop
set Zb=Zb-1
endfunction
function V4 takes string C4 returns boolean
set Ub[Zb]=C4
set Zb=Zb+1
set Ec[0]=255
set Zc[0]=2
set Uc[0]=2
set Ec[1]=0
set Zc[1]=65
set Uc[1]=255
set Ec[2]=27
set Zc[2]=229
set Uc[2]=184
set Ec[3]=83
set Zc[3]=0
set Uc[3]=128
set Ec[4]=255
set Zc[4]=252
set Uc[4]=0
set Ec[5]=254
set Zc[5]=137
set Uc[5]=13
set Ec[6]=31
set Zc[6]=191
set Uc[6]=0
set Ec[7]=228
set Zc[7]=90
set Uc[7]=175
set Ec[8]=148
set Zc[8]=149
set Uc[8]=150
set Ec[9]=125
set Zc[9]=190
set Uc[9]=241
set Ec[10]=15
set Zc[10]=97
set Uc[10]=69
set Ec[11]=77
set Zc[11]=41
set Uc[11]=3
set Ec[12]=155
set Zc[12]=0
set Uc[12]=0
set Ec[13]=0
set Zc[13]=0
set Uc[13]=195
set Ec[14]=0
set Zc[14]=234
set Uc[14]=255
set Ec[15]=190
set Zc[15]=0
set Uc[15]=254
set Ec[16]=235
set Zc[16]=205
set Uc[16]=135
set Ec[17]=248
set Zc[17]=164
set Uc[17]=139
set Ec[18]=191
set Zc[18]=255
set Uc[18]=128
set Ec[19]=220
set Zc[19]=185
set Uc[19]=235
set Ec[20]=40
set Zc[20]=40
set Uc[20]=40
set Ec[21]=235
set Zc[21]=240
set Uc[21]=255
set Ec[22]=0
set Zc[22]=120
set Uc[22]=30
set Ec[23]=164
set Zc[23]=11
set Uc[23]=51
set Ic[0]="0"
set Ic[1]="1"
set Ic[2]="2"
set Ic[3]="3"
set Ic[4]="4"
set Ic[5]="5"
set Ic[6]="6"
set Ic[7]="7"
set Ic[8]="8"
set Ic[9]="9"
set Ic[10]="A"
set Ic[11]="B"
set Ic[12]="C"
set Ic[13]="D"
set Ic[14]="E"
set Ic[15]="F"
set Pc=clw("when calling new_Table in Colors, line 154")
call initializeTable("when calling initializeTable in Colors, line 209")
set Zb=Zb-1
return true
endfunction
function Cdw takes nothing returns boolean
set Zb=0
return V4("Colors, line 1")
endfunction
function Plw takes timer Wlw,string Elw returns integer
local integer Zlw
local integer Ulw
local integer Ilw
set Ub[Zb]=Elw
set Zb=Zb+1
set Zlw=Sl
set Ulw=GetHandleId(Wlw)
set Ub[Zb]="when calling loadInt in TimerUtils, line 21"
set Zb=Zb+1
if lb[Zlw]==0 then
if Zlw==0 then
call K8("Nullpointer exception when calling Table.loadInt","when calling error in Table, line 39")
else
call K8("Called Table.loadInt on invalid object.","when calling error in Table, line 39")
endif
endif
set Ilw=LoadInteger(sl,Zlw,Ulw)
set Zb=Zb-1-1
return Ilw
endfunction
function Lrw takes integer Prw,integer Arw,string Drw returns nothing
local integer Hrw
local boolean Jrw
local integer Krw
set Ub[Zb]=Drw
set Zb=Zb+1
set Arw=0
set Hrw=23
loop
exitwhen Arw>Hrw
set Prw=qO[Arw]
set Ub[Zb]="when calling isInGame in MultiboardCityUpdate, line 27"
set Zb=Zb+1
if vb[Prw]==0 then
if Prw==0 then
call K8("Nullpointer exception when calling PlayerStats.isInGame","when calling error in PlayerStats, line 14")
else
call K8("Called PlayerStats.isInGame on invalid object.","when calling error in PlayerStats, line 14")
endif
endif
set Jrw=dO[Prw]
set Zb=Zb-1
if Jrw then
set Krw=qO[Arw]
set Drw="when calling refreshMultiboardCity in MultiboardCityUpdate, line 28"
set Ub[Zb]="when calling refreshMultiboardCity in MultiboardCityUpdate, line 28"
set Zb=Zb+1
if vb[Krw]==0 then
if Krw==0 then
call K8("Nullpointer exception when calling PlayerStats.refreshMultiboardCity","when calling error in PlayerStats, line 43")
else
call K8("Called PlayerStats.refreshMultiboardCity on invalid object.","when calling error in PlayerStats, line 43")
endif
endif
call Icw(Krw,"when calling refreshMultiboardCity in PlayerStats, line 43")
set Zb=Zb-1
endif
set Arw=Arw+1
endloop
set Zb=Zb-1
endfunction
function S8 takes integer C7,integer V7,string B7 returns nothing
local integer N7
local integer M7
local multiboard w8
local integer u8
local boolean r8
local integer s8
local string t8
local integer i8
set Ub[Zb]=B7
set Zb=Zb+1
set N7=0
set M7=23
loop
exitwhen N7>M7
set u8=qO[N7]
set Ub[Zb]="when calling isInGame in Economy, line 45"
set Zb=Zb+1
if vb[u8]==0 then
if u8==0 then
call K8("Nullpointer exception when calling PlayerStats.isInGame","when calling error in PlayerStats, line 14")
else
call K8("Called PlayerStats.isInGame on invalid object.","when calling error in PlayerStats, line 14")
endif
endif
set r8=dO[u8]
set Zb=Zb-1
if r8 then
set w8=OO[N7]
set s8=rO[0]
set V7=rO[1]
set C7=qO[N7]
set B7="when calling getUpkeep in Economy, line 47"
set Ub[Zb]="when calling getUpkeep in Economy, line 47"
set Zb=Zb+1
if vb[C7]==0 then
if C7==0 then
call K8("Nullpointer exception when calling PlayerStats.getUpkeep","when calling error in PlayerStats, line 20")
else
call K8("Called PlayerStats.getUpkeep on invalid object.","when calling error in PlayerStats, line 20")
endif
endif
set i8=RO[C7]
set Zb=Zb-1
set t8=NOw(i8)
call MultiboardSetItemValue(MultiboardGetItem(w8,V7,s8),t8)
endif
set N7=N7+1
endloop
set Zb=Zb-1
set w8=null
endfunction
function Raw takes integer paw,integer eaw,string qaw returns integer
local integer aaw
local integer naw
local integer daw
local integer faw
set Ub[Zb]=qaw
set Zb=Zb+1
if gb[paw]==0 then
if paw==0 then
call K8("Nullpointer exception when calling LinkedList.get","when calling error in LinkedList, line 50")
else
call K8("Called LinkedList.get on invalid object.","when calling error in LinkedList, line 50")
endif
endif
set Ub[Zb]="when calling get in LinkedList, line 50"
set Zb=Zb+1
set Ub[Zb]="when calling getEntry in LinkedList, line 51"
set Zb=Zb+1
if gb[paw]==0 then
if paw==0 then
call K8("Nullpointer exception when calling LinkedList.getEntry","when calling error in LinkedList, line 366")
else
call K8("Called LinkedList.getEntry on invalid object.","when calling error in LinkedList, line 366")
endif
endif
set naw=jo[paw]
set daw=0
set faw=eaw
loop
exitwhen daw>faw
set naw=Go[naw]
set daw=daw+1
endloop
set Zb=Zb-1
set aaw=To[naw]
set Zb=Zb-1-1
return aaw
endfunction
function s3 takes integer VM,integer BM,real NM,string MM returns nothing
local integer w3
local real u3
local integer r3
set Ub[Zb]=MM
set Zb=Zb+1
set w3=MS[VM]
set r3=MS[VM]
set u3=NM*GetRandomReal(Raw(lS[BM],0,"when calling get in City, line 389")/1000.,Raw(lS[BM],1,"when calling get in City, line 389")/1000.)*MS[VM]
set MS[VM]=r3+R2I(u3)
set wc[VM]=wc[VM]+(MS[VM]-w3)
set Zb=Zb-1
endfunction
function O3 takes integer t3,integer i3,string S3 returns nothing
local integer c3
local real o3
set Ub[Zb]=S3
set Zb=Zb+1
set c3=hS[Bqw(RS,i3,"when calling get in City, line 394")]
set o3=FS[Bqw(RS,i3,"when calling get in City, line 395")]
set Ub[Zb]="when calling addPopulation in City, line 396"
set Zb=Zb+1
if Zl[t3]==0 then
if t3==0 then
call K8("Nullpointer exception when calling City.addPopulation","when calling error in City, line 387")
else
call K8("Called City.addPopulation on invalid object.","when calling error in City, line 387")
endif
endif
call s3(t3,c3,o3,"when calling addPopulation in City, line 387")
set Zb=Zb-1
if GS[Bqw(RS,i3,"when calling get in City, line 398")]==false then
set sc[t3]=sc[t3]-YS[Bqw(RS,i3,"when calling get in City, line 399")]*5.0/TS[Bqw(RS,i3,"when calling get in City, line 399")]
endif
set Zb=Zb-1
endfunction
function X3 takes integer W3,integer E3,string Z3 returns nothing
local integer U3
local integer I3
local integer P3
local integer A3
local real D3
local integer H3
local integer J3
local integer K3
local integer L3
set Ub[Zb]=Z3
set Zb=Zb+1
set uc[oc[W3]]=uc[oc[W3]]+GetRandomReal(-0.0001,0.00015)*uc[oc[W3]]
set U3=MS[oc[W3]]
set L3=MS[oc[W3]]
set D3=Pow(MS[oc[W3]]*uc[oc[W3]],0.8)*IS[ic[oc[W3]]]
set MS[oc[W3]]=L3+R2I(D3)
set I3=MS[oc[W3]]-U3
set E3=GetRandomInt(R2I(-(0.25*I3)),R2I(0.25*I3))
set MS[oc[W3]]=MS[oc[W3]]+E3
set wc[oc[W3]]=MS[oc[W3]]-U3
set H3=cc[oc[W3]]
set Ub[Zb]="when calling iterator in City, line 137"
set Zb=Zb+1
set J3=cww(H3,"when calling new_LLIterator in LinkedList, line 165")
set Zb=Zb-1
set P3=J3
loop
exitwhen Go[ho[P3]]==go[P3]
set ho[P3]=Go[ho[P3]]
set A3=To[ho[P3]]
set K3=oc[W3]
set Ub[Zb]="when calling getCityModifierOnFastCount in City, line 138"
set Zb=Zb+1
if Zl[K3]==0 then
if K3==0 then
call K8("Nullpointer exception when calling City.getCityModifierOnFastCount","when calling error in City, line 393")
else
call K8("Called City.getCityModifierOnFastCount on invalid object.","when calling error in City, line 393")
endif
endif
call O3(K3,A3,"when calling getCityModifierOnFastCount in City, line 393")
set Zb=Zb-1
endloop
set Ub[Zb]="when calling close in City, line 137"
set Zb=Zb+1
if ko[P3]then
call caw(P3,"when calling LLIterator in LinkedList, line 450")
endif
set Zb=Zb-1-1
endfunction
function a5 takes integer p5,integer e5 returns nothing
local integer q5
set Ac[p5]=Ac[p5]-1.
set q5=0
set e5=23
loop
exitwhen q5>e5
call MultiboardSetTitleText(OO[q5],"Income: "+I2S(R2I(Ac[p5]/60.))+":"+I2S(R2I(ModuloReal(Ac[p5],60.)/10.))+I2S(R2I(ModuloReal(ModuloReal(Ac[p5],60.),10.))))
set q5=q5+1
endloop
if Ac[p5]<=0. then
set Ac[p5]=120.0
endif
endfunction
function b1 takes integer C3,integer V3,string B3 returns nothing
local integer N3
local real M3
local integer w1
local real u1
local integer r1
local real s1
local integer t1
local real i1
local real S1
local integer c1
local integer o1
local integer O1
local integer l1
set Ub[Zb]=B3
set Zb=Zb+1
set M3=gS[Bqw(RS,2,"when calling get in City, line 143")]
if GetRandomReal(0.0,1.0)<=M3 then
set w1=Oc[C3]
set Ub[Zb]="when calling addModifier in City, line 144"
set Zb=Zb+1
if Zl[w1]==0 then
if w1==0 then
call K8("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call K8("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call GN(w1,2,"when calling addModifier in City, line 355")
set Zb=Zb-1
endif
set u1=gS[Bqw(RS,5,"when calling get in City, line 145")]
if GetRandomReal(0.0,1.0)<=u1 then
set r1=Oc[C3]
set Ub[Zb]="when calling addModifier in City, line 146"
set Zb=Zb+1
if Zl[r1]==0 then
if r1==0 then
call K8("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call K8("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call GN(r1,5,"when calling addModifier in City, line 355")
set Zb=Zb-1
endif
set s1=gS[Bqw(RS,7,"when calling get in City, line 147")]
if GetRandomReal(0.0,1.0)<=s1 then
set t1=Oc[C3]
set Ub[Zb]="when calling addModifier in City, line 148"
set Zb=Zb+1
if Zl[t1]==0 then
if t1==0 then
call K8("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call K8("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call GN(t1,7,"when calling addModifier in City, line 355")
set Zb=Zb-1
endif
set i1=gS[Bqw(RS,3,"when calling get in City, line 149")]
if GetRandomReal(0.0,1.0)<=i1 then
set V3=Oc[C3]
set Ub[Zb]="when calling addModifier in City, line 150"
set Zb=Zb+1
if Zl[V3]==0 then
if V3==0 then
call K8("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call K8("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call GN(V3,3,"when calling addModifier in City, line 355")
set Zb=Zb-1
endif
set S1=gS[Bqw(RS,4,"when calling get in City, line 151")]
if GetRandomReal(0.0,1.0)<=S1 then
set c1=Oc[C3]
set Ub[Zb]="when calling addModifier in City, line 152"
set Zb=Zb+1
if Zl[c1]==0 then
if c1==0 then
call K8("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call K8("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call GN(c1,4,"when calling addModifier in City, line 355")
set Zb=Zb-1
endif
set o1=cc[Oc[C3]]
set Ub[Zb]="when calling iterator in City, line 154"
set Zb=Zb+1
set O1=cww(o1,"when calling new_LLIterator in LinkedList, line 165")
set Zb=Zb-1
set N3=O1
loop
exitwhen Go[ho[N3]]==go[N3]
set ho[N3]=Go[ho[N3]]
set l1=Oc[C3]
set Ub[Zb]="when calling getCityModifierOnLongCount in City, line 155"
set Zb=Zb+1
if Zl[l1]==0 then
if l1==0 then
call K8("Nullpointer exception when calling City.getCityModifierOnLongCount","when calling error in City, line 402")
else
call K8("Called City.getCityModifierOnLongCount on invalid object.","when calling error in City, line 402")
endif
endif
set Zb=Zb-1
endloop
set Ub[Zb]="when calling close in City, line 154"
set Zb=Zb+1
if ko[N3]then
call caw(N3,"when calling LLIterator in LinkedList, line 450")
endif
set Zb=Zb-1-1
endfunction
function G4 takes integer f4,string R4 returns nothing
local integer T4
local integer Y4
set Ub[Zb]=R4
set Zb=Zb+1
set T4=0
set Y4=bj_MAX_PLAYER_SLOTS-1
loop
exitwhen T4>Y4
set jc[xc]=f4
set xc=xc+1
call GroupEnumUnitsOfPlayer(kc,TO[T4],vc)
call GroupClear(kc)
set xc=xc-1
set T4=T4+1
endloop
call Lew(f4,"when calling ForGroupCallback in ClosureForGroups, line 66")
set Zb=Zb-1
endfunction
function q7 takes string s7 returns nothing
local integer t7
local integer i7
local integer S7
local integer c7
local integer o7
local real O7
local integer l7
local integer b7
local integer y7
local integer p7
local integer e7
set Ub[Zb]=s7
set Zb=Zb+1
set t7=0
set i7=23
loop
exitwhen t7>i7
set Lc[t7]=0
set Xc[t7]=0
set t7=t7+1
endloop
set S7=R2I(vS*0.5/10.0)+1
set c7=0
set o7=R2I(20)-1
loop
exitwhen c7>o7
set O7=c7*0.5
set Ub[Zb]="when calling alloc_Closure in Economy, line 29"
set Zb=Zb+1
if Hl==0 then
if Jl<32768 then
set Jl=Jl+1
set l7=Jl
set Kl[l7]=644
else
call K8("Out of memory: Could not create Closure.","when calling error in Economy, line 29")
set l7=0
endif
else
set Hl=Hl-1
set l7=Dl[Hl]
set Kl[l7]=644
endif
set Zb=Zb-1
set Vc[l7]=c7
set Bc[l7]=S7
set Ub[Zb]="when calling doAfter in Economy, line 29"
set Zb=Zb+1
call yqw(l7,O7,"when calling start in ClosureTimers, line 15")
set Zb=Zb-1
set b7=vS-1
set y7=(c7+1)*S7-1
if b7<2147483647 then
set p7=b7
else
set p7=2147483647
endif
if y7<p7 then
set p7=y7
endif
exitwhen p7==vS-1
set c7=c7+1
endloop
set Ub[Zb]="when calling alloc_Closure in Economy, line 38"
set Zb=Zb+1
if Il==0 then
if Pl<32768 then
set Pl=Pl+1
set e7=Pl
set Al[e7]=684
else
call K8("Out of memory: Could not create Closure.","when calling error in Economy, line 38")
set e7=0
endif
else
set Il=Il-1
set e7=Ul[Il]
set Al[e7]=684
endif
set Zb=Zb-1
call G4(e7,"when calling forUnitsAll in Economy, line 38")
set Zb=Zb-1
endfunction
function m8 takes integer c8,integer o8,string O8 returns nothing
local integer l8
local multiboard b8
local integer y8
local integer p8
local integer e8
local integer q8
local integer a8
local boolean n8
local integer d8
local integer f8
local integer R8
local integer T8
local string Y8
local integer G8
local integer g8
local integer h8
local boolean F8
local integer k8
local integer j8
local player x8
local playerstate v8
set Ub[Zb]=O8
set Zb=Zb+1
set Cc=Cc+1
set l8=0
set c8=23
loop
exitwhen l8>c8
set a8=qO[l8]
set Ub[Zb]="when calling isInGame in Economy, line 53"
set Zb=Zb+1
if vb[a8]==0 then
if a8==0 then
call K8("Nullpointer exception when calling PlayerStats.isInGame","when calling error in PlayerStats, line 14")
else
call K8("Called PlayerStats.isInGame on invalid object.","when calling error in PlayerStats, line 14")
endif
endif
set n8=dO[a8]
set Zb=Zb-1
if n8 then
set b8=OO[l8]
set d8=uO[0]
set f8=uO[1]
set O8=NOw(Lc[l8])
call MultiboardSetItemValue(MultiboardGetItem(b8,f8,d8),O8)
set R8=rO[0]
set T8=rO[1]
set G8=qO[l8]
set Ub[Zb]="when calling getUpkeep in Economy, line 56"
set Zb=Zb+1
if vb[G8]==0 then
if G8==0 then
call K8("Nullpointer exception when calling PlayerStats.getUpkeep","when calling error in PlayerStats, line 20")
else
call K8("Called PlayerStats.getUpkeep on invalid object.","when calling error in PlayerStats, line 20")
endif
endif
set g8=RO[G8]
set Zb=Zb-1
set Y8=NOw(g8)
call MultiboardSetItemValue(MultiboardGetItem(b8,T8,R8),Y8)
endif
set l8=l8+1
endloop
if Cc==R2I(12) then
set Cc=0
set y8=0
set p8=23
loop
exitwhen y8>p8
set h8=qO[y8]
set Ub[Zb]="when calling isInGame in Economy, line 61"
set Zb=Zb+1
if vb[h8]==0 then
if h8==0 then
call K8("Nullpointer exception when calling PlayerStats.isInGame","when calling error in PlayerStats, line 14")
else
call K8("Called PlayerStats.isInGame on invalid object.","when calling error in PlayerStats, line 14")
endif
endif
set F8=dO[h8]
set Zb=Zb-1
if F8 then
set e8=GetPlayerState(TO[y8],PLAYER_STATE_RESOURCE_GOLD)
set q8=GetPlayerState(TO[y8],PLAYER_STATE_RESOURCE_LUMBER)
set x8=TO[y8]
set v8=PLAYER_STATE_RESOURCE_GOLD
set o8=e8+Lc[y8]
set k8=qO[y8]
set Ub[Zb]="when calling getUpkeep in Economy, line 64"
set Zb=Zb+1
if vb[k8]==0 then
if k8==0 then
call K8("Nullpointer exception when calling PlayerStats.getUpkeep","when calling error in PlayerStats, line 20")
else
call K8("Called PlayerStats.getUpkeep on invalid object.","when calling error in PlayerStats, line 20")
endif
endif
set j8=RO[k8]
set Zb=Zb-1
call SetPlayerState(x8,v8,o8+j8)
call SetPlayerState(TO[y8],PLAYER_STATE_RESOURCE_LUMBER,q8+Xc[y8])
endif
set y8=y8+1
endloop
endif
call q7("when calling countIncomeForAll in Economy, line 68")
set Zb=Zb-1
set b8=null
set x8=null
set v8=null
endfunction
function rqw takes integer New,integer Mew,string wqw returns nothing
local force uqw
set Ub[Zb]=wqw
set Zb=Zb+1
if Vl[New]==0 then
if New==0 then
call K8("Nullpointer exception when calling CallbackPeriodic.call","when calling error in ClosureTimers, line 86")
else
call K8("Called CallbackPeriodic.call on invalid object.","when calling error in ClosureTimers, line 86")
endif
endif
if Vl[New]<=634 then
if Vl[New]<=632 then
if Vl[New]<=631 then
call X3(New,Mew,"when calling City_closure_impl in ClosureTimers, line 86")
else
call b1(New,Mew,"when calling City_closure_impl in ClosureTimers, line 86")
endif
elseif Vl[New]<=633 then
set uqw=bj_FORCE_ALL_PLAYERS
if IsPlayerInForce(GetLocalPlayer(),uqw) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,20.0,"Enjoying the map? Join the |cffe100ffofficial CoE discord channel|r! Link: |cffffff00discord.gg/V6kmxsy|r")
endif
else
call a5(New,Mew)
endif
elseif Vl[New]<=636 then
if Vl[New]<=635 then
call S8(New,Mew,"when calling Economy_closure_impl in ClosureTimers, line 86")
else
call m8(New,Mew,"when calling Economy_closure_impl in ClosureTimers, line 86")
endif
else
call Lrw(New,Mew,"when calling MultiboardCityUpdate_closure_impl in ClosureTimers, line 86")
endif
set Zb=Zb-1
set uqw=null
endfunction
function Cfw takes nothing returns nothing
local integer Xfw
set Zb=0
set Ub[Zb]="ClosureTimers, line 91"
set Zb=Zb+1
set Xfw=Plw(GetExpiredTimer(),"when calling getData in ClosureTimers, line 94")
call rqw(Xfw,Xfw,"when calling call in ClosureTimers, line 95")
set Zb=Zb-1
endfunction
function Xm takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function Cm takes nothing returns boolean
if not Xm() then
return false
endif
return true
endfunction
function D1 takes nothing returns nothing
call TriggerRegisterUnitEvent(bc,ll,EVENT_UNIT_DAMAGED)
endfunction
function DA takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990607,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990583,0)
endfunction
function AI takes nothing returns boolean
if GetResearched()!=1378890033 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890033,true)!=2 then
return false
endif
return true
endfunction
function DI takes nothing returns boolean
if not AI() then
return false
endif
return true
endfunction
function AX takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747988531 then
return false
endif
return true
endfunction
function DX takes nothing returns boolean
if not AX() then
return false
endif
return true
endfunction
function A0w takes integer Z0w returns nothing
local unit U0w=GetConstructingStructure()
local player I0w
local player P0w
if GetUnitTypeId(U0w)==1747990614 then
set I0w=GetOwningPlayer(U0w)
set P0w=GetOwningPlayer(U0w)
set do[GetPlayerId(I0w)]=do[GetPlayerId(P0w)]-1
endif
set U0w=null
set I0w=null
set P0w=null
endfunction
function C0w takes integer D0w,string H0w returns nothing
local unit J0w
local player K0w
local player L0w
local player X0w
set Ub[Zb]=H0w
set Zb=Zb+1
set J0w=GetConstructingStructure()
if GetUnitTypeId(J0w)==1747990614 then
if do[GetPlayerId(GetOwningPlayer(J0w))]<3 then
set K0w=GetOwningPlayer(J0w)
set L0w=GetOwningPlayer(J0w)
set do[GetPlayerId(K0w)]=do[GetPlayerId(L0w)]+1
else
set X0w=GetOwningPlayer(J0w)
set Ub[Zb]="when calling attentionToPlayer in LimitMercenaryCamps, line 18"
set Zb=Zb+1
call DisplayTimedTextToPlayer(X0w,0.,0.,10.0,wrw(X0w,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(X0w,0.,0.,10.0,"You cannot build more than 3 mercenary camps.")
set Zb=Zb-1
set Ub[Zb]="when calling alloc_Closure in LimitMercenaryCamps, line 19"
set Zb=Zb+1
if Hl==0 then
if Jl<32768 then
set Jl=Jl+1
set D0w=Jl
set Kl[D0w]=646
else
call K8("Out of memory: Could not create Closure.","when calling error in LimitMercenaryCamps, line 19")
set D0w=0
endif
else
set Hl=Hl-1
set D0w=Dl[Hl]
set Kl[D0w]=646
endif
set Zb=Zb-1
set fo[D0w]=J0w
set Ub[Zb]="when calling doAfter in LimitMercenaryCamps, line 19"
set Zb=Zb+1
call yqw(D0w,0.01,"when calling start in ClosureTimers, line 15")
set Zb=Zb-1
endif
endif
set Zb=Zb-1
set J0w=null
set K0w=null
set L0w=null
set X0w=null
endfunction
function gww takes string Yww_2 returns integer
local integer Gww
set Ub[Zb]=Yww_2
set Zb=Zb+1
set Ub[Zb]="when calling LinkedList in LinkedList, line 31"
set Zb=Zb+1
if Yb==0 then
if Gb<32768 then
set Gb=Gb+1
set Gww=Gb
set gb[Gww]=701
else
call K8("Out of memory: Could not create LinkedList.","when calling error in LinkedList, line 17")
set Gww=0
endif
else
set Yb=Yb-1
set Gww=Tb[Yb]
set gb[Gww]=701
endif
set Zb=Zb-1
set Ub[Zb]="when calling construct_LinkedList2 in LinkedList, line 31"
set Zb=Zb+1
set jo[Gww]=sww(0,0,0,"when calling new_LLEntry in LinkedList, line 18")
set xo[Gww]=0
set Go[jo[Gww]]=jo[Gww]
set Yo[jo[Gww]]=jo[Gww]
set Zb=Zb-1-1
return Gww
endfunction
function Cww takes integer Pww,string Aww returns nothing
local unit Dww
local player Hww
local real Jww
local integer Kww
local real Lww
local real Xww
set Ub[Zb]=Aww
set Zb=Zb+1
if GetSpellAbilityId()==1093678154 then
set Pww=gww("when calling new_LinkedList in MassControl, line 24")
set Dww=GetSpellAbilityUnit()
set Hww=GetOwningPlayer(Dww)
set Lww=GetSpellTargetX()
set Xww=GetSpellTargetY()
set Jww=Raw(Jo,GetLearnedSkillLevel(),"when calling get in MassControl, line 27")/1000.
set Ub[Zb]="when calling alloc_Closure in MassControl, line 27"
set Zb=Zb+1
if Il==0 then
if Pl<32768 then
set Pl=Pl+1
set Kww=Pl
set Al[Kww]=686
else
call K8("Out of memory: Could not create Closure.","when calling error in MassControl, line 27")
set Kww=0
endif
else
set Il=Il-1
set Kww=Ul[Il]
set Al[Kww]=686
endif
set Zb=Zb-1
set Lo[Kww]=Hww
set Xo[Kww]=Dww
set Co[Kww]=Pww
call x4(Lww,Xww,Jww,Kww,"when calling forUnitsInRange in MassControl, line 27")
call Kqw(Ho,GetHandleId(Dww),Pww,"when calling put in MassControl, line 30")
endif
set Zb=Zb-1
set Dww=null
set Hww=null
endfunction
function F0w takes integer R0w,string T0w returns nothing
local unit Y0w
local player G0w
local player g0w
local player h0w
set Ub[Zb]=T0w
set Zb=Zb+1
set Y0w=GetConstructingStructure()
if GetUnitTypeId(Y0w)==1747988808 then
if ao[GetPlayerId(GetOwningPlayer(Y0w))]<3 then
set G0w=GetOwningPlayer(Y0w)
set g0w=GetOwningPlayer(Y0w)
set ao[GetPlayerId(G0w)]=ao[GetPlayerId(g0w)]+1
else
set h0w=GetOwningPlayer(Y0w)
set Ub[Zb]="when calling attentionToPlayer in LimitEncampments, line 18"
set Zb=Zb+1
call DisplayTimedTextToPlayer(h0w,0.,0.,10.0,wrw(h0w,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(h0w,0.,0.,10.0,"You cannot build more than 3 encampments.")
set Zb=Zb-1
set Ub[Zb]="when calling alloc_Closure in LimitEncampments, line 19"
set Zb=Zb+1
if Hl==0 then
if Jl<32768 then
set Jl=Jl+1
set R0w=Jl
set Kl[R0w]=645
else
call K8("Out of memory: Could not create Closure.","when calling error in LimitEncampments, line 19")
set R0w=0
endif
else
set Hl=Hl-1
set R0w=Dl[Hl]
set Kl[R0w]=645
endif
set Zb=Zb-1
set no[R0w]=Y0w
set Ub[Zb]="when calling doAfter in LimitEncampments, line 19"
set Zb=Zb+1
set Ub[Zb]="when calling start in ClosureTimers, line 15"
set Zb=Zb+1
if Kl[R0w]==0 then
if R0w==0 then
call K8("Nullpointer exception when calling CallbackSingle.start","when calling error in ClosureTimers, line 67")
else
call K8("Called CallbackSingle.start on invalid object.","when calling error in ClosureTimers, line 67")
endif
endif
call A4(R0w,0.01,"when calling start in ClosureTimers, line 67")
set Zb=Zb-1-1
endif
endif
set Zb=Zb-1
set Y0w=null
set G0w=null
set g0w=null
set h0w=null
endfunction
function Bbw takes unit Jbw,unit Kbw returns real
local real Lbw=GetUnitX(Jbw)
local real Xbw=GetUnitY(Jbw)
local real Cbw=Lbw-GetUnitX(Kbw)
local real Vbw=Xbw-GetUnitY(Kbw)
return SquareRoot(Cbw*Cbw+Vbw*Vbw)
endfunction
function Kow takes integer Gow,string gow returns nothing
local unit how
local integer Fow
local player kow
local group jow
local integer xow
local boolean vow
local location mow
local group Qow
local unit Wow
local integer Eow
local boolean Zow
local integer Uow
local integer Iow
local boolean Aow
local boolean Dow
local boolean How
local boolean Jow
set Ub[Zb]=gow
set Zb=Zb+1
set how=GetTriggerUnit()
set Fow=GetUnitTypeId(how)
set xow=vO
set Ub[Zb]="when calling has in RangeChecks, line 14"
set Zb=Zb+1
if gb[xow]==0 then
if xow==0 then
call K8("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call K8("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set vow=aww(xow,Fow)
set Zb=Zb-1
if vow then
set kow=GetOwningPlayer(how)
set mow=GetUnitLoc(how)
set Qow=CreateGroup()
call GroupEnumUnitsInRangeOfLoc(Qow,mow,2000.0,null)
call DestroyBoolExpr(null)
set lo=CreateGroup()
call ForGroup(Qow,Xf)
set jow=lo
loop
exitwhen FirstOfGroup(jow)==null
set Wow=FirstOfGroup(jow)
call GroupRemoveUnit(jow,Wow)
if GetOwningPlayer(Wow)==kow and Wow!=how then
if GetUnitTypeId(Wow)==Fow and Bbw(Wow,how)<=1500 then
set How=true
else
set Eow=dl
set Ub[Zb]="when calling has in RangeChecks, line 21"
set Zb=Zb+1
if gb[Eow]==0 then
if Eow==0 then
call K8("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call K8("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set Zow=aww(Eow,Fow)
set Zb=Zb-1
if Zow then
set Uow=dl
set Iow=GetUnitTypeId(Wow)
set Ub[Zb]="when calling has in RangeChecks, line 21"
set Zb=Zb+1
if gb[Uow]==0 then
if Uow==0 then
call K8("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call K8("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set Aow=aww(Uow,Iow)
set Zb=Zb-1
set Dow=Aow
else
set Dow=false
endif
set How=Dow
endif
set Jow=How
else
set Jow=false
endif
if Jow then
set Ub[Zb]="when calling alloc_Closure in RangeChecks, line 23"
set Zb=Zb+1
if Hl==0 then
if Jl<32768 then
set Jl=Jl+1
set Gow=Jl
set Kl[Gow]=652
else
call K8("Out of memory: Could not create Closure.","when calling error in RangeChecks, line 23")
set Gow=0
endif
else
set Hl=Hl-1
set Gow=Dl[Hl]
set Kl[Gow]=652
endif
set Zb=Zb-1
set mO[Gow]=how
set Ub[Zb]="when calling doAfter in RangeChecks, line 23"
set Zb=Zb+1
call yqw(Gow,0.01,"when calling start in ClosureTimers, line 15")
set Zb=Zb-1
if Fow==1747988557 then
set Ub[Zb]="when calling attentionToPlayer in RangeChecks, line 27"
set Zb=Zb+1
call DisplayTimedTextToPlayer(kow,0.,0.,10.0,wrw(kow,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(kow,0.,0.,10.0,"You cannot build settlements too close to each other.")
set Zb=Zb-1
elseif Fow==1747989075 then
set Ub[Zb]="when calling attentionToPlayer in RangeChecks, line 29"
set Zb=Zb+1
call DisplayTimedTextToPlayer(kow,0.,0.,10.0,wrw(kow,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(kow,0.,0.,10.0,"You cannot build churches too close to each other.")
set Zb=Zb-1
elseif Fow==1747990102 then
set Ub[Zb]="when calling attentionToPlayer in RangeChecks, line 31"
set Zb=Zb+1
call DisplayTimedTextToPlayer(kow,0.,0.,10.0,wrw(kow,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(kow,0.,0.,10.0,"You cannot build churches too close to each other.")
set Zb=Zb-1
elseif Fow==1747988785 then
set Ub[Zb]="when calling attentionToPlayer in RangeChecks, line 33"
set Zb=Zb+1
call DisplayTimedTextToPlayer(kow,0.,0.,10.0,wrw(kow,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(kow,0.,0.,10.0,"You cannot build churches too close to each other.")
set Zb=Zb-1
elseif Fow==1747989839 then
set Ub[Zb]="when calling attentionToPlayer in RangeChecks, line 35"
set Zb=Zb+1
call DisplayTimedTextToPlayer(kow,0.,0.,10.0,wrw(kow,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(kow,0.,0.,10.0,"You cannot build mosques too close to each other.")
set Zb=Zb-1
elseif Fow==1747989059 then
set Ub[Zb]="when calling attentionToPlayer in RangeChecks, line 37"
set Zb=Zb+1
call DisplayTimedTextToPlayer(kow,0.,0.,10.0,wrw(kow,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(kow,0.,0.,10.0,"You cannot build castles too close to each other.")
set Zb=Zb-1
elseif Fow==1747989331 then
set gow="You cannot build castles too close to each other."
set Ub[Zb]="when calling attentionToPlayer in RangeChecks, line 39"
set Zb=Zb+1
call DisplayTimedTextToPlayer(kow,0.,0.,10.0,wrw(kow,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(kow,0.,0.,10.0,"You cannot build castles too close to each other.")
set Zb=Zb-1
elseif Fow==1747990351 then
set Ub[Zb]="when calling attentionToPlayer in RangeChecks, line 41"
set Zb=Zb+1
call DisplayTimedTextToPlayer(kow,0.,0.,10.0,wrw(kow,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(kow,0.,0.,10.0,"You cannot build castles too close to each other.")
set Zb=Zb-1
elseif Fow==1747990353 then
set Ub[Zb]="when calling attentionToPlayer in RangeChecks, line 43"
set Zb=Zb+1
call DisplayTimedTextToPlayer(kow,0.,0.,10.0,wrw(kow,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(kow,0.,0.,10.0,"You cannot build castles too close to each other.")
set Zb=Zb-1
elseif Fow==1747988568 then
set Ub[Zb]="when calling attentionToPlayer in RangeChecks, line 45"
set Zb=Zb+1
call DisplayTimedTextToPlayer(kow,0.,0.,10.0,wrw(kow,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(kow,0.,0.,10.0,"You cannot build inns too close to each other.")
set Zb=Zb-1
elseif Fow==1747990341 then
set Ub[Zb]="when calling attentionToPlayer in RangeChecks, line 47"
set Zb=Zb+1
call DisplayTimedTextToPlayer(kow,0.,0.,10.0,wrw(kow,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(kow,0.,0.,10.0,"You cannot build inns too close to each other.")
set Zb=Zb-1
endif
exitwhen true
endif
endloop
call GroupClear(jow)
call DestroyGroup(jow)
endif
set Zb=Zb-1
set how=null
set kow=null
set jow=null
set mow=null
set Qow=null
set Wow=null
endfunction
function E4 takes integer m4,real Q4,string W4 returns nothing
set Ub[Zb]=W4
set Zb=Zb+1
set Qc[m4]=Hlw("when calling getTimer in ClosureTimers, line 89")
call Qlw(Qc[m4],m4,"when calling setData in ClosureTimers, line 90")
call TimerStart(Qc[m4],Q4,true,Wf)
set Zb=Zb-1
endfunction
function huw takes real Ruw,real Tuw,real Yuw,real Guw,real guw returns real
set Yuw=GetRandomReal(Yuw,Guw)
return (Ruw+Tuw)/2.+fuw(Yuw)*Pow(2.718281828,-(Pow(Yuw,2.)/2.*guw))/SquareRoot(6.283185482*guw)*((Tuw-Ruw)/2.)
endfunction
function Q3 takes integer n3,unit d3,string f3,integer R3,integer T3,string Y3 returns nothing
local real G3
local real g3
local unit h3
local player F3
local real k3
local integer j3
local integer x3
local real v3
local real m3
set Ub[Zb]=Y3
set Zb=Zb+1
set ic[n3]=0
set Sc[n3]=0.
set cc[n3]=gww("when calling new_LinkedList in City, line 103")
set tc[n3]=1.0
set KS[n3]=d3
set h3=KS[n3]
set v3=GetUnitX(h3)
set m3=GetUnitY(h3)
set BS[n3]=v3
set NS[n3]=m3
set LS[n3]=f3
set CS[n3]=R3
set F3=GetOwningPlayer(KS[n3])
set VS[n3]=GetPlayerId(F3)
set LS[n3]=SubString(f3,0,24)
set XS[n3]=vS
set vS=vS+1
set uc[n3]=huw(QS[0],QS[1],-5.0,5.0,0.15)
set k3=huw(Raw(WS[T3],0,"when calling get in City, line 121")*1.,Raw(WS[T3],1,"when calling get in City, line 121")*1.,-5.0,5.0,0.15)
set MS[n3]=R2I(k3)
set sc[n3]=0.
set G3=2.5+GetRandomReal(2.5,5.0)
set Ub[Zb]="when calling alloc_Closure in City, line 126"
set Zb=Zb+1
if Xl==0 then
if Cl<32768 then
set Cl=Cl+1
set j3=Cl
set Vl[j3]=631
else
call K8("Out of memory: Could not create Closure.","when calling error in City, line 126")
set j3=0
endif
else
set Xl=Xl-1
set j3=Ll[Xl]
set Vl[j3]=631
endif
set Zb=Zb-1
set oc[j3]=n3
set Ub[Zb]="when calling doPeriodically in City, line 126"
set Zb=Zb+1
set Ub[Zb]="when calling start in ClosureTimers, line 36"
set Zb=Zb+1
if Vl[j3]==0 then
if j3==0 then
call K8("Nullpointer exception when calling CallbackPeriodic.start","when calling error in ClosureTimers, line 88")
else
call K8("Called CallbackPeriodic.start on invalid object.","when calling error in ClosureTimers, line 88")
endif
endif
call E4(j3,G3,"when calling start in ClosureTimers, line 88")
set Zb=Zb-1-1
set g3=60+GetRandomReal(60,120.0)
set Ub[Zb]="when calling alloc_Closure in City, line 142"
set Zb=Zb+1
if Xl==0 then
if Cl<32768 then
set Cl=Cl+1
set x3=Cl
set Vl[x3]=632
else
call K8("Out of memory: Could not create Closure.","when calling error in City, line 142")
set x3=0
endif
else
set Xl=Xl-1
set x3=Ll[Xl]
set Vl[x3]=632
endif
set Zb=Zb-1
set Oc[x3]=n3
set Ub[Zb]="when calling doPeriodically in City, line 142"
set Zb=Zb+1
set Ub[Zb]="when calling start in ClosureTimers, line 36"
set Zb=Zb+1
if Vl[x3]==0 then
if x3==0 then
call K8("Nullpointer exception when calling CallbackPeriodic.start","when calling error in ClosureTimers, line 88")
else
call K8("Called CallbackPeriodic.start on invalid object.","when calling error in ClosureTimers, line 88")
endif
endif
call E4(x3,g3,"when calling start in ClosureTimers, line 88")
set Zb=Zb-1-1-1
set h3=null
set F3=null
endfunction
function a3 takes unit l3,string b3,integer y3,integer p3,string e3 returns integer
local integer q3
set Ub[Zb]=e3
set Zb=Zb+1
set Ub[Zb]="when calling City in City, line 100"
set Zb=Zb+1
if Wl==0 then
if El<32768 then
set El=El+1
set q3=El
set Zl[q3]=653
else
call K8("Out of memory: Could not create City.","when calling error in City, line 70")
set q3=0
endif
else
set Wl=Wl-1
set q3=Ql[Wl]
set Zl[q3]=653
endif
set Zb=Zb-1
call Q3(q3,l3,b3,y3,p3,"when calling construct_City in City, line 100")
set Zb=Zb-1
return q3
endfunction
function LC takes integer UC,string IC returns nothing
local unit PC
local integer AC
local boolean DC
local integer HC
local integer JC
local unit KC
set Ub[Zb]=IC
set Zb=Zb+1
set PC=GetConstructedStructure()
set Ub[Zb]="when calling isCity in CityBuilded, line 10"
set Zb=Zb+1
set Ub[Zb]="when calling isCity in UnitTools, line 5"
set Zb=Zb+1
set UC=fl
set AC=GetUnitTypeId(PC)
set Ub[Zb]="when calling has in City, line 423"
set Zb=Zb+1
if gb[UC]==0 then
if UC==0 then
call K8("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call K8("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set DC=aww(UC,AC)
set Zb=Zb-1-1-1
if DC then
set KC=GetConstructedStructure()
set HC=qO[GetPlayerId(GetOwningPlayer(GetConstructedStructure()))]
set Ub[Zb]="when calling getForceId in CityBuilded, line 11"
set Zb=Zb+1
if vb[HC]==0 then
if HC==0 then
call K8("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 94")
else
call K8("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 94")
endif
endif
set JC=aO[HC]
set Zb=Zb-1
set PS[vS]=a3(KC,"New",JC,1,"when calling new_City in CityBuilded, line 11")
endif
set Zb=Zb-1
set PC=null
set KC=null
endfunction
function ZSw takes integer QSw,string WSw returns nothing
local force ESw
set Ub[Zb]=WSw
set Zb=Zb+1
set WSw=t2(GetTriggerPlayer())+" has left the game!"
set ESw=bj_FORCE_ALL_PLAYERS
if IsPlayerInForce(GetLocalPlayer(),ESw) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,5.0,WSw)
endif
set QSw=qO[GetPlayerId(GetTriggerPlayer())]
set Ub[Zb]="when calling setInGame in OnPlayerLeave, line 8"
set Zb=Zb+1
if vb[QSw]==0 then
if QSw==0 then
call K8("Nullpointer exception when calling PlayerStats.setInGame","when calling error in PlayerStats, line 17")
else
call K8("Called PlayerStats.setInGame on invalid object.","when calling error in PlayerStats, line 17")
endif
endif
set dO[QSw]=false
set Zb=Zb-1
call SetPlayerName(GetTriggerPlayer(),GetPlayerName(GetTriggerPlayer())+" [LEFT]")
set Zb=Zb-1
set ESw=null
endfunction
function CB takes unit DB,string HB returns integer
local integer JB
local integer KB
local integer LB
local unit XB
set Ub[Zb]=HB
set Zb=Zb+1
set JB=0
set KB=vS-1
loop
exitwhen JB>KB
set LB=PS[JB]
set HB="when calling getCityUnit in City, line 429"
set Ub[Zb]="when calling getCityUnit in City, line 429"
set Zb=Zb+1
if Zl[LB]==0 then
if LB==0 then
call K8("Nullpointer exception when calling City.getCityUnit","when calling error in City, line 176")
else
call K8("Called City.getCityUnit on invalid object.","when calling error in City, line 176")
endif
endif
set XB=KS[LB]
set Zb=Zb-1
if XB==DB then
set Zb=Zb-1
set XB=null
return JB
endif
set JB=JB+1
endloop
set Zb=Zb-1
set XB=null
return -1
endfunction
function jaw takes integer haw,integer Faw,string kaw returns nothing
set Ub[Zb]=kaw
set Zb=Zb+1
if vb[haw]==0 then
if haw==0 then
call K8("Nullpointer exception when calling PlayerStats.setSelectedCityId","when calling error in PlayerStats, line 88")
else
call K8("Called PlayerStats.setSelectedCityId on invalid object.","when calling error in PlayerStats, line 88")
endif
endif
set Ub[Zb]="when calling setSelectedCityId in PlayerStats, line 88"
set Zb=Zb+1
if Faw>=0 and Faw<vS then
set fO[haw]=Faw
set Ub[Zb]="when calling refreshMultiboardCity in PlayerStats, line 91"
set Zb=Zb+1
if vb[haw]==0 then
if haw==0 then
call K8("Nullpointer exception when calling PlayerStats.refreshMultiboardCity","when calling error in PlayerStats, line 43")
else
call K8("Called PlayerStats.refreshMultiboardCity on invalid object.","when calling error in PlayerStats, line 43")
endif
endif
call Icw(haw,"when calling refreshMultiboardCity in PlayerStats, line 43")
set Zb=Zb-1
endif
set Zb=Zb-1-1
endfunction
function aV takes integer bV,string yV returns nothing
local unit pV
local integer eV
local boolean qV
set Ub[Zb]=yV
set Zb=Zb+1
set pV=GetTriggerUnit()
set Ub[Zb]="when calling isCity in CityManage, line 10"
set Zb=Zb+1
set Ub[Zb]="when calling isCity in UnitTools, line 5"
set Zb=Zb+1
set bV=fl
set eV=GetUnitTypeId(pV)
set Ub[Zb]="when calling has in City, line 423"
set Zb=Zb+1
if gb[bV]==0 then
if bV==0 then
call K8("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call K8("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set qV=aww(bV,eV)
set Zb=Zb-1-1-1
if qV then
call jaw(qO[GetPlayerId(GetTriggerPlayer())],CB(GetTriggerUnit(),"when calling getCityId in CityManage, line 11"),"when calling setSelectedCityId in CityManage, line 11")
endif
set Zb=Zb-1
set pV=null
endfunction
function lbw takes integer tbw,string ibw returns unit
local integer Sbw
local fogstate cbw
local integer obw
local unit Obw
set Ub[Zb]=ibw
set Zb=Zb+1
set Sbw=cl
set cbw=ConvertFogState(tbw)
set Ub[Zb]="when calling saveFogState in TypeCasting, line 46"
set Zb=Zb+1
if lb[Sbw]==0 then
if Sbw==0 then
call K8("Nullpointer exception when calling Table.saveFogState","when calling error in Table, line 168")
else
call K8("Called Table.saveFogState on invalid object.","when calling error in Table, line 168")
endif
endif
call SaveFogStateHandle(sl,Sbw,0,cbw)
set Zb=Zb-1
set obw=cl
set Ub[Zb]="when calling loadUnit in TypeCasting, line 47"
set Zb=Zb+1
if lb[obw]==0 then
if obw==0 then
call K8("Nullpointer exception when calling Table.loadUnit","when calling error in Table, line 75")
else
call K8("Called Table.loadUnit on invalid object.","when calling error in Table, line 75")
endif
endif
set Obw=LoadUnitHandle(sl,obw,0)
set Zb=Zb-1-1
set rR=Obw
set cbw=null
set Obw=null
return rR
endfunction
function auw takes integer tuw,string iuw returns nothing
local integer Suw
local integer cuw
local real ouw
local real Ouw
local integer luw
local unit buw
local integer yuw
local boolean puw
local integer euw
local integer quw
set Ub[Zb]=iuw
set Zb=Zb+1
set yuw=Ko
set tuw=GetUnitTypeId(GetOrderedUnit())
set Ub[Zb]="when calling has in MassControl, line 33"
set Zb=Zb+1
if gb[yuw]==0 then
if yuw==0 then
call K8("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call K8("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set puw=aww(yuw,tuw)
set Zb=Zb-1
if puw then
if Pqw(Ho,GetHandleId(GetOrderedUnit()),"when calling has in MassControl, line 34") then
set Suw=Bqw(Ho,GetHandleId(GetOrderedUnit()),"when calling get in MassControl, line 35")
set cuw=GetIssuedOrderId()
set ouw=GetOrderPointX()
set Ouw=GetOrderPointY()
set Ub[Zb]="when calling iterator in MassControl, line 38"
set Zb=Zb+1
set euw=cww(Suw,"when calling new_LLIterator in LinkedList, line 165")
set Zb=Zb-1
set luw=euw
loop
exitwhen Go[ho[luw]]==go[luw]
set ho[luw]=Go[ho[luw]]
set buw=lbw(To[ho[luw]],"when calling unitFromIndex in MassControl, line 38")
set Ub[Zb]="when calling alloc_Closure in MassControl, line 39"
set Zb=Zb+1
if Hl==0 then
if Jl<32768 then
set Jl=Jl+1
set quw=Jl
set Kl[quw]=647
else
call K8("Out of memory: Could not create Closure.","when calling error in MassControl, line 39")
set quw=0
endif
else
set Hl=Hl-1
set quw=Dl[Hl]
set Kl[quw]=647
endif
set Zb=Zb-1
set Vo[quw]=buw
set Bo[quw]=cuw
set No[quw]=ouw
set Mo[quw]=Ouw
set Ub[Zb]="when calling doAfter in MassControl, line 39"
set Zb=Zb+1
call yqw(quw,0.01,"when calling start in ClosureTimers, line 15")
set Zb=Zb-1
endloop
set Ub[Zb]="when calling close in MassControl, line 38"
set Zb=Zb+1
if ko[luw]then
call caw(luw,"when calling LLIterator in LinkedList, line 450")
endif
set Zb=Zb-1
call uaw(Ho,GetHandleId(GetOrderedUnit()),"when calling remove in MassControl, line 42")
endif
endif
set Zb=Zb-1
set buw=null
endfunction
function f0w takes integer q0w returns nothing
local unit a0w=GetConstructingStructure()
local player n0w
local player d0w
if GetUnitTypeId(a0w)==1747988808 then
set n0w=GetOwningPlayer(a0w)
set d0w=GetOwningPlayer(a0w)
set ao[GetPlayerId(n0w)]=ao[GetPlayerId(d0w)]-1
endif
set a0w=null
set n0w=null
set d0w=null
endfunction
function fpw takes integer ypw,string ppw returns nothing
local unit epw
local integer qpw
local player apw
local integer npw
local boolean dpw
set Ub[Zb]=ppw
set Zb=Zb+1
set epw=GetDyingUnit()
set qpw=GetPlayerId(GetOwningPlayer(epw))
set apw=TO[qpw]
if GetPlayerSlotState(apw)==PLAYER_SLOT_STATE_PLAYING then
set dpw=GetPlayerController(apw)==MAP_CONTROL_USER
else
set dpw=false
endif
if dpw and(not IsUnitType(epw,UNIT_TYPE_STRUCTURE)) then
set ypw=qO[qpw]
set npw=GetUnitLevel(epw)
set Ub[Zb]="when calling changeUpkeep in Upkeep, line 32"
set Zb=Zb+1
if vb[ypw]==0 then
if ypw==0 then
call K8("Nullpointer exception when calling PlayerStats.changeUpkeep","when calling error in PlayerStats, line 23")
else
call K8("Called PlayerStats.changeUpkeep on invalid object.","when calling error in PlayerStats, line 23")
endif
endif
set RO[ypw]=RO[ypw]+npw
set Zb=Zb-1
endif
set Zb=Zb-1
set epw=null
set apw=null
endfunction
function gSw takes integer TSw returns nothing
local boolean YSw
local boolean GSw
if GetIssuedOrderId()==852056 and(not IsUnitType(GetOrderedUnit(),UNIT_TYPE_STRUCTURE)) then
set YSw=GetUnitTypeId(GetOrderedUnit())!=1747988813
else
set YSw=false
endif
if YSw then
call UnitRemoveAbility(GetOrderedUnit(),1093677904)
endif
if GetIssuedOrderId()==851972 and(not IsUnitType(GetOrderedUnit(),UNIT_TYPE_STRUCTURE)) then
set GSw=GetUnitTypeId(GetOrderedUnit())!=1747988813
else
set GSw=false
endif
if GSw then
call UnitAddAbility(GetOrderedUnit(),1093677904)
endif
endfunction
function nM takes integer pM,integer eM,string qM returns nothing
local player aM
set Ub[Zb]=qM
set Zb=Zb+1
if Zo-Sc[pM]>=mS then
set Sc[pM]=Zo
set sc[pM]=sc[pM]-ZS[ic[pM]]
set sc[pM]=sc[pM]+ZS[eM]
set ic[pM]=eM
else
set aM=TO[VS[pM]]
set Ub[Zb]="when calling noteToPlayer in City, line 258"
set Zb=Zb+1
call DisplayTimedTextToPlayer(aM,0.,0.,10.0,Auw(aM,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(aM,0.,0.,10.0,"Wait 1 turn to be able to change tax level.")
set Zb=Zb-1
endif
set Zb=Zb-1
set aM=null
endfunction
function hlw takes integer elw,string qlw returns nothing
local integer alw
local integer nlw
local integer dlw
local boolean flw
local unit Rlw
local integer Tlw
local integer Ylw
local boolean Glw
local integer glw
set Ub[Zb]=qlw
set Zb=Zb+1
set nlw=cS
set dlw=GetSpellAbilityId()
set Ub[Zb]="when calling has in Taxation, line 7"
set Zb=Zb+1
if gb[nlw]==0 then
if nlw==0 then
call K8("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call K8("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set flw=aww(nlw,dlw)
set Zb=Zb-1
if flw then
set Rlw=GetSpellTargetUnit()
set Ub[Zb]="when calling isCity in Taxation, line 8"
set Zb=Zb+1
set Tlw=fl
set Ylw=GetUnitTypeId(Rlw)
set Ub[Zb]="when calling has in City, line 423"
set Zb=Zb+1
if gb[Tlw]==0 then
if Tlw==0 then
call K8("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call K8("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set Glw=aww(Tlw,Ylw)
set Zb=Zb-1-1
if Glw then
if GetOwningPlayer(GetSpellTargetUnit())==GetOwningPlayer(GetSpellAbilityUnit()) then
set alw=0
set elw=GetSpellAbilityId()
if elw==1093677642 then
set alw=1
elseif elw==1093677641 then
set alw=0
elseif elw==1093677640 then
set alw=2
elseif elw==1093678155 then
set alw=3
endif
set glw=PS[CB(GetSpellTargetUnit(),"when calling getCityId in Taxation, line 20")]
set Ub[Zb]="when calling changeTaxLevel in Taxation, line 20"
set Zb=Zb+1
if Zl[glw]==0 then
if glw==0 then
call K8("Nullpointer exception when calling City.changeTaxLevel","when calling error in City, line 249")
else
call K8("Called City.changeTaxLevel on invalid object.","when calling error in City, line 249")
endif
endif
call nM(glw,alw,"when calling changeTaxLevel in City, line 249")
set Zb=Zb-1
endif
endif
endif
set Zb=Zb-1
set Rlw=null
endfunction
function EB takes integer QB,integer WB returns integer
if QB==1 then
if WB==0 then
return 1747989059
elseif WB==1 then
return 1747990351
elseif WB==2 then
return 1747989331
elseif WB==3 then
return 1747990353
else
return 1747989059
endif
elseif QB==2 then
if WB==0 then
return 1747989060
elseif WB==1 then
return 1747990352
elseif WB==2 then
return 1747990350
elseif WB==3 then
return 1747990354
else
return 1747989060
endif
elseif QB==3 then
if WB==0 then
return 1747988844
elseif WB==1 then
return 1747990356
elseif WB==2 then
return 1747989809
elseif WB==3 then
return 1747990355
else
return 1747988844
endif
elseif WB==0 then
return 1747989059
elseif WB==1 then
return 1747990351
elseif WB==2 then
return 1747989331
elseif WB==3 then
return 1747990353
else
return 1747989059
endif
endfunction
function mB takes integer vB returns integer
if vB==1747989059 then
return 1
elseif vB==1747989060 then
return 2
elseif vB==1747988844 then
return 3
elseif vB==1747990351 then
return 1
elseif vB==1747990352 then
return 2
elseif vB==1747990356 then
return 3
elseif vB==1747989331 then
return 1
elseif vB==1747990350 then
return 2
elseif vB==1747989809 then
return 3
elseif vB==1747990353 then
return 1
elseif vB==1747990354 then
return 2
elseif vB==1747990355 then
return 3
else
return 1
endif
endfunction
function kC takes integer bC,string yC returns nothing
local unit pC
local player eC
local integer qC
local integer aC
local boolean nC
local unit dC
local integer fC
local boolean RC
local real TC
local boolean YC
local integer GC
local real gC
local real hC
local real FC
set Ub[Zb]=yC
set Zb=Zb+1
set pC=GetTriggerUnit()
set qC=dl
set aC=GetUnitTypeId(pC)
set Ub[Zb]="when calling has in CastleCapture, line 11"
set Zb=Zb+1
if gb[qC]==0 then
if qC==0 then
call K8("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call K8("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set nC=aww(qC,aC)
set Zb=Zb-1
if nC then
if GetUnitStatePercent(pC,UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)<=50.0 then
set RC=GetOwningPlayer(pC)!=GetOwningPlayer(GetAttacker())
else
set RC=false
endif
if RC then
set TC=GetUnitX(pC)
set gC=GetUnitY(pC)
set dC=GetAttacker()
set hC=TC-GetUnitX(dC)
set FC=gC-GetUnitY(dC)
set YC=SquareRoot(hC*hC+FC*FC)<=300.0
else
set YC=false
endif
if YC then
set eC=GetOwningPlayer(GetAttacker())
call SetUnitOwner(pC,eC,true)
if GetPlayerId(eC)!=PLAYER_NEUTRAL_AGGRESSIVE then
set GC=mB(GetUnitTypeId(pC))
set bC=qO[GetPlayerId(eC)]
set Ub[Zb]="when calling getForceId in CastleCapture, line 17"
set Zb=Zb+1
if vb[bC]==0 then
if bC==0 then
call K8("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 94")
else
call K8("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 94")
endif
endif
set fC=aO[bC]
set Zb=Zb-1
call ReplaceUnitBJ(pC,EB(GC,fC),bj_UNIT_STATE_METHOD_RELATIVE)
endif
call SetUnitState(pC,UNIT_STATE_LIFE,GetUnitState(pC,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,60.0)*0.01)
call SetUnitState(pC,UNIT_STATE_MANA,GetUnitState(pC,UNIT_STATE_MAX_MANA)*RMaxBJ(0.,0.0)*0.01)
call UnitAddAbility(pC,1093677896)
endif
endif
set Zb=Zb-1
set pC=null
set eC=null
set dC=null
endfunction
function gbw takes integer dbw,string fbw returns rect
local integer Rbw
local fogstate Tbw
local integer Ybw
local rect Gbw
set Ub[Zb]=fbw
set Zb=Zb+1
set Rbw=cl
set Tbw=ConvertFogState(dbw)
set Ub[Zb]="when calling saveFogState in TypeCasting, line 130"
set Zb=Zb+1
if lb[Rbw]==0 then
if Rbw==0 then
call K8("Nullpointer exception when calling Table.saveFogState","when calling error in Table, line 168")
else
call K8("Called Table.saveFogState on invalid object.","when calling error in Table, line 168")
endif
endif
call SaveFogStateHandle(sl,Rbw,0,Tbw)
set Zb=Zb-1
set Ybw=cl
set Ub[Zb]="when calling loadRect in TypeCasting, line 131"
set Zb=Zb+1
if lb[Ybw]==0 then
if Ybw==0 then
call K8("Nullpointer exception when calling Table.loadRect","when calling error in Table, line 147")
else
call K8("Called Table.loadRect on invalid object.","when calling error in Table, line 147")
endif
endif
set Gbw=LoadRectHandle(sl,Ybw,0)
set Zb=Zb-1-1
set tR=Gbw
set Tbw=null
set Gbw=null
return tR
endfunction
function wOw takes rect Xow,real Cow,real Vow returns boolean
local boolean Bow
local boolean Now
local boolean Mow
if Cow>GetRectMinX(Xow) then
set Bow=Cow<GetRectMaxX(Xow)
else
set Bow=false
endif
if Bow then
set Now=Vow>GetRectMinY(Xow)
else
set Now=false
endif
if Now then
set Mow=Vow<GetRectMaxY(Xow)
else
set Mow=false
endif
return Mow
endfunction
function qSw takes integer SSw,string cSw returns nothing
local unit oSw
local real OSw
local real lSw
local integer bSw
local integer ySw
local integer pSw
local player eSw
set Ub[Zb]=cSw
set Zb=Zb+1
set oSw=GetTriggerUnit()
if GetUnitTypeId(oSw)==1747988569 then
set OSw=GetUnitX(oSw)
set lSw=GetUnitY(oSw)
set SSw=Tl
set Ub[Zb]="when calling iterator in NoShipsNearRivers, line 11"
set Zb=Zb+1
set ySw=cww(SSw,"when calling new_LLIterator in LinkedList, line 165")
set Zb=Zb-1
set bSw=ySw
loop
exitwhen Go[ho[bSw]]==go[bSw]
set ho[bSw]=Go[ho[bSw]]
if wOw(gbw(To[ho[bSw]],"when calling rectFromIndex in NoShipsNearRivers, line 11"),OSw,lSw) then
set Ub[Zb]="when calling alloc_Closure in NoShipsNearRivers, line 14"
set Zb=Zb+1
if Hl==0 then
if Jl<32768 then
set Jl=Jl+1
set pSw=Jl
set Kl[pSw]=649
else
call K8("Out of memory: Could not create Closure.","when calling error in NoShipsNearRivers, line 14")
set pSw=0
endif
else
set Hl=Hl-1
set pSw=Dl[Hl]
set Kl[pSw]=649
endif
set Zb=Zb-1
set lO[pSw]=oSw
set Ub[Zb]="when calling doAfter in NoShipsNearRivers, line 14"
set Zb=Zb+1
call yqw(pSw,0.01,"when calling start in ClosureTimers, line 15")
set Zb=Zb-1
set eSw=GetOwningPlayer(oSw)
set cSw="when calling attentionToPlayer in NoShipsNearRivers, line 16"
set Ub[Zb]="when calling attentionToPlayer in NoShipsNearRivers, line 16"
set Zb=Zb+1
call DisplayTimedTextToPlayer(eSw,0.,0.,10.0,wrw(eSw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(eSw,0.,0.,10.0,"You cannot build shipyards near rivers")
set Zb=Zb-1
endif
endloop
set Ub[Zb]="when calling close in NoShipsNearRivers, line 11"
set Zb=Zb+1
if ko[bSw]then
call caw(bSw,"when calling LLIterator in LinkedList, line 450")
endif
set Zb=Zb-1
endif
set Zb=Zb-1
set oSw=null
set eSw=null
endfunction
function brw takes string srw,force trw,string irw returns nothing
local integer Srw
local integer crw
local player orw
local player Orw
local force lrw
set Ub[Zb]=irw
set Zb=Zb+1
set Srw=0
set crw=23
loop
exitwhen Srw>crw
set Orw=TO[Srw]
set lrw=CreateForce()
call ForceAddPlayer(lrw,Orw)
if lrw==trw then
set orw=TO[Srw]
call DisplayTimedTextToPlayer(orw,0.,0.,10.0,wrw(orw,"when calling getAttentionStringForPlayer in Messages, line 116"))
call DisplayTimedTextToPlayer(orw,0.,0.,10.0,srw)
endif
set Srw=Srw+1
endloop
set Zb=Zb-1
set orw=null
set Orw=null
set lrw=null
endfunction
function AB takes integer IB,integer PB returns integer
if IB==1 then
if PB==0 then
return 1747988529
elseif PB==1 then
return 1747990326
elseif PB==2 then
return 1747990084
elseif PB==3 then
return 1747989590
else
return 1747988529
endif
elseif IB==2 then
if PB==0 then
return 1747988530
elseif PB==1 then
return 1747990327
elseif PB==2 then
return 1747990087
elseif PB==3 then
return 1747989591
else
return 1747988530
endif
elseif IB==3 then
if PB==0 then
return 1747988531
elseif PB==1 then
return 1747990328
elseif PB==2 then
return 1747990085
elseif PB==3 then
return 1747989592
else
return 1747988531
endif
elseif PB==0 then
return 1747988529
elseif PB==1 then
return 1747990326
elseif PB==2 then
return 1747990084
elseif PB==3 then
return 1747989590
else
return 1747988529
endif
endfunction
function IN takes integer QN,integer WN,string EN returns nothing
local integer ZN
local boolean UN
set Ub[Zb]=EN
set Zb=Zb+1
set ZN=fl
set Ub[Zb]="when calling has in City, line 183"
set Zb=Zb+1
if gb[ZN]==0 then
if ZN==0 then
call K8("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call K8("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set UN=aww(ZN,WN)
set Zb=Zb-1
if not UN then
set Zb=Zb-1
return
endif
set KS[QN]=ReplaceUnitBJ(KS[QN],WN,bj_UNIT_STATE_METHOD_RELATIVE)
set Zb=Zb-1
endfunction
function KN takes integer PN,integer AN,string DN returns nothing
local integer HN
local integer JN
set Ub[Zb]=DN
set Zb=Zb+1
if AN==PLAYER_NEUTRAL_AGGRESSIVE then
call SetUnitOwner(KS[PN],Player(AN),true)
set Ub[Zb]="when calling changeTaxLevelFORCED in City, line 192"
set Zb=Zb+1
if Zl[PN]==0 then
if PN==0 then
call K8("Nullpointer exception when calling City.changeTaxLevelFORCED","when calling error in City, line 260")
else
call K8("Called City.changeTaxLevelFORCED on invalid object.","when calling error in City, line 260")
endif
endif
set sc[PN]=sc[PN]-ZS[ic[PN]]
set sc[PN]=sc[PN]+ZS[0]
set ic[PN]=0
set Zb=Zb-1
else
call SetUnitOwner(KS[PN],TO[AN],true)
endif
set VS[PN]=AN
if AN>=0 and AN<24 then
set HN=qO[AN]
set Ub[Zb]="when calling getForceId in City, line 199"
set Zb=Zb+1
if vb[HN]==0 then
if HN==0 then
call K8("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 94")
else
call K8("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 94")
endif
endif
set JN=aO[HN]
set Zb=Zb-1
set CS[PN]=JN
endif
set Ub[Zb]="when calling refreshMultiboardIfPossible in City, line 201"
set Zb=Zb+1
if Zl[PN]==0 then
if PN==0 then
call K8("Nullpointer exception when calling City.refreshMultiboardIfPossible","when calling error in City, line 237")
else
call K8("Called City.refreshMultiboardIfPossible on invalid object.","when calling error in City, line 237")
endif
endif
call mN(PN,"when calling refreshMultiboardIfPossible in City, line 237")
set Zb=Zb-1-1
endfunction
function UB takes integer ZB returns integer
if ZB==1747988529 then
return 1
elseif ZB==1747988530 then
return 2
elseif ZB==1747988531 then
return 3
elseif ZB==1747990326 then
return 1
elseif ZB==1747990327 then
return 2
elseif ZB==1747990328 then
return 3
elseif ZB==1747990084 then
return 1
elseif ZB==1747990087 then
return 2
elseif ZB==1747990085 then
return 3
elseif ZB==1747989590 then
return 1
elseif ZB==1747989591 then
return 2
elseif ZB==1747989592 then
return 3
else
return 1
endif
endfunction
function yM takes integer NN,player MN,string wM returns nothing
local integer uM
local integer rM
local unit sM
local unit tM
local real iM
local integer SM
local integer cM
local integer oM
local integer OM
local boolean lM
local integer bM
set Ub[Zb]=wM
set Zb=Zb+1
set sM=KS[NN]
call SetUnitState(sM,UNIT_STATE_LIFE,GetUnitState(sM,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,60.0)*0.01)
set tM=KS[NN]
call SetUnitState(tM,UNIT_STATE_MANA,GetUnitState(tM,UNIT_STATE_MAX_MANA)*RMaxBJ(0.,30.0)*0.01)
set Ub[Zb]="when calling addModifier in City, line 222"
set Zb=Zb+1
if Zl[NN]==0 then
if NN==0 then
call K8("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call K8("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call GN(NN,0,"when calling addModifier in City, line 355")
set Zb=Zb-1
set iM=gS[Bqw(RS,6,"when calling get in City, line 223")]
if GetRandomReal(0.0,1.0)<=iM then
set Ub[Zb]="when calling addModifier in City, line 224"
set Zb=Zb+1
if Zl[NN]==0 then
if NN==0 then
call K8("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call K8("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call GN(NN,6,"when calling addModifier in City, line 355")
set Zb=Zb-1
endif
set uM=CS[NN]
set rM=GetPlayerId(MN)
if rM>=0 and rM<24 then
set SM=qO[rM]
set Ub[Zb]="when calling getForceId in City, line 229"
set Zb=Zb+1
if vb[SM]==0 then
if SM==0 then
call K8("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 94")
else
call K8("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 94")
endif
endif
set cM=aO[SM]
set Zb=Zb-1
set uM=cM
endif
set oM=nl
set OM=GetUnitTypeId(KS[NN])
set Ub[Zb]="when calling has in City, line 231"
set Zb=Zb+1
if gb[oM]==0 then
if oM==0 then
call K8("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call K8("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set lM=aww(oM,OM)
set Zb=Zb-1
if lM then
set bM=AB(UB(GetUnitTypeId(KS[NN])),uM)
set Ub[Zb]="when calling replaceCity in City, line 232"
set Zb=Zb+1
if Zl[NN]==0 then
if NN==0 then
call K8("Nullpointer exception when calling City.replaceCity","when calling error in City, line 182")
else
call K8("Called City.replaceCity on invalid object.","when calling error in City, line 182")
endif
endif
call IN(NN,bM,"when calling replaceCity in City, line 182")
set Zb=Zb-1
call UnitAddAbility(KS[NN],1093677634)
endif
set Ub[Zb]="when calling changeOwner in City, line 235"
set Zb=Zb+1
if Zl[NN]==0 then
if NN==0 then
call K8("Nullpointer exception when calling City.changeOwner","when calling error in City, line 187")
else
call K8("Called City.changeOwner on invalid object.","when calling error in City, line 187")
endif
endif
call KN(NN,rM,"when calling changeOwner in City, line 187")
set Zb=Zb-1-1
set sM=null
set tM=null
endfunction
function rB takes integer UV,string IV returns nothing
local unit PV
local integer AV
local integer DV
local integer HV
local boolean JV
local unit KV
local integer LV
local player XV
local integer CV
local boolean VV
local boolean BV
local real NV
local real MV
local real wB
local real uB
set Ub[Zb]=IV
set Zb=Zb+1
set PV=GetTriggerUnit()
set Ub[Zb]="when calling isCity in CityManage, line 36"
set Zb=Zb+1
set Ub[Zb]="when calling isCity in UnitTools, line 5"
set Zb=Zb+1
set DV=fl
set HV=GetUnitTypeId(PV)
set Ub[Zb]="when calling has in City, line 423"
set Zb=Zb+1
if gb[DV]==0 then
if DV==0 then
call K8("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call K8("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set JV=aww(DV,HV)
set Zb=Zb-1-1-1
if JV then
if GetUnitStatePercent(PV,UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)<=50.0 then
set BV=GetOwningPlayer(PV)!=GetOwningPlayer(GetAttacker())
else
set BV=false
endif
if BV then
set NV=GetUnitX(PV)
set MV=GetUnitY(PV)
set KV=GetAttacker()
set wB=NV-GetUnitX(KV)
set uB=MV-GetUnitY(KV)
if SquareRoot(wB*wB+uB*uB)>300.0 then
call SetUnitState(PV,UNIT_STATE_LIFE,GetUnitState(PV,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,50.0)*0.01)
else
set Ub[Zb]="when calling getCityId in CityManage, line 41"
set Zb=Zb+1
set UV=CB(PV,"when calling getCityId in UnitTools, line 9")
set Zb=Zb-1
set LV=PS[UV]
set XV=GetOwningPlayer(GetAttacker())
set Ub[Zb]="when calling capture in CityManage, line 42"
set Zb=Zb+1
if Zl[LV]==0 then
if LV==0 then
call K8("Nullpointer exception when calling City.capture","when calling error in City, line 218")
else
call K8("Called City.capture on invalid object.","when calling error in City, line 218")
endif
endif
call yM(LV,XV,"when calling capture in City, line 218")
set Zb=Zb-1
set AV=GetUnitTypeId(PV)
set CV=nl
set Ub[Zb]="when calling has in CityManage, line 44"
set Zb=Zb+1
if gb[CV]==0 then
if CV==0 then
call K8("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call K8("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set VV=aww(CV,AV)
set Zb=Zb-1
if VV then
call brw(t2(GetOwningPlayer(GetAttacker()))+" has just captured "+t2(GetOwningPlayer(GetTriggerUnit()))+" Capitol!",bj_FORCE_ALL_PLAYERS,"when calling attentionToForce in CityManage, line 45")
endif
endif
elseif GetUnitStatePercent(PV,UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)<=50.0 then
call SetUnitState(PV,UNIT_STATE_LIFE,GetUnitState(PV,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,50.0)*0.01)
endif
endif
set Zb=Zb-1
set PV=null
set KV=null
set XV=null
endfunction
function lOw takes playerunitevent uOw,code rOw,code sOw,code tOw returns nothing
local integer iOw=GetHandleId(uOw)
local integer SOw
local filterfunc cOw
local trigger oOw
local player OOw
if WO[iOw]==null then
set WO[iOw]=CreateTrigger()
set SOw=bj_MAX_PLAYER_SLOTS-1
loop
exitwhen SOw<0
set oOw=WO[iOw]
set OOw=TO[SOw]
if rOw!=null then
set cOw=Filter(rOw)
else
set cOw=null
endif
call TriggerRegisterPlayerUnitEvent(oOw,OOw,uOw,cOw)
set SOw=SOw-1
endloop
endif
if sOw!=null then
call TriggerAddCondition(WO[iOw],Filter(sOw))
endif
if tOw!=null then
call TriggerAddAction(WO[iOw],tOw)
endif
set cOw=null
set oOw=null
set OOw=null
endfunction
function G1 takes eventid q1,string a1 returns integer
local integer n1
local integer d1
local integer f1
local integer R1
local boolean T1
local boolean Y1
set Ub[Zb]=a1
set Zb=Zb+1
set n1=GetHandleId(q1)
set qc=qc+1
set ec[n1]=qc
set d1=GetHandleId(q1)
if (d1>=18 and d1<=51)or(d1>=269 and d1<=277) then
call lOw(ConvertPlayerUnitEvent(n1),null,hf,null)
else
if q1!=EVENT_UNIT_DAMAGED and q1!=EVENT_PLAYER_LEAVE and q1!=lc then
set f1=GetHandleId(q1)
set T1=f1<261 or f1>268 and f1!=17
else
set T1=false
endif
if T1 then
set R1=GetHandleId(q1)
set Y1=R1<305 or R1>307
else
set Y1=false
endif
if Y1 then
call K8("registering handleid: "+I2S(n1)+" non-playerunitevent. Except EVENT_UNIT_DAMAGED and EVENT_PLAYER_LEAVE these are not supported right now.","when calling error in ClosureEvents, line 242")
endif
endif
set Zb=Zb-1
return qc
endfunction
function spw takes integer Zyw,string Uyw returns nothing
local unit Iyw
local unit Pyw
local integer Ayw
local integer Dyw
local trigger Hyw
local playerunitevent Jyw
local player Kyw
local integer Lyw
local integer Xyw
local player Cyw
local integer Vyw
local integer Byw
local rect Nyw
local region Myw
local integer wpw
local boolean upw
local boolean rpw
set Ub[Zb]=Uyw
set Zb=Zb+1
if GetSpellAbilityId()==1093677620 then
set Iyw=GetSpellAbilityUnit()
set Pyw=GetSpellTargetUnit()
set Ayw=GetPlayerId(GetOwningPlayer(Iyw))
set Dyw=GetPlayerId(GetOwningPlayer(Pyw))
set Kyw=TO[Ayw]
if GetPlayerSlotState(Kyw)==PLAYER_SLOT_STATE_PLAYING then
set upw=GetPlayerController(Kyw)==MAP_CONTROL_USER
else
set upw=false
endif
if upw then
set Lyw=qO[Ayw]
set Xyw=-GetUnitLevel(Pyw)
set Ub[Zb]="when calling changeUpkeep in Upkeep, line 15"
set Zb=Zb+1
if vb[Lyw]==0 then
if Lyw==0 then
call K8("Nullpointer exception when calling PlayerStats.changeUpkeep","when calling error in PlayerStats, line 23")
else
call K8("Called PlayerStats.changeUpkeep on invalid object.","when calling error in PlayerStats, line 23")
endif
endif
set RO[Lyw]=RO[Lyw]+Xyw
set Zb=Zb-1
endif
set Cyw=TO[Dyw]
if GetPlayerSlotState(Cyw)==PLAYER_SLOT_STATE_PLAYING then
set rpw=GetPlayerController(Cyw)==MAP_CONTROL_USER
else
set rpw=false
endif
if rpw then
set Vyw=qO[Dyw]
set Byw=GetUnitLevel(Pyw)
set Ub[Zb]="when calling changeUpkeep in Upkeep, line 17"
set Zb=Zb+1
if vb[Vyw]==0 then
if Vyw==0 then
call K8("Nullpointer exception when calling PlayerStats.changeUpkeep","when calling error in PlayerStats, line 23")
else
call K8("Called PlayerStats.changeUpkeep on invalid object.","when calling error in PlayerStats, line 23")
endif
endif
set RO[Vyw]=RO[Vyw]+Byw
set Zb=Zb-1
endif
endif
set Hyw=CreateTrigger()
set Nyw=GetWorldBounds()
set Myw=CreateRegion()
call RegionAddRect(Myw,Nyw)
call TriggerRegisterEnterRegion(Hyw,Myw,null)
call TriggerAddAction(Hyw,Bf)
set Jyw=EVENT_PLAYER_UNIT_DEATH
set Ub[Zb]="when calling alloc_Closure in Upkeep, line 28"
set Zb=Zb+1
if Fl==0 then
if kl<32768 then
set kl=kl+1
set wpw=kl
set jl[wpw]=678
else
call K8("Out of memory: Could not create Closure.","when calling error in Upkeep, line 28")
set wpw=0
endif
else
set Fl=Fl-1
set wpw=hl[Fl]
set jl[wpw]=678
endif
set Zb=Zb-1
set Rc[wpw]=0
set Tc[wpw]=0
set Yc[wpw]=0
set Ub[Zb]="when calling add in Upkeep, line 28"
set Zb=Zb+1
set Ub[Zb]="when calling toIntId in ClosureEvents, line 111"
set Zb=Zb+1
set Zyw=ec[GetHandleId(Jyw)]
if Zyw==0 then
set Zyw=G1(Jyw,"when calling registerEventId in ClosureEvents, line 228")
endif
set Zb=Zb-1
set Rc[wpw]=Zyw
if dc[Rc[wpw]]!=0 then
set Yc[dc[Rc[wpw]]]=wpw
set Tc[wpw]=dc[Rc[wpw]]
endif
set dc[Rc[wpw]]=wpw
set Zb=Zb-1-1
set Iyw=null
set Pyw=null
set Hyw=null
set Jyw=null
set Kyw=null
set Cyw=null
set Nyw=null
set Myw=null
endfunction
function Eew takes integer Qew,string Wew returns nothing
set Ub[Zb]=Wew
set Zb=Zb+1
if jl[Qew]==0 then
if Qew==0 then
call K8("Nullpointer exception when calling EventListener.onEvent","when calling error in ClosureEvents, line 108")
else
call K8("Called EventListener.onEvent on invalid object.","when calling error in ClosureEvents, line 108")
endif
endif
if jl[Qew]<=670 then
if jl[Qew]<=666 then
if jl[Qew]<=664 then
if jl[Qew]<=663 then
if jl[Qew]<=662 then
call kC(Qew,"when calling CastleCapture_closure_impl in ClosureEvents, line 108")
else
call LC(Qew,"when calling CityBuilded_closure_impl in ClosureEvents, line 108")
endif
else
call aV(Qew,"when calling CityManage_closure_impl in ClosureEvents, line 108")
endif
elseif jl[Qew]<=665 then
call rB(Qew,"when calling CityManage_closure_impl in ClosureEvents, line 108")
else
call f0w(Qew)
endif
elseif jl[Qew]<=668 then
if jl[Qew]<=667 then
call F0w(Qew,"when calling LimitEncampments_closure_impl in ClosureEvents, line 108")
else
call A0w(Qew)
endif
elseif jl[Qew]<=669 then
call C0w(Qew,"when calling LimitMercenaryCamps_closure_impl in ClosureEvents, line 108")
else
call Cww(Qew,"when calling MassControl_closure_impl in ClosureEvents, line 108")
endif
elseif jl[Qew]<=674 then
if jl[Qew]<=672 then
if jl[Qew]<=671 then
call auw(Qew,"when calling MassControl_closure_impl in ClosureEvents, line 108")
else
call qSw(Qew,"when calling NoShipsNearRivers_closure_impl in ClosureEvents, line 108")
endif
elseif jl[Qew]<=673 then
call gSw(Qew)
else
call ZSw(Qew,"when calling OnPlayerLeave_closure_impl in ClosureEvents, line 108")
endif
elseif jl[Qew]<=676 then
if jl[Qew]<=675 then
call Kow(Qew,"when calling RangeChecks_closure_impl in ClosureEvents, line 108")
else
call hlw(Qew,"when calling Taxation_closure_impl in ClosureEvents, line 108")
endif
elseif jl[Qew]<=677 then
call spw(Qew,"when calling Upkeep_closure_impl in ClosureEvents, line 108")
else
call fpw(Qew,"when calling Upkeep_closure_impl in ClosureEvents, line 108")
endif
set Zb=Zb-1
endfunction
function N1 takes string H1 returns nothing
local unit J1
local integer K1
local integer L1
local integer X1
local eventid C1
local integer V1
local boolean B1
set Ub[Zb]=H1
set Zb=Zb+1
set J1=GetTriggerUnit()
set C1=GetTriggerEventId()
set Ub[Zb]="when calling toIntId in ClosureEvents, line 169"
set Zb=Zb+1
set V1=ec[GetHandleId(C1)]
if V1==0 then
set V1=G1(C1,"when calling registerEventId in ClosureEvents, line 228")
endif
set Zb=Zb-1
set K1=V1
if J1!=null then
set B1=GetUnitUserData(J1)>0
else
set B1=false
endif
if B1 then
if fc[GetUnitUserData(J1)]!=0 then
set L1=fc[GetUnitUserData(J1)]
loop
exitwhen L1==0
if Rc[L1]==K1 then
call Eew(L1,"when calling onEvent in ClosureEvents, line 176")
endif
set L1=Tc[L1]
endloop
endif
endif
if dc[K1]!=0 then
set X1=dc[K1]
loop
exitwhen X1==0
call Eew(X1,"when calling onEvent in ClosureEvents, line 182")
set X1=Tc[X1]
endloop
endif
set Zb=Zb-1
set J1=null
set C1=null
endfunction
function Dfw takes nothing returns nothing
set Zb=0
set Ub[Zb]="ClosureEvents, line 286"
set Zb=Zb+1
call N1("when calling generalEventCallback in ClosureEvents, line 286")
set Zb=Zb-1
endfunction
function Dm takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988561,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988784,0)
endfunction
function E6 takes nothing returns boolean
return true
endfunction
function EI takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989828,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989827,0)
endfunction
function EX takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function WZ takes nothing returns boolean
if GetResearched()!=1378889806 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889806,true)!=2 then
return false
endif
return true
endfunction
function EZ takes nothing returns boolean
if not WZ() then
return false
endif
return true
endfunction
function Gnw takes integer Naw,integer Maw,integer wnw,integer unw,integer rnw,integer snw,integer tnw,integer inw,integer Snw,integer cnw,integer onw,integer Onw,integer lnw,integer bnw,integer ynw,integer pnw,integer enw,integer qnw,integer anw,integer nnw,integer dnw,integer fnw,integer Rnw,string Tnw returns integer
local integer Ynw
set Ub[Zb]=Tnw
set Zb=Zb+1
set Ynw=gww("when calling new_LinkedList in LinkedList, line 391")
call Waw(Ynw,Naw,"when calling add in LinkedList, line 393")
call Waw(Ynw,Maw,"when calling add in LinkedList, line 393")
call Waw(Ynw,wnw,"when calling add in LinkedList, line 393")
call Waw(Ynw,unw,"when calling add in LinkedList, line 393")
call Waw(Ynw,rnw,"when calling add in LinkedList, line 393")
call Waw(Ynw,snw,"when calling add in LinkedList, line 393")
call Waw(Ynw,tnw,"when calling add in LinkedList, line 393")
call Waw(Ynw,inw,"when calling add in LinkedList, line 393")
call Waw(Ynw,Snw,"when calling add in LinkedList, line 393")
call Waw(Ynw,cnw,"when calling add in LinkedList, line 393")
call Waw(Ynw,onw,"when calling add in LinkedList, line 393")
call Waw(Ynw,Onw,"when calling add in LinkedList, line 393")
call Waw(Ynw,lnw,"when calling add in LinkedList, line 393")
call Waw(Ynw,bnw,"when calling add in LinkedList, line 393")
call Waw(Ynw,ynw,"when calling add in LinkedList, line 393")
call Waw(Ynw,pnw,"when calling add in LinkedList, line 393")
call Waw(Ynw,enw,"when calling add in LinkedList, line 393")
call Waw(Ynw,qnw,"when calling add in LinkedList, line 393")
call Waw(Ynw,anw,"when calling add in LinkedList, line 393")
call Waw(Ynw,nnw,"when calling add in LinkedList, line 393")
call Waw(Ynw,dnw,"when calling add in LinkedList, line 393")
call Waw(Ynw,fnw,"when calling add in LinkedList, line 393")
call Waw(Ynw,Rnw,"when calling add in LinkedList, line 393")
set Zb=Zb-1
return Ynw
endfunction
function Yow takes string dow returns boolean
local playerunitevent fow
local integer Row
local integer Tow
set Ub[Zb]=dow
set Zb=Zb+1
set vO=Gnw(1747988557,1747989075,1747990102,1747988785,1747989839,1747990101,1747989554,1747989041,1747990344,1747989059,1747989060,1747988844,1747990351,1747990352,1747990356,1747989331,1747990350,1747989809,1747990353,1747990354,1747990355,1747988568,1747990341,"when calling asList in RangeChecks, line 5")
set fow=EVENT_PLAYER_UNIT_CONSTRUCT_START
set Ub[Zb]="when calling alloc_Closure in RangeChecks, line 11"
set Zb=Zb+1
if Fl==0 then
if kl<32768 then
set kl=kl+1
set Row=kl
set jl[Row]=675
else
call K8("Out of memory: Could not create Closure.","when calling error in RangeChecks, line 11")
set Row=0
endif
else
set Fl=Fl-1
set Row=hl[Fl]
set jl[Row]=675
endif
set Zb=Zb-1
set Rc[Row]=0
set Tc[Row]=0
set Yc[Row]=0
set Ub[Zb]="when calling add in RangeChecks, line 11"
set Zb=Zb+1
set Ub[Zb]="when calling toIntId in ClosureEvents, line 111"
set Zb=Zb+1
set Tow=ec[GetHandleId(fow)]
if Tow==0 then
set Tow=G1(fow,"when calling registerEventId in ClosureEvents, line 228")
endif
set Zb=Zb-1
set Rc[Row]=Tow
if dc[Rc[Row]]!=0 then
set Yc[dc[Rc[Row]]]=Row
set Tc[Row]=dc[Rc[Row]]
endif
set dc[Rc[Row]]=Row
set Zb=Zb-1-1
set fow=null
return true
endfunction
function Efw takes nothing returns boolean
set Zb=0
return Yow("RangeChecks, line 1")
endfunction
function Eiw takes nothing returns boolean
return true
endfunction
function FA takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990594,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990584,0)
endfunction
function hE takes nothing returns boolean
if GetResearched()!=1378889783 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889783,true)!=2 then
return false
endif
return true
endfunction
function FE takes nothing returns boolean
if not hE() then
return false
endif
return true
endfunction
function hI takes nothing returns boolean
if GetResearched()!=1378890034 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890034,true)!=2 then
return false
endif
return true
endfunction
function FI takes nothing returns boolean
if not hI() then
return false
endif
return true
endfunction
function FSw takes nothing returns boolean
return true
endfunction
function FT takes nothing returns nothing
call ReplaceUnitBJ(GetEnumUnit(),1747988553,bj_UNIT_STATE_METHOD_RELATIVE)
endfunction
function FU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651832,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651830,0)
endfunction
function hX takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990086 then
return false
endif
return true
endfunction
function FX takes nothing returns boolean
if not hX() then
return false
endif
return true
endfunction
function Fbw takes nothing returns boolean
return true
endfunction
function qrw takes string yrw returns boolean
local integer prw
local integer erw
set Ub[Zb]=yrw
set Zb=Zb+1
set Ub[Zb]="when calling alloc_Closure in MultiboardCityUpdate, line 18"
set Zb=Zb+1
if Hl==0 then
if Jl<32768 then
set Jl=Jl+1
set prw=Jl
set Kl[prw]=648
else
call K8("Out of memory: Could not create Closure.","when calling error in MultiboardCityUpdate, line 18")
set prw=0
endif
else
set Hl=Hl-1
set prw=Dl[Hl]
set Kl[prw]=648
endif
set Zb=Zb-1
set Ub[Zb]="when calling doAfter in MultiboardCityUpdate, line 18"
set Zb=Zb+1
call yqw(prw,0.01,"when calling start in ClosureTimers, line 15")
set Zb=Zb-1
set Ub[Zb]="when calling alloc_Closure in MultiboardCityUpdate, line 25"
set Zb=Zb+1
if Xl==0 then
if Cl<32768 then
set Cl=Cl+1
set erw=Cl
set Vl[erw]=637
else
call K8("Out of memory: Could not create Closure.","when calling error in MultiboardCityUpdate, line 25")
set erw=0
endif
else
set Xl=Xl-1
set erw=Ll[Xl]
set Vl[erw]=637
endif
set Zb=Zb-1
set Ub[Zb]="when calling doPeriodically in MultiboardCityUpdate, line 25"
set Zb=Zb+1
set Ub[Zb]="when calling start in ClosureTimers, line 36"
set Zb=Zb+1
if Vl[erw]==0 then
if erw==0 then
call K8("Nullpointer exception when calling CallbackPeriodic.start","when calling error in ClosureTimers, line 88")
else
call K8("Called CallbackPeriodic.start on invalid object.","when calling error in ClosureTimers, line 88")
endif
endif
call E4(erw,1.0,"when calling start in ClosureTimers, line 88")
set Zb=Zb-1-1-1
return true
endfunction
function Ffw takes nothing returns boolean
set Zb=0
return qrw("MultiboardCityUpdate, line 1")
endfunction
function gj takes nothing returns boolean
if GetUnitTypeId(GetSpellTargetUnit())==1747988787 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747990361 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747989831 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747989040 then
return true
endif
return false
endfunction
function hj takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988793 then
return false
endif
if not gj() then
return false
endif
return true
endfunction
function Fj takes nothing returns boolean
if not hj() then
return false
endif
return true
endfunction
function Flw takes nothing returns boolean
return true
endfunction
function Fm takes nothing returns nothing
local player qm=GetOwningPlayer(GetKillingUnit())
local playerstate am=PLAYER_STATE_RESOURCE_LUMBER
local playerstate nm
local playerstate dm
local player fm
local force Rm
local location Tm
local real Ym
local real Gm
local player gm
local force hm
if am==PLAYER_STATE_RESOURCE_GOLD then
set nm=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(qm,nm,GetPlayerState(qm,nm)+500)
elseif am==PLAYER_STATE_RESOURCE_LUMBER then
set dm=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(qm,dm,GetPlayerState(qm,dm)+500)
endif
call SetPlayerState(qm,am,GetPlayerState(qm,am)+500)
set fm=GetOwningPlayer(GetKillingUnit())
set Rm=CreateForce()
call ForceAddPlayer(Rm,fm)
if IsPlayerInForce(GetLocalPlayer(),Rm) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_084")
endif
set y=GetUnitLoc(GetDyingUnit())
set gm=GetOwningPlayer(GetDyingUnit())
set hm=CreateForce()
call ForceAddPlayer(hm,gm)
set Tm=y
set Ym=GetLocationX(Tm)
set Gm=GetLocationY(Tm)
if IsPlayerInForce(GetLocalPlayer(),hm) then
call PingMinimap(Ym,Gm,2.00)
endif
call RemoveLocation(y)
set qm=null
set am=null
set nm=null
set dm=null
set fm=null
set Rm=null
set Tm=null
set gm=null
set hm=null
endfunction
function Fuw takes nothing returns boolean
return true
endfunction
function Fww takes nothing returns boolean
return true
endfunction
function Fx takes nothing returns boolean
if GetUnitTypeId(GetDyingUnit())!=1747988791 then
return false
endif
return true
endfunction
function YD takes nothing returns boolean
if GetResearched()!=1378890054 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890054,true)!=1 then
return false
endif
return true
endfunction
function GD takes nothing returns boolean
if not YD() then
return false
endif
return true
endfunction
function YK takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990356 then
return false
endif
return true
endfunction
function GK takes nothing returns boolean
if not YK() then
return false
endif
return true
endfunction
function YQ takes nothing returns boolean
if GetResearched()!=1378889796 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889796,true)!=2 then
return false
endif
return true
endfunction
function GQ takes nothing returns boolean
if not YQ() then
return false
endif
return true
endfunction
function O5 takes string c5 returns boolean
local integer o5
set Ub[Zb]=c5
set Zb=Zb+1
set Ub[Zb]="when calling alloc_Closure in Credits, line 5"
set Zb=Zb+1
if Xl==0 then
if Cl<32768 then
set Cl=Cl+1
set o5=Cl
set Vl[o5]=633
else
call K8("Out of memory: Could not create Closure.","when calling error in Credits, line 5")
set o5=0
endif
else
set Xl=Xl-1
set o5=Ll[Xl]
set Vl[o5]=633
endif
set Zb=Zb-1
set Ub[Zb]="when calling doPeriodically in Credits, line 5"
set Zb=Zb+1
set Ub[Zb]="when calling start in ClosureTimers, line 36"
set Zb=Zb+1
if Vl[o5]==0 then
if o5==0 then
call K8("Nullpointer exception when calling CallbackPeriodic.start","when calling error in ClosureTimers, line 88")
else
call K8("Called CallbackPeriodic.start on invalid object.","when calling error in ClosureTimers, line 88")
endif
endif
call E4(o5,600,"when calling start in ClosureTimers, line 88")
set Zb=Zb-1-1-1
return true
endfunction
function Gfw takes nothing returns boolean
set Zb=0
return O5("Credits, line 1")
endfunction
function Gv takes nothing returns nothing
local player yv=GetOwningPlayer(GetSpellTargetUnit())
local playerstate pv=PLAYER_STATE_RESOURCE_LUMBER
local playerstate ev
local playerstate qv
local player av
local force nv
local location dv
local real fv
local real Rv
local player Tv
local force Yv
if pv==PLAYER_STATE_RESOURCE_GOLD then
set ev=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(yv,ev,GetPlayerState(yv,ev)+500)
elseif pv==PLAYER_STATE_RESOURCE_LUMBER then
set qv=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(yv,qv,GetPlayerState(yv,qv)+500)
endif
call SetPlayerState(yv,pv,GetPlayerState(yv,pv)+500)
call RemoveUnit(GetSpellAbilityUnit())
set av=GetOwningPlayer(GetSpellTargetUnit())
set nv=CreateForce()
call ForceAddPlayer(nv,av)
if IsPlayerInForce(GetLocalPlayer(),nv) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_1232")
endif
set y=GetUnitLoc(GetSpellTargetUnit())
set Tv=GetOwningPlayer(GetSpellTargetUnit())
set Yv=CreateForce()
call ForceAddPlayer(Yv,Tv)
set dv=y
set fv=GetLocationX(dv)
set Rv=GetLocationY(dv)
if IsPlayerInForce(GetLocalPlayer(),Yv) then
call PingMinimap(fv,Rv,2.00)
endif
call RemoveLocation(y)
set yv=null
set pv=null
set ev=null
set qv=null
set av=null
set nv=null
set dv=null
set Tv=null
set Yv=null
endfunction
function Gww takes nothing returns nothing
set Zo=Zo+0.01
endfunction
function HI takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989826,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989828,0)
endfunction
function DP takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function HP takes nothing returns boolean
if not DP() then
return false
endif
return true
endfunction
function HX takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function DZ takes nothing returns boolean
if GetResearched()!=1378889809 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889809,true)!=1 then
return false
endif
return true
endfunction
function HZ takes nothing returns boolean
if not DZ() then
return false
endif
return true
endfunction
function Hfw takes nothing returns nothing
set Zb=0
set Ub[Zb]="ClosureEvents, line 287"
set Zb=Zb+1
call N1("when calling generalEventCallback in ClosureEvents, line 287")
set Zb=Zb-1
endfunction
function UD takes nothing returns boolean
if GetResearched()!=1378890052 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890052,true)!=1 then
return false
endif
return true
endfunction
function ID takes nothing returns boolean
if not UD() then
return false
endif
return true
endfunction
function IE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990097,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989594,0)
endfunction
function UK takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990352 then
return false
endif
return true
endfunction
function IK takes nothing returns boolean
if not UK() then
return false
endif
return true
endfunction
function IP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989815,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989816,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989825,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989814,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989830,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651844,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989833,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989832,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989835,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989836,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651848,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651846,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989828,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989826,0)
endfunction
function UQ takes nothing returns boolean
if GetResearched()!=1378889798 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889798,true)!=2 then
return false
endif
return true
endfunction
function IQ takes nothing returns boolean
if not UQ() then
return false
endif
return true
endfunction
function BN takes integer LN,integer XN,string CN returns nothing
local integer VN
set Ub[Zb]=CN
set Zb=Zb+1
set VN=CS[LN]
if VN==0 then
set Ub[Zb]="when calling replaceCity in City, line 206"
set Zb=Zb+1
if Zl[LN]==0 then
if LN==0 then
call K8("Nullpointer exception when calling City.replaceCity","when calling error in City, line 182")
else
call K8("Called City.replaceCity on invalid object.","when calling error in City, line 182")
endif
endif
call IN(LN,1747988529,"when calling replaceCity in City, line 182")
set Zb=Zb-1
elseif VN==3 then
set Ub[Zb]="when calling replaceCity in City, line 208"
set Zb=Zb+1
if Zl[LN]==0 then
if LN==0 then
call K8("Nullpointer exception when calling City.replaceCity","when calling error in City, line 182")
else
call K8("Called City.replaceCity on invalid object.","when calling error in City, line 182")
endif
endif
call IN(LN,1747989590,"when calling replaceCity in City, line 182")
set Zb=Zb-1
elseif VN==1 then
set Ub[Zb]="when calling replaceCity in City, line 210"
set Zb=Zb+1
if Zl[LN]==0 then
if LN==0 then
call K8("Nullpointer exception when calling City.replaceCity","when calling error in City, line 182")
else
call K8("Called City.replaceCity on invalid object.","when calling error in City, line 182")
endif
endif
call IN(LN,1747990326,"when calling replaceCity in City, line 182")
set Zb=Zb-1
elseif VN==2 then
set Ub[Zb]="when calling replaceCity in City, line 212"
set Zb=Zb+1
if Zl[LN]==0 then
if LN==0 then
call K8("Nullpointer exception when calling City.replaceCity","when calling error in City, line 182")
else
call K8("Called City.replaceCity on invalid object.","when calling error in City, line 182")
endif
endif
call IN(LN,1747990084,"when calling replaceCity in City, line 182")
set Zb=Zb-1
endif
set Ub[Zb]="when calling changeOwner in City, line 213"
set Zb=Zb+1
if Zl[LN]==0 then
if LN==0 then
call K8("Nullpointer exception when calling City.changeOwner","when calling error in City, line 187")
else
call K8("Called City.changeOwner on invalid object.","when calling error in City, line 187")
endif
endif
call KN(LN,XN,"when calling changeOwner in City, line 187")
set Zb=Zb-1-1
endfunction
function Hcw takes integer Pcw,integer Acw returns nothing
local integer Dcw
if aO[Pcw]!=-1 then
call ForceRemovePlayer(so[aO[Pcw]],nO[Pcw])
endif
set aO[Pcw]=Acw
call ForceAddPlayer(so[aO[Pcw]],nO[Pcw])
call SetPlayerTechMaxAllowed(nO[Pcw],1747990087,0)
call SetPlayerTechMaxAllowed(nO[Pcw],1747990088,0)
call SetPlayerTechMaxAllowed(nO[Pcw],1747989558,0)
call SetPlayerTechMaxAllowed(nO[Pcw],1747989575,0)
call SetPlayerTechMaxAllowed(nO[Pcw],1747990339,0)
call SetPlayerTechMaxAllowed(nO[Pcw],1747990340,0)
call SetPlayerTechMaxAllowed(nO[Pcw],1747988528,0)
call SetPlayerTechMaxAllowed(nO[Pcw],1747988532,0)
set Dcw=aO[Pcw]
if Dcw==0 then
call SetPlayerTechMaxAllowed(nO[Pcw],1747988528,-1)
call SetPlayerTechMaxAllowed(nO[Pcw],1747988532,-1)
elseif Dcw==1 then
call SetPlayerTechMaxAllowed(nO[Pcw],1747990339,-1)
call SetPlayerTechMaxAllowed(nO[Pcw],1747990340,-1)
elseif Dcw==2 then
call SetPlayerTechMaxAllowed(nO[Pcw],1747990087,-1)
call SetPlayerTechMaxAllowed(nO[Pcw],1747990088,-1)
elseif Dcw==3 then
call SetPlayerTechMaxAllowed(nO[Pcw],1747989558,-1)
call SetPlayerTechMaxAllowed(nO[Pcw],1747989575,-1)
endif
endfunction
function ZV takes string RV returns nothing
local integer TV
local integer YV
local integer GV
local integer gV
local integer hV
local integer FV
local integer kV
local integer jV
local integer xV
local integer vV
local player mV
local location QV
local real WV
local integer EV
set Ub[Zb]=RV
set Zb=Zb+1
set TV=CB(GetSpellTargetUnit(),"when calling getCityId in CityManage, line 18")
set gV=PS[TV]
set Ub[Zb]="when calling getCityForceId in CityManage, line 19"
set Zb=Zb+1
if Zl[gV]==0 then
if gV==0 then
call K8("Nullpointer exception when calling City.getCityForceId","when calling error in City, line 179")
else
call K8("Called City.getCityForceId on invalid object.","when calling error in City, line 179")
endif
endif
set hV=CS[gV]
set Zb=Zb-1
set YV=GetPlayerId(GetOwningPlayer(GetSpellAbilityUnit()))
set FV=qO[YV]
set Ub[Zb]="when calling changeForce in CityManage, line 21"
set Zb=Zb+1
if vb[FV]==0 then
if FV==0 then
call K8("Nullpointer exception when calling PlayerStats.changeForce","when calling error in PlayerStats, line 97")
else
call K8("Called PlayerStats.changeForce on invalid object.","when calling error in PlayerStats, line 97")
endif
endif
call Hcw(FV,hV)
set Zb=Zb-1
set kV=ql[hV]
set Ub[Zb]="when calling iterator in CityManage, line 24"
set Zb=Zb+1
set jV=cww(kV,"when calling new_LLIterator in LinkedList, line 165")
set Zb=Zb-1
set GV=jV
loop
exitwhen Go[ho[GV]]==go[GV]
set ho[GV]=Go[ho[GV]]
set xV=1
set vV=To[ho[GV]]
set mV=TO[YV]
set QV=GetSpellTargetLoc()
set WV=0.
call GroupClear(bj_lastCreatedGroup)
loop
set xV=xV-1
exitwhen xV<0
call CreateUnitAtLocSaveLast(mV,vV,QV,WV)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
endloop
set Ub[Zb]="when calling close in CityManage, line 24"
set Zb=Zb+1
if ko[GV]then
call caw(GV,"when calling LLIterator in LinkedList, line 450")
endif
set Zb=Zb-1
set EV=PS[TV]
set Ub[Zb]="when calling settleCity in CityManage, line 27"
set Zb=Zb+1
if Zl[EV]==0 then
if EV==0 then
call K8("Nullpointer exception when calling City.settleCity","when calling error in City, line 203")
else
call K8("Called City.settleCity on invalid object.","when calling error in City, line 203")
endif
endif
call BN(EV,YV,"when calling settleCity in City, line 203")
set Zb=Zb-1
call KillUnit(GetSpellAbilityUnit())
set Zb=Zb-1
set mV=null
set QV=null
endfunction
function Ifw takes nothing returns nothing
set Zb=0
call ZV("CityManage, line 14")
endfunction
function HL takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747988530 then
return false
endif
return true
endfunction
function JL takes nothing returns boolean
if not HL() then
return false
endif
return true
endfunction
function JP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990324,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990325,0)
endfunction
function JT takes nothing returns nothing
local player IT=GetOwningPlayer(GetAttacker())
local player PT=GetOwningPlayer(GetAttacker())
local player AT
local player DT
local unit HT
set r[GetPlayerId(IT)+1]=r[GetPlayerId(PT)+1]+1
set AT=GetOwningPlayer(GetTriggerUnit())
set DT=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(AT)+1]=r[GetPlayerId(DT)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set HT=GetTriggerUnit()
call SetUnitState(HT,UNIT_STATE_LIFE,GetUnitState(HT,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set IT=null
set PT=null
set AT=null
set DT=null
set HT=null
endfunction
function HU takes nothing returns boolean
if GetResearched()!=1378889818 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889818,true)!=1 then
return false
endif
return true
endfunction
function JU takes nothing returns boolean
if not HU() then
return false
endif
return true
endfunction
function HW takes nothing returns boolean
if GetResearched()!=1378889801 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889801,true)!=2 then
return false
endif
return true
endfunction
function JW takes nothing returns boolean
if not HW() then
return false
endif
return true
endfunction
function JZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651841,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651831,0)
endfunction
function Jfw takes nothing returns nothing
set Zb=0
set Ub[Zb]="ClosureEvents, line 288"
set Zb=Zb+1
call N1("when calling generalEventCallback in ClosureEvents, line 288")
set Zb=Zb-1
endfunction
function Jv takes nothing returns nothing
local player mv=GetOwningPlayer(GetSpellTargetUnit())
local playerstate Qv=PLAYER_STATE_RESOURCE_GOLD
local playerstate Wv
local playerstate Ev
local player Zv
local force Uv
local location Iv
local real Pv
local real Av
local player Dv
local force Hv
if Qv==PLAYER_STATE_RESOURCE_GOLD then
set Wv=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(mv,Wv,GetPlayerState(mv,Wv)+500)
elseif Qv==PLAYER_STATE_RESOURCE_LUMBER then
set Ev=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(mv,Ev,GetPlayerState(mv,Ev)+500)
endif
call SetPlayerState(mv,Qv,GetPlayerState(mv,Qv)+500)
call RemoveUnit(GetSpellAbilityUnit())
set Zv=GetOwningPlayer(GetSpellTargetUnit())
set Uv=CreateForce()
call ForceAddPlayer(Uv,Zv)
if IsPlayerInForce(GetLocalPlayer(),Uv) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_1234")
endif
set y=GetUnitLoc(GetSpellTargetUnit())
set Dv=GetOwningPlayer(GetSpellTargetUnit())
set Hv=CreateForce()
call ForceAddPlayer(Hv,Dv)
set Iv=y
set Pv=GetLocationX(Iv)
set Av=GetLocationY(Iv)
if IsPlayerInForce(GetLocalPlayer(),Hv) then
call PingMinimap(Pv,Av,2.00)
endif
call RemoveLocation(y)
set mv=null
set Qv=null
set Wv=null
set Ev=null
set Zv=null
set Uv=null
set Iv=null
set Dv=null
set Hv=null
endfunction
function JE takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function KE takes nothing returns boolean
if not JE() then
return false
endif
return true
endfunction
function KH takes nothing returns nothing
local integer UH=1
local integer IH=1747988787
local player PH=GetOwningPlayer(GetConstructedStructure())
local rect JH=bj_mapInitialPlayableArea
local location HH=Location(GetRectCenterX(JH),GetRectCenterY(JH))
local location AH=Location(GetLocationX(HH)+100000000.00,GetLocationY(HH)+1000000000.00)
local real DH=bj_UNIT_FACING
call GroupClear(bj_lastCreatedGroup)
loop
set UH=UH-1
exitwhen UH<0
call CreateUnitAtLocSaveLast(PH,IH,AH,DH)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
call UnitRemoveAbility(bj_lastCreatedUnit,1093677905)
call ShowUnit(bj_lastCreatedUnit,false)
set e[GetPlayerId(GetOwningPlayer(GetConstructedStructure()))+1]=true
set PH=null
set AH=null
set HH=null
set JH=null
endfunction
function KL takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function KU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989825,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989817,0)
endfunction
function KW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989082,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989072,0)
endfunction
function Hew takes integer Pew,unit Aew,string Dew returns nothing
set Ub[Zb]=Dew
set Zb=Zb+1
if Nl[Pew]==0 then
if Pew==0 then
call K8("Nullpointer exception when calling OnCastListener.fire","when calling error in ClosureEvents, line 56")
else
call K8("Called OnCastListener.fire on invalid object.","when calling error in ClosureEvents, line 56")
endif
endif
set Zb=Zb-1
endfunction
function t4 takes string M1 returns nothing
local unit w4
local integer u4
local integer r4
local integer s4
set Ub[Zb]=M1
set Zb=Zb+1
set w4=GetTriggerUnit()
set u4=GetSpellAbilityId()
if Pqw(nc,GetHandleId(w4),"when calling has in ClosureEvents, line 188") then
set r4=Bqw(nc,GetHandleId(w4),"when calling get in ClosureEvents, line 189")
loop
exitwhen r4==0
if hc[r4]==-1 or hc[r4]==u4 then
call Hew(r4,GetSpellAbilityUnit(),"when calling fire in ClosureEvents, line 192")
endif
set r4=Gc[r4]
endloop
endif
if Pqw(ac,u4,"when calling has in ClosureEvents, line 194") then
set s4=Bqw(ac,u4,"when calling get in ClosureEvents, line 195")
loop
exitwhen s4==0
if Fc[s4]==null or Fc[s4]==w4 then
call Hew(s4,GetSpellAbilityUnit(),"when calling fire in ClosureEvents, line 198")
endif
set s4=Gc[s4]
endloop
endif
set Zb=Zb-1
set w4=null
endfunction
function Kfw takes nothing returns nothing
set Zb=0
set Ub[Zb]="ClosureEvents, line 306"
set Zb=Zb+1
call t4("when calling onSpellEffect in ClosureEvents, line 306")
set Zb=Zb-1
endfunction
function Kj takes nothing returns boolean
if GetUnitTypeId(GetDyingUnit())!=1747988792 then
return false
endif
return true
endfunction
function Kx takes nothing returns boolean
if GetUnitTypeId(GetDyingUnit())!=1747988793 then
return false
endif
return true
endfunction
function L8 takes nothing returns boolean
set Mc=CreateForce()
set wo=CreateForce()
set uo=CreateForce()
set ro=CreateForce()
set so[0]=Mc
set so[1]=wo
set so[2]=uo
set so[3]=ro
set io[0]=62
set So[0]=194
set co[0]=255
set io[1]=255
set So[1]=238
set co[1]=0
set io[2]=0
set So[2]=201
set co[2]=10
set io[3]=219
set So[3]=0
set co[3]=201
return true
endfunction
function KD takes nothing returns boolean
if GetResearched()!=1378890052 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890052,true)!=2 then
return false
endif
return true
endfunction
function LD takes nothing returns boolean
if not KD() then
return false
endif
return true
endfunction
function LE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989812,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989811,0)
endfunction
function KK takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990356 then
return false
endif
return true
endfunction
function LK takes nothing returns boolean
if not KK() then
return false
endif
return true
endfunction
function LOw takes nothing returns boolean
return true
endfunction
function KQ takes nothing returns boolean
if GetResearched()!=1378889802 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889802,true)!=1 then
return false
endif
return true
endfunction
function LQ takes nothing returns boolean
if not KQ() then
return false
endif
return true
endfunction
function aow takes integer qow returns real
if qow==1747988785 then
return 10.0
elseif qow==1747989075 then
return 10.0
elseif qow==1747990102 then
return 10.0
elseif qow==1747989839 then
return 10.0
elseif qow==1747988568 then
return 5.0
elseif qow==1747990341 then
return 5.0
elseif qow==1747988789 then
return 15.0
elseif qow==1747990103 then
return 15.0
elseif qow==1747990064 then
return 15.0
elseif qow==1747989846 then
return 15.0
else
return 0.0
endif
endfunction
function AM takes integer UM,unit IM returns nothing
local boolean PM
if IsUnitType(IM,UNIT_TYPE_STRUCTURE) then
set PM=GetOwningPlayer(IM)==TO[VS[DS[UM]]]
else
set PM=false
endif
if PM then
set rc[DS[UM]]=rc[DS[UM]]+aow(GetUnitTypeId(IM))
endif
endfunction
function X7 takes integer E7,unit Z7,string U7 returns nothing
local integer I7
local integer P7
local boolean A7
local player D7
local player H7
local boolean J7
local boolean K7
local integer L7
set Ub[Zb]=U7
set Zb=Zb+1
set I7=pl
set P7=GetUnitTypeId(Z7)
set Ub[Zb]="when calling has in Economy, line 39"
set Zb=Zb+1
if gb[I7]==0 then
if I7==0 then
call K8("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call K8("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set A7=aww(I7,P7)
set Zb=Zb-1
if A7 then
set D7=TO[GetPlayerId(GetOwningPlayer(Z7))]
if GetPlayerSlotState(D7)==PLAYER_SLOT_STATE_PLAYING then
set J7=GetPlayerController(D7)==MAP_CONTROL_USER
else
set J7=false
endif
set K7=J7
else
set K7=false
endif
if K7 then
set H7=GetOwningPlayer(Z7)
set E7=Lc[GetPlayerId(GetOwningPlayer(Z7))]
set L7=el
set Lc[GetPlayerId(H7)]=E7+Bqw(L7,GetUnitTypeId(Z7),"when calling get in Economy, line 40")
endif
set Zb=Zb-1
set D7=null
set H7=null
endfunction
function ZM takes integer jM,unit xM,string vM returns nothing
local integer mM
local integer QM
local boolean WM
local boolean EM
set Ub[Zb]=vM
set Zb=Zb+1
set mM=al
set QM=GetUnitTypeId(xM)
set Ub[Zb]="when calling has in City, line 301"
set Zb=Zb+1
if gb[mM]==0 then
if mM==0 then
call K8("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call K8("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set WM=aww(mM,QM)
set Zb=Zb-1
if not WM then
set EM=GetOwningPlayer(xM)==TO[VS[AS[jM]]]
else
set EM=false
endif
if EM then
set rc[AS[jM]]=rc[AS[jM]]+0.5
endif
set Zb=Zb-1
endfunction
function suw takes integer Vww,unit Bww,string Nww returns nothing
local integer Mww
local integer wuw
local boolean uuw
local boolean ruw
set Ub[Zb]=Nww
set Zb=Zb+1
if GetOwningPlayer(Bww)==Lo[Vww]then
set Mww=al
set wuw=GetUnitTypeId(Bww)
set Ub[Zb]="when calling has in MassControl, line 28"
set Zb=Zb+1
if gb[Mww]==0 then
if Mww==0 then
call K8("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call K8("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set uuw=aww(Mww,wuw)
set Zb=Zb-1
set ruw=not uuw
else
set ruw=false
endif
if ruw and Bww!=Xo[Vww] and(not IsUnitType(Bww,UNIT_TYPE_STRUCTURE)) then
call Waw(Co[Vww],GetHandleId(Bww),"when calling add in MassControl, line 29")
endif
set Zb=Zb-1
endfunction
function Bew takes integer Xew,unit Cew,string Vew returns nothing
set Ub[Zb]=Vew
set Zb=Zb+1
if Al[Xew]==0 then
if Xew==0 then
call K8("Nullpointer exception when calling ForGroupCallback.callback","when calling error in ClosureForGroups, line 4")
else
call K8("Called ForGroupCallback.callback on invalid object.","when calling error in ClosureForGroups, line 4")
endif
endif
if Al[Xew]<=684 then
if Al[Xew]<=683 then
if Al[Xew]<=682 then
call ZM(Xew,Cew,"when calling City_closure_impl in ClosureForGroups, line 4")
else
call AM(Xew,Cew)
endif
else
call X7(Xew,Cew,"when calling Economy_closure_impl in ClosureForGroups, line 4")
endif
elseif Al[Xew]<=686 then
if Al[Xew]<=685 then
set Ub[Zb]="when calling LinkedList_closure_impl in ClosureForGroups, line 4"
set Zb=Zb+1
call Waw(Ro[Xew],GetHandleId(Cew),"when calling add in LinkedList, line 515")
set Zb=Zb-1
else
call suw(Xew,Cew,"when calling MassControl_closure_impl in ClosureForGroups, line 4")
endif
else
call RemoveUnit(Cew)
endif
set Zb=Zb-1
endfunction
function Lfw takes nothing returns nothing
set Zb=0
set Ub[Zb]="ClosureForGroups, line 12"
set Zb=Zb+1
call Bew(jc[xc-1],GetFilterUnit(),"when calling callback in ClosureForGroups, line 12")
set Zb=Zb-1
endfunction
function Low takes nothing returns boolean
set QO=-340282366920938000000000000000000000000.
return true
endfunction
function NE takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function ME takes nothing returns boolean
if not NE() then
return false
endif
return true
endfunction
function ML takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function MU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989814,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989825,0)
endfunction
function MW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988818,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988552,0)
endfunction
function Mdw takes nothing returns boolean
local integer Ndw
set Zb=0
set Ub[Zb]="Abilities, line 1"
set Zb=Zb+1
set Ub[Zb]="when calling asList in Abilities, line 17"
set Zb=Zb+1
set Ndw=gww("when calling new_LinkedList in LinkedList, line 391")
call Waw(Ndw,1093677642,"when calling add in LinkedList, line 393")
call Waw(Ndw,1093677641,"when calling add in LinkedList, line 393")
call Waw(Ndw,1093677640,"when calling add in LinkedList, line 393")
call Waw(Ndw,1093678155,"when calling add in LinkedList, line 393")
set Zb=Zb-1
set cS=Ndw
set Zb=Zb-1
return true
endfunction
function nww takes string oww returns nothing
local integer Oww
local force lww
local integer bww
local integer yww_2
local integer pww
local integer eww
local string qww
local force aww_2
set Ub[Zb]=oww
set Zb=Zb+1
if Wo then
set Zb=Zb-1
set lww=null
set aww_2=null
return
endif
set lww=bj_FORCE_ALL_PLAYERS
if IsPlayerInForce(GetLocalPlayer(),lww) then
call ShowInterface(false,0.50)
endif
set bww=vo
set Ub[Zb]="when calling iterator in MainInit, line 84"
set Zb=Zb+1
set yww_2=cww(bww,"when calling new_LLIterator in LinkedList, line 165")
set Zb=Zb-1
set Oww=yww_2
loop
exitwhen Go[ho[Oww]]==go[Oww]
set ho[Oww]=Go[ho[Oww]]
set pww=To[ho[Oww]]
set Ub[Zb]="when calling stringFromIndex in MainInit, line 84"
set Zb=Zb+1
set eww=cl
set oww="when calling loadString in TypeCasting, line 29"
set Ub[Zb]="when calling loadString in TypeCasting, line 29"
set Zb=Zb+1
if lb[eww]==0 then
if eww==0 then
call K8("Nullpointer exception when calling Table.loadString","when calling error in Table, line 57")
else
call K8("Called Table.loadString on invalid object.","when calling error in Table, line 57")
endif
endif
set qww=LoadStr(sl,eww,pww)
set Zb=Zb-1-1
if not mo then
set aww_2=bj_FORCE_ALL_PLAYERS
if IsPlayerInForce(GetLocalPlayer(),aww_2) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,10.0,qww)
endif
call TriggerSleepAction(12.5)
endif
endloop
set Ub[Zb]="when calling close in MainInit, line 84"
set Zb=Zb+1
if ko[Oww]then
call caw(Oww,"when calling LLIterator in LinkedList, line 450")
endif
set Zb=Zb-1
call CinematicModeExBJ(false,bj_FORCE_ALL_PLAYERS,bj_CINEMODE_INTERFACEFADE)
set mo=true
set Zb=Zb-1
set lww=null
set aww_2=null
endfunction
function Mfw takes nothing returns nothing
set Zb=0
call nww("MainInit, line 128")
endfunction
function N8 takes nothing returns boolean
set bo=InitHashtable()
set yo=InitHashtable()
return true
endfunction
function BH takes nothing returns boolean
if GetUnitTypeId(GetConstructedStructure())==1747988545 then
return true
endif
if GetUnitTypeId(GetConstructedStructure())==1747989577 then
return true
endif
if GetUnitTypeId(GetConstructedStructure())==1747990320 then
return true
endif
if GetUnitTypeId(GetConstructedStructure())==1747989845 then
return true
endif
return false
endfunction
function NH takes nothing returns boolean
if p[GetPlayerId(GetOwningPlayer(GetConstructedStructure()))+1]!=false then
return false
endif
if not BH() then
return false
endif
return true
endfunction
function BL takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989591 then
return false
endif
return true
endfunction
function NL takes nothing returns boolean
if not BL() then
return false
endif
return true
endfunction
function NP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990321,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990104,0)
endfunction
function NSw takes nothing returns nothing
call JSw(GetEnumUnit())
endfunction
function BU takes nothing returns boolean
if GetResearched()!=1378889818 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889818,true)!=2 then
return false
endif
return true
endfunction
function NU takes nothing returns boolean
if not BU() then
return false
endif
return true
endfunction
function BW takes nothing returns boolean
if GetResearched()!=1378889800 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889800,true)!=1 then
return false
endif
return true
endfunction
function NW takes nothing returns boolean
if not BW() then
return false
endif
return true
endfunction
function NZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651833,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651841,0)
endfunction
function Wuw takes player juw,string xuw returns string
local integer vuw
local integer muw
local integer Quw
set Ub[Zb]=xuw
set Zb=Zb+1
set muw=qO[GetPlayerId(juw)]
set Ub[Zb]="when calling getForceId in Messages, line 5"
set Zb=Zb+1
if vb[muw]==0 then
if muw==0 then
call K8("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 94")
else
call K8("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 94")
endif
endif
set Quw=aO[muw]
set Zb=Zb-1
set vuw=GetRandomInt(0,2)
if Quw==0 then
set xuw=IO[vuw]
elseif Quw==1 then
set xuw=PO[vuw]
elseif Quw==2 then
set xuw=AO[vuw]
elseif Quw==3 then
set xuw=DO[vuw]
else
set xuw="Warning!"
endif
set Zb=Zb-1
return "|cffff0000"+xuw+"|r"
endfunction
function Xuw takes player Duw,string Huw returns string
local integer Juw
local integer Kuw
local integer Luw
set Ub[Zb]=Huw
set Zb=Zb+1
set Kuw=qO[GetPlayerId(Duw)]
set Ub[Zb]="when calling getForceId in Messages, line 37"
set Zb=Zb+1
if vb[Kuw]==0 then
if Kuw==0 then
call K8("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 94")
else
call K8("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 94")
endif
endif
set Luw=aO[Kuw]
set Zb=Zb-1
set Juw=GetRandomInt(0,2)
if Luw==0 then
set Huw=XO[Juw]
elseif Luw==1 then
set Huw=CO[Juw]
elseif Luw==2 then
set Huw=VO[Juw]
elseif Luw==3 then
set Huw=BO[Juw]
else
set Huw="Good news!"
endif
set Zb=Zb-1
return "|cff00ff00"+Huw+"|r"
endfunction
function oRw takes integer tRw,integer iRw,integer SRw,string cRw returns nothing
if iRw<0 or iRw>=24 then
call K8("Index out of Bounds",cRw)
elseif iRw<=11 then
if iRw<=5 then
if iRw<=2 then
if iRw<=1 then
if iRw<=0 then
set Db[tRw]=SRw
else
set Hb[tRw]=SRw
endif
else
set Jb[tRw]=SRw
endif
elseif iRw<=4 then
if iRw<=3 then
set Kb[tRw]=SRw
else
set Lb[tRw]=SRw
endif
else
set Xb[tRw]=SRw
endif
elseif iRw<=8 then
if iRw<=7 then
if iRw<=6 then
set Cb[tRw]=SRw
else
set Vb[tRw]=SRw
endif
else
set Bb[tRw]=SRw
endif
elseif iRw<=10 then
if iRw<=9 then
set Nb[tRw]=SRw
else
set Mb[tRw]=SRw
endif
else
set wy[tRw]=SRw
endif
elseif iRw<=17 then
if iRw<=14 then
if iRw<=13 then
if iRw<=12 then
set uy[tRw]=SRw
else
set ry[tRw]=SRw
endif
else
set sy[tRw]=SRw
endif
elseif iRw<=16 then
if iRw<=15 then
set ty[tRw]=SRw
else
set iy[tRw]=SRw
endif
else
set Sy[tRw]=SRw
endif
elseif iRw<=20 then
if iRw<=19 then
if iRw<=18 then
set cy[tRw]=SRw
else
set oy[tRw]=SRw
endif
else
set Oy[tRw]=SRw
endif
elseif iRw<=22 then
if iRw<=21 then
set ly[tRw]=SRw
else
set by[tRw]=SRw
endif
else
set yy[tRw]=SRw
endif
endfunction
function pRw takes integer ORw,integer lRw,string bRw returns integer
local integer yRw
if lRw<0 or lRw>=24 then
call K8("Index out of Bounds",bRw)
elseif lRw<=11 then
if lRw<=5 then
if lRw<=2 then
if lRw<=1 then
if lRw<=0 then
set yRw=Db[ORw]
else
set yRw=Hb[ORw]
endif
else
set yRw=Jb[ORw]
endif
elseif lRw<=4 then
if lRw<=3 then
set yRw=Kb[ORw]
else
set yRw=Lb[ORw]
endif
else
set yRw=Xb[ORw]
endif
elseif lRw<=8 then
if lRw<=7 then
if lRw<=6 then
set yRw=Cb[ORw]
else
set yRw=Vb[ORw]
endif
else
set yRw=Bb[ORw]
endif
elseif lRw<=10 then
if lRw<=9 then
set yRw=Nb[ORw]
else
set yRw=Mb[ORw]
endif
else
set yRw=wy[ORw]
endif
elseif lRw<=17 then
if lRw<=14 then
if lRw<=13 then
if lRw<=12 then
set yRw=uy[ORw]
else
set yRw=ry[ORw]
endif
else
set yRw=sy[ORw]
endif
elseif lRw<=16 then
if lRw<=15 then
set yRw=ty[ORw]
else
set yRw=iy[ORw]
endif
else
set yRw=Sy[ORw]
endif
elseif lRw<=20 then
if lRw<=19 then
if lRw<=18 then
set yRw=cy[ORw]
else
set yRw=oy[ORw]
endif
else
set yRw=Oy[ORw]
endif
elseif lRw<=22 then
if lRw<=21 then
set yRw=ly[ORw]
else
set yRw=by[ORw]
endif
else
set yRw=yy[ORw]
endif
return yRw
endfunction
function ocw takes integer scw,player tcw,integer icw,string Scw returns nothing
local integer ccw
set Ub[Zb]=Scw
set Zb=Zb+1
set ccw=GetPlayerId(tcw)
if not dO[scw]then
set Zb=Zb-1
return
endif
if ccw>=24 then
set Zb=Zb-1
return
endif
if pRw(scw,ccw,"when reading array PlayerStats_alliance_states in PlayerStats, line 33")==icw or tcw==nO[scw]then
set Zb=Zb-1
return
endif
call oRw(scw,ccw,icw,"when writing array PlayerStats_alliance_states in PlayerStats, line 35")
call SetPlayerAllianceStateBJ(nO[scw],tcw,icw)
set Zb=Zb-1
endfunction
function j6 takes string Y5 returns nothing
local player G5
local player g5
local string h5
local string F5
local integer k5
local force j5
local force x5
local integer v5
local integer m5
local integer Q5
local integer W5
local integer E5
local integer Z5
local integer U5
local integer I5
local integer P5
local force A5
local force D5
local integer H5
local integer J5
local integer K5
local integer L5
local integer X5
local integer C5
local player V5
local force B5
local player N5
local player M5
local player w6
local integer u6
local integer r6
local integer s6
local integer t6
local player i6
local force S6
local player c6
local player o6
local player O6
local integer l6
local integer b6
local integer y6
local integer p6
local player e6
local force q6
local player a6
local player n6
local player d6
local integer f6
local integer R6
local integer T6
local integer Y6
local player G6
local force g6
local player h6
local player F6
local player k6
set Ub[Zb]=Y5
set Zb=Zb+1
set G5=GetOwningPlayer(GetSpellAbilityUnit())
set g5=GetOwningPlayer(GetSpellTargetUnit())
set h5=t2(G5)
set F5=t2(g5)
set k5=GetPlayerId(G5)
set A5=CreateForce()
call ForceAddPlayer(A5,G5)
set j5=A5
set D5=CreateForce()
call ForceAddPlayer(D5,G5)
set x5=D5
set v5=GetSpellAbilityId()
if v5==1093677396 then
set H5=qO[k5]
set Ub[Zb]="when calling getAllianceState in Diplomacy, line 17"
set Zb=Zb+1
if vb[H5]==0 then
if H5==0 then
call K8("Nullpointer exception when calling PlayerStats.getAllianceState","when calling error in PlayerStats, line 38")
else
call K8("Called PlayerStats.getAllianceState on invalid object.","when calling error in PlayerStats, line 38")
endif
endif
set Ub[Zb]="when calling getAllianceState in PlayerStats, line 38"
set Zb=Zb+1
set J5=pRw(H5,GetPlayerId(g5),"when reading array PlayerStats_alliance_states in PlayerStats, line 39")
set Zb=Zb-1-1
if J5==bj_ALLIANCE_UNALLIED then
set Zb=Zb-1
set G5=null
set g5=null
set j5=null
set x5=null
set A5=null
set D5=null
set V5=null
set B5=null
set N5=null
set M5=null
set w6=null
set i6=null
set S6=null
set c6=null
set o6=null
set O6=null
set e6=null
set q6=null
set a6=null
set n6=null
set d6=null
set G6=null
set g6=null
set h6=null
set F6=null
set k6=null
return
endif
set K5=qO[k5]
set L5=bj_ALLIANCE_UNALLIED
set Ub[Zb]="when calling setAlliance in Diplomacy, line 19"
set Zb=Zb+1
if vb[K5]==0 then
if K5==0 then
call K8("Nullpointer exception when calling PlayerStats.setAlliance","when calling error in PlayerStats, line 27")
else
call K8("Called PlayerStats.setAlliance on invalid object.","when calling error in PlayerStats, line 27")
endif
endif
call ocw(K5,g5,L5,"when calling setAlliance in PlayerStats, line 27")
set Zb=Zb-1
set X5=qO[GetPlayerId(g5)]
set C5=bj_ALLIANCE_UNALLIED
set Ub[Zb]="when calling setAlliance in Diplomacy, line 20"
set Zb=Zb+1
if vb[X5]==0 then
if X5==0 then
call K8("Nullpointer exception when calling PlayerStats.setAlliance","when calling error in PlayerStats, line 27")
else
call K8("Called PlayerStats.setAlliance on invalid object.","when calling error in PlayerStats, line 27")
endif
endif
call ocw(X5,G5,C5,"when calling setAlliance in PlayerStats, line 27")
set Zb=Zb-1
set m5=0
set Q5=23
loop
exitwhen m5>Q5
set V5=TO[m5]
set B5=CreateForce()
call ForceAddPlayer(B5,V5)
if TO[m5]==g5 then
set N5=TO[m5]
set Ub[Zb]="when calling warningToPlayer in Diplomacy, line 25"
set Zb=Zb+1
call DisplayTimedTextToPlayer(N5,0.,0.,10.0,Wuw(N5,"when calling getWarningStringForPlayer in Messages, line 79"))
call DisplayTimedTextToPlayer(N5,0.,0.,10.0,h5+" has declared war on you!")
set Zb=Zb-1
elseif B5==j5 or B5==x5 then
set M5=TO[m5]
set Ub[Zb]="when calling attentionToPlayer in Diplomacy, line 27"
set Zb=Zb+1
call DisplayTimedTextToPlayer(M5,0.,0.,10.0,wrw(M5,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(M5,0.,0.,10.0,h5+" has declared war on your brother-in-arms, "+F5+"!")
set Zb=Zb-1
else
set w6=TO[m5]
set Ub[Zb]="when calling noteToPlayer in Diplomacy, line 29"
set Zb=Zb+1
call DisplayTimedTextToPlayer(w6,0.,0.,10.0,Auw(w6,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(w6,0.,0.,10.0,h5+" has declared war on "+F5)
set Zb=Zb-1
endif
set m5=m5+1
endloop
elseif v5==1093677397 then
set u6=qO[k5]
set Ub[Zb]="when calling getAllianceState in Diplomacy, line 32"
set Zb=Zb+1
if vb[u6]==0 then
if u6==0 then
call K8("Nullpointer exception when calling PlayerStats.getAllianceState","when calling error in PlayerStats, line 38")
else
call K8("Called PlayerStats.getAllianceState on invalid object.","when calling error in PlayerStats, line 38")
endif
endif
set Ub[Zb]="when calling getAllianceState in PlayerStats, line 38"
set Zb=Zb+1
set r6=pRw(u6,GetPlayerId(g5),"when reading array PlayerStats_alliance_states in PlayerStats, line 39")
set Zb=Zb-1-1
if r6==bj_ALLIANCE_ALLIED_VISION then
set Zb=Zb-1
set G5=null
set g5=null
set j5=null
set x5=null
set A5=null
set D5=null
set V5=null
set B5=null
set N5=null
set M5=null
set w6=null
set i6=null
set S6=null
set c6=null
set o6=null
set O6=null
set e6=null
set q6=null
set a6=null
set n6=null
set d6=null
set G6=null
set g6=null
set h6=null
set F6=null
set k6=null
return
endif
set s6=qO[k5]
set t6=bj_ALLIANCE_ALLIED_VISION
set Ub[Zb]="when calling setAlliance in Diplomacy, line 34"
set Zb=Zb+1
if vb[s6]==0 then
if s6==0 then
call K8("Nullpointer exception when calling PlayerStats.setAlliance","when calling error in PlayerStats, line 27")
else
call K8("Called PlayerStats.setAlliance on invalid object.","when calling error in PlayerStats, line 27")
endif
endif
call ocw(s6,g5,t6,"when calling setAlliance in PlayerStats, line 27")
set Zb=Zb-1
set W5=0
set E5=23
loop
exitwhen W5>E5
set i6=TO[W5]
set S6=CreateForce()
call ForceAddPlayer(S6,i6)
if TO[W5]==g5 then
set c6=TO[W5]
set Ub[Zb]="when calling goodNewsToPlayer in Diplomacy, line 39"
set Zb=Zb+1
call DisplayTimedTextToPlayer(c6,0.,0.,10.0,Xuw(c6,"when calling getGoodNewsStringForPlayer in Messages, line 85"))
call DisplayTimedTextToPlayer(c6,0.,0.,10.0,h5+" wants to ally you")
set Zb=Zb-1
elseif S6==j5 or S6==x5 then
set o6=TO[W5]
set Ub[Zb]="when calling noteToPlayer in Diplomacy, line 41"
set Zb=Zb+1
call DisplayTimedTextToPlayer(o6,0.,0.,10.0,Auw(o6,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(o6,0.,0.,10.0,h5+" allied "+F5)
set Zb=Zb-1
else
set O6=TO[W5]
set Y5="when calling noteToPlayer in Diplomacy, line 43"
set Ub[Zb]="when calling noteToPlayer in Diplomacy, line 43"
set Zb=Zb+1
call DisplayTimedTextToPlayer(O6,0.,0.,10.0,Auw(O6,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(O6,0.,0.,10.0,h5+" allied "+F5)
set Zb=Zb-1
endif
set W5=W5+1
endloop
elseif v5==1093677398 then
set l6=qO[k5]
set Ub[Zb]="when calling getAllianceState in Diplomacy, line 46"
set Zb=Zb+1
if vb[l6]==0 then
if l6==0 then
call K8("Nullpointer exception when calling PlayerStats.getAllianceState","when calling error in PlayerStats, line 38")
else
call K8("Called PlayerStats.getAllianceState on invalid object.","when calling error in PlayerStats, line 38")
endif
endif
set Ub[Zb]="when calling getAllianceState in PlayerStats, line 38"
set Zb=Zb+1
set b6=pRw(l6,GetPlayerId(g5),"when reading array PlayerStats_alliance_states in PlayerStats, line 39")
set Zb=Zb-1-1
if b6==bj_ALLIANCE_NEUTRAL then
set Zb=Zb-1
set G5=null
set g5=null
set j5=null
set x5=null
set A5=null
set D5=null
set V5=null
set B5=null
set N5=null
set M5=null
set w6=null
set i6=null
set S6=null
set c6=null
set o6=null
set O6=null
set e6=null
set q6=null
set a6=null
set n6=null
set d6=null
set G6=null
set g6=null
set h6=null
set F6=null
set k6=null
return
endif
set y6=qO[k5]
set p6=bj_ALLIANCE_NEUTRAL
set Ub[Zb]="when calling setAlliance in Diplomacy, line 48"
set Zb=Zb+1
if vb[y6]==0 then
if y6==0 then
call K8("Nullpointer exception when calling PlayerStats.setAlliance","when calling error in PlayerStats, line 27")
else
call K8("Called PlayerStats.setAlliance on invalid object.","when calling error in PlayerStats, line 27")
endif
endif
call ocw(y6,g5,p6,"when calling setAlliance in PlayerStats, line 27")
set Zb=Zb-1
set Z5=0
set U5=23
loop
exitwhen Z5>U5
set e6=TO[Z5]
set q6=CreateForce()
call ForceAddPlayer(q6,e6)
if TO[Z5]==g5 then
set a6=TO[Z5]
set Ub[Zb]="when calling noteToPlayer in Diplomacy, line 53"
set Zb=Zb+1
call DisplayTimedTextToPlayer(a6,0.,0.,10.0,Auw(a6,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(a6,0.,0.,10.0,h5+" is now neutral towards you")
set Zb=Zb-1
elseif q6==j5 or q6==x5 then
set n6=TO[Z5]
set Ub[Zb]="when calling noteToPlayer in Diplomacy, line 55"
set Zb=Zb+1
call DisplayTimedTextToPlayer(n6,0.,0.,10.0,Auw(n6,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(n6,0.,0.,10.0,h5+" shows "+F5+" neutrality")
set Zb=Zb-1
else
set d6=TO[Z5]
set Ub[Zb]="when calling noteToPlayer in Diplomacy, line 57"
set Zb=Zb+1
call DisplayTimedTextToPlayer(d6,0.,0.,10.0,Auw(d6,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(d6,0.,0.,10.0,h5+" shows "+F5+" neutrality")
set Zb=Zb-1
endif
set Z5=Z5+1
endloop
elseif v5==1093677400 then
set f6=qO[k5]
set Ub[Zb]="when calling getAllianceState in Diplomacy, line 60"
set Zb=Zb+1
if vb[f6]==0 then
if f6==0 then
call K8("Nullpointer exception when calling PlayerStats.getAllianceState","when calling error in PlayerStats, line 38")
else
call K8("Called PlayerStats.getAllianceState on invalid object.","when calling error in PlayerStats, line 38")
endif
endif
set Ub[Zb]="when calling getAllianceState in PlayerStats, line 38"
set Zb=Zb+1
set R6=pRw(f6,GetPlayerId(g5),"when reading array PlayerStats_alliance_states in PlayerStats, line 39")
set Zb=Zb-1-1
if R6==bj_ALLIANCE_NEUTRAL then
set Zb=Zb-1
set G5=null
set g5=null
set j5=null
set x5=null
set A5=null
set D5=null
set V5=null
set B5=null
set N5=null
set M5=null
set w6=null
set i6=null
set S6=null
set c6=null
set o6=null
set O6=null
set e6=null
set q6=null
set a6=null
set n6=null
set d6=null
set G6=null
set g6=null
set h6=null
set F6=null
set k6=null
return
endif
set T6=qO[k5]
set Y6=bj_ALLIANCE_NEUTRAL
set Ub[Zb]="when calling setAlliance in Diplomacy, line 62"
set Zb=Zb+1
if vb[T6]==0 then
if T6==0 then
call K8("Nullpointer exception when calling PlayerStats.setAlliance","when calling error in PlayerStats, line 27")
else
call K8("Called PlayerStats.setAlliance on invalid object.","when calling error in PlayerStats, line 27")
endif
endif
call ocw(T6,g5,Y6,"when calling setAlliance in PlayerStats, line 27")
set Zb=Zb-1
set I5=0
set P5=23
loop
exitwhen I5>P5
set G6=TO[I5]
set g6=CreateForce()
call ForceAddPlayer(g6,G6)
if TO[I5]==g5 then
set h6=TO[I5]
set Ub[Zb]="when calling noteToPlayer in Diplomacy, line 67"
set Zb=Zb+1
call DisplayTimedTextToPlayer(h6,0.,0.,10.0,Auw(h6,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(h6,0.,0.,10.0,h5+" unallies you!")
set Zb=Zb-1
elseif g6==j5 or g6==x5 then
set F6=TO[I5]
set Ub[Zb]="when calling noteToPlayer in Diplomacy, line 69"
set Zb=Zb+1
call DisplayTimedTextToPlayer(F6,0.,0.,10.0,Auw(F6,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(F6,0.,0.,10.0,h5+" unallied "+F5)
set Zb=Zb-1
else
set k6=TO[I5]
set Ub[Zb]="when calling noteToPlayer in Diplomacy, line 71"
set Zb=Zb+1
call DisplayTimedTextToPlayer(k6,0.,0.,10.0,Auw(k6,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(k6,0.,0.,10.0,h5+" unallied "+F5)
set Zb=Zb-1
endif
set I5=I5+1
endloop
endif
set Zb=Zb-1
set G5=null
set g5=null
set j5=null
set x5=null
set A5=null
set D5=null
set V5=null
set B5=null
set N5=null
set M5=null
set w6=null
set i6=null
set S6=null
set c6=null
set o6=null
set O6=null
set e6=null
set q6=null
set a6=null
set n6=null
set d6=null
set G6=null
set g6=null
set h6=null
set F6=null
set k6=null
endfunction
function Nfw takes nothing returns nothing
set Zb=0
call j6("Diplomacy, line 116")
endfunction
function oD takes nothing returns boolean
if GetResearched()!=1378890040 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890040,true)!=1 then
return false
endif
return true
endfunction
function OD takes nothing returns boolean
if not oD() then
return false
endif
return true
endfunction
function oK takes nothing returns boolean
if GetUnitTypeId(GetConstructedStructure())!=1747990353 then
return false
endif
return true
endfunction
function OK takes nothing returns boolean
if not oK() then
return false
endif
return true
endfunction
function oQ takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function OQ takes nothing returns boolean
if not oQ() then
return false
endif
return true
endfunction
function oY takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989045 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function OY takes nothing returns boolean
if not oY() then
return false
endif
return true
endfunction
function R9 takes string d9 returns integer
local integer f9
set Ub[Zb]=d9
set Zb=Zb+1
set Ub[Zb]="when calling HashMap in HashMap, line 7"
set Zb=Zb+1
if ob==0 then
if Ob<32768 then
set Ob=Ob+1
set f9=Ob
set lb[f9]=726
else
call K8("Out of memory: Could not create HashMap.","when calling error in HashMap, line 8")
set f9=0
endif
else
set ob=ob-1
set f9=cb[ob]
set lb[f9]=726
endif
set Zb=Zb-1-1
return f9
endfunction
function e1 takes string y1 returns boolean
local integer p1
set Ub[Zb]=y1
set Zb=Zb+1
set lc=ConvertPlayerEvent(96)
set ac=R9("when calling new_HashMap in ClosureEvents, line 99")
set nc=R9("when calling new_HashMap in ClosureEvents, line 100")
set bc=CreateTrigger()
set yc=CreateTrigger()
set pc=CreateTrigger()
set Ub[Zb]="when calling alloc_Closure in ClosureEvents, line 279"
set Zb=Zb+1
if Hl==0 then
if Jl<32768 then
set Jl=Jl+1
set p1=Jl
set Kl[p1]=640
else
call K8("Out of memory: Could not create Closure.","when calling error in ClosureEvents, line 279")
set p1=0
endif
else
set Hl=Hl-1
set p1=Dl[Hl]
set Kl[p1]=640
endif
set Zb=Zb-1
set Ub[Zb]="when calling nullTimer in ClosureEvents, line 279"
set Zb=Zb+1
set Ub[Zb]="when calling doAfter in ClosureTimers, line 22"
set Zb=Zb+1
call yqw(p1,0.,"when calling start in ClosureTimers, line 15")
set Zb=Zb-1-1-1
return true
endfunction
function Ofw takes nothing returns boolean
set Zb=0
return e1("ClosureEvents, line 1")
endfunction
function Om takes nothing returns nothing
local player Nv=GetOwningPlayer(GetKillingUnit())
local playerstate Mv=PLAYER_STATE_RESOURCE_GOLD
local playerstate wm
local playerstate um
local player rm
local force sm
local location tm
local real im
local real Sm
local player cm
local force om
if Mv==PLAYER_STATE_RESOURCE_GOLD then
set wm=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(Nv,wm,GetPlayerState(Nv,wm)+500)
elseif Mv==PLAYER_STATE_RESOURCE_LUMBER then
set um=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(Nv,um,GetPlayerState(Nv,um)+500)
endif
call SetPlayerState(Nv,Mv,GetPlayerState(Nv,Mv)+500)
set rm=GetOwningPlayer(GetKillingUnit())
set sm=CreateForce()
call ForceAddPlayer(sm,rm)
if IsPlayerInForce(GetLocalPlayer(),sm) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_083")
endif
set y=GetUnitLoc(GetDyingUnit())
set cm=GetOwningPlayer(GetDyingUnit())
set om=CreateForce()
call ForceAddPlayer(om,cm)
set tm=y
set im=GetLocationX(tm)
set Sm=GetLocationY(tm)
if IsPlayerInForce(GetLocalPlayer(),om) then
call PingMinimap(im,Sm,2.00)
endif
call RemoveLocation(y)
set Nv=null
set Mv=null
set wm=null
set um=null
set rm=null
set sm=null
set tm=null
set cm=null
set om=null
endfunction
function Ox takes nothing returns boolean
if GetUnitTypeId(GetDyingUnit())!=1747988801 then
return false
endif
return true
endfunction
function PD takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990599,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990600,0)
endfunction
function IF takes nothing returns boolean
if IsUnitType(GetEnumUnit(),UNIT_TYPE_STRUCTURE)!=false then
return false
endif
return true
endfunction
function PF takes nothing returns nothing
if IF() then
call SetUnitPositionLoc(GetEnumUnit(),S)
endif
endfunction
function PG takes nothing returns boolean
if GetSpellAbilityId()!=1093677620 then
return false
endif
return true
endfunction
function PK takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function PP takes nothing returns nothing
set s=bj_FORCE_ALL_PLAYERS
call ForForce(s,Kq)
endfunction
function PQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989066,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988551,0)
endfunction
function PU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989570,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989556,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989559,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989557,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989560,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989573,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989574,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651841,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651833,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651832,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989582,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990097,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989812,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990098,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990099,0)
endfunction
function Pfw takes nothing returns nothing
set Zb=0
call N1("ClosureEvents, line 240")
endfunction
function Ig takes nothing returns boolean
if IsUnitType(GetEnumUnit(),UNIT_TYPE_STRUCTURE)!=false then
return false
endif
return true
endfunction
function Pg takes nothing returns nothing
if Ig() then
call SetUnitPositionLoc(GetEnumUnit(),c)
endif
endfunction
function Ih takes nothing returns boolean
if IsUnitType(GetEnumUnit(),UNIT_TYPE_STRUCTURE)!=false then
return false
endif
return true
endfunction
function Ph takes nothing returns nothing
if Ih() then
call SetUnitPositionLoc(GetEnumUnit(),c)
endif
endfunction
function Pj takes nothing returns nothing
local player kj=GetOwningPlayer(GetSpellTargetUnit())
local playerstate jj=PLAYER_STATE_RESOURCE_GOLD
local playerstate xj
local playerstate vj
local player mj
local force Qj
local location Wj
local real Ej
local real Zj
local player Uj
local force Ij
if jj==PLAYER_STATE_RESOURCE_GOLD then
set xj=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(kj,xj,GetPlayerState(kj,xj)+500)
elseif jj==PLAYER_STATE_RESOURCE_LUMBER then
set vj=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(kj,vj,GetPlayerState(kj,vj)+500)
endif
call SetPlayerState(kj,jj,GetPlayerState(kj,jj)+500)
call RemoveUnit(GetSpellAbilityUnit())
set mj=GetOwningPlayer(GetSpellTargetUnit())
set Qj=CreateForce()
call ForceAddPlayer(Qj,mj)
if IsPlayerInForce(GetLocalPlayer(),Qj) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_1231")
endif
set y=GetUnitLoc(GetSpellTargetUnit())
set Uj=GetOwningPlayer(GetSpellTargetUnit())
set Ij=CreateForce()
call ForceAddPlayer(Ij,Uj)
set Wj=y
set Ej=GetLocationX(Wj)
set Zj=GetLocationY(Wj)
if IsPlayerInForce(GetLocalPlayer(),Ij) then
call PingMinimap(Ej,Zj,2.00)
endif
call RemoveLocation(y)
set kj=null
set jj=null
set xj=null
set vj=null
set mj=null
set Qj=null
set Wj=null
set Uj=null
set Ij=null
endfunction
function Px takes nothing returns nothing
local player kx=GetOwningPlayer(GetKillingUnit())
local playerstate jx=PLAYER_STATE_RESOURCE_GOLD
local playerstate xx
local playerstate vx
local player mx
local force Qx
local location Wx
local real Ex
local real Zx
local player Ux
local force Ix
if jx==PLAYER_STATE_RESOURCE_GOLD then
set xx=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(kx,xx,GetPlayerState(kx,xx)+125)
elseif jx==PLAYER_STATE_RESOURCE_LUMBER then
set vx=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(kx,vx,GetPlayerState(kx,vx)+125)
endif
call SetPlayerState(kx,jx,GetPlayerState(kx,jx)+125)
set mx=GetOwningPlayer(GetKillingUnit())
set Qx=CreateForce()
call ForceAddPlayer(Qx,mx)
if IsPlayerInForce(GetLocalPlayer(),Qx) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_091")
endif
set y=GetUnitLoc(GetDyingUnit())
set Ux=GetOwningPlayer(GetDyingUnit())
set Ix=CreateForce()
call ForceAddPlayer(Ix,Ux)
set Wx=y
set Ex=GetLocationX(Wx)
set Zx=GetLocationY(Wx)
if IsPlayerInForce(GetLocalPlayer(),Ix) then
call PingMinimap(Ex,Zx,2.00)
endif
call RemoveLocation(y)
set kx=null
set jx=null
set xx=null
set vx=null
set mx=null
set Qx=null
set Wx=null
set Ux=null
set Ix=null
endfunction
function Q8 takes nothing returns boolean
set Nc=InitHashtable()
return true
endfunction
function Q9 takes nothing returns boolean
set qo=InitHashtable()
return true
endfunction
function mA takes nothing returns boolean
if GetResearched()!=1378890051 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890051,true)!=1 then
return false
endif
return true
endfunction
function QA takes nothing returns boolean
if not mA() then
return false
endif
return true
endfunction
function QE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989057,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988558,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988551,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989066,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651824,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651826,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988818,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989080,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989072,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989082,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988559,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988812,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651828,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989065,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989067,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989301,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651843,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988561,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988788,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988565,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988566,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988567,0)
endfunction
function QP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989830,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989829,0)
endfunction
function QT takes nothing returns nothing
call SetFloatGameState(GAME_STATE_TIME_OF_DAY,bj_MELEE_STARTING_TOD)
call MeleeStartingHeroLimit()
endfunction
function mU takes nothing returns boolean
if GetResearched()!=1378890035 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890035,true)!=1 then
return false
endif
return true
endfunction
function QU takes nothing returns boolean
if not mU() then
return false
endif
return true
endfunction
function RSw takes string aSw returns boolean
local playerunitevent nSw
local integer dSw
local integer fSw
set Ub[Zb]=aSw
set Zb=Zb+1
set nSw=EVENT_PLAYER_UNIT_ISSUED_ORDER
set Ub[Zb]="when calling alloc_Closure in NoStarvationOnBoat, line 6"
set Zb=Zb+1
if Fl==0 then
if kl<32768 then
set kl=kl+1
set dSw=kl
set jl[dSw]=673
else
call K8("Out of memory: Could not create Closure.","when calling error in NoStarvationOnBoat, line 6")
set dSw=0
endif
else
set Fl=Fl-1
set dSw=hl[Fl]
set jl[dSw]=673
endif
set Zb=Zb-1
set Rc[dSw]=0
set Tc[dSw]=0
set Yc[dSw]=0
set Ub[Zb]="when calling add in NoStarvationOnBoat, line 6"
set Zb=Zb+1
set Ub[Zb]="when calling toIntId in ClosureEvents, line 111"
set Zb=Zb+1
set fSw=ec[GetHandleId(nSw)]
if fSw==0 then
set fSw=G1(nSw,"when calling registerEventId in ClosureEvents, line 228")
endif
set Zb=Zb-1
set Rc[dSw]=fSw
if dc[Rc[dSw]]!=0 then
set Yc[dc[Rc[dSw]]]=dSw
set Tc[dSw]=dc[Rc[dSw]]
endif
set dc[Rc[dSw]]=dSw
set Zb=Zb-1-1
set nSw=null
return true
endfunction
function Qfw takes nothing returns boolean
set Zb=0
return RSw("NoStarvationOnBoat, line 1")
endfunction
function Qk takes nothing returns nothing
local player Tk=GetOwningPlayer(GetSpellTargetUnit())
local playerstate Yk=PLAYER_STATE_RESOURCE_LUMBER
local playerstate Gk
local playerstate gk
local player hk
local force Fk
local location kk
local real jk
local real xk
local player vk
local force mk
if Yk==PLAYER_STATE_RESOURCE_GOLD then
set Gk=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(Tk,Gk,GetPlayerState(Tk,Gk)+250)
elseif Yk==PLAYER_STATE_RESOURCE_LUMBER then
set gk=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(Tk,gk,GetPlayerState(Tk,gk)+250)
endif
call SetPlayerState(Tk,Yk,GetPlayerState(Tk,Yk)+250)
call RemoveUnit(GetSpellAbilityUnit())
set hk=GetOwningPlayer(GetSpellTargetUnit())
set Fk=CreateForce()
call ForceAddPlayer(Fk,hk)
if IsPlayerInForce(GetLocalPlayer(),Fk) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_1229")
endif
set y=GetUnitLoc(GetSpellTargetUnit())
set vk=GetOwningPlayer(GetSpellTargetUnit())
set mk=CreateForce()
call ForceAddPlayer(mk,vk)
set kk=y
set jk=GetLocationX(kk)
set xk=GetLocationY(kk)
if IsPlayerInForce(GetLocalPlayer(),mk) then
call PingMinimap(jk,xk,2.00)
endif
call RemoveLocation(y)
set Tk=null
set Yk=null
set Gk=null
set gk=null
set hk=null
set Fk=null
set kk=null
set vk=null
set mk=null
endfunction
function mm takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function Qm takes nothing returns boolean
if not mm() then
return false
endif
return true
endfunction
function RE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651843,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651842,0)
endfunction
function RI takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989815,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989838,0)
endfunction
function RX takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function fZ takes nothing returns boolean
if GetResearched()!=1378889807 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889807,true)!=2 then
return false
endif
return true
endfunction
function RZ takes nothing returns boolean
if not fZ() then
return false
endif
return true
endfunction
function ZC takes string mC returns boolean
local playerunitevent QC
local integer WC
local integer EC
set Ub[Zb]=mC
set Zb=Zb+1
set QC=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set Ub[Zb]="when calling alloc_Closure in CityBuilded, line 9"
set Zb=Zb+1
if Fl==0 then
if kl<32768 then
set kl=kl+1
set WC=kl
set jl[WC]=663
else
call K8("Out of memory: Could not create Closure.","when calling error in CityBuilded, line 9")
set WC=0
endif
else
set Fl=Fl-1
set WC=hl[Fl]
set jl[WC]=663
endif
set Zb=Zb-1
set Rc[WC]=0
set Tc[WC]=0
set Yc[WC]=0
set Ub[Zb]="when calling add in CityBuilded, line 9"
set Zb=Zb+1
set Ub[Zb]="when calling toIntId in ClosureEvents, line 111"
set Zb=Zb+1
set EC=ec[GetHandleId(QC)]
if EC==0 then
set EC=G1(QC,"when calling registerEventId in ClosureEvents, line 228")
endif
set Zb=Zb-1
set Rc[WC]=EC
if dc[Rc[WC]]!=0 then
set Yc[dc[Rc[WC]]]=WC
set Tc[WC]=dc[Rc[WC]]
endif
set dc[Rc[WC]]=WC
set Zb=Zb-1-1
set QC=null
return true
endfunction
function Rfw takes nothing returns boolean
set Zb=0
return ZC("CityBuilded, line 1")
endfunction
function dk takes nothing returns boolean
if GetUnitTypeId(GetSpellTargetUnit())==1747988787 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747990361 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747989831 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747989040 then
return true
endif
return false
endfunction
function fk takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988792 then
return false
endif
if not dk() then
return false
endif
return true
endfunction
function Rk takes nothing returns boolean
if not fk() then
return false
endif
return true
endfunction
function Rpw takes nothing returns boolean
call Location(0.,0.)
return true
endfunction
function S0w takes nothing returns boolean
return true
endfunction
function rlw takes string MOw,string wlw returns boolean
local integer ulw=StringLength(MOw)
if StringLength(wlw)>ulw then
return false
endif
return SubString(MOw,0,StringLength(wlw))==wlw
endfunction
function S5 takes nothing returns boolean
return rlw(GetEventPlayerChatString(),"-")
endfunction
function SE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989080,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988818,0)
endfunction
function iG takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989044 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function SG takes nothing returns boolean
if not iG() then
return false
endif
return true
endfunction
function SI takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651846,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651847,0)
endfunction
function SJ takes nothing returns nothing
local integer MH=1
local integer wJ=1751277938
local player uJ=GetOwningPlayer(GetConstructedStructure())
local rect iJ=bj_mapInitialPlayableArea
local location tJ=Location(GetRectCenterX(iJ),GetRectCenterY(iJ))
local location rJ=Location(GetLocationX(tJ)+100000000.00,GetLocationY(tJ)+1000000000.00)
local real sJ=bj_UNIT_FACING
call GroupClear(bj_lastCreatedGroup)
loop
set MH=MH-1
exitwhen MH<0
call CreateUnitAtLocSaveLast(uJ,wJ,rJ,sJ)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
call ShowUnit(bj_lastCreatedUnit,false)
set p[GetPlayerId(GetOwningPlayer(GetConstructedStructure()))+1]=true
set uJ=null
set rJ=null
set tJ=null
set iJ=null
endfunction
function SX takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function iZ takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function SZ takes nothing returns boolean
if not iZ() then
return false
endif
return true
endfunction
function cow takes string row returns boolean
local integer sow
local integer tow
local integer iow
local integer Sow
set Ub[Zb]=row
set Zb=Zb+1
set jO=CreateGroup()
set xO=CreateUnit(oS,2019849581,0.,0.,0)
if xO==null then
set row=""
set sow=2019849581
set tow=0
loop
exitwhen tow>3
set iow=ModuloInteger(sow,256)
set sow=sow/256
set row=SubString(".................................!.#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[.]^_`abcdefghijklmnopqrstuvwxyz{|}~.................................................................................................................................",iow,iow+1)+row
set tow=tow+1
endloop
call K8("DUMMY_UNITID ("+row+") not added correctly to the map.","when calling error in Preloader, line 52")
endif
set Ub[Zb]="when calling alloc_Closure in Preloader, line 54"
set Zb=Zb+1
if Hl==0 then
if Jl<32768 then
set Jl=Jl+1
set Sow=Jl
set Kl[Sow]=651
else
call K8("Out of memory: Could not create Closure.","when calling error in Preloader, line 54")
set Sow=0
endif
else
set Hl=Hl-1
set Sow=Dl[Hl]
set Kl[Sow]=651
endif
set Zb=Zb-1
set Ub[Zb]="when calling nullTimer in Preloader, line 54"
set Zb=Zb+1
set Ub[Zb]="when calling doAfter in ClosureTimers, line 22"
set Zb=Zb+1
call yqw(Sow,0.,"when calling start in ClosureTimers, line 15")
set Zb=Zb-1-1-1
return true
endfunction
function Sfw takes nothing returns boolean
set Zb=0
return cow("Preloader, line 1")
endfunction
function T5 takes nothing returns boolean
local trigger n5=CreateTrigger()
local trigger d5=n5
local playerunitevent f5=EVENT_PLAYER_UNIT_SPELL_EFFECT
local integer R5=0
loop
call TriggerRegisterPlayerUnitEvent(d5,Player(R5),f5,null)
set R5=R5+1
exitwhen R5==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(n5,Condition(If))
call TriggerAddAction(n5,Pf)
set n5=null
set d5=null
set f5=null
return true
endfunction
function RF takes nothing returns boolean
if IsUnitType(GetEnumUnit(),UNIT_TYPE_STRUCTURE)!=false then
return false
endif
return true
endfunction
function TF takes nothing returns nothing
if RF() then
call SetUnitPositionLoc(GetEnumUnit(),S)
endif
endfunction
function RL takes nothing returns boolean
if GetUnitTypeId(GetConstructedStructure())!=1747989059 then
return false
endif
return true
endfunction
function TL takes nothing returns boolean
if not RL() then
return false
endif
return true
endfunction
function RW takes nothing returns boolean
if GetResearched()!=1378889799 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889799,true)!=1 then
return false
endif
return true
endfunction
function TW takes nothing returns boolean
if not RW() then
return false
endif
return true
endfunction
function RY takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989316 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function TY takes nothing returns boolean
if not RY() then
return false
endif
return true
endfunction
function TZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989556,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989570,0)
endfunction
function lV takes string XC returns boolean
local trigger CC
local playerunitevent VC
local playerunitevent BC
local integer NC
local integer MC
local player wV
local location uV
local real rV
local integer sV
local integer tV
local trigger iV
local playerunitevent SV
local integer cV
local integer oV
local integer OV
set Ub[Zb]=XC
set Zb=Zb+1
if Wo then
set NC=5
set MC=1747988553
set wV=TO[0]
set uV=Location(-3000.0,1700.0)
set rV=0.
call GroupClear(bj_lastCreatedGroup)
loop
set NC=NC-1
exitwhen NC<0
call CreateUnitAtLocSaveLast(wV,MC,uV,rV)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
endif
set VC=EVENT_PLAYER_UNIT_SELECTED
set Ub[Zb]="when calling alloc_Closure in CityManage, line 9"
set Zb=Zb+1
if Fl==0 then
if kl<32768 then
set kl=kl+1
set sV=kl
set jl[sV]=664
else
call K8("Out of memory: Could not create Closure.","when calling error in CityManage, line 9")
set sV=0
endif
else
set Fl=Fl-1
set sV=hl[Fl]
set jl[sV]=664
endif
set Zb=Zb-1
set Rc[sV]=0
set Tc[sV]=0
set Yc[sV]=0
set Ub[Zb]="when calling add in CityManage, line 9"
set Zb=Zb+1
set Ub[Zb]="when calling toIntId in ClosureEvents, line 111"
set Zb=Zb+1
set tV=ec[GetHandleId(VC)]
if tV==0 then
set tV=G1(VC,"when calling registerEventId in ClosureEvents, line 228")
endif
set Zb=Zb-1
set Rc[sV]=tV
if dc[Rc[sV]]!=0 then
set Yc[dc[Rc[sV]]]=sV
set Tc[sV]=dc[Rc[sV]]
endif
set dc[Rc[sV]]=sV
set Zb=Zb-1
set CC=CreateTrigger()
call TriggerAddCondition(CC,Condition(Gf))
call TriggerAddAction(CC,gf)
set iV=CC
set SV=EVENT_PLAYER_UNIT_SPELL_CAST
set cV=0
loop
call TriggerRegisterPlayerUnitEvent(iV,Player(cV),SV,null)
set cV=cV+1
exitwhen cV==bj_MAX_PLAYER_SLOTS
endloop
set BC=EVENT_PLAYER_UNIT_ATTACKED
set Ub[Zb]="when calling alloc_Closure in CityManage, line 33"
set Zb=Zb+1
if Fl==0 then
if kl<32768 then
set kl=kl+1
set oV=kl
set jl[oV]=665
else
call K8("Out of memory: Could not create Closure.","when calling error in CityManage, line 33")
set oV=0
endif
else
set Fl=Fl-1
set oV=hl[Fl]
set jl[oV]=665
endif
set Zb=Zb-1
set Rc[oV]=0
set Tc[oV]=0
set Yc[oV]=0
set Ub[Zb]="when calling add in CityManage, line 33"
set Zb=Zb+1
set Ub[Zb]="when calling toIntId in ClosureEvents, line 111"
set Zb=Zb+1
set OV=ec[GetHandleId(BC)]
if OV==0 then
set OV=G1(BC,"when calling registerEventId in ClosureEvents, line 228")
endif
set Zb=Zb-1
set Rc[oV]=OV
if dc[Rc[oV]]!=0 then
set Yc[dc[Rc[oV]]]=oV
set Tc[oV]=dc[Rc[oV]]
endif
set dc[Rc[oV]]=oV
set Zb=Zb-1-1
set CC=null
set VC=null
set BC=null
set wV=null
set uV=null
set iV=null
set SV=null
return true
endfunction
function Tfw takes nothing returns boolean
set Zb=0
return lV("CityManage, line 1")
endfunction
function Rg takes nothing returns boolean
if IsUnitType(GetEnumUnit(),UNIT_TYPE_STRUCTURE)!=false then
return false
endif
return true
endfunction
function Tg takes nothing returns nothing
if Rg() then
call SetUnitPositionLoc(GetEnumUnit(),c)
endif
endfunction
function Rh takes nothing returns boolean
if IsUnitType(GetEnumUnit(),UNIT_TYPE_STRUCTURE)!=false then
return false
endif
return true
endfunction
function Th takes nothing returns nothing
if Rh() then
call SetUnitPositionLoc(GetEnumUnit(),S)
endif
endfunction
function Tx takes nothing returns nothing
local player lx=GetOwningPlayer(GetKillingUnit())
local playerstate bx=PLAYER_STATE_RESOURCE_LUMBER
local playerstate yx
local playerstate px
local player ex
local force qx
local location ax
local real nx
local real dx
local player fx
local force Rx
if bx==PLAYER_STATE_RESOURCE_GOLD then
set yx=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(lx,yx,GetPlayerState(lx,yx)+250)
elseif bx==PLAYER_STATE_RESOURCE_LUMBER then
set px=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(lx,px,GetPlayerState(lx,px)+250)
endif
call SetPlayerState(lx,bx,GetPlayerState(lx,bx)+250)
set ex=GetOwningPlayer(GetKillingUnit())
set qx=CreateForce()
call ForceAddPlayer(qx,ex)
if IsPlayerInForce(GetLocalPlayer(),qx) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_090")
endif
set y=GetUnitLoc(GetDyingUnit())
set fx=GetOwningPlayer(GetDyingUnit())
set Rx=CreateForce()
call ForceAddPlayer(Rx,fx)
set ax=y
set nx=GetLocationX(ax)
set dx=GetLocationY(ax)
if IsPlayerInForce(GetLocalPlayer(),Rx) then
call PingMinimap(nx,dx,2.00)
endif
call RemoveLocation(y)
set lx=null
set bx=null
set yx=null
set px=null
set ex=null
set qx=null
set ax=null
set fx=null
set Rx=null
endfunction
function ZE takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function UE takes nothing returns boolean
if not ZE() then
return false
endif
return true
endfunction
function UF takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747990071 then
return false
endif
return true
endfunction
function UL takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function ZT takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989043 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function UT takes nothing returns boolean
if not ZT() then
return false
endif
return true
endfunction
function UW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989072,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989073,0)
endfunction
function Eyw takes string vyw returns boolean
local playerunitevent myw
local integer Qyw
local integer Wyw
set Ub[Zb]=vyw
set Zb=Zb+1
set myw=EVENT_PLAYER_UNIT_SPELL_FINISH
set Ub[Zb]="when calling alloc_Closure in Upkeep, line 6"
set Zb=Zb+1
if Fl==0 then
if kl<32768 then
set kl=kl+1
set Qyw=kl
set jl[Qyw]=677
else
call K8("Out of memory: Could not create Closure.","when calling error in Upkeep, line 6")
set Qyw=0
endif
else
set Fl=Fl-1
set Qyw=hl[Fl]
set jl[Qyw]=677
endif
set Zb=Zb-1
set Rc[Qyw]=0
set Tc[Qyw]=0
set Yc[Qyw]=0
set Ub[Zb]="when calling add in Upkeep, line 6"
set Zb=Zb+1
set Ub[Zb]="when calling toIntId in ClosureEvents, line 111"
set Zb=Zb+1
set Wyw=ec[GetHandleId(myw)]
if Wyw==0 then
set Wyw=G1(myw,"when calling registerEventId in ClosureEvents, line 228")
endif
set Zb=Zb-1
set Rc[Qyw]=Wyw
if dc[Rc[Qyw]]!=0 then
set Yc[dc[Rc[Qyw]]]=Qyw
set Tc[Qyw]=dc[Rc[Qyw]]
endif
set dc[Rc[Qyw]]=Qyw
set Zb=Zb-1-1
set myw=null
return true
endfunction
function Ufw takes nothing returns boolean
set Zb=0
return Eyw("Upkeep, line 1")
endfunction
function Ug takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747990091 then
return false
endif
return true
endfunction
function Uh takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989077 then
return false
endif
return true
endfunction
function V8 takes nothing returns boolean
call CreateGroup()
return true
endfunction
function VA takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651855,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651851,0)
endfunction
function CI takes nothing returns boolean
if GetResearched()!=1378889797 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889797,true)!=1 then
return false
endif
return true
endfunction
function VI takes nothing returns boolean
if not CI() then
return false
endif
return true
endfunction
function VJ takes nothing returns nothing
local integer DJ=1
local integer HJ=1751343475
local player JJ=GetOwningPlayer(GetTriggerUnit())
local rect CJ=bj_mapInitialPlayableArea
local location XJ=Location(GetRectCenterX(CJ),GetRectCenterY(CJ))
local location KJ=Location(GetLocationX(XJ)+100000000.00,GetLocationY(XJ)+100000000.00)
local real LJ=bj_UNIT_FACING
call GroupClear(bj_lastCreatedGroup)
loop
set DJ=DJ-1
exitwhen DJ<0
call CreateUnitAtLocSaveLast(JJ,HJ,KJ,LJ)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
call ShowUnit(bj_lastCreatedUnit,false)
set JJ=null
set KJ=null
set XJ=null
set CJ=null
endfunction
function Vlw takes string Xlw returns boolean
local integer Clw
set Ub[Zb]=Xlw
set Zb=Zb+1
set cl=clw("when calling new_Table in TypeCasting, line 6")
set Ub[Zb]="when calling initTypecastData in TypeCasting, line 14"
set Zb=Zb+1
set Clw=cl
set Ub[Zb]="when calling saveString in TypeCasting, line 11"
set Zb=Zb+1
if lb[Clw]==0 then
if Clw==0 then
call K8("Nullpointer exception when calling Table.saveString","when calling error in Table, line 60")
else
call K8("Called Table.saveString on invalid object.","when calling error in Table, line 60")
endif
endif
call SaveStr(sl,Clw,0,"")
set Zb=Zb-1-1-1
return true
endfunction
function Vdw takes nothing returns boolean
set Zb=0
return Vlw("TypeCasting, line 1")
endfunction
function Llw takes timer Jlw,string Klw returns nothing
set Ub[Zb]=Klw
set Zb=Zb+1
if Jlw==null then
call K8("Trying to release a null timer","when calling error in TimerUtils, line 37")
set Zb=Zb-1
return
endif
if Plw(Jlw,"when calling getData in TimerUtils, line 39")==679645218 then
call K8("ReleaseTimer: Double free!","when calling error in TimerUtils, line 40")
set Zb=Zb-1
return
endif
call Qlw(Jlw,679645218,"when calling setData in TimerUtils, line 42")
call PauseTimer(Jlw)
set tl[il]=Jlw
set il=il+1
set Zb=Zb-1
endfunction
function X4 takes integer K4,string L4 returns nothing
set Ub[Zb]=L4
set Zb=Zb+1
set Ub[Zb]="when calling CallbackSingle_onDestroy in ClosureTimers, line 79"
set Zb=Zb+1
call Llw(Wc[K4],"when calling release in ClosureTimers, line 80")
set Zb=Zb-1
set Ub[Zb]="when calling CallbackSingle in ClosureTimers, line 79"
set Zb=Zb+1
if Kl[K4]==0 then
call K8("Double free: object of type CallbackSingle","when calling error in ClosureTimers, line 63")
else
set Dl[Hl]=K4
set Hl=Hl+1
set Kl[K4]=0
endif
set Zb=Zb-1-1
endfunction
function A1 takes integer U1 returns nothing
local integer I1
local trigger P1
call TriggerAddCondition(ol,Condition(Ff))
call TriggerAddCondition(Ol,Condition(kf))
call TriggerAddAction(bc,jf)
call TriggerAddAction(yc,xf)
call TriggerAddAction(pc,vf)
set I1=0
set U1=bj_MAX_PLAYERS-1
loop
exitwhen I1>U1
call TriggerRegisterPlayerEvent(yc,TO[I1],EVENT_PLAYER_LEAVE)
set P1=pc
call TriggerRegisterPlayerEvent(P1,TO[I1],EVENT_PLAYER_ARROW_DOWN_DOWN)
call TriggerRegisterPlayerEvent(P1,TO[I1],EVENT_PLAYER_ARROW_DOWN_UP)
call TriggerRegisterPlayerEvent(P1,TO[I1],EVENT_PLAYER_ARROW_UP_DOWN)
call TriggerRegisterPlayerEvent(P1,TO[I1],EVENT_PLAYER_ARROW_UP_UP)
call TriggerRegisterPlayerEvent(P1,TO[I1],EVENT_PLAYER_ARROW_LEFT_DOWN)
call TriggerRegisterPlayerEvent(P1,TO[I1],EVENT_PLAYER_ARROW_LEFT_UP)
call TriggerRegisterPlayerEvent(P1,TO[I1],EVENT_PLAYER_ARROW_RIGHT_DOWN)
call TriggerRegisterPlayerEvent(P1,TO[I1],EVENT_PLAYER_ARROW_RIGHT_UP)
call TriggerRegisterPlayerEvent(P1,TO[I1],EVENT_PLAYER_END_CINEMATIC)
call TriggerRegisterPlayerEvent(P1,TO[I1],EVENT_PLAYER_MOUSE_UP)
call TriggerRegisterPlayerEvent(P1,TO[I1],EVENT_PLAYER_MOUSE_DOWN)
call TriggerRegisterPlayerEvent(P1,TO[I1],EVENT_PLAYER_MOUSE_MOVE)
call TriggerRegisterPlayerChatEvent(P1,TO[I1],"",false)
set I1=I1+1
endloop
call lOw(EVENT_PLAYER_UNIT_SPELL_EFFECT,null,mf,null)
set P1=null
endfunction
function taw takes integer raw,string saw returns nothing
set Ub[Zb]=saw
set Zb=Zb+1
if ab[raw]==0 then
if raw==0 then
call K8("Nullpointer exception when calling LLEntry.LLEntry","when calling error in LinkedList, line 396")
else
call K8("Called LLEntry.LLEntry on invalid object.","when calling error in LinkedList, line 396")
endif
endif
set Ub[Zb]="when calling destroyLLEntry in LinkedList, line 396"
set Zb=Zb+1
set Ub[Zb]="when calling LLEntry in LinkedList, line 396"
set Zb=Zb+1
if ab[raw]==0 then
call K8("Double free: object of type LLEntry","when calling error in LinkedList, line 396")
else
set pb[eb]=raw
set eb=eb+1
set ab[raw]=0
endif
set Zb=Zb-1-1-1
endfunction
function gaw takes integer Taw,integer Yaw,string Gaw returns nothing
set Ub[Zb]=Gaw
set Zb=Zb+1
if gb[Taw]==0 then
if Taw==0 then
call K8("Nullpointer exception when calling LinkedList.removeEntry","when calling error in LinkedList, line 373")
else
call K8("Called LinkedList.removeEntry on invalid object.","when calling error in LinkedList, line 373")
endif
endif
set Ub[Zb]="when calling removeEntry in LinkedList, line 373"
set Zb=Zb+1
set Go[Yo[Yaw]]=Go[Yaw]
set Yo[Go[Yaw]]=Yo[Yaw]
call taw(Yaw,"when calling LLEntry in LinkedList, line 376")
set xo[Taw]=xo[Taw]-1
set Zb=Zb-1-1
endfunction
function Tww takes integer nww_2,integer dww,string fww returns nothing
local integer Rww
set Ub[Zb]=fww
set Zb=Zb+1
set Rww=Go[jo[nww_2]]
loop
exitwhen Rww==jo[nww_2]
if To[Rww]==dww then
call gaw(nww_2,Rww,"when calling removeEntry in LinkedList, line 126")
set Zb=Zb-1
return
endif
set Rww=Go[Rww]
endloop
set Zb=Zb-1
endfunction
function mew takes integer jew,integer xew,string vew returns nothing
set Ub[Zb]=vew
set Zb=Zb+1
if Zl[jew]==0 then
if jew==0 then
call K8("Nullpointer exception when calling City.getCityModifierOnRemove","when calling error in City, line 411")
else
call K8("Called City.getCityModifierOnRemove on invalid object.","when calling error in City, line 411")
endif
endif
set Ub[Zb]="when calling getCityModifierOnRemove in City, line 411"
set Zb=Zb+1
if GS[Bqw(RS,xew,"when calling get in City, line 412")]then
set sc[jew]=sc[jew]-YS[Bqw(RS,xew,"when calling get in City, line 413")]
endif
set tc[jew]=tc[jew]-kS[Bqw(RS,xew,"when calling get in City, line 414")]
set Zb=Zb-1-1
endfunction
function CM takes integer DM,integer HM,string JM returns boolean
local integer KM
local boolean LM
local integer XM
set Ub[Zb]=JM
set Zb=Zb+1
set KM=cc[DM]
set Ub[Zb]="when calling has in City, line 366"
set Zb=Zb+1
if gb[KM]==0 then
if KM==0 then
call K8("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call K8("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set LM=aww(KM,HM)
set Zb=Zb-1
if not LM then
set Zb=Zb-1
return false
endif
set XM=cc[DM]
set Ub[Zb]="when calling remove in City, line 368"
set Zb=Zb+1
if gb[XM]==0 then
if XM==0 then
call K8("Nullpointer exception when calling LinkedList.remove","when calling error in LinkedList, line 122")
else
call K8("Called LinkedList.remove on invalid object.","when calling error in LinkedList, line 122")
endif
endif
call Tww(XM,HM,"when calling remove in LinkedList, line 122")
set Zb=Zb-1
call mew(DM,HM,"when calling getCityModifierOnRemove in City, line 370")
set Zb=Zb-1
return true
endfunction
function Hiw takes multiboard Ziw,integer Uiw,integer Iiw,real Piw,string Aiw returns nothing
local multiboarditem Diw=MultiboardGetItem(Ziw,Iiw,Uiw)
call MultiboardSetItemWidth(Diw,Piw)
call MultiboardSetItemValue(Diw,Aiw)
set Diw=null
endfunction
function jrw takes string arw returns multiboard
local multiboard nrw
local integer drw
local integer frw
local integer Rrw
local integer Trw
local integer Yrw
local integer Grw
local integer grw
local integer hrw
local string Frw
local real krw
set Ub[Zb]=arw
set Zb=Zb+1
set bj_lastCreatedMultiboard=CreateMultiboard()
call MultiboardSetRowCount(bj_lastCreatedMultiboard,10)
call MultiboardSetColumnCount(bj_lastCreatedMultiboard,6)
call MultiboardSetTitleText(bj_lastCreatedMultiboard,"Income: 2:00")
call MultiboardDisplay(bj_lastCreatedMultiboard,true)
set nrw=bj_lastCreatedMultiboard
call MultiboardMinimize(nrw,true)
call MultiboardSetItemsStyle(nrw,true,false)
set drw=0
set frw=23
loop
exitwhen drw>frw
if YO==TO[drw]then
call MultiboardDisplay(nrw,false)
endif
set drw=drw+1
endloop
set Rrw=0
set Trw=9
loop
exitwhen Rrw>Trw
set Yrw=0
set Grw=5
loop
exitwhen Yrw>Grw
set krw=Raw(wO[Rrw],Yrw,"when calling get in MultiboardCityUpdate, line 14")/1000.
set grw=Raw(oO[Rrw],Yrw,"when calling get in MultiboardCityUpdate, line 14")
set Ub[Zb]="when calling stringFromIndex in MultiboardCityUpdate, line 14"
set Zb=Zb+1
set hrw=cl
set Ub[Zb]="when calling loadString in TypeCasting, line 29"
set Zb=Zb+1
if lb[hrw]==0 then
if hrw==0 then
call K8("Nullpointer exception when calling Table.loadString","when calling error in Table, line 57")
else
call K8("Called Table.loadString on invalid object.","when calling error in Table, line 57")
endif
endif
set Frw=LoadStr(sl,hrw,grw)
set Zb=Zb-1
set arw=Frw
set Zb=Zb-1
call Hiw(nrw,Yrw,Rrw,krw,Frw)
set Yrw=Yrw+1
endloop
set Rrw=Rrw+1
endloop
set Zb=Zb-1
set wR=nrw
set nrw=null
return wR
endfunction
function Irw takes integer xrw,string vrw returns nothing
local integer mrw
local integer Qrw
local integer Wrw
local integer Erw
local boolean Zrw
local multiboard Urw
set Ub[Zb]=vrw
set Zb=Zb+1
set mrw=0
set Qrw=23
loop
exitwhen mrw>Qrw
set Erw=qO[mrw]
set vrw="when calling isInGame in MultiboardCityUpdate, line 20"
set Ub[Zb]="when calling isInGame in MultiboardCityUpdate, line 20"
set Zb=Zb+1
if vb[Erw]==0 then
if Erw==0 then
call K8("Nullpointer exception when calling PlayerStats.isInGame","when calling error in PlayerStats, line 14")
else
call K8("Called PlayerStats.isInGame on invalid object.","when calling error in PlayerStats, line 14")
endif
endif
set Zrw=dO[Erw]
set Zb=Zb-1
if Zrw then
set OO[mrw]=jrw("when calling createCoEMultiboard in MultiboardCityUpdate, line 21")
endif
set mrw=mrw+1
endloop
set Wrw=0
set xrw=23
loop
exitwhen Wrw>xrw
set Urw=OO[Wrw]
if YO==TO[Wrw]then
call MultiboardDisplay(Urw,true)
endif
set Wrw=Wrw+1
endloop
set Zb=Zb-1
set Urw=null
endfunction
function Oew takes string oew returns nothing
endfunction
function W7 takes integer a7,string n7 returns nothing
local integer d7
local integer f7
local integer R7
local integer T7
local integer Y7
local integer G7
local integer g7
local unit h7
local player F7
local integer k7
local unit j7
local integer x7
local integer v7
local boolean m7
local integer Q7
set Ub[Zb]=n7
set Zb=Zb+1
set d7=Vc[a7]*Bc[a7]
set T7=vS-1
set Y7=(Vc[a7]+1)*Bc[a7]-1
if T7<2147483647 then
set G7=T7
else
set G7=2147483647
endif
if Y7<G7 then
set G7=Y7
endif
set f7=G7
loop
exitwhen d7>f7
set g7=PS[d7]
set n7="when calling getCityUnit in Economy, line 31"
set Ub[Zb]="when calling getCityUnit in Economy, line 31"
set Zb=Zb+1
if Zl[g7]==0 then
if g7==0 then
call K8("Nullpointer exception when calling City.getCityUnit","when calling error in City, line 176")
else
call K8("Called City.getCityUnit on invalid object.","when calling error in City, line 176")
endif
endif
set h7=KS[g7]
set Zb=Zb-1
set R7=GetPlayerId(GetOwningPlayer(h7))
set k7=PS[d7]
set Ub[Zb]="when calling getCityUnit in Economy, line 32"
set Zb=Zb+1
if Zl[k7]==0 then
if k7==0 then
call K8("Nullpointer exception when calling City.getCityUnit","when calling error in City, line 176")
else
call K8("Called City.getCityUnit on invalid object.","when calling error in City, line 176")
endif
endif
set j7=KS[k7]
set Zb=Zb-1
set F7=GetOwningPlayer(j7)
if GetPlayerSlotState(F7)==PLAYER_SLOT_STATE_PLAYING then
set m7=GetPlayerController(F7)==MAP_CONTROL_USER
else
set m7=false
endif
if m7 then
set Q7=Lc[R7]
set x7=PS[d7]
set Ub[Zb]="when calling countTax in Economy, line 33"
set Zb=Zb+1
if Zl[x7]==0 then
if x7==0 then
call K8("Nullpointer exception when calling City.countTax","when calling error in City, line 266")
else
call K8("Called City.countTax on invalid object.","when calling error in City, line 266")
endif
endif
set v7=tN(x7,"when calling countTax in City, line 266")
set Zb=Zb-1
set Lc[R7]=Q7+v7
endif
set d7=d7+1
endloop
set Zb=Zb-1
set h7=null
set F7=null
set j7=null
endfunction
function XSw takes integer KSw returns nothing
local group LSw
call TriggerRegisterEnterRegion(CreateTrigger(),Po,Filter(Jf))
call lOw(EVENT_PLAYER_UNIT_ISSUED_ORDER,null,Kf,null)
call GroupEnumUnitsInRect(yO,Io,null)
call ForGroup(yO,Lf)
set LSw=yO
call GroupClear(LSw)
call DestroyGroup(LSw)
set LSw=null
endfunction
function d4 takes group p4,integer e4,string q4 returns nothing
local group a4
local unit n4
set Ub[Zb]=q4
set Zb=Zb+1
set a4=p4
loop
exitwhen FirstOfGroup(a4)==null
set n4=FirstOfGroup(a4)
call GroupRemoveUnit(a4,n4)
call Bew(e4,n4,"when calling callback in ClosureForGroups, line 31")
endloop
set Zb=Zb-1
set a4=null
set n4=null
endfunction
function bow takes string oow returns nothing
local group Oow
local integer low
set Ub[Zb]=oow
set Zb=Zb+1
call RemoveUnit(xO)
set Oow=jO
set Ub[Zb]="when calling alloc_Closure in Preloader, line 45"
set Zb=Zb+1
if Il==0 then
if Pl<32768 then
set Pl=Pl+1
set low=Pl
set Al[low]=687
else
call K8("Out of memory: Could not create Closure.","when calling error in Preloader, line 45")
set low=0
endif
else
set Il=Il-1
set low=Ul[Il]
set Al[low]=687
endif
set Zb=Zb-1
call d4(Oow,low,"when calling forEachFrom in Preloader, line 45")
call DestroyGroup(jO)
set jO=null
set Zb=Zb-1
set Oow=null
endfunction
function oqw takes integer sqw,string tqw returns nothing
local integer iqw
local integer Sqw
local integer cqw
set Ub[Zb]=tqw
set Zb=Zb+1
if Kl[sqw]==0 then
if sqw==0 then
call K8("Nullpointer exception when calling CallbackSingle.call","when calling error in ClosureTimers, line 65")
else
call K8("Called CallbackSingle.call on invalid object.","when calling error in ClosureTimers, line 65")
endif
endif
if Kl[sqw]<=645 then
if Kl[sqw]<=642 then
if Kl[sqw]<=640 then
if Kl[sqw]<=639 then
set Ub[Zb]="when calling City_closure_impl in ClosureTimers, line 65"
set Zb=Zb+1
set iqw=HS[sqw]
set Sqw=JS[sqw]
set Ub[Zb]="when calling removeModifier in City, line 362"
set Zb=Zb+1
if Zl[iqw]==0 then
if iqw==0 then
call K8("Nullpointer exception when calling City.removeModifier","when calling error in City, line 365")
else
call K8("Called City.removeModifier on invalid object.","when calling error in City, line 365")
endif
endif
call CM(iqw,Sqw,"when calling removeModifier in City, line 365")
set Zb=Zb-1-1
else
call A1(sqw)
endif
elseif Kl[sqw]<=641 then
set mc=mc+50
else
set mc=mc*2
endif
elseif Kl[sqw]<=644 then
if Kl[sqw]<=643 then
set mc=mc/2
set cqw=mc
if cqw!=250 then
call Oew("Expected <"+I2S(250)+">, Actual <"+I2S(cqw)+">")
endif
else
call W7(sqw,"when calling Economy_closure_impl in ClosureTimers, line 65")
endif
else
call IssueImmediateOrderById(no[sqw],851976)
endif
elseif Kl[sqw]<=649 then
if Kl[sqw]<=647 then
if Kl[sqw]<=646 then
call IssueImmediateOrderById(fo[sqw],851976)
else
call IssuePointOrderById(Vo[sqw],Bo[sqw],No[sqw],Mo[sqw])
endif
elseif Kl[sqw]<=648 then
call Irw(sqw,"when calling MultiboardCityUpdate_closure_impl in ClosureTimers, line 65")
else
call IssueImmediateOrderById(lO[sqw],851976)
endif
elseif Kl[sqw]<=651 then
if Kl[sqw]<=650 then
call XSw(sqw)
else
set Ub[Zb]="when calling Preloader_closure_impl in ClosureTimers, line 65"
set Zb=Zb+1
call bow("when calling finishPreload in Preloader, line 54")
set Zb=Zb-1
endif
else
call IssueImmediateOrderById(mO[sqw],851976)
endif
set Zb=Zb-1
endfunction
function J4 takes string D4 returns nothing
local integer H4
set Ub[Zb]=D4
set Zb=Zb+1
set H4=Plw(GetExpiredTimer(),"when calling getData in ClosureTimers, line 75")
call oqw(H4,"when calling call in ClosureTimers, line 76")
set Ub[Zb]="when calling CallbackSingle in ClosureTimers, line 77"
set Zb=Zb+1
if Kl[H4]==0 then
if H4==0 then
call K8("Nullpointer exception when calling CallbackSingle.CallbackSingle","when calling error in ClosureTimers, line 63")
else
call K8("Called CallbackSingle.CallbackSingle on invalid object.","when calling error in ClosureTimers, line 63")
endif
endif
call X4(H4,"when calling destroyCallbackSingle in ClosureTimers, line 63")
set Zb=Zb-1-1
endfunction
function Vfw takes nothing returns nothing
set Zb=0
set Ub[Zb]="ClosureTimers, line 68"
set Zb=Zb+1
call J4("when calling staticCallback in ClosureTimers, line 70")
set Zb=Zb-1
endfunction
function Vm takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988565,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988563,0)
endfunction
function Vv takes nothing returns nothing
call SetMapFlag(MAP_LOCK_RESOURCE_TRADING,false)
endfunction
function W6 takes nothing returns boolean
local integer x6
local player v6
local boolean m6
local boolean Q6
if GetOwningPlayer(GetSpellAbilityUnit())==GetOwningPlayer(GetSpellTargetUnit()) then
set Q6=true
else
set v6=GetOwningPlayer(GetSpellTargetUnit())
if GetPlayerSlotState(v6)==PLAYER_SLOT_STATE_PLAYING then
set m6=GetPlayerController(v6)==MAP_CONTROL_USER
else
set m6=false
endif
set Q6=not m6
endif
if Q6 then
set v6=null
return false
endif
set x6=GetSpellAbilityId()
set v6=null
return x6==1093677396 or x6==1093677397 or x6==1093677398 or x6==1093677400 or x6==1093677399
endfunction
function WA takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989825,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989817,0)
endfunction
function WE takes nothing returns nothing
set s=bj_FORCE_ALL_PLAYERS
call ForForce(s,Qe)
endfunction
function WG takes nothing returns nothing
local unit mG=GetSpellTargetUnit()
local unitstate QG=UNIT_STATE_MANA
call SetUnitState(mG,UNIT_STATE_MANA,RMaxBJ(0.,GetUnitState(GetSpellTargetUnit(),QG)-600.00))
set mG=null
set QG=null
endfunction
function QI takes nothing returns boolean
if GetResearched()!=1378890033 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890033,true)!=1 then
return false
endif
return true
endfunction
function WI takes nothing returns boolean
if not QI() then
return false
endif
return true
endfunction
function WJ takes nothing returns nothing
local integer FJ=1
local integer kJ=1751868773
local player jJ=GetOwningPlayer(GetTriggerUnit())
local rect QJ=bj_mapInitialPlayableArea
local location mJ=Location(GetRectCenterX(QJ),GetRectCenterY(QJ))
local location xJ=Location(GetLocationX(mJ)+100000000.00,GetLocationY(mJ)+100000000.00)
local real vJ=bj_UNIT_FACING
call GroupClear(bj_lastCreatedGroup)
loop
set FJ=FJ-1
exitwhen FJ<0
call CreateUnitAtLocSaveLast(jJ,kJ,xJ,vJ)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
call ShowUnit(bj_lastCreatedUnit,false)
set jJ=null
set xJ=null
set mJ=null
set QJ=null
endfunction
function WT takes nothing returns nothing
call CreateQuestBJ(bj_QUESTTYPE_OPT_DISCOVERED,"TRIGSTR_097","TRIGSTR_098","ReplaceableTextures\\CommandButtons\\BTNSteelMelee.blp")
call CreateQuestBJ(bj_QUESTTYPE_OPT_DISCOVERED,"TRIGSTR_103","TRIGSTR_104","ReplaceableTextures\\WorldEditUI\\Doodad-Cinematic.blp")
call CreateQuestBJ(bj_QUESTTYPE_OPT_DISCOVERED,"TRIGSTR_2667","TRIGSTR_2668","ReplaceableTextures\\WorldEditUI\\Editor-MultipleUnits.blp")
endfunction
function WU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989582,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989583,0)
endfunction
function QX takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990328 then
return false
endif
return true
endfunction
function WX takes nothing returns boolean
if not QX() then
return false
endif
return true
endfunction
function QY takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989042 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function WY takes nothing returns boolean
if not QY() then
return false
endif
return true
endfunction
function mSw takes string kSw returns boolean
local playerevent jSw
local integer xSw
local integer vSw
set Ub[Zb]=kSw
set Zb=Zb+1
set jSw=EVENT_PLAYER_LEAVE
set Ub[Zb]="when calling alloc_Closure in OnPlayerLeave, line 6"
set Zb=Zb+1
if Fl==0 then
if kl<32768 then
set kl=kl+1
set xSw=kl
set jl[xSw]=674
else
call K8("Out of memory: Could not create Closure.","when calling error in OnPlayerLeave, line 6")
set xSw=0
endif
else
set Fl=Fl-1
set xSw=hl[Fl]
set jl[xSw]=674
endif
set Zb=Zb-1
set Rc[xSw]=0
set Tc[xSw]=0
set Yc[xSw]=0
set Ub[Zb]="when calling add in OnPlayerLeave, line 6"
set Zb=Zb+1
set Ub[Zb]="when calling toIntId in ClosureEvents, line 111"
set Zb=Zb+1
set vSw=ec[GetHandleId(jSw)]
if vSw==0 then
set vSw=G1(jSw,"when calling registerEventId in ClosureEvents, line 228")
endif
set Zb=Zb-1
set Rc[xSw]=vSw
if dc[Rc[xSw]]!=0 then
set Yc[dc[Rc[xSw]]]=xSw
set Tc[xSw]=dc[Rc[xSw]]
endif
set dc[Rc[xSw]]=xSw
set Zb=Zb-1-1
set jSw=null
return true
endfunction
function Wfw takes nothing returns boolean
set Zb=0
return mSw("OnPlayerLeave, line 1")
endfunction
function Wm takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988788,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988535,0)
endfunction
function X8 takes nothing returns boolean
set oo=CreateTimer()
call TimerStart(oo,100000.,false,null)
call TimerStart(CreateTimer(),0.030,true,Af)
return true
endfunction
function XD takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990601,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990599,0)
endfunction
function XK takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function XOw takes nothing returns boolean
return true
endfunction
function XQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651824,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651825,0)
endfunction
function LY takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989315 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function XY takes nothing returns boolean
if not LY() then
return false
endif
return true
endfunction
function Y2 takes nothing returns boolean
local trigger f2=CreateTrigger()
local trigger d2
local integer R2
local integer T2
call TriggerAddCondition(f2,Condition(Zf))
call TriggerAddAction(f2,Uf)
set d2=f2
set R2=0
set T2=23
loop
exitwhen R2>T2
call TriggerRegisterPlayerChatEvent(d2,TO[R2],"-",false)
set R2=R2+1
endloop
set d2=null
set f2=null
return true
endfunction
function YL takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function YW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988559,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989064,0)
endfunction
function Xdw takes integer fdw,integer Rdw,integer Tdw,integer Ydw,integer Gdw,integer gdw,integer hdw,integer Fdw,integer kdw,integer jdw,integer xdw,integer vdw,integer mdw,integer Qdw,integer Wdw,integer Edw,integer Zdw,integer Udw,integer Idw,integer Pdw,integer Adw,integer Ddw,integer Hdw,integer Jdw,string Kdw returns integer
local integer Ldw
set Ub[Zb]=Kdw
set Zb=Zb+1
set Ldw=gww("when calling new_LinkedList in LinkedList, line 391")
call Waw(Ldw,fdw,"when calling add in LinkedList, line 393")
call Waw(Ldw,Rdw,"when calling add in LinkedList, line 393")
call Waw(Ldw,Tdw,"when calling add in LinkedList, line 393")
call Waw(Ldw,Ydw,"when calling add in LinkedList, line 393")
call Waw(Ldw,Gdw,"when calling add in LinkedList, line 393")
call Waw(Ldw,gdw,"when calling add in LinkedList, line 393")
call Waw(Ldw,hdw,"when calling add in LinkedList, line 393")
call Waw(Ldw,Fdw,"when calling add in LinkedList, line 393")
call Waw(Ldw,kdw,"when calling add in LinkedList, line 393")
call Waw(Ldw,jdw,"when calling add in LinkedList, line 393")
call Waw(Ldw,xdw,"when calling add in LinkedList, line 393")
call Waw(Ldw,vdw,"when calling add in LinkedList, line 393")
call Waw(Ldw,mdw,"when calling add in LinkedList, line 393")
call Waw(Ldw,Qdw,"when calling add in LinkedList, line 393")
call Waw(Ldw,Wdw,"when calling add in LinkedList, line 393")
call Waw(Ldw,Edw,"when calling add in LinkedList, line 393")
call Waw(Ldw,Zdw,"when calling add in LinkedList, line 393")
call Waw(Ldw,Udw,"when calling add in LinkedList, line 393")
call Waw(Ldw,Idw,"when calling add in LinkedList, line 393")
call Waw(Ldw,Pdw,"when calling add in LinkedList, line 393")
call Waw(Ldw,Adw,"when calling add in LinkedList, line 393")
call Waw(Ldw,Ddw,"when calling add in LinkedList, line 393")
call Waw(Ldw,Hdw,"when calling add in LinkedList, line 393")
call Waw(Ldw,Jdw,"when calling add in LinkedList, line 393")
set Zb=Zb-1
return Ldw
endfunction
function s0w takes string u0w returns integer
local integer r0w
set Ub[Zb]=u0w
set Zb=Zb+1
set Ub[Zb]="when calling HashSet in HashSet, line 4"
set Zb=Zb+1
if tb==0 then
if ib<32768 then
set ib=ib+1
set r0w=ib
set Sb[r0w]=691
else
call K8("Out of memory: Could not create HashSet.","when calling error in HashSet, line 5")
set r0w=0
endif
else
set tb=tb-1
set r0w=sb[tb]
set Sb[r0w]=691
endif
set Zb=Zb-1
set po[r0w]=0
set Zb=Zb-1
return r0w
endfunction
function gpw takes string Tpw returns boolean
local integer Ypw
local integer Gpw
set Ub[Zb]=Tpw
set Zb=Zb+1
set Ypw=0
set Gpw=23
loop
exitwhen Ypw>Gpw
set Gl[Ypw]=s0w("when calling new_HashSet in VoteKick, line 10")
set Ypw=Ypw+1
endloop
set gl=Xdw(sbw("red","when calling stringToIndex in VoteKick, line 13"),sbw("blue","when calling stringToIndex in VoteKick, line 14"),sbw("teal","when calling stringToIndex in VoteKick, line 15"),sbw("purple","when calling stringToIndex in VoteKick, line 16"),sbw("yellow","when calling stringToIndex in VoteKick, line 17"),sbw("orange","when calling stringToIndex in VoteKick, line 18"),sbw("green","when calling stringToIndex in VoteKick, line 19"),sbw("pink","when calling stringToIndex in VoteKick, line 20"),sbw("grey","when calling stringToIndex in VoteKick, line 21"),sbw("light blue","when calling stringToIndex in VoteKick, line 22"),sbw("dark green","when calling stringToIndex in VoteKick, line 23"),sbw("brown","when calling stringToIndex in VoteKick, line 24"),sbw("maroon","when calling stringToIndex in VoteKick, line 25"),sbw("navy","when calling stringToIndex in VoteKick, line 26"),sbw("turquoise","when calling stringToIndex in VoteKick, line 27"),sbw("violet","when calling stringToIndex in VoteKick, line 28"),sbw("wheat","when calling stringToIndex in VoteKick, line 29"),sbw("peach","when calling stringToIndex in VoteKick, line 30"),sbw("mint","when calling stringToIndex in VoteKick, line 31"),sbw("lavender","when calling stringToIndex in VoteKick, line 32"),sbw("coal","when calling stringToIndex in VoteKick, line 33"),sbw("snow","when calling stringToIndex in VoteKick, line 34"),sbw("emerald","when calling stringToIndex in VoteKick, line 35"),sbw("peanut","when calling stringToIndex in VoteKick, line 36"),"when calling asList in VoteKick, line 12")
set Zb=Zb-1
return true
endfunction
function Yfw takes nothing returns boolean
set Zb=0
return gpw("VoteKick, line 1")
endfunction
function EH takes nothing returns boolean
if GetUnitTypeId(GetConstructedStructure())==1747989040 then
return true
endif
if GetUnitTypeId(GetConstructedStructure())==1747990361 then
return true
endif
if GetUnitTypeId(GetConstructedStructure())==1747989831 then
return true
endif
return false
endfunction
function ZH takes nothing returns boolean
if e[GetPlayerId(GetOwningPlayer(GetConstructedStructure()))+1]!=false then
return false
endif
if not EH() then
return false
endif
return true
endfunction
function EL takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989060 then
return false
endif
return true
endfunction
function ZL takes nothing returns boolean
if not EL() then
return false
endif
return true
endfunction
function EW takes nothing returns boolean
if GetResearched()!=1378889801 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889801,true)!=1 then
return false
endif
return true
endfunction
function ZW takes nothing returns boolean
if not EW() then
return false
endif
return true
endfunction
function ZZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989557,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989559,0)
endfunction
function plw takes string Olw returns boolean
local playerunitevent llw
local integer blw
local integer ylw
set Ub[Zb]=Olw
set Zb=Zb+1
set llw=EVENT_PLAYER_UNIT_SPELL_CAST
set Ub[Zb]="when calling alloc_Closure in Taxation, line 6"
set Zb=Zb+1
if Fl==0 then
if kl<32768 then
set kl=kl+1
set blw=kl
set jl[blw]=676
else
call K8("Out of memory: Could not create Closure.","when calling error in Taxation, line 6")
set blw=0
endif
else
set Fl=Fl-1
set blw=hl[Fl]
set jl[blw]=676
endif
set Zb=Zb-1
set Rc[blw]=0
set Tc[blw]=0
set Yc[blw]=0
set Ub[Zb]="when calling add in Taxation, line 6"
set Zb=Zb+1
set Ub[Zb]="when calling toIntId in ClosureEvents, line 111"
set Zb=Zb+1
set ylw=ec[GetHandleId(llw)]
if ylw==0 then
set ylw=G1(llw,"when calling registerEventId in ClosureEvents, line 228")
endif
set Zb=Zb-1
set Rc[blw]=ylw
if dc[Rc[blw]]!=0 then
set Yc[dc[Rc[blw]]]=blw
set Tc[blw]=dc[Rc[blw]]
endif
set dc[Rc[blw]]=blw
set Zb=Zb-1-1
set llw=null
return true
endfunction
function Zfw takes nothing returns boolean
set Zb=0
return plw("Taxation, line 1")
endfunction
function qD takes nothing returns boolean
if GetResearched()!=1378890040 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890040,true)!=2 then
return false
endif
return true
endfunction
function aD takes nothing returns boolean
if not qD() then
return false
endif
return true
endfunction
function aH takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
return true
endfunction
function qK takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990354 then
return false
endif
return true
endfunction
function aK takes nothing returns boolean
if not qK() then
return false
endif
return true
endfunction
function qQ takes nothing returns boolean
if GetResearched()!=1378889796 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889796,true)!=1 then
return false
endif
return true
endfunction
function aQ takes nothing returns boolean
if not qQ() then
return false
endif
return true
endfunction
function afw takes nothing returns boolean
local integer bfw
local integer yfw
local integer pfw
local integer efw
local integer qfw
set Zb=0
set Ub[Zb]="City, line 1"
set Zb=Zb+1
set mS=120.0
set QS[0]=0.0020
set QS[1]=0.0025
set Ub[Zb]="when calling asList in City, line 36"
set Zb=Zb+1
set bfw=gww("when calling new_LinkedList in LinkedList, line 391")
call Waw(bfw,10000,"when calling add in LinkedList, line 393")
call Waw(bfw,20000,"when calling add in LinkedList, line 393")
set Zb=Zb-1
set WS[0]=bfw
set Ub[Zb]="when calling asList in City, line 37"
set Zb=Zb+1
set yfw=gww("when calling new_LinkedList in LinkedList, line 391")
call Waw(yfw,30000,"when calling add in LinkedList, line 393")
call Waw(yfw,40000,"when calling add in LinkedList, line 393")
set Zb=Zb-1
set WS[1]=yfw
set Ub[Zb]="when calling asList in City, line 38"
set Zb=Zb+1
set pfw=gww("when calling new_LinkedList in LinkedList, line 391")
call Waw(pfw,60000,"when calling add in LinkedList, line 393")
call Waw(pfw,90000,"when calling add in LinkedList, line 393")
set Zb=Zb-1
set WS[2]=pfw
set Ub[Zb]="when calling asList in City, line 39"
set Zb=Zb+1
set efw=gww("when calling new_LinkedList in LinkedList, line 391")
call Waw(efw,120000,"when calling add in LinkedList, line 393")
call Waw(efw,160000,"when calling add in LinkedList, line 393")
set Zb=Zb-1
set WS[3]=efw
set Ub[Zb]="when calling asList in City, line 40"
set Zb=Zb+1
set qfw=gww("when calling new_LinkedList in LinkedList, line 391")
call Waw(qfw,180000,"when calling add in LinkedList, line 393")
call Waw(qfw,220000,"when calling add in LinkedList, line 393")
set Zb=Zb-1
set WS[4]=qfw
set ES[0]=1.0
set ES[1]=0.5
set ES[2]=1.6
set ES[3]=2.0
set ZS[0]=0.0
set ZS[1]=20.0
set ZS[2]=-25.0
set ZS[3]=-60.0
set US[0]=0.05
set US[1]=0.0
set US[2]=0.15
set US[3]=0.30
set IS[0]=1.0
set IS[1]=1.1
set IS[2]=0.85
set IS[3]=0.7
set Zb=Zb-1
return true
endfunction
function ak takes nothing returns nothing
local group pk
local code ek
local boolean qk
set b=GetUnitsOfTypeIdAll(1747989301)
set pk=w
set ek=pp
set qk=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(pk,ek)
if qk then
call DestroyGroup(pk)
endif
call DestroyGroup(b)
set pk=null
endfunction
function lA takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function bA takes nothing returns boolean
if not lA() then
return false
endif
return true
endfunction
function bJ takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747988553 then
return false
endif
return true
endfunction
function bP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989836,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989837,0)
endfunction
function lU takes nothing returns boolean
if GetResearched()!=1378889810 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889810,true)!=1 then
return false
endif
return true
endfunction
function bU takes nothing returns boolean
if not lU() then
return false
endif
return true
endfunction
function Ov takes nothing returns boolean
if GetUnitTypeId(GetSpellTargetUnit())==1747990581 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747990580 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747989813 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747988569 then
return true
endif
return false
endfunction
function lv takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989048 then
return false
endif
if not Ov() then
return false
endif
return true
endfunction
function bv takes nothing returns boolean
if not lv() then
return false
endif
return true
endfunction
function SH takes nothing returns boolean
if GetResearched()!=1378890041 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890041,true)!=1 then
return false
endif
return true
endfunction
function cH takes nothing returns boolean
if not SH() then
return false
endif
return true
endfunction
function SL takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990350 then
return false
endif
return true
endfunction
function cL takes nothing returns boolean
if not SL() then
return false
endif
return true
endfunction
function SW takes nothing returns boolean
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889797,true)!=1 then
return false
endif
return true
endfunction
function cW takes nothing returns boolean
if not SW() then
return false
endif
return true
endfunction
function cZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990099,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990096,0)
endfunction
function cew takes nothing returns boolean
return true
endfunction
function cfw takes nothing returns boolean
set Zb=0
set Ub[Zb]="ObjectIdGenerator, line 1"
set Zb=Zb+1
set Ub[Zb]="when calling new_IdGenerator in ObjectIdGenerator, line 7"
set Zb=Zb+1
set Ub[Zb]="when calling IdGenerator in ObjectIdGenerator, line 20"
set Zb=Zb+1
if hb==0 then
if Fb<32768 then
set Fb=Fb+1
else
call K8("Out of memory: Could not create IdGenerator.","when calling error in ObjectIdGenerator, line 14")
endif
else
set hb=hb-1
endif
set Zb=Zb-1-1
set Ub[Zb]="when calling new_IdGenerator in ObjectIdGenerator, line 8"
set Zb=Zb+1
set Ub[Zb]="when calling IdGenerator in ObjectIdGenerator, line 20"
set Zb=Zb+1
if hb==0 then
if Fb<32768 then
set Fb=Fb+1
else
call K8("Out of memory: Could not create IdGenerator.","when calling error in ObjectIdGenerator, line 14")
endif
else
set hb=hb-1
endif
set Zb=Zb-1-1
set Ub[Zb]="when calling new_IdGenerator in ObjectIdGenerator, line 9"
set Zb=Zb+1
set Ub[Zb]="when calling IdGenerator in ObjectIdGenerator, line 20"
set Zb=Zb+1
if hb==0 then
if Fb<32768 then
set Fb=Fb+1
else
call K8("Out of memory: Could not create IdGenerator.","when calling error in ObjectIdGenerator, line 14")
endif
else
set hb=hb-1
endif
set Zb=Zb-1-1
set Ub[Zb]="when calling new_IdGenerator in ObjectIdGenerator, line 10"
set Zb=Zb+1
set Ub[Zb]="when calling IdGenerator in ObjectIdGenerator, line 20"
set Zb=Zb+1
if hb==0 then
if Fb<32768 then
set Fb=Fb+1
else
call K8("Out of memory: Could not create IdGenerator.","when calling error in ObjectIdGenerator, line 14")
endif
else
set hb=hb-1
endif
set Zb=Zb-1-1
set Ub[Zb]="when calling new_IdGenerator in ObjectIdGenerator, line 11"
set Zb=Zb+1
set Ub[Zb]="when calling IdGenerator in ObjectIdGenerator, line 20"
set Zb=Zb+1
if hb==0 then
if Fb<32768 then
set Fb=Fb+1
else
call K8("Out of memory: Could not create IdGenerator.","when calling error in ObjectIdGenerator, line 14")
endif
else
set hb=hb-1
endif
set Zb=Zb-1-1
set Ub[Zb]="when calling new_IdGenerator in ObjectIdGenerator, line 12"
set Zb=Zb+1
set Ub[Zb]="when calling IdGenerator in ObjectIdGenerator, line 20"
set Zb=Zb+1
if hb==0 then
if Fb<32768 then
set Fb=Fb+1
else
call K8("Out of memory: Could not create IdGenerator.","when calling error in ObjectIdGenerator, line 14")
endif
else
set hb=hb-1
endif
set Zb=Zb-1-1-1
return true
endfunction
function ij takes nothing returns boolean
if GetUnitTypeId(GetSpellTargetUnit())==1747988787 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747990361 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747989831 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747989040 then
return true
endif
return false
endfunction
function Sj takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988791 then
return false
endif
if not ij() then
return false
endif
return true
endfunction
function cj takes nothing returns boolean
if not Sj() then
return false
endif
return true
endfunction
function nA takes nothing returns boolean
if GetResearched()!=1378890049 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890049,true)!=1 then
return false
endif
return true
endfunction
function dA takes nothing returns boolean
if not nA() then
return false
endif
return true
endfunction
function nG takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989305 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function dG takes nothing returns boolean
if not nG() then
return false
endif
return true
endfunction
function dH takes nothing returns nothing
if GetUnitTypeId(GetEnumUnit())==1747988535 then
call ReplaceUnitBJ(GetEnumUnit(),1747988788,bj_UNIT_STATE_METHOD_RELATIVE)
endif
if GetUnitTypeId(GetEnumUnit())==1747990325 then
call ReplaceUnitBJ(GetEnumUnit(),1747990324,bj_UNIT_STATE_METHOD_RELATIVE)
endif
if GetUnitTypeId(GetEnumUnit())==1747989594 then
call ReplaceUnitBJ(GetEnumUnit(),1747990097,bj_UNIT_STATE_METHOD_RELATIVE)
endif
if GetUnitTypeId(GetEnumUnit())==1747988784 then
call ReplaceUnitBJ(GetEnumUnit(),1747988561,bj_UNIT_STATE_METHOD_RELATIVE)
endif
if GetUnitTypeId(GetEnumUnit())==1747988563 then
call ReplaceUnitBJ(GetEnumUnit(),1747988565,bj_UNIT_STATE_METHOD_RELATIVE)
endif
if GetUnitTypeId(GetEnumUnit())==1747988562 then
call ReplaceUnitBJ(GetEnumUnit(),1747988566,bj_UNIT_STATE_METHOD_RELATIVE)
endif
if GetUnitTypeId(GetEnumUnit())==1747988564 then
call ReplaceUnitBJ(GetEnumUnit(),1747988567,bj_UNIT_STATE_METHOD_RELATIVE)
endif
if GetUnitTypeId(GetEnumUnit())==1747990104 then
call ReplaceUnitBJ(GetEnumUnit(),1747990321,bj_UNIT_STATE_METHOD_RELATIVE)
endif
if GetUnitTypeId(GetEnumUnit())==1747990105 then
call ReplaceUnitBJ(GetEnumUnit(),1747990322,bj_UNIT_STATE_METHOD_RELATIVE)
endif
if GetUnitTypeId(GetEnumUnit())==1747990106 then
call ReplaceUnitBJ(GetEnumUnit(),1747990323,bj_UNIT_STATE_METHOD_RELATIVE)
endif
if GetUnitTypeId(GetEnumUnit())==1747989811 then
call ReplaceUnitBJ(GetEnumUnit(),1747989812,bj_UNIT_STATE_METHOD_RELATIVE)
endif
if GetUnitTypeId(GetEnumUnit())==1747990095 then
call ReplaceUnitBJ(GetEnumUnit(),1747990098,bj_UNIT_STATE_METHOD_RELATIVE)
endif
if GetUnitTypeId(GetEnumUnit())==1747990096 then
call ReplaceUnitBJ(GetEnumUnit(),1747990099,bj_UNIT_STATE_METHOD_RELATIVE)
endif
endfunction
function dP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989835,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989836,0)
endfunction
function nU takes nothing returns boolean
if GetResearched()!=1378889810 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889810,true)!=2 then
return false
endif
return true
endfunction
function dU takes nothing returns boolean
if not nU() then
return false
endif
return true
endfunction
function xB takes string dB,string fB,real RB,real TB,real YB,integer GB,real gB,real hB,boolean FB,string kB returns integer
local integer jB
set Ub[Zb]=kB
set Zb=Zb+1
set Ub[Zb]="when calling CityModifierClass in CityModifiers, line 39"
set Zb=Zb+1
if vl==0 then
if ml<32768 then
set ml=ml+1
set jB=ml
else
call K8("Out of memory: Could not create CityModifierClass.","when calling error in CityModifiers, line 28")
set jB=0
endif
else
set vl=vl-1
set jB=xl[vl]
endif
set Zb=Zb-1
set TS[jB]=RB
set YS[jB]=hB
set GS[jB]=FB
set gS[jB]=TB
set hS[jB]=GB
set FS[jB]=gB
set kS[jB]=YB
set jS[jB]=dB
set xS[jB]=fB
set Zb=Zb-1
return jB
endfunction
function nB takes string sB returns boolean
local integer tB
local integer iB
local integer SB
local integer cB
local integer oB
local integer OB
local integer lB
local integer bB
local integer yB
local integer pB
local integer eB
local integer qB
local integer aB
set Ub[Zb]=sB
set Zb=Zb+1
set iB=R2I(0.5)
set SB=R2I(1)
set Ub[Zb]="when calling asList in CityModifiers, line 9"
set Zb=Zb+1
set cB=gww("when calling new_LinkedList in LinkedList, line 391")
call Waw(cB,iB,"when calling add in LinkedList, line 393")
call Waw(cB,SB,"when calling add in LinkedList, line 393")
set Zb=Zb-1
set lS[0]=cB
set oB=R2I(1)
set OB=R2I(3)
set Ub[Zb]="when calling asList in CityModifiers, line 10"
set Zb=Zb+1
set lB=gww("when calling new_LinkedList in LinkedList, line 391")
call Waw(lB,oB,"when calling add in LinkedList, line 393")
call Waw(lB,OB,"when calling add in LinkedList, line 393")
set Zb=Zb-1
set lS[1]=lB
set bB=R2I(3)
set yB=R2I(10)
set Ub[Zb]="when calling asList in CityModifiers, line 11"
set Zb=Zb+1
set pB=gww("when calling new_LinkedList in LinkedList, line 391")
call Waw(pB,bB,"when calling add in LinkedList, line 393")
call Waw(pB,yB,"when calling add in LinkedList, line 393")
set Zb=Zb-1
set lS[2]=pB
set eB=R2I(10)
set qB=R2I(20)
set Ub[Zb]="when calling asList in CityModifiers, line 12"
set Zb=Zb+1
set aB=gww("when calling new_LinkedList in LinkedList, line 391")
call Waw(aB,eB,"when calling add in LinkedList, line 393")
call Waw(aB,qB,"when calling add in LinkedList, line 393")
set Zb=Zb-1
set lS[3]=aB
set bS=xB("|cffff0000Just conquered|r","|cffc00000-PO -pop|r",240,1.0,0.0,1,-1.0,-30.0,false,"when calling new_CityModifierClass in CityModifiers, line 70")
set yS=xB("|cfffffb00Just revolted|r","|cff00af00+PO|r|cffc00000 -pop|r",120.0,1.0,0.0,0,0.,30.0,false,"when calling new_CityModifierClass in CityModifiers, line 78")
set pS=xB("|cff33ff00Population Boom|r","|cff33ff00++pop|r",120.0,0.01,0.,0,0.,0.,true,"when calling new_CityModifierClass in CityModifiers, line 86")
set eS=xB("|cffff0000Plague outburst|r","|cffff0000--pop|r",240,0.03,0.,2,-1.,0.,true,"when calling new_CityModifierClass in CityModifiers, line 94")
set qS=xB("|cffaf0000Big Fire|r","|cffc00000-pop|r",30,0.01,0.,2,-1.,0.,true,"when calling new_CityModifierClass in CityModifiers, line 102")
set aS=xB("|cff15ff00More trade estabilished|r","|cff00af00+tax +pop|r",240,0.01,0.15,0,1.,0.,true,"when calling new_CityModifierClass in CityModifiers, line 110")
set nS=xB("|cffff0000Massacred population|r","|cff00af00+PO |r|cffff0000--pop|r",30,0.05,0.,3,-1.,10.,true,"when calling new_CityModifierClass in CityModifiers, line 118")
set dS=xB("|cff00ff00Prospering|r","|cff00af00+PO +pop +tax|r",240,0.01,0.10,1,1.,20.0,true,"when calling new_CityModifierClass in CityModifiers, line 126")
set fS=xB("|cffff0000Sieged|r","|cffc00000-PO -pop|r",5,1.0,0.,0,-1.,-10.0,true,"when calling new_CityModifierClass in CityModifiers, line 134")
set RS=R9("when calling new_HashMap in CityModifiers, line 144")
set tB=RS
call Kqw(tB,0,bS,"when calling put in CityModifiers, line 151")
call Kqw(tB,1,yS,"when calling put in CityModifiers, line 152")
call Kqw(tB,2,pS,"when calling put in CityModifiers, line 153")
call Kqw(tB,3,eS,"when calling put in CityModifiers, line 154")
call Kqw(tB,4,qS,"when calling put in CityModifiers, line 155")
call Kqw(tB,5,aS,"when calling put in CityModifiers, line 156")
call Kqw(tB,6,nS,"when calling put in CityModifiers, line 157")
call Kqw(tB,7,dS,"when calling put in CityModifiers, line 158")
call Kqw(tB,8,fS,"when calling put in CityModifiers, line 159")
set Zb=Zb-1
return true
endfunction
function dfw takes nothing returns boolean
set Zb=0
return nB("CityModifiers, line 1")
endfunction
function eF takes nothing returns nothing
local location iF
local location SF
local real cF
local real oF
local rect OF
local group lF
local group bF
local code yF
local boolean pF
set u=GetUnitLoc(GetSpellAbilityUnit())
set iF=u
set c=Location(GetLocationX(iF)+200.00,GetLocationY(iF)+0.00)
set SF=u
set cF=GetLocationX(SF)
set oF=GetLocationY(SF)
set O=Rect(cF-150,oF-140,cF+150,oF+140)
set OF=O
set lF=CreateGroup()
call GroupEnumUnitsInRect(lF,OF,null)
call DestroyBoolExpr(null)
set l=lF
set bF=l
set yF=rp
set pF=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(bF,yF)
if pF then
call DestroyGroup(bF)
endif
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747990081,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"stand")
call DestroyGroup(l)
call RemoveLocation(c)
call RemoveLocation(u)
set iF=null
set SF=null
set OF=null
set lF=null
set bF=null
endfunction
function eH takes nothing returns nothing
set s=bj_FORCE_ALL_PLAYERS
call ForForce(s,va)
endfunction
function pL takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989809 then
return false
endif
return true
endfunction
function eL takes nothing returns boolean
if not pL() then
return false
endif
return true
endfunction
function eOw takes nothing returns boolean
return true
endfunction
function pW takes nothing returns boolean
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889797,true)!=2 then
return false
endif
return true
endfunction
function eW takes nothing returns boolean
if not pW() then
return false
endif
return true
endfunction
function eZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989570,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989571,0)
endfunction
function og takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747990090 then
return false
endif
return true
endfunction
function Og takes nothing returns boolean
if not og() then
return false
endif
return true
endfunction
function lg takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747990081 then
return false
endif
return true
endfunction
function bg takes nothing returns boolean
if not lg() then
return false
endif
return true
endfunction
function Sg takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747990092 then
return false
endif
return true
endfunction
function cg takes nothing returns boolean
if not Sg() then
return false
endif
return true
endfunction
function yg takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747990072 then
return false
endif
return true
endfunction
function pg takes nothing returns boolean
if not yg() then
return false
endif
return true
endfunction
function eg takes nothing returns nothing
if cg() then
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747990091,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"Death Alternate")
endif
if Og() then
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747990089,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"Death Alternate")
endif
if bg() then
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747990073,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"Death Alternate")
endif
if pg() then
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747990071,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"Death Alternate")
endif
endfunction
function eh takes nothing returns nothing
local location ih
local location Sh
local real ch
local real oh
local rect Oh
local group lh
local group bh
local code yh
local boolean ph
set u=GetUnitLoc(GetSpellAbilityUnit())
set ih=u
set S=Location(GetLocationX(ih)+0.00,GetLocationY(ih)+200.00)
set Sh=u
set ch=GetLocationX(Sh)
set oh=GetLocationY(Sh)
set o=Rect(ch-140,oh-150,ch+140,oh+150)
set Oh=o
set lh=CreateGroup()
call GroupEnumUnitsInRect(lh,Oh,null)
call DestroyBoolExpr(null)
set l=lh
set bh=l
set yh=Ly
set ph=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(bh,yh)
if ph then
call DestroyGroup(bh)
endif
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747988824,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"stand")
call DestroyGroup(l)
call RemoveLocation(S)
call RemoveLocation(u)
set ih=null
set Sh=null
set Oh=null
set lh=null
set bh=null
endfunction
function em takes nothing returns boolean
if GetUnitTypeId(GetDyingUnit())!=1747989048 then
return false
endif
return true
endfunction
function fA takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990584,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990593,0)
endfunction
function dE takes nothing returns boolean
if GetResearched()!=1378889812 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889812,true)!=1 then
return false
endif
return true
endfunction
function fE takes nothing returns boolean
if not dE() then
return false
endif
return true
endfunction
function fF takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989078 then
return false
endif
return true
endfunction
function dI takes nothing returns boolean
if GetResearched()!=1378890034 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890034,true)!=1 then
return false
endif
return true
endfunction
function fI takes nothing returns boolean
if not dI() then
return false
endif
return true
endfunction
function fJ takes nothing returns nothing
local integer yJ=1
local integer pJ=1752461175
local player eJ=GetOwningPlayer(GetTriggerUnit())
local rect dJ=bj_mapInitialPlayableArea
local location nJ=Location(GetRectCenterX(dJ),GetRectCenterY(dJ))
local location qJ=Location(GetLocationX(nJ)+100000000.00,GetLocationY(nJ)+100000000.00)
local real aJ=bj_UNIT_FACING
call GroupClear(bj_lastCreatedGroup)
loop
set yJ=yJ-1
exitwhen yJ<0
call CreateUnitAtLocSaveLast(eJ,pJ,qJ,aJ)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
call ShowUnit(bj_lastCreatedUnit,false)
set eJ=null
set qJ=null
set nJ=null
set dJ=null
endfunction
function fU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989574,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989573,0)
endfunction
function fV takes nothing returns boolean
local boolean nV
local boolean dV
if GetUnitTypeId(GetSpellAbilityUnit())==1747988553 then
set nV=GetUnitTypeId(GetSpellTargetUnit())==1747989297
else
set nV=false
endif
if nV then
set dV=GetPlayerId(GetOwningPlayer(GetSpellTargetUnit()))==PLAYER_NEUTRAL_AGGRESSIVE
else
set dV=false
endif
return dV
endfunction
function dX takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989592 then
return false
endif
return true
endfunction
function fX takes nothing returns boolean
if not dX() then
return false
endif
return true
endfunction
function lC takes string SC returns boolean
local playerunitevent cC
local integer oC
local integer OC
set Ub[Zb]=SC
set Zb=Zb+1
set cC=EVENT_PLAYER_UNIT_ATTACKED
set Ub[Zb]="when calling alloc_Closure in CastleCapture, line 8"
set Zb=Zb+1
if Fl==0 then
if kl<32768 then
set kl=kl+1
set oC=kl
set jl[oC]=662
else
call K8("Out of memory: Could not create Closure.","when calling error in CastleCapture, line 8")
set oC=0
endif
else
set Fl=Fl-1
set oC=hl[Fl]
set jl[oC]=662
endif
set Zb=Zb-1
set Rc[oC]=0
set Tc[oC]=0
set Yc[oC]=0
set Ub[Zb]="when calling add in CastleCapture, line 8"
set Zb=Zb+1
set Ub[Zb]="when calling toIntId in ClosureEvents, line 111"
set Zb=Zb+1
set OC=ec[GetHandleId(cC)]
if OC==0 then
set OC=G1(cC,"when calling registerEventId in ClosureEvents, line 228")
endif
set Zb=Zb-1
set Rc[oC]=OC
if dc[Rc[oC]]!=0 then
set Yc[dc[Rc[oC]]]=oC
set Tc[oC]=dc[Rc[oC]]
endif
set dc[Rc[oC]]=oC
set Zb=Zb-1-1
set cC=null
return true
endfunction
function ffw takes nothing returns boolean
set Zb=0
return lC("CastleCapture, line 1")
endfunction
function fg takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989047 then
return false
endif
return true
endfunction
function fh takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747990089 then
return false
endif
return true
endfunction
function fj takes nothing returns nothing
local player oj=GetOwningPlayer(GetSpellTargetUnit())
local playerstate Oj=PLAYER_STATE_RESOURCE_GOLD
local playerstate lj
local playerstate bj
local player yj
local force pj
local location ej
local real qj
local real aj
local player nj
local force dj
if Oj==PLAYER_STATE_RESOURCE_GOLD then
set lj=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(oj,lj,GetPlayerState(oj,lj)+250)
elseif Oj==PLAYER_STATE_RESOURCE_LUMBER then
set bj=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(oj,bj,GetPlayerState(oj,bj)+250)
endif
call SetPlayerState(oj,Oj,GetPlayerState(oj,Oj)+250)
call RemoveUnit(GetSpellAbilityUnit())
set yj=GetOwningPlayer(GetSpellTargetUnit())
set pj=CreateForce()
call ForceAddPlayer(pj,yj)
if IsPlayerInForce(GetLocalPlayer(),pj) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_1230")
endif
set y=GetUnitLoc(GetSpellTargetUnit())
set nj=GetOwningPlayer(GetSpellTargetUnit())
set dj=CreateForce()
call ForceAddPlayer(dj,nj)
set ej=y
set qj=GetLocationX(ej)
set aj=GetLocationY(ej)
if IsPlayerInForce(GetLocalPlayer(),dj) then
call PingMinimap(qj,aj,2.00)
endif
call RemoveLocation(y)
set oj=null
set Oj=null
set lj=null
set bj=null
set yj=null
set pj=null
set ej=null
set nj=null
set dj=null
endfunction
function gD takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990604,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990602,0)
endfunction
function gG takes nothing returns nothing
local player fG=GetOwningPlayer(GetAttacker())
local player RG=GetOwningPlayer(GetAttacker())
local player TG
local player YG
local unit GG
set r[GetPlayerId(fG)+1]=r[GetPlayerId(RG)+1]+1
set TG=GetOwningPlayer(GetTriggerUnit())
set YG=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(TG)+1]=r[GetPlayerId(YG)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set GG=GetTriggerUnit()
call SetUnitState(GG,UNIT_STATE_LIFE,GetUnitState(GG,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set fG=null
set RG=null
set TG=null
set YG=null
set GG=null
endfunction
function gH takes nothing returns nothing
local player TH=GetOwningPlayer(GetTriggerUnit())
local boolexpr YH=Condition(Qa)
local group GH=CreateGroup()
local code fH
local boolean RH
call GroupEnumUnitsOfPlayer(GH,TH,YH)
call DestroyBoolExpr(YH)
set fH=Wa
set RH=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(GH,fH)
if RH then
call DestroyGroup(GH)
endif
set TH=null
set YH=null
set GH=null
endfunction
function gK takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function GP takes nothing returns boolean
if GetResearched()!=1378890032 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890032,true)!=1 then
return false
endif
return true
endfunction
function gP takes nothing returns boolean
if not GP() then
return false
endif
return true
endfunction
function gQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988558,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989057,0)
endfunction
function r7 takes string M6 returns boolean
local integer w7
local integer u7
set Ub[Zb]=M6
set Zb=Zb+1
set Ub[Zb]="when calling alloc_Closure in Economy, line 43"
set Zb=Zb+1
if Xl==0 then
if Cl<32768 then
set Cl=Cl+1
set w7=Cl
set Vl[w7]=635
else
call K8("Out of memory: Could not create Closure.","when calling error in Economy, line 43")
set w7=0
endif
else
set Xl=Xl-1
set w7=Ll[Xl]
set Vl[w7]=635
endif
set Zb=Zb-1
set Ub[Zb]="when calling doPeriodically in Economy, line 43"
set Zb=Zb+1
set Ub[Zb]="when calling start in ClosureTimers, line 36"
set Zb=Zb+1
if Vl[w7]==0 then
if w7==0 then
call K8("Nullpointer exception when calling CallbackPeriodic.start","when calling error in ClosureTimers, line 88")
else
call K8("Called CallbackPeriodic.start on invalid object.","when calling error in ClosureTimers, line 88")
endif
endif
call E4(w7,0.333333343,"when calling start in ClosureTimers, line 88")
set Zb=Zb-1-1
set Ub[Zb]="when calling alloc_Closure in Economy, line 50"
set Zb=Zb+1
if Xl==0 then
if Cl<32768 then
set Cl=Cl+1
set u7=Cl
set Vl[u7]=636
else
call K8("Out of memory: Could not create Closure.","when calling error in Economy, line 50")
set u7=0
endif
else
set Xl=Xl-1
set u7=Ll[Xl]
set Vl[u7]=636
endif
set Zb=Zb-1
set Ub[Zb]="when calling doPeriodically in Economy, line 50"
set Zb=Zb+1
set Ub[Zb]="when calling start in ClosureTimers, line 36"
set Zb=Zb+1
if Vl[u7]==0 then
if u7==0 then
call K8("Nullpointer exception when calling CallbackPeriodic.start","when calling error in ClosureTimers, line 88")
else
call K8("Called CallbackPeriodic.start on invalid object.","when calling error in ClosureTimers, line 88")
endif
endif
call E4(u7,10.0,"when calling start in ClosureTimers, line 88")
set Zb=Zb-1-1-1
return true
endfunction
function gfw takes nothing returns boolean
set Zb=0
return r7("Economy, line 1")
endfunction
function initMapBounds takes nothing returns nothing
local rect cond_result
local region receiver
local real temp
local real tuple_temp
set Uo=bj_mapInitialPlayableArea
call RegionAddRect(CreateRegion(),Uo)
set cond_result=GetWorldBounds()
set Io=cond_result
set receiver=CreateRegion()
call RegionAddRect(receiver,Io)
set Po=receiver
set temp=GetRectMaxX(Io)
set tuple_temp=GetRectMaxY(Io)
set Ao=temp
set Do=tuple_temp
endfunction
function gww_2 takes nothing returns boolean
call initMapBounds()
return true
endfunction
function gA takes nothing returns boolean
if GetResearched()!=1378890049 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890049,true)!=2 then
return false
endif
return true
endfunction
function hA takes nothing returns boolean
if not gA() then
return false
endif
return true
endfunction
function gJ takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())==1747988530 then
return true
endif
if GetUnitTypeId(GetTriggerUnit())==1747990327 then
return true
endif
if GetUnitTypeId(GetTriggerUnit())==1747989591 then
return true
endif
if GetUnitTypeId(GetTriggerUnit())==1747990085 then
return true
endif
return false
endfunction
function hJ takes nothing returns boolean
if not gJ() then
return false
endif
return true
endfunction
function hP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651844,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651845,0)
endfunction
function hSw takes nothing returns boolean
return true
endfunction
function gU takes nothing returns boolean
if GetResearched()!=1378889808 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889808,true)!=1 then
return false
endif
return true
endfunction
function hU takes nothing returns boolean
if not gU() then
return false
endif
return true
endfunction
function hbw takes nothing returns boolean
return true
endfunction
function y5 takes string l5 returns boolean
local integer b5
set Ub[Zb]=l5
set Zb=Zb+1
set Ub[Zb]="when calling alloc_Closure in DateTime, line 31"
set Zb=Zb+1
if Xl==0 then
if Cl<32768 then
set Cl=Cl+1
set b5=Cl
set Vl[b5]=634
else
call K8("Out of memory: Could not create Closure.","when calling error in DateTime, line 31")
set b5=0
endif
else
set Xl=Xl-1
set b5=Ll[Xl]
set Vl[b5]=634
endif
set Zb=Zb-1
set Ac[b5]=120.0
set Ub[Zb]="when calling doPeriodically in DateTime, line 31"
set Zb=Zb+1
set Ub[Zb]="when calling start in ClosureTimers, line 36"
set Zb=Zb+1
if Vl[b5]==0 then
if b5==0 then
call K8("Nullpointer exception when calling CallbackPeriodic.start","when calling error in ClosureTimers, line 88")
else
call K8("Called CallbackPeriodic.start on invalid object.","when calling error in ClosureTimers, line 88")
endif
endif
call E4(b5,1.0,"when calling start in ClosureTimers, line 88")
set Zb=Zb-1-1-1
return true
endfunction
function hfw takes nothing returns boolean
set Zb=0
return y5("DateTime, line 1")
endfunction
function hww takes nothing returns boolean
return true
endfunction
function i0w takes nothing returns boolean
return true
endfunction
function iA takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990322,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990105,0)
endfunction
function iC takes nothing returns boolean
return true
endfunction
function tE takes nothing returns boolean
if GetResearched()!=1378889800 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889800,true)!=2 then
return false
endif
return true
endfunction
function iE takes nothing returns boolean
if not tE() then
return false
endif
return true
endfunction
function tI takes nothing returns boolean
if GetResearched()!=1378890037 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890037,true)!=1 then
return false
endif
return true
endfunction
function iI takes nothing returns boolean
if not tI() then
return false
endif
return true
endfunction
function iU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989560,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989579,0)
endfunction
function tX takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990327 then
return false
endif
return true
endfunction
function iX takes nothing returns boolean
if not tX() then
return false
endif
return true
endfunction
function initialize takes nothing returns nothing
local integer i_2=0
local integer temp=UO
loop
exitwhen i_2>temp
set i_2=i_2+1
endloop
endfunction
function ifw takes nothing returns boolean
set Zb=0
set Ub[Zb]="StringUtils, line 1"
set Zb=Zb+1
set UO=127
call initialize()
call sbw("","when calling stringToIndex in StringUtils, line 167")
set Zb=Zb-1
return true
endfunction
function kL takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747988809 then
return false
endif
return true
endfunction
function jL takes nothing returns boolean
if not kL() then
return false
endif
return true
endfunction
function kW takes nothing returns boolean
if GetResearched()!=1378889799 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889799,true)!=2 then
return false
endif
return true
endfunction
function jW takes nothing returns boolean
if not kW() then
return false
endif
return true
endfunction
function jZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989559,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989569,0)
endfunction
function E0w takes string k0w returns boolean
local playerunitevent j0w
local playerunitevent x0w
local integer v0w
local integer m0w
local integer Q0w
local integer W0w
set Ub[Zb]=k0w
set Zb=Zb+1
set j0w=EVENT_PLAYER_UNIT_DEATH
set Ub[Zb]="when calling alloc_Closure in LimitMercenaryCamps, line 8"
set Zb=Zb+1
if Fl==0 then
if kl<32768 then
set kl=kl+1
set v0w=kl
set jl[v0w]=668
else
call K8("Out of memory: Could not create Closure.","when calling error in LimitMercenaryCamps, line 8")
set v0w=0
endif
else
set Fl=Fl-1
set v0w=hl[Fl]
set jl[v0w]=668
endif
set Zb=Zb-1
set Rc[v0w]=0
set Tc[v0w]=0
set Yc[v0w]=0
set Ub[Zb]="when calling add in LimitMercenaryCamps, line 8"
set Zb=Zb+1
set Ub[Zb]="when calling toIntId in ClosureEvents, line 111"
set Zb=Zb+1
set m0w=ec[GetHandleId(j0w)]
if m0w==0 then
set m0w=G1(j0w,"when calling registerEventId in ClosureEvents, line 228")
endif
set Zb=Zb-1
set Rc[v0w]=m0w
if dc[Rc[v0w]]!=0 then
set Yc[dc[Rc[v0w]]]=v0w
set Tc[v0w]=dc[Rc[v0w]]
endif
set dc[Rc[v0w]]=v0w
set Zb=Zb-1
set x0w=EVENT_PLAYER_UNIT_CONSTRUCT_START
set Ub[Zb]="when calling alloc_Closure in LimitMercenaryCamps, line 12"
set Zb=Zb+1
if Fl==0 then
if kl<32768 then
set kl=kl+1
set Q0w=kl
set jl[Q0w]=669
else
call K8("Out of memory: Could not create Closure.","when calling error in LimitMercenaryCamps, line 12")
set Q0w=0
endif
else
set Fl=Fl-1
set Q0w=hl[Fl]
set jl[Q0w]=669
endif
set Zb=Zb-1
set Rc[Q0w]=0
set Tc[Q0w]=0
set Yc[Q0w]=0
set Ub[Zb]="when calling add in LimitMercenaryCamps, line 12"
set Zb=Zb+1
set Ub[Zb]="when calling toIntId in ClosureEvents, line 111"
set Zb=Zb+1
set W0w=ec[GetHandleId(x0w)]
if W0w==0 then
set W0w=G1(x0w,"when calling registerEventId in ClosureEvents, line 228")
endif
set Zb=Zb-1
set Rc[Q0w]=W0w
if dc[Rc[Q0w]]!=0 then
set Yc[dc[Rc[Q0w]]]=Q0w
set Tc[Q0w]=dc[Rc[Q0w]]
endif
set dc[Rc[Q0w]]=Q0w
set Zb=Zb-1-1
set j0w=null
set x0w=null
return true
endfunction
function jfw takes nothing returns boolean
set Zb=0
return E0w("LimitMercenaryCamps, line 1")
endfunction
function kE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989301,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988790,0)
endfunction
function kI takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989816,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989815,0)
endfunction
function kX takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function kY takes nothing returns nothing
local player YY=GetOwningPlayer(GetAttacker())
local player GY=GetOwningPlayer(GetAttacker())
local player gY
local player hY
local unit FY
set r[GetPlayerId(YY)+1]=r[GetPlayerId(GY)+1]+1
set gY=GetOwningPlayer(GetTriggerUnit())
set hY=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(gY)+1]=r[GetPlayerId(hY)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set FY=GetTriggerUnit()
call SetUnitState(FY,UNIT_STATE_LIFE,GetUnitState(FY,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set YY=null
set GY=null
set gY=null
set hY=null
set FY=null
endfunction
function FZ takes nothing returns boolean
if GetResearched()!=1378889806 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889806,true)!=1 then
return false
endif
return true
endfunction
function kZ takes nothing returns boolean
if not FZ() then
return false
endif
return true
endfunction
function kbw takes nothing returns boolean
set ol=CreateTrigger()
set Ol=CreateTrigger()
set ll=null
set bl=null
call TriggerAddCondition(bO,Filter(Cf))
call TriggerAddAction(bO,Vf)
return true
endfunction
function e0w takes string c0w returns boolean
local playerunitevent o0w
local playerunitevent O0w
local integer l0w
local integer b0w
local integer y0w
local integer p0w
set Ub[Zb]=c0w
set Zb=Zb+1
set o0w=EVENT_PLAYER_UNIT_DEATH
set Ub[Zb]="when calling alloc_Closure in LimitEncampments, line 8"
set Zb=Zb+1
if Fl==0 then
if kl<32768 then
set kl=kl+1
set l0w=kl
set jl[l0w]=666
else
call K8("Out of memory: Could not create Closure.","when calling error in LimitEncampments, line 8")
set l0w=0
endif
else
set Fl=Fl-1
set l0w=hl[Fl]
set jl[l0w]=666
endif
set Zb=Zb-1
set Rc[l0w]=0
set Tc[l0w]=0
set Yc[l0w]=0
set Ub[Zb]="when calling add in LimitEncampments, line 8"
set Zb=Zb+1
set Ub[Zb]="when calling toIntId in ClosureEvents, line 111"
set Zb=Zb+1
set b0w=ec[GetHandleId(o0w)]
if b0w==0 then
set b0w=G1(o0w,"when calling registerEventId in ClosureEvents, line 228")
endif
set Zb=Zb-1
set Rc[l0w]=b0w
if dc[Rc[l0w]]!=0 then
set Yc[dc[Rc[l0w]]]=l0w
set Tc[l0w]=dc[Rc[l0w]]
endif
set dc[Rc[l0w]]=l0w
set Zb=Zb-1
set O0w=EVENT_PLAYER_UNIT_CONSTRUCT_START
set Ub[Zb]="when calling alloc_Closure in LimitEncampments, line 12"
set Zb=Zb+1
if Fl==0 then
if kl<32768 then
set kl=kl+1
set y0w=kl
set jl[y0w]=667
else
call K8("Out of memory: Could not create Closure.","when calling error in LimitEncampments, line 12")
set y0w=0
endif
else
set Fl=Fl-1
set y0w=hl[Fl]
set jl[y0w]=667
endif
set Zb=Zb-1
set Rc[y0w]=0
set Tc[y0w]=0
set Yc[y0w]=0
set Ub[Zb]="when calling add in LimitEncampments, line 12"
set Zb=Zb+1
set Ub[Zb]="when calling toIntId in ClosureEvents, line 111"
set Zb=Zb+1
set p0w=ec[GetHandleId(O0w)]
if p0w==0 then
set p0w=G1(O0w,"when calling registerEventId in ClosureEvents, line 228")
endif
set Zb=Zb-1
set Rc[y0w]=p0w
if dc[Rc[y0w]]!=0 then
set Yc[dc[Rc[y0w]]]=y0w
set Tc[y0w]=dc[Rc[y0w]]
endif
set dc[Rc[y0w]]=y0w
set Zb=Zb-1-1
set o0w=null
set O0w=null
return true
endfunction
function kfw takes nothing returns boolean
set Zb=0
return e0w("LimitEncampments, line 1")
endfunction
function kuw takes nothing returns boolean
return true
endfunction
function kww takes nothing returns boolean
set Qo=false
set Wo=false
set Eo=CreateTimer()
call TimerStart(Eo,0.01,true,Df)
return true
endfunction
function lD takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990595,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990608,0)
endfunction
function lK takes nothing returns nothing
call UnitAddAbility(GetConstructedStructure(),1093677896)
endfunction
function OP takes nothing returns boolean
if GetResearched()!=1378890036 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890036,true)!=1 then
return false
endif
return true
endfunction
function lP takes nothing returns boolean
if not OP() then
return false
endif
return true
endfunction
function lQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988567,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988564,0)
endfunction
function vC takes string jC returns boolean
local integer xC
set Ub[Zb]=jC
set Zb=Zb+1
set OS=R9("when calling new_HashMap in CityBaseTaxes, line 5")
set xC=OS
set Ub[Zb]="when calling saveInt in CityBaseTaxes, line 9"
set Zb=Zb+1
if lb[xC]==0 then
if xC==0 then
call K8("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call K8("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(sl,xC,1747988529,20)
set Zb=Zb-1
set Ub[Zb]="when calling saveInt in CityBaseTaxes, line 10"
set Zb=Zb+1
if lb[xC]==0 then
if xC==0 then
call K8("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call K8("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(sl,xC,1747988530,50)
set Zb=Zb-1
set Ub[Zb]="when calling saveInt in CityBaseTaxes, line 11"
set Zb=Zb+1
if lb[xC]==0 then
if xC==0 then
call K8("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call K8("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(sl,xC,1747988531,120)
set Zb=Zb-1
set Ub[Zb]="when calling saveInt in CityBaseTaxes, line 12"
set Zb=Zb+1
if lb[xC]==0 then
if xC==0 then
call K8("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call K8("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(sl,xC,1747990326,20)
set Zb=Zb-1
set Ub[Zb]="when calling saveInt in CityBaseTaxes, line 13"
set Zb=Zb+1
if lb[xC]==0 then
if xC==0 then
call K8("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call K8("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(sl,xC,1747990327,50)
set Zb=Zb-1
set Ub[Zb]="when calling saveInt in CityBaseTaxes, line 14"
set Zb=Zb+1
if lb[xC]==0 then
if xC==0 then
call K8("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call K8("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(sl,xC,1747990328,120)
set Zb=Zb-1
set Ub[Zb]="when calling saveInt in CityBaseTaxes, line 15"
set Zb=Zb+1
if lb[xC]==0 then
if xC==0 then
call K8("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call K8("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(sl,xC,1747990084,20)
set Zb=Zb-1
set Ub[Zb]="when calling saveInt in CityBaseTaxes, line 16"
set Zb=Zb+1
if lb[xC]==0 then
if xC==0 then
call K8("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call K8("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(sl,xC,1747990087,50)
set Zb=Zb-1
set Ub[Zb]="when calling saveInt in CityBaseTaxes, line 17"
set Zb=Zb+1
if lb[xC]==0 then
if xC==0 then
call K8("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call K8("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(sl,xC,1747990085,120)
set Zb=Zb-1
set Ub[Zb]="when calling saveInt in CityBaseTaxes, line 18"
set Zb=Zb+1
if lb[xC]==0 then
if xC==0 then
call K8("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call K8("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(sl,xC,1747989590,20)
set Zb=Zb-1
set Ub[Zb]="when calling saveInt in CityBaseTaxes, line 19"
set Zb=Zb+1
if lb[xC]==0 then
if xC==0 then
call K8("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call K8("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(sl,xC,1747989591,50)
set Zb=Zb-1
set Ub[Zb]="when calling saveInt in CityBaseTaxes, line 20"
set Zb=Zb+1
if lb[xC]==0 then
if xC==0 then
call K8("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call K8("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(sl,xC,1747989592,120)
set Zb=Zb-1
set Ub[Zb]="when calling saveInt in CityBaseTaxes, line 22"
set Zb=Zb+1
if lb[xC]==0 then
if xC==0 then
call K8("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call K8("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(sl,xC,1747989555,5)
set Zb=Zb-1
set Ub[Zb]="when calling saveInt in CityBaseTaxes, line 23"
set Zb=Zb+1
if lb[xC]==0 then
if xC==0 then
call K8("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call K8("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(sl,xC,1747989297,10)
set Zb=Zb-1
set Ub[Zb]="when calling saveInt in CityBaseTaxes, line 24"
set Zb=Zb+1
if lb[xC]==0 then
if xC==0 then
call K8("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call K8("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(sl,xC,1747989325,30)
set Zb=Zb-1-1
return true
endfunction
function lfw takes nothing returns boolean
set Zb=0
return vC("CityBaseTaxes, line 1")
endfunction
function mD takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990603,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990604,0)
endfunction
function mF takes nothing returns nothing
local location YF
local location GF
local real gF
local real hF
local rect FF
local group kF
local group jF
local code xF
local boolean vF
set u=GetUnitLoc(GetSpellAbilityUnit())
set YF=u
set S=Location(GetLocationX(YF)+0.00,GetLocationY(YF)+200.00)
set GF=u
set gF=GetLocationX(GF)
set hF=GetLocationY(GF)
set o=Rect(gF-140,hF-150,gF+140,hF+150)
set FF=o
set kF=CreateGroup()
call GroupEnumUnitsInRect(kF,FF,null)
call DestroyBoolExpr(null)
set l=kF
set jF=l
set xF=ip
set vF=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(jF,xF)
if vF then
call DestroyGroup(jF)
endif
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747989079,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"stand")
call DestroyGroup(l)
call RemoveLocation(S)
call RemoveLocation(u)
set YF=null
set GF=null
set FF=null
set kF=null
set jF=null
endfunction
function mK takes nothing returns nothing
call UnitAddAbility(GetConstructedStructure(),1093677896)
endfunction
function vP takes nothing returns boolean
if GetResearched()!=1378890038 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890038,true)!=1 then
return false
endif
return true
endfunction
function mP takes nothing returns boolean
if not vP() then
return false
endif
return true
endfunction
function mQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988551,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989081,0)
endfunction
function iSw takes string uSw returns boolean
local playerunitevent rSw
local integer sSw
local integer tSw
set Ub[Zb]=uSw
set Zb=Zb+1
set rSw=EVENT_PLAYER_UNIT_CONSTRUCT_START
set Ub[Zb]="when calling alloc_Closure in NoShipsNearRivers, line 7"
set Zb=Zb+1
if Fl==0 then
if kl<32768 then
set kl=kl+1
set sSw=kl
set jl[sSw]=672
else
call K8("Out of memory: Could not create Closure.","when calling error in NoShipsNearRivers, line 7")
set sSw=0
endif
else
set Fl=Fl-1
set sSw=hl[Fl]
set jl[sSw]=672
endif
set Zb=Zb-1
set Rc[sSw]=0
set Tc[sSw]=0
set Yc[sSw]=0
set Ub[Zb]="when calling add in NoShipsNearRivers, line 7"
set Zb=Zb+1
set Ub[Zb]="when calling toIntId in ClosureEvents, line 111"
set Zb=Zb+1
set tSw=ec[GetHandleId(rSw)]
if tSw==0 then
set tSw=G1(rSw,"when calling registerEventId in ClosureEvents, line 228")
endif
set Zb=Zb-1
set Rc[sSw]=tSw
if dc[Rc[sSw]]!=0 then
set Yc[dc[Rc[sSw]]]=sSw
set Tc[sSw]=dc[Rc[sSw]]
endif
set dc[Rc[sSw]]=sSw
set Zb=Zb-1-1
set rSw=null
return true
endfunction
function mfw takes nothing returns boolean
set Zb=0
return iSw("NoShipsNearRivers, line 1")
endfunction
function mg takes nothing returns nothing
local location Yg
local location Gg
local real gg
local real hg
local rect Fg
local group kg
local group jg
local code xg
local boolean vg
set u=GetUnitLoc(GetSpellAbilityUnit())
set Yg=u
set c=Location(GetLocationX(Yg)+200.00,GetLocationY(Yg)+0.00)
set Gg=u
set gg=GetLocationX(Gg)
set hg=GetLocationY(Gg)
set O=Rect(gg-150,hg-140,gg+150,hg+140)
set Fg=O
set kg=CreateGroup()
call GroupEnumUnitsInRect(kg,Fg,null)
call DestroyBoolExpr(null)
set l=kg
set jg=l
set xg=Py
set vg=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(jg,xg)
if vg then
call DestroyGroup(jg)
endif
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747988825,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"stand")
call DestroyGroup(l)
call RemoveLocation(c)
call RemoveLocation(u)
set Yg=null
set Gg=null
set Fg=null
set kg=null
set jg=null
endfunction
function mh takes nothing returns nothing
local location Yh
local location Gh
local real gh
local real hh
local rect Fh
local group kh
local group jh
local code xh
local boolean vh
set u=GetUnitLoc(GetSpellAbilityUnit())
set Yh=u
set S=Location(GetLocationX(Yh)+0.00,GetLocationY(Yh)+200.00)
set Gh=u
set gh=GetLocationX(Gh)
set hh=GetLocationY(Gh)
set o=Rect(gh-140,hh-150,gh+140,hh+150)
set Fh=o
set kh=CreateGroup()
call GroupEnumUnitsInRect(kh,Fh,null)
call DestroyBoolExpr(null)
set l=kh
set jh=l
set xh=Vy
set vh=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(jh,xh)
if vh then
call DestroyGroup(jh)
endif
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747990090,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"stand")
call DestroyGroup(l)
call RemoveLocation(S)
call RemoveLocation(u)
set Yh=null
set Gh=null
set Fh=null
set kh=null
set jh=null
endfunction
function nD takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990596,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990595,0)
endfunction
function nH takes nothing returns boolean
return IsUnitType(GetTriggerUnit(),UNIT_TYPE_STRUCTURE)==true
endfunction
function nK takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function aP takes nothing returns boolean
if GetResearched()!=1378890036 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890036,true)!=2 then
return false
endif
return true
endfunction
function nP takes nothing returns boolean
if not aP() then
return false
endif
return true
endfunction
function nQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989057,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989058,0)
endfunction
function Wiw takes string Xrw returns boolean
local integer Crw
local integer Vrw
local integer Brw
local integer Nrw
local integer Mrw
local integer wsw
local integer usw
local integer rsw
local integer ssw
local integer tsw
local integer isw
local integer Ssw
local integer csw
local integer osw
local integer Osw
local integer lsw
local integer bsw
local integer ysw
local integer psw
local integer esw
local integer qsw
local integer asw
local integer nsw
local integer dsw
local integer fsw
local integer Rsw
local integer Tsw
local integer Ysw
local integer Gsw
local integer gsw
local integer hsw
local integer Fsw
local integer ksw
local integer jsw
local integer xsw
local integer vsw
local integer msw
local integer Qsw
local integer Wsw
local integer Esw
local integer Zsw
local integer Usw
local integer Isw
local integer Psw
local integer Asw
local integer Dsw
local integer Hsw
local integer Jsw
local integer Ksw
local integer Lsw
local integer Xsw
local integer Csw
local integer Vsw
local integer Bsw
local integer Nsw
local integer Msw
local integer wtw
local integer utw
local integer rtw
local integer stw
local integer ttw
local integer itw
local integer Stw
local integer ctw
local integer otw
local integer Otw
local integer ltw
local integer btw
local integer ytw
local integer ptw
local integer etw
local integer qtw
local integer atw
local integer ntw
local integer dtw
local integer ftw
local integer Rtw
local integer Ttw
local integer Ytw
local integer Gtw
local integer gtw
local integer htw
local integer Ftw
local integer ktw
local integer jtw
local integer xtw
local integer vtw
local integer mtw
local integer Qtw
local integer Wtw
local integer Etw
local integer Ztw
local integer Utw
local integer Itw
local integer Ptw
local integer Atw
local integer Dtw
local integer Htw
local integer Jtw
local integer Ktw
local integer Ltw
local integer Xtw
local integer Ctw
local integer Vtw
local integer Btw
local integer Ntw
local integer Mtw
local integer wiw
local integer uiw
local integer riw
local integer siw
local integer tiw
local integer iiw
local integer Siw
local integer ciw
local integer oiw
local integer Oiw
local integer liw
local integer biw
local integer yiw
local integer piw
local integer eiw
local integer qiw
local integer aiw
local integer niw
local integer diw
local integer fiw
local integer Riw
local integer Tiw
local integer Yiw
local integer Giw
local integer giw
local integer hiw
local integer Fiw
local integer kiw
local integer jiw
local integer xiw
local integer viw
local integer miw
local integer Qiw
set Ub[Zb]=Xrw
set Zb=Zb+1
set Crw=R2I(70)
set Vrw=R2I(30)
set Brw=R2I(10)
set Nrw=R2I(70)
set Mrw=R2I(30)
set wsw=R2I(140)
set Ub[Zb]="when calling asList in Multiboards, line 23"
set Zb=Zb+1
set usw=gww("when calling new_LinkedList in LinkedList, line 391")
call Waw(usw,Crw,"when calling add in LinkedList, line 393")
call Waw(usw,Vrw,"when calling add in LinkedList, line 393")
call Waw(usw,Brw,"when calling add in LinkedList, line 393")
call Waw(usw,Nrw,"when calling add in LinkedList, line 393")
call Waw(usw,Mrw,"when calling add in LinkedList, line 393")
call Waw(usw,wsw,"when calling add in LinkedList, line 393")
set Zb=Zb-1
set wO[0]=usw
set rsw=R2I(70)
set ssw=R2I(30)
set tsw=R2I(10)
set isw=R2I(70)
set Ssw=R2I(30)
set csw=R2I(140)
set Ub[Zb]="when calling asList in Multiboards, line 24"
set Zb=Zb+1
set osw=gww("when calling new_LinkedList in LinkedList, line 391")
call Waw(osw,rsw,"when calling add in LinkedList, line 393")
call Waw(osw,ssw,"when calling add in LinkedList, line 393")
call Waw(osw,tsw,"when calling add in LinkedList, line 393")
call Waw(osw,isw,"when calling add in LinkedList, line 393")
call Waw(osw,Ssw,"when calling add in LinkedList, line 393")
call Waw(osw,csw,"when calling add in LinkedList, line 393")
set Zb=Zb-1
set wO[1]=osw
set Osw=R2I(70)
set lsw=R2I(30)
set bsw=R2I(10)
set ysw=R2I(70)
set psw=R2I(30)
set esw=R2I(140)
set Ub[Zb]="when calling asList in Multiboards, line 25"
set Zb=Zb+1
set qsw=gww("when calling new_LinkedList in LinkedList, line 391")
call Waw(qsw,Osw,"when calling add in LinkedList, line 393")
call Waw(qsw,lsw,"when calling add in LinkedList, line 393")
call Waw(qsw,bsw,"when calling add in LinkedList, line 393")
call Waw(qsw,ysw,"when calling add in LinkedList, line 393")
call Waw(qsw,psw,"when calling add in LinkedList, line 393")
call Waw(qsw,esw,"when calling add in LinkedList, line 393")
set Zb=Zb-1
set wO[2]=qsw
set asw=R2I(2.5)
set nsw=R2I(2.5)
set dsw=R2I(400)
set fsw=R2I(2.5)
set Rsw=R2I(2.5)
set Tsw=R2I(2.5)
set Ub[Zb]="when calling asList in Multiboards, line 27"
set Zb=Zb+1
set Ysw=gww("when calling new_LinkedList in LinkedList, line 391")
call Waw(Ysw,asw,"when calling add in LinkedList, line 393")
call Waw(Ysw,nsw,"when calling add in LinkedList, line 393")
call Waw(Ysw,dsw,"when calling add in LinkedList, line 393")
call Waw(Ysw,fsw,"when calling add in LinkedList, line 393")
call Waw(Ysw,Rsw,"when calling add in LinkedList, line 393")
call Waw(Ysw,Tsw,"when calling add in LinkedList, line 393")
set Zb=Zb-1
set wO[3]=Ysw
set Gsw=R2I(70)
set gsw=R2I(30)
set hsw=R2I(30)
set Fsw=R2I(10)
set ksw=R2I(126)
set jsw=R2I(84.000007629)
set Ub[Zb]="when calling asList in Multiboards, line 28"
set Zb=Zb+1
set xsw=gww("when calling new_LinkedList in LinkedList, line 391")
call Waw(xsw,Gsw,"when calling add in LinkedList, line 393")
call Waw(xsw,gsw,"when calling add in LinkedList, line 393")
call Waw(xsw,hsw,"when calling add in LinkedList, line 393")
call Waw(xsw,Fsw,"when calling add in LinkedList, line 393")
call Waw(xsw,ksw,"when calling add in LinkedList, line 393")
call Waw(xsw,jsw,"when calling add in LinkedList, line 393")
set Zb=Zb-1
set wO[4]=xsw
set vsw=R2I(70)
set msw=R2I(30)
set Qsw=R2I(30)
set Wsw=R2I(10)
set Esw=R2I(126)
set Zsw=R2I(84.000007629)
set Ub[Zb]="when calling asList in Multiboards, line 29"
set Zb=Zb+1
set Usw=gww("when calling new_LinkedList in LinkedList, line 391")
call Waw(Usw,vsw,"when calling add in LinkedList, line 393")
call Waw(Usw,msw,"when calling add in LinkedList, line 393")
call Waw(Usw,Qsw,"when calling add in LinkedList, line 393")
call Waw(Usw,Wsw,"when calling add in LinkedList, line 393")
call Waw(Usw,Esw,"when calling add in LinkedList, line 393")
call Waw(Usw,Zsw,"when calling add in LinkedList, line 393")
set Zb=Zb-1
set wO[5]=Usw
set Isw=R2I(70)
set Psw=R2I(30)
set Asw=R2I(30)
set Dsw=R2I(10)
set Hsw=R2I(126)
set Jsw=R2I(84.000007629)
set Ub[Zb]="when calling asList in Multiboards, line 30"
set Zb=Zb+1
set Ksw=gww("when calling new_LinkedList in LinkedList, line 391")
call Waw(Ksw,Isw,"when calling add in LinkedList, line 393")
call Waw(Ksw,Psw,"when calling add in LinkedList, line 393")
call Waw(Ksw,Asw,"when calling add in LinkedList, line 393")
call Waw(Ksw,Dsw,"when calling add in LinkedList, line 393")
call Waw(Ksw,Hsw,"when calling add in LinkedList, line 393")
call Waw(Ksw,Jsw,"when calling add in LinkedList, line 393")
set Zb=Zb-1
set wO[6]=Ksw
set Lsw=R2I(70)
set Xsw=R2I(30)
set Csw=R2I(30)
set Vsw=R2I(10)
set Bsw=R2I(126)
set Nsw=R2I(84.000007629)
set Ub[Zb]="when calling asList in Multiboards, line 31"
set Zb=Zb+1
set Msw=gww("when calling new_LinkedList in LinkedList, line 391")
call Waw(Msw,Lsw,"when calling add in LinkedList, line 393")
call Waw(Msw,Xsw,"when calling add in LinkedList, line 393")
call Waw(Msw,Csw,"when calling add in LinkedList, line 393")
call Waw(Msw,Vsw,"when calling add in LinkedList, line 393")
call Waw(Msw,Bsw,"when calling add in LinkedList, line 393")
call Waw(Msw,Nsw,"when calling add in LinkedList, line 393")
set Zb=Zb-1
set wO[7]=Msw
set wtw=R2I(70)
set utw=R2I(30)
set rtw=R2I(30)
set stw=R2I(10)
set ttw=R2I(126)
set itw=R2I(84.000007629)
set Ub[Zb]="when calling asList in Multiboards, line 32"
set Zb=Zb+1
set Stw=gww("when calling new_LinkedList in LinkedList, line 391")
call Waw(Stw,wtw,"when calling add in LinkedList, line 393")
call Waw(Stw,utw,"when calling add in LinkedList, line 393")
call Waw(Stw,rtw,"when calling add in LinkedList, line 393")
call Waw(Stw,stw,"when calling add in LinkedList, line 393")
call Waw(Stw,ttw,"when calling add in LinkedList, line 393")
call Waw(Stw,itw,"when calling add in LinkedList, line 393")
set Zb=Zb-1
set wO[8]=Stw
set ctw=R2I(70)
set otw=R2I(30)
set Otw=R2I(30)
set ltw=R2I(10)
set btw=R2I(126)
set ytw=R2I(84.000007629)
set Ub[Zb]="when calling asList in Multiboards, line 33"
set Zb=Zb+1
set ptw=gww("when calling new_LinkedList in LinkedList, line 391")
call Waw(ptw,ctw,"when calling add in LinkedList, line 393")
call Waw(ptw,otw,"when calling add in LinkedList, line 393")
call Waw(ptw,Otw,"when calling add in LinkedList, line 393")
call Waw(ptw,ltw,"when calling add in LinkedList, line 393")
call Waw(ptw,btw,"when calling add in LinkedList, line 393")
call Waw(ptw,ytw,"when calling add in LinkedList, line 393")
set Zb=Zb-1
set wO[9]=ptw
set uO[0]=4
set uO[1]=0
set rO[0]=4
set rO[1]=1
set sO[0]=1
set sO[1]=4
set tO[0]=1
set tO[1]=5
set iO[0]=1
set iO[1]=6
set SO[0]=2
set SO[1]=6
set cO[0]=2
set cO[1]=3
set etw=sbw("Food","when calling stringToIndex in Multiboards, line 56")
set qtw=sbw("0","when calling stringToIndex in Multiboards, line 56")
set atw=sbw("|","when calling stringToIndex in Multiboards, line 56")
set ntw=sbw("Income","when calling stringToIndex in Multiboards, line 56")
set dtw=sbw("0","when calling stringToIndex in Multiboards, line 56")
set ftw=sbw(" ","when calling stringToIndex in Multiboards, line 56")
set Ub[Zb]="when calling asList in Multiboards, line 56"
set Zb=Zb+1
set Rtw=gww("when calling new_LinkedList in LinkedList, line 391")
call Waw(Rtw,etw,"when calling add in LinkedList, line 393")
call Waw(Rtw,qtw,"when calling add in LinkedList, line 393")
call Waw(Rtw,atw,"when calling add in LinkedList, line 393")
call Waw(Rtw,ntw,"when calling add in LinkedList, line 393")
call Waw(Rtw,dtw,"when calling add in LinkedList, line 393")
call Waw(Rtw,ftw,"when calling add in LinkedList, line 393")
set Zb=Zb-1
set oO[0]=Rtw
set Ttw=sbw("Iron","when calling stringToIndex in Multiboards, line 57")
set Ytw=sbw("0","when calling stringToIndex in Multiboards, line 57")
set Gtw=sbw("|","when calling stringToIndex in Multiboards, line 57")
set gtw=sbw("Upkeep","when calling stringToIndex in Multiboards, line 57")
set htw=sbw("0","when calling stringToIndex in Multiboards, line 57")
set Ftw=sbw(" ","when calling stringToIndex in Multiboards, line 57")
set Ub[Zb]="when calling asList in Multiboards, line 57"
set Zb=Zb+1
set ktw=gww("when calling new_LinkedList in LinkedList, line 391")
call Waw(ktw,Ttw,"when calling add in LinkedList, line 393")
call Waw(ktw,Ytw,"when calling add in LinkedList, line 393")
call Waw(ktw,Gtw,"when calling add in LinkedList, line 393")
call Waw(ktw,gtw,"when calling add in LinkedList, line 393")
call Waw(ktw,htw,"when calling add in LinkedList, line 393")
call Waw(ktw,Ftw,"when calling add in LinkedList, line 393")
set Zb=Zb-1
set oO[1]=ktw
set jtw=sbw("Stone","when calling stringToIndex in Multiboards, line 58")
set xtw=sbw("0","when calling stringToIndex in Multiboards, line 58")
set vtw=sbw("|","when calling stringToIndex in Multiboards, line 58")
set mtw=sbw(" ","when calling stringToIndex in Multiboards, line 58")
set Qtw=sbw(" ","when calling stringToIndex in Multiboards, line 58")
set Wtw=sbw(" ","when calling stringToIndex in Multiboards, line 58")
set Ub[Zb]="when calling asList in Multiboards, line 58"
set Zb=Zb+1
set Etw=gww("when calling new_LinkedList in LinkedList, line 391")
call Waw(Etw,jtw,"when calling add in LinkedList, line 393")
call Waw(Etw,xtw,"when calling add in LinkedList, line 393")
call Waw(Etw,vtw,"when calling add in LinkedList, line 393")
call Waw(Etw,mtw,"when calling add in LinkedList, line 393")
call Waw(Etw,Qtw,"when calling add in LinkedList, line 393")
call Waw(Etw,Wtw,"when calling add in LinkedList, line 393")
set Zb=Zb-1
set oO[2]=Etw
set Ztw=sbw(" ","when calling stringToIndex in Multiboards, line 60")
set Utw=sbw(" ","when calling stringToIndex in Multiboards, line 60")
set Itw=sbw("                           City info","when calling stringToIndex in Multiboards, line 60")
set Ptw=sbw(" ","when calling stringToIndex in Multiboards, line 60")
set Atw=sbw(" ","when calling stringToIndex in Multiboards, line 60")
set Dtw=sbw(" ","when calling stringToIndex in Multiboards, line 60")
set Ub[Zb]="when calling asList in Multiboards, line 60"
set Zb=Zb+1
set Htw=gww("when calling new_LinkedList in LinkedList, line 391")
call Waw(Htw,Ztw,"when calling add in LinkedList, line 393")
call Waw(Htw,Utw,"when calling add in LinkedList, line 393")
call Waw(Htw,Itw,"when calling add in LinkedList, line 393")
call Waw(Htw,Ptw,"when calling add in LinkedList, line 393")
call Waw(Htw,Atw,"when calling add in LinkedList, line 393")
call Waw(Htw,Dtw,"when calling add in LinkedList, line 393")
set Zb=Zb-1
set oO[3]=Htw
set Jtw=sbw("Tax","when calling stringToIndex in Multiboards, line 61")
set Ktw=sbw("0","when calling stringToIndex in Multiboards, line 61")
set Ltw=sbw(" ","when calling stringToIndex in Multiboards, line 61")
set Xtw=sbw("|","when calling stringToIndex in Multiboards, line 61")
set Ctw=sbw(" ","when calling stringToIndex in Multiboards, line 61")
set Vtw=sbw(" ","when calling stringToIndex in Multiboards, line 61")
set Ub[Zb]="when calling asList in Multiboards, line 61"
set Zb=Zb+1
set Btw=gww("when calling new_LinkedList in LinkedList, line 391")
call Waw(Btw,Jtw,"when calling add in LinkedList, line 393")
call Waw(Btw,Ktw,"when calling add in LinkedList, line 393")
call Waw(Btw,Ltw,"when calling add in LinkedList, line 393")
call Waw(Btw,Xtw,"when calling add in LinkedList, line 393")
call Waw(Btw,Ctw,"when calling add in LinkedList, line 393")
call Waw(Btw,Vtw,"when calling add in LinkedList, line 393")
set Zb=Zb-1
set oO[4]=Btw
set Ntw=sbw("Public order","when calling stringToIndex in Multiboards, line 62")
set Mtw=sbw("0","when calling stringToIndex in Multiboards, line 62")
set wiw=sbw(" ","when calling stringToIndex in Multiboards, line 62")
set uiw=sbw("|","when calling stringToIndex in Multiboards, line 62")
set riw=sbw(" ","when calling stringToIndex in Multiboards, line 62")
set siw=sbw(" ","when calling stringToIndex in Multiboards, line 62")
set Ub[Zb]="when calling asList in Multiboards, line 62"
set Zb=Zb+1
set tiw=gww("when calling new_LinkedList in LinkedList, line 391")
call Waw(tiw,Ntw,"when calling add in LinkedList, line 393")
call Waw(tiw,Mtw,"when calling add in LinkedList, line 393")
call Waw(tiw,wiw,"when calling add in LinkedList, line 393")
call Waw(tiw,uiw,"when calling add in LinkedList, line 393")
call Waw(tiw,riw,"when calling add in LinkedList, line 393")
call Waw(tiw,siw,"when calling add in LinkedList, line 393")
set Zb=Zb-1
set oO[5]=tiw
set iiw=sbw("Population","when calling stringToIndex in Multiboards, line 63")
set Siw=sbw("0","when calling stringToIndex in Multiboards, line 63")
set ciw=sbw(" ","when calling stringToIndex in Multiboards, line 63")
set oiw=sbw("|","when calling stringToIndex in Multiboards, line 63")
set Oiw=sbw(" ","when calling stringToIndex in Multiboards, line 63")
set liw=sbw(" ","when calling stringToIndex in Multiboards, line 63")
set Ub[Zb]="when calling asList in Multiboards, line 63"
set Zb=Zb+1
set biw=gww("when calling new_LinkedList in LinkedList, line 391")
call Waw(biw,iiw,"when calling add in LinkedList, line 393")
call Waw(biw,Siw,"when calling add in LinkedList, line 393")
call Waw(biw,ciw,"when calling add in LinkedList, line 393")
call Waw(biw,oiw,"when calling add in LinkedList, line 393")
call Waw(biw,Oiw,"when calling add in LinkedList, line 393")
call Waw(biw,liw,"when calling add in LinkedList, line 393")
set Zb=Zb-1
set oO[6]=biw
set yiw=sbw(" ","when calling stringToIndex in Multiboards, line 64")
set piw=sbw(" ","when calling stringToIndex in Multiboards, line 64")
set eiw=sbw(" ","when calling stringToIndex in Multiboards, line 64")
set qiw=sbw("|","when calling stringToIndex in Multiboards, line 64")
set aiw=sbw(" ","when calling stringToIndex in Multiboards, line 64")
set niw=sbw(" ","when calling stringToIndex in Multiboards, line 64")
set Ub[Zb]="when calling asList in Multiboards, line 64"
set Zb=Zb+1
set diw=gww("when calling new_LinkedList in LinkedList, line 391")
call Waw(diw,yiw,"when calling add in LinkedList, line 393")
call Waw(diw,piw,"when calling add in LinkedList, line 393")
call Waw(diw,eiw,"when calling add in LinkedList, line 393")
call Waw(diw,qiw,"when calling add in LinkedList, line 393")
call Waw(diw,aiw,"when calling add in LinkedList, line 393")
call Waw(diw,niw,"when calling add in LinkedList, line 393")
set Zb=Zb-1
set oO[7]=diw
set fiw=sbw(" ","when calling stringToIndex in Multiboards, line 65")
set Riw=sbw(" ","when calling stringToIndex in Multiboards, line 65")
set Tiw=sbw(" ","when calling stringToIndex in Multiboards, line 65")
set Yiw=sbw("|","when calling stringToIndex in Multiboards, line 65")
set Giw=sbw(" ","when calling stringToIndex in Multiboards, line 65")
set giw=sbw(" ","when calling stringToIndex in Multiboards, line 65")
set Ub[Zb]="when calling asList in Multiboards, line 65"
set Zb=Zb+1
set hiw=gww("when calling new_LinkedList in LinkedList, line 391")
call Waw(hiw,fiw,"when calling add in LinkedList, line 393")
call Waw(hiw,Riw,"when calling add in LinkedList, line 393")
call Waw(hiw,Tiw,"when calling add in LinkedList, line 393")
call Waw(hiw,Yiw,"when calling add in LinkedList, line 393")
call Waw(hiw,Giw,"when calling add in LinkedList, line 393")
call Waw(hiw,giw,"when calling add in LinkedList, line 393")
set Zb=Zb-1
set oO[8]=hiw
set Fiw=sbw(" ","when calling stringToIndex in Multiboards, line 66")
set kiw=sbw(" ","when calling stringToIndex in Multiboards, line 66")
set jiw=sbw(" ","when calling stringToIndex in Multiboards, line 66")
set xiw=sbw("|","when calling stringToIndex in Multiboards, line 66")
set viw=sbw(" ","when calling stringToIndex in Multiboards, line 66")
set miw=sbw(" ","when calling stringToIndex in Multiboards, line 66")
set Ub[Zb]="when calling asList in Multiboards, line 66"
set Zb=Zb+1
set Qiw=gww("when calling new_LinkedList in LinkedList, line 391")
call Waw(Qiw,Fiw,"when calling add in LinkedList, line 393")
call Waw(Qiw,kiw,"when calling add in LinkedList, line 393")
call Waw(Qiw,jiw,"when calling add in LinkedList, line 393")
call Waw(Qiw,xiw,"when calling add in LinkedList, line 393")
call Waw(Qiw,viw,"when calling add in LinkedList, line 393")
call Waw(Qiw,miw,"when calling add in LinkedList, line 393")
set Zb=Zb-1
set oO[9]=Qiw
set Zb=Zb-1
return true
endfunction
function nfw takes nothing returns boolean
set Zb=0
return Wiw("Multiboards, line 1")
endfunction
function now takes nothing returns boolean
return true
endfunction
function nuw takes nothing returns boolean
return true
endfunction
function oH takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651850,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651849,0)
endfunction
function oL takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function oW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989065,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989296,0)
endfunction
function DSw takes string USw returns boolean
local integer ISw
local integer PSw
local integer ASw
set Ub[Zb]=USw
set Zb=Zb+1
set bO=CreateTrigger()
set yO=CreateGroup()
set ISw=0
set PSw=bj_MAX_PLAYER_SLOTS-1
loop
exitwhen ISw>PSw
call SetPlayerAbilityAvailable(TO[ISw],1095577649,false)
set ISw=ISw+1
endloop
set Ub[Zb]="when calling alloc_Closure in OnUnitEnterLeave, line 59"
set Zb=Zb+1
if Hl==0 then
if Jl<32768 then
set Jl=Jl+1
set ASw=Jl
set Kl[ASw]=650
else
call K8("Out of memory: Could not create Closure.","when calling error in OnUnitEnterLeave, line 59")
set ASw=0
endif
else
set Hl=Hl-1
set ASw=Dl[Hl]
set Kl[ASw]=650
endif
set Zb=Zb-1
set Ub[Zb]="when calling nullTimer in OnUnitEnterLeave, line 59"
set Zb=Zb+1
set Ub[Zb]="when calling doAfter in ClosureTimers, line 22"
set Zb=Zb+1
call yqw(ASw,0.,"when calling start in ClosureTimers, line 15")
set Zb=Zb-1-1-1
return true
endfunction
function ofw takes nothing returns boolean
set Zb=0
return DSw("OnUnitEnterLeave, line 1")
endfunction
function ok takes nothing returns nothing
local group ik
local code Sk
local boolean ck
set w=GetUnitsOfTypeIdAll(1747988790)
set ik=w
set Sk=bp
set ck=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(ik,Sk)
if ck then
call DestroyGroup(ik)
endif
call DestroyGroup(w)
set ik=null
endfunction
function olw takes nothing returns boolean
return true
endfunction
function pE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651828,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651827,0)
endfunction
function pH takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990584,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990594,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990583,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990607,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990598,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990606,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990599,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990601,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651855,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651852,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651850,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990595,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990596,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990604,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990603,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990322,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990323,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990321,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990324,0)
endfunction
function pI takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651848,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651846,0)
endfunction
function pX takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function yZ takes nothing returns boolean
if GetResearched()!=1378889807 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889807,true)!=1 then
return false
endif
return true
endfunction
function pZ takes nothing returns boolean
if not yZ() then
return false
endif
return true
endfunction
function qL takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function qW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989067,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989065,0)
endfunction
function qY takes nothing returns nothing
local player lY=GetOwningPlayer(GetAttacker())
local player bY=GetOwningPlayer(GetAttacker())
local player yY
local player pY
local unit eY
set r[GetPlayerId(lY)+1]=r[GetPlayerId(bY)+1]+1
set yY=GetOwningPlayer(GetTriggerUnit())
set pY=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(yY)+1]=r[GetPlayerId(pY)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set eY=GetTriggerUnit()
call SetUnitState(eY,UNIT_STATE_LIFE,GetUnitState(eY,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set lY=null
set bY=null
set yY=null
set pY=null
set eY=null
endfunction
function rC takes nothing returns boolean
return true
endfunction
function uD takes nothing returns boolean
if GetResearched()!=1378890053 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890053,true)!=2 then
return false
endif
return true
endfunction
function rD takes nothing returns boolean
if not uD() then
return false
endif
return true
endfunction
function rF takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747990073 then
return false
endif
return true
endfunction
function uK takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989325 then
return false
endif
return true
endfunction
function rK takes nothing returns boolean
if not uK() then
return false
endif
return true
endfunction
function uQ takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function rQ takes nothing returns boolean
if not uQ() then
return false
endif
return true
endfunction
function Hbw takes integer Abw,string Dbw returns nothing
set Ub[Zb]=Dbw
set Zb=Zb+1
set bl=yl[Abw]
call TriggerEvaluate(Ol)
call SetUnitUserData(yl[Abw],0)
set Ub[Zb]="when calling UnitIndex in UnitIndexer, line 172"
set Zb=Zb+1
if Eb[Abw]==0 then
call K8("Double free: object of type UnitIndex","when calling error in UnitIndexer, line 157")
else
set mb[Qb]=Abw
set Qb=Qb+1
set Eb[Abw]=0
endif
set Zb=Zb-1-1
endfunction
function Pbw takes unit Zbw,string Ubw returns integer
local integer Ibw
set Ub[Zb]=Ubw
set Zb=Zb+1
set Ub[Zb]="when calling UnitIndex in UnitIndexer, line 166"
set Zb=Zb+1
if Qb==0 then
if Wb<32768 then
set Wb=Wb+1
set Ibw=Wb
set Eb[Ibw]=735
else
call K8("Out of memory: Could not create UnitIndex.","when calling error in UnitIndexer, line 157")
set Ibw=0
endif
else
set Qb=Qb-1
set Ibw=mb[Qb]
set Eb[Ibw]=735
endif
set Zb=Zb-1
set yl[Ibw]=Zbw
call SetUnitUserData(yl[Ibw],Ibw)
set ll=yl[Ibw]
call TriggerEvaluate(ol)
set Zb=Zb-1
return Ibw
endfunction
function mbw takes unit jbw,string xbw returns boolean
local integer vbw
set Ub[Zb]=xbw
set Zb=Zb+1
if GetUnitUserData(jbw)==0 then
set Zb=Zb-1
return false
else
set Ub[Zb]="when calling toUnitIndex in UnitIndexer, line 154"
set Zb=Zb+1
set vbw=GetUnitUserData(jbw)
if vbw==0 then
set vbw=Pbw(jbw,"when calling new_UnitIndex in UnitIndexer, line 125")
endif
set Zb=Zb-1
set Ub[Zb]="when calling UnitIndex in UnitIndexer, line 154"
set Zb=Zb+1
if Eb[vbw]==0 then
if vbw==0 then
call K8("Nullpointer exception when calling UnitIndex.UnitIndex","when calling error in UnitIndexer, line 157")
else
call K8("Called UnitIndex.UnitIndex on invalid object.","when calling error in UnitIndexer, line 157")
endif
endif
call Hbw(vbw,"when calling destroyUnitIndex in UnitIndexer, line 157")
set Zb=Zb-1-1
return true
endif
endfunction
function rRw takes nothing returns nothing
set Zb=0
set Ub[Zb]="UnitIndexer, line 180"
set Zb=Zb+1
call mbw(pO[eO-1],"when calling deindex in UnitIndexer, line 180")
set Zb=Zb-1
endfunction
function rcw takes nothing returns boolean
return true
endfunction
function rfw takes nothing returns boolean
set Zb=0
set Ub[Zb]="TimerUtils, line 1"
set Zb=Zb+1
set Sl=clw("when calling new_Table in TimerUtils, line 12")
call CreateTimer()
call CreateTrigger()
set Zb=Zb-1
return true
endfunction
function rh takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989046 then
return false
endif
return true
endfunction
function sC takes nothing returns boolean
return true
endfunction
function sD takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651852,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651855,0)
endfunction
function sK takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function rP takes nothing returns boolean
if GetResearched()!=1378889797 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889797,true)!=2 then
return false
endif
return true
endfunction
function sP takes nothing returns boolean
if not rP() then
return false
endif
return true
endfunction
function sQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988566,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988562,0)
endfunction
function bpw takes string tpw returns nothing
local unit ipw
local integer Spw
local player cpw
local integer opw
local integer Opw
local boolean lpw
set Ub[Zb]=tpw
set Zb=Zb+1
set ipw=GetEnteringUnit()
set Spw=GetPlayerId(GetOwningPlayer(ipw))
set cpw=TO[Spw]
if GetPlayerSlotState(cpw)==PLAYER_SLOT_STATE_PLAYING then
set lpw=GetPlayerController(cpw)==MAP_CONTROL_USER
else
set lpw=false
endif
if lpw and(not IsUnitType(ipw,UNIT_TYPE_STRUCTURE)) then
set opw=qO[Spw]
set Opw=-GetUnitLevel(ipw)
set Ub[Zb]="when calling changeUpkeep in Upkeep, line 25"
set Zb=Zb+1
if vb[opw]==0 then
if opw==0 then
call K8("Nullpointer exception when calling PlayerStats.changeUpkeep","when calling error in PlayerStats, line 23")
else
call K8("Called PlayerStats.changeUpkeep on invalid object.","when calling error in PlayerStats, line 23")
endif
endif
set RO[opw]=RO[opw]+Opw
set Zb=Zb-1
endif
set Zb=Zb-1
set ipw=null
set cpw=null
endfunction
function sRw takes nothing returns nothing
set Zb=0
call bpw("Upkeep, line 21")
endfunction
function sY takes nothing returns nothing
local player NT=GetOwningPlayer(GetAttacker())
local player MT=GetOwningPlayer(GetAttacker())
local player wY
local player uY
local unit rY
set r[GetPlayerId(NT)+1]=r[GetPlayerId(MT)+1]+1
set wY=GetOwningPlayer(GetTriggerUnit())
set uY=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(wY)+1]=r[GetPlayerId(uY)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set rY=GetTriggerUnit()
call SetUnitState(rY,UNIT_STATE_LIFE,GetUnitState(rY,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set NT=null
set MT=null
set wY=null
set uY=null
set rY=null
endfunction
function Lnw takes integer gnw,integer hnw,integer Fnw,integer knw,integer jnw,integer xnw,integer vnw,integer mnw,integer Qnw,integer Wnw,integer Enw,integer Znw,integer Unw,integer Inw,integer Pnw,integer Anw,integer Dnw,integer Hnw,string Jnw returns integer
local integer Knw
set Ub[Zb]=Jnw
set Zb=Zb+1
set Knw=gww("when calling new_LinkedList in LinkedList, line 391")
call Waw(Knw,gnw,"when calling add in LinkedList, line 393")
call Waw(Knw,hnw,"when calling add in LinkedList, line 393")
call Waw(Knw,Fnw,"when calling add in LinkedList, line 393")
call Waw(Knw,knw,"when calling add in LinkedList, line 393")
call Waw(Knw,jnw,"when calling add in LinkedList, line 393")
call Waw(Knw,xnw,"when calling add in LinkedList, line 393")
call Waw(Knw,vnw,"when calling add in LinkedList, line 393")
call Waw(Knw,mnw,"when calling add in LinkedList, line 393")
call Waw(Knw,Qnw,"when calling add in LinkedList, line 393")
call Waw(Knw,Wnw,"when calling add in LinkedList, line 393")
call Waw(Knw,Enw,"when calling add in LinkedList, line 393")
call Waw(Knw,Znw,"when calling add in LinkedList, line 393")
call Waw(Knw,Unw,"when calling add in LinkedList, line 393")
call Waw(Knw,Inw,"when calling add in LinkedList, line 393")
call Waw(Knw,Pnw,"when calling add in LinkedList, line 393")
call Waw(Knw,Anw,"when calling add in LinkedList, line 393")
call Waw(Knw,Dnw,"when calling add in LinkedList, line 393")
call Waw(Knw,Hnw,"when calling add in LinkedList, line 393")
set Zb=Zb-1
return Knw
endfunction
function ddw takes integer Xnw,integer Cnw,integer Vnw,integer Bnw,integer Nnw,integer Mnw,integer wdw,integer udw,integer rdw,integer sdw,integer tdw,integer idw,integer Sdw,integer cdw,integer odw,integer Odw,integer ldw,integer bdw,integer ydw,integer pdw,integer edw,integer qdw,string adw returns integer
local integer ndw
set Ub[Zb]=adw
set Zb=Zb+1
set ndw=gww("when calling new_LinkedList in LinkedList, line 391")
call Waw(ndw,Xnw,"when calling add in LinkedList, line 393")
call Waw(ndw,Cnw,"when calling add in LinkedList, line 393")
call Waw(ndw,Vnw,"when calling add in LinkedList, line 393")
call Waw(ndw,Bnw,"when calling add in LinkedList, line 393")
call Waw(ndw,Nnw,"when calling add in LinkedList, line 393")
call Waw(ndw,Mnw,"when calling add in LinkedList, line 393")
call Waw(ndw,wdw,"when calling add in LinkedList, line 393")
call Waw(ndw,udw,"when calling add in LinkedList, line 393")
call Waw(ndw,rdw,"when calling add in LinkedList, line 393")
call Waw(ndw,sdw,"when calling add in LinkedList, line 393")
call Waw(ndw,tdw,"when calling add in LinkedList, line 393")
call Waw(ndw,idw,"when calling add in LinkedList, line 393")
call Waw(ndw,Sdw,"when calling add in LinkedList, line 393")
call Waw(ndw,cdw,"when calling add in LinkedList, line 393")
call Waw(ndw,odw,"when calling add in LinkedList, line 393")
call Waw(ndw,Odw,"when calling add in LinkedList, line 393")
call Waw(ndw,ldw,"when calling add in LinkedList, line 393")
call Waw(ndw,bdw,"when calling add in LinkedList, line 393")
call Waw(ndw,ydw,"when calling add in LinkedList, line 393")
call Waw(ndw,pdw,"when calling add in LinkedList, line 393")
call Waw(ndw,edw,"when calling add in LinkedList, line 393")
call Waw(ndw,qdw,"when calling add in LinkedList, line 393")
set Zb=Zb-1
return ndw
endfunction
function xyw takes string Nbw returns boolean
local integer Mbw
local integer wyw
local integer uyw
local integer ryw
local integer syw
local integer tyw
local integer iyw
local integer Syw
local integer cyw
local integer oyw
local integer Oyw
local integer lyw
local integer byw
local integer yyw
local integer pyw
local integer eyw
local integer qyw
local integer ayw
local integer nyw
local integer dyw
local integer fyw
local integer Ryw
local integer Tyw
local integer Yyw
local integer Gyw
local integer gyw
local integer hyw
local integer Fyw
local integer kyw
local integer jyw
set Ub[Zb]=Nbw
set Zb=Zb+1
set Ub[Zb]="when calling asList in Units, line 118"
set Zb=Zb+1
set wyw=gww("when calling new_LinkedList in LinkedList, line 391")
call Waw(wyw,1747989317,"when calling add in LinkedList, line 393")
call Waw(wyw,1747989305,"when calling add in LinkedList, line 393")
call Waw(wyw,1747989316,"when calling add in LinkedList, line 393")
call Waw(wyw,1747989315,"when calling add in LinkedList, line 393")
set Zb=Zb-1
set pl=wyw
set el=R9("when calling new_HashMap in Units, line 119")
set ql[0]=Lnw(1747988528,1747988528,1747988528,1747988528,1747988528,1747988528,1747988532,1747988532,1747988532,1747988532,1211118401,1747989058,1747989058,1747989058,1747989058,1747989058,1747989058,1747988790,"when calling asList in Units, line 126")
set ql[1]=Lnw(1747990339,1747990339,1747990339,1747990339,1747990339,1747990339,1747990340,1747990340,1747990340,1747990340,1211119699,1747990593,1747990593,1747990593,1747990593,1747990593,1747990593,1747988790,"when calling asList in Units, line 132")
set ql[2]=Lnw(1747990087,1747990087,1747990087,1747990087,1747990087,1747990087,1747990088,1747990088,1747990088,1747990088,1211119701,1747989817,1747989817,1747989817,1747989817,1747989817,1747989817,1747988790,"when calling asList in Units, line 139")
set ql[3]=Lnw(1747989558,1747989558,1747989558,1747989558,1747989558,1747989558,1747989575,1747989575,1747989575,1747989575,1211119700,1747989571,1747989571,1747989571,1747989571,1747989571,1747989571,1747988790,"when calling asList in Units, line 146")
set Ub[Zb]="when calling asList in Units, line 155"
set Zb=Zb+1
set uyw=gww("when calling new_LinkedList in LinkedList, line 391")
call Waw(uyw,1747989558,"when calling add in LinkedList, line 393")
call Waw(uyw,1747990339,"when calling add in LinkedList, line 393")
call Waw(uyw,1747990087,"when calling add in LinkedList, line 393")
call Waw(uyw,1747988528,"when calling add in LinkedList, line 393")
call Waw(uyw,1747989575,"when calling add in LinkedList, line 393")
call Waw(uyw,1747990340,"when calling add in LinkedList, line 393")
call Waw(uyw,1747990088,"when calling add in LinkedList, line 393")
call Waw(uyw,1747988532,"when calling add in LinkedList, line 393")
set Zb=Zb-1
set al=uyw
set Ub[Zb]="when calling asList in Units, line 167"
set Zb=Zb+1
set ryw=gww("when calling new_LinkedList in LinkedList, line 391")
call Waw(ryw,1747988529,"when calling add in LinkedList, line 393")
call Waw(ryw,1747988530,"when calling add in LinkedList, line 393")
call Waw(ryw,1747988531,"when calling add in LinkedList, line 393")
call Waw(ryw,1747990326,"when calling add in LinkedList, line 393")
call Waw(ryw,1747990327,"when calling add in LinkedList, line 393")
call Waw(ryw,1747990328,"when calling add in LinkedList, line 393")
call Waw(ryw,1747990084,"when calling add in LinkedList, line 393")
call Waw(ryw,1747990087,"when calling add in LinkedList, line 393")
call Waw(ryw,1747990085,"when calling add in LinkedList, line 393")
call Waw(ryw,1747989590,"when calling add in LinkedList, line 393")
call Waw(ryw,1747989591,"when calling add in LinkedList, line 393")
call Waw(ryw,1747989592,"when calling add in LinkedList, line 393")
set Zb=Zb-1
set nl=ryw
set Ub[Zb]="when calling asList in Units, line 182"
set Zb=Zb+1
set syw=gww("when calling new_LinkedList in LinkedList, line 391")
call Waw(syw,1747989059,"when calling add in LinkedList, line 393")
call Waw(syw,1747989060,"when calling add in LinkedList, line 393")
call Waw(syw,1747988844,"when calling add in LinkedList, line 393")
call Waw(syw,1747990351,"when calling add in LinkedList, line 393")
call Waw(syw,1747990352,"when calling add in LinkedList, line 393")
call Waw(syw,1747990356,"when calling add in LinkedList, line 393")
call Waw(syw,1747989331,"when calling add in LinkedList, line 393")
call Waw(syw,1747990350,"when calling add in LinkedList, line 393")
call Waw(syw,1747989809,"when calling add in LinkedList, line 393")
call Waw(syw,1747990353,"when calling add in LinkedList, line 393")
call Waw(syw,1747990354,"when calling add in LinkedList, line 393")
call Waw(syw,1747990355,"when calling add in LinkedList, line 393")
set Zb=Zb-1
set dl=syw
set Ub[Zb]="when calling asList in Units, line 197"
set Zb=Zb+1
set tyw=gww("when calling new_LinkedList in LinkedList, line 391")
call Waw(tyw,1747988529,"when calling add in LinkedList, line 393")
call Waw(tyw,1747988530,"when calling add in LinkedList, line 393")
call Waw(tyw,1747988531,"when calling add in LinkedList, line 393")
call Waw(tyw,1747990326,"when calling add in LinkedList, line 393")
call Waw(tyw,1747990327,"when calling add in LinkedList, line 393")
call Waw(tyw,1747990328,"when calling add in LinkedList, line 393")
call Waw(tyw,1747990084,"when calling add in LinkedList, line 393")
call Waw(tyw,1747990087,"when calling add in LinkedList, line 393")
call Waw(tyw,1747990085,"when calling add in LinkedList, line 393")
call Waw(tyw,1747989590,"when calling add in LinkedList, line 393")
call Waw(tyw,1747989591,"when calling add in LinkedList, line 393")
call Waw(tyw,1747989592,"when calling add in LinkedList, line 393")
call Waw(tyw,1747989555,"when calling add in LinkedList, line 393")
call Waw(tyw,1747989297,"when calling add in LinkedList, line 393")
call Waw(tyw,1747989325,"when calling add in LinkedList, line 393")
set Zb=Zb-1
set fl=tyw
set Ub[Zb]="when calling asList in Units, line 206"
set Zb=Zb+1
set iyw=gww("when calling new_LinkedList in LinkedList, line 391")
call Waw(iyw,1747989321,"when calling add in LinkedList, line 393")
call Waw(iyw,1747989321,"when calling add in LinkedList, line 393")
call Waw(iyw,1747989321,"when calling add in LinkedList, line 393")
call Waw(iyw,1747989321,"when calling add in LinkedList, line 393")
call Waw(iyw,1747989321,"when calling add in LinkedList, line 393")
call Waw(iyw,1747989321,"when calling add in LinkedList, line 393")
call Waw(iyw,1747989321,"when calling add in LinkedList, line 393")
call Waw(iyw,1747989321,"when calling add in LinkedList, line 393")
call Waw(iyw,1747988790,"when calling add in LinkedList, line 393")
set Zb=Zb-1
set Rl[0]=iyw
set Ub[Zb]="when calling asList in Units, line 207"
set Zb=Zb+1
set Syw=gww("when calling new_LinkedList in LinkedList, line 391")
call Waw(Syw,1747989321,"when calling add in LinkedList, line 393")
call Waw(Syw,1747989321,"when calling add in LinkedList, line 393")
call Waw(Syw,1747989321,"when calling add in LinkedList, line 393")
call Waw(Syw,1747989321,"when calling add in LinkedList, line 393")
call Waw(Syw,1747989326,"when calling add in LinkedList, line 393")
call Waw(Syw,1747989326,"when calling add in LinkedList, line 393")
call Waw(Syw,1747989321,"when calling add in LinkedList, line 393")
call Waw(Syw,1747989321,"when calling add in LinkedList, line 393")
call Waw(Syw,1747989321,"when calling add in LinkedList, line 393")
call Waw(Syw,1747989321,"when calling add in LinkedList, line 393")
call Waw(Syw,1747988790,"when calling add in LinkedList, line 393")
set Zb=Zb-1
set Rl[1]=Syw
set Ub[Zb]="when calling asList in Units, line 208"
set Zb=Zb+1
set cyw=gww("when calling new_LinkedList in LinkedList, line 391")
call Waw(cyw,1747989321,"when calling add in LinkedList, line 393")
call Waw(cyw,1747989321,"when calling add in LinkedList, line 393")
call Waw(cyw,1747989321,"when calling add in LinkedList, line 393")
call Waw(cyw,1747989321,"when calling add in LinkedList, line 393")
call Waw(cyw,1747989326,"when calling add in LinkedList, line 393")
call Waw(cyw,1747989326,"when calling add in LinkedList, line 393")
call Waw(cyw,1747989326,"when calling add in LinkedList, line 393")
call Waw(cyw,1747989326,"when calling add in LinkedList, line 393")
call Waw(cyw,1747989326,"when calling add in LinkedList, line 393")
call Waw(cyw,1747989326,"when calling add in LinkedList, line 393")
call Waw(cyw,1747989337,"when calling add in LinkedList, line 393")
call Waw(cyw,1747989337,"when calling add in LinkedList, line 393")
call Waw(cyw,1747988790,"when calling add in LinkedList, line 393")
set Zb=Zb-1
set Rl[2]=cyw
set oyw=GetHandleId(gu)
set Oyw=GetHandleId(kw)
set lyw=GetHandleId(ew)
set byw=GetHandleId(qw)
set yyw=GetHandleId(Ow)
set pyw=GetHandleId(hu)
set eyw=GetHandleId(Yu)
set qyw=GetHandleId(Vw)
set ayw=GetHandleId(q)
set nyw=GetHandleId(Gu)
set dyw=GetHandleId(a)
set fyw=GetHandleId(fw)
set Ryw=GetHandleId(dw)
set Tyw=GetHandleId(Rw)
set Yyw=GetHandleId(ow)
set Gyw=GetHandleId(lw)
set gyw=GetHandleId(bw)
set hyw=GetHandleId(yw)
set Fyw=GetHandleId(pw)
set kyw=GetHandleId(aw)
set jyw=GetHandleId(d)
set Tl=ddw(oyw,Oyw,lyw,byw,yyw,pyw,eyw,qyw,ayw,nyw,dyw,fyw,Ryw,Tyw,Yyw,Gyw,gyw,hyw,Fyw,kyw,jyw,GetHandleId(n),"when calling asList in Units, line 211")
set Mbw=el
call Kqw(Mbw,1747989317,15,"when calling put in Units, line 238")
call Kqw(Mbw,1747989305,50,"when calling put in Units, line 239")
call Kqw(Mbw,1747989316,25,"when calling put in Units, line 240")
call Kqw(Mbw,1747989315,40,"when calling put in Units, line 241")
set Zb=Zb-1
return true
endfunction
function sfw takes nothing returns boolean
set Zb=0
return xyw("Units, line 1")
endfunction
function slw takes nothing returns boolean
set IO[0]="Terrible! Terrible news, my lord!"
set IO[1]="The messenger came to us with horrific news! May we execute him?"
set IO[2]="A mere nightmare, Your Mightiness!"
set PO[0]="Holy Mother of God, we have horrific news!"
set PO[1]="Lord Preserve us, Great Prince!"
set PO[2]="Great Prince, we have horrific news!"
set AO[0]="Allah be merciful! I bring terrible news"
set AO[1]="Oh, Great Sultan! We have terrible news"
set AO[2]="Oh, Great one! I bring ill news"
set DO[0]="Saints save us, we have some most horrific news!"
set DO[1]="My Basileus! We have horrific news!"
set DO[2]="My Basileus, by the grace of our lord. We have horrific news!"
set HO[0]="My King, we have received news concerning our realm"
set HO[1]="The messenger arrived with news. No matter, could I execute him?"
set HO[2]="My liege I bring news about the realm"
set JO[0]="Great Prince, a messenger came with news"
set JO[1]="May the God bless you, Great Prince, we have some news"
set JO[2]="There is something you should know, Great Prince"
set KO[0]="My Sultan! We have news"
set KO[1]="Praise be to Allah, Sultan! We bring news"
set KO[2]="Great Sultan! We have some news"
set LO[0]="My Basileus, we have some news"
set LO[1]="My Basileus, we have some news"
set LO[2]="My Basileus, we have some news"
set XO[0]="Milord! Good news!"
set XO[1]="Praise the Holy Lord! We have good news"
set XO[2]="My King, we bring great news for you!"
set CO[0]="By the grace of our Lord, we bring good news!"
set CO[1]="We received great news my Lord! Still the Messenger deserves to be pusnished"
set CO[2]="My Lord, we have received delightful news!"
set VO[0]="Praise be to Allah, Sultan! We have great news"
set VO[1]="Good tidings Sultan! I bring good news"
set VO[2]="Allah is glorious, Sultan! We have great news"
set BO[0]="Good news, my Basileus!"
set BO[1]="Praise the Holy Lord, we bring great news, my Basileus!"
set BO[2]="We received good news my Basileus! We shouldn’t blind this messenger"
set NO[0]="Your Majesty, important news!"
set NO[1]="May the God bless you, my lord. There is something you must know!"
set NO[2]="There is something that needs your attention, my lord!"
set MO[0]="By the Saints! Great Prince, you must hear to this"
set MO[1]="You should hear this, Great Prince!"
set MO[2]="You need to see this, Great Prince!"
set wl[0]="Great one, urgent news must be brought to your attention!"
set wl[1]="My Sultan, there is something you need to know!"
set wl[2]="My Great Sultan, there is something you must know!"
set ul[0]="My Basileus, there is something you need to know!"
set ul[1]="My Basileus, we can not delay this news!"
set ul[2]="My Basileus, you should be aware of this!"
set rl[0]="|cffffd900Med."
set rl[1]="|cff00ff00Low"
set rl[2]="|cffff0000High"
set rl[3]="|cff940000Harsh"
return true
endfunction
function t0w takes nothing returns boolean
return true
endfunction
function sA takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function tA takes nothing returns boolean
if not sA() then
return false
endif
return true
endfunction
function tC takes nothing returns boolean
set oS=TO[PLAYER_NEUTRAL_PASSIVE]
return true
endfunction
function sF takes nothing returns boolean
if IsUnitType(GetEnumUnit(),UNIT_TYPE_STRUCTURE)!=false then
return false
endif
return true
endfunction
function tF takes nothing returns nothing
if sF() then
call SetUnitPositionLoc(GetEnumUnit(),c)
endif
endfunction
function tP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989832,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989833,0)
endfunction
function sU takes nothing returns boolean
if GetResearched()!=1378889811 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889811,true)!=1 then
return false
endif
return true
endfunction
function tU takes nothing returns boolean
if not sU() then
return false
endif
return true
endfunction
function C6 takes real H6,real J6,player K6,real L6 returns unit
local unit X6=CreateUnit(K6,2019849581,H6,J6,L6*57.295779513)
call SetUnitX(X6,H6)
call SetUnitY(X6,J6)
call UnitAddAbility(X6,1097691750)
call UnitRemoveAbility(X6,1097691750)
call UnitAddAbility(X6,1097625443)
set Mf=X6
set X6=null
return Mf
endfunction
function N6 takes string V6 returns integer
local integer B6
set Ub[Zb]=V6
set Zb=Zb+1
set Ub[Zb]="when calling ArrayQueue in DummyRecycler, line 48"
set Zb=Zb+1
if wb==0 then
if ub<32768 then
set ub=ub+1
set B6=ub
set rb[B6]=626
else
call K8("Out of memory: Could not create ArrayQueue.","when calling error in DummyRecycler, line 48")
set B6=0
endif
else
set wb=wb-1
set B6=Ml[wb]
set rb[B6]=626
endif
set Zb=Zb-1
set Hc[B6]=0
set Jc[B6]=0
set Zb=Zb-1
return B6
endfunction
function aqw takes integer pqw,unit eqw,string qqw returns nothing
set Ub[Zb]=qqw
set Zb=Zb+1
if rb[pqw]==0 then
if pqw==0 then
call K8("Nullpointer exception when calling ArrayQueue.enqueue","when calling error in DummyRecycler, line 54")
else
call K8("Called ArrayQueue.enqueue on invalid object.","when calling error in DummyRecycler, line 54")
endif
endif
set Ub[Zb]="when calling enqueue in DummyRecycler, line 54"
set Zb=Zb+1
if Jc[pqw]<6 then
set Jc[pqw]=Jc[pqw]+1
set Hc[pqw]=ModuloInteger(Hc[pqw]+1,6)
else
call K8("Queue Overflow","when calling error in DummyRecycler, line 60")
endif
set Zb=Zb-1-1
endfunction
function D6 takes string Z6 returns boolean
local integer U6
local integer I6
local integer P6
local integer A6
set Ub[Zb]=Z6
set Zb=Zb+1
set Dc=360*1./8
call CreateTimer()
set U6=0
set I6=7
loop
exitwhen U6>I6
set Kc[U6]=N6("when calling new_ArrayQueue in DummyRecycler, line 139")
set P6=0
set A6=5
loop
exitwhen P6>A6
call aqw(Kc[U6],C6(Ao,Do,oS,U6*Dc*0.017453293),"when calling enqueue in DummyRecycler, line 141")
set P6=P6+1
endloop
set U6=U6+1
endloop
set Zb=Zb-1
return true
endfunction
function tfw takes nothing returns boolean
set Zb=0
return D6("DummyRecycler, line 1")
endfunction
function sh takes nothing returns boolean
if IsUnitType(GetEnumUnit(),UNIT_TYPE_STRUCTURE)!=false then
return false
endif
return true
endfunction
function th takes nothing returns nothing
if sh() then
call SetUnitPositionLoc(GetEnumUnit(),S)
endif
endfunction
function sk takes nothing returns boolean
local unitstate rk=UNIT_STATE_MANA
if GetUnitState(GetEnumUnit(),rk)>0.00 then
set rk=null
return false
endif
set rk=null
return true
endfunction
function tk takes nothing returns nothing
if sk() then
call KillUnit(GetEnumUnit())
endif
endfunction
function tlw takes nothing returns boolean
set sl=InitHashtable()
return true
endfunction
function tv takes nothing returns nothing
local player Lx=GetOwningPlayer(GetKillingUnit())
local playerstate Xx=PLAYER_STATE_RESOURCE_GOLD
local playerstate Cx
local playerstate Vx
local player Bx
local force Nx
local location Mx
local real wv
local real uv
local player rv
local force sv
if Xx==PLAYER_STATE_RESOURCE_GOLD then
set Cx=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(Lx,Cx,GetPlayerState(Lx,Cx)+250)
elseif Xx==PLAYER_STATE_RESOURCE_LUMBER then
set Vx=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(Lx,Vx,GetPlayerState(Lx,Vx)+250)
endif
call SetPlayerState(Lx,Xx,GetPlayerState(Lx,Xx)+250)
set Bx=GetOwningPlayer(GetKillingUnit())
set Nx=CreateForce()
call ForceAddPlayer(Nx,Bx)
if IsPlayerInForce(GetLocalPlayer(),Nx) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_092")
endif
set y=GetUnitLoc(GetDyingUnit())
set rv=GetOwningPlayer(GetDyingUnit())
set sv=CreateForce()
call ForceAddPlayer(sv,rv)
set Mx=y
set wv=GetLocationX(Mx)
set uv=GetLocationY(Mx)
if IsPlayerInForce(GetLocalPlayer(),sv) then
call PingMinimap(wv,uv,2.00)
endif
call RemoveLocation(y)
set Lx=null
set Xx=null
set Cx=null
set Vx=null
set Bx=null
set Nx=null
set Mx=null
set rv=null
set sv=null
endfunction
function tx takes nothing returns nothing
local player Lj=GetOwningPlayer(GetKillingUnit())
local playerstate Xj=PLAYER_STATE_RESOURCE_LUMBER
local playerstate Cj
local playerstate Vj
local player Bj
local force Nj
local location Mj
local real wx
local real ux
local player rx
local force sx
if Xj==PLAYER_STATE_RESOURCE_GOLD then
set Cj=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(Lj,Cj,GetPlayerState(Lj,Cj)+125)
elseif Xj==PLAYER_STATE_RESOURCE_LUMBER then
set Vj=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(Lj,Vj,GetPlayerState(Lj,Vj)+125)
endif
call SetPlayerState(Lj,Xj,GetPlayerState(Lj,Xj)+125)
set Bj=GetOwningPlayer(GetKillingUnit())
set Nj=CreateForce()
call ForceAddPlayer(Nj,Bj)
if IsPlayerInForce(GetLocalPlayer(),Nj) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_089")
endif
set y=GetUnitLoc(GetDyingUnit())
set rx=GetOwningPlayer(GetDyingUnit())
set sx=CreateForce()
call ForceAddPlayer(sx,rx)
set Mj=y
set wx=GetLocationX(Mj)
set ux=GetLocationY(Mj)
if IsPlayerInForce(GetLocalPlayer(),sx) then
call PingMinimap(wx,ux,2.00)
endif
call RemoveLocation(y)
set Lj=null
set Xj=null
set Cj=null
set Vj=null
set Bj=null
set Nj=null
set Mj=null
set rx=null
set sx=null
endfunction
function uH takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990598,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990597,0)
endfunction
function uL takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function Ebw takes string Qbw returns nothing
local unit Wbw
set Ub[Zb]=Qbw
set Zb=Zb+1
set Wbw=pO[eO-1]
set Ub[Zb]="when calling toUnitIndex in UnitIndexer, line 179"
set Zb=Zb+1
if GetUnitUserData(Wbw)==0 then
call Pbw(Wbw,"when calling new_UnitIndex in UnitIndexer, line 125")
endif
set Zb=Zb-1-1
set Wbw=null
endfunction
function uRw takes nothing returns nothing
set Zb=0
call Ebw("UnitIndexer, line 179")
endfunction
function uW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651826,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651824,0)
endfunction
function ucw takes nothing returns boolean
local integer MSw
local integer wcw
set YO=GetLocalPlayer()
set MSw=0
set wcw=bj_MAX_PLAYER_SLOTS-1
loop
exitwhen MSw>wcw
set TO[MSw]=Player(MSw)
set MSw=MSw+1
endloop
return true
endfunction
function ufw takes nothing returns boolean
set Zb=0
set Ub[Zb]="RegisterEvents, line 1"
set Zb=Zb+1
set EO=R9("when calling new_HashMap in RegisterEvents, line 55")
call lOw(EVENT_PLAYER_UNIT_SPELL_EFFECT,null,Nf,null)
set Zb=Zb-1
return true
endfunction
function BG takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988826 then
return false
endif
return true
endfunction
function NG takes nothing returns boolean
if not BG() then
return false
endif
return true
endfunction
function CG takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988824 then
return false
endif
return true
endfunction
function VG takes nothing returns boolean
if not CG() then
return false
endif
return true
endfunction
function LG takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988825 then
return false
endif
return true
endfunction
function XG takes nothing returns boolean
if not LG() then
return false
endif
return true
endfunction
function MG takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989079 then
return false
endif
return true
endfunction
function wg takes nothing returns boolean
if not MG() then
return false
endif
return true
endfunction
function ug takes nothing returns nothing
if XG() then
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747989047,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"Death Alternate")
endif
if VG() then
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747989046,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"Death Alternate")
endif
if NG() then
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747989077,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"Death Alternate")
endif
if wg() then
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747989078,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"Death Alternate")
endif
endfunction
function uow takes nothing returns boolean
set GO=ConvertPlayerColor(24)
set gO=ConvertPlayerColor(25)
set hO=ConvertPlayerColor(26)
set FO=ConvertPlayerColor(27)
set kO[0]=PLAYER_COLOR_RED
set kO[1]=PLAYER_COLOR_BLUE
set kO[2]=PLAYER_COLOR_CYAN
set kO[3]=PLAYER_COLOR_PURPLE
set kO[4]=PLAYER_COLOR_YELLOW
set kO[5]=PLAYER_COLOR_ORANGE
set kO[6]=PLAYER_COLOR_GREEN
set kO[7]=PLAYER_COLOR_PINK
set kO[8]=PLAYER_COLOR_LIGHT_GRAY
set kO[9]=PLAYER_COLOR_LIGHT_BLUE
set kO[10]=PLAYER_COLOR_AQUA
set kO[11]=PLAYER_COLOR_BROWN
set kO[12]=PLAYER_COLOR_MAROON
set kO[13]=PLAYER_COLOR_NAVY
set kO[14]=PLAYER_COLOR_TURQUOISE
set kO[15]=PLAYER_COLOR_VIOLET
set kO[16]=PLAYER_COLOR_WHEAT
set kO[17]=PLAYER_COLOR_PEACH
set kO[18]=PLAYER_COLOR_MINT
set kO[19]=PLAYER_COLOR_LAVENDER
set kO[20]=PLAYER_COLOR_COAL
set kO[21]=PLAYER_COLOR_SNOW
set kO[22]=PLAYER_COLOR_EMERALD
set kO[23]=PLAYER_COLOR_PEANUT
set kO[24]=GO
set kO[25]=gO
set kO[26]=hO
set kO[27]=FO
return true
endfunction
function v4 takes nothing returns boolean
set mc=200
return true
endfunction
function xD takes nothing returns boolean
if GetResearched()!=1378890054 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890054,true)!=2 then
return false
endif
return true
endfunction
function vD takes nothing returns boolean
if not xD() then
return false
endif
return true
endfunction
function xG takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1966092336 then
return false
endif
if GetSpellAbilityId()!=1093677906 then
return false
endif
if GetOwningPlayer(GetSpellTargetUnit())==Player(PLAYER_NEUTRAL_AGGRESSIVE) then
return false
endif
if IsUnitType(GetSpellTargetUnit(),UNIT_TYPE_STRUCTURE)!=true then
return false
endif
return true
endfunction
function vG takes nothing returns boolean
if not xG() then
return false
endif
return true
endfunction
function xK takes nothing returns boolean
if GetUnitTypeId(GetConstructedStructure())!=1747990351 then
return false
endif
return true
endfunction
function vK takes nothing returns boolean
if not xK() then
return false
endif
return true
endfunction
function xQ takes nothing returns boolean
if GetResearched()!=1378889798 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889798,true)!=1 then
return false
endif
return true
endfunction
function vQ takes nothing returns boolean
if not xQ() then
return false
endif
return true
endfunction
function vT takes nothing returns nothing
local group kT=GetUnitsOfTypeIdAll(1747988554)
local code jT=py
local boolean xT=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(kT,jT)
if xT then
call DestroyGroup(kT)
endif
set kT=null
endfunction
function Iww takes string hww_2 returns boolean
local playerunitevent Fww_2
local playerunitevent kww_2
local integer jww
local integer xww
local integer vww
local integer mww
local integer Qww
local integer Www
local integer Eww
local integer Zww
local integer Uww
set Ub[Zb]=hww_2
set Zb=Zb+1
set Ho=R9("when calling new_HashMap in MassControl, line 7")
set jww=R2I(500000)
set xww=R2I(700000)
set vww=R2I(1000000)
set Ub[Zb]="when calling asList in MassControl, line 8"
set Zb=Zb+1
set mww=gww("when calling new_LinkedList in LinkedList, line 391")
call Waw(mww,jww,"when calling add in LinkedList, line 393")
call Waw(mww,xww,"when calling add in LinkedList, line 393")
call Waw(mww,vww,"when calling add in LinkedList, line 393")
set Zb=Zb-1
set Jo=mww
set Ub[Zb]="when calling asList in MassControl, line 14"
set Zb=Zb+1
set Qww=gww("when calling new_LinkedList in LinkedList, line 391")
call Waw(Qww,1211118401,"when calling add in LinkedList, line 393")
call Waw(Qww,1211119699,"when calling add in LinkedList, line 393")
call Waw(Qww,1211119701,"when calling add in LinkedList, line 393")
call Waw(Qww,1211119700,"when calling add in LinkedList, line 393")
set Zb=Zb-1
set Ko=Qww
set Fww_2=EVENT_PLAYER_UNIT_SPELL_CAST
set Ub[Zb]="when calling alloc_Closure in MassControl, line 22"
set Zb=Zb+1
if Fl==0 then
if kl<32768 then
set kl=kl+1
set Www=kl
set jl[Www]=670
else
call K8("Out of memory: Could not create Closure.","when calling error in MassControl, line 22")
set Www=0
endif
else
set Fl=Fl-1
set Www=hl[Fl]
set jl[Www]=670
endif
set Zb=Zb-1
set Rc[Www]=0
set Tc[Www]=0
set Yc[Www]=0
set Ub[Zb]="when calling add in MassControl, line 22"
set Zb=Zb+1
set Ub[Zb]="when calling toIntId in ClosureEvents, line 111"
set Zb=Zb+1
set Eww=ec[GetHandleId(Fww_2)]
if Eww==0 then
set Eww=G1(Fww_2,"when calling registerEventId in ClosureEvents, line 228")
endif
set Zb=Zb-1
set Rc[Www]=Eww
if dc[Rc[Www]]!=0 then
set Yc[dc[Rc[Www]]]=Www
set Tc[Www]=dc[Rc[Www]]
endif
set dc[Rc[Www]]=Www
set Zb=Zb-1
set kww_2=EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER
set Ub[Zb]="when calling alloc_Closure in MassControl, line 32"
set Zb=Zb+1
if Fl==0 then
if kl<32768 then
set kl=kl+1
set Zww=kl
set jl[Zww]=671
else
call K8("Out of memory: Could not create Closure.","when calling error in MassControl, line 32")
set Zww=0
endif
else
set Fl=Fl-1
set Zww=hl[Fl]
set jl[Zww]=671
endif
set Zb=Zb-1
set Rc[Zww]=0
set Tc[Zww]=0
set Yc[Zww]=0
set Ub[Zb]="when calling add in MassControl, line 32"
set Zb=Zb+1
set Ub[Zb]="when calling toIntId in ClosureEvents, line 111"
set Zb=Zb+1
set Uww=ec[GetHandleId(kww_2)]
if Uww==0 then
set Uww=G1(kww_2,"when calling registerEventId in ClosureEvents, line 228")
endif
set Zb=Zb-1
set Rc[Zww]=Uww
if dc[Rc[Zww]]!=0 then
set Yc[dc[Rc[Zww]]]=Zww
set Tc[Zww]=dc[Rc[Zww]]
endif
set dc[Rc[Zww]]=Zww
set Zb=Zb-1-1
set Fww_2=null
set kww_2=null
return true
endfunction
function vfw takes nothing returns boolean
set Zb=0
return Iww("MassControl, line 1")
endfunction
function jv takes nothing returns boolean
if GetUnitTypeId(GetSpellTargetUnit())==1747990581 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747990580 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747989813 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747988569 then
return true
endif
return false
endfunction
function xv takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989049 then
return false
endif
if not jv() then
return false
endif
return true
endfunction
function vv takes nothing returns boolean
if not xv() then
return false
endif
return true
endfunction
function wG takes nothing returns nothing
local player CY=GetOwningPlayer(GetAttacker())
local player VY=GetOwningPlayer(GetAttacker())
local player BY
local player NY
local unit MY
set r[GetPlayerId(CY)+1]=r[GetPlayerId(VY)+1]+1
set BY=GetOwningPlayer(GetTriggerUnit())
set NY=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(BY)+1]=r[GetPlayerId(NY)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set MY=GetTriggerUnit()
call SetUnitState(MY,UNIT_STATE_LIFE,GetUnitState(MY,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set CY=null
set VY=null
set BY=null
set NY=null
set MY=null
endfunction
function MD takes nothing returns boolean
if GetResearched()!=1378889818 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889818,true)!=1 then
return false
endif
return true
endfunction
function wH takes nothing returns boolean
if not MD() then
return false
endif
return true
endfunction
function MK takes nothing returns boolean
if GetUnitTypeId(GetConstructedStructure())!=1747989331 then
return false
endif
return true
endfunction
function wL takes nothing returns boolean
if not MK() then
return false
endif
return true
endfunction
function nbw takes integer bbw,string ybw returns trigger
local integer pbw
local fogstate ebw
local integer qbw
local trigger abw
set Ub[Zb]=ybw
set Zb=Zb+1
set pbw=cl
set ebw=ConvertFogState(bbw)
set Ub[Zb]="when calling saveFogState in TypeCasting, line 88"
set Zb=Zb+1
if lb[pbw]==0 then
if pbw==0 then
call K8("Nullpointer exception when calling Table.saveFogState","when calling error in Table, line 168")
else
call K8("Called Table.saveFogState on invalid object.","when calling error in Table, line 168")
endif
endif
call SaveFogStateHandle(sl,pbw,0,ebw)
set Zb=Zb-1
set qbw=cl
set Ub[Zb]="when calling loadTrigger in TypeCasting, line 89"
set Zb=Zb+1
if lb[qbw]==0 then
if qbw==0 then
call K8("Nullpointer exception when calling Table.loadTrigger","when calling error in Table, line 111")
else
call K8("Called Table.loadTrigger on invalid object.","when calling error in Table, line 111")
endif
endif
set abw=LoadTriggerHandle(sl,qbw,0)
set Zb=Zb-1-1
set sR=abw
set ebw=null
set abw=null
return sR
endfunction
function pOw takes string bOw returns boolean
local boolean yOw
set Ub[Zb]=bOw
set Zb=Zb+1
set yOw=TriggerEvaluate(nbw(Bqw(EO,GetSpellAbilityId(),"when calling get in RegisterEvents, line 58"),"when calling triggerFromIndex in RegisterEvents, line 58"))
set Zb=Zb-1
return yOw
endfunction
function wRw takes nothing returns boolean
set Zb=0
return pOw("RegisterEvents, line 58")
endfunction
function MQ takes nothing returns boolean
if GetResearched()!=1378889802 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889802,true)!=2 then
return false
endif
return true
endfunction
function wW takes nothing returns boolean
if not MQ() then
return false
endif
return true
endfunction
function wZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990098,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990095,0)
endfunction
function wfw takes nothing returns boolean
set Zb=0
set Ub[Zb]="EventHelper, line 1"
set Zb=Zb+1
call R9("when calling new_HashMap in EventHelper, line 6")
call R9("when calling new_HashMap in EventHelper, line 7")
call clw("when calling new_Table in EventHelper, line 8")
set Zb=Zb-1
return true
endfunction
function wj takes nothing returns nothing
local player Dk=GetOwningPlayer(GetSpellTargetUnit())
local playerstate Hk=PLAYER_STATE_RESOURCE_LUMBER
local playerstate Jk
local playerstate Kk
local player Lk
local force Xk
local location Ck
local real Vk
local real Bk
local player Nk
local force Mk
if Hk==PLAYER_STATE_RESOURCE_GOLD then
set Jk=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(Dk,Jk,GetPlayerState(Dk,Jk)+500)
elseif Hk==PLAYER_STATE_RESOURCE_LUMBER then
set Kk=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(Dk,Kk,GetPlayerState(Dk,Kk)+500)
endif
call SetPlayerState(Dk,Hk,GetPlayerState(Dk,Hk)+500)
call RemoveUnit(GetSpellAbilityUnit())
set Lk=GetOwningPlayer(GetSpellTargetUnit())
set Xk=CreateForce()
call ForceAddPlayer(Xk,Lk)
if IsPlayerInForce(GetLocalPlayer(),Xk) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_1228")
endif
set y=GetUnitLoc(GetSpellTargetUnit())
set Nk=GetOwningPlayer(GetSpellTargetUnit())
set Mk=CreateForce()
call ForceAddPlayer(Mk,Nk)
set Ck=y
set Vk=GetLocationX(Ck)
set Bk=GetLocationY(Ck)
if IsPlayerInForce(GetLocalPlayer(),Mk) then
call PingMinimap(Vk,Bk,2.00)
endif
call RemoveLocation(y)
set Dk=null
set Hk=null
set Jk=null
set Kk=null
set Lk=null
set Xk=null
set Ck=null
set Nk=null
set Mk=null
endfunction
function xH takes nothing returns nothing
call UnitRemoveAbility(GetTriggerUnit(),1093677402)
endfunction
function xL takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function xW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988812,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988559,0)
endfunction
function KOw takes rect UOw,string IOw,integer POw,integer AOw,string DOw returns nothing
local group HOw
local unit JOw
set Ub[Zb]=DOw
set Zb=Zb+1
set HOw=CreateGroup()
call GroupEnumUnitsInRect(HOw,UOw,null)
call DestroyBoolExpr(null)
set JOw=FirstOfGroup(HOw)
call GroupRemoveUnit(HOw,JOw)
set PS[vS]=a3(JOw,IOw,POw,AOw,"when calling new_City in SettingCities, line 7")
set Zb=Zb-1
set HOw=null
set JOw=null
endfunction
function cww_2 takes string Kww returns nothing
local integer Lww
local integer Xww
local real Cww_2
local player Vww
local integer Bww
local integer Nww
local integer Mww
local boolean www
local location uww
local location rww
local integer sww_2
local real tww
local real iww
local real Sww
set Ub[Zb]=Kww
set Zb=Zb+1
set Lww=24
set Xww=6
set Cww_2=100.0
loop
exitwhen Lww<=0
set Bww=1
set Nww=Xww
loop
exitwhen Bww>Nww
set tww=Bww*6.28318/Xww
set iww=311.2+Cww_2*Cos(tww)
set Sww=5166.7+Cww_2*Sin(tww)
set Vww=TO[24-Lww+Bww-1]
set Mww=qO[GetPlayerId(Vww)]
set Kww="when calling isInGame in MainInit, line 54"
set Ub[Zb]="when calling isInGame in MainInit, line 54"
set Zb=Zb+1
if vb[Mww]==0 then
if Mww==0 then
call K8("Nullpointer exception when calling PlayerStats.isInGame","when calling error in PlayerStats, line 14")
else
call K8("Called PlayerStats.isInGame on invalid object.","when calling error in PlayerStats, line 14")
endif
endif
set www=dO[Mww]
set Zb=Zb-1
if www then
set uww=Location(iww,Sww)
set rww=Location(311.2,5166.7)
call CreateNUnitsAtLoc(1,1747988554,Vww,uww,bj_RADTODEG*Atan2(GetLocationY(rww)-GetLocationY(uww),GetLocationX(rww)-GetLocationX(uww)))
endif
set Bww=Bww+1
endloop
set Cww_2=Cww_2+50.0
set Lww=Lww-Xww
set Xww=Xww+2
if Lww<2147483647 then
set sww_2=Lww
else
set sww_2=2147483647
endif
if Xww<sww_2 then
set sww_2=Xww
endif
set Xww=sww_2
endloop
set Zb=Zb-1
set Vww=null
set uww=null
set rww=null
endfunction
function rrw takes string urw returns nothing
if (not Qo)and(not Wo) then
return
endif
call DisplayTimedTextToPlayer(TO[0],0.,0.,60.,urw)
endfunction
function wow takes player Jcw,string Kcw returns integer
local integer Lcw
local integer Xcw
local integer Ccw
local player Vcw
local integer Bcw
local integer Ncw
local boolean Mcw
set Ub[Zb]=Kcw
set Zb=Zb+1
set Ub[Zb]="when calling PlayerStats in PlayerStats, line 129"
set Zb=Zb+1
if jb==0 then
if xb<32768 then
set xb=xb+1
set Xcw=xb
set vb[Xcw]=712
else
call K8("Out of memory: Could not create PlayerStats.","when calling error in PlayerStats, line 6")
set Xcw=0
endif
else
set jb=jb-1
set Xcw=kb[jb]
set vb[Xcw]=712
endif
set Zb=Zb-1
set Lcw=Xcw
set Ccw=Xcw
set Vcw=Jcw
set Ub[Zb]="when calling construct_PlayerStats in PlayerStats, line 129"
set Zb=Zb+1
set dO[Xcw]=false
set RO[Xcw]=0
set aO[Xcw]=-1
set fO[Xcw]=-1
set nO[Xcw]=Jcw
if GetPlayerSlotState(Jcw)==PLAYER_SLOT_STATE_PLAYING then
set Mcw=GetPlayerController(Jcw)==MAP_CONTROL_USER
else
set Mcw=false
endif
set dO[Xcw]=Mcw
set Bcw=0
set Ncw=23
loop
exitwhen Bcw>Ncw
if TO[Bcw]==Vcw then
call oRw(Ccw,Bcw,-1,"when writing array PlayerStats_alliance_states in PlayerStats, line 137")
else
call oRw(Ccw,Bcw,bj_ALLIANCE_UNALLIED,"when writing array PlayerStats_alliance_states in PlayerStats, line 139")
endif
set Bcw=Bcw+1
endloop
set Zb=Zb-1-1
set Vcw=null
return Lcw
endfunction
function Jww takes string jww returns boolean
local integer xww
local integer vww
local trigger mww
local integer Qww
local integer Www
local integer Eww
local integer Zww
local integer Uww
local player Iww_2
local integer Pww
local player Aww
local boolean Dww
local boolean Hww
set Ub[Zb]=jww
set Zb=Zb+1
set Qww=sbw("You're playing |cffffff65Crusade over Europe|r.\n\nUse your |cff0011ffsettler|r to choose the foundation of your new kingdom.\nThe location you choose will |cffff0000determine the faction you will get|r.\nUse the |cff00ffffF1|r menu to create alliances.\nExpand quickly, Capture cities and ores to |cffff0000increase your income|r.\nUse the |cff00fff2F2|r menu to set the taxes of your newly acquired |cff0026ffcities|r.\nFor more information, please, go to |cff00d3f8F9 menu|r.","when calling stringToIndex in MainInit, line 21")
set Ub[Zb]="when calling asList in MainInit, line 20"
set Zb=Zb+1
set Www=gww("when calling new_LinkedList in LinkedList, line 391")
call Waw(Www,Qww,"when calling add in LinkedList, line 393")
set Zb=Zb-1
set vo=Www
set Eww=0
set Zww=0
set Uww=23
loop
exitwhen Zww>Uww
set Iww_2=TO[Zww]
if GetPlayerSlotState(Iww_2)==PLAYER_SLOT_STATE_PLAYING then
set Dww=GetPlayerController(Iww_2)==MAP_CONTROL_USER
else
set Dww=false
endif
if Dww then
set Eww=Eww+1
endif
set Zww=Zww+1
endloop
if Qo then
call rrw("Debug info is enabled. Only for Red.")
endif
if Wo then
call DisplayTimedTextToPlayer(YO,0.,0.,45.,"Debug mode is on.")
endif
set Ub[Zb]="when calling setupCities in MainInit, line 98"
set Zb=Zb+1
call KOw(h,"Adrianopolis",3,1,"when calling newCity in SettingCities, line 26")
call KOw(Ss,"Arta",3,0,"when calling newCity in SettingCities, line 27")
call KOw(Br,"Athens",3,1,"when calling newCity in SettingCities, line 28")
call KOw(Vr,"Ragusa",3,0,"when calling newCity in SettingCities, line 29")
call KOw(ls,"Canakkale",3,0,"when calling newCity in SettingCities, line 30")
call KOw(cs,"Candia",3,0,"when calling newCity in SettingCities, line 31")
call KOw(k,"Constantinople",3,4,"when calling newCity in SettingCities, line 32")
call KOw(is,"Corinth",3,0,"when calling newCity in SettingCities, line 33")
call KOw(g,"Durazzo",3,0,"when calling newCity in SettingCities, line 34")
call KOw(ws,"Nikomedeia",3,0,"when calling newCity in SettingCities, line 35")
call KOw(lu,"Kutaisi",3,0,"when calling newCity in SettingCities, line 36")
call KOw(Dw,"Nicae",3,2,"when calling newCity in SettingCities, line 37")
call KOw(Zw,"Nicosia",3,0,"when calling newCity in SettingCities, line 38")
call KOw(Nr,"Rhodes",3,0,"when calling newCity in SettingCities, line 39")
call KOw(x,"Scopia",3,0,"when calling newCity in SettingCities, line 40")
call KOw(Pw,"Smyrna",3,0,"when calling newCity in SettingCities, line 41")
call KOw(bu,"Tbilisi",3,0,"when calling newCity in SettingCities, line 42")
call KOw(Ew,"Trebizond",3,1,"when calling newCity in SettingCities, line 43")
call KOw(F,"Thessalonika",3,3,"when calling newCity in SettingCities, line 44")
call KOw(Qu,"Astrakhan'",1,2,"when calling newCity in SettingCities, line 48")
call KOw(Gw,"Azaq",1,0,"when calling newCity in SettingCities, line 49")
call KOw(ru,"Baia",1,0,"when calling newCity in SettingCities, line 50")
call KOw(cu,"Bryansk",1,0,"when calling newCity in SettingCities, line 51")
call KOw(sw,"Caffa",1,0,"when calling newCity in SettingCities, line 52")
call KOw(U,"Constanta",1,0,"when calling newCity in SettingCities, line 53")
call KOw(iu,"Dnipro",1,0,"when calling newCity in SettingCities, line 54")
call KOw(nw,"Halych",1,0,"when calling newCity in SettingCities, line 55")
call KOw(gw,"Kiev",1,2,"when calling newCity in SettingCities, line 56")
call KOw(N,"Konigsberg",1,0,"when calling newCity in SettingCities, line 57")
call KOw(uw,"Hrodna",1,0,"when calling newCity in SettingCities, line 58")
call KOw(hw,"Minsk",1,1,"when calling newCity in SettingCities, line 59")
call KOw(Su,"Moscow",1,0,"when calling newCity in SettingCities, line 60")
call KOw(Sw,"Novgorod",1,0,"when calling newCity in SettingCities, line 61")
call KOw(tu,"Olesh'e",1,0,"when calling newCity in SettingCities, line 62")
call KOw(cw,"Polotsk",1,0,"when calling newCity in SettingCities, line 63")
call KOw(tw,"Pskov",1,0,"when calling newCity in SettingCities, line 64")
call KOw(iw,"Reval",1,0,"when calling newCity in SettingCities, line 65")
call KOw(M,"Riga",1,1,"when calling newCity in SettingCities, line 66")
call KOw(bs,"Bulgar",1,0,"when calling newCity in SettingCities, line 67")
call KOw(Wu,"Ryazan'",1,0,"when calling newCity in SettingCities, line 68")
call KOw(Ou,"Sarkel",1,0,"when calling newCity in SettingCities, line 69")
call KOw(Fw,"Smolensk",1,1,"when calling newCity in SettingCities, line 70")
call KOw(L,"Sofia",1,0,"when calling newCity in SettingCities, line 71")
call KOw(I,"Targovitse",1,1,"when calling newCity in SettingCities, line 72")
call KOw(uu,"Tmutarakan'",1,0,"when calling newCity in SettingCities, line 73")
call KOw(Mr,"Turku",1,0,"when calling newCity in SettingCities, line 74")
call KOw(rw,"Vilnius",1,1,"when calling newCity in SettingCities, line 75")
call KOw(su,"Zhytomir",1,0,"when calling newCity in SettingCities, line 76")
call KOw(au,"Acre",2,2,"when calling newCity in SettingCities, line 80")
call KOw(mw,"Adana",2,0,"when calling newCity in SettingCities, line 81")
call KOw(as,"Alamut",2,0,"when calling newCity in SettingCities, line 82")
call KOw(nu,"Al-Aqaba",2,0,"when calling newCity in SettingCities, line 83")
call KOw(Nw,"Alexandria",2,2,"when calling newCity in SettingCities, line 84")
call KOw(Kw,"Algiers",2,0,"when calling newCity in SettingCities, line 85")
call KOw(Aw,"Ankara",2,1,"when calling newCity in SettingCities, line 86")
call KOw(Ww,"Antioch",2,2,"when calling newCity in SettingCities, line 87")
call KOw(us,"Badajoz",2,0,"when calling newCity in SettingCities, line 88")
call KOw(Os,"Baghdad",2,4,"when calling newCity in SettingCities, line 89")
call KOw(ns,"Baku",2,0,"when calling newCity in SettingCities, line 90")
call KOw(Cw,"Benghazi",2,1,"when calling newCity in SettingCities, line 91")
call KOw(es,"Beleb-el-Anab",2,0,"when calling newCity in SettingCities, line 92")
call KOw(wu,"Cairo",2,3,"when calling newCity in SettingCities, line 93")
call KOw(Tr,"Cordoba",2,4,"when calling newCity in SettingCities, line 94")
call KOw(yu,"Damascus",2,2,"when calling newCity in SettingCities, line 95")
call KOw(Mw,"Damietta",2,1,"when calling newCity in SettingCities, line 96")
call KOw(Ru,"Diyarbakir",2,0,"when calling newCity in SettingCities, line 97")
call KOw(Iw,"Edessa",2,1,"when calling newCity in SettingCities, line 98")
call KOw(Tu,"Erez",2,1,"when calling newCity in SettingCities, line 99")
call KOw(Hw,"Fes",2,3,"when calling newCity in SettingCities, line 100")
call KOw(eu,"Gaza",2,0,"when calling newCity in SettingCities, line 101")
call KOw(Rr,"Granada",2,2,"when calling newCity in SettingCities, line 102")
call KOw(xw,"Isparta",2,0,"when calling newCity in SettingCities, line 103")
call KOw(Uw,"Jerusalem",2,3,"when calling newCity in SettingCities, line 104")
call KOw(vw,"Kayseri",2,1,"when calling newCity in SettingCities, line 105")
call KOw(os,"Kerak",2,0,"when calling newCity in SettingCities, line 106")
call KOw(ds,"Kermanshah",2,0,"when calling newCity in SettingCities, line 107")
call KOw(Qw,"Konya",2,0,"when calling newCity in SettingCities, line 108")
call KOw(Sr,"Lisbon",2,0,"when calling newCity in SettingCities, line 109")
call KOw(Ur,"Luxor",2,0,"when calling newCity in SettingCities, line 110")
call KOw(tr,"Madrid",2,0,"when calling newCity in SettingCities, line 111")
call KOw(Lw,"Mahdya",2,0,"when calling newCity in SettingCities, line 112")
call KOw(Zr,"Marrakesh",2,3,"when calling newCity in SettingCities, line 113")
call KOw(Bw,"Medina",2,2,"when calling newCity in SettingCities, line 114")
call KOw(ps,"Melilla",2,0,"when calling newCity in SettingCities, line 115")
call KOw(qu,"Mosul",2,1,"when calling newCity in SettingCities, line 116")
call KOw(Yr,"Murcia",2,1,"when calling newCity in SettingCities, line 117")
call KOw(Jw,"Oran",2,0,"when calling newCity in SettingCities, line 118")
call KOw(mu,"Palma",2,1,"when calling newCity in SettingCities, line 119")
call KOw(du,"Quarisiya",2,1,"when calling newCity in SettingCities, line 120")
call KOw(Er,"Silves",2,0,"when calling newCity in SettingCities, line 121")
call KOw(jw,"Sinop",2,0,"when calling newCity in SettingCities, line 122")
call KOw(fu,"Tamiya",2,0,"when calling newCity in SettingCities, line 123")
call KOw(pu,"Tartus",2,0,"when calling newCity in SettingCities, line 124")
call KOw(qs,"Tabriz",2,0,"when calling newCity in SettingCities, line 125")
call KOw(Xw,"Tripoli",2,1,"when calling newCity in SettingCities, line 126")
call KOw(Yw,"Tunis",2,1,"when calling newCity in SettingCities, line 127")
call KOw(Gr,"Valencia",2,0,"when calling newCity in SettingCities, line 128")
call KOw(ou,"Yerevan",2,0,"when calling newCity in SettingCities, line 129")
call KOw(J,"Aarhus",0,1,"when calling newCity in SettingCities, line 133")
call KOw(Zu,"Aberdeen",0,1,"when calling newCity in SettingCities, line 134")
call KOw(Ar,"Ajaccio",0,0,"when calling newCity in SettingCities, line 135")
call KOw(dr,"Ancona",0,1,"when calling newCity in SettingCities, line 136")
call KOw(Pr,"Angers",0,0,"when calling newCity in SettingCities, line 137")
call KOw(yr,"Antwerp",0,0,"when calling newCity in SettingCities, line 138")
call KOw(ur,"Barcelona",0,1,"when calling newCity in SettingCities, line 139")
call KOw(Kr,"Bari",0,0,"when calling newCity in SettingCities, line 140")
call KOw(A,"Belgrade",0,1,"when calling newCity in SettingCities, line 141")
call KOw(mr,"Bergen",0,1,"when calling newCity in SettingCities, line 142")
call KOw(hr,"Bern",0,0,"when calling newCity in SettingCities, line 143")
call KOw(ar,"Bologna",0,1,"when calling newCity in SettingCities, line 144")
call KOw(Mu,"Bordeaux",0,1,"when calling newCity in SettingCities, line 145")
call KOw(P,"Brasov",0,0,"when calling newCity in SettingCities, line 146")
call KOw(br,"Bruges",0,0,"when calling newCity in SettingCities, line 147")
call KOw(f,"Burgh",0,0,"when calling newCity in SettingCities, line 148")
call KOw(sr,"Burgos",0,1,"when calling newCity in SettingCities, line 149")
call KOw(Lu,"Caen",0,0,"when calling newCity in SettingCities, line 150")
call KOw(Du,"Caenarfon",0,0,"when calling newCity in SettingCities, line 151")
call KOw(Dr,"Cagliari",0,0,"when calling newCity in SettingCities, line 152")
call KOw(R,"Cardiff",0,0,"when calling newCity in SettingCities, line 153")
call KOw(Bu,"Clermont",0,1,"when calling newCity in SettingCities, line 154")
call KOw(ju,"Cologne",0,1,"when calling newCity in SettingCities, line 155")
call KOw(Vu,"Dijon",0,0,"when calling newCity in SettingCities, line 156")
call KOw(Pu,"Dublin",0,0,"when calling newCity in SettingCities, line 157")
call KOw(Eu,"Edinburgh",0,0,"when calling newCity in SettingCities, line 158")
call KOw(vr,"Eikundarsund",0,0,"when calling newCity in SettingCities, line 159")
call KOw(Q,"Esztergom",0,1,"when calling newCity in SettingCities, line 160")
call KOw(Ku,"Exeter",0,0,"when calling newCity in SettingCities, line 161")
call KOw(ww,"Gdansk",0,0,"when calling newCity in SettingCities, line 162")
call KOw(D,"Flensburg",0,0,"when calling newCity in SettingCities, line 163")
call KOw(xu,"Frankfurt",0,1,"when calling newCity in SettingCities, line 164")
call KOw(T,"Galway",0,0,"when calling newCity in SettingCities, line 165")
call KOw(pr,"Genoa",0,2,"when calling newCity in SettingCities, line 166")
call KOw(Tw,"Groningen",0,0,"when calling newCity in SettingCities, line 167")
call KOw(ku,"Innsbruck",0,0,"when calling newCity in SettingCities, line 168")
call KOw(Uu,"Inverness",0,0,"when calling newCity in SettingCities, line 169")
call KOw(Au,"Desmond",0,0,"when calling newCity in SettingCities, line 170")
call KOw(Jr,"Reggio",0,0,"when calling newCity in SettingCities, line 172")
call KOw(ts,"Kalmar",0,0,"when calling newCity in SettingCities, line 173")
call KOw(V,"Kassa",0,0,"when calling newCity in SettingCities, line 174")
call KOw(E,"Krakow",0,2,"when calling newCity in SettingCities, line 175")
call KOw(rr,"Leon",0,1,"when calling newCity in SettingCities, line 176")
call KOw(Hu,"London",0,0,"when calling newCity in SettingCities, line 177")
call KOw(kr,"Lund",0,0,"when calling newCity in SettingCities, line 178")
call KOw(Fr,"Lyon",0,0,"when calling newCity in SettingCities, line 179")
call KOw(K,"Madgeburg",0,0,"when calling newCity in SettingCities, line 180")
call KOw(lr,"Marsellie",0,1,"when calling newCity in SettingCities, line 181")
call KOw(Cr,"Metz",0,0,"when calling newCity in SettingCities, line 182")
call KOw(er,"Milan",0,1,"when calling newCity in SettingCities, line 183")
call KOw(Hr,"Naples",0,1,"when calling newCity in SettingCities, line 184")
call KOw(gr,"Nuremburg",0,0,"when calling newCity in SettingCities, line 185")
call KOw(Wr,"Nykoping",0,0,"when calling newCity in SettingCities, line 186")
call KOw(rs,"Oporto",0,0,"when calling newCity in SettingCities, line 187")
call KOw(xr,"Oslo",0,1,"when calling newCity in SettingCities, line 188")
call KOw(ys,"Buda",0,1,"when calling newCity in SettingCities, line 189")
call KOw(Lr,"Palermo",0,3,"when calling newCity in SettingCities, line 190")
call KOw(cr,"Pamplona",0,0,"when calling newCity in SettingCities, line 191")
call KOw(Cu,"Paris",0,1,"when calling newCity in SettingCities, line 192")
call KOw(nr,"Pisa",0,0,"when calling newCity in SettingCities, line 193")
call KOw(X,"Plock",0,0,"when calling newCity in SettingCities, line 194")
call KOw(C,"Poznan",0,1,"when calling newCity in SettingCities, line 195")
call KOw(m,"Prague",0,0,"when calling newCity in SettingCities, line 196")
call KOw(G,"Zadar",0,0,"when calling newCity in SettingCities, line 197")
call KOw(Ir,"Rennes",0,0,"when calling newCity in SettingCities, line 198")
call KOw(Xu,"Rheims",0,0,"when calling newCity in SettingCities, line 199")
call KOw(fr,"Rome",0,1,"when calling newCity in SettingCities, line 200")
call KOw(H,"Roskilde",0,0,"when calling newCity in SettingCities, line 201")
call KOw(ir,"Salamanca",0,0,"when calling newCity in SettingCities, line 202")
call KOw(Fu,"Salzburg",0,0,"when calling newCity in SettingCities, line 203")
call KOw(jr,"Skara",0,0,"when calling newCity in SettingCities, line 204")
call KOw(W,"Stettin",0,0,"when calling newCity in SettingCities, line 205")
call KOw(ss,"Stockholm",0,1,"when calling newCity in SettingCities, line 206")
call KOw(Xr,"Syracuse",0,0,"when calling newCity in SettingCities, line 207")
call KOw(Nu,"Toulouse",0,0,"when calling newCity in SettingCities, line 208")
call KOw(B,"Varad",0,0,"when calling newCity in SettingCities, line 209")
call KOw(qr,"Venice",0,2,"when calling newCity in SettingCities, line 210")
call KOw(v,"Vienna",0,0,"when calling newCity in SettingCities, line 211")
call KOw(Qr,"Visby",0,0,"when calling newCity in SettingCities, line 212")
call KOw(j,"Warwick",0,0,"when calling newCity in SettingCities, line 213")
call KOw(Ju,"Winchester",0,1,"when calling newCity in SettingCities, line 214")
call KOw(Z,"Wroclaw",0,0,"when calling newCity in SettingCities, line 215")
call KOw(Iu,"York",0,1,"when calling newCity in SettingCities, line 216")
call KOw(Y,"Zagreb",0,0,"when calling newCity in SettingCities, line 217")
call KOw(wr,"Zaragoza",0,0,"when calling newCity in SettingCities, line 218")
call KOw(vu,"Hamburg",0,1,"when calling newCity in SettingCities, line 219")
set Zb=Zb-1
call SetForceAllianceStateBJ(bj_FORCE_ALL_PLAYERS,bj_FORCE_PLAYER[PLAYER_NEUTRAL_PASSIVE],bj_ALLIANCE_NEUTRAL)
call SetForceAllianceStateBJ(bj_FORCE_ALL_PLAYERS,bj_FORCE_ALL_PLAYERS,bj_ALLIANCE_UNALLIED)
call SetForceAllianceStateBJ(Mc,Mc,bj_ALLIANCE_NEUTRAL)
call SetForceAllianceStateBJ(wo,wo,bj_ALLIANCE_NEUTRAL)
call SetForceAllianceStateBJ(uo,uo,bj_ALLIANCE_NEUTRAL)
call SetForceAllianceStateBJ(ro,ro,bj_ALLIANCE_NEUTRAL)
set xww=0
set vww=23
loop
exitwhen xww>vww
call SetPlayerState(TO[xww],PLAYER_STATE_RESOURCE_GOLD,200)
call SetPlayerState(TO[xww],PLAYER_STATE_RESOURCE_LUMBER,200)
if Wo then
call Yww(TO[xww])
endif
call SetPlayerTechMaxAllowed(TO[xww],1747988789,1)
set qO[xww]=wow(TO[xww],"when calling new_PlayerStats in MainInit, line 121")
set Pww=qO[xww]
set Aww=TO[xww]
if GetPlayerSlotState(Aww)==PLAYER_SLOT_STATE_PLAYING then
set Hww=GetPlayerController(Aww)==MAP_CONTROL_USER
else
set Hww=false
endif
set Ub[Zb]="when calling setInGame in MainInit, line 122"
set Zb=Zb+1
if vb[Pww]==0 then
if Pww==0 then
call K8("Nullpointer exception when calling PlayerStats.setInGame","when calling error in PlayerStats, line 17")
else
call K8("Called PlayerStats.setInGame on invalid object.","when calling error in PlayerStats, line 17")
endif
endif
set dO[Pww]=Hww
set Zb=Zb-1
set xww=xww+1
endloop
call cww_2("when calling setPlayersAtStart in MainInit, line 124")
set mww=CreateTrigger()
call TriggerRegisterTimerEvent(mww,0.01,false)
call TriggerAddAction(mww,Hf)
set Zb=Zb-1
set mww=null
set Iww_2=null
set Aww=null
return true
endfunction
function xfw takes nothing returns boolean
set Zb=0
return Jww("MainInit, line 1")
endfunction
function y4 takes nothing returns boolean
set kc=CreateGroup()
set vc=Filter(Qf)
return true
endfunction
function yA takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990323,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990106,0)
endfunction
function bE takes nothing returns boolean
if GetResearched()!=1378889803 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889803,true)!=1 then
return false
endif
return true
endfunction
function yE takes nothing returns boolean
if not bE() then
return false
endif
return true
endfunction
function yG takes nothing returns nothing
local player cG=GetOwningPlayer(GetAttacker())
local player oG=GetOwningPlayer(GetAttacker())
local player OG
local player lG
local unit bG
set r[GetPlayerId(cG)+1]=r[GetPlayerId(oG)+1]+1
set OG=GetOwningPlayer(GetTriggerUnit())
set lG=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(OG)+1]=r[GetPlayerId(lG)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set bG=GetTriggerUnit()
call SetUnitState(bG,UNIT_STATE_LIFE,GetUnitState(bG,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set cG=null
set oG=null
set OG=null
set lG=null
set bG=null
endfunction
function bI takes nothing returns boolean
if GetResearched()!=1378890037 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890037,true)!=2 then
return false
endif
return true
endfunction
function yI takes nothing returns boolean
if not bI() then
return false
endif
return true
endfunction
function yU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989573,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989572,0)
endfunction
function bX takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990085 then
return false
endif
return true
endfunction
function yX takes nothing returns boolean
if not bX() then
return false
endif
return true
endfunction
function bk takes nothing returns boolean
local unitstate lk=UNIT_STATE_MANA
if GetUnitState(GetEnumUnit(),lk)>0.00 then
set lk=null
return false
endif
set lk=null
return true
endfunction
function yk takes nothing returns nothing
if bk() then
call KillUnit(GetEnumUnit())
endif
endfunction
function yow takes nothing returns boolean
return true
endfunction
function iR takes nothing returns nothing
set w=null
set u=null
set s=null
set t=null
set i=null
set S=null
set c=null
set o=null
set O=null
set l=null
set b=null
set y=null
set q=null
set a=null
set n=null
set d=null
set f=null
set R=null
set T=null
set Y=null
set G=null
set g=null
set h=null
set F=null
set k=null
set j=null
set x=null
set v=null
set m=null
set Q=null
set W=null
set E=null
set Z=null
set U=null
set I=null
set P=null
set A=null
set D=null
set H=null
set J=null
set K=null
set L=null
set X=null
set C=null
set V=null
set B=null
set N=null
set M=null
set ww=null
set uw=null
set rw=null
set sw=null
set tw=null
set iw=null
set Sw=null
set cw=null
set ow=null
set Ow=null
set lw=null
set bw=null
set yw=null
set pw=null
set ew=null
set qw=null
set aw=null
set nw=null
set dw=null
set fw=null
set Rw=null
set Tw=null
set Yw=null
set Gw=null
set gw=null
set hw=null
set Fw=null
set kw=null
set jw=null
set xw=null
set vw=null
set mw=null
set Qw=null
set Ww=null
set Ew=null
set Zw=null
set Uw=null
set Iw=null
set Pw=null
set Aw=null
set Dw=null
set Hw=null
set Jw=null
set Kw=null
set Lw=null
set Xw=null
set Cw=null
set Vw=null
set Bw=null
set Nw=null
set Mw=null
set wu=null
set uu=null
set ru=null
set su=null
set tu=null
set iu=null
set Su=null
set cu=null
set ou=null
set Ou=null
set lu=null
set bu=null
set yu=null
set pu=null
set eu=null
set qu=null
set au=null
set nu=null
set du=null
set fu=null
set Ru=null
set Tu=null
set Yu=null
set Gu=null
set gu=null
set hu=null
set Fu=null
set ku=null
set ju=null
set xu=null
set vu=null
set mu=null
set Qu=null
set Wu=null
set Eu=null
set Zu=null
set Uu=null
set Iu=null
set Pu=null
set Au=null
set Du=null
set Hu=null
set Ju=null
set Ku=null
set Lu=null
set Xu=null
set Cu=null
set Vu=null
set Bu=null
set Nu=null
set Mu=null
set wr=null
set ur=null
set rr=null
set sr=null
set tr=null
set ir=null
set Sr=null
set cr=null
set lr=null
set br=null
set yr=null
set pr=null
set er=null
set qr=null
set ar=null
set nr=null
set dr=null
set fr=null
set Rr=null
set Tr=null
set Yr=null
set Gr=null
set gr=null
set hr=null
set Fr=null
set kr=null
set jr=null
set xr=null
set vr=null
set mr=null
set Qr=null
set Wr=null
set Er=null
set Zr=null
set Ur=null
set Ir=null
set Pr=null
set Ar=null
set Dr=null
set Hr=null
set Jr=null
set Kr=null
set Lr=null
set Xr=null
set Cr=null
set Vr=null
set Br=null
set Nr=null
set Mr=null
set ws=null
set us=null
set rs=null
set ss=null
set ts=null
set is=null
set Ss=null
set cs=null
set os=null
set Os=null
set ls=null
set bs=null
set ys=null
set ps=null
set es=null
set qs=null
set as=null
set ns=null
set ds=null
set fs=null
set Rs=null
set Ts=null
set Ys=null
set Gs=null
set gs=null
set hs=null
set Fs=null
set ks=null
set js=null
set xs=null
set vs=null
set ms=null
set Qs=null
set Ws=null
set Es=null
set Zs=null
set Us=null
set Is=null
set Ps=null
set As=null
set Ds=null
set Hs=null
set Js=null
set Ks=null
set Ls=null
set Xs=null
set Cs=null
set Vs=null
set Bs=null
set Ns=null
set Ms=null
set wt=null
set ut=null
set rt=null
set st=null
set tt=null
set St=null
set ct=null
set ot=null
set Ot=null
set lt=null
set bt=null
set yt=null
set pt=null
set et=null
set qt=null
set at=null
set nt=null
set dt=null
set ft=null
set Rt=null
set Tt=null
set Yt=null
set Gt=null
set gt=null
set ht=null
set Ft=null
set kt=null
set jt=null
set xt=null
set vt=null
set mt=null
set Qt=null
set Wt=null
set Et=null
set Zt=null
set Ut=null
set It=null
set Pt=null
set At=null
set Dt=null
set Ht=null
set Jt=null
set Kt=null
set Lt=null
set Xt=null
set Ct=null
set Vt=null
set Bt=null
set Nt=null
set Mt=null
set wi=null
set ui=null
set ri=null
set si=null
set ti=null
set ii=null
set Si=null
set ci=null
set oi=null
set Oi=null
set li=null
set bi=null
set yi=null
set pi=null
set ei=null
set qi=null
set ai=null
set ni=null
set di=null
set fi=null
set Ri=null
set Ti=null
set Yi=null
set Gi=null
set gi=null
set hi=null
set Fi=null
set ki=null
set ji=null
set xi=null
set vi=null
set mi=null
set Qi=null
set Wi=null
set Ei=null
set Zi=null
set Ui=null
set Ii=null
set Pi=null
set Ai=null
set Di=null
set Hi=null
set Ji=null
set Ki=null
set Li=null
set Xi=null
set Ci=null
set Vi=null
set Bi=null
set Ni=null
set Mi=null
set wS=null
set uS=null
set rS=null
set sS=null
set tS=null
set iS=null
set SS=null
set py=function FT
set ey=function vT
set qy=function WT
set ay=function UT
set ny=function JT
set dy=function BT
set fy=function sY
set Ry=function OY
set Ty=function qY
set Yy=function TY
set Gy=function kY
set gy=function WY
set hy=function AY
set Fy=function XY
set ky=function wG
set jy=function SG
set xy=function yG
set vy=function dG
set my=function gG
set Qy=function vG
set Wy=function WG
set Ey=function PG
set Zy=function AG
set Uy=function ug
set Iy=function eg
set Py=function Tg
set Ay=function fg
set Dy=function mg
set Hy=function Pg
set Jy=function Ug
set Ky=function Bg
set Ly=function th
set Xy=function rh
set Cy=function eh
set Vy=function Th
set By=function fh
set Ny=function mh
set My=function Ph
set wp=function Uh
set up=function Bh
set rp=function tF
set sp=function rF
set tp=function eF
set ip=function TF
set Sp=function fF
set cp=function mF
set op=function PF
set Op=function UF
set lp=function BF
set bp=function tk
set yp=function ok
set pp=function yk
set ep=function ak
set qp=function Rk
set ap=function Qk
set np=function Ak
set dp=function wj
set fp=function cj
set Rp=function fj
set Tp=function Fj
set Yp=function Pj
set Gp=function Kj
set gp=function tx
set hp=function Ox
set Fp=function Tx
set kp=function Fx
set jp=function Px
set xp=function Kx
set vp=function tv
set mp=function bv
set Qp=function Gv
set Wp=function vv
set Ep=function Jv
set Zp=function Bv
set Up=function Om
set Ip=function em
set Pp=function Fm
set Ap=function Qm
set Dp=function Wm
set Hp=function Am
set Jp=function Dm
set Kp=function Cm
set Lp=function Vm
set Xp=function rQ
set Cp=function sQ
set Vp=function OQ
set Bp=function lQ
set Np=function aQ
set Mp=function nQ
set we=function GQ
set ue=function gQ
set re=function vQ
set se=function mQ
set te=function IQ
set ie=function PQ
set Se=function LQ
set ce=function XQ
set oe=function wW
set Oe=function uW
set le=function cW
set be=function oW
set ye=function eW
set pe=function qW
set ee=function TW
set qe=function YW
set ae=function jW
set ne=function xW
set de=function ZW
set fe=function UW
set Re=function JW
set Te=function KW
set Ye=function NW
set Ge=function MW
set ge=function iE
set he=function SE
set Fe=function yE
set ke=function pE
set je=function fE
set xe=function RE
set ve=function FE
set me=function kE
set Qe=function QE
set We=function WE
set Ee=function UE
set Ze=function IE
set Ue=function KE
set Ie=function LE
set Pe=function ME
set Ae=function wZ
set De=function SZ
set He=function cZ
set Je=function pZ
set Ke=function eZ
set Le=function RZ
set Xe=function TZ
set Ce=function kZ
set Ve=function jZ
set Be=function EZ
set Ne=function ZZ
set Me=function HZ
set wq=function JZ
set uq=function BZ
set rq=function NZ
set sq=function tU
set tq=function iU
set iq=function bU
set Sq=function yU
set cq=function dU
set oq=function fU
set Oq=function hU
set lq=function FU
set bq=function QU
set yq=function WU
set pq=function PU
set eq=function AU
set qq=function JU
set aq=function KU
set nq=function NU
set dq=function MU
set fq=function iI
set Rq=function SI
set Tq=function yI
set Yq=function pI
set Gq=function fI
set gq=function RI
set hq=function FI
set Fq=function kI
set kq=function WI
set jq=function EI
set xq=function DI
set vq=function HI
set mq=function VI
set Qq=function BI
set Wq=function sP
set Eq=function tP
set Zq=function lP
set Uq=function bP
set Iq=function nP
set Pq=function dP
set Aq=function gP
set Dq=function hP
set Hq=function mP
set Jq=function QP
set Kq=function IP
set Lq=function PP
set Xq=function HP
set Cq=function JP
set Vq=function BP
set Bq=function NP
set Nq=function tA
set Mq=function iA
set wa=function bA
set ua=function yA
set ra=function dA
set sa=function fA
set ta=function hA
set ia=function FA
set Sa=function QA
set ca=function WA
set oa=function AA
set Oa=function DA
set la=function CA
set ba=function VA
set ya=function rD
set pa=function sD
set ea=function OD
set qa=function lD
set aa=function aD
set na=function nD
set da=function GD
set fa=function gD
set Ra=function vD
set Ta=function mD
set Ya=function ID
set Ga=function PD
set ga=function LD
set ha=function XD
set Fa=function wH
set ka=function uH
set ja=function cH
set xa=function oH
set va=function pH
set ma=function eH
set Qa=function nH
set Wa=function dH
set Ea=function aH
set Za=function gH
set Ua=function xH
set Ia=function ZH
set Pa=function KH
set Aa=function NH
set Da=function SJ
set Ha=function bJ
set Ja=function fJ
set Ka=function hJ
set La=function WJ
set Xa=function AJ
set Ca=function VJ
set Va=function rK
set Ba=function sK
set Na=function OK
set Ma=function lK
set wn=function aK
set un=function nK
set rn=function GK
set sn=function gK
set tn=function vK
set Sn=function mK
set cn=function IK
set on=function PK
set On=function LK
set ln=function XK
set bn=function wL
set yn=function uL
set pn=function cL
set en=function oL
set qn=function eL
set an=function qL
set nn=function TL
set dn=function YL
set fn=function jL
set Rn=function xL
set Tn=function ZL
set Yn=function UL
set Gn=function JL
set gn=function KL
set hn=function NL
set Fn=function ML
set kn=function iX
set jn=function SX
set xn=function yX
set vn=function pX
set mn=function fX
set Qn=function RX
set Wn=function FX
set En=function kX
set Zn=function WX
set Un=function EX
set In=function DX
set Pn=function HX
set An=function QT
set Dn=function Vv
set Hn=function Low
set Jn=function i0w
set Kn=function COw
set Ln=function sC
set Xn=function Rpw
set Cn=function Fuw
set Vn=function ucw
set Bn=function yow
set Nn=function tC
set Mn=function X8
set wd=function Fww
set ud=function Q8
set rd=function kuw
set sd=function now
set td=function tlw
set id=function uow
set Sd=function Cdw
set cd=function V8
set od=function S0w
set Od=function cew
set ld=function Vdw
set bd=function y4
set yd=function Bdw
set pd=function Mdw
set ed=function rC
set qd=function iC
set ad=function Eiw
set nd=function N8
set dd=function wfw
set fd=function ufw
set Rd=function rfw
set Td=function v4
set Yd=function olw
set Gd=function E6
set gd=function t0w
set hd=function FSw
set Fd=function LOw
set kd=function XOw
set jd=function Flw
set xd=function hbw
set vd=function sfw
set md=function Fbw
set Qd=function gww_2
set Wd=function tfw
set Ed=function ifw
set Zd=function hSw
set Ud=function Sfw
set Id=function cfw
set Pd=function ofw
set Ad=function kbw
set Dd=function Ofw
set Hd=function nuw
set Jd=function L8
set Kd=function slw
set Ld=function lfw
set Xd=function eOw
set Cd=function afw
set Vd=function nfw
set Bd=function rcw
set Nd=function dfw
set Md=function kww
set wf=function ffw
set uf=function Rfw
set rf=function Tfw
set sf=function Q9
set tf=function Yfw
set Sf=function Y2
set cf=function Gfw
set of=function gfw
set Of=function hfw
set lf=function Ffw
set bf=function T5
set yf=function kfw
set pf=function jfw
set ef=function hww
set qf=function xfw
set af=function vfw
set nf=function mfw
set df=function Qfw
set ff=function Wfw
set Rf=function Efw
set Tf=function Zfw
set Yf=function Ufw
set Gf=function fV
set gf=function Ifw
set hf=function Pfw
set Ff=function D1
set kf=function Afw
set jf=function Dfw
set xf=function Hfw
set vf=function Jfw
set mf=function Kfw
set Qf=function Lfw
set Wf=function Cfw
set Ef=function Vfw
set Zf=function S5
set Uf=function Bfw
set If=function W6
set Pf=function Nfw
set Af=function C8
set Df=function Gww
set Hf=function Mfw
set Jf=function CSw
set Kf=function BSw
set Lf=function NSw
set Xf=function B8
set Cf=function uRw
set Vf=function rRw
set Bf=function sRw
set Nf=function wRw
endfunction
function main takes nothing returns nothing
local trigger MX
local trigger wC
local trigger uC
call iR()
call SetCameraBounds((-30720.0)+GetCameraMargin(CAMERA_MARGIN_LEFT),(-30720.0)+GetCameraMargin(CAMERA_MARGIN_BOTTOM),30720.0-GetCameraMargin(CAMERA_MARGIN_RIGHT),30720.0-GetCameraMargin(CAMERA_MARGIN_TOP),(-30720.0)+GetCameraMargin(CAMERA_MARGIN_LEFT),30720.0-GetCameraMargin(CAMERA_MARGIN_TOP),30720.0-GetCameraMargin(CAMERA_MARGIN_RIGHT),(-30720.0)+GetCameraMargin(CAMERA_MARGIN_BOTTOM))
call SetDayNightModels("Environment\\DNC\\DNCLordaeron\\DNCLordaeronTerrain\\DNCLordaeronTerrain.mdl","Environment\\DNC\\DNCLordaeron\\DNCLordaeronUnit\\DNCLordaeronUnit.mdl")
call NewSoundEnvironment("Default")
call SetAmbientDaySound("LordaeronSummerDay")
call SetAmbientNightSound("LordaeronSummerNight")
call SetMapMusic("Music",true,0)
set fs=CreateSound("Sound\\Interface\\Warning.wav",false,false,false,10,10,"")
call SetSoundParamsFromLabel(fs,"Warning")
call SetSoundDuration(fs,1903)
set q=Rect(11872.0,-24096.0,13376.0,-18304.0)
set a=Rect(14080.0,-30720.0,16256.0,-25664.0)
set n=Rect(12096.0,-26240.0,14944.0,-23776.0)
set d=Rect(-17120.0,15936.0,-15520.0,17408.0)
call Rect(-29824.0,-30080.0,-29312.0,-28672.0)
call Rect(-29216.0,-30112.0,-28672.0,-28672.0)
call Rect(-25984.0,-29760.0,-24992.0,-29504.0)
call Rect(-25984.0,-30080.0,-25472.0,-29824.0)
call Rect(-25984.0,-30400.0,-25472.0,-30144.0)
call Rect(-26464.0,-30048.0,-26176.0,-29056.0)
call Rect(-25440.0,-30368.0,-25184.0,-29856.0)
call Rect(-25184.0,-30368.0,-24928.0,-29856.0)
call Rect(-24672.0,-29568.0,-24064.0,-28800.0)
call Rect(-24704.0,-30208.0,-24064.0,-29696.0)
set f=Rect(-17408.0,22016.0,-17056.0,22368.0)
set R=Rect(-19072.0,17728.0,-18688.0,18080.0)
set T=Rect(-22464.0,22208.0,-22112.0,22560.0)
set Y=Rect(-3776.0,4416.0,-3392.0,4768.0)
set G=Rect(-3872.0,1664.0,-3456.0,2016.0)
set g=Rect(-416.0,-2592.0,-128.0,-2272.0)
set h=Rect(4992.0,-2016.0,5344.0,-1696.0)
set F=Rect(2528.0,-3168.0,2848.0,-2880.0)
set k=Rect(7744.0,-2528.0,8096.0,-2208.0)
set j=Rect(-17504.0,18080.0,-17056.0,18496.0)
set x=Rect(1024.0,-1120.0,1376.0,-800.0)
set v=Rect(-3328.0,8096.0,-2848.0,8512.0)
set m=Rect(-4704.0,11488.0,-4416.0,11776.0)
set Q=Rect(-640.0,8288.0,-160.0,8704.0)
set W=Rect(-5184.0,17120.0,-4832.0,17440.0)
set E=Rect(-96.0,12448.0,224.0,12768.0)
set Z=Rect(-2272.0,13536.0,-1984.0,13856.0)
set U=Rect(7008.0,1984.0,7456.0,2432.0)
set I=Rect(4032.0,3744.0,4416.0,4064.0)
set P=Rect(4000.0,5216.0,4320.0,5536.0)
set A=Rect(-576.0,2880.0,-224.0,3232.0)
set D=Rect(-8288.0,19776.0,-7936.0,20160.0)
set H=Rect(-6464.0,21184.0,-6080.0,21568.0)
set J=Rect(-7904.0,22048.0,-7488.0,22464.0)
set K=Rect(-5344.0,14304.0,-4960.0,14720.0)
set L=Rect(2880.0,32.0,3264.0,352.0)
set X=Rect(608.0,15680.0,992.0,16096.0)
set C=Rect(-2496.0,15872.0,-2112.0,16224.0)
set V=Rect(1056.0,10848.0,1344.0,11136.0)
set B=Rect(1600.0,6784.0,1984.0,7136.0)
set N=Rect(224.0,19296.0,544.0,19648.0)
set M=Rect(2784.0,22592.0,3200.0,22944.0)
set ww=Rect(-1984.0,19008.0,-1600.0,19360.0)
set uw=Rect(3008.0,18048.0,3392.0,18400.0)
call Rect(-28544.0,-30080.0,-28064.0,-29344.0)
call Rect(-27744.0,-30080.0,-27456.0,-29760.0)
set rw=Rect(4224.0,19488.0,4608.0,19776.0)
set sw=Rect(13056.0,4960.0,13408.0,5280.0)
set tw=Rect(5696.0,24768.0,6048.0,25088.0)
set iw=Rect(3328.0,26816.0,3680.0,27168.0)
set Sw=Rect(8608.0,26144.0,9024.0,26528.0)
set cw=Rect(6656.0,21248.0,7008.0,21600.0)
set ow=Rect(-16640.0,10368.0,-13504.0,13056.0)
set Ow=Rect(-18944.0,5312.0,-16864.0,7328.0)
set lw=Rect(-28032.0,-1120.0,-22464.0,640.0)
set bw=Rect(-27264.0,2784.0,-26208.0,3328.0)
set yw=Rect(-26912.0,-4320.0,-23872.0,-2976.0)
set pw=Rect(-19328.0,-288.0,-18592.0,1568.0)
set ew=Rect(-11936.0,7616.0,-448.0,11424.0)
set qw=Rect(-1664.0,1216.0,6848.0,7776.0)
set aw=Rect(-5472.0,24704.0,-3232.0,27616.0)
set nw=Rect(3744.0,10880.0,4064.0,11232.0)
set dw=Rect(-12064.0,11392.0,-8832.0,16576.0)
set fw=Rect(-8832.0,10176.0,23520.0,17760.0)
set Rw=Rect(4384.0,17728.0,23424.0,27040.0)
set Tw=Rect(-10688.0,17536.0,-10304.0,17888.0)
set Yw=Rect(-10688.0,-9312.0,-10336.0,-9024.0)
set Gw=Rect(17280.0,9280.0,17632.0,9632.0)
set gw=Rect(8352.0,12192.0,8672.0,12512.0)
set hw=Rect(5952.0,18400.0,6304.0,18688.0)
set Fw=Rect(9120.0,19872.0,9408.0,20192.0)
set kw=Rect(23328.0,-14080.0,30688.0,17792.0)
set jw=Rect(13984.0,-288.0,14336.0,0.0)
set xw=Rect(10624.0,-7552.0,11008.0,-7200.0)
set vw=Rect(15168.0,-5792.0,15552.0,-5408.0)
set mw=Rect(15328.0,-7712.0,15648.0,-7424.0)
set Qw=Rect(12640.0,-7104.0,12992.0,-6752.0)
set Ww=Rect(17056.0,-8800.0,17376.0,-8512.0)
set Ew=Rect(18432.0,-608.0,18784.0,-320.0)
set Zw=Rect(13760.0,-11168.0,14112.0,-10752.0)
set Uw=Rect(16768.0,-16416.0,17120.0,-16032.0)
set Iw=Rect(18880.0,-7616.0,19232.0,-7296.0)
set Pw=Rect(6816.0,-6752.0,7136.0,-6464.0)
set Aw=Rect(12512.0,-4064.0,12832.0,-3712.0)
set Dw=Rect(9056.0,-4576.0,9344.0,-4288.0)
set Hw=Rect(-26464.0,-8896.0,-26144.0,-8544.0)
set Jw=Rect(-21632.0,-8544.0,-21248.0,-8224.0)
set Kw=Rect(-16928.0,-8224.0,-16608.0,-7904.0)
set Lw=Rect(-10112.0,-11424.0,-9760.0,-11136.0)
set Xw=Rect(-7680.0,-16416.0,-7328.0,-16128.0)
set Cw=Rect(288.0,-17760.0,608.0,-17472.0)
set Vw=Rect(9248.0,-21376.0,9984.0,-20640.0)
set Bw=Rect(24704.0,-27648.0,25088.0,-27264.0)
set Nw=Rect(10816.0,-18688.0,11168.0,-18304.0)
set Mw=Rect(13056.0,-18016.0,13408.0,-17760.0)
set wu=Rect(12096.0,-21024.0,12448.0,-20704.0)
set uu=Rect(15680.0,5600.0,16032.0,5920.0)
set ru=Rect(6944.0,7648.0,7264.0,7968.0)
set su=Rect(5824.0,12256.0,6176.0,12576.0)
set tu=Rect(11200.0,7712.0,11552.0,8064.0)
set iu=Rect(12480.0,11136.0,12832.0,11456.0)
set Su=Rect(14880.0,22944.0,15200.0,23232.0)
set cu=Rect(11392.0,16768.0,11744.0,17088.0)
set ou=Rect(23840.0,96.0,24128.0,384.0)
set Ou=Rect(19488.0,11168.0,19808.0,11488.0)
set lu=Rect(20672.0,2528.0,21056.0,2848.0)
set bu=Rect(23776.0,2368.0,24160.0,2720.0)
set yu=Rect(18336.0,-13408.0,18624.0,-13120.0)
set pu=Rect(17056.0,-11648.0,17376.0,-11264.0)
set eu=Rect(15488.0,-17696.0,15840.0,-17376.0)
set qu=Rect(24896.0,-8480.0,25248.0,-8128.0)
set au=Rect(16480.0,-14368.0,16768.0,-14048.0)
set nu=Rect(17088.0,-19744.0,17440.0,-19456.0)
set du=Rect(22720.0,-10432.0,23072.0,-10048.0)
set fu=Rect(20672.0,-23232.0,21056.0,-22848.0)
set Ru=Rect(19904.0,-5920.0,20256.0,-5632.0)
set Tu=Rect(18624.0,-3936.0,18976.0,-3616.0)
set Yu=Rect(-13632.0,-14816.0,-12192.0,-13376.0)
set Gu=Rect(17760.0,-10400.0,23360.0,-1344.0)
set gu=Rect(12384.0,-5984.0,13824.0,-4352.0)
set hu=Rect(-10944.0,3968.0,-7680.0,5120.0)
set Fu=Rect(-6528.0,7808.0,-6176.0,8160.0)
set ku=Rect(-8864.0,6912.0,-8448.0,7264.0)
set ju=Rect(-11680.0,14304.0,-11264.0,14752.0)
set xu=Rect(-9760.0,12928.0,-9472.0,13280.0)
set vu=Rect(-7552.0,16928.0,-7232.0,17248.0)
set mu=Rect(-17472.0,-3328.0,-17120.0,-2976.0)
call Rect(-24576.0,-1376.0,-24224.0,-1024.0)
set Qu=Rect(23392.0,10912.0,23712.0,11232.0)
set Wu=Rect(17280.0,19456.0,17632.0,19808.0)
set Eu=Rect(-16896.0,24032.0,-16544.0,24352.0)
set Zu=Rect(-15904.0,25952.0,-15520.0,26304.0)
set Uu=Rect(-17312.0,26624.0,-16896.0,27008.0)
set Iu=Rect(-16096.0,20352.0,-15712.0,20768.0)
set Pu=Rect(-20448.0,21440.0,-20064.0,21792.0)
set Au=Rect(-22560.0,19808.0,-22272.0,20128.0)
set Du=Rect(-18752.0,19520.0,-18400.0,19872.0)
set Hu=Rect(-16128.0,16896.0,-15808.0,17248.0)
set Ju=Rect(-17952.0,15904.0,-17632.0,16224.0)
set Ku=Rect(-19936.0,16352.0,-19648.0,16672.0)
set Lu=Rect(-17248.0,12448.0,-16928.0,12832.0)
set Xu=Rect(-13728.0,11968.0,-13408.0,12352.0)
set Cu=Rect(-15232.0,10624.0,-14880.0,10976.0)
set Vu=Rect(-13856.0,7872.0,-13568.0,8256.0)
set Bu=Rect(-16192.0,5824.0,-15840.0,6208.0)
set Nu=Rect(-16864.0,3392.0,-16576.0,3776.0)
set Mu=Rect(-18880.0,5568.0,-18528.0,5920.0)
set wr=Rect(-20288.0,1216.0,-19936.0,1600.0)
set ur=Rect(-17216.0,352.0,-16896.0,736.0)
set rr=Rect(-24512.0,3744.0,-24128.0,4064.0)
set sr=Rect(-22720.0,2368.0,-22432.0,2752.0)
set tr=Rect(-23552.0,-256.0,-23200.0,128.0)
set ir=Rect(-25376.0,1312.0,-25056.0,1632.0)
set Sr=Rect(-28736.0,-192.0,-28352.0,160.0)
set cr=Rect(-21024.0,2944.0,-20704.0,3360.0)
set lr=Rect(-13792.0,2144.0,-13440.0,2592.0)
set br=Rect(-13568.0,14912.0,-13216.0,15296.0)
set yr=Rect(-12736.0,16128.0,-12352.0,16512.0)
set pr=Rect(-10880.0,3360.0,-10528.0,3712.0)
set er=Rect(-10048.0,5280.0,-9696.0,5600.0)
set qr=Rect(-6880.0,3936.0,-6560.0,4256.0)
set ar=Rect(-8224.0,3040.0,-7904.0,3392.0)
set nr=Rect(-8960.0,1760.0,-8608.0,2176.0)
set dr=Rect(-6624.0,1088.0,-6304.0,1472.0)
set fr=Rect(-7296.0,-960.0,-6944.0,-544.0)
set Rr=Rect(-23712.0,-4704.0,-23392.0,-4416.0)
set Tr=Rect(-25184.0,-3168.0,-24864.0,-2848.0)
set Yr=Rect(-21888.0,-4416.0,-21536.0,-4032.0)
set Gr=Rect(-20928.0,-2304.0,-20576.0,-1888.0)
set gr=Rect(-7776.0,11040.0,-7456.0,11392.0)
set hr=Rect(-11648.0,7072.0,-11296.0,7360.0)
set Fr=Rect(-13728.0,4992.0,-13408.0,5376.0)
set kr=Rect(-5152.0,21696.0,-4832.0,22080.0)
set jr=Rect(-5248.0,24416.0,-4960.0,24768.0)
set xr=Rect(-6688.0,28096.0,-6368.0,28480.0)
set vr=Rect(-9024.0,26496.0,-8736.0,26880.0)
set mr=Rect(-10048.0,28224.0,-9696.0,28576.0)
set Qr=Rect(-1408.0,23776.0,-1152.0,24096.0)
set Wr=Rect(-2720.0,26176.0,-2432.0,26560.0)
set Er=Rect(-28032.0,-2944.0,-27680.0,-2560.0)
set Zr=Rect(-29760.0,-10016.0,-29408.0,-9632.0)
set Ur=Rect(15296.0,-26976.0,15648.0,-26624.0)
set Ir=Rect(-20544.0,12032.0,-20160.0,12416.0)
set Pr=Rect(-18368.0,10624.0,-18016.0,11008.0)
set Ar=Rect(-10880.0,-576.0,-10528.0,-224.0)
set Dr=Rect(-11104.0,-4768.0,-10816.0,-4448.0)
set Hr=Rect(-5728.0,-2912.0,-5440.0,-2560.0)
set Jr=Rect(-3904.0,-6720.0,-3552.0,-6336.0)
set Kr=Rect(-3616.0,-3040.0,-3328.0,-2688.0)
set Lr=Rect(-7200.0,-8000.0,-6880.0,-7616.0)
set Xr=Rect(-5504.0,-9344.0,-5248.0,-9056.0)
set Cr=Rect(-11616.0,10848.0,-11296.0,11168.0)
set Vr=Rect(-1792.0,-320.0,-1440.0,64.0)
set Br=Rect(3232.0,-7488.0,3552.0,-7136.0)
set Nr=Rect(8224.0,-10496.0,8512.0,-10208.0)
set Mr=Rect(1344.0,29280.0,1696.0,29632.0)
set ws=Rect(10848.0,-2144.0,11136.0,-1824.0)
set us=Rect(-26496.0,-1568.0,-26144.0,-1248.0)
set rs=Rect(-27168.0,2528.0,-26880.0,2816.0)
set ss=Rect(-2016.0,27552.0,-1696.0,27936.0)
set ts=Rect(-3488.0,23040.0,-3200.0,23392.0)
set is=Rect(2016.0,-7904.0,2336.0,-7584.0)
set Ss=Rect(640.0,-5760.0,992.0,-5376.0)
set cs=Rect(5216.0,-12384.0,5504.0,-12064.0)
set os=Rect(18272.0,-17504.0,18656.0,-17056.0)
set Os=Rect(26848.0,-11680.0,27168.0,-11360.0)
set ls=Rect(6464.0,-4672.0,6816.0,-4288.0)
set bs=Rect(20672.0,21312.0,21024.0,21696.0)
set ys=Rect(-1824.0,5792.0,-1440.0,6144.0)
set ps=Rect(-23264.0,-8992.0,-22944.0,-8704.0)
set es=Rect(-13504.0,-8640.0,-13184.0,-8384.0)
set qs=Rect(26048.0,-2848.0,26400.0,-2528.0)
set as=Rect(28864.0,-3360.0,29152.0,-3040.0)
set ns=Rect(28064.0,2592.0,28352.0,2880.0)
set ds=Rect(27488.0,-5984.0,27808.0,-5664.0)
call gT()
call hT()
call InitBlizzard()
call cR()
call CX()
set wC=Ts
if TriggerEvaluate(wC) then
call TriggerExecute(wC)
endif
set uC=tt
if TriggerEvaluate(uC) then
call TriggerExecute(uC)
endif
set MX=CreateTrigger()
call TriggerAddCondition(MX,Condition(Hn))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Real.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(Jn))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Integer.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(Kn))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package String.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(Ln))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Angle.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(Xn))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Vectors.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(Cn))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Maths.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(Vn))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Player.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(Bn))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Printing.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(Nn))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Basics.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(Mn))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package GameTimer.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(wd))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MagicFunctions.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(ud))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package ErrorHandling.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(rd))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Matrices.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(sd))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Quaternion.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(td))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Table.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(id))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Playercolor.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(Sd))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Colors.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(cd))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Group.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(od))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Lightning.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(Od))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package WeatherEffects.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(ld))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package TypeCasting.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(bd))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package ClosureForGroups.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(yd))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package LinkedList.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(pd))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Abilities.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(ed))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package AbilityIds.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(qd))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Buildings.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(ad))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MutliboardTools.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(nd))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package HashList.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(dd))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package EventHelper.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(fd))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package RegisterEvents.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(Rd))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package TimerUtils.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(Td))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package ClosureTimers.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(Yd))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package TargetsAllowed.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(Gd))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Doodads.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(gd))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Icons.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(hd))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Objects.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(Fd))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Sounds.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(kd))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Soundsets.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(jd))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Textures.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(xd))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package UI.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(vd))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Units.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(md))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package UnitIds.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(Qd))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MapBounds.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(Wd))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package DummyRecycler.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(Ed))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package StringUtils.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(Zd))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package ObjectIds.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(Ud))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Preloader.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(Id))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package ObjectIdGenerator.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(Pd))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package OnUnitEnterLeave.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(Ad))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package UnitIndexer.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(Dd))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package ClosureEvents.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(Hd))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MathTools.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(Jd))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Forces.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(Kd))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Strings.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(Ld))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package CityBaseTaxes.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(Xd))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Revolts.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(Cd))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package City.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(Vd))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Multiboards.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(Bd))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package PlayerStats.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(Nd))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package CityModifiers.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(Md))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Main.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(wf))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package CastleCapture.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(uf))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package CityBuilded.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(rf))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package CityManage.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(sf))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package HashSet.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(tf))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package VoteKick.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(Sf))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Commands.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(cf))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Credits.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(of))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Economy.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(Of))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package DateTime.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(lf))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MultiboardCityUpdate.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(bf))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Diplomacy.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(yf))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package LimitEncampments.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(pf))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package LimitMercenaryCamps.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(ef))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Logarithm.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(qf))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MainInit.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(af))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MassControl.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(nf))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package NoShipsNearRivers.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(df))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package NoStarvationOnBoat.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(ff))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package OnPlayerLeave.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(Rf))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package RangeChecks.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(Tf))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Taxation.")
endif
call TriggerClearConditions(MX)
call TriggerAddCondition(MX,Condition(Yf))
if not TriggerEvaluate(MX) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Upkeep.")
endif
call TriggerClearConditions(MX)
call DestroyTrigger(MX)
set MX=null
set wC=null
set uC=null
endfunction
function BX takes nothing returns nothing
call SetPlayerTeam(Player(0),0)
call SetPlayerTeam(Player(1),0)
call SetPlayerTeam(Player(2),0)
call SetPlayerTeam(Player(3),0)
call SetPlayerTeam(Player(4),0)
call SetPlayerTeam(Player(5),0)
call SetPlayerTeam(Player(6),0)
call SetPlayerTeam(Player(7),0)
call SetPlayerTeam(Player(8),0)
call SetPlayerTeam(Player(9),0)
call SetPlayerTeam(Player(10),0)
call SetPlayerTeam(Player(11),0)
call SetPlayerTeam(Player(12),1)
call SetPlayerTeam(Player(13),1)
call SetPlayerTeam(Player(14),1)
call SetPlayerTeam(Player(15),1)
call SetPlayerTeam(Player(16),1)
call SetPlayerTeam(Player(17),1)
call SetPlayerTeam(Player(18),1)
call SetPlayerTeam(Player(19),1)
endfunction
function NX takes nothing returns nothing
call SetStartLocPrioCount(0,19)
call SetStartLocPrio(0,0,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,1,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,2,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,3,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,4,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,9,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,10,11,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,11,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,12,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,13,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,14,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,15,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,16,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,17,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,18,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(1,9)
call SetStartLocPrio(1,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,1,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,2,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,3,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,4,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(2,9)
call SetStartLocPrio(2,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,2,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,3,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,4,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(3,9)
call SetStartLocPrio(3,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,3,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,4,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(4,9)
call SetStartLocPrio(4,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,4,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(5,9)
call SetStartLocPrio(5,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(6,9)
call SetStartLocPrio(6,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(7,9)
call SetStartLocPrio(7,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(8,9)
call SetStartLocPrio(8,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(9,9)
call SetStartLocPrio(9,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,8,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(10,16)
call SetStartLocPrio(10,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,8,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,9,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,10,12,MAP_LOC_PRIO_LOW)
call SetStartLocPrio(10,11,13,MAP_LOC_PRIO_LOW)
call SetStartLocPrio(10,12,14,MAP_LOC_PRIO_LOW)
call SetStartLocPrio(10,13,15,MAP_LOC_PRIO_LOW)
call SetStartLocPrio(10,14,16,MAP_LOC_PRIO_LOW)
call SetStartLocPrio(10,15,17,MAP_LOC_PRIO_LOW)
call SetStartLocPrioCount(11,19)
call SetStartLocPrio(11,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,8,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,9,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,10,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,11,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,12,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,13,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,14,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,15,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,16,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,17,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,18,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(12,5)
call SetStartLocPrio(12,0,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,1,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,2,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,3,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,4,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(13,5)
call SetStartLocPrio(13,0,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,1,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,2,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,3,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,4,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(14,5)
call SetStartLocPrio(14,0,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,1,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,2,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,3,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,4,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(15,5)
call SetStartLocPrio(15,0,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,1,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,2,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,3,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,4,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(16,5)
call SetStartLocPrio(16,0,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,1,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,2,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,3,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,4,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(17,5)
call SetStartLocPrio(17,0,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,1,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,2,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,3,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,4,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(18,1)
call SetStartLocPrio(18,0,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(19,1)
call SetStartLocPrio(19,0,18,MAP_LOC_PRIO_HIGH)
endfunction
function VX takes nothing returns nothing
call SetPlayerStartLocation(Player(0),0)
call ForcePlayerStartLocation(Player(0),0)
call SetPlayerColor(Player(0),ConvertPlayerColor(0))
call SetPlayerRacePreference(Player(0),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(0),false)
call SetPlayerController(Player(0),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(1),1)
call ForcePlayerStartLocation(Player(1),1)
call SetPlayerColor(Player(1),ConvertPlayerColor(1))
call SetPlayerRacePreference(Player(1),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(1),false)
call SetPlayerController(Player(1),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(2),2)
call ForcePlayerStartLocation(Player(2),2)
call SetPlayerColor(Player(2),ConvertPlayerColor(2))
call SetPlayerRacePreference(Player(2),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(2),false)
call SetPlayerController(Player(2),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(3),3)
call ForcePlayerStartLocation(Player(3),3)
call SetPlayerColor(Player(3),ConvertPlayerColor(3))
call SetPlayerRacePreference(Player(3),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(3),false)
call SetPlayerController(Player(3),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(4),4)
call ForcePlayerStartLocation(Player(4),4)
call SetPlayerColor(Player(4),ConvertPlayerColor(4))
call SetPlayerRacePreference(Player(4),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(4),false)
call SetPlayerController(Player(4),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(5),5)
call ForcePlayerStartLocation(Player(5),5)
call SetPlayerColor(Player(5),ConvertPlayerColor(5))
call SetPlayerRacePreference(Player(5),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(5),false)
call SetPlayerController(Player(5),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(6),6)
call ForcePlayerStartLocation(Player(6),6)
call SetPlayerColor(Player(6),ConvertPlayerColor(6))
call SetPlayerRacePreference(Player(6),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(6),false)
call SetPlayerController(Player(6),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(7),7)
call ForcePlayerStartLocation(Player(7),7)
call SetPlayerColor(Player(7),ConvertPlayerColor(7))
call SetPlayerRacePreference(Player(7),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(7),false)
call SetPlayerController(Player(7),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(8),8)
call ForcePlayerStartLocation(Player(8),8)
call SetPlayerColor(Player(8),ConvertPlayerColor(8))
call SetPlayerRacePreference(Player(8),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(8),false)
call SetPlayerController(Player(8),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(9),9)
call ForcePlayerStartLocation(Player(9),9)
call SetPlayerColor(Player(9),ConvertPlayerColor(9))
call SetPlayerRacePreference(Player(9),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(9),false)
call SetPlayerController(Player(9),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(10),10)
call ForcePlayerStartLocation(Player(10),10)
call SetPlayerColor(Player(10),ConvertPlayerColor(10))
call SetPlayerRacePreference(Player(10),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(10),false)
call SetPlayerController(Player(10),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(11),11)
call ForcePlayerStartLocation(Player(11),11)
call SetPlayerColor(Player(11),ConvertPlayerColor(11))
call SetPlayerRacePreference(Player(11),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(11),false)
call SetPlayerController(Player(11),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(12),12)
call ForcePlayerStartLocation(Player(12),12)
call SetPlayerColor(Player(12),ConvertPlayerColor(12))
call SetPlayerRacePreference(Player(12),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(12),false)
call SetPlayerController(Player(12),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(13),13)
call ForcePlayerStartLocation(Player(13),13)
call SetPlayerColor(Player(13),ConvertPlayerColor(13))
call SetPlayerRacePreference(Player(13),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(13),false)
call SetPlayerController(Player(13),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(14),14)
call ForcePlayerStartLocation(Player(14),14)
call SetPlayerColor(Player(14),ConvertPlayerColor(14))
call SetPlayerRacePreference(Player(14),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(14),false)
call SetPlayerController(Player(14),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(15),15)
call ForcePlayerStartLocation(Player(15),15)
call SetPlayerColor(Player(15),ConvertPlayerColor(15))
call SetPlayerRacePreference(Player(15),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(15),false)
call SetPlayerController(Player(15),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(16),16)
call ForcePlayerStartLocation(Player(16),16)
call SetPlayerColor(Player(16),ConvertPlayerColor(16))
call SetPlayerRacePreference(Player(16),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(16),false)
call SetPlayerController(Player(16),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(17),17)
call ForcePlayerStartLocation(Player(17),17)
call SetPlayerColor(Player(17),ConvertPlayerColor(17))
call SetPlayerRacePreference(Player(17),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(17),false)
call SetPlayerController(Player(17),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(18),18)
call ForcePlayerStartLocation(Player(18),18)
call SetPlayerColor(Player(18),ConvertPlayerColor(18))
call SetPlayerRacePreference(Player(18),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(18),false)
call SetPlayerController(Player(18),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(19),19)
call ForcePlayerStartLocation(Player(19),19)
call SetPlayerColor(Player(19),ConvertPlayerColor(19))
call SetPlayerRacePreference(Player(19),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(19),false)
call SetPlayerController(Player(19),MAP_CONTROL_USER)
endfunction
function config takes nothing returns nothing
call SetMapName("TRIGSTR_001")
call SetMapDescription("TRIGSTR_003")
call SetPlayers(20)
call SetTeams(20)
call SetGamePlacement(MAP_PLACEMENT_TEAMS_TOGETHER)
call DefineStartLocation(0,320.0,5184.0)
call DefineStartLocation(1,320.0,5184.0)
call DefineStartLocation(2,320.0,5184.0)
call DefineStartLocation(3,320.0,5184.0)
call DefineStartLocation(4,320.0,5184.0)
call DefineStartLocation(5,320.0,5184.0)
call DefineStartLocation(6,320.0,5184.0)
call DefineStartLocation(7,320.0,5184.0)
call DefineStartLocation(8,320.0,5184.0)
call DefineStartLocation(9,320.0,5184.0)
call DefineStartLocation(10,320.0,5184.0)
call DefineStartLocation(11,320.0,5184.0)
call DefineStartLocation(12,320.0,5184.0)
call DefineStartLocation(13,320.0,5184.0)
call DefineStartLocation(14,320.0,5184.0)
call DefineStartLocation(15,320.0,5184.0)
call DefineStartLocation(16,320.0,5184.0)
call DefineStartLocation(17,320.0,5184.0)
call DefineStartLocation(18,320.0,5184.0)
call DefineStartLocation(19,320.0,5184.0)
call VX()
call BX()
call NX()
endfunction
