// this script was compiled with wurst 1.8.0.0-jenkins-Wurst-1057
globals
// real bj_RADTODEG=0.
// real bj_GAME_STARTED_THRESHOLD=0.
// integer bj_MAX_INVENTORY=0
// integer bj_MAX_PLAYERS=0
// integer bj_PLAYER_NEUTRAL_VICTIM=0
// integer bj_MAX_PLAYER_SLOTS=0
// integer bj_MAX_SKELETONS=0
// integer bj_MAX_STOCK_ITEM_SLOTS=0
// integer bj_MAX_STOCK_UNIT_SLOTS=0
// integer bj_MAX_ITEM_LEVEL=0
// real bj_TOD_DAWN=0.
// real bj_TOD_DUSK=0.
// real bj_MELEE_STARTING_TOD=0.
// integer bj_MELEE_HERO_LIMIT=0
// integer bj_MELEE_HERO_TYPE_LIMIT=0
// real bj_STOCK_RESTOCK_INITIAL_DELAY=0.
// real bj_STOCK_RESTOCK_INTERVAL=0.
// integer bj_STOCK_MAX_ITERATIONS=0
// real bj_RESCUE_PING_TIME=0.
// real bj_CINEMODE_INTERFACEFADE=0.
// gamespeed bj_CINEMODE_GAMESPEED=null
// real bj_CINEMODE_VOLUME_UNITMOVEMENT=0.
// real bj_CINEMODE_VOLUME_UNITSOUNDS=0.
// real bj_CINEMODE_VOLUME_COMBAT=0.
// real bj_CINEMODE_VOLUME_SPELLS=0.
// real bj_CINEMODE_VOLUME_UI=0.
// real bj_CINEMODE_VOLUME_MUSIC=0.
// real bj_CINEMODE_VOLUME_AMBIENTSOUNDS=0.
// real bj_CINEMODE_VOLUME_FIRE=0.
// integer bj_MAX_QUEUED_TRIGGERS=0
// real bj_QUEUED_TRIGGER_TIMEOUT=0.
// integer bj_ALLIANCE_UNALLIED=0
// integer bj_ALLIANCE_UNALLIED_VISION=0
// integer bj_ALLIANCE_ALLIED=0
// integer bj_ALLIANCE_ALLIED_VISION=0
// integer bj_ALLIANCE_ALLIED_UNITS=0
// integer bj_ALLIANCE_ALLIED_ADVUNITS=0
// integer bj_ALLIANCE_NEUTRAL=0
// integer bj_ALLIANCE_NEUTRAL_VISION=0
// integer bj_QUESTTYPE_REQ_DISCOVERED=0
// integer bj_QUESTTYPE_REQ_UNDISCOVERED=0
// integer bj_QUESTTYPE_OPT_DISCOVERED=0
// integer bj_UNIT_STATE_METHOD_ABSOLUTE=0
// integer bj_UNIT_STATE_METHOD_RELATIVE=0
// integer bj_UNIT_STATE_METHOD_DEFAULTS=0
// integer bj_UNIT_STATE_METHOD_MAXIMUM=0
// real bj_CORPSE_MAX_DEATH_TIME=0.
// force bj_FORCE_ALL_PLAYERS=null
// rect bj_mapInitialPlayableArea=null
// timer bj_gameStartedTimer=null
// boolean bj_gameStarted=false
// timer bj_volumeGroupsTimer=null
// trigger bj_dncSoundsDay=null
// trigger bj_dncSoundsNight=null
// sound bj_dayAmbientSound=null
// sound bj_nightAmbientSound=null
// trigger bj_dncSoundsDawn=null
// trigger bj_dncSoundsDusk=null
// sound bj_dawnSound=null
// sound bj_duskSound=null
// boolean bj_useDawnDuskSounds=false
// boolean bj_dncIsDaytime=false
// sound bj_rescueSound=null
// trigger bj_stockItemPurchased=null
// timer bj_stockUpdateTimer=null
// integer bj_stockPickedItemLevel=0
// itemtype bj_stockPickedItemType=null
// trigger bj_rescueUnitBehavior=null
// boolean bj_rescueChangeColorUnit=false
// boolean bj_rescueChangeColorBldg=false
// gamespeed bj_cineModePriorSpeed=null
// boolean bj_cineModePriorFogSetting=false
// boolean bj_cineModePriorMaskSetting=false
// boolean bj_cineModeAlreadyIn=false
// boolean bj_cineModePriorDawnDusk=false
// integer bj_cineModeSavedSeed=0
// integer bj_queuedExecTotal=0
// timer bj_queuedExecTimeoutTimer=null
// trigger bj_queuedExecTimeout=null
// integer bj_groupCountUnits=0
// integer bj_groupEnumTypeId=0
// player bj_groupEnumOwningPlayer=null
// group bj_groupAddGroupDest=null
// location bj_enumDestructableCenter=null
// real bj_enumDestructableRadius=0.
// group bj_suspendDecayFleshGroup=null
// group bj_suspendDecayBoneGroup=null
// timer bj_delayedSuspendDecayTimer=null
// trigger bj_delayedSuspendDecayTrig=null
// integer bj_livingPlayerUnitsTypeId=0
// unit bj_lastCreatedUnit=null
// group bj_lastCreatedGroup=null
// effect bj_lastCreatedEffect=null
// quest bj_lastCreatedQuest=null
// multiboard bj_lastCreatedMultiboard=null
// unit bj_lastReplacedUnit=null
// boolexpr filterGetUnitsOfTypeIdAll=null
// boolexpr filterGetUnitsOfPlayerAndTypeId=null
// boolean bj_wantDestroyGroup=false
// integer PLAYER_NEUTRAL_PASSIVE=0
// integer PLAYER_NEUTRAL_AGGRESSIVE=0
// playercolor PLAYER_COLOR_RED=null
// playercolor PLAYER_COLOR_BLUE=null
// playercolor PLAYER_COLOR_CYAN=null
// playercolor PLAYER_COLOR_PURPLE=null
// playercolor PLAYER_COLOR_YELLOW=null
// playercolor PLAYER_COLOR_ORANGE=null
// playercolor PLAYER_COLOR_GREEN=null
// playercolor PLAYER_COLOR_PINK=null
// playercolor PLAYER_COLOR_LIGHT_GRAY=null
// playercolor PLAYER_COLOR_LIGHT_BLUE=null
// playercolor PLAYER_COLOR_AQUA=null
// playercolor PLAYER_COLOR_BROWN=null
// playercolor PLAYER_COLOR_MAROON=null
// playercolor PLAYER_COLOR_NAVY=null
// playercolor PLAYER_COLOR_TURQUOISE=null
// playercolor PLAYER_COLOR_VIOLET=null
// playercolor PLAYER_COLOR_WHEAT=null
// playercolor PLAYER_COLOR_PEACH=null
// playercolor PLAYER_COLOR_MINT=null
// playercolor PLAYER_COLOR_LAVENDER=null
// playercolor PLAYER_COLOR_COAL=null
// playercolor PLAYER_COLOR_SNOW=null
// playercolor PLAYER_COLOR_EMERALD=null
// playercolor PLAYER_COLOR_PEANUT=null
// alliancetype ALLIANCE_PASSIVE=null
// alliancetype ALLIANCE_HELP_REQUEST=null
// alliancetype ALLIANCE_HELP_RESPONSE=null
// alliancetype ALLIANCE_SHARED_XP=null
// alliancetype ALLIANCE_SHARED_SPELLS=null
// alliancetype ALLIANCE_SHARED_VISION=null
// alliancetype ALLIANCE_SHARED_CONTROL=null
// alliancetype ALLIANCE_SHARED_ADVANCED_CONTROL=null
// version VERSION_REIGN_OF_CHAOS=null
// racepreference RACE_PREF_HUMAN=null
// mapcontrol MAP_CONTROL_USER=null
// mapcontrol MAP_CONTROL_RESCUABLE=null
// mapflag MAP_LOCK_RESOURCE_TRADING=null
// mapflag MAP_LOCK_SPEED=null
// placement MAP_PLACEMENT_TEAMS_TOGETHER=null
// startlocprio MAP_LOC_PRIO_LOW=null
// startlocprio MAP_LOC_PRIO_HIGH=null
// playerslotstate PLAYER_SLOT_STATE_PLAYING=null
// volumegroup SOUND_VOLUMEGROUP_UNITMOVEMENT=null
// volumegroup SOUND_VOLUMEGROUP_UNITSOUNDS=null
// volumegroup SOUND_VOLUMEGROUP_COMBAT=null
// volumegroup SOUND_VOLUMEGROUP_SPELLS=null
// volumegroup SOUND_VOLUMEGROUP_UI=null
// volumegroup SOUND_VOLUMEGROUP_MUSIC=null
// volumegroup SOUND_VOLUMEGROUP_AMBIENTSOUNDS=null
// volumegroup SOUND_VOLUMEGROUP_FIRE=null
// fgamestate GAME_STATE_TIME_OF_DAY=null
// playerstate PLAYER_STATE_RESOURCE_GOLD=null
// playerstate PLAYER_STATE_RESOURCE_LUMBER=null
// playerstate PLAYER_STATE_GIVES_BOUNTY=null
// playerstate PLAYER_STATE_GOLD_GATHERED=null
// playerstate PLAYER_STATE_LUMBER_GATHERED=null
// unitstate UNIT_STATE_LIFE=null
// unitstate UNIT_STATE_MAX_LIFE=null
// unitstate UNIT_STATE_MANA=null
// unitstate UNIT_STATE_MAX_MANA=null
// playerevent EVENT_PLAYER_LEAVE=null
// playerevent EVENT_PLAYER_END_CINEMATIC=null
// playerunitevent EVENT_PLAYER_UNIT_ATTACKED=null
// playerunitevent EVENT_PLAYER_UNIT_RESCUED=null
// playerunitevent EVENT_PLAYER_UNIT_DEATH=null
// playerunitevent EVENT_PLAYER_UNIT_SELECTED=null
// playerunitevent EVENT_PLAYER_UNIT_CONSTRUCT_START=null
// playerunitevent EVENT_PLAYER_UNIT_CONSTRUCT_FINISH=null
// playerunitevent EVENT_PLAYER_UNIT_UPGRADE_FINISH=null
// playerunitevent EVENT_PLAYER_UNIT_RESEARCH_FINISH=null
// playerunitevent EVENT_PLAYER_UNIT_ISSUED_ORDER=null
// unitevent EVENT_UNIT_DAMAGED=null
// playerevent EVENT_PLAYER_ARROW_LEFT_DOWN=null
// playerevent EVENT_PLAYER_ARROW_LEFT_UP=null
// playerevent EVENT_PLAYER_ARROW_RIGHT_DOWN=null
// playerevent EVENT_PLAYER_ARROW_RIGHT_UP=null
// playerevent EVENT_PLAYER_ARROW_DOWN_DOWN=null
// playerevent EVENT_PLAYER_ARROW_DOWN_UP=null
// playerevent EVENT_PLAYER_ARROW_UP_DOWN=null
// playerevent EVENT_PLAYER_ARROW_UP_UP=null
// playerevent EVENT_PLAYER_MOUSE_DOWN=null
// playerevent EVENT_PLAYER_MOUSE_UP=null
// playerevent EVENT_PLAYER_MOUSE_MOVE=null
// playerunitevent EVENT_PLAYER_UNIT_SELL_ITEM=null
// playerunitevent EVENT_PLAYER_UNIT_SPELL_CAST=null
// playerunitevent EVENT_PLAYER_UNIT_SPELL_EFFECT=null
// limitop LESS_THAN=null
// limitop EQUAL=null
// limitop GREATER_THAN_OR_EQUAL=null
// unittype UNIT_TYPE_HERO=null
// unittype UNIT_TYPE_STRUCTURE=null
// itemtype ITEM_TYPE_PERMANENT=null
// itemtype ITEM_TYPE_CHARGED=null
// itemtype ITEM_TYPE_ARTIFACT=null
// camerafield CAMERA_FIELD_TARGET_DISTANCE=null
// integer CAMERA_MARGIN_LEFT=0
// integer CAMERA_MARGIN_RIGHT=0
// integer CAMERA_MARGIN_TOP=0
// integer CAMERA_MARGIN_BOTTOM=0
group udg_Supplyhorses=null
location udg_Temp_Point=null
integer array udg_PlayerRegions
force udg_AllPlayerUnits=null
integer array udg_PlayerTax
location udg_ConvertPoint=null
location udg_ConvertPoint2=null
location udg_GHoriTP=null
location udg_GVertRP=null
rect udg_GHoriDetectCenter=null
rect udg_GVertDetectCenter=null
group udg_GateMovingUnits1=null
group udg_BuildingRangeCheck=null
location udg_BuildingRangeCheckPoint=null
integer array udg_Unhappiness3
group udg_Supplyhorses2=null
location udg_TradePoint=null
rect gg_rct_SHIP_Lower_Nile=null
rect gg_rct_SHIP_Nile_2=null
rect gg_rct_SHIP_Upper_Nile=null
rect gg_rct_SHIP_Thames=null
rect gg_rct_CITY_WE_Burgh=null
rect gg_rct_CITY_WE_Cardiff=null
rect gg_rct_CITY_WE_Galway=null
rect gg_rct_CITY_WE_Zagreb=null
rect gg_rct_CITY_WE_Ragusa=null
rect gg_rct_CITY_BYZ_Durrazo=null
rect gg_rct_CITY_BYZ_Adrianopolis=null
rect gg_rct_CITY_Byz_Thessalonika=null
rect gg_rct_CITY_BYZ_Constantinople=null
rect gg_rct_CITY_WE_Warwick=null
rect gg_rct_CITY_BYZ_Scopia=null
rect gg_rct_CITY_WE_Vienna=null
rect gg_rct_CITY_WE_Prague=null
rect gg_rct_CITY_WE_Esztergom=null
rect gg_rct_CITY_WE_Stettin=null
rect gg_rct_CITY_WE_Krakow=null
rect gg_rct_CITY_WE_Wroclaw=null
rect gg_rct_CITY_EE_Constanta=null
rect gg_rct_CITY_EE_Targoviste=null
rect gg_rct_CITY_WE_Brasov=null
rect gg_rct_CITY_WE_Belgrade=null
rect gg_rct_CITY_WE_Flensburg=null
rect gg_rct_CITY_WE_Roskilde=null
rect gg_rct_CITY_WE_Aarhus=null
rect gg_rct_CITY_WE_Madgeburg=null
rect gg_rct_CITY_EE_Sofia=null
rect gg_rct_CITY_WE_Plock=null
rect gg_rct_CITY_WE_Poznan=null
rect gg_rct_CITY_WE_Kassa=null
rect gg_rct_CITY_WE_Varad=null
rect gg_rct_CITY_EE_Konigsberg=null
rect gg_rct_CITY_EE_Riga=null
rect gg_rct_CITY_WE_Fictional_2=null
rect gg_rct_CITY_EE_Hrodna=null
rect gg_rct_CITY_EE_Vilnius=null
rect gg_rct_CITY_EE_Caffa=null
rect gg_rct_CITY_EE_Pskov=null
rect gg_rct_CITY_EE_Reval=null
rect gg_rct_CITY_EE_Novgorod=null
rect gg_rct_CITY_EE_Polotsk=null
rect gg_rct_SHIP_Seine_River=null
rect gg_rct_SHIP_French_River=null
rect gg_rct_SHIP_Spannish_River=null
rect gg_rct_SHIP_Spannish_River_2=null
rect gg_rct_SHIP_Spannish_River_3=null
rect gg_rct_SHIP_Spannish_River_4=null
rect gg_rct_SHIP_Danube_1=null
rect gg_rct_SHIP_Danube_2=null
rect gg_rct_SHIP_Swedish_Lake=null
rect gg_rct_CITY_EE_Halych=null
rect gg_rct_SHIP_River=null
rect gg_rct_SHIP_Region_Giant=null
rect gg_rct_SHIP_River_GIANT=null
rect gg_rct_CITY_WE_Groningen=null
rect gg_rct_CITY_ME_Tunis=null
rect gg_rct_CITY_EE_Azaq=null
rect gg_rct_CITY_EE_Kiev=null
rect gg_rct_CITY_EE_Minsk=null
rect gg_rct_CITY_EE_Smolensk=null
rect gg_rct_SHIP_Caspian_Sea_and_Mesapotamia=null
rect gg_rct_CITY_ME_Sinop=null
rect gg_rct_CITY_ME_Isparta=null
rect gg_rct_CITY_ME_Kayseri=null
rect gg_rct_CITY_ME_Adana=null
rect gg_rct_CITY_ME_Konya=null
rect gg_rct_CITY_ME_Antioch=null
rect gg_rct_CITY_BYZ_Trebizond=null
rect gg_rct_CITY_BYZ_Nicosia=null
rect gg_rct_CITY_ME_JERUSALEM=null
rect gg_rct_CITY_ME_Edessa=null
rect gg_rct_CITY_BYZ_Smyrna=null
rect gg_rct_CITY_ME_Ankara=null
rect gg_rct_CITY_BYZ_Nicae=null
rect gg_rct_CITY_ME_Fes=null
rect gg_rct_CITY_ME_Oran=null
rect gg_rct_CITY_ME_Algiers=null
rect gg_rct_CITY_ME_Mahdya=null
rect gg_rct_CITY_ME_Tripoli=null
rect gg_rct_CITY_ME_Benghazi=null
rect gg_rct_SHIP_Lake_Egypt=null
rect gg_rct_CITY_ME_Medina=null
rect gg_rct_CITY_ME_Alexandria=null
rect gg_rct_CITY_ME_Damietta=null
rect gg_rct_CITY_ME_Cairo=null
rect gg_rct_CITY_EE_Timutarakan=null
rect gg_rct_CITY_EE_Baia=null
rect gg_rct_CITY_EE_Zhytomyr=null
rect gg_rct_CITY_EE_Oleshe=null
rect gg_rct_CITY_EE_Dnipro=null
rect gg_rct_CITY_EE_Moscow=null
rect gg_rct_CITY_EE_Bryansk=null
rect gg_rct_CITY_ME_Yerevan=null
rect gg_rct_CITY_EE_Sarkel=null
rect gg_rct_CITY_BYZ_Kutaisi=null
rect gg_rct_CITY_BYZ_Tbilisi=null
rect gg_rct_CITY_ME_Damascus=null
rect gg_rct_CITY_ME_Tartus=null
rect gg_rct_CITY_ME_Gaza=null
rect gg_rct_CITY_ME_Mosul=null
rect gg_rct_CITY_ME_Acre=null
rect gg_rct_CITY_ME_Al_Aqaba=null
rect gg_rct_CITY_ME_Quarisiya=null
rect gg_rct_CITY_ME_Tamiya=null
rect gg_rct_CITY_ME_Diyarbakir=null
rect gg_rct_CITY_ME_Erez=null
rect gg_rct_SHIP_Lake_Africa=null
rect gg_rct_SHIP_Mesapotamia=null
rect gg_rct_SHIP_Ankara_Lake=null
rect gg_rct_SHIP_Italy=null
rect gg_rct_CITY_WE_Salzburg=null
rect gg_rct_CITY_WE_Innsbruck=null
rect gg_rct_CITY_WE_Cologne=null
rect gg_rct_CITY_WE_Frankfurt=null
rect gg_rct_Hamburg_CITY=null
rect gg_rct_CITY_ME_Palma=null
rect gg_rct_CITY_EE_Astrakhan=null
rect gg_rct_CITY_EE_Ryazan=null
rect gg_rct_CITY_WE_Edinburgh=null
rect gg_rct_CITY_WE_Aberdeen=null
rect gg_rct_CITY_WE_Inverness=null
rect gg_rct_CITY_WE_York=null
rect gg_rct_CITY_WE_Dublin=null
rect gg_rct_CITY_WE_Ireland=null
rect gg_rct_CITY_WE_Caernarfon=null
rect gg_rct_CITY_WE_London=null
rect gg_rct_CITY_WE_Winchester=null
rect gg_rct_CITY_WE_Exeter=null
rect gg_rct_CITY_WE_Caen=null
rect gg_rct_CITY_WE_Rheims=null
rect gg_rct_CITY_WE_Paris=null
rect gg_rct_CITY_WE_Dijon=null
rect gg_rct_CITY_WE_Clermont=null
rect gg_rct_CITY_WE_Toulouse=null
rect gg_rct_CITY_WE_Bordeaux=null
rect gg_rct_CITY_WE_Zaragoza=null
rect gg_rct_CITY_WE_Barcelona=null
rect gg_rct_CITY_WE_Leon=null
rect gg_rct_CITY_WE_Burgos=null
rect gg_rct_CITY_ME_Madrid=null
rect gg_rct_CITY_WE_Salamanca=null
rect gg_rct_CITY_ME_Lisbon=null
rect gg_rct_CITY_WE_Pamplona=null
rect gg_rct_CITY_WE_Marseille=null
rect gg_rct_CITY_WE_Bruges=null
rect gg_rct_CITY_WE_Antwerp=null
rect gg_rct_CITY_WE_Genoa=null
rect gg_rct_CITY_WE_Milan=null
rect gg_rct_CITY_WE_Venice=null
rect gg_rct_CITY_WE_Bologna=null
rect gg_rct_CITY_WE_Pisa=null
rect gg_rct_CITY_WE_Ancona=null
rect gg_rct_CITY_WE_Rome=null
rect gg_rct_CITY_ME_Granada=null
rect gg_rct_CITY_ME_Cordoba=null
rect gg_rct_CITY_ME_Murcia=null
rect gg_rct_CITY_ME_Valencia=null
rect gg_rct_CITY_WE_Nuremburg=null
rect gg_rct_CITY_WE_Bern=null
rect gg_rct_CITY_WE_Lyon=null
rect gg_rct_CITY_WE_Lund=null
rect gg_rct_CITY_WE_Skara=null
rect gg_rct_CITY_WE_Oslo=null
rect gg_rct_CITY_WE_Eikundarsund=null
rect gg_rct_CITY_WE_Bergen=null
rect gg_rct_CITY_WE_Visby=null
rect gg_rct_CITY_WE_Nykoping=null
rect gg_rct_CITY_ME_Silves=null
rect gg_rct_CITY_ME_Marakesh=null
rect gg_rct_CITY_ME_Luxor=null
rect gg_rct_CITY_WE_Rennes=null
rect gg_rct_CITY_WE_Angers=null
rect gg_rct_CITY_WE_Ajaccio=null
rect gg_rct_CITY_WE_Cagliari=null
rect gg_rct_CITY_WE_Naples=null
rect gg_rct_CITY_WE_Italy=null
rect gg_rct_CITY_WE_Bari=null
rect gg_rct_CITY_WE_Palermo=null
rect gg_rct_CITY_WE_Syracuse=null
rect gg_rct_CITY_WE_Metz=null
rect gg_rct_CITY_BYZ_Balkan=null
rect gg_rct_CITY_BYZ_Athens=null
rect gg_rct_CITY_BYZ_Rhodes=null
rect gg_rct_CITY_EE_Turku=null
rect gg_rct_CITY_BYZ_Fictional=null
rect gg_rct_CITY_ME_Badajoz=null
rect gg_rct_CITY_WE_Oporto=null
rect gg_rct_CITY_WE_Stockholm=null
rect gg_rct_CITY_WE_Kalmar=null
rect gg_rct_CITY_BYZ_Corinth=null
rect gg_rct_CITY_BYZ_Arta=null
rect gg_rct_CITY_BYZ_Candia=null
rect gg_rct_CITY_ME_Kerak=null
rect gg_rct_CITY_ME_Baghdad=null
rect gg_rct_CITY_BYZ_Canakkale=null
rect gg_rct_CITY_EE_Russia=null
rect gg_rct_CITY_WE_Budapest=null
sound gg_snd_Warning=null
trigger gg_trg_Melee_Initialization=null
trigger gg_trg_F9=null
trigger gg_trg_Capturing_Ore_15g=null
trigger gg_trg_Capturing_Ore_25g=null
trigger gg_trg_Capturing_Ore_40g=null
trigger gg_trg_Capturing_Ore_50g=null
trigger gg_trg_upkeep=null
trigger gg_trg_upkeep_2=null
trigger gg_trg_Trebuchet_Dies=null
trigger gg_trg_Spy_Sabotage_on_buildings=null
trigger gg_trg_Convert_V2=null
trigger gg_trg_Gate_Opening=null
trigger gg_trg_Gate_Closing_WoodGate_V=null
trigger gg_trg_Gate_Closing_WoodGate_H=null
trigger gg_trg_Gate_Closing_IronGate_V=null
trigger gg_trg_Gate_Closing_IronGate_H=null
trigger gg_trg_Supply_Horses=null
trigger gg_trg_Supply_Horse_2=null
trigger gg_trg_Lumber_Horse_250=null
trigger gg_trg_Lumber_Horse_500=null
trigger gg_trg_Gold_Horse_250=null
trigger gg_trg_Gold_Horse_500=null
trigger gg_trg_Killing_trading_horse_l250=null
trigger gg_trg_Killing_trading_horse_l500=null
trigger gg_trg_Killing_trading_horse_g250=null
trigger gg_trg_Killing_trading_horse_g500=null
trigger gg_trg_Trading_Lumber_Ship=null
trigger gg_trg_Trading_Gold_Ship=null
trigger gg_trg_Trade=null
trigger gg_trg_killing_Gold_Ship=null
trigger gg_trg_killing_Lumber_Ship=null
trigger gg_trg_FarmHouse=null
trigger gg_trg_Thatched_Cottage_1=null
trigger gg_trg_Thatched_Cottage_2=null
trigger gg_trg_Thatched_Cottage_3=null
trigger gg_trg_Thatched_Cottage_4=null
trigger gg_trg_Spearmen_1=null
trigger gg_trg_Spearmen_2=null
trigger gg_trg_Heavy_Infantry_1=null
trigger gg_trg_Heavy_Infantry_2=null
trigger gg_trg_Archer_1=null
trigger gg_trg_Archer_2=null
trigger gg_trg_Light_Infantry_1=null
trigger gg_trg_Light_Infantry_2=null
trigger gg_trg_Pikemen_1=null
trigger gg_trg_Pikemen_2=null
trigger gg_trg_Light_Cavalry_1=null
trigger gg_trg_Light_Cavalry_2=null
trigger gg_trg_Heavy_Cavalry_1=null
trigger gg_trg_Heavy_Cavalry_2=null
trigger gg_trg_Skirmisher=null
trigger gg_trg_Arquebusers=null
trigger gg_trg_Supply_Horse=null
trigger gg_trg_Disabled_units_at_beginning=null
trigger gg_trg_FarmHouse_Byzantine=null
trigger gg_trg_Thatched_Cottage_1_Byz=null
trigger gg_trg_Thatched_Cottage_2_Byz=null
trigger gg_trg_Thatched_Cottage_3_Byz=null
trigger gg_trg_Spearmen_1_Byzantine=null
trigger gg_trg_Spearmen_2_Byzantine=null
trigger gg_trg_Heavy_Infantry_1_Byzantine=null
trigger gg_trg_Heavy_Infantry_2_Byzantine=null
trigger gg_trg_Archer_1_Byzantine=null
trigger gg_trg_Archer_2_Byzantine=null
trigger gg_trg_Light_Cavalry_1_Byzantine=null
trigger gg_trg_Heavy_Cavalry_1_Byzantine=null
trigger gg_trg_Heavy_Cavalry_2_Byzantine=null
trigger gg_trg_Skirmisher_Byzantine=null
trigger gg_trg_Missile_Cavalry_Byzantine=null
trigger gg_trg_Disabled_units_Byzantine=null
trigger gg_trg_ME_Spearmen_1=null
trigger gg_trg_ME_Spearmen_2=null
trigger gg_trg_ME_Archer_1=null
trigger gg_trg_ME_Archer_2=null
trigger gg_trg_ME_Light_Infantry_1=null
trigger gg_trg_ME_Light_Infantry_2=null
trigger gg_trg_ME_Light_Cavalry_1=null
trigger gg_trg_ME_Light_Cavalry_2=null
trigger gg_trg_ME_Heavy_Cavalry_1=null
trigger gg_trg_ME_Heavy_Cavalry_2=null
trigger gg_trg_ME_Skirmisher=null
trigger gg_trg_ME_Missile_Cavalry=null
trigger gg_trg_Disabled_units_ME=null
trigger gg_trg_Structures_finishes=null
trigger gg_trg_Settle=null
trigger gg_trg_Settlement_Range_Check=null
trigger gg_trg_Church_Range_Check=null
trigger gg_trg_Settlement_Aura=null
trigger gg_trg_Capitol_City_Hall_Up_Copy=null
trigger gg_trg_Capitol_Castle_T3=null
trigger gg_trg_University_Unrest_Reduction_75=null
trigger gg_trg_Cathedral_Unrest_Reduction_100=null
trigger gg_trg_Inn_Unrest_Reduction_10=null
trigger gg_trg_Church_Unrest_Reduction_50=null
player Basics_DUMMY_PLAYER=null
real array CityManage_lastClickTime
unit array CityManage_lastClickUnit
integer City_kCityTypes=0
integer City_kCityBaseTax=0
integer City_cityCount=0
real array City_kCityPopGrowthRateMinMax
integer array City_kCityPopInit
integer array City_cities
unit array City_city_unit
string array City_city_name
integer array City_city_id
integer array City_force_id
real array City_city_pos_x
real array City_city_pos_y
integer array City_population
integer array City_last_pop_growth
real array City_population_growth_rate
real array City_public_order_last
integer array this
integer array this_2
playerevent ClosureEvents_EVENT_PLAYER_CHAT_FILTER=null
trigger ClosureEvents_unitTrig=null
trigger ClosureEvents_leaveTrig=null
trigger ClosureEvents_keyTrig=null
integer array ClosureEvents_eventidToIndex
integer ClosureEvents_eventTypeCounter=0
integer EventListener_castMap=0
integer EventListener_castMapCasters=0
integer array EventListener_generalListenersFirsts
integer array EventListener_unitListenersFirsts
integer array EventListener_eventId
integer array EventListener_next
integer array EventListener_prev
integer array OnCastListener_next
integer array OnCastListener_prev
integer array OnCastListener_abilId
unit array OnCastListener_eventUnit
group ClosureForGroups_DUMMY_GROUP=null
integer array ClosureForGroups_tempCallbacks
integer ClosureForGroups_tempCallbacksCount=0
filterfunc ClosureForGroups_filter=null
integer ClosureTimers_x=0
timer array CallbackPeriodic_t
timer array CallbackSingle_t
integer Colors_COLOR_BLACK_red=0
integer Colors_COLOR_BLACK_green=0
integer Colors_COLOR_BLACK_blue=0
integer Colors_COLOR_BLACK_alpha=0
integer array Colors_PLAYER_COLORS_red
integer array Colors_PLAYER_COLORS_green
integer array Colors_PLAYER_COLORS_blue
string array Colors_hexs
integer Colors_decs=0
real DateTime_kIncomeTime=0.
real array sec
real DummyRecycler_ANGLE_DEGREE=0.
integer array ArrayQueue_rp
integer array ArrayQueue_size
integer array DummyRecycler_angleQueues
integer array Economy_gold_change
integer array Economy_lumb_change
hashtable ErrorHandling_HT=null
force Forces_fWE=null
force Forces_fEE=null
force Forces_fME=null
force Forces_fBZ=null
force array Forces_forces
integer array Forces_forces_colors_red
integer array Forces_forces_colors_green
integer array Forces_forces_colors_blue
timer GameTimer_gameTimer=null
real GameTimer_currentTime=0.
group Group_iterGroup=null
hashtable HashList_ht=null
hashtable HashList_occurences=null
integer array HashList_size
integer array IterableMap_keys
integer array result
integer array LLEntry_elem
integer array LLEntry_prev
integer array LLEntry_next
integer array LLIterator_dummy
integer array LLIterator_current
integer array LLIterator_parent
boolean array LLIterator_destroyOnClose
integer array LinkedList_dummy
integer array LinkedList_size
real MainInit_kSpawnPoint_x=0.
real MainInit_kSpawnPoint_y=0.
string array MainInit_ksCT
timer Main_global_timer=null
real Main_elapsed_time=0.
rect MapBounds_playableMapRect=null
rect MapBounds_boundRect=null
region MapBounds_boundRegion=null
real MapBounds_playableMin_x=0.
real MapBounds_playableMin_y=0.
real MapBounds_playableMax_x=0.
real MapBounds_playableMax_y=0.
real MapBounds_boundMin_x=0.
real MapBounds_boundMin_y=0.
real MapBounds_boundMax_x=0.
real MapBounds_boundMax_y=0.
real MathTools_e=0.
real MathTools_INF_REAL=0.
integer array Multiboards_kMultiboardInitWidths
integer array Multiboards_kMBIncome
integer array Multiboards_kMBCityTax
integer array Multiboards_kMBCityPublicOrder
integer array Multiboards_kMBCityPop
integer array Multiboards_kMBCityPopGrowth
integer array Multiboards_kMBCityName
integer array Multiboards_kMultiboardInitStrings
multiboard array Multiboards_multiboards
trigger OnUnitEnterLeave_eventTrigger=null
group OnUnitEnterLeave_preplacedUnits=null
unit array OnUnitEnterLeave_tempUnits
integer OnUnitEnterLeave_tempUnitsCount=0
integer array PlayerStats_player_stats
integer array PlayerStats_unhappiness
integer array PlayerStats_force_id
player array PlayerStats_pl
boolean array PlayerStats_is_in_game
integer array PlayerStats_selected_city_id
player array Player_players
player Player_localPlayer=null
playercolor Playercolor_PLAYER_COLOR_BLACK_AGGRESSIVE=null
playercolor Playercolor_PLAYER_COLOR_UNKNOWN1=null
playercolor Playercolor_PLAYER_COLOR_UNKNOWN2=null
playercolor Playercolor_PLAYER_COLOR_BLACK_PASSIVE=null
playercolor array Playercolor_LOOKUP
group Preloader_dumg=null
unit Preloader_dum=null
trigger array RegisterEvents_t
integer RegisterEvents_onCastMap=0
string array StringUtils_c2s
integer StringUtils_MAX_INDEX=0
string array Strings_ksWarningWE
string array Strings_ksWarningEE
string array Strings_ksWarningME
string array Strings_ksWarningBZ
string array Strings_ksNoteWE
string array Strings_ksNoteEE
string array Strings_ksNoteME
string array Strings_ksNoteBZ
string array Strings_ksGoodNewsWE
string array Strings_ksGoodNewsEE
string array Strings_ksGoodNewsME
string array Strings_ksGoodNewsBZ
string array Strings_ksAttentionWE
string array Strings_ksAttentionEE
string array Strings_ksAttentionME
string array Strings_ksAttentionBZ
hashtable Table_ht=null
timer array TimerUtils_freeTimers
integer TimerUtils_freeTimersCount=0
integer TimerUtils_timerData=0
integer TypeCasting_typecastdata=0
trigger UnitIndexer_onIndexTrigger=null
trigger UnitIndexer_onDeindexTrigger=null
unit UnitIndexer_indexedUnit=null
unit UnitIndexer_deindexedUnit=null
unit array UnitIndex__unit
integer Units_usOres=0
integer Units_usIncomeOres=0
integer array Units_kStartingUnits
integer Units_kRiverRects=0
integer array EventListener_nextFree
integer EventListener_firstFree=0
integer EventListener_maxIndex=0
integer array EventListener_typeId
integer array City_nextFree
integer City_firstFree=0
integer City_maxIndex=0
integer array City_typeId
integer array CallbackPeriodic_nextFree
integer CallbackPeriodic_firstFree=0
integer CallbackPeriodic_maxIndex=0
integer array CallbackPeriodic_typeId
integer array CallbackSingle_nextFree
integer CallbackSingle_firstFree=0
integer CallbackSingle_maxIndex=0
integer array CallbackSingle_typeId
integer OnCastListener_firstFree=0
integer array OnCastListener_typeId
integer array ForGroupCallback_nextFree
integer ForGroupCallback_firstFree=0
integer ForGroupCallback_maxIndex=0
integer array ForGroupCallback_typeId
integer array ArrayQueue_nextFree
integer ArrayQueue_firstFree=0
integer ArrayQueue_maxIndex=0
integer array ArrayQueue_typeId
integer array HashList_typeId
integer array Table_nextFree
integer Table_firstFree=0
integer Table_maxIndex=0
integer array Table_typeId
integer array Comparator_nextFree
integer Comparator_firstFree=0
integer Comparator_maxIndex=0
integer array LLEntry_nextFree
integer LLEntry_firstFree=0
integer LLEntry_maxIndex=0
integer array LLIterator_nextFree
integer LLIterator_firstFree=0
integer LLIterator_maxIndex=0
integer array LLIterator_typeId
integer array LinkedList_nextFree
integer LinkedList_firstFree=0
integer LinkedList_maxIndex=0
integer array LinkedList_typeId
integer array IdGenerator_nextFree
integer IdGenerator_firstFree=0
integer IdGenerator_maxIndex=0
integer array PlayerStats_nextFree
integer PlayerStats_firstFree=0
integer PlayerStats_maxIndex=0
integer array PlayerStats_typeId
integer array UnitIndex_nextFree
integer UnitIndex_firstFree=0
integer UnitIndex_maxIndex=0
integer array UnitIndex_typeId
integer wurst_stack_depth=0
string array wurst_stack
integer playercolor_toColor_return_red=0
integer playercolor_toColor_return_green=0
integer playercolor_toColor_return_blue=0
integer array PlayerStats_alliance_states_0
integer array PlayerStats_alliance_states_1
integer array PlayerStats_alliance_states_2
integer array PlayerStats_alliance_states_3
integer array PlayerStats_alliance_states_4
integer array PlayerStats_alliance_states_5
integer array PlayerStats_alliance_states_6
integer array PlayerStats_alliance_states_7
integer array PlayerStats_alliance_states_8
integer array PlayerStats_alliance_states_9
integer array PlayerStats_alliance_states_10
integer array PlayerStats_alliance_states_11
integer array PlayerStats_alliance_states_12
integer array PlayerStats_alliance_states_13
integer array PlayerStats_alliance_states_14
integer array PlayerStats_alliance_states_15
integer array PlayerStats_alliance_states_16
integer array PlayerStats_alliance_states_17
integer array PlayerStats_alliance_states_18
integer array PlayerStats_alliance_states_19
integer array PlayerStats_alliance_states_20
integer array PlayerStats_alliance_states_21
integer array PlayerStats_alliance_states_22
integer array PlayerStats_alliance_states_23
code ref_function_Trig_F9_Actions=null
code ref_function_Trig_Capturing_Ore_15g_Conditions=null
code ref_function_Trig_Capturing_Ore_15g_Actions=null
code ref_function_Trig_Capturing_Ore_25g_Conditions=null
code ref_function_Trig_Capturing_Ore_25g_Actions=null
code ref_function_Trig_Capturing_Ore_40g_Conditions=null
code ref_function_Trig_Capturing_Ore_40g_Actions=null
code ref_function_Trig_Capturing_Ore_50g_Conditions=null
code ref_function_Trig_Capturing_Ore_50g_Actions=null
code ref_function_Trig_upkeep_Conditions=null
code ref_function_Trig_upkeep_Actions=null
code ref_function_Trig_upkeep_2_Conditions=null
code ref_function_Trig_upkeep_2_Actions=null
code ref_function_Trig_Trebuchet_Dies_Conditions=null
code ref_function_Trig_Trebuchet_Dies_Actions=null
code ref_function_Trig_Spy_Sabotage_on_buildings_Conditions=null
code ref_function_Trig_Spy_Sabotage_on_buildings_Actions=null
code ref_function_Trig_Convert_V2_Conditions=null
code ref_function_Trig_Convert_V2_Actions=null
code ref_function_Trig_Gate_Opening_Actions=null
code ref_function_Trig_Gate_Closing_WoodGate_V_Func005A=null
code ref_function_Trig_Gate_Closing_WoodGate_V_Conditions=null
code ref_function_Trig_Gate_Closing_WoodGate_V_Actions=null
code ref_function_Trig_Gate_Closing_WoodGate_H_Func005A=null
code ref_function_Trig_Gate_Closing_WoodGate_H_Conditions=null
code ref_function_Trig_Gate_Closing_WoodGate_H_Actions=null
code ref_function_Trig_Gate_Closing_IronGate_V_Func005A=null
code ref_function_Trig_Gate_Closing_IronGate_V_Conditions=null
code ref_function_Trig_Gate_Closing_IronGate_V_Actions=null
code ref_function_Trig_Gate_Closing_IronGate_H_Func005A=null
code ref_function_Trig_Gate_Closing_IronGate_H_Conditions=null
code ref_function_Trig_Gate_Closing_IronGate_H_Actions=null
code ref_function_Trig_Supply_Horses_Func002A=null
code ref_function_Trig_Supply_Horses_Actions=null
code ref_function_Trig_Supply_Horse_2_Func002A=null
code ref_function_Trig_Supply_Horse_2_Actions=null
code ref_function_Trig_Lumber_Horse_250_Conditions=null
code ref_function_Trig_Lumber_Horse_250_Actions=null
code ref_function_Trig_Lumber_Horse_500_Conditions=null
code ref_function_Trig_Lumber_Horse_500_Actions=null
code ref_function_Trig_Gold_Horse_250_Conditions=null
code ref_function_Trig_Gold_Horse_250_Actions=null
code ref_function_Trig_Gold_Horse_500_Conditions=null
code ref_function_Trig_Gold_Horse_500_Actions=null
code ref_function_Trig_Killing_trading_horse_l250_Conditions=null
code ref_function_Trig_Killing_trading_horse_l250_Actions=null
code ref_function_Trig_Killing_trading_horse_l500_Conditions=null
code ref_function_Trig_Killing_trading_horse_l500_Actions=null
code ref_function_Trig_Killing_trading_horse_g250_Conditions=null
code ref_function_Trig_Killing_trading_horse_g250_Actions=null
code ref_function_Trig_Killing_trading_horse_g500_Conditions=null
code ref_function_Trig_Killing_trading_horse_g500_Actions=null
code ref_function_Trig_Trading_Lumber_Ship_Conditions=null
code ref_function_Trig_Trading_Lumber_Ship_Actions=null
code ref_function_Trig_Trading_Gold_Ship_Conditions=null
code ref_function_Trig_Trading_Gold_Ship_Actions=null
code ref_function_Trig_killing_Gold_Ship_Conditions=null
code ref_function_Trig_killing_Gold_Ship_Actions=null
code ref_function_Trig_killing_Lumber_Ship_Conditions=null
code ref_function_Trig_killing_Lumber_Ship_Actions=null
code ref_function_Trig_FarmHouse_Conditions=null
code ref_function_Trig_FarmHouse_Actions=null
code ref_function_Trig_Thatched_Cottage_1_Conditions=null
code ref_function_Trig_Thatched_Cottage_1_Actions=null
code ref_function_Trig_Thatched_Cottage_2_Conditions=null
code ref_function_Trig_Thatched_Cottage_2_Actions=null
code ref_function_Trig_Thatched_Cottage_3_Conditions=null
code ref_function_Trig_Thatched_Cottage_3_Actions=null
code ref_function_Trig_Thatched_Cottage_4_Conditions=null
code ref_function_Trig_Thatched_Cottage_4_Actions=null
code ref_function_Trig_Spearmen_1_Conditions=null
code ref_function_Trig_Spearmen_1_Actions=null
code ref_function_Trig_Spearmen_2_Conditions=null
code ref_function_Trig_Spearmen_2_Actions=null
code ref_function_Trig_Heavy_Infantry_1_Conditions=null
code ref_function_Trig_Heavy_Infantry_1_Actions=null
code ref_function_Trig_Heavy_Infantry_2_Conditions=null
code ref_function_Trig_Heavy_Infantry_2_Actions=null
code ref_function_Trig_Archer_1_Conditions=null
code ref_function_Trig_Archer_1_Actions=null
code ref_function_Trig_Archer_2_Conditions=null
code ref_function_Trig_Archer_2_Actions=null
code ref_function_Trig_Light_Infantry_1_Conditions=null
code ref_function_Trig_Light_Infantry_1_Actions=null
code ref_function_Trig_Light_Infantry_2_Conditions=null
code ref_function_Trig_Light_Infantry_2_Actions=null
code ref_function_Trig_Pikemen_1_Conditions=null
code ref_function_Trig_Pikemen_1_Actions=null
code ref_function_Trig_Pikemen_2_Conditions=null
code ref_function_Trig_Pikemen_2_Actions=null
code ref_function_Trig_Light_Cavalry_1_Conditions=null
code ref_function_Trig_Light_Cavalry_1_Actions=null
code ref_function_Trig_Light_Cavalry_2_Conditions=null
code ref_function_Trig_Light_Cavalry_2_Actions=null
code ref_function_Trig_Heavy_Cavalry_1_Conditions=null
code ref_function_Trig_Heavy_Cavalry_1_Actions=null
code ref_function_Trig_Heavy_Cavalry_2_Conditions=null
code ref_function_Trig_Heavy_Cavalry_2_Actions=null
code ref_function_Trig_Skirmisher_Conditions=null
code ref_function_Trig_Skirmisher_Actions=null
code ref_function_Trig_Arquebusers_Conditions=null
code ref_function_Trig_Arquebusers_Actions=null
code ref_function_Trig_Supply_Horse_Conditions=null
code ref_function_Trig_Supply_Horse_Actions=null
code ref_function_Trig_Disabled_units_at_beginning_Func002A=null
code ref_function_Trig_Disabled_units_at_beginning_Actions=null
code ref_function_Trig_FarmHouse_Byzantine_Conditions=null
code ref_function_Trig_FarmHouse_Byzantine_Actions=null
code ref_function_Trig_Thatched_Cottage_1_Byz_Conditions=null
code ref_function_Trig_Thatched_Cottage_1_Byz_Actions=null
code ref_function_Trig_Thatched_Cottage_2_Byz_Conditions=null
code ref_function_Trig_Thatched_Cottage_2_Byz_Actions=null
code ref_function_Trig_Thatched_Cottage_3_Byz_Conditions=null
code ref_function_Trig_Thatched_Cottage_3_Byz_Actions=null
code ref_function_Trig_Spearmen_1_Byzantine_Conditions=null
code ref_function_Trig_Spearmen_1_Byzantine_Actions=null
code ref_function_Trig_Spearmen_2_Byzantine_Conditions=null
code ref_function_Trig_Spearmen_2_Byzantine_Actions=null
code ref_function_Trig_Heavy_Infantry_1_Byzantine_Conditions=null
code ref_function_Trig_Heavy_Infantry_1_Byzantine_Actions=null
code ref_function_Trig_Heavy_Infantry_2_Byzantine_Conditions=null
code ref_function_Trig_Heavy_Infantry_2_Byzantine_Actions=null
code ref_function_Trig_Archer_1_Byzantine_Conditions=null
code ref_function_Trig_Archer_1_Byzantine_Actions=null
code ref_function_Trig_Archer_2_Byzantine_Conditions=null
code ref_function_Trig_Archer_2_Byzantine_Actions=null
code ref_function_Trig_Light_Cavalry_1_Byzantine_Conditions=null
code ref_function_Trig_Light_Cavalry_1_Byzantine_Actions=null
code ref_function_Trig_Heavy_Cavalry_1_Byzantine_Conditions=null
code ref_function_Trig_Heavy_Cavalry_1_Byzantine_Actions=null
code ref_function_Trig_Heavy_Cavalry_2_Byzantine_Conditions=null
code ref_function_Trig_Heavy_Cavalry_2_Byzantine_Actions=null
code ref_function_Trig_Skirmisher_Byzantine_Conditions=null
code ref_function_Trig_Skirmisher_Byzantine_Actions=null
code ref_function_Trig_Missile_Cavalry_Byzantine_Conditions=null
code ref_function_Trig_Missile_Cavalry_Byzantine_Actions=null
code ref_function_Trig_Disabled_units_Byzantine_Func002A=null
code ref_function_Trig_Disabled_units_Byzantine_Actions=null
code ref_function_Trig_ME_Spearmen_1_Conditions=null
code ref_function_Trig_ME_Spearmen_1_Actions=null
code ref_function_Trig_ME_Spearmen_2_Conditions=null
code ref_function_Trig_ME_Spearmen_2_Actions=null
code ref_function_Trig_ME_Archer_1_Conditions=null
code ref_function_Trig_ME_Archer_1_Actions=null
code ref_function_Trig_ME_Archer_2_Conditions=null
code ref_function_Trig_ME_Archer_2_Actions=null
code ref_function_Trig_ME_Light_Infantry_1_Conditions=null
code ref_function_Trig_ME_Light_Infantry_1_Actions=null
code ref_function_Trig_ME_Light_Infantry_2_Conditions=null
code ref_function_Trig_ME_Light_Infantry_2_Actions=null
code ref_function_Trig_ME_Light_Cavalry_1_Conditions=null
code ref_function_Trig_ME_Light_Cavalry_1_Actions=null
code ref_function_Trig_ME_Light_Cavalry_2_Conditions=null
code ref_function_Trig_ME_Light_Cavalry_2_Actions=null
code ref_function_Trig_ME_Heavy_Cavalry_1_Conditions=null
code ref_function_Trig_ME_Heavy_Cavalry_1_Actions=null
code ref_function_Trig_ME_Heavy_Cavalry_2_Conditions=null
code ref_function_Trig_ME_Heavy_Cavalry_2_Actions=null
code ref_function_Trig_ME_Skirmisher_Conditions=null
code ref_function_Trig_ME_Skirmisher_Actions=null
code ref_function_Trig_ME_Missile_Cavalry_Conditions=null
code ref_function_Trig_ME_Missile_Cavalry_Actions=null
code ref_function_Trig_Disabled_units_ME_Func002A=null
code ref_function_Trig_Disabled_units_ME_Actions=null
code ref_function_Trig_Structures_finishes_Actions=null
code ref_function_Trig_Settle_Func001002=null
code ref_function_Trig_Settle_Actions=null
code ref_function_Trig_Settlement_Range_Check_Func003A=null
code ref_function_Trig_Settlement_Range_Check_Conditions=null
code ref_function_Trig_Settlement_Range_Check_Actions=null
code ref_function_Trig_Church_Range_Check_Func003A=null
code ref_function_Trig_Church_Range_Check_Conditions=null
code ref_function_Trig_Church_Range_Check_Actions=null
code ref_function_Trig_Settlement_Aura_Conditions=null
code ref_function_Trig_Settlement_Aura_Actions=null
code ref_function_Trig_Capitol_City_Hall_Up_Copy_Conditions=null
code ref_function_Trig_Capitol_City_Hall_Up_Copy_Actions=null
code ref_function_Trig_Capitol_Castle_T3_Conditions=null
code ref_function_Trig_Capitol_Castle_T3_Actions=null
code ref_function_Trig_University_Unrest_Reduction_75_Conditions=null
code ref_function_Trig_University_Unrest_Reduction_75_Actions=null
code ref_function_Trig_Cathedral_Unrest_Reduction_100_Conditions=null
code ref_function_Trig_Cathedral_Unrest_Reduction_100_Actions=null
code ref_function_Trig_Inn_Unrest_Reduction_10_Conditions=null
code ref_function_Trig_Inn_Unrest_Reduction_10_Actions=null
code ref_function_Trig_Church_Unrest_Reduction_50_Conditions=null
code ref_function_Trig_Church_Unrest_Reduction_50_Actions=null
code ref_function_Trig_Melee_Initialization_Actions=null
code ref_function_Trig_Trade_Actions=null
code ref_function_init_Real=null
code ref_function_init_Integer=null
code ref_function_init_String=null
code ref_function_init_Angle=null
code ref_function_init_Vectors=null
code ref_function_init_Maths=null
code ref_function_init_Player=null
code ref_function_init_Printing=null
code ref_function_init_Basics=null
code ref_function_init_GameTimer=null
code ref_function_init_MagicFunctions=null
code ref_function_init_ErrorHandling=null
code ref_function_init_Matrices=null
code ref_function_init_Quaternion=null
code ref_function_init_Table=null
code ref_function_init_Playercolor=null
code ref_function_bridge_init_Colors=null
code ref_function_init_Group=null
code ref_function_init_Lightning=null
code ref_function_init_WeatherEffects=null
code ref_function_bridge_init_TypeCasting=null
code ref_function_init_Abilities=null
code ref_function_init_AbilityIds=null
code ref_function_init_Buildings=null
code ref_function_bridge_init_City=null
code ref_function_init_ClosureForGroups=null
code ref_function_bridge_init_LinkedList=null
code ref_function_init_MutliboardTools=null
code ref_function_init_HashList=null
code ref_function_bridge_init_EventHelper=null
code ref_function_bridge_init_RegisterEvents=null
code ref_function_bridge_init_TimerUtils=null
code ref_function_init_ClosureTimers=null
code ref_function_init_TargetsAllowed=null
code ref_function_init_Doodads=null
code ref_function_init_Icons=null
code ref_function_init_Objects=null
code ref_function_init_Sounds=null
code ref_function_init_Soundsets=null
code ref_function_init_Textures=null
code ref_function_init_UI=null
code ref_function_bridge_init_Units=null
code ref_function_init_UnitIds=null
code ref_function_init_MapBounds=null
code ref_function_bridge_init_DummyRecycler=null
code ref_function_bridge_init_StringUtils=null
code ref_function_init_ObjectIds=null
code ref_function_bridge_init_Preloader=null
code ref_function_bridge_init_ObjectIdGenerator=null
code ref_function_bridge_init_OnUnitEnterLeave=null
code ref_function_init_UnitIndexer=null
code ref_function_bridge_init_ClosureEvents=null
code ref_function_init_MathTools=null
code ref_function_init_Forces=null
code ref_function_init_Strings=null
code ref_function_bridge_init_Multiboards=null
code ref_function_init_PlayerStats=null
code ref_function_init_Main=null
code ref_function_bridge_init_CityManage=null
code ref_function_init_Commands=null
code ref_function_bridge_init_Economy=null
code ref_function_bridge_init_DateTime=null
code ref_function_init_Diplomacy=null
code ref_function_init_Logarithm=null
code ref_function_bridge_init_MainInit=null
code ref_function_bridge_init_MultiboardCityUpdate=null
code ref_function_bridge_init_NoShipsNearRivers=null
code ref_function_init_OnPlayerLeave=null
code ref_function_CityManage_closure_impl=null
code ref_function_bridge_onClick=null
code ref_function_bridge_CityManage_closure_impl=null
code ref_function_CityManage_closure_impl_2=null
code ref_function_bridge_CityManage_closure_impl_2=null
code ref_function_CityManage_closure_impl_3=null
code ref_function_bridge_CityManage_closure_impl_3=null
code ref_function_bridge_CityManage_closure_impl_4=null
code ref_function_bridge_CityManage_closure_impl_5=null
code ref_function_CityManage_closure_impl_4=null
code ref_function_bridge_CityManage_closure_impl_6=null
code ref_function_Group_closure_impl=null
code ref_function_bridge_EventListener_generalEventCallback=null
code ref_function_ClosureEvents_closure_impl=null
code ref_function_bridge_ClosureEvents_closure_impl=null
code ref_function_bridge_ClosureEvents_closure_impl_2=null
code ref_function_bridge_ClosureEvents_closure_impl_3=null
code ref_function_bridge_ClosureEvents_closure_impl_4=null
code ref_function_bridge_ClosureEvents_closure_impl_5=null
code ref_function_bridge_ClosureForGroups_closure_impl=null
code ref_function_bridge_CallbackPeriodic_staticCallback=null
code ref_function_bridge_CallbackSingle_closure_impl=null
code ref_function_cond=null
code ref_function_bridge_action=null
code ref_function_cond_2=null
code ref_function_bridge_action_2=null
code ref_function_GameTimer_closure_impl=null
code ref_function_Main_closure_impl=null
code ref_function_CinematicTutorial=null
code ref_function_bridge_action_3=null
code ref_function_OnUnitEnterLeave_closure_impl=null
code ref_function_OnUnitEnterLeave_closure_impl_2=null
code ref_function_OnUnitEnterLeave_closure_impl_3=null
code ref_function_bridge_UnitIndexer_closure_impl=null
code ref_function_bridge_UnitIndexer_closure_impl_2=null
code ref_function_bridge_RegisterEvents_closure_impl=null
unit createDummytempReturn=null
timer getTimertempReturn=null
trigger triggerFromIndextempReturn=null
rect rectFromIndextempReturn=null
endglobals
function CreateNeutralHostileBuildings takes nothing returns nothing
	local player p = Player(PLAYER_NEUTRAL_AGGRESSIVE)
	call CreateUnit(p, 1747989297,  - 1600.0,  - 128.0, 270.000)
	call CreateUnit(p, 1747989297,  - 15040.0, 10816.0, 270.000)
	call CreateUnit(p, 1747989297,  - 256.0,  - 2432.0, 270.000)
	call CreateUnit(p, 1747989297,  - 24320.0, 3904.0, 270.000)
	call CreateUnit(p, 1747989297,  - 23552.0,  - 4544.0, 270.000)
	call CreateUnit(p, 1747989297,  - 23360.0,  - 64.0, 270.000)
	call CreateUnit(p, 1747989297, 2176.0,  - 7744.0, 270.000)
	call CreateUnit(p, 1747989297,  - 6336.0, 8000.0, 270.000)
	call CreateUnit(p, 1747989297, 832.0,  - 5568.0, 270.000)
	call CreateUnit(p, 1747989297,  - 3648.0, 1856.0, 270.000)
	call CreateUnit(p, 1747989042,  - 768.0, 24384.0, 270.000)
	call CreateUnit(p, 1747989297,  - 26304.0,  - 8704.0, 270.000)
	call CreateUnit(p, 1747989297, 2688.0,  - 3008.0, 270.000)
	call CreateUnit(p, 1747989297,  - 5568.0,  - 2752.0, 270.000)
	call CreateUnit(p, 1747989297,  - 3456.0,  - 2880.0, 270.000)
	call CreateUnit(p, 1747989297,  - 6464.0, 1280.0, 270.000)
	call CreateUnit(p, 1747989297,  - 8064.0, 3200.0, 270.000)
	call CreateUnit(p, 1747989297,  - 8768.0, 1984.0, 270.000)
	call CreateUnit(p, 1747989297,  - 7104.0,  - 768.0, 270.000)
	call CreateUnit(p, 1747989297,  - 28544.0, 0.0, 270.000)
	call CreateUnit(p, 1747989297,  - 27840.0,  - 2752.0, 270.000)
	call CreateUnit(p, 1747989297,  - 27008.0, 2688.0, 270.000)
	call CreateUnit(p, 1747989297,  - 17024.0, 512.0, 270.000)
	call CreateUnit(p, 1747989297,  - 21696.0,  - 4224.0, 270.000)
	call CreateUnit(p, 1747989042, 17536.0,  - 9024.0, 270.000)
	call CreateUnit(p, 1747989297, 10816.0,  - 7360.0, 270.000)
	call CreateUnit(p, 1747989297, 12800.0,  - 6912.0, 270.000)
	call CreateUnit(p, 1747989297, 15488.0,  - 7552.0, 270.000)
	call CreateUnit(p, 1747989297, 19072.0,  - 7424.0, 270.000)
	call CreateUnit(p, 1747989297, 15360.0,  - 5568.0, 270.000)
	call CreateUnit(p, 1747989297, 17216.0,  - 8640.0, 270.000)
	call CreateUnit(p, 1747989297, 16960.0,  - 16192.0, 270.000)
	call CreateUnit(p, 1747989297, 6976.0,  - 6592.0, 270.000)
	call CreateUnit(p, 1747989297, 24000.0, 256.0, 270.000)
	call CreateUnit(p, 1747989297,  - 10688.0,  - 384.0, 270.000)
	call CreateUnit(p, 1747989297, 13952.0,  - 11008.0, 270.000)
	call CreateUnit(p, 1747989297,  - 10944.0,  - 4608.0, 270.000)
	call CreateUnit(p, 1747989297,  - 21440.0,  - 8384.0, 270.000)
	call CreateUnit(p, 1747989297, 17472.0, 9472.0, 270.000)
	call CreateUnit(p, 1747989297,  - 16768.0,  - 8064.0, 270.000)
	call CreateUnit(p, 1747989297,  - 9920.0,  - 11264.0, 270.000)
	call CreateUnit(p, 1747989297,  - 7488.0,  - 16256.0, 270.000)
	call CreateUnit(p, 1747989297, 448.0,  - 17600.0, 270.000)
	call CreateUnit(p, 1747989297, 11008.0,  - 18496.0, 270.000)
	call CreateUnit(p, 1747989297, 13248.0,  - 17856.0, 270.000)
	call CreateUnit(p, 1747989297, 12288.0,  - 20864.0, 270.000)
	call CreateUnit(p, 1747989297,  - 11456.0, 11008.0, 270.000)
	call CreateUnit(p, 1747989297,  - 8640.0, 7104.0, 270.000)
	call CreateUnit(p, 1747989297,  - 7360.0, 17088.0, 270.000)
	call CreateUnit(p, 1747989297,  - 5120.0, 14528.0, 270.000)
	call CreateUnit(p, 1747989297, 15488.0,  - 26816.0, 270.000)
	call CreateUnit(p, 1747989297,  - 9600.0, 13120.0, 270.000)
	call CreateUnit(p, 1747989297,  - 11456.0, 14528.0, 270.000)
	call CreateUnit(p, 1747989297,  - 12544.0, 16320.0, 270.000)
	call CreateUnit(p, 1747989297,  - 7680.0, 22272.0, 270.000)
	call CreateUnit(p, 1747989297,  - 6272.0, 21376.0, 270.000)
	call CreateUnit(p, 1747989297,  - 4992.0, 21888.0, 270.000)
	call CreateUnit(p, 1747989297,  - 1280.0, 23936.0, 270.000)
	call CreateUnit(p, 1747989297,  - 3328.0, 23232.0, 270.000)
	call CreateUnit(p, 1747989297,  - 2560.0, 26368.0, 270.000)
	call CreateUnit(p, 1747989297,  - 6528.0, 28288.0, 270.000)
	call CreateUnit(p, 1747989297,  - 9856.0, 28416.0, 270.000)
	call CreateUnit(p, 1747989297,  - 13376.0, 15104.0, 270.000)
	call CreateUnit(p, 1747989297,  - 10688.0, 3520.0, 270.000)
	call CreateUnit(p, 1747989297,  - 9856.0, 5440.0, 270.000)
	call CreateUnit(p, 1747989297,  - 6720.0, 4096.0, 270.000)
	call CreateUnit(p, 1747989297,  - 13632.0, 2368.0, 270.000)
	call CreateUnit(p, 1747989297,  - 10496.0, 17728.0, 270.000)
	call CreateUnit(p, 1747989297,  - 7616.0, 11200.0, 270.000)
	call CreateUnit(p, 1747989297,  - 18688.0, 5760.0, 270.000)
	call CreateUnit(p, 1747989297,  - 25024.0,  - 3008.0, 270.000)
	call CreateUnit(p, 1747989297,  - 20096.0, 1408.0, 270.000)
	call CreateUnit(p, 1747989297,  - 7040.0,  - 7808.0, 270.000)
	call CreateUnit(p, 1747989297,  - 5376.0,  - 9216.0, 270.000)
	call CreateUnit(p, 1747989297, 24896.0,  - 27456.0, 270.000)
	call CreateUnit(p, 1747989297,  - 20352.0, 12224.0, 270.000)
	call CreateUnit(p, 1747989297,  - 13568.0, 5184.0, 270.000)
	call CreateUnit(p, 1747989297,  - 5120.0, 24576.0, 270.000)
	call CreateUnit(p, 1747989297,  - 1856.0, 27776.0, 270.000)
	call CreateUnit(p, 1747989297,  - 16704.0, 24192.0, 270.000)
	call CreateUnit(p, 1747989297,  - 15936.0, 17088.0, 270.000)
	call CreateUnit(p, 1747989297,  - 17792.0, 16064.0, 270.000)
	call CreateUnit(p, 1747989297,  - 20224.0, 21632.0, 270.000)
	call CreateUnit(p, 1747989297,  - 22400.0, 19968.0, 270.000)
	call CreateUnit(p, 1747989297,  - 15872.0, 20544.0, 270.000)
	call CreateUnit(p, 1747989297,  - 19776.0, 16512.0, 270.000)
	call CreateUnit(p, 1747989297,  - 17088.0, 12672.0, 270.000)
	call CreateUnit(p, 1747989297,  - 18560.0, 19712.0, 270.000)
	call CreateUnit(p, 1747989297,  - 15680.0, 26112.0, 270.000)
	call CreateUnit(p, 1747989297,  - 17088.0, 26816.0, 270.000)
	call CreateUnit(p, 1747989297,  - 16704.0, 3584.0, 270.000)
	call CreateUnit(p, 1747989297,  - 11456.0, 7232.0, 270.000)
	call CreateUnit(p, 1747989297,  - 18176.0, 10816.0, 270.000)
	call CreateUnit(p, 1747989297,  - 16000.0, 6016.0, 270.000)
	call CreateUnit(p, 1747989297,  - 8896.0, 26688.0, 270.000)
	call CreateUnit(p, 1747989297, 9216.0,  - 4416.0, 270.000)
	call CreateUnit(p, 1747989297, 6656.0,  - 4480.0, 270.000)
	call CreateUnit(p, 1747989297, 5184.0,  - 1856.0, 270.000)
	call CreateUnit(p, 1747989297, 18624.0,  - 448.0, 270.000)
	call CreateUnit(p, 1747989297, 11008.0,  - 1984.0, 270.000)
	call CreateUnit(p, 1747989297, 14144.0,  - 128.0, 270.000)
	call CreateUnit(p, 1747989297, 8384.0,  - 10368.0, 270.000)
	call CreateUnit(p, 1747989297, 5376.0,  - 12224.0, 270.000)
	call CreateUnit(p, 1747989297, 3392.0,  - 7296.0, 270.000)
	call CreateUnit(p, 1747989297, 12672.0,  - 3904.0, 270.000)
	call CreateUnit(p, 1747989297, 27008.0,  - 11520.0, 270.000)
	call CreateUnit(p, 1747989297,  - 25216.0, 1472.0, 270.000)
	call CreateUnit(p, 1747989297, 23552.0, 11072.0, 270.000)
	call CreateUnit(p, 1747989297,  - 20736.0,  - 2112.0, 270.000)
	call CreateUnit(p, 1747989297,  - 22592.0, 2560.0, 270.000)
	call CreateUnit(p, 1747989297,  - 20864.0, 3136.0, 270.000)
	call CreateUnit(p, 1747989297,  - 17280.0,  - 3136.0, 270.000)
	call CreateUnit(p, 1747989297,  - 3584.0, 4608.0, 270.000)
	call CreateUnit(p, 1747989297, 1536.0, 29440.0, 270.000)
	call CreateUnit(p, 1747989297, 1216.0,  - 960.0, 270.000)
	call CreateUnit(p, 1747989043,  - 7872.0, 17536.0, 270.000)
	call CreateUnit(p, 1747989297,  - 13568.0, 12160.0, 270.000)
	call CreateUnit(p, 1747989297,  - 13696.0, 8064.0, 270.000)
	call CreateUnit(p, 1747989297,  - 4544.0, 11648.0, 270.000)
	call CreateUnit(p, 1747989297,  - 3072.0, 8320.0, 270.000)
	call CreateUnit(p, 1747989297,  - 384.0, 8512.0, 270.000)
	call CreateUnit(p, 1747989297,  - 4992.0, 17280.0, 270.000)
	call CreateUnit(p, 1747989297, 64.0, 12608.0, 270.000)
	call CreateUnit(p, 1747989297,  - 2112.0, 13696.0, 270.000)
	call CreateUnit(p, 1747989297, 4160.0, 5376.0, 270.000)
	call CreateUnit(p, 1747989297, 4224.0, 3904.0, 270.000)
	call CreateUnit(p, 1747989297, 7232.0, 2240.0, 270.000)
	call CreateUnit(p, 1747989297,  - 384.0, 3072.0, 270.000)
	call CreateUnit(p, 1747989297,  - 8128.0, 19968.0, 270.000)
	call CreateUnit(p, 1747989297, 3072.0, 192.0, 270.000)
	call CreateUnit(p, 1747989297, 832.0, 15872.0, 270.000)
	call CreateUnit(p, 1747989297,  - 2304.0, 16064.0, 270.000)
	call CreateUnit(p, 1747989297, 4416.0, 19648.0, 270.000)
	call CreateUnit(p, 1747989297, 1792.0, 6976.0, 270.000)
	call CreateUnit(p, 1747989297, 5888.0, 24960.0, 270.000)
	call CreateUnit(p, 1747989297,  - 1792.0, 19200.0, 270.000)
	call CreateUnit(p, 1747989297, 3008.0, 22784.0, 270.000)
	call CreateUnit(p, 1747989297, 3200.0, 18240.0, 270.000)
	call CreateUnit(p, 1747989297,  - 3712.0,  - 6528.0, 270.000)
	call CreateUnit(p, 1747989297,  - 17216.0, 22208.0, 270.000)
	call CreateUnit(p, 1747989297,  - 18880.0, 17920.0, 270.000)
	call CreateUnit(p, 1747989297,  - 17280.0, 18304.0, 270.000)
	call CreateUnit(p, 1747989297,  - 22272.0, 22400.0, 270.000)
	call CreateUnit(p, 1747989297,  - 10496.0,  - 9152.0, 270.000)
	call CreateUnit(p, 1747989297, 13248.0, 5120.0, 270.000)
	call CreateUnit(p, 1747989297, 7936.0,  - 2368.0, 270.000)
	call CreateUnit(p, 1747989297, 3520.0, 27008.0, 270.000)
	call CreateUnit(p, 1747989297, 8832.0, 26368.0, 270.000)
	call CreateUnit(p, 1747989297, 6848.0, 21440.0, 270.000)
	call CreateUnit(p, 1747989297, 6144.0, 18560.0, 270.000)
	call CreateUnit(p, 1747989297, 3904.0, 11072.0, 270.000)
	call CreateUnit(p, 1747989297, 8512.0, 12352.0, 270.000)
	call CreateUnit(p, 1747989297, 9280.0, 20032.0, 270.000)
	call CreateUnit(p, 1747989297, 1216.0, 11008.0, 270.000)
	call CreateUnit(p, 1747989044,  - 15680.0, 11200.0, 270.000)
	call CreateUnit(p, 1747989044,  - 15104.0, 17408.0, 270.000)
	call CreateUnit(p, 1747989045,  - 1728.0, 28608.0, 270.000)
	call CreateUnit(p, 1747989043,  - 18304.0, 18112.0, 270.000)
	call CreateUnit(p, 1747989044,  - 9600.0, 13888.0, 270.000)
	call CreateUnit(p, 1747989297, 384.0, 19456.0, 270.000)
	call CreateUnit(p, 1747989044, 4864.0, 5952.0, 270.000)
	call CreateUnit(p, 1747989044, 8000.0,  - 1664.0, 270.000)
	call CreateUnit(p, 1747989044, 9280.0,  - 3008.0, 270.000)
	call CreateUnit(p, 1747989045,  - 21056.0, 21056.0, 270.000)
	call CreateUnit(p, 1747989045,  - 19648.0, 12224.0, 270.000)
	call CreateUnit(p, 1747989045, 17984.0,  - 13120.0, 270.000)
	call CreateUnit(p, 1747989042,  - 28544.0, 704.0, 270.000)
	call CreateUnit(p, 1747989045,  - 9344.0, 7168.0, 270.000)
	call CreateUnit(p, 1747989043,  - 6336.0, 8576.0, 270.000)
	call CreateUnit(p, 1747989045,  - 15616.0, 21248.0, 270.000)
	call CreateUnit(p, 1747989045,  - 16640.0, 1024.0, 270.000)
	call CreateUnit(p, 1747989045, 13760.0,  - 11584.0, 270.000)
	call CreateUnit(p, 1747989042,  - 11328.0, 3712.0, 270.000)
	call CreateUnit(p, 1747989042,  - 16768.0, 25920.0, 270.000)
	call CreateUnit(p, 1747989045,  - 19200.0, 28352.0, 270.000)
	call CreateUnit(p, 1747989043, 3456.0, 11584.0, 270.000)
	call CreateUnit(p, 1747989044,  - 24640.0, 4352.0, 270.000)
	call CreateUnit(p, 1747989044,  - 23232.0,  - 5120.0, 270.000)
	call CreateUnit(p, 1747989042,  - 23424.0, 768.0, 270.000)
	call CreateUnit(p, 1747989045,  - 15936.0,  - 2688.0, 270.000)
	call CreateUnit(p, 1747989045,  - 10752.0,  - 3456.0, 270.000)
	call CreateUnit(p, 1747989044,  - 7552.0, 4416.0, 270.000)
	call CreateUnit(p, 1747989045,  - 20160.0,  - 1600.0, 270.000)
	call CreateUnit(p, 1747989045,  - 21824.0, 2560.0, 270.000)
	call CreateUnit(p, 1747989045, 11392.0,  - 7104.0, 270.000)
	call CreateUnit(p, 1747989042, 4352.0, 20224.0, 270.000)
	call CreateUnit(p, 1747989044,  - 15360.0, 4992.0, 270.000)
	call CreateUnit(p, 1747989042,  - 896.0, 3392.0, 270.000)
	call CreateUnit(p, 1747989045,  - 6528.0,  - 832.0, 270.000)
	call CreateUnit(p, 1747989043,  - 4928.0,  - 3264.0, 270.000)
	call CreateUnit(p, 1747989042,  - 6144.0,  - 8192.0, 270.000)
	call CreateUnit(p, 1747989043, 23424.0, 640.0, 270.000)
	call CreateUnit(p, 1747989043,  - 6976.0, 1344.0, 270.000)
	call CreateUnit(p, 1747989043, 4352.0, 128.0, 270.000)
	call CreateUnit(p, 1747989297, 17472.0, 19648.0, 270.000)
	call CreateUnit(p, 1747989044,  - 7872.0, 22784.0, 270.000)
	call CreateUnit(p, 1747989297, 20864.0, 21504.0, 270.000)
	call CreateUnit(p, 1747989044,  - 9152.0, 28480.0, 270.000)
	call CreateUnit(p, 1747989042,  - 27712.0,  - 9536.0, 270.000)
	call CreateUnit(p, 1747989042, 4800.0,  - 12480.0, 270.000)
	call CreateUnit(p, 1747989045, 7232.0,  - 11328.0, 270.000)
	call CreateUnit(p, 1747989045, 1792.0,  - 8064.0, 270.000)
	call CreateUnit(p, 1747989297,  - 1600.0, 5952.0, 270.000)
	call CreateUnit(p, 1747989043,  - 128.0,  - 1792.0, 270.000)
	call CreateUnit(p, 1747989042,  - 3392.0, 8640.0, 270.000)
	call CreateUnit(p, 1747989044,  - 1856.0, 16576.0, 270.000)
	call CreateUnit(p, 1747989043,  - 13888.0, 14784.0, 270.000)
	call CreateUnit(p, 1747989297,  - 29568.0,  - 9792.0, 270.000)
	call CreateUnit(p, 1747989043,  - 9088.0, 26240.0, 270.000)
	call CreateUnit(p, 1747989045,  - 5440.0, 23808.0, 270.000)
	call CreateUnit(p, 1747989045, 2176.0, 30080.0, 270.000)
	call CreateUnit(p, 1747989043, 1984.0, 6464.0, 270.000)
	call CreateUnit(p, 1747989297,  - 26304.0,  - 1408.0, 270.000)
	call CreateUnit(p, 1747989043, 448.0, 13056.0, 270.000)
	call CreateUnit(p, 1747989045, 3072.0, 26752.0, 270.000)
	call CreateUnit(p, 1747989043, 6656.0, 18880.0, 270.000)
	call CreateUnit(p, 1747989043, 3264.0,  - 3712.0, 270.000)
	call CreateUnit(p, 1747989297, 15872.0, 5760.0, 270.000)
	call CreateUnit(p, 1747989043, 6528.0, 22080.0, 270.000)
	call CreateUnit(p, 1747989044, 8896.0, 27008.0, 270.000)
	call CreateUnit(p, 1747989297, 18496.0,  - 17280.0, 270.000)
	call CreateUnit(p, 1747989297, 11392.0, 7872.0, 270.000)
	call CreateUnit(p, 1747989297, 12672.0, 11328.0, 270.000)
	call CreateUnit(p, 1747989297, 6016.0, 12416.0, 270.000)
	call CreateUnit(p, 1747989297, 7104.0, 7808.0, 270.000)
	call CreateUnit(p, 1747989297, 20864.0, 2688.0, 270.000)
	call CreateUnit(p, 1747989297, 24000.0, 2560.0, 270.000)
	call CreateUnit(p, 1747989297, 19648.0, 11328.0, 270.000)
	call CreateUnit(p, 1747989297, 11584.0, 16960.0, 270.000)
	call CreateUnit(p, 1747989297, 18496.0,  - 13248.0, 270.000)
	call CreateUnit(p, 1747989297, 17216.0,  - 11456.0, 270.000)
	call CreateUnit(p, 1747989297, 25088.0,  - 8320.0, 270.000)
	call CreateUnit(p, 1747989297, 15680.0,  - 17536.0, 270.000)
	call CreateUnit(p, 1747989297, 16640.0,  - 14208.0, 270.000)
	call CreateUnit(p, 1747989297, 17280.0,  - 19584.0, 270.000)
	call CreateUnit(p, 1747989297, 22912.0,  - 10240.0, 270.000)
	call CreateUnit(p, 1747989297, 20864.0,  - 23040.0, 270.000)
	call CreateUnit(p, 1747989044, 13120.0,  - 21696.0, 270.000)
	call CreateUnit(p, 1747989297, 20096.0,  - 5760.0, 270.000)
	call CreateUnit(p, 1747989297, 18816.0,  - 3776.0, 270.000)
	call CreateUnit(p, 1747989042, 14464.0,  - 26432.0, 270.000)
	call CreateUnit(p, 1747989044, 23808.0,  - 27776.0, 270.000)
	call CreateUnit(p, 1747989042, 11776.0,  - 18688.0, 270.000)
	call CreateUnit(p, 1747989043, 256.0,  - 18048.0, 270.000)
	call CreateUnit(p, 1747989045,  - 16192.0,  - 8192.0, 270.000)
	call CreateUnit(p, 1747989045,  - 11520.0,  - 10944.0, 270.000)
	call CreateUnit(p, 1747989045, 16512.0,  - 19968.0, 270.000)
	call CreateUnit(p, 1747989045, 20416.0,  - 22272.0, 270.000)
	call CreateUnit(p, 1747989044, 28800.0,  - 11904.0, 270.000)
	call CreateUnit(p, 1747989297, 15040.0, 23104.0, 270.000)
	call CreateUnit(p, 1747989044, 8128.0, 12928.0, 270.000)
	call CreateUnit(p, 1747989044, 16896.0,  - 15744.0, 270.000)
	call CreateUnit(p, 1747989042, 17984.0,  - 640.0, 270.000)
	call CreateUnit(p, 1747989045, 20608.0, 3136.0, 270.000)
	call CreateUnit(p, 1747989045, 7232.0,  - 5120.0, 270.000)
	call CreateUnit(p, 1747989045, 25984.0,  - 8128.0, 270.000)
	call CreateUnit(p, 1747989045, 20544.0,  - 5440.0, 270.000)
	call CreateUnit(p, 1747989045, 11968.0, 17856.0, 270.000)
	call CreateUnit(p, 1747989045, 10048.0, 20032.0, 270.000)
	call CreateUnit(p, 1747989043, 15296.0,  - 7232.0, 270.000)
	call CreateUnit(p, 1747989043, 13056.0, 11776.0, 270.000)
	call CreateUnit(p, 1747989043, 15744.0, 23488.0, 270.000)
	call CreateUnit(p, 1747989043, 17984.0, 9280.0, 270.000)
	set p = null
endfunction

function CreateUnitsForPlayer0 takes nothing returns nothing
	local player p = Player(0)
	local unit u = CreateUnit(p, 1211118391,  - 30470.9, 30602.5, 270.516)
	set u = CreateUnit(p, 1747989322,  - 29096.5,  - 29925.1, 129.990)
	set u = CreateUnit(p, 1747989319,  - 29652.3,  - 29932.3, 35.299)
	set u = CreateUnit(p, 1211118406,  - 30360.2, 29312.6, 270.421)
	call SetHeroLevel(u, 20, false)
	set p = null
	set u = null
endfunction

function CreateUnitsForPlayer1 takes nothing returns nothing
	local player p = Player(1)
	local unit u = CreateUnit(p, 1211118391,  - 30205.9, 30601.1, 270.267)
	set u = CreateUnit(p, 1747989319,  - 29651.3,  - 29820.8, 211.530)
	set u = CreateUnit(p, 1747989322,  - 28993.6,  - 29944.1, 52.090)
	set u = CreateUnit(p, 1211118406,  - 30199.1, 29448.7, 270.266)
	call SetHeroLevel(u, 20, false)
	set p = null
	set u = null
endfunction

function CreateUnitsForPlayer10 takes nothing returns nothing
	local player p = Player(10)
	local unit u = CreateUnit(p, 1211118391,  - 30338.2, 30210.1, 270.394)
	set u = CreateUnit(p, 1747989319,  - 29474.0,  - 29667.6, 343.940)
	set u = CreateUnit(p, 1747989322,  - 28885.7,  - 29487.7, 293.780)
	set u = CreateUnit(p, 1211118406,  - 29904.6, 29442.8, 269.983)
	call SetHeroLevel(u, 20, false)
	set p = null
	set u = null
endfunction

function CreateUnitsForPlayer11 takes nothing returns nothing
	local player p = Player(11)
	local unit u = CreateUnit(p, 1211118391,  - 29827.0, 30210.1, 269.911)
	set u = CreateUnit(p, 1747989319,  - 29457.5,  - 29518.0, 42.720)
	set u = CreateUnit(p, 1747989322,  - 28767.7,  - 29487.7, 92.750)
	set u = CreateUnit(p, 1211118406,  - 30125.9, 29321.4, 270.196)
	call SetHeroLevel(u, 20, false)
	set p = null
	set u = null
endfunction

function CreateUnitsForPlayer12 takes nothing returns nothing
	local player p = Player(12)
	local unit u = CreateUnit(p, 1211118391,  - 30464.7, 30089.7, 270.515)
	set u = CreateUnit(p, 1747989319,  - 29664.3,  - 29340.4, 35.299)
	set u = CreateUnit(p, 1747989322,  - 29062.3,  - 29295.8, 129.990)
	set u = CreateUnit(p, 1211118406,  - 29962.2, 29311.8, 270.038)
	call SetHeroLevel(u, 20, false)
	set p = null
	set u = null
endfunction

function CreateUnitsForPlayer13 takes nothing returns nothing
	local player p = Player(13)
	local unit u = CreateUnit(p, 1211118391,  - 30204.3, 30080.3, 270.268)
	set u = CreateUnit(p, 1747989319,  - 29663.3,  - 29228.9, 211.530)
	set u = CreateUnit(p, 1747989322,  - 28959.5,  - 29314.8, 52.090)
	set u = CreateUnit(p, 1211118406,  - 30039.0, 29306.5, 270.112)
	call SetHeroLevel(u, 20, false)
	set p = null
	set u = null
endfunction

function CreateUnitsForPlayer14 takes nothing returns nothing
	local player p = Player(14)
	local unit u = CreateUnit(p, 1211118391,  - 30339.8, 29950.4, 270.397)
	set u = CreateUnit(p, 1747989319,  - 29658.1,  - 29089.5, 299.320)
	set u = CreateUnit(p, 1747989322,  - 28867.5,  - 29314.8, 214.760)
	set u = CreateUnit(p, 1211118406,  - 29968.7, 29556.2, 270.045)
	call SetHeroLevel(u, 20, false)
	set p = null
	set u = null
endfunction

function CreateUnitsForPlayer15 takes nothing returns nothing
	local player p = Player(15)
	local unit u = CreateUnit(p, 1211118391,  - 30467.2, 29834.7, 270.519)
	set u = CreateUnit(p, 1747989319,  - 29669.7,  - 28958.4, 123.340)
	set u = CreateUnit(p, 1747989322,  - 28765.3,  - 29311.8, 97.900)
	set u = CreateUnit(p, 1211118406,  - 29874.4, 29559.4, 269.954)
	call SetHeroLevel(u, 20, false)
	set p = null
	set u = null
endfunction

function CreateUnitsForPlayer16 takes nothing returns nothing
	local player p = Player(16)
	local unit u = CreateUnit(p, 1211118391,  - 30203.1, 29826.8, 270.268)
	set u = CreateUnit(p, 1211118406,  - 29780.4, 29300.3, 269.864)
	call SetHeroLevel(u, 20, false)
	set u = CreateUnit(p, 1747989319,  - 29671.3,  - 28879.3, 272.000)
	set u = CreateUnit(p, 1747989322,  - 28908.4,  - 29187.1, 129.990)
	set p = null
	set u = null
endfunction

function CreateUnitsForPlayer17 takes nothing returns nothing
	local player p = Player(17)
	local unit u = CreateUnit(p, 1211118391,  - 29951.6, 30084.7, 270.028)
	set u = CreateUnit(p, 1747989322,  - 28948.8,  - 29091.1, 277.270)
	set u = CreateUnit(p, 1747989319,  - 29535.1,  - 28909.5, 246.070)
	set u = CreateUnit(p, 1211118406,  - 29862.1, 29302.2, 269.942)
	call SetHeroLevel(u, 20, false)
	set p = null
	set u = null
endfunction

function CreateUnitsForPlayer18 takes nothing returns nothing
	local player p = Player(18)
	local unit u = CreateUnit(p, 1211118391,  - 29691.7, 30077.9, 269.782)
	set u = CreateUnit(p, 1747989319,  - 29517.9,  - 29021.5, 129.600)
	set u = CreateUnit(p, 1747989322,  - 28848.9,  - 29094.6, 123.850)
	set u = CreateUnit(p, 1211118406,  - 29792.0, 29571.7, 269.875)
	call SetHeroLevel(u, 20, false)
	set p = null
	set u = null
endfunction

function CreateUnitsForPlayer19 takes nothing returns nothing
	local player p = Player(19)
	local unit u = CreateUnit(p, 1211118391,  - 29820.0, 29950.4, 269.903)
	set u = CreateUnit(p, 1747989319,  - 29469.5,  - 28926.1, 42.720)
	set u = CreateUnit(p, 1747989322,  - 29036.9,  - 29087.7, 117.000)
	set u = CreateUnit(p, 1211118406,  - 29707.1, 29309.8, 269.793)
	call SetHeroLevel(u, 20, false)
	set p = null
	set u = null
endfunction

function CreateUnitsForPlayer2 takes nothing returns nothing
	local player p = Player(2)
	local unit u = CreateUnit(p, 1211118391,  - 30324.4, 30466.1, 270.380)
	set u = CreateUnit(p, 1747989319,  - 29646.1,  - 29681.3, 299.320)
	set u = CreateUnit(p, 1747989322,  - 28901.7,  - 29944.1, 214.760)
	set u = CreateUnit(p, 1211118406,  - 30346.6, 29573.7, 270.406)
	call SetHeroLevel(u, 20, false)
	set p = null
	set u = null
endfunction

function CreateUnitsForPlayer22 takes nothing returns nothing
	local player p = Player(22)
	local unit u = CreateUnit(p, 1211118391,  - 29948.2, 29831.1, 270.025)
	set u = CreateUnit(p, 1211118406,  - 29699.3, 29565.4, 269.787)
	call SetHeroLevel(u, 20, false)
	set p = null
	set u = null
endfunction

function CreateUnitsForPlayer23 takes nothing returns nothing
	local player p = Player(23)
	local unit u = CreateUnit(p, 1211118391,  - 29689.5, 29824.6, 269.779)
	set u = CreateUnit(p, 1211118406,  - 29815.4, 29434.4, 269.898)
	call SetHeroLevel(u, 20, false)
	set p = null
	set u = null
endfunction

function CreateUnitsForPlayer3 takes nothing returns nothing
	local player p = Player(3)
	local unit u = CreateUnit(p, 1211118391,  - 30468.2, 30345.3, 270.516)
	set u = CreateUnit(p, 1747989319,  - 29657.7,  - 29550.2, 123.340)
	set u = CreateUnit(p, 1747989322,  - 28799.4,  - 29941.0, 97.900)
	set u = CreateUnit(p, 1211118406,  - 30252.3, 29576.9, 270.316)
	call SetHeroLevel(u, 20, false)
	set p = null
	set u = null
endfunction

function CreateUnitsForPlayer4 takes nothing returns nothing
	local player p = Player(4)
	local unit u = CreateUnit(p, 1211118391,  - 30204.6, 30339.2, 270.267)
	set u = CreateUnit(p, 1747989319,  - 29659.4,  - 29471.2, 272.000)
	set u = CreateUnit(p, 1747989322,  - 29071.0,  - 29717.0, 117.000)
	set u = CreateUnit(p, 1211118406,  - 30106.5, 29439.8, 270.177)
	call SetHeroLevel(u, 20, false)
	set p = null
	set u = null
endfunction

function CreateUnitsForPlayer5 takes nothing returns nothing
	local player p = Player(5)
	local unit u = CreateUnit(p, 1211118391,  - 29950.2, 30589.5, 270.027)
	set u = CreateUnit(p, 1747989319,  - 29523.1,  - 29501.3, 246.070)
	set u = CreateUnit(p, 1747989322,  - 28982.9,  - 29720.4, 277.270)
	set u = CreateUnit(p, 1211118406,  - 30283.9, 29308.8, 270.348)
	call SetHeroLevel(u, 20, false)
	set p = null
	set u = null
endfunction

function CreateUnitsForPlayer6 takes nothing returns nothing
	local player p = Player(6)
	local unit u = CreateUnit(p, 1211118391,  - 29693.7, 30597.0, 269.786)
	set u = CreateUnit(p, 1747989319,  - 29505.9,  - 29613.3, 129.600)
	set u = CreateUnit(p, 1747989322,  - 28883.0,  - 29723.8, 123.850)
	set u = CreateUnit(p, 1211118406,  - 30199.8, 29310.0, 270.267)
	call SetHeroLevel(u, 20, false)
	set p = null
	set u = null
endfunction

function CreateUnitsForPlayer7 takes nothing returns nothing
	local player p = Player(7)
	local unit u = CreateUnit(p, 1211118391,  - 29818.2, 30468.8, 269.903)
	set u = CreateUnit(p, 1747989319,  - 29494.1,  - 29760.0, 91.610)
	set u = CreateUnit(p, 1747989322,  - 28771.9,  - 29739.1, 88.280)
	set u = CreateUnit(p, 1211118406,  - 29998.9, 29444.3, 270.074)
	call SetHeroLevel(u, 20, false)
	set p = null
	set u = null
endfunction

function CreateUnitsForPlayer8 takes nothing returns nothing
	local player p = Player(8)
	local unit u = CreateUnit(p, 1211118391,  - 29946.0, 30342.9, 270.023)
	set u = CreateUnit(p, 1211118406,  - 30137.9, 29561.1, 270.206)
	call SetHeroLevel(u, 20, false)
	set u = CreateUnit(p, 1747989319,  - 29514.0,  - 29894.0, 185.200)
	set u = CreateUnit(p, 1747989322,  - 29099.1,  - 29489.6, 190.540)
	set p = null
	set u = null
endfunction

function CreateUnitsForPlayer9 takes nothing returns nothing
	local player p = Player(9)
	local unit u = CreateUnit(p, 1211118391,  - 29693.5, 30338.3, 269.785)
	set u = CreateUnit(p, 1747989319,  - 29467.5,  - 29835.0, 312.240)
	set u = CreateUnit(p, 1747989322,  - 29002.9,  - 29485.3, 244.830)
	set u = CreateUnit(p, 1211118406,  - 30045.2, 29554.8, 270.118)
	call SetHeroLevel(u, 20, false)
	set p = null
	set u = null
endfunction

function CreatePlayerUnits takes nothing returns nothing
	local player p
	local player p_2
	call CreateUnitsForPlayer0()
	call CreateUnitsForPlayer1()
	call CreateUnitsForPlayer2()
	call CreateUnitsForPlayer3()
	call CreateUnitsForPlayer4()
	call CreateUnitsForPlayer5()
	call CreateUnitsForPlayer6()
	call CreateUnitsForPlayer7()
	call CreateUnitsForPlayer8()
	call CreateUnitsForPlayer9()
	call CreateUnitsForPlayer10()
	call CreateUnitsForPlayer11()
	call CreateUnitsForPlayer12()
	call CreateUnitsForPlayer13()
	call CreateUnitsForPlayer14()
	call CreateUnitsForPlayer15()
	call CreateUnitsForPlayer16()
	call CreateUnitsForPlayer17()
	call CreateUnitsForPlayer18()
	call CreateUnitsForPlayer19()
	set p = Player(20)
	call CreateUnit(p, 1747989319,  - 29486.0,  - 29075.7, 343.940)
	call CreateUnit(p, 1747989322,  - 28737.8,  - 29109.9, 88.280)
	set p_2 = Player(21)
	call CreateUnit(p_2, 1747989319,  - 29506.1,  - 29168.1, 91.610)
	call CreateUnit(p_2, 1747989322,  - 28860.2,  - 28987.5, 190.540)
	call CreateUnitsForPlayer22()
	call CreateUnitsForPlayer23()
	set p = null
	set p_2 = null
endfunction

function CreateAllUnits takes nothing returns nothing
	local player p
	call CreateNeutralHostileBuildings()
	set p = Player(PLAYER_NEUTRAL_AGGRESSIVE)
	call CreateUnit(p, 1747989322,  - 28942.5,  - 29816.4, 129.990)
	call CreatePlayerUnits()
	set p = null
endfunction

function InitTrig_Archer_1 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Archer_1 = CreateTrigger()
	set trig = gg_trg_Archer_1
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Archer_1, Condition(ref_function_Trig_Archer_1_Conditions))
	call TriggerAddAction(gg_trg_Archer_1, ref_function_Trig_Archer_1_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Archer_1_Byzantine takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Archer_1_Byzantine = CreateTrigger()
	set trig = gg_trg_Archer_1_Byzantine
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Archer_1_Byzantine, Condition(ref_function_Trig_Archer_1_Byzantine_Conditions))
	call TriggerAddAction(gg_trg_Archer_1_Byzantine, ref_function_Trig_Archer_1_Byzantine_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Archer_2 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Archer_2 = CreateTrigger()
	set trig = gg_trg_Archer_2
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Archer_2, Condition(ref_function_Trig_Archer_2_Conditions))
	call TriggerAddAction(gg_trg_Archer_2, ref_function_Trig_Archer_2_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Archer_2_Byzantine takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Archer_2_Byzantine = CreateTrigger()
	set trig = gg_trg_Archer_2_Byzantine
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Archer_2_Byzantine, Condition(ref_function_Trig_Archer_2_Byzantine_Conditions))
	call TriggerAddAction(gg_trg_Archer_2_Byzantine, ref_function_Trig_Archer_2_Byzantine_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Arquebusers takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Arquebusers = CreateTrigger()
	set trig = gg_trg_Arquebusers
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Arquebusers, Condition(ref_function_Trig_Arquebusers_Conditions))
	call TriggerAddAction(gg_trg_Arquebusers, ref_function_Trig_Arquebusers_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Capitol_Castle_T3 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Capitol_Castle_T3 = CreateTrigger()
	set trig = gg_trg_Capitol_Castle_T3
	set whichEvent = EVENT_PLAYER_UNIT_UPGRADE_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Capitol_Castle_T3, Condition(ref_function_Trig_Capitol_Castle_T3_Conditions))
	call TriggerAddAction(gg_trg_Capitol_Castle_T3, ref_function_Trig_Capitol_Castle_T3_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Capitol_City_Hall_Up_Copy takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Capitol_City_Hall_Up_Copy = CreateTrigger()
	set trig = gg_trg_Capitol_City_Hall_Up_Copy
	set whichEvent = EVENT_PLAYER_UNIT_UPGRADE_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Capitol_City_Hall_Up_Copy, Condition(ref_function_Trig_Capitol_City_Hall_Up_Copy_Conditions))
	call TriggerAddAction(gg_trg_Capitol_City_Hall_Up_Copy, ref_function_Trig_Capitol_City_Hall_Up_Copy_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Capturing_Ore_15g takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Capturing_Ore_15g = CreateTrigger()
	set trig = gg_trg_Capturing_Ore_15g
	set whichEvent = EVENT_PLAYER_UNIT_ATTACKED
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Capturing_Ore_15g, Condition(ref_function_Trig_Capturing_Ore_15g_Conditions))
	call TriggerAddAction(gg_trg_Capturing_Ore_15g, ref_function_Trig_Capturing_Ore_15g_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Capturing_Ore_25g takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Capturing_Ore_25g = CreateTrigger()
	set trig = gg_trg_Capturing_Ore_25g
	set whichEvent = EVENT_PLAYER_UNIT_ATTACKED
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Capturing_Ore_25g, Condition(ref_function_Trig_Capturing_Ore_25g_Conditions))
	call TriggerAddAction(gg_trg_Capturing_Ore_25g, ref_function_Trig_Capturing_Ore_25g_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Capturing_Ore_40g takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Capturing_Ore_40g = CreateTrigger()
	set trig = gg_trg_Capturing_Ore_40g
	set whichEvent = EVENT_PLAYER_UNIT_ATTACKED
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Capturing_Ore_40g, Condition(ref_function_Trig_Capturing_Ore_40g_Conditions))
	call TriggerAddAction(gg_trg_Capturing_Ore_40g, ref_function_Trig_Capturing_Ore_40g_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Capturing_Ore_50g takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Capturing_Ore_50g = CreateTrigger()
	set trig = gg_trg_Capturing_Ore_50g
	set whichEvent = EVENT_PLAYER_UNIT_ATTACKED
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Capturing_Ore_50g, Condition(ref_function_Trig_Capturing_Ore_50g_Conditions))
	call TriggerAddAction(gg_trg_Capturing_Ore_50g, ref_function_Trig_Capturing_Ore_50g_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Cathedral_Unrest_Reduction_100 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Cathedral_Unrest_Reduction_100 = CreateTrigger()
	set trig = gg_trg_Cathedral_Unrest_Reduction_100
	set whichEvent = EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Cathedral_Unrest_Reduction_100, Condition(ref_function_Trig_Cathedral_Unrest_Reduction_100_Conditions))
	call TriggerAddAction(gg_trg_Cathedral_Unrest_Reduction_100, ref_function_Trig_Cathedral_Unrest_Reduction_100_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Church_Range_Check takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Church_Range_Check = CreateTrigger()
	set trig = gg_trg_Church_Range_Check
	set whichEvent = EVENT_PLAYER_UNIT_CONSTRUCT_START
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Church_Range_Check, Condition(ref_function_Trig_Church_Range_Check_Conditions))
	call TriggerAddAction(gg_trg_Church_Range_Check, ref_function_Trig_Church_Range_Check_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Church_Unrest_Reduction_50 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Church_Unrest_Reduction_50 = CreateTrigger()
	set trig = gg_trg_Church_Unrest_Reduction_50
	set whichEvent = EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Church_Unrest_Reduction_50, Condition(ref_function_Trig_Church_Unrest_Reduction_50_Conditions))
	call TriggerAddAction(gg_trg_Church_Unrest_Reduction_50, ref_function_Trig_Church_Unrest_Reduction_50_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Convert_V2 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Convert_V2 = CreateTrigger()
	set trig = gg_trg_Convert_V2
	set whichEvent = EVENT_PLAYER_UNIT_SPELL_EFFECT
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Convert_V2, Condition(ref_function_Trig_Convert_V2_Conditions))
	call TriggerAddAction(gg_trg_Convert_V2, ref_function_Trig_Convert_V2_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Disabled_units_Byzantine takes nothing returns nothing
	local trigger trig
	local real timeout
	set gg_trg_Disabled_units_Byzantine = CreateTrigger()
	set trig = gg_trg_Disabled_units_Byzantine
	set timeout = 0.10
	call TriggerRegisterTimerEvent(trig, timeout, false)
	call TriggerAddAction(gg_trg_Disabled_units_Byzantine, ref_function_Trig_Disabled_units_Byzantine_Actions)
	set trig = null
endfunction

function InitTrig_Disabled_units_ME takes nothing returns nothing
	local trigger trig
	local real timeout
	set gg_trg_Disabled_units_ME = CreateTrigger()
	set trig = gg_trg_Disabled_units_ME
	set timeout = 0.10
	call TriggerRegisterTimerEvent(trig, timeout, false)
	call TriggerAddAction(gg_trg_Disabled_units_ME, ref_function_Trig_Disabled_units_ME_Actions)
	set trig = null
endfunction

function InitTrig_Disabled_units_at_beginning takes nothing returns nothing
	local trigger trig
	local real timeout
	set gg_trg_Disabled_units_at_beginning = CreateTrigger()
	set trig = gg_trg_Disabled_units_at_beginning
	set timeout = 0.10
	call TriggerRegisterTimerEvent(trig, timeout, false)
	call TriggerAddAction(gg_trg_Disabled_units_at_beginning, ref_function_Trig_Disabled_units_at_beginning_Actions)
	set trig = null
endfunction

function InitTrig_F9 takes nothing returns nothing
	local trigger trig
	local real timeout
	set gg_trg_F9 = CreateTrigger()
	set trig = gg_trg_F9
	set timeout = 1.00
	call TriggerRegisterTimerEvent(trig, timeout, false)
	call TriggerAddAction(gg_trg_F9, ref_function_Trig_F9_Actions)
	set trig = null
endfunction

function InitTrig_FarmHouse takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_FarmHouse = CreateTrigger()
	set trig = gg_trg_FarmHouse
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_FarmHouse, Condition(ref_function_Trig_FarmHouse_Conditions))
	call TriggerAddAction(gg_trg_FarmHouse, ref_function_Trig_FarmHouse_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_FarmHouse_Byzantine takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_FarmHouse_Byzantine = CreateTrigger()
	set trig = gg_trg_FarmHouse_Byzantine
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_FarmHouse_Byzantine, Condition(ref_function_Trig_FarmHouse_Byzantine_Conditions))
	call TriggerAddAction(gg_trg_FarmHouse_Byzantine, ref_function_Trig_FarmHouse_Byzantine_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Gate_Closing_IronGate_H takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Gate_Closing_IronGate_H = CreateTrigger()
	set trig = gg_trg_Gate_Closing_IronGate_H
	set whichEvent = EVENT_PLAYER_UNIT_SPELL_CAST
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Gate_Closing_IronGate_H, Condition(ref_function_Trig_Gate_Closing_IronGate_H_Conditions))
	call TriggerAddAction(gg_trg_Gate_Closing_IronGate_H, ref_function_Trig_Gate_Closing_IronGate_H_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Gate_Closing_IronGate_V takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Gate_Closing_IronGate_V = CreateTrigger()
	set trig = gg_trg_Gate_Closing_IronGate_V
	set whichEvent = EVENT_PLAYER_UNIT_SPELL_CAST
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Gate_Closing_IronGate_V, Condition(ref_function_Trig_Gate_Closing_IronGate_V_Conditions))
	call TriggerAddAction(gg_trg_Gate_Closing_IronGate_V, ref_function_Trig_Gate_Closing_IronGate_V_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Gate_Closing_WoodGate_H takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Gate_Closing_WoodGate_H = CreateTrigger()
	set trig = gg_trg_Gate_Closing_WoodGate_H
	set whichEvent = EVENT_PLAYER_UNIT_SPELL_CAST
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Gate_Closing_WoodGate_H, Condition(ref_function_Trig_Gate_Closing_WoodGate_H_Conditions))
	call TriggerAddAction(gg_trg_Gate_Closing_WoodGate_H, ref_function_Trig_Gate_Closing_WoodGate_H_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Gate_Closing_WoodGate_V takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Gate_Closing_WoodGate_V = CreateTrigger()
	set trig = gg_trg_Gate_Closing_WoodGate_V
	set whichEvent = EVENT_PLAYER_UNIT_SPELL_CAST
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Gate_Closing_WoodGate_V, Condition(ref_function_Trig_Gate_Closing_WoodGate_V_Conditions))
	call TriggerAddAction(gg_trg_Gate_Closing_WoodGate_V, ref_function_Trig_Gate_Closing_WoodGate_V_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Gate_Opening takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Gate_Opening = CreateTrigger()
	set trig = gg_trg_Gate_Opening
	set whichEvent = EVENT_PLAYER_UNIT_SPELL_CAST
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddAction(gg_trg_Gate_Opening, ref_function_Trig_Gate_Opening_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Gold_Horse_250 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Gold_Horse_250 = CreateTrigger()
	set trig = gg_trg_Gold_Horse_250
	set whichEvent = EVENT_PLAYER_UNIT_SPELL_CAST
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Gold_Horse_250, Condition(ref_function_Trig_Gold_Horse_250_Conditions))
	call TriggerAddAction(gg_trg_Gold_Horse_250, ref_function_Trig_Gold_Horse_250_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Gold_Horse_500 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Gold_Horse_500 = CreateTrigger()
	set trig = gg_trg_Gold_Horse_500
	set whichEvent = EVENT_PLAYER_UNIT_SPELL_CAST
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Gold_Horse_500, Condition(ref_function_Trig_Gold_Horse_500_Conditions))
	call TriggerAddAction(gg_trg_Gold_Horse_500, ref_function_Trig_Gold_Horse_500_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Heavy_Cavalry_1 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Heavy_Cavalry_1 = CreateTrigger()
	set trig = gg_trg_Heavy_Cavalry_1
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Heavy_Cavalry_1, Condition(ref_function_Trig_Heavy_Cavalry_1_Conditions))
	call TriggerAddAction(gg_trg_Heavy_Cavalry_1, ref_function_Trig_Heavy_Cavalry_1_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Heavy_Cavalry_1_Byzantine takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Heavy_Cavalry_1_Byzantine = CreateTrigger()
	set trig = gg_trg_Heavy_Cavalry_1_Byzantine
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Heavy_Cavalry_1_Byzantine, Condition(ref_function_Trig_Heavy_Cavalry_1_Byzantine_Conditions))
	call TriggerAddAction(gg_trg_Heavy_Cavalry_1_Byzantine, ref_function_Trig_Heavy_Cavalry_1_Byzantine_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Heavy_Cavalry_2 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Heavy_Cavalry_2 = CreateTrigger()
	set trig = gg_trg_Heavy_Cavalry_2
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Heavy_Cavalry_2, Condition(ref_function_Trig_Heavy_Cavalry_2_Conditions))
	call TriggerAddAction(gg_trg_Heavy_Cavalry_2, ref_function_Trig_Heavy_Cavalry_2_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Heavy_Cavalry_2_Byzantine takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Heavy_Cavalry_2_Byzantine = CreateTrigger()
	set trig = gg_trg_Heavy_Cavalry_2_Byzantine
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Heavy_Cavalry_2_Byzantine, Condition(ref_function_Trig_Heavy_Cavalry_2_Byzantine_Conditions))
	call TriggerAddAction(gg_trg_Heavy_Cavalry_2_Byzantine, ref_function_Trig_Heavy_Cavalry_2_Byzantine_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Heavy_Infantry_1 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Heavy_Infantry_1 = CreateTrigger()
	set trig = gg_trg_Heavy_Infantry_1
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Heavy_Infantry_1, Condition(ref_function_Trig_Heavy_Infantry_1_Conditions))
	call TriggerAddAction(gg_trg_Heavy_Infantry_1, ref_function_Trig_Heavy_Infantry_1_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Heavy_Infantry_1_Byzantine takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Heavy_Infantry_1_Byzantine = CreateTrigger()
	set trig = gg_trg_Heavy_Infantry_1_Byzantine
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Heavy_Infantry_1_Byzantine, Condition(ref_function_Trig_Heavy_Infantry_1_Byzantine_Conditions))
	call TriggerAddAction(gg_trg_Heavy_Infantry_1_Byzantine, ref_function_Trig_Heavy_Infantry_1_Byzantine_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Heavy_Infantry_2 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Heavy_Infantry_2 = CreateTrigger()
	set trig = gg_trg_Heavy_Infantry_2
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Heavy_Infantry_2, Condition(ref_function_Trig_Heavy_Infantry_2_Conditions))
	call TriggerAddAction(gg_trg_Heavy_Infantry_2, ref_function_Trig_Heavy_Infantry_2_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Heavy_Infantry_2_Byzantine takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Heavy_Infantry_2_Byzantine = CreateTrigger()
	set trig = gg_trg_Heavy_Infantry_2_Byzantine
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Heavy_Infantry_2_Byzantine, Condition(ref_function_Trig_Heavy_Infantry_2_Byzantine_Conditions))
	call TriggerAddAction(gg_trg_Heavy_Infantry_2_Byzantine, ref_function_Trig_Heavy_Infantry_2_Byzantine_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Inn_Unrest_Reduction_10 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Inn_Unrest_Reduction_10 = CreateTrigger()
	set trig = gg_trg_Inn_Unrest_Reduction_10
	set whichEvent = EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Inn_Unrest_Reduction_10, Condition(ref_function_Trig_Inn_Unrest_Reduction_10_Conditions))
	call TriggerAddAction(gg_trg_Inn_Unrest_Reduction_10, ref_function_Trig_Inn_Unrest_Reduction_10_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Killing_trading_horse_g250 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Killing_trading_horse_g250 = CreateTrigger()
	set trig = gg_trg_Killing_trading_horse_g250
	set whichEvent = EVENT_PLAYER_UNIT_DEATH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Killing_trading_horse_g250, Condition(ref_function_Trig_Killing_trading_horse_g250_Conditions))
	call TriggerAddAction(gg_trg_Killing_trading_horse_g250, ref_function_Trig_Killing_trading_horse_g250_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Killing_trading_horse_g500 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Killing_trading_horse_g500 = CreateTrigger()
	set trig = gg_trg_Killing_trading_horse_g500
	set whichEvent = EVENT_PLAYER_UNIT_DEATH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Killing_trading_horse_g500, Condition(ref_function_Trig_Killing_trading_horse_g500_Conditions))
	call TriggerAddAction(gg_trg_Killing_trading_horse_g500, ref_function_Trig_Killing_trading_horse_g500_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Killing_trading_horse_l250 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Killing_trading_horse_l250 = CreateTrigger()
	set trig = gg_trg_Killing_trading_horse_l250
	set whichEvent = EVENT_PLAYER_UNIT_DEATH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Killing_trading_horse_l250, Condition(ref_function_Trig_Killing_trading_horse_l250_Conditions))
	call TriggerAddAction(gg_trg_Killing_trading_horse_l250, ref_function_Trig_Killing_trading_horse_l250_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Killing_trading_horse_l500 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Killing_trading_horse_l500 = CreateTrigger()
	set trig = gg_trg_Killing_trading_horse_l500
	set whichEvent = EVENT_PLAYER_UNIT_DEATH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Killing_trading_horse_l500, Condition(ref_function_Trig_Killing_trading_horse_l500_Conditions))
	call TriggerAddAction(gg_trg_Killing_trading_horse_l500, ref_function_Trig_Killing_trading_horse_l500_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Light_Cavalry_1 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Light_Cavalry_1 = CreateTrigger()
	set trig = gg_trg_Light_Cavalry_1
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Light_Cavalry_1, Condition(ref_function_Trig_Light_Cavalry_1_Conditions))
	call TriggerAddAction(gg_trg_Light_Cavalry_1, ref_function_Trig_Light_Cavalry_1_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Light_Cavalry_1_Byzantine takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Light_Cavalry_1_Byzantine = CreateTrigger()
	set trig = gg_trg_Light_Cavalry_1_Byzantine
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Light_Cavalry_1_Byzantine, Condition(ref_function_Trig_Light_Cavalry_1_Byzantine_Conditions))
	call TriggerAddAction(gg_trg_Light_Cavalry_1_Byzantine, ref_function_Trig_Light_Cavalry_1_Byzantine_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Light_Cavalry_2 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Light_Cavalry_2 = CreateTrigger()
	set trig = gg_trg_Light_Cavalry_2
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Light_Cavalry_2, Condition(ref_function_Trig_Light_Cavalry_2_Conditions))
	call TriggerAddAction(gg_trg_Light_Cavalry_2, ref_function_Trig_Light_Cavalry_2_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Light_Infantry_1 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Light_Infantry_1 = CreateTrigger()
	set trig = gg_trg_Light_Infantry_1
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Light_Infantry_1, Condition(ref_function_Trig_Light_Infantry_1_Conditions))
	call TriggerAddAction(gg_trg_Light_Infantry_1, ref_function_Trig_Light_Infantry_1_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Light_Infantry_2 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Light_Infantry_2 = CreateTrigger()
	set trig = gg_trg_Light_Infantry_2
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Light_Infantry_2, Condition(ref_function_Trig_Light_Infantry_2_Conditions))
	call TriggerAddAction(gg_trg_Light_Infantry_2, ref_function_Trig_Light_Infantry_2_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Lumber_Horse_250 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Lumber_Horse_250 = CreateTrigger()
	set trig = gg_trg_Lumber_Horse_250
	set whichEvent = EVENT_PLAYER_UNIT_SPELL_CAST
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Lumber_Horse_250, Condition(ref_function_Trig_Lumber_Horse_250_Conditions))
	call TriggerAddAction(gg_trg_Lumber_Horse_250, ref_function_Trig_Lumber_Horse_250_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Lumber_Horse_500 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Lumber_Horse_500 = CreateTrigger()
	set trig = gg_trg_Lumber_Horse_500
	set whichEvent = EVENT_PLAYER_UNIT_SPELL_CAST
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Lumber_Horse_500, Condition(ref_function_Trig_Lumber_Horse_500_Conditions))
	call TriggerAddAction(gg_trg_Lumber_Horse_500, ref_function_Trig_Lumber_Horse_500_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_ME_Archer_1 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_ME_Archer_1 = CreateTrigger()
	set trig = gg_trg_ME_Archer_1
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_ME_Archer_1, Condition(ref_function_Trig_ME_Archer_1_Conditions))
	call TriggerAddAction(gg_trg_ME_Archer_1, ref_function_Trig_ME_Archer_1_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_ME_Archer_2 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_ME_Archer_2 = CreateTrigger()
	set trig = gg_trg_ME_Archer_2
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_ME_Archer_2, Condition(ref_function_Trig_ME_Archer_2_Conditions))
	call TriggerAddAction(gg_trg_ME_Archer_2, ref_function_Trig_ME_Archer_2_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_ME_Heavy_Cavalry_1 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_ME_Heavy_Cavalry_1 = CreateTrigger()
	set trig = gg_trg_ME_Heavy_Cavalry_1
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_ME_Heavy_Cavalry_1, Condition(ref_function_Trig_ME_Heavy_Cavalry_1_Conditions))
	call TriggerAddAction(gg_trg_ME_Heavy_Cavalry_1, ref_function_Trig_ME_Heavy_Cavalry_1_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_ME_Heavy_Cavalry_2 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_ME_Heavy_Cavalry_2 = CreateTrigger()
	set trig = gg_trg_ME_Heavy_Cavalry_2
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_ME_Heavy_Cavalry_2, Condition(ref_function_Trig_ME_Heavy_Cavalry_2_Conditions))
	call TriggerAddAction(gg_trg_ME_Heavy_Cavalry_2, ref_function_Trig_ME_Heavy_Cavalry_2_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_ME_Light_Cavalry_1 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_ME_Light_Cavalry_1 = CreateTrigger()
	set trig = gg_trg_ME_Light_Cavalry_1
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_ME_Light_Cavalry_1, Condition(ref_function_Trig_ME_Light_Cavalry_1_Conditions))
	call TriggerAddAction(gg_trg_ME_Light_Cavalry_1, ref_function_Trig_ME_Light_Cavalry_1_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_ME_Light_Cavalry_2 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_ME_Light_Cavalry_2 = CreateTrigger()
	set trig = gg_trg_ME_Light_Cavalry_2
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_ME_Light_Cavalry_2, Condition(ref_function_Trig_ME_Light_Cavalry_2_Conditions))
	call TriggerAddAction(gg_trg_ME_Light_Cavalry_2, ref_function_Trig_ME_Light_Cavalry_2_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_ME_Light_Infantry_1 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_ME_Light_Infantry_1 = CreateTrigger()
	set trig = gg_trg_ME_Light_Infantry_1
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_ME_Light_Infantry_1, Condition(ref_function_Trig_ME_Light_Infantry_1_Conditions))
	call TriggerAddAction(gg_trg_ME_Light_Infantry_1, ref_function_Trig_ME_Light_Infantry_1_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_ME_Light_Infantry_2 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_ME_Light_Infantry_2 = CreateTrigger()
	set trig = gg_trg_ME_Light_Infantry_2
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_ME_Light_Infantry_2, Condition(ref_function_Trig_ME_Light_Infantry_2_Conditions))
	call TriggerAddAction(gg_trg_ME_Light_Infantry_2, ref_function_Trig_ME_Light_Infantry_2_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_ME_Missile_Cavalry takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_ME_Missile_Cavalry = CreateTrigger()
	set trig = gg_trg_ME_Missile_Cavalry
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_ME_Missile_Cavalry, Condition(ref_function_Trig_ME_Missile_Cavalry_Conditions))
	call TriggerAddAction(gg_trg_ME_Missile_Cavalry, ref_function_Trig_ME_Missile_Cavalry_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_ME_Skirmisher takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_ME_Skirmisher = CreateTrigger()
	set trig = gg_trg_ME_Skirmisher
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_ME_Skirmisher, Condition(ref_function_Trig_ME_Skirmisher_Conditions))
	call TriggerAddAction(gg_trg_ME_Skirmisher, ref_function_Trig_ME_Skirmisher_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_ME_Spearmen_1 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_ME_Spearmen_1 = CreateTrigger()
	set trig = gg_trg_ME_Spearmen_1
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_ME_Spearmen_1, Condition(ref_function_Trig_ME_Spearmen_1_Conditions))
	call TriggerAddAction(gg_trg_ME_Spearmen_1, ref_function_Trig_ME_Spearmen_1_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_ME_Spearmen_2 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_ME_Spearmen_2 = CreateTrigger()
	set trig = gg_trg_ME_Spearmen_2
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_ME_Spearmen_2, Condition(ref_function_Trig_ME_Spearmen_2_Conditions))
	call TriggerAddAction(gg_trg_ME_Spearmen_2, ref_function_Trig_ME_Spearmen_2_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Missile_Cavalry_Byzantine takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Missile_Cavalry_Byzantine = CreateTrigger()
	set trig = gg_trg_Missile_Cavalry_Byzantine
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Missile_Cavalry_Byzantine, Condition(ref_function_Trig_Missile_Cavalry_Byzantine_Conditions))
	call TriggerAddAction(gg_trg_Missile_Cavalry_Byzantine, ref_function_Trig_Missile_Cavalry_Byzantine_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Pikemen_1 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Pikemen_1 = CreateTrigger()
	set trig = gg_trg_Pikemen_1
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Pikemen_1, Condition(ref_function_Trig_Pikemen_1_Conditions))
	call TriggerAddAction(gg_trg_Pikemen_1, ref_function_Trig_Pikemen_1_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Pikemen_2 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Pikemen_2 = CreateTrigger()
	set trig = gg_trg_Pikemen_2
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Pikemen_2, Condition(ref_function_Trig_Pikemen_2_Conditions))
	call TriggerAddAction(gg_trg_Pikemen_2, ref_function_Trig_Pikemen_2_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Settle takes nothing returns nothing
	local trigger trig
	local real timeout
	set gg_trg_Settle = CreateTrigger()
	set trig = gg_trg_Settle
	set timeout = 120.00
	call TriggerRegisterTimerEvent(trig, timeout, false)
	call TriggerAddAction(gg_trg_Settle, ref_function_Trig_Settle_Actions)
	set trig = null
endfunction

function InitTrig_Settlement_Aura takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Settlement_Aura = CreateTrigger()
	set trig = gg_trg_Settlement_Aura
	set whichEvent = EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Settlement_Aura, Condition(ref_function_Trig_Settlement_Aura_Conditions))
	call TriggerAddAction(gg_trg_Settlement_Aura, ref_function_Trig_Settlement_Aura_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Settlement_Range_Check takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Settlement_Range_Check = CreateTrigger()
	set trig = gg_trg_Settlement_Range_Check
	set whichEvent = EVENT_PLAYER_UNIT_CONSTRUCT_START
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Settlement_Range_Check, Condition(ref_function_Trig_Settlement_Range_Check_Conditions))
	call TriggerAddAction(gg_trg_Settlement_Range_Check, ref_function_Trig_Settlement_Range_Check_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Skirmisher takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Skirmisher = CreateTrigger()
	set trig = gg_trg_Skirmisher
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Skirmisher, Condition(ref_function_Trig_Skirmisher_Conditions))
	call TriggerAddAction(gg_trg_Skirmisher, ref_function_Trig_Skirmisher_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Skirmisher_Byzantine takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Skirmisher_Byzantine = CreateTrigger()
	set trig = gg_trg_Skirmisher_Byzantine
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Skirmisher_Byzantine, Condition(ref_function_Trig_Skirmisher_Byzantine_Conditions))
	call TriggerAddAction(gg_trg_Skirmisher_Byzantine, ref_function_Trig_Skirmisher_Byzantine_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Spearmen_1 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Spearmen_1 = CreateTrigger()
	set trig = gg_trg_Spearmen_1
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Spearmen_1, Condition(ref_function_Trig_Spearmen_1_Conditions))
	call TriggerAddAction(gg_trg_Spearmen_1, ref_function_Trig_Spearmen_1_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Spearmen_1_Byzantine takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Spearmen_1_Byzantine = CreateTrigger()
	set trig = gg_trg_Spearmen_1_Byzantine
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Spearmen_1_Byzantine, Condition(ref_function_Trig_Spearmen_1_Byzantine_Conditions))
	call TriggerAddAction(gg_trg_Spearmen_1_Byzantine, ref_function_Trig_Spearmen_1_Byzantine_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Spearmen_2 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Spearmen_2 = CreateTrigger()
	set trig = gg_trg_Spearmen_2
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Spearmen_2, Condition(ref_function_Trig_Spearmen_2_Conditions))
	call TriggerAddAction(gg_trg_Spearmen_2, ref_function_Trig_Spearmen_2_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Spearmen_2_Byzantine takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Spearmen_2_Byzantine = CreateTrigger()
	set trig = gg_trg_Spearmen_2_Byzantine
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Spearmen_2_Byzantine, Condition(ref_function_Trig_Spearmen_2_Byzantine_Conditions))
	call TriggerAddAction(gg_trg_Spearmen_2_Byzantine, ref_function_Trig_Spearmen_2_Byzantine_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Spy_Sabotage_on_buildings takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Spy_Sabotage_on_buildings = CreateTrigger()
	set trig = gg_trg_Spy_Sabotage_on_buildings
	set whichEvent = EVENT_PLAYER_UNIT_SPELL_CAST
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Spy_Sabotage_on_buildings, Condition(ref_function_Trig_Spy_Sabotage_on_buildings_Conditions))
	call TriggerAddAction(gg_trg_Spy_Sabotage_on_buildings, ref_function_Trig_Spy_Sabotage_on_buildings_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Structures_finishes takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Structures_finishes = CreateTrigger()
	set trig = gg_trg_Structures_finishes
	set whichEvent = EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddAction(gg_trg_Structures_finishes, ref_function_Trig_Structures_finishes_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Supply_Horse takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Supply_Horse = CreateTrigger()
	set trig = gg_trg_Supply_Horse
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Supply_Horse, Condition(ref_function_Trig_Supply_Horse_Conditions))
	call TriggerAddAction(gg_trg_Supply_Horse, ref_function_Trig_Supply_Horse_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Supply_Horse_2 takes nothing returns nothing
	local trigger trig
	local real timeout
	set gg_trg_Supply_Horse_2 = CreateTrigger()
	set trig = gg_trg_Supply_Horse_2
	set timeout = 5.00
	call TriggerRegisterTimerEvent(trig, timeout, true)
	call TriggerAddAction(gg_trg_Supply_Horse_2, ref_function_Trig_Supply_Horse_2_Actions)
	set trig = null
endfunction

function InitTrig_Supply_Horses takes nothing returns nothing
	local trigger trig
	local real timeout
	set gg_trg_Supply_Horses = CreateTrigger()
	set trig = gg_trg_Supply_Horses
	set timeout = 5.00
	call TriggerRegisterTimerEvent(trig, timeout, true)
	call TriggerAddAction(gg_trg_Supply_Horses, ref_function_Trig_Supply_Horses_Actions)
	set trig = null
endfunction

function InitTrig_Thatched_Cottage_1 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Thatched_Cottage_1 = CreateTrigger()
	set trig = gg_trg_Thatched_Cottage_1
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Thatched_Cottage_1, Condition(ref_function_Trig_Thatched_Cottage_1_Conditions))
	call TriggerAddAction(gg_trg_Thatched_Cottage_1, ref_function_Trig_Thatched_Cottage_1_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Thatched_Cottage_1_Byz takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Thatched_Cottage_1_Byz = CreateTrigger()
	set trig = gg_trg_Thatched_Cottage_1_Byz
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Thatched_Cottage_1_Byz, Condition(ref_function_Trig_Thatched_Cottage_1_Byz_Conditions))
	call TriggerAddAction(gg_trg_Thatched_Cottage_1_Byz, ref_function_Trig_Thatched_Cottage_1_Byz_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Thatched_Cottage_2 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Thatched_Cottage_2 = CreateTrigger()
	set trig = gg_trg_Thatched_Cottage_2
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Thatched_Cottage_2, Condition(ref_function_Trig_Thatched_Cottage_2_Conditions))
	call TriggerAddAction(gg_trg_Thatched_Cottage_2, ref_function_Trig_Thatched_Cottage_2_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Thatched_Cottage_2_Byz takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Thatched_Cottage_2_Byz = CreateTrigger()
	set trig = gg_trg_Thatched_Cottage_2_Byz
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Thatched_Cottage_2_Byz, Condition(ref_function_Trig_Thatched_Cottage_2_Byz_Conditions))
	call TriggerAddAction(gg_trg_Thatched_Cottage_2_Byz, ref_function_Trig_Thatched_Cottage_2_Byz_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Thatched_Cottage_3 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Thatched_Cottage_3 = CreateTrigger()
	set trig = gg_trg_Thatched_Cottage_3
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Thatched_Cottage_3, Condition(ref_function_Trig_Thatched_Cottage_3_Conditions))
	call TriggerAddAction(gg_trg_Thatched_Cottage_3, ref_function_Trig_Thatched_Cottage_3_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Thatched_Cottage_3_Byz takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Thatched_Cottage_3_Byz = CreateTrigger()
	set trig = gg_trg_Thatched_Cottage_3_Byz
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Thatched_Cottage_3_Byz, Condition(ref_function_Trig_Thatched_Cottage_3_Byz_Conditions))
	call TriggerAddAction(gg_trg_Thatched_Cottage_3_Byz, ref_function_Trig_Thatched_Cottage_3_Byz_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Thatched_Cottage_4 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Thatched_Cottage_4 = CreateTrigger()
	set trig = gg_trg_Thatched_Cottage_4
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Thatched_Cottage_4, Condition(ref_function_Trig_Thatched_Cottage_4_Conditions))
	call TriggerAddAction(gg_trg_Thatched_Cottage_4, ref_function_Trig_Thatched_Cottage_4_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Trading_Gold_Ship takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Trading_Gold_Ship = CreateTrigger()
	set trig = gg_trg_Trading_Gold_Ship
	set whichEvent = EVENT_PLAYER_UNIT_SPELL_CAST
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Trading_Gold_Ship, Condition(ref_function_Trig_Trading_Gold_Ship_Conditions))
	call TriggerAddAction(gg_trg_Trading_Gold_Ship, ref_function_Trig_Trading_Gold_Ship_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Trading_Lumber_Ship takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Trading_Lumber_Ship = CreateTrigger()
	set trig = gg_trg_Trading_Lumber_Ship
	set whichEvent = EVENT_PLAYER_UNIT_SPELL_CAST
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Trading_Lumber_Ship, Condition(ref_function_Trig_Trading_Lumber_Ship_Conditions))
	call TriggerAddAction(gg_trg_Trading_Lumber_Ship, ref_function_Trig_Trading_Lumber_Ship_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Trebuchet_Dies takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Trebuchet_Dies = CreateTrigger()
	set trig = gg_trg_Trebuchet_Dies
	set whichEvent = EVENT_PLAYER_UNIT_DEATH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Trebuchet_Dies, Condition(ref_function_Trig_Trebuchet_Dies_Conditions))
	call TriggerAddAction(gg_trg_Trebuchet_Dies, ref_function_Trig_Trebuchet_Dies_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_University_Unrest_Reduction_75 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_University_Unrest_Reduction_75 = CreateTrigger()
	set trig = gg_trg_University_Unrest_Reduction_75
	set whichEvent = EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_University_Unrest_Reduction_75, Condition(ref_function_Trig_University_Unrest_Reduction_75_Conditions))
	call TriggerAddAction(gg_trg_University_Unrest_Reduction_75, ref_function_Trig_University_Unrest_Reduction_75_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_killing_Gold_Ship takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_killing_Gold_Ship = CreateTrigger()
	set trig = gg_trg_killing_Gold_Ship
	set whichEvent = EVENT_PLAYER_UNIT_DEATH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_killing_Gold_Ship, Condition(ref_function_Trig_killing_Gold_Ship_Conditions))
	call TriggerAddAction(gg_trg_killing_Gold_Ship, ref_function_Trig_killing_Gold_Ship_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_killing_Lumber_Ship takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_killing_Lumber_Ship = CreateTrigger()
	set trig = gg_trg_killing_Lumber_Ship
	set whichEvent = EVENT_PLAYER_UNIT_DEATH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_killing_Lumber_Ship, Condition(ref_function_Trig_killing_Lumber_Ship_Conditions))
	call TriggerAddAction(gg_trg_killing_Lumber_Ship, ref_function_Trig_killing_Lumber_Ship_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_upkeep takes nothing returns nothing
	local trigger trig
	local rect r
	local region rectRegion
	set gg_trg_upkeep = CreateTrigger()
	set trig = gg_trg_upkeep
	set r = GetWorldBounds()
	set rectRegion = CreateRegion()
	call RegionAddRect(rectRegion, r)
	call TriggerRegisterEnterRegion(trig, rectRegion, null)
	call TriggerAddCondition(gg_trg_upkeep, Condition(ref_function_Trig_upkeep_Conditions))
	call TriggerAddAction(gg_trg_upkeep, ref_function_Trig_upkeep_Actions)
	set trig = null
	set r = null
	set rectRegion = null
endfunction

function InitTrig_upkeep_2 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_upkeep_2 = CreateTrigger()
	set trig = gg_trg_upkeep_2
	set whichEvent = EVENT_PLAYER_UNIT_DEATH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_upkeep_2, Condition(ref_function_Trig_upkeep_2_Conditions))
	call TriggerAddAction(gg_trg_upkeep_2, ref_function_Trig_upkeep_2_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitCustomTriggers takes nothing returns nothing
	set gg_trg_Melee_Initialization = CreateTrigger()
	call TriggerAddAction(gg_trg_Melee_Initialization, ref_function_Trig_Melee_Initialization_Actions)
	call InitTrig_F9()
	call InitTrig_Capturing_Ore_15g()
	call InitTrig_Capturing_Ore_25g()
	call InitTrig_Capturing_Ore_40g()
	call InitTrig_Capturing_Ore_50g()
	call InitTrig_upkeep()
	call InitTrig_upkeep_2()
	call InitTrig_Trebuchet_Dies()
	call InitTrig_Spy_Sabotage_on_buildings()
	call InitTrig_Convert_V2()
	call InitTrig_Gate_Opening()
	call InitTrig_Gate_Closing_WoodGate_V()
	call InitTrig_Gate_Closing_WoodGate_H()
	call InitTrig_Gate_Closing_IronGate_V()
	call InitTrig_Gate_Closing_IronGate_H()
	call InitTrig_Supply_Horses()
	call InitTrig_Supply_Horse_2()
	call InitTrig_Lumber_Horse_250()
	call InitTrig_Lumber_Horse_500()
	call InitTrig_Gold_Horse_250()
	call InitTrig_Gold_Horse_500()
	call InitTrig_Killing_trading_horse_l250()
	call InitTrig_Killing_trading_horse_l500()
	call InitTrig_Killing_trading_horse_g250()
	call InitTrig_Killing_trading_horse_g500()
	call InitTrig_Trading_Lumber_Ship()
	call InitTrig_Trading_Gold_Ship()
	set gg_trg_Trade = CreateTrigger()
	call TriggerAddAction(gg_trg_Trade, ref_function_Trig_Trade_Actions)
	call InitTrig_killing_Gold_Ship()
	call InitTrig_killing_Lumber_Ship()
	call InitTrig_FarmHouse()
	call InitTrig_Thatched_Cottage_1()
	call InitTrig_Thatched_Cottage_2()
	call InitTrig_Thatched_Cottage_3()
	call InitTrig_Thatched_Cottage_4()
	call InitTrig_Spearmen_1()
	call InitTrig_Spearmen_2()
	call InitTrig_Heavy_Infantry_1()
	call InitTrig_Heavy_Infantry_2()
	call InitTrig_Archer_1()
	call InitTrig_Archer_2()
	call InitTrig_Light_Infantry_1()
	call InitTrig_Light_Infantry_2()
	call InitTrig_Pikemen_1()
	call InitTrig_Pikemen_2()
	call InitTrig_Light_Cavalry_1()
	call InitTrig_Light_Cavalry_2()
	call InitTrig_Heavy_Cavalry_1()
	call InitTrig_Heavy_Cavalry_2()
	call InitTrig_Skirmisher()
	call InitTrig_Arquebusers()
	call InitTrig_Supply_Horse()
	call InitTrig_Disabled_units_at_beginning()
	call InitTrig_FarmHouse_Byzantine()
	call InitTrig_Thatched_Cottage_1_Byz()
	call InitTrig_Thatched_Cottage_2_Byz()
	call InitTrig_Thatched_Cottage_3_Byz()
	call InitTrig_Spearmen_1_Byzantine()
	call InitTrig_Spearmen_2_Byzantine()
	call InitTrig_Heavy_Infantry_1_Byzantine()
	call InitTrig_Heavy_Infantry_2_Byzantine()
	call InitTrig_Archer_1_Byzantine()
	call InitTrig_Archer_2_Byzantine()
	call InitTrig_Light_Cavalry_1_Byzantine()
	call InitTrig_Heavy_Cavalry_1_Byzantine()
	call InitTrig_Heavy_Cavalry_2_Byzantine()
	call InitTrig_Skirmisher_Byzantine()
	call InitTrig_Missile_Cavalry_Byzantine()
	call InitTrig_Disabled_units_Byzantine()
	call InitTrig_ME_Spearmen_1()
	call InitTrig_ME_Spearmen_2()
	call InitTrig_ME_Archer_1()
	call InitTrig_ME_Archer_2()
	call InitTrig_ME_Light_Infantry_1()
	call InitTrig_ME_Light_Infantry_2()
	call InitTrig_ME_Light_Cavalry_1()
	call InitTrig_ME_Light_Cavalry_2()
	call InitTrig_ME_Heavy_Cavalry_1()
	call InitTrig_ME_Heavy_Cavalry_2()
	call InitTrig_ME_Skirmisher()
	call InitTrig_ME_Missile_Cavalry()
	call InitTrig_Disabled_units_ME()
	call InitTrig_Structures_finishes()
	call InitTrig_Settle()
	call InitTrig_Settlement_Range_Check()
	call InitTrig_Church_Range_Check()
	call InitTrig_Settlement_Aura()
	call InitTrig_Capitol_City_Hall_Up_Copy()
	call InitTrig_Capitol_Castle_T3()
	call InitTrig_University_Unrest_Reduction_75()
	call InitTrig_Cathedral_Unrest_Reduction_100()
	call InitTrig_Inn_Unrest_Reduction_10()
	call InitTrig_Church_Unrest_Reduction_50()
endfunction

function InitGlobals takes nothing returns nothing
	local integer i = 0
	set i = 0
	loop
		exitwhen i > 8192
		call CreateGroup()
		set i = i + 1
	endloop
	call CreateForce()
	call CreateGroup()
	call CreateForce()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateForce()
	call CreateForce()
	call CreateForce()
	call CreateTimer()
	call CreateForce()
	call CreateGroup()
	set udg_Supplyhorses = CreateGroup()
	call CreateGroup()
	call CreateForce()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateTimer()
	set i = 0
	loop
		exitwhen i > 24
		set i = i + 1
	endloop
	set i = 0
	loop
		exitwhen i > 24
		set udg_PlayerRegions[i] = 0
		set i = i + 1
	endloop
	set udg_AllPlayerUnits = CreateForce()
	set i = 0
	loop
		exitwhen i > 24
		set udg_PlayerTax[i] = 0
		set i = i + 1
	endloop
	call CreateGroup()
	set i = 0
	loop
		exitwhen i > 24
		set i = i + 1
	endloop
	set i = 0
	loop
		exitwhen i > 24
		set i = i + 1
	endloop
	call CreateForce()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	set udg_GateMovingUnits1 = CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	set i = 0
	loop
		exitwhen i > 24
		set i = i + 1
	endloop
	set i = 0
	loop
		exitwhen i > 24
		set i = i + 1
	endloop
	set udg_BuildingRangeCheck = CreateGroup()
	set i = 0
	loop
		exitwhen i > 24
		set i = i + 1
	endloop
	set i = 0
	loop
		exitwhen i > 24
		set i = i + 1
	endloop
	set i = 0
	loop
		exitwhen i > 24
		set i = i + 1
	endloop
	set i = 0
	loop
		exitwhen i > 24
		set udg_Unhappiness3[i] = 0
		set i = i + 1
	endloop
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateForce()
	call CreateForce()
	set i = 0
	loop
		exitwhen i > 1
		set i = i + 1
	endloop
	set i = 0
	loop
		exitwhen i > 1
		set i = i + 1
	endloop
	set i = 0
	loop
		exitwhen i > 1
		set i = i + 1
	endloop
	set udg_Supplyhorses2 = CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
endfunction

function CinematicTutorial takes nothing returns nothing
	local integer i
	local integer temp
	local force whichForce
	local real fadeDuration
	local force toForce
	local real duration
	local string message
	local boolean cineMode
	local force forForce
	if false then
		set whichForce = null
		set toForce = null
		set forForce = null
		return
	endif
	set whichForce = bj_FORCE_ALL_PLAYERS
	set fadeDuration = 0.50
	if IsPlayerInForce(GetLocalPlayer(), whichForce) then
		call ShowInterface(false, fadeDuration)
	endif
	set i = 0
	set temp = 5 - 1
	loop
		exitwhen i > temp
		set toForce = bj_FORCE_ALL_PLAYERS
		set duration = 10.0
		set message = MainInit_ksCT[i]
		if IsPlayerInForce(GetLocalPlayer(), toForce) then
			call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., duration, message)
		endif
		call TriggerSleepAction(12.5)
		set i = i + 1
	endloop
	set cineMode = false
	set forForce = bj_FORCE_ALL_PLAYERS
	call CinematicModeExBJ(cineMode, forForce, bj_CINEMODE_INTERFACEFADE)
	set whichForce = null
	set toForce = null
	set forForce = null
endfunction

function CityManage_closure_impl takes nothing returns boolean
	local unit this_3 = GetTriggerUnit()
	local integer u = GetUnitTypeId(this_3)
	local unit whichUnit = GetTriggerUnit()
	local boolean CityManage_closure_impltempReturn = GetUnitStatePercent(whichUnit, UNIT_STATE_LIFE, UNIT_STATE_MAX_LIFE) > 50.0 and u == 1747988529 or u == 1747988530 or u == 1747988531
	set this_3 = null
	set whichUnit = null
	return CityManage_closure_impltempReturn
endfunction

function CityManage_closure_impl_2 takes nothing returns boolean
	local player this_3 = GetTriggerPlayer()
	local player this_4
	local real temp
	local boolean andLeft
	if CityManage_lastClickUnit[GetPlayerId(this_3)] != GetTriggerUnit() then
		set andLeft = true
	else
		set temp = Main_elapsed_time
		set this_4 = GetTriggerPlayer()
		set andLeft = temp - CityManage_lastClickTime[GetPlayerId(this_4)] > 4.0
	endif
	set this_3 = null
	set this_4 = null
	return andLeft
endfunction

function CityManage_closure_impl_3 takes nothing returns boolean
	local unit this_3 = GetSpellAbilityUnit()
	local unit this_4
	local player this_5
	local unit this_6
	local boolean andLeft
	local boolean andLeft_2
	if GetUnitTypeId(this_3) == 1747988553 then
		set this_4 = GetSpellTargetUnit()
		set andLeft = GetUnitTypeId(this_4) == 1747989297
	else
		set andLeft = false
	endif
	if andLeft then
		set this_6 = GetSpellTargetUnit()
		set this_5 = GetOwningPlayer(this_6)
		set andLeft_2 = GetPlayerId(this_5) == PLAYER_NEUTRAL_AGGRESSIVE
	else
		set andLeft_2 = false
	endif
	set this_3 = null
	set this_4 = null
	set this_5 = null
	set this_6 = null
	return andLeft_2
endfunction

function CityManage_closure_impl_4 takes nothing returns boolean
	local unit this_3 = GetTriggerUnit()
	local boolean CityManage_closure_impltempReturn = GetUnitTypeId(this_3) == 1747989555
	set this_3 = null
	return CityManage_closure_impltempReturn
endfunction

function ClosureEvents_closure_impl takes nothing returns nothing
	local unit u = UnitIndexer_indexedUnit
	local trigger this_3
	local unit whichUnit
	local unitevent whichEvent
	if true then
		set this_3 = ClosureEvents_unitTrig
		set whichUnit = u
		set whichEvent = EVENT_UNIT_DAMAGED
		call TriggerRegisterUnitEvent(this_3, whichUnit, whichEvent)
	endif
	set u = null
	set this_3 = null
	set whichUnit = null
	set whichEvent = null
endfunction

function GameTimer_closure_impl takes nothing returns nothing
	set GameTimer_currentTime = GameTimer_currentTime + 0.030
endfunction

function Group_closure_impl takes nothing returns nothing
	local group this_3 = Group_iterGroup
	local unit units_0 = GetEnumUnit()
	call GroupAddUnit(this_3, units_0)
	set this_3 = null
	set units_0 = null
endfunction

function Main_closure_impl takes nothing returns nothing
	set Main_elapsed_time = Main_elapsed_time + 0.01
endfunction

function prepareUnit takes unit u returns nothing
	local unit receiver = u
	local unit this_3 = receiver
	local integer abil = 1095577649
	local unit receiver_2
	local unit this_4
	local integer abil_2
	local boolean flag
	local unit u_2
	local trigger this_5
	call UnitAddAbility(this_3, abil)
	set receiver_2 = receiver
	set this_4 = receiver_2
	set abil_2 = 1095577649
	set flag = true
	call UnitMakeAbilityPermanent(this_4, flag, abil_2)
	set u_2 = u
	set OnUnitEnterLeave_tempUnits[OnUnitEnterLeave_tempUnitsCount] = u_2
	set OnUnitEnterLeave_tempUnitsCount = OnUnitEnterLeave_tempUnitsCount + 1
	set this_5 = OnUnitEnterLeave_eventTrigger
	call TriggerEvaluate(this_5)
	set OnUnitEnterLeave_tempUnitsCount = OnUnitEnterLeave_tempUnitsCount - 1
	set receiver = null
	set receiver_2 = null
	set this_3 = null
	set this_4 = null
	set u_2 = null
	set this_5 = null
endfunction

function OnUnitEnterLeave_closure_impl takes nothing returns nothing
	call prepareUnit(GetEnumUnit())
endfunction

function OnUnitEnterLeave_closure_impl_2 takes nothing returns nothing
	call prepareUnit(GetFilterUnit())
endfunction

function OnUnitEnterLeave_closure_impl_3 takes nothing returns nothing
	local unit leavingUnit = GetTriggerUnit()
	local unit this_3 = leavingUnit
	local integer id = 1095577649
	local unit u
	local trigger this_4
	if GetUnitAbilityLevel(this_3, id) == 0 then
		set u = leavingUnit
		set OnUnitEnterLeave_tempUnits[OnUnitEnterLeave_tempUnitsCount] = u
		set OnUnitEnterLeave_tempUnitsCount = OnUnitEnterLeave_tempUnitsCount + 1
		set this_4 = OnUnitEnterLeave_eventTrigger
		call TriggerExecute(this_4)
		set OnUnitEnterLeave_tempUnitsCount = OnUnitEnterLeave_tempUnitsCount - 1
	endif
	set leavingUnit = null
	set this_3 = null
	set u = null
	set this_4 = null
endfunction

function Trig_Archer_1_Actions takes nothing returns nothing
	local integer unitId = 1848651824
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1848651825
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Archer_1_Byzantine_Actions takes nothing returns nothing
	local integer unitId = 1848651841
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1848651831
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Archer_1_Byzantine_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889809) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889809
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 1) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Archer_1_Byzantine_Conditions takes nothing returns boolean
	if  not Trig_Archer_1_Byzantine_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Archer_1_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889802) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889802
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 1) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Archer_1_Conditions takes nothing returns boolean
	if  not Trig_Archer_1_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Archer_2_Actions takes nothing returns nothing
	local integer unitId = 1848651826
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1848651824
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Archer_2_Byzantine_Actions takes nothing returns nothing
	local integer unitId = 1848651833
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1848651841
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Archer_2_Byzantine_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889809) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889809
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 2) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Archer_2_Byzantine_Conditions takes nothing returns boolean
	if  not Trig_Archer_2_Byzantine_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Archer_2_Func004C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889802) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889802
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 2) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Archer_2_Conditions takes nothing returns boolean
	if  not Trig_Archer_2_Func004C() then
		return false
	endif
	return true
endfunction

function Trig_Arquebusers_Actions takes nothing returns nothing
	local integer unitId = 1848651843
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1848651842
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Arquebusers_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889812) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889812
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 1) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Arquebusers_Conditions takes nothing returns boolean
	if  not Trig_Arquebusers_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Capitol_Castle_T3_Actions takes nothing returns nothing
	local integer abilityId = 1093677634
	local unit whichUnit = GetTriggerUnit()
	call UnitAddAbility(whichUnit, abilityId)
	set whichUnit = null
endfunction

function Trig_Capitol_Castle_T3_Func002C takes nothing returns boolean
	if  not (GetUnitTypeId(GetTriggerUnit()) == 1747988531) then
		return false
	endif
	return true
endfunction

function Trig_Capitol_Castle_T3_Conditions takes nothing returns boolean
	if  not Trig_Capitol_Castle_T3_Func002C() then
		return false
	endif
	return true
endfunction

function Trig_Capitol_City_Hall_Up_Copy_Actions takes nothing returns nothing
	local integer abilityId = 1093677634
	local unit whichUnit = GetTriggerUnit()
	call UnitAddAbility(whichUnit, abilityId)
	set whichUnit = null
endfunction

function Trig_Capitol_City_Hall_Up_Copy_Func002C takes nothing returns boolean
	if  not (GetUnitTypeId(GetTriggerUnit()) == 1747988530) then
		return false
	endif
	return true
endfunction

function Trig_Capitol_City_Hall_Up_Copy_Conditions takes nothing returns boolean
	if  not Trig_Capitol_City_Hall_Up_Copy_Func002C() then
		return false
	endif
	return true
endfunction

function Trig_Capturing_Ore_15g_Actions takes nothing returns nothing
	local player whichPlayer = GetOwningPlayer(GetAttacker())
	local player whichPlayer_2 = GetOwningPlayer(GetAttacker())
	local player whichPlayer_3
	local player whichPlayer_4
	local unit whichUnit
	local real percent
	set udg_PlayerRegions[GetPlayerId(whichPlayer) + 1] = udg_PlayerRegions[GetPlayerId(whichPlayer_2) + 1] + 1
	set whichPlayer_3 = GetOwningPlayer(GetTriggerUnit())
	set whichPlayer_4 = GetOwningPlayer(GetTriggerUnit())
	set udg_PlayerRegions[GetPlayerId(whichPlayer_3) + 1] = udg_PlayerRegions[GetPlayerId(whichPlayer_4) + 1] - 1
	call ReplaceUnitBJ(GetTriggerUnit(), GetUnitTypeId(GetTriggerUnit()), bj_UNIT_STATE_METHOD_DEFAULTS)
	call SetUnitOwner(bj_lastReplacedUnit, GetOwningPlayer(GetAttacker()), true)
	set whichUnit = GetTriggerUnit()
	set percent = 100.
	call SetUnitState(whichUnit, UNIT_STATE_LIFE, GetUnitState(whichUnit, UNIT_STATE_MAX_LIFE) * RMaxBJ(0., percent) * 0.01)
	set whichPlayer = null
	set whichPlayer_2 = null
	set whichPlayer_3 = null
	set whichPlayer_4 = null
	set whichUnit = null
endfunction

function Trig_Capturing_Ore_15g_Func001C takes nothing returns boolean
	local unit whichUnit
	if  not (GetUnitTypeId(GetTriggerUnit()) == 1747989043) then
		set whichUnit = null
		return false
	endif
	set whichUnit = GetTriggerUnit()
	if  not (GetUnitStatePercent(whichUnit, UNIT_STATE_LIFE, UNIT_STATE_MAX_LIFE) <= 80.00) then
		set whichUnit = null
		return false
	endif
	set whichUnit = null
	return true
endfunction

function Trig_Capturing_Ore_15g_Conditions takes nothing returns boolean
	if  not Trig_Capturing_Ore_15g_Func001C() then
		return false
	endif
	return true
endfunction

function Trig_Capturing_Ore_25g_Actions takes nothing returns nothing
	local player whichPlayer = GetOwningPlayer(GetAttacker())
	local player whichPlayer_2 = GetOwningPlayer(GetAttacker())
	local player whichPlayer_3
	local player whichPlayer_4
	local unit whichUnit
	local real percent
	set udg_PlayerRegions[GetPlayerId(whichPlayer) + 1] = udg_PlayerRegions[GetPlayerId(whichPlayer_2) + 1] + 1
	set whichPlayer_3 = GetOwningPlayer(GetTriggerUnit())
	set whichPlayer_4 = GetOwningPlayer(GetTriggerUnit())
	set udg_PlayerRegions[GetPlayerId(whichPlayer_3) + 1] = udg_PlayerRegions[GetPlayerId(whichPlayer_4) + 1] - 1
	call ReplaceUnitBJ(GetTriggerUnit(), GetUnitTypeId(GetTriggerUnit()), bj_UNIT_STATE_METHOD_DEFAULTS)
	call SetUnitOwner(bj_lastReplacedUnit, GetOwningPlayer(GetAttacker()), true)
	set whichUnit = GetTriggerUnit()
	set percent = 100.
	call SetUnitState(whichUnit, UNIT_STATE_LIFE, GetUnitState(whichUnit, UNIT_STATE_MAX_LIFE) * RMaxBJ(0., percent) * 0.01)
	set whichPlayer = null
	set whichPlayer_2 = null
	set whichPlayer_3 = null
	set whichPlayer_4 = null
	set whichUnit = null
endfunction

function Trig_Capturing_Ore_25g_Func001C takes nothing returns boolean
	local unit whichUnit
	if  not (GetUnitTypeId(GetTriggerUnit()) == 1747989045) then
		set whichUnit = null
		return false
	endif
	set whichUnit = GetTriggerUnit()
	if  not (GetUnitStatePercent(whichUnit, UNIT_STATE_LIFE, UNIT_STATE_MAX_LIFE) <= 80.00) then
		set whichUnit = null
		return false
	endif
	set whichUnit = null
	return true
endfunction

function Trig_Capturing_Ore_25g_Conditions takes nothing returns boolean
	if  not Trig_Capturing_Ore_25g_Func001C() then
		return false
	endif
	return true
endfunction

function Trig_Capturing_Ore_40g_Actions takes nothing returns nothing
	local player whichPlayer = GetOwningPlayer(GetAttacker())
	local player whichPlayer_2 = GetOwningPlayer(GetAttacker())
	local player whichPlayer_3
	local player whichPlayer_4
	local unit whichUnit
	local real percent
	set udg_PlayerRegions[GetPlayerId(whichPlayer) + 1] = udg_PlayerRegions[GetPlayerId(whichPlayer_2) + 1] + 1
	set whichPlayer_3 = GetOwningPlayer(GetTriggerUnit())
	set whichPlayer_4 = GetOwningPlayer(GetTriggerUnit())
	set udg_PlayerRegions[GetPlayerId(whichPlayer_3) + 1] = udg_PlayerRegions[GetPlayerId(whichPlayer_4) + 1] - 1
	call ReplaceUnitBJ(GetTriggerUnit(), GetUnitTypeId(GetTriggerUnit()), bj_UNIT_STATE_METHOD_DEFAULTS)
	call SetUnitOwner(bj_lastReplacedUnit, GetOwningPlayer(GetAttacker()), true)
	set whichUnit = GetTriggerUnit()
	set percent = 100.
	call SetUnitState(whichUnit, UNIT_STATE_LIFE, GetUnitState(whichUnit, UNIT_STATE_MAX_LIFE) * RMaxBJ(0., percent) * 0.01)
	set whichPlayer = null
	set whichPlayer_2 = null
	set whichPlayer_3 = null
	set whichPlayer_4 = null
	set whichUnit = null
endfunction

function Trig_Capturing_Ore_40g_Func001C takes nothing returns boolean
	local unit whichUnit
	if  not (GetUnitTypeId(GetTriggerUnit()) == 1747989042) then
		set whichUnit = null
		return false
	endif
	set whichUnit = GetTriggerUnit()
	if  not (GetUnitStatePercent(whichUnit, UNIT_STATE_LIFE, UNIT_STATE_MAX_LIFE) <= 80.00) then
		set whichUnit = null
		return false
	endif
	set whichUnit = null
	return true
endfunction

function Trig_Capturing_Ore_40g_Conditions takes nothing returns boolean
	if  not Trig_Capturing_Ore_40g_Func001C() then
		return false
	endif
	return true
endfunction

function Trig_Capturing_Ore_50g_Actions takes nothing returns nothing
	local player whichPlayer = GetOwningPlayer(GetAttacker())
	local player whichPlayer_2 = GetOwningPlayer(GetAttacker())
	local player whichPlayer_3
	local player whichPlayer_4
	local unit whichUnit
	local real percent
	set udg_PlayerRegions[GetPlayerId(whichPlayer) + 1] = udg_PlayerRegions[GetPlayerId(whichPlayer_2) + 1] + 1
	set whichPlayer_3 = GetOwningPlayer(GetTriggerUnit())
	set whichPlayer_4 = GetOwningPlayer(GetTriggerUnit())
	set udg_PlayerRegions[GetPlayerId(whichPlayer_3) + 1] = udg_PlayerRegions[GetPlayerId(whichPlayer_4) + 1] - 1
	call ReplaceUnitBJ(GetTriggerUnit(), GetUnitTypeId(GetTriggerUnit()), bj_UNIT_STATE_METHOD_DEFAULTS)
	call SetUnitOwner(bj_lastReplacedUnit, GetOwningPlayer(GetAttacker()), true)
	set whichUnit = GetTriggerUnit()
	set percent = 100.
	call SetUnitState(whichUnit, UNIT_STATE_LIFE, GetUnitState(whichUnit, UNIT_STATE_MAX_LIFE) * RMaxBJ(0., percent) * 0.01)
	set whichPlayer = null
	set whichPlayer_2 = null
	set whichPlayer_3 = null
	set whichPlayer_4 = null
	set whichUnit = null
endfunction

function Trig_Capturing_Ore_50g_Func001C takes nothing returns boolean
	local unit whichUnit
	if  not (GetUnitTypeId(GetTriggerUnit()) == 1747989044) then
		set whichUnit = null
		return false
	endif
	set whichUnit = GetTriggerUnit()
	if  not (GetUnitStatePercent(whichUnit, UNIT_STATE_LIFE, UNIT_STATE_MAX_LIFE) <= 80.00) then
		set whichUnit = null
		return false
	endif
	set whichUnit = null
	return true
endfunction

function Trig_Capturing_Ore_50g_Conditions takes nothing returns boolean
	if  not Trig_Capturing_Ore_50g_Func001C() then
		return false
	endif
	return true
endfunction

function Trig_Cathedral_Unrest_Reduction_100_Actions takes nothing returns nothing
	local player whichPlayer = GetOwningPlayer(GetTriggerUnit())
	local player whichPlayer_2 = GetOwningPlayer(GetTriggerUnit())
	local integer abilityId
	local unit whichUnit
	set udg_Unhappiness3[GetPlayerId(whichPlayer) + 1] = udg_Unhappiness3[GetPlayerId(whichPlayer_2) + 1] + 100
	set abilityId = 1093677647
	set whichUnit = GetConstructedStructure()
	call UnitAddAbility(whichUnit, abilityId)
	set whichPlayer = null
	set whichPlayer_2 = null
	set whichUnit = null
endfunction

function Trig_Cathedral_Unrest_Reduction_100_Func001C takes nothing returns boolean
	if GetUnitTypeId(GetConstructedStructure()) == 1747988803 then
		return true
	endif
	return false
endfunction

function Trig_Cathedral_Unrest_Reduction_100_Conditions takes nothing returns boolean
	if  not Trig_Cathedral_Unrest_Reduction_100_Func001C() then
		return false
	endif
	return true
endfunction

function Trig_Church_Range_Check_Actions takes nothing returns nothing
	local real radius
	local location whichLocation
	local real radius_2
	local location whichLocation_2
	local boolexpr filter
	local group g
	local group whichGroup
	local code callback
	local boolean wantDestroy
	set udg_BuildingRangeCheckPoint = GetUnitLoc(GetTriggerUnit())
	set radius = 1500.00
	set whichLocation = udg_BuildingRangeCheckPoint
	set radius_2 = radius
	set whichLocation_2 = whichLocation
	set filter = null
	set g = CreateGroup()
	call GroupEnumUnitsInRangeOfLoc(g, whichLocation_2, radius_2, filter)
	call DestroyBoolExpr(filter)
	set udg_BuildingRangeCheck = g
	set whichGroup = udg_BuildingRangeCheck
	set callback = ref_function_Trig_Church_Range_Check_Func003A
	set wantDestroy = bj_wantDestroyGroup
	set bj_wantDestroyGroup = false
	call ForGroup(whichGroup, callback)
	if wantDestroy then
		call DestroyGroup(whichGroup)
	endif
	call DestroyGroup(udg_BuildingRangeCheck)
	call RemoveLocation(udg_BuildingRangeCheckPoint)
	set whichLocation = null
	set whichLocation_2 = null
	set filter = null
	set g = null
	set whichGroup = null
endfunction

function Trig_Church_Range_Check_Func006C takes nothing returns boolean
	if  not (GetUnitTypeId(GetTriggerUnit()) == 1747988785) then
		return false
	endif
	return true
endfunction

function Trig_Church_Range_Check_Conditions takes nothing returns boolean
	if  not Trig_Church_Range_Check_Func006C() then
		return false
	endif
	return true
endfunction

function Trig_Church_Range_Check_Func003Func001Func001C takes nothing returns boolean
	if  not (GetOwningPlayer(GetEnumUnit()) == GetOwningPlayer(GetTriggerUnit())) then
		return false
	endif
	if  not (GetEnumUnit() != GetTriggerUnit()) then
		return false
	endif
	if  not (GetUnitTypeId(GetEnumUnit()) == 1747988785) then
		return false
	endif
	return true
endfunction

function Trig_Church_Range_Check_Func003Func001C takes nothing returns boolean
	if  not Trig_Church_Range_Check_Func003Func001Func001C() then
		return false
	endif
	return true
endfunction

function Trig_Church_Range_Check_Func003A takes nothing returns nothing
	local force toForce
	local string message
	local player whichPlayer
	local force f
	local integer delta
	local player whichPlayer_2
	local playerstate whichPlayerState
	local player whichPlayer_3
	local playerstate whichPlayerState_2
	local integer delta_2
	local player whichPlayer_4
	local playerstate whichPlayerState_3
	local integer delta_3
	local player whichPlayer_5
	local playerstate whichPlayerState_4
	local integer delta_4
	local integer delta_5
	local player whichPlayer_6
	local playerstate whichPlayerState_5
	local player whichPlayer_7
	local playerstate whichPlayerState_6
	local integer delta_6
	local player whichPlayer_8
	local playerstate whichPlayerState_7
	local integer delta_7
	local player whichPlayer_9
	local playerstate whichPlayerState_8
	local integer delta_8
	if Trig_Church_Range_Check_Func003Func001C() then
		call KillUnit(GetTriggerUnit())
		set whichPlayer = GetOwningPlayer(GetTriggerUnit())
		set f = CreateForce()
		call ForceAddPlayer(f, whichPlayer)
		set toForce = f
		set message = "TRIGSTR_1681"
		if IsPlayerInForce(GetLocalPlayer(), toForce) then
			call DisplayTextToPlayer(GetLocalPlayer(), 0., 0., message)
		endif
		set delta = 100
		set whichPlayer_2 = GetOwningPlayer(GetTriggerUnit())
		set whichPlayerState = PLAYER_STATE_RESOURCE_GOLD
		if delta > 0 then
			if whichPlayerState == PLAYER_STATE_RESOURCE_GOLD then
				set whichPlayer_3 = whichPlayer_2
				set whichPlayerState_2 = PLAYER_STATE_GOLD_GATHERED
				set delta_2 = delta
				call SetPlayerState(whichPlayer_3, whichPlayerState_2, GetPlayerState(whichPlayer_3, whichPlayerState_2) + delta_2)
			elseif whichPlayerState == PLAYER_STATE_RESOURCE_LUMBER then
				set whichPlayer_4 = whichPlayer_2
				set whichPlayerState_3 = PLAYER_STATE_LUMBER_GATHERED
				set delta_3 = delta
				call SetPlayerState(whichPlayer_4, whichPlayerState_3, GetPlayerState(whichPlayer_4, whichPlayerState_3) + delta_3)
			endif
		endif
		set whichPlayer_5 = whichPlayer_2
		set whichPlayerState_4 = whichPlayerState
		set delta_4 = delta
		call SetPlayerState(whichPlayer_5, whichPlayerState_4, GetPlayerState(whichPlayer_5, whichPlayerState_4) + delta_4)
		set delta_5 = 175
		set whichPlayer_6 = GetOwningPlayer(GetTriggerUnit())
		set whichPlayerState_5 = PLAYER_STATE_RESOURCE_LUMBER
		if delta_5 > 0 then
			if whichPlayerState_5 == PLAYER_STATE_RESOURCE_GOLD then
				set whichPlayer_7 = whichPlayer_6
				set whichPlayerState_6 = PLAYER_STATE_GOLD_GATHERED
				set delta_6 = delta_5
				call SetPlayerState(whichPlayer_7, whichPlayerState_6, GetPlayerState(whichPlayer_7, whichPlayerState_6) + delta_6)
			elseif whichPlayerState_5 == PLAYER_STATE_RESOURCE_LUMBER then
				set whichPlayer_8 = whichPlayer_6
				set whichPlayerState_7 = PLAYER_STATE_LUMBER_GATHERED
				set delta_7 = delta_5
				call SetPlayerState(whichPlayer_8, whichPlayerState_7, GetPlayerState(whichPlayer_8, whichPlayerState_7) + delta_7)
			endif
		endif
		set whichPlayer_9 = whichPlayer_6
		set whichPlayerState_8 = whichPlayerState_5
		set delta_8 = delta_5
		call SetPlayerState(whichPlayer_9, whichPlayerState_8, GetPlayerState(whichPlayer_9, whichPlayerState_8) + delta_8)
	endif
	set toForce = null
	set whichPlayer = null
	set f = null
	set whichPlayer_2 = null
	set whichPlayerState = null
	set whichPlayer_3 = null
	set whichPlayerState_2 = null
	set whichPlayer_4 = null
	set whichPlayerState_3 = null
	set whichPlayer_5 = null
	set whichPlayerState_4 = null
	set whichPlayer_6 = null
	set whichPlayerState_5 = null
	set whichPlayer_7 = null
	set whichPlayerState_6 = null
	set whichPlayer_8 = null
	set whichPlayerState_7 = null
	set whichPlayer_9 = null
	set whichPlayerState_8 = null
endfunction

function Trig_Church_Unrest_Reduction_50_Func001C takes nothing returns boolean
	local player whichPlayer = GetOwningPlayer(GetConstructedStructure())
	local integer unitid = GetUnitTypeId(GetConstructedStructure())
	local group g_2 = CreateGroup()
	local group g
	local boolean wantDestroy
	set bj_groupEnumTypeId = unitid
	call GroupEnumUnitsOfPlayer(g_2, whichPlayer, filterGetUnitsOfPlayerAndTypeId)
	set g = g_2
	set wantDestroy = bj_wantDestroyGroup
	set bj_wantDestroyGroup = false
	set bj_groupCountUnits = 0
	call ForGroup(g, function CountUnitsInGroupEnum)
	if wantDestroy then
		call DestroyGroup(g)
	endif
	if  not (bj_groupCountUnits <= 3) then
		set g = null
		set whichPlayer = null
		set g_2 = null
		return false
	endif
	set g = null
	set whichPlayer = null
	set g_2 = null
	return true
endfunction

function Trig_Church_Unrest_Reduction_50_Actions takes nothing returns nothing
	local player whichPlayer
	local player whichPlayer_2
	local player whichPlayer_3
	local player whichPlayer_4
	local player whichPlayer_5
	local player whichPlayer_6
	local player whichPlayer_7
	local player whichPlayer_8
	local integer abilityId
	local unit whichUnit
	if Trig_Church_Unrest_Reduction_50_Func001C() then
		set whichPlayer = GetOwningPlayer(GetConstructedStructure())
		set whichPlayer_2 = GetOwningPlayer(GetConstructedStructure())
		set udg_Unhappiness3[GetPlayerId(whichPlayer) + 1] = udg_Unhappiness3[GetPlayerId(whichPlayer_2) + 1] + 50
		set whichPlayer_3 = GetOwningPlayer(GetConstructedStructure())
		set whichPlayer_4 = GetOwningPlayer(GetConstructedStructure())
		set udg_PlayerTax[GetPlayerId(whichPlayer_3) + 1] = udg_PlayerTax[GetPlayerId(whichPlayer_4) + 1] - 10
	else
		set whichPlayer_5 = GetOwningPlayer(GetConstructedStructure())
		set whichPlayer_6 = GetOwningPlayer(GetConstructedStructure())
		set udg_Unhappiness3[GetPlayerId(whichPlayer_5) + 1] = udg_Unhappiness3[GetPlayerId(whichPlayer_6) + 1] + 25
		set whichPlayer_7 = GetOwningPlayer(GetConstructedStructure())
		set whichPlayer_8 = GetOwningPlayer(GetConstructedStructure())
		set udg_PlayerTax[GetPlayerId(whichPlayer_7) + 1] = udg_PlayerTax[GetPlayerId(whichPlayer_8) + 1] - 10
	endif
	set abilityId = 1093677647
	set whichUnit = GetConstructedStructure()
	call UnitAddAbility(whichUnit, abilityId)
	set whichPlayer = null
	set whichPlayer_2 = null
	set whichPlayer_3 = null
	set whichPlayer_4 = null
	set whichPlayer_5 = null
	set whichPlayer_6 = null
	set whichPlayer_7 = null
	set whichPlayer_8 = null
	set whichUnit = null
endfunction

function Trig_Church_Unrest_Reduction_50_Func003C takes nothing returns boolean
	if GetUnitTypeId(GetConstructedStructure()) == 1747988785 then
		return true
	endif
	return false
endfunction

function Trig_Church_Unrest_Reduction_50_Conditions takes nothing returns boolean
	if  not Trig_Church_Unrest_Reduction_50_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Convert_V2_Actions takes nothing returns nothing
	local location where
	local string modelName
	local effect whichEffect
	local location where_2
	local string modelName_2
	local effect whichEffect_2
	set udg_ConvertPoint = GetUnitLoc(GetSpellTargetUnit())
	set where = udg_ConvertPoint
	set modelName = "Abilities\\Spells\\Orc\\Voodoo\\VoodooAuraTarget.mdl"
	set bj_lastCreatedEffect = AddSpecialEffectLoc(modelName, where)
	set whichEffect = bj_lastCreatedEffect
	call DestroyEffect(whichEffect)
	set udg_ConvertPoint2 = GetUnitLoc(GetSpellAbilityUnit())
	set where_2 = udg_ConvertPoint2
	set modelName_2 = "Abilities\\Spells\\Orc\\Voodoo\\VoodooAura.mdl"
	set bj_lastCreatedEffect = AddSpecialEffectLoc(modelName_2, where_2)
	set whichEffect_2 = bj_lastCreatedEffect
	call DestroyEffect(whichEffect_2)
	call RemoveLocation(udg_ConvertPoint)
	call RemoveLocation(udg_ConvertPoint2)
	set where = null
	set whichEffect = null
	set where_2 = null
	set whichEffect_2 = null
endfunction

function Trig_Convert_V2_Conditions takes nothing returns boolean
	if  not (GetSpellAbilityId() == 1093677620) then
		return false
	endif
	return true
endfunction

function Trig_Disabled_units_Byzantine_Actions takes nothing returns nothing
	set udg_AllPlayerUnits = bj_FORCE_ALL_PLAYERS
	call ForForce(udg_AllPlayerUnits, ref_function_Trig_Disabled_units_Byzantine_Func002A)
endfunction

function Trig_Disabled_units_Byzantine_Func002A takes nothing returns nothing
	local integer unitId = 1747989570
	local boolean allowed = false
	local player whichPlayer = GetEnumPlayer()
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	local integer unitId_3
	local boolean allowed_3
	local player whichPlayer_3
	local integer unitId_4
	local boolean allowed_4
	local player whichPlayer_4
	local integer unitId_5
	local boolean allowed_5
	local player whichPlayer_5
	local integer unitId_6
	local boolean allowed_6
	local player whichPlayer_6
	local integer unitId_7
	local boolean allowed_7
	local player whichPlayer_7
	local integer unitId_8
	local boolean allowed_8
	local player whichPlayer_8
	local integer unitId_9
	local boolean allowed_9
	local player whichPlayer_9
	local integer unitId_10
	local boolean allowed_10
	local player whichPlayer_10
	local integer unitId_11
	local boolean allowed_11
	local player whichPlayer_11
	local integer unitId_12
	local boolean allowed_12
	local player whichPlayer_12
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747989556
	set allowed_2 = false
	set whichPlayer_2 = GetEnumPlayer()
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set unitId_3 = 1747989559
	set allowed_3 = false
	set whichPlayer_3 = GetEnumPlayer()
	if allowed_3 then
		call SetPlayerTechMaxAllowed(whichPlayer_3, unitId_3, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_3, unitId_3, 0)
	endif
	set unitId_4 = 1747989557
	set allowed_4 = false
	set whichPlayer_4 = GetEnumPlayer()
	if allowed_4 then
		call SetPlayerTechMaxAllowed(whichPlayer_4, unitId_4, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_4, unitId_4, 0)
	endif
	set unitId_5 = 1747989560
	set allowed_5 = false
	set whichPlayer_5 = GetEnumPlayer()
	if allowed_5 then
		call SetPlayerTechMaxAllowed(whichPlayer_5, unitId_5, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_5, unitId_5, 0)
	endif
	set unitId_6 = 1747989573
	set allowed_6 = false
	set whichPlayer_6 = GetEnumPlayer()
	if allowed_6 then
		call SetPlayerTechMaxAllowed(whichPlayer_6, unitId_6, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_6, unitId_6, 0)
	endif
	set unitId_7 = 1747989574
	set allowed_7 = false
	set whichPlayer_7 = GetEnumPlayer()
	if allowed_7 then
		call SetPlayerTechMaxAllowed(whichPlayer_7, unitId_7, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_7, unitId_7, 0)
	endif
	set unitId_8 = 1848651841
	set allowed_8 = false
	set whichPlayer_8 = GetEnumPlayer()
	if allowed_8 then
		call SetPlayerTechMaxAllowed(whichPlayer_8, unitId_8, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_8, unitId_8, 0)
	endif
	set unitId_9 = 1848651833
	set allowed_9 = false
	set whichPlayer_9 = GetEnumPlayer()
	if allowed_9 then
		call SetPlayerTechMaxAllowed(whichPlayer_9, unitId_9, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_9, unitId_9, 0)
	endif
	set unitId_10 = 1848651832
	set allowed_10 = false
	set whichPlayer_10 = GetEnumPlayer()
	if allowed_10 then
		call SetPlayerTechMaxAllowed(whichPlayer_10, unitId_10, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_10, unitId_10, 0)
	endif
	set unitId_11 = 1747989582
	set allowed_11 = false
	set whichPlayer_11 = GetEnumPlayer()
	if allowed_11 then
		call SetPlayerTechMaxAllowed(whichPlayer_11, unitId_11, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_11, unitId_11, 0)
	endif
	set unitId_12 = 1848651844
	set allowed_12 = false
	set whichPlayer_12 = GetEnumPlayer()
	if allowed_12 then
		call SetPlayerTechMaxAllowed(whichPlayer_12, unitId_12, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_12, unitId_12, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
	set whichPlayer_3 = null
	set whichPlayer_4 = null
	set whichPlayer_5 = null
	set whichPlayer_6 = null
	set whichPlayer_7 = null
	set whichPlayer_8 = null
	set whichPlayer_9 = null
	set whichPlayer_10 = null
	set whichPlayer_11 = null
	set whichPlayer_12 = null
endfunction

function Trig_Disabled_units_ME_Actions takes nothing returns nothing
	set udg_AllPlayerUnits = bj_FORCE_ALL_PLAYERS
	call ForForce(udg_AllPlayerUnits, ref_function_Trig_Disabled_units_ME_Func002A)
endfunction

function Trig_Disabled_units_ME_Func002A takes nothing returns nothing
	local integer unitId = 1747989815
	local boolean allowed = false
	local player whichPlayer = GetEnumPlayer()
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	local integer unitId_3
	local boolean allowed_3
	local player whichPlayer_3
	local integer unitId_4
	local boolean allowed_4
	local player whichPlayer_4
	local integer unitId_5
	local boolean allowed_5
	local player whichPlayer_5
	local integer unitId_6
	local boolean allowed_6
	local player whichPlayer_6
	local integer unitId_7
	local boolean allowed_7
	local player whichPlayer_7
	local integer unitId_8
	local boolean allowed_8
	local player whichPlayer_8
	local integer unitId_9
	local boolean allowed_9
	local player whichPlayer_9
	local integer unitId_10
	local boolean allowed_10
	local player whichPlayer_10
	local integer unitId_11
	local boolean allowed_11
	local player whichPlayer_11
	local integer unitId_12
	local boolean allowed_12
	local player whichPlayer_12
	local integer unitId_13
	local boolean allowed_13
	local player whichPlayer_13
	local integer unitId_14
	local boolean allowed_14
	local player whichPlayer_14
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747989816
	set allowed_2 = false
	set whichPlayer_2 = GetEnumPlayer()
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set unitId_3 = 1747989825
	set allowed_3 = false
	set whichPlayer_3 = GetEnumPlayer()
	if allowed_3 then
		call SetPlayerTechMaxAllowed(whichPlayer_3, unitId_3, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_3, unitId_3, 0)
	endif
	set unitId_4 = 1747989814
	set allowed_4 = false
	set whichPlayer_4 = GetEnumPlayer()
	if allowed_4 then
		call SetPlayerTechMaxAllowed(whichPlayer_4, unitId_4, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_4, unitId_4, 0)
	endif
	set unitId_5 = 1747989830
	set allowed_5 = false
	set whichPlayer_5 = GetEnumPlayer()
	if allowed_5 then
		call SetPlayerTechMaxAllowed(whichPlayer_5, unitId_5, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_5, unitId_5, 0)
	endif
	set unitId_6 = 1848651844
	set allowed_6 = false
	set whichPlayer_6 = GetEnumPlayer()
	if allowed_6 then
		call SetPlayerTechMaxAllowed(whichPlayer_6, unitId_6, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_6, unitId_6, 0)
	endif
	set unitId_7 = 1747989833
	set allowed_7 = false
	set whichPlayer_7 = GetEnumPlayer()
	if allowed_7 then
		call SetPlayerTechMaxAllowed(whichPlayer_7, unitId_7, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_7, unitId_7, 0)
	endif
	set unitId_8 = 1747989832
	set allowed_8 = false
	set whichPlayer_8 = GetEnumPlayer()
	if allowed_8 then
		call SetPlayerTechMaxAllowed(whichPlayer_8, unitId_8, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_8, unitId_8, 0)
	endif
	set unitId_9 = 1747989835
	set allowed_9 = false
	set whichPlayer_9 = GetEnumPlayer()
	if allowed_9 then
		call SetPlayerTechMaxAllowed(whichPlayer_9, unitId_9, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_9, unitId_9, 0)
	endif
	set unitId_10 = 1747989836
	set allowed_10 = false
	set whichPlayer_10 = GetEnumPlayer()
	if allowed_10 then
		call SetPlayerTechMaxAllowed(whichPlayer_10, unitId_10, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_10, unitId_10, 0)
	endif
	set unitId_11 = 1848651848
	set allowed_11 = false
	set whichPlayer_11 = GetEnumPlayer()
	if allowed_11 then
		call SetPlayerTechMaxAllowed(whichPlayer_11, unitId_11, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_11, unitId_11, 0)
	endif
	set unitId_12 = 1848651846
	set allowed_12 = false
	set whichPlayer_12 = GetEnumPlayer()
	if allowed_12 then
		call SetPlayerTechMaxAllowed(whichPlayer_12, unitId_12, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_12, unitId_12, 0)
	endif
	set unitId_13 = 1747989828
	set allowed_13 = false
	set whichPlayer_13 = GetEnumPlayer()
	if allowed_13 then
		call SetPlayerTechMaxAllowed(whichPlayer_13, unitId_13, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_13, unitId_13, 0)
	endif
	set unitId_14 = 1747989826
	set allowed_14 = false
	set whichPlayer_14 = GetEnumPlayer()
	if allowed_14 then
		call SetPlayerTechMaxAllowed(whichPlayer_14, unitId_14, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_14, unitId_14, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
	set whichPlayer_3 = null
	set whichPlayer_4 = null
	set whichPlayer_5 = null
	set whichPlayer_6 = null
	set whichPlayer_7 = null
	set whichPlayer_8 = null
	set whichPlayer_9 = null
	set whichPlayer_10 = null
	set whichPlayer_11 = null
	set whichPlayer_12 = null
	set whichPlayer_13 = null
	set whichPlayer_14 = null
endfunction

function Trig_Disabled_units_at_beginning_Actions takes nothing returns nothing
	set udg_AllPlayerUnits = bj_FORCE_ALL_PLAYERS
	call ForForce(udg_AllPlayerUnits, ref_function_Trig_Disabled_units_at_beginning_Func002A)
endfunction

function Trig_Disabled_units_at_beginning_Func002A takes nothing returns nothing
	local integer unitId = 1747989057
	local boolean allowed = false
	local player whichPlayer = GetEnumPlayer()
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	local integer unitId_3
	local boolean allowed_3
	local player whichPlayer_3
	local integer unitId_4
	local boolean allowed_4
	local player whichPlayer_4
	local integer unitId_5
	local boolean allowed_5
	local player whichPlayer_5
	local integer unitId_6
	local boolean allowed_6
	local player whichPlayer_6
	local integer unitId_7
	local boolean allowed_7
	local player whichPlayer_7
	local integer unitId_8
	local boolean allowed_8
	local player whichPlayer_8
	local integer unitId_9
	local boolean allowed_9
	local player whichPlayer_9
	local integer unitId_10
	local boolean allowed_10
	local player whichPlayer_10
	local integer unitId_11
	local boolean allowed_11
	local player whichPlayer_11
	local integer unitId_12
	local boolean allowed_12
	local player whichPlayer_12
	local integer unitId_13
	local boolean allowed_13
	local player whichPlayer_13
	local integer unitId_14
	local boolean allowed_14
	local player whichPlayer_14
	local integer unitId_15
	local boolean allowed_15
	local player whichPlayer_15
	local integer unitId_16
	local boolean allowed_16
	local player whichPlayer_16
	local integer unitId_17
	local boolean allowed_17
	local player whichPlayer_17
	local integer unitId_18
	local boolean allowed_18
	local player whichPlayer_18
	local integer unitId_19
	local boolean allowed_19
	local player whichPlayer_19
	local integer unitId_20
	local boolean allowed_20
	local player whichPlayer_20
	local integer unitId_21
	local boolean allowed_21
	local player whichPlayer_21
	local integer unitId_22
	local boolean allowed_22
	local player whichPlayer_22
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747988558
	set allowed_2 = false
	set whichPlayer_2 = GetEnumPlayer()
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set unitId_3 = 1747988551
	set allowed_3 = false
	set whichPlayer_3 = GetEnumPlayer()
	if allowed_3 then
		call SetPlayerTechMaxAllowed(whichPlayer_3, unitId_3, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_3, unitId_3, 0)
	endif
	set unitId_4 = 1747989066
	set allowed_4 = false
	set whichPlayer_4 = GetEnumPlayer()
	if allowed_4 then
		call SetPlayerTechMaxAllowed(whichPlayer_4, unitId_4, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_4, unitId_4, 0)
	endif
	set unitId_5 = 1848651824
	set allowed_5 = false
	set whichPlayer_5 = GetEnumPlayer()
	if allowed_5 then
		call SetPlayerTechMaxAllowed(whichPlayer_5, unitId_5, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_5, unitId_5, 0)
	endif
	set unitId_6 = 1848651826
	set allowed_6 = false
	set whichPlayer_6 = GetEnumPlayer()
	if allowed_6 then
		call SetPlayerTechMaxAllowed(whichPlayer_6, unitId_6, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_6, unitId_6, 0)
	endif
	set unitId_7 = 1747988818
	set allowed_7 = false
	set whichPlayer_7 = GetEnumPlayer()
	if allowed_7 then
		call SetPlayerTechMaxAllowed(whichPlayer_7, unitId_7, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_7, unitId_7, 0)
	endif
	set unitId_8 = 1747989080
	set allowed_8 = false
	set whichPlayer_8 = GetEnumPlayer()
	if allowed_8 then
		call SetPlayerTechMaxAllowed(whichPlayer_8, unitId_8, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_8, unitId_8, 0)
	endif
	set unitId_9 = 1747989072
	set allowed_9 = false
	set whichPlayer_9 = GetEnumPlayer()
	if allowed_9 then
		call SetPlayerTechMaxAllowed(whichPlayer_9, unitId_9, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_9, unitId_9, 0)
	endif
	set unitId_10 = 1747989082
	set allowed_10 = false
	set whichPlayer_10 = GetEnumPlayer()
	if allowed_10 then
		call SetPlayerTechMaxAllowed(whichPlayer_10, unitId_10, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_10, unitId_10, 0)
	endif
	set unitId_11 = 1747988559
	set allowed_11 = false
	set whichPlayer_11 = GetEnumPlayer()
	if allowed_11 then
		call SetPlayerTechMaxAllowed(whichPlayer_11, unitId_11, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_11, unitId_11, 0)
	endif
	set unitId_12 = 1747988812
	set allowed_12 = false
	set whichPlayer_12 = GetEnumPlayer()
	if allowed_12 then
		call SetPlayerTechMaxAllowed(whichPlayer_12, unitId_12, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_12, unitId_12, 0)
	endif
	set unitId_13 = 1848651828
	set allowed_13 = false
	set whichPlayer_13 = GetEnumPlayer()
	if allowed_13 then
		call SetPlayerTechMaxAllowed(whichPlayer_13, unitId_13, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_13, unitId_13, 0)
	endif
	set unitId_14 = 1747989065
	set allowed_14 = false
	set whichPlayer_14 = GetEnumPlayer()
	if allowed_14 then
		call SetPlayerTechMaxAllowed(whichPlayer_14, unitId_14, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_14, unitId_14, 0)
	endif
	set unitId_15 = 1747989067
	set allowed_15 = false
	set whichPlayer_15 = GetEnumPlayer()
	if allowed_15 then
		call SetPlayerTechMaxAllowed(whichPlayer_15, unitId_15, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_15, unitId_15, 0)
	endif
	set unitId_16 = 1747989301
	set allowed_16 = false
	set whichPlayer_16 = GetEnumPlayer()
	if allowed_16 then
		call SetPlayerTechMaxAllowed(whichPlayer_16, unitId_16, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_16, unitId_16, 0)
	endif
	set unitId_17 = 1848651843
	set allowed_17 = false
	set whichPlayer_17 = GetEnumPlayer()
	if allowed_17 then
		call SetPlayerTechMaxAllowed(whichPlayer_17, unitId_17, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_17, unitId_17, 0)
	endif
	set unitId_18 = 1747988561
	set allowed_18 = false
	set whichPlayer_18 = GetEnumPlayer()
	if allowed_18 then
		call SetPlayerTechMaxAllowed(whichPlayer_18, unitId_18, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_18, unitId_18, 0)
	endif
	set unitId_19 = 1747988788
	set allowed_19 = false
	set whichPlayer_19 = GetEnumPlayer()
	if allowed_19 then
		call SetPlayerTechMaxAllowed(whichPlayer_19, unitId_19, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_19, unitId_19, 0)
	endif
	set unitId_20 = 1747988565
	set allowed_20 = false
	set whichPlayer_20 = GetEnumPlayer()
	if allowed_20 then
		call SetPlayerTechMaxAllowed(whichPlayer_20, unitId_20, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_20, unitId_20, 0)
	endif
	set unitId_21 = 1747988566
	set allowed_21 = false
	set whichPlayer_21 = GetEnumPlayer()
	if allowed_21 then
		call SetPlayerTechMaxAllowed(whichPlayer_21, unitId_21, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_21, unitId_21, 0)
	endif
	set unitId_22 = 1747988567
	set allowed_22 = false
	set whichPlayer_22 = GetEnumPlayer()
	if allowed_22 then
		call SetPlayerTechMaxAllowed(whichPlayer_22, unitId_22, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_22, unitId_22, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
	set whichPlayer_3 = null
	set whichPlayer_4 = null
	set whichPlayer_5 = null
	set whichPlayer_6 = null
	set whichPlayer_7 = null
	set whichPlayer_8 = null
	set whichPlayer_9 = null
	set whichPlayer_10 = null
	set whichPlayer_11 = null
	set whichPlayer_12 = null
	set whichPlayer_13 = null
	set whichPlayer_14 = null
	set whichPlayer_15 = null
	set whichPlayer_16 = null
	set whichPlayer_17 = null
	set whichPlayer_18 = null
	set whichPlayer_19 = null
	set whichPlayer_20 = null
	set whichPlayer_21 = null
	set whichPlayer_22 = null
endfunction

function Trig_F9_Actions takes nothing returns nothing
	call CreateQuestBJ(bj_QUESTTYPE_OPT_DISCOVERED, "TRIGSTR_097", "TRIGSTR_098", "ReplaceableTextures\\CommandButtons\\BTNSteelMelee.blp")
	call CreateQuestBJ(bj_QUESTTYPE_OPT_DISCOVERED, "TRIGSTR_103", "TRIGSTR_104", "ReplaceableTextures\\WorldEditUI\\Doodad-Cinematic.blp")
	call CreateQuestBJ(bj_QUESTTYPE_OPT_DISCOVERED, "TRIGSTR_2667", "TRIGSTR_2668", "ReplaceableTextures\\WorldEditUI\\Editor-MultipleUnits.blp")
endfunction

function Trig_FarmHouse_Actions takes nothing returns nothing
	local integer unitId = 1747988788
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747988535
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_FarmHouse_Byzantine_Actions takes nothing returns nothing
	local integer unitId = 1747990097
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747989594
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_FarmHouse_Byzantine_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889780) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889780
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 1) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_FarmHouse_Byzantine_Conditions takes nothing returns boolean
	if  not Trig_FarmHouse_Byzantine_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_FarmHouse_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889780) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889780
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 1) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_FarmHouse_Conditions takes nothing returns boolean
	if  not Trig_FarmHouse_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Gate_Closing_IronGate_H_Actions takes nothing returns nothing
	local location loc
	local real dx
	local real dy
	local location center
	local real width
	local real height
	local real x
	local real y
	local rect r
	local rect r_2
	local boolexpr filter
	local group g
	local group whichGroup
	local code callback
	local boolean wantDestroy
	local unit whichUnit
	set udg_Temp_Point = GetUnitLoc(GetSpellAbilityUnit())
	set loc = udg_Temp_Point
	set dx = 0.00
	set dy = 200.00
	set udg_GHoriTP = Location(GetLocationX(loc) + dx, GetLocationY(loc) + dy)
	set center = udg_Temp_Point
	set width = 280.00
	set height = 300.00
	set x = GetLocationX(center)
	set y = GetLocationY(center)
	set udg_GHoriDetectCenter = Rect(x - width * 0.5, y - height * 0.5, x + width * 0.5, y + height * 0.5)
	set r = udg_GHoriDetectCenter
	set r_2 = r
	set filter = null
	set g = CreateGroup()
	call GroupEnumUnitsInRect(g, r_2, filter)
	call DestroyBoolExpr(filter)
	set udg_GateMovingUnits1 = g
	set whichGroup = udg_GateMovingUnits1
	set callback = ref_function_Trig_Gate_Closing_IronGate_H_Func005A
	set wantDestroy = bj_wantDestroyGroup
	set bj_wantDestroyGroup = false
	call ForGroup(whichGroup, callback)
	if wantDestroy then
		call DestroyGroup(whichGroup)
	endif
	call ReplaceUnitBJ(GetSpellAbilityUnit(), 1747989079, bj_UNIT_STATE_METHOD_RELATIVE)
	set whichUnit = bj_lastReplacedUnit
	call SetUnitAnimation(whichUnit, "stand")
	call DestroyGroup(udg_GateMovingUnits1)
	call RemoveLocation(udg_GHoriTP)
	call RemoveLocation(udg_Temp_Point)
	set loc = null
	set center = null
	set r = null
	set r_2 = null
	set filter = null
	set g = null
	set whichGroup = null
	set whichUnit = null
endfunction

function Trig_Gate_Closing_IronGate_H_Conditions takes nothing returns boolean
	if  not (GetSpellAbilityId() == 1093677624) then
		return false
	endif
	if  not (GetUnitTypeId(GetSpellAbilityUnit()) == 1747989078) then
		return false
	endif
	return true
endfunction

function Trig_Gate_Closing_IronGate_H_Func005Func001C takes nothing returns boolean
	if  not (IsUnitType(GetEnumUnit(), UNIT_TYPE_STRUCTURE) == false) then
		return false
	endif
	return true
endfunction

function Trig_Gate_Closing_IronGate_H_Func005A takes nothing returns nothing
	if Trig_Gate_Closing_IronGate_H_Func005Func001C() then
		call SetUnitPositionLoc(GetEnumUnit(), udg_GHoriTP)
	endif
endfunction

function Trig_Gate_Closing_IronGate_V_Actions takes nothing returns nothing
	local location loc
	local real dx
	local real dy
	local location center
	local real width
	local real height
	local real x
	local real y
	local rect r
	local rect r_2
	local boolexpr filter
	local group g
	local group whichGroup
	local code callback
	local boolean wantDestroy
	local unit whichUnit
	set udg_Temp_Point = GetUnitLoc(GetSpellAbilityUnit())
	set loc = udg_Temp_Point
	set dx = 200.00
	set dy = 0.00
	set udg_GVertRP = Location(GetLocationX(loc) + dx, GetLocationY(loc) + dy)
	set center = udg_Temp_Point
	set width = 300.00
	set height = 280.00
	set x = GetLocationX(center)
	set y = GetLocationY(center)
	set udg_GVertDetectCenter = Rect(x - width * 0.5, y - height * 0.5, x + width * 0.5, y + height * 0.5)
	set r = udg_GVertDetectCenter
	set r_2 = r
	set filter = null
	set g = CreateGroup()
	call GroupEnumUnitsInRect(g, r_2, filter)
	call DestroyBoolExpr(filter)
	set udg_GateMovingUnits1 = g
	set whichGroup = udg_GateMovingUnits1
	set callback = ref_function_Trig_Gate_Closing_IronGate_V_Func005A
	set wantDestroy = bj_wantDestroyGroup
	set bj_wantDestroyGroup = false
	call ForGroup(whichGroup, callback)
	if wantDestroy then
		call DestroyGroup(whichGroup)
	endif
	call ReplaceUnitBJ(GetSpellAbilityUnit(), 1747988826, bj_UNIT_STATE_METHOD_RELATIVE)
	set whichUnit = bj_lastReplacedUnit
	call SetUnitAnimation(whichUnit, "stand")
	call DestroyGroup(udg_GateMovingUnits1)
	call RemoveLocation(udg_GVertRP)
	call RemoveLocation(udg_Temp_Point)
	set loc = null
	set center = null
	set r = null
	set r_2 = null
	set filter = null
	set g = null
	set whichGroup = null
	set whichUnit = null
endfunction

function Trig_Gate_Closing_IronGate_V_Conditions takes nothing returns boolean
	if  not (GetSpellAbilityId() == 1093677624) then
		return false
	endif
	if  not (GetUnitTypeId(GetSpellAbilityUnit()) == 1747989077) then
		return false
	endif
	return true
endfunction

function Trig_Gate_Closing_IronGate_V_Func005Func001C takes nothing returns boolean
	if  not (IsUnitType(GetEnumUnit(), UNIT_TYPE_STRUCTURE) == false) then
		return false
	endif
	return true
endfunction

function Trig_Gate_Closing_IronGate_V_Func005A takes nothing returns nothing
	if Trig_Gate_Closing_IronGate_V_Func005Func001C() then
		call SetUnitPositionLoc(GetEnumUnit(), udg_GVertRP)
	endif
endfunction

function Trig_Gate_Closing_WoodGate_H_Actions takes nothing returns nothing
	local location loc
	local real dx
	local real dy
	local location center
	local real width
	local real height
	local real x
	local real y
	local rect r
	local rect r_2
	local boolexpr filter
	local group g
	local group whichGroup
	local code callback
	local boolean wantDestroy
	local unit whichUnit
	set udg_Temp_Point = GetUnitLoc(GetSpellAbilityUnit())
	set loc = udg_Temp_Point
	set dx = 0.00
	set dy = 200.00
	set udg_GHoriTP = Location(GetLocationX(loc) + dx, GetLocationY(loc) + dy)
	set center = udg_Temp_Point
	set width = 280.00
	set height = 300.00
	set x = GetLocationX(center)
	set y = GetLocationY(center)
	set udg_GHoriDetectCenter = Rect(x - width * 0.5, y - height * 0.5, x + width * 0.5, y + height * 0.5)
	set r = udg_GHoriDetectCenter
	set r_2 = r
	set filter = null
	set g = CreateGroup()
	call GroupEnumUnitsInRect(g, r_2, filter)
	call DestroyBoolExpr(filter)
	set udg_GateMovingUnits1 = g
	set whichGroup = udg_GateMovingUnits1
	set callback = ref_function_Trig_Gate_Closing_WoodGate_H_Func005A
	set wantDestroy = bj_wantDestroyGroup
	set bj_wantDestroyGroup = false
	call ForGroup(whichGroup, callback)
	if wantDestroy then
		call DestroyGroup(whichGroup)
	endif
	call ReplaceUnitBJ(GetSpellAbilityUnit(), 1747988824, bj_UNIT_STATE_METHOD_RELATIVE)
	set whichUnit = bj_lastReplacedUnit
	call SetUnitAnimation(whichUnit, "stand")
	call DestroyGroup(udg_GateMovingUnits1)
	call RemoveLocation(udg_GHoriTP)
	call RemoveLocation(udg_Temp_Point)
	set loc = null
	set center = null
	set r = null
	set r_2 = null
	set filter = null
	set g = null
	set whichGroup = null
	set whichUnit = null
endfunction

function Trig_Gate_Closing_WoodGate_H_Conditions takes nothing returns boolean
	if  not (GetSpellAbilityId() == 1093677624) then
		return false
	endif
	if  not (GetUnitTypeId(GetSpellAbilityUnit()) == 1747989046) then
		return false
	endif
	return true
endfunction

function Trig_Gate_Closing_WoodGate_H_Func005Func001C takes nothing returns boolean
	if  not (IsUnitType(GetEnumUnit(), UNIT_TYPE_STRUCTURE) == false) then
		return false
	endif
	return true
endfunction

function Trig_Gate_Closing_WoodGate_H_Func005A takes nothing returns nothing
	if Trig_Gate_Closing_WoodGate_H_Func005Func001C() then
		call SetUnitPositionLoc(GetEnumUnit(), udg_GHoriTP)
	endif
endfunction

function Trig_Gate_Closing_WoodGate_V_Actions takes nothing returns nothing
	local location loc
	local real dx
	local real dy
	local location center
	local real width
	local real height
	local real x
	local real y
	local rect r
	local rect r_2
	local boolexpr filter
	local group g
	local group whichGroup
	local code callback
	local boolean wantDestroy
	local unit whichUnit
	set udg_Temp_Point = GetUnitLoc(GetSpellAbilityUnit())
	set loc = udg_Temp_Point
	set dx = 200.00
	set dy = 0.00
	set udg_GVertRP = Location(GetLocationX(loc) + dx, GetLocationY(loc) + dy)
	set center = udg_Temp_Point
	set width = 300.00
	set height = 280.00
	set x = GetLocationX(center)
	set y = GetLocationY(center)
	set udg_GVertDetectCenter = Rect(x - width * 0.5, y - height * 0.5, x + width * 0.5, y + height * 0.5)
	set r = udg_GVertDetectCenter
	set r_2 = r
	set filter = null
	set g = CreateGroup()
	call GroupEnumUnitsInRect(g, r_2, filter)
	call DestroyBoolExpr(filter)
	set udg_GateMovingUnits1 = g
	set whichGroup = udg_GateMovingUnits1
	set callback = ref_function_Trig_Gate_Closing_WoodGate_V_Func005A
	set wantDestroy = bj_wantDestroyGroup
	set bj_wantDestroyGroup = false
	call ForGroup(whichGroup, callback)
	if wantDestroy then
		call DestroyGroup(whichGroup)
	endif
	call ReplaceUnitBJ(GetSpellAbilityUnit(), 1747988825, bj_UNIT_STATE_METHOD_RELATIVE)
	set whichUnit = bj_lastReplacedUnit
	call SetUnitAnimation(whichUnit, "stand")
	call DestroyGroup(udg_GateMovingUnits1)
	call RemoveLocation(udg_GVertRP)
	call RemoveLocation(udg_Temp_Point)
	set loc = null
	set center = null
	set r = null
	set r_2 = null
	set filter = null
	set g = null
	set whichGroup = null
	set whichUnit = null
endfunction

function Trig_Gate_Closing_WoodGate_V_Conditions takes nothing returns boolean
	if  not (GetSpellAbilityId() == 1093677624) then
		return false
	endif
	if  not (GetUnitTypeId(GetSpellAbilityUnit()) == 1747989047) then
		return false
	endif
	return true
endfunction

function Trig_Gate_Closing_WoodGate_V_Func005Func001C takes nothing returns boolean
	if  not (IsUnitType(GetEnumUnit(), UNIT_TYPE_STRUCTURE) == false) then
		return false
	endif
	return true
endfunction

function Trig_Gate_Closing_WoodGate_V_Func005A takes nothing returns nothing
	if Trig_Gate_Closing_WoodGate_V_Func005Func001C() then
		call SetUnitPositionLoc(GetEnumUnit(), udg_GVertRP)
	endif
endfunction

function Trig_Gate_Opening_Func001Func001C takes nothing returns boolean
	if  not (GetSpellAbilityId() == 1093677624) then
		return false
	endif
	if  not (GetUnitTypeId(GetSpellAbilityUnit()) == 1747988825) then
		return false
	endif
	return true
endfunction

function Trig_Gate_Opening_Func001C takes nothing returns boolean
	if  not Trig_Gate_Opening_Func001Func001C() then
		return false
	endif
	return true
endfunction

function Trig_Gate_Opening_Func002Func001C takes nothing returns boolean
	if  not (GetSpellAbilityId() == 1093677624) then
		return false
	endif
	if  not (GetUnitTypeId(GetSpellAbilityUnit()) == 1747988824) then
		return false
	endif
	return true
endfunction

function Trig_Gate_Opening_Func002C takes nothing returns boolean
	if  not Trig_Gate_Opening_Func002Func001C() then
		return false
	endif
	return true
endfunction

function Trig_Gate_Opening_Func003Func001C takes nothing returns boolean
	if  not (GetSpellAbilityId() == 1093677624) then
		return false
	endif
	if  not (GetUnitTypeId(GetSpellAbilityUnit()) == 1747988826) then
		return false
	endif
	return true
endfunction

function Trig_Gate_Opening_Func003C takes nothing returns boolean
	if  not Trig_Gate_Opening_Func003Func001C() then
		return false
	endif
	return true
endfunction

function Trig_Gate_Opening_Func004Func001C takes nothing returns boolean
	if  not (GetSpellAbilityId() == 1093677624) then
		return false
	endif
	if  not (GetUnitTypeId(GetSpellAbilityUnit()) == 1747989079) then
		return false
	endif
	return true
endfunction

function Trig_Gate_Opening_Func004C takes nothing returns boolean
	if  not Trig_Gate_Opening_Func004Func001C() then
		return false
	endif
	return true
endfunction

function Trig_Gate_Opening_Actions takes nothing returns nothing
	if Trig_Gate_Opening_Func001C() then
		call ReplaceUnitBJ(GetSpellAbilityUnit(), 1747989047, bj_UNIT_STATE_METHOD_RELATIVE)
		call SetUnitAnimation(bj_lastReplacedUnit, "Death Alternate")
	endif
	if Trig_Gate_Opening_Func002C() then
		call ReplaceUnitBJ(GetSpellAbilityUnit(), 1747989046, bj_UNIT_STATE_METHOD_RELATIVE)
		call SetUnitAnimation(bj_lastReplacedUnit, "Death Alternate")
	endif
	if Trig_Gate_Opening_Func003C() then
		call ReplaceUnitBJ(GetSpellAbilityUnit(), 1747989077, bj_UNIT_STATE_METHOD_RELATIVE)
		call SetUnitAnimation(bj_lastReplacedUnit, "Death Alternate")
	endif
	if Trig_Gate_Opening_Func004C() then
		call ReplaceUnitBJ(GetSpellAbilityUnit(), 1747989078, bj_UNIT_STATE_METHOD_RELATIVE)
		call SetUnitAnimation(bj_lastReplacedUnit, "Death Alternate")
	endif
endfunction

function Trig_Gold_Horse_250_Actions takes nothing returns nothing
	local integer delta = 250
	local player whichPlayer = GetOwningPlayer(GetSpellTargetUnit())
	local playerstate whichPlayerState = PLAYER_STATE_RESOURCE_GOLD
	local player whichPlayer_2
	local playerstate whichPlayerState_2
	local integer delta_2
	local player whichPlayer_3
	local playerstate whichPlayerState_3
	local integer delta_3
	local player whichPlayer_4
	local playerstate whichPlayerState_4
	local integer delta_4
	local force toForce
	local string message
	local player whichPlayer_5
	local force f
	local force whichForce
	local location loc
	local real duration
	local force whichForce_2
	local real x
	local real y
	local real duration_2
	local player whichPlayer_6
	local force f_2
	if delta > 0 then
		if whichPlayerState == PLAYER_STATE_RESOURCE_GOLD then
			set whichPlayer_2 = whichPlayer
			set whichPlayerState_2 = PLAYER_STATE_GOLD_GATHERED
			set delta_2 = delta
			call SetPlayerState(whichPlayer_2, whichPlayerState_2, GetPlayerState(whichPlayer_2, whichPlayerState_2) + delta_2)
		elseif whichPlayerState == PLAYER_STATE_RESOURCE_LUMBER then
			set whichPlayer_3 = whichPlayer
			set whichPlayerState_3 = PLAYER_STATE_LUMBER_GATHERED
			set delta_3 = delta
			call SetPlayerState(whichPlayer_3, whichPlayerState_3, GetPlayerState(whichPlayer_3, whichPlayerState_3) + delta_3)
		endif
	endif
	set whichPlayer_4 = whichPlayer
	set whichPlayerState_4 = whichPlayerState
	set delta_4 = delta
	call SetPlayerState(whichPlayer_4, whichPlayerState_4, GetPlayerState(whichPlayer_4, whichPlayerState_4) + delta_4)
	call RemoveUnit(GetSpellAbilityUnit())
	set whichPlayer_5 = GetOwningPlayer(GetSpellTargetUnit())
	set f = CreateForce()
	call ForceAddPlayer(f, whichPlayer_5)
	set toForce = f
	set message = "TRIGSTR_1230"
	if IsPlayerInForce(GetLocalPlayer(), toForce) then
		call DisplayTextToPlayer(GetLocalPlayer(), 0., 0., message)
	endif
	set udg_TradePoint = GetUnitLoc(GetSpellTargetUnit())
	set whichPlayer_6 = GetOwningPlayer(GetSpellTargetUnit())
	set f_2 = CreateForce()
	call ForceAddPlayer(f_2, whichPlayer_6)
	set whichForce = f_2
	set loc = udg_TradePoint
	set duration = 2.00
	set whichForce_2 = whichForce
	set x = GetLocationX(loc)
	set y = GetLocationY(loc)
	set duration_2 = duration
	if IsPlayerInForce(GetLocalPlayer(), whichForce_2) then
		call PingMinimap(x, y, duration_2)
	endif
	call RemoveLocation(udg_TradePoint)
	set whichPlayer = null
	set whichPlayerState = null
	set whichPlayer_2 = null
	set whichPlayerState_2 = null
	set whichPlayer_3 = null
	set whichPlayerState_3 = null
	set whichPlayer_4 = null
	set whichPlayerState_4 = null
	set toForce = null
	set whichPlayer_5 = null
	set f = null
	set whichForce = null
	set loc = null
	set whichForce_2 = null
	set whichPlayer_6 = null
	set f_2 = null
endfunction

function Trig_Gold_Horse_250_Func007C takes nothing returns boolean
	if  not (GetUnitTypeId(GetSpellAbilityUnit()) == 1747988791) then
		return false
	endif
	if  not (GetUnitTypeId(GetSpellTargetUnit()) == 1747988787) then
		return false
	endif
	return true
endfunction

function Trig_Gold_Horse_250_Conditions takes nothing returns boolean
	if  not Trig_Gold_Horse_250_Func007C() then
		return false
	endif
	return true
endfunction

function Trig_Gold_Horse_500_Actions takes nothing returns nothing
	local integer delta = 500
	local player whichPlayer = GetOwningPlayer(GetSpellTargetUnit())
	local playerstate whichPlayerState = PLAYER_STATE_RESOURCE_GOLD
	local player whichPlayer_2
	local playerstate whichPlayerState_2
	local integer delta_2
	local player whichPlayer_3
	local playerstate whichPlayerState_3
	local integer delta_3
	local player whichPlayer_4
	local playerstate whichPlayerState_4
	local integer delta_4
	local force toForce
	local string message
	local player whichPlayer_5
	local force f
	local force whichForce
	local location loc
	local real duration
	local force whichForce_2
	local real x
	local real y
	local real duration_2
	local player whichPlayer_6
	local force f_2
	if delta > 0 then
		if whichPlayerState == PLAYER_STATE_RESOURCE_GOLD then
			set whichPlayer_2 = whichPlayer
			set whichPlayerState_2 = PLAYER_STATE_GOLD_GATHERED
			set delta_2 = delta
			call SetPlayerState(whichPlayer_2, whichPlayerState_2, GetPlayerState(whichPlayer_2, whichPlayerState_2) + delta_2)
		elseif whichPlayerState == PLAYER_STATE_RESOURCE_LUMBER then
			set whichPlayer_3 = whichPlayer
			set whichPlayerState_3 = PLAYER_STATE_LUMBER_GATHERED
			set delta_3 = delta
			call SetPlayerState(whichPlayer_3, whichPlayerState_3, GetPlayerState(whichPlayer_3, whichPlayerState_3) + delta_3)
		endif
	endif
	set whichPlayer_4 = whichPlayer
	set whichPlayerState_4 = whichPlayerState
	set delta_4 = delta
	call SetPlayerState(whichPlayer_4, whichPlayerState_4, GetPlayerState(whichPlayer_4, whichPlayerState_4) + delta_4)
	call RemoveUnit(GetSpellAbilityUnit())
	set whichPlayer_5 = GetOwningPlayer(GetSpellTargetUnit())
	set f = CreateForce()
	call ForceAddPlayer(f, whichPlayer_5)
	set toForce = f
	set message = "TRIGSTR_1231"
	if IsPlayerInForce(GetLocalPlayer(), toForce) then
		call DisplayTextToPlayer(GetLocalPlayer(), 0., 0., message)
	endif
	set udg_TradePoint = GetUnitLoc(GetSpellTargetUnit())
	set whichPlayer_6 = GetOwningPlayer(GetSpellTargetUnit())
	set f_2 = CreateForce()
	call ForceAddPlayer(f_2, whichPlayer_6)
	set whichForce = f_2
	set loc = udg_TradePoint
	set duration = 2.00
	set whichForce_2 = whichForce
	set x = GetLocationX(loc)
	set y = GetLocationY(loc)
	set duration_2 = duration
	if IsPlayerInForce(GetLocalPlayer(), whichForce_2) then
		call PingMinimap(x, y, duration_2)
	endif
	call RemoveLocation(udg_TradePoint)
	set whichPlayer = null
	set whichPlayerState = null
	set whichPlayer_2 = null
	set whichPlayerState_2 = null
	set whichPlayer_3 = null
	set whichPlayerState_3 = null
	set whichPlayer_4 = null
	set whichPlayerState_4 = null
	set toForce = null
	set whichPlayer_5 = null
	set f = null
	set whichForce = null
	set loc = null
	set whichForce_2 = null
	set whichPlayer_6 = null
	set f_2 = null
endfunction

function Trig_Gold_Horse_500_Func007C takes nothing returns boolean
	if  not (GetUnitTypeId(GetSpellAbilityUnit()) == 1747988793) then
		return false
	endif
	if  not (GetUnitTypeId(GetSpellTargetUnit()) == 1747988787) then
		return false
	endif
	return true
endfunction

function Trig_Gold_Horse_500_Conditions takes nothing returns boolean
	if  not Trig_Gold_Horse_500_Func007C() then
		return false
	endif
	return true
endfunction

function Trig_Heavy_Cavalry_1_Actions takes nothing returns nothing
	local integer unitId = 1747988818
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747988552
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Heavy_Cavalry_1_Byzantine_Actions takes nothing returns nothing
	local integer unitId = 1747989573
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747989572
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Heavy_Cavalry_1_Byzantine_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889810) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889810
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 1) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Heavy_Cavalry_1_Byzantine_Conditions takes nothing returns boolean
	if  not Trig_Heavy_Cavalry_1_Byzantine_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Heavy_Cavalry_1_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889800) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889800
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 1) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Heavy_Cavalry_1_Conditions takes nothing returns boolean
	if  not Trig_Heavy_Cavalry_1_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Heavy_Cavalry_2_Actions takes nothing returns nothing
	local integer unitId = 1747989080
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747988818
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Heavy_Cavalry_2_Byzantine_Actions takes nothing returns nothing
	local integer unitId = 1747989574
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747989573
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Heavy_Cavalry_2_Byzantine_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889810) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889810
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 2) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Heavy_Cavalry_2_Byzantine_Conditions takes nothing returns boolean
	if  not Trig_Heavy_Cavalry_2_Byzantine_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Heavy_Cavalry_2_Func004C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889800) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889800
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 2) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Heavy_Cavalry_2_Conditions takes nothing returns boolean
	if  not Trig_Heavy_Cavalry_2_Func004C() then
		return false
	endif
	return true
endfunction

function Trig_Heavy_Infantry_1_Actions takes nothing returns nothing
	local integer unitId = 1747988551
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747989081
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Heavy_Infantry_1_Byzantine_Actions takes nothing returns nothing
	local integer unitId = 1747989559
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747989569
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Heavy_Infantry_1_Byzantine_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889806) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889806
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 1) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Heavy_Infantry_1_Byzantine_Conditions takes nothing returns boolean
	if  not Trig_Heavy_Infantry_1_Byzantine_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Heavy_Infantry_1_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889798) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889798
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 1) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Heavy_Infantry_1_Conditions takes nothing returns boolean
	if  not Trig_Heavy_Infantry_1_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Heavy_Infantry_2_Actions takes nothing returns nothing
	local integer unitId = 1747989066
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747988551
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Heavy_Infantry_2_Byzantine_Actions takes nothing returns nothing
	local integer unitId = 1747989557
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747989559
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Heavy_Infantry_2_Byzantine_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889806) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889806
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 2) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Heavy_Infantry_2_Byzantine_Conditions takes nothing returns boolean
	if  not Trig_Heavy_Infantry_2_Byzantine_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Heavy_Infantry_2_Func004C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889798) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889798
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 2) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Heavy_Infantry_2_Conditions takes nothing returns boolean
	if  not Trig_Heavy_Infantry_2_Func004C() then
		return false
	endif
	return true
endfunction

function Trig_Inn_Unrest_Reduction_10_Actions takes nothing returns nothing
	local player whichPlayer = GetOwningPlayer(GetTriggerUnit())
	local player whichPlayer_2 = GetOwningPlayer(GetTriggerUnit())
	local integer abilityId
	local unit whichUnit
	set udg_Unhappiness3[GetPlayerId(whichPlayer) + 1] = udg_Unhappiness3[GetPlayerId(whichPlayer_2) + 1] + 10
	set abilityId = 1093677647
	set whichUnit = GetConstructedStructure()
	call UnitAddAbility(whichUnit, abilityId)
	set whichPlayer = null
	set whichPlayer_2 = null
	set whichUnit = null
endfunction

function Trig_Inn_Unrest_Reduction_10_Func001C takes nothing returns boolean
	if GetUnitTypeId(GetTriggerUnit()) == 1747988568 then
		return true
	endif
	return false
endfunction

function Trig_Inn_Unrest_Reduction_10_Conditions takes nothing returns boolean
	if  not Trig_Inn_Unrest_Reduction_10_Func001C() then
		return false
	endif
	return true
endfunction

function Trig_Killing_trading_horse_g250_Actions takes nothing returns nothing
	local integer delta = 125
	local player whichPlayer = GetOwningPlayer(GetKillingUnit())
	local playerstate whichPlayerState = PLAYER_STATE_RESOURCE_GOLD
	local player whichPlayer_2
	local playerstate whichPlayerState_2
	local integer delta_2
	local player whichPlayer_3
	local playerstate whichPlayerState_3
	local integer delta_3
	local player whichPlayer_4
	local playerstate whichPlayerState_4
	local integer delta_4
	local force toForce
	local string message
	local player whichPlayer_5
	local force f
	local force whichForce
	local location loc
	local real duration
	local force whichForce_2
	local real x
	local real y
	local real duration_2
	local player whichPlayer_6
	local force f_2
	if delta > 0 then
		if whichPlayerState == PLAYER_STATE_RESOURCE_GOLD then
			set whichPlayer_2 = whichPlayer
			set whichPlayerState_2 = PLAYER_STATE_GOLD_GATHERED
			set delta_2 = delta
			call SetPlayerState(whichPlayer_2, whichPlayerState_2, GetPlayerState(whichPlayer_2, whichPlayerState_2) + delta_2)
		elseif whichPlayerState == PLAYER_STATE_RESOURCE_LUMBER then
			set whichPlayer_3 = whichPlayer
			set whichPlayerState_3 = PLAYER_STATE_LUMBER_GATHERED
			set delta_3 = delta
			call SetPlayerState(whichPlayer_3, whichPlayerState_3, GetPlayerState(whichPlayer_3, whichPlayerState_3) + delta_3)
		endif
	endif
	set whichPlayer_4 = whichPlayer
	set whichPlayerState_4 = whichPlayerState
	set delta_4 = delta
	call SetPlayerState(whichPlayer_4, whichPlayerState_4, GetPlayerState(whichPlayer_4, whichPlayerState_4) + delta_4)
	set whichPlayer_5 = GetOwningPlayer(GetKillingUnit())
	set f = CreateForce()
	call ForceAddPlayer(f, whichPlayer_5)
	set toForce = f
	set message = "TRIGSTR_091"
	if IsPlayerInForce(GetLocalPlayer(), toForce) then
		call DisplayTextToPlayer(GetLocalPlayer(), 0., 0., message)
	endif
	set udg_TradePoint = GetUnitLoc(GetDyingUnit())
	set whichPlayer_6 = GetOwningPlayer(GetDyingUnit())
	set f_2 = CreateForce()
	call ForceAddPlayer(f_2, whichPlayer_6)
	set whichForce = f_2
	set loc = udg_TradePoint
	set duration = 2.00
	set whichForce_2 = whichForce
	set x = GetLocationX(loc)
	set y = GetLocationY(loc)
	set duration_2 = duration
	if IsPlayerInForce(GetLocalPlayer(), whichForce_2) then
		call PingMinimap(x, y, duration_2)
	endif
	call RemoveLocation(udg_TradePoint)
	set whichPlayer = null
	set whichPlayerState = null
	set whichPlayer_2 = null
	set whichPlayerState_2 = null
	set whichPlayer_3 = null
	set whichPlayerState_3 = null
	set whichPlayer_4 = null
	set whichPlayerState_4 = null
	set toForce = null
	set whichPlayer_5 = null
	set f = null
	set whichForce = null
	set loc = null
	set whichForce_2 = null
	set whichPlayer_6 = null
	set f_2 = null
endfunction

function Trig_Killing_trading_horse_g250_Conditions takes nothing returns boolean
	if  not (GetUnitTypeId(GetDyingUnit()) == 1747988791) then
		return false
	endif
	return true
endfunction

function Trig_Killing_trading_horse_g500_Actions takes nothing returns nothing
	local integer delta = 250
	local player whichPlayer = GetOwningPlayer(GetKillingUnit())
	local playerstate whichPlayerState = PLAYER_STATE_RESOURCE_GOLD
	local player whichPlayer_2
	local playerstate whichPlayerState_2
	local integer delta_2
	local player whichPlayer_3
	local playerstate whichPlayerState_3
	local integer delta_3
	local player whichPlayer_4
	local playerstate whichPlayerState_4
	local integer delta_4
	local force toForce
	local string message
	local player whichPlayer_5
	local force f
	local force whichForce
	local location loc
	local real duration
	local force whichForce_2
	local real x
	local real y
	local real duration_2
	local player whichPlayer_6
	local force f_2
	if delta > 0 then
		if whichPlayerState == PLAYER_STATE_RESOURCE_GOLD then
			set whichPlayer_2 = whichPlayer
			set whichPlayerState_2 = PLAYER_STATE_GOLD_GATHERED
			set delta_2 = delta
			call SetPlayerState(whichPlayer_2, whichPlayerState_2, GetPlayerState(whichPlayer_2, whichPlayerState_2) + delta_2)
		elseif whichPlayerState == PLAYER_STATE_RESOURCE_LUMBER then
			set whichPlayer_3 = whichPlayer
			set whichPlayerState_3 = PLAYER_STATE_LUMBER_GATHERED
			set delta_3 = delta
			call SetPlayerState(whichPlayer_3, whichPlayerState_3, GetPlayerState(whichPlayer_3, whichPlayerState_3) + delta_3)
		endif
	endif
	set whichPlayer_4 = whichPlayer
	set whichPlayerState_4 = whichPlayerState
	set delta_4 = delta
	call SetPlayerState(whichPlayer_4, whichPlayerState_4, GetPlayerState(whichPlayer_4, whichPlayerState_4) + delta_4)
	set whichPlayer_5 = GetOwningPlayer(GetKillingUnit())
	set f = CreateForce()
	call ForceAddPlayer(f, whichPlayer_5)
	set toForce = f
	set message = "TRIGSTR_092"
	if IsPlayerInForce(GetLocalPlayer(), toForce) then
		call DisplayTextToPlayer(GetLocalPlayer(), 0., 0., message)
	endif
	set udg_TradePoint = GetUnitLoc(GetDyingUnit())
	set whichPlayer_6 = GetOwningPlayer(GetDyingUnit())
	set f_2 = CreateForce()
	call ForceAddPlayer(f_2, whichPlayer_6)
	set whichForce = f_2
	set loc = udg_TradePoint
	set duration = 2.00
	set whichForce_2 = whichForce
	set x = GetLocationX(loc)
	set y = GetLocationY(loc)
	set duration_2 = duration
	if IsPlayerInForce(GetLocalPlayer(), whichForce_2) then
		call PingMinimap(x, y, duration_2)
	endif
	call RemoveLocation(udg_TradePoint)
	set whichPlayer = null
	set whichPlayerState = null
	set whichPlayer_2 = null
	set whichPlayerState_2 = null
	set whichPlayer_3 = null
	set whichPlayerState_3 = null
	set whichPlayer_4 = null
	set whichPlayerState_4 = null
	set toForce = null
	set whichPlayer_5 = null
	set f = null
	set whichForce = null
	set loc = null
	set whichForce_2 = null
	set whichPlayer_6 = null
	set f_2 = null
endfunction

function Trig_Killing_trading_horse_g500_Conditions takes nothing returns boolean
	if  not (GetUnitTypeId(GetDyingUnit()) == 1747988793) then
		return false
	endif
	return true
endfunction

function Trig_Killing_trading_horse_l250_Actions takes nothing returns nothing
	local integer delta = 125
	local player whichPlayer = GetOwningPlayer(GetKillingUnit())
	local playerstate whichPlayerState = PLAYER_STATE_RESOURCE_LUMBER
	local player whichPlayer_2
	local playerstate whichPlayerState_2
	local integer delta_2
	local player whichPlayer_3
	local playerstate whichPlayerState_3
	local integer delta_3
	local player whichPlayer_4
	local playerstate whichPlayerState_4
	local integer delta_4
	local force toForce
	local string message
	local player whichPlayer_5
	local force f
	local force whichForce
	local location loc
	local real duration
	local force whichForce_2
	local real x
	local real y
	local real duration_2
	local player whichPlayer_6
	local force f_2
	if delta > 0 then
		if whichPlayerState == PLAYER_STATE_RESOURCE_GOLD then
			set whichPlayer_2 = whichPlayer
			set whichPlayerState_2 = PLAYER_STATE_GOLD_GATHERED
			set delta_2 = delta
			call SetPlayerState(whichPlayer_2, whichPlayerState_2, GetPlayerState(whichPlayer_2, whichPlayerState_2) + delta_2)
		elseif whichPlayerState == PLAYER_STATE_RESOURCE_LUMBER then
			set whichPlayer_3 = whichPlayer
			set whichPlayerState_3 = PLAYER_STATE_LUMBER_GATHERED
			set delta_3 = delta
			call SetPlayerState(whichPlayer_3, whichPlayerState_3, GetPlayerState(whichPlayer_3, whichPlayerState_3) + delta_3)
		endif
	endif
	set whichPlayer_4 = whichPlayer
	set whichPlayerState_4 = whichPlayerState
	set delta_4 = delta
	call SetPlayerState(whichPlayer_4, whichPlayerState_4, GetPlayerState(whichPlayer_4, whichPlayerState_4) + delta_4)
	set whichPlayer_5 = GetOwningPlayer(GetKillingUnit())
	set f = CreateForce()
	call ForceAddPlayer(f, whichPlayer_5)
	set toForce = f
	set message = "TRIGSTR_089"
	if IsPlayerInForce(GetLocalPlayer(), toForce) then
		call DisplayTextToPlayer(GetLocalPlayer(), 0., 0., message)
	endif
	set udg_TradePoint = GetUnitLoc(GetDyingUnit())
	set whichPlayer_6 = GetOwningPlayer(GetDyingUnit())
	set f_2 = CreateForce()
	call ForceAddPlayer(f_2, whichPlayer_6)
	set whichForce = f_2
	set loc = udg_TradePoint
	set duration = 2.00
	set whichForce_2 = whichForce
	set x = GetLocationX(loc)
	set y = GetLocationY(loc)
	set duration_2 = duration
	if IsPlayerInForce(GetLocalPlayer(), whichForce_2) then
		call PingMinimap(x, y, duration_2)
	endif
	call RemoveLocation(udg_TradePoint)
	set whichPlayer = null
	set whichPlayerState = null
	set whichPlayer_2 = null
	set whichPlayerState_2 = null
	set whichPlayer_3 = null
	set whichPlayerState_3 = null
	set whichPlayer_4 = null
	set whichPlayerState_4 = null
	set toForce = null
	set whichPlayer_5 = null
	set f = null
	set whichForce = null
	set loc = null
	set whichForce_2 = null
	set whichPlayer_6 = null
	set f_2 = null
endfunction

function Trig_Killing_trading_horse_l250_Conditions takes nothing returns boolean
	if  not (GetUnitTypeId(GetDyingUnit()) == 1747988792) then
		return false
	endif
	return true
endfunction

function Trig_Killing_trading_horse_l500_Actions takes nothing returns nothing
	local integer delta = 250
	local player whichPlayer = GetOwningPlayer(GetKillingUnit())
	local playerstate whichPlayerState = PLAYER_STATE_RESOURCE_LUMBER
	local player whichPlayer_2
	local playerstate whichPlayerState_2
	local integer delta_2
	local player whichPlayer_3
	local playerstate whichPlayerState_3
	local integer delta_3
	local player whichPlayer_4
	local playerstate whichPlayerState_4
	local integer delta_4
	local force toForce
	local string message
	local player whichPlayer_5
	local force f
	local force whichForce
	local location loc
	local real duration
	local force whichForce_2
	local real x
	local real y
	local real duration_2
	local player whichPlayer_6
	local force f_2
	if delta > 0 then
		if whichPlayerState == PLAYER_STATE_RESOURCE_GOLD then
			set whichPlayer_2 = whichPlayer
			set whichPlayerState_2 = PLAYER_STATE_GOLD_GATHERED
			set delta_2 = delta
			call SetPlayerState(whichPlayer_2, whichPlayerState_2, GetPlayerState(whichPlayer_2, whichPlayerState_2) + delta_2)
		elseif whichPlayerState == PLAYER_STATE_RESOURCE_LUMBER then
			set whichPlayer_3 = whichPlayer
			set whichPlayerState_3 = PLAYER_STATE_LUMBER_GATHERED
			set delta_3 = delta
			call SetPlayerState(whichPlayer_3, whichPlayerState_3, GetPlayerState(whichPlayer_3, whichPlayerState_3) + delta_3)
		endif
	endif
	set whichPlayer_4 = whichPlayer
	set whichPlayerState_4 = whichPlayerState
	set delta_4 = delta
	call SetPlayerState(whichPlayer_4, whichPlayerState_4, GetPlayerState(whichPlayer_4, whichPlayerState_4) + delta_4)
	set whichPlayer_5 = GetOwningPlayer(GetKillingUnit())
	set f = CreateForce()
	call ForceAddPlayer(f, whichPlayer_5)
	set toForce = f
	set message = "TRIGSTR_090"
	if IsPlayerInForce(GetLocalPlayer(), toForce) then
		call DisplayTextToPlayer(GetLocalPlayer(), 0., 0., message)
	endif
	set udg_TradePoint = GetUnitLoc(GetDyingUnit())
	set whichPlayer_6 = GetOwningPlayer(GetDyingUnit())
	set f_2 = CreateForce()
	call ForceAddPlayer(f_2, whichPlayer_6)
	set whichForce = f_2
	set loc = udg_TradePoint
	set duration = 2.00
	set whichForce_2 = whichForce
	set x = GetLocationX(loc)
	set y = GetLocationY(loc)
	set duration_2 = duration
	if IsPlayerInForce(GetLocalPlayer(), whichForce_2) then
		call PingMinimap(x, y, duration_2)
	endif
	call RemoveLocation(udg_TradePoint)
	set whichPlayer = null
	set whichPlayerState = null
	set whichPlayer_2 = null
	set whichPlayerState_2 = null
	set whichPlayer_3 = null
	set whichPlayerState_3 = null
	set whichPlayer_4 = null
	set whichPlayerState_4 = null
	set toForce = null
	set whichPlayer_5 = null
	set f = null
	set whichForce = null
	set loc = null
	set whichForce_2 = null
	set whichPlayer_6 = null
	set f_2 = null
endfunction

function Trig_Killing_trading_horse_l500_Conditions takes nothing returns boolean
	if  not (GetUnitTypeId(GetDyingUnit()) == 1747988801) then
		return false
	endif
	return true
endfunction

function Trig_Light_Cavalry_1_Actions takes nothing returns nothing
	local integer unitId = 1747989072
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747989073
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Light_Cavalry_1_Byzantine_Actions takes nothing returns nothing
	local integer unitId = 1747989560
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747989579
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Light_Cavalry_1_Byzantine_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889811) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889811
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 1) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Light_Cavalry_1_Byzantine_Conditions takes nothing returns boolean
	if  not Trig_Light_Cavalry_1_Byzantine_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Light_Cavalry_1_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889801) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889801
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 1) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Light_Cavalry_1_Conditions takes nothing returns boolean
	if  not Trig_Light_Cavalry_1_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Light_Cavalry_2_Actions takes nothing returns nothing
	local integer unitId = 1747989082
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747989072
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Light_Cavalry_2_Func004C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889801) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889801
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 2) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Light_Cavalry_2_Conditions takes nothing returns boolean
	if  not Trig_Light_Cavalry_2_Func004C() then
		return false
	endif
	return true
endfunction

function Trig_Light_Infantry_1_Actions takes nothing returns nothing
	local integer unitId = 1747989065
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747989296
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Light_Infantry_1_Func003C takes nothing returns boolean
	local integer techid = 1378889797
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 1) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Light_Infantry_1_Conditions takes nothing returns boolean
	if  not Trig_Light_Infantry_1_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Light_Infantry_2_Actions takes nothing returns nothing
	local integer unitId = 1747989067
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747989065
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Light_Infantry_2_Func004C takes nothing returns boolean
	local integer techid = 1378889797
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 2) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Light_Infantry_2_Conditions takes nothing returns boolean
	if  not Trig_Light_Infantry_2_Func004C() then
		return false
	endif
	return true
endfunction

function Trig_Lumber_Horse_250_Actions takes nothing returns nothing
	local integer delta = 250
	local player whichPlayer = GetOwningPlayer(GetSpellTargetUnit())
	local playerstate whichPlayerState = PLAYER_STATE_RESOURCE_LUMBER
	local player whichPlayer_2
	local playerstate whichPlayerState_2
	local integer delta_2
	local player whichPlayer_3
	local playerstate whichPlayerState_3
	local integer delta_3
	local player whichPlayer_4
	local playerstate whichPlayerState_4
	local integer delta_4
	local force toForce
	local string message
	local player whichPlayer_5
	local force f
	local force whichForce
	local location loc
	local real duration
	local force whichForce_2
	local real x
	local real y
	local real duration_2
	local player whichPlayer_6
	local force f_2
	if delta > 0 then
		if whichPlayerState == PLAYER_STATE_RESOURCE_GOLD then
			set whichPlayer_2 = whichPlayer
			set whichPlayerState_2 = PLAYER_STATE_GOLD_GATHERED
			set delta_2 = delta
			call SetPlayerState(whichPlayer_2, whichPlayerState_2, GetPlayerState(whichPlayer_2, whichPlayerState_2) + delta_2)
		elseif whichPlayerState == PLAYER_STATE_RESOURCE_LUMBER then
			set whichPlayer_3 = whichPlayer
			set whichPlayerState_3 = PLAYER_STATE_LUMBER_GATHERED
			set delta_3 = delta
			call SetPlayerState(whichPlayer_3, whichPlayerState_3, GetPlayerState(whichPlayer_3, whichPlayerState_3) + delta_3)
		endif
	endif
	set whichPlayer_4 = whichPlayer
	set whichPlayerState_4 = whichPlayerState
	set delta_4 = delta
	call SetPlayerState(whichPlayer_4, whichPlayerState_4, GetPlayerState(whichPlayer_4, whichPlayerState_4) + delta_4)
	call RemoveUnit(GetSpellAbilityUnit())
	set whichPlayer_5 = GetOwningPlayer(GetSpellTargetUnit())
	set f = CreateForce()
	call ForceAddPlayer(f, whichPlayer_5)
	set toForce = f
	set message = "TRIGSTR_1229"
	if IsPlayerInForce(GetLocalPlayer(), toForce) then
		call DisplayTextToPlayer(GetLocalPlayer(), 0., 0., message)
	endif
	set udg_TradePoint = GetUnitLoc(GetSpellTargetUnit())
	set whichPlayer_6 = GetOwningPlayer(GetSpellTargetUnit())
	set f_2 = CreateForce()
	call ForceAddPlayer(f_2, whichPlayer_6)
	set whichForce = f_2
	set loc = udg_TradePoint
	set duration = 2.00
	set whichForce_2 = whichForce
	set x = GetLocationX(loc)
	set y = GetLocationY(loc)
	set duration_2 = duration
	if IsPlayerInForce(GetLocalPlayer(), whichForce_2) then
		call PingMinimap(x, y, duration_2)
	endif
	call RemoveLocation(udg_TradePoint)
	set whichPlayer = null
	set whichPlayerState = null
	set whichPlayer_2 = null
	set whichPlayerState_2 = null
	set whichPlayer_3 = null
	set whichPlayerState_3 = null
	set whichPlayer_4 = null
	set whichPlayerState_4 = null
	set toForce = null
	set whichPlayer_5 = null
	set f = null
	set whichForce = null
	set loc = null
	set whichForce_2 = null
	set whichPlayer_6 = null
	set f_2 = null
endfunction

function Trig_Lumber_Horse_250_Func007C takes nothing returns boolean
	if  not (GetUnitTypeId(GetSpellAbilityUnit()) == 1747988792) then
		return false
	endif
	if  not (GetUnitTypeId(GetSpellTargetUnit()) == 1747988787) then
		return false
	endif
	return true
endfunction

function Trig_Lumber_Horse_250_Conditions takes nothing returns boolean
	if  not Trig_Lumber_Horse_250_Func007C() then
		return false
	endif
	return true
endfunction

function Trig_Lumber_Horse_500_Actions takes nothing returns nothing
	local integer delta = 500
	local player whichPlayer = GetOwningPlayer(GetSpellTargetUnit())
	local playerstate whichPlayerState = PLAYER_STATE_RESOURCE_LUMBER
	local player whichPlayer_2
	local playerstate whichPlayerState_2
	local integer delta_2
	local player whichPlayer_3
	local playerstate whichPlayerState_3
	local integer delta_3
	local player whichPlayer_4
	local playerstate whichPlayerState_4
	local integer delta_4
	local force toForce
	local string message
	local player whichPlayer_5
	local force f
	local force whichForce
	local location loc
	local real duration
	local force whichForce_2
	local real x
	local real y
	local real duration_2
	local player whichPlayer_6
	local force f_2
	if delta > 0 then
		if whichPlayerState == PLAYER_STATE_RESOURCE_GOLD then
			set whichPlayer_2 = whichPlayer
			set whichPlayerState_2 = PLAYER_STATE_GOLD_GATHERED
			set delta_2 = delta
			call SetPlayerState(whichPlayer_2, whichPlayerState_2, GetPlayerState(whichPlayer_2, whichPlayerState_2) + delta_2)
		elseif whichPlayerState == PLAYER_STATE_RESOURCE_LUMBER then
			set whichPlayer_3 = whichPlayer
			set whichPlayerState_3 = PLAYER_STATE_LUMBER_GATHERED
			set delta_3 = delta
			call SetPlayerState(whichPlayer_3, whichPlayerState_3, GetPlayerState(whichPlayer_3, whichPlayerState_3) + delta_3)
		endif
	endif
	set whichPlayer_4 = whichPlayer
	set whichPlayerState_4 = whichPlayerState
	set delta_4 = delta
	call SetPlayerState(whichPlayer_4, whichPlayerState_4, GetPlayerState(whichPlayer_4, whichPlayerState_4) + delta_4)
	call RemoveUnit(GetSpellAbilityUnit())
	set whichPlayer_5 = GetOwningPlayer(GetSpellTargetUnit())
	set f = CreateForce()
	call ForceAddPlayer(f, whichPlayer_5)
	set toForce = f
	set message = "TRIGSTR_1228"
	if IsPlayerInForce(GetLocalPlayer(), toForce) then
		call DisplayTextToPlayer(GetLocalPlayer(), 0., 0., message)
	endif
	set udg_TradePoint = GetUnitLoc(GetSpellTargetUnit())
	set whichPlayer_6 = GetOwningPlayer(GetSpellTargetUnit())
	set f_2 = CreateForce()
	call ForceAddPlayer(f_2, whichPlayer_6)
	set whichForce = f_2
	set loc = udg_TradePoint
	set duration = 2.00
	set whichForce_2 = whichForce
	set x = GetLocationX(loc)
	set y = GetLocationY(loc)
	set duration_2 = duration
	if IsPlayerInForce(GetLocalPlayer(), whichForce_2) then
		call PingMinimap(x, y, duration_2)
	endif
	call RemoveLocation(udg_TradePoint)
	set whichPlayer = null
	set whichPlayerState = null
	set whichPlayer_2 = null
	set whichPlayerState_2 = null
	set whichPlayer_3 = null
	set whichPlayerState_3 = null
	set whichPlayer_4 = null
	set whichPlayerState_4 = null
	set toForce = null
	set whichPlayer_5 = null
	set f = null
	set whichForce = null
	set loc = null
	set whichForce_2 = null
	set whichPlayer_6 = null
	set f_2 = null
endfunction

function Trig_Lumber_Horse_500_Func007C takes nothing returns boolean
	if  not (GetUnitTypeId(GetSpellAbilityUnit()) == 1747988801) then
		return false
	endif
	if  not (GetUnitTypeId(GetSpellTargetUnit()) == 1747988787) then
		return false
	endif
	return true
endfunction

function Trig_Lumber_Horse_500_Conditions takes nothing returns boolean
	if  not Trig_Lumber_Horse_500_Func007C() then
		return false
	endif
	return true
endfunction

function Trig_ME_Archer_1_Actions takes nothing returns nothing
	local integer unitId = 1848651846
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1848651847
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_ME_Archer_1_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378890037) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378890037
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 1) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_ME_Archer_1_Conditions takes nothing returns boolean
	if  not Trig_ME_Archer_1_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_ME_Archer_2_Actions takes nothing returns nothing
	local integer unitId = 1848651848
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1848651846
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_ME_Archer_2_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378890037) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378890037
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 2) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_ME_Archer_2_Conditions takes nothing returns boolean
	if  not Trig_ME_Archer_2_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_ME_Heavy_Cavalry_1_Actions takes nothing returns nothing
	local integer unitId = 1747989836
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747989837
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_ME_Heavy_Cavalry_1_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378890036) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378890036
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 1) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_ME_Heavy_Cavalry_1_Conditions takes nothing returns boolean
	if  not Trig_ME_Heavy_Cavalry_1_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_ME_Heavy_Cavalry_2_Actions takes nothing returns nothing
	local integer unitId = 1747989835
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747989836
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_ME_Heavy_Cavalry_2_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378890036) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378890036
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 2) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_ME_Heavy_Cavalry_2_Conditions takes nothing returns boolean
	if  not Trig_ME_Heavy_Cavalry_2_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_ME_Light_Cavalry_1_Actions takes nothing returns nothing
	local integer unitId = 1747989833
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747989834
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_ME_Light_Cavalry_1_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889797) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889797
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 1) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_ME_Light_Cavalry_1_Conditions takes nothing returns boolean
	if  not Trig_ME_Light_Cavalry_1_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_ME_Light_Cavalry_2_Actions takes nothing returns nothing
	local integer unitId = 1747989832
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747989833
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_ME_Light_Cavalry_2_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889797) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889797
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 2) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_ME_Light_Cavalry_2_Conditions takes nothing returns boolean
	if  not Trig_ME_Light_Cavalry_2_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_ME_Light_Infantry_1_Actions takes nothing returns nothing
	local integer unitId = 1747989815
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747989838
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_ME_Light_Infantry_1_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378890034) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378890034
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 1) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_ME_Light_Infantry_1_Conditions takes nothing returns boolean
	if  not Trig_ME_Light_Infantry_1_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_ME_Light_Infantry_2_Actions takes nothing returns nothing
	local integer unitId = 1747989816
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747989815
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_ME_Light_Infantry_2_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378890034) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378890034
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 2) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_ME_Light_Infantry_2_Conditions takes nothing returns boolean
	if  not Trig_ME_Light_Infantry_2_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_ME_Missile_Cavalry_Actions takes nothing returns nothing
	local integer unitId = 1747989830
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747989829
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_ME_Missile_Cavalry_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378890038) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378890038
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 1) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_ME_Missile_Cavalry_Conditions takes nothing returns boolean
	if  not Trig_ME_Missile_Cavalry_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_ME_Skirmisher_Actions takes nothing returns nothing
	local integer unitId = 1848651844
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1848651845
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_ME_Skirmisher_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378890032) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378890032
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 1) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_ME_Skirmisher_Conditions takes nothing returns boolean
	if  not Trig_ME_Skirmisher_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_ME_Spearmen_1_Actions takes nothing returns nothing
	local integer unitId = 1747989825
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747989817
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_ME_Spearmen_1_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889818) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889818
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 1) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_ME_Spearmen_1_Conditions takes nothing returns boolean
	if  not Trig_ME_Spearmen_1_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_ME_Spearmen_2_Actions takes nothing returns nothing
	local integer unitId = 1747989814
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747989825
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_ME_Spearmen_2_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889818) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889818
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 2) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_ME_Spearmen_2_Conditions takes nothing returns boolean
	if  not Trig_ME_Spearmen_2_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Melee_Initialization_Actions takes nothing returns nothing
	call SetFloatGameState(GAME_STATE_TIME_OF_DAY, bj_MELEE_STARTING_TOD)
	call MeleeStartingHeroLimit()
endfunction

function Trig_Missile_Cavalry_Byzantine_Actions takes nothing returns nothing
	local integer unitId = 1747989582
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747989583
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Missile_Cavalry_Byzantine_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378890035) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378890035
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 1) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Missile_Cavalry_Byzantine_Conditions takes nothing returns boolean
	if  not Trig_Missile_Cavalry_Byzantine_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Pikemen_1_Actions takes nothing returns nothing
	local integer unitId = 1747988559
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747989064
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Pikemen_1_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889799) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889799
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 1) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Pikemen_1_Conditions takes nothing returns boolean
	if  not Trig_Pikemen_1_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Pikemen_2_Actions takes nothing returns nothing
	local integer unitId = 1747988812
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747988559
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Pikemen_2_Func004C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889799) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889799
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 2) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Pikemen_2_Conditions takes nothing returns boolean
	if  not Trig_Pikemen_2_Func004C() then
		return false
	endif
	return true
endfunction

function Trig_Settle_Actions takes nothing returns nothing
	local group whichGroup = GetUnitsOfTypeIdAll(1747988554)
	local code callback = ref_function_Trig_Settle_Func001002
	local boolean wantDestroy = bj_wantDestroyGroup
	set bj_wantDestroyGroup = false
	call ForGroup(whichGroup, callback)
	if wantDestroy then
		call DestroyGroup(whichGroup)
	endif
	set whichGroup = null
endfunction

function Trig_Settle_Func001002 takes nothing returns nothing
	call ReplaceUnitBJ(GetEnumUnit(), 1747988553, bj_UNIT_STATE_METHOD_RELATIVE)
endfunction

function Trig_Settlement_Aura_Actions takes nothing returns nothing
	local integer abilityId
	local unit whichUnit
	call ReplaceUnitBJ(GetTriggerUnit(), 1747989554, bj_UNIT_STATE_METHOD_RELATIVE)
	set abilityId = 1093677635
	set whichUnit = bj_lastReplacedUnit
	call UnitAddAbility(whichUnit, abilityId)
	set whichUnit = null
endfunction

function Trig_Settlement_Aura_Func003C takes nothing returns boolean
	if  not (GetUnitTypeId(GetTriggerUnit()) == 1747988557) then
		return false
	endif
	return true
endfunction

function Trig_Settlement_Aura_Conditions takes nothing returns boolean
	if  not Trig_Settlement_Aura_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Settlement_Range_Check_Actions takes nothing returns nothing
	local real radius
	local location whichLocation
	local real radius_2
	local location whichLocation_2
	local boolexpr filter
	local group g
	local group whichGroup
	local code callback
	local boolean wantDestroy
	set udg_BuildingRangeCheckPoint = GetUnitLoc(GetTriggerUnit())
	set radius = 1500.00
	set whichLocation = udg_BuildingRangeCheckPoint
	set radius_2 = radius
	set whichLocation_2 = whichLocation
	set filter = null
	set g = CreateGroup()
	call GroupEnumUnitsInRangeOfLoc(g, whichLocation_2, radius_2, filter)
	call DestroyBoolExpr(filter)
	set udg_BuildingRangeCheck = g
	set whichGroup = udg_BuildingRangeCheck
	set callback = ref_function_Trig_Settlement_Range_Check_Func003A
	set wantDestroy = bj_wantDestroyGroup
	set bj_wantDestroyGroup = false
	call ForGroup(whichGroup, callback)
	if wantDestroy then
		call DestroyGroup(whichGroup)
	endif
	call DestroyGroup(udg_BuildingRangeCheck)
	call RemoveLocation(udg_BuildingRangeCheckPoint)
	set whichLocation = null
	set whichLocation_2 = null
	set filter = null
	set g = null
	set whichGroup = null
endfunction

function Trig_Settlement_Range_Check_Func006C takes nothing returns boolean
	if  not (GetUnitTypeId(GetTriggerUnit()) == 1747988557) then
		return false
	endif
	return true
endfunction

function Trig_Settlement_Range_Check_Conditions takes nothing returns boolean
	if  not Trig_Settlement_Range_Check_Func006C() then
		return false
	endif
	return true
endfunction

function Trig_Settlement_Range_Check_Func003Func001Func001C takes nothing returns boolean
	if  not (GetOwningPlayer(GetEnumUnit()) == GetOwningPlayer(GetTriggerUnit())) then
		return false
	endif
	if  not (GetEnumUnit() != GetTriggerUnit()) then
		return false
	endif
	return true
endfunction

function Trig_Settlement_Range_Check_Func003Func001C takes nothing returns boolean
	if  not Trig_Settlement_Range_Check_Func003Func001Func001C() then
		return false
	endif
	if  not false then
		return false
	endif
	if  not (GetUnitTypeId(GetEnumUnit()) == 1747988557) then
		return false
	endif
	if  not (GetUnitTypeId(GetEnumUnit()) == 1747989554) then
		return false
	endif
	return true
endfunction

function Trig_Settlement_Range_Check_Func003A takes nothing returns nothing
	local force toForce
	local string message
	local player whichPlayer
	local force f
	local integer delta
	local player whichPlayer_2
	local playerstate whichPlayerState
	local player whichPlayer_3
	local playerstate whichPlayerState_2
	local integer delta_2
	local player whichPlayer_4
	local playerstate whichPlayerState_3
	local integer delta_3
	local player whichPlayer_5
	local playerstate whichPlayerState_4
	local integer delta_4
	local integer delta_5
	local player whichPlayer_6
	local playerstate whichPlayerState_5
	local player whichPlayer_7
	local playerstate whichPlayerState_6
	local integer delta_6
	local player whichPlayer_8
	local playerstate whichPlayerState_7
	local integer delta_7
	local player whichPlayer_9
	local playerstate whichPlayerState_8
	local integer delta_8
	if Trig_Settlement_Range_Check_Func003Func001C() then
		call KillUnit(GetTriggerUnit())
		set whichPlayer = GetOwningPlayer(GetTriggerUnit())
		set f = CreateForce()
		call ForceAddPlayer(f, whichPlayer)
		set toForce = f
		set message = "TRIGSTR_1669"
		if IsPlayerInForce(GetLocalPlayer(), toForce) then
			call DisplayTextToPlayer(GetLocalPlayer(), 0., 0., message)
		endif
		set delta = 100
		set whichPlayer_2 = GetOwningPlayer(GetTriggerUnit())
		set whichPlayerState = PLAYER_STATE_RESOURCE_GOLD
		if delta > 0 then
			if whichPlayerState == PLAYER_STATE_RESOURCE_GOLD then
				set whichPlayer_3 = whichPlayer_2
				set whichPlayerState_2 = PLAYER_STATE_GOLD_GATHERED
				set delta_2 = delta
				call SetPlayerState(whichPlayer_3, whichPlayerState_2, GetPlayerState(whichPlayer_3, whichPlayerState_2) + delta_2)
			elseif whichPlayerState == PLAYER_STATE_RESOURCE_LUMBER then
				set whichPlayer_4 = whichPlayer_2
				set whichPlayerState_3 = PLAYER_STATE_LUMBER_GATHERED
				set delta_3 = delta
				call SetPlayerState(whichPlayer_4, whichPlayerState_3, GetPlayerState(whichPlayer_4, whichPlayerState_3) + delta_3)
			endif
		endif
		set whichPlayer_5 = whichPlayer_2
		set whichPlayerState_4 = whichPlayerState
		set delta_4 = delta
		call SetPlayerState(whichPlayer_5, whichPlayerState_4, GetPlayerState(whichPlayer_5, whichPlayerState_4) + delta_4)
		set delta_5 = 275
		set whichPlayer_6 = GetOwningPlayer(GetTriggerUnit())
		set whichPlayerState_5 = PLAYER_STATE_RESOURCE_LUMBER
		if delta_5 > 0 then
			if whichPlayerState_5 == PLAYER_STATE_RESOURCE_GOLD then
				set whichPlayer_7 = whichPlayer_6
				set whichPlayerState_6 = PLAYER_STATE_GOLD_GATHERED
				set delta_6 = delta_5
				call SetPlayerState(whichPlayer_7, whichPlayerState_6, GetPlayerState(whichPlayer_7, whichPlayerState_6) + delta_6)
			elseif whichPlayerState_5 == PLAYER_STATE_RESOURCE_LUMBER then
				set whichPlayer_8 = whichPlayer_6
				set whichPlayerState_7 = PLAYER_STATE_LUMBER_GATHERED
				set delta_7 = delta_5
				call SetPlayerState(whichPlayer_8, whichPlayerState_7, GetPlayerState(whichPlayer_8, whichPlayerState_7) + delta_7)
			endif
		endif
		set whichPlayer_9 = whichPlayer_6
		set whichPlayerState_8 = whichPlayerState_5
		set delta_8 = delta_5
		call SetPlayerState(whichPlayer_9, whichPlayerState_8, GetPlayerState(whichPlayer_9, whichPlayerState_8) + delta_8)
	endif
	set toForce = null
	set whichPlayer = null
	set f = null
	set whichPlayer_2 = null
	set whichPlayerState = null
	set whichPlayer_3 = null
	set whichPlayerState_2 = null
	set whichPlayer_4 = null
	set whichPlayerState_3 = null
	set whichPlayer_5 = null
	set whichPlayerState_4 = null
	set whichPlayer_6 = null
	set whichPlayerState_5 = null
	set whichPlayer_7 = null
	set whichPlayerState_6 = null
	set whichPlayer_8 = null
	set whichPlayerState_7 = null
	set whichPlayer_9 = null
	set whichPlayerState_8 = null
endfunction

function Trig_Skirmisher_Actions takes nothing returns nothing
	local integer unitId = 1848651828
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1848651827
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Skirmisher_Byzantine_Actions takes nothing returns nothing
	local integer unitId = 1848651832
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1848651830
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Skirmisher_Byzantine_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889808) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889808
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 1) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Skirmisher_Byzantine_Conditions takes nothing returns boolean
	if  not Trig_Skirmisher_Byzantine_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Skirmisher_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889803) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889803
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 1) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Skirmisher_Conditions takes nothing returns boolean
	if  not Trig_Skirmisher_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Spearmen_1_Actions takes nothing returns nothing
	local integer unitId = 1747989057
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747989058
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Spearmen_1_Byzantine_Actions takes nothing returns nothing
	local integer unitId = 1747989570
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747989571
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Spearmen_1_Byzantine_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889807) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889807
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 1) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Spearmen_1_Byzantine_Conditions takes nothing returns boolean
	if  not Trig_Spearmen_1_Byzantine_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Spearmen_1_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889796) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889796
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 1) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Spearmen_1_Conditions takes nothing returns boolean
	if  not Trig_Spearmen_1_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Spearmen_2_Actions takes nothing returns nothing
	local integer unitId = 1747988558
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747989057
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Spearmen_2_Byzantine_Actions takes nothing returns nothing
	local integer unitId = 1747989556
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747989570
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Spearmen_2_Byzantine_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889807) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889807
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 2) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Spearmen_2_Byzantine_Conditions takes nothing returns boolean
	if  not Trig_Spearmen_2_Byzantine_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Spearmen_2_Func004C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889796) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889796
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 2) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Spearmen_2_Conditions takes nothing returns boolean
	if  not Trig_Spearmen_2_Func004C() then
		return false
	endif
	return true
endfunction

function Trig_Spy_Sabotage_on_buildings_Actions takes nothing returns nothing
	local unit whichUnit = GetSpellTargetUnit()
	local unitstate whichState = UNIT_STATE_MANA
	local unit whichUnit_2 = GetSpellTargetUnit()
	local real newValue = GetUnitState(whichUnit_2, whichState) - 600.00
	call SetUnitState(whichUnit, UNIT_STATE_MANA, RMaxBJ(0., newValue))
	set whichUnit = null
	set whichState = null
	set whichUnit_2 = null
endfunction

function Trig_Spy_Sabotage_on_buildings_Func002C takes nothing returns boolean
	if  not (GetUnitTypeId(GetSpellAbilityUnit()) == 1966092336) then
		return false
	endif
	if  not (GetSpellAbilityId() == 1093677906) then
		return false
	endif
	if  not (GetOwningPlayer(GetSpellTargetUnit()) != Player(PLAYER_NEUTRAL_AGGRESSIVE)) then
		return false
	endif
	if  not (IsUnitType(GetSpellTargetUnit(), UNIT_TYPE_STRUCTURE) == true) then
		return false
	endif
	return true
endfunction

function Trig_Spy_Sabotage_on_buildings_Conditions takes nothing returns boolean
	if  not Trig_Spy_Sabotage_on_buildings_Func002C() then
		return false
	endif
	return true
endfunction

function Trig_Structures_finishes_Actions takes nothing returns nothing
	local integer abilityId = 1093677402
	local unit whichUnit = GetTriggerUnit()
	call UnitRemoveAbility(whichUnit, abilityId)
	set whichUnit = null
endfunction

function Trig_Supply_Horse_2_Actions takes nothing returns nothing
	local group whichGroup
	local code callback
	local boolean wantDestroy
	set udg_Supplyhorses2 = GetUnitsOfTypeIdAll(1747989301)
	set whichGroup = udg_Supplyhorses
	set callback = ref_function_Trig_Supply_Horse_2_Func002A
	set wantDestroy = bj_wantDestroyGroup
	set bj_wantDestroyGroup = false
	call ForGroup(whichGroup, callback)
	if wantDestroy then
		call DestroyGroup(whichGroup)
	endif
	call DestroyGroup(udg_Supplyhorses2)
	set whichGroup = null
endfunction

function Trig_Supply_Horse_2_Func002Func001C takes nothing returns boolean
	local unitstate whichState = UNIT_STATE_MANA
	local unit whichUnit = GetEnumUnit()
	if  not (GetUnitState(whichUnit, whichState) <= 0.00) then
		set whichState = null
		set whichUnit = null
		return false
	endif
	set whichState = null
	set whichUnit = null
	return true
endfunction

function Trig_Supply_Horse_2_Func002A takes nothing returns nothing
	if Trig_Supply_Horse_2_Func002Func001C() then
		call KillUnit(GetEnumUnit())
	endif
endfunction

function Trig_Supply_Horse_Actions takes nothing returns nothing
	local integer unitId = 1747989301
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747988790
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Supply_Horse_Func004C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889783) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889783
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 2) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Supply_Horse_Conditions takes nothing returns boolean
	if  not Trig_Supply_Horse_Func004C() then
		return false
	endif
	return true
endfunction

function Trig_Supply_Horses_Actions takes nothing returns nothing
	local group whichGroup
	local code callback
	local boolean wantDestroy
	set udg_Supplyhorses = GetUnitsOfTypeIdAll(1747988790)
	set whichGroup = udg_Supplyhorses
	set callback = ref_function_Trig_Supply_Horses_Func002A
	set wantDestroy = bj_wantDestroyGroup
	set bj_wantDestroyGroup = false
	call ForGroup(whichGroup, callback)
	if wantDestroy then
		call DestroyGroup(whichGroup)
	endif
	call DestroyGroup(udg_Supplyhorses)
	set whichGroup = null
endfunction

function Trig_Supply_Horses_Func002Func001C takes nothing returns boolean
	local unitstate whichState = UNIT_STATE_MANA
	local unit whichUnit = GetEnumUnit()
	if  not (GetUnitState(whichUnit, whichState) <= 0.00) then
		set whichState = null
		set whichUnit = null
		return false
	endif
	set whichState = null
	set whichUnit = null
	return true
endfunction

function Trig_Supply_Horses_Func002A takes nothing returns nothing
	if Trig_Supply_Horses_Func002Func001C() then
		call KillUnit(GetEnumUnit())
	endif
endfunction

function Trig_Thatched_Cottage_1_Actions takes nothing returns nothing
	local integer unitId = 1747988561
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747988784
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Thatched_Cottage_1_Byz_Actions takes nothing returns nothing
	local integer unitId = 1747989812
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747989811
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Thatched_Cottage_1_Byz_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889780) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889780
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 1) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Thatched_Cottage_1_Byz_Conditions takes nothing returns boolean
	if  not Trig_Thatched_Cottage_1_Byz_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Thatched_Cottage_1_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889780) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889780
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 1) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Thatched_Cottage_1_Conditions takes nothing returns boolean
	if  not Trig_Thatched_Cottage_1_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Thatched_Cottage_2_Actions takes nothing returns nothing
	local integer unitId = 1747988565
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747988563
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Thatched_Cottage_2_Byz_Actions takes nothing returns nothing
	local integer unitId = 1747990098
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747990095
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Thatched_Cottage_2_Byz_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889780) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889780
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 1) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Thatched_Cottage_2_Byz_Conditions takes nothing returns boolean
	if  not Trig_Thatched_Cottage_2_Byz_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Thatched_Cottage_2_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889780) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889780
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 1) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Thatched_Cottage_2_Conditions takes nothing returns boolean
	if  not Trig_Thatched_Cottage_2_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Thatched_Cottage_3_Actions takes nothing returns nothing
	local integer unitId = 1747988566
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747988562
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Thatched_Cottage_3_Byz_Actions takes nothing returns nothing
	local integer unitId = 1747990099
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747990096
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Thatched_Cottage_3_Byz_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889780) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889780
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 1) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Thatched_Cottage_3_Byz_Conditions takes nothing returns boolean
	if  not Trig_Thatched_Cottage_3_Byz_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Thatched_Cottage_3_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889780) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889780
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 1) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Thatched_Cottage_3_Conditions takes nothing returns boolean
	if  not Trig_Thatched_Cottage_3_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Thatched_Cottage_4_Actions takes nothing returns nothing
	local integer unitId = 1747988567
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747988564
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Thatched_Cottage_4_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889780) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889780
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 1) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Thatched_Cottage_4_Conditions takes nothing returns boolean
	if  not Trig_Thatched_Cottage_4_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Trade_Actions takes nothing returns nothing
	call SetMapFlag(MAP_LOCK_RESOURCE_TRADING, false)
endfunction

function Trig_Trading_Gold_Ship_Actions takes nothing returns nothing
	local integer delta = 500
	local player whichPlayer = GetOwningPlayer(GetSpellTargetUnit())
	local playerstate whichPlayerState = PLAYER_STATE_RESOURCE_GOLD
	local player whichPlayer_2
	local playerstate whichPlayerState_2
	local integer delta_2
	local player whichPlayer_3
	local playerstate whichPlayerState_3
	local integer delta_3
	local player whichPlayer_4
	local playerstate whichPlayerState_4
	local integer delta_4
	local force toForce
	local string message
	local player whichPlayer_5
	local force f
	local force whichForce
	local location loc
	local real duration
	local force whichForce_2
	local real x
	local real y
	local real duration_2
	local player whichPlayer_6
	local force f_2
	if delta > 0 then
		if whichPlayerState == PLAYER_STATE_RESOURCE_GOLD then
			set whichPlayer_2 = whichPlayer
			set whichPlayerState_2 = PLAYER_STATE_GOLD_GATHERED
			set delta_2 = delta
			call SetPlayerState(whichPlayer_2, whichPlayerState_2, GetPlayerState(whichPlayer_2, whichPlayerState_2) + delta_2)
		elseif whichPlayerState == PLAYER_STATE_RESOURCE_LUMBER then
			set whichPlayer_3 = whichPlayer
			set whichPlayerState_3 = PLAYER_STATE_LUMBER_GATHERED
			set delta_3 = delta
			call SetPlayerState(whichPlayer_3, whichPlayerState_3, GetPlayerState(whichPlayer_3, whichPlayerState_3) + delta_3)
		endif
	endif
	set whichPlayer_4 = whichPlayer
	set whichPlayerState_4 = whichPlayerState
	set delta_4 = delta
	call SetPlayerState(whichPlayer_4, whichPlayerState_4, GetPlayerState(whichPlayer_4, whichPlayerState_4) + delta_4)
	call RemoveUnit(GetSpellAbilityUnit())
	set whichPlayer_5 = GetOwningPlayer(GetSpellTargetUnit())
	set f = CreateForce()
	call ForceAddPlayer(f, whichPlayer_5)
	set toForce = f
	set message = "TRIGSTR_1234"
	if IsPlayerInForce(GetLocalPlayer(), toForce) then
		call DisplayTextToPlayer(GetLocalPlayer(), 0., 0., message)
	endif
	set udg_TradePoint = GetUnitLoc(GetSpellTargetUnit())
	set whichPlayer_6 = GetOwningPlayer(GetSpellTargetUnit())
	set f_2 = CreateForce()
	call ForceAddPlayer(f_2, whichPlayer_6)
	set whichForce = f_2
	set loc = udg_TradePoint
	set duration = 2.00
	set whichForce_2 = whichForce
	set x = GetLocationX(loc)
	set y = GetLocationY(loc)
	set duration_2 = duration
	if IsPlayerInForce(GetLocalPlayer(), whichForce_2) then
		call PingMinimap(x, y, duration_2)
	endif
	call RemoveLocation(udg_TradePoint)
	set whichPlayer = null
	set whichPlayerState = null
	set whichPlayer_2 = null
	set whichPlayerState_2 = null
	set whichPlayer_3 = null
	set whichPlayerState_3 = null
	set whichPlayer_4 = null
	set whichPlayerState_4 = null
	set toForce = null
	set whichPlayer_5 = null
	set f = null
	set whichForce = null
	set loc = null
	set whichForce_2 = null
	set whichPlayer_6 = null
	set f_2 = null
endfunction

function Trig_Trading_Gold_Ship_Func007C takes nothing returns boolean
	if  not (GetUnitTypeId(GetSpellAbilityUnit()) == 1747989049) then
		return false
	endif
	if  not (GetUnitTypeId(GetSpellTargetUnit()) == 1747988569) then
		return false
	endif
	return true
endfunction

function Trig_Trading_Gold_Ship_Conditions takes nothing returns boolean
	if  not Trig_Trading_Gold_Ship_Func007C() then
		return false
	endif
	return true
endfunction

function Trig_Trading_Lumber_Ship_Actions takes nothing returns nothing
	local integer delta = 500
	local player whichPlayer = GetOwningPlayer(GetSpellTargetUnit())
	local playerstate whichPlayerState = PLAYER_STATE_RESOURCE_LUMBER
	local player whichPlayer_2
	local playerstate whichPlayerState_2
	local integer delta_2
	local player whichPlayer_3
	local playerstate whichPlayerState_3
	local integer delta_3
	local player whichPlayer_4
	local playerstate whichPlayerState_4
	local integer delta_4
	local force toForce
	local string message
	local player whichPlayer_5
	local force f
	local force whichForce
	local location loc
	local real duration
	local force whichForce_2
	local real x
	local real y
	local real duration_2
	local player whichPlayer_6
	local force f_2
	if delta > 0 then
		if whichPlayerState == PLAYER_STATE_RESOURCE_GOLD then
			set whichPlayer_2 = whichPlayer
			set whichPlayerState_2 = PLAYER_STATE_GOLD_GATHERED
			set delta_2 = delta
			call SetPlayerState(whichPlayer_2, whichPlayerState_2, GetPlayerState(whichPlayer_2, whichPlayerState_2) + delta_2)
		elseif whichPlayerState == PLAYER_STATE_RESOURCE_LUMBER then
			set whichPlayer_3 = whichPlayer
			set whichPlayerState_3 = PLAYER_STATE_LUMBER_GATHERED
			set delta_3 = delta
			call SetPlayerState(whichPlayer_3, whichPlayerState_3, GetPlayerState(whichPlayer_3, whichPlayerState_3) + delta_3)
		endif
	endif
	set whichPlayer_4 = whichPlayer
	set whichPlayerState_4 = whichPlayerState
	set delta_4 = delta
	call SetPlayerState(whichPlayer_4, whichPlayerState_4, GetPlayerState(whichPlayer_4, whichPlayerState_4) + delta_4)
	call RemoveUnit(GetSpellAbilityUnit())
	set whichPlayer_5 = GetOwningPlayer(GetSpellTargetUnit())
	set f = CreateForce()
	call ForceAddPlayer(f, whichPlayer_5)
	set toForce = f
	set message = "TRIGSTR_1232"
	if IsPlayerInForce(GetLocalPlayer(), toForce) then
		call DisplayTextToPlayer(GetLocalPlayer(), 0., 0., message)
	endif
	set udg_TradePoint = GetUnitLoc(GetSpellTargetUnit())
	set whichPlayer_6 = GetOwningPlayer(GetSpellTargetUnit())
	set f_2 = CreateForce()
	call ForceAddPlayer(f_2, whichPlayer_6)
	set whichForce = f_2
	set loc = udg_TradePoint
	set duration = 2.00
	set whichForce_2 = whichForce
	set x = GetLocationX(loc)
	set y = GetLocationY(loc)
	set duration_2 = duration
	if IsPlayerInForce(GetLocalPlayer(), whichForce_2) then
		call PingMinimap(x, y, duration_2)
	endif
	call RemoveLocation(udg_TradePoint)
	set whichPlayer = null
	set whichPlayerState = null
	set whichPlayer_2 = null
	set whichPlayerState_2 = null
	set whichPlayer_3 = null
	set whichPlayerState_3 = null
	set whichPlayer_4 = null
	set whichPlayerState_4 = null
	set toForce = null
	set whichPlayer_5 = null
	set f = null
	set whichForce = null
	set loc = null
	set whichForce_2 = null
	set whichPlayer_6 = null
	set f_2 = null
endfunction

function Trig_Trading_Lumber_Ship_Func007C takes nothing returns boolean
	if  not (GetUnitTypeId(GetSpellAbilityUnit()) == 1747989048) then
		return false
	endif
	if  not (GetUnitTypeId(GetSpellTargetUnit()) == 1747988569) then
		return false
	endif
	return true
endfunction

function Trig_Trading_Lumber_Ship_Conditions takes nothing returns boolean
	if  not Trig_Trading_Lumber_Ship_Func007C() then
		return false
	endif
	return true
endfunction

function Trig_Trebuchet_Dies_Actions takes nothing returns nothing
	local player whichPlayer = GetOwningPlayer(GetEnteringUnit())
	local player whichPlayer_2 = GetOwningPlayer(GetDyingUnit())
	set udg_PlayerTax[GetPlayerId(whichPlayer) + 1] = udg_PlayerTax[GetPlayerId(whichPlayer_2) + 1] + 10
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Trebuchet_Dies_Conditions takes nothing returns boolean
	if  not (GetUnitTypeId(GetDyingUnit()) == 1697656881) then
		return false
	endif
	return true
endfunction

function Trig_University_Unrest_Reduction_75_Actions takes nothing returns nothing
	local player whichPlayer = GetOwningPlayer(GetConstructedStructure())
	local player whichPlayer_2 = GetOwningPlayer(GetConstructedStructure())
	local integer abilityId
	local unit whichUnit
	set udg_Unhappiness3[GetPlayerId(whichPlayer) + 1] = udg_Unhappiness3[GetPlayerId(whichPlayer_2) + 1] + 75
	set abilityId = 1093677891
	set whichUnit = GetConstructedStructure()
	call UnitAddAbility(whichUnit, abilityId)
	set whichPlayer = null
	set whichPlayer_2 = null
	set whichUnit = null
endfunction

function Trig_University_Unrest_Reduction_75_Func001C takes nothing returns boolean
	if GetUnitTypeId(GetConstructedStructure()) == 1747988789 then
		return true
	endif
	return false
endfunction

function Trig_University_Unrest_Reduction_75_Conditions takes nothing returns boolean
	if  not Trig_University_Unrest_Reduction_75_Func001C() then
		return false
	endif
	return true
endfunction

function Trig_killing_Gold_Ship_Actions takes nothing returns nothing
	local integer delta = 500
	local player whichPlayer = GetOwningPlayer(GetKillingUnit())
	local playerstate whichPlayerState = PLAYER_STATE_RESOURCE_GOLD
	local player whichPlayer_2
	local playerstate whichPlayerState_2
	local integer delta_2
	local player whichPlayer_3
	local playerstate whichPlayerState_3
	local integer delta_3
	local player whichPlayer_4
	local playerstate whichPlayerState_4
	local integer delta_4
	local force toForce
	local string message
	local player whichPlayer_5
	local force f
	local force whichForce
	local location loc
	local real duration
	local force whichForce_2
	local real x
	local real y
	local real duration_2
	local player whichPlayer_6
	local force f_2
	if delta > 0 then
		if whichPlayerState == PLAYER_STATE_RESOURCE_GOLD then
			set whichPlayer_2 = whichPlayer
			set whichPlayerState_2 = PLAYER_STATE_GOLD_GATHERED
			set delta_2 = delta
			call SetPlayerState(whichPlayer_2, whichPlayerState_2, GetPlayerState(whichPlayer_2, whichPlayerState_2) + delta_2)
		elseif whichPlayerState == PLAYER_STATE_RESOURCE_LUMBER then
			set whichPlayer_3 = whichPlayer
			set whichPlayerState_3 = PLAYER_STATE_LUMBER_GATHERED
			set delta_3 = delta
			call SetPlayerState(whichPlayer_3, whichPlayerState_3, GetPlayerState(whichPlayer_3, whichPlayerState_3) + delta_3)
		endif
	endif
	set whichPlayer_4 = whichPlayer
	set whichPlayerState_4 = whichPlayerState
	set delta_4 = delta
	call SetPlayerState(whichPlayer_4, whichPlayerState_4, GetPlayerState(whichPlayer_4, whichPlayerState_4) + delta_4)
	set whichPlayer_5 = GetOwningPlayer(GetKillingUnit())
	set f = CreateForce()
	call ForceAddPlayer(f, whichPlayer_5)
	set toForce = f
	set message = "TRIGSTR_083"
	if IsPlayerInForce(GetLocalPlayer(), toForce) then
		call DisplayTextToPlayer(GetLocalPlayer(), 0., 0., message)
	endif
	set udg_TradePoint = GetUnitLoc(GetDyingUnit())
	set whichPlayer_6 = GetOwningPlayer(GetDyingUnit())
	set f_2 = CreateForce()
	call ForceAddPlayer(f_2, whichPlayer_6)
	set whichForce = f_2
	set loc = udg_TradePoint
	set duration = 2.00
	set whichForce_2 = whichForce
	set x = GetLocationX(loc)
	set y = GetLocationY(loc)
	set duration_2 = duration
	if IsPlayerInForce(GetLocalPlayer(), whichForce_2) then
		call PingMinimap(x, y, duration_2)
	endif
	call RemoveLocation(udg_TradePoint)
	set whichPlayer = null
	set whichPlayerState = null
	set whichPlayer_2 = null
	set whichPlayerState_2 = null
	set whichPlayer_3 = null
	set whichPlayerState_3 = null
	set whichPlayer_4 = null
	set whichPlayerState_4 = null
	set toForce = null
	set whichPlayer_5 = null
	set f = null
	set whichForce = null
	set loc = null
	set whichForce_2 = null
	set whichPlayer_6 = null
	set f_2 = null
endfunction

function Trig_killing_Gold_Ship_Conditions takes nothing returns boolean
	if  not (GetUnitTypeId(GetDyingUnit()) == 1747989049) then
		return false
	endif
	return true
endfunction

function Trig_killing_Lumber_Ship_Actions takes nothing returns nothing
	local integer delta = 500
	local player whichPlayer = GetOwningPlayer(GetKillingUnit())
	local playerstate whichPlayerState = PLAYER_STATE_RESOURCE_LUMBER
	local player whichPlayer_2
	local playerstate whichPlayerState_2
	local integer delta_2
	local player whichPlayer_3
	local playerstate whichPlayerState_3
	local integer delta_3
	local player whichPlayer_4
	local playerstate whichPlayerState_4
	local integer delta_4
	local force toForce
	local string message
	local player whichPlayer_5
	local force f
	local force whichForce
	local location loc
	local real duration
	local force whichForce_2
	local real x
	local real y
	local real duration_2
	local player whichPlayer_6
	local force f_2
	if delta > 0 then
		if whichPlayerState == PLAYER_STATE_RESOURCE_GOLD then
			set whichPlayer_2 = whichPlayer
			set whichPlayerState_2 = PLAYER_STATE_GOLD_GATHERED
			set delta_2 = delta
			call SetPlayerState(whichPlayer_2, whichPlayerState_2, GetPlayerState(whichPlayer_2, whichPlayerState_2) + delta_2)
		elseif whichPlayerState == PLAYER_STATE_RESOURCE_LUMBER then
			set whichPlayer_3 = whichPlayer
			set whichPlayerState_3 = PLAYER_STATE_LUMBER_GATHERED
			set delta_3 = delta
			call SetPlayerState(whichPlayer_3, whichPlayerState_3, GetPlayerState(whichPlayer_3, whichPlayerState_3) + delta_3)
		endif
	endif
	set whichPlayer_4 = whichPlayer
	set whichPlayerState_4 = whichPlayerState
	set delta_4 = delta
	call SetPlayerState(whichPlayer_4, whichPlayerState_4, GetPlayerState(whichPlayer_4, whichPlayerState_4) + delta_4)
	set whichPlayer_5 = GetOwningPlayer(GetKillingUnit())
	set f = CreateForce()
	call ForceAddPlayer(f, whichPlayer_5)
	set toForce = f
	set message = "TRIGSTR_084"
	if IsPlayerInForce(GetLocalPlayer(), toForce) then
		call DisplayTextToPlayer(GetLocalPlayer(), 0., 0., message)
	endif
	set udg_TradePoint = GetUnitLoc(GetDyingUnit())
	set whichPlayer_6 = GetOwningPlayer(GetDyingUnit())
	set f_2 = CreateForce()
	call ForceAddPlayer(f_2, whichPlayer_6)
	set whichForce = f_2
	set loc = udg_TradePoint
	set duration = 2.00
	set whichForce_2 = whichForce
	set x = GetLocationX(loc)
	set y = GetLocationY(loc)
	set duration_2 = duration
	if IsPlayerInForce(GetLocalPlayer(), whichForce_2) then
		call PingMinimap(x, y, duration_2)
	endif
	call RemoveLocation(udg_TradePoint)
	set whichPlayer = null
	set whichPlayerState = null
	set whichPlayer_2 = null
	set whichPlayerState_2 = null
	set whichPlayer_3 = null
	set whichPlayerState_3 = null
	set whichPlayer_4 = null
	set whichPlayerState_4 = null
	set toForce = null
	set whichPlayer_5 = null
	set f = null
	set whichForce = null
	set loc = null
	set whichForce_2 = null
	set whichPlayer_6 = null
	set f_2 = null
endfunction

function Trig_killing_Lumber_Ship_Conditions takes nothing returns boolean
	if  not (GetUnitTypeId(GetDyingUnit()) == 1747989048) then
		return false
	endif
	return true
endfunction

function Trig_upkeep_2_Func001C takes nothing returns boolean
	local player whichPlayer = GetOwningPlayer(GetDyingUnit())
	if  not (udg_PlayerTax[GetPlayerId(whichPlayer) + 1] < 0) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_upkeep_2_Actions takes nothing returns nothing
	local player whichPlayer
	local player whichPlayer_2
	if Trig_upkeep_2_Func001C() then
		set whichPlayer = GetOwningPlayer(GetDyingUnit())
		set whichPlayer_2 = GetOwningPlayer(GetDyingUnit())
		set udg_PlayerTax[GetPlayerId(whichPlayer) + 1] = udg_PlayerTax[GetPlayerId(whichPlayer_2) + 1] + GetUnitLevel(GetDyingUnit())
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_upkeep_2_Func002C takes nothing returns boolean
	if  not (IsUnitType(GetDyingUnit(), UNIT_TYPE_STRUCTURE) == false) then
		return false
	endif
	if  not (GetUnitTypeId(GetDyingUnit()) != 1869050485) then
		return false
	endif
	if  not (IsUnitType(GetDyingUnit(), UNIT_TYPE_STRUCTURE) != true) then
		return false
	endif
	if  not (GetUnitTypeId(GetDyingUnit()) != 1747989319) then
		return false
	endif
	if  not (GetUnitTypeId(GetDyingUnit()) != 1747989324) then
		return false
	endif
	if  not (GetUnitTypeId(GetDyingUnit()) != 1747989322) then
		return false
	endif
	if  not (GetUnitTypeId(GetDyingUnit()) != 1747989323) then
		return false
	endif
	if  not (IsUnitType(GetDyingUnit(), UNIT_TYPE_HERO) != true) then
		return false
	endif
	return true
endfunction

function Trig_upkeep_2_Conditions takes nothing returns boolean
	if  not Trig_upkeep_2_Func002C() then
		return false
	endif
	return true
endfunction

function Trig_upkeep_Actions takes nothing returns nothing
	local player whichPlayer = GetOwningPlayer(GetEnteringUnit())
	local player whichPlayer_2 = GetOwningPlayer(GetEnteringUnit())
	set udg_PlayerTax[GetPlayerId(whichPlayer) + 1] = udg_PlayerTax[GetPlayerId(whichPlayer_2) + 1] - GetUnitLevel(GetEnteringUnit())
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_upkeep_Func001C takes nothing returns boolean
	if  not (IsUnitType(GetEnteringUnit(), UNIT_TYPE_STRUCTURE) == false) then
		return false
	endif
	if  not (GetUnitTypeId(GetEnteringUnit()) != 1747988793) then
		return false
	endif
	if  not (GetUnitTypeId(GetEnteringUnit()) != 1747988801) then
		return false
	endif
	if  not (GetUnitTypeId(GetEnteringUnit()) != 1747989319) then
		return false
	endif
	if  not (GetUnitTypeId(GetEnteringUnit()) != 1747989324) then
		return false
	endif
	if  not (GetUnitTypeId(GetEnteringUnit()) != 1747989322) then
		return false
	endif
	if  not (GetUnitTypeId(GetEnteringUnit()) != 1747989323) then
		return false
	endif
	if  not (GetUnitTypeId(GetEnteringUnit()) != 1747989327) then
		return false
	endif
	if  not (GetUnitTypeId(GetEnteringUnit()) != 1747989330) then
		return false
	endif
	if  not (GetUnitTypeId(GetEnteringUnit()) != 1747988553) then
		return false
	endif
	if  not (GetUnitTypeId(GetEnteringUnit()) != 1747988791) then
		return false
	endif
	if  not (GetUnitTypeId(GetEnteringUnit()) != 1747988792) then
		return false
	endif
	if  not (GetUnitTypeId(GetEnteringUnit()) != 1747989049) then
		return false
	endif
	if  not (GetUnitTypeId(GetEnteringUnit()) != 1747989329) then
		return false
	endif
	if  not (GetUnitTypeId(GetEnteringUnit()) != 1747989048) then
		return false
	endif
	if  not (IsUnitType(GetEnteringUnit(), UNIT_TYPE_STRUCTURE) != true) then
		return false
	endif
	if  not (IsUnitType(GetEnteringUnit(), UNIT_TYPE_HERO) != true) then
		return false
	endif
	return true
endfunction

function Trig_upkeep_Conditions takes nothing returns boolean
	if  not Trig_upkeep_Func001C() then
		return false
	endif
	return true
endfunction

function City_closure_impl takes integer this_3, integer cbPOP returns nothing
	local integer pop_prev
	local integer pop_growth
	local integer deviation
	local real this_4
	local integer temp
	set City_population_growth_rate[this[this_3]] = City_population_growth_rate[this[this_3]] + GetRandomReal( - 0.008, 0.009) * City_population_growth_rate[this[this_3]]
	if City_population_growth_rate[this[this_3]] >= GetRandomReal(0.002, 0.01) then
		set City_population_growth_rate[this[this_3]] = City_population_growth_rate[this[this_3]] - GetRandomReal(0.001, 0.002)
	endif
	set pop_prev = City_population[this[this_3]]
	set temp = City_population[this[this_3]]
	set this_4 = City_population[this[this_3]] * City_population_growth_rate[this[this_3]]
	set City_population[this[this_3]] = temp + R2I(this_4)
	set pop_growth = City_population[this[this_3]] - pop_prev
	set deviation = GetRandomInt( - (2 * pop_growth), pop_growth)
	set City_population[this[this_3]] = City_population[this[this_3]] + deviation
	set City_last_pop_growth[this[this_3]] = City_population[this[this_3]] - pop_prev
endfunction

function DateTime_closure_impl takes integer this_3, integer cb returns nothing
	local integer i
	local integer temp
	local multiboard receiver
	local multiboard this_4
	local string label
	local integer this_5
	local real this_6
	local integer this_7
	local real this_8
	local integer this_9
	local real this_10
	local string temp_2
	local string temp_3
	set sec[this_3] = sec[this_3] - 1.
	set i = 0
	set temp = 24 - 1
	loop
		exitwhen i > temp
		set receiver = Multiboards_multiboards[i]
		set this_4 = receiver
		set this_6 = sec[this_3] / 60.
		set this_5 = R2I(this_6)
		set temp_2 = "Income: " + I2S(this_5) + ":"
		set this_8 = ModuloReal(sec[this_3], 60.) / 10.
		set this_7 = R2I(this_8)
		set temp_3 = temp_2 + I2S(this_7)
		set this_10 = ModuloReal(ModuloReal(sec[this_3], 60.), 10.)
		set this_9 = R2I(this_10)
		set label = temp_3 + I2S(this_9)
		call MultiboardSetTitleText(this_4, label)
		set i = i + 1
	endloop
	if sec[this_3] <= 0. then
		set sec[this_3] = DateTime_kIncomeTime
	endif
	set receiver = null
	set this_4 = null
endfunction

function Loglevel_getTag takes integer this_3 returns string
	local integer temp = this_3
	if temp == 0 then
		return "|cffADADADtrace|r"
	elseif temp == 1 then
		return "|cff2685DCdebug|r"
	elseif temp == 2 then
		return "|cffFFCC00info|r"
	elseif temp == 3 then
		return "|cffF47E3Ewarning|r"
	elseif temp == 4 then
		return "|cffFB2700error|r"
	endif
	return "?"
endfunction

function compileError takes string message returns nothing
endfunction

function error takes string msg, string stackPos returns nothing
	local integer hash
	local string stacktraceStr
	local integer stacktraceIndex
	local integer stacktraceLimit
	local string stacktraceStr_2
	local integer stacktraceIndex_2
	local integer stacktraceLimit_2
	local string temp
	local string temp_2
	local string this_3
	local hashtable this_4
	local integer parentKey
	local integer childKey
	local hashtable this_5
	local integer parentKey_2
	local integer childKey_2
	local string msg_2
	local player showTo
	local integer loglvl
	local string msg_3
	local string compositeMsg
	local hashtable this_6
	local integer parentKey_3
	local integer childKey_3
	local integer value
	local real this_7
	local hashtable this_8
	local integer parentKey_4
	local integer childKey_4
	local boolean value_2
	local hashtable this_9
	local integer parentKey_5
	local integer childKey_5
	local hashtable this_10
	local integer parentKey_6
	local integer childKey_6
	local string msg_4
	local player showTo_2
	local integer loglvl_2
	local string msg_5
	local string compositeMsg_2
	local hashtable this_11
	local integer parentKey_7
	local integer childKey_7
	local boolean value_3
	local string msg_6
	local player showTo_3
	local integer loglvl_3
	local string msg_7
	local string compositeMsg_3
	local hashtable this_12
	local integer parentKey_8
	local integer childKey_8
	local boolean value_4
	local hashtable this_13
	local integer parentKey_9
	local integer childKey_9
	local integer value_5
	local real this_14
	local string msg_8
	local player showTo_4
	local integer loglvl_4
	local string msg_9
	local string compositeMsg_4
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if false then
		call compileError("ERROR: " + msg)
	else
		if  not false then
			set this_3 = msg
			set hash = StringHash(this_3)
			set this_4 = ErrorHandling_HT
			set parentKey = -1
			set childKey = hash
			if HaveSavedInteger(this_4, parentKey, childKey) then
				set this_5 = ErrorHandling_HT
				set parentKey_2 = -1
				set childKey_2 = hash
				if LoadInteger(this_5, parentKey_2, childKey_2) + 60 < GameTimer_currentTime then
					set temp = msg
					set stacktraceStr = ""
					set stacktraceIndex = wurst_stack_depth
					set stacktraceLimit = 0
					loop
						set stacktraceIndex = stacktraceIndex - 1
						set stacktraceLimit = stacktraceLimit + 1
						exitwhen stacktraceLimit > 20
						exitwhen stacktraceIndex < 0
						set stacktraceStr = stacktraceStr + "\n   " + wurst_stack[stacktraceIndex]
					endloop
					set msg_2 = temp + stacktraceStr
					set showTo = Player_localPlayer
					set loglvl = 4
					set msg_3 = msg_2
					if 2 <= loglvl then
						set compositeMsg = Loglevel_getTag(loglvl) + " - " + msg_3
						call DisplayTimedTextToPlayer(showTo, 0., 0., 45., compositeMsg)
					endif
					set this_6 = ErrorHandling_HT
					set parentKey_3 = -1
					set childKey_3 = hash
					set this_7 = GameTimer_currentTime
					set value = R2I(this_7)
					call SaveInteger(this_6, parentKey_3, childKey_3, value)
					set this_8 = ErrorHandling_HT
					set parentKey_4 = -1
					set childKey_4 = hash
					set value_2 = false
					call SaveBoolean(this_8, parentKey_4, childKey_4, value_2)
				else
					set this_9 = ErrorHandling_HT
					set parentKey_5 = -1
					set childKey_5 = hash
					if HaveSavedBoolean(this_9, parentKey_5, childKey_5) then
						set this_10 = ErrorHandling_HT
						set parentKey_6 = -1
						set childKey_6 = hash
						if  not LoadBoolean(this_10, parentKey_6, childKey_6) then
							set msg_4 = "|cffFF3A29Excessive repeating errors are being omitted"
							set showTo_2 = Player_localPlayer
							set loglvl_2 = 4
							set msg_5 = msg_4
							if 2 <= loglvl_2 then
								set compositeMsg_2 = Loglevel_getTag(loglvl_2) + " - " + msg_5
								call DisplayTimedTextToPlayer(showTo_2, 0., 0., 45., compositeMsg_2)
							endif
							set this_11 = ErrorHandling_HT
							set parentKey_7 = -1
							set childKey_7 = hash
							set value_3 = true
							call SaveBoolean(this_11, parentKey_7, childKey_7, value_3)
						endif
					else
						set msg_6 = "|cffFF3A29Excessive repeating errors are being omitted"
						set showTo_3 = Player_localPlayer
						set loglvl_3 = 4
						set msg_7 = msg_6
						if 2 <= loglvl_3 then
							set compositeMsg_3 = Loglevel_getTag(loglvl_3) + " - " + msg_7
							call DisplayTimedTextToPlayer(showTo_3, 0., 0., 45., compositeMsg_3)
						endif
						set this_12 = ErrorHandling_HT
						set parentKey_8 = -1
						set childKey_8 = hash
						set value_4 = true
						call SaveBoolean(this_12, parentKey_8, childKey_8, value_4)
					endif
				endif
			else
				set this_13 = ErrorHandling_HT
				set parentKey_9 = -1
				set childKey_9 = hash
				set this_14 = GameTimer_currentTime
				set value_5 = R2I(this_14)
				call SaveInteger(this_13, parentKey_9, childKey_9, value_5)
				set temp_2 = "Message: " + msg
				set stacktraceStr_2 = ""
				set stacktraceIndex_2 = wurst_stack_depth
				set stacktraceLimit_2 = 0
				loop
					set stacktraceIndex_2 = stacktraceIndex_2 - 1
					set stacktraceLimit_2 = stacktraceLimit_2 + 1
					exitwhen stacktraceLimit_2 > 20
					exitwhen stacktraceIndex_2 < 0
					set stacktraceStr_2 = stacktraceStr_2 + "\n   " + wurst_stack[stacktraceIndex_2]
				endloop
				set msg_8 = temp_2 + stacktraceStr_2
				set showTo_4 = Player_localPlayer
				set loglvl_4 = 4
				set msg_9 = msg_8
				if 2 <= loglvl_4 then
					set compositeMsg_4 = Loglevel_getTag(loglvl_4) + " - " + msg_9
					call DisplayTimedTextToPlayer(showTo_4, 0., 0., 45., compositeMsg_4)
				endif
			endif
		endif
		call I2S(1 / 0)
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_4 = null
	set this_5 = null
	set showTo = null
	set this_6 = null
	set this_8 = null
	set this_9 = null
	set this_10 = null
	set showTo_2 = null
	set this_11 = null
	set showTo_3 = null
	set this_12 = null
	set this_13 = null
	set showTo_4 = null
endfunction

function dispatch_LinkedList_LinkedList_LinkedList_get takes integer this_3, integer index, string stackPos returns integer
	local integer LinkedList_LinkedList_get_result
	local integer this_4
	local integer index_2
	local string stackPos_2
	local integer stackTrace_tempReturn
	local integer this_5
	local integer index_3
	local string stackPos_3
	local integer LinkedList_LinkedList_getEntry_result
	local integer this_6
	local integer index_4
	local integer entry
	local integer i
	local integer temp
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if LinkedList_typeId[this_3] == 0 then
		if this_3 == 0 then
			call error("Nullpointer exception when calling LinkedList.get", "when calling error in LinkedList, line 50")
		else
			call error("Called LinkedList.get on invalid object.", "when calling error in LinkedList, line 50")
		endif
	endif
	set this_4 = this_3
	set index_2 = index
	set stackPos_2 = "when calling get in LinkedList, line 50"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_5 = this_4
	set index_3 = index_2
	set stackPos_3 = "when calling getEntry in LinkedList, line 51"
	set wurst_stack[wurst_stack_depth] = stackPos_3
	set wurst_stack_depth = wurst_stack_depth + 1
	if LinkedList_typeId[this_5] == 0 then
		if this_5 == 0 then
			call error("Nullpointer exception when calling LinkedList.getEntry", "when calling error in LinkedList, line 366")
		else
			call error("Called LinkedList.getEntry on invalid object.", "when calling error in LinkedList, line 366")
		endif
	endif
	set this_6 = this_5
	set index_4 = index_3
	set entry = LinkedList_dummy[this_6]
	set i = 0
	set temp = index_4
	loop
		exitwhen i > temp
		set entry = LLEntry_next[entry]
		set i = i + 1
	endloop
	set LinkedList_LinkedList_getEntry_result = entry
	set wurst_stack_depth = wurst_stack_depth - 1
	set stackTrace_tempReturn = LLEntry_elem[LinkedList_LinkedList_getEntry_result]
	set wurst_stack_depth = wurst_stack_depth - 1
	set LinkedList_LinkedList_get_result = stackTrace_tempReturn
	set wurst_stack_depth = wurst_stack_depth - 1
	return LinkedList_LinkedList_get_result
endfunction

function City_countTax takes integer this_3, string stackPos returns integer
	local integer tax
	local integer base_tax
	local integer i
	local integer temp
	local integer count_tax
	local group surrounds
	local group iterator
	local integer pop_tax
	local integer this_4
	local string stackPos_2
	local integer LinkedList_LinkedList_size_result
	local integer this_5
	local unit this_6
	local real radius
	local location whichLocation
	local real radius_2
	local location whichLocation_2
	local boolexpr filter
	local group g
	local group this_7
	local group this_8
	local group this_9
	local unit iterUnit
	local group this_10
	local group this_11
	local group this_12
	local real this_13
	local integer this_14
	local integer this_15
	local string stackPos_3
	local real City_City_countPublicOrder_result
	local integer this_16
	local integer this_17
	local real temp_2
	local real temp_3
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set tax = 0
	set base_tax = 0
	set i = 0
	set this_4 = City_kCityTypes
	set stackPos_2 = "when calling size in City, line 127"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if LinkedList_typeId[this_4] == 0 then
		if this_4 == 0 then
			call error("Nullpointer exception when calling LinkedList.size", "when calling error in LinkedList, line 135")
		else
			call error("Called LinkedList.size on invalid object.", "when calling error in LinkedList, line 135")
		endif
	endif
	set this_5 = this_4
	set LinkedList_LinkedList_size_result = LinkedList_size[this_5]
	set wurst_stack_depth = wurst_stack_depth - 1
	set temp = LinkedList_LinkedList_size_result
	loop
		exitwhen i > temp
		set this_6 = City_city_unit[this_3]
		if GetUnitTypeId(this_6) == dispatch_LinkedList_LinkedList_LinkedList_get(City_kCityTypes, i, "when calling get in City, line 128") then
			set base_tax = dispatch_LinkedList_LinkedList_LinkedList_get(City_kCityBaseTax, i, "when calling get in City, line 129")
		endif
		set i = i + 1
	endloop
	set tax = tax + base_tax
	set count_tax = 0
	set radius = 1000.0
	set whichLocation = Location(City_city_pos_x[this_3], City_city_pos_y[this_3])
	set radius_2 = radius
	set whichLocation_2 = whichLocation
	set filter = null
	set g = CreateGroup()
	call GroupEnumUnitsInRangeOfLoc(g, whichLocation_2, radius_2, filter)
	call DestroyBoolExpr(filter)
	set surrounds = g
	set this_7 = surrounds
	set Group_iterGroup = CreateGroup()
	call ForGroup(this_7, ref_function_Group_closure_impl)
	set iterator = Group_iterGroup
	loop
		set this_8 = iterator
		exitwhen  not (FirstOfGroup(this_8) != null)
		set this_9 = iterator
		set iterUnit = FirstOfGroup(this_9)
		call GroupRemoveUnit(this_9, iterUnit)
	endloop
	set this_10 = iterator
	set this_11 = this_10
	call GroupClear(this_11)
	set this_12 = this_10
	call DestroyGroup(this_12)
	set tax = tax + count_tax
	set this_14 = City_population[this_3]
	set temp_3 = SquareRoot(this_14 * 1.)
	set this_15 = this_3
	set stackPos_3 = "when calling countPublicOrder in City, line 143"
	set wurst_stack[wurst_stack_depth] = stackPos_3
	set wurst_stack_depth = wurst_stack_depth + 1
	if City_typeId[this_15] == 0 then
		if this_15 == 0 then
			call error("Nullpointer exception when calling City.countPublicOrder", "when calling error in City, line 154")
		else
			call error("Called City.countPublicOrder on invalid object.", "when calling error in City, line 154")
		endif
	endif
	set this_16 = this_15
	set temp_2 = 100.0 - City_population_growth_rate[this_16] * 1000.
	set this_17 = City_population[this_16]
	set City_public_order_last[this_16] = temp_2 - SquareRoot(this_17 * 1.) / 17.
	set City_City_countPublicOrder_result = City_public_order_last[this_16]
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_13 = temp_3 * City_City_countPublicOrder_result / 500.
	set pop_tax = R2I(this_13)
	set tax = tax + pop_tax
	set wurst_stack_depth = wurst_stack_depth - 1
	set surrounds = null
	set iterator = null
	set this_6 = null
	set whichLocation = null
	set whichLocation_2 = null
	set filter = null
	set g = null
	set this_7 = null
	set this_8 = null
	set this_9 = null
	set iterUnit = null
	set this_10 = null
	set this_11 = null
	set this_12 = null
	return tax
endfunction

function dispatch_ForGroupCallback_destroyForGroupCallback takes integer this_3, string stackPos returns nothing
	local integer this_4
	local string stackPos_2
	local integer obj
	local string stackPos_3
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if ForGroupCallback_typeId[this_3] == 0 then
		if this_3 == 0 then
			call error("Nullpointer exception when calling ForGroupCallback.ForGroupCallback", "when calling error in ClosureForGroups, line 3")
		else
			call error("Called ForGroupCallback.ForGroupCallback on invalid object.", "when calling error in ClosureForGroups, line 3")
		endif
	endif
	set this_4 = this_3
	set stackPos_2 = "when calling destroyForGroupCallback in ClosureForGroups, line 3"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	set obj = this_4
	set stackPos_3 = "when calling ForGroupCallback in ClosureForGroups, line 3"
	set wurst_stack[wurst_stack_depth] = stackPos_3
	set wurst_stack_depth = wurst_stack_depth + 1
	if ForGroupCallback_typeId[obj] == 0 then
		call error("Double free: object of type ForGroupCallback", "when calling error in ClosureForGroups, line 3")
	else
		set ForGroupCallback_nextFree[ForGroupCallback_firstFree] = obj
		set ForGroupCallback_firstFree = ForGroupCallback_firstFree + 1
		set ForGroupCallback_typeId[obj] = 0
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function forUnitsAll takes integer c, string stackPos returns nothing
	local integer i
	local integer temp
	local integer c_2
	local group this_3
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set i = 0
	set temp = bj_MAX_PLAYER_SLOTS - 1
	loop
		exitwhen i > temp
		set c_2 = c
		set ClosureForGroups_tempCallbacks[ClosureForGroups_tempCallbacksCount] = c_2
		set ClosureForGroups_tempCallbacksCount = ClosureForGroups_tempCallbacksCount + 1
		call GroupEnumUnitsOfPlayer(ClosureForGroups_DUMMY_GROUP, Player_players[i], ClosureForGroups_filter)
		set this_3 = ClosureForGroups_DUMMY_GROUP
		call GroupClear(this_3)
		set ClosureForGroups_tempCallbacksCount = ClosureForGroups_tempCallbacksCount - 1
		set i = i + 1
	endloop
	call dispatch_ForGroupCallback_destroyForGroupCallback(c, "when calling ForGroupCallback in ClosureForGroups, line 66")
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_3 = null
endfunction

function countIncomeForAll takes string stackPos returns nothing
	local integer i
	local integer temp
	local integer i_2
	local integer temp_2
	local integer pl_id
	local integer clVar
	local player this_3
	local unit this_4
	local integer this_5
	local string stackPos_2
	local unit City_City_getCityUnit_result
	local integer this_6
	local player this_7
	local player this_8
	local player this_9
	local unit this_10
	local integer this_11
	local string stackPos_3
	local unit City_City_getCityUnit_result_2
	local integer this_12
	local integer this_13
	local string stackPos_4
	local integer City_City_countTax_result
	local string stackPos_5
	local integer this_14
	local boolean andLeft
	local integer temp_3
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set i = 0
	set temp = 24 - 1
	loop
		exitwhen i > temp
		set Economy_gold_change[i] = 0
		set Economy_lumb_change[i] = 0
		set i = i + 1
	endloop
	set i_2 = 0
	set temp_2 = City_cityCount - 1
	loop
		exitwhen i_2 > temp_2
		set this_5 = City_cities[i_2]
		set stackPos_2 = "when calling getCityUnit in Economy, line 26"
		set wurst_stack[wurst_stack_depth] = stackPos_2
		set wurst_stack_depth = wurst_stack_depth + 1
		if City_typeId[this_5] == 0 then
			if this_5 == 0 then
				call error("Nullpointer exception when calling City.getCityUnit", "when calling error in City, line 88")
			else
				call error("Called City.getCityUnit on invalid object.", "when calling error in City, line 88")
			endif
		endif
		set this_6 = this_5
		set City_City_getCityUnit_result = City_city_unit[this_6]
		set wurst_stack_depth = wurst_stack_depth - 1
		set this_4 = City_City_getCityUnit_result
		set this_3 = GetOwningPlayer(this_4)
		set pl_id = GetPlayerId(this_3)
		set this_11 = City_cities[i_2]
		set stackPos_3 = "when calling getCityUnit in Economy, line 27"
		set wurst_stack[wurst_stack_depth] = stackPos_3
		set wurst_stack_depth = wurst_stack_depth + 1
		if City_typeId[this_11] == 0 then
			if this_11 == 0 then
				call error("Nullpointer exception when calling City.getCityUnit", "when calling error in City, line 88")
			else
				call error("Called City.getCityUnit on invalid object.", "when calling error in City, line 88")
			endif
		endif
		set this_12 = this_11
		set City_City_getCityUnit_result_2 = City_city_unit[this_12]
		set wurst_stack_depth = wurst_stack_depth - 1
		set this_10 = City_City_getCityUnit_result_2
		set this_7 = GetOwningPlayer(this_10)
		set this_8 = this_7
		if GetPlayerSlotState(this_8) == PLAYER_SLOT_STATE_PLAYING then
			set this_9 = this_7
			set andLeft = GetPlayerController(this_9) == MAP_CONTROL_USER
		else
			set andLeft = false
		endif
		if andLeft then
			set temp_3 = Economy_gold_change[pl_id]
			set this_13 = City_cities[i_2]
			set stackPos_4 = "when calling countTax in Economy, line 28"
			set wurst_stack[wurst_stack_depth] = stackPos_4
			set wurst_stack_depth = wurst_stack_depth + 1
			if City_typeId[this_13] == 0 then
				if this_13 == 0 then
					call error("Nullpointer exception when calling City.countTax", "when calling error in City, line 122")
				else
					call error("Called City.countTax on invalid object.", "when calling error in City, line 122")
				endif
			endif
			set City_City_countTax_result = City_countTax(this_13, "when calling countTax in City, line 122")
			set wurst_stack_depth = wurst_stack_depth - 1
			set Economy_gold_change[pl_id] = temp_3 + City_City_countTax_result
		endif
		set i_2 = i_2 + 1
	endloop
	set stackPos_5 = "when calling alloc_Closure in Economy, line 31"
	set wurst_stack[wurst_stack_depth] = stackPos_5
	set wurst_stack_depth = wurst_stack_depth + 1
	if ForGroupCallback_firstFree == 0 then
		if ForGroupCallback_maxIndex < 32768 then
			set ForGroupCallback_maxIndex = ForGroupCallback_maxIndex + 1
			set this_14 = ForGroupCallback_maxIndex
			set ForGroupCallback_typeId[this_14] = 658
		else
			call error("Out of memory: Could not create Closure.", "when calling error in Economy, line 31")
			set this_14 = 0
		endif
	else
		set ForGroupCallback_firstFree = ForGroupCallback_firstFree - 1
		set this_14 = ForGroupCallback_nextFree[ForGroupCallback_firstFree]
		set ForGroupCallback_typeId[this_14] = 658
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set clVar = this_14
	call forUnitsAll(clVar, "when calling forUnitsAll in Economy, line 31")
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_3 = null
	set this_4 = null
	set City_City_getCityUnit_result = null
	set this_7 = null
	set this_8 = null
	set this_9 = null
	set this_10 = null
	set City_City_getCityUnit_result_2 = null
endfunction

function Economy_closure_impl takes integer this_3, integer cbINCOME, string stackPos returns nothing
	local integer i
	local integer temp
	local integer cur_gold
	local integer cur_lumb
	local integer this_4
	local string stackPos_2
	local boolean PlayerStats_PlayerStats_isInGame_result
	local integer this_5
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call countIncomeForAll("when calling countIncomeForAll in Economy, line 48")
	set i = 0
	set temp = 24 - 1
	loop
		exitwhen i > temp
		set this_4 = PlayerStats_player_stats[i]
		set stackPos_2 = "when calling isInGame in Economy, line 51"
		set wurst_stack[wurst_stack_depth] = stackPos_2
		set wurst_stack_depth = wurst_stack_depth + 1
		if PlayerStats_typeId[this_4] == 0 then
			if this_4 == 0 then
				call error("Nullpointer exception when calling PlayerStats.isInGame", "when calling error in PlayerStats, line 26")
			else
				call error("Called PlayerStats.isInGame on invalid object.", "when calling error in PlayerStats, line 26")
			endif
		endif
		set this_5 = this_4
		set PlayerStats_PlayerStats_isInGame_result = PlayerStats_is_in_game[this_5]
		set wurst_stack_depth = wurst_stack_depth - 1
		if PlayerStats_PlayerStats_isInGame_result then
			set cur_gold = GetPlayerState(Player_players[i], PLAYER_STATE_RESOURCE_GOLD)
			set cur_lumb = GetPlayerState(Player_players[i], PLAYER_STATE_RESOURCE_LUMBER)
			call SetPlayerState(Player_players[i], PLAYER_STATE_RESOURCE_GOLD, cur_gold + Economy_gold_change[i])
			call SetPlayerState(Player_players[i], PLAYER_STATE_RESOURCE_LUMBER, cur_lumb + Economy_lumb_change[i])
		endif
		set i = i + 1
	endloop
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function sign takes real x returns real
	if x > 0. then
		return 1.
	elseif x < 0. then
		return -1.
	else
		return 0.
	endif
endfunction

function getStringColoredBasedOnSign takes integer x returns string
	local string sgn = "|cff15ff00+"
	local integer this_3 = x
	local integer this_4
	local string temp
	if sign(this_3 * 1.) == -1. then
		set sgn = "|cffff0000"
	endif
	set temp = sgn
	set this_4 = x
	return temp + I2S(this_4) + "|r"
endfunction

function Economy_closure_impl_2 takes integer this_3, integer cbINCOME_MULTIBOARD, string stackPos returns nothing
	local integer i
	local integer temp
	local integer this_4
	local string stackPos_2
	local boolean PlayerStats_PlayerStats_isInGame_result
	local integer this_5
	local multiboard this_6
	local integer x
	local integer y
	local string wval
	local multiboarditem mbi
	local multiboard this_7
	local integer row
	local integer column
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call countIncomeForAll("when calling countIncomeForAll in Economy, line 41")
	set i = 0
	set temp = 24 - 1
	loop
		exitwhen i > temp
		set this_4 = PlayerStats_player_stats[i]
		set stackPos_2 = "when calling isInGame in Economy, line 43"
		set wurst_stack[wurst_stack_depth] = stackPos_2
		set wurst_stack_depth = wurst_stack_depth + 1
		if PlayerStats_typeId[this_4] == 0 then
			if this_4 == 0 then
				call error("Nullpointer exception when calling PlayerStats.isInGame", "when calling error in PlayerStats, line 26")
			else
				call error("Called PlayerStats.isInGame on invalid object.", "when calling error in PlayerStats, line 26")
			endif
		endif
		set this_5 = this_4
		set PlayerStats_PlayerStats_isInGame_result = PlayerStats_is_in_game[this_5]
		set wurst_stack_depth = wurst_stack_depth - 1
		if PlayerStats_PlayerStats_isInGame_result then
			set this_6 = Multiboards_multiboards[i]
			set x = Multiboards_kMBIncome[0]
			set y = Multiboards_kMBIncome[1]
			set wval = getStringColoredBasedOnSign(Economy_gold_change[i])
			set this_7 = this_6
			set row = y
			set column = x
			set mbi = MultiboardGetItem(this_7, row, column)
			call MultiboardSetItemValue(mbi, wval)
		endif
		set i = i + 1
	endloop
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_6 = null
	set mbi = null
	set this_7 = null
endfunction

function City_getPopulationStr takes integer this_3 returns string
	local string str
	local integer this_4
	local integer this_5
	local real this_6
	local integer this_7
	local real this_8
	local integer this_9
	local real this_10
	local string temp
	if false then
		set this_4 = City_population[this_3]
		return I2S(this_4)
	endif
	set str = ""
	if City_population[this_3] < 100000 then
		set this_6 = City_population[this_3] * 1. / 1000
		set this_5 = R2I(this_6)
		set temp = I2S(this_5) + ","
		set this_8 = ModuloReal(City_population[this_3], 1000) / 100.
		set this_7 = R2I(this_8)
		set str = temp + I2S(this_7) + "k"
	else
		set this_10 = City_population[this_3] * 1. / 1000
		set this_9 = R2I(this_10)
		set str = I2S(this_9) + "k"
	endif
	return str
endfunction

function City_getPublicOrderStr takes integer this_3, string stackPos returns string
	local real po
	local integer clr_red
	local integer clr_green
	local integer clr_blue
	local string stackTrace_tempReturn
	local integer this_4
	local string stackPos_2
	local real City_City_countPublicOrder_result
	local integer this_5
	local integer this_6
	local real this_7
	local real this_8
	local string this_9
	local integer this_red
	local integer this_green
	local integer this_blue
	local integer number
	local integer firstpart
	local integer secondpart
	local integer number_2
	local integer firstpart_2
	local integer secondpart_2
	local integer number_3
	local integer firstpart_3
	local integer secondpart_3
	local integer this_10
	local real this_11
	local real temp
	local integer temp_2
	local string temp_3
	local string temp_4
	local string temp_5
	local integer tuple_temp
	local integer tuple_temp_2
	local integer tuple_temp_3
	local integer tuple_temp_4
	local integer tuple_temp_5
	local integer tuple_temp_6
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_4 = this_3
	set stackPos_2 = "when calling countPublicOrder in City, line 159"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if City_typeId[this_4] == 0 then
		if this_4 == 0 then
			call error("Nullpointer exception when calling City.countPublicOrder", "when calling error in City, line 154")
		else
			call error("Called City.countPublicOrder on invalid object.", "when calling error in City, line 154")
		endif
	endif
	set this_5 = this_4
	set temp = 100.0 - City_population_growth_rate[this_5] * 1000.
	set this_6 = City_population[this_5]
	set City_public_order_last[this_5] = temp - SquareRoot(this_6 * 1.) / 17.
	set City_City_countPublicOrder_result = City_public_order_last[this_5]
	set wurst_stack_depth = wurst_stack_depth - 1
	set po = City_City_countPublicOrder_result
	set this_7 = 255. - po / 100. * 255.
	set temp_2 = R2I(this_7)
	set this_8 = po / 100. * 255.
	set tuple_temp = temp_2
	set tuple_temp_2 = R2I(this_8)
	set tuple_temp_3 = 0
	set clr_red = tuple_temp
	set clr_green = tuple_temp_2
	set clr_blue = tuple_temp_3
	set tuple_temp_4 = clr_red
	set tuple_temp_5 = clr_green
	set tuple_temp_6 = clr_blue
	set this_red = tuple_temp_4
	set this_green = tuple_temp_5
	set this_blue = tuple_temp_6
	set number = this_red
	set firstpart = number / 16
	set secondpart = number - firstpart * 16
	set temp_3 = "|cff" + Colors_hexs[firstpart] + Colors_hexs[secondpart]
	set number_2 = this_green
	set firstpart_2 = number_2 / 16
	set secondpart_2 = number_2 - firstpart_2 * 16
	set temp_4 = temp_3 + Colors_hexs[firstpart_2] + Colors_hexs[secondpart_2]
	set number_3 = this_blue
	set firstpart_3 = number_3 / 16
	set secondpart_3 = number_3 - firstpart_3 * 16
	set this_9 = temp_4 + Colors_hexs[firstpart_3] + Colors_hexs[secondpart_3]
	set temp_5 = StringCase(this_9, false)
	set this_11 = po
	set this_10 = R2I(this_11)
	set stackTrace_tempReturn = temp_5 + I2S(this_10) + "%|r"
	set wurst_stack_depth = wurst_stack_depth - 1
	return stackTrace_tempReturn
endfunction

function dispatch_City_City_City_getCityNameColored takes integer this_3, string stackPos returns string
	local string City_City_getCityNameColored_result
	local integer this_4
	local integer this_red
	local integer this_green
	local integer this_blue
	local integer number
	local integer firstpart
	local integer secondpart
	local integer number_2
	local integer firstpart_2
	local integer secondpart_2
	local integer number_3
	local integer firstpart_3
	local integer secondpart_3
	local string temp
	local string temp_2
	local integer tuple_temp
	local integer tuple_temp_2
	local integer tuple_temp_3
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if City_typeId[this_3] == 0 then
		if this_3 == 0 then
			call error("Nullpointer exception when calling City.getCityNameColored", "when calling error in City, line 76")
		else
			call error("Called City.getCityNameColored on invalid object.", "when calling error in City, line 76")
		endif
	endif
	set this_4 = this_3
	set tuple_temp = Forces_forces_colors_red[City_force_id[this_4]]
	set tuple_temp_2 = Forces_forces_colors_green[City_force_id[this_4]]
	set tuple_temp_3 = Forces_forces_colors_blue[City_force_id[this_4]]
	set this_red = tuple_temp
	set this_green = tuple_temp_2
	set this_blue = tuple_temp_3
	set number = this_red
	set firstpart = number / 16
	set secondpart = number - firstpart * 16
	set temp = "|cff" + Colors_hexs[firstpart] + Colors_hexs[secondpart]
	set number_2 = this_green
	set firstpart_2 = number_2 / 16
	set secondpart_2 = number_2 - firstpart_2 * 16
	set temp_2 = temp + Colors_hexs[firstpart_2] + Colors_hexs[secondpart_2]
	set number_3 = this_blue
	set firstpart_3 = number_3 / 16
	set secondpart_3 = number_3 - firstpart_3 * 16
	set City_City_getCityNameColored_result = temp_2 + Colors_hexs[firstpart_3] + Colors_hexs[secondpart_3] + City_city_name[this_4] + "|r"
	set wurst_stack_depth = wurst_stack_depth - 1
	return City_City_getCityNameColored_result
endfunction

function multiboard_setItemCentered takes multiboard this_3, integer x, integer y, string wval, real width returns nothing
	local multiboard this_4 = this_3
	local integer row = y
	local integer column = x
	local multiboarditem mbi = MultiboardGetItem(this_4, row, column)
	local string centered = wval
	local real this_5 = width / 0.004
	local integer chars = R2I(this_5)
	local integer temp_2 = chars
	local string this_7 = wval
	local real this_6 = (temp_2 - StringLength(this_7)) * 1. / 2
	local integer spaces_num = R2I(this_6)
	local string spaces_chars = ""
	local integer i = 0
	local integer temp = spaces_num - 1
	loop
		exitwhen i > temp
		set spaces_chars = spaces_chars + "-"
		set i = i + 1
	endloop
	if ModuloReal(spaces_num, 2) == 1. then
		set centered = "-" + centered
	endif
	set centered = spaces_chars + centered + spaces_chars
	call MultiboardSetItemValue(mbi, centered)
	set mbi = null
	set this_4 = null
endfunction

function PlayerStats_refreshMultiboardCity takes integer this_3, string stackPos returns nothing
	local integer pl_id
	local integer tax
	local string public_order_str
	local string population_str
	local string population_growth_str
	local multiboard receiver
	local multiboard receiver_2
	local multiboard receiver_3
	local multiboard receiver_4
	local player this_4
	local integer this_5
	local string stackPos_2
	local integer City_City_countTax_result
	local integer this_6
	local string stackPos_3
	local string City_City_getPublicOrderStr_result
	local integer this_7
	local string stackPos_4
	local string City_City_getPopulationStr_result
	local integer this_8
	local string stackPos_5
	local string City_City_getPopulationGrowthStr_result
	local integer this_9
	local multiboard this_10
	local integer x
	local integer y
	local string wval
	local multiboarditem mbi
	local multiboard this_11
	local integer row
	local integer column
	local integer this_12
	local multiboard this_13
	local integer x_2
	local integer y_2
	local string wval_2
	local multiboarditem mbi_2
	local multiboard this_14
	local integer row_2
	local integer column_2
	local multiboard this_15
	local integer x_3
	local integer y_3
	local string wval_3
	local multiboarditem mbi_3
	local multiboard this_16
	local integer row_3
	local integer column_3
	local multiboard this_17
	local integer x_4
	local integer y_4
	local string wval_4
	local multiboarditem mbi_4
	local multiboard this_18
	local integer row_4
	local integer column_4
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if PlayerStats_selected_city_id[this_3] == -1 then
		set wurst_stack_depth = wurst_stack_depth - 1
		set receiver = null
		set receiver_2 = null
		set receiver_3 = null
		set receiver_4 = null
		set this_4 = null
		set this_10 = null
		set mbi = null
		set this_11 = null
		set this_13 = null
		set mbi_2 = null
		set this_14 = null
		set this_15 = null
		set mbi_3 = null
		set this_16 = null
		set this_17 = null
		set mbi_4 = null
		set this_18 = null
		return
	endif
	set this_4 = PlayerStats_pl[this_3]
	set pl_id = GetPlayerId(this_4)
	call multiboard_setItemCentered(Multiboards_multiboards[pl_id], Multiboards_kMBCityName[0], Multiboards_kMBCityName[1], dispatch_City_City_City_getCityNameColored(City_cities[PlayerStats_selected_city_id[this_3]], "when calling getCityNameColored in PlayerStats, line 54"), 0.21)
	set this_5 = City_cities[PlayerStats_selected_city_id[this_3]]
	set stackPos_2 = "when calling countTax in PlayerStats, line 62"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if City_typeId[this_5] == 0 then
		if this_5 == 0 then
			call error("Nullpointer exception when calling City.countTax", "when calling error in City, line 122")
		else
			call error("Called City.countTax on invalid object.", "when calling error in City, line 122")
		endif
	endif
	set City_City_countTax_result = City_countTax(this_5, "when calling countTax in City, line 122")
	set wurst_stack_depth = wurst_stack_depth - 1
	set tax = City_City_countTax_result
	set this_6 = City_cities[PlayerStats_selected_city_id[this_3]]
	set stackPos_3 = "when calling getPublicOrderStr in PlayerStats, line 63"
	set wurst_stack[wurst_stack_depth] = stackPos_3
	set wurst_stack_depth = wurst_stack_depth + 1
	if City_typeId[this_6] == 0 then
		if this_6 == 0 then
			call error("Nullpointer exception when calling City.getPublicOrderStr", "when calling error in City, line 158")
		else
			call error("Called City.getPublicOrderStr on invalid object.", "when calling error in City, line 158")
		endif
	endif
	set City_City_getPublicOrderStr_result = City_getPublicOrderStr(this_6, "when calling getPublicOrderStr in City, line 158")
	set wurst_stack_depth = wurst_stack_depth - 1
	set public_order_str = City_City_getPublicOrderStr_result
	set this_7 = City_cities[PlayerStats_selected_city_id[this_3]]
	set stackPos_4 = "when calling getPopulationStr in PlayerStats, line 64"
	set wurst_stack[wurst_stack_depth] = stackPos_4
	set wurst_stack_depth = wurst_stack_depth + 1
	if City_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling City.getPopulationStr", "when calling error in City, line 179")
		else
			call error("Called City.getPopulationStr on invalid object.", "when calling error in City, line 179")
		endif
	endif
	set City_City_getPopulationStr_result = City_getPopulationStr(this_7)
	set wurst_stack_depth = wurst_stack_depth - 1
	set population_str = City_City_getPopulationStr_result
	set this_8 = City_cities[PlayerStats_selected_city_id[this_3]]
	set stackPos_5 = "when calling getPopulationGrowthStr in PlayerStats, line 65"
	set wurst_stack[wurst_stack_depth] = stackPos_5
	set wurst_stack_depth = wurst_stack_depth + 1
	if City_typeId[this_8] == 0 then
		if this_8 == 0 then
			call error("Nullpointer exception when calling City.getPopulationGrowthStr", "when calling error in City, line 176")
		else
			call error("Called City.getPopulationGrowthStr on invalid object.", "when calling error in City, line 176")
		endif
	endif
	set this_9 = this_8
	set City_City_getPopulationGrowthStr_result = getStringColoredBasedOnSign(City_last_pop_growth[this_9])
	set wurst_stack_depth = wurst_stack_depth - 1
	set population_growth_str = City_City_getPopulationGrowthStr_result
	set receiver = Multiboards_multiboards[pl_id]
	set this_10 = receiver
	set x = Multiboards_kMBCityTax[0]
	set y = Multiboards_kMBCityTax[1]
	set this_12 = tax
	set wval = I2S(this_12)
	set this_11 = this_10
	set row = y
	set column = x
	set mbi = MultiboardGetItem(this_11, row, column)
	call MultiboardSetItemValue(mbi, wval)
	set receiver_2 = receiver
	set this_13 = receiver_2
	set x_2 = Multiboards_kMBCityPublicOrder[0]
	set y_2 = Multiboards_kMBCityPublicOrder[1]
	set wval_2 = public_order_str
	set this_14 = this_13
	set row_2 = y_2
	set column_2 = x_2
	set mbi_2 = MultiboardGetItem(this_14, row_2, column_2)
	call MultiboardSetItemValue(mbi_2, wval_2)
	set receiver_3 = receiver_2
	set this_15 = receiver_3
	set x_3 = Multiboards_kMBCityPop[0]
	set y_3 = Multiboards_kMBCityPop[1]
	set wval_3 = population_str
	set this_16 = this_15
	set row_3 = y_3
	set column_3 = x_3
	set mbi_3 = MultiboardGetItem(this_16, row_3, column_3)
	call MultiboardSetItemValue(mbi_3, wval_3)
	set receiver_4 = receiver_3
	set this_17 = receiver_4
	set x_4 = Multiboards_kMBCityPopGrowth[0]
	set y_4 = Multiboards_kMBCityPopGrowth[1]
	set wval_4 = population_growth_str
	set this_18 = this_17
	set row_4 = y_4
	set column_4 = x_4
	set mbi_4 = MultiboardGetItem(this_18, row_4, column_4)
	call MultiboardSetItemValue(mbi_4, wval_4)
	set wurst_stack_depth = wurst_stack_depth - 1
	set receiver = null
	set receiver_2 = null
	set receiver_3 = null
	set receiver_4 = null
	set this_4 = null
	set this_10 = null
	set mbi = null
	set this_11 = null
	set this_13 = null
	set mbi_2 = null
	set this_14 = null
	set this_15 = null
	set mbi_3 = null
	set this_16 = null
	set this_17 = null
	set mbi_4 = null
	set this_18 = null
endfunction

function MultiboardCityUpdate_closure_impl takes integer this_3, integer cbCITY, string stackPos returns nothing
	local integer i
	local integer temp
	local integer this_4
	local string stackPos_2
	local boolean PlayerStats_PlayerStats_isInGame_result
	local integer this_5
	local integer this_6
	local string stackPos_3
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set i = 0
	set temp = 24 - 1
	loop
		exitwhen i > temp
		set this_4 = PlayerStats_player_stats[i]
		set stackPos_2 = "when calling isInGame in MultiboardCityUpdate, line 21"
		set wurst_stack[wurst_stack_depth] = stackPos_2
		set wurst_stack_depth = wurst_stack_depth + 1
		if PlayerStats_typeId[this_4] == 0 then
			if this_4 == 0 then
				call error("Nullpointer exception when calling PlayerStats.isInGame", "when calling error in PlayerStats, line 26")
			else
				call error("Called PlayerStats.isInGame on invalid object.", "when calling error in PlayerStats, line 26")
			endif
		endif
		set this_5 = this_4
		set PlayerStats_PlayerStats_isInGame_result = PlayerStats_is_in_game[this_5]
		set wurst_stack_depth = wurst_stack_depth - 1
		if PlayerStats_PlayerStats_isInGame_result then
			set this_6 = PlayerStats_player_stats[i]
			set stackPos_3 = "when calling refreshMultiboardCity in MultiboardCityUpdate, line 22"
			set wurst_stack[wurst_stack_depth] = stackPos_3
			set wurst_stack_depth = wurst_stack_depth + 1
			if PlayerStats_typeId[this_6] == 0 then
				if this_6 == 0 then
					call error("Nullpointer exception when calling PlayerStats.refreshMultiboardCity", "when calling error in PlayerStats, line 49")
				else
					call error("Called PlayerStats.refreshMultiboardCity on invalid object.", "when calling error in PlayerStats, line 49")
				endif
			endif
			call PlayerStats_refreshMultiboardCity(this_6, "when calling refreshMultiboardCity in PlayerStats, line 49")
			set wurst_stack_depth = wurst_stack_depth - 1
		endif
		set i = i + 1
	endloop
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function dispatch_CallbackPeriodic_ClosureTimers_CallbackPeriodic_call takes integer this_3, integer cb, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if CallbackPeriodic_typeId[this_3] == 0 then
		if this_3 == 0 then
			call error("Nullpointer exception when calling CallbackPeriodic.call", "when calling error in ClosureTimers, line 86")
		else
			call error("Called CallbackPeriodic.call on invalid object.", "when calling error in ClosureTimers, line 86")
		endif
	endif
	if CallbackPeriodic_typeId[this_3] <= 633 then
		if CallbackPeriodic_typeId[this_3] <= 632 then
			if CallbackPeriodic_typeId[this_3] <= 631 then
				call City_closure_impl(this_3, cb)
			else
				call DateTime_closure_impl(this_3, cb)
			endif
		else
			call Economy_closure_impl_2(this_3, cb, "when calling Economy_closure_impl in ClosureTimers, line 86")
		endif
	elseif CallbackPeriodic_typeId[this_3] <= 634 then
		call Economy_closure_impl(this_3, cb, "when calling Economy_closure_impl in ClosureTimers, line 86")
	else
		call MultiboardCityUpdate_closure_impl(this_3, cb, "when calling MultiboardCityUpdate_closure_impl in ClosureTimers, line 86")
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function timer_getData takes timer this_3, string stackPos returns integer
	local integer stackTrace_tempReturn
	local integer this_4
	local integer parentKey
	local string stackPos_2
	local integer Table_Table_loadInt_result
	local integer this_5
	local integer parentKey_2
	local hashtable this_6
	local integer parentKey_3
	local integer childKey
	local timer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_4 = TimerUtils_timerData
	set this_7 = this_3
	set parentKey = GetHandleId(this_7)
	set stackPos_2 = "when calling loadInt in TimerUtils, line 21"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if Table_typeId[this_4] == 0 then
		if this_4 == 0 then
			call error("Nullpointer exception when calling Table.loadInt", "when calling error in Table, line 39")
		else
			call error("Called Table.loadInt on invalid object.", "when calling error in Table, line 39")
		endif
	endif
	set this_5 = this_4
	set parentKey_2 = parentKey
	set this_6 = Table_ht
	set parentKey_3 = this_5
	set childKey = parentKey_2
	set Table_Table_loadInt_result = LoadInteger(this_6, parentKey_3, childKey)
	set wurst_stack_depth = wurst_stack_depth - 1
	set stackTrace_tempReturn = Table_Table_loadInt_result
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_6 = null
	set this_7 = null
	return stackTrace_tempReturn
endfunction

function bridge_CallbackPeriodic_staticCallback takes nothing returns nothing
	local string stackPos
	local integer cb
	set wurst_stack_depth = 0
	set stackPos = "ClosureTimers, line 91"
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set cb = timer_getData(GetExpiredTimer(), "when calling getData in ClosureTimers, line 94")
	call dispatch_CallbackPeriodic_ClosureTimers_CallbackPeriodic_call(cb, cb, "when calling call in ClosureTimers, line 95")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function timer_setData takes timer this_3, integer data, string stackPos returns nothing
	local integer this_4
	local integer parentKey
	local integer value
	local string stackPos_2
	local integer this_5
	local integer parentKey_2
	local integer value_2
	local hashtable this_6
	local integer parentKey_3
	local integer childKey
	local integer value_3
	local timer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_4 = TimerUtils_timerData
	set this_7 = this_3
	set parentKey = GetHandleId(this_7)
	set value = data
	set stackPos_2 = "when calling saveInt in TimerUtils, line 17"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if Table_typeId[this_4] == 0 then
		if this_4 == 0 then
			call error("Nullpointer exception when calling Table.saveInt", "when calling error in Table, line 42")
		else
			call error("Called Table.saveInt on invalid object.", "when calling error in Table, line 42")
		endif
	endif
	set this_5 = this_4
	set parentKey_2 = parentKey
	set value_2 = value
	set this_6 = Table_ht
	set parentKey_3 = this_5
	set childKey = parentKey_2
	set value_3 = value_2
	call SaveInteger(this_6, parentKey_3, childKey, value_3)
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_6 = null
	set this_7 = null
endfunction

function timer_release takes timer this_3, string stackPos returns nothing
	local timer this_4
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if this_3 == null then
		call error("Trying to release a null timer", "when calling error in TimerUtils, line 37")
		set wurst_stack_depth = wurst_stack_depth - 1
		set this_4 = null
		return
	endif
	if timer_getData(this_3, "when calling getData in TimerUtils, line 39") == 679645218 then
		call error("ReleaseTimer: Double free!", "when calling error in TimerUtils, line 40")
		set wurst_stack_depth = wurst_stack_depth - 1
		set this_4 = null
		return
	endif
	call timer_setData(this_3, 679645218, "when calling setData in TimerUtils, line 42")
	set this_4 = this_3
	call PauseTimer(this_4)
	set TimerUtils_freeTimers[TimerUtils_freeTimersCount] = this_3
	set TimerUtils_freeTimersCount = TimerUtils_freeTimersCount + 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_4 = null
endfunction

function destroyCallbackSingle takes integer this_3, string stackPos returns nothing
	local integer this_4
	local string stackPos_2
	local integer obj
	local string stackPos_3
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_4 = this_3
	set stackPos_2 = "when calling CallbackSingle_onDestroy in ClosureTimers, line 79"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	call timer_release(CallbackSingle_t[this_4], "when calling release in ClosureTimers, line 80")
	set wurst_stack_depth = wurst_stack_depth - 1
	set obj = this_3
	set stackPos_3 = "when calling CallbackSingle in ClosureTimers, line 79"
	set wurst_stack[wurst_stack_depth] = stackPos_3
	set wurst_stack_depth = wurst_stack_depth + 1
	if CallbackSingle_typeId[obj] == 0 then
		call error("Double free: object of type CallbackSingle", "when calling error in ClosureTimers, line 63")
	else
		set CallbackSingle_nextFree[CallbackSingle_firstFree] = obj
		set CallbackSingle_firstFree = CallbackSingle_firstFree + 1
		set CallbackSingle_typeId[obj] = 0
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function registerPlayerUnitEvent takes playerunitevent p, code filter, code condition, code action returns nothing
	local handle this_3 = p
	local integer hid = GetHandleId(this_3)
	local integer k
	local filterfunc cond_result
	local trigger temp
	local player temp_2
	local playerunitevent temp_3
	local trigger this_4
	local player whichPlayer
	local playerunitevent whichPlayerUnitEvent
	local boolexpr filter_2
	local trigger this_5
	local boolexpr condition_2
	local trigger this_6
	local code actionFunc
	if RegisterEvents_t[hid] == null then
		set RegisterEvents_t[hid] = CreateTrigger()
		set k = bj_MAX_PLAYER_SLOTS - 1
		loop
			exitwhen k < 0
			set temp = RegisterEvents_t[hid]
			set temp_2 = Player_players[k]
			set temp_3 = p
			if filter != null then
				set cond_result = Filter(filter)
			else
				set cond_result = null
			endif
			set this_4 = temp
			set whichPlayer = temp_2
			set whichPlayerUnitEvent = temp_3
			set filter_2 = cond_result
			call TriggerRegisterPlayerUnitEvent(this_4, whichPlayer, whichPlayerUnitEvent, filter_2)
			set k = k - 1
		endloop
	endif
	if condition != null then
		set this_5 = RegisterEvents_t[hid]
		set condition_2 = Filter(condition)
		call TriggerAddCondition(this_5, condition_2)
	endif
	if action != null then
		set this_6 = RegisterEvents_t[hid]
		set actionFunc = action
		call TriggerAddAction(this_6, actionFunc)
	endif
	set cond_result = null
	set temp = null
	set temp_2 = null
	set temp_3 = null
	set this_3 = null
	set this_4 = null
	set whichPlayer = null
	set whichPlayerUnitEvent = null
	set filter_2 = null
	set this_5 = null
	set condition_2 = null
	set this_6 = null
endfunction

function ClosureEvents_closure_impl_2 takes integer this_3 returns nothing
	local code func = ref_function_ClosureEvents_closure_impl
	local trigger this_4 = UnitIndexer_onIndexTrigger
	local boolexpr condition = Condition(func)
	local integer i
	local integer temp
	local trigger receiver
	local trigger receiver_2
	local trigger receiver_3
	local trigger receiver_4
	local trigger receiver_5
	local trigger receiver_6
	local trigger receiver_7
	local trigger receiver_8
	local trigger receiver_9
	local trigger receiver_10
	local trigger receiver_11
	local trigger receiver_12
	local trigger receiver_13
	local code func_2
	local trigger this_5
	local boolexpr condition_2
	local trigger this_6
	local code actionFunc
	local trigger this_7
	local code actionFunc_2
	local trigger this_8
	local code actionFunc_3
	local trigger this_9
	local player whichPlayer
	local playerevent whichPlayerEvent
	local trigger this_10
	local player whichPlayer_2
	local playerevent whichPlayerEvent_2
	local trigger this_11
	local player whichPlayer_3
	local playerevent whichPlayerEvent_3
	local trigger this_12
	local player whichPlayer_4
	local playerevent whichPlayerEvent_4
	local trigger this_13
	local player whichPlayer_5
	local playerevent whichPlayerEvent_5
	local trigger this_14
	local player whichPlayer_6
	local playerevent whichPlayerEvent_6
	local trigger this_15
	local player whichPlayer_7
	local playerevent whichPlayerEvent_7
	local trigger this_16
	local player whichPlayer_8
	local playerevent whichPlayerEvent_8
	local trigger this_17
	local player whichPlayer_9
	local playerevent whichPlayerEvent_9
	local trigger this_18
	local player whichPlayer_10
	local playerevent whichPlayerEvent_10
	local trigger this_19
	local player whichPlayer_11
	local playerevent whichPlayerEvent_11
	local trigger this_20
	local player whichPlayer_12
	local playerevent whichPlayerEvent_12
	local trigger this_21
	local player whichPlayer_13
	local playerevent whichPlayerEvent_13
	local trigger this_22
	local player whichPlayer_14
	local string chatMessageToDetect
	local boolean exactMatchOnly
	call TriggerAddCondition(this_4, condition)
	set func_2 = ref_function_bridge_ClosureEvents_closure_impl
	set this_5 = UnitIndexer_onDeindexTrigger
	set condition_2 = Condition(func_2)
	call TriggerAddCondition(this_5, condition_2)
	set this_6 = ClosureEvents_unitTrig
	set actionFunc = ref_function_bridge_ClosureEvents_closure_impl_2
	call TriggerAddAction(this_6, actionFunc)
	set this_7 = ClosureEvents_leaveTrig
	set actionFunc_2 = ref_function_bridge_ClosureEvents_closure_impl_3
	call TriggerAddAction(this_7, actionFunc_2)
	set this_8 = ClosureEvents_keyTrig
	set actionFunc_3 = ref_function_bridge_ClosureEvents_closure_impl_4
	call TriggerAddAction(this_8, actionFunc_3)
	set i = 0
	set temp = bj_MAX_PLAYERS - 1
	loop
		exitwhen i > temp
		set this_9 = ClosureEvents_leaveTrig
		set whichPlayer = Player_players[i]
		set whichPlayerEvent = EVENT_PLAYER_LEAVE
		call TriggerRegisterPlayerEvent(this_9, whichPlayer, whichPlayerEvent)
		set receiver = ClosureEvents_keyTrig
		set this_10 = receiver
		set whichPlayer_2 = Player_players[i]
		set whichPlayerEvent_2 = EVENT_PLAYER_ARROW_DOWN_DOWN
		call TriggerRegisterPlayerEvent(this_10, whichPlayer_2, whichPlayerEvent_2)
		set receiver_2 = receiver
		set this_11 = receiver_2
		set whichPlayer_3 = Player_players[i]
		set whichPlayerEvent_3 = EVENT_PLAYER_ARROW_DOWN_UP
		call TriggerRegisterPlayerEvent(this_11, whichPlayer_3, whichPlayerEvent_3)
		set receiver_3 = receiver_2
		set this_12 = receiver_3
		set whichPlayer_4 = Player_players[i]
		set whichPlayerEvent_4 = EVENT_PLAYER_ARROW_UP_DOWN
		call TriggerRegisterPlayerEvent(this_12, whichPlayer_4, whichPlayerEvent_4)
		set receiver_4 = receiver_3
		set this_13 = receiver_4
		set whichPlayer_5 = Player_players[i]
		set whichPlayerEvent_5 = EVENT_PLAYER_ARROW_UP_UP
		call TriggerRegisterPlayerEvent(this_13, whichPlayer_5, whichPlayerEvent_5)
		set receiver_5 = receiver_4
		set this_14 = receiver_5
		set whichPlayer_6 = Player_players[i]
		set whichPlayerEvent_6 = EVENT_PLAYER_ARROW_LEFT_DOWN
		call TriggerRegisterPlayerEvent(this_14, whichPlayer_6, whichPlayerEvent_6)
		set receiver_6 = receiver_5
		set this_15 = receiver_6
		set whichPlayer_7 = Player_players[i]
		set whichPlayerEvent_7 = EVENT_PLAYER_ARROW_LEFT_UP
		call TriggerRegisterPlayerEvent(this_15, whichPlayer_7, whichPlayerEvent_7)
		set receiver_7 = receiver_6
		set this_16 = receiver_7
		set whichPlayer_8 = Player_players[i]
		set whichPlayerEvent_8 = EVENT_PLAYER_ARROW_RIGHT_DOWN
		call TriggerRegisterPlayerEvent(this_16, whichPlayer_8, whichPlayerEvent_8)
		set receiver_8 = receiver_7
		set this_17 = receiver_8
		set whichPlayer_9 = Player_players[i]
		set whichPlayerEvent_9 = EVENT_PLAYER_ARROW_RIGHT_UP
		call TriggerRegisterPlayerEvent(this_17, whichPlayer_9, whichPlayerEvent_9)
		set receiver_9 = receiver_8
		set this_18 = receiver_9
		set whichPlayer_10 = Player_players[i]
		set whichPlayerEvent_10 = EVENT_PLAYER_END_CINEMATIC
		call TriggerRegisterPlayerEvent(this_18, whichPlayer_10, whichPlayerEvent_10)
		set receiver_10 = receiver_9
		set this_19 = receiver_10
		set whichPlayer_11 = Player_players[i]
		set whichPlayerEvent_11 = EVENT_PLAYER_MOUSE_UP
		call TriggerRegisterPlayerEvent(this_19, whichPlayer_11, whichPlayerEvent_11)
		set receiver_11 = receiver_10
		set this_20 = receiver_11
		set whichPlayer_12 = Player_players[i]
		set whichPlayerEvent_12 = EVENT_PLAYER_MOUSE_DOWN
		call TriggerRegisterPlayerEvent(this_20, whichPlayer_12, whichPlayerEvent_12)
		set receiver_12 = receiver_11
		set this_21 = receiver_12
		set whichPlayer_13 = Player_players[i]
		set whichPlayerEvent_13 = EVENT_PLAYER_MOUSE_MOVE
		call TriggerRegisterPlayerEvent(this_21, whichPlayer_13, whichPlayerEvent_13)
		set receiver_13 = receiver_12
		set this_22 = receiver_13
		set whichPlayer_14 = Player_players[i]
		set chatMessageToDetect = ""
		set exactMatchOnly = false
		call TriggerRegisterPlayerChatEvent(this_22, whichPlayer_14, chatMessageToDetect, exactMatchOnly)
		set i = i + 1
	endloop
	call registerPlayerUnitEvent(EVENT_PLAYER_UNIT_SPELL_EFFECT, null, ref_function_bridge_ClosureEvents_closure_impl_5, null)
	set receiver = null
	set receiver_2 = null
	set receiver_3 = null
	set receiver_4 = null
	set receiver_5 = null
	set receiver_6 = null
	set receiver_7 = null
	set receiver_8 = null
	set receiver_9 = null
	set receiver_10 = null
	set receiver_11 = null
	set receiver_12 = null
	set receiver_13 = null
	set this_4 = null
	set condition = null
	set this_5 = null
	set condition_2 = null
	set this_6 = null
	set this_7 = null
	set this_8 = null
	set this_9 = null
	set whichPlayer = null
	set whichPlayerEvent = null
	set this_10 = null
	set whichPlayer_2 = null
	set whichPlayerEvent_2 = null
	set this_11 = null
	set whichPlayer_3 = null
	set whichPlayerEvent_3 = null
	set this_12 = null
	set whichPlayer_4 = null
	set whichPlayerEvent_4 = null
	set this_13 = null
	set whichPlayer_5 = null
	set whichPlayerEvent_5 = null
	set this_14 = null
	set whichPlayer_6 = null
	set whichPlayerEvent_6 = null
	set this_15 = null
	set whichPlayer_7 = null
	set whichPlayerEvent_7 = null
	set this_16 = null
	set whichPlayer_8 = null
	set whichPlayerEvent_8 = null
	set this_17 = null
	set whichPlayer_9 = null
	set whichPlayerEvent_9 = null
	set this_18 = null
	set whichPlayer_10 = null
	set whichPlayerEvent_10 = null
	set this_19 = null
	set whichPlayer_11 = null
	set whichPlayerEvent_11 = null
	set this_20 = null
	set whichPlayer_12 = null
	set whichPlayerEvent_12 = null
	set this_21 = null
	set whichPlayer_13 = null
	set whichPlayerEvent_13 = null
	set this_22 = null
	set whichPlayer_14 = null
endfunction

function multiboard_setItem takes multiboard this_3, integer x, integer y, real width, string wval returns nothing
	local multiboard this_4 = this_3
	local integer row = y
	local integer column = x
	local multiboarditem mbi = MultiboardGetItem(this_4, row, column)
	call MultiboardSetItemWidth(mbi, width)
	call MultiboardSetItemValue(mbi, wval)
	set mbi = null
	set this_4 = null
endfunction

function MultiboardCityUpdate_closure_impl_2 takes integer this_3, string stackPos returns nothing
	local integer i
	local integer temp
	local multiboard receiver
	local multiboard receiver_2
	local multiboard receiver_3
	local integer j
	local integer temp_2
	local integer k
	local integer temp_3
	local integer this_4
	local string stackPos_2
	local boolean PlayerStats_PlayerStats_isInGame_result
	local integer this_5
	local integer cols
	local integer rows
	local string title
	local multiboard this_6
	local boolean minimalize
	local multiboard this_7
	local boolean showValues
	local boolean showIcons
	local multiboard this_8
	local player p
	local boolean show
	local integer index
	local integer index_2
	local string stackPos_3
	local string str
	local integer this_9
	local integer parentKey
	local string stackPos_4
	local string Table_Table_loadString_result
	local integer this_10
	local integer parentKey_2
	local hashtable this_11
	local integer parentKey_3
	local integer childKey
	local multiboard temp_4
	local integer temp_5
	local integer temp_6
	local real temp_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set i = 0
	set temp = 24 - 1
	loop
		exitwhen i > temp
		set this_4 = PlayerStats_player_stats[i]
		set stackPos_2 = "when calling isInGame in MultiboardCityUpdate, line 7"
		set wurst_stack[wurst_stack_depth] = stackPos_2
		set wurst_stack_depth = wurst_stack_depth + 1
		if PlayerStats_typeId[this_4] == 0 then
			if this_4 == 0 then
				call error("Nullpointer exception when calling PlayerStats.isInGame", "when calling error in PlayerStats, line 26")
			else
				call error("Called PlayerStats.isInGame on invalid object.", "when calling error in PlayerStats, line 26")
			endif
		endif
		set this_5 = this_4
		set PlayerStats_PlayerStats_isInGame_result = PlayerStats_is_in_game[this_5]
		set wurst_stack_depth = wurst_stack_depth - 1
		if PlayerStats_PlayerStats_isInGame_result then
			set cols = 5
			set rows = 7
			set title = "Income: 2:00"
			set bj_lastCreatedMultiboard = CreateMultiboard()
			call MultiboardSetRowCount(bj_lastCreatedMultiboard, rows)
			call MultiboardSetColumnCount(bj_lastCreatedMultiboard, cols)
			call MultiboardSetTitleText(bj_lastCreatedMultiboard, title)
			call MultiboardDisplay(bj_lastCreatedMultiboard, true)
			set Multiboards_multiboards[i] = bj_lastCreatedMultiboard
			set receiver = Multiboards_multiboards[i]
			set this_6 = receiver
			set minimalize = true
			call MultiboardMinimize(this_6, minimalize)
			set receiver_2 = receiver
			set this_7 = receiver_2
			set showValues = true
			set showIcons = false
			call MultiboardSetItemsStyle(this_7, showValues, showIcons)
			set receiver_3 = receiver_2
			set this_8 = receiver_3
			set p = Player_players[i]
			set show = true
			if Player_localPlayer == p then
				call MultiboardDisplay(this_8, show)
			endif
			set j = 0
			set temp_2 = 7 - 1
			loop
				exitwhen j > temp_2
				set k = 0
				set temp_3 = 5 - 1
				loop
					exitwhen k > temp_3
					set temp_4 = Multiboards_multiboards[i]
					set temp_5 = k
					set temp_6 = j
					set index = dispatch_LinkedList_LinkedList_LinkedList_get(Multiboards_kMultiboardInitWidths[j], k, "when calling get in MultiboardCityUpdate, line 15")
					set temp_7 = index / 1000.
					set index_2 = dispatch_LinkedList_LinkedList_LinkedList_get(Multiboards_kMultiboardInitStrings[j], k, "when calling get in MultiboardCityUpdate, line 15")
					set stackPos_3 = "when calling stringFromIndex in MultiboardCityUpdate, line 15"
					set wurst_stack[wurst_stack_depth] = stackPos_3
					set wurst_stack_depth = wurst_stack_depth + 1
					set this_9 = TypeCasting_typecastdata
					set parentKey = index_2
					set stackPos_4 = "when calling loadString in TypeCasting, line 29"
					set wurst_stack[wurst_stack_depth] = stackPos_4
					set wurst_stack_depth = wurst_stack_depth + 1
					if Table_typeId[this_9] == 0 then
						if this_9 == 0 then
							call error("Nullpointer exception when calling Table.loadString", "when calling error in Table, line 57")
						else
							call error("Called Table.loadString on invalid object.", "when calling error in Table, line 57")
						endif
					endif
					set this_10 = this_9
					set parentKey_2 = parentKey
					set this_11 = Table_ht
					set parentKey_3 = this_10
					set childKey = parentKey_2
					set Table_Table_loadString_result = LoadStr(this_11, parentKey_3, childKey)
					set wurst_stack_depth = wurst_stack_depth - 1
					set str = Table_Table_loadString_result
					set wurst_stack_depth = wurst_stack_depth - 1
					call multiboard_setItem(temp_4, temp_5, temp_6, temp_7, str)
					set k = k + 1
				endloop
				set j = j + 1
			endloop
		endif
		set i = i + 1
	endloop
	set wurst_stack_depth = wurst_stack_depth - 1
	set receiver = null
	set receiver_2 = null
	set receiver_3 = null
	set this_6 = null
	set this_7 = null
	set this_8 = null
	set p = null
	set this_11 = null
	set temp_4 = null
endfunction

function OnUnitEnterLeave_closure_impl_4 takes integer this_3 returns nothing
	local trigger receiver = CreateTrigger()
	local trigger this_4 = receiver
	local region whichRegion = MapBounds_boundRegion
	local boolexpr filter = Filter(ref_function_OnUnitEnterLeave_closure_impl)
	local group receiver_2
	local group receiver_3
	local playerunitevent p
	local code c
	local group this_5
	local rect rec
	local group this_6
	local rect rec_2
	local boolexpr filter_2
	local group this_7
	local group this_8
	call TriggerRegisterEnterRegion(this_4, whichRegion, filter)
	set p = EVENT_PLAYER_UNIT_ISSUED_ORDER
	set c = ref_function_OnUnitEnterLeave_closure_impl_2
	call registerPlayerUnitEvent(p, null, c, null)
	set this_5 = OnUnitEnterLeave_preplacedUnits
	set rec = MapBounds_boundRect
	set this_6 = this_5
	set rec_2 = rec
	set filter_2 = null
	call GroupEnumUnitsInRect(this_6, rec_2, filter_2)
	call ForGroup(OnUnitEnterLeave_preplacedUnits, ref_function_OnUnitEnterLeave_closure_impl_3)
	set receiver_2 = OnUnitEnterLeave_preplacedUnits
	set this_7 = receiver_2
	call GroupClear(this_7)
	set receiver_3 = receiver_2
	set this_8 = receiver_3
	call DestroyGroup(this_8)
	set receiver = null
	set receiver_2 = null
	set receiver_3 = null
	set this_4 = null
	set whichRegion = null
	set filter = null
	set p = null
	set this_5 = null
	set rec = null
	set this_6 = null
	set rec_2 = null
	set filter_2 = null
	set this_7 = null
	set this_8 = null
endfunction

function Economy_closure_impl_3 takes integer this_3, unit u, string stackPos returns nothing
	local integer pl_id
	local integer u_id
	local integer i
	local integer temp
	local player this_4
	local unit this_5
	local unit this_6
	local player this_7
	local player this_8
	local player this_9
	local integer this_10
	local string stackPos_2
	local integer LinkedList_LinkedList_size_result
	local integer this_11
	local boolean andLeft
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_5 = u
	set this_4 = GetOwningPlayer(this_5)
	set pl_id = GetPlayerId(this_4)
	set this_6 = u
	set u_id = GetUnitTypeId(this_6)
	set this_7 = Player_players[pl_id]
	set this_8 = this_7
	if GetPlayerSlotState(this_8) == PLAYER_SLOT_STATE_PLAYING then
		set this_9 = this_7
		set andLeft = GetPlayerController(this_9) == MAP_CONTROL_USER
	else
		set andLeft = false
	endif
	if andLeft then
		set i = 0
		set this_10 = Units_usOres
		set stackPos_2 = "when calling size in Economy, line 35"
		set wurst_stack[wurst_stack_depth] = stackPos_2
		set wurst_stack_depth = wurst_stack_depth + 1
		if LinkedList_typeId[this_10] == 0 then
			if this_10 == 0 then
				call error("Nullpointer exception when calling LinkedList.size", "when calling error in LinkedList, line 135")
			else
				call error("Called LinkedList.size on invalid object.", "when calling error in LinkedList, line 135")
			endif
		endif
		set this_11 = this_10
		set LinkedList_LinkedList_size_result = LinkedList_size[this_11]
		set wurst_stack_depth = wurst_stack_depth - 1
		set temp = LinkedList_LinkedList_size_result - 1
		loop
			exitwhen i > temp
			if dispatch_LinkedList_LinkedList_LinkedList_get(Units_usOres, i, "when calling get in Economy, line 36") == u_id then
				set Economy_gold_change[pl_id] = Economy_gold_change[pl_id] + dispatch_LinkedList_LinkedList_LinkedList_get(Units_usIncomeOres, i, "when calling get in Economy, line 37")
			endif
			set i = i + 1
		endloop
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_4 = null
	set this_5 = null
	set this_6 = null
	set this_7 = null
	set this_8 = null
	set this_9 = null
endfunction

function new_LLEntry takes integer elem, integer prev, integer next, string stackPos returns integer
	local integer this_3
	local string stackPos_2
	local integer this_4
	local integer this_5
	local integer elem_2
	local integer prev_2
	local integer next_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackPos_2 = "when calling LLEntry in LinkedList, line 401"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if LLEntry_firstFree == 0 then
		if LLEntry_maxIndex < 32768 then
			set LLEntry_maxIndex = LLEntry_maxIndex + 1
			set this_4 = LLEntry_maxIndex
		else
			call error("Out of memory: Could not create LLEntry.", "when calling error in LinkedList, line 396")
			set this_4 = 0
		endif
	else
		set LLEntry_firstFree = LLEntry_firstFree - 1
		set this_4 = LLEntry_nextFree[LLEntry_firstFree]
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_3 = this_4
	set this_5 = this_3
	set elem_2 = elem
	set prev_2 = prev
	set next_2 = next
	set LLEntry_elem[this_5] = elem_2
	set LLEntry_prev[this_5] = prev_2
	set LLEntry_next[this_5] = next_2
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_3
endfunction

function dispatch_LinkedList_LinkedList_LinkedList_add_1 takes integer this_3, integer elems_0, string stackPos returns nothing
	local integer this_4
	local integer elems_0_2
	local string stackPos_2
	local integer entry
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if LinkedList_typeId[this_3] == 0 then
		if this_3 == 0 then
			call error("Nullpointer exception when calling LinkedList.add", "when calling error in LinkedList, line 37")
		else
			call error("Called LinkedList.add on invalid object.", "when calling error in LinkedList, line 37")
		endif
	endif
	set this_4 = this_3
	set elems_0_2 = elems_0
	set stackPos_2 = "when calling add in LinkedList, line 37"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	set entry = new_LLEntry(elems_0_2, LLEntry_prev[LinkedList_dummy[this_4]], LinkedList_dummy[this_4], "when calling new_LLEntry in LinkedList, line 39")
	set LLEntry_next[LLEntry_prev[LinkedList_dummy[this_4]]] = entry
	set LLEntry_prev[LinkedList_dummy[this_4]] = entry
	set LinkedList_size[this_4] = LinkedList_size[this_4] + 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function dispatch_ForGroupCallback_ClosureForGroups_ForGroupCallback_callback takes integer this_3, unit u, string stackPos returns nothing
	local integer this_4
	local unit u_2
	local string stackPos_2
	local unit object
	local handle this_5
	local unit u_3
	local unit this_6
	local integer temp
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if ForGroupCallback_typeId[this_3] == 0 then
		if this_3 == 0 then
			call error("Nullpointer exception when calling ForGroupCallback.callback", "when calling error in ClosureForGroups, line 4")
		else
			call error("Called ForGroupCallback.callback on invalid object.", "when calling error in ClosureForGroups, line 4")
		endif
	endif
	if ForGroupCallback_typeId[this_3] <= 659 then
		if ForGroupCallback_typeId[this_3] <= 658 then
			call Economy_closure_impl_3(this_3, u, "when calling Economy_closure_impl in ClosureForGroups, line 4")
		else
			set this_4 = this_3
			set u_2 = u
			set stackPos_2 = "when calling LinkedList_closure_impl in ClosureForGroups, line 4"
			set wurst_stack[wurst_stack_depth] = stackPos_2
			set wurst_stack_depth = wurst_stack_depth + 1
			set temp = result[this_4]
			set object = u_2
			set this_5 = object
			call dispatch_LinkedList_LinkedList_LinkedList_add_1(temp, GetHandleId(this_5), "when calling add in LinkedList, line 515")
			set wurst_stack_depth = wurst_stack_depth - 1
		endif
	else
		set u_3 = u
		set this_6 = u_3
		call RemoveUnit(this_6)
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set u_2 = null
	set object = null
	set this_5 = null
	set u_3 = null
	set this_6 = null
endfunction

function group_forEachFrom takes group this_3, integer cb, string stackPos returns nothing
	local unit u
	local group from
	local group this_4
	local group this_5
	local unit iterUnit
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set from = this_3
	loop
		set this_4 = from
		exitwhen  not (FirstOfGroup(this_4) != null)
		set this_5 = from
		set iterUnit = FirstOfGroup(this_5)
		call GroupRemoveUnit(this_5, iterUnit)
		set u = iterUnit
		call dispatch_ForGroupCallback_ClosureForGroups_ForGroupCallback_callback(cb, u, "when calling callback in ClosureForGroups, line 31")
	endloop
	set wurst_stack_depth = wurst_stack_depth - 1
	set u = null
	set from = null
	set this_4 = null
	set this_5 = null
	set iterUnit = null
endfunction

function finishPreload takes string stackPos returns nothing
	local integer clVar
	local group temp
	local unit this_3
	local string stackPos_2
	local integer this_4
	local group this_5
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_3 = Preloader_dum
	call RemoveUnit(this_3)
	set temp = Preloader_dumg
	set stackPos_2 = "when calling alloc_Closure in Preloader, line 45"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if ForGroupCallback_firstFree == 0 then
		if ForGroupCallback_maxIndex < 32768 then
			set ForGroupCallback_maxIndex = ForGroupCallback_maxIndex + 1
			set this_4 = ForGroupCallback_maxIndex
			set ForGroupCallback_typeId[this_4] = 660
		else
			call error("Out of memory: Could not create Closure.", "when calling error in Preloader, line 45")
			set this_4 = 0
		endif
	else
		set ForGroupCallback_firstFree = ForGroupCallback_firstFree - 1
		set this_4 = ForGroupCallback_nextFree[ForGroupCallback_firstFree]
		set ForGroupCallback_typeId[this_4] = 660
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set clVar = this_4
	call group_forEachFrom(temp, clVar, "when calling forEachFrom in Preloader, line 45")
	set this_5 = Preloader_dumg
	call DestroyGroup(this_5)
	set Preloader_dumg = null
	set wurst_stack_depth = wurst_stack_depth - 1
	set temp = null
	set this_3 = null
	set this_5 = null
endfunction

function testFail takes string msg returns nothing
endfunction

function dispatch_CallbackSingle_ClosureTimers_CallbackSingle_call takes integer this_3, string stackPos returns nothing
	local integer this_4
	local integer expected
	local integer this_5
	local integer this_6
	local string stackPos_2
	local string temp
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if CallbackSingle_typeId[this_3] == 0 then
		if this_3 == 0 then
			call error("Nullpointer exception when calling CallbackSingle.call", "when calling error in ClosureTimers, line 65")
		else
			call error("Called CallbackSingle.call on invalid object.", "when calling error in ClosureTimers, line 65")
		endif
	endif
	if CallbackSingle_typeId[this_3] <= 640 then
		if CallbackSingle_typeId[this_3] <= 638 then
			if CallbackSingle_typeId[this_3] <= 637 then
				call ClosureEvents_closure_impl_2(this_3)
			else
				set ClosureTimers_x = ClosureTimers_x + 50
			endif
		elseif CallbackSingle_typeId[this_3] <= 639 then
			set ClosureTimers_x = ClosureTimers_x * 2
		else
			set ClosureTimers_x = ClosureTimers_x / 2
			set this_4 = ClosureTimers_x
			set expected = 250
			if this_4 != expected then
				set this_5 = expected
				set temp = "Expected <" + I2S(this_5) + ">, Actual <"
				set this_6 = this_4
				call testFail(temp + I2S(this_6) + ">")
			endif
		endif
	elseif CallbackSingle_typeId[this_3] <= 642 then
		if CallbackSingle_typeId[this_3] <= 641 then
			call MultiboardCityUpdate_closure_impl_2(this_3, "when calling MultiboardCityUpdate_closure_impl in ClosureTimers, line 65")
		else
			call OnUnitEnterLeave_closure_impl_4(this_3)
		endif
	else
		set stackPos_2 = "when calling Preloader_closure_impl in ClosureTimers, line 65"
		set wurst_stack[wurst_stack_depth] = stackPos_2
		set wurst_stack_depth = wurst_stack_depth + 1
		call finishPreload("when calling finishPreload in Preloader, line 54")
		set wurst_stack_depth = wurst_stack_depth - 1
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function CallbackSingle_staticCallback takes string stackPos returns nothing
	local timer t
	local integer cb
	local integer this_3
	local string stackPos_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set t = GetExpiredTimer()
	set cb = timer_getData(t, "when calling getData in ClosureTimers, line 75")
	call dispatch_CallbackSingle_ClosureTimers_CallbackSingle_call(cb, "when calling call in ClosureTimers, line 76")
	set this_3 = cb
	set stackPos_2 = "when calling CallbackSingle in ClosureTimers, line 77"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if CallbackSingle_typeId[this_3] == 0 then
		if this_3 == 0 then
			call error("Nullpointer exception when calling CallbackSingle.CallbackSingle", "when calling error in ClosureTimers, line 63")
		else
			call error("Called CallbackSingle.CallbackSingle on invalid object.", "when calling error in ClosureTimers, line 63")
		endif
	endif
	call destroyCallbackSingle(this_3, "when calling destroyCallbackSingle in ClosureTimers, line 63")
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set t = null
endfunction

function bridge_CallbackSingle_closure_impl takes nothing returns nothing
	local string stackPos
	set wurst_stack_depth = 0
	set stackPos = "ClosureTimers, line 68"
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call CallbackSingle_staticCallback("when calling staticCallback in ClosureTimers, line 70")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function getCityId takes unit u, string stackPos returns integer
	local integer i
	local integer temp
	local integer this_3
	local string stackPos_2
	local unit City_City_getCityUnit_result
	local integer this_4
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set i = 0
	set temp = City_cityCount - 1
	loop
		exitwhen i > temp
		set this_3 = City_cities[i]
		set stackPos_2 = "when calling getCityUnit in City, line 263"
		set wurst_stack[wurst_stack_depth] = stackPos_2
		set wurst_stack_depth = wurst_stack_depth + 1
		if City_typeId[this_3] == 0 then
			if this_3 == 0 then
				call error("Nullpointer exception when calling City.getCityUnit", "when calling error in City, line 88")
			else
				call error("Called City.getCityUnit on invalid object.", "when calling error in City, line 88")
			endif
		endif
		set this_4 = this_3
		set City_City_getCityUnit_result = City_city_unit[this_4]
		set wurst_stack_depth = wurst_stack_depth - 1
		if City_City_getCityUnit_result == u then
			set wurst_stack_depth = wurst_stack_depth - 1
			set City_City_getCityUnit_result = null
			return i
		endif
		set i = i + 1
	endloop
	set wurst_stack_depth = wurst_stack_depth - 1
	set City_City_getCityUnit_result = null
	return -1
endfunction

function CityManage_closure_impl_5 takes string stackPos returns nothing
	local integer city_id
	local integer this_3
	local integer unit_id
	local string stackPos_2
	local integer this_4
	local integer unit_id_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set city_id = getCityId(GetSpellAbilityUnit(), "when calling getCityId in CityManage, line 67")
	set this_3 = City_cities[city_id]
	set unit_id = 1747989555
	set stackPos_2 = "when calling replaceCity in CityManage, line 68"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if City_typeId[this_3] == 0 then
		if this_3 == 0 then
			call error("Nullpointer exception when calling City.replaceCity", "when calling error in City, line 94")
		else
			call error("Called City.replaceCity on invalid object.", "when calling error in City, line 94")
		endif
	endif
	set this_4 = this_3
	set unit_id_2 = unit_id
	set City_city_unit[this_4] = ReplaceUnitBJ(City_city_unit[this_4], unit_id_2, bj_UNIT_STATE_METHOD_RELATIVE)
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function bridge_CityManage_closure_impl takes nothing returns nothing
	set wurst_stack_depth = 0
	call CityManage_closure_impl_5("CityManage, line 66")
endfunction

function CityManage_closure_impl_6 takes string stackPos returns nothing
	local integer city_id
	local integer this_3
	local integer unit_id
	local string stackPos_2
	local integer this_4
	local integer unit_id_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set city_id = getCityId(GetSpellAbilityUnit(), "when calling getCityId in CityManage, line 71")
	set this_3 = City_cities[city_id]
	set unit_id = 1747989297
	set stackPos_2 = "when calling replaceCity in CityManage, line 72"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if City_typeId[this_3] == 0 then
		if this_3 == 0 then
			call error("Nullpointer exception when calling City.replaceCity", "when calling error in City, line 94")
		else
			call error("Called City.replaceCity on invalid object.", "when calling error in City, line 94")
		endif
	endif
	set this_4 = this_3
	set unit_id_2 = unit_id
	set City_city_unit[this_4] = ReplaceUnitBJ(City_city_unit[this_4], unit_id_2, bj_UNIT_STATE_METHOD_RELATIVE)
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function bridge_CityManage_closure_impl_2 takes nothing returns nothing
	set wurst_stack_depth = 0
	call CityManage_closure_impl_6("CityManage, line 70")
endfunction

function dispatch_LLIterator_destroyLLIterator takes integer this_3, string stackPos returns nothing
	local integer this_4
	local string stackPos_2
	local integer obj
	local string stackPos_3
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if LLIterator_typeId[this_3] == 0 then
		if this_3 == 0 then
			call error("Nullpointer exception when calling LLIterator.LLIterator", "when calling error in LinkedList, line 406")
		else
			call error("Called LLIterator.LLIterator on invalid object.", "when calling error in LinkedList, line 406")
		endif
	endif
	set this_4 = this_3
	set stackPos_2 = "when calling destroyLLIterator in LinkedList, line 406"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	set obj = this_4
	set stackPos_3 = "when calling LLIterator in LinkedList, line 406"
	set wurst_stack[wurst_stack_depth] = stackPos_3
	set wurst_stack_depth = wurst_stack_depth + 1
	if LLIterator_typeId[obj] == 0 then
		call error("Double free: object of type LLIterator", "when calling error in LinkedList, line 406")
	else
		set LLIterator_nextFree[LLIterator_firstFree] = obj
		set LLIterator_firstFree = LLIterator_firstFree + 1
		set LLIterator_typeId[obj] = 0
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function dispatch_LLIterator_LinkedList_LLIterator_reset takes integer this_3, string stackPos returns nothing
	local integer this_4
	local string stackPos_2
	local integer this_5
	local string stackPos_3
	local integer LinkedList_LinkedList_getDummy_result
	local integer this_6
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if LLIterator_typeId[this_3] == 0 then
		if this_3 == 0 then
			call error("Nullpointer exception when calling LLIterator.reset", "when calling error in LinkedList, line 421")
		else
			call error("Called LLIterator.reset on invalid object.", "when calling error in LinkedList, line 421")
		endif
	endif
	set this_4 = this_3
	set stackPos_2 = "when calling reset in LinkedList, line 421"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_5 = LLIterator_parent[this_4]
	set stackPos_3 = "when calling getDummy in LinkedList, line 422"
	set wurst_stack[wurst_stack_depth] = stackPos_3
	set wurst_stack_depth = wurst_stack_depth + 1
	if LinkedList_typeId[this_5] == 0 then
		if this_5 == 0 then
			call error("Nullpointer exception when calling LinkedList.getDummy", "when calling error in LinkedList, line 362")
		else
			call error("Called LinkedList.getDummy on invalid object.", "when calling error in LinkedList, line 362")
		endif
	endif
	set this_6 = this_5
	set LinkedList_LinkedList_getDummy_result = LinkedList_dummy[this_6]
	set wurst_stack_depth = wurst_stack_depth - 1
	set LLIterator_dummy[this_4] = LinkedList_LinkedList_getDummy_result
	set LLIterator_current[this_4] = LLIterator_dummy[this_4]
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function new_LLIterator takes integer parent, string stackPos returns integer
	local integer this_3
	local string stackPos_2
	local integer this_4
	local integer this_5
	local integer parent_2
	local string stackPos_3
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackPos_2 = "when calling LLIterator in LinkedList, line 412"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if LLIterator_firstFree == 0 then
		if LLIterator_maxIndex < 32768 then
			set LLIterator_maxIndex = LLIterator_maxIndex + 1
			set this_4 = LLIterator_maxIndex
			set LLIterator_typeId[this_4] = 670
		else
			call error("Out of memory: Could not create LLIterator.", "when calling error in LinkedList, line 406")
			set this_4 = 0
		endif
	else
		set LLIterator_firstFree = LLIterator_firstFree - 1
		set this_4 = LLIterator_nextFree[LLIterator_firstFree]
		set LLIterator_typeId[this_4] = 670
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_3 = this_4
	set this_5 = this_3
	set parent_2 = parent
	set stackPos_3 = "when calling construct_LLIterator in LinkedList, line 412"
	set wurst_stack[wurst_stack_depth] = stackPos_3
	set wurst_stack_depth = wurst_stack_depth + 1
	set LLIterator_destroyOnClose[this_5] = true
	set LLIterator_parent[this_5] = parent_2
	call dispatch_LLIterator_LinkedList_LLIterator_reset(this_5, "when calling reset in LinkedList, line 414")
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_3
endfunction

function isCity takes unit u, string stackPos returns boolean
	local integer id
	local integer iterator
	local integer city_type_id
	local unit this_3
	local integer this_4
	local string stackPos_2
	local integer stackTrace_tempReturn
	local integer this_5
	local integer this_6
	local integer this_7
	local string stackPos_3
	local integer this_8
	local string stackPos_4
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_3 = u
	set id = GetUnitTypeId(this_3)
	set this_4 = City_kCityTypes
	set stackPos_2 = "when calling iterator in City, line 254"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackTrace_tempReturn = new_LLIterator(this_4, "when calling new_LLIterator in LinkedList, line 165")
	set wurst_stack_depth = wurst_stack_depth - 1
	set iterator = stackTrace_tempReturn
	loop
		set this_5 = iterator
		exitwhen  not (LLEntry_next[LLIterator_current[this_5]] != LLIterator_dummy[this_5])
		set this_6 = iterator
		set LLIterator_current[this_6] = LLEntry_next[LLIterator_current[this_6]]
		set city_type_id = LLEntry_elem[LLIterator_current[this_6]]
		if id == city_type_id then
			set this_7 = iterator
			set stackPos_3 = "when calling close in City, line 254"
			set wurst_stack[wurst_stack_depth] = stackPos_3
			set wurst_stack_depth = wurst_stack_depth + 1
			if LLIterator_destroyOnClose[this_7] then
				call dispatch_LLIterator_destroyLLIterator(this_7, "when calling LLIterator in LinkedList, line 450")
			endif
			set wurst_stack_depth = wurst_stack_depth - 1
			set wurst_stack_depth = wurst_stack_depth - 1
			set this_3 = null
			return true
		endif
	endloop
	set this_8 = iterator
	set stackPos_4 = "when calling close in City, line 254"
	set wurst_stack[wurst_stack_depth] = stackPos_4
	set wurst_stack_depth = wurst_stack_depth + 1
	if LLIterator_destroyOnClose[this_8] then
		call dispatch_LLIterator_destroyLLIterator(this_8, "when calling LLIterator in LinkedList, line 450")
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_3 = null
	return false
endfunction

function bridge_CityManage_closure_impl_3 takes nothing returns boolean
	local string stackPos
	local boolean stackTrace_tempReturn
	set wurst_stack_depth = 0
	set stackPos = "CityManage, line 27"
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackTrace_tempReturn = isCity(GetFilterUnit(), "when calling isCity in CityManage, line 27")
	set wurst_stack_depth = wurst_stack_depth - 1
	return stackTrace_tempReturn
endfunction

function City_refreshMultiboardIfPossible takes integer this_3, string stackPos returns nothing
	local integer i
	local integer temp
	local integer this_4
	local string stackPos_2
	local integer PlayerStats_PlayerStats_getSelectedCityId_result
	local integer this_5
	local integer this_6
	local string stackPos_3
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set i = 0
	set temp = 24 - 1
	loop
		exitwhen i > temp
		set this_4 = PlayerStats_player_stats[i]
		set stackPos_2 = "when calling getSelectedCityId in City, line 118"
		set wurst_stack[wurst_stack_depth] = stackPos_2
		set wurst_stack_depth = wurst_stack_depth + 1
		if PlayerStats_typeId[this_4] == 0 then
			if this_4 == 0 then
				call error("Nullpointer exception when calling PlayerStats.getSelectedCityId", "when calling error in PlayerStats, line 74")
			else
				call error("Called PlayerStats.getSelectedCityId on invalid object.", "when calling error in PlayerStats, line 74")
			endif
		endif
		set this_5 = this_4
		set PlayerStats_PlayerStats_getSelectedCityId_result = PlayerStats_selected_city_id[this_5]
		set wurst_stack_depth = wurst_stack_depth - 1
		if PlayerStats_PlayerStats_getSelectedCityId_result == City_city_id[this_3] then
			set this_6 = PlayerStats_player_stats[i]
			set stackPos_3 = "when calling refreshMultiboardCity in City, line 119"
			set wurst_stack[wurst_stack_depth] = stackPos_3
			set wurst_stack_depth = wurst_stack_depth + 1
			if PlayerStats_typeId[this_6] == 0 then
				if this_6 == 0 then
					call error("Nullpointer exception when calling PlayerStats.refreshMultiboardCity", "when calling error in PlayerStats, line 49")
				else
					call error("Called PlayerStats.refreshMultiboardCity on invalid object.", "when calling error in PlayerStats, line 49")
				endif
			endif
			call PlayerStats_refreshMultiboardCity(this_6, "when calling refreshMultiboardCity in PlayerStats, line 49")
			set wurst_stack_depth = wurst_stack_depth - 1
		endif
		set i = i + 1
	endloop
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function GetForceId takes integer player_id returns integer
	local integer i = 0
	local integer temp = 4 - 1
	local force this_3
	local player whichPlayer
	loop
		exitwhen i > temp
		set this_3 = Forces_forces[i]
		set whichPlayer = Player_players[player_id]
		if IsPlayerInForce(whichPlayer, this_3) then
			set this_3 = null
			set whichPlayer = null
			return i
		endif
		set i = i + 1
	endloop
	set this_3 = null
	set whichPlayer = null
	return -1
endfunction

function City_changeOwner takes integer this_3, integer pl_id, string stackPos returns nothing
	local unit this_4
	local player p
	local boolean changeColor
	local integer this_5
	local string stackPos_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_4 = City_city_unit[this_3]
	set p = Player_players[pl_id]
	set changeColor = true
	call SetUnitOwner(this_4, p, changeColor)
	set City_force_id[this_3] = GetForceId(pl_id)
	set this_5 = this_3
	set stackPos_2 = "when calling refreshMultiboardIfPossible in City, line 102"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if City_typeId[this_5] == 0 then
		if this_5 == 0 then
			call error("Nullpointer exception when calling City.refreshMultiboardIfPossible", "when calling error in City, line 116")
		else
			call error("Called City.refreshMultiboardIfPossible on invalid object.", "when calling error in City, line 116")
		endif
	endif
	call City_refreshMultiboardIfPossible(this_5, "when calling refreshMultiboardIfPossible in City, line 116")
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_4 = null
	set p = null
endfunction

function City_settleCity takes integer this_3, integer pl_id, string stackPos returns nothing
	local integer this_4
	local integer unit_id
	local string stackPos_2
	local integer this_5
	local integer unit_id_2
	local integer this_6
	local integer pl_id_2
	local string stackPos_3
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_4 = this_3
	set unit_id = 1747988529
	set stackPos_2 = "when calling replaceCity in City, line 105"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if City_typeId[this_4] == 0 then
		if this_4 == 0 then
			call error("Nullpointer exception when calling City.replaceCity", "when calling error in City, line 94")
		else
			call error("Called City.replaceCity on invalid object.", "when calling error in City, line 94")
		endif
	endif
	set this_5 = this_4
	set unit_id_2 = unit_id
	set City_city_unit[this_5] = ReplaceUnitBJ(City_city_unit[this_5], unit_id_2, bj_UNIT_STATE_METHOD_RELATIVE)
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_6 = this_3
	set pl_id_2 = pl_id
	set stackPos_3 = "when calling changeOwner in City, line 106"
	set wurst_stack[wurst_stack_depth] = stackPos_3
	set wurst_stack_depth = wurst_stack_depth + 1
	if City_typeId[this_6] == 0 then
		if this_6 == 0 then
			call error("Nullpointer exception when calling City.changeOwner", "when calling error in City, line 97")
		else
			call error("Called City.changeOwner on invalid object.", "when calling error in City, line 97")
		endif
	endif
	call City_changeOwner(this_6, pl_id_2, "when calling changeOwner in City, line 97")
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function PlayerStats_changeForce takes integer this_3, integer f_id returns nothing
	local integer temp
	local force this_4
	local player whichPlayer
	local force this_5
	local player whichPlayer_2
	local integer unitId
	local boolean allowed
	local player whichPlayer_3
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_4
	local integer unitId_3
	local boolean allowed_3
	local player whichPlayer_5
	local integer unitId_4
	local boolean allowed_4
	local player whichPlayer_6
	local integer unitId_5
	local boolean allowed_5
	local player whichPlayer_7
	local integer unitId_6
	local boolean allowed_6
	local player whichPlayer_8
	local integer unitId_7
	local boolean allowed_7
	local player whichPlayer_9
	local integer unitId_8
	local boolean allowed_8
	local player whichPlayer_10
	local integer unitId_9
	local boolean allowed_9
	local player whichPlayer_11
	local integer unitId_10
	local boolean allowed_10
	local player whichPlayer_12
	local integer unitId_11
	local boolean allowed_11
	local player whichPlayer_13
	local integer unitId_12
	local boolean allowed_12
	local player whichPlayer_14
	local integer unitId_13
	local boolean allowed_13
	local player whichPlayer_15
	local integer unitId_14
	local boolean allowed_14
	local player whichPlayer_16
	local integer unitId_15
	local boolean allowed_15
	local player whichPlayer_17
	local integer unitId_16
	local boolean allowed_16
	local player whichPlayer_18
	local integer unitId_17
	local boolean allowed_17
	local player whichPlayer_19
	local integer unitId_18
	local boolean allowed_18
	local player whichPlayer_20
	local integer unitId_19
	local boolean allowed_19
	local player whichPlayer_21
	local integer unitId_20
	local boolean allowed_20
	local player whichPlayer_22
	local integer unitId_21
	local boolean allowed_21
	local player whichPlayer_23
	local integer unitId_22
	local boolean allowed_22
	local player whichPlayer_24
	local integer unitId_23
	local boolean allowed_23
	local player whichPlayer_25
	local integer unitId_24
	local boolean allowed_24
	local player whichPlayer_26
	if PlayerStats_force_id[this_3] != -1 then
		set this_4 = Forces_forces[PlayerStats_force_id[this_3]]
		set whichPlayer = PlayerStats_pl[this_3]
		call ForceRemovePlayer(this_4, whichPlayer)
	endif
	set PlayerStats_force_id[this_3] = f_id
	set this_5 = Forces_forces[PlayerStats_force_id[this_3]]
	set whichPlayer_2 = PlayerStats_pl[this_3]
	call ForceAddPlayer(this_5, whichPlayer_2)
	set temp = PlayerStats_force_id[this_3]
	if temp == 0 then
		set unitId = 1747988528
		set allowed = true
		set whichPlayer_3 = PlayerStats_pl[this_3]
		if allowed then
			call SetPlayerTechMaxAllowed(whichPlayer_3, unitId, -1)
		else
			call SetPlayerTechMaxAllowed(whichPlayer_3, unitId, 0)
		endif
		set unitId_2 = 1747988532
		set allowed_2 = true
		set whichPlayer_4 = PlayerStats_pl[this_3]
		if allowed_2 then
			call SetPlayerTechMaxAllowed(whichPlayer_4, unitId_2, -1)
		else
			call SetPlayerTechMaxAllowed(whichPlayer_4, unitId_2, 0)
		endif
		set unitId_3 = 1747990087
		set allowed_3 = false
		set whichPlayer_5 = PlayerStats_pl[this_3]
		if allowed_3 then
			call SetPlayerTechMaxAllowed(whichPlayer_5, unitId_3, -1)
		else
			call SetPlayerTechMaxAllowed(whichPlayer_5, unitId_3, 0)
		endif
		set unitId_4 = 1747990088
		set allowed_4 = false
		set whichPlayer_6 = PlayerStats_pl[this_3]
		if allowed_4 then
			call SetPlayerTechMaxAllowed(whichPlayer_6, unitId_4, -1)
		else
			call SetPlayerTechMaxAllowed(whichPlayer_6, unitId_4, 0)
		endif
		set unitId_5 = 1747989558
		set allowed_5 = false
		set whichPlayer_7 = PlayerStats_pl[this_3]
		if allowed_5 then
			call SetPlayerTechMaxAllowed(whichPlayer_7, unitId_5, -1)
		else
			call SetPlayerTechMaxAllowed(whichPlayer_7, unitId_5, 0)
		endif
		set unitId_6 = 1747989575
		set allowed_6 = false
		set whichPlayer_8 = PlayerStats_pl[this_3]
		if allowed_6 then
			call SetPlayerTechMaxAllowed(whichPlayer_8, unitId_6, -1)
		else
			call SetPlayerTechMaxAllowed(whichPlayer_8, unitId_6, 0)
		endif
	elseif temp == 1 then
		set unitId_7 = 1747988528
		set allowed_7 = true
		set whichPlayer_9 = PlayerStats_pl[this_3]
		if allowed_7 then
			call SetPlayerTechMaxAllowed(whichPlayer_9, unitId_7, -1)
		else
			call SetPlayerTechMaxAllowed(whichPlayer_9, unitId_7, 0)
		endif
		set unitId_8 = 1747988532
		set allowed_8 = true
		set whichPlayer_10 = PlayerStats_pl[this_3]
		if allowed_8 then
			call SetPlayerTechMaxAllowed(whichPlayer_10, unitId_8, -1)
		else
			call SetPlayerTechMaxAllowed(whichPlayer_10, unitId_8, 0)
		endif
		set unitId_9 = 1747990087
		set allowed_9 = false
		set whichPlayer_11 = PlayerStats_pl[this_3]
		if allowed_9 then
			call SetPlayerTechMaxAllowed(whichPlayer_11, unitId_9, -1)
		else
			call SetPlayerTechMaxAllowed(whichPlayer_11, unitId_9, 0)
		endif
		set unitId_10 = 1747990088
		set allowed_10 = false
		set whichPlayer_12 = PlayerStats_pl[this_3]
		if allowed_10 then
			call SetPlayerTechMaxAllowed(whichPlayer_12, unitId_10, -1)
		else
			call SetPlayerTechMaxAllowed(whichPlayer_12, unitId_10, 0)
		endif
		set unitId_11 = 1747989558
		set allowed_11 = false
		set whichPlayer_13 = PlayerStats_pl[this_3]
		if allowed_11 then
			call SetPlayerTechMaxAllowed(whichPlayer_13, unitId_11, -1)
		else
			call SetPlayerTechMaxAllowed(whichPlayer_13, unitId_11, 0)
		endif
		set unitId_12 = 1747989575
		set allowed_12 = false
		set whichPlayer_14 = PlayerStats_pl[this_3]
		if allowed_12 then
			call SetPlayerTechMaxAllowed(whichPlayer_14, unitId_12, -1)
		else
			call SetPlayerTechMaxAllowed(whichPlayer_14, unitId_12, 0)
		endif
	elseif temp == 2 then
		set unitId_13 = 1747990087
		set allowed_13 = true
		set whichPlayer_15 = PlayerStats_pl[this_3]
		if allowed_13 then
			call SetPlayerTechMaxAllowed(whichPlayer_15, unitId_13, -1)
		else
			call SetPlayerTechMaxAllowed(whichPlayer_15, unitId_13, 0)
		endif
		set unitId_14 = 1747990088
		set allowed_14 = true
		set whichPlayer_16 = PlayerStats_pl[this_3]
		if allowed_14 then
			call SetPlayerTechMaxAllowed(whichPlayer_16, unitId_14, -1)
		else
			call SetPlayerTechMaxAllowed(whichPlayer_16, unitId_14, 0)
		endif
		set unitId_15 = 1747988528
		set allowed_15 = false
		set whichPlayer_17 = PlayerStats_pl[this_3]
		if allowed_15 then
			call SetPlayerTechMaxAllowed(whichPlayer_17, unitId_15, -1)
		else
			call SetPlayerTechMaxAllowed(whichPlayer_17, unitId_15, 0)
		endif
		set unitId_16 = 1747988532
		set allowed_16 = false
		set whichPlayer_18 = PlayerStats_pl[this_3]
		if allowed_16 then
			call SetPlayerTechMaxAllowed(whichPlayer_18, unitId_16, -1)
		else
			call SetPlayerTechMaxAllowed(whichPlayer_18, unitId_16, 0)
		endif
		set unitId_17 = 1747989558
		set allowed_17 = false
		set whichPlayer_19 = PlayerStats_pl[this_3]
		if allowed_17 then
			call SetPlayerTechMaxAllowed(whichPlayer_19, unitId_17, -1)
		else
			call SetPlayerTechMaxAllowed(whichPlayer_19, unitId_17, 0)
		endif
		set unitId_18 = 1747989575
		set allowed_18 = false
		set whichPlayer_20 = PlayerStats_pl[this_3]
		if allowed_18 then
			call SetPlayerTechMaxAllowed(whichPlayer_20, unitId_18, -1)
		else
			call SetPlayerTechMaxAllowed(whichPlayer_20, unitId_18, 0)
		endif
	elseif temp == 3 then
		set unitId_19 = 1747989558
		set allowed_19 = true
		set whichPlayer_21 = PlayerStats_pl[this_3]
		if allowed_19 then
			call SetPlayerTechMaxAllowed(whichPlayer_21, unitId_19, -1)
		else
			call SetPlayerTechMaxAllowed(whichPlayer_21, unitId_19, 0)
		endif
		set unitId_20 = 1747989575
		set allowed_20 = true
		set whichPlayer_22 = PlayerStats_pl[this_3]
		if allowed_20 then
			call SetPlayerTechMaxAllowed(whichPlayer_22, unitId_20, -1)
		else
			call SetPlayerTechMaxAllowed(whichPlayer_22, unitId_20, 0)
		endif
		set unitId_21 = 1747990087
		set allowed_21 = false
		set whichPlayer_23 = PlayerStats_pl[this_3]
		if allowed_21 then
			call SetPlayerTechMaxAllowed(whichPlayer_23, unitId_21, -1)
		else
			call SetPlayerTechMaxAllowed(whichPlayer_23, unitId_21, 0)
		endif
		set unitId_22 = 1747990088
		set allowed_22 = false
		set whichPlayer_24 = PlayerStats_pl[this_3]
		if allowed_22 then
			call SetPlayerTechMaxAllowed(whichPlayer_24, unitId_22, -1)
		else
			call SetPlayerTechMaxAllowed(whichPlayer_24, unitId_22, 0)
		endif
		set unitId_23 = 1747988528
		set allowed_23 = false
		set whichPlayer_25 = PlayerStats_pl[this_3]
		if allowed_23 then
			call SetPlayerTechMaxAllowed(whichPlayer_25, unitId_23, -1)
		else
			call SetPlayerTechMaxAllowed(whichPlayer_25, unitId_23, 0)
		endif
		set unitId_24 = 1747988532
		set allowed_24 = false
		set whichPlayer_26 = PlayerStats_pl[this_3]
		if allowed_24 then
			call SetPlayerTechMaxAllowed(whichPlayer_26, unitId_24, -1)
		else
			call SetPlayerTechMaxAllowed(whichPlayer_26, unitId_24, 0)
		endif
	endif
	set this_4 = null
	set whichPlayer = null
	set this_5 = null
	set whichPlayer_2 = null
	set whichPlayer_3 = null
	set whichPlayer_4 = null
	set whichPlayer_5 = null
	set whichPlayer_6 = null
	set whichPlayer_7 = null
	set whichPlayer_8 = null
	set whichPlayer_9 = null
	set whichPlayer_10 = null
	set whichPlayer_11 = null
	set whichPlayer_12 = null
	set whichPlayer_13 = null
	set whichPlayer_14 = null
	set whichPlayer_15 = null
	set whichPlayer_16 = null
	set whichPlayer_17 = null
	set whichPlayer_18 = null
	set whichPlayer_19 = null
	set whichPlayer_20 = null
	set whichPlayer_21 = null
	set whichPlayer_22 = null
	set whichPlayer_23 = null
	set whichPlayer_24 = null
	set whichPlayer_25 = null
	set whichPlayer_26 = null
endfunction

function CityManage_closure_impl_7 takes string stackPos returns nothing
	local integer city_id
	local integer force_id
	local integer player_id
	local integer iterator
	local integer u
	local integer this_3
	local string stackPos_2
	local integer City_City_getCityForceId_result
	local integer this_4
	local player this_5
	local unit this_6
	local integer this_7
	local integer f_id
	local string stackPos_3
	local integer this_8
	local string stackPos_4
	local integer stackTrace_tempReturn
	local integer this_9
	local integer this_10
	local integer count
	local integer unitId
	local player whichPlayer
	local location loc
	local real face
	local integer this_11
	local string stackPos_5
	local integer this_12
	local integer pl_id
	local string stackPos_6
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set city_id = getCityId(GetSpellTargetUnit(), "when calling getCityId in CityManage, line 34")
	set this_3 = City_cities[city_id]
	set stackPos_2 = "when calling getCityForceId in CityManage, line 35"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if City_typeId[this_3] == 0 then
		if this_3 == 0 then
			call error("Nullpointer exception when calling City.getCityForceId", "when calling error in City, line 91")
		else
			call error("Called City.getCityForceId on invalid object.", "when calling error in City, line 91")
		endif
	endif
	set this_4 = this_3
	set City_City_getCityForceId_result = City_force_id[this_4]
	set wurst_stack_depth = wurst_stack_depth - 1
	set force_id = City_City_getCityForceId_result
	set this_6 = GetSpellAbilityUnit()
	set this_5 = GetOwningPlayer(this_6)
	set player_id = GetPlayerId(this_5)
	set this_7 = PlayerStats_player_stats[player_id]
	set f_id = force_id
	set stackPos_3 = "when calling changeForce in CityManage, line 37"
	set wurst_stack[wurst_stack_depth] = stackPos_3
	set wurst_stack_depth = wurst_stack_depth + 1
	if PlayerStats_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling PlayerStats.changeForce", "when calling error in PlayerStats, line 87")
		else
			call error("Called PlayerStats.changeForce on invalid object.", "when calling error in PlayerStats, line 87")
		endif
	endif
	call PlayerStats_changeForce(this_7, f_id)
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_8 = Units_kStartingUnits[force_id]
	set stackPos_4 = "when calling iterator in CityManage, line 40"
	set wurst_stack[wurst_stack_depth] = stackPos_4
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackTrace_tempReturn = new_LLIterator(this_8, "when calling new_LLIterator in LinkedList, line 165")
	set wurst_stack_depth = wurst_stack_depth - 1
	set iterator = stackTrace_tempReturn
	loop
		set this_9 = iterator
		exitwhen  not (LLEntry_next[LLIterator_current[this_9]] != LLIterator_dummy[this_9])
		set this_10 = iterator
		set LLIterator_current[this_10] = LLEntry_next[LLIterator_current[this_10]]
		set u = LLEntry_elem[LLIterator_current[this_10]]
		set count = 1
		set unitId = u
		set whichPlayer = Player_players[player_id]
		set loc = GetSpellTargetLoc()
		set face = 0.
		call GroupClear(bj_lastCreatedGroup)
		loop
			set count = count - 1
			exitwhen count < 0
			call CreateUnitAtLocSaveLast(whichPlayer, unitId, loc, face)
			call GroupAddUnit(bj_lastCreatedGroup, bj_lastCreatedUnit)
		endloop
	endloop
	set this_11 = iterator
	set stackPos_5 = "when calling close in CityManage, line 40"
	set wurst_stack[wurst_stack_depth] = stackPos_5
	set wurst_stack_depth = wurst_stack_depth + 1
	if LLIterator_destroyOnClose[this_11] then
		call dispatch_LLIterator_destroyLLIterator(this_11, "when calling LLIterator in LinkedList, line 450")
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_12 = City_cities[city_id]
	set pl_id = player_id
	set stackPos_6 = "when calling settleCity in CityManage, line 43"
	set wurst_stack[wurst_stack_depth] = stackPos_6
	set wurst_stack_depth = wurst_stack_depth + 1
	if City_typeId[this_12] == 0 then
		if this_12 == 0 then
			call error("Nullpointer exception when calling City.settleCity", "when calling error in City, line 104")
		else
			call error("Called City.settleCity on invalid object.", "when calling error in City, line 104")
		endif
	endif
	call City_settleCity(this_12, pl_id, "when calling settleCity in City, line 104")
	set wurst_stack_depth = wurst_stack_depth - 1
	call KillUnit(GetSpellAbilityUnit())
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_5 = null
	set this_6 = null
	set whichPlayer = null
	set loc = null
endfunction

function bridge_CityManage_closure_impl_4 takes nothing returns nothing
	set wurst_stack_depth = 0
	call CityManage_closure_impl_7("CityManage, line 30")
endfunction

function CityManage_closure_impl_8 takes string stackPos returns nothing
	local integer this_3
	local integer pl_id
	local string stackPos_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_3 = City_cities[getCityId(GetTriggerUnit(), "when calling getCityId in CityManage, line 78")]
	set pl_id = PLAYER_NEUTRAL_AGGRESSIVE
	set stackPos_2 = "when calling changeOwner in CityManage, line 78"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if City_typeId[this_3] == 0 then
		if this_3 == 0 then
			call error("Nullpointer exception when calling City.changeOwner", "when calling error in City, line 97")
		else
			call error("Called City.changeOwner on invalid object.", "when calling error in City, line 97")
		endif
	endif
	call City_changeOwner(this_3, pl_id, "when calling changeOwner in City, line 97")
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function bridge_CityManage_closure_impl_5 takes nothing returns nothing
	set wurst_stack_depth = 0
	call CityManage_closure_impl_8("CityManage, line 75")
endfunction

function getAttentionStringForPlayer takes player pl, string stackPos returns string
	local integer f
	local integer r
	local string s
	local integer this_3
	local string stackPos_2
	local integer PlayerStats_PlayerStats_getForceId_result
	local integer this_4
	local player this_5
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_5 = pl
	set this_3 = PlayerStats_player_stats[GetPlayerId(this_5)]
	set stackPos_2 = "when calling getForceId in Messages, line 53"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if PlayerStats_typeId[this_3] == 0 then
		if this_3 == 0 then
			call error("Nullpointer exception when calling PlayerStats.getForceId", "when calling error in PlayerStats, line 84")
		else
			call error("Called PlayerStats.getForceId on invalid object.", "when calling error in PlayerStats, line 84")
		endif
	endif
	set this_4 = this_3
	set PlayerStats_PlayerStats_getForceId_result = PlayerStats_force_id[this_4]
	set wurst_stack_depth = wurst_stack_depth - 1
	set f = PlayerStats_PlayerStats_getForceId_result
	set r = GetRandomInt(0, 3 - 1)
	if f == 0 then
		set s = Strings_ksAttentionWE[r]
	elseif f == 1 then
		set s = Strings_ksAttentionEE[r]
	elseif f == 2 then
		set s = Strings_ksAttentionME[r]
	elseif f == 3 then
		set s = Strings_ksAttentionBZ[r]
	else
		set s = "Attention!"
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_5 = null
	return "|cffffa600" + s + "|r"
endfunction

function attentionToForce takes string msg, force f, string stackPos returns nothing
	local integer i
	local integer temp
	local player pl
	local player whichPlayer
	local force f_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set i = 0
	set temp = 24 - 1
	loop
		exitwhen i > temp
		set whichPlayer = Player_players[i]
		set f_2 = CreateForce()
		call ForceAddPlayer(f_2, whichPlayer)
		if f_2 == f then
			set pl = Player_players[i]
			call DisplayTimedTextToPlayer(pl, 0., 0., 15.0, getAttentionStringForPlayer(pl, "when calling getAttentionStringForPlayer in Messages, line 116"))
			call DisplayTimedTextToPlayer(pl, 0., 0., 15.0, msg)
		endif
		set i = i + 1
	endloop
	set wurst_stack_depth = wurst_stack_depth - 1
	set pl = null
	set whichPlayer = null
	set f_2 = null
endfunction

function playercolor_toColor takes playercolor this_3 returns integer
	local playercolor this_4 = this_3
	local integer value = 0
	local integer i = 0
	local integer temp = bj_MAX_PLAYER_SLOTS - 1
	local integer cond_result_red
	local integer cond_result_green
	local integer cond_result_blue
	local playercolor this_5
	local integer value_2
	local integer i_2
	local integer temp_2
	local integer this_red
	local integer this_green
	local integer this_blue
	local integer tuple_temp
	local integer tuple_temp_2
	local integer tuple_temp_3
	local integer tuple_temp_4
	local integer tuple_temp_5
	local integer tuple_temp_6
	local integer tuple_temp_7
	local integer tuple_temp_8
	local integer tuple_temp_9
	local integer tuple_temp_10
	loop
		exitwhen i > temp
		if Playercolor_LOOKUP[i] == this_4 then
			set value = i
			exitwhen true
		endif
		set i = i + 1
	endloop
	if value <= 23 then
		set this_5 = this_3
		set value_2 = 0
		set i_2 = 0
		set temp_2 = bj_MAX_PLAYER_SLOTS - 1
		loop
			exitwhen i_2 > temp_2
			if Playercolor_LOOKUP[i_2] == this_5 then
				set value_2 = i_2
				exitwhen true
			endif
			set i_2 = i_2 + 1
		endloop
		set tuple_temp = Colors_PLAYER_COLORS_red[value_2]
		set tuple_temp_2 = Colors_PLAYER_COLORS_green[value_2]
		set tuple_temp_3 = Colors_PLAYER_COLORS_blue[value_2]
		set cond_result_red = tuple_temp
		set cond_result_green = tuple_temp_2
		set cond_result_blue = tuple_temp_3
	else
		set tuple_temp_4 = Colors_COLOR_BLACK_red
		set tuple_temp_5 = Colors_COLOR_BLACK_green
		set tuple_temp_6 = Colors_COLOR_BLACK_blue
		set tuple_temp_7 = Colors_COLOR_BLACK_alpha
		set this_red = tuple_temp_4
		set this_green = tuple_temp_5
		set this_blue = tuple_temp_6
		set tuple_temp_8 = this_red
		set tuple_temp_9 = this_green
		set tuple_temp_10 = this_blue
		set cond_result_red = tuple_temp_8
		set cond_result_green = tuple_temp_9
		set cond_result_blue = tuple_temp_10
	endif
	set playercolor_toColor_return_red = cond_result_red
	set playercolor_toColor_return_green = cond_result_green
	set playercolor_toColor_return_blue = cond_result_blue
	set this_4 = null
	set this_5 = null
	return playercolor_toColor_return_red
endfunction

function player_getNameColored takes player this_3 returns string
	local player this_4 = this_3
	local integer tuple_temp = playercolor_toColor(GetPlayerColor(this_4))
	local integer tuple_temp_2 = playercolor_toColor_return_green
	local integer tuple_temp_3 = playercolor_toColor_return_blue
	local integer this_red = tuple_temp
	local integer this_green = tuple_temp_2
	local integer this_blue = tuple_temp_3
	local integer number = this_red
	local integer firstpart = number / 16
	local integer secondpart = number - firstpart * 16
	local string temp = "|cff" + Colors_hexs[firstpart] + Colors_hexs[secondpart]
	local integer number_2 = this_green
	local integer firstpart_2 = number_2 / 16
	local integer secondpart_2 = number_2 - firstpart_2 * 16
	local string temp_2 = temp + Colors_hexs[firstpart_2] + Colors_hexs[secondpart_2]
	local integer number_3 = this_blue
	local integer firstpart_3 = number_3 / 16
	local integer secondpart_3 = number_3 - firstpart_3 * 16
	set this_4 = null
	return temp_2 + Colors_hexs[firstpart_3] + Colors_hexs[secondpart_3] + GetPlayerName(this_3) + "|r"
endfunction

function CityManage_closure_impl_9 takes string stackPos returns nothing
	local integer city_id
	local integer this_3
	local integer pl_id
	local string stackPos_2
	local player this_4
	local unit this_5
	local unit whichUnit
	local real percent
	local unit this_6
	local unit this_7
	local string temp
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set city_id = getCityId(GetTriggerUnit(), "when calling getCityId in CityManage, line 58")
	set this_3 = City_cities[city_id]
	set this_5 = GetAttacker()
	set this_4 = GetOwningPlayer(this_5)
	set pl_id = GetPlayerId(this_4)
	set stackPos_2 = "when calling changeOwner in CityManage, line 59"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if City_typeId[this_3] == 0 then
		if this_3 == 0 then
			call error("Nullpointer exception when calling City.changeOwner", "when calling error in City, line 97")
		else
			call error("Called City.changeOwner on invalid object.", "when calling error in City, line 97")
		endif
	endif
	call City_changeOwner(this_3, pl_id, "when calling changeOwner in City, line 97")
	set wurst_stack_depth = wurst_stack_depth - 1
	set whichUnit = GetTriggerUnit()
	set percent = 60.0
	call SetUnitState(whichUnit, UNIT_STATE_LIFE, GetUnitState(whichUnit, UNIT_STATE_MAX_LIFE) * RMaxBJ(0., percent) * 0.01)
	set this_6 = GetAttacker()
	set temp = player_getNameColored(GetOwningPlayer(this_6)) + " has just captured "
	set this_7 = GetTriggerUnit()
	call attentionToForce(temp + player_getNameColored(GetOwningPlayer(this_7)) + " Capitol!", bj_FORCE_ALL_PLAYERS, "when calling attentionToForce in CityManage, line 62")
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_4 = null
	set this_5 = null
	set whichUnit = null
	set this_6 = null
	set this_7 = null
endfunction

function bridge_CityManage_closure_impl_6 takes nothing returns nothing
	set wurst_stack_depth = 0
	call CityManage_closure_impl_9("CityManage, line 49")
endfunction

function City_capture takes integer this_3, player whoCaptures, string stackPos returns nothing
	local integer this_4
	local integer pl_id
	local string stackPos_2
	local player this_5
	local unit whichUnit
	local real percent
	local unit whichUnit_2
	local real percent_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_4 = this_3
	set this_5 = whoCaptures
	set pl_id = GetPlayerId(this_5)
	set stackPos_2 = "when calling changeOwner in City, line 112"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if City_typeId[this_4] == 0 then
		if this_4 == 0 then
			call error("Nullpointer exception when calling City.changeOwner", "when calling error in City, line 97")
		else
			call error("Called City.changeOwner on invalid object.", "when calling error in City, line 97")
		endif
	endif
	call City_changeOwner(this_4, pl_id, "when calling changeOwner in City, line 97")
	set wurst_stack_depth = wurst_stack_depth - 1
	set whichUnit = City_city_unit[this_3]
	set percent = 60.0
	call SetUnitState(whichUnit, UNIT_STATE_LIFE, GetUnitState(whichUnit, UNIT_STATE_MAX_LIFE) * RMaxBJ(0., percent) * 0.01)
	set whichUnit_2 = City_city_unit[this_3]
	set percent_2 = 30.0
	call SetUnitState(whichUnit_2, UNIT_STATE_MANA, GetUnitState(whichUnit_2, UNIT_STATE_MAX_MANA) * RMaxBJ(0., percent_2) * 0.01)
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_5 = null
	set whichUnit = null
	set whichUnit_2 = null
endfunction

function CityManage_closure_impl_10 takes integer this_3, string stackPos returns nothing
	local unit u
	local integer city_id
	local unit this_4
	local string stackPos_2
	local boolean stackTrace_tempReturn
	local unit this_5
	local unit whichUnit
	local unit this_6
	local string stackPos_3
	local integer stackTrace_tempReturn_2
	local integer this_7
	local player whoCaptures
	local string stackPos_4
	local unit this_8
	local boolean andLeft
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set u = GetTriggerUnit()
	set this_4 = u
	set stackPos_2 = "when calling isCity in CityManage, line 83"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackTrace_tempReturn = isCity(this_4, "when calling isCity in UnitTools, line 5")
	set wurst_stack_depth = wurst_stack_depth - 1
	if stackTrace_tempReturn then
		set this_5 = u
		set whichUnit = this_5
		set andLeft = GetUnitStatePercent(whichUnit, UNIT_STATE_LIFE, UNIT_STATE_MAX_LIFE) <= 60.0
	else
		set andLeft = false
	endif
	if andLeft then
		set this_6 = u
		set stackPos_3 = "when calling getCityId in CityManage, line 84"
		set wurst_stack[wurst_stack_depth] = stackPos_3
		set wurst_stack_depth = wurst_stack_depth + 1
		set stackTrace_tempReturn_2 = getCityId(this_6, "when calling getCityId in UnitTools, line 9")
		set wurst_stack_depth = wurst_stack_depth - 1
		set city_id = stackTrace_tempReturn_2
		set this_7 = City_cities[city_id]
		set this_8 = GetAttacker()
		set whoCaptures = GetOwningPlayer(this_8)
		set stackPos_4 = "when calling capture in CityManage, line 85"
		set wurst_stack[wurst_stack_depth] = stackPos_4
		set wurst_stack_depth = wurst_stack_depth + 1
		if City_typeId[this_7] == 0 then
			if this_7 == 0 then
				call error("Nullpointer exception when calling City.capture", "when calling error in City, line 111")
			else
				call error("Called City.capture on invalid object.", "when calling error in City, line 111")
			endif
		endif
		call City_capture(this_7, whoCaptures, "when calling capture in City, line 111")
		set wurst_stack_depth = wurst_stack_depth - 1
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set u = null
	set this_4 = null
	set this_5 = null
	set whichUnit = null
	set this_6 = null
	set whoCaptures = null
	set this_8 = null
endfunction

function City_closure_impl_2 takes integer this_3, string stackPos returns nothing
	local unit un
	local real this_x
	local real this_y
	local real v2_x
	local real v2_y
	local real radius
	local real this_4
	local real this_5
	local real this_6
	local unit this_7
	local unit this_8
	local unit this_9
	local unit this_10
	local unit this_11
	local unit this_12
	local unit this_13
	local string msg
	local player pl
	local string stackPos_2
	local real temp
	local real temp_2
	local real temp_3
	local boolean andLeft
	local real tuple_temp
	local real tuple_temp_2
	local real tuple_temp_3
	local real tuple_temp_4
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set un = GetTriggerUnit()
	if isCity(un, "when calling isCity in City, line 233") then
		set this_7 = un
		set this_8 = this_7
		set temp = GetUnitX(this_8)
		set this_9 = this_7
		set tuple_temp = temp
		set tuple_temp_2 = GetUnitY(this_9)
		set this_x = tuple_temp
		set this_y = tuple_temp_2
		set tuple_temp_3 = City_city_pos_x[this_2[this_3]]
		set tuple_temp_4 = City_city_pos_y[this_2[this_3]]
		set v2_x = tuple_temp_3
		set v2_y = tuple_temp_4
		set radius = 300.0
		set this_4 = this_x - v2_x
		set temp_2 = this_4 * this_4
		set this_5 = this_y - v2_y
		set temp_3 = temp_2 + this_5 * this_5
		set this_6 = radius
		set andLeft = temp_3 <= this_6 * this_6
	else
		set andLeft = false
	endif
	if andLeft then
		set this_10 = un
		if GetUnitTypeId(this_10) == 1747989589 then
			call ReplaceUnitBJ(un, 1747989325, bj_UNIT_STATE_METHOD_RELATIVE)
		endif
		set this_11 = un
		if GetUnitTypeId(this_11) == 1747988556 then
			call ReplaceUnitBJ(un, 1747989297, bj_UNIT_STATE_METHOD_RELATIVE)
		endif
		set this_12 = un
		if GetUnitTypeId(this_12) == 1747988555 then
			call ReplaceUnitBJ(un, 1747989060, bj_UNIT_STATE_METHOD_RELATIVE)
		endif
		set this_13 = un
		if GetUnitTypeId(this_13) == 1747989809 then
			call ReplaceUnitBJ(un, 1747989059, bj_UNIT_STATE_METHOD_RELATIVE)
		endif
		set City_city_unit[this_2[this_3]] = un
		if false then
			set msg = "city unit changed"
			set pl = Player_players[0]
			set stackPos_2 = "when calling attentionToPlayer in City, line 245"
			set wurst_stack[wurst_stack_depth] = stackPos_2
			set wurst_stack_depth = wurst_stack_depth + 1
			call DisplayTimedTextToPlayer(pl, 0., 0., 15.0, getAttentionStringForPlayer(pl, "when calling getAttentionStringForPlayer in Messages, line 88"))
			call DisplayTimedTextToPlayer(pl, 0., 0., 15.0, msg)
			set wurst_stack_depth = wurst_stack_depth - 1
		endif
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set un = null
	set this_7 = null
	set this_8 = null
	set this_9 = null
	set this_10 = null
	set this_11 = null
	set this_12 = null
	set this_13 = null
	set pl = null
endfunction

function rectFromIndex takes integer index, string stackPos returns rect
	local rect stackTrace_tempReturn
	local integer this_3
	local integer parentKey
	local fogstate value
	local string stackPos_2
	local integer this_4
	local integer parentKey_2
	local fogstate value_2
	local hashtable this_5
	local integer parentKey_3
	local integer childKey
	local fogstate value_3
	local integer this_6
	local integer parentKey_4
	local string stackPos_3
	local rect Table_Table_loadRect_result
	local integer this_7
	local integer parentKey_5
	local hashtable this_8
	local integer parentKey_6
	local integer childKey_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_3 = TypeCasting_typecastdata
	set parentKey = 0
	set value = ConvertFogState(index)
	set stackPos_2 = "when calling saveFogState in TypeCasting, line 130"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if Table_typeId[this_3] == 0 then
		if this_3 == 0 then
			call error("Nullpointer exception when calling Table.saveFogState", "when calling error in Table, line 168")
		else
			call error("Called Table.saveFogState on invalid object.", "when calling error in Table, line 168")
		endif
	endif
	set this_4 = this_3
	set parentKey_2 = parentKey
	set value_2 = value
	set this_5 = Table_ht
	set parentKey_3 = this_4
	set childKey = parentKey_2
	set value_3 = value_2
	call SaveFogStateHandle(this_5, parentKey_3, childKey, value_3)
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_6 = TypeCasting_typecastdata
	set parentKey_4 = 0
	set stackPos_3 = "when calling loadRect in TypeCasting, line 131"
	set wurst_stack[wurst_stack_depth] = stackPos_3
	set wurst_stack_depth = wurst_stack_depth + 1
	if Table_typeId[this_6] == 0 then
		if this_6 == 0 then
			call error("Nullpointer exception when calling Table.loadRect", "when calling error in Table, line 147")
		else
			call error("Called Table.loadRect on invalid object.", "when calling error in Table, line 147")
		endif
	endif
	set this_7 = this_6
	set parentKey_5 = parentKey_4
	set this_8 = Table_ht
	set parentKey_6 = this_7
	set childKey_2 = parentKey_5
	set Table_Table_loadRect_result = LoadRectHandle(this_8, parentKey_6, childKey_2)
	set wurst_stack_depth = wurst_stack_depth - 1
	set stackTrace_tempReturn = Table_Table_loadRect_result
	set wurst_stack_depth = wurst_stack_depth - 1
	set rectFromIndextempReturn = stackTrace_tempReturn
	set stackTrace_tempReturn = null
	set value = null
	set value_2 = null
	set this_5 = null
	set value_3 = null
	set Table_Table_loadRect_result = null
	set this_8 = null
	return rectFromIndextempReturn
endfunction

function rect_contains takes rect this_3, real r_x, real r_y returns boolean
	local real temp = r_x
	local rect this_4 = this_3
	local rect this_5
	local rect this_6
	local rect this_7
	local real temp_2
	local boolean andLeft
	local real temp_3
	local boolean andLeft_2
	local real temp_4
	local boolean andLeft_3
	if temp > GetRectMinX(this_4) then
		set temp_2 = r_x
		set this_5 = this_3
		set andLeft = temp_2 < GetRectMaxX(this_5)
	else
		set andLeft = false
	endif
	if andLeft then
		set temp_3 = r_y
		set this_6 = this_3
		set andLeft_2 = temp_3 > GetRectMinY(this_6)
	else
		set andLeft_2 = false
	endif
	if andLeft_2 then
		set temp_4 = r_y
		set this_7 = this_3
		set andLeft_3 = temp_4 < GetRectMaxY(this_7)
	else
		set andLeft_3 = false
	endif
	set this_4 = null
	set this_5 = null
	set this_6 = null
	set this_7 = null
	return andLeft_3
endfunction

function NoShipsNearRivers_closure_impl takes integer this_3, string stackPos returns nothing
	local unit u
	local real upos_x
	local real upos_y
	local integer iterator
	local rect r
	local unit this_4
	local unit this_5
	local unit this_6
	local unit this_7
	local integer this_8
	local string stackPos_2
	local integer stackTrace_tempReturn
	local integer this_9
	local integer this_10
	local unit this_11
	local player pl
	local integer g
	local integer cur_lumb
	local unit this_12
	local string msg
	local player pl_2
	local string stackPos_3
	local unit this_13
	local integer this_14
	local string stackPos_4
	local real temp
	local real tuple_temp
	local real tuple_temp_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set u = GetTriggerUnit()
	set this_4 = u
	if GetUnitTypeId(this_4) == 1747988569 then
		set this_5 = u
		set this_6 = this_5
		set temp = GetUnitX(this_6)
		set this_7 = this_5
		set tuple_temp = temp
		set tuple_temp_2 = GetUnitY(this_7)
		set upos_x = tuple_temp
		set upos_y = tuple_temp_2
		set this_8 = Units_kRiverRects
		set stackPos_2 = "when calling iterator in NoShipsNearRivers, line 13"
		set wurst_stack[wurst_stack_depth] = stackPos_2
		set wurst_stack_depth = wurst_stack_depth + 1
		set stackTrace_tempReturn = new_LLIterator(this_8, "when calling new_LLIterator in LinkedList, line 165")
		set wurst_stack_depth = wurst_stack_depth - 1
		set iterator = stackTrace_tempReturn
		loop
			set this_9 = iterator
			exitwhen  not (LLEntry_next[LLIterator_current[this_9]] != LLIterator_dummy[this_9])
			set this_10 = iterator
			set LLIterator_current[this_10] = LLEntry_next[LLIterator_current[this_10]]
			set r = rectFromIndex(LLEntry_elem[LLIterator_current[this_10]], "when calling rectFromIndex in NoShipsNearRivers, line 13")
			if rect_contains(r, upos_x, upos_y) then
				set this_11 = u
				call KillUnit(this_11)
				set this_12 = u
				set pl = GetOwningPlayer(this_12)
				set g = 150
				set cur_lumb = GetPlayerState(pl, PLAYER_STATE_RESOURCE_LUMBER)
				call SetPlayerState(pl, PLAYER_STATE_RESOURCE_LUMBER, cur_lumb + g)
				set msg = "Unfortunately, you cannot build shipyards near rivers"
				set this_13 = u
				set pl_2 = GetOwningPlayer(this_13)
				set stackPos_3 = "when calling attentionToPlayer in NoShipsNearRivers, line 17"
				set wurst_stack[wurst_stack_depth] = stackPos_3
				set wurst_stack_depth = wurst_stack_depth + 1
				call DisplayTimedTextToPlayer(pl_2, 0., 0., 15.0, getAttentionStringForPlayer(pl_2, "when calling getAttentionStringForPlayer in Messages, line 88"))
				call DisplayTimedTextToPlayer(pl_2, 0., 0., 15.0, msg)
				set wurst_stack_depth = wurst_stack_depth - 1
			endif
		endloop
		set this_14 = iterator
		set stackPos_4 = "when calling close in NoShipsNearRivers, line 13"
		set wurst_stack[wurst_stack_depth] = stackPos_4
		set wurst_stack_depth = wurst_stack_depth + 1
		if LLIterator_destroyOnClose[this_14] then
			call dispatch_LLIterator_destroyLLIterator(this_14, "when calling LLIterator in LinkedList, line 450")
		endif
		set wurst_stack_depth = wurst_stack_depth - 1
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set u = null
	set r = null
	set this_4 = null
	set this_5 = null
	set this_6 = null
	set this_7 = null
	set this_11 = null
	set pl = null
	set this_12 = null
	set pl_2 = null
	set this_13 = null
endfunction

function dispatch_EventListener_ClosureEvents_EventListener_onEvent takes integer this_3, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if EventListener_typeId[this_3] == 0 then
		if this_3 == 0 then
			call error("Nullpointer exception when calling EventListener.onEvent", "when calling error in ClosureEvents, line 108")
		else
			call error("Called EventListener.onEvent on invalid object.", "when calling error in ClosureEvents, line 108")
		endif
	endif
	if EventListener_typeId[this_3] <= 653 then
		if EventListener_typeId[this_3] <= 652 then
			call City_closure_impl_2(this_3, "when calling City_closure_impl in ClosureEvents, line 108")
		else
			call CityManage_closure_impl_10(this_3, "when calling CityManage_closure_impl in ClosureEvents, line 108")
		endif
	else
		call NoShipsNearRivers_closure_impl(this_3, "when calling NoShipsNearRivers_closure_impl in ClosureEvents, line 108")
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function registerEventId takes eventid evnt, string stackPos returns integer
	local integer eventId
	local handle this_3
	local eventid this_4
	local integer eventId_2
	local handle this_5
	local string msg
	local player showTo
	local integer loglvl
	local string msg_2
	local string compositeMsg
	local integer this_6
	local integer this_7
	local playerunitevent p
	local code c
	local eventid this_8
	local integer eventId_3
	local handle this_9
	local eventid this_10
	local integer eventId_4
	local handle this_11
	local integer this_12
	local string temp
	local boolean andLeft
	local boolean andLeft_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_3 = evnt
	set eventId = GetHandleId(this_3)
	set ClosureEvents_eventTypeCounter = ClosureEvents_eventTypeCounter + 1
	set ClosureEvents_eventidToIndex[eventId] = ClosureEvents_eventTypeCounter
	set this_4 = evnt
	set this_5 = this_4
	set eventId_2 = GetHandleId(this_5)
	if (eventId_2 >= 18 and eventId_2 <= 51) or (eventId_2 >= 269 and eventId_2 <= 277) then
		set this_6 = eventId
		set temp = "reg handleid: " + I2S(this_6) + " -> eventId: "
		set this_7 = ClosureEvents_eventTypeCounter
		set msg = temp + I2S(this_7)
		set showTo = Player_localPlayer
		set loglvl = 1
		set msg_2 = msg
		if 2 <= loglvl then
			set compositeMsg = Loglevel_getTag(loglvl) + " - " + msg_2
			call DisplayTimedTextToPlayer(showTo, 0., 0., 45., compositeMsg)
		endif
		set p = ConvertPlayerUnitEvent(eventId)
		set c = ref_function_bridge_EventListener_generalEventCallback
		call registerPlayerUnitEvent(p, null, c, null)
	else
		if evnt != EVENT_UNIT_DAMAGED and evnt != EVENT_PLAYER_LEAVE and evnt != ClosureEvents_EVENT_PLAYER_CHAT_FILTER then
			set this_8 = evnt
			set this_9 = this_8
			set eventId_3 = GetHandleId(this_9)
			set andLeft =  not ((eventId_3 >= 261 and eventId_3 <= 268) or eventId_3 == 17)
		else
			set andLeft = false
		endif
		if andLeft then
			set this_10 = evnt
			set this_11 = this_10
			set eventId_4 = GetHandleId(this_11)
			set andLeft_2 =  not (eventId_4 >= 305 and eventId_4 <= 307)
		else
			set andLeft_2 = false
		endif
		if andLeft_2 then
			set this_12 = eventId
			call error("registering handleid: " + I2S(this_12) + " non-playerunitevent. Except EVENT_UNIT_DAMAGED and EVENT_PLAYER_LEAVE these are not supported right now.", "when calling error in ClosureEvents, line 242")
		endif
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_3 = null
	set this_4 = null
	set this_5 = null
	set showTo = null
	set p = null
	set this_8 = null
	set this_9 = null
	set this_10 = null
	set this_11 = null
	return ClosureEvents_eventTypeCounter
endfunction

function EventListener_generalEventCallback takes string stackPos returns nothing
	local unit trigUnit
	local integer id
	local integer listener
	local integer listener_2
	local eventid this_3
	local string stackPos_2
	local integer id_2
	local handle this_4
	local unit this_5
	local unit this_6
	local unit this_7
	local unit this_8
	local unit this_9
	local unit this_10
	local boolean andLeft
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set trigUnit = GetTriggerUnit()
	set this_3 = GetTriggerEventId()
	set stackPos_2 = "when calling toIntId in ClosureEvents, line 169"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_4 = this_3
	set id_2 = ClosureEvents_eventidToIndex[GetHandleId(this_4)]
	if id_2 == 0 then
		set id_2 = registerEventId(this_3, "when calling registerEventId in ClosureEvents, line 228")
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set id = id_2
	if trigUnit != null and true then
		set this_5 = trigUnit
		set this_6 = this_5
		set andLeft = GetUnitUserData(this_6) > 0
	else
		set andLeft = false
	endif
	if andLeft then
		set this_7 = trigUnit
		set this_8 = this_7
		if EventListener_unitListenersFirsts[GetUnitUserData(this_8)] != 0 then
			set this_9 = trigUnit
			set this_10 = this_9
			set listener = EventListener_unitListenersFirsts[GetUnitUserData(this_10)]
			loop
				exitwhen  not (listener != 0)
				if EventListener_eventId[listener] == id then
					call dispatch_EventListener_ClosureEvents_EventListener_onEvent(listener, "when calling onEvent in ClosureEvents, line 176")
				endif
				set listener = EventListener_next[listener]
			endloop
		endif
	endif
	if EventListener_generalListenersFirsts[id] != 0 then
		set listener_2 = EventListener_generalListenersFirsts[id]
		loop
			exitwhen  not (listener_2 != 0)
			call dispatch_EventListener_ClosureEvents_EventListener_onEvent(listener_2, "when calling onEvent in ClosureEvents, line 182")
			set listener_2 = EventListener_next[listener_2]
		endloop
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set trigUnit = null
	set this_3 = null
	set this_4 = null
	set this_5 = null
	set this_6 = null
	set this_7 = null
	set this_8 = null
	set this_9 = null
	set this_10 = null
endfunction

function bridge_ClosureEvents_closure_impl takes nothing returns nothing
	local string stackPos
	set wurst_stack_depth = 0
	set stackPos = "ClosureEvents, line 286"
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call EventListener_generalEventCallback("when calling generalEventCallback in ClosureEvents, line 286")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function bridge_ClosureEvents_closure_impl_2 takes nothing returns nothing
	local string stackPos
	set wurst_stack_depth = 0
	set stackPos = "ClosureEvents, line 288"
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call EventListener_generalEventCallback("when calling generalEventCallback in ClosureEvents, line 288")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function bridge_ClosureEvents_closure_impl_3 takes nothing returns nothing
	local string stackPos
	set wurst_stack_depth = 0
	set stackPos = "ClosureEvents, line 287"
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call EventListener_generalEventCallback("when calling generalEventCallback in ClosureEvents, line 287")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function dispatch_HashMap_HashMap_HashMap_get takes integer this_3, integer key, string stackPos returns integer
	local integer HashMap_HashMap_get_result
	local integer this_4
	local integer key_2
	local string stackPos_2
	local integer stackTrace_tempReturn
	local integer this_5
	local integer parentKey
	local string stackPos_3
	local integer Table_Table_loadInt_result
	local integer this_6
	local integer parentKey_2
	local hashtable this_7
	local integer parentKey_3
	local integer childKey
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if Table_typeId[this_3] == 0 then
		if this_3 == 0 then
			call error("Nullpointer exception when calling HashMap.get", "when calling error in HashMap, line 19")
		else
			call error("Called HashMap.get on invalid object.", "when calling error in HashMap, line 19")
		endif
	endif
	set this_4 = this_3
	set key_2 = key
	set stackPos_2 = "when calling get in HashMap, line 19"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_5 = this_4
	set parentKey = key_2
	set stackPos_3 = "when calling loadInt in HashMap, line 20"
	set wurst_stack[wurst_stack_depth] = stackPos_3
	set wurst_stack_depth = wurst_stack_depth + 1
	if Table_typeId[this_5] == 0 then
		if this_5 == 0 then
			call error("Nullpointer exception when calling Table.loadInt", "when calling error in Table, line 39")
		else
			call error("Called Table.loadInt on invalid object.", "when calling error in Table, line 39")
		endif
	endif
	set this_6 = this_5
	set parentKey_2 = parentKey
	set this_7 = Table_ht
	set parentKey_3 = this_6
	set childKey = parentKey_2
	set Table_Table_loadInt_result = LoadInteger(this_7, parentKey_3, childKey)
	set wurst_stack_depth = wurst_stack_depth - 1
	set stackTrace_tempReturn = Table_Table_loadInt_result
	set wurst_stack_depth = wurst_stack_depth - 1
	set HashMap_HashMap_get_result = stackTrace_tempReturn
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_7 = null
	return HashMap_HashMap_get_result
endfunction

function dispatch_HashMap_HashMap_HashMap_has takes integer this_3, integer key, string stackPos returns boolean
	local boolean HashMap_HashMap_has_result
	local integer this_4
	local integer key_2
	local string stackPos_2
	local boolean stackTrace_tempReturn
	local integer this_5
	local integer parentKey
	local string stackPos_3
	local boolean Table_Table_hasInt_result
	local integer this_6
	local integer parentKey_2
	local hashtable this_7
	local integer parentKey_3
	local integer childKey
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if Table_typeId[this_3] == 0 then
		if this_3 == 0 then
			call error("Nullpointer exception when calling HashMap.has", "when calling error in HashMap, line 11")
		else
			call error("Called HashMap.has on invalid object.", "when calling error in HashMap, line 11")
		endif
	endif
	set this_4 = this_3
	set key_2 = key
	set stackPos_2 = "when calling has in HashMap, line 11"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_5 = this_4
	set parentKey = key_2
	set stackPos_3 = "when calling hasInt in HashMap, line 12"
	set wurst_stack[wurst_stack_depth] = stackPos_3
	set wurst_stack_depth = wurst_stack_depth + 1
	if Table_typeId[this_5] == 0 then
		if this_5 == 0 then
			call error("Nullpointer exception when calling Table.hasInt", "when calling error in Table, line 9")
		else
			call error("Called Table.hasInt on invalid object.", "when calling error in Table, line 9")
		endif
	endif
	set this_6 = this_5
	set parentKey_2 = parentKey
	set this_7 = Table_ht
	set parentKey_3 = this_6
	set childKey = parentKey_2
	set Table_Table_hasInt_result = HaveSavedInteger(this_7, parentKey_3, childKey)
	set wurst_stack_depth = wurst_stack_depth - 1
	set stackTrace_tempReturn = Table_Table_hasInt_result
	set wurst_stack_depth = wurst_stack_depth - 1
	set HashMap_HashMap_has_result = stackTrace_tempReturn
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_7 = null
	return HashMap_HashMap_has_result
endfunction

function dispatch_OnCastListener_ClosureEvents_OnCastListener_fire takes integer this_3, unit caster, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if OnCastListener_typeId[this_3] == 0 then
		if this_3 == 0 then
			call error("Nullpointer exception when calling OnCastListener.fire", "when calling error in ClosureEvents, line 56")
		else
			call error("Called OnCastListener.fire on invalid object.", "when calling error in ClosureEvents, line 56")
		endif
	endif
	if OnCastListener_typeId[this_3] <= 682 then
		if OnCastListener_typeId[this_3] <= 681 then
			call GetSpellAbilityId()
		else
			call GetSpellTargetX()
			call GetSpellTargetY()
		endif
	else
		call GetSpellTargetUnit()
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function EventListener_onSpellEffect takes string stackPos returns nothing
	local unit trigUnit
	local integer abilId
	local integer listener
	local integer listener_2
	local unit object
	local handle this_3
	local unit object_2
	local handle this_4
	local integer temp
	local integer temp_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set trigUnit = GetTriggerUnit()
	set abilId = GetSpellAbilityId()
	set temp = EventListener_castMapCasters
	set object = trigUnit
	set this_3 = object
	if dispatch_HashMap_HashMap_HashMap_has(temp, GetHandleId(this_3), "when calling has in ClosureEvents, line 188") then
		set temp_2 = EventListener_castMapCasters
		set object_2 = trigUnit
		set this_4 = object_2
		set listener = dispatch_HashMap_HashMap_HashMap_get(temp_2, GetHandleId(this_4), "when calling get in ClosureEvents, line 189")
		loop
			exitwhen  not (listener != 0)
			if OnCastListener_abilId[listener] == -1 or OnCastListener_abilId[listener] == abilId then
				call dispatch_OnCastListener_ClosureEvents_OnCastListener_fire(listener, GetSpellAbilityUnit(), "when calling fire in ClosureEvents, line 192")
			endif
			set listener = OnCastListener_next[listener]
		endloop
	endif
	if dispatch_HashMap_HashMap_HashMap_has(EventListener_castMap, abilId, "when calling has in ClosureEvents, line 194") then
		set listener_2 = dispatch_HashMap_HashMap_HashMap_get(EventListener_castMap, abilId, "when calling get in ClosureEvents, line 195")
		loop
			exitwhen  not (listener_2 != 0)
			if OnCastListener_eventUnit[listener_2] == null or OnCastListener_eventUnit[listener_2] == trigUnit then
				call dispatch_OnCastListener_ClosureEvents_OnCastListener_fire(listener_2, GetSpellAbilityUnit(), "when calling fire in ClosureEvents, line 198")
			endif
			set listener_2 = OnCastListener_next[listener_2]
		endloop
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set trigUnit = null
	set object = null
	set this_3 = null
	set object_2 = null
	set this_4 = null
endfunction

function bridge_ClosureEvents_closure_impl_4 takes nothing returns nothing
	local string stackPos
	set wurst_stack_depth = 0
	set stackPos = "ClosureEvents, line 306"
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call EventListener_onSpellEffect("when calling onSpellEffect in ClosureEvents, line 306")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function HashList_decrOccurences takes integer this_3, integer elem, string stackPos returns nothing
	local hashtable this_4
	local integer parentKey
	local integer childKey
	local integer value
	local integer this_5
	local integer elem_2
	local string stackPos_2
	local integer HashList_HashList_count_result
	local integer this_6
	local integer elem_3
	local hashtable this_7
	local integer parentKey_2
	local integer childKey_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_4 = HashList_occurences
	set parentKey = this_3
	set childKey = elem
	set this_5 = this_3
	set elem_2 = elem
	set stackPos_2 = "when calling count in HashList, line 22"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if HashList_typeId[this_5] == 0 then
		if this_5 == 0 then
			call error("Nullpointer exception when calling HashList.count", "when calling error in HashList, line 15")
		else
			call error("Called HashList.count on invalid object.", "when calling error in HashList, line 15")
		endif
	endif
	set this_6 = this_5
	set elem_3 = elem_2
	set this_7 = HashList_occurences
	set parentKey_2 = this_6
	set childKey_2 = elem_3
	set HashList_HashList_count_result = LoadInteger(this_7, parentKey_2, childKey_2)
	set wurst_stack_depth = wurst_stack_depth - 1
	set value = HashList_HashList_count_result - 1
	call SaveInteger(this_4, parentKey, childKey, value)
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_4 = null
	set this_7 = null
endfunction

function HashList_removeAt takes integer this_3, integer index, string stackPos returns nothing
	local integer i
	local integer temp
	local integer this_4
	local integer elem
	local string stackPos_2
	local hashtable this_5
	local integer parentKey
	local integer childKey
	local hashtable this_6
	local integer parentKey_2
	local integer childKey_2
	local integer value
	local hashtable this_7
	local integer parentKey_3
	local integer childKey_3
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_4 = this_3
	set this_5 = HashList_ht
	set parentKey = this_3
	set childKey = index
	set elem = LoadInteger(this_5, parentKey, childKey)
	set stackPos_2 = "when calling decrOccurences in HashList, line 54"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if HashList_typeId[this_4] == 0 then
		if this_4 == 0 then
			call error("Nullpointer exception when calling HashList.decrOccurences", "when calling error in HashList, line 21")
		else
			call error("Called HashList.decrOccurences on invalid object.", "when calling error in HashList, line 21")
		endif
	endif
	call HashList_decrOccurences(this_4, elem, "when calling decrOccurences in HashList, line 21")
	set wurst_stack_depth = wurst_stack_depth - 1
	set i = index
	set temp = HashList_size[this_3]
	loop
		exitwhen i > temp
		set this_6 = HashList_ht
		set parentKey_2 = this_3
		set childKey_2 = i
		set this_7 = HashList_ht
		set parentKey_3 = this_3
		set childKey_3 = i + 1
		set value = LoadInteger(this_7, parentKey_3, childKey_3)
		call SaveInteger(this_6, parentKey_2, childKey_2, value)
		set i = i + 1
	endloop
	set HashList_size[this_3] = HashList_size[this_3] - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_5 = null
	set this_6 = null
	set this_7 = null
endfunction

function HashList_remove takes integer this_3, integer t, string stackPos returns nothing
	local integer i
	local integer temp
	local hashtable this_4
	local integer parentKey
	local integer childKey
	local integer this_5
	local integer index
	local string stackPos_2
	local integer temp_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set i = 0
	set temp = HashList_size[this_3] - 1
	loop
		exitwhen i > temp
		set temp_2 = t
		set this_4 = HashList_ht
		set parentKey = this_3
		set childKey = i
		if temp_2 == LoadInteger(this_4, parentKey, childKey) then
			set this_5 = this_3
			set index = i
			set stackPos_2 = "when calling removeAt in HashList, line 63"
			set wurst_stack[wurst_stack_depth] = stackPos_2
			set wurst_stack_depth = wurst_stack_depth + 1
			if HashList_typeId[this_5] == 0 then
				if this_5 == 0 then
					call error("Nullpointer exception when calling HashList.removeAt", "when calling error in HashList, line 53")
				else
					call error("Called HashList.removeAt on invalid object.", "when calling error in HashList, line 53")
				endif
			endif
			call HashList_removeAt(this_5, index, "when calling removeAt in HashList, line 53")
			set wurst_stack_depth = wurst_stack_depth - 1
			exitwhen true
		endif
		set i = i + 1
	endloop
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_4 = null
endfunction

function dispatch_HashList_HashList_HashList_has takes integer this_3, integer elem, string stackPos returns boolean
	local boolean HashList_HashList_has_result
	local integer this_4
	local integer elem_2
	local string stackPos_2
	local boolean stackTrace_tempReturn
	local integer this_5
	local integer elem_3
	local string stackPos_3
	local integer HashList_HashList_count_result
	local integer this_6
	local integer elem_4
	local hashtable this_7
	local integer parentKey
	local integer childKey
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if HashList_typeId[this_3] == 0 then
		if this_3 == 0 then
			call error("Nullpointer exception when calling HashList.has", "when calling error in HashList, line 87")
		else
			call error("Called HashList.has on invalid object.", "when calling error in HashList, line 87")
		endif
	endif
	set this_4 = this_3
	set elem_2 = elem
	set stackPos_2 = "when calling has in HashList, line 87"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_5 = this_4
	set elem_3 = elem_2
	set stackPos_3 = "when calling count in HashList, line 88"
	set wurst_stack[wurst_stack_depth] = stackPos_3
	set wurst_stack_depth = wurst_stack_depth + 1
	if HashList_typeId[this_5] == 0 then
		if this_5 == 0 then
			call error("Nullpointer exception when calling HashList.count", "when calling error in HashList, line 15")
		else
			call error("Called HashList.count on invalid object.", "when calling error in HashList, line 15")
		endif
	endif
	set this_6 = this_5
	set elem_4 = elem_3
	set this_7 = HashList_occurences
	set parentKey = this_6
	set childKey = elem_4
	set HashList_HashList_count_result = LoadInteger(this_7, parentKey, childKey)
	set wurst_stack_depth = wurst_stack_depth - 1
	set stackTrace_tempReturn = HashList_HashList_count_result > 0
	set wurst_stack_depth = wurst_stack_depth - 1
	set HashList_HashList_has_result = stackTrace_tempReturn
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_7 = null
	return HashList_HashList_has_result
endfunction

function IterableMap_remove takes integer this_3, integer key, string stackPos returns nothing
	local integer this_4
	local integer key_2
	local string stackPos_2
	local integer this_5
	local integer parentKey
	local string stackPos_3
	local integer this_6
	local integer parentKey_2
	local integer this_7
	local integer key_3
	local string stackPos_4
	local boolean HashMap_IterableMap_hasKey_result
	local integer this_8
	local integer key_4
	local string stackPos_5
	local boolean stackTrace_tempReturn
	local integer this_9
	local integer t
	local string stackPos_6
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_4 = this_3
	set key_2 = key
	set stackPos_2 = "when calling remove in HashMap, line 54"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_5 = this_4
	set parentKey = key_2
	set stackPos_3 = "when calling removeInt in HashMap, line 24"
	set wurst_stack[wurst_stack_depth] = stackPos_3
	set wurst_stack_depth = wurst_stack_depth + 1
	if Table_typeId[this_5] == 0 then
		if this_5 == 0 then
			call error("Nullpointer exception when calling Table.removeInt", "when calling error in Table, line 24")
		else
			call error("Called Table.removeInt on invalid object.", "when calling error in Table, line 24")
		endif
	endif
	set this_6 = this_5
	set parentKey_2 = parentKey
	call RemoveSavedInteger(Table_ht, this_6, parentKey_2)
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_7 = this_3
	set key_3 = key
	set stackPos_4 = "when calling hasKey in HashMap, line 55"
	set wurst_stack[wurst_stack_depth] = stackPos_4
	set wurst_stack_depth = wurst_stack_depth + 1
	if Table_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling IterableMap.hasKey", "when calling error in HashMap, line 75")
		else
			call error("Called IterableMap.hasKey on invalid object.", "when calling error in HashMap, line 75")
		endif
	endif
	set this_8 = this_7
	set key_4 = key_3
	set stackPos_5 = "when calling hasKey in HashMap, line 75"
	set wurst_stack[wurst_stack_depth] = stackPos_5
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackTrace_tempReturn = dispatch_HashList_HashList_HashList_has(IterableMap_keys[this_8], key_4, "when calling has in HashMap, line 76")
	set wurst_stack_depth = wurst_stack_depth - 1
	set HashMap_IterableMap_hasKey_result = stackTrace_tempReturn
	set wurst_stack_depth = wurst_stack_depth - 1
	if HashMap_IterableMap_hasKey_result then
		set this_9 = IterableMap_keys[this_3]
		set t = key
		set stackPos_6 = "when calling remove in HashMap, line 56"
		set wurst_stack[wurst_stack_depth] = stackPos_6
		set wurst_stack_depth = wurst_stack_depth + 1
		if HashList_typeId[this_9] == 0 then
			if this_9 == 0 then
				call error("Nullpointer exception when calling HashList.remove", "when calling error in HashList, line 60")
			else
				call error("Called HashList.remove on invalid object.", "when calling error in HashList, line 60")
			endif
		endif
		call HashList_remove(this_9, t, "when calling remove in HashList, line 60")
		set wurst_stack_depth = wurst_stack_depth - 1
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function dispatch_HashMap_HashMap_HashMap_remove takes integer this_3, integer key, string stackPos returns nothing
	local integer this_4
	local integer key_2
	local string stackPos_2
	local integer this_5
	local integer parentKey
	local string stackPos_3
	local integer this_6
	local integer parentKey_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if Table_typeId[this_3] == 0 then
		if this_3 == 0 then
			call error("Nullpointer exception when calling HashMap.remove", "when calling error in HashMap, line 23")
		else
			call error("Called HashMap.remove on invalid object.", "when calling error in HashMap, line 23")
		endif
	endif
	if Table_typeId[this_3] <= 698 then
		set this_4 = this_3
		set key_2 = key
		set stackPos_2 = "when calling remove in HashMap, line 23"
		set wurst_stack[wurst_stack_depth] = stackPos_2
		set wurst_stack_depth = wurst_stack_depth + 1
		set this_5 = this_4
		set parentKey = key_2
		set stackPos_3 = "when calling removeInt in HashMap, line 24"
		set wurst_stack[wurst_stack_depth] = stackPos_3
		set wurst_stack_depth = wurst_stack_depth + 1
		if Table_typeId[this_5] == 0 then
			if this_5 == 0 then
				call error("Nullpointer exception when calling Table.removeInt", "when calling error in Table, line 24")
			else
				call error("Called Table.removeInt on invalid object.", "when calling error in Table, line 24")
			endif
		endif
		set this_6 = this_5
		set parentKey_2 = parentKey
		call RemoveSavedInteger(Table_ht, this_6, parentKey_2)
		set wurst_stack_depth = wurst_stack_depth - 1
		set wurst_stack_depth = wurst_stack_depth - 1
	else
		call IterableMap_remove(this_3, key, "when calling remove in HashMap, line 23")
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function HashList_incrOccurences takes integer this_3, integer elem, string stackPos returns nothing
	local hashtable this_4
	local integer parentKey
	local integer childKey
	local integer value
	local integer this_5
	local integer elem_2
	local string stackPos_2
	local integer HashList_HashList_count_result
	local integer this_6
	local integer elem_3
	local hashtable this_7
	local integer parentKey_2
	local integer childKey_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_4 = HashList_occurences
	set parentKey = this_3
	set childKey = elem
	set this_5 = this_3
	set elem_2 = elem
	set stackPos_2 = "when calling count in HashList, line 19"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if HashList_typeId[this_5] == 0 then
		if this_5 == 0 then
			call error("Nullpointer exception when calling HashList.count", "when calling error in HashList, line 15")
		else
			call error("Called HashList.count on invalid object.", "when calling error in HashList, line 15")
		endif
	endif
	set this_6 = this_5
	set elem_3 = elem_2
	set this_7 = HashList_occurences
	set parentKey_2 = this_6
	set childKey_2 = elem_3
	set HashList_HashList_count_result = LoadInteger(this_7, parentKey_2, childKey_2)
	set wurst_stack_depth = wurst_stack_depth - 1
	set value = HashList_HashList_count_result + 1
	call SaveInteger(this_4, parentKey, childKey, value)
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_4 = null
	set this_7 = null
endfunction

function HashList_add_1 takes integer this_3, integer elems_0, string stackPos returns nothing
	local hashtable this_4
	local integer parentKey
	local integer childKey
	local integer value
	local integer this_5
	local integer elem
	local string stackPos_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_4 = HashList_ht
	set parentKey = this_3
	set childKey = HashList_size[this_3]
	set value = elems_0
	call SaveInteger(this_4, parentKey, childKey, value)
	set this_5 = this_3
	set elem = elems_0
	set stackPos_2 = "when calling incrOccurences in HashList, line 28"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if HashList_typeId[this_5] == 0 then
		if this_5 == 0 then
			call error("Nullpointer exception when calling HashList.incrOccurences", "when calling error in HashList, line 18")
		else
			call error("Called HashList.incrOccurences on invalid object.", "when calling error in HashList, line 18")
		endif
	endif
	call HashList_incrOccurences(this_5, elem, "when calling incrOccurences in HashList, line 18")
	set wurst_stack_depth = wurst_stack_depth - 1
	set HashList_size[this_3] = HashList_size[this_3] + 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_4 = null
endfunction

function IterableMap_put takes integer this_3, integer key, integer value, string stackPos returns nothing
	local integer this_4
	local integer key_2
	local integer value_2
	local string stackPos_2
	local integer this_5
	local integer parentKey
	local integer value_3
	local string stackPos_3
	local integer this_6
	local integer parentKey_2
	local integer value_4
	local hashtable this_7
	local integer parentKey_3
	local integer childKey
	local integer value_5
	local integer this_8
	local integer key_3
	local string stackPos_4
	local boolean HashMap_IterableMap_hasKey_result
	local integer this_9
	local integer key_4
	local string stackPos_5
	local boolean stackTrace_tempReturn
	local integer this_10
	local integer elems_0
	local string stackPos_6
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_4 = this_3
	set key_2 = key
	set value_2 = value
	set stackPos_2 = "when calling put in HashMap, line 48"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_5 = this_4
	set parentKey = key_2
	set value_3 = value_2
	set stackPos_3 = "when calling saveInt in HashMap, line 16"
	set wurst_stack[wurst_stack_depth] = stackPos_3
	set wurst_stack_depth = wurst_stack_depth + 1
	if Table_typeId[this_5] == 0 then
		if this_5 == 0 then
			call error("Nullpointer exception when calling Table.saveInt", "when calling error in Table, line 42")
		else
			call error("Called Table.saveInt on invalid object.", "when calling error in Table, line 42")
		endif
	endif
	set this_6 = this_5
	set parentKey_2 = parentKey
	set value_4 = value_3
	set this_7 = Table_ht
	set parentKey_3 = this_6
	set childKey = parentKey_2
	set value_5 = value_4
	call SaveInteger(this_7, parentKey_3, childKey, value_5)
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_8 = this_3
	set key_3 = key
	set stackPos_4 = "when calling hasKey in HashMap, line 49"
	set wurst_stack[wurst_stack_depth] = stackPos_4
	set wurst_stack_depth = wurst_stack_depth + 1
	if Table_typeId[this_8] == 0 then
		if this_8 == 0 then
			call error("Nullpointer exception when calling IterableMap.hasKey", "when calling error in HashMap, line 75")
		else
			call error("Called IterableMap.hasKey on invalid object.", "when calling error in HashMap, line 75")
		endif
	endif
	set this_9 = this_8
	set key_4 = key_3
	set stackPos_5 = "when calling hasKey in HashMap, line 75"
	set wurst_stack[wurst_stack_depth] = stackPos_5
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackTrace_tempReturn = dispatch_HashList_HashList_HashList_has(IterableMap_keys[this_9], key_4, "when calling has in HashMap, line 76")
	set wurst_stack_depth = wurst_stack_depth - 1
	set HashMap_IterableMap_hasKey_result = stackTrace_tempReturn
	set wurst_stack_depth = wurst_stack_depth - 1
	if  not HashMap_IterableMap_hasKey_result then
		set this_10 = IterableMap_keys[this_3]
		set elems_0 = key
		set stackPos_6 = "when calling add in HashMap, line 50"
		set wurst_stack[wurst_stack_depth] = stackPos_6
		set wurst_stack_depth = wurst_stack_depth + 1
		if HashList_typeId[this_10] == 0 then
			if this_10 == 0 then
				call error("Nullpointer exception when calling HashList.add", "when calling error in HashList, line 25")
			else
				call error("Called HashList.add on invalid object.", "when calling error in HashList, line 25")
			endif
		endif
		call HashList_add_1(this_10, elems_0, "when calling add in HashList, line 25")
		set wurst_stack_depth = wurst_stack_depth - 1
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_7 = null
endfunction

function dispatch_HashMap_HashMap_HashMap_put takes integer this_3, integer key, integer value, string stackPos returns nothing
	local integer this_4
	local integer key_2
	local integer value_2
	local string stackPos_2
	local integer this_5
	local integer parentKey
	local integer value_3
	local string stackPos_3
	local integer this_6
	local integer parentKey_2
	local integer value_4
	local hashtable this_7
	local integer parentKey_3
	local integer childKey
	local integer value_5
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if Table_typeId[this_3] == 0 then
		if this_3 == 0 then
			call error("Nullpointer exception when calling HashMap.put", "when calling error in HashMap, line 15")
		else
			call error("Called HashMap.put on invalid object.", "when calling error in HashMap, line 15")
		endif
	endif
	if Table_typeId[this_3] <= 698 then
		set this_4 = this_3
		set key_2 = key
		set value_2 = value
		set stackPos_2 = "when calling put in HashMap, line 15"
		set wurst_stack[wurst_stack_depth] = stackPos_2
		set wurst_stack_depth = wurst_stack_depth + 1
		set this_5 = this_4
		set parentKey = key_2
		set value_3 = value_2
		set stackPos_3 = "when calling saveInt in HashMap, line 16"
		set wurst_stack[wurst_stack_depth] = stackPos_3
		set wurst_stack_depth = wurst_stack_depth + 1
		if Table_typeId[this_5] == 0 then
			if this_5 == 0 then
				call error("Nullpointer exception when calling Table.saveInt", "when calling error in Table, line 42")
			else
				call error("Called Table.saveInt on invalid object.", "when calling error in Table, line 42")
			endif
		endif
		set this_6 = this_5
		set parentKey_2 = parentKey
		set value_4 = value_3
		set this_7 = Table_ht
		set parentKey_3 = this_6
		set childKey = parentKey_2
		set value_5 = value_4
		call SaveInteger(this_7, parentKey_3, childKey, value_5)
		set wurst_stack_depth = wurst_stack_depth - 1
		set wurst_stack_depth = wurst_stack_depth - 1
	else
		call IterableMap_put(this_3, key, value, "when calling put in HashMap, line 15")
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_7 = null
endfunction

function OnCastListener_onDestroy takes integer this_3, string stackPos returns nothing
	local integer listener
	local integer listener_2
	local unit object
	local handle this_4
	local unit object_2
	local handle this_5
	local integer temp
	local integer temp_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if OnCastListener_eventUnit[this_3] != null then
		set temp = EventListener_castMapCasters
		set object = OnCastListener_eventUnit[this_3]
		set this_4 = object
		set listener = dispatch_HashMap_HashMap_HashMap_get(temp, GetHandleId(this_4), "when calling get in ClosureEvents, line 60")
		if listener == this_3 then
			set temp_2 = EventListener_castMapCasters
			set object_2 = OnCastListener_eventUnit[this_3]
			set this_5 = object_2
			call dispatch_HashMap_HashMap_HashMap_put(temp_2, GetHandleId(this_5), OnCastListener_next[this_3], "when calling put in ClosureEvents, line 62")
		elseif OnCastListener_prev[this_3] != 0 then
			set OnCastListener_next[OnCastListener_prev[this_3]] = OnCastListener_next[this_3]
		endif
	else
		set listener_2 = dispatch_HashMap_HashMap_HashMap_get(EventListener_castMap, OnCastListener_abilId[this_3], "when calling get in ClosureEvents, line 66")
		if listener_2 == this_3 then
			call dispatch_HashMap_HashMap_HashMap_put(EventListener_castMap, OnCastListener_abilId[this_3], OnCastListener_next[this_3], "when calling put in ClosureEvents, line 68")
		elseif OnCastListener_prev[this_3] != 0 then
			set OnCastListener_next[OnCastListener_prev[this_3]] = OnCastListener_next[this_3]
		endif
	endif
	set OnCastListener_prev[OnCastListener_next[this_3]] = OnCastListener_prev[this_3]
	set OnCastListener_next[this_3] = 0
	set OnCastListener_prev[this_3] = 0
	set wurst_stack_depth = wurst_stack_depth - 1
	set object = null
	set this_4 = null
	set object_2 = null
	set this_5 = null
endfunction

function dispatch_OnCastListener_destroyOnCastListener takes integer this_3, string stackPos returns nothing
	local integer this_4
	local string stackPos_2
	local integer obj
	local string stackPos_3
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if OnCastListener_typeId[this_3] == 0 then
		if this_3 == 0 then
			call error("Nullpointer exception when calling OnCastListener.OnCastListener", "when calling error in ClosureEvents, line 50")
		else
			call error("Called OnCastListener.OnCastListener on invalid object.", "when calling error in ClosureEvents, line 50")
		endif
	endif
	set this_4 = this_3
	set stackPos_2 = "when calling destroyOnCastListener in ClosureEvents, line 50"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	call OnCastListener_onDestroy(this_4, "when calling OnCastListener_onDestroy in ClosureEvents, line 58")
	set obj = this_4
	set stackPos_3 = "when calling OnCastListener in ClosureEvents, line 58"
	set wurst_stack[wurst_stack_depth] = stackPos_3
	set wurst_stack_depth = wurst_stack_depth + 1
	if OnCastListener_typeId[obj] == 0 then
		call error("Double free: object of type OnCastListener", "when calling error in ClosureEvents, line 50")
	else
		set OnCastListener_firstFree = OnCastListener_firstFree + 1
		set OnCastListener_typeId[obj] = 0
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function destroyEventListener takes integer this_3, string stackPos returns nothing
	local integer this_4
	local integer listener
	local integer obj
	local string stackPos_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_4 = this_3
	set listener = EventListener_generalListenersFirsts[EventListener_eventId[this_4]]
	if listener == this_4 then
		set EventListener_generalListenersFirsts[EventListener_eventId[this_4]] = EventListener_next[this_4]
	elseif EventListener_prev[this_4] != 0 then
		set EventListener_next[EventListener_prev[this_4]] = EventListener_next[this_4]
	endif
	set EventListener_prev[EventListener_next[this_4]] = EventListener_prev[this_4]
	set listener = EventListener_unitListenersFirsts[EventListener_eventId[this_4]]
	if listener == this_4 then
		set EventListener_unitListenersFirsts[EventListener_eventId[this_4]] = EventListener_next[this_4]
	elseif EventListener_prev[this_4] != 0 then
		set EventListener_next[EventListener_prev[this_4]] = EventListener_next[this_4]
	endif
	set EventListener_prev[EventListener_next[this_4]] = EventListener_prev[this_4]
	set EventListener_next[this_4] = 0
	set EventListener_prev[this_4] = 0
	set obj = this_3
	set stackPos_2 = "when calling EventListener in ClosureEvents, line 201"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if EventListener_typeId[obj] == 0 then
		call error("Double free: object of type EventListener", "when calling error in ClosureEvents, line 98")
	else
		set EventListener_nextFree[EventListener_firstFree] = obj
		set EventListener_firstFree = EventListener_firstFree + 1
		set EventListener_typeId[obj] = 0
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function unregisterEvents takes integer id, string stackPos returns nothing
	local integer listener
	local integer t
	local string msg
	local player showTo
	local integer loglvl
	local string msg_2
	local string compositeMsg
	local integer this_3
	local integer this_4
	local string stackPos_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if id > 0 then
		if EventListener_unitListenersFirsts[id] != 0 then
			set this_3 = id
			set msg = "unregister unit has listeners. startid: " + I2S(this_3)
			set showTo = Player_localPlayer
			set loglvl = 0
			set msg_2 = msg
			if 2 <= loglvl then
				set compositeMsg = Loglevel_getTag(loglvl) + " - " + msg_2
				call DisplayTimedTextToPlayer(showTo, 0., 0., 45., compositeMsg)
			endif
			set listener = EventListener_unitListenersFirsts[id]
			set EventListener_unitListenersFirsts[id] = 0
			loop
				exitwhen  not (listener != 0)
				set t = listener
				set listener = EventListener_next[listener]
				set this_4 = t
				set stackPos_2 = "when calling EventListener in ClosureEvents, line 275"
				set wurst_stack[wurst_stack_depth] = stackPos_2
				set wurst_stack_depth = wurst_stack_depth + 1
				if EventListener_typeId[this_4] == 0 then
					if this_4 == 0 then
						call error("Nullpointer exception when calling EventListener.EventListener", "when calling error in ClosureEvents, line 98")
					else
						call error("Called EventListener.EventListener on invalid object.", "when calling error in ClosureEvents, line 98")
					endif
				endif
				call destroyEventListener(this_4, "when calling destroyEventListener in ClosureEvents, line 98")
				set wurst_stack_depth = wurst_stack_depth - 1
			endloop
		endif
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set showTo = null
endfunction

function unregisterEventsForUnit takes unit u, string stackPos returns nothing
	local integer listener
	local integer t
	local integer listener_2
	local integer t_2
	local unit this_3
	local unit this_4
	local unit object
	local handle this_5
	local unit object_2
	local handle this_6
	local unit object_3
	local handle this_7
	local unit object_4
	local handle this_8
	local unit object_5
	local handle this_9
	local integer temp
	local integer temp_2
	local integer temp_3
	local integer temp_4
	local integer temp_5
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if true then
		set this_3 = u
		set this_4 = this_3
		call unregisterEvents(GetUnitUserData(this_4), "when calling unregisterEvents in ClosureEvents, line 251")
		set temp = EventListener_castMapCasters
		set object = u
		set this_5 = object
		if dispatch_HashMap_HashMap_HashMap_has(temp, GetHandleId(this_5), "when calling has in ClosureEvents, line 252") then
			set temp_2 = EventListener_castMapCasters
			set object_2 = u
			set this_6 = object_2
			set listener = dispatch_HashMap_HashMap_HashMap_get(temp_2, GetHandleId(this_6), "when calling get in ClosureEvents, line 253")
			set temp_3 = EventListener_castMapCasters
			set object_3 = u
			set this_7 = object_3
			call dispatch_HashMap_HashMap_HashMap_remove(temp_3, GetHandleId(this_7), "when calling remove in ClosureEvents, line 254")
			loop
				exitwhen  not (listener != 0)
				set t = listener
				set listener = OnCastListener_next[listener]
				call dispatch_OnCastListener_destroyOnCastListener(t, "when calling OnCastListener in ClosureEvents, line 258")
			endloop
		endif
		set temp_4 = EventListener_castMapCasters
		set object_4 = u
		set this_8 = object_4
		if dispatch_HashMap_HashMap_HashMap_has(temp_4, GetHandleId(this_8), "when calling has in ClosureEvents, line 259") then
			set temp_5 = EventListener_castMapCasters
			set object_5 = u
			set this_9 = object_5
			set listener_2 = dispatch_HashMap_HashMap_HashMap_get(temp_5, GetHandleId(this_9), "when calling get in ClosureEvents, line 260")
			loop
				exitwhen  not (listener_2 != 0)
				set t_2 = listener_2
				set listener_2 = OnCastListener_next[listener_2]
				call dispatch_OnCastListener_destroyOnCastListener(t_2, "when calling OnCastListener in ClosureEvents, line 264")
			endloop
		endif
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_3 = null
	set this_4 = null
	set object = null
	set this_5 = null
	set object_2 = null
	set this_6 = null
	set object_3 = null
	set this_7 = null
	set object_4 = null
	set this_8 = null
	set object_5 = null
	set this_9 = null
endfunction

function bridge_ClosureEvents_closure_impl_5 takes nothing returns nothing
	local string stackPos
	set wurst_stack_depth = 0
	set stackPos = "ClosureEvents, line 283"
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call unregisterEventsForUnit(UnitIndexer_deindexedUnit, "when calling unregisterEventsForUnit in ClosureEvents, line 283")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function bridge_ClosureForGroups_closure_impl takes nothing returns nothing
	local string stackPos
	set wurst_stack_depth = 0
	set stackPos = "ClosureForGroups, line 12"
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call dispatch_ForGroupCallback_ClosureForGroups_ForGroupCallback_callback(ClosureForGroups_tempCallbacks[ClosureForGroups_tempCallbacksCount - 1], GetFilterUnit(), "when calling callback in ClosureForGroups, line 12")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function bridge_EventListener_generalEventCallback takes nothing returns nothing
	set wurst_stack_depth = 0
	call EventListener_generalEventCallback("ClosureEvents, line 240")
endfunction

function triggerFromIndex takes integer index, string stackPos returns trigger
	local trigger stackTrace_tempReturn
	local integer this_3
	local integer parentKey
	local fogstate value
	local string stackPos_2
	local integer this_4
	local integer parentKey_2
	local fogstate value_2
	local hashtable this_5
	local integer parentKey_3
	local integer childKey
	local fogstate value_3
	local integer this_6
	local integer parentKey_4
	local string stackPos_3
	local trigger Table_Table_loadTrigger_result
	local integer this_7
	local integer parentKey_5
	local hashtable this_8
	local integer parentKey_6
	local integer childKey_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_3 = TypeCasting_typecastdata
	set parentKey = 0
	set value = ConvertFogState(index)
	set stackPos_2 = "when calling saveFogState in TypeCasting, line 88"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if Table_typeId[this_3] == 0 then
		if this_3 == 0 then
			call error("Nullpointer exception when calling Table.saveFogState", "when calling error in Table, line 168")
		else
			call error("Called Table.saveFogState on invalid object.", "when calling error in Table, line 168")
		endif
	endif
	set this_4 = this_3
	set parentKey_2 = parentKey
	set value_2 = value
	set this_5 = Table_ht
	set parentKey_3 = this_4
	set childKey = parentKey_2
	set value_3 = value_2
	call SaveFogStateHandle(this_5, parentKey_3, childKey, value_3)
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_6 = TypeCasting_typecastdata
	set parentKey_4 = 0
	set stackPos_3 = "when calling loadTrigger in TypeCasting, line 89"
	set wurst_stack[wurst_stack_depth] = stackPos_3
	set wurst_stack_depth = wurst_stack_depth + 1
	if Table_typeId[this_6] == 0 then
		if this_6 == 0 then
			call error("Nullpointer exception when calling Table.loadTrigger", "when calling error in Table, line 111")
		else
			call error("Called Table.loadTrigger on invalid object.", "when calling error in Table, line 111")
		endif
	endif
	set this_7 = this_6
	set parentKey_5 = parentKey_4
	set this_8 = Table_ht
	set parentKey_6 = this_7
	set childKey_2 = parentKey_5
	set Table_Table_loadTrigger_result = LoadTriggerHandle(this_8, parentKey_6, childKey_2)
	set wurst_stack_depth = wurst_stack_depth - 1
	set stackTrace_tempReturn = Table_Table_loadTrigger_result
	set wurst_stack_depth = wurst_stack_depth - 1
	set triggerFromIndextempReturn = stackTrace_tempReturn
	set stackTrace_tempReturn = null
	set value = null
	set value_2 = null
	set this_5 = null
	set value_3 = null
	set Table_Table_loadTrigger_result = null
	set this_8 = null
	return triggerFromIndextempReturn
endfunction

function RegisterEvents_closure_impl takes string stackPos returns boolean
	local boolean stackTrace_tempReturn
	local trigger this_3
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_3 = triggerFromIndex(dispatch_HashMap_HashMap_HashMap_get(RegisterEvents_onCastMap, GetSpellAbilityId(), "when calling get in RegisterEvents, line 58"), "when calling triggerFromIndex in RegisterEvents, line 58")
	set stackTrace_tempReturn = TriggerEvaluate(this_3)
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_3 = null
	return stackTrace_tempReturn
endfunction

function bridge_RegisterEvents_closure_impl takes nothing returns boolean
	set wurst_stack_depth = 0
	return RegisterEvents_closure_impl("RegisterEvents, line 58")
endfunction

function new_UnitIndex takes unit whichUnit, string stackPos returns integer
	local integer this_3
	local string stackPos_2
	local integer this_4
	local integer this_5
	local unit whichUnit_2
	local unit this_6
	local integer data
	local trigger this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackPos_2 = "when calling UnitIndex in UnitIndexer, line 166"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if UnitIndex_firstFree == 0 then
		if UnitIndex_maxIndex < 32768 then
			set UnitIndex_maxIndex = UnitIndex_maxIndex + 1
			set this_4 = UnitIndex_maxIndex
			set UnitIndex_typeId[this_4] = 707
		else
			call error("Out of memory: Could not create UnitIndex.", "when calling error in UnitIndexer, line 157")
			set this_4 = 0
		endif
	else
		set UnitIndex_firstFree = UnitIndex_firstFree - 1
		set this_4 = UnitIndex_nextFree[UnitIndex_firstFree]
		set UnitIndex_typeId[this_4] = 707
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_3 = this_4
	set this_5 = this_3
	set whichUnit_2 = whichUnit
	set UnitIndex__unit[this_5] = whichUnit_2
	set this_6 = UnitIndex__unit[this_5]
	set data = this_5
	call SetUnitUserData(this_6, data)
	set UnitIndexer_indexedUnit = UnitIndex__unit[this_5]
	set this_7 = UnitIndexer_onIndexTrigger
	call TriggerEvaluate(this_7)
	set wurst_stack_depth = wurst_stack_depth - 1
	set whichUnit_2 = null
	set this_6 = null
	set this_7 = null
	return this_3
endfunction

function UnitIndexer_closure_impl takes string stackPos returns nothing
	local unit this_3
	local string stackPos_2
	local integer instance
	local unit this_4
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if true then
		set this_3 = OnUnitEnterLeave_tempUnits[OnUnitEnterLeave_tempUnitsCount - 1]
		set stackPos_2 = "when calling toUnitIndex in UnitIndexer, line 179"
		set wurst_stack[wurst_stack_depth] = stackPos_2
		set wurst_stack_depth = wurst_stack_depth + 1
		set this_4 = this_3
		set instance = GetUnitUserData(this_4)
		if instance == 0 then
			set instance = new_UnitIndex(this_3, "when calling new_UnitIndex in UnitIndexer, line 125")
		endif
		set wurst_stack_depth = wurst_stack_depth - 1
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_3 = null
	set this_4 = null
endfunction

function bridge_UnitIndexer_closure_impl takes nothing returns nothing
	set wurst_stack_depth = 0
	call UnitIndexer_closure_impl("UnitIndexer, line 179")
endfunction

function destroyUnitIndex takes integer this_3, string stackPos returns nothing
	local integer this_4
	local trigger this_5
	local unit this_6
	local integer data
	local integer obj
	local string stackPos_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_4 = this_3
	set UnitIndexer_deindexedUnit = UnitIndex__unit[this_4]
	set this_5 = UnitIndexer_onDeindexTrigger
	call TriggerEvaluate(this_5)
	set this_6 = UnitIndex__unit[this_4]
	set data = 0
	call SetUnitUserData(this_6, data)
	set obj = this_3
	set stackPos_2 = "when calling UnitIndex in UnitIndexer, line 172"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if UnitIndex_typeId[obj] == 0 then
		call error("Double free: object of type UnitIndex", "when calling error in UnitIndexer, line 157")
	else
		set UnitIndex_nextFree[UnitIndex_firstFree] = obj
		set UnitIndex_firstFree = UnitIndex_firstFree + 1
		set UnitIndex_typeId[obj] = 0
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_5 = null
	set this_6 = null
endfunction

function unit_deindex takes unit this_3, string stackPos returns boolean
	local unit this_4
	local integer this_5
	local string stackPos_2
	local unit this_6
	local string stackPos_3
	local integer instance
	local unit this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_4 = this_3
	if GetUnitUserData(this_4) == 0 then
		set wurst_stack_depth = wurst_stack_depth - 1
		set this_4 = null
		set this_6 = null
		set this_7 = null
		return false
	else
		set this_6 = this_3
		set stackPos_3 = "when calling toUnitIndex in UnitIndexer, line 154"
		set wurst_stack[wurst_stack_depth] = stackPos_3
		set wurst_stack_depth = wurst_stack_depth + 1
		set this_7 = this_6
		set instance = GetUnitUserData(this_7)
		if instance == 0 then
			set instance = new_UnitIndex(this_6, "when calling new_UnitIndex in UnitIndexer, line 125")
		endif
		set wurst_stack_depth = wurst_stack_depth - 1
		set this_5 = instance
		set stackPos_2 = "when calling UnitIndex in UnitIndexer, line 154"
		set wurst_stack[wurst_stack_depth] = stackPos_2
		set wurst_stack_depth = wurst_stack_depth + 1
		if UnitIndex_typeId[this_5] == 0 then
			if this_5 == 0 then
				call error("Nullpointer exception when calling UnitIndex.UnitIndex", "when calling error in UnitIndexer, line 157")
			else
				call error("Called UnitIndex.UnitIndex on invalid object.", "when calling error in UnitIndexer, line 157")
			endif
		endif
		call destroyUnitIndex(this_5, "when calling destroyUnitIndex in UnitIndexer, line 157")
		set wurst_stack_depth = wurst_stack_depth - 1
		set wurst_stack_depth = wurst_stack_depth - 1
		set this_4 = null
		set this_6 = null
		set this_7 = null
		return true
	endif
endfunction

function bridge_UnitIndexer_closure_impl_2 takes nothing returns nothing
	local string stackPos
	set wurst_stack_depth = 0
	set stackPos = "UnitIndexer, line 180"
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if true then
		call unit_deindex(OnUnitEnterLeave_tempUnits[OnUnitEnterLeave_tempUnitsCount - 1], "when calling deindex in UnitIndexer, line 180")
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function PlayerStats_alliance_states_get takes integer index1, integer index2, string stackPos returns integer
	local integer returnVal
	if index2 < 0 or index2 >= 24 then
		call error("Index out of Bounds", stackPos)
	elseif index2 <= 11 then
		if index2 <= 5 then
			if index2 <= 2 then
				if index2 <= 1 then
					if index2 <= 0 then
						set returnVal = PlayerStats_alliance_states_0[index1]
					else
						set returnVal = PlayerStats_alliance_states_1[index1]
					endif
				else
					set returnVal = PlayerStats_alliance_states_2[index1]
				endif
			elseif index2 <= 4 then
				if index2 <= 3 then
					set returnVal = PlayerStats_alliance_states_3[index1]
				else
					set returnVal = PlayerStats_alliance_states_4[index1]
				endif
			else
				set returnVal = PlayerStats_alliance_states_5[index1]
			endif
		elseif index2 <= 8 then
			if index2 <= 7 then
				if index2 <= 6 then
					set returnVal = PlayerStats_alliance_states_6[index1]
				else
					set returnVal = PlayerStats_alliance_states_7[index1]
				endif
			else
				set returnVal = PlayerStats_alliance_states_8[index1]
			endif
		elseif index2 <= 10 then
			if index2 <= 9 then
				set returnVal = PlayerStats_alliance_states_9[index1]
			else
				set returnVal = PlayerStats_alliance_states_10[index1]
			endif
		else
			set returnVal = PlayerStats_alliance_states_11[index1]
		endif
	elseif index2 <= 17 then
		if index2 <= 14 then
			if index2 <= 13 then
				if index2 <= 12 then
					set returnVal = PlayerStats_alliance_states_12[index1]
				else
					set returnVal = PlayerStats_alliance_states_13[index1]
				endif
			else
				set returnVal = PlayerStats_alliance_states_14[index1]
			endif
		elseif index2 <= 16 then
			if index2 <= 15 then
				set returnVal = PlayerStats_alliance_states_15[index1]
			else
				set returnVal = PlayerStats_alliance_states_16[index1]
			endif
		else
			set returnVal = PlayerStats_alliance_states_17[index1]
		endif
	elseif index2 <= 20 then
		if index2 <= 19 then
			if index2 <= 18 then
				set returnVal = PlayerStats_alliance_states_18[index1]
			else
				set returnVal = PlayerStats_alliance_states_19[index1]
			endif
		else
			set returnVal = PlayerStats_alliance_states_20[index1]
		endif
	elseif index2 <= 22 then
		if index2 <= 21 then
			set returnVal = PlayerStats_alliance_states_21[index1]
		else
			set returnVal = PlayerStats_alliance_states_22[index1]
		endif
	else
		set returnVal = PlayerStats_alliance_states_23[index1]
	endif
	return returnVal
endfunction

function getGoodNewsStringForPlayer takes player pl, string stackPos returns string
	local integer f
	local integer r
	local string s
	local integer this_3
	local string stackPos_2
	local integer PlayerStats_PlayerStats_getForceId_result
	local integer this_4
	local player this_5
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_5 = pl
	set this_3 = PlayerStats_player_stats[GetPlayerId(this_5)]
	set stackPos_2 = "when calling getForceId in Messages, line 37"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if PlayerStats_typeId[this_3] == 0 then
		if this_3 == 0 then
			call error("Nullpointer exception when calling PlayerStats.getForceId", "when calling error in PlayerStats, line 84")
		else
			call error("Called PlayerStats.getForceId on invalid object.", "when calling error in PlayerStats, line 84")
		endif
	endif
	set this_4 = this_3
	set PlayerStats_PlayerStats_getForceId_result = PlayerStats_force_id[this_4]
	set wurst_stack_depth = wurst_stack_depth - 1
	set f = PlayerStats_PlayerStats_getForceId_result
	set r = GetRandomInt(0, 3 - 1)
	if f == 0 then
		set s = Strings_ksGoodNewsWE[r]
	elseif f == 1 then
		set s = Strings_ksGoodNewsEE[r]
	elseif f == 2 then
		set s = Strings_ksGoodNewsME[r]
	elseif f == 3 then
		set s = Strings_ksGoodNewsBZ[r]
	else
		set s = "Good news!"
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_5 = null
	return "|cff00ff00" + s + "|r"
endfunction

function PlayerStats_changeUnhapiness takes integer this_3, integer change, string stackPos returns nothing
	local string msg
	local player pl
	local string stackPos_2
	local integer this_4
	local integer this_5
	local string msg_2
	local player pl_2
	local string stackPos_3
	local integer this_6
	local integer this_7
	local string temp
	local string temp_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if  not PlayerStats_is_in_game[this_3] then
		set wurst_stack_depth = wurst_stack_depth - 1
		set pl = null
		set pl_2 = null
		return
	endif
	set PlayerStats_unhappiness[this_3] = PlayerStats_unhappiness[this_3] + change
	if change > 0 then
		set this_4 = change
		set temp = "Unhappiness of your people has risen by " + I2S(this_4) + " points!\nNow you have "
		set this_5 = PlayerStats_unhappiness[this_3]
		set msg = temp + I2S(this_5)
		set pl = PlayerStats_pl[this_3]
		set stackPos_2 = "when calling attentionToPlayer in PlayerStats, line 19"
		set wurst_stack[wurst_stack_depth] = stackPos_2
		set wurst_stack_depth = wurst_stack_depth + 1
		call DisplayTimedTextToPlayer(pl, 0., 0., 15.0, getAttentionStringForPlayer(pl, "when calling getAttentionStringForPlayer in Messages, line 88"))
		call DisplayTimedTextToPlayer(pl, 0., 0., 15.0, msg)
		set wurst_stack_depth = wurst_stack_depth - 1
	elseif change < 0 then
		set this_6 =  - change
		set temp_2 = "Unhappiness of your people has dropped down by " + I2S(this_6) + " points!\nNow you have "
		set this_7 = PlayerStats_unhappiness[this_3]
		set msg_2 = temp_2 + I2S(this_7)
		set pl_2 = PlayerStats_pl[this_3]
		set stackPos_3 = "when calling goodNewsToPlayer in PlayerStats, line 21"
		set wurst_stack[wurst_stack_depth] = stackPos_3
		set wurst_stack_depth = wurst_stack_depth + 1
		call DisplayTimedTextToPlayer(pl_2, 0., 0., 15.0, getGoodNewsStringForPlayer(pl_2, "when calling getGoodNewsStringForPlayer in Messages, line 85"))
		call DisplayTimedTextToPlayer(pl_2, 0., 0., 15.0, msg_2)
		set wurst_stack_depth = wurst_stack_depth - 1
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set pl = null
	set pl_2 = null
endfunction

function PlayerStats_alliance_states_set takes integer instanceId, integer arrayIndex, integer value, string stackPos returns nothing
	if arrayIndex < 0 or arrayIndex >= 24 then
		call error("Index out of Bounds", stackPos)
	elseif arrayIndex <= 11 then
		if arrayIndex <= 5 then
			if arrayIndex <= 2 then
				if arrayIndex <= 1 then
					if arrayIndex <= 0 then
						set PlayerStats_alliance_states_0[instanceId] = value
					else
						set PlayerStats_alliance_states_1[instanceId] = value
					endif
				else
					set PlayerStats_alliance_states_2[instanceId] = value
				endif
			elseif arrayIndex <= 4 then
				if arrayIndex <= 3 then
					set PlayerStats_alliance_states_3[instanceId] = value
				else
					set PlayerStats_alliance_states_4[instanceId] = value
				endif
			else
				set PlayerStats_alliance_states_5[instanceId] = value
			endif
		elseif arrayIndex <= 8 then
			if arrayIndex <= 7 then
				if arrayIndex <= 6 then
					set PlayerStats_alliance_states_6[instanceId] = value
				else
					set PlayerStats_alliance_states_7[instanceId] = value
				endif
			else
				set PlayerStats_alliance_states_8[instanceId] = value
			endif
		elseif arrayIndex <= 10 then
			if arrayIndex <= 9 then
				set PlayerStats_alliance_states_9[instanceId] = value
			else
				set PlayerStats_alliance_states_10[instanceId] = value
			endif
		else
			set PlayerStats_alliance_states_11[instanceId] = value
		endif
	elseif arrayIndex <= 17 then
		if arrayIndex <= 14 then
			if arrayIndex <= 13 then
				if arrayIndex <= 12 then
					set PlayerStats_alliance_states_12[instanceId] = value
				else
					set PlayerStats_alliance_states_13[instanceId] = value
				endif
			else
				set PlayerStats_alliance_states_14[instanceId] = value
			endif
		elseif arrayIndex <= 16 then
			if arrayIndex <= 15 then
				set PlayerStats_alliance_states_15[instanceId] = value
			else
				set PlayerStats_alliance_states_16[instanceId] = value
			endif
		else
			set PlayerStats_alliance_states_17[instanceId] = value
		endif
	elseif arrayIndex <= 20 then
		if arrayIndex <= 19 then
			if arrayIndex <= 18 then
				set PlayerStats_alliance_states_18[instanceId] = value
			else
				set PlayerStats_alliance_states_19[instanceId] = value
			endif
		else
			set PlayerStats_alliance_states_20[instanceId] = value
		endif
	elseif arrayIndex <= 22 then
		if arrayIndex <= 21 then
			set PlayerStats_alliance_states_21[instanceId] = value
		else
			set PlayerStats_alliance_states_22[instanceId] = value
		endif
	else
		set PlayerStats_alliance_states_23[instanceId] = value
	endif
endfunction

function PlayerStats_setAlliance takes integer this_3, player which_player, integer alliance_state, string stackPos returns nothing
	local integer id
	local player this_4
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_4 = which_player
	set id = GetPlayerId(this_4)
	if  not PlayerStats_is_in_game[this_3] then
		set wurst_stack_depth = wurst_stack_depth - 1
		set this_4 = null
		return
	endif
	if id >= 24 then
		set wurst_stack_depth = wurst_stack_depth - 1
		set this_4 = null
		return
	endif
	if PlayerStats_alliance_states_get(this_3, id, "when reading array PlayerStats_alliance_states in PlayerStats, line 39") == alliance_state or which_player == PlayerStats_pl[this_3] then
		set wurst_stack_depth = wurst_stack_depth - 1
		set this_4 = null
		return
	endif
	call PlayerStats_alliance_states_set(this_3, id, alliance_state, "when writing array PlayerStats_alliance_states in PlayerStats, line 41")
	call SetPlayerAllianceStateBJ(PlayerStats_pl[this_3], which_player, alliance_state)
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_4 = null
endfunction

function getNoteStringForPlayer takes player pl, string stackPos returns string
	local integer f
	local integer r
	local string s
	local integer this_3
	local string stackPos_2
	local integer PlayerStats_PlayerStats_getForceId_result
	local integer this_4
	local player this_5
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_5 = pl
	set this_3 = PlayerStats_player_stats[GetPlayerId(this_5)]
	set stackPos_2 = "when calling getForceId in Messages, line 21"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if PlayerStats_typeId[this_3] == 0 then
		if this_3 == 0 then
			call error("Nullpointer exception when calling PlayerStats.getForceId", "when calling error in PlayerStats, line 84")
		else
			call error("Called PlayerStats.getForceId on invalid object.", "when calling error in PlayerStats, line 84")
		endif
	endif
	set this_4 = this_3
	set PlayerStats_PlayerStats_getForceId_result = PlayerStats_force_id[this_4]
	set wurst_stack_depth = wurst_stack_depth - 1
	set f = PlayerStats_PlayerStats_getForceId_result
	set r = GetRandomInt(0, 3 - 1)
	if f == 0 then
		set s = Strings_ksNoteWE[r]
	elseif f == 1 then
		set s = Strings_ksNoteEE[r]
	elseif f == 2 then
		set s = Strings_ksNoteME[r]
	elseif f == 3 then
		set s = Strings_ksNoteBZ[r]
	else
		set s = "Note:"
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_5 = null
	return "|cff00ccff" + s + "|r"
endfunction

function getWarningStringForPlayer takes player pl, string stackPos returns string
	local integer f
	local integer r
	local string s
	local integer this_3
	local string stackPos_2
	local integer PlayerStats_PlayerStats_getForceId_result
	local integer this_4
	local player this_5
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_5 = pl
	set this_3 = PlayerStats_player_stats[GetPlayerId(this_5)]
	set stackPos_2 = "when calling getForceId in Messages, line 5"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if PlayerStats_typeId[this_3] == 0 then
		if this_3 == 0 then
			call error("Nullpointer exception when calling PlayerStats.getForceId", "when calling error in PlayerStats, line 84")
		else
			call error("Called PlayerStats.getForceId on invalid object.", "when calling error in PlayerStats, line 84")
		endif
	endif
	set this_4 = this_3
	set PlayerStats_PlayerStats_getForceId_result = PlayerStats_force_id[this_4]
	set wurst_stack_depth = wurst_stack_depth - 1
	set f = PlayerStats_PlayerStats_getForceId_result
	set r = GetRandomInt(0, 3 - 1)
	if f == 0 then
		set s = Strings_ksWarningWE[r]
	elseif f == 1 then
		set s = Strings_ksWarningEE[r]
	elseif f == 2 then
		set s = Strings_ksWarningME[r]
	elseif f == 3 then
		set s = Strings_ksWarningBZ[r]
	else
		set s = "Warning!"
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_5 = null
	return "|cffff0000" + s + "|r"
endfunction

function action takes string stackPos returns nothing
	local player source
	local player target
	local string source_s
	local string target_s
	local integer source_id
	local force f1
	local force f2
	local integer temp
	local integer i
	local integer temp_2
	local force current_f
	local integer i_2
	local integer temp_3
	local force current_f_2
	local integer i_3
	local integer temp_4
	local force current_f_3
	local integer i_4
	local integer temp_5
	local force current_f_4
	local integer i_5
	local integer temp_6
	local force current_f_5
	local unit this_3
	local unit this_4
	local player whichPlayer
	local force f
	local player whichPlayer_2
	local force f_2
	local integer this_5
	local player which_player
	local string stackPos_2
	local integer PlayerStats_PlayerStats_getAllianceState_result
	local integer this_6
	local player which_player_2
	local string stackPos_3
	local integer stackTrace_tempReturn
	local player this_7
	local integer this_8
	local player which_player_3
	local integer alliance_state
	local string stackPos_4
	local player whichPlayer_3
	local force f_3
	local string msg
	local player pl
	local string stackPos_5
	local string msg_2
	local player pl_2
	local string stackPos_6
	local string msg_3
	local player pl_3
	local string stackPos_7
	local integer this_9
	local integer change
	local string stackPos_8
	local integer this_10
	local player which_player_4
	local string stackPos_9
	local integer PlayerStats_PlayerStats_getAllianceState_result_2
	local integer this_11
	local player which_player_5
	local string stackPos_10
	local integer stackTrace_tempReturn_2
	local player this_12
	local integer this_13
	local player which_player_6
	local integer alliance_state_2
	local string stackPos_11
	local player whichPlayer_4
	local force f_4
	local string msg_4
	local player pl_4
	local string stackPos_12
	local string msg_5
	local player pl_5
	local string stackPos_13
	local string msg_6
	local player pl_6
	local string stackPos_14
	local integer this_14
	local player which_player_7
	local string stackPos_15
	local integer PlayerStats_PlayerStats_getAllianceState_result_3
	local integer this_15
	local player which_player_8
	local string stackPos_16
	local integer stackTrace_tempReturn_3
	local player this_16
	local integer this_17
	local player which_player_9
	local integer alliance_state_3
	local string stackPos_17
	local player whichPlayer_5
	local force f_5
	local string msg_7
	local player pl_7
	local string stackPos_18
	local string msg_8
	local player pl_8
	local string stackPos_19
	local string msg_9
	local player pl_9
	local string stackPos_20
	local integer this_18
	local player which_player_10
	local string stackPos_21
	local integer PlayerStats_PlayerStats_getAllianceState_result_4
	local integer this_19
	local player which_player_11
	local string stackPos_22
	local integer stackTrace_tempReturn_4
	local player this_20
	local integer this_21
	local player which_player_12
	local integer alliance_state_4
	local string stackPos_23
	local player whichPlayer_6
	local force f_6
	local string msg_10
	local player pl_10
	local string stackPos_24
	local string msg_11
	local player pl_11
	local string stackPos_25
	local string msg_12
	local player pl_12
	local string stackPos_26
	local integer this_22
	local player which_player_13
	local string stackPos_27
	local integer PlayerStats_PlayerStats_getAllianceState_result_5
	local integer this_23
	local player which_player_14
	local string stackPos_28
	local integer stackTrace_tempReturn_5
	local player this_24
	local integer this_25
	local player which_player_15
	local integer alliance_state_5
	local string stackPos_29
	local player whichPlayer_7
	local force f_7
	local string msg_13
	local player pl_13
	local string stackPos_30
	local string msg_14
	local player pl_14
	local string stackPos_31
	local string msg_15
	local player pl_15
	local string stackPos_32
	local integer temp_7
	local integer temp_8
	local integer temp_9
	local integer temp_10
	local integer temp_11
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_3 = GetSpellAbilityUnit()
	set source = GetOwningPlayer(this_3)
	set this_4 = GetSpellTargetUnit()
	set target = GetOwningPlayer(this_4)
	set source_s = player_getNameColored(source)
	set target_s = player_getNameColored(target)
	set source_id = GetPlayerId(source)
	set whichPlayer = source
	set f = CreateForce()
	call ForceAddPlayer(f, whichPlayer)
	set f1 = f
	set whichPlayer_2 = source
	set f_2 = CreateForce()
	call ForceAddPlayer(f_2, whichPlayer_2)
	set f2 = f_2
	set temp = GetSpellAbilityId()
	if temp == 1093677396 then
		set this_5 = PlayerStats_player_stats[source_id]
		set which_player = target
		set stackPos_2 = "when calling getAllianceState in Diplomacy, line 16"
		set wurst_stack[wurst_stack_depth] = stackPos_2
		set wurst_stack_depth = wurst_stack_depth + 1
		if PlayerStats_typeId[this_5] == 0 then
			if this_5 == 0 then
				call error("Nullpointer exception when calling PlayerStats.getAllianceState", "when calling error in PlayerStats, line 44")
			else
				call error("Called PlayerStats.getAllianceState on invalid object.", "when calling error in PlayerStats, line 44")
			endif
		endif
		set this_6 = this_5
		set which_player_2 = which_player
		set stackPos_3 = "when calling getAllianceState in PlayerStats, line 44"
		set wurst_stack[wurst_stack_depth] = stackPos_3
		set wurst_stack_depth = wurst_stack_depth + 1
		set temp_7 = this_6
		set this_7 = which_player_2
		set stackTrace_tempReturn = PlayerStats_alliance_states_get(temp_7, GetPlayerId(this_7), "when reading array PlayerStats_alliance_states in PlayerStats, line 45")
		set wurst_stack_depth = wurst_stack_depth - 1
		set PlayerStats_PlayerStats_getAllianceState_result = stackTrace_tempReturn
		set wurst_stack_depth = wurst_stack_depth - 1
		if PlayerStats_PlayerStats_getAllianceState_result == bj_ALLIANCE_UNALLIED then
			set wurst_stack_depth = wurst_stack_depth - 1
			set source = null
			set target = null
			set f1 = null
			set f2 = null
			set current_f = null
			set current_f_2 = null
			set current_f_3 = null
			set current_f_4 = null
			set current_f_5 = null
			set this_3 = null
			set this_4 = null
			set whichPlayer = null
			set f = null
			set whichPlayer_2 = null
			set f_2 = null
			set which_player = null
			set which_player_2 = null
			set this_7 = null
			set which_player_3 = null
			set whichPlayer_3 = null
			set f_3 = null
			set pl = null
			set pl_2 = null
			set pl_3 = null
			set which_player_4 = null
			set which_player_5 = null
			set this_12 = null
			set which_player_6 = null
			set whichPlayer_4 = null
			set f_4 = null
			set pl_4 = null
			set pl_5 = null
			set pl_6 = null
			set which_player_7 = null
			set which_player_8 = null
			set this_16 = null
			set which_player_9 = null
			set whichPlayer_5 = null
			set f_5 = null
			set pl_7 = null
			set pl_8 = null
			set pl_9 = null
			set which_player_10 = null
			set which_player_11 = null
			set this_20 = null
			set which_player_12 = null
			set whichPlayer_6 = null
			set f_6 = null
			set pl_10 = null
			set pl_11 = null
			set pl_12 = null
			set which_player_13 = null
			set which_player_14 = null
			set this_24 = null
			set which_player_15 = null
			set whichPlayer_7 = null
			set f_7 = null
			set pl_13 = null
			set pl_14 = null
			set pl_15 = null
			return
		endif
		set this_8 = PlayerStats_player_stats[source_id]
		set which_player_3 = target
		set alliance_state = bj_ALLIANCE_UNALLIED
		set stackPos_4 = "when calling setAlliance in Diplomacy, line 18"
		set wurst_stack[wurst_stack_depth] = stackPos_4
		set wurst_stack_depth = wurst_stack_depth + 1
		if PlayerStats_typeId[this_8] == 0 then
			if this_8 == 0 then
				call error("Nullpointer exception when calling PlayerStats.setAlliance", "when calling error in PlayerStats, line 33")
			else
				call error("Called PlayerStats.setAlliance on invalid object.", "when calling error in PlayerStats, line 33")
			endif
		endif
		call PlayerStats_setAlliance(this_8, which_player_3, alliance_state, "when calling setAlliance in PlayerStats, line 33")
		set wurst_stack_depth = wurst_stack_depth - 1
		set i = 0
		set temp_2 = 24 - 1
		loop
			exitwhen i > temp_2
			set whichPlayer_3 = Player_players[i]
			set f_3 = CreateForce()
			call ForceAddPlayer(f_3, whichPlayer_3)
			set current_f = f_3
			if Player_players[i] == target then
				set msg = source_s + " has declared war on you!"
				set pl = Player_players[i]
				set stackPos_5 = "when calling warningToPlayer in Diplomacy, line 23"
				set wurst_stack[wurst_stack_depth] = stackPos_5
				set wurst_stack_depth = wurst_stack_depth + 1
				call DisplayTimedTextToPlayer(pl, 0., 0., 30.0, getWarningStringForPlayer(pl, "when calling getWarningStringForPlayer in Messages, line 79"))
				call DisplayTimedTextToPlayer(pl, 0., 0., 30.0, msg)
				set wurst_stack_depth = wurst_stack_depth - 1
			elseif current_f == f1 or current_f == f2 then
				set msg_2 = source_s + " has declared war on your brother-in-arms, " + target_s + "!"
				set pl_2 = Player_players[i]
				set stackPos_6 = "when calling attentionToPlayer in Diplomacy, line 25"
				set wurst_stack[wurst_stack_depth] = stackPos_6
				set wurst_stack_depth = wurst_stack_depth + 1
				call DisplayTimedTextToPlayer(pl_2, 0., 0., 15.0, getAttentionStringForPlayer(pl_2, "when calling getAttentionStringForPlayer in Messages, line 88"))
				call DisplayTimedTextToPlayer(pl_2, 0., 0., 15.0, msg_2)
				set wurst_stack_depth = wurst_stack_depth - 1
			else
				set msg_3 = source_s + " has declared war on " + target_s
				set pl_3 = Player_players[i]
				set stackPos_7 = "when calling noteToPlayer in Diplomacy, line 27"
				set wurst_stack[wurst_stack_depth] = stackPos_7
				set wurst_stack_depth = wurst_stack_depth + 1
				call DisplayTimedTextToPlayer(pl_3, 0., 0., 15.0, getNoteStringForPlayer(pl_3, "when calling getNoteStringForPlayer in Messages, line 82"))
				call DisplayTimedTextToPlayer(pl_3, 0., 0., 15.0, msg_3)
				set wurst_stack_depth = wurst_stack_depth - 1
			endif
			set i = i + 1
		endloop
		set this_9 = PlayerStats_player_stats[source_id]
		set change = 600
		set stackPos_8 = "when calling changeUnhapiness in Diplomacy, line 29"
		set wurst_stack[wurst_stack_depth] = stackPos_8
		set wurst_stack_depth = wurst_stack_depth + 1
		if PlayerStats_typeId[this_9] == 0 then
			if this_9 == 0 then
				call error("Nullpointer exception when calling PlayerStats.changeUnhapiness", "when calling error in PlayerStats, line 14")
			else
				call error("Called PlayerStats.changeUnhapiness on invalid object.", "when calling error in PlayerStats, line 14")
			endif
		endif
		call PlayerStats_changeUnhapiness(this_9, change, "when calling changeUnhapiness in PlayerStats, line 14")
		set wurst_stack_depth = wurst_stack_depth - 1
	elseif temp == 1093677397 then
		set this_10 = PlayerStats_player_stats[source_id]
		set which_player_4 = target
		set stackPos_9 = "when calling getAllianceState in Diplomacy, line 32"
		set wurst_stack[wurst_stack_depth] = stackPos_9
		set wurst_stack_depth = wurst_stack_depth + 1
		if PlayerStats_typeId[this_10] == 0 then
			if this_10 == 0 then
				call error("Nullpointer exception when calling PlayerStats.getAllianceState", "when calling error in PlayerStats, line 44")
			else
				call error("Called PlayerStats.getAllianceState on invalid object.", "when calling error in PlayerStats, line 44")
			endif
		endif
		set this_11 = this_10
		set which_player_5 = which_player_4
		set stackPos_10 = "when calling getAllianceState in PlayerStats, line 44"
		set wurst_stack[wurst_stack_depth] = stackPos_10
		set wurst_stack_depth = wurst_stack_depth + 1
		set temp_8 = this_11
		set this_12 = which_player_5
		set stackTrace_tempReturn_2 = PlayerStats_alliance_states_get(temp_8, GetPlayerId(this_12), "when reading array PlayerStats_alliance_states in PlayerStats, line 45")
		set wurst_stack_depth = wurst_stack_depth - 1
		set PlayerStats_PlayerStats_getAllianceState_result_2 = stackTrace_tempReturn_2
		set wurst_stack_depth = wurst_stack_depth - 1
		if PlayerStats_PlayerStats_getAllianceState_result_2 == bj_ALLIANCE_ALLIED_VISION then
			set wurst_stack_depth = wurst_stack_depth - 1
			set source = null
			set target = null
			set f1 = null
			set f2 = null
			set current_f = null
			set current_f_2 = null
			set current_f_3 = null
			set current_f_4 = null
			set current_f_5 = null
			set this_3 = null
			set this_4 = null
			set whichPlayer = null
			set f = null
			set whichPlayer_2 = null
			set f_2 = null
			set which_player = null
			set which_player_2 = null
			set this_7 = null
			set which_player_3 = null
			set whichPlayer_3 = null
			set f_3 = null
			set pl = null
			set pl_2 = null
			set pl_3 = null
			set which_player_4 = null
			set which_player_5 = null
			set this_12 = null
			set which_player_6 = null
			set whichPlayer_4 = null
			set f_4 = null
			set pl_4 = null
			set pl_5 = null
			set pl_6 = null
			set which_player_7 = null
			set which_player_8 = null
			set this_16 = null
			set which_player_9 = null
			set whichPlayer_5 = null
			set f_5 = null
			set pl_7 = null
			set pl_8 = null
			set pl_9 = null
			set which_player_10 = null
			set which_player_11 = null
			set this_20 = null
			set which_player_12 = null
			set whichPlayer_6 = null
			set f_6 = null
			set pl_10 = null
			set pl_11 = null
			set pl_12 = null
			set which_player_13 = null
			set which_player_14 = null
			set this_24 = null
			set which_player_15 = null
			set whichPlayer_7 = null
			set f_7 = null
			set pl_13 = null
			set pl_14 = null
			set pl_15 = null
			return
		endif
		set this_13 = PlayerStats_player_stats[source_id]
		set which_player_6 = target
		set alliance_state_2 = bj_ALLIANCE_ALLIED_VISION
		set stackPos_11 = "when calling setAlliance in Diplomacy, line 34"
		set wurst_stack[wurst_stack_depth] = stackPos_11
		set wurst_stack_depth = wurst_stack_depth + 1
		if PlayerStats_typeId[this_13] == 0 then
			if this_13 == 0 then
				call error("Nullpointer exception when calling PlayerStats.setAlliance", "when calling error in PlayerStats, line 33")
			else
				call error("Called PlayerStats.setAlliance on invalid object.", "when calling error in PlayerStats, line 33")
			endif
		endif
		call PlayerStats_setAlliance(this_13, which_player_6, alliance_state_2, "when calling setAlliance in PlayerStats, line 33")
		set wurst_stack_depth = wurst_stack_depth - 1
		set i_2 = 0
		set temp_3 = 24 - 1
		loop
			exitwhen i_2 > temp_3
			set whichPlayer_4 = Player_players[i_2]
			set f_4 = CreateForce()
			call ForceAddPlayer(f_4, whichPlayer_4)
			set current_f_2 = f_4
			if Player_players[i_2] == target then
				set msg_4 = source_s + " wants to ally you"
				set pl_4 = Player_players[i_2]
				set stackPos_12 = "when calling goodNewsToPlayer in Diplomacy, line 39"
				set wurst_stack[wurst_stack_depth] = stackPos_12
				set wurst_stack_depth = wurst_stack_depth + 1
				call DisplayTimedTextToPlayer(pl_4, 0., 0., 15.0, getGoodNewsStringForPlayer(pl_4, "when calling getGoodNewsStringForPlayer in Messages, line 85"))
				call DisplayTimedTextToPlayer(pl_4, 0., 0., 15.0, msg_4)
				set wurst_stack_depth = wurst_stack_depth - 1
			elseif current_f_2 == f1 or current_f_2 == f2 then
				set msg_5 = source_s + " allied " + target_s
				set pl_5 = Player_players[i_2]
				set stackPos_13 = "when calling noteToPlayer in Diplomacy, line 41"
				set wurst_stack[wurst_stack_depth] = stackPos_13
				set wurst_stack_depth = wurst_stack_depth + 1
				call DisplayTimedTextToPlayer(pl_5, 0., 0., 15.0, getNoteStringForPlayer(pl_5, "when calling getNoteStringForPlayer in Messages, line 82"))
				call DisplayTimedTextToPlayer(pl_5, 0., 0., 15.0, msg_5)
				set wurst_stack_depth = wurst_stack_depth - 1
			else
				set msg_6 = source_s + " allied " + target_s
				set pl_6 = Player_players[i_2]
				set stackPos_14 = "when calling noteToPlayer in Diplomacy, line 43"
				set wurst_stack[wurst_stack_depth] = stackPos_14
				set wurst_stack_depth = wurst_stack_depth + 1
				call DisplayTimedTextToPlayer(pl_6, 0., 0., 15.0, getNoteStringForPlayer(pl_6, "when calling getNoteStringForPlayer in Messages, line 82"))
				call DisplayTimedTextToPlayer(pl_6, 0., 0., 15.0, msg_6)
				set wurst_stack_depth = wurst_stack_depth - 1
			endif
			set i_2 = i_2 + 1
		endloop
	elseif temp == 1093677398 then
		set this_14 = PlayerStats_player_stats[source_id]
		set which_player_7 = target
		set stackPos_15 = "when calling getAllianceState in Diplomacy, line 46"
		set wurst_stack[wurst_stack_depth] = stackPos_15
		set wurst_stack_depth = wurst_stack_depth + 1
		if PlayerStats_typeId[this_14] == 0 then
			if this_14 == 0 then
				call error("Nullpointer exception when calling PlayerStats.getAllianceState", "when calling error in PlayerStats, line 44")
			else
				call error("Called PlayerStats.getAllianceState on invalid object.", "when calling error in PlayerStats, line 44")
			endif
		endif
		set this_15 = this_14
		set which_player_8 = which_player_7
		set stackPos_16 = "when calling getAllianceState in PlayerStats, line 44"
		set wurst_stack[wurst_stack_depth] = stackPos_16
		set wurst_stack_depth = wurst_stack_depth + 1
		set temp_9 = this_15
		set this_16 = which_player_8
		set stackTrace_tempReturn_3 = PlayerStats_alliance_states_get(temp_9, GetPlayerId(this_16), "when reading array PlayerStats_alliance_states in PlayerStats, line 45")
		set wurst_stack_depth = wurst_stack_depth - 1
		set PlayerStats_PlayerStats_getAllianceState_result_3 = stackTrace_tempReturn_3
		set wurst_stack_depth = wurst_stack_depth - 1
		if PlayerStats_PlayerStats_getAllianceState_result_3 == bj_ALLIANCE_NEUTRAL then
			set wurst_stack_depth = wurst_stack_depth - 1
			set source = null
			set target = null
			set f1 = null
			set f2 = null
			set current_f = null
			set current_f_2 = null
			set current_f_3 = null
			set current_f_4 = null
			set current_f_5 = null
			set this_3 = null
			set this_4 = null
			set whichPlayer = null
			set f = null
			set whichPlayer_2 = null
			set f_2 = null
			set which_player = null
			set which_player_2 = null
			set this_7 = null
			set which_player_3 = null
			set whichPlayer_3 = null
			set f_3 = null
			set pl = null
			set pl_2 = null
			set pl_3 = null
			set which_player_4 = null
			set which_player_5 = null
			set this_12 = null
			set which_player_6 = null
			set whichPlayer_4 = null
			set f_4 = null
			set pl_4 = null
			set pl_5 = null
			set pl_6 = null
			set which_player_7 = null
			set which_player_8 = null
			set this_16 = null
			set which_player_9 = null
			set whichPlayer_5 = null
			set f_5 = null
			set pl_7 = null
			set pl_8 = null
			set pl_9 = null
			set which_player_10 = null
			set which_player_11 = null
			set this_20 = null
			set which_player_12 = null
			set whichPlayer_6 = null
			set f_6 = null
			set pl_10 = null
			set pl_11 = null
			set pl_12 = null
			set which_player_13 = null
			set which_player_14 = null
			set this_24 = null
			set which_player_15 = null
			set whichPlayer_7 = null
			set f_7 = null
			set pl_13 = null
			set pl_14 = null
			set pl_15 = null
			return
		endif
		set this_17 = PlayerStats_player_stats[source_id]
		set which_player_9 = target
		set alliance_state_3 = bj_ALLIANCE_NEUTRAL
		set stackPos_17 = "when calling setAlliance in Diplomacy, line 48"
		set wurst_stack[wurst_stack_depth] = stackPos_17
		set wurst_stack_depth = wurst_stack_depth + 1
		if PlayerStats_typeId[this_17] == 0 then
			if this_17 == 0 then
				call error("Nullpointer exception when calling PlayerStats.setAlliance", "when calling error in PlayerStats, line 33")
			else
				call error("Called PlayerStats.setAlliance on invalid object.", "when calling error in PlayerStats, line 33")
			endif
		endif
		call PlayerStats_setAlliance(this_17, which_player_9, alliance_state_3, "when calling setAlliance in PlayerStats, line 33")
		set wurst_stack_depth = wurst_stack_depth - 1
		set i_3 = 0
		set temp_4 = 24 - 1
		loop
			exitwhen i_3 > temp_4
			set whichPlayer_5 = Player_players[i_3]
			set f_5 = CreateForce()
			call ForceAddPlayer(f_5, whichPlayer_5)
			set current_f_3 = f_5
			if Player_players[i_3] == target then
				set msg_7 = source_s + " is now neutral towards you"
				set pl_7 = Player_players[i_3]
				set stackPos_18 = "when calling noteToPlayer in Diplomacy, line 53"
				set wurst_stack[wurst_stack_depth] = stackPos_18
				set wurst_stack_depth = wurst_stack_depth + 1
				call DisplayTimedTextToPlayer(pl_7, 0., 0., 15.0, getNoteStringForPlayer(pl_7, "when calling getNoteStringForPlayer in Messages, line 82"))
				call DisplayTimedTextToPlayer(pl_7, 0., 0., 15.0, msg_7)
				set wurst_stack_depth = wurst_stack_depth - 1
			elseif current_f_3 == f1 or current_f_3 == f2 then
				set msg_8 = source_s + " shows " + target_s + " neutrality"
				set pl_8 = Player_players[i_3]
				set stackPos_19 = "when calling noteToPlayer in Diplomacy, line 55"
				set wurst_stack[wurst_stack_depth] = stackPos_19
				set wurst_stack_depth = wurst_stack_depth + 1
				call DisplayTimedTextToPlayer(pl_8, 0., 0., 15.0, getNoteStringForPlayer(pl_8, "when calling getNoteStringForPlayer in Messages, line 82"))
				call DisplayTimedTextToPlayer(pl_8, 0., 0., 15.0, msg_8)
				set wurst_stack_depth = wurst_stack_depth - 1
			else
				set msg_9 = source_s + " shows " + target_s + " neutrality"
				set pl_9 = Player_players[i_3]
				set stackPos_20 = "when calling noteToPlayer in Diplomacy, line 57"
				set wurst_stack[wurst_stack_depth] = stackPos_20
				set wurst_stack_depth = wurst_stack_depth + 1
				call DisplayTimedTextToPlayer(pl_9, 0., 0., 15.0, getNoteStringForPlayer(pl_9, "when calling getNoteStringForPlayer in Messages, line 82"))
				call DisplayTimedTextToPlayer(pl_9, 0., 0., 15.0, msg_9)
				set wurst_stack_depth = wurst_stack_depth - 1
			endif
			set i_3 = i_3 + 1
		endloop
	elseif temp == 1093677400 then
		set this_18 = PlayerStats_player_stats[source_id]
		set which_player_10 = target
		set stackPos_21 = "when calling getAllianceState in Diplomacy, line 60"
		set wurst_stack[wurst_stack_depth] = stackPos_21
		set wurst_stack_depth = wurst_stack_depth + 1
		if PlayerStats_typeId[this_18] == 0 then
			if this_18 == 0 then
				call error("Nullpointer exception when calling PlayerStats.getAllianceState", "when calling error in PlayerStats, line 44")
			else
				call error("Called PlayerStats.getAllianceState on invalid object.", "when calling error in PlayerStats, line 44")
			endif
		endif
		set this_19 = this_18
		set which_player_11 = which_player_10
		set stackPos_22 = "when calling getAllianceState in PlayerStats, line 44"
		set wurst_stack[wurst_stack_depth] = stackPos_22
		set wurst_stack_depth = wurst_stack_depth + 1
		set temp_10 = this_19
		set this_20 = which_player_11
		set stackTrace_tempReturn_4 = PlayerStats_alliance_states_get(temp_10, GetPlayerId(this_20), "when reading array PlayerStats_alliance_states in PlayerStats, line 45")
		set wurst_stack_depth = wurst_stack_depth - 1
		set PlayerStats_PlayerStats_getAllianceState_result_4 = stackTrace_tempReturn_4
		set wurst_stack_depth = wurst_stack_depth - 1
		if PlayerStats_PlayerStats_getAllianceState_result_4 == bj_ALLIANCE_NEUTRAL then
			set wurst_stack_depth = wurst_stack_depth - 1
			set source = null
			set target = null
			set f1 = null
			set f2 = null
			set current_f = null
			set current_f_2 = null
			set current_f_3 = null
			set current_f_4 = null
			set current_f_5 = null
			set this_3 = null
			set this_4 = null
			set whichPlayer = null
			set f = null
			set whichPlayer_2 = null
			set f_2 = null
			set which_player = null
			set which_player_2 = null
			set this_7 = null
			set which_player_3 = null
			set whichPlayer_3 = null
			set f_3 = null
			set pl = null
			set pl_2 = null
			set pl_3 = null
			set which_player_4 = null
			set which_player_5 = null
			set this_12 = null
			set which_player_6 = null
			set whichPlayer_4 = null
			set f_4 = null
			set pl_4 = null
			set pl_5 = null
			set pl_6 = null
			set which_player_7 = null
			set which_player_8 = null
			set this_16 = null
			set which_player_9 = null
			set whichPlayer_5 = null
			set f_5 = null
			set pl_7 = null
			set pl_8 = null
			set pl_9 = null
			set which_player_10 = null
			set which_player_11 = null
			set this_20 = null
			set which_player_12 = null
			set whichPlayer_6 = null
			set f_6 = null
			set pl_10 = null
			set pl_11 = null
			set pl_12 = null
			set which_player_13 = null
			set which_player_14 = null
			set this_24 = null
			set which_player_15 = null
			set whichPlayer_7 = null
			set f_7 = null
			set pl_13 = null
			set pl_14 = null
			set pl_15 = null
			return
		endif
		set this_21 = PlayerStats_player_stats[source_id]
		set which_player_12 = target
		set alliance_state_4 = bj_ALLIANCE_NEUTRAL
		set stackPos_23 = "when calling setAlliance in Diplomacy, line 62"
		set wurst_stack[wurst_stack_depth] = stackPos_23
		set wurst_stack_depth = wurst_stack_depth + 1
		if PlayerStats_typeId[this_21] == 0 then
			if this_21 == 0 then
				call error("Nullpointer exception when calling PlayerStats.setAlliance", "when calling error in PlayerStats, line 33")
			else
				call error("Called PlayerStats.setAlliance on invalid object.", "when calling error in PlayerStats, line 33")
			endif
		endif
		call PlayerStats_setAlliance(this_21, which_player_12, alliance_state_4, "when calling setAlliance in PlayerStats, line 33")
		set wurst_stack_depth = wurst_stack_depth - 1
		set i_4 = 0
		set temp_5 = 24 - 1
		loop
			exitwhen i_4 > temp_5
			set whichPlayer_6 = Player_players[i_4]
			set f_6 = CreateForce()
			call ForceAddPlayer(f_6, whichPlayer_6)
			set current_f_4 = f_6
			if Player_players[i_4] == target then
				set msg_10 = source_s + " unallies you!"
				set pl_10 = Player_players[i_4]
				set stackPos_24 = "when calling noteToPlayer in Diplomacy, line 67"
				set wurst_stack[wurst_stack_depth] = stackPos_24
				set wurst_stack_depth = wurst_stack_depth + 1
				call DisplayTimedTextToPlayer(pl_10, 0., 0., 15.0, getNoteStringForPlayer(pl_10, "when calling getNoteStringForPlayer in Messages, line 82"))
				call DisplayTimedTextToPlayer(pl_10, 0., 0., 15.0, msg_10)
				set wurst_stack_depth = wurst_stack_depth - 1
			elseif current_f_4 == f1 or current_f_4 == f2 then
				set msg_11 = source_s + " unallied " + target_s
				set pl_11 = Player_players[i_4]
				set stackPos_25 = "when calling noteToPlayer in Diplomacy, line 69"
				set wurst_stack[wurst_stack_depth] = stackPos_25
				set wurst_stack_depth = wurst_stack_depth + 1
				call DisplayTimedTextToPlayer(pl_11, 0., 0., 15.0, getNoteStringForPlayer(pl_11, "when calling getNoteStringForPlayer in Messages, line 82"))
				call DisplayTimedTextToPlayer(pl_11, 0., 0., 15.0, msg_11)
				set wurst_stack_depth = wurst_stack_depth - 1
			else
				set msg_12 = source_s + " unallied " + target_s
				set pl_12 = Player_players[i_4]
				set stackPos_26 = "when calling noteToPlayer in Diplomacy, line 71"
				set wurst_stack[wurst_stack_depth] = stackPos_26
				set wurst_stack_depth = wurst_stack_depth + 1
				call DisplayTimedTextToPlayer(pl_12, 0., 0., 15.0, getNoteStringForPlayer(pl_12, "when calling getNoteStringForPlayer in Messages, line 82"))
				call DisplayTimedTextToPlayer(pl_12, 0., 0., 15.0, msg_12)
				set wurst_stack_depth = wurst_stack_depth - 1
			endif
			set i_4 = i_4 + 1
		endloop
	elseif temp == 1093677399 then
		set this_22 = PlayerStats_player_stats[source_id]
		set which_player_13 = target
		set stackPos_27 = "when calling getAllianceState in Diplomacy, line 74"
		set wurst_stack[wurst_stack_depth] = stackPos_27
		set wurst_stack_depth = wurst_stack_depth + 1
		if PlayerStats_typeId[this_22] == 0 then
			if this_22 == 0 then
				call error("Nullpointer exception when calling PlayerStats.getAllianceState", "when calling error in PlayerStats, line 44")
			else
				call error("Called PlayerStats.getAllianceState on invalid object.", "when calling error in PlayerStats, line 44")
			endif
		endif
		set this_23 = this_22
		set which_player_14 = which_player_13
		set stackPos_28 = "when calling getAllianceState in PlayerStats, line 44"
		set wurst_stack[wurst_stack_depth] = stackPos_28
		set wurst_stack_depth = wurst_stack_depth + 1
		set temp_11 = this_23
		set this_24 = which_player_14
		set stackTrace_tempReturn_5 = PlayerStats_alliance_states_get(temp_11, GetPlayerId(this_24), "when reading array PlayerStats_alliance_states in PlayerStats, line 45")
		set wurst_stack_depth = wurst_stack_depth - 1
		set PlayerStats_PlayerStats_getAllianceState_result_5 = stackTrace_tempReturn_5
		set wurst_stack_depth = wurst_stack_depth - 1
		if PlayerStats_PlayerStats_getAllianceState_result_5 == bj_ALLIANCE_ALLIED_ADVUNITS then
			set wurst_stack_depth = wurst_stack_depth - 1
			set source = null
			set target = null
			set f1 = null
			set f2 = null
			set current_f = null
			set current_f_2 = null
			set current_f_3 = null
			set current_f_4 = null
			set current_f_5 = null
			set this_3 = null
			set this_4 = null
			set whichPlayer = null
			set f = null
			set whichPlayer_2 = null
			set f_2 = null
			set which_player = null
			set which_player_2 = null
			set this_7 = null
			set which_player_3 = null
			set whichPlayer_3 = null
			set f_3 = null
			set pl = null
			set pl_2 = null
			set pl_3 = null
			set which_player_4 = null
			set which_player_5 = null
			set this_12 = null
			set which_player_6 = null
			set whichPlayer_4 = null
			set f_4 = null
			set pl_4 = null
			set pl_5 = null
			set pl_6 = null
			set which_player_7 = null
			set which_player_8 = null
			set this_16 = null
			set which_player_9 = null
			set whichPlayer_5 = null
			set f_5 = null
			set pl_7 = null
			set pl_8 = null
			set pl_9 = null
			set which_player_10 = null
			set which_player_11 = null
			set this_20 = null
			set which_player_12 = null
			set whichPlayer_6 = null
			set f_6 = null
			set pl_10 = null
			set pl_11 = null
			set pl_12 = null
			set which_player_13 = null
			set which_player_14 = null
			set this_24 = null
			set which_player_15 = null
			set whichPlayer_7 = null
			set f_7 = null
			set pl_13 = null
			set pl_14 = null
			set pl_15 = null
			return
		endif
		set this_25 = PlayerStats_player_stats[source_id]
		set which_player_15 = target
		set alliance_state_5 = bj_ALLIANCE_ALLIED_ADVUNITS
		set stackPos_29 = "when calling setAlliance in Diplomacy, line 76"
		set wurst_stack[wurst_stack_depth] = stackPos_29
		set wurst_stack_depth = wurst_stack_depth + 1
		if PlayerStats_typeId[this_25] == 0 then
			if this_25 == 0 then
				call error("Nullpointer exception when calling PlayerStats.setAlliance", "when calling error in PlayerStats, line 33")
			else
				call error("Called PlayerStats.setAlliance on invalid object.", "when calling error in PlayerStats, line 33")
			endif
		endif
		call PlayerStats_setAlliance(this_25, which_player_15, alliance_state_5, "when calling setAlliance in PlayerStats, line 33")
		set wurst_stack_depth = wurst_stack_depth - 1
		set i_5 = 0
		set temp_6 = 24 - 1
		loop
			exitwhen i_5 > temp_6
			set whichPlayer_7 = Player_players[i_5]
			set f_7 = CreateForce()
			call ForceAddPlayer(f_7, whichPlayer_7)
			set current_f_5 = f_7
			if Player_players[i_5] == target then
				set msg_13 = source_s + " wants to share his rule with you!"
				set pl_13 = Player_players[i_5]
				set stackPos_30 = "when calling goodNewsToPlayer in Diplomacy, line 81"
				set wurst_stack[wurst_stack_depth] = stackPos_30
				set wurst_stack_depth = wurst_stack_depth + 1
				call DisplayTimedTextToPlayer(pl_13, 0., 0., 15.0, getGoodNewsStringForPlayer(pl_13, "when calling getGoodNewsStringForPlayer in Messages, line 85"))
				call DisplayTimedTextToPlayer(pl_13, 0., 0., 15.0, msg_13)
				set wurst_stack_depth = wurst_stack_depth - 1
			elseif current_f_5 == f1 or current_f_5 == f2 then
				set msg_14 = source_s + " now shares rule with " + target_s
				set pl_14 = Player_players[i_5]
				set stackPos_31 = "when calling noteToPlayer in Diplomacy, line 83"
				set wurst_stack[wurst_stack_depth] = stackPos_31
				set wurst_stack_depth = wurst_stack_depth + 1
				call DisplayTimedTextToPlayer(pl_14, 0., 0., 15.0, getNoteStringForPlayer(pl_14, "when calling getNoteStringForPlayer in Messages, line 82"))
				call DisplayTimedTextToPlayer(pl_14, 0., 0., 15.0, msg_14)
				set wurst_stack_depth = wurst_stack_depth - 1
			else
				set msg_15 = source_s + " now shares rule with " + target_s
				set pl_15 = Player_players[i_5]
				set stackPos_32 = "when calling noteToPlayer in Diplomacy, line 85"
				set wurst_stack[wurst_stack_depth] = stackPos_32
				set wurst_stack_depth = wurst_stack_depth + 1
				call DisplayTimedTextToPlayer(pl_15, 0., 0., 15.0, getNoteStringForPlayer(pl_15, "when calling getNoteStringForPlayer in Messages, line 82"))
				call DisplayTimedTextToPlayer(pl_15, 0., 0., 15.0, msg_15)
				set wurst_stack_depth = wurst_stack_depth - 1
			endif
			set i_5 = i_5 + 1
		endloop
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set source = null
	set target = null
	set f1 = null
	set f2 = null
	set current_f = null
	set current_f_2 = null
	set current_f_3 = null
	set current_f_4 = null
	set current_f_5 = null
	set this_3 = null
	set this_4 = null
	set whichPlayer = null
	set f = null
	set whichPlayer_2 = null
	set f_2 = null
	set which_player = null
	set which_player_2 = null
	set this_7 = null
	set which_player_3 = null
	set whichPlayer_3 = null
	set f_3 = null
	set pl = null
	set pl_2 = null
	set pl_3 = null
	set which_player_4 = null
	set which_player_5 = null
	set this_12 = null
	set which_player_6 = null
	set whichPlayer_4 = null
	set f_4 = null
	set pl_4 = null
	set pl_5 = null
	set pl_6 = null
	set which_player_7 = null
	set which_player_8 = null
	set this_16 = null
	set which_player_9 = null
	set whichPlayer_5 = null
	set f_5 = null
	set pl_7 = null
	set pl_8 = null
	set pl_9 = null
	set which_player_10 = null
	set which_player_11 = null
	set this_20 = null
	set which_player_12 = null
	set whichPlayer_6 = null
	set f_6 = null
	set pl_10 = null
	set pl_11 = null
	set pl_12 = null
	set which_player_13 = null
	set which_player_14 = null
	set this_24 = null
	set which_player_15 = null
	set whichPlayer_7 = null
	set f_7 = null
	set pl_13 = null
	set pl_14 = null
	set pl_15 = null
endfunction

function bridge_action takes nothing returns nothing
	set wurst_stack_depth = 0
	call action("Diplomacy, line 100")
endfunction

function warningToForce takes string msg, force f, string stackPos returns nothing
	local integer i
	local integer temp
	local player pl
	local player whichPlayer
	local force f_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set i = 0
	set temp = 24 - 1
	loop
		exitwhen i > temp
		set whichPlayer = Player_players[i]
		set f_2 = CreateForce()
		call ForceAddPlayer(f_2, whichPlayer)
		if f_2 == f then
			set pl = Player_players[i]
			call DisplayTimedTextToPlayer(pl, 0., 0., 30.0, getWarningStringForPlayer(pl, "when calling getWarningStringForPlayer in Messages, line 98"))
			call DisplayTimedTextToPlayer(pl, 0., 0., 30.0, msg)
		endif
		set i = i + 1
	endloop
	set wurst_stack_depth = wurst_stack_depth - 1
	set pl = null
	set whichPlayer = null
	set f_2 = null
endfunction

function action_2 takes string stackPos returns nothing
	local integer this_3
	local boolean flag
	local string stackPos_2
	local integer this_4
	local boolean flag_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call warningToForce(player_getNameColored(GetTriggerPlayer()) + " has left the game!", bj_FORCE_ALL_PLAYERS, "when calling warningToForce in OnPlayerLeave, line 5")
	set this_3 = PlayerStats_player_stats[GetPlayerId(GetTriggerPlayer())]
	set flag = false
	set stackPos_2 = "when calling setInGame in OnPlayerLeave, line 7"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if PlayerStats_typeId[this_3] == 0 then
		if this_3 == 0 then
			call error("Nullpointer exception when calling PlayerStats.setInGame", "when calling error in PlayerStats, line 29")
		else
			call error("Called PlayerStats.setInGame on invalid object.", "when calling error in PlayerStats, line 29")
		endif
	endif
	set this_4 = this_3
	set flag_2 = flag
	set PlayerStats_is_in_game[this_4] = flag_2
	set wurst_stack_depth = wurst_stack_depth - 1
	call SetPlayerUnitsOwner(GetTriggerPlayer(), PLAYER_NEUTRAL_AGGRESSIVE)
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function bridge_action_2 takes nothing returns nothing
	set wurst_stack_depth = 0
	call action_2("OnPlayerLeave, line 12")
endfunction

function dbg takes string msg returns nothing
	if ( not false) and ( not false) then
		return
	endif
	call DisplayTimedTextToPlayer(Player_players[0], 0., 0., 60., msg)
endfunction

function dispatch_City_City_City_changeCityName takes integer this_3, string new_name, string stackPos returns nothing
	local integer this_4
	local string new_name_2
	local string stackPos_2
	local string this_5
	local integer start
	local integer stop
	local integer this_6
	local string stackPos_3
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if City_typeId[this_3] == 0 then
		if this_3 == 0 then
			call error("Nullpointer exception when calling City.changeCityName", "when calling error in City, line 65")
		else
			call error("Called City.changeCityName on invalid object.", "when calling error in City, line 65")
		endif
	endif
	set this_4 = this_3
	set new_name_2 = new_name
	set stackPos_2 = "when calling changeCityName in City, line 65"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_5 = new_name_2
	set start = 0
	set stop = 24
	set City_city_name[this_4] = SubString(this_5, start, stop)
	set this_6 = this_4
	set stackPos_3 = "when calling refreshMultiboardIfPossible in City, line 68"
	set wurst_stack[wurst_stack_depth] = stackPos_3
	set wurst_stack_depth = wurst_stack_depth + 1
	if City_typeId[this_6] == 0 then
		if this_6 == 0 then
			call error("Nullpointer exception when calling City.refreshMultiboardIfPossible", "when calling error in City, line 116")
		else
			call error("Called City.refreshMultiboardIfPossible on invalid object.", "when calling error in City, line 116")
		endif
	endif
	call City_refreshMultiboardIfPossible(this_6, "when calling refreshMultiboardIfPossible in City, line 116")
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function action_3 takes string stackPos returns nothing
	local string input
	local string array args
	local string arg
	local player pl
	local integer j
	local integer i
	local integer temp
	local string char
	local integer city_id
	local string this_3
	local string this_4
	local integer start
	local integer stop
	local string this_5
	local player whichPlayer
	local camerafield whichField
	local real value
	local real duration
	local player whichPlayer_2
	local camerafield whichField_2
	local real value_2
	local real duration_2
	local integer this_6
	local string stackPos_2
	local integer PlayerStats_PlayerStats_getSelectedCityId_result
	local integer this_7
	local player this_8
	local unit this_9
	local integer this_10
	local string stackPos_3
	local unit City_City_getCityUnit_result
	local integer this_11
	local string msg
	local player pl_2
	local string stackPos_4
	local integer temp_2
	local boolean andLeft
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set input = GetEventPlayerChatString()
	set arg = ""
	set pl = GetTriggerPlayer()
	if false then
		call dbg("A command has been typed = " + input + "; By: " + player_getNameColored(pl))
	endif
	set j = 0
	set i = 1
	set this_3 = input
	set temp = StringLength(this_3)
	loop
		exitwhen i > temp
		set this_4 = input
		set start = i
		set stop = i + 1
		set char = SubString(this_4, start, stop)
		if j > 0 then
			set temp_2 = i
			set this_5 = args[0]
			set andLeft = temp_2 > StringLength(this_5) + 1
		else
			set andLeft = false
		endif
		if andLeft then
			set arg = arg + char
		endif
		if char != " " then
			set args[j] = args[j] + char
		else
			set j = j + 1
		endif
		set i = i + 1
	endloop
	if args[0] == "far" then
		set whichPlayer = GetTriggerPlayer()
		set whichField = CAMERA_FIELD_TARGET_DISTANCE
		set value = 3000.0
		set duration = 0.
		if GetLocalPlayer() == whichPlayer then
			call SetCameraField(whichField, value, duration)
		endif
	elseif args[0] == "med" then
		set whichPlayer_2 = GetTriggerPlayer()
		set whichField_2 = CAMERA_FIELD_TARGET_DISTANCE
		set value_2 = 2300.0
		set duration_2 = 0.
		if GetLocalPlayer() == whichPlayer_2 then
			call SetCameraField(whichField_2, value_2, duration_2)
		endif
	elseif args[0] == "name" then
		call SetPlayerName(GetTriggerPlayer(), arg)
	elseif args[0] == "rename" then
		set this_8 = pl
		set this_6 = PlayerStats_player_stats[GetPlayerId(this_8)]
		set stackPos_2 = "when calling getSelectedCityId in Commands, line 45"
		set wurst_stack[wurst_stack_depth] = stackPos_2
		set wurst_stack_depth = wurst_stack_depth + 1
		if PlayerStats_typeId[this_6] == 0 then
			if this_6 == 0 then
				call error("Nullpointer exception when calling PlayerStats.getSelectedCityId", "when calling error in PlayerStats, line 74")
			else
				call error("Called PlayerStats.getSelectedCityId on invalid object.", "when calling error in PlayerStats, line 74")
			endif
		endif
		set this_7 = this_6
		set PlayerStats_PlayerStats_getSelectedCityId_result = PlayerStats_selected_city_id[this_7]
		set wurst_stack_depth = wurst_stack_depth - 1
		set city_id = PlayerStats_PlayerStats_getSelectedCityId_result
		if city_id >= 0 and city_id < City_cityCount then
			set this_10 = City_cities[city_id]
			set stackPos_3 = "when calling getCityUnit in Commands, line 47"
			set wurst_stack[wurst_stack_depth] = stackPos_3
			set wurst_stack_depth = wurst_stack_depth + 1
			if City_typeId[this_10] == 0 then
				if this_10 == 0 then
					call error("Nullpointer exception when calling City.getCityUnit", "when calling error in City, line 88")
				else
					call error("Called City.getCityUnit on invalid object.", "when calling error in City, line 88")
				endif
			endif
			set this_11 = this_10
			set City_City_getCityUnit_result = City_city_unit[this_11]
			set wurst_stack_depth = wurst_stack_depth - 1
			set this_9 = City_City_getCityUnit_result
			if GetOwningPlayer(this_9) != pl then
				set msg = "The city you wanted to rename so eagerly is not belong to you!"
				set pl_2 = pl
				set stackPos_4 = "when calling noteToPlayer in Commands, line 48"
				set wurst_stack[wurst_stack_depth] = stackPos_4
				set wurst_stack_depth = wurst_stack_depth + 1
				call DisplayTimedTextToPlayer(pl_2, 0., 0., 15.0, getNoteStringForPlayer(pl_2, "when calling getNoteStringForPlayer in Messages, line 82"))
				call DisplayTimedTextToPlayer(pl_2, 0., 0., 15.0, msg)
				set wurst_stack_depth = wurst_stack_depth - 1
			else
				call dispatch_City_City_City_changeCityName(City_cities[city_id], arg, "when calling changeCityName in Commands, line 50")
			endif
		endif
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set pl = null
	set whichPlayer = null
	set whichField = null
	set whichPlayer_2 = null
	set whichField_2 = null
	set this_8 = null
	set this_9 = null
	set City_City_getCityUnit_result = null
	set pl_2 = null
endfunction

function bridge_action_3 takes nothing returns nothing
	set wurst_stack_depth = 0
	call action_3("Commands, line 57")
endfunction

function new_LinkedList takes string stackPos returns integer
	local integer this_3
	local string stackPos_2
	local integer this_4
	local integer this_5
	local string stackPos_3
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackPos_2 = "when calling LinkedList in LinkedList, line 31"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if LinkedList_firstFree == 0 then
		if LinkedList_maxIndex < 32768 then
			set LinkedList_maxIndex = LinkedList_maxIndex + 1
			set this_4 = LinkedList_maxIndex
			set LinkedList_typeId[this_4] = 673
		else
			call error("Out of memory: Could not create LinkedList.", "when calling error in LinkedList, line 17")
			set this_4 = 0
		endif
	else
		set LinkedList_firstFree = LinkedList_firstFree - 1
		set this_4 = LinkedList_nextFree[LinkedList_firstFree]
		set LinkedList_typeId[this_4] = 673
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_3 = this_4
	set this_5 = this_3
	set stackPos_3 = "when calling construct_LinkedList2 in LinkedList, line 31"
	set wurst_stack[wurst_stack_depth] = stackPos_3
	set wurst_stack_depth = wurst_stack_depth + 1
	set LinkedList_dummy[this_5] = new_LLEntry(0, 0, 0, "when calling new_LLEntry in LinkedList, line 18")
	set LinkedList_size[this_5] = 0
	set LLEntry_next[LinkedList_dummy[this_5]] = LinkedList_dummy[this_5]
	set LLEntry_prev[LinkedList_dummy[this_5]] = LinkedList_dummy[this_5]
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_3
endfunction

function init_City takes string stackPos returns boolean
	local integer ts_0
	local integer ts_1
	local integer ts_2
	local integer ts_3
	local integer ts_4
	local integer ts_5
	local integer ts_6
	local integer ts_7
	local integer ts_8
	local integer ts_9
	local integer ts_10
	local integer ts_11
	local integer ts_12
	local string stackPos_2
	local integer ll
	local integer ts_0_2
	local integer ts_1_2
	local integer ts_2_2
	local integer ts_3_2
	local integer ts_4_2
	local integer ts_5_2
	local integer ts_6_2
	local integer ts_7_2
	local integer ts_8_2
	local string stackPos_3
	local integer ll_2
	local integer ts_0_3
	local integer ts_1_3
	local string stackPos_4
	local integer ll_3
	local integer ts_0_4
	local integer ts_1_4
	local string stackPos_5
	local integer ll_4
	local integer ts_0_5
	local integer ts_1_5
	local string stackPos_6
	local integer ll_5
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set ts_0 = 1747988529
	set ts_1 = 1747988530
	set ts_2 = 1747988531
	set ts_3 = 1747989555
	set ts_4 = 1747989297
	set ts_5 = 1747989325
	set ts_6 = 1747989059
	set ts_7 = 1747989060
	set ts_8 = 1747988844
	set ts_9 = 1747989809
	set ts_10 = 1747989589
	set ts_11 = 1747988555
	set ts_12 = 1747988556
	set stackPos_2 = "when calling asList in City, line 11"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	set ll = new_LinkedList("when calling new_LinkedList in LinkedList, line 391")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_0, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_1, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_2, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_3, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_4, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_5, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_6, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_7, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_8, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_9, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_10, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_11, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_12, "when calling add in LinkedList, line 393")
	set wurst_stack_depth = wurst_stack_depth - 1
	set City_kCityTypes = ll
	set ts_0_2 = 20
	set ts_1_2 = 50
	set ts_2_2 = 120
	set ts_3_2 = 5
	set ts_4_2 = 10
	set ts_5_2 = 30
	set ts_6_2 = 15
	set ts_7_2 = 20
	set ts_8_2 = 40
	set stackPos_3 = "when calling asList in City, line 12"
	set wurst_stack[wurst_stack_depth] = stackPos_3
	set wurst_stack_depth = wurst_stack_depth + 1
	set ll_2 = new_LinkedList("when calling new_LinkedList in LinkedList, line 391")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_2, ts_0_2, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_2, ts_1_2, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_2, ts_2_2, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_2, ts_3_2, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_2, ts_4_2, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_2, ts_5_2, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_2, ts_6_2, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_2, ts_7_2, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_2, ts_8_2, "when calling add in LinkedList, line 393")
	set wurst_stack_depth = wurst_stack_depth - 1
	set City_kCityBaseTax = ll_2
	set City_kCityPopGrowthRateMinMax[0] = 0.0015
	set City_kCityPopGrowthRateMinMax[1] = 0.0035
	set ts_0_3 = 10000
	set ts_1_3 = 100000
	set stackPos_4 = "when calling asList in City, line 35"
	set wurst_stack[wurst_stack_depth] = stackPos_4
	set wurst_stack_depth = wurst_stack_depth + 1
	set ll_3 = new_LinkedList("when calling new_LinkedList in LinkedList, line 391")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_3, ts_0_3, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_3, ts_1_3, "when calling add in LinkedList, line 393")
	set wurst_stack_depth = wurst_stack_depth - 1
	set City_kCityPopInit[0] = ll_3
	set ts_0_4 = 80000
	set ts_1_4 = 200000
	set stackPos_5 = "when calling asList in City, line 36"
	set wurst_stack[wurst_stack_depth] = stackPos_5
	set wurst_stack_depth = wurst_stack_depth + 1
	set ll_4 = new_LinkedList("when calling new_LinkedList in LinkedList, line 391")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_4, ts_0_4, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_4, ts_1_4, "when calling add in LinkedList, line 393")
	set wurst_stack_depth = wurst_stack_depth - 1
	set City_kCityPopInit[1] = ll_4
	set ts_0_5 = 130000
	set ts_1_5 = 400000
	set stackPos_6 = "when calling asList in City, line 37"
	set wurst_stack[wurst_stack_depth] = stackPos_6
	set wurst_stack_depth = wurst_stack_depth + 1
	set ll_5 = new_LinkedList("when calling new_LinkedList in LinkedList, line 391")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_5, ts_0_5, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_5, ts_1_5, "when calling add in LinkedList, line 393")
	set wurst_stack_depth = wurst_stack_depth - 1
	set City_kCityPopInit[2] = ll_5
	set wurst_stack_depth = wurst_stack_depth - 1
	return true
endfunction

function bridge_init_City takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_City("City, line 1")
endfunction

function registerSpellEffectEvent takes integer abil, code onCast, string stackPos returns nothing
	local trigger object
	local handle this_3
	local trigger this_4
	local boolexpr condition
	local integer temp
	local integer temp_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if  not dispatch_HashMap_HashMap_HashMap_has(RegisterEvents_onCastMap, abil, "when calling has in RegisterEvents, line 61") then
		set temp = RegisterEvents_onCastMap
		set temp_2 = abil
		set object = CreateTrigger()
		set this_3 = object
		call dispatch_HashMap_HashMap_HashMap_put(temp, temp_2, GetHandleId(this_3), "when calling put in RegisterEvents, line 62")
	endif
	set this_4 = triggerFromIndex(dispatch_HashMap_HashMap_HashMap_get(RegisterEvents_onCastMap, abil, "when calling get in RegisterEvents, line 63"), "when calling triggerFromIndex in RegisterEvents, line 63")
	set condition = Filter(onCast)
	call TriggerAddCondition(this_4, condition)
	set wurst_stack_depth = wurst_stack_depth - 1
	set object = null
	set this_3 = null
	set this_4 = null
	set condition = null
endfunction

function init_CityManage takes string stackPos returns boolean
	local trigger t_click
	local trigger receiver
	local trigger receiver_2
	local integer i
	local integer temp
	local trigger receiver_3
	local trigger receiver_4
	local trigger receiver_5
	local trigger receiver_6
	local trigger receiver_7
	local trigger receiver_8
	local trigger receiver_9
	local trigger receiver_10
	local trigger receiver_11
	local integer clVar
	local playerunitevent temp_2
	local integer count
	local integer unitId
	local player whichPlayer
	local location loc
	local real face
	local trigger this_3
	local boolexpr condition
	local trigger this_4
	local code actionFunc
	local trigger this_5
	local player whichPlayer_2
	local playerunitevent whichPlayerUnitEvent
	local boolexpr filter
	local trigger this_6
	local boolexpr condition_2
	local trigger this_7
	local code actionFunc_2
	local trigger this_8
	local playerunitevent whichEvent
	local trigger trig
	local playerunitevent whichEvent_2
	local integer index
	local trigger this_9
	local playerunitevent whichEvent_3
	local trigger trig_2
	local playerunitevent whichEvent_4
	local integer index_2
	local trigger this_10
	local boolexpr condition_3
	local trigger this_11
	local code actionFunc_3
	local trigger this_12
	local playerunitevent whichEvent_5
	local trigger trig_3
	local playerunitevent whichEvent_6
	local integer index_3
	local trigger this_13
	local boolexpr condition_4
	local trigger this_14
	local code actionFunc_4
	local string stackPos_2
	local integer this_15
	local integer this_16
	local eventid eventId
	local integer listener
	local string stackPos_3
	local eventid this_17
	local string stackPos_4
	local integer id
	local handle this_18
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if false then
		set count = 5
		set unitId = 1747988553
		set whichPlayer = Player_players[0]
		set loc = Location( - 3000.0, 1700.0)
		set face = 0.
		call GroupClear(bj_lastCreatedGroup)
		loop
			set count = count - 1
			exitwhen count < 0
			call CreateUnitAtLocSaveLast(whichPlayer, unitId, loc, face)
			call GroupAddUnit(bj_lastCreatedGroup, bj_lastCreatedUnit)
		endloop
	endif
	set receiver = CreateTrigger()
	set this_3 = receiver
	set condition = Condition(ref_function_CityManage_closure_impl)
	call TriggerAddCondition(this_3, condition)
	set receiver_2 = receiver
	set this_4 = receiver_2
	set actionFunc = ref_function_bridge_onClick
	call TriggerAddAction(this_4, actionFunc)
	set t_click = receiver_2
	set i = 0
	set temp = 24
	loop
		exitwhen i > temp
		set this_5 = t_click
		set whichPlayer_2 = Player_players[i]
		set whichPlayerUnitEvent = EVENT_PLAYER_UNIT_SELECTED
		set filter = Filter(ref_function_bridge_CityManage_closure_impl)
		call TriggerRegisterPlayerUnitEvent(this_5, whichPlayer_2, whichPlayerUnitEvent, filter)
		set i = i + 1
	endloop
	set receiver_3 = CreateTrigger()
	set this_6 = receiver_3
	set condition_2 = Condition(ref_function_CityManage_closure_impl_2)
	call TriggerAddCondition(this_6, condition_2)
	set receiver_4 = receiver_3
	set this_7 = receiver_4
	set actionFunc_2 = ref_function_bridge_CityManage_closure_impl_2
	call TriggerAddAction(this_7, actionFunc_2)
	set receiver_5 = receiver_4
	set this_8 = receiver_5
	set whichEvent = EVENT_PLAYER_UNIT_SPELL_CAST
	set trig = this_8
	set whichEvent_2 = whichEvent
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent_2, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	set receiver_6 = CreateTrigger()
	set this_9 = receiver_6
	set whichEvent_3 = EVENT_PLAYER_UNIT_ATTACKED
	set trig_2 = this_9
	set whichEvent_4 = whichEvent_3
	set index_2 = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig_2, Player(index_2), whichEvent_4, null)
		set index_2 = index_2 + 1
		exitwhen index_2 == bj_MAX_PLAYER_SLOTS
	endloop
	set receiver_7 = receiver_6
	set this_10 = receiver_7
	set condition_3 = Condition(ref_function_CityManage_closure_impl_3)
	call TriggerAddCondition(this_10, condition_3)
	set receiver_8 = receiver_7
	set this_11 = receiver_8
	set actionFunc_3 = ref_function_bridge_CityManage_closure_impl_3
	call TriggerAddAction(this_11, actionFunc_3)
	call registerSpellEffectEvent(1093677658, ref_function_bridge_CityManage_closure_impl_4, "when calling registerSpellEffectEvent in CityManage, line 66")
	call registerSpellEffectEvent(1093677872, ref_function_bridge_CityManage_closure_impl_5, "when calling registerSpellEffectEvent in CityManage, line 70")
	set receiver_9 = CreateTrigger()
	set this_12 = receiver_9
	set whichEvent_5 = EVENT_PLAYER_UNIT_ATTACKED
	set trig_3 = this_12
	set whichEvent_6 = whichEvent_5
	set index_3 = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig_3, Player(index_3), whichEvent_6, null)
		set index_3 = index_3 + 1
		exitwhen index_3 == bj_MAX_PLAYER_SLOTS
	endloop
	set receiver_10 = receiver_9
	set this_13 = receiver_10
	set condition_4 = Condition(ref_function_CityManage_closure_impl_4)
	call TriggerAddCondition(this_13, condition_4)
	set receiver_11 = receiver_10
	set this_14 = receiver_11
	set actionFunc_4 = ref_function_bridge_CityManage_closure_impl_6
	call TriggerAddAction(this_14, actionFunc_4)
	set temp_2 = EVENT_PLAYER_UNIT_ATTACKED
	set stackPos_2 = "when calling alloc_Closure in CityManage, line 81"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_15 = EventListener_maxIndex
			set EventListener_typeId[this_15] = 653
		else
			call error("Out of memory: Could not create Closure.", "when calling error in CityManage, line 81")
			set this_15 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_15 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_15] = 653
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set clVar = this_15
	set this_16 = clVar
	set EventListener_eventId[this_16] = 0
	set EventListener_next[this_16] = 0
	set EventListener_prev[this_16] = 0
	set eventId = temp_2
	set listener = clVar
	set stackPos_3 = "when calling add in CityManage, line 81"
	set wurst_stack[wurst_stack_depth] = stackPos_3
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_17 = eventId
	set stackPos_4 = "when calling toIntId in ClosureEvents, line 111"
	set wurst_stack[wurst_stack_depth] = stackPos_4
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_18 = this_17
	set id = ClosureEvents_eventidToIndex[GetHandleId(this_18)]
	if id == 0 then
		set id = registerEventId(this_17, "when calling registerEventId in ClosureEvents, line 228")
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set EventListener_eventId[listener] = id
	if EventListener_generalListenersFirsts[EventListener_eventId[listener]] != 0 then
		set EventListener_prev[EventListener_generalListenersFirsts[EventListener_eventId[listener]]] = listener
		set EventListener_next[listener] = EventListener_generalListenersFirsts[EventListener_eventId[listener]]
	endif
	set EventListener_generalListenersFirsts[EventListener_eventId[listener]] = listener
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set t_click = null
	set receiver = null
	set receiver_2 = null
	set receiver_3 = null
	set receiver_4 = null
	set receiver_5 = null
	set receiver_6 = null
	set receiver_7 = null
	set receiver_8 = null
	set receiver_9 = null
	set receiver_10 = null
	set receiver_11 = null
	set temp_2 = null
	set whichPlayer = null
	set loc = null
	set this_3 = null
	set condition = null
	set this_4 = null
	set this_5 = null
	set whichPlayer_2 = null
	set whichPlayerUnitEvent = null
	set filter = null
	set this_6 = null
	set condition_2 = null
	set this_7 = null
	set this_8 = null
	set whichEvent = null
	set trig = null
	set whichEvent_2 = null
	set this_9 = null
	set whichEvent_3 = null
	set trig_2 = null
	set whichEvent_4 = null
	set this_10 = null
	set condition_3 = null
	set this_11 = null
	set this_12 = null
	set whichEvent_5 = null
	set trig_3 = null
	set whichEvent_6 = null
	set this_13 = null
	set condition_4 = null
	set this_14 = null
	set eventId = null
	set this_17 = null
	set this_18 = null
	return true
endfunction

function bridge_init_CityManage takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_CityManage("CityManage, line 1")
endfunction

function getTimer takes string stackPos returns timer
	local timer receiver
	local timer stackTrace_tempReturn
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if TimerUtils_freeTimersCount > 0 then
		set TimerUtils_freeTimersCount = TimerUtils_freeTimersCount - 1
		call timer_setData(TimerUtils_freeTimers[TimerUtils_freeTimersCount], 0, "when calling setData in TimerUtils, line 29")
		set wurst_stack_depth = wurst_stack_depth - 1
		set receiver = null
		set stackTrace_tempReturn = null
		return TimerUtils_freeTimers[TimerUtils_freeTimersCount]
	else
		set receiver = CreateTimer()
		call timer_setData(receiver, 0, "when calling setData in TimerUtils, line 32")
		set stackTrace_tempReturn = receiver
		set wurst_stack_depth = wurst_stack_depth - 1
		set getTimertempReturn = stackTrace_tempReturn
		set receiver = null
		set stackTrace_tempReturn = null
		return getTimertempReturn
	endif
endfunction

function CallbackSingle_start takes integer this_3, real time, string stackPos returns nothing
	local timer receiver
	local timer receiver_2
	local timer this_4
	local real time_2
	local code timerCallBack
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set receiver = getTimer("when calling getTimer in ClosureTimers, line 68")
	call timer_setData(receiver, this_3, "when calling setData in ClosureTimers, line 69")
	set receiver_2 = receiver
	set this_4 = receiver_2
	set time_2 = time
	set timerCallBack = ref_function_bridge_CallbackSingle_closure_impl
	call TimerStart(this_4, time_2, false, timerCallBack)
	set CallbackSingle_t[this_3] = receiver_2
	set wurst_stack_depth = wurst_stack_depth - 1
	set receiver = null
	set receiver_2 = null
	set this_4 = null
endfunction

function new_HashMap takes string stackPos returns integer
	local integer this_3
	local string stackPos_2
	local integer this_4
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackPos_2 = "when calling HashMap in HashMap, line 7"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if Table_firstFree == 0 then
		if Table_maxIndex < 32768 then
			set Table_maxIndex = Table_maxIndex + 1
			set this_4 = Table_maxIndex
			set Table_typeId[this_4] = 698
		else
			call error("Out of memory: Could not create HashMap.", "when calling error in HashMap, line 8")
			set this_4 = 0
		endif
	else
		set Table_firstFree = Table_firstFree - 1
		set this_4 = Table_nextFree[Table_firstFree]
		set Table_typeId[this_4] = 698
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_3 = this_4
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_3
endfunction

function init_ClosureEvents takes string stackPos returns boolean
	local integer clVar
	local string stackPos_2
	local integer this_3
	local integer cb
	local string stackPos_3
	local real timeToWait
	local integer cb_2
	local string stackPos_4
	local integer this_4
	local real time
	local string stackPos_5
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set ClosureEvents_EVENT_PLAYER_CHAT_FILTER = ConvertPlayerEvent(96)
	set EventListener_castMap = new_HashMap("when calling new_HashMap in ClosureEvents, line 99")
	set EventListener_castMapCasters = new_HashMap("when calling new_HashMap in ClosureEvents, line 100")
	set ClosureEvents_unitTrig = CreateTrigger()
	set ClosureEvents_leaveTrig = CreateTrigger()
	set ClosureEvents_keyTrig = CreateTrigger()
	set stackPos_2 = "when calling alloc_Closure in ClosureEvents, line 279"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if CallbackSingle_firstFree == 0 then
		if CallbackSingle_maxIndex < 32768 then
			set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
			set this_3 = CallbackSingle_maxIndex
			set CallbackSingle_typeId[this_3] = 637
		else
			call error("Out of memory: Could not create Closure.", "when calling error in ClosureEvents, line 279")
			set this_3 = 0
		endif
	else
		set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
		set this_3 = CallbackSingle_nextFree[CallbackSingle_firstFree]
		set CallbackSingle_typeId[this_3] = 637
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set clVar = this_3
	set cb = clVar
	set stackPos_3 = "when calling nullTimer in ClosureEvents, line 279"
	set wurst_stack[wurst_stack_depth] = stackPos_3
	set wurst_stack_depth = wurst_stack_depth + 1
	set timeToWait = 0.
	set cb_2 = cb
	set stackPos_4 = "when calling doAfter in ClosureTimers, line 22"
	set wurst_stack[wurst_stack_depth] = stackPos_4
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_4 = cb_2
	set time = timeToWait
	set stackPos_5 = "when calling start in ClosureTimers, line 15"
	set wurst_stack[wurst_stack_depth] = stackPos_5
	set wurst_stack_depth = wurst_stack_depth + 1
	if CallbackSingle_typeId[this_4] == 0 then
		if this_4 == 0 then
			call error("Nullpointer exception when calling CallbackSingle.start", "when calling error in ClosureTimers, line 67")
		else
			call error("Called CallbackSingle.start on invalid object.", "when calling error in ClosureTimers, line 67")
		endif
	endif
	call CallbackSingle_start(this_4, time, "when calling start in ClosureTimers, line 67")
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	return true
endfunction

function bridge_init_ClosureEvents takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_ClosureEvents("ClosureEvents, line 1")
endfunction

function initializeTable takes string stackPos returns nothing
	local integer i
	local integer this_3
	local integer parentKey
	local integer value
	local string stackPos_2
	local integer this_4
	local integer parentKey_2
	local integer value_2
	local hashtable this_5
	local integer parentKey_3
	local integer childKey
	local integer value_3
	local string this_6
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set i = 0
	loop
		exitwhen i > 15
		set this_3 = Colors_decs
		set this_6 = Colors_hexs[i]
		set parentKey = StringHash(this_6)
		set value = i
		set stackPos_2 = "when calling saveInt in Colors, line 206"
		set wurst_stack[wurst_stack_depth] = stackPos_2
		set wurst_stack_depth = wurst_stack_depth + 1
		if Table_typeId[this_3] == 0 then
			if this_3 == 0 then
				call error("Nullpointer exception when calling Table.saveInt", "when calling error in Table, line 42")
			else
				call error("Called Table.saveInt on invalid object.", "when calling error in Table, line 42")
			endif
		endif
		set this_4 = this_3
		set parentKey_2 = parentKey
		set value_2 = value
		set this_5 = Table_ht
		set parentKey_3 = this_4
		set childKey = parentKey_2
		set value_3 = value_2
		call SaveInteger(this_5, parentKey_3, childKey, value_3)
		set wurst_stack_depth = wurst_stack_depth - 1
		set i = i + 1
	endloop
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function new_Table takes string stackPos returns integer
	local integer this_3
	local string stackPos_2
	local integer this_4
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackPos_2 = "when calling Table in Table, line 5"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if Table_firstFree == 0 then
		if Table_maxIndex < 32768 then
			set Table_maxIndex = Table_maxIndex + 1
			set this_4 = Table_maxIndex
			set Table_typeId[this_4] = 697
		else
			call error("Out of memory: Could not create Table.", "when calling error in Table, line 6")
			set this_4 = 0
		endif
	else
		set Table_firstFree = Table_firstFree - 1
		set this_4 = Table_nextFree[Table_firstFree]
		set Table_typeId[this_4] = 697
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_3 = this_4
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_3
endfunction

function init_Colors takes string stackPos returns boolean
	local integer tuple_temp
	local integer tuple_temp_2
	local integer tuple_temp_3
	local integer tuple_temp_4
	local integer tuple_temp_5
	local integer tuple_temp_6
	local integer tuple_temp_7
	local integer tuple_temp_8
	local integer tuple_temp_9
	local integer tuple_temp_10
	local integer tuple_temp_11
	local integer tuple_temp_12
	local integer tuple_temp_13
	local integer tuple_temp_14
	local integer tuple_temp_15
	local integer tuple_temp_16
	local integer tuple_temp_17
	local integer tuple_temp_18
	local integer tuple_temp_19
	local integer tuple_temp_20
	local integer tuple_temp_21
	local integer tuple_temp_22
	local integer tuple_temp_23
	local integer tuple_temp_24
	local integer tuple_temp_25
	local integer tuple_temp_26
	local integer tuple_temp_27
	local integer tuple_temp_28
	local integer tuple_temp_29
	local integer tuple_temp_30
	local integer tuple_temp_31
	local integer tuple_temp_32
	local integer tuple_temp_33
	local integer tuple_temp_34
	local integer tuple_temp_35
	local integer tuple_temp_36
	local integer tuple_temp_37
	local integer tuple_temp_38
	local integer tuple_temp_39
	local integer tuple_temp_40
	local integer tuple_temp_41
	local integer tuple_temp_42
	local integer tuple_temp_43
	local integer tuple_temp_44
	local integer tuple_temp_45
	local integer tuple_temp_46
	local integer tuple_temp_47
	local integer tuple_temp_48
	local integer tuple_temp_49
	local integer tuple_temp_50
	local integer tuple_temp_51
	local integer tuple_temp_52
	local integer tuple_temp_53
	local integer tuple_temp_54
	local integer tuple_temp_55
	local integer tuple_temp_56
	local integer tuple_temp_57
	local integer tuple_temp_58
	local integer tuple_temp_59
	local integer tuple_temp_60
	local integer tuple_temp_61
	local integer tuple_temp_62
	local integer tuple_temp_63
	local integer tuple_temp_64
	local integer tuple_temp_65
	local integer tuple_temp_66
	local integer tuple_temp_67
	local integer tuple_temp_68
	local integer tuple_temp_69
	local integer tuple_temp_70
	local integer tuple_temp_71
	local integer tuple_temp_72
	local integer tuple_temp_73
	local integer tuple_temp_74
	local integer tuple_temp_75
	local integer tuple_temp_76
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set tuple_temp = 0
	set tuple_temp_2 = 0
	set tuple_temp_3 = 0
	set tuple_temp_4 = 0
	set Colors_COLOR_BLACK_red = tuple_temp
	set Colors_COLOR_BLACK_green = tuple_temp_2
	set Colors_COLOR_BLACK_blue = tuple_temp_3
	set Colors_COLOR_BLACK_alpha = tuple_temp_4
	set tuple_temp_5 = 255
	set tuple_temp_6 = 2
	set tuple_temp_7 = 2
	set Colors_PLAYER_COLORS_red[0] = tuple_temp_5
	set Colors_PLAYER_COLORS_green[0] = tuple_temp_6
	set Colors_PLAYER_COLORS_blue[0] = tuple_temp_7
	set tuple_temp_8 = 0
	set tuple_temp_9 = 65
	set tuple_temp_10 = 255
	set Colors_PLAYER_COLORS_red[1] = tuple_temp_8
	set Colors_PLAYER_COLORS_green[1] = tuple_temp_9
	set Colors_PLAYER_COLORS_blue[1] = tuple_temp_10
	set tuple_temp_11 = 27
	set tuple_temp_12 = 229
	set tuple_temp_13 = 184
	set Colors_PLAYER_COLORS_red[2] = tuple_temp_11
	set Colors_PLAYER_COLORS_green[2] = tuple_temp_12
	set Colors_PLAYER_COLORS_blue[2] = tuple_temp_13
	set tuple_temp_14 = 83
	set tuple_temp_15 = 0
	set tuple_temp_16 = 128
	set Colors_PLAYER_COLORS_red[3] = tuple_temp_14
	set Colors_PLAYER_COLORS_green[3] = tuple_temp_15
	set Colors_PLAYER_COLORS_blue[3] = tuple_temp_16
	set tuple_temp_17 = 255
	set tuple_temp_18 = 252
	set tuple_temp_19 = 0
	set Colors_PLAYER_COLORS_red[4] = tuple_temp_17
	set Colors_PLAYER_COLORS_green[4] = tuple_temp_18
	set Colors_PLAYER_COLORS_blue[4] = tuple_temp_19
	set tuple_temp_20 = 254
	set tuple_temp_21 = 137
	set tuple_temp_22 = 13
	set Colors_PLAYER_COLORS_red[5] = tuple_temp_20
	set Colors_PLAYER_COLORS_green[5] = tuple_temp_21
	set Colors_PLAYER_COLORS_blue[5] = tuple_temp_22
	set tuple_temp_23 = 31
	set tuple_temp_24 = 191
	set tuple_temp_25 = 0
	set Colors_PLAYER_COLORS_red[6] = tuple_temp_23
	set Colors_PLAYER_COLORS_green[6] = tuple_temp_24
	set Colors_PLAYER_COLORS_blue[6] = tuple_temp_25
	set tuple_temp_26 = 228
	set tuple_temp_27 = 90
	set tuple_temp_28 = 175
	set Colors_PLAYER_COLORS_red[7] = tuple_temp_26
	set Colors_PLAYER_COLORS_green[7] = tuple_temp_27
	set Colors_PLAYER_COLORS_blue[7] = tuple_temp_28
	set tuple_temp_29 = 148
	set tuple_temp_30 = 149
	set tuple_temp_31 = 150
	set Colors_PLAYER_COLORS_red[8] = tuple_temp_29
	set Colors_PLAYER_COLORS_green[8] = tuple_temp_30
	set Colors_PLAYER_COLORS_blue[8] = tuple_temp_31
	set tuple_temp_32 = 125
	set tuple_temp_33 = 190
	set tuple_temp_34 = 241
	set Colors_PLAYER_COLORS_red[9] = tuple_temp_32
	set Colors_PLAYER_COLORS_green[9] = tuple_temp_33
	set Colors_PLAYER_COLORS_blue[9] = tuple_temp_34
	set tuple_temp_35 = 15
	set tuple_temp_36 = 97
	set tuple_temp_37 = 69
	set Colors_PLAYER_COLORS_red[10] = tuple_temp_35
	set Colors_PLAYER_COLORS_green[10] = tuple_temp_36
	set Colors_PLAYER_COLORS_blue[10] = tuple_temp_37
	set tuple_temp_38 = 77
	set tuple_temp_39 = 41
	set tuple_temp_40 = 3
	set Colors_PLAYER_COLORS_red[11] = tuple_temp_38
	set Colors_PLAYER_COLORS_green[11] = tuple_temp_39
	set Colors_PLAYER_COLORS_blue[11] = tuple_temp_40
	set tuple_temp_41 = 155
	set tuple_temp_42 = 0
	set tuple_temp_43 = 0
	set Colors_PLAYER_COLORS_red[12] = tuple_temp_41
	set Colors_PLAYER_COLORS_green[12] = tuple_temp_42
	set Colors_PLAYER_COLORS_blue[12] = tuple_temp_43
	set tuple_temp_44 = 0
	set tuple_temp_45 = 0
	set tuple_temp_46 = 195
	set Colors_PLAYER_COLORS_red[13] = tuple_temp_44
	set Colors_PLAYER_COLORS_green[13] = tuple_temp_45
	set Colors_PLAYER_COLORS_blue[13] = tuple_temp_46
	set tuple_temp_47 = 0
	set tuple_temp_48 = 234
	set tuple_temp_49 = 255
	set Colors_PLAYER_COLORS_red[14] = tuple_temp_47
	set Colors_PLAYER_COLORS_green[14] = tuple_temp_48
	set Colors_PLAYER_COLORS_blue[14] = tuple_temp_49
	set tuple_temp_50 = 190
	set tuple_temp_51 = 0
	set tuple_temp_52 = 254
	set Colors_PLAYER_COLORS_red[15] = tuple_temp_50
	set Colors_PLAYER_COLORS_green[15] = tuple_temp_51
	set Colors_PLAYER_COLORS_blue[15] = tuple_temp_52
	set tuple_temp_53 = 235
	set tuple_temp_54 = 205
	set tuple_temp_55 = 135
	set Colors_PLAYER_COLORS_red[16] = tuple_temp_53
	set Colors_PLAYER_COLORS_green[16] = tuple_temp_54
	set Colors_PLAYER_COLORS_blue[16] = tuple_temp_55
	set tuple_temp_56 = 248
	set tuple_temp_57 = 164
	set tuple_temp_58 = 139
	set Colors_PLAYER_COLORS_red[17] = tuple_temp_56
	set Colors_PLAYER_COLORS_green[17] = tuple_temp_57
	set Colors_PLAYER_COLORS_blue[17] = tuple_temp_58
	set tuple_temp_59 = 191
	set tuple_temp_60 = 255
	set tuple_temp_61 = 128
	set Colors_PLAYER_COLORS_red[18] = tuple_temp_59
	set Colors_PLAYER_COLORS_green[18] = tuple_temp_60
	set Colors_PLAYER_COLORS_blue[18] = tuple_temp_61
	set tuple_temp_62 = 220
	set tuple_temp_63 = 185
	set tuple_temp_64 = 235
	set Colors_PLAYER_COLORS_red[19] = tuple_temp_62
	set Colors_PLAYER_COLORS_green[19] = tuple_temp_63
	set Colors_PLAYER_COLORS_blue[19] = tuple_temp_64
	set tuple_temp_65 = 40
	set tuple_temp_66 = 40
	set tuple_temp_67 = 40
	set Colors_PLAYER_COLORS_red[20] = tuple_temp_65
	set Colors_PLAYER_COLORS_green[20] = tuple_temp_66
	set Colors_PLAYER_COLORS_blue[20] = tuple_temp_67
	set tuple_temp_68 = 235
	set tuple_temp_69 = 240
	set tuple_temp_70 = 255
	set Colors_PLAYER_COLORS_red[21] = tuple_temp_68
	set Colors_PLAYER_COLORS_green[21] = tuple_temp_69
	set Colors_PLAYER_COLORS_blue[21] = tuple_temp_70
	set tuple_temp_71 = 0
	set tuple_temp_72 = 120
	set tuple_temp_73 = 30
	set Colors_PLAYER_COLORS_red[22] = tuple_temp_71
	set Colors_PLAYER_COLORS_green[22] = tuple_temp_72
	set Colors_PLAYER_COLORS_blue[22] = tuple_temp_73
	set tuple_temp_74 = 164
	set tuple_temp_75 = 11
	set tuple_temp_76 = 51
	set Colors_PLAYER_COLORS_red[23] = tuple_temp_74
	set Colors_PLAYER_COLORS_green[23] = tuple_temp_75
	set Colors_PLAYER_COLORS_blue[23] = tuple_temp_76
	set Colors_hexs[0] = "0"
	set Colors_hexs[1] = "1"
	set Colors_hexs[2] = "2"
	set Colors_hexs[3] = "3"
	set Colors_hexs[4] = "4"
	set Colors_hexs[5] = "5"
	set Colors_hexs[6] = "6"
	set Colors_hexs[7] = "7"
	set Colors_hexs[8] = "8"
	set Colors_hexs[9] = "9"
	set Colors_hexs[10] = "A"
	set Colors_hexs[11] = "B"
	set Colors_hexs[12] = "C"
	set Colors_hexs[13] = "D"
	set Colors_hexs[14] = "E"
	set Colors_hexs[15] = "F"
	set Colors_decs = new_Table("when calling new_Table in Colors, line 154")
	call initializeTable("when calling initializeTable in Colors, line 209")
	set wurst_stack_depth = wurst_stack_depth - 1
	return true
endfunction

function bridge_init_Colors takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_Colors("Colors, line 1")
endfunction

function CallbackPeriodic_start takes integer this_3, real time, string stackPos returns nothing
	local timer this_4
	local real time_2
	local code timerCallBack
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set CallbackPeriodic_t[this_3] = getTimer("when calling getTimer in ClosureTimers, line 89")
	call timer_setData(CallbackPeriodic_t[this_3], this_3, "when calling setData in ClosureTimers, line 90")
	set this_4 = CallbackPeriodic_t[this_3]
	set time_2 = time
	set timerCallBack = ref_function_bridge_CallbackPeriodic_staticCallback
	call TimerStart(this_4, time_2, true, timerCallBack)
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_4 = null
endfunction

function init_DateTime takes string stackPos returns boolean
	local real sec_2
	local integer clVar
	local string stackPos_2
	local integer this_3
	local real time
	local integer cb
	local string stackPos_3
	local integer this_4
	local real time_2
	local string stackPos_4
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set DateTime_kIncomeTime = 120.0
	set sec_2 = DateTime_kIncomeTime
	set stackPos_2 = "when calling alloc_Closure in DateTime, line 33"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if CallbackPeriodic_firstFree == 0 then
		if CallbackPeriodic_maxIndex < 32768 then
			set CallbackPeriodic_maxIndex = CallbackPeriodic_maxIndex + 1
			set this_3 = CallbackPeriodic_maxIndex
			set CallbackPeriodic_typeId[this_3] = 632
		else
			call error("Out of memory: Could not create Closure.", "when calling error in DateTime, line 33")
			set this_3 = 0
		endif
	else
		set CallbackPeriodic_firstFree = CallbackPeriodic_firstFree - 1
		set this_3 = CallbackPeriodic_nextFree[CallbackPeriodic_firstFree]
		set CallbackPeriodic_typeId[this_3] = 632
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set clVar = this_3
	set sec[clVar] = sec_2
	set time = 1.0
	set cb = clVar
	set stackPos_3 = "when calling doPeriodically in DateTime, line 33"
	set wurst_stack[wurst_stack_depth] = stackPos_3
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_4 = cb
	set time_2 = time
	set stackPos_4 = "when calling start in ClosureTimers, line 36"
	set wurst_stack[wurst_stack_depth] = stackPos_4
	set wurst_stack_depth = wurst_stack_depth + 1
	if CallbackPeriodic_typeId[this_4] == 0 then
		if this_4 == 0 then
			call error("Nullpointer exception when calling CallbackPeriodic.start", "when calling error in ClosureTimers, line 88")
		else
			call error("Called CallbackPeriodic.start on invalid object.", "when calling error in ClosureTimers, line 88")
		endif
	endif
	call CallbackPeriodic_start(this_4, time_2, "when calling start in ClosureTimers, line 88")
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	return true
endfunction

function bridge_init_DateTime takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_DateTime("DateTime, line 1")
endfunction

function createDummy takes real pos_x, real pos_y, player owner, real facing_radians returns unit
	local player p = owner
	local integer unitId = 2019849581
	local real tuple_temp = pos_x
	local real tuple_temp_2 = pos_y
	local real pos_x_2 = tuple_temp
	local real pos_y_2 = tuple_temp_2
	local real tuple_temp_3 = facing_radians
	local real facing_radians_2 = tuple_temp_3
	local player temp = p
	local integer temp_2 = unitId
	local real temp_3 = pos_x_2
	local real temp_4 = pos_y_2
	local real tuple_temp_4 = facing_radians_2
	local real this_radians = tuple_temp_4
	local unit u = CreateUnit(temp, temp_2, temp_3, temp_4, this_radians * 57.295779513)
	local unit receiver = u
	local unit this_3 = receiver
	local real tuple_temp_5 = pos_x
	local real tuple_temp_6 = pos_y
	local real pos_x_3 = tuple_temp_5
	local real pos_y_3 = tuple_temp_6
	local unit receiver_5 = this_3
	local unit this_4 = receiver_5
	local real x = pos_x_3
	local unit receiver_2
	local unit receiver_3
	local unit receiver_4
	local unit receiver_6
	local unit this_5
	local real y
	local unit this_6
	local integer abil
	local unit this_7
	local integer abil_2
	local unit this_8
	local integer abil_3
	call SetUnitX(this_4, x)
	set receiver_6 = receiver_5
	set this_5 = receiver_6
	set y = pos_y_3
	call SetUnitY(this_5, y)
	set receiver_2 = receiver
	set this_6 = receiver_2
	set abil = 1097691750
	call UnitAddAbility(this_6, abil)
	set receiver_3 = receiver_2
	set this_7 = receiver_3
	set abil_2 = 1097691750
	call UnitRemoveAbility(this_7, abil_2)
	set receiver_4 = receiver_3
	set this_8 = receiver_4
	set abil_3 = 1097625443
	call UnitAddAbility(this_8, abil_3)
	set createDummytempReturn = u
	set u = null
	set receiver = null
	set receiver_2 = null
	set receiver_3 = null
	set receiver_4 = null
	set p = null
	set this_3 = null
	set receiver_5 = null
	set receiver_6 = null
	set this_4 = null
	set this_5 = null
	set this_6 = null
	set this_7 = null
	set this_8 = null
	set temp = null
	return createDummytempReturn
endfunction

function dispatch_ArrayQueue_DummyRecycler_ArrayQueue_enqueue takes integer this_3, unit u, string stackPos returns nothing
	local integer this_4
	local string stackPos_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if ArrayQueue_typeId[this_3] == 0 then
		if this_3 == 0 then
			call error("Nullpointer exception when calling ArrayQueue.enqueue", "when calling error in DummyRecycler, line 54")
		else
			call error("Called ArrayQueue.enqueue on invalid object.", "when calling error in DummyRecycler, line 54")
		endif
	endif
	set this_4 = this_3
	set stackPos_2 = "when calling enqueue in DummyRecycler, line 54"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if ArrayQueue_size[this_4] < 6 then
		set ArrayQueue_size[this_4] = ArrayQueue_size[this_4] + 1
		set ArrayQueue_rp[this_4] = ModuloInteger(ArrayQueue_rp[this_4] + 1, 6)
	else
		call error("Queue Overflow", "when calling error in DummyRecycler, line 60")
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function new_ArrayQueue takes string stackPos returns integer
	local integer this_3
	local string stackPos_2
	local integer this_4
	local integer this_5
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackPos_2 = "when calling ArrayQueue in DummyRecycler, line 48"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if ArrayQueue_firstFree == 0 then
		if ArrayQueue_maxIndex < 32768 then
			set ArrayQueue_maxIndex = ArrayQueue_maxIndex + 1
			set this_4 = ArrayQueue_maxIndex
			set ArrayQueue_typeId[this_4] = 626
		else
			call error("Out of memory: Could not create ArrayQueue.", "when calling error in DummyRecycler, line 48")
			set this_4 = 0
		endif
	else
		set ArrayQueue_firstFree = ArrayQueue_firstFree - 1
		set this_4 = ArrayQueue_nextFree[ArrayQueue_firstFree]
		set ArrayQueue_typeId[this_4] = 626
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_3 = this_4
	set this_5 = this_3
	set ArrayQueue_rp[this_5] = 0
	set ArrayQueue_size[this_5] = 0
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_3
endfunction

function init_DummyRecycler takes string stackPos returns boolean
	local integer i
	local integer temp
	local integer j
	local integer temp_2
	local real this_3
	local real temp_x
	local real temp_y
	local player temp_3
	local integer temp_4
	local real tuple_temp
	local real tuple_temp_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set DummyRecycler_ANGLE_DEGREE = 360 * 1. / 8
	call CreateTimer()
	set i = 0
	set temp = 8 - 1
	loop
		exitwhen i > temp
		set DummyRecycler_angleQueues[i] = new_ArrayQueue("when calling new_ArrayQueue in DummyRecycler, line 139")
		set j = 0
		set temp_2 = 6 - 1
		loop
			exitwhen j > temp_2
			set temp_4 = DummyRecycler_angleQueues[i]
			set tuple_temp = MapBounds_boundMax_x
			set tuple_temp_2 = MapBounds_boundMax_y
			set temp_x = tuple_temp
			set temp_y = tuple_temp_2
			set temp_3 = Basics_DUMMY_PLAYER
			set this_3 = i * DummyRecycler_ANGLE_DEGREE
			call dispatch_ArrayQueue_DummyRecycler_ArrayQueue_enqueue(temp_4, createDummy(temp_x, temp_y, temp_3, this_3 * 0.017453293), "when calling enqueue in DummyRecycler, line 141")
			set j = j + 1
		endloop
		set i = i + 1
	endloop
	set wurst_stack_depth = wurst_stack_depth - 1
	set temp_3 = null
	return true
endfunction

function bridge_init_DummyRecycler takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_DummyRecycler("DummyRecycler, line 1")
endfunction

function init_Economy takes string stackPos returns boolean
	local integer clVar
	local integer clVar_2
	local string stackPos_2
	local integer this_3
	local real time
	local integer cb
	local string stackPos_3
	local integer this_4
	local real time_2
	local string stackPos_4
	local string stackPos_5
	local integer this_5
	local real time_3
	local integer cb_2
	local string stackPos_6
	local integer this_6
	local real time_4
	local string stackPos_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackPos_2 = "when calling alloc_Closure in Economy, line 40"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if CallbackPeriodic_firstFree == 0 then
		if CallbackPeriodic_maxIndex < 32768 then
			set CallbackPeriodic_maxIndex = CallbackPeriodic_maxIndex + 1
			set this_3 = CallbackPeriodic_maxIndex
			set CallbackPeriodic_typeId[this_3] = 633
		else
			call error("Out of memory: Could not create Closure.", "when calling error in Economy, line 40")
			set this_3 = 0
		endif
	else
		set CallbackPeriodic_firstFree = CallbackPeriodic_firstFree - 1
		set this_3 = CallbackPeriodic_nextFree[CallbackPeriodic_firstFree]
		set CallbackPeriodic_typeId[this_3] = 633
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set clVar = this_3
	set time = 5.0
	set cb = clVar
	set stackPos_3 = "when calling doPeriodically in Economy, line 40"
	set wurst_stack[wurst_stack_depth] = stackPos_3
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_4 = cb
	set time_2 = time
	set stackPos_4 = "when calling start in ClosureTimers, line 36"
	set wurst_stack[wurst_stack_depth] = stackPos_4
	set wurst_stack_depth = wurst_stack_depth + 1
	if CallbackPeriodic_typeId[this_4] == 0 then
		if this_4 == 0 then
			call error("Nullpointer exception when calling CallbackPeriodic.start", "when calling error in ClosureTimers, line 88")
		else
			call error("Called CallbackPeriodic.start on invalid object.", "when calling error in ClosureTimers, line 88")
		endif
	endif
	call CallbackPeriodic_start(this_4, time_2, "when calling start in ClosureTimers, line 88")
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set stackPos_5 = "when calling alloc_Closure in Economy, line 47"
	set wurst_stack[wurst_stack_depth] = stackPos_5
	set wurst_stack_depth = wurst_stack_depth + 1
	if CallbackPeriodic_firstFree == 0 then
		if CallbackPeriodic_maxIndex < 32768 then
			set CallbackPeriodic_maxIndex = CallbackPeriodic_maxIndex + 1
			set this_5 = CallbackPeriodic_maxIndex
			set CallbackPeriodic_typeId[this_5] = 634
		else
			call error("Out of memory: Could not create Closure.", "when calling error in Economy, line 47")
			set this_5 = 0
		endif
	else
		set CallbackPeriodic_firstFree = CallbackPeriodic_firstFree - 1
		set this_5 = CallbackPeriodic_nextFree[CallbackPeriodic_firstFree]
		set CallbackPeriodic_typeId[this_5] = 634
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set clVar_2 = this_5
	set time_3 = 120.0
	set cb_2 = clVar_2
	set stackPos_6 = "when calling doPeriodically in Economy, line 47"
	set wurst_stack[wurst_stack_depth] = stackPos_6
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_6 = cb_2
	set time_4 = time_3
	set stackPos_7 = "when calling start in ClosureTimers, line 36"
	set wurst_stack[wurst_stack_depth] = stackPos_7
	set wurst_stack_depth = wurst_stack_depth + 1
	if CallbackPeriodic_typeId[this_6] == 0 then
		if this_6 == 0 then
			call error("Nullpointer exception when calling CallbackPeriodic.start", "when calling error in ClosureTimers, line 88")
		else
			call error("Called CallbackPeriodic.start on invalid object.", "when calling error in ClosureTimers, line 88")
		endif
	endif
	call CallbackPeriodic_start(this_6, time_4, "when calling start in ClosureTimers, line 88")
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	return true
endfunction

function bridge_init_Economy takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_Economy("Economy, line 1")
endfunction

function bridge_init_EventHelper takes nothing returns boolean
	local string stackPos
	set wurst_stack_depth = 0
	set stackPos = "EventHelper, line 1"
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call new_HashMap("when calling new_HashMap in EventHelper, line 6")
	call new_HashMap("when calling new_HashMap in EventHelper, line 7")
	call new_Table("when calling new_Table in EventHelper, line 8")
	set wurst_stack_depth = wurst_stack_depth - 1
	return true
endfunction

function init_LinkedList takes string stackPos returns boolean
	local string stackPos_2
	local string stackPos_3
	local real r
	local real this_3
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackPos_2 = "when calling alloc_Closure in LinkedList, line 504"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if Comparator_firstFree == 0 then
		if Comparator_maxIndex < 32768 then
			set Comparator_maxIndex = Comparator_maxIndex + 1
		else
			call error("Out of memory: Could not create Closure.", "when calling error in LinkedList, line 504")
		endif
	else
		set Comparator_firstFree = Comparator_firstFree - 1
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set stackPos_3 = "when calling alloc_Closure in LinkedList, line 508"
	set wurst_stack[wurst_stack_depth] = stackPos_3
	set wurst_stack_depth = wurst_stack_depth + 1
	if Comparator_firstFree == 0 then
		if Comparator_maxIndex < 32768 then
			set Comparator_maxIndex = Comparator_maxIndex + 1
		else
			call error("Out of memory: Could not create Closure.", "when calling error in LinkedList, line 508")
		endif
	else
		set Comparator_firstFree = Comparator_firstFree - 1
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set r = 0.
	set this_3 = r * 1000.
	call R2I(this_3)
	set wurst_stack_depth = wurst_stack_depth - 1
	return true
endfunction

function bridge_init_LinkedList takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_LinkedList("LinkedList, line 1")
endfunction

function getRandomValWithNormalDistribution takes real lower, real upper, real sigma, real mean returns real
	local real r = GetRandomReal( - 5.0, 5.0)
	local real add = (upper - lower) / 2. - lower
	local real x =  - ((r - mean) * (r - mean) / (2. * sigma * sigma))
	local real mul = Pow(MathTools_e, x) / SquareRoot(2. * 3.141592654 * sigma * sigma)
	local real bas = (upper - lower) / 2.
	return bas + sign(r) * add * mul
endfunction

function construct_City takes integer this_3, unit u, string n, integer f_id, integer tier, string stackPos returns nothing
	local integer clVar
	local integer clVar_2
	local playerunitevent temp
	local unit this_4
	local unit this_5
	local unit this_6
	local player this_7
	local unit this_8
	local string this_9
	local integer start
	local integer stop
	local real this_10
	local integer this_11
	local integer this_12
	local string stackPos_2
	local integer this_13
	local real time
	local integer cb
	local string stackPos_3
	local integer this_14
	local real time_2
	local string stackPos_4
	local string stackPos_5
	local integer this_15
	local integer this_16
	local eventid eventId
	local integer listener
	local string stackPos_6
	local eventid this_17
	local string stackPos_7
	local integer id
	local handle this_18
	local real temp_2
	local real temp_3
	local real tuple_temp
	local real tuple_temp_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set City_city_unit[this_3] = u
	set this_4 = City_city_unit[this_3]
	set this_5 = this_4
	set temp_2 = GetUnitX(this_5)
	set this_6 = this_4
	set tuple_temp = temp_2
	set tuple_temp_2 = GetUnitY(this_6)
	set City_city_pos_x[this_3] = tuple_temp
	set City_city_pos_y[this_3] = tuple_temp_2
	set City_city_name[this_3] = n
	set City_force_id[this_3] = f_id
	set this_8 = City_city_unit[this_3]
	set this_7 = GetOwningPlayer(this_8)
	call GetPlayerId(this_7)
	set this_9 = n
	set start = 0
	set stop = 24
	set City_city_name[this_3] = SubString(this_9, start, stop)
	set City_city_id[this_3] = City_cityCount
	set City_cityCount = City_cityCount + 1
	set City_population_growth_rate[this_3] = getRandomValWithNormalDistribution(City_kCityPopGrowthRateMinMax[0], City_kCityPopGrowthRateMinMax[1], 1.0, 0.)
	set this_11 = dispatch_LinkedList_LinkedList_LinkedList_get(City_kCityPopInit[tier], 0, "when calling get in City, line 210")
	set temp_3 = this_11 * 1.
	set this_12 = dispatch_LinkedList_LinkedList_LinkedList_get(City_kCityPopInit[tier], 1, "when calling get in City, line 210")
	set this_10 = getRandomValWithNormalDistribution(temp_3, this_12 * 1., 10.0, 0.)
	set City_population[this_3] = R2I(this_10)
	set stackPos_2 = "when calling alloc_Closure in City, line 214"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if CallbackPeriodic_firstFree == 0 then
		if CallbackPeriodic_maxIndex < 32768 then
			set CallbackPeriodic_maxIndex = CallbackPeriodic_maxIndex + 1
			set this_13 = CallbackPeriodic_maxIndex
			set CallbackPeriodic_typeId[this_13] = 631
		else
			call error("Out of memory: Could not create Closure.", "when calling error in City, line 214")
			set this_13 = 0
		endif
	else
		set CallbackPeriodic_firstFree = CallbackPeriodic_firstFree - 1
		set this_13 = CallbackPeriodic_nextFree[CallbackPeriodic_firstFree]
		set CallbackPeriodic_typeId[this_13] = 631
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set clVar = this_13
	set this[clVar] = this_3
	set time = 5.0
	set cb = clVar
	set stackPos_3 = "when calling doPeriodically in City, line 214"
	set wurst_stack[wurst_stack_depth] = stackPos_3
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_14 = cb
	set time_2 = time
	set stackPos_4 = "when calling start in ClosureTimers, line 36"
	set wurst_stack[wurst_stack_depth] = stackPos_4
	set wurst_stack_depth = wurst_stack_depth + 1
	if CallbackPeriodic_typeId[this_14] == 0 then
		if this_14 == 0 then
			call error("Nullpointer exception when calling CallbackPeriodic.start", "when calling error in ClosureTimers, line 88")
		else
			call error("Called CallbackPeriodic.start on invalid object.", "when calling error in ClosureTimers, line 88")
		endif
	endif
	call CallbackPeriodic_start(this_14, time_2, "when calling start in ClosureTimers, line 88")
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set temp = EVENT_PLAYER_UNIT_UPGRADE_FINISH
	set stackPos_5 = "when calling alloc_Closure in City, line 231"
	set wurst_stack[wurst_stack_depth] = stackPos_5
	set wurst_stack_depth = wurst_stack_depth + 1
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_15 = EventListener_maxIndex
			set EventListener_typeId[this_15] = 652
		else
			call error("Out of memory: Could not create Closure.", "when calling error in City, line 231")
			set this_15 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_15 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_15] = 652
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set clVar_2 = this_15
	set this_16 = clVar_2
	set EventListener_eventId[this_16] = 0
	set EventListener_next[this_16] = 0
	set EventListener_prev[this_16] = 0
	set this_2[clVar_2] = this_3
	set eventId = temp
	set listener = clVar_2
	set stackPos_6 = "when calling add in City, line 231"
	set wurst_stack[wurst_stack_depth] = stackPos_6
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_17 = eventId
	set stackPos_7 = "when calling toIntId in ClosureEvents, line 111"
	set wurst_stack[wurst_stack_depth] = stackPos_7
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_18 = this_17
	set id = ClosureEvents_eventidToIndex[GetHandleId(this_18)]
	if id == 0 then
		set id = registerEventId(this_17, "when calling registerEventId in ClosureEvents, line 228")
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set EventListener_eventId[listener] = id
	if EventListener_generalListenersFirsts[EventListener_eventId[listener]] != 0 then
		set EventListener_prev[EventListener_generalListenersFirsts[EventListener_eventId[listener]]] = listener
		set EventListener_next[listener] = EventListener_generalListenersFirsts[EventListener_eventId[listener]]
	endif
	set EventListener_generalListenersFirsts[EventListener_eventId[listener]] = listener
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set temp = null
	set this_4 = null
	set this_5 = null
	set this_6 = null
	set this_7 = null
	set this_8 = null
	set eventId = null
	set this_17 = null
	set this_18 = null
endfunction

function new_City takes unit u, string n, integer f_id, integer tier, string stackPos returns integer
	local integer this_3
	local string stackPos_2
	local integer this_4
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackPos_2 = "when calling City in City, line 193"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if City_firstFree == 0 then
		if City_maxIndex < 32768 then
			set City_maxIndex = City_maxIndex + 1
			set this_4 = City_maxIndex
			set City_typeId[this_4] = 644
		else
			call error("Out of memory: Could not create City.", "when calling error in City, line 41")
			set this_4 = 0
		endif
	else
		set City_firstFree = City_firstFree - 1
		set this_4 = City_nextFree[City_firstFree]
		set City_typeId[this_4] = 644
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_3 = this_4
	call construct_City(this_3, u, n, f_id, tier, "when calling construct_City in City, line 193")
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_3
endfunction

function NewCity takes rect r, string n, integer f, integer tier, string stackPos returns nothing
	local group g
	local unit u
	local rect r_2
	local rect r_3
	local boolexpr filter
	local group g_2
	local group this_3
	local unit iterUnit
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set r_2 = r
	set r_3 = r_2
	set filter = null
	set g_2 = CreateGroup()
	call GroupEnumUnitsInRect(g_2, r_3, filter)
	call DestroyBoolExpr(filter)
	set g = g_2
	set this_3 = g
	set iterUnit = FirstOfGroup(this_3)
	call GroupRemoveUnit(this_3, iterUnit)
	set u = iterUnit
	set City_cities[City_cityCount] = new_City(u, n, f, tier, "when calling new_City in SettingCities, line 7")
	set wurst_stack_depth = wurst_stack_depth - 1
	set g = null
	set u = null
	set r_2 = null
	set r_3 = null
	set filter = null
	set g_2 = null
	set this_3 = null
	set iterUnit = null
endfunction

function SetDiploEconomyRangeMax takes nothing returns nothing
	local rect r = bj_mapInitialPlayableArea
	local rect r_2 = r
	local boolexpr filter = null
	local group g_2 = CreateGroup()
	local group g
	local group iterator
	local unit u
	local group this_3
	local group this_4
	local group this_5
	local unit iterUnit
	local unit this_6
	local unit this_7
	local unit whichUnit
	local real acquireRange
	local group this_8
	local group this_9
	local group this_10
	local boolean andLeft
	call GroupEnumUnitsInRect(g_2, r_2, filter)
	call DestroyBoolExpr(filter)
	set g = g_2
	set this_3 = g
	set Group_iterGroup = CreateGroup()
	call ForGroup(this_3, ref_function_Group_closure_impl)
	set iterator = Group_iterGroup
	loop
		set this_4 = iterator
		exitwhen  not (FirstOfGroup(this_4) != null)
		set this_5 = iterator
		set iterUnit = FirstOfGroup(this_5)
		call GroupRemoveUnit(this_5, iterUnit)
		set u = iterUnit
		set this_6 = u
		if GetUnitTypeId(this_6) == 1211118391 then
			set andLeft = true
		else
			set this_7 = u
			set andLeft = GetUnitTypeId(this_7) == 1211118406
		endif
		if andLeft then
			set whichUnit = u
			set acquireRange = MathTools_INF_REAL
			call SetUnitAcquireRange(whichUnit, acquireRange)
		endif
	endloop
	set this_8 = iterator
	set this_9 = this_8
	call GroupClear(this_9)
	set this_10 = this_8
	call DestroyGroup(this_10)
	set g = null
	set iterator = null
	set u = null
	set r = null
	set r_2 = null
	set filter = null
	set g_2 = null
	set this_3 = null
	set this_4 = null
	set this_5 = null
	set iterUnit = null
	set this_6 = null
	set this_7 = null
	set whichUnit = null
	set this_8 = null
	set this_9 = null
	set this_10 = null
endfunction

function SetPlayersAtStart takes string stackPos returns nothing
	local integer pl_left
	local integer pl_in_ring
	local real rad
	local real pos_x
	local real pos_y
	local player curpl
	local real ang_radians
	local integer i
	local integer temp
	local real this_x
	local real this_y
	local real v_x
	local real v_y
	local real this_radians
	local real this_radians_2
	local integer this_3
	local string stackPos_2
	local boolean PlayerStats_PlayerStats_isInGame_result
	local integer this_4
	local integer count
	local integer unitId
	local player whichPlayer
	local location loc
	local location lookAt
	local location locA
	local location locB
	local integer numbers_0
	local integer numbers_1
	local integer minNumber
	local integer cond_result
	local real temp_2
	local real temp_3
	local real temp_4
	local integer temp_5
	local integer temp_6
	local player temp_7
	local location temp_8
	local real tuple_temp
	local real tuple_temp_2
	local real tuple_temp_3
	local real tuple_temp_4
	local real tuple_temp_5
	local real tuple_temp_6
	local real tuple_temp_7
	local real tuple_temp_8
	local real tuple_temp_9
	local real tuple_temp_10
	local real tuple_temp_11
	local real tuple_temp_12
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set pl_left = 24
	set pl_in_ring = 6
	set rad = 100.0
	set tuple_temp = MainInit_kSpawnPoint_x
	set tuple_temp_2 = MainInit_kSpawnPoint_y
	set pos_x = tuple_temp
	set pos_y = tuple_temp_2
	set tuple_temp_3 = 0.0
	set ang_radians = tuple_temp_3
	loop
		exitwhen  not (pl_left > 0)
		set i = 1
		set temp = pl_in_ring
		loop
			exitwhen i > temp
			set tuple_temp_4 = i * 6.28318 / pl_in_ring
			set ang_radians = tuple_temp_4
			set tuple_temp_5 = MainInit_kSpawnPoint_x
			set tuple_temp_6 = MainInit_kSpawnPoint_y
			set this_x = tuple_temp_5
			set this_y = tuple_temp_6
			set temp_2 = rad
			set tuple_temp_7 = ang_radians
			set this_radians = tuple_temp_7
			set temp_4 = temp_2 * Cos(this_radians)
			set temp_3 = rad
			set tuple_temp_8 = ang_radians
			set this_radians_2 = tuple_temp_8
			set tuple_temp_9 = temp_4
			set tuple_temp_10 = temp_3 * Sin(this_radians_2)
			set v_x = tuple_temp_9
			set v_y = tuple_temp_10
			set tuple_temp_11 = this_x + v_x
			set tuple_temp_12 = this_y + v_y
			set pos_x = tuple_temp_11
			set pos_y = tuple_temp_12
			set curpl = Player_players[24 - pl_left + i - 1]
			set this_3 = PlayerStats_player_stats[GetPlayerId(curpl)]
			set stackPos_2 = "when calling isInGame in MainInit, line 48"
			set wurst_stack[wurst_stack_depth] = stackPos_2
			set wurst_stack_depth = wurst_stack_depth + 1
			if PlayerStats_typeId[this_3] == 0 then
				if this_3 == 0 then
					call error("Nullpointer exception when calling PlayerStats.isInGame", "when calling error in PlayerStats, line 26")
				else
					call error("Called PlayerStats.isInGame on invalid object.", "when calling error in PlayerStats, line 26")
				endif
			endif
			set this_4 = this_3
			set PlayerStats_PlayerStats_isInGame_result = PlayerStats_is_in_game[this_4]
			set wurst_stack_depth = wurst_stack_depth - 1
			if PlayerStats_PlayerStats_isInGame_result then
				set count = 1
				set unitId = 1747988554
				set whichPlayer = curpl
				set loc = Location(pos_x, pos_y)
				set lookAt = Location(MainInit_kSpawnPoint_x, MainInit_kSpawnPoint_y)
				set temp_5 = count
				set temp_6 = unitId
				set temp_7 = whichPlayer
				set temp_8 = loc
				set locA = loc
				set locB = lookAt
				call CreateNUnitsAtLoc(temp_5, temp_6, temp_7, temp_8, bj_RADTODEG * Atan2(GetLocationY(locB) - GetLocationY(locA), GetLocationX(locB) - GetLocationX(locA)))
			endif
			set i = i + 1
		endloop
		set rad = rad + 50.0
		set pl_left = pl_left - pl_in_ring
		set pl_in_ring = pl_in_ring + 2
		set numbers_0 = pl_left
		set numbers_1 = pl_in_ring
		set minNumber = 2147483647
		if numbers_0 < minNumber then
			set cond_result = numbers_0
		else
			set cond_result = minNumber
		endif
		set minNumber = cond_result
		if numbers_1 < minNumber then
			set cond_result = numbers_1
		else
			set cond_result = minNumber
		endif
		set minNumber = cond_result
		set pl_in_ring = minNumber
	endloop
	set wurst_stack_depth = wurst_stack_depth - 1
	set curpl = null
	set whichPlayer = null
	set loc = null
	set lookAt = null
	set locA = null
	set locB = null
	set temp_7 = null
	set temp_8 = null
endfunction

function new_PlayerStats takes player which_player, string stackPos returns integer
	local integer this_3
	local string stackPos_2
	local integer this_4
	local integer this_5
	local player which_player_2
	local string stackPos_3
	local integer i
	local integer temp
	local player this_6
	local player this_7
	local player this_8
	local boolean andLeft
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackPos_2 = "when calling PlayerStats in PlayerStats, line 131"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if PlayerStats_firstFree == 0 then
		if PlayerStats_maxIndex < 32768 then
			set PlayerStats_maxIndex = PlayerStats_maxIndex + 1
			set this_4 = PlayerStats_maxIndex
			set PlayerStats_typeId[this_4] = 684
		else
			call error("Out of memory: Could not create PlayerStats.", "when calling error in PlayerStats, line 6")
			set this_4 = 0
		endif
	else
		set PlayerStats_firstFree = PlayerStats_firstFree - 1
		set this_4 = PlayerStats_nextFree[PlayerStats_firstFree]
		set PlayerStats_typeId[this_4] = 684
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_3 = this_4
	set this_5 = this_3
	set which_player_2 = which_player
	set stackPos_3 = "when calling construct_PlayerStats in PlayerStats, line 131"
	set wurst_stack[wurst_stack_depth] = stackPos_3
	set wurst_stack_depth = wurst_stack_depth + 1
	set PlayerStats_is_in_game[this_5] = false
	set PlayerStats_unhappiness[this_5] = 0
	set PlayerStats_force_id[this_5] = -1
	set PlayerStats_selected_city_id[this_5] = -1
	set PlayerStats_pl[this_5] = which_player_2
	set this_6 = which_player_2
	set this_7 = this_6
	if GetPlayerSlotState(this_7) == PLAYER_SLOT_STATE_PLAYING then
		set this_8 = this_6
		set andLeft = GetPlayerController(this_8) == MAP_CONTROL_USER
	else
		set andLeft = false
	endif
	set PlayerStats_is_in_game[this_5] = andLeft
	set i = 0
	set temp = 24 - 1
	loop
		exitwhen i > temp
		if Player_players[i] == which_player_2 then
			call PlayerStats_alliance_states_set(this_5, i, -1, "when writing array PlayerStats_alliance_states in PlayerStats, line 139")
		else
			call PlayerStats_alliance_states_set(this_5, i, bj_ALLIANCE_UNALLIED, "when writing array PlayerStats_alliance_states in PlayerStats, line 141")
		endif
		set i = i + 1
	endloop
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set which_player_2 = null
	set this_6 = null
	set this_7 = null
	set this_8 = null
	return this_3
endfunction

function init_MainInit takes string stackPos returns boolean
	local integer i
	local integer temp
	local trigger receiver
	local trigger receiver_2
	local string msg
	local string stackPos_2
	local integer techid
	local integer maximum
	local player whichPlayer
	local integer this_3
	local boolean flag
	local string stackPos_3
	local integer this_4
	local boolean flag_2
	local player this_5
	local player this_6
	local player this_7
	local trigger this_8
	local real timeout
	local boolean periodic
	local trigger this_9
	local code actionFunc
	local boolean andLeft
	local real tuple_temp
	local real tuple_temp_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set tuple_temp = 311.2
	set tuple_temp_2 = 5166.7
	set MainInit_kSpawnPoint_x = tuple_temp
	set MainInit_kSpawnPoint_y = tuple_temp_2
	set MainInit_ksCT[0] = "You're playing |cffffff65Crusade over Europe|r.\nA grand strategy medieval game inspired by many games and genres.\nCreate alliances and dissolve them just as easily, declare war on your neighbours and |cfff5da16Conquer Europe|r."
	set MainInit_ksCT[1] = "Use your |cffff8040Settler|r to choose the location of your Kingdom, use the ability |cffffff80Create Capitol|r on any Town Hall to build your Capitol.\nChoose your postion carefully and be mindful of the other players positions."
	set MainInit_ksCT[2] = "|cfff5da16Mechanics|r\n\n|cff80ff00Supply & Nutrition:|r All units and building will continuously lose Hit Points if not supplied by |cff00f7ffCities or Supply Horses|r.\n|cffff0000Public order|r represents satisfaction level of each city and can be checked in top-right menu.\nLow public order will cause revolts to appear in your Kingdom."
	set MainInit_ksCT[3] = "|cfff5da16Combat & Diplomacy|r\n\nBuild your army but keep in mind that every army will have its weaknesses, you must have a flexible strategy that will allow you to change your army composition quickly.\nUse |cffffff80Diplomacy|r (F1) menu to create Alliances and Declare War."
	set MainInit_ksCT[4] = "|cfff5da16Economy|r\n\n|cffffff80Florins|r (Gold) are given each Turn (2 minutes), you can increase the amount generated by capturing |cffffff80Cities|r or precious |cffffff80Ores|r and upgrading them into |cffffff80Mines|r.\nLumber is harvested from Trees.\nYou can check public order of currently selected city and your income in top-right menu"
	if false then
		call dbg("Debug info is enabled. Only for Red.")
	endif
	if false then
		set msg = "Debug mode is on."
		call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 45., msg)
	endif
	set stackPos_2 = "when calling SetupCities in MainInit, line 87"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	call NewCity(gg_rct_CITY_BYZ_Adrianopolis, "Adrianopolis", 3, 0, "when calling NewCity in SettingCities, line 14")
	call NewCity(gg_rct_CITY_BYZ_Arta, "Arta", 3, 0, "when calling NewCity in SettingCities, line 15")
	call NewCity(gg_rct_CITY_BYZ_Athens, "Athens", 3, 1, "when calling NewCity in SettingCities, line 16")
	call NewCity(gg_rct_CITY_BYZ_Balkan, "Ragusa", 3, 1, "when calling NewCity in SettingCities, line 17")
	call NewCity(gg_rct_CITY_BYZ_Canakkale, "Canakkale", 3, 0, "when calling NewCity in SettingCities, line 18")
	call NewCity(gg_rct_CITY_BYZ_Candia, "Candia", 3, 0, "when calling NewCity in SettingCities, line 19")
	call NewCity(gg_rct_CITY_BYZ_Constantinople, "Constantinople", 3, 2, "when calling NewCity in SettingCities, line 20")
	call NewCity(gg_rct_CITY_BYZ_Corinth, "Corinth", 3, 0, "when calling NewCity in SettingCities, line 21")
	call NewCity(gg_rct_CITY_BYZ_Durrazo, "Durazzo", 3, 0, "when calling NewCity in SettingCities, line 22")
	call NewCity(gg_rct_CITY_BYZ_Fictional, "Nikomedeia", 3, 0, "when calling NewCity in SettingCities, line 23")
	call NewCity(gg_rct_CITY_BYZ_Kutaisi, "Kutaisi", 3, 1, "when calling NewCity in SettingCities, line 24")
	call NewCity(gg_rct_CITY_BYZ_Nicae, "Nicae", 3, 1, "when calling NewCity in SettingCities, line 25")
	call NewCity(gg_rct_CITY_BYZ_Nicosia, "Nicosia", 3, 1, "when calling NewCity in SettingCities, line 26")
	call NewCity(gg_rct_CITY_BYZ_Rhodes, "Rhodes", 3, 0, "when calling NewCity in SettingCities, line 27")
	call NewCity(gg_rct_CITY_BYZ_Scopia, "Scopia", 3, 0, "when calling NewCity in SettingCities, line 28")
	call NewCity(gg_rct_CITY_BYZ_Smyrna, "Smyrna", 3, 0, "when calling NewCity in SettingCities, line 29")
	call NewCity(gg_rct_CITY_BYZ_Tbilisi, "Tbilisi", 3, 1, "when calling NewCity in SettingCities, line 30")
	call NewCity(gg_rct_CITY_BYZ_Trebizond, "Trebizond", 3, 0, "when calling NewCity in SettingCities, line 31")
	call NewCity(gg_rct_CITY_Byz_Thessalonika, "Thessalonika", 3, 1, "when calling NewCity in SettingCities, line 32")
	call NewCity(gg_rct_CITY_EE_Astrakhan, "Astrakhan'", 1, 0, "when calling NewCity in SettingCities, line 36")
	call NewCity(gg_rct_CITY_EE_Azaq, "Azaq", 1, 0, "when calling NewCity in SettingCities, line 37")
	call NewCity(gg_rct_CITY_EE_Baia, "Baia", 1, 0, "when calling NewCity in SettingCities, line 38")
	call NewCity(gg_rct_CITY_EE_Bryansk, "Bryansk", 1, 0, "when calling NewCity in SettingCities, line 39")
	call NewCity(gg_rct_CITY_EE_Caffa, "Caffa", 1, 0, "when calling NewCity in SettingCities, line 40")
	call NewCity(gg_rct_CITY_EE_Constanta, "Constanta", 1, 1, "when calling NewCity in SettingCities, line 41")
	call NewCity(gg_rct_CITY_EE_Dnipro, "Dnipro", 1, 0, "when calling NewCity in SettingCities, line 42")
	call NewCity(gg_rct_CITY_EE_Halych, "Halych", 1, 1, "when calling NewCity in SettingCities, line 43")
	call NewCity(gg_rct_CITY_EE_Kiev, "Kiev", 1, 2, "when calling NewCity in SettingCities, line 44")
	call NewCity(gg_rct_CITY_EE_Konigsberg, "Sambia", 1, 0, "when calling NewCity in SettingCities, line 45")
	call NewCity(gg_rct_CITY_EE_Hrodna, "Hrodna", 1, 0, "when calling NewCity in SettingCities, line 46")
	call NewCity(gg_rct_CITY_EE_Minsk, "Minsk", 1, 1, "when calling NewCity in SettingCities, line 47")
	call NewCity(gg_rct_CITY_EE_Moscow, "Moscow", 1, 1, "when calling NewCity in SettingCities, line 48")
	call NewCity(gg_rct_CITY_EE_Novgorod, "Novgorod", 1, 1, "when calling NewCity in SettingCities, line 49")
	call NewCity(gg_rct_CITY_EE_Oleshe, "Olesh'e", 1, 0, "when calling NewCity in SettingCities, line 50")
	call NewCity(gg_rct_CITY_EE_Polotsk, "Polotsk", 1, 0, "when calling NewCity in SettingCities, line 51")
	call NewCity(gg_rct_CITY_EE_Pskov, "Pskov", 1, 1, "when calling NewCity in SettingCities, line 52")
	call NewCity(gg_rct_CITY_EE_Reval, "Reval", 1, 0, "when calling NewCity in SettingCities, line 53")
	call NewCity(gg_rct_CITY_EE_Riga, "Riga", 1, 1, "when calling NewCity in SettingCities, line 54")
	call NewCity(gg_rct_CITY_EE_Russia, "Syrt", 1, 0, "when calling NewCity in SettingCities, line 55")
	call NewCity(gg_rct_CITY_EE_Ryazan, "Ryazan'", 1, 1, "when calling NewCity in SettingCities, line 56")
	call NewCity(gg_rct_CITY_EE_Sarkel, "Sarkel", 1, 0, "when calling NewCity in SettingCities, line 57")
	call NewCity(gg_rct_CITY_EE_Smolensk, "Smolensk", 1, 0, "when calling NewCity in SettingCities, line 58")
	call NewCity(gg_rct_CITY_EE_Sofia, "Sofia", 1, 1, "when calling NewCity in SettingCities, line 59")
	call NewCity(gg_rct_CITY_EE_Targoviste, "Targovitse", 1, 0, "when calling NewCity in SettingCities, line 60")
	call NewCity(gg_rct_CITY_EE_Timutarakan, "Tmutarakan'", 1, 0, "when calling NewCity in SettingCities, line 61")
	call NewCity(gg_rct_CITY_EE_Turku, "Turku", 1, 0, "when calling NewCity in SettingCities, line 62")
	call NewCity(gg_rct_CITY_EE_Vilnius, "Vilnius", 1, 1, "when calling NewCity in SettingCities, line 63")
	call NewCity(gg_rct_CITY_EE_Zhytomyr, "Zhytomir", 1, 0, "when calling NewCity in SettingCities, line 64")
	call NewCity(gg_rct_CITY_ME_Acre, "Acre", 2, 1, "when calling NewCity in SettingCities, line 68")
	call NewCity(gg_rct_CITY_ME_Adana, "Adana", 2, 0, "when calling NewCity in SettingCities, line 69")
	call NewCity(gg_rct_CITY_ME_Al_Aqaba, "Al Aqaba", 2, 0, "when calling NewCity in SettingCities, line 70")
	call NewCity(gg_rct_CITY_ME_Alexandria, "Alexandria", 2, 1, "when calling NewCity in SettingCities, line 71")
	call NewCity(gg_rct_CITY_ME_Algiers, "Algiers", 2, 0, "when calling NewCity in SettingCities, line 72")
	call NewCity(gg_rct_CITY_ME_Ankara, "Ankara", 2, 0, "when calling NewCity in SettingCities, line 73")
	call NewCity(gg_rct_CITY_ME_Antioch, "Antioch", 2, 1, "when calling NewCity in SettingCities, line 74")
	call NewCity(gg_rct_CITY_ME_Badajoz, "Badajoz", 2, 0, "when calling NewCity in SettingCities, line 75")
	call NewCity(gg_rct_CITY_ME_Baghdad, "Baghdad", 2, 2, "when calling NewCity in SettingCities, line 76")
	call NewCity(gg_rct_CITY_ME_Benghazi, "Benghazi", 2, 0, "when calling NewCity in SettingCities, line 77")
	call NewCity(gg_rct_CITY_ME_Cairo, "Cairo", 2, 2, "when calling NewCity in SettingCities, line 78")
	call NewCity(gg_rct_CITY_ME_Cordoba, "Cordoba", 2, 2, "when calling NewCity in SettingCities, line 79")
	call NewCity(gg_rct_CITY_ME_Damascus, "Damascus", 2, 1, "when calling NewCity in SettingCities, line 80")
	call NewCity(gg_rct_CITY_ME_Damietta, "Damietta", 2, 0, "when calling NewCity in SettingCities, line 81")
	call NewCity(gg_rct_CITY_ME_Diyarbakir, "Diyarbakir", 2, 0, "when calling NewCity in SettingCities, line 82")
	call NewCity(gg_rct_CITY_ME_Edessa, "Edessa", 2, 1, "when calling NewCity in SettingCities, line 83")
	call NewCity(gg_rct_CITY_ME_Erez, "Erez", 2, 0, "when calling NewCity in SettingCities, line 84")
	call NewCity(gg_rct_CITY_ME_Fes, "Fes", 2, 1, "when calling NewCity in SettingCities, line 85")
	call NewCity(gg_rct_CITY_ME_Gaza, "Gaza", 2, 1, "when calling NewCity in SettingCities, line 86")
	call NewCity(gg_rct_CITY_ME_Granada, "Granada", 2, 1, "when calling NewCity in SettingCities, line 87")
	call NewCity(gg_rct_CITY_ME_Isparta, "Isparta", 2, 0, "when calling NewCity in SettingCities, line 88")
	call NewCity(gg_rct_CITY_ME_JERUSALEM, "Jerusalem", 2, 2, "when calling NewCity in SettingCities, line 89")
	call NewCity(gg_rct_CITY_ME_Kayseri, "Kayseri", 2, 1, "when calling NewCity in SettingCities, line 90")
	call NewCity(gg_rct_CITY_ME_Kerak, "Kerak", 2, 0, "when calling NewCity in SettingCities, line 91")
	call NewCity(gg_rct_CITY_ME_Konya, "Konya", 2, 0, "when calling NewCity in SettingCities, line 92")
	call NewCity(gg_rct_CITY_ME_Lisbon, "Lisbon", 2, 0, "when calling NewCity in SettingCities, line 93")
	call NewCity(gg_rct_CITY_ME_Luxor, "Luxor", 2, 0, "when calling NewCity in SettingCities, line 94")
	call NewCity(gg_rct_CITY_ME_Madrid, "Madrid", 2, 1, "when calling NewCity in SettingCities, line 95")
	call NewCity(gg_rct_CITY_ME_Mahdya, "Mahdya", 2, 0, "when calling NewCity in SettingCities, line 96")
	call NewCity(gg_rct_CITY_ME_Marakesh, "Marrakesh", 2, 0, "when calling NewCity in SettingCities, line 97")
	call NewCity(gg_rct_CITY_ME_Medina, "Medina", 2, 0, "when calling NewCity in SettingCities, line 98")
	call NewCity(gg_rct_CITY_ME_Mosul, "Mosul", 2, 1, "when calling NewCity in SettingCities, line 99")
	call NewCity(gg_rct_CITY_ME_Murcia, "Murcia", 2, 0, "when calling NewCity in SettingCities, line 100")
	call NewCity(gg_rct_CITY_ME_Oran, "Oran", 2, 0, "when calling NewCity in SettingCities, line 101")
	call NewCity(gg_rct_CITY_ME_Palma, "Palma", 2, 0, "when calling NewCity in SettingCities, line 102")
	call NewCity(gg_rct_CITY_ME_Quarisiya, "Quarisiya", 2, 0, "when calling NewCity in SettingCities, line 103")
	call NewCity(gg_rct_CITY_ME_Silves, "Silves", 2, 0, "when calling NewCity in SettingCities, line 104")
	call NewCity(gg_rct_CITY_ME_Sinop, "Sinop", 2, 0, "when calling NewCity in SettingCities, line 105")
	call NewCity(gg_rct_CITY_ME_Tamiya, "Tamiya", 2, 0, "when calling NewCity in SettingCities, line 106")
	call NewCity(gg_rct_CITY_ME_Tartus, "Tartus", 2, 0, "when calling NewCity in SettingCities, line 107")
	call NewCity(gg_rct_CITY_ME_Tripoli, "Tripoli", 2, 1, "when calling NewCity in SettingCities, line 108")
	call NewCity(gg_rct_CITY_ME_Tunis, "Tunis", 2, 1, "when calling NewCity in SettingCities, line 109")
	call NewCity(gg_rct_CITY_ME_Valencia, "Valencia", 2, 1, "when calling NewCity in SettingCities, line 110")
	call NewCity(gg_rct_CITY_ME_Yerevan, "Yerevan", 2, 1, "when calling NewCity in SettingCities, line 111")
	call NewCity(gg_rct_CITY_WE_Aarhus, "Aarhus", 0, 0, "when calling NewCity in SettingCities, line 115")
	call NewCity(gg_rct_CITY_WE_Aberdeen, "Aberdeen", 0, 0, "when calling NewCity in SettingCities, line 116")
	call NewCity(gg_rct_CITY_WE_Ajaccio, "Ajaccio", 0, 0, "when calling NewCity in SettingCities, line 117")
	call NewCity(gg_rct_CITY_WE_Ancona, "Ancona", 0, 0, "when calling NewCity in SettingCities, line 118")
	call NewCity(gg_rct_CITY_WE_Angers, "Angers", 0, 0, "when calling NewCity in SettingCities, line 119")
	call NewCity(gg_rct_CITY_WE_Antwerp, "Antwerp", 0, 1, "when calling NewCity in SettingCities, line 120")
	call NewCity(gg_rct_CITY_WE_Barcelona, "Barcelona", 0, 0, "when calling NewCity in SettingCities, line 121")
	call NewCity(gg_rct_CITY_WE_Bari, "Bari", 0, 0, "when calling NewCity in SettingCities, line 122")
	call NewCity(gg_rct_CITY_WE_Belgrade, "Belgrade", 0, 0, "when calling NewCity in SettingCities, line 123")
	call NewCity(gg_rct_CITY_WE_Bergen, "Bergen", 0, 0, "when calling NewCity in SettingCities, line 124")
	call NewCity(gg_rct_CITY_WE_Bern, "Bern", 0, 0, "when calling NewCity in SettingCities, line 125")
	call NewCity(gg_rct_CITY_WE_Bologna, "Bologna", 0, 0, "when calling NewCity in SettingCities, line 126")
	call NewCity(gg_rct_CITY_WE_Bordeaux, "Bordeaux", 0, 1, "when calling NewCity in SettingCities, line 127")
	call NewCity(gg_rct_CITY_WE_Brasov, "Brasov", 0, 0, "when calling NewCity in SettingCities, line 128")
	call NewCity(gg_rct_CITY_WE_Bruges, "Bruges", 0, 1, "when calling NewCity in SettingCities, line 129")
	call NewCity(gg_rct_CITY_WE_Burgh, "Burgh", 0, 0, "when calling NewCity in SettingCities, line 130")
	call NewCity(gg_rct_CITY_WE_Burgos, "Burgos", 0, 0, "when calling NewCity in SettingCities, line 131")
	call NewCity(gg_rct_CITY_WE_Caen, "Caen", 0, 0, "when calling NewCity in SettingCities, line 132")
	call NewCity(gg_rct_CITY_WE_Caernarfon, "Caenarfon", 0, 1, "when calling NewCity in SettingCities, line 133")
	call NewCity(gg_rct_CITY_WE_Cagliari, "Cagliari", 0, 0, "when calling NewCity in SettingCities, line 134")
	call NewCity(gg_rct_CITY_WE_Cardiff, "Cardiff", 0, 0, "when calling NewCity in SettingCities, line 135")
	call NewCity(gg_rct_CITY_WE_Clermont, "Clermont", 0, 0, "when calling NewCity in SettingCities, line 136")
	call NewCity(gg_rct_CITY_WE_Cologne, "Cologne", 0, 1, "when calling NewCity in SettingCities, line 137")
	call NewCity(gg_rct_CITY_WE_Dijon, "Dijon", 0, 0, "when calling NewCity in SettingCities, line 138")
	call NewCity(gg_rct_CITY_WE_Dublin, "Dublin", 0, 0, "when calling NewCity in SettingCities, line 139")
	call NewCity(gg_rct_CITY_WE_Edinburgh, "Edinburgh", 0, 1, "when calling NewCity in SettingCities, line 140")
	call NewCity(gg_rct_CITY_WE_Eikundarsund, "Eikundarsund", 0, 0, "when calling NewCity in SettingCities, line 141")
	call NewCity(gg_rct_CITY_WE_Esztergom, "Esztergom", 0, 1, "when calling NewCity in SettingCities, line 142")
	call NewCity(gg_rct_CITY_WE_Exeter, "Exeter", 0, 1, "when calling NewCity in SettingCities, line 143")
	call NewCity(gg_rct_CITY_WE_Fictional_2, "Gdansk", 0, 1, "when calling NewCity in SettingCities, line 144")
	call NewCity(gg_rct_CITY_WE_Flensburg, "Flensburg", 0, 0, "when calling NewCity in SettingCities, line 145")
	call NewCity(gg_rct_CITY_WE_Frankfurt, "Frankfurt", 0, 1, "when calling NewCity in SettingCities, line 146")
	call NewCity(gg_rct_CITY_WE_Galway, "Galway", 0, 0, "when calling NewCity in SettingCities, line 147")
	call NewCity(gg_rct_CITY_WE_Genoa, "Genoa", 0, 1, "when calling NewCity in SettingCities, line 148")
	call NewCity(gg_rct_CITY_WE_Groningen, "Groningen", 0, 0, "when calling NewCity in SettingCities, line 149")
	call NewCity(gg_rct_CITY_WE_Innsbruck, "Innsbruck", 0, 0, "when calling NewCity in SettingCities, line 150")
	call NewCity(gg_rct_CITY_WE_Inverness, "Inverness", 0, 0, "when calling NewCity in SettingCities, line 151")
	call NewCity(gg_rct_CITY_WE_Ireland, "Desmond", 0, 0, "when calling NewCity in SettingCities, line 152")
	call NewCity(gg_rct_CITY_WE_Italy, "Reggio", 0, 0, "when calling NewCity in SettingCities, line 153")
	call NewCity(gg_rct_CITY_WE_Kalmar, "Kalmar", 0, 0, "when calling NewCity in SettingCities, line 154")
	call NewCity(gg_rct_CITY_WE_Kassa, "Kassa", 0, 0, "when calling NewCity in SettingCities, line 155")
	call NewCity(gg_rct_CITY_WE_Krakow, "Krakow", 0, 1, "when calling NewCity in SettingCities, line 156")
	call NewCity(gg_rct_CITY_WE_Leon, "Leon", 0, 0, "when calling NewCity in SettingCities, line 157")
	call NewCity(gg_rct_CITY_WE_London, "London", 0, 1, "when calling NewCity in SettingCities, line 158")
	call NewCity(gg_rct_CITY_WE_Lund, "Lund", 0, 1, "when calling NewCity in SettingCities, line 159")
	call NewCity(gg_rct_CITY_WE_Lyon, "Lyon", 0, 1, "when calling NewCity in SettingCities, line 160")
	call NewCity(gg_rct_CITY_WE_Madgeburg, "Madgeburg", 0, 1, "when calling NewCity in SettingCities, line 161")
	call NewCity(gg_rct_CITY_WE_Marseille, "Marsellie", 0, 1, "when calling NewCity in SettingCities, line 162")
	call NewCity(gg_rct_CITY_WE_Metz, "Metz", 0, 1, "when calling NewCity in SettingCities, line 163")
	call NewCity(gg_rct_CITY_WE_Milan, "Milan", 0, 1, "when calling NewCity in SettingCities, line 164")
	call NewCity(gg_rct_CITY_WE_Naples, "Naples", 0, 0, "when calling NewCity in SettingCities, line 165")
	call NewCity(gg_rct_CITY_WE_Nuremburg, "Nuremburg", 0, 0, "when calling NewCity in SettingCities, line 166")
	call NewCity(gg_rct_CITY_WE_Nykoping, "Nykoping", 0, 0, "when calling NewCity in SettingCities, line 167")
	call NewCity(gg_rct_CITY_WE_Oporto, "Oporto", 0, 0, "when calling NewCity in SettingCities, line 168")
	call NewCity(gg_rct_CITY_WE_Oslo, "Oslo", 0, 1, "when calling NewCity in SettingCities, line 169")
	call NewCity(gg_rct_CITY_WE_Budapest, "Buda", 0, 1, "when calling NewCity in SettingCities, line 170")
	call NewCity(gg_rct_CITY_WE_Palermo, "Palermo", 0, 0, "when calling NewCity in SettingCities, line 171")
	call NewCity(gg_rct_CITY_WE_Pamplona, "Pamplona", 0, 0, "when calling NewCity in SettingCities, line 172")
	call NewCity(gg_rct_CITY_WE_Paris, "Paris", 0, 1, "when calling NewCity in SettingCities, line 173")
	call NewCity(gg_rct_CITY_WE_Pisa, "Pisa", 0, 0, "when calling NewCity in SettingCities, line 174")
	call NewCity(gg_rct_CITY_WE_Plock, "Plock", 0, 0, "when calling NewCity in SettingCities, line 175")
	call NewCity(gg_rct_CITY_WE_Poznan, "Poznan", 0, 0, "when calling NewCity in SettingCities, line 176")
	call NewCity(gg_rct_CITY_WE_Prague, "Prague", 0, 1, "when calling NewCity in SettingCities, line 177")
	call NewCity(gg_rct_CITY_WE_Ragusa, "Split", 0, 0, "when calling NewCity in SettingCities, line 178")
	call NewCity(gg_rct_CITY_WE_Rennes, "Rennes", 0, 0, "when calling NewCity in SettingCities, line 179")
	call NewCity(gg_rct_CITY_WE_Rheims, "Rheims", 0, 0, "when calling NewCity in SettingCities, line 180")
	call NewCity(gg_rct_CITY_WE_Rome, "Rome", 0, 1, "when calling NewCity in SettingCities, line 181")
	call NewCity(gg_rct_CITY_WE_Roskilde, "Roskilde", 0, 0, "when calling NewCity in SettingCities, line 182")
	call NewCity(gg_rct_CITY_WE_Salamanca, "Salamanca", 0, 0, "when calling NewCity in SettingCities, line 183")
	call NewCity(gg_rct_CITY_WE_Salzburg, "Salzburg", 0, 0, "when calling NewCity in SettingCities, line 184")
	call NewCity(gg_rct_CITY_WE_Skara, "Skara", 0, 0, "when calling NewCity in SettingCities, line 185")
	call NewCity(gg_rct_CITY_WE_Stettin, "Stettin", 0, 0, "when calling NewCity in SettingCities, line 186")
	call NewCity(gg_rct_CITY_WE_Stockholm, "Stockholm", 0, 1, "when calling NewCity in SettingCities, line 187")
	call NewCity(gg_rct_CITY_WE_Syracuse, "Syracuse", 0, 0, "when calling NewCity in SettingCities, line 188")
	call NewCity(gg_rct_CITY_WE_Toulouse, "Toulouse", 0, 1, "when calling NewCity in SettingCities, line 189")
	call NewCity(gg_rct_CITY_WE_Varad, "Varad", 0, 0, "when calling NewCity in SettingCities, line 190")
	call NewCity(gg_rct_CITY_WE_Venice, "Venice", 0, 1, "when calling NewCity in SettingCities, line 191")
	call NewCity(gg_rct_CITY_WE_Vienna, "Vienna", 0, 0, "when calling NewCity in SettingCities, line 192")
	call NewCity(gg_rct_CITY_WE_Visby, "Visby", 0, 0, "when calling NewCity in SettingCities, line 193")
	call NewCity(gg_rct_CITY_WE_Warwick, "Warwick", 0, 0, "when calling NewCity in SettingCities, line 194")
	call NewCity(gg_rct_CITY_WE_Winchester, "Winchester", 0, 0, "when calling NewCity in SettingCities, line 195")
	call NewCity(gg_rct_CITY_WE_Wroclaw, "Wroclaw", 0, 0, "when calling NewCity in SettingCities, line 196")
	call NewCity(gg_rct_CITY_WE_York, "York", 0, 0, "when calling NewCity in SettingCities, line 197")
	call NewCity(gg_rct_CITY_WE_Zagreb, "Zagreb", 0, 0, "when calling NewCity in SettingCities, line 198")
	call NewCity(gg_rct_CITY_WE_Zaragoza, "Zaragoza", 0, 0, "when calling NewCity in SettingCities, line 199")
	call NewCity(gg_rct_Hamburg_CITY, "Hamburg", 0, 1, "when calling NewCity in SettingCities, line 200")
	set wurst_stack_depth = wurst_stack_depth - 1
	call SetDiploEconomyRangeMax()
	call SetForceAllianceStateBJ(bj_FORCE_ALL_PLAYERS, bj_FORCE_PLAYER[PLAYER_NEUTRAL_PASSIVE], bj_ALLIANCE_NEUTRAL)
	call SetForceAllianceStateBJ(bj_FORCE_ALL_PLAYERS, bj_FORCE_ALL_PLAYERS, bj_ALLIANCE_UNALLIED)
	call SetForceAllianceStateBJ(Forces_fWE, Forces_fWE, bj_ALLIANCE_NEUTRAL)
	call SetForceAllianceStateBJ(Forces_fEE, Forces_fEE, bj_ALLIANCE_NEUTRAL)
	call SetForceAllianceStateBJ(Forces_fME, Forces_fME, bj_ALLIANCE_NEUTRAL)
	call SetForceAllianceStateBJ(Forces_fBZ, Forces_fBZ, bj_ALLIANCE_NEUTRAL)
	set i = 0
	set temp = 24 - 1
	loop
		exitwhen i > temp
		call SetPlayerState(Player_players[i], PLAYER_STATE_RESOURCE_GOLD, 260)
		call SetPlayerState(Player_players[i], PLAYER_STATE_RESOURCE_LUMBER, 250)
		if false then
			call SetPlayerState(Player_players[i], PLAYER_STATE_RESOURCE_GOLD, 99999999)
			call SetPlayerState(Player_players[i], PLAYER_STATE_RESOURCE_LUMBER, 99999999)
		endif
		set techid = 1747988789
		set maximum = 1
		set whichPlayer = Player_players[i]
		call SetPlayerTechMaxAllowed(whichPlayer, techid, maximum)
		set PlayerStats_player_stats[i] = new_PlayerStats(Player_players[i], "when calling new_PlayerStats in MainInit, line 113")
		set this_3 = PlayerStats_player_stats[i]
		set this_5 = Player_players[i]
		set this_6 = this_5
		if GetPlayerSlotState(this_6) == PLAYER_SLOT_STATE_PLAYING then
			set this_7 = this_5
			set andLeft = GetPlayerController(this_7) == MAP_CONTROL_USER
		else
			set andLeft = false
		endif
		set flag = andLeft
		set stackPos_3 = "when calling setInGame in MainInit, line 114"
		set wurst_stack[wurst_stack_depth] = stackPos_3
		set wurst_stack_depth = wurst_stack_depth + 1
		if PlayerStats_typeId[this_3] == 0 then
			if this_3 == 0 then
				call error("Nullpointer exception when calling PlayerStats.setInGame", "when calling error in PlayerStats, line 29")
			else
				call error("Called PlayerStats.setInGame on invalid object.", "when calling error in PlayerStats, line 29")
			endif
		endif
		set this_4 = this_3
		set flag_2 = flag
		set PlayerStats_is_in_game[this_4] = flag_2
		set wurst_stack_depth = wurst_stack_depth - 1
		set i = i + 1
	endloop
	call SetPlayersAtStart("when calling SetPlayersAtStart in MainInit, line 116")
	set receiver = CreateTrigger()
	set this_8 = receiver
	set timeout = 0.01
	set periodic = false
	call TriggerRegisterTimerEvent(this_8, timeout, periodic)
	set receiver_2 = receiver
	set this_9 = receiver_2
	set actionFunc = ref_function_CinematicTutorial
	call TriggerAddAction(this_9, actionFunc)
	set wurst_stack_depth = wurst_stack_depth - 1
	set receiver = null
	set receiver_2 = null
	set whichPlayer = null
	set this_5 = null
	set this_6 = null
	set this_7 = null
	set this_8 = null
	set this_9 = null
	return true
endfunction

function bridge_init_MainInit takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_MainInit("MainInit, line 1")
endfunction

function init_MultiboardCityUpdate takes string stackPos returns boolean
	local integer clVar
	local integer clVar_2
	local string stackPos_2
	local integer this_3
	local real timeToWait
	local integer cb
	local string stackPos_3
	local integer this_4
	local real time
	local string stackPos_4
	local string stackPos_5
	local integer this_5
	local real time_2
	local integer cb_2
	local string stackPos_6
	local integer this_6
	local real time_3
	local string stackPos_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackPos_2 = "when calling alloc_Closure in MultiboardCityUpdate, line 5"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if CallbackSingle_firstFree == 0 then
		if CallbackSingle_maxIndex < 32768 then
			set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
			set this_3 = CallbackSingle_maxIndex
			set CallbackSingle_typeId[this_3] = 641
		else
			call error("Out of memory: Could not create Closure.", "when calling error in MultiboardCityUpdate, line 5")
			set this_3 = 0
		endif
	else
		set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
		set this_3 = CallbackSingle_nextFree[CallbackSingle_firstFree]
		set CallbackSingle_typeId[this_3] = 641
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set clVar = this_3
	set timeToWait = 0.01
	set cb = clVar
	set stackPos_3 = "when calling doAfter in MultiboardCityUpdate, line 5"
	set wurst_stack[wurst_stack_depth] = stackPos_3
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_4 = cb
	set time = timeToWait
	set stackPos_4 = "when calling start in ClosureTimers, line 15"
	set wurst_stack[wurst_stack_depth] = stackPos_4
	set wurst_stack_depth = wurst_stack_depth + 1
	if CallbackSingle_typeId[this_4] == 0 then
		if this_4 == 0 then
			call error("Nullpointer exception when calling CallbackSingle.start", "when calling error in ClosureTimers, line 67")
		else
			call error("Called CallbackSingle.start on invalid object.", "when calling error in ClosureTimers, line 67")
		endif
	endif
	call CallbackSingle_start(this_4, time, "when calling start in ClosureTimers, line 67")
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set stackPos_5 = "when calling alloc_Closure in MultiboardCityUpdate, line 19"
	set wurst_stack[wurst_stack_depth] = stackPos_5
	set wurst_stack_depth = wurst_stack_depth + 1
	if CallbackPeriodic_firstFree == 0 then
		if CallbackPeriodic_maxIndex < 32768 then
			set CallbackPeriodic_maxIndex = CallbackPeriodic_maxIndex + 1
			set this_5 = CallbackPeriodic_maxIndex
			set CallbackPeriodic_typeId[this_5] = 635
		else
			call error("Out of memory: Could not create Closure.", "when calling error in MultiboardCityUpdate, line 19")
			set this_5 = 0
		endif
	else
		set CallbackPeriodic_firstFree = CallbackPeriodic_firstFree - 1
		set this_5 = CallbackPeriodic_nextFree[CallbackPeriodic_firstFree]
		set CallbackPeriodic_typeId[this_5] = 635
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set clVar_2 = this_5
	set time_2 = 1.0
	set cb_2 = clVar_2
	set stackPos_6 = "when calling doPeriodically in MultiboardCityUpdate, line 19"
	set wurst_stack[wurst_stack_depth] = stackPos_6
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_6 = cb_2
	set time_3 = time_2
	set stackPos_7 = "when calling start in ClosureTimers, line 36"
	set wurst_stack[wurst_stack_depth] = stackPos_7
	set wurst_stack_depth = wurst_stack_depth + 1
	if CallbackPeriodic_typeId[this_6] == 0 then
		if this_6 == 0 then
			call error("Nullpointer exception when calling CallbackPeriodic.start", "when calling error in ClosureTimers, line 88")
		else
			call error("Called CallbackPeriodic.start on invalid object.", "when calling error in ClosureTimers, line 88")
		endif
	endif
	call CallbackPeriodic_start(this_6, time_3, "when calling start in ClosureTimers, line 88")
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	return true
endfunction

function bridge_init_MultiboardCityUpdate takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_MultiboardCityUpdate("MultiboardCityUpdate, line 1")
endfunction

function stringToIndex takes string s, string stackPos returns integer
	local integer hash
	local string this_3
	local integer this_4
	local integer parentKey
	local string stackPos_2
	local boolean Table_Table_hasString_result
	local integer this_5
	local integer parentKey_2
	local hashtable this_6
	local integer parentKey_3
	local integer childKey
	local integer this_7
	local integer parentKey_4
	local string value
	local string stackPos_3
	local integer this_8
	local integer parentKey_5
	local string value_2
	local hashtable this_9
	local integer parentKey_6
	local integer childKey_2
	local string value_3
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_3 = s
	set hash = StringHash(this_3)
	set this_4 = TypeCasting_typecastdata
	set parentKey = hash
	set stackPos_2 = "when calling hasString in TypeCasting, line 24"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if Table_typeId[this_4] == 0 then
		if this_4 == 0 then
			call error("Nullpointer exception when calling Table.hasString", "when calling error in Table, line 18")
		else
			call error("Called Table.hasString on invalid object.", "when calling error in Table, line 18")
		endif
	endif
	set this_5 = this_4
	set parentKey_2 = parentKey
	set this_6 = Table_ht
	set parentKey_3 = this_5
	set childKey = parentKey_2
	set Table_Table_hasString_result = HaveSavedString(this_6, parentKey_3, childKey)
	set wurst_stack_depth = wurst_stack_depth - 1
	if  not Table_Table_hasString_result then
		set this_7 = TypeCasting_typecastdata
		set parentKey_4 = hash
		set value = s
		set stackPos_3 = "when calling saveString in TypeCasting, line 25"
		set wurst_stack[wurst_stack_depth] = stackPos_3
		set wurst_stack_depth = wurst_stack_depth + 1
		if Table_typeId[this_7] == 0 then
			if this_7 == 0 then
				call error("Nullpointer exception when calling Table.saveString", "when calling error in Table, line 60")
			else
				call error("Called Table.saveString on invalid object.", "when calling error in Table, line 60")
			endif
		endif
		set this_8 = this_7
		set parentKey_5 = parentKey_4
		set value_2 = value
		set this_9 = Table_ht
		set parentKey_6 = this_8
		set childKey_2 = parentKey_5
		set value_3 = value_2
		call SaveStr(this_9, parentKey_6, childKey_2, value_3)
		set wurst_stack_depth = wurst_stack_depth - 1
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_6 = null
	set this_9 = null
	return hash
endfunction

function init_Multiboards takes string stackPos returns boolean
	local integer ts_0
	local integer ts_1
	local integer ts_2
	local integer ts_3
	local integer ts_4
	local string stackPos_2
	local integer ll
	local real r
	local real this_3
	local real r_2
	local real this_4
	local real r_3
	local real this_5
	local real r_4
	local real this_6
	local real r_5
	local real this_7
	local integer ts_0_2
	local integer ts_1_2
	local integer ts_2_2
	local integer ts_3_2
	local integer ts_4_2
	local string stackPos_3
	local integer ll_2
	local real r_6
	local real this_8
	local real r_7
	local real this_9
	local real r_8
	local real this_10
	local real r_9
	local real this_11
	local real r_10
	local real this_12
	local integer ts_0_3
	local integer ts_1_3
	local integer ts_2_3
	local integer ts_3_3
	local integer ts_4_3
	local string stackPos_4
	local integer ll_3
	local real r_11
	local real this_13
	local real r_12
	local real this_14
	local real r_13
	local real this_15
	local real r_14
	local real this_16
	local real r_15
	local real this_17
	local integer ts_0_4
	local integer ts_1_4
	local integer ts_2_4
	local integer ts_3_4
	local integer ts_4_4
	local string stackPos_5
	local integer ll_4
	local real r_16
	local real this_18
	local real r_17
	local real this_19
	local real r_18
	local real this_20
	local real r_19
	local real this_21
	local real r_20
	local real this_22
	local integer ts_0_5
	local integer ts_1_5
	local integer ts_2_5
	local integer ts_3_5
	local integer ts_4_5
	local string stackPos_6
	local integer ll_5
	local real r_21
	local real this_23
	local real r_22
	local real this_24
	local real r_23
	local real this_25
	local real r_24
	local real this_26
	local real r_25
	local real this_27
	local integer ts_0_6
	local integer ts_1_6
	local integer ts_2_6
	local integer ts_3_6
	local integer ts_4_6
	local string stackPos_7
	local integer ll_6
	local real r_26
	local real this_28
	local real r_27
	local real this_29
	local real r_28
	local real this_30
	local real r_29
	local real this_31
	local real r_30
	local real this_32
	local integer ts_0_7
	local integer ts_1_7
	local integer ts_2_7
	local integer ts_3_7
	local integer ts_4_7
	local string stackPos_8
	local integer ll_7
	local real r_31
	local real this_33
	local real r_32
	local real this_34
	local real r_33
	local real this_35
	local real r_34
	local real this_36
	local real r_35
	local real this_37
	local integer ts_0_8
	local integer ts_1_8
	local integer ts_2_8
	local integer ts_3_8
	local integer ts_4_8
	local string stackPos_9
	local integer ll_8
	local integer ts_0_9
	local integer ts_1_9
	local integer ts_2_9
	local integer ts_3_9
	local integer ts_4_9
	local string stackPos_10
	local integer ll_9
	local integer ts_0_10
	local integer ts_1_10
	local integer ts_2_10
	local integer ts_3_10
	local integer ts_4_10
	local string stackPos_11
	local integer ll_10
	local integer ts_0_11
	local integer ts_1_11
	local integer ts_2_11
	local integer ts_3_11
	local integer ts_4_11
	local string stackPos_12
	local integer ll_11
	local integer ts_0_12
	local integer ts_1_12
	local integer ts_2_12
	local integer ts_3_12
	local integer ts_4_12
	local string stackPos_13
	local integer ll_12
	local integer ts_0_13
	local integer ts_1_13
	local integer ts_2_13
	local integer ts_3_13
	local integer ts_4_13
	local string stackPos_14
	local integer ll_13
	local integer ts_0_14
	local integer ts_1_14
	local integer ts_2_14
	local integer ts_3_14
	local integer ts_4_14
	local string stackPos_15
	local integer ll_14
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set r = 0.07
	set this_3 = r * 1000.
	set ts_0 = R2I(this_3)
	set r_2 = 0.03
	set this_4 = r_2 * 1000.
	set ts_1 = R2I(this_4)
	set r_3 = 0.01
	set this_5 = r_3 * 1000.
	set ts_2 = R2I(this_5)
	set r_4 = 0.07
	set this_6 = r_4 * 1000.
	set ts_3 = R2I(this_6)
	set r_5 = 0.03
	set this_7 = r_5 * 1000.
	set ts_4 = R2I(this_7)
	set stackPos_2 = "when calling asList in Multiboards, line 23"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	set ll = new_LinkedList("when calling new_LinkedList in LinkedList, line 391")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_0, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_1, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_2, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_3, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_4, "when calling add in LinkedList, line 393")
	set wurst_stack_depth = wurst_stack_depth - 1
	set Multiboards_kMultiboardInitWidths[0] = ll
	set r_6 = 0.07
	set this_8 = r_6 * 1000.
	set ts_0_2 = R2I(this_8)
	set r_7 = 0.03
	set this_9 = r_7 * 1000.
	set ts_1_2 = R2I(this_9)
	set r_8 = 0.01
	set this_10 = r_8 * 1000.
	set ts_2_2 = R2I(this_10)
	set r_9 = 0.07
	set this_11 = r_9 * 1000.
	set ts_3_2 = R2I(this_11)
	set r_10 = 0.03
	set this_12 = r_10 * 1000.
	set ts_4_2 = R2I(this_12)
	set stackPos_3 = "when calling asList in Multiboards, line 24"
	set wurst_stack[wurst_stack_depth] = stackPos_3
	set wurst_stack_depth = wurst_stack_depth + 1
	set ll_2 = new_LinkedList("when calling new_LinkedList in LinkedList, line 391")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_2, ts_0_2, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_2, ts_1_2, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_2, ts_2_2, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_2, ts_3_2, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_2, ts_4_2, "when calling add in LinkedList, line 393")
	set wurst_stack_depth = wurst_stack_depth - 1
	set Multiboards_kMultiboardInitWidths[1] = ll_2
	set r_11 = 0.07
	set this_13 = r_11 * 1000.
	set ts_0_3 = R2I(this_13)
	set r_12 = 0.03
	set this_14 = r_12 * 1000.
	set ts_1_3 = R2I(this_14)
	set r_13 = 0.01
	set this_15 = r_13 * 1000.
	set ts_2_3 = R2I(this_15)
	set r_14 = 0.07
	set this_16 = r_14 * 1000.
	set ts_3_3 = R2I(this_16)
	set r_15 = 0.03
	set this_17 = r_15 * 1000.
	set ts_4_3 = R2I(this_17)
	set stackPos_4 = "when calling asList in Multiboards, line 25"
	set wurst_stack[wurst_stack_depth] = stackPos_4
	set wurst_stack_depth = wurst_stack_depth + 1
	set ll_3 = new_LinkedList("when calling new_LinkedList in LinkedList, line 391")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_3, ts_0_3, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_3, ts_1_3, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_3, ts_2_3, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_3, ts_3_3, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_3, ts_4_3, "when calling add in LinkedList, line 393")
	set wurst_stack_depth = wurst_stack_depth - 1
	set Multiboards_kMultiboardInitWidths[2] = ll_3
	set r_16 = 0.0025
	set this_18 = r_16 * 1000.
	set ts_0_4 = R2I(this_18)
	set r_17 = 0.0025
	set this_19 = r_17 * 1000.
	set ts_1_4 = R2I(this_19)
	set r_18 = 0.21
	set this_20 = r_18 * 1000.
	set ts_2_4 = R2I(this_20)
	set r_19 = 0.0025
	set this_21 = r_19 * 1000.
	set ts_3_4 = R2I(this_21)
	set r_20 = 0.0025
	set this_22 = r_20 * 1000.
	set ts_4_4 = R2I(this_22)
	set stackPos_5 = "when calling asList in Multiboards, line 27"
	set wurst_stack[wurst_stack_depth] = stackPos_5
	set wurst_stack_depth = wurst_stack_depth + 1
	set ll_4 = new_LinkedList("when calling new_LinkedList in LinkedList, line 391")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_4, ts_0_4, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_4, ts_1_4, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_4, ts_2_4, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_4, ts_3_4, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_4, ts_4_4, "when calling add in LinkedList, line 393")
	set wurst_stack_depth = wurst_stack_depth - 1
	set Multiboards_kMultiboardInitWidths[3] = ll_4
	set r_21 = 0.07
	set this_23 = r_21 * 1000.
	set ts_0_5 = R2I(this_23)
	set r_22 = 0.03
	set this_24 = r_22 * 1000.
	set ts_1_5 = R2I(this_24)
	set r_23 = 0.03
	set this_25 = r_23 * 1000.
	set ts_2_5 = R2I(this_25)
	set r_24 = 0.01
	set this_26 = r_24 * 1000.
	set ts_3_5 = R2I(this_26)
	set r_25 = 0.07
	set this_27 = r_25 * 1000.
	set ts_4_5 = R2I(this_27)
	set stackPos_6 = "when calling asList in Multiboards, line 28"
	set wurst_stack[wurst_stack_depth] = stackPos_6
	set wurst_stack_depth = wurst_stack_depth + 1
	set ll_5 = new_LinkedList("when calling new_LinkedList in LinkedList, line 391")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_5, ts_0_5, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_5, ts_1_5, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_5, ts_2_5, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_5, ts_3_5, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_5, ts_4_5, "when calling add in LinkedList, line 393")
	set wurst_stack_depth = wurst_stack_depth - 1
	set Multiboards_kMultiboardInitWidths[4] = ll_5
	set r_26 = 0.07
	set this_28 = r_26 * 1000.
	set ts_0_6 = R2I(this_28)
	set r_27 = 0.03
	set this_29 = r_27 * 1000.
	set ts_1_6 = R2I(this_29)
	set r_28 = 0.03
	set this_30 = r_28 * 1000.
	set ts_2_6 = R2I(this_30)
	set r_29 = 0.01
	set this_31 = r_29 * 1000.
	set ts_3_6 = R2I(this_31)
	set r_30 = 0.07
	set this_32 = r_30 * 1000.
	set ts_4_6 = R2I(this_32)
	set stackPos_7 = "when calling asList in Multiboards, line 29"
	set wurst_stack[wurst_stack_depth] = stackPos_7
	set wurst_stack_depth = wurst_stack_depth + 1
	set ll_6 = new_LinkedList("when calling new_LinkedList in LinkedList, line 391")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_6, ts_0_6, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_6, ts_1_6, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_6, ts_2_6, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_6, ts_3_6, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_6, ts_4_6, "when calling add in LinkedList, line 393")
	set wurst_stack_depth = wurst_stack_depth - 1
	set Multiboards_kMultiboardInitWidths[5] = ll_6
	set r_31 = 0.07
	set this_33 = r_31 * 1000.
	set ts_0_7 = R2I(this_33)
	set r_32 = 0.03
	set this_34 = r_32 * 1000.
	set ts_1_7 = R2I(this_34)
	set r_33 = 0.03
	set this_35 = r_33 * 1000.
	set ts_2_7 = R2I(this_35)
	set r_34 = 0.01
	set this_36 = r_34 * 1000.
	set ts_3_7 = R2I(this_36)
	set r_35 = 0.07
	set this_37 = r_35 * 1000.
	set ts_4_7 = R2I(this_37)
	set stackPos_8 = "when calling asList in Multiboards, line 30"
	set wurst_stack[wurst_stack_depth] = stackPos_8
	set wurst_stack_depth = wurst_stack_depth + 1
	set ll_7 = new_LinkedList("when calling new_LinkedList in LinkedList, line 391")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_7, ts_0_7, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_7, ts_1_7, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_7, ts_2_7, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_7, ts_3_7, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_7, ts_4_7, "when calling add in LinkedList, line 393")
	set wurst_stack_depth = wurst_stack_depth - 1
	set Multiboards_kMultiboardInitWidths[6] = ll_7
	set Multiboards_kMBIncome[0] = 4
	set Multiboards_kMBIncome[1] = 0
	set Multiboards_kMBCityTax[0] = 1
	set Multiboards_kMBCityTax[1] = 4
	set Multiboards_kMBCityPublicOrder[0] = 1
	set Multiboards_kMBCityPublicOrder[1] = 5
	set Multiboards_kMBCityPop[0] = 1
	set Multiboards_kMBCityPop[1] = 6
	set Multiboards_kMBCityPopGrowth[0] = 2
	set Multiboards_kMBCityPopGrowth[1] = 6
	set Multiboards_kMBCityName[0] = 2
	set Multiboards_kMBCityName[1] = 3
	set ts_0_8 = stringToIndex("Food", "when calling stringToIndex in Multiboards, line 47")
	set ts_1_8 = stringToIndex("0", "when calling stringToIndex in Multiboards, line 47")
	set ts_2_8 = stringToIndex("|", "when calling stringToIndex in Multiboards, line 47")
	set ts_3_8 = stringToIndex("Income", "when calling stringToIndex in Multiboards, line 47")
	set ts_4_8 = stringToIndex("0", "when calling stringToIndex in Multiboards, line 47")
	set stackPos_9 = "when calling asList in Multiboards, line 47"
	set wurst_stack[wurst_stack_depth] = stackPos_9
	set wurst_stack_depth = wurst_stack_depth + 1
	set ll_8 = new_LinkedList("when calling new_LinkedList in LinkedList, line 391")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_8, ts_0_8, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_8, ts_1_8, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_8, ts_2_8, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_8, ts_3_8, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_8, ts_4_8, "when calling add in LinkedList, line 393")
	set wurst_stack_depth = wurst_stack_depth - 1
	set Multiboards_kMultiboardInitStrings[0] = ll_8
	set ts_0_9 = stringToIndex("Iron", "when calling stringToIndex in Multiboards, line 48")
	set ts_1_9 = stringToIndex("0", "when calling stringToIndex in Multiboards, line 48")
	set ts_2_9 = stringToIndex("|", "when calling stringToIndex in Multiboards, line 48")
	set ts_3_9 = stringToIndex("Upkeep", "when calling stringToIndex in Multiboards, line 48")
	set ts_4_9 = stringToIndex("0", "when calling stringToIndex in Multiboards, line 48")
	set stackPos_10 = "when calling asList in Multiboards, line 48"
	set wurst_stack[wurst_stack_depth] = stackPos_10
	set wurst_stack_depth = wurst_stack_depth + 1
	set ll_9 = new_LinkedList("when calling new_LinkedList in LinkedList, line 391")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_9, ts_0_9, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_9, ts_1_9, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_9, ts_2_9, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_9, ts_3_9, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_9, ts_4_9, "when calling add in LinkedList, line 393")
	set wurst_stack_depth = wurst_stack_depth - 1
	set Multiboards_kMultiboardInitStrings[1] = ll_9
	set ts_0_10 = stringToIndex("Stone", "when calling stringToIndex in Multiboards, line 49")
	set ts_1_10 = stringToIndex("0", "when calling stringToIndex in Multiboards, line 49")
	set ts_2_10 = stringToIndex("|", "when calling stringToIndex in Multiboards, line 49")
	set ts_3_10 = stringToIndex(" ", "when calling stringToIndex in Multiboards, line 49")
	set ts_4_10 = stringToIndex(" ", "when calling stringToIndex in Multiboards, line 49")
	set stackPos_11 = "when calling asList in Multiboards, line 49"
	set wurst_stack[wurst_stack_depth] = stackPos_11
	set wurst_stack_depth = wurst_stack_depth + 1
	set ll_10 = new_LinkedList("when calling new_LinkedList in LinkedList, line 391")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_10, ts_0_10, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_10, ts_1_10, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_10, ts_2_10, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_10, ts_3_10, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_10, ts_4_10, "when calling add in LinkedList, line 393")
	set wurst_stack_depth = wurst_stack_depth - 1
	set Multiboards_kMultiboardInitStrings[2] = ll_10
	set ts_0_11 = stringToIndex("-", "when calling stringToIndex in Multiboards, line 51")
	set ts_1_11 = stringToIndex("-", "when calling stringToIndex in Multiboards, line 51")
	set ts_2_11 = stringToIndex(" ", "when calling stringToIndex in Multiboards, line 51")
	set ts_3_11 = stringToIndex("-", "when calling stringToIndex in Multiboards, line 51")
	set ts_4_11 = stringToIndex("-", "when calling stringToIndex in Multiboards, line 51")
	set stackPos_12 = "when calling asList in Multiboards, line 51"
	set wurst_stack[wurst_stack_depth] = stackPos_12
	set wurst_stack_depth = wurst_stack_depth + 1
	set ll_11 = new_LinkedList("when calling new_LinkedList in LinkedList, line 391")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_11, ts_0_11, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_11, ts_1_11, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_11, ts_2_11, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_11, ts_3_11, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_11, ts_4_11, "when calling add in LinkedList, line 393")
	set wurst_stack_depth = wurst_stack_depth - 1
	set Multiboards_kMultiboardInitStrings[3] = ll_11
	set ts_0_12 = stringToIndex("Tax", "when calling stringToIndex in Multiboards, line 52")
	set ts_1_12 = stringToIndex("0", "when calling stringToIndex in Multiboards, line 52")
	set ts_2_12 = stringToIndex(" ", "when calling stringToIndex in Multiboards, line 52")
	set ts_3_12 = stringToIndex("|", "when calling stringToIndex in Multiboards, line 52")
	set ts_4_12 = stringToIndex(" ", "when calling stringToIndex in Multiboards, line 52")
	set stackPos_13 = "when calling asList in Multiboards, line 52"
	set wurst_stack[wurst_stack_depth] = stackPos_13
	set wurst_stack_depth = wurst_stack_depth + 1
	set ll_12 = new_LinkedList("when calling new_LinkedList in LinkedList, line 391")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_12, ts_0_12, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_12, ts_1_12, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_12, ts_2_12, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_12, ts_3_12, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_12, ts_4_12, "when calling add in LinkedList, line 393")
	set wurst_stack_depth = wurst_stack_depth - 1
	set Multiboards_kMultiboardInitStrings[4] = ll_12
	set ts_0_13 = stringToIndex("Public order", "when calling stringToIndex in Multiboards, line 53")
	set ts_1_13 = stringToIndex("0", "when calling stringToIndex in Multiboards, line 53")
	set ts_2_13 = stringToIndex(" ", "when calling stringToIndex in Multiboards, line 53")
	set ts_3_13 = stringToIndex("|", "when calling stringToIndex in Multiboards, line 53")
	set ts_4_13 = stringToIndex(" ", "when calling stringToIndex in Multiboards, line 53")
	set stackPos_14 = "when calling asList in Multiboards, line 53"
	set wurst_stack[wurst_stack_depth] = stackPos_14
	set wurst_stack_depth = wurst_stack_depth + 1
	set ll_13 = new_LinkedList("when calling new_LinkedList in LinkedList, line 391")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_13, ts_0_13, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_13, ts_1_13, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_13, ts_2_13, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_13, ts_3_13, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_13, ts_4_13, "when calling add in LinkedList, line 393")
	set wurst_stack_depth = wurst_stack_depth - 1
	set Multiboards_kMultiboardInitStrings[5] = ll_13
	set ts_0_14 = stringToIndex("Population", "when calling stringToIndex in Multiboards, line 54")
	set ts_1_14 = stringToIndex("0", "when calling stringToIndex in Multiboards, line 54")
	set ts_2_14 = stringToIndex(" ", "when calling stringToIndex in Multiboards, line 54")
	set ts_3_14 = stringToIndex("|", "when calling stringToIndex in Multiboards, line 54")
	set ts_4_14 = stringToIndex(" ", "when calling stringToIndex in Multiboards, line 54")
	set stackPos_15 = "when calling asList in Multiboards, line 54"
	set wurst_stack[wurst_stack_depth] = stackPos_15
	set wurst_stack_depth = wurst_stack_depth + 1
	set ll_14 = new_LinkedList("when calling new_LinkedList in LinkedList, line 391")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_14, ts_0_14, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_14, ts_1_14, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_14, ts_2_14, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_14, ts_3_14, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_14, ts_4_14, "when calling add in LinkedList, line 393")
	set wurst_stack_depth = wurst_stack_depth - 1
	set Multiboards_kMultiboardInitStrings[6] = ll_14
	set wurst_stack_depth = wurst_stack_depth - 1
	return true
endfunction

function bridge_init_Multiboards takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_Multiboards("Multiboards, line 1")
endfunction

function init_NoShipsNearRivers takes string stackPos returns boolean
	local integer clVar
	local playerunitevent temp
	local string stackPos_2
	local integer this_3
	local integer this_4
	local eventid eventId
	local integer listener
	local string stackPos_3
	local eventid this_5
	local string stackPos_4
	local integer id
	local handle this_6
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set temp = EVENT_PLAYER_UNIT_CONSTRUCT_START
	set stackPos_2 = "when calling alloc_Closure in NoShipsNearRivers, line 9"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_3 = EventListener_maxIndex
			set EventListener_typeId[this_3] = 654
		else
			call error("Out of memory: Could not create Closure.", "when calling error in NoShipsNearRivers, line 9")
			set this_3 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_3 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_3] = 654
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set clVar = this_3
	set this_4 = clVar
	set EventListener_eventId[this_4] = 0
	set EventListener_next[this_4] = 0
	set EventListener_prev[this_4] = 0
	set eventId = temp
	set listener = clVar
	set stackPos_3 = "when calling add in NoShipsNearRivers, line 9"
	set wurst_stack[wurst_stack_depth] = stackPos_3
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_5 = eventId
	set stackPos_4 = "when calling toIntId in ClosureEvents, line 111"
	set wurst_stack[wurst_stack_depth] = stackPos_4
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_6 = this_5
	set id = ClosureEvents_eventidToIndex[GetHandleId(this_6)]
	if id == 0 then
		set id = registerEventId(this_5, "when calling registerEventId in ClosureEvents, line 228")
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set EventListener_eventId[listener] = id
	if EventListener_generalListenersFirsts[EventListener_eventId[listener]] != 0 then
		set EventListener_prev[EventListener_generalListenersFirsts[EventListener_eventId[listener]]] = listener
		set EventListener_next[listener] = EventListener_generalListenersFirsts[EventListener_eventId[listener]]
	endif
	set EventListener_generalListenersFirsts[EventListener_eventId[listener]] = listener
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set temp = null
	set eventId = null
	set this_5 = null
	set this_6 = null
	return true
endfunction

function bridge_init_NoShipsNearRivers takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_NoShipsNearRivers("NoShipsNearRivers, line 1")
endfunction

function bridge_init_ObjectIdGenerator takes nothing returns boolean
	local string stackPos
	local string stackPos_2
	local string stackPos_3
	local integer this_3
	local string stackPos_4
	local string stackPos_5
	local integer this_4
	local string stackPos_6
	local string stackPos_7
	local integer this_5
	local string stackPos_8
	local string stackPos_9
	local integer this_6
	local string stackPos_10
	local string stackPos_11
	local integer this_7
	local string stackPos_12
	local string stackPos_13
	local integer this_8
	set wurst_stack_depth = 0
	set stackPos = "ObjectIdGenerator, line 1"
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackPos_2 = "when calling new_IdGenerator in ObjectIdGenerator, line 7"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackPos_3 = "when calling IdGenerator in ObjectIdGenerator, line 20"
	set wurst_stack[wurst_stack_depth] = stackPos_3
	set wurst_stack_depth = wurst_stack_depth + 1
	if IdGenerator_firstFree == 0 then
		if IdGenerator_maxIndex < 32768 then
			set IdGenerator_maxIndex = IdGenerator_maxIndex + 1
			set this_3 = IdGenerator_maxIndex
		else
			call error("Out of memory: Could not create IdGenerator.", "when calling error in ObjectIdGenerator, line 14")
			set this_3 = 0
		endif
	else
		set IdGenerator_firstFree = IdGenerator_firstFree - 1
		set this_3 = IdGenerator_nextFree[IdGenerator_firstFree]
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set stackPos_4 = "when calling new_IdGenerator in ObjectIdGenerator, line 8"
	set wurst_stack[wurst_stack_depth] = stackPos_4
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackPos_5 = "when calling IdGenerator in ObjectIdGenerator, line 20"
	set wurst_stack[wurst_stack_depth] = stackPos_5
	set wurst_stack_depth = wurst_stack_depth + 1
	if IdGenerator_firstFree == 0 then
		if IdGenerator_maxIndex < 32768 then
			set IdGenerator_maxIndex = IdGenerator_maxIndex + 1
			set this_4 = IdGenerator_maxIndex
		else
			call error("Out of memory: Could not create IdGenerator.", "when calling error in ObjectIdGenerator, line 14")
			set this_4 = 0
		endif
	else
		set IdGenerator_firstFree = IdGenerator_firstFree - 1
		set this_4 = IdGenerator_nextFree[IdGenerator_firstFree]
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set stackPos_6 = "when calling new_IdGenerator in ObjectIdGenerator, line 9"
	set wurst_stack[wurst_stack_depth] = stackPos_6
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackPos_7 = "when calling IdGenerator in ObjectIdGenerator, line 20"
	set wurst_stack[wurst_stack_depth] = stackPos_7
	set wurst_stack_depth = wurst_stack_depth + 1
	if IdGenerator_firstFree == 0 then
		if IdGenerator_maxIndex < 32768 then
			set IdGenerator_maxIndex = IdGenerator_maxIndex + 1
			set this_5 = IdGenerator_maxIndex
		else
			call error("Out of memory: Could not create IdGenerator.", "when calling error in ObjectIdGenerator, line 14")
			set this_5 = 0
		endif
	else
		set IdGenerator_firstFree = IdGenerator_firstFree - 1
		set this_5 = IdGenerator_nextFree[IdGenerator_firstFree]
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set stackPos_8 = "when calling new_IdGenerator in ObjectIdGenerator, line 10"
	set wurst_stack[wurst_stack_depth] = stackPos_8
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackPos_9 = "when calling IdGenerator in ObjectIdGenerator, line 20"
	set wurst_stack[wurst_stack_depth] = stackPos_9
	set wurst_stack_depth = wurst_stack_depth + 1
	if IdGenerator_firstFree == 0 then
		if IdGenerator_maxIndex < 32768 then
			set IdGenerator_maxIndex = IdGenerator_maxIndex + 1
			set this_6 = IdGenerator_maxIndex
		else
			call error("Out of memory: Could not create IdGenerator.", "when calling error in ObjectIdGenerator, line 14")
			set this_6 = 0
		endif
	else
		set IdGenerator_firstFree = IdGenerator_firstFree - 1
		set this_6 = IdGenerator_nextFree[IdGenerator_firstFree]
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set stackPos_10 = "when calling new_IdGenerator in ObjectIdGenerator, line 11"
	set wurst_stack[wurst_stack_depth] = stackPos_10
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackPos_11 = "when calling IdGenerator in ObjectIdGenerator, line 20"
	set wurst_stack[wurst_stack_depth] = stackPos_11
	set wurst_stack_depth = wurst_stack_depth + 1
	if IdGenerator_firstFree == 0 then
		if IdGenerator_maxIndex < 32768 then
			set IdGenerator_maxIndex = IdGenerator_maxIndex + 1
			set this_7 = IdGenerator_maxIndex
		else
			call error("Out of memory: Could not create IdGenerator.", "when calling error in ObjectIdGenerator, line 14")
			set this_7 = 0
		endif
	else
		set IdGenerator_firstFree = IdGenerator_firstFree - 1
		set this_7 = IdGenerator_nextFree[IdGenerator_firstFree]
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set stackPos_12 = "when calling new_IdGenerator in ObjectIdGenerator, line 12"
	set wurst_stack[wurst_stack_depth] = stackPos_12
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackPos_13 = "when calling IdGenerator in ObjectIdGenerator, line 20"
	set wurst_stack[wurst_stack_depth] = stackPos_13
	set wurst_stack_depth = wurst_stack_depth + 1
	if IdGenerator_firstFree == 0 then
		if IdGenerator_maxIndex < 32768 then
			set IdGenerator_maxIndex = IdGenerator_maxIndex + 1
			set this_8 = IdGenerator_maxIndex
		else
			call error("Out of memory: Could not create IdGenerator.", "when calling error in ObjectIdGenerator, line 14")
			set this_8 = 0
		endif
	else
		set IdGenerator_firstFree = IdGenerator_firstFree - 1
		set this_8 = IdGenerator_nextFree[IdGenerator_firstFree]
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	return true
endfunction

function init_OnUnitEnterLeave takes string stackPos returns boolean
	local integer i
	local integer temp
	local integer clVar
	local player this_3
	local integer abilityId
	local boolean avail
	local string stackPos_2
	local integer this_4
	local integer cb
	local string stackPos_3
	local real timeToWait
	local integer cb_2
	local string stackPos_4
	local integer this_5
	local real time
	local string stackPos_5
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set OnUnitEnterLeave_eventTrigger = CreateTrigger()
	set OnUnitEnterLeave_preplacedUnits = CreateGroup()
	set i = 0
	set temp = bj_MAX_PLAYER_SLOTS - 1
	loop
		exitwhen i > temp
		set this_3 = Player_players[i]
		set abilityId = 1095577649
		set avail = false
		call SetPlayerAbilityAvailable(this_3, abilityId, avail)
		set i = i + 1
	endloop
	set stackPos_2 = "when calling alloc_Closure in OnUnitEnterLeave, line 59"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if CallbackSingle_firstFree == 0 then
		if CallbackSingle_maxIndex < 32768 then
			set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
			set this_4 = CallbackSingle_maxIndex
			set CallbackSingle_typeId[this_4] = 642
		else
			call error("Out of memory: Could not create Closure.", "when calling error in OnUnitEnterLeave, line 59")
			set this_4 = 0
		endif
	else
		set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
		set this_4 = CallbackSingle_nextFree[CallbackSingle_firstFree]
		set CallbackSingle_typeId[this_4] = 642
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set clVar = this_4
	set cb = clVar
	set stackPos_3 = "when calling nullTimer in OnUnitEnterLeave, line 59"
	set wurst_stack[wurst_stack_depth] = stackPos_3
	set wurst_stack_depth = wurst_stack_depth + 1
	set timeToWait = 0.
	set cb_2 = cb
	set stackPos_4 = "when calling doAfter in ClosureTimers, line 22"
	set wurst_stack[wurst_stack_depth] = stackPos_4
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_5 = cb_2
	set time = timeToWait
	set stackPos_5 = "when calling start in ClosureTimers, line 15"
	set wurst_stack[wurst_stack_depth] = stackPos_5
	set wurst_stack_depth = wurst_stack_depth + 1
	if CallbackSingle_typeId[this_5] == 0 then
		if this_5 == 0 then
			call error("Nullpointer exception when calling CallbackSingle.start", "when calling error in ClosureTimers, line 67")
		else
			call error("Called CallbackSingle.start on invalid object.", "when calling error in ClosureTimers, line 67")
		endif
	endif
	call CallbackSingle_start(this_5, time, "when calling start in ClosureTimers, line 67")
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_3 = null
	return true
endfunction

function bridge_init_OnUnitEnterLeave takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_OnUnitEnterLeave("OnUnitEnterLeave, line 1")
endfunction

function init_Preloader takes string stackPos returns boolean
	local integer clVar
	local player p
	local integer unitId
	local real pos_x
	local real pos_y
	local real facing_radians
	local real this_radians
	local integer this_3
	local integer value
	local string result_2
	local integer remainingValue
	local integer byteno
	local integer charValue
	local string this_4
	local integer index
	local string stackPos_2
	local integer this_5
	local integer cb
	local string stackPos_3
	local real timeToWait
	local integer cb_2
	local string stackPos_4
	local integer this_6
	local real time
	local string stackPos_5
	local player temp
	local integer temp_2
	local real temp_3
	local real temp_4
	local real tuple_temp
	local real tuple_temp_2
	local real tuple_temp_3
	local real tuple_temp_4
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set Preloader_dumg = CreateGroup()
	set p = Basics_DUMMY_PLAYER
	set unitId = 2019849581
	set tuple_temp = 0.
	set tuple_temp_2 = 0.
	set pos_x = tuple_temp
	set pos_y = tuple_temp_2
	set tuple_temp_3 = 0.
	set facing_radians = tuple_temp_3
	set temp = p
	set temp_2 = unitId
	set temp_3 = pos_x
	set temp_4 = pos_y
	set tuple_temp_4 = facing_radians
	set this_radians = tuple_temp_4
	set Preloader_dum = CreateUnit(temp, temp_2, temp_3, temp_4, this_radians * 57.295779513)
	if Preloader_dum == null then
		set this_3 = 2019849581
		set value = this_3
		set result_2 = ""
		set remainingValue = value
		set byteno = 0
		loop
			exitwhen byteno > 3
			set charValue = ModuloInteger(remainingValue, 256)
			set remainingValue = remainingValue / 256
			set this_4 = ".................................!.#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[.]^_`abcdefghijklmnopqrstuvwxyz{|}~................................................................................................................................."
			set index = charValue
			set result_2 = SubString(this_4, index, index + 1) + result_2
			set byteno = byteno + 1
		endloop
		call error("DUMMY_UNITID (" + result_2 + ") not added correctly to the map.", "when calling error in Preloader, line 52")
	endif
	if true then
		set stackPos_2 = "when calling alloc_Closure in Preloader, line 54"
		set wurst_stack[wurst_stack_depth] = stackPos_2
		set wurst_stack_depth = wurst_stack_depth + 1
		if CallbackSingle_firstFree == 0 then
			if CallbackSingle_maxIndex < 32768 then
				set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
				set this_5 = CallbackSingle_maxIndex
				set CallbackSingle_typeId[this_5] = 643
			else
				call error("Out of memory: Could not create Closure.", "when calling error in Preloader, line 54")
				set this_5 = 0
			endif
		else
			set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
			set this_5 = CallbackSingle_nextFree[CallbackSingle_firstFree]
			set CallbackSingle_typeId[this_5] = 643
		endif
		set wurst_stack_depth = wurst_stack_depth - 1
		set clVar = this_5
		set cb = clVar
		set stackPos_3 = "when calling nullTimer in Preloader, line 54"
		set wurst_stack[wurst_stack_depth] = stackPos_3
		set wurst_stack_depth = wurst_stack_depth + 1
		set timeToWait = 0.
		set cb_2 = cb
		set stackPos_4 = "when calling doAfter in ClosureTimers, line 22"
		set wurst_stack[wurst_stack_depth] = stackPos_4
		set wurst_stack_depth = wurst_stack_depth + 1
		set this_6 = cb_2
		set time = timeToWait
		set stackPos_5 = "when calling start in ClosureTimers, line 15"
		set wurst_stack[wurst_stack_depth] = stackPos_5
		set wurst_stack_depth = wurst_stack_depth + 1
		if CallbackSingle_typeId[this_6] == 0 then
			if this_6 == 0 then
				call error("Nullpointer exception when calling CallbackSingle.start", "when calling error in ClosureTimers, line 67")
			else
				call error("Called CallbackSingle.start on invalid object.", "when calling error in ClosureTimers, line 67")
			endif
		endif
		call CallbackSingle_start(this_6, time, "when calling start in ClosureTimers, line 67")
		set wurst_stack_depth = wurst_stack_depth - 1
		set wurst_stack_depth = wurst_stack_depth - 1
		set wurst_stack_depth = wurst_stack_depth - 1
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set p = null
	set temp = null
	return true
endfunction

function bridge_init_Preloader takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_Preloader("Preloader, line 1")
endfunction

function bridge_init_RegisterEvents takes nothing returns boolean
	local string stackPos
	local playerunitevent p
	local code c
	set wurst_stack_depth = 0
	set stackPos = "RegisterEvents, line 1"
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set RegisterEvents_onCastMap = new_HashMap("when calling new_HashMap in RegisterEvents, line 55")
	set p = EVENT_PLAYER_UNIT_SPELL_EFFECT
	set c = ref_function_bridge_RegisterEvents_closure_impl
	call registerPlayerUnitEvent(p, null, c, null)
	set wurst_stack_depth = wurst_stack_depth - 1
	set p = null
	return true
endfunction

function initialize takes nothing returns nothing
	local integer i
	local integer temp
	local string this_3
	set StringUtils_c2s[0] = ""
	set StringUtils_c2s[1] = ""
	set StringUtils_c2s[2] = ""
	set StringUtils_c2s[3] = ""
	set StringUtils_c2s[4] = ""
	set StringUtils_c2s[5] = ""
	set StringUtils_c2s[6] = ""
	set StringUtils_c2s[7] = ""
	set StringUtils_c2s[8] = ""
	set StringUtils_c2s[9] = "\t"
	set StringUtils_c2s[10] = "\n"
	set StringUtils_c2s[11] = ""
	set StringUtils_c2s[12] = ""
	set StringUtils_c2s[13] = "\r"
	set StringUtils_c2s[14] = ""
	set StringUtils_c2s[15] = ""
	set StringUtils_c2s[16] = ""
	set StringUtils_c2s[17] = ""
	set StringUtils_c2s[18] = ""
	set StringUtils_c2s[19] = ""
	set StringUtils_c2s[20] = ""
	set StringUtils_c2s[21] = ""
	set StringUtils_c2s[22] = ""
	set StringUtils_c2s[23] = ""
	set StringUtils_c2s[24] = ""
	set StringUtils_c2s[25] = ""
	set StringUtils_c2s[26] = ""
	set StringUtils_c2s[27] = ""
	set StringUtils_c2s[28] = ""
	set StringUtils_c2s[29] = ""
	set StringUtils_c2s[30] = ""
	set StringUtils_c2s[31] = ""
	set StringUtils_c2s[32] = " "
	set StringUtils_c2s[33] = "!"
	set StringUtils_c2s[34] = "\""
	set StringUtils_c2s[35] = "#"
	set StringUtils_c2s[36] = "$"
	set StringUtils_c2s[37] = "%"
	set StringUtils_c2s[38] = "&"
	set StringUtils_c2s[39] = "'"
	set StringUtils_c2s[40] = "("
	set StringUtils_c2s[41] = ")"
	set StringUtils_c2s[42] = "*"
	set StringUtils_c2s[43] = "+"
	set StringUtils_c2s[44] = ","
	set StringUtils_c2s[45] = "-"
	set StringUtils_c2s[46] = "."
	set StringUtils_c2s[47] = "/"
	set StringUtils_c2s[48] = "0"
	set StringUtils_c2s[49] = "1"
	set StringUtils_c2s[50] = "2"
	set StringUtils_c2s[51] = "3"
	set StringUtils_c2s[52] = "4"
	set StringUtils_c2s[53] = "5"
	set StringUtils_c2s[54] = "6"
	set StringUtils_c2s[55] = "7"
	set StringUtils_c2s[56] = "8"
	set StringUtils_c2s[57] = "9"
	set StringUtils_c2s[58] = ":"
	set StringUtils_c2s[59] = ";"
	set StringUtils_c2s[60] = "<"
	set StringUtils_c2s[61] = "="
	set StringUtils_c2s[62] = ">"
	set StringUtils_c2s[63] = "?"
	set StringUtils_c2s[64] = "@"
	set StringUtils_c2s[65] = "A"
	set StringUtils_c2s[66] = "B"
	set StringUtils_c2s[67] = "C"
	set StringUtils_c2s[68] = "D"
	set StringUtils_c2s[69] = "E"
	set StringUtils_c2s[70] = "F"
	set StringUtils_c2s[71] = "G"
	set StringUtils_c2s[72] = "H"
	set StringUtils_c2s[73] = "I"
	set StringUtils_c2s[74] = "J"
	set StringUtils_c2s[75] = "K"
	set StringUtils_c2s[76] = "L"
	set StringUtils_c2s[77] = "M"
	set StringUtils_c2s[78] = "N"
	set StringUtils_c2s[79] = "O"
	set StringUtils_c2s[80] = "P"
	set StringUtils_c2s[81] = "Q"
	set StringUtils_c2s[82] = "R"
	set StringUtils_c2s[83] = "S"
	set StringUtils_c2s[84] = "T"
	set StringUtils_c2s[85] = "U"
	set StringUtils_c2s[86] = "V"
	set StringUtils_c2s[87] = "W"
	set StringUtils_c2s[88] = "X"
	set StringUtils_c2s[89] = "Y"
	set StringUtils_c2s[90] = "Z"
	set StringUtils_c2s[91] = "["
	set StringUtils_c2s[92] = "\\"
	set StringUtils_c2s[93] = "]"
	set StringUtils_c2s[94] = "^"
	set StringUtils_c2s[95] = "_"
	set StringUtils_c2s[96] = "`"
	set StringUtils_c2s[97] = "a"
	set StringUtils_c2s[98] = "b"
	set StringUtils_c2s[99] = "c"
	set StringUtils_c2s[100] = "d"
	set StringUtils_c2s[101] = "e"
	set StringUtils_c2s[102] = "f"
	set StringUtils_c2s[103] = "g"
	set StringUtils_c2s[104] = "h"
	set StringUtils_c2s[105] = "i"
	set StringUtils_c2s[106] = "j"
	set StringUtils_c2s[107] = "k"
	set StringUtils_c2s[108] = "l"
	set StringUtils_c2s[109] = "m"
	set StringUtils_c2s[110] = "n"
	set StringUtils_c2s[111] = "o"
	set StringUtils_c2s[112] = "p"
	set StringUtils_c2s[113] = "q"
	set StringUtils_c2s[114] = "r"
	set StringUtils_c2s[115] = "s"
	set StringUtils_c2s[116] = "t"
	set StringUtils_c2s[117] = "u"
	set StringUtils_c2s[118] = "v"
	set StringUtils_c2s[119] = "w"
	set StringUtils_c2s[120] = "x"
	set StringUtils_c2s[121] = "y"
	set StringUtils_c2s[122] = "z"
	set StringUtils_c2s[123] = "{"
	set StringUtils_c2s[124] = "|"
	set StringUtils_c2s[125] = "}"
	set StringUtils_c2s[126] = "~"
	set StringUtils_c2s[127] = ""
	set i = 0
	set temp = StringUtils_MAX_INDEX
	loop
		exitwhen i > temp
		set this_3 = StringUtils_c2s[i]
		if StringCase(this_3, true) == StringUtils_c2s[i] then
			call StringHash(StringUtils_c2s[i])
		endif
		set i = i + 1
	endloop
endfunction

function bridge_init_StringUtils takes nothing returns boolean
	local string stackPos
	set wurst_stack_depth = 0
	set stackPos = "StringUtils, line 1"
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set StringUtils_MAX_INDEX = 126 + 1
	call initialize()
	call stringToIndex("", "when calling stringToIndex in StringUtils, line 167")
	set wurst_stack_depth = wurst_stack_depth - 1
	return true
endfunction

function bridge_init_TimerUtils takes nothing returns boolean
	local string stackPos
	set wurst_stack_depth = 0
	set stackPos = "TimerUtils, line 1"
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set TimerUtils_timerData = new_Table("when calling new_Table in TimerUtils, line 12")
	call CreateTimer()
	call CreateTrigger()
	set wurst_stack_depth = wurst_stack_depth - 1
	return true
endfunction

function init_TypeCasting takes string stackPos returns boolean
	local string stackPos_2
	local integer this_3
	local integer parentKey
	local string value
	local string stackPos_3
	local integer this_4
	local integer parentKey_2
	local string value_2
	local hashtable this_5
	local integer parentKey_3
	local integer childKey
	local string value_3
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set TypeCasting_typecastdata = new_Table("when calling new_Table in TypeCasting, line 6")
	set stackPos_2 = "when calling initTypecastData in TypeCasting, line 14"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_3 = TypeCasting_typecastdata
	set parentKey = 0
	set value = ""
	set stackPos_3 = "when calling saveString in TypeCasting, line 11"
	set wurst_stack[wurst_stack_depth] = stackPos_3
	set wurst_stack_depth = wurst_stack_depth + 1
	if Table_typeId[this_3] == 0 then
		if this_3 == 0 then
			call error("Nullpointer exception when calling Table.saveString", "when calling error in Table, line 60")
		else
			call error("Called Table.saveString on invalid object.", "when calling error in Table, line 60")
		endif
	endif
	set this_4 = this_3
	set parentKey_2 = parentKey
	set value_2 = value
	set this_5 = Table_ht
	set parentKey_3 = this_4
	set childKey = parentKey_2
	set value_3 = value_2
	call SaveStr(this_5, parentKey_3, childKey, value_3)
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_5 = null
	return true
endfunction

function bridge_init_TypeCasting takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_TypeCasting("TypeCasting, line 1")
endfunction

function asList_17 takes integer ts_0, integer ts_1, integer ts_2, integer ts_3, integer ts_4, integer ts_5, integer ts_6, integer ts_7, integer ts_8, integer ts_9, integer ts_10, integer ts_11, integer ts_12, integer ts_13, integer ts_14, integer ts_15, integer ts_16, string stackPos returns integer
	local integer ll
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set ll = new_LinkedList("when calling new_LinkedList in LinkedList, line 391")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_0, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_1, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_2, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_3, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_4, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_5, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_6, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_7, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_8, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_9, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_10, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_11, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_12, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_13, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_14, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_15, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_16, "when calling add in LinkedList, line 393")
	set wurst_stack_depth = wurst_stack_depth - 1
	return ll
endfunction

function asList_22 takes integer ts_0, integer ts_1, integer ts_2, integer ts_3, integer ts_4, integer ts_5, integer ts_6, integer ts_7, integer ts_8, integer ts_9, integer ts_10, integer ts_11, integer ts_12, integer ts_13, integer ts_14, integer ts_15, integer ts_16, integer ts_17, integer ts_18, integer ts_19, integer ts_20, integer ts_21, string stackPos returns integer
	local integer ll
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set ll = new_LinkedList("when calling new_LinkedList in LinkedList, line 391")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_0, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_1, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_2, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_3, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_4, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_5, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_6, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_7, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_8, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_9, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_10, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_11, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_12, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_13, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_14, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_15, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_16, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_17, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_18, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_19, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_20, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_21, "when calling add in LinkedList, line 393")
	set wurst_stack_depth = wurst_stack_depth - 1
	return ll
endfunction

function init_Units takes string stackPos returns boolean
	local integer ts_0
	local integer ts_1
	local integer ts_2
	local integer ts_3
	local string stackPos_2
	local integer ll
	local integer ts_0_2
	local integer ts_1_2
	local integer ts_2_2
	local integer ts_3_2
	local string stackPos_3
	local integer ll_2
	local rect object
	local handle this_3
	local rect object_2
	local handle this_4
	local rect object_3
	local handle this_5
	local rect object_4
	local handle this_6
	local rect object_5
	local handle this_7
	local rect object_6
	local handle this_8
	local rect object_7
	local handle this_9
	local rect object_8
	local handle this_10
	local rect object_9
	local handle this_11
	local rect object_10
	local handle this_12
	local rect object_11
	local handle this_13
	local rect object_12
	local handle this_14
	local rect object_13
	local handle this_15
	local rect object_14
	local handle this_16
	local rect object_15
	local handle this_17
	local rect object_16
	local handle this_18
	local rect object_17
	local handle this_19
	local rect object_18
	local handle this_20
	local rect object_19
	local handle this_21
	local rect object_20
	local handle this_22
	local rect object_21
	local handle this_23
	local rect object_22
	local handle this_24
	local integer temp
	local integer temp_2
	local integer temp_3
	local integer temp_4
	local integer temp_5
	local integer temp_6
	local integer temp_7
	local integer temp_8
	local integer temp_9
	local integer temp_10
	local integer temp_11
	local integer temp_12
	local integer temp_13
	local integer temp_14
	local integer temp_15
	local integer temp_16
	local integer temp_17
	local integer temp_18
	local integer temp_19
	local integer temp_20
	local integer temp_21
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set ts_0 = 1747989317
	set ts_1 = 1747989305
	set ts_2 = 1747989316
	set ts_3 = 1747989315
	set stackPos_2 = "when calling asList in Units, line 54"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	set ll = new_LinkedList("when calling new_LinkedList in LinkedList, line 391")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_0, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_1, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_2, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_3, "when calling add in LinkedList, line 393")
	set wurst_stack_depth = wurst_stack_depth - 1
	set Units_usOres = ll
	set ts_0_2 = 15
	set ts_1_2 = 50
	set ts_2_2 = 25
	set ts_3_2 = 40
	set stackPos_3 = "when calling asList in Units, line 55"
	set wurst_stack[wurst_stack_depth] = stackPos_3
	set wurst_stack_depth = wurst_stack_depth + 1
	set ll_2 = new_LinkedList("when calling new_LinkedList in LinkedList, line 391")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_2, ts_0_2, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_2, ts_1_2, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_2, ts_2_2, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll_2, ts_3_2, "when calling add in LinkedList, line 393")
	set wurst_stack_depth = wurst_stack_depth - 1
	set Units_usIncomeOres = ll_2
	set Units_kStartingUnits[0] = asList_17(1747988528, 1747988528, 1747988528, 1747988528, 1747988528, 1747988528, 1747988532, 1747988532, 1747988532, 1747988532, 1211118401, 1747989058, 1747989058, 1747989058, 1747989058, 1747989058, 1747989058, "when calling asList in Units, line 61")
	set Units_kStartingUnits[1] = asList_17(1747988528, 1747988528, 1747988528, 1747988528, 1747988528, 1747988528, 1747988532, 1747988532, 1747988532, 1747988532, 1211118401, 1747989058, 1747989058, 1747989058, 1747989058, 1747989058, 1747989058, "when calling asList in Units, line 66")
	set Units_kStartingUnits[2] = asList_17(1747990087, 1747990087, 1747990087, 1747990087, 1747990087, 1747990087, 1747990088, 1747990088, 1747990088, 1747990088, 1211118401, 1747989058, 1747989058, 1747989058, 1747989058, 1747989058, 1747989058, "when calling asList in Units, line 72")
	set Units_kStartingUnits[3] = asList_17(1747989558, 1747989558, 1747989558, 1747989558, 1747989558, 1747989558, 1747989575, 1747989575, 1747989575, 1747989575, 1211118401, 1747989058, 1747989058, 1747989058, 1747989058, 1747989058, 1747989058, "when calling asList in Units, line 78")
	set object = gg_rct_SHIP_Ankara_Lake
	set this_3 = object
	set temp = GetHandleId(this_3)
	set object_2 = gg_rct_SHIP_Caspian_Sea_and_Mesapotamia
	set this_4 = object_2
	set temp_2 = GetHandleId(this_4)
	set object_3 = gg_rct_SHIP_Danube_1
	set this_5 = object_3
	set temp_3 = GetHandleId(this_5)
	set object_4 = gg_rct_SHIP_Danube_2
	set this_6 = object_4
	set temp_4 = GetHandleId(this_6)
	set object_5 = gg_rct_SHIP_French_River
	set this_7 = object_5
	set temp_5 = GetHandleId(this_7)
	set object_6 = gg_rct_SHIP_Italy
	set this_8 = object_6
	set temp_6 = GetHandleId(this_8)
	set object_7 = gg_rct_SHIP_Lake_Africa
	set this_9 = object_7
	set temp_7 = GetHandleId(this_9)
	set object_8 = gg_rct_SHIP_Lake_Egypt
	set this_10 = object_8
	set temp_8 = GetHandleId(this_10)
	set object_9 = gg_rct_SHIP_Lower_Nile
	set this_11 = object_9
	set temp_9 = GetHandleId(this_11)
	set object_10 = gg_rct_SHIP_Mesapotamia
	set this_12 = object_10
	set temp_10 = GetHandleId(this_12)
	set object_11 = gg_rct_SHIP_Nile_2
	set this_13 = object_11
	set temp_11 = GetHandleId(this_13)
	set object_12 = gg_rct_SHIP_Region_Giant
	set this_14 = object_12
	set temp_12 = GetHandleId(this_14)
	set object_13 = gg_rct_SHIP_River
	set this_15 = object_13
	set temp_13 = GetHandleId(this_15)
	set object_14 = gg_rct_SHIP_River_GIANT
	set this_16 = object_14
	set temp_14 = GetHandleId(this_16)
	set object_15 = gg_rct_SHIP_Seine_River
	set this_17 = object_15
	set temp_15 = GetHandleId(this_17)
	set object_16 = gg_rct_SHIP_Spannish_River
	set this_18 = object_16
	set temp_16 = GetHandleId(this_18)
	set object_17 = gg_rct_SHIP_Spannish_River_2
	set this_19 = object_17
	set temp_17 = GetHandleId(this_19)
	set object_18 = gg_rct_SHIP_Spannish_River_3
	set this_20 = object_18
	set temp_18 = GetHandleId(this_20)
	set object_19 = gg_rct_SHIP_Spannish_River_4
	set this_21 = object_19
	set temp_19 = GetHandleId(this_21)
	set object_20 = gg_rct_SHIP_Swedish_Lake
	set this_22 = object_20
	set temp_20 = GetHandleId(this_22)
	set object_21 = gg_rct_SHIP_Thames
	set this_23 = object_21
	set temp_21 = GetHandleId(this_23)
	set object_22 = gg_rct_SHIP_Upper_Nile
	set this_24 = object_22
	set Units_kRiverRects = asList_22(temp, temp_2, temp_3, temp_4, temp_5, temp_6, temp_7, temp_8, temp_9, temp_10, temp_11, temp_12, temp_13, temp_14, temp_15, temp_16, temp_17, temp_18, temp_19, temp_20, temp_21, GetHandleId(this_24), "when calling asList in Units, line 87")
	set wurst_stack_depth = wurst_stack_depth - 1
	set object = null
	set this_3 = null
	set object_2 = null
	set this_4 = null
	set object_3 = null
	set this_5 = null
	set object_4 = null
	set this_6 = null
	set object_5 = null
	set this_7 = null
	set object_6 = null
	set this_8 = null
	set object_7 = null
	set this_9 = null
	set object_8 = null
	set this_10 = null
	set object_9 = null
	set this_11 = null
	set object_10 = null
	set this_12 = null
	set object_11 = null
	set this_13 = null
	set object_12 = null
	set this_14 = null
	set object_13 = null
	set this_15 = null
	set object_14 = null
	set this_16 = null
	set object_15 = null
	set this_17 = null
	set object_16 = null
	set this_18 = null
	set object_17 = null
	set this_19 = null
	set object_18 = null
	set this_20 = null
	set object_19 = null
	set this_21 = null
	set object_20 = null
	set this_22 = null
	set object_21 = null
	set this_23 = null
	set object_22 = null
	set this_24 = null
	return true
endfunction

function bridge_init_Units takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_Units("Units, line 1")
endfunction

function dispatch_PlayerStats_PlayerStats_PlayerStats_setSelectedCityId takes integer this_3, integer c_id, string stackPos returns nothing
	local integer this_4
	local integer c_id_2
	local string stackPos_2
	local integer this_5
	local string stackPos_3
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if PlayerStats_typeId[this_3] == 0 then
		if this_3 == 0 then
			call error("Nullpointer exception when calling PlayerStats.setSelectedCityId", "when calling error in PlayerStats, line 78")
		else
			call error("Called PlayerStats.setSelectedCityId on invalid object.", "when calling error in PlayerStats, line 78")
		endif
	endif
	set this_4 = this_3
	set c_id_2 = c_id
	set stackPos_2 = "when calling setSelectedCityId in PlayerStats, line 78"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if c_id_2 >= 0 and c_id_2 < City_cityCount then
		set PlayerStats_selected_city_id[this_4] = c_id_2
		set this_5 = this_4
		set stackPos_3 = "when calling refreshMultiboardCity in PlayerStats, line 81"
		set wurst_stack[wurst_stack_depth] = stackPos_3
		set wurst_stack_depth = wurst_stack_depth + 1
		if PlayerStats_typeId[this_5] == 0 then
			if this_5 == 0 then
				call error("Nullpointer exception when calling PlayerStats.refreshMultiboardCity", "when calling error in PlayerStats, line 49")
			else
				call error("Called PlayerStats.refreshMultiboardCity on invalid object.", "when calling error in PlayerStats, line 49")
			endif
		endif
		call PlayerStats_refreshMultiboardCity(this_5, "when calling refreshMultiboardCity in PlayerStats, line 49")
		set wurst_stack_depth = wurst_stack_depth - 1
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function onClick takes string stackPos returns nothing
	local integer city_id
	local player this_3
	local player this_4
	local integer this_5
	local player pl
	local string stackPos_2
	local integer this_6
	local player pl_2
	local string stackPos_3
	local player this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_3 = GetTriggerPlayer()
	set CityManage_lastClickTime[GetPlayerId(this_3)] = Main_elapsed_time
	set this_4 = GetTriggerPlayer()
	set CityManage_lastClickUnit[GetPlayerId(this_4)] = GetTriggerUnit()
	set city_id = getCityId(GetTriggerUnit(), "when calling getCityId in CityManage, line 15")
	set this_5 = City_cities[city_id]
	set pl = GetTriggerPlayer()
	set stackPos_2 = "when calling onCityClick in CityManage, line 16"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if City_typeId[this_5] == 0 then
		if this_5 == 0 then
			call error("Nullpointer exception when calling City.onCityClick", "when calling error in City, line 85")
		else
			call error("Called City.onCityClick on invalid object.", "when calling error in City, line 85")
		endif
	endif
	set this_6 = this_5
	set pl_2 = pl
	set stackPos_3 = "when calling onCityClick in City, line 85"
	set wurst_stack[wurst_stack_depth] = stackPos_3
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_7 = pl_2
	call dispatch_PlayerStats_PlayerStats_PlayerStats_setSelectedCityId(PlayerStats_player_stats[GetPlayerId(this_7)], City_city_id[this_6], "when calling setSelectedCityId in City, line 86")
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_3 = null
	set this_4 = null
	set pl = null
	set pl_2 = null
	set this_7 = null
endfunction

function bridge_onClick takes nothing returns nothing
	set wurst_stack_depth = 0
	call onClick("CityManage, line 22")
endfunction

function cond takes nothing returns boolean
	local unit this_3 = GetSpellAbilityUnit()
	local player temp = GetOwningPlayer(this_3)
	local unit this_4 = GetSpellTargetUnit()
	local integer id
	local player this_5
	local player this_6
	local player this_7
	local unit this_8
	local boolean andLeft
	local boolean andLeft_2
	if temp == GetOwningPlayer(this_4) then
		set andLeft_2 = true
	else
		set this_8 = GetSpellTargetUnit()
		set this_5 = GetOwningPlayer(this_8)
		set this_6 = this_5
		if GetPlayerSlotState(this_6) == PLAYER_SLOT_STATE_PLAYING then
			set this_7 = this_5
			set andLeft = GetPlayerController(this_7) == MAP_CONTROL_USER
		else
			set andLeft = false
		endif
		set andLeft_2 =  not andLeft
	endif
	if andLeft_2 then
		set this_3 = null
		set this_4 = null
		set this_5 = null
		set this_6 = null
		set this_7 = null
		set this_8 = null
		set temp = null
		return false
	endif
	set id = GetSpellAbilityId()
	set this_3 = null
	set this_4 = null
	set this_5 = null
	set this_6 = null
	set this_7 = null
	set this_8 = null
	set temp = null
	return id == 1093677396 or id == 1093677397 or id == 1093677398 or id == 1093677400 or id == 1093677399
endfunction

function string_startsWith takes string this_3, string s returns boolean
	local string this_4 = this_3
	local integer len = StringLength(this_4)
	local string this_5 = s
	local string this_6
	local integer start
	local integer stop
	local string this_7
	if StringLength(this_5) > len then
		return false
	endif
	set this_6 = this_3
	set start = 0
	set this_7 = s
	set stop = StringLength(this_7)
	return SubString(this_6, start, stop) == s
endfunction

function cond_2 takes nothing returns boolean
	return string_startsWith(GetEventPlayerChatString(), "-")
endfunction

function init_Abilities takes nothing returns boolean
	return true
endfunction

function init_AbilityIds takes nothing returns boolean
	return true
endfunction

function init_Angle takes nothing returns boolean
	return true
endfunction

function init_Basics takes nothing returns boolean
	set Basics_DUMMY_PLAYER = Player_players[PLAYER_NEUTRAL_PASSIVE]
	return true
endfunction

function init_Buildings takes nothing returns boolean
	return true
endfunction

function init_ClosureForGroups takes nothing returns boolean
	set ClosureForGroups_DUMMY_GROUP = CreateGroup()
	set ClosureForGroups_filter = Filter(ref_function_bridge_ClosureForGroups_closure_impl)
	return true
endfunction

function init_ClosureTimers takes nothing returns boolean
	set ClosureTimers_x = 200
	return true
endfunction

function init_Commands takes nothing returns boolean
	local trigger receiver = CreateTrigger()
	local trigger this_3 = receiver
	local boolexpr condition = Condition(ref_function_cond)
	local trigger t
	local trigger receiver_2
	local integer i
	local integer temp
	local trigger this_4
	local code actionFunc
	local trigger this_5
	local player whichPlayer
	local string chatMessageToDetect
	local boolean exactMatchOnly
	call TriggerAddCondition(this_3, condition)
	set receiver_2 = receiver
	set this_4 = receiver_2
	set actionFunc = ref_function_bridge_action
	call TriggerAddAction(this_4, actionFunc)
	set t = receiver_2
	set i = 0
	set temp = 24 - 1
	loop
		exitwhen i > temp
		set this_5 = t
		set whichPlayer = Player_players[i]
		set chatMessageToDetect = "-"
		set exactMatchOnly = false
		call TriggerRegisterPlayerChatEvent(this_5, whichPlayer, chatMessageToDetect, exactMatchOnly)
		set i = i + 1
	endloop
	set t = null
	set receiver = null
	set receiver_2 = null
	set this_3 = null
	set condition = null
	set this_4 = null
	set this_5 = null
	set whichPlayer = null
	return true
endfunction

function init_Diplomacy takes nothing returns boolean
	local trigger receiver = CreateTrigger()
	local trigger this_3 = receiver
	local playerunitevent whichEvent = EVENT_PLAYER_UNIT_SPELL_EFFECT
	local trigger trig = this_3
	local playerunitevent whichEvent_2 = whichEvent
	local integer index = 0
	local trigger receiver_2
	local trigger receiver_3
	local trigger this_4
	local boolexpr condition
	local trigger this_5
	local code actionFunc
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent_2, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	set receiver_2 = receiver
	set this_4 = receiver_2
	set condition = Condition(ref_function_cond_2)
	call TriggerAddCondition(this_4, condition)
	set receiver_3 = receiver_2
	set this_5 = receiver_3
	set actionFunc = ref_function_bridge_action_2
	call TriggerAddAction(this_5, actionFunc)
	set receiver = null
	set receiver_2 = null
	set receiver_3 = null
	set this_3 = null
	set whichEvent = null
	set trig = null
	set whichEvent_2 = null
	set this_4 = null
	set condition = null
	set this_5 = null
	return true
endfunction

function init_Doodads takes nothing returns boolean
	return true
endfunction

function init_ErrorHandling takes nothing returns boolean
	set ErrorHandling_HT = InitHashtable()
	return true
endfunction

function init_Forces takes nothing returns boolean
	local integer this_red
	local integer this_green
	local integer this_blue
	local integer number
	local integer firstpart
	local integer secondpart
	local integer number_2
	local integer firstpart_2
	local integer secondpart_2
	local integer number_3
	local integer firstpart_3
	local integer this_red_2
	local integer this_green_2
	local integer this_blue_2
	local integer number_4
	local integer firstpart_4
	local integer secondpart_3
	local integer number_5
	local integer firstpart_5
	local integer secondpart_4
	local integer number_6
	local integer firstpart_6
	local integer this_red_3
	local integer this_green_3
	local integer this_blue_3
	local integer number_7
	local integer firstpart_7
	local integer secondpart_5
	local integer number_8
	local integer firstpart_8
	local integer secondpart_6
	local integer number_9
	local integer firstpart_9
	local integer this_red_4
	local integer this_green_4
	local integer this_blue_4
	local integer number_10
	local integer firstpart_10
	local integer secondpart_7
	local integer number_11
	local integer firstpart_11
	local integer secondpart_8
	local integer number_12
	local integer firstpart_12
	local string temp
	local string temp_2
	local string temp_3
	local string temp_4
	local integer tuple_temp
	local integer tuple_temp_2
	local integer tuple_temp_3
	local integer tuple_temp_4
	local integer tuple_temp_5
	local integer tuple_temp_6
	local integer tuple_temp_7
	local integer tuple_temp_8
	local integer tuple_temp_9
	local integer tuple_temp_10
	local integer tuple_temp_11
	local integer tuple_temp_12
	local integer tuple_temp_13
	local integer tuple_temp_14
	local integer tuple_temp_15
	local integer tuple_temp_16
	local integer tuple_temp_17
	local integer tuple_temp_18
	local integer tuple_temp_19
	local integer tuple_temp_20
	local integer tuple_temp_21
	local integer tuple_temp_22
	local integer tuple_temp_23
	local integer tuple_temp_24
	set Forces_fWE = CreateForce()
	set Forces_fEE = CreateForce()
	set Forces_fME = CreateForce()
	set Forces_fBZ = CreateForce()
	set Forces_forces[0] = Forces_fWE
	set Forces_forces[1] = Forces_fEE
	set Forces_forces[2] = Forces_fME
	set Forces_forces[3] = Forces_fBZ
	set tuple_temp = 62
	set tuple_temp_2 = 194
	set tuple_temp_3 = 255
	set Forces_forces_colors_red[0] = tuple_temp
	set Forces_forces_colors_green[0] = tuple_temp_2
	set Forces_forces_colors_blue[0] = tuple_temp_3
	set tuple_temp_4 = 255
	set tuple_temp_5 = 238
	set tuple_temp_6 = 0
	set Forces_forces_colors_red[1] = tuple_temp_4
	set Forces_forces_colors_green[1] = tuple_temp_5
	set Forces_forces_colors_blue[1] = tuple_temp_6
	set tuple_temp_7 = 0
	set tuple_temp_8 = 201
	set tuple_temp_9 = 10
	set Forces_forces_colors_red[2] = tuple_temp_7
	set Forces_forces_colors_green[2] = tuple_temp_8
	set Forces_forces_colors_blue[2] = tuple_temp_9
	set tuple_temp_10 = 219
	set tuple_temp_11 = 0
	set tuple_temp_12 = 201
	set Forces_forces_colors_red[3] = tuple_temp_10
	set Forces_forces_colors_green[3] = tuple_temp_11
	set Forces_forces_colors_blue[3] = tuple_temp_12
	set tuple_temp_13 = Forces_forces_colors_red[0]
	set tuple_temp_14 = Forces_forces_colors_green[0]
	set tuple_temp_15 = Forces_forces_colors_blue[0]
	set this_red = tuple_temp_13
	set this_green = tuple_temp_14
	set this_blue = tuple_temp_15
	set number = this_red
	set firstpart = number / 16
	set secondpart = number - firstpart * 16
	set temp = "|cff" + Colors_hexs[firstpart] + Colors_hexs[secondpart]
	set number_2 = this_green
	set firstpart_2 = number_2 / 16
	set secondpart_2 = number_2 - firstpart_2 * 16
	set number_3 = this_blue
	set firstpart_3 = number_3 / 16
	set tuple_temp_16 = Forces_forces_colors_red[1]
	set tuple_temp_17 = Forces_forces_colors_green[1]
	set tuple_temp_18 = Forces_forces_colors_blue[1]
	set this_red_2 = tuple_temp_16
	set this_green_2 = tuple_temp_17
	set this_blue_2 = tuple_temp_18
	set number_4 = this_red_2
	set firstpart_4 = number_4 / 16
	set secondpart_3 = number_4 - firstpart_4 * 16
	set temp_2 = "|cff" + Colors_hexs[firstpart_4] + Colors_hexs[secondpart_3]
	set number_5 = this_green_2
	set firstpart_5 = number_5 / 16
	set secondpart_4 = number_5 - firstpart_5 * 16
	set number_6 = this_blue_2
	set firstpart_6 = number_6 / 16
	set tuple_temp_19 = Forces_forces_colors_red[2]
	set tuple_temp_20 = Forces_forces_colors_green[2]
	set tuple_temp_21 = Forces_forces_colors_blue[2]
	set this_red_3 = tuple_temp_19
	set this_green_3 = tuple_temp_20
	set this_blue_3 = tuple_temp_21
	set number_7 = this_red_3
	set firstpart_7 = number_7 / 16
	set secondpart_5 = number_7 - firstpart_7 * 16
	set temp_3 = "|cff" + Colors_hexs[firstpart_7] + Colors_hexs[secondpart_5]
	set number_8 = this_green_3
	set firstpart_8 = number_8 / 16
	set secondpart_6 = number_8 - firstpart_8 * 16
	set number_9 = this_blue_3
	set firstpart_9 = number_9 / 16
	set tuple_temp_22 = Forces_forces_colors_red[3]
	set tuple_temp_23 = Forces_forces_colors_green[3]
	set tuple_temp_24 = Forces_forces_colors_blue[3]
	set this_red_4 = tuple_temp_22
	set this_green_4 = tuple_temp_23
	set this_blue_4 = tuple_temp_24
	set number_10 = this_red_4
	set firstpart_10 = number_10 / 16
	set secondpart_7 = number_10 - firstpart_10 * 16
	set temp_4 = "|cff" + Colors_hexs[firstpart_10] + Colors_hexs[secondpart_7]
	set number_11 = this_green_4
	set firstpart_11 = number_11 / 16
	set secondpart_8 = number_11 - firstpart_11 * 16
	set number_12 = this_blue_4
	set firstpart_12 = number_12 / 16
	return true
endfunction

function init_GameTimer takes nothing returns boolean
	local timer this_3
	local real time
	local code timerCallBack
	local timer this_4
	local real time_2
	local code timerCallBack_2
	set GameTimer_gameTimer = CreateTimer()
	set this_3 = GameTimer_gameTimer
	set time = 100000.
	set timerCallBack = null
	call TimerStart(this_3, time, false, timerCallBack)
	set this_4 = CreateTimer()
	set time_2 = 0.030
	set timerCallBack_2 = ref_function_GameTimer_closure_impl
	call TimerStart(this_4, time_2, true, timerCallBack_2)
	set this_3 = null
	set this_4 = null
	return true
endfunction

function init_Group takes nothing returns boolean
	call CreateGroup()
	return true
endfunction

function init_HashList takes nothing returns boolean
	set HashList_ht = InitHashtable()
	set HashList_occurences = InitHashtable()
	return true
endfunction

function init_Icons takes nothing returns boolean
	return true
endfunction

function init_Integer takes nothing returns boolean
	return true
endfunction

function init_Lightning takes nothing returns boolean
	return true
endfunction

function init_Logarithm takes nothing returns boolean
	call Pow(2.0, 128.0)
	return true
endfunction

function init_MagicFunctions takes nothing returns boolean
	return true
endfunction

function init_Main takes nothing returns boolean
	local timer this_3
	local real time
	local code timerCallBack
	set Main_global_timer = CreateTimer()
	set this_3 = Main_global_timer
	set time = 0.01
	set timerCallBack = ref_function_Main_closure_impl
	call TimerStart(this_3, time, true, timerCallBack)
	set this_3 = null
	return true
endfunction

function initMapBounds takes nothing returns nothing
	local rect cond_result
	local region receiver
	local rect cond_result_2
	local region receiver_2
	local region this_3
	local rect rct
	local region this_4
	local rect rct_2
	local rect this_5
	local rect this_6
	local rect this_7
	local rect this_8
	local rect this_9
	local rect this_10
	local rect this_11
	local rect this_12
	local real this_x
	local real this_y
	local real v_x
	local real v_y
	local real this_x_2
	local real this_y_2
	local real v_x_2
	local real v_y_2
	local real temp
	local real temp_2
	local real temp_3
	local real temp_4
	local real tuple_temp
	local real tuple_temp_2
	local real tuple_temp_3
	local real tuple_temp_4
	local real tuple_temp_5
	local real tuple_temp_6
	local real tuple_temp_7
	local real tuple_temp_8
	local real tuple_temp_9
	local real tuple_temp_10
	local real tuple_temp_11
	local real tuple_temp_12
	local real tuple_temp_13
	local real tuple_temp_14
	local real tuple_temp_15
	local real tuple_temp_16
	local real tuple_temp_17
	local real tuple_temp_18
	local real tuple_temp_19
	local real tuple_temp_20
	if false then
		set cond_result = Rect(-1024., -1024., 1024., 1024.)
	else
		set cond_result = bj_mapInitialPlayableArea
	endif
	set MapBounds_playableMapRect = cond_result
	set receiver = CreateRegion()
	set this_3 = receiver
	set rct = MapBounds_playableMapRect
	call RegionAddRect(this_3, rct)
	if false then
		set cond_result_2 = Rect(-1536., -1536., 1536., 1536.)
	else
		set cond_result_2 = GetWorldBounds()
	endif
	set MapBounds_boundRect = cond_result_2
	set receiver_2 = CreateRegion()
	set this_4 = receiver_2
	set rct_2 = MapBounds_boundRect
	call RegionAddRect(this_4, rct_2)
	set MapBounds_boundRegion = receiver_2
	set this_5 = MapBounds_playableMapRect
	set temp = GetRectMinX(this_5)
	set this_6 = MapBounds_playableMapRect
	set tuple_temp = temp
	set tuple_temp_2 = GetRectMinY(this_6)
	set MapBounds_playableMin_x = tuple_temp
	set MapBounds_playableMin_y = tuple_temp_2
	set this_7 = MapBounds_playableMapRect
	set temp_2 = GetRectMaxX(this_7)
	set this_8 = MapBounds_playableMapRect
	set tuple_temp_3 = temp_2
	set tuple_temp_4 = GetRectMaxY(this_8)
	set MapBounds_playableMax_x = tuple_temp_3
	set MapBounds_playableMax_y = tuple_temp_4
	set this_9 = MapBounds_boundRect
	set temp_3 = GetRectMinX(this_9)
	set this_10 = MapBounds_boundRect
	set tuple_temp_5 = temp_3
	set tuple_temp_6 = GetRectMinY(this_10)
	set MapBounds_boundMin_x = tuple_temp_5
	set MapBounds_boundMin_y = tuple_temp_6
	set this_11 = MapBounds_boundRect
	set temp_4 = GetRectMaxX(this_11)
	set this_12 = MapBounds_boundRect
	set tuple_temp_7 = temp_4
	set tuple_temp_8 = GetRectMaxY(this_12)
	set MapBounds_boundMax_x = tuple_temp_7
	set MapBounds_boundMax_y = tuple_temp_8
	set tuple_temp_9 = MapBounds_playableMin_x
	set tuple_temp_10 = MapBounds_playableMin_y
	set this_x = tuple_temp_9
	set this_y = tuple_temp_10
	set tuple_temp_11 = MapBounds_playableMax_x
	set tuple_temp_12 = MapBounds_playableMax_y
	set v_x = tuple_temp_11
	set v_y = tuple_temp_12
	set tuple_temp_13 = this_x + v_x
	set tuple_temp_14 = this_y + v_y
	set tuple_temp_15 = MapBounds_boundMin_x
	set tuple_temp_16 = MapBounds_boundMin_y
	set this_x_2 = tuple_temp_15
	set this_y_2 = tuple_temp_16
	set tuple_temp_17 = MapBounds_boundMax_x
	set tuple_temp_18 = MapBounds_boundMax_y
	set v_x_2 = tuple_temp_17
	set v_y_2 = tuple_temp_18
	set tuple_temp_19 = this_x_2 + v_x_2
	set tuple_temp_20 = this_y_2 + v_y_2
endfunction

function init_MapBounds takes nothing returns boolean
	call initMapBounds()
	return true
endfunction

function init_MathTools takes nothing returns boolean
	set MathTools_e = 2.718281828
	set MathTools_INF_REAL = 340282366920938000000000000000000000000.
	return true
endfunction

function init_Maths takes nothing returns boolean
	return true
endfunction

function init_Matrices takes nothing returns boolean
	return true
endfunction

function init_MutliboardTools takes nothing returns boolean
	return true
endfunction

function init_ObjectIds takes nothing returns boolean
	return true
endfunction

function init_Objects takes nothing returns boolean
	return true
endfunction

function init_OnPlayerLeave takes nothing returns boolean
	local trigger receiver = CreateTrigger()
	local trigger this_3 = receiver
	local code actionFunc = ref_function_bridge_action_3
	local trigger t
	local integer i
	local integer temp
	local trigger this_4
	local player whichPlayer
	local playerevent whichPlayerEvent
	call TriggerAddAction(this_3, actionFunc)
	set t = receiver
	set i = 0
	set temp = 24 - 1
	loop
		exitwhen i > temp
		set this_4 = t
		set whichPlayer = Player_players[i]
		set whichPlayerEvent = EVENT_PLAYER_LEAVE
		call TriggerRegisterPlayerEvent(this_4, whichPlayer, whichPlayerEvent)
		set i = i + 1
	endloop
	set t = null
	set receiver = null
	set this_3 = null
	set this_4 = null
	set whichPlayer = null
	set whichPlayerEvent = null
	return true
endfunction

function init_Player takes nothing returns boolean
	local integer i
	local integer temp
	set Player_localPlayer = GetLocalPlayer()
	set i = 0
	set temp = bj_MAX_PLAYER_SLOTS - 1
	loop
		exitwhen i > temp
		set Player_players[i] = Player(i)
		set i = i + 1
	endloop
	return true
endfunction

function init_PlayerStats takes nothing returns boolean
	return true
endfunction

function init_Playercolor takes nothing returns boolean
	set Playercolor_PLAYER_COLOR_BLACK_AGGRESSIVE = ConvertPlayerColor(24)
	set Playercolor_PLAYER_COLOR_UNKNOWN1 = ConvertPlayerColor(25)
	set Playercolor_PLAYER_COLOR_UNKNOWN2 = ConvertPlayerColor(26)
	set Playercolor_PLAYER_COLOR_BLACK_PASSIVE = ConvertPlayerColor(27)
	set Playercolor_LOOKUP[0] = PLAYER_COLOR_RED
	set Playercolor_LOOKUP[1] = PLAYER_COLOR_BLUE
	set Playercolor_LOOKUP[2] = PLAYER_COLOR_CYAN
	set Playercolor_LOOKUP[3] = PLAYER_COLOR_PURPLE
	set Playercolor_LOOKUP[4] = PLAYER_COLOR_YELLOW
	set Playercolor_LOOKUP[5] = PLAYER_COLOR_ORANGE
	set Playercolor_LOOKUP[6] = PLAYER_COLOR_GREEN
	set Playercolor_LOOKUP[7] = PLAYER_COLOR_PINK
	set Playercolor_LOOKUP[8] = PLAYER_COLOR_LIGHT_GRAY
	set Playercolor_LOOKUP[9] = PLAYER_COLOR_LIGHT_BLUE
	set Playercolor_LOOKUP[10] = PLAYER_COLOR_AQUA
	set Playercolor_LOOKUP[11] = PLAYER_COLOR_BROWN
	set Playercolor_LOOKUP[12] = PLAYER_COLOR_MAROON
	set Playercolor_LOOKUP[13] = PLAYER_COLOR_NAVY
	set Playercolor_LOOKUP[14] = PLAYER_COLOR_TURQUOISE
	set Playercolor_LOOKUP[15] = PLAYER_COLOR_VIOLET
	set Playercolor_LOOKUP[16] = PLAYER_COLOR_WHEAT
	set Playercolor_LOOKUP[17] = PLAYER_COLOR_PEACH
	set Playercolor_LOOKUP[18] = PLAYER_COLOR_MINT
	set Playercolor_LOOKUP[19] = PLAYER_COLOR_LAVENDER
	set Playercolor_LOOKUP[20] = PLAYER_COLOR_COAL
	set Playercolor_LOOKUP[21] = PLAYER_COLOR_SNOW
	set Playercolor_LOOKUP[22] = PLAYER_COLOR_EMERALD
	set Playercolor_LOOKUP[23] = PLAYER_COLOR_PEANUT
	set Playercolor_LOOKUP[24] = Playercolor_PLAYER_COLOR_BLACK_AGGRESSIVE
	set Playercolor_LOOKUP[25] = Playercolor_PLAYER_COLOR_UNKNOWN1
	set Playercolor_LOOKUP[26] = Playercolor_PLAYER_COLOR_UNKNOWN2
	set Playercolor_LOOKUP[27] = Playercolor_PLAYER_COLOR_BLACK_PASSIVE
	return true
endfunction

function init_Printing takes nothing returns boolean
	return true
endfunction

function init_Quaternion takes nothing returns boolean
	return true
endfunction

function init_Real takes nothing returns boolean
	return true
endfunction

function init_Sounds takes nothing returns boolean
	return true
endfunction

function init_Soundsets takes nothing returns boolean
	return true
endfunction

function init_String takes nothing returns boolean
	local string this_3 = "0123456789"
	local string this_4
	call StringLength(this_3)
	set this_4 = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
	call StringLength(this_4)
	return true
endfunction

function init_Strings takes nothing returns boolean
	set Strings_ksWarningWE[0] = "God save us! Terrible news, my lord!"
	set Strings_ksWarningWE[1] = "The messenger came to us with horrific news! May we execute him?"
	set Strings_ksWarningWE[2] = "A mere nightmare, Your Mightiness!"
	set Strings_ksWarningEE[0] = "Great Prince, we have horrific news!"
	set Strings_ksWarningEE[1] = "The God is angry, Great Prince!"
	set Strings_ksWarningEE[2] = "Great Prince, we have horrific news!"
	set Strings_ksWarningME[0] = "Oh, Great Caliph! We have terrible news"
	set Strings_ksWarningME[1] = "Oh, Great Caliph! We have terrible news"
	set Strings_ksWarningME[2] = "Oh, Great Caliph! We have terrible news"
	set Strings_ksWarningBZ[0] = "My Basileus, may the God bless you. We have horrific news!"
	set Strings_ksWarningBZ[1] = "My Basileus, may the God bless you. We have horrific news!"
	set Strings_ksWarningBZ[2] = "My Basileus, may the God bless you. We have horrific news!"
	set Strings_ksNoteWE[0] = "Your Majesty, there is something you need to know"
	set Strings_ksNoteWE[1] = "The messenger came to us with news. No matter, could I execute him?"
	set Strings_ksNoteWE[2] = "Fresh news from the messenger, milord!"
	set Strings_ksNoteEE[0] = "Great Prince, a messenger came with news"
	set Strings_ksNoteEE[1] = "May the God bless you, Great Prince, we have some news"
	set Strings_ksNoteEE[2] = "There is something you should know, Great Prince"
	set Strings_ksNoteME[0] = "May Allah bless you, Caliph! We have some news"
	set Strings_ksNoteME[1] = "May Allah bless you, Caliph! We have some news"
	set Strings_ksNoteME[2] = "May Allah bless you, Caliph! We have some news"
	set Strings_ksNoteBZ[0] = "My Basileus, we have some news"
	set Strings_ksNoteBZ[1] = "My Basileus, we have some news"
	set Strings_ksNoteBZ[2] = "My Basileus, we have some news"
	set Strings_ksGoodNewsWE[0] = "Good news indeed, my lord!"
	set Strings_ksGoodNewsWE[1] = "The God has blessed us, Your Majesty! We have good news"
	set Strings_ksGoodNewsWE[2] = "The messenger with good news came to us. May I torture him a little?"
	set Strings_ksGoodNewsEE[0] = "Great news, Prince!"
	set Strings_ksGoodNewsEE[1] = "Great news, Prince!"
	set Strings_ksGoodNewsEE[2] = "Great news, Prince!"
	set Strings_ksGoodNewsME[0] = "The Allah loves us, Caliph! We have great news"
	set Strings_ksGoodNewsME[1] = "The Allah loves us, Caliph! We have great news"
	set Strings_ksGoodNewsME[2] = "The Allah loves us, Caliph! We have great news"
	set Strings_ksGoodNewsBZ[0] = "Good news, my Basileus!"
	set Strings_ksGoodNewsBZ[1] = "Good news, my Basileus!"
	set Strings_ksGoodNewsBZ[2] = "Good news, my Basileus!"
	set Strings_ksAttentionWE[0] = "Your Majesty, important news!"
	set Strings_ksAttentionWE[1] = "May the God bless you, my lord. There is somthing you must know!"
	set Strings_ksAttentionWE[2] = "There is something that needs your attention, my lord!"
	set Strings_ksAttentionEE[0] = "You need to see this, Great Prince!"
	set Strings_ksAttentionEE[1] = "You need to see this, Great Prince!"
	set Strings_ksAttentionEE[2] = "You need to see this, Great Prince!"
	set Strings_ksAttentionME[0] = "My Caliph, there is something you need to know!"
	set Strings_ksAttentionME[1] = "My Caliph, there is something you need to know!"
	set Strings_ksAttentionME[2] = "My Caliph, there is something you need to know!"
	set Strings_ksAttentionBZ[0] = "My Basileus, there is something you need to know!"
	set Strings_ksAttentionBZ[1] = "My Basileus, there is something you need to know!"
	set Strings_ksAttentionBZ[2] = "My Basileus, there is something you need to know!"
	return true
endfunction

function init_Table takes nothing returns boolean
	set Table_ht = InitHashtable()
	return true
endfunction

function init_TargetsAllowed takes nothing returns boolean
	return true
endfunction

function init_Textures takes nothing returns boolean
	return true
endfunction

function init_UI takes nothing returns boolean
	return true
endfunction

function init_UnitIds takes nothing returns boolean
	return true
endfunction

function init_UnitIndexer takes nothing returns boolean
	local code c
	local trigger this_3
	local boolexpr condition
	local code c_2
	local trigger this_4
	local code actionFunc
	set UnitIndexer_onIndexTrigger = CreateTrigger()
	set UnitIndexer_onDeindexTrigger = CreateTrigger()
	set UnitIndexer_indexedUnit = null
	set UnitIndexer_deindexedUnit = null
	set c = ref_function_bridge_UnitIndexer_closure_impl
	set this_3 = OnUnitEnterLeave_eventTrigger
	set condition = Filter(c)
	call TriggerAddCondition(this_3, condition)
	set c_2 = ref_function_bridge_UnitIndexer_closure_impl_2
	set this_4 = OnUnitEnterLeave_eventTrigger
	set actionFunc = c_2
	call TriggerAddAction(this_4, actionFunc)
	set this_3 = null
	set condition = null
	set this_4 = null
	return true
endfunction

function init_Vectors takes nothing returns boolean
	call Location(0., 0.)
	return true
endfunction

function init_WeatherEffects takes nothing returns boolean
	return true
endfunction

function initGlobals takes nothing returns nothing
	set udg_Supplyhorses = null
	set udg_Temp_Point = null
	set udg_AllPlayerUnits = null
	set udg_ConvertPoint = null
	set udg_ConvertPoint2 = null
	set udg_GHoriTP = null
	set udg_GVertRP = null
	set udg_GHoriDetectCenter = null
	set udg_GVertDetectCenter = null
	set udg_GateMovingUnits1 = null
	set udg_BuildingRangeCheck = null
	set udg_BuildingRangeCheckPoint = null
	set udg_Supplyhorses2 = null
	set udg_TradePoint = null
	set gg_rct_SHIP_Lower_Nile = null
	set gg_rct_SHIP_Nile_2 = null
	set gg_rct_SHIP_Upper_Nile = null
	set gg_rct_SHIP_Thames = null
	set gg_rct_CITY_WE_Burgh = null
	set gg_rct_CITY_WE_Cardiff = null
	set gg_rct_CITY_WE_Galway = null
	set gg_rct_CITY_WE_Zagreb = null
	set gg_rct_CITY_WE_Ragusa = null
	set gg_rct_CITY_BYZ_Durrazo = null
	set gg_rct_CITY_BYZ_Adrianopolis = null
	set gg_rct_CITY_Byz_Thessalonika = null
	set gg_rct_CITY_BYZ_Constantinople = null
	set gg_rct_CITY_WE_Warwick = null
	set gg_rct_CITY_BYZ_Scopia = null
	set gg_rct_CITY_WE_Vienna = null
	set gg_rct_CITY_WE_Prague = null
	set gg_rct_CITY_WE_Esztergom = null
	set gg_rct_CITY_WE_Stettin = null
	set gg_rct_CITY_WE_Krakow = null
	set gg_rct_CITY_WE_Wroclaw = null
	set gg_rct_CITY_EE_Constanta = null
	set gg_rct_CITY_EE_Targoviste = null
	set gg_rct_CITY_WE_Brasov = null
	set gg_rct_CITY_WE_Belgrade = null
	set gg_rct_CITY_WE_Flensburg = null
	set gg_rct_CITY_WE_Roskilde = null
	set gg_rct_CITY_WE_Aarhus = null
	set gg_rct_CITY_WE_Madgeburg = null
	set gg_rct_CITY_EE_Sofia = null
	set gg_rct_CITY_WE_Plock = null
	set gg_rct_CITY_WE_Poznan = null
	set gg_rct_CITY_WE_Kassa = null
	set gg_rct_CITY_WE_Varad = null
	set gg_rct_CITY_EE_Konigsberg = null
	set gg_rct_CITY_EE_Riga = null
	set gg_rct_CITY_WE_Fictional_2 = null
	set gg_rct_CITY_EE_Hrodna = null
	set gg_rct_CITY_EE_Vilnius = null
	set gg_rct_CITY_EE_Caffa = null
	set gg_rct_CITY_EE_Pskov = null
	set gg_rct_CITY_EE_Reval = null
	set gg_rct_CITY_EE_Novgorod = null
	set gg_rct_CITY_EE_Polotsk = null
	set gg_rct_SHIP_Seine_River = null
	set gg_rct_SHIP_French_River = null
	set gg_rct_SHIP_Spannish_River = null
	set gg_rct_SHIP_Spannish_River_2 = null
	set gg_rct_SHIP_Spannish_River_3 = null
	set gg_rct_SHIP_Spannish_River_4 = null
	set gg_rct_SHIP_Danube_1 = null
	set gg_rct_SHIP_Danube_2 = null
	set gg_rct_SHIP_Swedish_Lake = null
	set gg_rct_CITY_EE_Halych = null
	set gg_rct_SHIP_River = null
	set gg_rct_SHIP_Region_Giant = null
	set gg_rct_SHIP_River_GIANT = null
	set gg_rct_CITY_WE_Groningen = null
	set gg_rct_CITY_ME_Tunis = null
	set gg_rct_CITY_EE_Azaq = null
	set gg_rct_CITY_EE_Kiev = null
	set gg_rct_CITY_EE_Minsk = null
	set gg_rct_CITY_EE_Smolensk = null
	set gg_rct_SHIP_Caspian_Sea_and_Mesapotamia = null
	set gg_rct_CITY_ME_Sinop = null
	set gg_rct_CITY_ME_Isparta = null
	set gg_rct_CITY_ME_Kayseri = null
	set gg_rct_CITY_ME_Adana = null
	set gg_rct_CITY_ME_Konya = null
	set gg_rct_CITY_ME_Antioch = null
	set gg_rct_CITY_BYZ_Trebizond = null
	set gg_rct_CITY_BYZ_Nicosia = null
	set gg_rct_CITY_ME_JERUSALEM = null
	set gg_rct_CITY_ME_Edessa = null
	set gg_rct_CITY_BYZ_Smyrna = null
	set gg_rct_CITY_ME_Ankara = null
	set gg_rct_CITY_BYZ_Nicae = null
	set gg_rct_CITY_ME_Fes = null
	set gg_rct_CITY_ME_Oran = null
	set gg_rct_CITY_ME_Algiers = null
	set gg_rct_CITY_ME_Mahdya = null
	set gg_rct_CITY_ME_Tripoli = null
	set gg_rct_CITY_ME_Benghazi = null
	set gg_rct_SHIP_Lake_Egypt = null
	set gg_rct_CITY_ME_Medina = null
	set gg_rct_CITY_ME_Alexandria = null
	set gg_rct_CITY_ME_Damietta = null
	set gg_rct_CITY_ME_Cairo = null
	set gg_rct_CITY_EE_Timutarakan = null
	set gg_rct_CITY_EE_Baia = null
	set gg_rct_CITY_EE_Zhytomyr = null
	set gg_rct_CITY_EE_Oleshe = null
	set gg_rct_CITY_EE_Dnipro = null
	set gg_rct_CITY_EE_Moscow = null
	set gg_rct_CITY_EE_Bryansk = null
	set gg_rct_CITY_ME_Yerevan = null
	set gg_rct_CITY_EE_Sarkel = null
	set gg_rct_CITY_BYZ_Kutaisi = null
	set gg_rct_CITY_BYZ_Tbilisi = null
	set gg_rct_CITY_ME_Damascus = null
	set gg_rct_CITY_ME_Tartus = null
	set gg_rct_CITY_ME_Gaza = null
	set gg_rct_CITY_ME_Mosul = null
	set gg_rct_CITY_ME_Acre = null
	set gg_rct_CITY_ME_Al_Aqaba = null
	set gg_rct_CITY_ME_Quarisiya = null
	set gg_rct_CITY_ME_Tamiya = null
	set gg_rct_CITY_ME_Diyarbakir = null
	set gg_rct_CITY_ME_Erez = null
	set gg_rct_SHIP_Lake_Africa = null
	set gg_rct_SHIP_Mesapotamia = null
	set gg_rct_SHIP_Ankara_Lake = null
	set gg_rct_SHIP_Italy = null
	set gg_rct_CITY_WE_Salzburg = null
	set gg_rct_CITY_WE_Innsbruck = null
	set gg_rct_CITY_WE_Cologne = null
	set gg_rct_CITY_WE_Frankfurt = null
	set gg_rct_Hamburg_CITY = null
	set gg_rct_CITY_ME_Palma = null
	set gg_rct_CITY_EE_Astrakhan = null
	set gg_rct_CITY_EE_Ryazan = null
	set gg_rct_CITY_WE_Edinburgh = null
	set gg_rct_CITY_WE_Aberdeen = null
	set gg_rct_CITY_WE_Inverness = null
	set gg_rct_CITY_WE_York = null
	set gg_rct_CITY_WE_Dublin = null
	set gg_rct_CITY_WE_Ireland = null
	set gg_rct_CITY_WE_Caernarfon = null
	set gg_rct_CITY_WE_London = null
	set gg_rct_CITY_WE_Winchester = null
	set gg_rct_CITY_WE_Exeter = null
	set gg_rct_CITY_WE_Caen = null
	set gg_rct_CITY_WE_Rheims = null
	set gg_rct_CITY_WE_Paris = null
	set gg_rct_CITY_WE_Dijon = null
	set gg_rct_CITY_WE_Clermont = null
	set gg_rct_CITY_WE_Toulouse = null
	set gg_rct_CITY_WE_Bordeaux = null
	set gg_rct_CITY_WE_Zaragoza = null
	set gg_rct_CITY_WE_Barcelona = null
	set gg_rct_CITY_WE_Leon = null
	set gg_rct_CITY_WE_Burgos = null
	set gg_rct_CITY_ME_Madrid = null
	set gg_rct_CITY_WE_Salamanca = null
	set gg_rct_CITY_ME_Lisbon = null
	set gg_rct_CITY_WE_Pamplona = null
	set gg_rct_CITY_WE_Marseille = null
	set gg_rct_CITY_WE_Bruges = null
	set gg_rct_CITY_WE_Antwerp = null
	set gg_rct_CITY_WE_Genoa = null
	set gg_rct_CITY_WE_Milan = null
	set gg_rct_CITY_WE_Venice = null
	set gg_rct_CITY_WE_Bologna = null
	set gg_rct_CITY_WE_Pisa = null
	set gg_rct_CITY_WE_Ancona = null
	set gg_rct_CITY_WE_Rome = null
	set gg_rct_CITY_ME_Granada = null
	set gg_rct_CITY_ME_Cordoba = null
	set gg_rct_CITY_ME_Murcia = null
	set gg_rct_CITY_ME_Valencia = null
	set gg_rct_CITY_WE_Nuremburg = null
	set gg_rct_CITY_WE_Bern = null
	set gg_rct_CITY_WE_Lyon = null
	set gg_rct_CITY_WE_Lund = null
	set gg_rct_CITY_WE_Skara = null
	set gg_rct_CITY_WE_Oslo = null
	set gg_rct_CITY_WE_Eikundarsund = null
	set gg_rct_CITY_WE_Bergen = null
	set gg_rct_CITY_WE_Visby = null
	set gg_rct_CITY_WE_Nykoping = null
	set gg_rct_CITY_ME_Silves = null
	set gg_rct_CITY_ME_Marakesh = null
	set gg_rct_CITY_ME_Luxor = null
	set gg_rct_CITY_WE_Rennes = null
	set gg_rct_CITY_WE_Angers = null
	set gg_rct_CITY_WE_Ajaccio = null
	set gg_rct_CITY_WE_Cagliari = null
	set gg_rct_CITY_WE_Naples = null
	set gg_rct_CITY_WE_Italy = null
	set gg_rct_CITY_WE_Bari = null
	set gg_rct_CITY_WE_Palermo = null
	set gg_rct_CITY_WE_Syracuse = null
	set gg_rct_CITY_WE_Metz = null
	set gg_rct_CITY_BYZ_Balkan = null
	set gg_rct_CITY_BYZ_Athens = null
	set gg_rct_CITY_BYZ_Rhodes = null
	set gg_rct_CITY_EE_Turku = null
	set gg_rct_CITY_BYZ_Fictional = null
	set gg_rct_CITY_ME_Badajoz = null
	set gg_rct_CITY_WE_Oporto = null
	set gg_rct_CITY_WE_Stockholm = null
	set gg_rct_CITY_WE_Kalmar = null
	set gg_rct_CITY_BYZ_Corinth = null
	set gg_rct_CITY_BYZ_Arta = null
	set gg_rct_CITY_BYZ_Candia = null
	set gg_rct_CITY_ME_Kerak = null
	set gg_rct_CITY_ME_Baghdad = null
	set gg_rct_CITY_BYZ_Canakkale = null
	set gg_rct_CITY_EE_Russia = null
	set gg_rct_CITY_WE_Budapest = null
	set gg_snd_Warning = null
	set gg_trg_Melee_Initialization = null
	set gg_trg_F9 = null
	set gg_trg_Capturing_Ore_15g = null
	set gg_trg_Capturing_Ore_25g = null
	set gg_trg_Capturing_Ore_40g = null
	set gg_trg_Capturing_Ore_50g = null
	set gg_trg_upkeep = null
	set gg_trg_upkeep_2 = null
	set gg_trg_Trebuchet_Dies = null
	set gg_trg_Spy_Sabotage_on_buildings = null
	set gg_trg_Convert_V2 = null
	set gg_trg_Gate_Opening = null
	set gg_trg_Gate_Closing_WoodGate_V = null
	set gg_trg_Gate_Closing_WoodGate_H = null
	set gg_trg_Gate_Closing_IronGate_V = null
	set gg_trg_Gate_Closing_IronGate_H = null
	set gg_trg_Supply_Horses = null
	set gg_trg_Supply_Horse_2 = null
	set gg_trg_Lumber_Horse_250 = null
	set gg_trg_Lumber_Horse_500 = null
	set gg_trg_Gold_Horse_250 = null
	set gg_trg_Gold_Horse_500 = null
	set gg_trg_Killing_trading_horse_l250 = null
	set gg_trg_Killing_trading_horse_l500 = null
	set gg_trg_Killing_trading_horse_g250 = null
	set gg_trg_Killing_trading_horse_g500 = null
	set gg_trg_Trading_Lumber_Ship = null
	set gg_trg_Trading_Gold_Ship = null
	set gg_trg_Trade = null
	set gg_trg_killing_Gold_Ship = null
	set gg_trg_killing_Lumber_Ship = null
	set gg_trg_FarmHouse = null
	set gg_trg_Thatched_Cottage_1 = null
	set gg_trg_Thatched_Cottage_2 = null
	set gg_trg_Thatched_Cottage_3 = null
	set gg_trg_Thatched_Cottage_4 = null
	set gg_trg_Spearmen_1 = null
	set gg_trg_Spearmen_2 = null
	set gg_trg_Heavy_Infantry_1 = null
	set gg_trg_Heavy_Infantry_2 = null
	set gg_trg_Archer_1 = null
	set gg_trg_Archer_2 = null
	set gg_trg_Light_Infantry_1 = null
	set gg_trg_Light_Infantry_2 = null
	set gg_trg_Pikemen_1 = null
	set gg_trg_Pikemen_2 = null
	set gg_trg_Light_Cavalry_1 = null
	set gg_trg_Light_Cavalry_2 = null
	set gg_trg_Heavy_Cavalry_1 = null
	set gg_trg_Heavy_Cavalry_2 = null
	set gg_trg_Skirmisher = null
	set gg_trg_Arquebusers = null
	set gg_trg_Supply_Horse = null
	set gg_trg_Disabled_units_at_beginning = null
	set gg_trg_FarmHouse_Byzantine = null
	set gg_trg_Thatched_Cottage_1_Byz = null
	set gg_trg_Thatched_Cottage_2_Byz = null
	set gg_trg_Thatched_Cottage_3_Byz = null
	set gg_trg_Spearmen_1_Byzantine = null
	set gg_trg_Spearmen_2_Byzantine = null
	set gg_trg_Heavy_Infantry_1_Byzantine = null
	set gg_trg_Heavy_Infantry_2_Byzantine = null
	set gg_trg_Archer_1_Byzantine = null
	set gg_trg_Archer_2_Byzantine = null
	set gg_trg_Light_Cavalry_1_Byzantine = null
	set gg_trg_Heavy_Cavalry_1_Byzantine = null
	set gg_trg_Heavy_Cavalry_2_Byzantine = null
	set gg_trg_Skirmisher_Byzantine = null
	set gg_trg_Missile_Cavalry_Byzantine = null
	set gg_trg_Disabled_units_Byzantine = null
	set gg_trg_ME_Spearmen_1 = null
	set gg_trg_ME_Spearmen_2 = null
	set gg_trg_ME_Archer_1 = null
	set gg_trg_ME_Archer_2 = null
	set gg_trg_ME_Light_Infantry_1 = null
	set gg_trg_ME_Light_Infantry_2 = null
	set gg_trg_ME_Light_Cavalry_1 = null
	set gg_trg_ME_Light_Cavalry_2 = null
	set gg_trg_ME_Heavy_Cavalry_1 = null
	set gg_trg_ME_Heavy_Cavalry_2 = null
	set gg_trg_ME_Skirmisher = null
	set gg_trg_ME_Missile_Cavalry = null
	set gg_trg_Disabled_units_ME = null
	set gg_trg_Structures_finishes = null
	set gg_trg_Settle = null
	set gg_trg_Settlement_Range_Check = null
	set gg_trg_Church_Range_Check = null
	set gg_trg_Settlement_Aura = null
	set gg_trg_Capitol_City_Hall_Up_Copy = null
	set gg_trg_Capitol_Castle_T3 = null
	set gg_trg_University_Unrest_Reduction_75 = null
	set gg_trg_Cathedral_Unrest_Reduction_100 = null
	set gg_trg_Inn_Unrest_Reduction_10 = null
	set gg_trg_Church_Unrest_Reduction_50 = null
	set ref_function_Trig_F9_Actions = function Trig_F9_Actions
	set ref_function_Trig_Capturing_Ore_15g_Conditions = function Trig_Capturing_Ore_15g_Conditions
	set ref_function_Trig_Capturing_Ore_15g_Actions = function Trig_Capturing_Ore_15g_Actions
	set ref_function_Trig_Capturing_Ore_25g_Conditions = function Trig_Capturing_Ore_25g_Conditions
	set ref_function_Trig_Capturing_Ore_25g_Actions = function Trig_Capturing_Ore_25g_Actions
	set ref_function_Trig_Capturing_Ore_40g_Conditions = function Trig_Capturing_Ore_40g_Conditions
	set ref_function_Trig_Capturing_Ore_40g_Actions = function Trig_Capturing_Ore_40g_Actions
	set ref_function_Trig_Capturing_Ore_50g_Conditions = function Trig_Capturing_Ore_50g_Conditions
	set ref_function_Trig_Capturing_Ore_50g_Actions = function Trig_Capturing_Ore_50g_Actions
	set ref_function_Trig_upkeep_Conditions = function Trig_upkeep_Conditions
	set ref_function_Trig_upkeep_Actions = function Trig_upkeep_Actions
	set ref_function_Trig_upkeep_2_Conditions = function Trig_upkeep_2_Conditions
	set ref_function_Trig_upkeep_2_Actions = function Trig_upkeep_2_Actions
	set ref_function_Trig_Trebuchet_Dies_Conditions = function Trig_Trebuchet_Dies_Conditions
	set ref_function_Trig_Trebuchet_Dies_Actions = function Trig_Trebuchet_Dies_Actions
	set ref_function_Trig_Spy_Sabotage_on_buildings_Conditions = function Trig_Spy_Sabotage_on_buildings_Conditions
	set ref_function_Trig_Spy_Sabotage_on_buildings_Actions = function Trig_Spy_Sabotage_on_buildings_Actions
	set ref_function_Trig_Convert_V2_Conditions = function Trig_Convert_V2_Conditions
	set ref_function_Trig_Convert_V2_Actions = function Trig_Convert_V2_Actions
	set ref_function_Trig_Gate_Opening_Actions = function Trig_Gate_Opening_Actions
	set ref_function_Trig_Gate_Closing_WoodGate_V_Func005A = function Trig_Gate_Closing_WoodGate_V_Func005A
	set ref_function_Trig_Gate_Closing_WoodGate_V_Conditions = function Trig_Gate_Closing_WoodGate_V_Conditions
	set ref_function_Trig_Gate_Closing_WoodGate_V_Actions = function Trig_Gate_Closing_WoodGate_V_Actions
	set ref_function_Trig_Gate_Closing_WoodGate_H_Func005A = function Trig_Gate_Closing_WoodGate_H_Func005A
	set ref_function_Trig_Gate_Closing_WoodGate_H_Conditions = function Trig_Gate_Closing_WoodGate_H_Conditions
	set ref_function_Trig_Gate_Closing_WoodGate_H_Actions = function Trig_Gate_Closing_WoodGate_H_Actions
	set ref_function_Trig_Gate_Closing_IronGate_V_Func005A = function Trig_Gate_Closing_IronGate_V_Func005A
	set ref_function_Trig_Gate_Closing_IronGate_V_Conditions = function Trig_Gate_Closing_IronGate_V_Conditions
	set ref_function_Trig_Gate_Closing_IronGate_V_Actions = function Trig_Gate_Closing_IronGate_V_Actions
	set ref_function_Trig_Gate_Closing_IronGate_H_Func005A = function Trig_Gate_Closing_IronGate_H_Func005A
	set ref_function_Trig_Gate_Closing_IronGate_H_Conditions = function Trig_Gate_Closing_IronGate_H_Conditions
	set ref_function_Trig_Gate_Closing_IronGate_H_Actions = function Trig_Gate_Closing_IronGate_H_Actions
	set ref_function_Trig_Supply_Horses_Func002A = function Trig_Supply_Horses_Func002A
	set ref_function_Trig_Supply_Horses_Actions = function Trig_Supply_Horses_Actions
	set ref_function_Trig_Supply_Horse_2_Func002A = function Trig_Supply_Horse_2_Func002A
	set ref_function_Trig_Supply_Horse_2_Actions = function Trig_Supply_Horse_2_Actions
	set ref_function_Trig_Lumber_Horse_250_Conditions = function Trig_Lumber_Horse_250_Conditions
	set ref_function_Trig_Lumber_Horse_250_Actions = function Trig_Lumber_Horse_250_Actions
	set ref_function_Trig_Lumber_Horse_500_Conditions = function Trig_Lumber_Horse_500_Conditions
	set ref_function_Trig_Lumber_Horse_500_Actions = function Trig_Lumber_Horse_500_Actions
	set ref_function_Trig_Gold_Horse_250_Conditions = function Trig_Gold_Horse_250_Conditions
	set ref_function_Trig_Gold_Horse_250_Actions = function Trig_Gold_Horse_250_Actions
	set ref_function_Trig_Gold_Horse_500_Conditions = function Trig_Gold_Horse_500_Conditions
	set ref_function_Trig_Gold_Horse_500_Actions = function Trig_Gold_Horse_500_Actions
	set ref_function_Trig_Killing_trading_horse_l250_Conditions = function Trig_Killing_trading_horse_l250_Conditions
	set ref_function_Trig_Killing_trading_horse_l250_Actions = function Trig_Killing_trading_horse_l250_Actions
	set ref_function_Trig_Killing_trading_horse_l500_Conditions = function Trig_Killing_trading_horse_l500_Conditions
	set ref_function_Trig_Killing_trading_horse_l500_Actions = function Trig_Killing_trading_horse_l500_Actions
	set ref_function_Trig_Killing_trading_horse_g250_Conditions = function Trig_Killing_trading_horse_g250_Conditions
	set ref_function_Trig_Killing_trading_horse_g250_Actions = function Trig_Killing_trading_horse_g250_Actions
	set ref_function_Trig_Killing_trading_horse_g500_Conditions = function Trig_Killing_trading_horse_g500_Conditions
	set ref_function_Trig_Killing_trading_horse_g500_Actions = function Trig_Killing_trading_horse_g500_Actions
	set ref_function_Trig_Trading_Lumber_Ship_Conditions = function Trig_Trading_Lumber_Ship_Conditions
	set ref_function_Trig_Trading_Lumber_Ship_Actions = function Trig_Trading_Lumber_Ship_Actions
	set ref_function_Trig_Trading_Gold_Ship_Conditions = function Trig_Trading_Gold_Ship_Conditions
	set ref_function_Trig_Trading_Gold_Ship_Actions = function Trig_Trading_Gold_Ship_Actions
	set ref_function_Trig_killing_Gold_Ship_Conditions = function Trig_killing_Gold_Ship_Conditions
	set ref_function_Trig_killing_Gold_Ship_Actions = function Trig_killing_Gold_Ship_Actions
	set ref_function_Trig_killing_Lumber_Ship_Conditions = function Trig_killing_Lumber_Ship_Conditions
	set ref_function_Trig_killing_Lumber_Ship_Actions = function Trig_killing_Lumber_Ship_Actions
	set ref_function_Trig_FarmHouse_Conditions = function Trig_FarmHouse_Conditions
	set ref_function_Trig_FarmHouse_Actions = function Trig_FarmHouse_Actions
	set ref_function_Trig_Thatched_Cottage_1_Conditions = function Trig_Thatched_Cottage_1_Conditions
	set ref_function_Trig_Thatched_Cottage_1_Actions = function Trig_Thatched_Cottage_1_Actions
	set ref_function_Trig_Thatched_Cottage_2_Conditions = function Trig_Thatched_Cottage_2_Conditions
	set ref_function_Trig_Thatched_Cottage_2_Actions = function Trig_Thatched_Cottage_2_Actions
	set ref_function_Trig_Thatched_Cottage_3_Conditions = function Trig_Thatched_Cottage_3_Conditions
	set ref_function_Trig_Thatched_Cottage_3_Actions = function Trig_Thatched_Cottage_3_Actions
	set ref_function_Trig_Thatched_Cottage_4_Conditions = function Trig_Thatched_Cottage_4_Conditions
	set ref_function_Trig_Thatched_Cottage_4_Actions = function Trig_Thatched_Cottage_4_Actions
	set ref_function_Trig_Spearmen_1_Conditions = function Trig_Spearmen_1_Conditions
	set ref_function_Trig_Spearmen_1_Actions = function Trig_Spearmen_1_Actions
	set ref_function_Trig_Spearmen_2_Conditions = function Trig_Spearmen_2_Conditions
	set ref_function_Trig_Spearmen_2_Actions = function Trig_Spearmen_2_Actions
	set ref_function_Trig_Heavy_Infantry_1_Conditions = function Trig_Heavy_Infantry_1_Conditions
	set ref_function_Trig_Heavy_Infantry_1_Actions = function Trig_Heavy_Infantry_1_Actions
	set ref_function_Trig_Heavy_Infantry_2_Conditions = function Trig_Heavy_Infantry_2_Conditions
	set ref_function_Trig_Heavy_Infantry_2_Actions = function Trig_Heavy_Infantry_2_Actions
	set ref_function_Trig_Archer_1_Conditions = function Trig_Archer_1_Conditions
	set ref_function_Trig_Archer_1_Actions = function Trig_Archer_1_Actions
	set ref_function_Trig_Archer_2_Conditions = function Trig_Archer_2_Conditions
	set ref_function_Trig_Archer_2_Actions = function Trig_Archer_2_Actions
	set ref_function_Trig_Light_Infantry_1_Conditions = function Trig_Light_Infantry_1_Conditions
	set ref_function_Trig_Light_Infantry_1_Actions = function Trig_Light_Infantry_1_Actions
	set ref_function_Trig_Light_Infantry_2_Conditions = function Trig_Light_Infantry_2_Conditions
	set ref_function_Trig_Light_Infantry_2_Actions = function Trig_Light_Infantry_2_Actions
	set ref_function_Trig_Pikemen_1_Conditions = function Trig_Pikemen_1_Conditions
	set ref_function_Trig_Pikemen_1_Actions = function Trig_Pikemen_1_Actions
	set ref_function_Trig_Pikemen_2_Conditions = function Trig_Pikemen_2_Conditions
	set ref_function_Trig_Pikemen_2_Actions = function Trig_Pikemen_2_Actions
	set ref_function_Trig_Light_Cavalry_1_Conditions = function Trig_Light_Cavalry_1_Conditions
	set ref_function_Trig_Light_Cavalry_1_Actions = function Trig_Light_Cavalry_1_Actions
	set ref_function_Trig_Light_Cavalry_2_Conditions = function Trig_Light_Cavalry_2_Conditions
	set ref_function_Trig_Light_Cavalry_2_Actions = function Trig_Light_Cavalry_2_Actions
	set ref_function_Trig_Heavy_Cavalry_1_Conditions = function Trig_Heavy_Cavalry_1_Conditions
	set ref_function_Trig_Heavy_Cavalry_1_Actions = function Trig_Heavy_Cavalry_1_Actions
	set ref_function_Trig_Heavy_Cavalry_2_Conditions = function Trig_Heavy_Cavalry_2_Conditions
	set ref_function_Trig_Heavy_Cavalry_2_Actions = function Trig_Heavy_Cavalry_2_Actions
	set ref_function_Trig_Skirmisher_Conditions = function Trig_Skirmisher_Conditions
	set ref_function_Trig_Skirmisher_Actions = function Trig_Skirmisher_Actions
	set ref_function_Trig_Arquebusers_Conditions = function Trig_Arquebusers_Conditions
	set ref_function_Trig_Arquebusers_Actions = function Trig_Arquebusers_Actions
	set ref_function_Trig_Supply_Horse_Conditions = function Trig_Supply_Horse_Conditions
	set ref_function_Trig_Supply_Horse_Actions = function Trig_Supply_Horse_Actions
	set ref_function_Trig_Disabled_units_at_beginning_Func002A = function Trig_Disabled_units_at_beginning_Func002A
	set ref_function_Trig_Disabled_units_at_beginning_Actions = function Trig_Disabled_units_at_beginning_Actions
	set ref_function_Trig_FarmHouse_Byzantine_Conditions = function Trig_FarmHouse_Byzantine_Conditions
	set ref_function_Trig_FarmHouse_Byzantine_Actions = function Trig_FarmHouse_Byzantine_Actions
	set ref_function_Trig_Thatched_Cottage_1_Byz_Conditions = function Trig_Thatched_Cottage_1_Byz_Conditions
	set ref_function_Trig_Thatched_Cottage_1_Byz_Actions = function Trig_Thatched_Cottage_1_Byz_Actions
	set ref_function_Trig_Thatched_Cottage_2_Byz_Conditions = function Trig_Thatched_Cottage_2_Byz_Conditions
	set ref_function_Trig_Thatched_Cottage_2_Byz_Actions = function Trig_Thatched_Cottage_2_Byz_Actions
	set ref_function_Trig_Thatched_Cottage_3_Byz_Conditions = function Trig_Thatched_Cottage_3_Byz_Conditions
	set ref_function_Trig_Thatched_Cottage_3_Byz_Actions = function Trig_Thatched_Cottage_3_Byz_Actions
	set ref_function_Trig_Spearmen_1_Byzantine_Conditions = function Trig_Spearmen_1_Byzantine_Conditions
	set ref_function_Trig_Spearmen_1_Byzantine_Actions = function Trig_Spearmen_1_Byzantine_Actions
	set ref_function_Trig_Spearmen_2_Byzantine_Conditions = function Trig_Spearmen_2_Byzantine_Conditions
	set ref_function_Trig_Spearmen_2_Byzantine_Actions = function Trig_Spearmen_2_Byzantine_Actions
	set ref_function_Trig_Heavy_Infantry_1_Byzantine_Conditions = function Trig_Heavy_Infantry_1_Byzantine_Conditions
	set ref_function_Trig_Heavy_Infantry_1_Byzantine_Actions = function Trig_Heavy_Infantry_1_Byzantine_Actions
	set ref_function_Trig_Heavy_Infantry_2_Byzantine_Conditions = function Trig_Heavy_Infantry_2_Byzantine_Conditions
	set ref_function_Trig_Heavy_Infantry_2_Byzantine_Actions = function Trig_Heavy_Infantry_2_Byzantine_Actions
	set ref_function_Trig_Archer_1_Byzantine_Conditions = function Trig_Archer_1_Byzantine_Conditions
	set ref_function_Trig_Archer_1_Byzantine_Actions = function Trig_Archer_1_Byzantine_Actions
	set ref_function_Trig_Archer_2_Byzantine_Conditions = function Trig_Archer_2_Byzantine_Conditions
	set ref_function_Trig_Archer_2_Byzantine_Actions = function Trig_Archer_2_Byzantine_Actions
	set ref_function_Trig_Light_Cavalry_1_Byzantine_Conditions = function Trig_Light_Cavalry_1_Byzantine_Conditions
	set ref_function_Trig_Light_Cavalry_1_Byzantine_Actions = function Trig_Light_Cavalry_1_Byzantine_Actions
	set ref_function_Trig_Heavy_Cavalry_1_Byzantine_Conditions = function Trig_Heavy_Cavalry_1_Byzantine_Conditions
	set ref_function_Trig_Heavy_Cavalry_1_Byzantine_Actions = function Trig_Heavy_Cavalry_1_Byzantine_Actions
	set ref_function_Trig_Heavy_Cavalry_2_Byzantine_Conditions = function Trig_Heavy_Cavalry_2_Byzantine_Conditions
	set ref_function_Trig_Heavy_Cavalry_2_Byzantine_Actions = function Trig_Heavy_Cavalry_2_Byzantine_Actions
	set ref_function_Trig_Skirmisher_Byzantine_Conditions = function Trig_Skirmisher_Byzantine_Conditions
	set ref_function_Trig_Skirmisher_Byzantine_Actions = function Trig_Skirmisher_Byzantine_Actions
	set ref_function_Trig_Missile_Cavalry_Byzantine_Conditions = function Trig_Missile_Cavalry_Byzantine_Conditions
	set ref_function_Trig_Missile_Cavalry_Byzantine_Actions = function Trig_Missile_Cavalry_Byzantine_Actions
	set ref_function_Trig_Disabled_units_Byzantine_Func002A = function Trig_Disabled_units_Byzantine_Func002A
	set ref_function_Trig_Disabled_units_Byzantine_Actions = function Trig_Disabled_units_Byzantine_Actions
	set ref_function_Trig_ME_Spearmen_1_Conditions = function Trig_ME_Spearmen_1_Conditions
	set ref_function_Trig_ME_Spearmen_1_Actions = function Trig_ME_Spearmen_1_Actions
	set ref_function_Trig_ME_Spearmen_2_Conditions = function Trig_ME_Spearmen_2_Conditions
	set ref_function_Trig_ME_Spearmen_2_Actions = function Trig_ME_Spearmen_2_Actions
	set ref_function_Trig_ME_Archer_1_Conditions = function Trig_ME_Archer_1_Conditions
	set ref_function_Trig_ME_Archer_1_Actions = function Trig_ME_Archer_1_Actions
	set ref_function_Trig_ME_Archer_2_Conditions = function Trig_ME_Archer_2_Conditions
	set ref_function_Trig_ME_Archer_2_Actions = function Trig_ME_Archer_2_Actions
	set ref_function_Trig_ME_Light_Infantry_1_Conditions = function Trig_ME_Light_Infantry_1_Conditions
	set ref_function_Trig_ME_Light_Infantry_1_Actions = function Trig_ME_Light_Infantry_1_Actions
	set ref_function_Trig_ME_Light_Infantry_2_Conditions = function Trig_ME_Light_Infantry_2_Conditions
	set ref_function_Trig_ME_Light_Infantry_2_Actions = function Trig_ME_Light_Infantry_2_Actions
	set ref_function_Trig_ME_Light_Cavalry_1_Conditions = function Trig_ME_Light_Cavalry_1_Conditions
	set ref_function_Trig_ME_Light_Cavalry_1_Actions = function Trig_ME_Light_Cavalry_1_Actions
	set ref_function_Trig_ME_Light_Cavalry_2_Conditions = function Trig_ME_Light_Cavalry_2_Conditions
	set ref_function_Trig_ME_Light_Cavalry_2_Actions = function Trig_ME_Light_Cavalry_2_Actions
	set ref_function_Trig_ME_Heavy_Cavalry_1_Conditions = function Trig_ME_Heavy_Cavalry_1_Conditions
	set ref_function_Trig_ME_Heavy_Cavalry_1_Actions = function Trig_ME_Heavy_Cavalry_1_Actions
	set ref_function_Trig_ME_Heavy_Cavalry_2_Conditions = function Trig_ME_Heavy_Cavalry_2_Conditions
	set ref_function_Trig_ME_Heavy_Cavalry_2_Actions = function Trig_ME_Heavy_Cavalry_2_Actions
	set ref_function_Trig_ME_Skirmisher_Conditions = function Trig_ME_Skirmisher_Conditions
	set ref_function_Trig_ME_Skirmisher_Actions = function Trig_ME_Skirmisher_Actions
	set ref_function_Trig_ME_Missile_Cavalry_Conditions = function Trig_ME_Missile_Cavalry_Conditions
	set ref_function_Trig_ME_Missile_Cavalry_Actions = function Trig_ME_Missile_Cavalry_Actions
	set ref_function_Trig_Disabled_units_ME_Func002A = function Trig_Disabled_units_ME_Func002A
	set ref_function_Trig_Disabled_units_ME_Actions = function Trig_Disabled_units_ME_Actions
	set ref_function_Trig_Structures_finishes_Actions = function Trig_Structures_finishes_Actions
	set ref_function_Trig_Settle_Func001002 = function Trig_Settle_Func001002
	set ref_function_Trig_Settle_Actions = function Trig_Settle_Actions
	set ref_function_Trig_Settlement_Range_Check_Func003A = function Trig_Settlement_Range_Check_Func003A
	set ref_function_Trig_Settlement_Range_Check_Conditions = function Trig_Settlement_Range_Check_Conditions
	set ref_function_Trig_Settlement_Range_Check_Actions = function Trig_Settlement_Range_Check_Actions
	set ref_function_Trig_Church_Range_Check_Func003A = function Trig_Church_Range_Check_Func003A
	set ref_function_Trig_Church_Range_Check_Conditions = function Trig_Church_Range_Check_Conditions
	set ref_function_Trig_Church_Range_Check_Actions = function Trig_Church_Range_Check_Actions
	set ref_function_Trig_Settlement_Aura_Conditions = function Trig_Settlement_Aura_Conditions
	set ref_function_Trig_Settlement_Aura_Actions = function Trig_Settlement_Aura_Actions
	set ref_function_Trig_Capitol_City_Hall_Up_Copy_Conditions = function Trig_Capitol_City_Hall_Up_Copy_Conditions
	set ref_function_Trig_Capitol_City_Hall_Up_Copy_Actions = function Trig_Capitol_City_Hall_Up_Copy_Actions
	set ref_function_Trig_Capitol_Castle_T3_Conditions = function Trig_Capitol_Castle_T3_Conditions
	set ref_function_Trig_Capitol_Castle_T3_Actions = function Trig_Capitol_Castle_T3_Actions
	set ref_function_Trig_University_Unrest_Reduction_75_Conditions = function Trig_University_Unrest_Reduction_75_Conditions
	set ref_function_Trig_University_Unrest_Reduction_75_Actions = function Trig_University_Unrest_Reduction_75_Actions
	set ref_function_Trig_Cathedral_Unrest_Reduction_100_Conditions = function Trig_Cathedral_Unrest_Reduction_100_Conditions
	set ref_function_Trig_Cathedral_Unrest_Reduction_100_Actions = function Trig_Cathedral_Unrest_Reduction_100_Actions
	set ref_function_Trig_Inn_Unrest_Reduction_10_Conditions = function Trig_Inn_Unrest_Reduction_10_Conditions
	set ref_function_Trig_Inn_Unrest_Reduction_10_Actions = function Trig_Inn_Unrest_Reduction_10_Actions
	set ref_function_Trig_Church_Unrest_Reduction_50_Conditions = function Trig_Church_Unrest_Reduction_50_Conditions
	set ref_function_Trig_Church_Unrest_Reduction_50_Actions = function Trig_Church_Unrest_Reduction_50_Actions
	set ref_function_Trig_Melee_Initialization_Actions = function Trig_Melee_Initialization_Actions
	set ref_function_Trig_Trade_Actions = function Trig_Trade_Actions
	set ref_function_init_Real = function init_Real
	set ref_function_init_Integer = function init_Integer
	set ref_function_init_String = function init_String
	set ref_function_init_Angle = function init_Angle
	set ref_function_init_Vectors = function init_Vectors
	set ref_function_init_Maths = function init_Maths
	set ref_function_init_Player = function init_Player
	set ref_function_init_Printing = function init_Printing
	set ref_function_init_Basics = function init_Basics
	set ref_function_init_GameTimer = function init_GameTimer
	set ref_function_init_MagicFunctions = function init_MagicFunctions
	set ref_function_init_ErrorHandling = function init_ErrorHandling
	set ref_function_init_Matrices = function init_Matrices
	set ref_function_init_Quaternion = function init_Quaternion
	set ref_function_init_Table = function init_Table
	set ref_function_init_Playercolor = function init_Playercolor
	set ref_function_bridge_init_Colors = function bridge_init_Colors
	set ref_function_init_Group = function init_Group
	set ref_function_init_Lightning = function init_Lightning
	set ref_function_init_WeatherEffects = function init_WeatherEffects
	set ref_function_bridge_init_TypeCasting = function bridge_init_TypeCasting
	set ref_function_init_Abilities = function init_Abilities
	set ref_function_init_AbilityIds = function init_AbilityIds
	set ref_function_init_Buildings = function init_Buildings
	set ref_function_bridge_init_City = function bridge_init_City
	set ref_function_init_ClosureForGroups = function init_ClosureForGroups
	set ref_function_bridge_init_LinkedList = function bridge_init_LinkedList
	set ref_function_init_MutliboardTools = function init_MutliboardTools
	set ref_function_init_HashList = function init_HashList
	set ref_function_bridge_init_EventHelper = function bridge_init_EventHelper
	set ref_function_bridge_init_RegisterEvents = function bridge_init_RegisterEvents
	set ref_function_bridge_init_TimerUtils = function bridge_init_TimerUtils
	set ref_function_init_ClosureTimers = function init_ClosureTimers
	set ref_function_init_TargetsAllowed = function init_TargetsAllowed
	set ref_function_init_Doodads = function init_Doodads
	set ref_function_init_Icons = function init_Icons
	set ref_function_init_Objects = function init_Objects
	set ref_function_init_Sounds = function init_Sounds
	set ref_function_init_Soundsets = function init_Soundsets
	set ref_function_init_Textures = function init_Textures
	set ref_function_init_UI = function init_UI
	set ref_function_bridge_init_Units = function bridge_init_Units
	set ref_function_init_UnitIds = function init_UnitIds
	set ref_function_init_MapBounds = function init_MapBounds
	set ref_function_bridge_init_DummyRecycler = function bridge_init_DummyRecycler
	set ref_function_bridge_init_StringUtils = function bridge_init_StringUtils
	set ref_function_init_ObjectIds = function init_ObjectIds
	set ref_function_bridge_init_Preloader = function bridge_init_Preloader
	set ref_function_bridge_init_ObjectIdGenerator = function bridge_init_ObjectIdGenerator
	set ref_function_bridge_init_OnUnitEnterLeave = function bridge_init_OnUnitEnterLeave
	set ref_function_init_UnitIndexer = function init_UnitIndexer
	set ref_function_bridge_init_ClosureEvents = function bridge_init_ClosureEvents
	set ref_function_init_MathTools = function init_MathTools
	set ref_function_init_Forces = function init_Forces
	set ref_function_init_Strings = function init_Strings
	set ref_function_bridge_init_Multiboards = function bridge_init_Multiboards
	set ref_function_init_PlayerStats = function init_PlayerStats
	set ref_function_init_Main = function init_Main
	set ref_function_bridge_init_CityManage = function bridge_init_CityManage
	set ref_function_init_Commands = function init_Commands
	set ref_function_bridge_init_Economy = function bridge_init_Economy
	set ref_function_bridge_init_DateTime = function bridge_init_DateTime
	set ref_function_init_Diplomacy = function init_Diplomacy
	set ref_function_init_Logarithm = function init_Logarithm
	set ref_function_bridge_init_MainInit = function bridge_init_MainInit
	set ref_function_bridge_init_MultiboardCityUpdate = function bridge_init_MultiboardCityUpdate
	set ref_function_bridge_init_NoShipsNearRivers = function bridge_init_NoShipsNearRivers
	set ref_function_init_OnPlayerLeave = function init_OnPlayerLeave
	set ref_function_CityManage_closure_impl = function CityManage_closure_impl_2
	set ref_function_bridge_onClick = function bridge_onClick
	set ref_function_bridge_CityManage_closure_impl = function bridge_CityManage_closure_impl_3
	set ref_function_CityManage_closure_impl_2 = function CityManage_closure_impl_3
	set ref_function_bridge_CityManage_closure_impl_2 = function bridge_CityManage_closure_impl_4
	set ref_function_CityManage_closure_impl_3 = function CityManage_closure_impl
	set ref_function_bridge_CityManage_closure_impl_3 = function bridge_CityManage_closure_impl_6
	set ref_function_bridge_CityManage_closure_impl_4 = function bridge_CityManage_closure_impl
	set ref_function_bridge_CityManage_closure_impl_5 = function bridge_CityManage_closure_impl_2
	set ref_function_CityManage_closure_impl_4 = function CityManage_closure_impl_4
	set ref_function_bridge_CityManage_closure_impl_6 = function bridge_CityManage_closure_impl_5
	set ref_function_Group_closure_impl = function Group_closure_impl
	set ref_function_bridge_EventListener_generalEventCallback = function bridge_EventListener_generalEventCallback
	set ref_function_ClosureEvents_closure_impl = function ClosureEvents_closure_impl
	set ref_function_bridge_ClosureEvents_closure_impl = function bridge_ClosureEvents_closure_impl_5
	set ref_function_bridge_ClosureEvents_closure_impl_2 = function bridge_ClosureEvents_closure_impl
	set ref_function_bridge_ClosureEvents_closure_impl_3 = function bridge_ClosureEvents_closure_impl_3
	set ref_function_bridge_ClosureEvents_closure_impl_4 = function bridge_ClosureEvents_closure_impl_2
	set ref_function_bridge_ClosureEvents_closure_impl_5 = function bridge_ClosureEvents_closure_impl_4
	set ref_function_bridge_ClosureForGroups_closure_impl = function bridge_ClosureForGroups_closure_impl
	set ref_function_bridge_CallbackPeriodic_staticCallback = function bridge_CallbackPeriodic_staticCallback
	set ref_function_bridge_CallbackSingle_closure_impl = function bridge_CallbackSingle_closure_impl
	set ref_function_cond = function cond_2
	set ref_function_bridge_action = function bridge_action_3
	set ref_function_cond_2 = function cond
	set ref_function_bridge_action_2 = function bridge_action
	set ref_function_GameTimer_closure_impl = function GameTimer_closure_impl
	set ref_function_Main_closure_impl = function Main_closure_impl
	set ref_function_CinematicTutorial = function CinematicTutorial
	set ref_function_bridge_action_3 = function bridge_action_2
	set ref_function_OnUnitEnterLeave_closure_impl = function OnUnitEnterLeave_closure_impl_2
	set ref_function_OnUnitEnterLeave_closure_impl_2 = function OnUnitEnterLeave_closure_impl_3
	set ref_function_OnUnitEnterLeave_closure_impl_3 = function OnUnitEnterLeave_closure_impl
	set ref_function_bridge_UnitIndexer_closure_impl = function bridge_UnitIndexer_closure_impl
	set ref_function_bridge_UnitIndexer_closure_impl_2 = function bridge_UnitIndexer_closure_impl_2
	set ref_function_bridge_RegisterEvents_closure_impl = function bridge_RegisterEvents_closure_impl
endfunction

function main takes nothing returns nothing
	local trigger initTrig
	local trigger trig
	local trigger trig_2
	call initGlobals()
	call SetCameraBounds(( - 30720.0) + GetCameraMargin(CAMERA_MARGIN_LEFT), ( - 30720.0) + GetCameraMargin(CAMERA_MARGIN_BOTTOM), 30720.0 - GetCameraMargin(CAMERA_MARGIN_RIGHT), 30720.0 - GetCameraMargin(CAMERA_MARGIN_TOP), ( - 30720.0) + GetCameraMargin(CAMERA_MARGIN_LEFT), 30720.0 - GetCameraMargin(CAMERA_MARGIN_TOP), 30720.0 - GetCameraMargin(CAMERA_MARGIN_RIGHT), ( - 30720.0) + GetCameraMargin(CAMERA_MARGIN_BOTTOM))
	call SetDayNightModels("Environment\\DNC\\DNCLordaeron\\DNCLordaeronTerrain\\DNCLordaeronTerrain.mdl", "Environment\\DNC\\DNCLordaeron\\DNCLordaeronUnit\\DNCLordaeronUnit.mdl")
	call NewSoundEnvironment("Default")
	call SetAmbientDaySound("LordaeronSummerDay")
	call SetAmbientNightSound("LordaeronSummerNight")
	call SetMapMusic("Music", true, 0)
	set gg_snd_Warning = CreateSound("Sound\\Interface\\Warning.wav", false, false, false, 10, 10, "")
	call SetSoundParamsFromLabel(gg_snd_Warning, "Warning")
	call SetSoundDuration(gg_snd_Warning, 1903)
	set gg_rct_SHIP_Lower_Nile = Rect(11872.0,  - 24096.0, 13376.0,  - 18304.0)
	set gg_rct_SHIP_Nile_2 = Rect(14080.0,  - 30720.0, 16256.0,  - 25664.0)
	set gg_rct_SHIP_Upper_Nile = Rect(12096.0,  - 26240.0, 14944.0,  - 23776.0)
	set gg_rct_SHIP_Thames = Rect( - 17120.0, 15936.0,  - 15520.0, 17408.0)
	call Rect( - 29824.0,  - 30080.0,  - 29312.0,  - 28672.0)
	call Rect( - 29216.0,  - 30112.0,  - 28672.0,  - 28672.0)
	call Rect( - 25984.0,  - 29760.0,  - 24992.0,  - 29504.0)
	call Rect( - 25984.0,  - 30080.0,  - 25472.0,  - 29824.0)
	call Rect( - 25984.0,  - 30400.0,  - 25472.0,  - 30144.0)
	call Rect( - 26464.0,  - 30048.0,  - 26176.0,  - 29056.0)
	call Rect( - 25440.0,  - 30368.0,  - 25184.0,  - 29856.0)
	call Rect( - 25184.0,  - 30368.0,  - 24928.0,  - 29856.0)
	call Rect( - 24672.0,  - 29568.0,  - 24064.0,  - 28800.0)
	call Rect( - 24704.0,  - 30208.0,  - 24064.0,  - 29696.0)
	set gg_rct_CITY_WE_Burgh = Rect( - 17408.0, 22016.0,  - 17024.0, 22432.0)
	set gg_rct_CITY_WE_Cardiff = Rect( - 19072.0, 17728.0,  - 18688.0, 18080.0)
	set gg_rct_CITY_WE_Galway = Rect( - 22464.0, 22208.0,  - 22112.0, 22560.0)
	set gg_rct_CITY_WE_Zagreb = Rect( - 3776.0, 4416.0,  - 3392.0, 4768.0)
	set gg_rct_CITY_WE_Ragusa = Rect( - 3872.0, 1664.0,  - 3456.0, 2016.0)
	set gg_rct_CITY_BYZ_Durrazo = Rect( - 416.0,  - 2592.0,  - 128.0,  - 2272.0)
	set gg_rct_CITY_BYZ_Adrianopolis = Rect(4992.0,  - 2048.0, 5376.0,  - 1696.0)
	set gg_rct_CITY_Byz_Thessalonika = Rect(2528.0,  - 3168.0, 2848.0,  - 2880.0)
	set gg_rct_CITY_BYZ_Constantinople = Rect(7744.0,  - 2528.0, 8096.0,  - 2208.0)
	set gg_rct_CITY_WE_Warwick = Rect( - 17504.0, 18080.0,  - 17056.0, 18496.0)
	set gg_rct_CITY_BYZ_Scopia = Rect(1024.0,  - 1120.0, 1376.0,  - 800.0)
	set gg_rct_CITY_WE_Vienna = Rect( - 3328.0, 8096.0,  - 2848.0, 8512.0)
	set gg_rct_CITY_WE_Prague = Rect( - 4704.0, 11488.0,  - 4416.0, 11776.0)
	set gg_rct_CITY_WE_Esztergom = Rect( - 640.0, 8288.0,  - 160.0, 8704.0)
	set gg_rct_CITY_WE_Stettin = Rect( - 5184.0, 17120.0,  - 4832.0, 17440.0)
	set gg_rct_CITY_WE_Krakow = Rect( - 96.0, 12448.0, 224.0, 12768.0)
	set gg_rct_CITY_WE_Wroclaw = Rect( - 2272.0, 13536.0,  - 1984.0, 13856.0)
	set gg_rct_CITY_EE_Constanta = Rect(7008.0, 1984.0, 7456.0, 2432.0)
	set gg_rct_CITY_EE_Targoviste = Rect(4032.0, 3744.0, 4416.0, 4064.0)
	set gg_rct_CITY_WE_Brasov = Rect(4000.0, 5216.0, 4320.0, 5536.0)
	set gg_rct_CITY_WE_Belgrade = Rect( - 576.0, 2880.0,  - 224.0, 3232.0)
	set gg_rct_CITY_WE_Flensburg = Rect( - 8288.0, 19776.0,  - 7936.0, 20160.0)
	set gg_rct_CITY_WE_Roskilde = Rect( - 6464.0, 21184.0,  - 6080.0, 21568.0)
	set gg_rct_CITY_WE_Aarhus = Rect( - 7904.0, 22048.0,  - 7488.0, 22464.0)
	set gg_rct_CITY_WE_Madgeburg = Rect( - 5344.0, 14304.0,  - 4960.0, 14720.0)
	set gg_rct_CITY_EE_Sofia = Rect(2880.0, 32.0, 3264.0, 352.0)
	set gg_rct_CITY_WE_Plock = Rect(608.0, 15680.0, 992.0, 16096.0)
	set gg_rct_CITY_WE_Poznan = Rect( - 2496.0, 15872.0,  - 2112.0, 16224.0)
	set gg_rct_CITY_WE_Kassa = Rect(1056.0, 10848.0, 1344.0, 11136.0)
	set gg_rct_CITY_WE_Varad = Rect(1600.0, 6784.0, 1984.0, 7136.0)
	set gg_rct_CITY_EE_Konigsberg = Rect(160.0, 19232.0, 544.0, 19648.0)
	set gg_rct_CITY_EE_Riga = Rect(2784.0, 22592.0, 3200.0, 22944.0)
	set gg_rct_CITY_WE_Fictional_2 = Rect( - 1984.0, 19008.0,  - 1600.0, 19360.0)
	set gg_rct_CITY_EE_Hrodna = Rect(3008.0, 18048.0, 3392.0, 18400.0)
	call Rect( - 28544.0,  - 30080.0,  - 28064.0,  - 29344.0)
	call Rect( - 27744.0,  - 30080.0,  - 27456.0,  - 29760.0)
	set gg_rct_CITY_EE_Vilnius = Rect(4224.0, 19488.0, 4608.0, 19776.0)
	set gg_rct_CITY_EE_Caffa = Rect(13056.0, 4960.0, 13408.0, 5280.0)
	set gg_rct_CITY_EE_Pskov = Rect(5696.0, 24768.0, 6048.0, 25088.0)
	set gg_rct_CITY_EE_Reval = Rect(3328.0, 26816.0, 3680.0, 27168.0)
	set gg_rct_CITY_EE_Novgorod = Rect(8608.0, 26144.0, 9024.0, 26528.0)
	set gg_rct_CITY_EE_Polotsk = Rect(6656.0, 21248.0, 7008.0, 21600.0)
	set gg_rct_SHIP_Seine_River = Rect( - 16640.0, 10368.0,  - 13504.0, 13056.0)
	set gg_rct_SHIP_French_River = Rect( - 18944.0, 5312.0,  - 16864.0, 7328.0)
	set gg_rct_SHIP_Spannish_River = Rect( - 28032.0,  - 1120.0,  - 22464.0, 640.0)
	set gg_rct_SHIP_Spannish_River_2 = Rect( - 27264.0, 2784.0,  - 26208.0, 3328.0)
	set gg_rct_SHIP_Spannish_River_3 = Rect( - 26912.0,  - 4320.0,  - 23872.0,  - 2976.0)
	set gg_rct_SHIP_Spannish_River_4 = Rect( - 19328.0,  - 288.0,  - 18592.0, 1568.0)
	set gg_rct_SHIP_Danube_1 = Rect( - 11936.0, 7616.0,  - 448.0, 11424.0)
	set gg_rct_SHIP_Danube_2 = Rect( - 1664.0, 1216.0, 6848.0, 7776.0)
	set gg_rct_SHIP_Swedish_Lake = Rect( - 5472.0, 24704.0,  - 3232.0, 27616.0)
	set gg_rct_CITY_EE_Halych = Rect(3744.0, 10880.0, 4064.0, 11232.0)
	set gg_rct_SHIP_River = Rect( - 12064.0, 11392.0,  - 8832.0, 16576.0)
	set gg_rct_SHIP_Region_Giant = Rect( - 8832.0, 10176.0, 23520.0, 17760.0)
	set gg_rct_SHIP_River_GIANT = Rect(4384.0, 17728.0, 23424.0, 27040.0)
	set gg_rct_CITY_WE_Groningen = Rect( - 10688.0, 17536.0,  - 10304.0, 17888.0)
	set gg_rct_CITY_ME_Tunis = Rect( - 10688.0,  - 9312.0,  - 10336.0,  - 9024.0)
	set gg_rct_CITY_EE_Azaq = Rect(17280.0, 9280.0, 17632.0, 9632.0)
	set gg_rct_CITY_EE_Kiev = Rect(8352.0, 12192.0, 8672.0, 12512.0)
	set gg_rct_CITY_EE_Minsk = Rect(5952.0, 18400.0, 6304.0, 18688.0)
	set gg_rct_CITY_EE_Smolensk = Rect(9120.0, 19872.0, 9408.0, 20192.0)
	set gg_rct_SHIP_Caspian_Sea_and_Mesapotamia = Rect(23328.0,  - 14080.0, 30688.0, 17792.0)
	set gg_rct_CITY_ME_Sinop = Rect(13984.0,  - 288.0, 14336.0, 0.0)
	set gg_rct_CITY_ME_Isparta = Rect(10624.0,  - 7552.0, 11008.0,  - 7200.0)
	set gg_rct_CITY_ME_Kayseri = Rect(15168.0,  - 5792.0, 15552.0,  - 5408.0)
	set gg_rct_CITY_ME_Adana = Rect(15328.0,  - 7712.0, 15648.0,  - 7424.0)
	set gg_rct_CITY_ME_Konya = Rect(12640.0,  - 7104.0, 12992.0,  - 6752.0)
	set gg_rct_CITY_ME_Antioch = Rect(17056.0,  - 8800.0, 17376.0,  - 8512.0)
	set gg_rct_CITY_BYZ_Trebizond = Rect(18432.0,  - 608.0, 18784.0,  - 320.0)
	set gg_rct_CITY_BYZ_Nicosia = Rect(13760.0,  - 11168.0, 14112.0,  - 10752.0)
	set gg_rct_CITY_ME_JERUSALEM = Rect(16768.0,  - 16416.0, 17120.0,  - 16032.0)
	set gg_rct_CITY_ME_Edessa = Rect(18880.0,  - 7616.0, 19232.0,  - 7296.0)
	set gg_rct_CITY_BYZ_Smyrna = Rect(6816.0,  - 6752.0, 7136.0,  - 6464.0)
	set gg_rct_CITY_ME_Ankara = Rect(12512.0,  - 4064.0, 12832.0,  - 3712.0)
	set gg_rct_CITY_BYZ_Nicae = Rect(9056.0,  - 4576.0, 9408.0,  - 4224.0)
	set gg_rct_CITY_ME_Fes = Rect( - 26464.0,  - 8896.0,  - 26144.0,  - 8544.0)
	set gg_rct_CITY_ME_Oran = Rect( - 21632.0,  - 8544.0,  - 21248.0,  - 8224.0)
	set gg_rct_CITY_ME_Algiers = Rect( - 16928.0,  - 8224.0,  - 16608.0,  - 7904.0)
	set gg_rct_CITY_ME_Mahdya = Rect( - 10112.0,  - 11424.0,  - 9760.0,  - 11136.0)
	set gg_rct_CITY_ME_Tripoli = Rect( - 7680.0,  - 16416.0,  - 7328.0,  - 16128.0)
	set gg_rct_CITY_ME_Benghazi = Rect(288.0,  - 17760.0, 608.0,  - 17472.0)
	set gg_rct_SHIP_Lake_Egypt = Rect(9248.0,  - 21376.0, 9984.0,  - 20640.0)
	set gg_rct_CITY_ME_Medina = Rect(24704.0,  - 27680.0, 25088.0,  - 27264.0)
	set gg_rct_CITY_ME_Alexandria = Rect(10816.0,  - 18688.0, 11168.0,  - 18304.0)
	set gg_rct_CITY_ME_Damietta = Rect(13056.0,  - 17984.0, 13408.0,  - 17760.0)
	set gg_rct_CITY_ME_Cairo = Rect(12096.0,  - 21024.0, 12448.0,  - 20768.0)
	set gg_rct_CITY_EE_Timutarakan = Rect(15680.0, 5600.0, 16032.0, 5920.0)
	set gg_rct_CITY_EE_Baia = Rect(6944.0, 7648.0, 7264.0, 7968.0)
	set gg_rct_CITY_EE_Zhytomyr = Rect(5824.0, 12256.0, 6176.0, 12576.0)
	set gg_rct_CITY_EE_Oleshe = Rect(11200.0, 7712.0, 11552.0, 8064.0)
	set gg_rct_CITY_EE_Dnipro = Rect(12480.0, 11136.0, 12832.0, 11456.0)
	set gg_rct_CITY_EE_Moscow = Rect(14880.0, 22944.0, 15200.0, 23232.0)
	set gg_rct_CITY_EE_Bryansk = Rect(11392.0, 16768.0, 11744.0, 17088.0)
	set gg_rct_CITY_ME_Yerevan = Rect(23840.0, 96.0, 24128.0, 384.0)
	set gg_rct_CITY_EE_Sarkel = Rect(19488.0, 11168.0, 19808.0, 11488.0)
	set gg_rct_CITY_BYZ_Kutaisi = Rect(20672.0, 2528.0, 21056.0, 2848.0)
	set gg_rct_CITY_BYZ_Tbilisi = Rect(23776.0, 2368.0, 24160.0, 2720.0)
	set gg_rct_CITY_ME_Damascus = Rect(18336.0,  - 13408.0, 18624.0,  - 13120.0)
	set gg_rct_CITY_ME_Tartus = Rect(17056.0,  - 11648.0, 17376.0,  - 11264.0)
	set gg_rct_CITY_ME_Gaza = Rect(15488.0,  - 17696.0, 15840.0,  - 17376.0)
	set gg_rct_CITY_ME_Mosul = Rect(24896.0,  - 8480.0, 25248.0,  - 8128.0)
	set gg_rct_CITY_ME_Acre = Rect(16480.0,  - 14368.0, 16768.0,  - 14048.0)
	set gg_rct_CITY_ME_Al_Aqaba = Rect(17088.0,  - 19744.0, 17440.0,  - 19456.0)
	set gg_rct_CITY_ME_Quarisiya = Rect(22720.0,  - 10432.0, 23072.0,  - 10048.0)
	set gg_rct_CITY_ME_Tamiya = Rect(20672.0,  - 23232.0, 21056.0,  - 22848.0)
	set gg_rct_CITY_ME_Diyarbakir = Rect(19904.0,  - 5920.0, 20256.0,  - 5632.0)
	set gg_rct_CITY_ME_Erez = Rect(18624.0,  - 3936.0, 18976.0,  - 3616.0)
	set gg_rct_SHIP_Lake_Africa = Rect( - 13632.0,  - 14816.0,  - 12192.0,  - 13376.0)
	set gg_rct_SHIP_Mesapotamia = Rect(17760.0,  - 10400.0, 23360.0,  - 1344.0)
	set gg_rct_SHIP_Ankara_Lake = Rect(12384.0,  - 5984.0, 13824.0,  - 4352.0)
	set gg_rct_SHIP_Italy = Rect( - 10944.0, 3968.0,  - 7680.0, 5120.0)
	set gg_rct_CITY_WE_Salzburg = Rect( - 6528.0, 7808.0,  - 6176.0, 8160.0)
	set gg_rct_CITY_WE_Innsbruck = Rect( - 8864.0, 6912.0,  - 8448.0, 7264.0)
	set gg_rct_CITY_WE_Cologne = Rect( - 11680.0, 14304.0,  - 11264.0, 14752.0)
	set gg_rct_CITY_WE_Frankfurt = Rect( - 9760.0, 12928.0,  - 9472.0, 13280.0)
	set gg_rct_Hamburg_CITY = Rect( - 7552.0, 16928.0,  - 7232.0, 17248.0)
	set gg_rct_CITY_ME_Palma = Rect( - 17472.0,  - 3328.0,  - 17120.0,  - 2976.0)
	call Rect( - 24576.0,  - 1376.0,  - 24224.0,  - 1024.0)
	set gg_rct_CITY_EE_Astrakhan = Rect(23392.0, 10912.0, 23712.0, 11232.0)
	set gg_rct_CITY_EE_Ryazan = Rect(17280.0, 19456.0, 17632.0, 19808.0)
	set gg_rct_CITY_WE_Edinburgh = Rect( - 16928.0, 24000.0,  - 16544.0, 24352.0)
	set gg_rct_CITY_WE_Aberdeen = Rect( - 15904.0, 25952.0,  - 15520.0, 26304.0)
	set gg_rct_CITY_WE_Inverness = Rect( - 17312.0, 26624.0,  - 16896.0, 27008.0)
	set gg_rct_CITY_WE_York = Rect( - 16096.0, 20352.0,  - 15712.0, 20768.0)
	set gg_rct_CITY_WE_Dublin = Rect( - 20448.0, 21440.0,  - 20064.0, 21792.0)
	set gg_rct_CITY_WE_Ireland = Rect( - 22560.0, 19808.0,  - 22240.0, 20160.0)
	set gg_rct_CITY_WE_Caernarfon = Rect( - 18752.0, 19520.0,  - 18400.0, 19872.0)
	set gg_rct_CITY_WE_London = Rect( - 16128.0, 16896.0,  - 15808.0, 17248.0)
	set gg_rct_CITY_WE_Winchester = Rect( - 17952.0, 15904.0,  - 17632.0, 16224.0)
	set gg_rct_CITY_WE_Exeter = Rect( - 19936.0, 16352.0,  - 19648.0, 16672.0)
	set gg_rct_CITY_WE_Caen = Rect( - 17248.0, 12448.0,  - 16928.0, 12832.0)
	set gg_rct_CITY_WE_Rheims = Rect( - 13728.0, 11968.0,  - 13408.0, 12352.0)
	set gg_rct_CITY_WE_Paris = Rect( - 15232.0, 10624.0,  - 14880.0, 10976.0)
	set gg_rct_CITY_WE_Dijon = Rect( - 13856.0, 7872.0,  - 13568.0, 8256.0)
	set gg_rct_CITY_WE_Clermont = Rect( - 16192.0, 5824.0,  - 15840.0, 6208.0)
	set gg_rct_CITY_WE_Toulouse = Rect( - 16864.0, 3392.0,  - 16576.0, 3776.0)
	set gg_rct_CITY_WE_Bordeaux = Rect( - 18880.0, 5568.0,  - 18528.0, 5920.0)
	set gg_rct_CITY_WE_Zaragoza = Rect( - 20288.0, 1216.0,  - 19936.0, 1600.0)
	set gg_rct_CITY_WE_Barcelona = Rect( - 17216.0, 352.0,  - 16896.0, 736.0)
	set gg_rct_CITY_WE_Leon = Rect( - 24512.0, 3744.0,  - 24128.0, 4064.0)
	set gg_rct_CITY_WE_Burgos = Rect( - 22720.0, 2368.0,  - 22432.0, 2752.0)
	set gg_rct_CITY_ME_Madrid = Rect( - 23552.0,  - 256.0,  - 23200.0, 128.0)
	set gg_rct_CITY_WE_Salamanca = Rect( - 25376.0, 1312.0,  - 25056.0, 1632.0)
	set gg_rct_CITY_ME_Lisbon = Rect( - 28736.0,  - 192.0,  - 28352.0, 160.0)
	set gg_rct_CITY_WE_Pamplona = Rect( - 21024.0, 2944.0,  - 20704.0, 3360.0)
	set gg_rct_CITY_WE_Marseille = Rect( - 13792.0, 2144.0,  - 13440.0, 2592.0)
	set gg_rct_CITY_WE_Bruges = Rect( - 13568.0, 14912.0,  - 13216.0, 15296.0)
	set gg_rct_CITY_WE_Antwerp = Rect( - 12736.0, 16128.0,  - 12352.0, 16512.0)
	set gg_rct_CITY_WE_Genoa = Rect( - 10880.0, 3360.0,  - 10528.0, 3712.0)
	set gg_rct_CITY_WE_Milan = Rect( - 10048.0, 5280.0,  - 9696.0, 5600.0)
	set gg_rct_CITY_WE_Venice = Rect( - 6880.0, 3936.0,  - 6560.0, 4256.0)
	set gg_rct_CITY_WE_Bologna = Rect( - 8224.0, 3040.0,  - 7904.0, 3392.0)
	set gg_rct_CITY_WE_Pisa = Rect( - 8960.0, 1760.0,  - 8608.0, 2176.0)
	set gg_rct_CITY_WE_Ancona = Rect( - 6624.0, 1088.0,  - 6304.0, 1472.0)
	set gg_rct_CITY_WE_Rome = Rect( - 7296.0,  - 960.0,  - 6944.0,  - 544.0)
	set gg_rct_CITY_ME_Granada = Rect( - 23712.0,  - 4704.0,  - 23392.0,  - 4416.0)
	set gg_rct_CITY_ME_Cordoba = Rect( - 25184.0,  - 3168.0,  - 24864.0,  - 2848.0)
	set gg_rct_CITY_ME_Murcia = Rect( - 21888.0,  - 4416.0,  - 21536.0,  - 4032.0)
	set gg_rct_CITY_ME_Valencia = Rect( - 20928.0,  - 2304.0,  - 20576.0,  - 1888.0)
	set gg_rct_CITY_WE_Nuremburg = Rect( - 7776.0, 11040.0,  - 7456.0, 11392.0)
	set gg_rct_CITY_WE_Bern = Rect( - 11648.0, 7072.0,  - 11296.0, 7360.0)
	set gg_rct_CITY_WE_Lyon = Rect( - 13728.0, 4928.0,  - 13376.0, 5408.0)
	set gg_rct_CITY_WE_Lund = Rect( - 5152.0, 21696.0,  - 4832.0, 22080.0)
	set gg_rct_CITY_WE_Skara = Rect( - 5248.0, 24416.0,  - 4960.0, 24768.0)
	set gg_rct_CITY_WE_Oslo = Rect( - 6688.0, 28096.0,  - 6368.0, 28480.0)
	set gg_rct_CITY_WE_Eikundarsund = Rect( - 9024.0, 26496.0,  - 8736.0, 26880.0)
	set gg_rct_CITY_WE_Bergen = Rect( - 10048.0, 28224.0,  - 9696.0, 28576.0)
	set gg_rct_CITY_WE_Visby = Rect( - 1408.0, 23776.0,  - 1152.0, 24096.0)
	set gg_rct_CITY_WE_Nykoping = Rect( - 2720.0, 26176.0,  - 2432.0, 26560.0)
	set gg_rct_CITY_ME_Silves = Rect( - 28032.0,  - 2944.0,  - 27680.0,  - 2560.0)
	set gg_rct_CITY_ME_Marakesh = Rect( - 29760.0,  - 10016.0,  - 29408.0,  - 9632.0)
	set gg_rct_CITY_ME_Luxor = Rect(15296.0,  - 26976.0, 15648.0,  - 26624.0)
	set gg_rct_CITY_WE_Rennes = Rect( - 20544.0, 12032.0,  - 20160.0, 12416.0)
	set gg_rct_CITY_WE_Angers = Rect( - 18368.0, 10624.0,  - 18016.0, 11008.0)
	set gg_rct_CITY_WE_Ajaccio = Rect( - 10880.0,  - 576.0,  - 10528.0,  - 224.0)
	set gg_rct_CITY_WE_Cagliari = Rect( - 11104.0,  - 4768.0,  - 10816.0,  - 4448.0)
	set gg_rct_CITY_WE_Naples = Rect( - 5728.0,  - 2912.0,  - 5440.0,  - 2560.0)
	set gg_rct_CITY_WE_Italy = Rect( - 3904.0,  - 6720.0,  - 3552.0,  - 6336.0)
	set gg_rct_CITY_WE_Bari = Rect( - 3616.0,  - 3040.0,  - 3328.0,  - 2688.0)
	set gg_rct_CITY_WE_Palermo = Rect( - 7200.0,  - 8000.0,  - 6880.0,  - 7616.0)
	set gg_rct_CITY_WE_Syracuse = Rect( - 5504.0,  - 9344.0,  - 5248.0,  - 9056.0)
	set gg_rct_CITY_WE_Metz = Rect( - 11616.0, 10848.0,  - 11296.0, 11168.0)
	set gg_rct_CITY_BYZ_Balkan = Rect( - 1792.0,  - 320.0,  - 1440.0, 64.0)
	set gg_rct_CITY_BYZ_Athens = Rect(3232.0,  - 7488.0, 3552.0,  - 7136.0)
	set gg_rct_CITY_BYZ_Rhodes = Rect(8224.0,  - 10496.0, 8512.0,  - 10208.0)
	set gg_rct_CITY_EE_Turku = Rect(1344.0, 29280.0, 1696.0, 29632.0)
	set gg_rct_CITY_BYZ_Fictional = Rect(10848.0,  - 2144.0, 11136.0,  - 1824.0)
	set gg_rct_CITY_ME_Badajoz = Rect( - 26496.0,  - 1568.0,  - 26144.0,  - 1248.0)
	set gg_rct_CITY_WE_Oporto = Rect( - 27168.0, 2528.0,  - 26880.0, 2816.0)
	set gg_rct_CITY_WE_Stockholm = Rect( - 2016.0, 27552.0,  - 1696.0, 27936.0)
	set gg_rct_CITY_WE_Kalmar = Rect( - 3488.0, 23040.0,  - 3200.0, 23392.0)
	set gg_rct_CITY_BYZ_Corinth = Rect(2016.0,  - 7904.0, 2336.0,  - 7584.0)
	set gg_rct_CITY_BYZ_Arta = Rect(640.0,  - 5760.0, 992.0,  - 5376.0)
	set gg_rct_CITY_BYZ_Candia = Rect(5216.0,  - 12384.0, 5504.0,  - 12064.0)
	set gg_rct_CITY_ME_Kerak = Rect(18272.0,  - 17504.0, 18656.0,  - 17056.0)
	set gg_rct_CITY_ME_Baghdad = Rect(26848.0,  - 11680.0, 27168.0,  - 11360.0)
	set gg_rct_CITY_BYZ_Canakkale = Rect(6464.0,  - 4672.0, 6816.0,  - 4288.0)
	set gg_rct_CITY_EE_Russia = Rect(20672.0, 21312.0, 21024.0, 21696.0)
	set gg_rct_CITY_WE_Budapest = Rect( - 1824.0, 5792.0,  - 1440.0, 6144.0)
	call CreateAllUnits()
	call InitBlizzard()
	call InitGlobals()
	call InitCustomTriggers()
	set trig = gg_trg_Melee_Initialization
	if TriggerEvaluate(trig) then
		call TriggerExecute(trig)
	endif
	set trig_2 = gg_trg_Trade
	if TriggerEvaluate(trig_2) then
		call TriggerExecute(trig_2)
	endif
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Real))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Real.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Integer))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Integer.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_String))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package String.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Angle))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Angle.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Vectors))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Vectors.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Maths))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Maths.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Player))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Player.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Printing))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Printing.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Basics))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Basics.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_GameTimer))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package GameTimer.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_MagicFunctions))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package MagicFunctions.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_ErrorHandling))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package ErrorHandling.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Matrices))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Matrices.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Quaternion))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Quaternion.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Table))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Table.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Playercolor))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Playercolor.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_Colors))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Colors.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Group))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Group.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Lightning))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Lightning.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_WeatherEffects))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package WeatherEffects.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_TypeCasting))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package TypeCasting.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Abilities))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Abilities.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_AbilityIds))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package AbilityIds.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Buildings))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Buildings.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_City))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package City.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_ClosureForGroups))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package ClosureForGroups.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_LinkedList))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package LinkedList.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_MutliboardTools))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package MutliboardTools.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_HashList))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package HashList.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_EventHelper))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package EventHelper.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_RegisterEvents))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package RegisterEvents.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_TimerUtils))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package TimerUtils.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_ClosureTimers))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package ClosureTimers.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_TargetsAllowed))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package TargetsAllowed.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Doodads))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Doodads.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Icons))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Icons.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Objects))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Objects.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Sounds))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Sounds.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Soundsets))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Soundsets.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Textures))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Textures.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_UI))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package UI.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_Units))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Units.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_UnitIds))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package UnitIds.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_MapBounds))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package MapBounds.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_DummyRecycler))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package DummyRecycler.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_StringUtils))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package StringUtils.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_ObjectIds))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package ObjectIds.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_Preloader))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Preloader.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_ObjectIdGenerator))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package ObjectIdGenerator.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_OnUnitEnterLeave))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package OnUnitEnterLeave.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_UnitIndexer))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package UnitIndexer.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_ClosureEvents))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package ClosureEvents.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_MathTools))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package MathTools.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Forces))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Forces.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Strings))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Strings.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_Multiboards))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Multiboards.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_PlayerStats))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package PlayerStats.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Main))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Main.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_CityManage))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package CityManage.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Commands))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Commands.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_Economy))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Economy.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_DateTime))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package DateTime.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Diplomacy))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Diplomacy.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Logarithm))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Logarithm.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_MainInit))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package MainInit.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_MultiboardCityUpdate))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package MultiboardCityUpdate.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_NoShipsNearRivers))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package NoShipsNearRivers.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_OnPlayerLeave))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package OnPlayerLeave.")
	endif
	call TriggerClearConditions(initTrig)
	call DestroyTrigger(initTrig)
	set initTrig = null
	set trig = null
	set trig_2 = null
endfunction

function InitAllyPriorities takes nothing returns nothing
	call SetStartLocPrioCount(0, 19)
	call SetStartLocPrio(0, 0, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 1, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 2, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 3, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 4, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 5, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 6, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 7, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 8, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 9, 10, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 10, 11, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 11, 12, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 12, 13, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 13, 14, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 14, 15, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 15, 16, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 16, 17, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 17, 18, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 18, 19, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(1, 9)
	call SetStartLocPrio(1, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(1, 1, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(1, 2, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(1, 3, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(1, 4, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(1, 5, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(1, 6, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(1, 7, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(1, 8, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(2, 9)
	call SetStartLocPrio(2, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(2, 1, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(2, 2, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(2, 3, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(2, 4, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(2, 5, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(2, 6, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(2, 7, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(2, 8, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(3, 9)
	call SetStartLocPrio(3, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(3, 1, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(3, 2, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(3, 3, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(3, 4, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(3, 5, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(3, 6, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(3, 7, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(3, 8, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(4, 9)
	call SetStartLocPrio(4, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(4, 1, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(4, 2, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(4, 3, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(4, 4, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(4, 5, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(4, 6, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(4, 7, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(4, 8, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(5, 9)
	call SetStartLocPrio(5, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(5, 1, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(5, 2, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(5, 3, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(5, 4, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(5, 5, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(5, 6, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(5, 7, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(5, 8, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(6, 9)
	call SetStartLocPrio(6, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(6, 1, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(6, 2, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(6, 3, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(6, 4, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(6, 5, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(6, 6, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(6, 7, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(6, 8, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(7, 9)
	call SetStartLocPrio(7, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(7, 1, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(7, 2, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(7, 3, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(7, 4, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(7, 5, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(7, 6, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(7, 7, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(7, 8, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(8, 9)
	call SetStartLocPrio(8, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(8, 1, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(8, 2, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(8, 3, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(8, 4, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(8, 5, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(8, 6, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(8, 7, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(8, 8, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(9, 9)
	call SetStartLocPrio(9, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(9, 1, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(9, 2, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(9, 3, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(9, 4, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(9, 5, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(9, 6, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(9, 7, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(9, 8, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(10, 16)
	call SetStartLocPrio(10, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 1, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 2, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 3, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 4, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 5, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 6, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 7, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 8, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 9, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 10, 12, MAP_LOC_PRIO_LOW)
	call SetStartLocPrio(10, 11, 13, MAP_LOC_PRIO_LOW)
	call SetStartLocPrio(10, 12, 14, MAP_LOC_PRIO_LOW)
	call SetStartLocPrio(10, 13, 15, MAP_LOC_PRIO_LOW)
	call SetStartLocPrio(10, 14, 16, MAP_LOC_PRIO_LOW)
	call SetStartLocPrio(10, 15, 17, MAP_LOC_PRIO_LOW)
	call SetStartLocPrioCount(11, 19)
	call SetStartLocPrio(11, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 1, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 2, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 3, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 4, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 5, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 6, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 7, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 8, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 9, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 10, 10, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 11, 12, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 12, 13, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 13, 14, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 14, 15, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 15, 16, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 16, 17, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 17, 18, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 18, 19, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(12, 5)
	call SetStartLocPrio(12, 0, 13, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(12, 1, 14, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(12, 2, 15, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(12, 3, 16, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(12, 4, 17, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(13, 5)
	call SetStartLocPrio(13, 0, 12, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(13, 1, 14, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(13, 2, 15, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(13, 3, 16, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(13, 4, 17, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(14, 5)
	call SetStartLocPrio(14, 0, 12, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(14, 1, 13, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(14, 2, 15, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(14, 3, 16, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(14, 4, 17, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(15, 5)
	call SetStartLocPrio(15, 0, 12, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(15, 1, 13, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(15, 2, 14, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(15, 3, 16, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(15, 4, 17, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(16, 5)
	call SetStartLocPrio(16, 0, 12, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(16, 1, 13, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(16, 2, 14, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(16, 3, 15, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(16, 4, 17, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(17, 5)
	call SetStartLocPrio(17, 0, 12, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(17, 1, 13, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(17, 2, 14, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(17, 3, 15, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(17, 4, 16, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(18, 1)
	call SetStartLocPrio(18, 0, 19, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(19, 1)
	call SetStartLocPrio(19, 0, 18, MAP_LOC_PRIO_HIGH)
endfunction

function InitCustomPlayerSlots takes nothing returns nothing
	call SetPlayerStartLocation(Player(0), 0)
	call ForcePlayerStartLocation(Player(0), 0)
	call SetPlayerColor(Player(0), ConvertPlayerColor(0))
	call SetPlayerRacePreference(Player(0), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(0), false)
	call SetPlayerController(Player(0), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(1), 1)
	call ForcePlayerStartLocation(Player(1), 1)
	call SetPlayerColor(Player(1), ConvertPlayerColor(1))
	call SetPlayerRacePreference(Player(1), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(1), false)
	call SetPlayerController(Player(1), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(2), 2)
	call ForcePlayerStartLocation(Player(2), 2)
	call SetPlayerColor(Player(2), ConvertPlayerColor(2))
	call SetPlayerRacePreference(Player(2), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(2), false)
	call SetPlayerController(Player(2), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(3), 3)
	call ForcePlayerStartLocation(Player(3), 3)
	call SetPlayerColor(Player(3), ConvertPlayerColor(3))
	call SetPlayerRacePreference(Player(3), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(3), false)
	call SetPlayerController(Player(3), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(4), 4)
	call ForcePlayerStartLocation(Player(4), 4)
	call SetPlayerColor(Player(4), ConvertPlayerColor(4))
	call SetPlayerRacePreference(Player(4), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(4), false)
	call SetPlayerController(Player(4), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(5), 5)
	call ForcePlayerStartLocation(Player(5), 5)
	call SetPlayerColor(Player(5), ConvertPlayerColor(5))
	call SetPlayerRacePreference(Player(5), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(5), false)
	call SetPlayerController(Player(5), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(6), 6)
	call ForcePlayerStartLocation(Player(6), 6)
	call SetPlayerColor(Player(6), ConvertPlayerColor(6))
	call SetPlayerRacePreference(Player(6), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(6), false)
	call SetPlayerController(Player(6), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(7), 7)
	call ForcePlayerStartLocation(Player(7), 7)
	call SetPlayerColor(Player(7), ConvertPlayerColor(7))
	call SetPlayerRacePreference(Player(7), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(7), false)
	call SetPlayerController(Player(7), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(8), 8)
	call ForcePlayerStartLocation(Player(8), 8)
	call SetPlayerColor(Player(8), ConvertPlayerColor(8))
	call SetPlayerRacePreference(Player(8), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(8), false)
	call SetPlayerController(Player(8), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(9), 9)
	call ForcePlayerStartLocation(Player(9), 9)
	call SetPlayerColor(Player(9), ConvertPlayerColor(9))
	call SetPlayerRacePreference(Player(9), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(9), false)
	call SetPlayerController(Player(9), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(10), 10)
	call ForcePlayerStartLocation(Player(10), 10)
	call SetPlayerColor(Player(10), ConvertPlayerColor(10))
	call SetPlayerRacePreference(Player(10), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(10), false)
	call SetPlayerController(Player(10), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(11), 11)
	call ForcePlayerStartLocation(Player(11), 11)
	call SetPlayerColor(Player(11), ConvertPlayerColor(11))
	call SetPlayerRacePreference(Player(11), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(11), false)
	call SetPlayerController(Player(11), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(12), 12)
	call ForcePlayerStartLocation(Player(12), 12)
	call SetPlayerColor(Player(12), ConvertPlayerColor(12))
	call SetPlayerRacePreference(Player(12), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(12), false)
	call SetPlayerController(Player(12), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(13), 13)
	call ForcePlayerStartLocation(Player(13), 13)
	call SetPlayerColor(Player(13), ConvertPlayerColor(13))
	call SetPlayerRacePreference(Player(13), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(13), false)
	call SetPlayerController(Player(13), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(14), 14)
	call ForcePlayerStartLocation(Player(14), 14)
	call SetPlayerColor(Player(14), ConvertPlayerColor(14))
	call SetPlayerRacePreference(Player(14), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(14), false)
	call SetPlayerController(Player(14), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(15), 15)
	call ForcePlayerStartLocation(Player(15), 15)
	call SetPlayerColor(Player(15), ConvertPlayerColor(15))
	call SetPlayerRacePreference(Player(15), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(15), false)
	call SetPlayerController(Player(15), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(16), 16)
	call ForcePlayerStartLocation(Player(16), 16)
	call SetPlayerColor(Player(16), ConvertPlayerColor(16))
	call SetPlayerRacePreference(Player(16), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(16), false)
	call SetPlayerController(Player(16), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(17), 17)
	call ForcePlayerStartLocation(Player(17), 17)
	call SetPlayerColor(Player(17), ConvertPlayerColor(17))
	call SetPlayerRacePreference(Player(17), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(17), false)
	call SetPlayerController(Player(17), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(18), 18)
	call ForcePlayerStartLocation(Player(18), 18)
	call SetPlayerColor(Player(18), ConvertPlayerColor(18))
	call SetPlayerRacePreference(Player(18), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(18), false)
	call SetPlayerController(Player(18), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(19), 19)
	call ForcePlayerStartLocation(Player(19), 19)
	call SetPlayerColor(Player(19), ConvertPlayerColor(19))
	call SetPlayerRacePreference(Player(19), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(19), false)
	call SetPlayerController(Player(19), MAP_CONTROL_USER)
endfunction

function InitCustomTeams takes nothing returns nothing
	call SetPlayerTeam(Player(0), 0)
	call SetPlayerTeam(Player(1), 0)
	call SetPlayerTeam(Player(2), 0)
	call SetPlayerTeam(Player(3), 0)
	call SetPlayerTeam(Player(4), 0)
	call SetPlayerTeam(Player(5), 0)
	call SetPlayerTeam(Player(6), 0)
	call SetPlayerTeam(Player(7), 0)
	call SetPlayerTeam(Player(8), 0)
	call SetPlayerTeam(Player(9), 0)
	call SetPlayerTeam(Player(10), 0)
	call SetPlayerTeam(Player(11), 0)
	call SetPlayerTeam(Player(12), 1)
	call SetPlayerTeam(Player(13), 1)
	call SetPlayerTeam(Player(14), 1)
	call SetPlayerTeam(Player(15), 1)
	call SetPlayerTeam(Player(16), 1)
	call SetPlayerTeam(Player(17), 1)
	call SetPlayerTeam(Player(18), 1)
	call SetPlayerTeam(Player(19), 1)
endfunction

function config takes nothing returns nothing
	call SetMapName("TRIGSTR_001")
	call SetMapDescription("TRIGSTR_003")
	call SetPlayers(20)
	call SetTeams(20)
	call SetGamePlacement(MAP_PLACEMENT_TEAMS_TOGETHER)
	call DefineStartLocation(0, 320.0, 5184.0)
	call DefineStartLocation(1, 320.0, 5184.0)
	call DefineStartLocation(2, 320.0, 5184.0)
	call DefineStartLocation(3, 320.0, 5184.0)
	call DefineStartLocation(4, 320.0, 5184.0)
	call DefineStartLocation(5, 320.0, 5184.0)
	call DefineStartLocation(6, 320.0, 5184.0)
	call DefineStartLocation(7, 320.0, 5184.0)
	call DefineStartLocation(8, 320.0, 5184.0)
	call DefineStartLocation(9, 320.0, 5184.0)
	call DefineStartLocation(10, 320.0, 5184.0)
	call DefineStartLocation(11, 320.0, 5184.0)
	call DefineStartLocation(12, 320.0, 5184.0)
	call DefineStartLocation(13, 320.0, 5184.0)
	call DefineStartLocation(14, 320.0, 5184.0)
	call DefineStartLocation(15, 320.0, 5184.0)
	call DefineStartLocation(16, 320.0, 5184.0)
	call DefineStartLocation(17, 320.0, 5184.0)
	call DefineStartLocation(18, 320.0, 5184.0)
	call DefineStartLocation(19, 320.0, 5184.0)
	call InitCustomPlayerSlots()
	call InitCustomTeams()
	call InitAllyPriorities()
endfunction

