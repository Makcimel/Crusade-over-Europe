// this script was compiled with wurst 1.8.0.0-jenkins-Wurst-1072
globals
group w=null
location u=null
integer array r
force s=null
location t=null
location i=null
location S=null
location c=null
rect o=null
rect O=null
group l=null
group b=null
location y=null
boolean array p
boolean array e
rect q=null
rect a=null
rect n=null
rect d=null
rect f=null
rect R=null
rect T=null
rect Y=null
rect G=null
rect g=null
rect h=null
rect F=null
rect k=null
rect j=null
rect x=null
rect v=null
rect m=null
rect Q=null
rect W=null
rect E=null
rect Z=null
rect U=null
rect I=null
rect P=null
rect A=null
rect D=null
rect H=null
rect J=null
rect K=null
rect L=null
rect X=null
rect C=null
rect V=null
rect B=null
rect N=null
rect M=null
rect ww=null
rect uw=null
rect rw=null
rect sw=null
rect tw=null
rect iw=null
rect Sw=null
rect cw=null
rect ow=null
rect Ow=null
rect lw=null
rect bw=null
rect yw=null
rect pw=null
rect ew=null
rect qw=null
rect aw=null
rect nw=null
rect dw=null
rect fw=null
rect Rw=null
rect Tw=null
rect Yw=null
rect Gw=null
rect gw=null
rect hw=null
rect Fw=null
rect kw=null
rect jw=null
rect xw=null
rect vw=null
rect mw=null
rect Qw=null
rect Ww=null
rect Ew=null
rect Zw=null
rect Uw=null
rect Iw=null
rect Pw=null
rect Aw=null
rect Dw=null
rect Hw=null
rect Jw=null
rect Kw=null
rect Lw=null
rect Xw=null
rect Cw=null
rect Vw=null
rect Bw=null
rect Nw=null
rect Mw=null
rect wu=null
rect uu=null
rect ru=null
rect su=null
rect tu=null
rect iu=null
rect Su=null
rect cu=null
rect ou=null
rect Ou=null
rect lu=null
rect bu=null
rect yu=null
rect pu=null
rect eu=null
rect qu=null
rect au=null
rect nu=null
rect du=null
rect fu=null
rect Ru=null
rect Tu=null
rect Yu=null
rect Gu=null
rect gu=null
rect hu=null
rect Fu=null
rect ku=null
rect ju=null
rect xu=null
rect vu=null
rect mu=null
rect Qu=null
rect Wu=null
rect Eu=null
rect Zu=null
rect Uu=null
rect Iu=null
rect Pu=null
rect Au=null
rect Du=null
rect Hu=null
rect Ju=null
rect Ku=null
rect Lu=null
rect Xu=null
rect Cu=null
rect Vu=null
rect Bu=null
rect Nu=null
rect Mu=null
rect wr=null
rect ur=null
rect rr=null
rect sr=null
rect tr=null
rect ir=null
rect Sr=null
rect cr=null
rect lr=null
rect br=null
rect yr=null
rect pr=null
rect er=null
rect qr=null
rect ar=null
rect nr=null
rect dr=null
rect fr=null
rect Rr=null
rect Tr=null
rect Yr=null
rect Gr=null
rect gr=null
rect hr=null
rect Fr=null
rect kr=null
rect jr=null
rect xr=null
rect vr=null
rect mr=null
rect Qr=null
rect Wr=null
rect Er=null
rect Zr=null
rect Ur=null
rect Ir=null
rect Pr=null
rect Ar=null
rect Dr=null
rect Hr=null
rect Jr=null
rect Kr=null
rect Lr=null
rect Xr=null
rect Cr=null
rect Vr=null
rect Br=null
rect Nr=null
rect Mr=null
rect ws=null
rect us=null
rect rs=null
rect ss=null
rect ts=null
rect is=null
rect Ss=null
rect cs=null
rect os=null
rect Os=null
rect ls=null
rect bs=null
rect ys=null
rect ps=null
rect es=null
rect qs=null
rect as=null
rect ns=null
rect ds=null
sound fs=null
trigger Rs=null
trigger Ts=null
trigger Ys=null
trigger Gs=null
trigger gs=null
trigger hs=null
trigger Fs=null
trigger ks=null
trigger js=null
trigger xs=null
trigger vs=null
trigger ms=null
trigger Qs=null
trigger Ws=null
trigger Es=null
trigger Zs=null
trigger Us=null
trigger Is=null
trigger Ps=null
trigger As=null
trigger Ds=null
trigger Hs=null
trigger Js=null
trigger Ks=null
trigger Ls=null
trigger Xs=null
trigger Cs=null
trigger Vs=null
trigger Bs=null
trigger Ns=null
trigger Ms=null
trigger wt=null
trigger ut=null
trigger rt=null
trigger st=null
trigger tt=null
trigger St=null
trigger ct=null
trigger ot=null
trigger Ot=null
trigger lt=null
trigger bt=null
trigger yt=null
trigger pt=null
trigger et=null
trigger qt=null
trigger at=null
trigger nt=null
trigger dt=null
trigger ft=null
trigger Rt=null
trigger Tt=null
trigger Yt=null
trigger Gt=null
trigger gt=null
trigger ht=null
trigger Ft=null
trigger kt=null
trigger jt=null
trigger xt=null
trigger vt=null
trigger mt=null
trigger Qt=null
trigger Wt=null
trigger Et=null
trigger Zt=null
trigger Ut=null
trigger It=null
trigger Pt=null
trigger At=null
trigger Dt=null
trigger Ht=null
trigger Jt=null
trigger Kt=null
trigger Lt=null
trigger Xt=null
trigger Ct=null
trigger Vt=null
trigger Bt=null
trigger Nt=null
trigger Mt=null
trigger wi=null
trigger ui=null
trigger ri=null
trigger si=null
trigger ti=null
trigger ii=null
trigger Si=null
trigger ci=null
trigger oi=null
trigger Oi=null
trigger li=null
trigger bi=null
trigger yi=null
trigger pi=null
trigger ei=null
trigger qi=null
trigger ai=null
trigger ni=null
trigger di=null
trigger fi=null
trigger Ri=null
trigger Ti=null
trigger Yi=null
trigger Gi=null
trigger gi=null
trigger hi=null
trigger Fi=null
trigger ki=null
trigger ji=null
trigger xi=null
trigger vi=null
trigger mi=null
trigger Qi=null
trigger Wi=null
trigger Ei=null
trigger Zi=null
trigger Ui=null
trigger Ii=null
trigger Pi=null
trigger Ai=null
trigger Di=null
trigger Hi=null
trigger Ji=null
trigger Ki=null
trigger Li=null
trigger Xi=null
trigger Ci=null
trigger Vi=null
trigger Bi=null
trigger Ni=null
trigger Mi=null
trigger wS=null
integer uS=0
player rS=null
integer sS=0
integer array tS
integer iS=0
integer SS=0
integer cS=0
integer oS=0
integer OS=0
integer lS=0
integer bS=0
integer yS=0
integer pS=0
integer eS=0
real array qS
real array aS
boolean array nS
real array dS
integer array fS
real array RS
real array TS
string array YS
string array GS
integer gS=0
real hS=0.
real array FS
integer array kS
real array jS
real array xS
real array vS
real array mS
integer array QS
integer array WS
integer array ES
integer array ZS
integer array US
unit array IS
string array PS
integer array AS
integer array DS
integer array HS
real array JS
real array KS
integer array LS
integer array XS
real array CS
real array VS
real array BS
real array NS
integer array MS
real array wc
integer array uc
integer array rc
integer array sc
playerevent tc=null
trigger ic=null
trigger Sc=null
trigger cc=null
integer array oc
integer Oc=0
integer lc=0
integer bc=0
integer array yc
integer array pc
integer array ec
integer array qc
integer array ac
integer array nc
integer array dc
integer array fc
unit array Rc
group Tc=null
integer array Yc
integer Gc=0
filterfunc gc=null
integer hc=0
timer array Fc
timer array kc
integer array jc
integer array xc
integer array vc
string array mc
integer Qc=0
real array Wc
real Ec=0.
integer array Zc
integer array Uc
integer array Ic
integer array Pc
integer array Ac
integer Dc=0
integer array Hc
integer array Jc
hashtable Kc=null
force Lc=null
force Xc=null
force Cc=null
force Vc=null
force array Bc
integer array Nc
integer array Mc
integer array wo
timer uo=null
real ro=0.
group so=null
hashtable io=null
hashtable So=null
integer array co
integer array oo
integer array Oo
unit array lo
integer array bo
unit array yo
integer array po
integer array eo
integer array qo
integer array ao
integer array no
integer array do
integer array fo
boolean array Ro
integer array To
integer array Yo
string array Go
boolean array go
integer ho=0
integer Fo=0
boolean ko=false
boolean jo=false
boolean xo=false
timer vo=null
real mo=0.
rect Qo=null
rect Wo=null
region Eo=null
real Zo=0.
real Uo=0.
integer Io=0
integer Po=0
integer Ao=0
player array Do
unit array Ho
integer array Jo
unit array Ko
integer array Lo
real array Xo
real array Co
integer array Vo
integer array Bo
integer array No
integer array Mo
integer array wO
integer array uO
integer array rO
integer array sO
integer array tO
multiboard array iO
unit array SO
trigger cO=null
group oO=null
unit array OO
integer lO=0
integer array bO
integer array yO
player array pO
boolean array eO
integer array qO
integer array aO
player array nO
player dO=null
playercolor fO=null
playercolor RO=null
playercolor TO=null
playercolor YO=null
playercolor array GO
group gO=null
unit hO=null
integer FO=0
unit array kO
real jO=0.
trigger array xO
integer vO=0
real array mO
integer QO=0
string array WO
string array EO
string array ZO
string array UO
string array IO
string array PO
string array AO
string array DO
string array HO
string array JO
string array KO
string array LO
string array XO
string array CO
string array VO
string array BO
string array NO
hashtable MO=null
timer array wl
integer ul=0
integer rl=0
integer sl=0
trigger tl=null
trigger il=null
unit Sl=null
unit cl=null
unit array ol
integer Ol=0
integer ll=0
integer array bl
integer yl=0
integer pl=0
integer el=0
integer ql=0
integer array al
integer nl=0
integer array dl
integer fl=0
integer Rl=0
integer array Tl
integer array Yl
integer Gl=0
integer gl=0
integer array hl
integer Fl=0
integer kl=0
integer array jl
integer array xl
integer vl=0
integer ml=0
integer array Ql
integer array Wl
integer El=0
integer Zl=0
integer array Ul
integer array Il
integer Pl=0
integer Al=0
integer array Dl
integer Hl=0
integer array Jl
integer array Kl
integer Ll=0
integer Xl=0
integer array Cl
integer array Vl
integer array Bl
integer Nl=0
integer Ml=0
integer array wb
integer ub=0
integer rb=0
integer array sb
integer tb=0
integer ib=0
integer array Sb
integer array cb
integer ob=0
integer Ob=0
integer array lb
integer array bb
integer yb=0
integer pb=0
integer array eb
integer qb=0
integer ab=0
integer array nb
integer db=0
integer fb=0
integer array Rb
integer array Tb
integer Yb=0
integer Gb=0
integer array gb
integer hb=0
string array Fb
integer kb=0
integer jb=0
integer xb=0
integer array vb
integer array mb
integer array Qb
integer array Wb
integer array Eb
integer array Zb
integer array Ub
integer array Ib
integer array Pb
integer array Ab
integer array Db
integer array Hb
integer array Jb
integer array Kb
integer array Lb
integer array Xb
integer array Cb
integer array Vb
integer array Bb
integer array Nb
integer array Mb
integer array wy
integer array uy
integer array ry
code sy=null
code ty=null
code iy=null
code Sy=null
code cy=null
code oy=null
code Oy=null
code ly=null
code by=null
code yy=null
code py=null
code ey=null
code qy=null
code ay=null
code ny=null
code dy=null
code fy=null
code Ry=null
code Ty=null
code Yy=null
code Gy=null
code gy=null
code hy=null
code Fy=null
code ky=null
code jy=null
code xy=null
code vy=null
code my=null
code Qy=null
code Wy=null
code Ey=null
code Zy=null
code Uy=null
code Iy=null
code Py=null
code Ay=null
code Dy=null
code Hy=null
code Jy=null
code Ky=null
code Ly=null
code Xy=null
code Cy=null
code Vy=null
code By=null
code Ny=null
code My=null
code wp=null
code up=null
code rp=null
code sp=null
code tp=null
code ip=null
code Sp=null
code cp=null
code op=null
code Op=null
code lp=null
code bp=null
code yp=null
code pp=null
code ep=null
code qp=null
code ap=null
code np=null
code dp=null
code fp=null
code Rp=null
code Tp=null
code Yp=null
code Gp=null
code gp=null
code hp=null
code Fp=null
code kp=null
code jp=null
code xp=null
code vp=null
code mp=null
code Qp=null
code Wp=null
code Ep=null
code Zp=null
code Up=null
code Ip=null
code Pp=null
code Ap=null
code Dp=null
code Hp=null
code Jp=null
code Kp=null
code Lp=null
code Xp=null
code Cp=null
code Vp=null
code Bp=null
code Np=null
code Mp=null
code we=null
code ue=null
code re=null
code se=null
code te=null
code ie=null
code Se=null
code ce=null
code oe=null
code Oe=null
code le=null
code be=null
code ye=null
code pe=null
code ee=null
code qe=null
code ae=null
code ne=null
code de=null
code fe=null
code Re=null
code Te=null
code Ye=null
code Ge=null
code ge=null
code he=null
code Fe=null
code ke=null
code je=null
code xe=null
code ve=null
code me=null
code Qe=null
code We=null
code Ee=null
code Ze=null
code Ue=null
code Ie=null
code Pe=null
code Ae=null
code De=null
code He=null
code Je=null
code Ke=null
code Le=null
code Xe=null
code Ce=null
code Ve=null
code Be=null
code Ne=null
code Me=null
code wq=null
code uq=null
code rq=null
code sq=null
code tq=null
code iq=null
code Sq=null
code cq=null
code oq=null
code Oq=null
code lq=null
code bq=null
code yq=null
code pq=null
code eq=null
code qq=null
code aq=null
code nq=null
code dq=null
code fq=null
code Rq=null
code Tq=null
code Yq=null
code Gq=null
code gq=null
code hq=null
code Fq=null
code kq=null
code jq=null
code xq=null
code vq=null
code mq=null
code Qq=null
code Wq=null
code Eq=null
code Zq=null
code Uq=null
code Iq=null
code Pq=null
code Aq=null
code Dq=null
code Hq=null
code Jq=null
code Kq=null
code Lq=null
code Xq=null
code Cq=null
code Vq=null
code Bq=null
code Nq=null
code Mq=null
code wa=null
code ua=null
code ra=null
code sa=null
code ta=null
code ia=null
code Sa=null
code ca=null
code oa=null
code Oa=null
code la=null
code ba=null
code ya=null
code pa=null
code ea=null
code qa=null
code aa=null
code na=null
code da=null
code fa=null
code Ra=null
code Ta=null
code Ya=null
code Ga=null
code ga=null
code ha=null
code Fa=null
code ka=null
code ja=null
code xa=null
code va=null
code ma=null
code Qa=null
code Wa=null
code Ea=null
code Za=null
code Ua=null
code Ia=null
code Pa=null
code Aa=null
code Da=null
code Ha=null
code Ja=null
code Ka=null
code La=null
code Xa=null
code Ca=null
code Va=null
code Ba=null
code Na=null
code Ma=null
code wn=null
code un=null
code rn=null
code sn=null
code tn=null
code Sn=null
code cn=null
code on=null
code On=null
code ln=null
code bn=null
code yn=null
code pn=null
code en=null
code qn=null
code an=null
code nn=null
code dn=null
code fn=null
code Rn=null
code Tn=null
code Yn=null
code Gn=null
code gn=null
code hn=null
code Fn=null
code kn=null
code jn=null
code xn=null
code vn=null
code mn=null
code Qn=null
code Wn=null
code En=null
code Zn=null
code Un=null
code In=null
code Pn=null
code An=null
code Dn=null
code Hn=null
code Jn=null
code Kn=null
code Ln=null
code Xn=null
code Cn=null
code Vn=null
code Bn=null
code Nn=null
code Mn=null
code wd=null
code ud=null
code rd=null
code sd=null
code td=null
code id=null
code Sd=null
code cd=null
code od=null
code Od=null
code ld=null
code bd=null
code yd=null
code pd=null
code ed=null
code qd=null
code ad=null
code nd=null
code dd=null
code fd=null
code Rd=null
code Td=null
code Yd=null
code Gd=null
code gd=null
code hd=null
code Fd=null
code kd=null
code jd=null
code xd=null
code vd=null
code md=null
code Qd=null
code Wd=null
code Ed=null
code Zd=null
code Ud=null
code Id=null
code Pd=null
code Ad=null
code Dd=null
code Hd=null
code Jd=null
code Kd=null
code Ld=null
code Xd=null
code Cd=null
code Vd=null
code Bd=null
code Nd=null
code Md=null
code wf=null
code uf=null
code rf=null
code sf=null
code tf=null
code Sf=null
code cf=null
code of=null
code Of=null
code lf=null
code bf=null
code yf=null
code pf=null
code ef=null
code qf=null
code af=null
code nf=null
code df=null
code ff=null
unit Rf=null
multiboard Tf=null
timer Yf=null
unit Gf=null
trigger gf=null
rect hf=null
endglobals
function Cf takes nothing returns nothing
local player Lf=Player(5)
local unit Xf=CreateUnit(Lf,1211118391,-29950.2,30589.5,270.027)
call SetHeroLevel(Xf,15,false)
call SetUnitState(Xf,UNIT_STATE_MANA,85.)
set Xf=CreateUnit(Lf,1211118406,-30283.9,29308.8,270.348)
call SetHeroLevel(Xf,15,false)
set Lf=null
set Xf=null
endfunction
function DR takes nothing returns nothing
local player PR=Player(22)
local unit AR=CreateUnit(PR,1211118391,-29948.2,29831.1,270.025)
call SetHeroLevel(AR,15,false)
call SetUnitState(AR,UNIT_STATE_MANA,85.)
set AR=CreateUnit(PR,1211118406,-29699.3,29565.4,269.787)
call SetHeroLevel(AR,15,false)
set PR=null
set AR=null
endfunction
function Df takes nothing returns nothing
local player Pf=Player(3)
local unit Af=CreateUnit(Pf,1211118391,-30468.2,30345.3,270.516)
call SetHeroLevel(Af,15,false)
call SetUnitState(Af,UNIT_STATE_MANA,85.)
set Af=CreateUnit(Pf,1211118406,-30252.3,29576.9,270.316)
call SetHeroLevel(Af,15,false)
set Pf=null
set Af=null
endfunction
function ER takes nothing returns nothing
local player QR=Player(18)
local unit WR=CreateUnit(QR,1211118391,-29691.7,30077.9,269.782)
call SetHeroLevel(WR,15,false)
call SetUnitState(WR,UNIT_STATE_MANA,85.)
set WR=CreateUnit(QR,1211118406,-29792.0,29571.7,269.875)
call SetHeroLevel(WR,15,false)
set QR=null
set WR=null
endfunction
function Ef takes nothing returns nothing
local player Qf=Player(1)
local unit Wf=CreateUnit(Qf,1211118391,-30205.9,30601.1,270.267)
call SetHeroLevel(Wf,15,false)
call SetUnitState(Wf,UNIT_STATE_MANA,85.)
set Wf=CreateUnit(Qf,1211118406,-30199.1,29448.7,270.266)
call SetHeroLevel(Wf,15,false)
set Qf=null
set Wf=null
endfunction
function IR takes nothing returns nothing
local player ZR=Player(19)
local unit UR=CreateUnit(ZR,1211118391,-29820.0,29950.4,269.903)
call SetHeroLevel(UR,15,false)
call SetUnitState(UR,UNIT_STATE_MANA,85.)
set UR=CreateUnit(ZR,1211118406,-29707.1,29309.8,269.793)
call SetHeroLevel(UR,15,false)
set ZR=null
set UR=null
endfunction
function If takes nothing returns nothing
local player Zf=Player(2)
local unit Uf=CreateUnit(Zf,1211118391,-30324.4,30466.1,270.380)
call SetHeroLevel(Uf,15,false)
call SetUnitState(Uf,UNIT_STATE_MANA,85.)
set Uf=CreateUnit(Zf,1211118406,-30346.6,29573.7,270.406)
call SetHeroLevel(Uf,15,false)
set Zf=null
set Uf=null
endfunction
function KR takes nothing returns nothing
local player HR=Player(23)
local unit JR=CreateUnit(HR,1211118391,-29689.5,29824.6,269.779)
call SetHeroLevel(JR,15,false)
call SetUnitState(JR,UNIT_STATE_MANA,85.)
set JR=CreateUnit(HR,1211118406,-29815.4,29434.4,269.898)
call SetHeroLevel(JR,15,false)
set HR=null
set JR=null
endfunction
function Kf takes nothing returns nothing
local player Hf=Player(4)
local unit Jf=CreateUnit(Hf,1211118391,-30204.6,30339.2,270.267)
call SetHeroLevel(Jf,15,false)
call SetUnitState(Jf,UNIT_STATE_MANA,85.)
set Jf=CreateUnit(Hf,1211118406,-30106.5,29439.8,270.177)
call SetHeroLevel(Jf,15,false)
set Hf=null
set Jf=null
endfunction
function Nf takes nothing returns nothing
local player Vf=Player(6)
local unit Bf=CreateUnit(Vf,1211118391,-29693.7,30597.0,269.786)
call SetHeroLevel(Bf,15,false)
call SetUnitState(Bf,UNIT_STATE_MANA,85.)
set Bf=CreateUnit(Vf,1211118406,-30199.8,29310.0,270.267)
call SetHeroLevel(Bf,15,false)
set Vf=null
set Bf=null
endfunction
function YR takes nothing returns nothing
local player RR=Player(14)
local unit TR=CreateUnit(RR,1211118391,-30339.8,29950.4,270.397)
call SetHeroLevel(TR,15,false)
call SetUnitState(TR,UNIT_STATE_MANA,85.)
set TR=CreateUnit(RR,1211118406,-29968.7,29556.2,270.045)
call SetHeroLevel(TR,15,false)
set RR=null
set TR=null
endfunction
function aR takes nothing returns nothing
local player eR=Player(12)
local unit qR=CreateUnit(eR,1211118391,-30464.7,30089.7,270.515)
call SetHeroLevel(qR,15,false)
call SetUnitState(qR,UNIT_STATE_MANA,85.)
set qR=CreateUnit(eR,1211118406,-29962.2,29311.8,270.038)
call SetHeroLevel(qR,15,false)
set eR=null
set qR=null
endfunction
function cR takes nothing returns nothing
local player iR=Player(9)
local unit SR=CreateUnit(iR,1211118391,-29693.5,30338.3,269.785)
call SetHeroLevel(SR,15,false)
call SetUnitState(SR,UNIT_STATE_MANA,85.)
set SR=CreateUnit(iR,1211118406,-30045.2,29554.8,270.118)
call SetHeroLevel(SR,15,false)
set iR=null
set SR=null
endfunction
function fR takes nothing returns nothing
local player nR=Player(13)
local unit dR=CreateUnit(nR,1211118391,-30204.3,30080.3,270.268)
call SetHeroLevel(dR,15,false)
call SetUnitState(dR,UNIT_STATE_MANA,85.)
set dR=CreateUnit(nR,1211118406,-30039.0,29306.5,270.112)
call SetHeroLevel(dR,15,false)
set nR=null
set dR=null
endfunction
function hR takes nothing returns nothing
local player GR=Player(15)
local unit gR=CreateUnit(GR,1211118391,-30467.2,29834.7,270.519)
call SetHeroLevel(gR,15,false)
call SetUnitState(gR,UNIT_STATE_MANA,85.)
set gR=CreateUnit(GR,1211118406,-29874.4,29559.4,269.954)
call SetHeroLevel(gR,15,false)
set GR=null
set gR=null
endfunction
function jR takes nothing returns nothing
local player FR=Player(16)
local unit kR=CreateUnit(FR,1211118391,-30203.1,29826.8,270.268)
call SetHeroLevel(kR,15,false)
call SetUnitState(kR,UNIT_STATE_MANA,85.)
set kR=CreateUnit(FR,1211118406,-29780.4,29300.3,269.864)
call SetHeroLevel(kR,15,false)
set FR=null
set kR=null
endfunction
function lR takes nothing returns nothing
local player oR=Player(10)
local unit OR=CreateUnit(oR,1211118391,-30338.2,30210.1,270.394)
call SetHeroLevel(OR,15,false)
call SetUnitState(OR,UNIT_STATE_MANA,85.)
set OR=CreateUnit(oR,1211118406,-29904.6,29442.8,269.983)
call SetHeroLevel(OR,15,false)
set oR=null
set OR=null
endfunction
function mR takes nothing returns nothing
local player xR=Player(17)
local unit vR=CreateUnit(xR,1211118391,-29951.6,30084.7,270.028)
call SetHeroLevel(vR,15,false)
call SetUnitState(vR,UNIT_STATE_MANA,85.)
set vR=CreateUnit(xR,1211118406,-29862.1,29302.2,269.942)
call SetHeroLevel(vR,15,false)
set xR=null
set vR=null
endfunction
function mf takes nothing returns nothing
local player xf=Player(0)
local unit vf=CreateUnit(xf,1211118391,-30470.9,30602.5,270.516)
call SetHeroLevel(vf,15,false)
call SetUnitState(vf,UNIT_STATE_MANA,85.)
set vf=CreateUnit(xf,1211118406,-30360.2,29312.6,270.421)
call SetHeroLevel(vf,15,false)
set xf=null
set vf=null
endfunction
function pR takes nothing returns nothing
local player bR=Player(11)
local unit yR=CreateUnit(bR,1211118391,-29827.0,30210.1,269.911)
call SetHeroLevel(yR,15,false)
call SetUnitState(yR,UNIT_STATE_MANA,85.)
set yR=CreateUnit(bR,1211118406,-30125.9,29321.4,270.196)
call SetHeroLevel(yR,15,false)
set bR=null
set yR=null
endfunction
function tR takes nothing returns nothing
local player rR=Player(8)
local unit sR=CreateUnit(rR,1211118391,-29946.0,30342.9,270.023)
call SetHeroLevel(sR,15,false)
call SetUnitState(sR,UNIT_STATE_MANA,85.)
set sR=CreateUnit(rR,1211118406,-30137.9,29561.1,270.206)
call SetHeroLevel(sR,15,false)
set rR=null
set sR=null
endfunction
function uR takes nothing returns nothing
local player Mf=Player(7)
local unit wR=CreateUnit(Mf,1211118391,-29818.2,30468.8,269.903)
call SetHeroLevel(wR,15,false)
call SetUnitState(wR,UNIT_STATE_MANA,85.)
set wR=CreateUnit(Mf,1211118406,-29998.9,29444.3,270.074)
call SetHeroLevel(wR,15,false)
set Mf=null
set wR=null
endfunction
function CR takes nothing returns nothing
call mf()
call Ef()
call If()
call Df()
call Kf()
call Cf()
call Nf()
call uR()
call tR()
call cR()
call lR()
call pR()
call aR()
call fR()
call YR()
call hR()
call jR()
call mR()
call ER()
call IR()
call DR()
call KR()
endfunction
function PD takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990354 then
return false
endif
return true
endfunction
function AD takes nothing returns boolean
if not PD() then
return false
endif
return true
endfunction
function AG takes nothing returns nothing
local location vG
local location mG
local real QG
local real WG
local rect EG
local group ZG
local group UG
local code IG
local boolean PG
set u=GetUnitLoc(GetSpellAbilityUnit())
set vG=u
set c=Location(GetLocationX(vG)+200.00,GetLocationY(vG)+0.00)
set mG=u
set QG=GetLocationX(mG)
set WG=GetLocationY(mG)
set O=Rect(QG-150,WG-140,QG+150,WG+140)
set EG=O
set ZG=CreateGroup()
call GroupEnumUnitsInRect(ZG,EG,null)
call DestroyBoolExpr(null)
set l=ZG
set UG=l
set IG=ky
set PG=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(UG,IG)
if PG then
call DestroyGroup(UG)
endif
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747988825,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"stand")
call DestroyGroup(l)
call RemoveLocation(c)
call RemoveLocation(u)
set vG=null
set mG=null
set EG=null
set ZG=null
set UG=null
endfunction
function AI takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651852,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651855,0)
endfunction
function PY takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989305 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function AY takes nothing returns boolean
if not PY() then
return false
endif
return true
endfunction
function PZ takes nothing returns boolean
if GetResearched()!=1378889797 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889797,true)!=2 then
return false
endif
return true
endfunction
function AZ takes nothing returns boolean
if not PZ() then
return false
endif
return true
endfunction
function Ag takes nothing returns nothing
local location vg
local location mg
local real Qg
local real Wg
local rect Eg
local group Zg
local group Ug
local code Ig
local boolean Pg
set u=GetUnitLoc(GetSpellAbilityUnit())
set vg=u
set S=Location(GetLocationX(vg)+0.00,GetLocationY(vg)+200.00)
set mg=u
set Qg=GetLocationX(mg)
set Wg=GetLocationY(mg)
set o=Rect(Qg-140,Wg-150,Qg+140,Wg+150)
set Eg=o
set Zg=CreateGroup()
call GroupEnumUnitsInRect(Zg,Eg,null)
call DestroyBoolExpr(null)
set l=Zg
set Ug=l
set Ig=Uy
set Pg=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(Ug,Ig)
if Pg then
call DestroyGroup(Ug)
endif
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747989079,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"stand")
call DestroyGroup(l)
call RemoveLocation(S)
call RemoveLocation(u)
set vg=null
set mg=null
set Eg=null
set Zg=null
set Ug=null
endfunction
function Ax takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988566,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988562,0)
endfunction
function VA takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())==1747988530 then
return true
endif
if GetUnitTypeId(GetTriggerUnit())==1747990327 then
return true
endif
if GetUnitTypeId(GetTriggerUnit())==1747989591 then
return true
endif
if GetUnitTypeId(GetTriggerUnit())==1747990085 then
return true
endif
return false
endfunction
function BA takes nothing returns boolean
if not VA() then
return false
endif
return true
endfunction
function VE takes nothing returns boolean
if GetResearched()!=1378890037 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890037,true)!=2 then
return false
endif
return true
endfunction
function BE takes nothing returns boolean
if not VE() then
return false
endif
return true
endfunction
function BSw takes nothing returns boolean
return true
endfunction
function BT takes nothing returns nothing
local player KT=GetOwningPlayer(GetAttacker())
local player LT=GetOwningPlayer(GetAttacker())
local player XT
local player CT
local unit VT
set r[GetPlayerId(KT)+1]=r[GetPlayerId(LT)+1]+1
set XT=GetOwningPlayer(GetTriggerUnit())
set CT=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(XT)+1]=r[GetPlayerId(CT)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set VT=GetTriggerUnit()
call SetUnitState(VT,UNIT_STATE_LIFE,GetUnitState(VT,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set KT=null
set LT=null
set XT=null
set CT=null
set VT=null
endfunction
function BU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990323,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990106,0)
endfunction
function BW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989573,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989572,0)
endfunction
function niw takes integer aiw returns string
if aiw==0 then
return "|cffADADADtrace|r"
elseif aiw==1 then
return "|cff2685DCdebug|r"
elseif aiw==2 then
return "|cffFFCC00info|r"
elseif aiw==3 then
return "|cffF47E3Ewarning|r"
elseif aiw==4 then
return "|cffFB2700error|r"
endif
return "?"
endfunction
function e6 takes string t6,string i6 returns nothing
local integer S6
local integer c6
local integer o6
local string O6
local integer l6
local integer b6
local string y6
local string p6
set Fb[hb]=i6
set hb=hb+1
set S6=StringHash(t6)
if HaveSavedInteger(Kc,-1,S6) then
if LoadInteger(Kc,-1,S6)+60<ro then
set y6=t6
set i6=""
set c6=hb
set o6=0
loop
set c6=c6-1
set o6=o6+1
exitwhen o6>20 or c6<0
set i6=i6+"\n   "+Fb[c6]
endloop
call DisplayTimedTextToPlayer(dO,0.,0.,45.,niw(4)+" - "+y6+i6)
call SaveInteger(Kc,-1,S6,R2I(ro))
call SaveBoolean(Kc,-1,S6,false)
elseif HaveSavedBoolean(Kc,-1,S6) then
if not LoadBoolean(Kc,-1,S6) then
call DisplayTimedTextToPlayer(dO,0.,0.,45.,niw(4)+" - "+"|cffFF3A29Excessive repeating errors are being omitted")
call SaveBoolean(Kc,-1,S6,true)
endif
else
call DisplayTimedTextToPlayer(dO,0.,0.,45.,niw(4)+" - "+"|cffFF3A29Excessive repeating errors are being omitted")
call SaveBoolean(Kc,-1,S6,true)
endif
else
call SaveInteger(Kc,-1,S6,R2I(ro))
set p6="Message: "+t6
set O6=""
set l6=hb
set b6=0
loop
set l6=l6-1
set b6=b6+1
exitwhen b6>20 or l6<0
set O6=O6+"\n   "+Fb[l6]
endloop
call DisplayTimedTextToPlayer(dO,0.,0.,45.,niw(4)+" - "+p6+O6)
endif
call I2S(1/0)
set hb=hb-1
endfunction
function BOw takes string HOw returns nothing
local unit JOw
local integer KOw
local player LOw
local integer XOw
local integer COw
local boolean VOw
set Fb[hb]=HOw
set hb=hb+1
set JOw=GetEnteringUnit()
set KOw=GetPlayerId(GetOwningPlayer(JOw))
set LOw=nO[KOw]
if GetPlayerSlotState(LOw)==PLAYER_SLOT_STATE_PLAYING then
set VOw=GetPlayerController(LOw)==MAP_CONTROL_USER
else
set VOw=false
endif
if VOw and(not IsUnitType(JOw,UNIT_TYPE_STRUCTURE)) then
set XOw=bO[KOw]
set COw=-GetUnitLevel(JOw)
set Fb[hb]="when calling changeUpkeep in Upkeep, line 12"
set hb=hb+1
if Rb[XOw]==0 then
if XOw==0 then
call e6("Nullpointer exception when calling PlayerStats.changeUpkeep","when calling error in PlayerStats, line 23")
else
call e6("Called PlayerStats.changeUpkeep on invalid object.","when calling error in PlayerStats, line 23")
endif
endif
set aO[XOw]=aO[XOw]+COw
set hb=hb-1
endif
set hb=hb-1
set JOw=null
set LOw=null
endfunction
function Bew takes nothing returns nothing
set hb=0
call BOw("Upkeep, line 8")
endfunction
function Vk takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989048 then
return false
endif
if GetUnitTypeId(GetSpellTargetUnit())!=1747988569 then
return false
endif
return true
endfunction
function Bk takes nothing returns boolean
if not Vk() then
return false
endif
return true
endfunction
function Vm takes nothing returns boolean
if GetResearched()!=1378889803 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889803,true)!=1 then
return false
endif
return true
endfunction
function Bm takes nothing returns boolean
if not Vm() then
return false
endif
return true
endfunction
function Ocw takes string ccw returns integer
local integer ocw
set Fb[hb]=ccw
set hb=hb+1
set Fb[hb]="when calling Table in Table, line 5"
set hb=hb+1
if Nl==0 then
if Ml<32768 then
set Ml=Ml+1
set ocw=Ml
set wb[ocw]=724
else
call e6("Out of memory: Could not create Table.","when calling error in Table, line 6")
set ocw=0
endif
else
set Nl=Nl-1
set ocw=Bl[Nl]
set wb[ocw]=724
endif
set hb=hb-1-1
return ocw
endfunction
function Bpw takes nothing returns boolean
set hb=0
set Fb[hb]="TimerUtils, line 1"
set hb=hb+1
set rl=Ocw("when calling new_Table in TimerUtils, line 12")
call CreateTimer()
call CreateTrigger()
set hb=hb-1
return true
endfunction
function XD takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990356 then
return false
endif
return true
endfunction
function CD takes nothing returns boolean
if not XD() then
return false
endif
return true
endfunction
function XG takes nothing returns boolean
if IsUnitType(GetEnumUnit(),UNIT_TYPE_STRUCTURE)!=false then
return false
endif
return true
endfunction
function CG takes nothing returns nothing
if XG() then
call SetUnitPositionLoc(GetEnumUnit(),S)
endif
endfunction
function CI takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990595,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990608,0)
endfunction
function CSw takes nothing returns boolean
return true
endfunction
function XZ takes nothing returns boolean
if GetResearched()!=1378890036 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890036,true)!=1 then
return false
endif
return true
endfunction
function CZ takes nothing returns boolean
if not XZ() then
return false
endif
return true
endfunction
function How takes unit Iow,string Aow returns integer
local integer Dow
set Fb[hb]=Aow
set hb=hb+1
set Fb[hb]="when calling UnitIndex in UnitIndexer, line 166"
set hb=hb+1
if Yb==0 then
if Gb<32768 then
set Gb=Gb+1
set Dow=Gb
set gb[Dow]=734
else
call e6("Out of memory: Could not create UnitIndex.","when calling error in UnitIndexer, line 157")
set Dow=0
endif
else
set Yb=Yb-1
set Dow=Tb[Yb]
set gb[Dow]=734
endif
set hb=hb-1
set ol[Dow]=Iow
call SetUnitUserData(ol[Dow],Dow)
set Sl=ol[Dow]
call TriggerEvaluate(tl)
set hb=hb-1
return Dow
endfunction
function Uow takes string Eow returns nothing
local unit Zow
set Fb[hb]=Eow
set hb=hb+1
set Zow=OO[lO-1]
set Fb[hb]="when calling toUnitIndex in UnitIndexer, line 179"
set hb=hb+1
if GetUnitUserData(Zow)==0 then
call How(Zow,"when calling new_UnitIndex in UnitIndexer, line 125")
endif
set hb=hb-1-1
set Zow=null
endfunction
function Cew takes nothing returns nothing
set hb=0
call Uow("UnitIndexer, line 179")
endfunction
function Xg takes nothing returns boolean
local unitstate Lg=UNIT_STATE_MANA
if GetUnitState(GetEnumUnit(),Lg)>0.00 then
set Lg=null
return false
endif
set Lg=null
return true
endfunction
function Cg takes nothing returns nothing
if Xg() then
call KillUnit(GetEnumUnit())
endif
endfunction
function Xh takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988791 then
return false
endif
if GetUnitTypeId(GetSpellTargetUnit())!=1747988787 then
return false
endif
return true
endfunction
function Ch takes nothing returns boolean
if not Xh() then
return false
endif
return true
endfunction
function Ciw takes nothing returns boolean
set jO=-340282366920938000000000000000000000000.
return true
endfunction
function B6 takes string C6 returns integer
local integer V6
set Fb[hb]=C6
set hb=hb+1
set Fb[hb]="when calling HashMap in HashMap, line 7"
set hb=hb+1
if Nl==0 then
if Ml<32768 then
set Ml=Ml+1
set V6=Ml
set wb[V6]=725
else
call e6("Out of memory: Could not create HashMap.","when calling error in HashMap, line 8")
set V6=0
endif
else
set Nl=Nl-1
set V6=Bl[Nl]
set wb[V6]=725
endif
set hb=hb-1-1
return V6
endfunction
function Cpw takes nothing returns boolean
set hb=0
set Fb[hb]="EventHelper, line 1"
set hb=hb+1
call B6("when calling new_HashMap in EventHelper, line 6")
call B6("when calling new_HashMap in EventHelper, line 7")
call Ocw("when calling new_Table in EventHelper, line 8")
set hb=hb-1
return true
endfunction
function Cx takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988567,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988564,0)
endfunction
function DD takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function AU takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function DU takes nothing returns boolean
if not AU() then
return false
endif
return true
endfunction
function AW takes nothing returns boolean
if GetResearched()!=1378889811 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889811,true)!=1 then
return false
endif
return true
endfunction
function DW takes nothing returns boolean
if not AW() then
return false
endif
return true
endfunction
function DZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989832,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989833,0)
endfunction
function Dcw takes timer Zcw,string Ucw returns integer
local integer Icw
local integer Pcw
local integer Acw
set Fb[hb]=Ucw
set hb=hb+1
set Icw=rl
set Pcw=GetHandleId(Zcw)
set Fb[hb]="when calling loadInt in TimerUtils, line 21"
set hb=hb+1
if wb[Icw]==0 then
if Icw==0 then
call e6("Nullpointer exception when calling Table.loadInt","when calling error in Table, line 39")
else
call e6("Called Table.loadInt on invalid object.","when calling error in Table, line 39")
endif
endif
set Acw=LoadInteger(MO,Icw,Pcw)
set hb=hb-1-1
return Acw
endfunction
function A1 takes integer U1,integer I1 returns nothing
local integer P1
set Wc[U1]=Wc[U1]-1.
set P1=0
set I1=23
loop
exitwhen P1>I1
call MultiboardSetTitleText(iO[P1],"Income: "+I2S(R2I(Wc[U1]/60.))+":"+I2S(R2I(ModuloReal(Wc[U1],60.)/10.))+I2S(R2I(ModuloReal(ModuloReal(Wc[U1],60.),10.))))
set P1=P1+1
endloop
if Wc[U1]<=0. then
set Wc[U1]=120.0
endif
endfunction
function mbw takes integer kbw,integer jbw,string xbw returns integer
local integer vbw
set Fb[hb]=xbw
set hb=hb+1
if wb[kbw]==0 then
if kbw==0 then
call e6("Nullpointer exception when calling HashMap.get","when calling error in HashMap, line 19")
else
call e6("Called HashMap.get on invalid object.","when calling error in HashMap, line 19")
endif
endif
set Fb[hb]="when calling get in HashMap, line 19"
set hb=hb+1
set Fb[hb]="when calling loadInt in HashMap, line 20"
set hb=hb+1
if wb[kbw]==0 then
if kbw==0 then
call e6("Nullpointer exception when calling Table.loadInt","when calling error in Table, line 39")
else
call e6("Called Table.loadInt on invalid object.","when calling error in Table, line 39")
endif
endif
set vbw=LoadInteger(MO,kbw,jbw)
set hb=hb-1-1-1
return vbw
endfunction
function Flw takes integer Glw,integer glw,string hlw returns nothing
set Fb[hb]=hlw
set hb=hb+1
if jl[Glw]==0 then
if Glw==0 then
call e6("Nullpointer exception when calling City.getCityModifierOnAdd","when calling error in City, line 405")
else
call e6("Called City.getCityModifierOnAdd on invalid object.","when calling error in City, line 405")
endif
endif
set Fb[hb]="when calling getCityModifierOnAdd in City, line 405"
set hb=hb+1
set BS[Glw]=BS[Glw]+aS[mbw(eS,glw,"when calling get in City, line 406")]
set NS[Glw]=NS[Glw]+TS[mbw(eS,glw,"when calling get in City, line 407")]
set hb=hb-1-1
endfunction
function l8 takes integer i8,integer S8,integer c8,string o8 returns integer
local integer O8
set Fb[hb]=o8
set hb=hb+1
set Fb[hb]="when calling LLEntry in LinkedList, line 401"
set hb=hb+1
if tb==0 then
if ib<32768 then
set ib=ib+1
set O8=ib
set Sb[O8]=696
else
call e6("Out of memory: Could not create LLEntry.","when calling error in LinkedList, line 396")
set O8=0
endif
else
set tb=tb-1
set O8=sb[tb]
set Sb[O8]=696
endif
set hb=hb-1
set eo[O8]=i8
set qo[O8]=S8
set ao[O8]=c8
set hb=hb-1
return O8
endfunction
function ayw takes integer yyw,integer pyw,string eyw returns nothing
local integer qyw
set Fb[hb]=eyw
set hb=hb+1
if eb[yyw]==0 then
if yyw==0 then
call e6("Nullpointer exception when calling LinkedList.add","when calling error in LinkedList, line 37")
else
call e6("Called LinkedList.add on invalid object.","when calling error in LinkedList, line 37")
endif
endif
set Fb[hb]="when calling add in LinkedList, line 37"
set hb=hb+1
set qyw=l8(pyw,qo[To[yyw]],To[yyw],"when calling new_LLEntry in LinkedList, line 39")
set ao[qo[To[yyw]]]=qyw
set qo[To[yyw]]=qyw
set Yo[yyw]=Yo[yyw]+1
set hb=hb-1-1
endfunction
function d8 takes integer q8,integer a8 returns boolean
local integer n8=ao[To[q8]]
loop
exitwhen n8==To[q8]
if eo[n8]==a8 then
return true
endif
set n8=ao[n8]
endloop
return false
endfunction
function Ecw takes timer xcw,integer vcw,string mcw returns nothing
local integer Qcw
local integer Wcw
set Fb[hb]=mcw
set hb=hb+1
set Qcw=rl
set Wcw=GetHandleId(xcw)
set Fb[hb]="when calling saveInt in TimerUtils, line 17"
set hb=hb+1
if wb[Qcw]==0 then
if Qcw==0 then
call e6("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call e6("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(MO,Qcw,Wcw,vcw)
set hb=hb-1-1
endfunction
function Kcw takes string Hcw returns timer
local timer Jcw
set Fb[hb]=Hcw
set hb=hb+1
if ul>0 then
set ul=ul-1
call Ecw(wl[ul],0,"when calling setData in TimerUtils, line 29")
set hb=hb-1
set Jcw=null
return wl[ul]
else
set Jcw=CreateTimer()
call Ecw(Jcw,0,"when calling setData in TimerUtils, line 32")
set hb=hb-1
set Yf=Jcw
set Jcw=null
return Yf
endif
endfunction
function q3 takes integer b3,real y3,string p3 returns nothing
local timer e3
set Fb[hb]=p3
set hb=hb+1
set e3=Kcw("when calling getTimer in ClosureTimers, line 68")
call Ecw(e3,b3,"when calling setData in ClosureTimers, line 69")
call TimerStart(e3,y3,false,sf)
set kc[b3]=e3
set hb=hb-1
set e3=null
endfunction
function CC takes integer AC,integer DC,string HC returns boolean
local real JC
local integer KC
local boolean LC
local integer XC
set Fb[hb]=HC
set hb=hb+1
set KC=uc[AC]
set Fb[hb]="when calling has in City, line 355"
set hb=hb+1
if eb[KC]==0 then
if KC==0 then
call e6("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call e6("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set LC=d8(KC,DC)
set hb=hb-1
if LC then
set hb=hb-1
return false
endif
call ayw(uc[AC],DC,"when calling add in City, line 357")
call Flw(AC,DC,"when calling getCityModifierOnAdd in City, line 358")
set JC=qS[mbw(eS,DC,"when calling get in City, line 360")]
set Fb[hb]="when calling alloc_Closure in City, line 360"
set hb=hb+1
if El==0 then
if Zl<32768 then
set Zl=Zl+1
set XC=Zl
set Ul[XC]=639
else
call e6("Out of memory: Could not create Closure.","when calling error in City, line 360")
set XC=0
endif
else
set El=El-1
set XC=Wl[El]
set Ul[XC]=639
endif
set hb=hb-1
set ZS[XC]=AC
set US[XC]=DC
set Fb[hb]="when calling doAfter in City, line 360"
set hb=hb+1
set Fb[hb]="when calling start in ClosureTimers, line 15"
set hb=hb+1
if Ul[XC]==0 then
if XC==0 then
call e6("Nullpointer exception when calling CallbackSingle.start","when calling error in ClosureTimers, line 67")
else
call e6("Called CallbackSingle.start on invalid object.","when calling error in ClosureTimers, line 67")
endif
endif
call q3(XC,JC,"when calling start in ClosureTimers, line 67")
set hb=hb-1-1-1
return true
endfunction
function Hbw takes integer Abw,string Dbw returns nothing
set Fb[hb]=Dbw
set hb=hb+1
if lb[Abw]==0 then
if Abw==0 then
call e6("Nullpointer exception when calling LLIterator.LLIterator","when calling error in LinkedList, line 406")
else
call e6("Called LLIterator.LLIterator on invalid object.","when calling error in LinkedList, line 406")
endif
endif
set Fb[hb]="when calling destroyLLIterator in LinkedList, line 406"
set hb=hb+1
set Fb[hb]="when calling LLIterator in LinkedList, line 406"
set hb=hb+1
if lb[Abw]==0 then
call e6("Double free: object of type LLIterator","when calling error in LinkedList, line 406")
else
set cb[ob]=Abw
set ob=ob+1
set lb[Abw]=0
endif
set hb=hb-1-1-1
endfunction
function Cbw takes integer Jbw,string Kbw returns nothing
local integer Lbw
local integer Xbw
set Fb[hb]=Kbw
set hb=hb+1
if lb[Jbw]==0 then
if Jbw==0 then
call e6("Nullpointer exception when calling LLIterator.reset","when calling error in LinkedList, line 421")
else
call e6("Called LLIterator.reset on invalid object.","when calling error in LinkedList, line 421")
endif
endif
set Fb[hb]="when calling reset in LinkedList, line 421"
set hb=hb+1
set Lbw=fo[Jbw]
set Fb[hb]="when calling getDummy in LinkedList, line 422"
set hb=hb+1
if eb[Lbw]==0 then
if Lbw==0 then
call e6("Nullpointer exception when calling LinkedList.getDummy","when calling error in LinkedList, line 362")
else
call e6("Called LinkedList.getDummy on invalid object.","when calling error in LinkedList, line 362")
endif
endif
set Xbw=To[Lbw]
set hb=hb-1
set no[Jbw]=Xbw
set do[Jbw]=no[Jbw]
set hb=hb-1-1
endfunction
function e8 takes integer b8,string y8 returns integer
local integer p8
set Fb[hb]=y8
set hb=hb+1
set Fb[hb]="when calling LLIterator in LinkedList, line 412"
set hb=hb+1
if ob==0 then
if Ob<32768 then
set Ob=Ob+1
set p8=Ob
set lb[p8]=697
else
call e6("Out of memory: Could not create LLIterator.","when calling error in LinkedList, line 406")
set p8=0
endif
else
set ob=ob-1
set p8=cb[ob]
set lb[p8]=697
endif
set hb=hb-1
set Fb[hb]="when calling construct_LLIterator in LinkedList, line 412"
set hb=hb+1
set Ro[p8]=true
set fo[p8]=b8
call Cbw(p8,"when calling reset in LinkedList, line 414")
set hb=hb-1-1
return p8
endfunction
function EN takes integer dN,integer fN,string RN returns nothing
local real TN
local integer YN
local real GN
local integer gN
local real hN
local integer FN
local real kN
local integer jN
local real xN
local integer vN
local integer mN
local integer QN
local integer WN
set Fb[hb]=RN
set hb=hb+1
set TN=dS[mbw(eS,2,"when calling get in City, line 143")]
if GetRandomReal(0.0,1.0)<=TN then
set YN=sc[dN]
set Fb[hb]="when calling addModifier in City, line 144"
set hb=hb+1
if jl[YN]==0 then
if YN==0 then
call e6("Nullpointer exception when calling City.addModifier","when calling error in City, line 354")
else
call e6("Called City.addModifier on invalid object.","when calling error in City, line 354")
endif
endif
call CC(YN,2,"when calling addModifier in City, line 354")
set hb=hb-1
endif
set GN=dS[mbw(eS,5,"when calling get in City, line 145")]
if GetRandomReal(0.0,1.0)<=GN then
set gN=sc[dN]
set Fb[hb]="when calling addModifier in City, line 146"
set hb=hb+1
if jl[gN]==0 then
if gN==0 then
call e6("Nullpointer exception when calling City.addModifier","when calling error in City, line 354")
else
call e6("Called City.addModifier on invalid object.","when calling error in City, line 354")
endif
endif
call CC(gN,5,"when calling addModifier in City, line 354")
set hb=hb-1
endif
set hN=dS[mbw(eS,7,"when calling get in City, line 147")]
if GetRandomReal(0.0,1.0)<=hN then
set FN=sc[dN]
set Fb[hb]="when calling addModifier in City, line 148"
set hb=hb+1
if jl[FN]==0 then
if FN==0 then
call e6("Nullpointer exception when calling City.addModifier","when calling error in City, line 354")
else
call e6("Called City.addModifier on invalid object.","when calling error in City, line 354")
endif
endif
call CC(FN,7,"when calling addModifier in City, line 354")
set hb=hb-1
endif
set kN=dS[mbw(eS,3,"when calling get in City, line 149")]
if GetRandomReal(0.0,1.0)<=kN then
set jN=sc[dN]
set Fb[hb]="when calling addModifier in City, line 150"
set hb=hb+1
if jl[jN]==0 then
if jN==0 then
call e6("Nullpointer exception when calling City.addModifier","when calling error in City, line 354")
else
call e6("Called City.addModifier on invalid object.","when calling error in City, line 354")
endif
endif
call CC(jN,3,"when calling addModifier in City, line 354")
set hb=hb-1
endif
set xN=dS[mbw(eS,4,"when calling get in City, line 151")]
if GetRandomReal(0.0,1.0)<=xN then
set vN=sc[dN]
set Fb[hb]="when calling addModifier in City, line 152"
set hb=hb+1
if jl[vN]==0 then
if vN==0 then
call e6("Nullpointer exception when calling City.addModifier","when calling error in City, line 354")
else
call e6("Called City.addModifier on invalid object.","when calling error in City, line 354")
endif
endif
call CC(vN,4,"when calling addModifier in City, line 354")
set hb=hb-1
endif
set mN=uc[sc[dN]]
set Fb[hb]="when calling iterator in City, line 154"
set hb=hb+1
set QN=e8(mN,"when calling new_LLIterator in LinkedList, line 165")
set hb=hb-1
set fN=QN
loop
exitwhen ao[do[fN]]==no[fN]
set do[fN]=ao[do[fN]]
set WN=sc[dN]
set Fb[hb]="when calling getCityModifierOnLongCount in City, line 155"
set hb=hb+1
if jl[WN]==0 then
if WN==0 then
call e6("Nullpointer exception when calling City.getCityModifierOnLongCount","when calling error in City, line 401")
else
call e6("Called City.getCityModifierOnLongCount on invalid object.","when calling error in City, line 401")
endif
endif
set hb=hb-1
endloop
set Fb[hb]="when calling close in City, line 154"
set hb=hb+1
if Ro[fN]then
call Hbw(fN,"when calling LLIterator in LinkedList, line 450")
endif
set hb=hb-1-1
endfunction
function x0w takes real j0w returns real
if j0w>0. then
return 1.
elseif j0w<0. then
return -1.
else
return 0.
endif
endfunction
function wcw takes integer NSw returns string
local string MSw="|cff15ff00+"
if x0w(NSw*1.)==-1. then
set MSw="|cffff0000"
endif
return MSw+I2S(NSw)+"|r"
endfunction
function k5 takes integer n5,integer d5,string f5 returns nothing
local integer R5
local integer T5
local multiboard Y5
local integer G5
local boolean g5
local integer h5
local integer F5
set Fb[hb]=f5
set hb=hb+1
set R5=0
set T5=23
loop
exitwhen R5>T5
set G5=bO[R5]
set Fb[hb]="when calling isInGame in Economy, line 45"
set hb=hb+1
if Rb[G5]==0 then
if G5==0 then
call e6("Nullpointer exception when calling PlayerStats.isInGame","when calling error in PlayerStats, line 14")
else
call e6("Called PlayerStats.isInGame on invalid object.","when calling error in PlayerStats, line 14")
endif
endif
set g5=eO[G5]
set hb=hb-1
if g5 then
set Y5=iO[R5]
set h5=No[0]
set d5=No[1]
set n5=bO[R5]
set Fb[hb]="when calling getUpkeep in Economy, line 47"
set hb=hb+1
if Rb[n5]==0 then
if n5==0 then
call e6("Nullpointer exception when calling PlayerStats.getUpkeep","when calling error in PlayerStats, line 20")
else
call e6("Called PlayerStats.getUpkeep on invalid object.","when calling error in PlayerStats, line 20")
endif
endif
set F5=aO[n5]
set hb=hb-1
set f5=wcw(F5)
call MultiboardSetItemValue(MultiboardGetItem(Y5,d5,h5),f5)
endif
set R5=R5+1
endloop
set hb=hb-1
set Y5=null
endfunction
function syw takes integer Vbw,integer Bbw,string Nbw returns integer
local integer Mbw
local integer wyw
local integer uyw
local integer ryw
set Fb[hb]=Nbw
set hb=hb+1
if eb[Vbw]==0 then
if Vbw==0 then
call e6("Nullpointer exception when calling LinkedList.get","when calling error in LinkedList, line 50")
else
call e6("Called LinkedList.get on invalid object.","when calling error in LinkedList, line 50")
endif
endif
set Fb[hb]="when calling get in LinkedList, line 50"
set hb=hb+1
set Fb[hb]="when calling getEntry in LinkedList, line 51"
set hb=hb+1
if eb[Vbw]==0 then
if Vbw==0 then
call e6("Nullpointer exception when calling LinkedList.getEntry","when calling error in LinkedList, line 366")
else
call e6("Called LinkedList.getEntry on invalid object.","when calling error in LinkedList, line 366")
endif
endif
set wyw=To[Vbw]
set uyw=0
set ryw=Bbw
loop
exitwhen uyw>ryw
set wyw=ao[wyw]
set uyw=uyw+1
endloop
set hb=hb-1
set Mbw=eo[wyw]
set hb=hb-1-1
return Mbw
endfunction
function FB takes integer fB,integer RB,real TB,string YB returns nothing
local integer GB
local real gB
local integer hB
set Fb[hb]=YB
set hb=hb+1
set GB=LS[fB]
set hB=LS[fB]
set gB=TB*GetRandomReal(syw(tS[RB],0,"when calling get in City, line 388")/1000.,syw(tS[RB],1,"when calling get in City, line 388")/1000.)*LS[fB]
set LS[fB]=hB+R2I(gB)
set XS[fB]=XS[fB]+(LS[fB]-GB)
set hb=hb-1
endfunction
function QB takes integer kB,integer jB,string xB returns nothing
local integer vB
local real mB
set Fb[hb]=xB
set hb=hb+1
set vB=fS[mbw(eS,jB,"when calling get in City, line 393")]
set mB=RS[mbw(eS,jB,"when calling get in City, line 394")]
set Fb[hb]="when calling addPopulation in City, line 395"
set hb=hb+1
if jl[kB]==0 then
if kB==0 then
call e6("Nullpointer exception when calling City.addPopulation","when calling error in City, line 386")
else
call e6("Called City.addPopulation on invalid object.","when calling error in City, line 386")
endif
endif
call FB(kB,vB,mB,"when calling addPopulation in City, line 386")
set hb=hb-1
if nS[mbw(eS,jB,"when calling get in City, line 397")]==false then
set BS[kB]=BS[kB]-aS[mbw(eS,jB,"when calling get in City, line 398")]*5.0/qS[mbw(eS,jB,"when calling get in City, line 398")]
endif
set hb=hb-1
endfunction
function nN takes integer iN,integer SN,string cN returns nothing
local integer oN
local integer ON
local integer lN
local integer bN
local real yN
local integer pN
local integer eN
local integer qN
local integer aN
set Fb[hb]=cN
set hb=hb+1
set CS[rc[iN]]=CS[rc[iN]]+GetRandomReal(-0.0001,0.00015)*CS[rc[iN]]
set oN=LS[rc[iN]]
set aN=LS[rc[iN]]
set yN=Pow(LS[rc[iN]]*CS[rc[iN]],0.8)*mS[MS[rc[iN]]]
set LS[rc[iN]]=aN+R2I(yN)
set SN=LS[rc[iN]]-oN
set ON=GetRandomInt(R2I(-(0.25*SN)),R2I(0.25*SN))
set LS[rc[iN]]=LS[rc[iN]]+ON
set XS[rc[iN]]=LS[rc[iN]]-oN
set pN=uc[rc[iN]]
set Fb[hb]="when calling iterator in City, line 137"
set hb=hb+1
set eN=e8(pN,"when calling new_LLIterator in LinkedList, line 165")
set hb=hb-1
set lN=eN
loop
exitwhen ao[do[lN]]==no[lN]
set do[lN]=ao[do[lN]]
set bN=eo[do[lN]]
set qN=rc[iN]
set cN="when calling getCityModifierOnFastCount in City, line 138"
set Fb[hb]="when calling getCityModifierOnFastCount in City, line 138"
set hb=hb+1
if jl[qN]==0 then
if qN==0 then
call e6("Nullpointer exception when calling City.getCityModifierOnFastCount","when calling error in City, line 392")
else
call e6("Called City.getCityModifierOnFastCount on invalid object.","when calling error in City, line 392")
endif
endif
call QB(qN,bN,"when calling getCityModifierOnFastCount in City, line 392")
set hb=hb-1
endloop
set Fb[hb]="when calling close in City, line 137"
set hb=hb+1
if Ro[lN]then
call Hbw(lN,"when calling LLIterator in LinkedList, line 450")
endif
set hb=hb-1-1
endfunction
function Klw takes integer Hlw,string Jlw returns nothing
set Fb[hb]=Jlw
set hb=hb+1
if Ql[Hlw]==0 then
if Hlw==0 then
call e6("Nullpointer exception when calling ForGroupCallback.ForGroupCallback","when calling error in ClosureForGroups, line 3")
else
call e6("Called ForGroupCallback.ForGroupCallback on invalid object.","when calling error in ClosureForGroups, line 3")
endif
endif
set Fb[hb]="when calling destroyForGroupCallback in ClosureForGroups, line 3"
set hb=hb+1
set Fb[hb]="when calling ForGroupCallback in ClosureForGroups, line 3"
set hb=hb+1
if Ql[Hlw]==0 then
call e6("Double free: object of type ForGroupCallback","when calling error in ClosureForGroups, line 3")
else
set xl[vl]=Hlw
set vl=vl+1
set Ql[Hlw]=0
endif
set hb=hb-1-1-1
endfunction
function MM takes integer CM,string VM returns nothing
local integer BM
local integer NM
set Fb[hb]=VM
set hb=hb+1
set BM=0
set NM=bj_MAX_PLAYER_SLOTS-1
loop
exitwhen BM>NM
set Yc[Gc]=CM
set Gc=Gc+1
call GroupEnumUnitsOfPlayer(Tc,nO[BM],gc)
call GroupClear(Tc)
set Gc=Gc-1
set BM=BM+1
endloop
call Klw(CM,"when calling ForGroupCallback in ClosureForGroups, line 66")
set hb=hb-1
endfunction
function I2 takes string h2 returns nothing
local integer F2
local integer k2
local integer j2
local integer x2
local integer v2
local real m2
local integer Q2
local integer W2
local integer E2
local integer Z2
local integer U2
set Fb[hb]=h2
set hb=hb+1
set F2=0
set k2=23
loop
exitwhen F2>k2
set Pc[F2]=0
set Ac[F2]=0
set F2=F2+1
endloop
set j2=R2I(gS*0.5/10.0)+1
set x2=0
set v2=R2I(20)-1
loop
exitwhen x2>v2
set m2=x2*0.5
set Fb[hb]="when calling alloc_Closure in Economy, line 29"
set hb=hb+1
if El==0 then
if Zl<32768 then
set Zl=Zl+1
set Q2=Zl
set Ul[Q2]=644
else
call e6("Out of memory: Could not create Closure.","when calling error in Economy, line 29")
set Q2=0
endif
else
set El=El-1
set Q2=Wl[El]
set Ul[Q2]=644
endif
set hb=hb-1
set Hc[Q2]=x2
set Jc[Q2]=j2
set Fb[hb]="when calling doAfter in Economy, line 29"
set hb=hb+1
set Fb[hb]="when calling start in ClosureTimers, line 15"
set hb=hb+1
if Ul[Q2]==0 then
if Q2==0 then
call e6("Nullpointer exception when calling CallbackSingle.start","when calling error in ClosureTimers, line 67")
else
call e6("Called CallbackSingle.start on invalid object.","when calling error in ClosureTimers, line 67")
endif
endif
call q3(Q2,m2,"when calling start in ClosureTimers, line 67")
set hb=hb-1-1
set W2=gS-1
set E2=(x2+1)*j2-1
if W2<2147483647 then
set Z2=W2
else
set Z2=2147483647
endif
if E2<Z2 then
set Z2=E2
endif
exitwhen Z2==gS-1
set x2=x2+1
endloop
set Fb[hb]="when calling alloc_Closure in Economy, line 38"
set hb=hb+1
if vl==0 then
if ml<32768 then
set ml=ml+1
set U2=ml
set Ql[U2]=683
else
call e6("Out of memory: Could not create Closure.","when calling error in Economy, line 38")
set U2=0
endif
else
set vl=vl-1
set U2=xl[vl]
set Ql[U2]=683
endif
set hb=hb-1
call MM(U2,"when calling forUnitsAll in Economy, line 38")
set hb=hb-1
endfunction
function r6 takes integer j5,integer x5,string v5 returns nothing
local integer m5
local multiboard Q5
local integer W5
local integer E5
local integer Z5
local integer U5
local integer I5
local boolean P5
local integer A5
local integer D5
local string H5
local integer J5
local string K5
local integer L5
local integer X5
local integer C5
local boolean V5
local integer B5
local integer N5
local integer M5
local player w6
local playerstate u6
set Fb[hb]=v5
set hb=hb+1
set Dc=Dc+1
set j5=0
set m5=23
loop
exitwhen j5>m5
set I5=bO[j5]
set v5="when calling isInGame in Economy, line 53"
set Fb[hb]="when calling isInGame in Economy, line 53"
set hb=hb+1
if Rb[I5]==0 then
if I5==0 then
call e6("Nullpointer exception when calling PlayerStats.isInGame","when calling error in PlayerStats, line 14")
else
call e6("Called PlayerStats.isInGame on invalid object.","when calling error in PlayerStats, line 14")
endif
endif
set P5=eO[I5]
set hb=hb-1
if P5 then
set Q5=iO[j5]
set A5=Bo[0]
set D5=Bo[1]
set H5=wcw(Pc[j5])
call MultiboardSetItemValue(MultiboardGetItem(Q5,D5,A5),H5)
set J5=No[0]
set x5=No[1]
set L5=bO[j5]
set Fb[hb]="when calling getUpkeep in Economy, line 56"
set hb=hb+1
if Rb[L5]==0 then
if L5==0 then
call e6("Nullpointer exception when calling PlayerStats.getUpkeep","when calling error in PlayerStats, line 20")
else
call e6("Called PlayerStats.getUpkeep on invalid object.","when calling error in PlayerStats, line 20")
endif
endif
set X5=aO[L5]
set hb=hb-1
set K5=wcw(X5)
call MultiboardSetItemValue(MultiboardGetItem(Q5,x5,J5),K5)
endif
set j5=j5+1
endloop
if Dc==R2I(12) then
set Dc=0
set W5=0
set E5=23
loop
exitwhen W5>E5
set C5=bO[W5]
set Fb[hb]="when calling isInGame in Economy, line 61"
set hb=hb+1
if Rb[C5]==0 then
if C5==0 then
call e6("Nullpointer exception when calling PlayerStats.isInGame","when calling error in PlayerStats, line 14")
else
call e6("Called PlayerStats.isInGame on invalid object.","when calling error in PlayerStats, line 14")
endif
endif
set V5=eO[C5]
set hb=hb-1
if V5 then
set Z5=GetPlayerState(nO[W5],PLAYER_STATE_RESOURCE_GOLD)
set U5=GetPlayerState(nO[W5],PLAYER_STATE_RESOURCE_LUMBER)
set w6=nO[W5]
set u6=PLAYER_STATE_RESOURCE_GOLD
set M5=Z5+Pc[W5]
set B5=bO[W5]
set Fb[hb]="when calling getUpkeep in Economy, line 64"
set hb=hb+1
if Rb[B5]==0 then
if B5==0 then
call e6("Nullpointer exception when calling PlayerStats.getUpkeep","when calling error in PlayerStats, line 20")
else
call e6("Called PlayerStats.getUpkeep on invalid object.","when calling error in PlayerStats, line 20")
endif
endif
set N5=aO[B5]
set hb=hb-1
call SetPlayerState(w6,u6,M5+N5)
call SetPlayerState(nO[W5],PLAYER_STATE_RESOURCE_LUMBER,U5+Ac[W5])
endif
set W5=W5+1
endloop
endif
call I2("when calling countIncomeForAll in Economy, line 68")
set hb=hb-1
set Q5=null
set w6=null
set u6=null
endfunction
function PC takes integer UC returns string
local string IC
if jo then
return I2S(LS[UC])
endif
if LS[UC]<100000 then
set IC=I2S(R2I(LS[UC]*1./1000))+","+I2S(R2I(ModuloReal(LS[UC],1000)/100.))+"k"
else
set IC=I2S(R2I(LS[UC]*1./1000))+"k"
endif
return IC
endfunction
function Ylw takes integer elw,string qlw returns string
local integer alw
local integer nlw
local integer dlw
local integer flw
local integer Rlw
local integer Tlw
set Fb[hb]=qlw
set hb=hb+1
if jl[elw]==0 then
if elw==0 then
call e6("Nullpointer exception when calling City.getCityNameColored","when calling error in City, line 167")
else
call e6("Called City.getCityNameColored on invalid object.","when calling error in City, line 167")
endif
endif
set flw=Nc[DS[elw]]
set Rlw=Mc[DS[elw]]
set Tlw=wo[DS[elw]]
set alw=flw/16
set nlw=Rlw/16
set dlw=Tlw/16
set qlw="|cff"+mc[alw]+mc[flw-alw*16]+mc[nlw]+mc[Rlw-nlw*16]+mc[dlw]+mc[Tlw-dlw*16]+PS[elw]+"|r"
set hb=hb-1
return qlw
endfunction
function lww takes player iww,string Sww returns string
local integer cww
local integer oww
local integer Oww
set Fb[hb]=Sww
set hb=hb+1
set oww=bO[GetPlayerId(iww)]
set Fb[hb]="when calling getForceId in Messages, line 53"
set hb=hb+1
if Rb[oww]==0 then
if oww==0 then
call e6("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 94")
else
call e6("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 94")
endif
endif
set Oww=yO[oww]
set hb=hb-1
set cww=GetRandomInt(0,2)
if Oww==0 then
set Sww=XO[cww]
elseif Oww==1 then
set Sww=CO[cww]
elseif Oww==2 then
set Sww=VO[cww]
elseif Oww==3 then
set Sww=BO[cww]
else
set Sww="Attention!"
endif
set hb=hb-1
return "|cffffa600"+Sww+"|r"
endfunction
function ISw takes integer nSw,string dSw returns nothing
local unit fSw
local integer RSw
local integer TSw
local integer YSw
local integer GSw
local real gSw
local integer hSw
local unit FSw
local player kSw
local integer jSw
local player xSw
local integer vSw
local integer mSw
local integer QSw
local integer WSw
local integer ESw
local integer ZSw
local boolean USw
set Fb[hb]=dSw
set hb=hb+1
if nSw<0 or nSw>=gS then
set hb=hb-1
set fSw=null
set FSw=null
set kSw=null
set xSw=null
return
endif
if mo-mO[nSw]<=60 then
set hb=hb-1
set fSw=null
set FSw=null
set kSw=null
set xSw=null
return
endif
set GSw=QS[nSw]
set Fb[hb]="when calling getLastPublicOrder in Revolts, line 18"
set hb=hb+1
if jl[GSw]==0 then
if GSw==0 then
call e6("Nullpointer exception when calling City.getLastPublicOrder","when calling error in City, line 318")
else
call e6("Called City.getLastPublicOrder on invalid object.","when calling error in City, line 318")
endif
endif
set gSw=VS[GSw]
set hb=hb-1
set hSw=QS[nSw]
set Fb[hb]="when calling getCityUnit in Revolts, line 19"
set hb=hb+1
if jl[hSw]==0 then
if hSw==0 then
call e6("Nullpointer exception when calling City.getCityUnit","when calling error in City, line 176")
else
call e6("Called City.getCityUnit on invalid object.","when calling error in City, line 176")
endif
endif
set FSw=IS[hSw]
set hb=hb-1
set fSw=FSw
set kSw=GetOwningPlayer(FSw)
if GetPlayerSlotState(kSw)==PLAYER_SLOT_STATE_PLAYING then
set USw=GetPlayerController(kSw)==MAP_CONTROL_USER
else
set USw=false
endif
if not USw then
set hb=hb-1
set fSw=null
set FSw=null
set kSw=null
set xSw=null
return
endif
if gSw<50.0 then
set mO[nSw]=mo
set jSw=QS[nSw]
set Fb[hb]="when calling addModifier in Revolts, line 24"
set hb=hb+1
if jl[jSw]==0 then
if jSw==0 then
call e6("Nullpointer exception when calling City.addModifier","when calling error in City, line 354")
else
call e6("Called City.addModifier on invalid object.","when calling error in City, line 354")
endif
endif
call CC(jSw,1,"when calling addModifier in City, line 354")
set hb=hb-1
set dSw="A violent mob has appeared near the gates of "+Ylw(QS[nSw],"when calling getCityNameColored in Revolts, line 25")+"!"
set xSw=GetOwningPlayer(FSw)
set Fb[hb]="when calling attentionToPlayer in Revolts, line 25"
set hb=hb+1
call DisplayTimedTextToPlayer(xSw,0.,0.,10.0,lww(xSw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(xSw,0.,0.,10.0,dSw)
set hb=hb-1
if gSw>=30.0 then
set vSw=al[0]
set Fb[hb]="when calling iterator in Revolts, line 28"
set hb=hb+1
set mSw=e8(vSw,"when calling new_LLIterator in LinkedList, line 165")
set hb=hb-1
set RSw=mSw
loop
exitwhen ao[do[RSw]]==no[RSw]
set do[RSw]=ao[do[RSw]]
call CreateUnit(nO[PLAYER_NEUTRAL_AGGRESSIVE],eo[do[RSw]],GetUnitX(fSw),GetUnitY(fSw),0.)
endloop
set Fb[hb]="when calling close in Revolts, line 28"
set hb=hb+1
if Ro[RSw]then
call Hbw(RSw,"when calling LLIterator in LinkedList, line 450")
endif
set hb=hb-1
elseif gSw>=15.0 then
set QSw=al[1]
set Fb[hb]="when calling iterator in Revolts, line 32"
set hb=hb+1
set WSw=e8(QSw,"when calling new_LLIterator in LinkedList, line 165")
set hb=hb-1
set TSw=WSw
loop
exitwhen ao[do[TSw]]==no[TSw]
set do[TSw]=ao[do[TSw]]
call CreateUnit(nO[PLAYER_NEUTRAL_AGGRESSIVE],eo[do[TSw]],GetUnitX(fSw),GetUnitY(fSw),0.)
endloop
set Fb[hb]="when calling close in Revolts, line 32"
set hb=hb+1
if Ro[TSw]then
call Hbw(TSw,"when calling LLIterator in LinkedList, line 450")
endif
set hb=hb-1
else
set ESw=al[2]
set Fb[hb]="when calling iterator in Revolts, line 36"
set hb=hb+1
set ZSw=e8(ESw,"when calling new_LLIterator in LinkedList, line 165")
set hb=hb-1
set YSw=ZSw
loop
exitwhen ao[do[YSw]]==no[YSw]
set do[YSw]=ao[do[YSw]]
call CreateUnit(nO[PLAYER_NEUTRAL_AGGRESSIVE],eo[do[YSw]],GetUnitX(fSw),GetUnitY(fSw),0.)
endloop
set Fb[hb]="when calling close in Revolts, line 36"
set hb=hb+1
if Ro[YSw]then
call Hbw(YSw,"when calling LLIterator in LinkedList, line 450")
endif
set hb=hb-1
endif
endif
set hb=hb-1
set fSw=null
set FSw=null
set kSw=null
set xSw=null
endfunction
function i3 takes real w3,real u3,real r3,integer s3,string t3 returns nothing
set Fb[hb]=t3
set hb=hb+1
set Yc[Gc]=s3
set Gc=Gc+1
call GroupEnumUnitsInRange(Tc,w3,u3,r3,gc)
set Fb[hb]="when calling popCallback in ClosureForGroups, line 85"
set hb=hb+1
call GroupClear(Tc)
set Gc=Gc-1
call Klw(Yc[Gc],"when calling ForGroupCallback in ClosureForGroups, line 21")
set hb=hb-1-1
endfunction
function MV takes integer HV,string JV returns real
local integer KV
local integer LV
local boolean XV
local real CV
local real VV
local real BV
local real NV
set Fb[hb]=JV
set hb=hb+1
set VS[HV]=100.0-CS[HV]*1000.-SquareRoot(LS[HV]*1.)/17.+BS[HV]-LS[HV]*1./1000*vS[MS[HV]]
set CV=JS[HV]
set VV=KS[HV]
set Fb[hb]="when calling alloc_Closure in City, line 299"
set hb=hb+1
if vl==0 then
if ml<32768 then
set ml=ml+1
set KV=ml
set Ql[KV]=681
else
call e6("Out of memory: Could not create Closure.","when calling error in City, line 299")
set KV=0
endif
else
set vl=vl-1
set KV=xl[vl]
set Ql[KV]=681
endif
set hb=hb-1
set WS[KV]=HV
call i3(CV,VV,500,KV,"when calling forUnitsInRange in City, line 299")
set BV=JS[HV]
set NV=KS[HV]
set Fb[hb]="when calling alloc_Closure in City, line 303"
set hb=hb+1
if vl==0 then
if ml<32768 then
set ml=ml+1
set LV=ml
set Ql[LV]=682
else
call e6("Out of memory: Could not create Closure.","when calling error in City, line 303")
set LV=0
endif
else
set vl=vl-1
set LV=xl[vl]
set Ql[LV]=682
endif
set hb=hb-1
set ES[LV]=HV
call i3(BV,NV,1500.0,LV,"when calling forUnitsInRange in City, line 303")
if VS[HV]<0.0 then
set VS[HV]=0.0
endif
if VS[HV]>100.0 then
set VS[HV]=100.0
endif
if VS[HV]<50.0 then
set XV=GetRandomReal(0.0,1.0)<=0.01
else
set XV=false
endif
if XV then
call ISw(AS[HV],"when calling checkForRevolt in City, line 314")
endif
set hb=hb-1
return VS[HV]
endfunction
function ZC takes integer jC,string xC returns string
local real vC
local integer mC
local integer QC
local integer WC
local integer EC
set Fb[hb]=xC
set hb=hb+1
set Fb[hb]="when calling countPublicOrder in City, line 322"
set hb=hb+1
if jl[jC]==0 then
if jC==0 then
call e6("Nullpointer exception when calling City.countPublicOrder","when calling error in City, line 294")
else
call e6("Called City.countPublicOrder on invalid object.","when calling error in City, line 294")
endif
endif
set vC=MV(jC,"when calling countPublicOrder in City, line 294")
set hb=hb-1
set WC=R2I(255.-vC/100.*255.)
set EC=R2I(vC/100.*255.)
set mC=WC/16
set QC=EC/16
set xC=StringCase("|cff"+mc[mC]+mc[WC-mC*16]+mc[QC]+mc[EC-QC*16]+mc[0]+mc[0],false)+I2S(R2I(vC))+","+I2S(R2I(ModuloReal(R2I(vC*10.),10)))+"%|r"
set hb=hb-1
return xC
endfunction
function kC takes integer fC,string RC returns integer
local integer TC
local real YC
local real GC
local real gC
local real hC
local real FC
set Fb[hb]=RC
set hb=hb+1
set TC=0
set TC=0+mbw(sS,GetUnitTypeId(IS[fC]),"when calling get in City, line 269")
set FC=LS[fC]*1.
set Fb[hb]="when calling countPublicOrder in City, line 281"
set hb=hb+1
if jl[fC]==0 then
if fC==0 then
call e6("Nullpointer exception when calling City.countPublicOrder","when calling error in City, line 294")
else
call e6("Called City.countPublicOrder on invalid object.","when calling error in City, line 294")
endif
endif
set hC=MV(fC,"when calling countPublicOrder in City, line 294")
set hb=hb-1
set YC=hC/100.
set GC=jO
if 0.75>GC then
set gC=0.75
else
set gC=GC
endif
if YC>gC then
set gC=YC
endif
set TC=TC+R2I(SquareRoot(FC*gC)/6.)
set TC=R2I(TC*NS[fC]*jS[MS[fC]])
set hb=hb-1
return TC
endfunction
function lsw takes multiboard usw,integer rsw,integer ssw,string tsw,real isw returns nothing
local multiboarditem Ssw=MultiboardGetItem(usw,ssw,rsw)
local string csw=tsw
local string osw
local integer Osw
set rsw=R2I((R2I(isw/0.004)-StringLength(tsw))*1./2)
set osw=""
set Osw=0
set ssw=rsw-1
loop
exitwhen Osw>ssw
set osw=osw+" "
set Osw=Osw+1
endloop
if ModuloReal(rsw,2)==1. then
set csw=" "+csw
endif
set csw=osw+csw
call MultiboardSetItemValue(Ssw,csw)
set Ssw=null
endfunction
function Dtw takes integer ytw,string ptw returns nothing
local integer etw
local multiboard qtw
local integer atw
local integer ntw
local integer dtw
local multiboard ftw
local integer Rtw
local integer Ttw
local multiboard Ytw
local integer Gtw
local integer gtw
local integer htw
local string Ftw
local integer ktw
local string jtw
local integer xtw
local integer vtw
local string mtw
local integer Qtw
local integer Wtw
local string Etw
local integer Ztw
local integer Utw
local integer Itw
local string Ptw
local string Atw
set Fb[hb]=ptw
set hb=hb+1
if qO[ytw]==-1 then
set hb=hb-1
set qtw=null
set ftw=null
set Ytw=null
return
endif
set etw=GetPlayerId(pO[ytw])
call lsw(iO[etw],sO[0],sO[1],Ylw(QS[qO[ytw]],"when calling getCityNameColored in PlayerStats, line 48"),0.40)
set Gtw=QS[qO[ytw]]
set Fb[hb]="when calling countTax in PlayerStats, line 57"
set hb=hb+1
if jl[Gtw]==0 then
if Gtw==0 then
call e6("Nullpointer exception when calling City.countTax","when calling error in City, line 265")
else
call e6("Called City.countTax on invalid object.","when calling error in City, line 265")
endif
endif
set gtw=kC(Gtw,"when calling countTax in City, line 265")
set hb=hb-1
set htw=QS[qO[ytw]]
set Fb[hb]="when calling getTaxLevelString in PlayerStats, line 58"
set hb=hb+1
if jl[htw]==0 then
if htw==0 then
call e6("Nullpointer exception when calling City.getTaxLevelString","when calling error in City, line 164")
else
call e6("Called City.getTaxLevelString on invalid object.","when calling error in City, line 164")
endif
endif
set Ftw=NO[MS[htw]]
set hb=hb-1
set ktw=QS[qO[ytw]]
set Fb[hb]="when calling getPublicOrderStr in PlayerStats, line 59"
set hb=hb+1
if jl[ktw]==0 then
if ktw==0 then
call e6("Nullpointer exception when calling City.getPublicOrderStr","when calling error in City, line 321")
else
call e6("Called City.getPublicOrderStr on invalid object.","when calling error in City, line 321")
endif
endif
set jtw=ZC(ktw,"when calling getPublicOrderStr in City, line 321")
set hb=hb-1
set xtw=QS[qO[ytw]]
set Fb[hb]="when calling getPopulationStr in PlayerStats, line 60"
set hb=hb+1
if jl[xtw]==0 then
if xtw==0 then
call e6("Nullpointer exception when calling City.getPopulationStr","when calling error in City, line 342")
else
call e6("Called City.getPopulationStr on invalid object.","when calling error in City, line 342")
endif
endif
set ptw=PC(xtw)
set hb=hb-1
set vtw=QS[qO[ytw]]
set Fb[hb]="when calling getPopulationGrowthStr in PlayerStats, line 61"
set hb=hb+1
if jl[vtw]==0 then
if vtw==0 then
call e6("Nullpointer exception when calling City.getPopulationGrowthStr","when calling error in City, line 339")
else
call e6("Called City.getPopulationGrowthStr on invalid object.","when calling error in City, line 339")
endif
endif
set mtw=wcw(XS[vtw])
set hb=hb-1
set qtw=iO[etw]
set Qtw=Mo[0]
set Wtw=Mo[1]
set Etw=I2S(gtw)
call MultiboardSetItemValue(MultiboardGetItem(qtw,Wtw,Qtw),Etw)
call MultiboardSetItemValue(MultiboardGetItem(qtw,Mo[1],Mo[0]+1),Ftw)
call MultiboardSetItemValue(MultiboardGetItem(qtw,wO[1],wO[0]),jtw)
call MultiboardSetItemValue(MultiboardGetItem(qtw,uO[1],uO[0]),ptw)
call MultiboardSetItemValue(MultiboardGetItem(qtw,rO[1],rO[0]),mtw)
set atw=0
set Utw=QS[qO[ytw]]
set Fb[hb]="when calling getModifiers in PlayerStats, line 71"
set hb=hb+1
if jl[Utw]==0 then
if Utw==0 then
call e6("Nullpointer exception when calling City.getModifiers","when calling error in City, line 377")
else
call e6("Called City.getModifiers on invalid object.","when calling error in City, line 377")
endif
endif
set Itw=uc[Utw]
set hb=hb-1
set Fb[hb]="when calling iterator in PlayerStats, line 71"
set hb=hb+1
set Ztw=e8(Itw,"when calling new_LLIterator in LinkedList, line 165")
set hb=hb-1
set ntw=Ztw
loop
exitwhen ao[do[ntw]]==no[ntw]
set do[ntw]=ao[do[ntw]]
set dtw=eo[do[ntw]]
set ftw=iO[etw]
set Ptw=YS[mbw(eS,dtw,"when calling get in PlayerStats, line 73")]
call MultiboardSetItemValue(MultiboardGetItem(ftw,4+atw,4),Ptw)
set Atw="("+GS[mbw(eS,dtw,"when calling get in PlayerStats, line 74")]+")"
call MultiboardSetItemValue(MultiboardGetItem(ftw,4+atw,5),Atw)
set atw=atw+1
endloop
set Fb[hb]="when calling close in PlayerStats, line 71"
set hb=hb+1
if Ro[ntw]then
call Hbw(ntw,"when calling LLIterator in LinkedList, line 450")
endif
set hb=hb-1
set Rtw=atw
set Ttw=9
loop
exitwhen Rtw>Ttw
set Ytw=iO[etw]
call MultiboardSetItemValue(MultiboardGetItem(Ytw,4+Rtw,4)," ")
call MultiboardSetItemValue(MultiboardGetItem(Ytw,4+Rtw,5)," ")
set Rtw=Rtw+1
endloop
set hb=hb-1
set qtw=null
set ftw=null
set Ytw=null
endfunction
function sww takes integer Bww,integer Nww,string Mww returns nothing
local integer www
local integer uww
local boolean rww
set Fb[hb]=Mww
set hb=hb+1
set www=0
set uww=23
loop
exitwhen www>uww
set Nww=bO[www]
set Mww="when calling isInGame in MultiboardCityUpdate, line 27"
set Fb[hb]="when calling isInGame in MultiboardCityUpdate, line 27"
set hb=hb+1
if Rb[Nww]==0 then
if Nww==0 then
call e6("Nullpointer exception when calling PlayerStats.isInGame","when calling error in PlayerStats, line 14")
else
call e6("Called PlayerStats.isInGame on invalid object.","when calling error in PlayerStats, line 14")
endif
endif
set rww=eO[Nww]
set hb=hb-1
if rww then
set Bww=bO[www]
set Fb[hb]="when calling refreshMultiboardCity in MultiboardCityUpdate, line 28"
set hb=hb+1
if Rb[Bww]==0 then
if Bww==0 then
call e6("Nullpointer exception when calling PlayerStats.refreshMultiboardCity","when calling error in PlayerStats, line 43")
else
call e6("Called PlayerStats.refreshMultiboardCity on invalid object.","when calling error in PlayerStats, line 43")
endif
endif
call Dtw(Bww,"when calling refreshMultiboardCity in PlayerStats, line 43")
set hb=hb-1
endif
set www=www+1
endloop
set hb=hb-1
endfunction
function ubw takes integer Blw,integer Nlw,string Mlw returns nothing
local force wbw
set Fb[hb]=Mlw
set hb=hb+1
if Dl[Blw]==0 then
if Blw==0 then
call e6("Nullpointer exception when calling CallbackPeriodic.call","when calling error in ClosureTimers, line 86")
else
call e6("Called CallbackPeriodic.call on invalid object.","when calling error in ClosureTimers, line 86")
endif
endif
if Dl[Blw]<=634 then
if Dl[Blw]<=632 then
if Dl[Blw]<=631 then
call nN(Blw,Nlw,"when calling City_closure_impl in ClosureTimers, line 86")
else
call EN(Blw,Nlw,"when calling City_closure_impl in ClosureTimers, line 86")
endif
elseif Dl[Blw]<=633 then
set wbw=bj_FORCE_ALL_PLAYERS
if IsPlayerInForce(GetLocalPlayer(),wbw) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,20.0,"Enjoying the map? Join the |cffe100ffofficial CoE discord channel|r! Link: |cffffff00discord.gg/V6kmxsy|r")
endif
else
call A1(Blw,Nlw)
endif
elseif Dl[Blw]<=636 then
if Dl[Blw]<=635 then
call k5(Blw,Nlw,"when calling Economy_closure_impl in ClosureTimers, line 86")
else
call r6(Blw,Nlw,"when calling Economy_closure_impl in ClosureTimers, line 86")
endif
else
call sww(Blw,Nlw,"when calling MultiboardCityUpdate_closure_impl in ClosureTimers, line 86")
endif
set hb=hb-1
set wbw=null
endfunction
function Dew takes nothing returns nothing
local integer Aew
set hb=0
set Fb[hb]="ClosureTimers, line 91"
set hb=hb+1
set Aew=Dcw(GetExpiredTimer(),"when calling getData in ClosureTimers, line 94")
call ubw(Aew,Aew,"when calling call in ClosureTimers, line 95")
set hb=hb-1
endfunction
function Dh takes nothing returns nothing
local player xh=GetOwningPlayer(GetSpellTargetUnit())
local playerstate vh=PLAYER_STATE_RESOURCE_LUMBER
local playerstate mh
local playerstate Qh
local player Wh
local force Eh
local location Zh
local real Uh
local real Ih
local player Ph
local force Ah
if vh==PLAYER_STATE_RESOURCE_GOLD then
set mh=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(xh,mh,GetPlayerState(xh,mh)+500)
elseif vh==PLAYER_STATE_RESOURCE_LUMBER then
set Qh=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(xh,Qh,GetPlayerState(xh,Qh)+500)
endif
call SetPlayerState(xh,vh,GetPlayerState(xh,vh)+500)
call RemoveUnit(GetSpellAbilityUnit())
set Wh=GetOwningPlayer(GetSpellTargetUnit())
set Eh=CreateForce()
call ForceAddPlayer(Eh,Wh)
if IsPlayerInForce(GetLocalPlayer(),Eh) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_1228")
endif
set y=GetUnitLoc(GetSpellTargetUnit())
set Ph=GetOwningPlayer(GetSpellTargetUnit())
set Ah=CreateForce()
call ForceAddPlayer(Ah,Ph)
set Zh=y
set Uh=GetLocationX(Zh)
set Ih=GetLocationY(Zh)
if IsPlayerInForce(GetLocalPlayer(),Ah) then
call PingMinimap(Uh,Ih,2.00)
endif
call RemoveLocation(y)
set xh=null
set vh=null
set mh=null
set Qh=null
set Wh=null
set Eh=null
set Zh=null
set Ph=null
set Ah=null
endfunction
function EA takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747988553 then
return false
endif
return true
endfunction
function WE takes nothing returns boolean
if GetResearched()!=1378889818 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889818,true)!=2 then
return false
endif
return true
endfunction
function EE takes nothing returns boolean
if not WE() then
return false
endif
return true
endfunction
function EU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990321,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990104,0)
endfunction
function EW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651833,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651841,0)
endfunction
function ySw takes playerunitevent sSw,code tSw,code iSw,code SSw returns nothing
local integer cSw=GetHandleId(sSw)
local integer oSw
local filterfunc OSw
local trigger lSw
local player bSw
if xO[cSw]==null then
set xO[cSw]=CreateTrigger()
set oSw=bj_MAX_PLAYER_SLOTS-1
loop
exitwhen oSw<0
set lSw=xO[cSw]
set bSw=nO[oSw]
if tSw!=null then
set OSw=Filter(tSw)
else
set OSw=null
endif
call TriggerRegisterPlayerUnitEvent(lSw,bSw,sSw,OSw)
set oSw=oSw-1
endloop
endif
if iSw!=null then
call TriggerAddCondition(xO[cSw],Filter(iSw))
endif
if SSw!=null then
call TriggerAddAction(xO[cSw],SSw)
endif
set OSw=null
set lSw=null
set bSw=null
endfunction
function CN takes eventid PN,string AN returns integer
local integer DN
local integer HN
local integer JN
local integer KN
local boolean LN
local boolean XN
set Fb[hb]=AN
set hb=hb+1
set DN=GetHandleId(PN)
set Oc=Oc+1
set oc[DN]=Oc
set HN=GetHandleId(PN)
if (HN>=18 and HN<=51)or(HN>=269 and HN<=277) then
call ySw(ConvertPlayerUnitEvent(DN),null,Xd,null)
else
if PN!=EVENT_UNIT_DAMAGED and PN!=EVENT_PLAYER_LEAVE and PN!=tc then
set JN=GetHandleId(PN)
set LN=JN<261 or JN>268 and JN!=17
else
set LN=false
endif
if LN then
set KN=GetHandleId(PN)
set XN=KN<305 or KN>307
else
set XN=false
endif
if XN then
call e6("registering handleid: "+I2S(DN)+" non-playerunitevent. Except EVENT_UNIT_DAMAGED and EVENT_PLAYER_LEAVE these are not supported right now.","when calling error in ClosureEvents, line 242")
endif
endif
set hb=hb-1
return Oc
endfunction
function byw takes integer oyw,integer Oyw,string lyw returns nothing
set Fb[hb]=lyw
set hb=hb+1
if Rb[oyw]==0 then
if oyw==0 then
call e6("Nullpointer exception when calling PlayerStats.setSelectedCityId","when calling error in PlayerStats, line 88")
else
call e6("Called PlayerStats.setSelectedCityId on invalid object.","when calling error in PlayerStats, line 88")
endif
endif
set Fb[hb]="when calling setSelectedCityId in PlayerStats, line 88"
set hb=hb+1
if Oyw>=0 and Oyw<gS then
set qO[oyw]=Oyw
set Fb[hb]="when calling refreshMultiboardCity in PlayerStats, line 91"
set hb=hb+1
if Rb[oyw]==0 then
if oyw==0 then
call e6("Nullpointer exception when calling PlayerStats.refreshMultiboardCity","when calling error in PlayerStats, line 43")
else
call e6("Called PlayerStats.refreshMultiboardCity on invalid object.","when calling error in PlayerStats, line 43")
endif
endif
call Dtw(oyw,"when calling refreshMultiboardCity in PlayerStats, line 43")
set hb=hb-1
endif
set hb=hb-1-1
endfunction
function dC takes unit yC,string pC returns integer
local integer eC
local integer qC
local integer aC
local unit nC
set Fb[hb]=pC
set hb=hb+1
set eC=0
set qC=gS-1
loop
exitwhen eC>qC
set aC=QS[eC]
set pC="when calling getCityUnit in City, line 428"
set Fb[hb]="when calling getCityUnit in City, line 428"
set hb=hb+1
if jl[aC]==0 then
if aC==0 then
call e6("Nullpointer exception when calling City.getCityUnit","when calling error in City, line 176")
else
call e6("Called City.getCityUnit on invalid object.","when calling error in City, line 176")
endif
endif
set nC=IS[aC]
set hb=hb-1
if nC==yC then
set hb=hb-1
set nC=null
return eC
endif
set eC=eC+1
endloop
set hb=hb-1
set nC=null
return -1
endfunction
function AL takes integer EL,string ZL returns nothing
local unit UL
local integer IL
local boolean PL
set Fb[hb]=ZL
set hb=hb+1
set UL=GetTriggerUnit()
set Fb[hb]="when calling isCity in CityManage, line 10"
set hb=hb+1
set Fb[hb]="when calling isCity in UnitTools, line 5"
set hb=hb+1
set IL=ql
set EL=GetUnitTypeId(UL)
set Fb[hb]="when calling has in City, line 422"
set hb=hb+1
if eb[IL]==0 then
if IL==0 then
call e6("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call e6("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set PL=d8(IL,EL)
set hb=hb-1-1-1
if PL then
call byw(bO[GetPlayerId(GetTriggerPlayer())],dC(GetTriggerUnit(),"when calling getCityId in CityManage, line 11"),"when calling setSelectedCityId in CityManage, line 11")
endif
set hb=hb-1
set UL=null
endfunction
function C7 takes integer J7 returns nothing
local unit K7=GetConstructingStructure()
local player L7
local player X7
if GetUnitTypeId(K7)==1747990614 then
set L7=GetOwningPlayer(K7)
set X7=GetOwningPlayer(K7)
set bo[GetPlayerId(L7)]=bo[GetPlayerId(X7)]-1
endif
set K7=null
set L7=null
set X7=null
endfunction
function Tbw takes integer nbw,integer dbw,string fbw returns boolean
local boolean Rbw
set Fb[hb]=fbw
set hb=hb+1
if wb[nbw]==0 then
if nbw==0 then
call e6("Nullpointer exception when calling HashMap.has","when calling error in HashMap, line 11")
else
call e6("Called HashMap.has on invalid object.","when calling error in HashMap, line 11")
endif
endif
set Fb[hb]="when calling has in HashMap, line 11"
set hb=hb+1
set Fb[hb]="when calling hasInt in HashMap, line 12"
set hb=hb+1
if wb[nbw]==0 then
if nbw==0 then
call e6("Nullpointer exception when calling Table.hasInt","when calling error in Table, line 9")
else
call e6("Called Table.hasInt on invalid object.","when calling error in Table, line 9")
endif
endif
set Rbw=HaveSavedInteger(MO,nbw,dbw)
set hb=hb-1-1-1
return Rbw
endfunction
function Q6 takes integer k6,integer j6,string x6 returns nothing
local hashtable v6
local integer m6
set Fb[hb]=x6
set hb=hb+1
set v6=So
set Fb[hb]="when calling count in HashList, line 22"
set hb=hb+1
if Vl[k6]==0 then
if k6==0 then
call e6("Nullpointer exception when calling HashList.count","when calling error in HashList, line 15")
else
call e6("Called HashList.count on invalid object.","when calling error in HashList, line 15")
endif
endif
set m6=LoadInteger(So,k6,j6)
set hb=hb-1
call SaveInteger(v6,k6,j6,m6-1)
set hb=hb-1
set v6=null
endfunction
function A6 takes integer W6,integer E6,string Z6 returns nothing
local integer U6
local integer I6
local integer P6
set Fb[hb]=Z6
set hb=hb+1
set P6=LoadInteger(io,W6,E6)
set Fb[hb]="when calling decrOccurences in HashList, line 54"
set hb=hb+1
if Vl[W6]==0 then
if W6==0 then
call e6("Nullpointer exception when calling HashList.decrOccurences","when calling error in HashList, line 21")
else
call e6("Called HashList.decrOccurences on invalid object.","when calling error in HashList, line 21")
endif
endif
call Q6(W6,P6,"when calling decrOccurences in HashList, line 21")
set hb=hb-1
set U6=E6
set I6=co[W6]
loop
exitwhen U6>I6
call SaveInteger(io,W6,U6,LoadInteger(io,W6,U6+1))
set U6=U6+1
endloop
set co[W6]=co[W6]-1
set hb=hb-1
endfunction
function X6 takes integer D6,integer H6,string J6 returns nothing
local integer K6
local integer L6
set Fb[hb]=J6
set hb=hb+1
set K6=0
set L6=co[D6]-1
loop
exitwhen K6>L6
if H6==LoadInteger(io,D6,K6) then
set J6="when calling removeAt in HashList, line 63"
set Fb[hb]="when calling removeAt in HashList, line 63"
set hb=hb+1
if Vl[D6]==0 then
if D6==0 then
call e6("Nullpointer exception when calling HashList.removeAt","when calling error in HashList, line 53")
else
call e6("Called HashList.removeAt on invalid object.","when calling error in HashList, line 53")
endif
endif
call A6(D6,K6,"when calling removeAt in HashList, line 53")
set hb=hb-1
exitwhen true
endif
set K6=K6+1
endloop
set hb=hb-1
endfunction
function abw takes integer ybw,integer pbw,string ebw returns boolean
local integer qbw
set Fb[hb]=ebw
set hb=hb+1
if Vl[ybw]==0 then
if ybw==0 then
call e6("Nullpointer exception when calling HashList.has","when calling error in HashList, line 87")
else
call e6("Called HashList.has on invalid object.","when calling error in HashList, line 87")
endif
endif
set Fb[hb]="when calling has in HashList, line 87"
set hb=hb+1
set Fb[hb]="when calling count in HashList, line 88"
set hb=hb+1
if Vl[ybw]==0 then
if ybw==0 then
call e6("Nullpointer exception when calling HashList.count","when calling error in HashList, line 15")
else
call e6("Called HashList.count on invalid object.","when calling error in HashList, line 15")
endif
endif
set qbw=LoadInteger(So,ybw,pbw)
set hb=hb-1
set hb=hb-1-1
return qbw>0
endfunction
function l7 takes integer i7,integer S7,string c7 returns nothing
local boolean o7
local integer O7
set Fb[hb]=c7
set hb=hb+1
set Fb[hb]="when calling remove in HashMap, line 54"
set hb=hb+1
set Fb[hb]="when calling removeInt in HashMap, line 24"
set hb=hb+1
if wb[i7]==0 then
if i7==0 then
call e6("Nullpointer exception when calling Table.removeInt","when calling error in Table, line 24")
else
call e6("Called Table.removeInt on invalid object.","when calling error in Table, line 24")
endif
endif
call RemoveSavedInteger(MO,i7,S7)
set hb=hb-1-1
set Fb[hb]="when calling hasKey in HashMap, line 55"
set hb=hb+1
if wb[i7]==0 then
if i7==0 then
call e6("Nullpointer exception when calling IterableMap.hasKey","when calling error in HashMap, line 75")
else
call e6("Called IterableMap.hasKey on invalid object.","when calling error in HashMap, line 75")
endif
endif
set Fb[hb]="when calling hasKey in HashMap, line 75"
set hb=hb+1
set o7=abw(oo[i7],S7,"when calling has in HashMap, line 76")
set hb=hb-1-1
if o7 then
set O7=oo[i7]
set Fb[hb]="when calling remove in HashMap, line 56"
set hb=hb+1
if Vl[O7]==0 then
if O7==0 then
call e6("Nullpointer exception when calling HashList.remove","when calling error in HashList, line 60")
else
call e6("Called HashList.remove on invalid object.","when calling error in HashList, line 60")
endif
endif
call X6(O7,S7,"when calling remove in HashList, line 60")
set hb=hb-1
endif
set hb=hb-1
endfunction
function Zbw takes integer Qbw,integer Wbw,string Ebw returns nothing
set Fb[hb]=Ebw
set hb=hb+1
if wb[Qbw]==0 then
if Qbw==0 then
call e6("Nullpointer exception when calling HashMap.remove","when calling error in HashMap, line 23")
else
call e6("Called HashMap.remove on invalid object.","when calling error in HashMap, line 23")
endif
endif
if wb[Qbw]<=725 then
set Fb[hb]="when calling remove in HashMap, line 23"
set hb=hb+1
set Fb[hb]="when calling removeInt in HashMap, line 24"
set hb=hb+1
if wb[Qbw]==0 then
if Qbw==0 then
call e6("Nullpointer exception when calling Table.removeInt","when calling error in Table, line 24")
else
call e6("Called Table.removeInt on invalid object.","when calling error in Table, line 24")
endif
endif
call RemoveSavedInteger(MO,Qbw,Wbw)
set hb=hb-1-1
else
call l7(Qbw,Wbw,"when calling remove in HashMap, line 23")
endif
set hb=hb-1
endfunction
function yow takes integer Sow,string cow returns unit
local integer oow
local fogstate Oow
local integer low
local unit bow
set Fb[hb]=cow
set hb=hb+1
set oow=sl
set Oow=ConvertFogState(Sow)
set Fb[hb]="when calling saveFogState in TypeCasting, line 46"
set hb=hb+1
if wb[oow]==0 then
if oow==0 then
call e6("Nullpointer exception when calling Table.saveFogState","when calling error in Table, line 168")
else
call e6("Called Table.saveFogState on invalid object.","when calling error in Table, line 168")
endif
endif
call SaveFogStateHandle(MO,oow,0,Oow)
set hb=hb-1
set low=sl
set Fb[hb]="when calling loadUnit in TypeCasting, line 47"
set hb=hb+1
if wb[low]==0 then
if low==0 then
call e6("Nullpointer exception when calling Table.loadUnit","when calling error in Table, line 75")
else
call e6("Called Table.loadUnit on invalid object.","when calling error in Table, line 75")
endif
endif
set bow=LoadUnitHandle(MO,low,0)
set hb=hb-1-1
set Gf=bow
set Oow=null
set bow=null
return Gf
endfunction
function yww takes string bww returns nothing
if (not jo)and(not xo) then
return
endif
call DisplayTimedTextToPlayer(nO[0],0.,0.,60.,bww)
endfunction
function F0w takes integer y0w,string p0w returns nothing
local integer e0w
local integer q0w
local real a0w
local real n0w
local integer d0w
local unit f0w
local integer R0w
local integer T0w
local boolean Y0w
local integer G0w
local integer g0w
local integer h0w
set Fb[hb]=p0w
set hb=hb+1
set R0w=Ao
set T0w=GetUnitTypeId(GetOrderedUnit())
set Fb[hb]="when calling has in MassControl, line 33"
set hb=hb+1
if eb[R0w]==0 then
if R0w==0 then
call e6("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call e6("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set Y0w=d8(R0w,T0w)
set hb=hb-1
if Y0w then
if Tbw(Io,GetHandleId(GetOrderedUnit()),"when calling has in MassControl, line 34") then
set y0w=mbw(Io,GetHandleId(GetOrderedUnit()),"when calling get in MassControl, line 35")
set Fb[hb]="when calling size in MassControl, line 35"
set hb=hb+1
if eb[y0w]==0 then
if y0w==0 then
call e6("Nullpointer exception when calling LinkedList.size","when calling error in LinkedList, line 135")
else
call e6("Called LinkedList.size on invalid object.","when calling error in LinkedList, line 135")
endif
endif
set G0w=Yo[y0w]
set hb=hb-1
call yww(I2S(G0w))
set e0w=mbw(Io,GetHandleId(GetOrderedUnit()),"when calling get in MassControl, line 36")
set q0w=GetIssuedOrderId()
set a0w=GetOrderPointX()
set n0w=GetOrderPointY()
set Fb[hb]="when calling iterator in MassControl, line 39"
set hb=hb+1
set g0w=e8(e0w,"when calling new_LLIterator in LinkedList, line 165")
set hb=hb-1
set d0w=g0w
loop
exitwhen ao[do[d0w]]==no[d0w]
set do[d0w]=ao[do[d0w]]
set f0w=yow(eo[do[d0w]],"when calling unitFromIndex in MassControl, line 39")
set Fb[hb]="when calling alloc_Closure in MassControl, line 40"
set hb=hb+1
if El==0 then
if Zl<32768 then
set Zl=Zl+1
set h0w=Zl
set Ul[h0w]=647
else
call e6("Out of memory: Could not create Closure.","when calling error in MassControl, line 40")
set h0w=0
endif
else
set El=El-1
set h0w=Wl[El]
set Ul[h0w]=647
endif
set hb=hb-1
set Ko[h0w]=f0w
set Lo[h0w]=q0w
set Xo[h0w]=a0w
set Co[h0w]=n0w
set Fb[hb]="when calling doAfter in MassControl, line 40"
set hb=hb+1
set Fb[hb]="when calling start in ClosureTimers, line 15"
set hb=hb+1
if Ul[h0w]==0 then
if h0w==0 then
call e6("Nullpointer exception when calling CallbackSingle.start","when calling error in ClosureTimers, line 67")
else
call e6("Called CallbackSingle.start on invalid object.","when calling error in ClosureTimers, line 67")
endif
endif
call q3(h0w,0.01,"when calling start in ClosureTimers, line 67")
set hb=hb-1-1
call yww(" issued = "+GetUnitName(f0w))
endloop
set Fb[hb]="when calling close in MassControl, line 39"
set hb=hb+1
if Ro[d0w]then
call Hbw(d0w,"when calling LLIterator in LinkedList, line 450")
endif
set hb=hb-1
call Zbw(Io,GetHandleId(GetOrderedUnit()),"when calling remove in MassControl, line 44")
endif
endif
set hb=hb-1
set f0w=null
endfunction
function F7 takes integer Y7 returns nothing
local unit G7=GetConstructingStructure()
local player g7
local player h7
if GetUnitTypeId(G7)==1747988808 then
set g7=GetOwningPlayer(G7)
set h7=GetOwningPlayer(G7)
set Oo[GetPlayerId(g7)]=Oo[GetPlayerId(h7)]-1
endif
set G7=null
set g7=null
set h7=null
endfunction
function SC takes integer tC,integer iC returns integer
if tC==1 then
if iC==0 then
return 1747989059
elseif iC==1 then
return 1747990351
elseif iC==2 then
return 1747989331
elseif iC==3 then
return 1747990353
else
return 1747989059
endif
elseif tC==2 then
if iC==0 then
return 1747989060
elseif iC==1 then
return 1747990352
elseif iC==2 then
return 1747990350
elseif iC==3 then
return 1747990354
else
return 1747989060
endif
elseif tC==3 then
if iC==0 then
return 1747988844
elseif iC==1 then
return 1747990356
elseif iC==2 then
return 1747989809
elseif iC==3 then
return 1747990355
else
return 1747988844
endif
elseif iC==0 then
return 1747989059
elseif iC==1 then
return 1747990351
elseif iC==2 then
return 1747989331
elseif iC==3 then
return 1747990353
else
return 1747989059
endif
endfunction
function sC takes integer rC returns integer
if rC==1747989059 then
return 1
elseif rC==1747989060 then
return 2
elseif rC==1747988844 then
return 3
elseif rC==1747990351 then
return 1
elseif rC==1747990352 then
return 2
elseif rC==1747990356 then
return 3
elseif rC==1747989331 then
return 1
elseif rC==1747990350 then
return 2
elseif rC==1747989809 then
return 3
elseif rC==1747990353 then
return 1
elseif rC==1747990354 then
return 2
elseif rC==1747990355 then
return 3
else
return 1
endif
endfunction
function MK takes integer EK,string ZK returns nothing
local unit UK
local player IK
local integer PK
local integer AK
local boolean DK
local unit HK
local integer JK
local boolean KK
local real LK
local boolean XK
local integer CK
local real VK
local real BK
local real NK
set Fb[hb]=ZK
set hb=hb+1
set UK=GetTriggerUnit()
set PK=el
set AK=GetUnitTypeId(UK)
set Fb[hb]="when calling has in CastleCapture, line 11"
set hb=hb+1
if eb[PK]==0 then
if PK==0 then
call e6("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call e6("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set DK=d8(PK,AK)
set hb=hb-1
if DK then
if GetUnitStatePercent(UK,UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)<=50.0 then
set KK=GetOwningPlayer(UK)!=GetOwningPlayer(GetAttacker())
else
set KK=false
endif
if KK then
set LK=GetUnitX(UK)
set VK=GetUnitY(UK)
set HK=GetAttacker()
set BK=LK-GetUnitX(HK)
set NK=VK-GetUnitY(HK)
set XK=SquareRoot(BK*BK+NK*NK)<=300.0
else
set XK=false
endif
if XK then
set IK=GetOwningPlayer(GetAttacker())
call SetUnitOwner(UK,IK,true)
if GetPlayerId(IK)!=PLAYER_NEUTRAL_AGGRESSIVE then
set CK=sC(GetUnitTypeId(UK))
set JK=bO[GetPlayerId(IK)]
set Fb[hb]="when calling getForceId in CastleCapture, line 17"
set hb=hb+1
if Rb[JK]==0 then
if JK==0 then
call e6("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 94")
else
call e6("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 94")
endif
endif
set EK=yO[JK]
set hb=hb-1
call ReplaceUnitBJ(UK,SC(CK,EK),bj_UNIT_STATE_METHOD_RELATIVE)
endif
call SetUnitState(UK,UNIT_STATE_LIFE,GetUnitState(UK,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,60.0)*0.01)
call SetUnitState(UK,UNIT_STATE_MANA,GetUnitState(UK,UNIT_STATE_MAX_MANA)*RMaxBJ(0.,0.0)*0.01)
call UnitAddAbility(UK,1093677896)
endif
endif
set hb=hb-1
set UK=null
set IK=null
set HK=null
endfunction
function XM takes player JM,integer KM,string LM returns nothing
set Fb[hb]=LM
set hb=hb+1
set Yc[Gc]=KM
set Gc=Gc+1
call GroupEnumUnitsOfPlayer(Tc,JM,gc)
set Fb[hb]="when calling popCallback in ClosureForGroups, line 57"
set hb=hb+1
call GroupClear(Tc)
set Gc=Gc-1
call Klw(Yc[Gc],"when calling ForGroupCallback in ClosureForGroups, line 21")
set hb=hb-1-1
endfunction
function L3 takes playercolor Q3 returns integer
local playercolor U3=Q3
local integer I3=0
local integer P3=0
local integer A3=bj_MAX_PLAYER_SLOTS-1
local integer W3
local integer E3
local integer Z3
local playercolor D3
local integer H3
local integer J3
local integer K3
loop
exitwhen P3>A3
if GO[P3]==U3 then
set I3=P3
exitwhen true
endif
set P3=P3+1
endloop
if I3<=23 then
set D3=Q3
set H3=0
set J3=0
set K3=bj_MAX_PLAYER_SLOTS-1
loop
exitwhen J3>K3
if GO[J3]==D3 then
set H3=J3
exitwhen true
endif
set J3=J3+1
endloop
set W3=jc[H3]
set E3=xc[H3]
set Z3=vc[H3]
else
set W3=0
set E3=0
set Z3=0
endif
set kb=W3
set jb=E3
set xb=Z3
set U3=null
set D3=null
return kb
endfunction
function m3 takes player g3 returns string
local integer j3=L3(GetPlayerColor(g3))
local integer x3=jb
local integer v3=xb
local integer h3=j3/16
local integer F3=x3/16
local integer k3=v3/16
return "|cff"+mc[h3]+mc[j3-h3*16]+mc[F3]+mc[x3-F3*16]+mc[k3]+mc[v3-k3*16]+GetPlayerName(g3)+"|r"
endfunction
function Psw takes integer Wsw,string Esw returns nothing
local player Zsw
local force Usw
local integer Isw
set Fb[hb]=Esw
set hb=hb+1
set Esw=m3(GetTriggerPlayer())+" has left the game!"
set Usw=bj_FORCE_ALL_PLAYERS
if IsPlayerInForce(GetLocalPlayer(),Usw) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,5.0,Esw)
endif
set Wsw=bO[GetPlayerId(GetTriggerPlayer())]
set Fb[hb]="when calling setInGame in OnPlayerLeave, line 8"
set hb=hb+1
if Rb[Wsw]==0 then
if Wsw==0 then
call e6("Nullpointer exception when calling PlayerStats.setInGame","when calling error in PlayerStats, line 17")
else
call e6("Called PlayerStats.setInGame on invalid object.","when calling error in PlayerStats, line 17")
endif
endif
set eO[Wsw]=false
set hb=hb-1
set Zsw=GetTriggerPlayer()
set Fb[hb]="when calling alloc_Closure in OnPlayerLeave, line 9"
set hb=hb+1
if vl==0 then
if ml<32768 then
set ml=ml+1
set Isw=ml
set Ql[Isw]=686
else
call e6("Out of memory: Could not create Closure.","when calling error in OnPlayerLeave, line 9")
set Isw=0
endif
else
set vl=vl-1
set Isw=xl[vl]
set Ql[Isw]=686
endif
set hb=hb-1
call XM(Zsw,Isw,"when calling forUnitsOfPlayer in OnPlayerLeave, line 9")
set hb=hb-1
set Zsw=null
set Usw=null
endfunction
function W7 takes integer k7,string j7 returns nothing
local unit x7
local player v7
local player m7
local player Q7
set Fb[hb]=j7
set hb=hb+1
set x7=GetConstructingStructure()
if GetUnitTypeId(x7)==1747988808 then
if Oo[GetPlayerId(GetOwningPlayer(x7))]<3 then
set v7=GetOwningPlayer(x7)
set m7=GetOwningPlayer(x7)
set Oo[GetPlayerId(v7)]=Oo[GetPlayerId(m7)]+1
else
set Q7=GetOwningPlayer(x7)
set Fb[hb]="when calling attentionToPlayer in LimitEncampments, line 18"
set hb=hb+1
call DisplayTimedTextToPlayer(Q7,0.,0.,10.0,lww(Q7,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(Q7,0.,0.,10.0,"You cannot build more than 3 encampments.")
set hb=hb-1
set Fb[hb]="when calling alloc_Closure in LimitEncampments, line 19"
set hb=hb+1
if El==0 then
if Zl<32768 then
set Zl=Zl+1
set k7=Zl
set Ul[k7]=645
else
call e6("Out of memory: Could not create Closure.","when calling error in LimitEncampments, line 19")
set k7=0
endif
else
set El=El-1
set k7=Wl[El]
set Ul[k7]=645
endif
set hb=hb-1
set lo[k7]=x7
set Fb[hb]="when calling doAfter in LimitEncampments, line 19"
set hb=hb+1
set Fb[hb]="when calling start in ClosureTimers, line 15"
set hb=hb+1
if Ul[k7]==0 then
if k7==0 then
call e6("Nullpointer exception when calling CallbackSingle.start","when calling error in ClosureTimers, line 67")
else
call e6("Called CallbackSingle.start on invalid object.","when calling error in ClosureTimers, line 67")
endif
endif
call q3(k7,0.01,"when calling start in ClosureTimers, line 67")
set hb=hb-1-1
endif
endif
set hb=hb-1
set x7=null
set v7=null
set m7=null
set Q7=null
endfunction
function wOw takes unit Xow,unit Cow returns real
local real Vow=GetUnitX(Xow)
local real Bow=GetUnitY(Xow)
local real Now=Vow-GetUnitX(Cow)
local real Mow=Bow-GetUnitY(Cow)
return SquareRoot(Now*Now+Mow*Mow)
endfunction
function Xiw takes integer Fiw,string kiw returns nothing
local unit jiw
local player xiw
local group viw
local integer miw
local boolean Qiw
local location Wiw
local group Eiw
local unit Ziw
local integer Uiw
local boolean Iiw
local integer Piw
local integer Aiw
local boolean Diw
local integer Hiw
local boolean Jiw
local boolean Kiw
local boolean Liw
set Fb[hb]=kiw
set hb=hb+1
set jiw=GetTriggerUnit()
set Fiw=GetUnitTypeId(jiw)
set miw=FO
set Fb[hb]="when calling has in RangeChecks, line 13"
set hb=hb+1
if eb[miw]==0 then
if miw==0 then
call e6("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call e6("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set Qiw=d8(miw,Fiw)
set hb=hb-1
if Qiw then
set xiw=GetOwningPlayer(jiw)
set Wiw=GetUnitLoc(jiw)
set Eiw=CreateGroup()
call GroupEnumUnitsInRangeOfLoc(Eiw,Wiw,3000.0,null)
call DestroyBoolExpr(null)
set so=CreateGroup()
call ForGroup(Eiw,qf)
set viw=so
loop
exitwhen FirstOfGroup(viw)==null
set Ziw=FirstOfGroup(viw)
call GroupRemoveUnit(viw,Ziw)
if GetOwningPlayer(Ziw)==xiw and Ziw!=jiw then
if GetUnitTypeId(Ziw)==Fiw and wOw(Ziw,jiw)<=1500 then
set Kiw=true
else
set Uiw=el
set Fb[hb]="when calling has in RangeChecks, line 20"
set hb=hb+1
if eb[Uiw]==0 then
if Uiw==0 then
call e6("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call e6("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set Iiw=d8(Uiw,Fiw)
set hb=hb-1
if Iiw then
set Piw=el
set Aiw=GetUnitTypeId(Ziw)
set Fb[hb]="when calling has in RangeChecks, line 20"
set hb=hb+1
if eb[Piw]==0 then
if Piw==0 then
call e6("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call e6("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set Diw=d8(Piw,Aiw)
set hb=hb-1
set Jiw=Diw
else
set Jiw=false
endif
set Kiw=Jiw
endif
set Liw=Kiw
else
set Liw=false
endif
if Liw then
set Fb[hb]="when calling alloc_Closure in RangeChecks, line 22"
set hb=hb+1
if El==0 then
if Zl<32768 then
set Zl=Zl+1
set Hiw=Zl
set Ul[Hiw]=652
else
call e6("Out of memory: Could not create Closure.","when calling error in RangeChecks, line 22")
set Hiw=0
endif
else
set El=El-1
set Hiw=Wl[El]
set Ul[Hiw]=652
endif
set hb=hb-1
set kO[Hiw]=jiw
set Fb[hb]="when calling doAfter in RangeChecks, line 22"
set hb=hb+1
set Fb[hb]="when calling start in ClosureTimers, line 15"
set hb=hb+1
if Ul[Hiw]==0 then
if Hiw==0 then
call e6("Nullpointer exception when calling CallbackSingle.start","when calling error in ClosureTimers, line 67")
else
call e6("Called CallbackSingle.start on invalid object.","when calling error in ClosureTimers, line 67")
endif
endif
call q3(Hiw,0.01,"when calling start in ClosureTimers, line 67")
set hb=hb-1-1
if Fiw==1747988557 then
set Fb[hb]="when calling attentionToPlayer in RangeChecks, line 26"
set hb=hb+1
call DisplayTimedTextToPlayer(xiw,0.,0.,10.0,lww(xiw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(xiw,0.,0.,10.0,"You cannot build settlements too close to each other.")
set hb=hb-1
elseif Fiw==1747989075 then
set Fb[hb]="when calling attentionToPlayer in RangeChecks, line 28"
set hb=hb+1
call DisplayTimedTextToPlayer(xiw,0.,0.,10.0,lww(xiw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(xiw,0.,0.,10.0,"You cannot build churches too close to each other.")
set hb=hb-1
elseif Fiw==1747990102 then
set kiw="when calling attentionToPlayer in RangeChecks, line 30"
set Fb[hb]="when calling attentionToPlayer in RangeChecks, line 30"
set hb=hb+1
call DisplayTimedTextToPlayer(xiw,0.,0.,10.0,lww(xiw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(xiw,0.,0.,10.0,"You cannot build churches too close to each other.")
set hb=hb-1
elseif Fiw==1747988785 then
set Fb[hb]="when calling attentionToPlayer in RangeChecks, line 32"
set hb=hb+1
call DisplayTimedTextToPlayer(xiw,0.,0.,10.0,lww(xiw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(xiw,0.,0.,10.0,"You cannot build churches too close to each other.")
set hb=hb-1
elseif Fiw==1747989839 then
set Fb[hb]="when calling attentionToPlayer in RangeChecks, line 34"
set hb=hb+1
call DisplayTimedTextToPlayer(xiw,0.,0.,10.0,lww(xiw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(xiw,0.,0.,10.0,"You cannot build mosques too close to each other.")
set hb=hb-1
elseif Fiw==1747989059 then
set Fb[hb]="when calling attentionToPlayer in RangeChecks, line 36"
set hb=hb+1
call DisplayTimedTextToPlayer(xiw,0.,0.,10.0,lww(xiw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(xiw,0.,0.,10.0,"You cannot build castles too close to each other.")
set hb=hb-1
elseif Fiw==1747989331 then
set Fb[hb]="when calling attentionToPlayer in RangeChecks, line 38"
set hb=hb+1
call DisplayTimedTextToPlayer(xiw,0.,0.,10.0,lww(xiw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(xiw,0.,0.,10.0,"You cannot build castles too close to each other.")
set hb=hb-1
elseif Fiw==1747990351 then
set Fb[hb]="when calling attentionToPlayer in RangeChecks, line 40"
set hb=hb+1
call DisplayTimedTextToPlayer(xiw,0.,0.,10.0,lww(xiw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(xiw,0.,0.,10.0,"You cannot build castles too close to each other.")
set hb=hb-1
elseif Fiw==1747990353 then
set Fb[hb]="when calling attentionToPlayer in RangeChecks, line 42"
set hb=hb+1
call DisplayTimedTextToPlayer(xiw,0.,0.,10.0,lww(xiw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(xiw,0.,0.,10.0,"You cannot build castles too close to each other.")
set hb=hb-1
elseif Fiw==1747988568 then
set Fb[hb]="when calling attentionToPlayer in RangeChecks, line 44"
set hb=hb+1
call DisplayTimedTextToPlayer(xiw,0.,0.,10.0,lww(xiw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(xiw,0.,0.,10.0,"You cannot build inns too close to each other.")
set hb=hb-1
elseif Fiw==1747990341 then
set Fb[hb]="when calling attentionToPlayer in RangeChecks, line 46"
set hb=hb+1
call DisplayTimedTextToPlayer(xiw,0.,0.,10.0,lww(xiw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(xiw,0.,0.,10.0,"You cannot build inns too close to each other.")
set hb=hb-1
endif
exitwhen true
endif
endloop
call GroupClear(viw)
call DestroyGroup(viw)
endif
set hb=hb-1
set jiw=null
set xiw=null
set viw=null
set Wiw=null
set Eiw=null
set Ziw=null
endfunction
function F8 takes string g8 returns integer
local integer h8
set Fb[hb]=g8
set hb=hb+1
set Fb[hb]="when calling LinkedList in LinkedList, line 31"
set hb=hb+1
if yb==0 then
if pb<32768 then
set pb=pb+1
set h8=pb
set eb[h8]=700
else
call e6("Out of memory: Could not create LinkedList.","when calling error in LinkedList, line 17")
set h8=0
endif
else
set yb=yb-1
set h8=bb[yb]
set eb[h8]=700
endif
set hb=hb-1
set Fb[hb]="when calling construct_LinkedList2 in LinkedList, line 31"
set hb=hb+1
set To[h8]=l8(0,0,0,"when calling new_LLEntry in LinkedList, line 18")
set Yo[h8]=0
set ao[To[h8]]=To[h8]
set qo[To[h8]]=To[h8]
set hb=hb-1-1
return h8
endfunction
function Z0w takes real v0w,real m0w,real Q0w,real W0w,real E0w returns real
set Q0w=GetRandomReal(Q0w,W0w)
return (v0w+m0w)/2.+x0w(Q0w)*Pow(2.718281828,-(Pow(Q0w,2.)/2.*E0w))/SquareRoot(6.283185482*E0w)*((m0w-v0w)/2.)
endfunction
function l3 takes integer c3,real o3,string O3 returns nothing
set Fb[hb]=O3
set hb=hb+1
set Fc[c3]=Kcw("when calling getTimer in ClosureTimers, line 89")
call Ecw(Fc[c3],c3,"when calling setData in ClosureTimers, line 90")
call TimerStart(Fc[c3],o3,true,rf)
set hb=hb-1
endfunction
function tN takes integer DB,unit HB,string JB,integer KB,integer LB,string XB returns nothing
local real CB
local real VB
local unit BB
local player NB
local real MB
local integer wN
local integer uN
local real rN
local real sN
set Fb[hb]=XB
set hb=hb+1
set MS[DB]=0
set wc[DB]=0.
set uc[DB]=F8("when calling new_LinkedList in City, line 103")
set NS[DB]=1.0
set IS[DB]=HB
set BB=IS[DB]
set rN=GetUnitX(BB)
set sN=GetUnitY(BB)
set JS[DB]=rN
set KS[DB]=sN
set PS[DB]=JB
set DS[DB]=KB
set NB=GetOwningPlayer(IS[DB])
set HS[DB]=GetPlayerId(NB)
set PS[DB]=SubString(JB,0,24)
set AS[DB]=gS
set gS=gS+1
set CS[DB]=Z0w(FS[0],FS[1],-5.0,5.0,0.15)
set MB=Z0w(syw(kS[LB],0,"when calling get in City, line 121")*1.,syw(kS[LB],1,"when calling get in City, line 121")*1.,-5.0,5.0,0.15)
set LS[DB]=R2I(MB)
set BS[DB]=0.
set CB=2.5+GetRandomReal(2.5,5.0)
set Fb[hb]="when calling alloc_Closure in City, line 126"
set hb=hb+1
if Pl==0 then
if Al<32768 then
set Al=Al+1
set wN=Al
set Dl[wN]=631
else
call e6("Out of memory: Could not create Closure.","when calling error in City, line 126")
set wN=0
endif
else
set Pl=Pl-1
set wN=Il[Pl]
set Dl[wN]=631
endif
set hb=hb-1
set rc[wN]=DB
set Fb[hb]="when calling doPeriodically in City, line 126"
set hb=hb+1
set Fb[hb]="when calling start in ClosureTimers, line 36"
set hb=hb+1
if Dl[wN]==0 then
if wN==0 then
call e6("Nullpointer exception when calling CallbackPeriodic.start","when calling error in ClosureTimers, line 88")
else
call e6("Called CallbackPeriodic.start on invalid object.","when calling error in ClosureTimers, line 88")
endif
endif
call l3(wN,CB,"when calling start in ClosureTimers, line 88")
set hb=hb-1-1
set VB=60+GetRandomReal(60,120.0)
set Fb[hb]="when calling alloc_Closure in City, line 142"
set hb=hb+1
if Pl==0 then
if Al<32768 then
set Al=Al+1
set uN=Al
set Dl[uN]=632
else
call e6("Out of memory: Could not create Closure.","when calling error in City, line 142")
set uN=0
endif
else
set Pl=Pl-1
set uN=Il[Pl]
set Dl[uN]=632
endif
set hb=hb-1
set sc[uN]=DB
set Fb[hb]="when calling doPeriodically in City, line 142"
set hb=hb+1
set Fb[hb]="when calling start in ClosureTimers, line 36"
set hb=hb+1
if Dl[uN]==0 then
if uN==0 then
call e6("Nullpointer exception when calling CallbackPeriodic.start","when calling error in ClosureTimers, line 88")
else
call e6("Called CallbackPeriodic.start on invalid object.","when calling error in ClosureTimers, line 88")
endif
endif
call l3(uN,VB,"when calling start in ClosureTimers, line 88")
set hb=hb-1-1-1
set BB=null
set NB=null
endfunction
function AB takes unit WB,string EB,integer ZB,integer UB,string IB returns integer
local integer PB
set Fb[hb]=IB
set hb=hb+1
set Fb[hb]="when calling City in City, line 100"
set hb=hb+1
if Fl==0 then
if kl<32768 then
set kl=kl+1
set PB=kl
set jl[PB]=653
else
call e6("Out of memory: Could not create City.","when calling error in City, line 70")
set PB=0
endif
else
set Fl=Fl-1
set PB=hl[Fl]
set jl[PB]=653
endif
set hb=hb-1
call tN(PB,WB,EB,ZB,UB,"when calling construct_City in City, line 100")
set hb=hb-1
return PB
endfunction
function aL takes integer oL,string OL returns nothing
local unit lL
local integer bL
local integer yL
local boolean pL
local integer eL
local unit qL
set Fb[hb]=OL
set hb=hb+1
set lL=GetConstructedStructure()
set Fb[hb]="when calling isCity in CityBuilded, line 10"
set hb=hb+1
set Fb[hb]="when calling isCity in UnitTools, line 5"
set hb=hb+1
set bL=ql
set yL=GetUnitTypeId(lL)
set Fb[hb]="when calling has in City, line 422"
set hb=hb+1
if eb[bL]==0 then
if bL==0 then
call e6("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call e6("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set pL=d8(bL,yL)
set hb=hb-1-1-1
if pL then
set qL=GetConstructedStructure()
set eL=bO[GetPlayerId(GetOwningPlayer(GetConstructedStructure()))]
set Fb[hb]="when calling getForceId in CityBuilded, line 11"
set hb=hb+1
if Rb[eL]==0 then
if eL==0 then
call e6("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 94")
else
call e6("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 94")
endif
endif
set oL=yO[eL]
set hb=hb-1
set QS[gS]=AB(qL,"New",oL,1,"when calling new_City in CityBuilded, line 11")
endif
set hb=hb-1
set lL=null
set qL=null
endfunction
function h9 takes integer n9 returns nothing
local integer d9
local integer f9
local player R9
local string T9
local force Y9
local force G9
local boolean g9
if (not go[GetPlayerId(GetTriggerPlayer())])and(not ko) then
set d9=0
set n9=0
set f9=23
loop
exitwhen n9>f9
set R9=nO[n9]
if GetPlayerSlotState(R9)==PLAYER_SLOT_STATE_PLAYING then
set g9=GetPlayerController(R9)==MAP_CONTROL_USER
else
set g9=false
endif
if g9 then
set d9=d9+1
endif
set n9=n9+1
endloop
set ho=d9
set go[GetPlayerId(GetTriggerPlayer())]=true
set Fo=Fo+1
set T9="|cffff0000"+I2S(Fo)+"|r out of |cffff0000"+I2S(R2I((ho+1)*1./2))+"|r voted to skip the tutorial!"
set Y9=bj_FORCE_ALL_PLAYERS
if IsPlayerInForce(GetLocalPlayer(),Y9) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,5.0,T9)
endif
if Fo>=R2I((ho+1)*1./2) then
set ko=true
set G9=bj_FORCE_ALL_PLAYERS
if IsPlayerInForce(GetLocalPlayer(),G9) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,5.0,"|cffff0000Tutorial will shut down soon...|r")
endif
endif
endif
set R9=null
set Y9=null
set G9=null
endfunction
function Tww takes string pww,force eww,string qww returns nothing
local integer aww
local integer nww
local player dww
local player fww
local force Rww
set Fb[hb]=qww
set hb=hb+1
set aww=0
set nww=23
loop
exitwhen aww>nww
set fww=nO[aww]
set Rww=CreateForce()
call ForceAddPlayer(Rww,fww)
if Rww==eww then
set dww=nO[aww]
call DisplayTimedTextToPlayer(dww,0.,0.,10.0,lww(dww,"when calling getAttentionStringForPlayer in Messages, line 116"))
call DisplayTimedTextToPlayer(dww,0.,0.,10.0,pww)
endif
set aww=aww+1
endloop
set hb=hb-1
set dww=null
set fww=null
set Rww=null
endfunction
function OV takes integer tV,integer iV,string SV returns nothing
local integer cV
local boolean oV
set Fb[hb]=SV
set hb=hb+1
set cV=ql
set Fb[hb]="when calling has in City, line 183"
set hb=hb+1
if eb[cV]==0 then
if cV==0 then
call e6("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call e6("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set oV=d8(cV,iV)
set hb=hb-1
if not oV then
set hb=hb-1
return
endif
set IS[tV]=ReplaceUnitBJ(IS[tV],iV,bj_UNIT_STATE_METHOD_RELATIVE)
set hb=hb-1
endfunction
function bC takes integer OC,integer lC returns integer
if OC==1 then
if lC==0 then
return 1747988529
elseif lC==1 then
return 1747990326
elseif lC==2 then
return 1747990084
elseif lC==3 then
return 1747989590
else
return 1747988529
endif
elseif OC==2 then
if lC==0 then
return 1747988530
elseif lC==1 then
return 1747990327
elseif lC==2 then
return 1747990087
elseif lC==3 then
return 1747989591
else
return 1747988530
endif
elseif OC==3 then
if lC==0 then
return 1747988531
elseif lC==1 then
return 1747990328
elseif lC==2 then
return 1747990085
elseif lC==3 then
return 1747989592
else
return 1747988531
endif
elseif lC==0 then
return 1747988529
elseif lC==1 then
return 1747990326
elseif lC==2 then
return 1747990084
elseif lC==3 then
return 1747989590
else
return 1747988529
endif
endfunction
function oC takes integer cC returns integer
if cC==1747988529 then
return 1
elseif cC==1747988530 then
return 2
elseif cC==1747988531 then
return 3
elseif cC==1747990326 then
return 1
elseif cC==1747990327 then
return 2
elseif cC==1747990328 then
return 3
elseif cC==1747990084 then
return 1
elseif cC==1747990087 then
return 2
elseif cC==1747990085 then
return 3
elseif cC==1747989590 then
return 1
elseif cC==1747989591 then
return 2
elseif cC==1747989592 then
return 3
else
return 1
endif
endfunction
function sV takes integer VC,string BC returns nothing
local integer NC
local integer MC
local integer wV
local integer uV
local integer rV
set Fb[hb]=BC
set hb=hb+1
set NC=0
set MC=23
loop
exitwhen NC>MC
set wV=bO[NC]
set BC="when calling getSelectedCityId in City, line 239"
set Fb[hb]="when calling getSelectedCityId in City, line 239"
set hb=hb+1
if Rb[wV]==0 then
if wV==0 then
call e6("Nullpointer exception when calling PlayerStats.getSelectedCityId","when calling error in PlayerStats, line 84")
else
call e6("Called PlayerStats.getSelectedCityId on invalid object.","when calling error in PlayerStats, line 84")
endif
endif
set uV=qO[wV]
set hb=hb-1
if uV==AS[VC]then
set rV=bO[NC]
set Fb[hb]="when calling refreshMultiboardCity in City, line 240"
set hb=hb+1
if Rb[rV]==0 then
if rV==0 then
call e6("Nullpointer exception when calling PlayerStats.refreshMultiboardCity","when calling error in PlayerStats, line 43")
else
call e6("Called PlayerStats.refreshMultiboardCity on invalid object.","when calling error in PlayerStats, line 43")
endif
endif
call Dtw(rV,"when calling refreshMultiboardCity in PlayerStats, line 43")
set hb=hb-1
endif
set NC=NC+1
endloop
set hb=hb-1
endfunction
function qV takes integer lV,integer bV,string yV returns nothing
local integer pV
local integer eV
set Fb[hb]=yV
set hb=hb+1
if bV==PLAYER_NEUTRAL_AGGRESSIVE then
call SetUnitOwner(IS[lV],Player(bV),true)
set Fb[hb]="when calling changeTaxLevelFORCED in City, line 192"
set hb=hb+1
if jl[lV]==0 then
if lV==0 then
call e6("Nullpointer exception when calling City.changeTaxLevelFORCED","when calling error in City, line 259")
else
call e6("Called City.changeTaxLevelFORCED on invalid object.","when calling error in City, line 259")
endif
endif
set BS[lV]=BS[lV]-xS[MS[lV]]
set BS[lV]=BS[lV]+xS[0]
set MS[lV]=0
set hb=hb-1
else
call SetUnitOwner(IS[lV],nO[bV],true)
endif
set HS[lV]=bV
if bV>=0 and bV<24 then
set pV=bO[bV]
set Fb[hb]="when calling getForceId in City, line 199"
set hb=hb+1
if Rb[pV]==0 then
if pV==0 then
call e6("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 94")
else
call e6("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 94")
endif
endif
set eV=yO[pV]
set hb=hb-1
set DS[lV]=eV
endif
set Fb[hb]="when calling refreshMultiboardIfPossible in City, line 201"
set hb=hb+1
if jl[lV]==0 then
if lV==0 then
call e6("Nullpointer exception when calling City.refreshMultiboardIfPossible","when calling error in City, line 237")
else
call e6("Called City.refreshMultiboardIfPossible on invalid object.","when calling error in City, line 237")
endif
endif
call sV(lV,"when calling refreshMultiboardIfPossible in City, line 237")
set hb=hb-1-1
endfunction
function ZV takes integer TV,player YV,string GV returns nothing
local integer gV
local integer hV
local unit FV
local unit kV
local real jV
local integer xV
local integer vV
local integer mV
local integer QV
local boolean WV
local integer EV
set Fb[hb]=GV
set hb=hb+1
set FV=IS[TV]
call SetUnitState(FV,UNIT_STATE_LIFE,GetUnitState(FV,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,60.0)*0.01)
set kV=IS[TV]
call SetUnitState(kV,UNIT_STATE_MANA,GetUnitState(kV,UNIT_STATE_MAX_MANA)*RMaxBJ(0.,30.0)*0.01)
set Fb[hb]="when calling addModifier in City, line 222"
set hb=hb+1
if jl[TV]==0 then
if TV==0 then
call e6("Nullpointer exception when calling City.addModifier","when calling error in City, line 354")
else
call e6("Called City.addModifier on invalid object.","when calling error in City, line 354")
endif
endif
call CC(TV,0,"when calling addModifier in City, line 354")
set hb=hb-1
set jV=dS[mbw(eS,6,"when calling get in City, line 223")]
if GetRandomReal(0.0,1.0)<=jV then
set Fb[hb]="when calling addModifier in City, line 224"
set hb=hb+1
if jl[TV]==0 then
if TV==0 then
call e6("Nullpointer exception when calling City.addModifier","when calling error in City, line 354")
else
call e6("Called City.addModifier on invalid object.","when calling error in City, line 354")
endif
endif
call CC(TV,6,"when calling addModifier in City, line 354")
set hb=hb-1
endif
set gV=DS[TV]
set hV=GetPlayerId(YV)
if hV>=0 and hV<24 then
set xV=bO[hV]
set Fb[hb]="when calling getForceId in City, line 229"
set hb=hb+1
if Rb[xV]==0 then
if xV==0 then
call e6("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 94")
else
call e6("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 94")
endif
endif
set vV=yO[xV]
set hb=hb-1
set gV=vV
endif
set mV=pl
set QV=GetUnitTypeId(IS[TV])
set Fb[hb]="when calling has in City, line 231"
set hb=hb+1
if eb[mV]==0 then
if mV==0 then
call e6("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call e6("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set WV=d8(mV,QV)
set hb=hb-1
if WV then
set EV=bC(oC(GetUnitTypeId(IS[TV])),gV)
set Fb[hb]="when calling replaceCity in City, line 232"
set hb=hb+1
if jl[TV]==0 then
if TV==0 then
call e6("Nullpointer exception when calling City.replaceCity","when calling error in City, line 182")
else
call e6("Called City.replaceCity on invalid object.","when calling error in City, line 182")
endif
endif
call OV(TV,EV,"when calling replaceCity in City, line 182")
set hb=hb-1
call UnitAddAbility(IS[TV],1093677634)
endif
set Fb[hb]="when calling changeOwner in City, line 235"
set hb=hb+1
if jl[TV]==0 then
if TV==0 then
call e6("Nullpointer exception when calling City.changeOwner","when calling error in City, line 187")
else
call e6("Called City.changeOwner on invalid object.","when calling error in City, line 187")
endif
endif
call qV(TV,hV,"when calling changeOwner in City, line 187")
set hb=hb-1-1
set FV=null
set kV=null
endfunction
function hX takes integer oX,string OX returns nothing
local unit lX
local integer bX
local integer yX
local integer pX
local boolean eX
local unit qX
local integer aX
local player nX
local integer dX
local boolean fX
local boolean RX
local real TX
local real YX
local real GX
local real gX
set Fb[hb]=OX
set hb=hb+1
set lX=GetTriggerUnit()
set Fb[hb]="when calling isCity in CityManage, line 36"
set hb=hb+1
set Fb[hb]="when calling isCity in UnitTools, line 5"
set hb=hb+1
set yX=ql
set pX=GetUnitTypeId(lX)
set Fb[hb]="when calling has in City, line 422"
set hb=hb+1
if eb[yX]==0 then
if yX==0 then
call e6("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call e6("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set eX=d8(yX,pX)
set hb=hb-1-1-1
if eX then
if GetUnitStatePercent(lX,UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)<=50.0 then
set RX=GetOwningPlayer(lX)!=GetOwningPlayer(GetAttacker())
else
set RX=false
endif
if RX then
set TX=GetUnitX(lX)
set YX=GetUnitY(lX)
set qX=GetAttacker()
set GX=TX-GetUnitX(qX)
set gX=YX-GetUnitY(qX)
if SquareRoot(GX*GX+gX*gX)>300.0 then
call SetUnitState(lX,UNIT_STATE_LIFE,GetUnitState(lX,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,50.0)*0.01)
else
set Fb[hb]="when calling getCityId in CityManage, line 41"
set hb=hb+1
set aX=dC(lX,"when calling getCityId in UnitTools, line 9")
set hb=hb-1
set oX=QS[aX]
set nX=GetOwningPlayer(GetAttacker())
set Fb[hb]="when calling capture in CityManage, line 42"
set hb=hb+1
if jl[oX]==0 then
if oX==0 then
call e6("Nullpointer exception when calling City.capture","when calling error in City, line 218")
else
call e6("Called City.capture on invalid object.","when calling error in City, line 218")
endif
endif
call ZV(oX,nX,"when calling capture in City, line 218")
set hb=hb-1
set bX=GetUnitTypeId(lX)
set dX=pl
set Fb[hb]="when calling has in CityManage, line 44"
set hb=hb+1
if eb[dX]==0 then
if dX==0 then
call e6("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call e6("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set fX=d8(dX,bX)
set hb=hb-1
if fX then
call Tww(m3(GetOwningPlayer(GetAttacker()))+" has just captured "+m3(GetOwningPlayer(GetTriggerUnit()))+" Capitol!",bj_FORCE_ALL_PLAYERS,"when calling attentionToForce in CityManage, line 45")
endif
endif
elseif GetUnitStatePercent(lX,UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)<=50.0 then
call SetUnitState(lX,UNIT_STATE_LIFE,GetUnitState(lX,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,50.0)*0.01)
endif
endif
set hb=hb-1
set lX=null
set qX=null
set nX=null
endfunction
function Fow takes integer Row,string Tow returns rect
local integer Yow
local fogstate Gow
local integer gow
local rect how
set Fb[hb]=Tow
set hb=hb+1
set Yow=sl
set Gow=ConvertFogState(Row)
set Fb[hb]="when calling saveFogState in TypeCasting, line 130"
set hb=hb+1
if wb[Yow]==0 then
if Yow==0 then
call e6("Nullpointer exception when calling Table.saveFogState","when calling error in Table, line 168")
else
call e6("Called Table.saveFogState on invalid object.","when calling error in Table, line 168")
endif
endif
call SaveFogStateHandle(MO,Yow,0,Gow)
set hb=hb-1
set gow=sl
set Fb[hb]="when calling loadRect in TypeCasting, line 131"
set hb=hb+1
if wb[gow]==0 then
if gow==0 then
call e6("Nullpointer exception when calling Table.loadRect","when calling error in Table, line 147")
else
call e6("Called Table.loadRect on invalid object.","when calling error in Table, line 147")
endif
endif
set how=LoadRectHandle(MO,gow,0)
set hb=hb-1-1
set hf=how
set Gow=null
set how=null
return hf
endfunction
function rSw takes rect Viw,real Biw,real Niw returns boolean
local boolean Miw
local boolean wSw
local boolean uSw
if Biw>GetRectMinX(Viw) then
set Miw=Biw<GetRectMaxX(Viw)
else
set Miw=false
endif
if Miw then
set wSw=Niw>GetRectMinY(Viw)
else
set wSw=false
endif
if wSw then
set uSw=Niw<GetRectMaxY(Viw)
else
set uSw=false
endif
return uSw
endfunction
function hsw takes integer asw,string nsw returns nothing
local unit dsw
local real fsw
local real Rsw
local integer Tsw
local integer Ysw
local integer Gsw
local player gsw
set Fb[hb]=nsw
set hb=hb+1
set dsw=GetTriggerUnit()
if GetUnitTypeId(dsw)==1747988569 then
set fsw=GetUnitX(dsw)
set Rsw=GetUnitY(dsw)
set Tsw=nl
set Fb[hb]="when calling iterator in NoShipsNearRivers, line 11"
set hb=hb+1
set Ysw=e8(Tsw,"when calling new_LLIterator in LinkedList, line 165")
set hb=hb-1
set asw=Ysw
loop
exitwhen ao[do[asw]]==no[asw]
set do[asw]=ao[do[asw]]
if rSw(Fow(eo[do[asw]],"when calling rectFromIndex in NoShipsNearRivers, line 11"),fsw,Rsw) then
set Fb[hb]="when calling alloc_Closure in NoShipsNearRivers, line 14"
set hb=hb+1
if El==0 then
if Zl<32768 then
set Zl=Zl+1
set Gsw=Zl
set Ul[Gsw]=649
else
call e6("Out of memory: Could not create Closure.","when calling error in NoShipsNearRivers, line 14")
set Gsw=0
endif
else
set El=El-1
set Gsw=Wl[El]
set Ul[Gsw]=649
endif
set hb=hb-1
set SO[Gsw]=dsw
set nsw="when calling doAfter in NoShipsNearRivers, line 14"
set Fb[hb]="when calling doAfter in NoShipsNearRivers, line 14"
set hb=hb+1
set Fb[hb]="when calling start in ClosureTimers, line 15"
set hb=hb+1
if Ul[Gsw]==0 then
if Gsw==0 then
call e6("Nullpointer exception when calling CallbackSingle.start","when calling error in ClosureTimers, line 67")
else
call e6("Called CallbackSingle.start on invalid object.","when calling error in ClosureTimers, line 67")
endif
endif
call q3(Gsw,0.01,"when calling start in ClosureTimers, line 67")
set hb=hb-1-1
set gsw=GetOwningPlayer(dsw)
set Fb[hb]="when calling attentionToPlayer in NoShipsNearRivers, line 16"
set hb=hb+1
call DisplayTimedTextToPlayer(gsw,0.,0.,10.0,lww(gsw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(gsw,0.,0.,10.0,"You cannot build shipyards near rivers")
set hb=hb-1
endif
endloop
set Fb[hb]="when calling close in NoShipsNearRivers, line 11"
set hb=hb+1
if Ro[asw]then
call Hbw(asw,"when calling LLIterator in LinkedList, line 450")
endif
set hb=hb-1
endif
set hb=hb-1
set dsw=null
set gsw=null
endfunction
function ilw takes integer NOw,string MOw returns nothing
local unit wlw
local integer ulw
local player rlw
local integer slw
local boolean tlw
set Fb[hb]=MOw
set hb=hb+1
set wlw=GetDyingUnit()
set ulw=GetPlayerId(GetOwningPlayer(wlw))
set rlw=nO[ulw]
if GetPlayerSlotState(rlw)==PLAYER_SLOT_STATE_PLAYING then
set tlw=GetPlayerController(rlw)==MAP_CONTROL_USER
else
set tlw=false
endif
if tlw and(not IsUnitType(wlw,UNIT_TYPE_STRUCTURE)) then
set NOw=bO[ulw]
set slw=GetUnitLevel(wlw)
set Fb[hb]="when calling changeUpkeep in Upkeep, line 19"
set hb=hb+1
if Rb[NOw]==0 then
if NOw==0 then
call e6("Nullpointer exception when calling PlayerStats.changeUpkeep","when calling error in PlayerStats, line 23")
else
call e6("Called PlayerStats.changeUpkeep on invalid object.","when calling error in PlayerStats, line 23")
endif
endif
set aO[NOw]=aO[NOw]+slw
set hb=hb-1
endif
set hb=hb-1
set wlw=null
set rlw=null
endfunction
function N0w takes player L0w,string X0w returns string
local integer C0w
local integer V0w
local integer B0w
set Fb[hb]=X0w
set hb=hb+1
set V0w=bO[GetPlayerId(L0w)]
set Fb[hb]="when calling getForceId in Messages, line 21"
set hb=hb+1
if Rb[V0w]==0 then
if V0w==0 then
call e6("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 94")
else
call e6("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 94")
endif
endif
set B0w=yO[V0w]
set hb=hb-1
set C0w=GetRandomInt(0,2)
if B0w==0 then
set X0w=IO[C0w]
elseif B0w==1 then
set X0w=PO[C0w]
elseif B0w==2 then
set X0w=AO[C0w]
elseif B0w==3 then
set X0w=DO[C0w]
else
set X0w="Note:"
endif
set hb=hb-1
return "|cff00ccff"+X0w+"|r"
endfunction
function DV takes integer UV,integer IV,string PV returns nothing
local player AV
set Fb[hb]=PV
set hb=hb+1
if mo-wc[UV]>=hS then
set wc[UV]=mo
set BS[UV]=BS[UV]-xS[MS[UV]]
set BS[UV]=BS[UV]+xS[IV]
set MS[UV]=IV
else
set AV=nO[HS[UV]]
set Fb[hb]="when calling noteToPlayer in City, line 257"
set hb=hb+1
call DisplayTimedTextToPlayer(AV,0.,0.,10.0,N0w(AV,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(AV,0.,0.,10.0,"Wait 1 turn to be able to change tax level.")
set hb=hb-1
endif
set hb=hb-1
set AV=null
endfunction
function kcw takes integer acw,string ncw returns nothing
local integer dcw
local integer fcw
local integer Rcw
local boolean Tcw
local unit Ycw
local integer Gcw
local integer gcw
local boolean hcw
local integer Fcw
set Fb[hb]=ncw
set hb=hb+1
set Rcw=uS
set acw=GetSpellAbilityId()
set Fb[hb]="when calling has in Taxation, line 7"
set hb=hb+1
if eb[Rcw]==0 then
if Rcw==0 then
call e6("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call e6("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set Tcw=d8(Rcw,acw)
set hb=hb-1
if Tcw then
set Ycw=GetSpellTargetUnit()
set Fb[hb]="when calling isCity in Taxation, line 8"
set hb=hb+1
set Gcw=ql
set gcw=GetUnitTypeId(Ycw)
set Fb[hb]="when calling has in City, line 422"
set hb=hb+1
if eb[Gcw]==0 then
if Gcw==0 then
call e6("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call e6("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set hcw=d8(Gcw,gcw)
set hb=hb-1-1
if hcw then
if GetOwningPlayer(GetSpellTargetUnit())==GetOwningPlayer(GetSpellAbilityUnit()) then
set dcw=0
set fcw=GetSpellAbilityId()
if fcw==1093677642 then
set dcw=1
elseif fcw==1093677641 then
set dcw=0
elseif fcw==1093677640 then
set dcw=2
elseif fcw==1093678155 then
set dcw=3
endif
set Fcw=QS[dC(GetSpellTargetUnit(),"when calling getCityId in Taxation, line 20")]
set Fb[hb]="when calling changeTaxLevel in Taxation, line 20"
set hb=hb+1
if jl[Fcw]==0 then
if Fcw==0 then
call e6("Nullpointer exception when calling City.changeTaxLevel","when calling error in City, line 248")
else
call e6("Called City.changeTaxLevel on invalid object.","when calling error in City, line 248")
endif
endif
call DV(Fcw,dcw,"when calling changeTaxLevel in City, line 248")
set hb=hb-1
endif
endif
endif
set hb=hb-1
set Ycw=null
endfunction
function r8 takes integer V7,string B7 returns nothing
local unit N7
local player M7
local player w8
local player u8
set Fb[hb]=B7
set hb=hb+1
set N7=GetConstructingStructure()
if GetUnitTypeId(N7)==1747990614 then
if bo[GetPlayerId(GetOwningPlayer(N7))]<3 then
set M7=GetOwningPlayer(N7)
set w8=GetOwningPlayer(N7)
set bo[GetPlayerId(M7)]=bo[GetPlayerId(w8)]+1
else
set u8=GetOwningPlayer(N7)
set Fb[hb]="when calling attentionToPlayer in LimitMercenaryCamps, line 18"
set hb=hb+1
call DisplayTimedTextToPlayer(u8,0.,0.,10.0,lww(u8,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(u8,0.,0.,10.0,"You cannot build more than 3 mercenary camps.")
set hb=hb-1
set Fb[hb]="when calling alloc_Closure in LimitMercenaryCamps, line 19"
set hb=hb+1
if El==0 then
if Zl<32768 then
set Zl=Zl+1
set V7=Zl
set Ul[V7]=646
else
call e6("Out of memory: Could not create Closure.","when calling error in LimitMercenaryCamps, line 19")
set V7=0
endif
else
set El=El-1
set V7=Wl[El]
set Ul[V7]=646
endif
set hb=hb-1
set yo[V7]=N7
set Fb[hb]="when calling doAfter in LimitMercenaryCamps, line 19"
set hb=hb+1
set Fb[hb]="when calling start in ClosureTimers, line 15"
set hb=hb+1
if Ul[V7]==0 then
if V7==0 then
call e6("Nullpointer exception when calling CallbackSingle.start","when calling error in ClosureTimers, line 67")
else
call e6("Called CallbackSingle.start on invalid object.","when calling error in ClosureTimers, line 67")
endif
endif
call q3(V7,0.01,"when calling start in ClosureTimers, line 67")
set hb=hb-1-1
endif
endif
set hb=hb-1
set N7=null
set M7=null
set w8=null
set u8=null
endfunction
function F6 takes integer T6,integer Y6,string G6 returns nothing
local hashtable g6
local integer h6
set Fb[hb]=G6
set hb=hb+1
set g6=So
set Fb[hb]="when calling count in HashList, line 19"
set hb=hb+1
if Vl[T6]==0 then
if T6==0 then
call e6("Nullpointer exception when calling HashList.count","when calling error in HashList, line 15")
else
call e6("Called HashList.count on invalid object.","when calling error in HashList, line 15")
endif
endif
set h6=LoadInteger(So,T6,Y6)
set hb=hb-1
call SaveInteger(g6,T6,Y6,h6+1)
set hb=hb-1
set g6=null
endfunction
function Ryw takes integer nyw,integer dyw,string fyw returns nothing
set Fb[hb]=fyw
set hb=hb+1
call SaveInteger(io,nyw,co[nyw],dyw)
set Fb[hb]="when calling incrOccurences in HashList, line 28"
set hb=hb+1
if Vl[nyw]==0 then
if nyw==0 then
call e6("Nullpointer exception when calling HashList.incrOccurences","when calling error in HashList, line 18")
else
call e6("Called HashList.incrOccurences on invalid object.","when calling error in HashList, line 18")
endif
endif
call F6(nyw,dyw,"when calling incrOccurences in HashList, line 18")
set hb=hb-1
set co[nyw]=co[nyw]+1
set hb=hb-1
endfunction
function t7 takes integer N6,integer M6,integer w7,string u7 returns nothing
local boolean r7
local integer s7
set Fb[hb]=u7
set hb=hb+1
set Fb[hb]="when calling put in HashMap, line 48"
set hb=hb+1
set Fb[hb]="when calling saveInt in HashMap, line 16"
set hb=hb+1
if wb[N6]==0 then
if N6==0 then
call e6("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call e6("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(MO,N6,M6,w7)
set hb=hb-1-1
set Fb[hb]="when calling hasKey in HashMap, line 49"
set hb=hb+1
if wb[N6]==0 then
if N6==0 then
call e6("Nullpointer exception when calling IterableMap.hasKey","when calling error in HashMap, line 75")
else
call e6("Called IterableMap.hasKey on invalid object.","when calling error in HashMap, line 75")
endif
endif
set Fb[hb]="when calling hasKey in HashMap, line 75"
set hb=hb+1
set r7=abw(oo[N6],M6,"when calling has in HashMap, line 76")
set hb=hb-1-1
if not r7 then
set s7=oo[N6]
set Fb[hb]="when calling add in HashMap, line 50"
set hb=hb+1
if Vl[s7]==0 then
if s7==0 then
call e6("Nullpointer exception when calling HashList.add","when calling error in HashList, line 25")
else
call e6("Called HashList.add on invalid object.","when calling error in HashList, line 25")
endif
endif
call Ryw(s7,M6,"when calling add in HashList, line 25")
set hb=hb-1
endif
set hb=hb-1
endfunction
function Fbw takes integer Ybw,integer Gbw,integer gbw,string hbw returns nothing
set Fb[hb]=hbw
set hb=hb+1
if wb[Ybw]==0 then
if Ybw==0 then
call e6("Nullpointer exception when calling HashMap.put","when calling error in HashMap, line 15")
else
call e6("Called HashMap.put on invalid object.","when calling error in HashMap, line 15")
endif
endif
if wb[Ybw]<=725 then
set Fb[hb]="when calling put in HashMap, line 15"
set hb=hb+1
set Fb[hb]="when calling saveInt in HashMap, line 16"
set hb=hb+1
if wb[Ybw]==0 then
if Ybw==0 then
call e6("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call e6("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(MO,Ybw,Gbw,gbw)
set hb=hb-1-1
else
call t7(Ybw,Gbw,gbw,"when calling put in HashMap, line 15")
endif
set hb=hb-1
endfunction
function s0w takes integer C9,string V9 returns nothing
local unit B9
local player N9
local real M9
local integer w0w
local real u0w
local real r0w
set Fb[hb]=V9
set hb=hb+1
if GetSpellAbilityId()==1093678154 then
set C9=F8("when calling new_LinkedList in MassControl, line 24")
set B9=GetSpellAbilityUnit()
set N9=GetOwningPlayer(B9)
set u0w=GetSpellTargetX()
set r0w=GetSpellTargetY()
set M9=syw(Po,GetLearnedSkillLevel(),"when calling get in MassControl, line 27")/1000.
set Fb[hb]="when calling alloc_Closure in MassControl, line 27"
set hb=hb+1
if vl==0 then
if ml<32768 then
set ml=ml+1
set w0w=ml
set Ql[w0w]=685
else
call e6("Out of memory: Could not create Closure.","when calling error in MassControl, line 27")
set w0w=0
endif
else
set vl=vl-1
set w0w=xl[vl]
set Ql[w0w]=685
endif
set hb=hb-1
set Do[w0w]=N9
set Ho[w0w]=B9
set Jo[w0w]=C9
call i3(u0w,r0w,M9,w0w,"when calling forUnitsInRange in MassControl, line 27")
call Fbw(Io,GetHandleId(B9),C9,"when calling put in MassControl, line 30")
endif
set hb=hb-1
set B9=null
set N9=null
endfunction
function Wlw takes integer mlw,string Qlw returns nothing
set Fb[hb]=Qlw
set hb=hb+1
if Tl[mlw]==0 then
if mlw==0 then
call e6("Nullpointer exception when calling EventListener.onEvent","when calling error in ClosureEvents, line 108")
else
call e6("Called EventListener.onEvent on invalid object.","when calling error in ClosureEvents, line 108")
endif
endif
if Tl[mlw]<=669 then
if Tl[mlw]<=665 then
if Tl[mlw]<=663 then
if Tl[mlw]<=662 then
call MK(mlw,"when calling CastleCapture_closure_impl in ClosureEvents, line 108")
else
call aL(mlw,"when calling CityBuilded_closure_impl in ClosureEvents, line 108")
endif
elseif Tl[mlw]<=664 then
call AL(mlw,"when calling CityManage_closure_impl in ClosureEvents, line 108")
else
call hX(mlw,"when calling CityManage_closure_impl in ClosureEvents, line 108")
endif
elseif Tl[mlw]<=667 then
if Tl[mlw]<=666 then
call F7(mlw)
else
call W7(mlw,"when calling LimitEncampments_closure_impl in ClosureEvents, line 108")
endif
elseif Tl[mlw]<=668 then
call C7(mlw)
else
call r8(mlw,"when calling LimitMercenaryCamps_closure_impl in ClosureEvents, line 108")
endif
elseif Tl[mlw]<=673 then
if Tl[mlw]<=671 then
if Tl[mlw]<=670 then
call h9(mlw)
else
call s0w(mlw,"when calling MassControl_closure_impl in ClosureEvents, line 108")
endif
elseif Tl[mlw]<=672 then
call F0w(mlw,"when calling MassControl_closure_impl in ClosureEvents, line 108")
else
call hsw(mlw,"when calling NoShipsNearRivers_closure_impl in ClosureEvents, line 108")
endif
elseif Tl[mlw]<=675 then
if Tl[mlw]<=674 then
call Psw(mlw,"when calling OnPlayerLeave_closure_impl in ClosureEvents, line 108")
else
call Xiw(mlw,"when calling RangeChecks_closure_impl in ClosureEvents, line 108")
endif
elseif Tl[mlw]<=676 then
call kcw(mlw,"when calling Taxation_closure_impl in ClosureEvents, line 108")
else
call ilw(mlw,"when calling Upkeep_closure_impl in ClosureEvents, line 108")
endif
set hb=hb-1
endfunction
function TM takes string pM returns nothing
local unit eM
local integer qM
local integer aM
local integer nM
local eventid dM
local integer fM
local boolean RM
set Fb[hb]=pM
set hb=hb+1
set eM=GetTriggerUnit()
set dM=GetTriggerEventId()
set Fb[hb]="when calling toIntId in ClosureEvents, line 169"
set hb=hb+1
set fM=oc[GetHandleId(dM)]
if fM==0 then
set fM=CN(dM,"when calling registerEventId in ClosureEvents, line 228")
endif
set hb=hb-1
set qM=fM
if eM!=null then
set RM=GetUnitUserData(eM)>0
else
set RM=false
endif
if RM then
if pc[GetUnitUserData(eM)]!=0 then
set aM=pc[GetUnitUserData(eM)]
loop
exitwhen aM==0
if ec[aM]==qM then
call Wlw(aM,"when calling onEvent in ClosureEvents, line 176")
endif
set aM=qc[aM]
endloop
endif
endif
if yc[qM]!=0 then
set nM=yc[qM]
loop
exitwhen nM==0
call Wlw(nM,"when calling onEvent in ClosureEvents, line 182")
set nM=qc[nM]
endloop
endif
set hb=hb-1
set eM=null
set dM=null
endfunction
function Eew takes nothing returns nothing
set hb=0
set Fb[hb]="ClosureEvents, line 286"
set hb=hb+1
call TM("when calling generalEventCallback in ClosureEvents, line 286")
set hb=hb-1
endfunction
function Wm takes nothing returns boolean
if GetResearched()!=1378889800 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889800,true)!=1 then
return false
endif
return true
endfunction
function Em takes nothing returns boolean
if not Wm() then
return false
endif
return true
endfunction
function FD takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function FK takes nothing returns boolean
return true
endfunction
function hU takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function FU takes nothing returns boolean
if not hU() then
return false
endif
return true
endfunction
function hW takes nothing returns boolean
if GetResearched()!=1378889809 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889809,true)!=1 then
return false
endif
return true
endfunction
function FW takes nothing returns boolean
if not hW() then
return false
endif
return true
endfunction
function FZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989826,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989828,0)
endfunction
function qsw takes string bsw returns boolean
local playerunitevent ysw
local integer psw
local integer esw
set Fb[hb]=bsw
set hb=hb+1
set ysw=EVENT_PLAYER_UNIT_CONSTRUCT_START
set Fb[hb]="when calling alloc_Closure in NoShipsNearRivers, line 7"
set hb=hb+1
if fl==0 then
if Rl<32768 then
set Rl=Rl+1
set psw=Rl
set Tl[psw]=673
else
call e6("Out of memory: Could not create Closure.","when calling error in NoShipsNearRivers, line 7")
set psw=0
endif
else
set fl=fl-1
set psw=dl[fl]
set Tl[psw]=673
endif
set hb=hb-1
set ec[psw]=0
set qc[psw]=0
set ac[psw]=0
set Fb[hb]="when calling add in NoShipsNearRivers, line 7"
set hb=hb+1
set Fb[hb]="when calling toIntId in ClosureEvents, line 111"
set hb=hb+1
set esw=oc[GetHandleId(ysw)]
if esw==0 then
set esw=CN(ysw,"when calling registerEventId in ClosureEvents, line 228")
endif
set hb=hb-1
set ec[psw]=esw
if yc[ec[psw]]!=0 then
set ac[yc[ec[psw]]]=psw
set qc[psw]=yc[ec[psw]]
endif
set yc[ec[psw]]=psw
set hb=hb-1-1
set ysw=null
return true
endfunction
function Few takes nothing returns boolean
set hb=0
return qsw("NoShipsNearRivers, line 1")
endfunction
function Fsw takes nothing returns boolean
return true
endfunction
function GE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989570,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989556,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989559,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989557,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989560,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989573,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989574,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651841,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651833,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651832,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989582,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990097,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989812,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990098,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990099,0)
endfunction
function YH takes nothing returns boolean
if GetUnitTypeId(GetConstructedStructure())!=1747989331 then
return false
endif
return true
endfunction
function GH takes nothing returns boolean
if not YH() then
return false
endif
return true
endfunction
function GP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990599,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990600,0)
endfunction
function GU takes nothing returns nothing
set s=bj_FORCE_ALL_PLAYERS
call ForForce(s,Rq)
endfunction
function H7 takes string E7 returns boolean
local playerunitevent Z7
local playerunitevent U7
local integer I7
local integer P7
local integer A7
local integer D7
set Fb[hb]=E7
set hb=hb+1
set Z7=EVENT_PLAYER_UNIT_DEATH
set Fb[hb]="when calling alloc_Closure in LimitMercenaryCamps, line 8"
set hb=hb+1
if fl==0 then
if Rl<32768 then
set Rl=Rl+1
set I7=Rl
set Tl[I7]=668
else
call e6("Out of memory: Could not create Closure.","when calling error in LimitMercenaryCamps, line 8")
set I7=0
endif
else
set fl=fl-1
set I7=dl[fl]
set Tl[I7]=668
endif
set hb=hb-1
set ec[I7]=0
set qc[I7]=0
set ac[I7]=0
set Fb[hb]="when calling add in LimitMercenaryCamps, line 8"
set hb=hb+1
set Fb[hb]="when calling toIntId in ClosureEvents, line 111"
set hb=hb+1
set P7=oc[GetHandleId(Z7)]
if P7==0 then
set P7=CN(Z7,"when calling registerEventId in ClosureEvents, line 228")
endif
set hb=hb-1
set ec[I7]=P7
if yc[ec[I7]]!=0 then
set ac[yc[ec[I7]]]=I7
set qc[I7]=yc[ec[I7]]
endif
set yc[ec[I7]]=I7
set hb=hb-1
set U7=EVENT_PLAYER_UNIT_CONSTRUCT_START
set Fb[hb]="when calling alloc_Closure in LimitMercenaryCamps, line 12"
set hb=hb+1
if fl==0 then
if Rl<32768 then
set Rl=Rl+1
set A7=Rl
set Tl[A7]=669
else
call e6("Out of memory: Could not create Closure.","when calling error in LimitMercenaryCamps, line 12")
set A7=0
endif
else
set fl=fl-1
set A7=dl[fl]
set Tl[A7]=669
endif
set hb=hb-1
set ec[A7]=0
set qc[A7]=0
set ac[A7]=0
set Fb[hb]="when calling add in LimitMercenaryCamps, line 12"
set hb=hb+1
set Fb[hb]="when calling toIntId in ClosureEvents, line 111"
set hb=hb+1
set D7=oc[GetHandleId(U7)]
if D7==0 then
set D7=CN(U7,"when calling registerEventId in ClosureEvents, line 228")
endif
set hb=hb-1
set ec[A7]=D7
if yc[ec[A7]]!=0 then
set ac[yc[ec[A7]]]=A7
set qc[A7]=yc[ec[A7]]
endif
set yc[ec[A7]]=A7
set hb=hb-1-1
set Z7=null
set U7=null
return true
endfunction
function Gew takes nothing returns boolean
set hb=0
return H7("LimitMercenaryCamps, line 1")
endfunction
function Gv takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989066,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988551,0)
endfunction
function DE takes nothing returns boolean
if GetResearched()!=1378890037 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890037,true)!=1 then
return false
endif
return true
endfunction
function HE takes nothing returns boolean
if not DE() then
return false
endif
return true
endfunction
function HU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990322,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990105,0)
endfunction
function HW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989560,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989579,0)
endfunction
function Ccw takes timer Lcw,string Xcw returns nothing
set Fb[hb]=Xcw
set hb=hb+1
if Lcw==null then
call e6("Trying to release a null timer","when calling error in TimerUtils, line 37")
set hb=hb-1
return
endif
if Dcw(Lcw,"when calling getData in TimerUtils, line 39")==679645218 then
call e6("ReleaseTimer: Double free!","when calling error in TimerUtils, line 40")
set hb=hb-1
return
endif
call Ecw(Lcw,679645218,"when calling setData in TimerUtils, line 42")
call PauseTimer(Lcw)
set wl[ul]=Lcw
set ul=ul+1
set hb=hb-1
endfunction
function T3 takes integer f3,string R3 returns nothing
set Fb[hb]=R3
set hb=hb+1
set Fb[hb]="when calling CallbackSingle_onDestroy in ClosureTimers, line 79"
set hb=hb+1
call Ccw(kc[f3],"when calling release in ClosureTimers, line 80")
set hb=hb-1
set Fb[hb]="when calling CallbackSingle in ClosureTimers, line 79"
set hb=hb+1
if Ul[f3]==0 then
call e6("Double free: object of type CallbackSingle","when calling error in ClosureTimers, line 63")
else
set Wl[El]=f3
set El=El+1
set Ul[f3]=0
endif
set hb=hb-1-1
endfunction
function Bsw takes integer Csw returns nothing
local group Vsw
call TriggerRegisterEnterRegion(CreateTrigger(),Eo,Filter(yf))
call ySw(EVENT_PLAYER_UNIT_ISSUED_ORDER,null,pf,null)
call GroupEnumUnitsInRect(oO,Wo,null)
call ForGroup(oO,ef)
set Vsw=oO
call GroupClear(Vsw)
call DestroyGroup(Vsw)
set Vsw=null
endfunction
function Olw takes string olw returns nothing
endfunction
function wsw takes multiboard Xrw,integer Crw,integer Vrw,real Brw,string Nrw returns nothing
local multiboarditem Mrw=MultiboardGetItem(Xrw,Vrw,Crw)
call MultiboardSetItemWidth(Mrw,Brw)
call MultiboardSetItemValue(Mrw,Nrw)
set Mrw=null
endfunction
function Pww takes string Fww returns multiboard
local multiboard kww
local integer jww
local integer xww
local integer vww
local integer mww
local integer Qww
local integer Www
local integer Eww
local integer Zww
local string Uww
local real Iww
set Fb[hb]=Fww
set hb=hb+1
set bj_lastCreatedMultiboard=CreateMultiboard()
call MultiboardSetRowCount(bj_lastCreatedMultiboard,10)
call MultiboardSetColumnCount(bj_lastCreatedMultiboard,6)
call MultiboardSetTitleText(bj_lastCreatedMultiboard,"Income: 2:00")
call MultiboardDisplay(bj_lastCreatedMultiboard,true)
set kww=bj_lastCreatedMultiboard
call MultiboardMinimize(kww,true)
call MultiboardSetItemsStyle(kww,true,false)
set jww=0
set xww=23
loop
exitwhen jww>xww
if dO==nO[jww]then
call MultiboardDisplay(kww,false)
endif
set jww=jww+1
endloop
set vww=0
set mww=9
loop
exitwhen vww>mww
set Qww=0
set Www=5
loop
exitwhen Qww>Www
set Iww=syw(Vo[vww],Qww,"when calling get in MultiboardCityUpdate, line 14")/1000.
set Eww=syw(tO[vww],Qww,"when calling get in MultiboardCityUpdate, line 14")
set Fww="when calling stringFromIndex in MultiboardCityUpdate, line 14"
set Fb[hb]="when calling stringFromIndex in MultiboardCityUpdate, line 14"
set hb=hb+1
set Zww=sl
set Fb[hb]="when calling loadString in TypeCasting, line 29"
set hb=hb+1
if wb[Zww]==0 then
if Zww==0 then
call e6("Nullpointer exception when calling Table.loadString","when calling error in Table, line 57")
else
call e6("Called Table.loadString on invalid object.","when calling error in Table, line 57")
endif
endif
set Uww=LoadStr(MO,Zww,Eww)
set hb=hb-1-1
call wsw(kww,Qww,vww,Iww,Uww)
set Qww=Qww+1
endloop
set vww=vww+1
endloop
set hb=hb-1
set Tf=kww
set kww=null
return Tf
endfunction
function Vww takes integer Aww,string Dww returns nothing
local integer Hww
local integer Jww
local integer Kww
local integer Lww
local boolean Xww
local multiboard Cww
set Fb[hb]=Dww
set hb=hb+1
set Hww=0
set Aww=23
loop
exitwhen Hww>Aww
set Lww=bO[Hww]
set Dww="when calling isInGame in MultiboardCityUpdate, line 20"
set Fb[hb]="when calling isInGame in MultiboardCityUpdate, line 20"
set hb=hb+1
if Rb[Lww]==0 then
if Lww==0 then
call e6("Nullpointer exception when calling PlayerStats.isInGame","when calling error in PlayerStats, line 14")
else
call e6("Called PlayerStats.isInGame on invalid object.","when calling error in PlayerStats, line 14")
endif
endif
set Xww=eO[Lww]
set hb=hb-1
if Xww then
set iO[Hww]=Pww("when calling createCoEMultiboard in MultiboardCityUpdate, line 21")
endif
set Hww=Hww+1
endloop
set Jww=0
set Kww=23
loop
exitwhen Jww>Kww
set Cww=iO[Jww]
if dO==nO[Jww]then
call MultiboardDisplay(Cww,true)
endif
set Jww=Jww+1
endloop
set hb=hb-1
set Cww=null
endfunction
function bM takes integer oM returns nothing
local integer OM
local trigger lM
call TriggerAddCondition(tl,Condition(Cd))
call TriggerAddCondition(il,Condition(Vd))
call TriggerAddAction(ic,Bd)
call TriggerAddAction(Sc,Nd)
call TriggerAddAction(cc,Md)
set OM=0
set oM=bj_MAX_PLAYERS-1
loop
exitwhen OM>oM
call TriggerRegisterPlayerEvent(Sc,nO[OM],EVENT_PLAYER_LEAVE)
set lM=cc
call TriggerRegisterPlayerEvent(lM,nO[OM],EVENT_PLAYER_ARROW_DOWN_DOWN)
call TriggerRegisterPlayerEvent(lM,nO[OM],EVENT_PLAYER_ARROW_DOWN_UP)
call TriggerRegisterPlayerEvent(lM,nO[OM],EVENT_PLAYER_ARROW_UP_DOWN)
call TriggerRegisterPlayerEvent(lM,nO[OM],EVENT_PLAYER_ARROW_UP_UP)
call TriggerRegisterPlayerEvent(lM,nO[OM],EVENT_PLAYER_ARROW_LEFT_DOWN)
call TriggerRegisterPlayerEvent(lM,nO[OM],EVENT_PLAYER_ARROW_LEFT_UP)
call TriggerRegisterPlayerEvent(lM,nO[OM],EVENT_PLAYER_ARROW_RIGHT_DOWN)
call TriggerRegisterPlayerEvent(lM,nO[OM],EVENT_PLAYER_ARROW_RIGHT_UP)
call TriggerRegisterPlayerEvent(lM,nO[OM],EVENT_PLAYER_END_CINEMATIC)
call TriggerRegisterPlayerEvent(lM,nO[OM],EVENT_PLAYER_MOUSE_UP)
call TriggerRegisterPlayerEvent(lM,nO[OM],EVENT_PLAYER_MOUSE_DOWN)
call TriggerRegisterPlayerEvent(lM,nO[OM],EVENT_PLAYER_MOUSE_MOVE)
call TriggerRegisterPlayerChatEvent(lM,nO[OM],"",false)
set OM=OM+1
endloop
call ySw(EVENT_PLAYER_UNIT_SPELL_EFFECT,null,wf,null)
set lM=null
endfunction
function Pbw takes integer Ubw,string Ibw returns nothing
set Fb[hb]=Ibw
set hb=hb+1
if Sb[Ubw]==0 then
if Ubw==0 then
call e6("Nullpointer exception when calling LLEntry.LLEntry","when calling error in LinkedList, line 396")
else
call e6("Called LLEntry.LLEntry on invalid object.","when calling error in LinkedList, line 396")
endif
endif
set Fb[hb]="when calling destroyLLEntry in LinkedList, line 396"
set hb=hb+1
set Fb[hb]="when calling LLEntry in LinkedList, line 396"
set hb=hb+1
if Sb[Ubw]==0 then
call e6("Double free: object of type LLEntry","when calling error in LinkedList, line 396")
else
set sb[tb]=Ubw
set tb=tb+1
set Sb[Ubw]=0
endif
set hb=hb-1-1-1
endfunction
function cyw takes integer tyw,integer iyw,string Syw returns nothing
set Fb[hb]=Syw
set hb=hb+1
if eb[tyw]==0 then
if tyw==0 then
call e6("Nullpointer exception when calling LinkedList.removeEntry","when calling error in LinkedList, line 373")
else
call e6("Called LinkedList.removeEntry on invalid object.","when calling error in LinkedList, line 373")
endif
endif
set Fb[hb]="when calling removeEntry in LinkedList, line 373"
set hb=hb+1
set ao[qo[iyw]]=ao[iyw]
set qo[ao[iyw]]=qo[iyw]
call Pbw(iyw,"when calling LLEntry in LinkedList, line 376")
set Yo[tyw]=Yo[tyw]-1
set hb=hb-1-1
endfunction
function G8 takes integer f8,integer R8,string T8 returns nothing
local integer Y8
set Fb[hb]=T8
set hb=hb+1
set Y8=ao[To[f8]]
loop
exitwhen Y8==To[f8]
if eo[Y8]==R8 then
call cyw(f8,Y8,"when calling removeEntry in LinkedList, line 126")
set hb=hb-1
return
endif
set Y8=ao[Y8]
endloop
set hb=hb-1
endfunction
function vlw takes integer klw,integer jlw,string xlw returns nothing
set Fb[hb]=xlw
set hb=hb+1
if jl[klw]==0 then
if klw==0 then
call e6("Nullpointer exception when calling City.getCityModifierOnRemove","when calling error in City, line 410")
else
call e6("Called City.getCityModifierOnRemove on invalid object.","when calling error in City, line 410")
endif
endif
set Fb[hb]="when calling getCityModifierOnRemove in City, line 410"
set hb=hb+1
if nS[mbw(eS,jlw,"when calling get in City, line 411")]then
set BS[klw]=BS[klw]-aS[mbw(eS,jlw,"when calling get in City, line 412")]
endif
set NS[klw]=NS[klw]-TS[mbw(eS,jlw,"when calling get in City, line 413")]
set hb=hb-1-1
endfunction
function dB takes integer yB,integer pB,string eB returns boolean
local integer qB
local boolean aB
local integer nB
set Fb[hb]=eB
set hb=hb+1
set qB=uc[yB]
set Fb[hb]="when calling has in City, line 365"
set hb=hb+1
if eb[qB]==0 then
if qB==0 then
call e6("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call e6("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set aB=d8(qB,pB)
set hb=hb-1
if not aB then
set hb=hb-1
return false
endif
set nB=uc[yB]
set Fb[hb]="when calling remove in City, line 367"
set hb=hb+1
if eb[nB]==0 then
if nB==0 then
call e6("Nullpointer exception when calling LinkedList.remove","when calling error in LinkedList, line 122")
else
call e6("Called LinkedList.remove on invalid object.","when calling error in LinkedList, line 122")
endif
endif
call G8(nB,pB,"when calling remove in LinkedList, line 122")
set hb=hb-1
call vlw(yB,pB,"when calling getCityModifierOnRemove in City, line 369")
set hb=hb-1
return true
endfunction
function a5 takes integer i5,unit S5,string c5 returns nothing
local integer o5
local boolean O5
local player l5
local player b5
local boolean y5
local boolean p5
local integer e5
local integer q5
set Fb[hb]=c5
set hb=hb+1
set i5=Ol
set o5=GetUnitTypeId(S5)
set Fb[hb]="when calling has in Economy, line 39"
set hb=hb+1
if eb[i5]==0 then
if i5==0 then
call e6("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call e6("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set O5=d8(i5,o5)
set hb=hb-1
if O5 then
set l5=nO[GetPlayerId(GetOwningPlayer(S5))]
if GetPlayerSlotState(l5)==PLAYER_SLOT_STATE_PLAYING then
set y5=GetPlayerController(l5)==MAP_CONTROL_USER
else
set y5=false
endif
set p5=y5
else
set p5=false
endif
if p5 then
set b5=GetOwningPlayer(S5)
set q5=Pc[GetPlayerId(GetOwningPlayer(S5))]
set e5=ll
set Pc[GetPlayerId(b5)]=q5+mbw(e5,GetUnitTypeId(S5),"when calling get in Economy, line 40")
endif
set hb=hb-1
set l5=null
set b5=null
endfunction
function b0w takes integer t0w,unit i0w,string S0w returns nothing
local integer c0w
local integer o0w
local boolean O0w
local boolean l0w
set Fb[hb]=S0w
set hb=hb+1
if GetOwningPlayer(i0w)==Do[t0w]then
set c0w=yl
set o0w=GetUnitTypeId(i0w)
set Fb[hb]="when calling has in MassControl, line 28"
set hb=hb+1
if eb[c0w]==0 then
if c0w==0 then
call e6("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call e6("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set O0w=d8(c0w,o0w)
set hb=hb-1
set l0w=not O0w
else
set l0w=false
endif
if l0w and i0w!=Ho[t0w] and(not IsUnitType(i0w,UNIT_TYPE_STRUCTURE)) then
call ayw(Jo[t0w],GetHandleId(i0w),"when calling add in MassControl, line 29")
endif
set hb=hb-1
endfunction
function fiw takes integer diw returns real
if diw==1747988785 then
return 10.0
elseif diw==1747989075 then
return 10.0
elseif diw==1747990102 then
return 10.0
elseif diw==1747989839 then
return 10.0
elseif diw==1747988568 then
return 5.0
elseif diw==1747990341 then
return 5.0
elseif diw==1747988789 then
return 15.0
elseif diw==1747990103 then
return 15.0
elseif diw==1747990064 then
return 15.0
elseif diw==1747989846 then
return 15.0
else
return 0.0
endif
endfunction
function bB takes integer oB,unit OB returns nothing
local boolean lB
if IsUnitType(OB,UNIT_TYPE_STRUCTURE) then
set lB=GetOwningPlayer(OB)==nO[HS[ES[oB]]]
else
set lB=false
endif
if lB then
set VS[ES[oB]]=VS[ES[oB]]+fiw(GetUnitTypeId(OB))
endif
endfunction
function cB takes integer wB,unit uB,string rB returns nothing
local integer sB
local integer tB
local boolean iB
local boolean SB
set Fb[hb]=rB
set hb=hb+1
set sB=yl
set tB=GetUnitTypeId(uB)
set Fb[hb]="when calling has in City, line 300"
set hb=hb+1
if eb[sB]==0 then
if sB==0 then
call e6("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call e6("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set iB=d8(sB,tB)
set hb=hb-1
if not iB then
set SB=GetOwningPlayer(uB)==nO[HS[WS[wB]]]
else
set SB=false
endif
if SB then
set VS[WS[wB]]=VS[WS[wB]]+0.5
endif
set hb=hb-1
endfunction
function Vlw takes integer Llw,unit Xlw,string Clw returns nothing
set Fb[hb]=Clw
set hb=hb+1
if Ql[Llw]==0 then
if Llw==0 then
call e6("Nullpointer exception when calling ForGroupCallback.callback","when calling error in ClosureForGroups, line 4")
else
call e6("Called ForGroupCallback.callback on invalid object.","when calling error in ClosureForGroups, line 4")
endif
endif
if Ql[Llw]<=684 then
if Ql[Llw]<=682 then
if Ql[Llw]<=681 then
call cB(Llw,Xlw,"when calling City_closure_impl in ClosureForGroups, line 4")
else
call bB(Llw,Xlw)
endif
elseif Ql[Llw]<=683 then
call a5(Llw,Xlw,"when calling Economy_closure_impl in ClosureForGroups, line 4")
else
set Fb[hb]="when calling LinkedList_closure_impl in ClosureForGroups, line 4"
set hb=hb+1
call ayw(po[Llw],GetHandleId(Xlw),"when calling add in LinkedList, line 515")
set hb=hb-1
endif
elseif Ql[Llw]<=686 then
if Ql[Llw]<=685 then
call b0w(Llw,Xlw,"when calling MassControl_closure_impl in ClosureForGroups, line 4")
else
call SetUnitOwner(Xlw,nO[PLAYER_NEUTRAL_AGGRESSIVE],true)
endif
else
call RemoveUnit(Xlw)
endif
set hb=hb-1
endfunction
function HM takes group UM,integer IM,string PM returns nothing
local group AM
local unit DM
set Fb[hb]=PM
set hb=hb+1
set AM=UM
loop
exitwhen FirstOfGroup(AM)==null
set DM=FirstOfGroup(AM)
call GroupRemoveUnit(AM,DM)
call Vlw(IM,DM,"when calling callback in ClosureForGroups, line 31")
endloop
set hb=hb-1
set AM=null
set DM=null
endfunction
function eiw takes string biw returns nothing
local group yiw
local integer piw
set Fb[hb]=biw
set hb=hb+1
call RemoveUnit(hO)
set yiw=gO
set Fb[hb]="when calling alloc_Closure in Preloader, line 45"
set hb=hb+1
if vl==0 then
if ml<32768 then
set ml=ml+1
set piw=ml
set Ql[piw]=687
else
call e6("Out of memory: Could not create Closure.","when calling error in Preloader, line 45")
set piw=0
endif
else
set vl=vl-1
set piw=xl[vl]
set Ql[piw]=687
endif
set hb=hb-1
call HM(yiw,piw,"when calling forEachFrom in Preloader, line 45")
call DestroyGroup(gO)
set gO=null
set hb=hb-1
set yiw=null
endfunction
function t5 takes integer P2,string A2 returns nothing
local integer D2
local integer H2
local integer J2
local integer K2
local integer L2
local integer X2
local integer C2
local unit V2
local player B2
local integer N2
local unit M2
local integer w5
local integer u5
local boolean r5
local integer s5
set Fb[hb]=A2
set hb=hb+1
set D2=Hc[P2]*Jc[P2]
set K2=gS-1
set L2=(Hc[P2]+1)*Jc[P2]-1
if K2<2147483647 then
set X2=K2
else
set X2=2147483647
endif
if L2<X2 then
set X2=L2
endif
set H2=X2
loop
exitwhen D2>H2
set C2=QS[D2]
set Fb[hb]="when calling getCityUnit in Economy, line 31"
set hb=hb+1
if jl[C2]==0 then
if C2==0 then
call e6("Nullpointer exception when calling City.getCityUnit","when calling error in City, line 176")
else
call e6("Called City.getCityUnit on invalid object.","when calling error in City, line 176")
endif
endif
set V2=IS[C2]
set hb=hb-1
set J2=GetPlayerId(GetOwningPlayer(V2))
set N2=QS[D2]
set Fb[hb]="when calling getCityUnit in Economy, line 32"
set hb=hb+1
if jl[N2]==0 then
if N2==0 then
call e6("Nullpointer exception when calling City.getCityUnit","when calling error in City, line 176")
else
call e6("Called City.getCityUnit on invalid object.","when calling error in City, line 176")
endif
endif
set M2=IS[N2]
set hb=hb-1
set B2=GetOwningPlayer(M2)
if GetPlayerSlotState(B2)==PLAYER_SLOT_STATE_PLAYING then
set r5=GetPlayerController(B2)==MAP_CONTROL_USER
else
set r5=false
endif
if r5 then
set s5=Pc[J2]
set w5=QS[D2]
set A2="when calling countTax in Economy, line 33"
set Fb[hb]="when calling countTax in Economy, line 33"
set hb=hb+1
if jl[w5]==0 then
if w5==0 then
call e6("Nullpointer exception when calling City.countTax","when calling error in City, line 265")
else
call e6("Called City.countTax on invalid object.","when calling error in City, line 265")
endif
endif
set u5=kC(w5,"when calling countTax in City, line 265")
set hb=hb-1
set Pc[J2]=s5+u5
endif
set D2=D2+1
endloop
set hb=hb-1
set V2=null
set B2=null
set M2=null
endfunction
function cbw takes integer rbw,string sbw returns nothing
local integer tbw
local integer ibw
local integer Sbw
set Fb[hb]=sbw
set hb=hb+1
if Ul[rbw]==0 then
if rbw==0 then
call e6("Nullpointer exception when calling CallbackSingle.call","when calling error in ClosureTimers, line 65")
else
call e6("Called CallbackSingle.call on invalid object.","when calling error in ClosureTimers, line 65")
endif
endif
if Ul[rbw]<=645 then
if Ul[rbw]<=642 then
if Ul[rbw]<=640 then
if Ul[rbw]<=639 then
set Fb[hb]="when calling City_closure_impl in ClosureTimers, line 65"
set hb=hb+1
set tbw=ZS[rbw]
set ibw=US[rbw]
set Fb[hb]="when calling removeModifier in City, line 361"
set hb=hb+1
if jl[tbw]==0 then
if tbw==0 then
call e6("Nullpointer exception when calling City.removeModifier","when calling error in City, line 364")
else
call e6("Called City.removeModifier on invalid object.","when calling error in City, line 364")
endif
endif
call dB(tbw,ibw,"when calling removeModifier in City, line 364")
set hb=hb-1-1
else
call bM(rbw)
endif
elseif Ul[rbw]<=641 then
set hc=hc+50
else
set hc=hc*2
endif
elseif Ul[rbw]<=644 then
if Ul[rbw]<=643 then
set hc=hc/2
set Sbw=hc
if Sbw!=250 then
call Olw("Expected <"+I2S(250)+">, Actual <"+I2S(Sbw)+">")
endif
else
call t5(rbw,"when calling Economy_closure_impl in ClosureTimers, line 65")
endif
else
call IssueImmediateOrderById(lo[rbw],851976)
endif
elseif Ul[rbw]<=649 then
if Ul[rbw]<=647 then
if Ul[rbw]<=646 then
call IssueImmediateOrderById(yo[rbw],851976)
else
call IssuePointOrderById(Ko[rbw],Lo[rbw],Xo[rbw],Co[rbw])
endif
elseif Ul[rbw]<=648 then
call Vww(rbw,"when calling MultiboardCityUpdate_closure_impl in ClosureTimers, line 65")
else
call IssueImmediateOrderById(SO[rbw],851976)
endif
elseif Ul[rbw]<=651 then
if Ul[rbw]<=650 then
call Bsw(rbw)
else
set Fb[hb]="when calling Preloader_closure_impl in ClosureTimers, line 65"
set hb=hb+1
call eiw("when calling finishPreload in Preloader, line 54")
set hb=hb-1
endif
else
call IssueImmediateOrderById(kO[rbw],851976)
endif
set hb=hb-1
endfunction
function d3 takes string a3 returns nothing
local integer n3
set Fb[hb]=a3
set hb=hb+1
set n3=Dcw(GetExpiredTimer(),"when calling getData in ClosureTimers, line 75")
call cbw(n3,"when calling call in ClosureTimers, line 76")
set Fb[hb]="when calling CallbackSingle in ClosureTimers, line 77"
set hb=hb+1
if Ul[n3]==0 then
if n3==0 then
call e6("Nullpointer exception when calling CallbackSingle.CallbackSingle","when calling error in ClosureTimers, line 63")
else
call e6("Called CallbackSingle.CallbackSingle on invalid object.","when calling error in ClosureTimers, line 63")
endif
endif
call T3(n3,"when calling destroyCallbackSingle in ClosureTimers, line 63")
set hb=hb-1-1
endfunction
function Hew takes nothing returns nothing
set hb=0
set Fb[hb]="ClosureTimers, line 68"
set hb=hb+1
call d3("when calling staticCallback in ClosureTimers, line 70")
set hb=hb-1
endfunction
function Dm takes nothing returns boolean
if GetResearched()!=1378889800 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889800,true)!=2 then
return false
endif
return true
endfunction
function Hm takes nothing returns boolean
if not Dm() then
return false
endif
return true
endfunction
function initializeTable takes string stackPos returns nothing
local integer i_2
local integer this
local integer parentKey
set Fb[hb]=stackPos
set hb=hb+1
set i_2=0
loop
exitwhen i_2>15
set this=Qc
set parentKey=StringHash(mc[i_2])
set stackPos="when calling saveInt in Colors, line 206"
set Fb[hb]="when calling saveInt in Colors, line 206"
set hb=hb+1
if wb[this]==0 then
if this==0 then
call e6("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call e6("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(MO,this,parentKey,i_2)
set hb=hb-1
set i_2=i_2+1
endloop
set hb=hb-1
endfunction
function G3 takes string Y3 returns boolean
set Fb[hb]=Y3
set hb=hb+1
set jc[0]=255
set xc[0]=2
set vc[0]=2
set jc[1]=0
set xc[1]=65
set vc[1]=255
set jc[2]=27
set xc[2]=229
set vc[2]=184
set jc[3]=83
set xc[3]=0
set vc[3]=128
set jc[4]=255
set xc[4]=252
set vc[4]=0
set jc[5]=254
set xc[5]=137
set vc[5]=13
set jc[6]=31
set xc[6]=191
set vc[6]=0
set jc[7]=228
set xc[7]=90
set vc[7]=175
set jc[8]=148
set xc[8]=149
set vc[8]=150
set jc[9]=125
set xc[9]=190
set vc[9]=241
set jc[10]=15
set xc[10]=97
set vc[10]=69
set jc[11]=77
set xc[11]=41
set vc[11]=3
set jc[12]=155
set xc[12]=0
set vc[12]=0
set jc[13]=0
set xc[13]=0
set vc[13]=195
set jc[14]=0
set xc[14]=234
set vc[14]=255
set jc[15]=190
set xc[15]=0
set vc[15]=254
set jc[16]=235
set xc[16]=205
set vc[16]=135
set jc[17]=248
set xc[17]=164
set vc[17]=139
set jc[18]=191
set xc[18]=255
set vc[18]=128
set jc[19]=220
set xc[19]=185
set vc[19]=235
set jc[20]=40
set xc[20]=40
set vc[20]=40
set jc[21]=235
set xc[21]=240
set vc[21]=255
set jc[22]=0
set xc[22]=120
set vc[22]=30
set jc[23]=164
set xc[23]=11
set vc[23]=51
set mc[0]="0"
set mc[1]="1"
set mc[2]="2"
set mc[3]="3"
set mc[4]="4"
set mc[5]="5"
set mc[6]="6"
set mc[7]="7"
set mc[8]="8"
set mc[9]="9"
set mc[10]="A"
set mc[11]="B"
set mc[12]="C"
set mc[13]="D"
set mc[14]="E"
set mc[15]="F"
set Qc=Ocw("when calling new_Table in Colors, line 154")
call initializeTable("when calling initializeTable in Colors, line 209")
set hb=hb-1
return true
endfunction
function Hpw takes nothing returns boolean
set hb=0
return G3("Colors, line 1")
endfunction
function I0w takes nothing returns boolean
return true
endfunction
function UH takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989809 then
return false
endif
return true
endfunction
function IH takes nothing returns boolean
if not UH() then
return false
endif
return true
endfunction
function IP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990598,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990597,0)
endfunction
function Dlw takes integer Ilw,unit Plw,string Alw returns nothing
set Fb[hb]=Alw
set hb=hb+1
if Jl[Ilw]==0 then
if Ilw==0 then
call e6("Nullpointer exception when calling OnCastListener.fire","when calling error in ClosureEvents, line 56")
else
call e6("Called OnCastListener.fire on invalid object.","when calling error in ClosureEvents, line 56")
endif
endif
set hb=hb-1
endfunction
function kM takes string YM returns nothing
local unit GM
local integer gM
local integer hM
local integer FM
set Fb[hb]=YM
set hb=hb+1
set GM=GetTriggerUnit()
set gM=GetSpellAbilityId()
if Tbw(bc,GetHandleId(GM),"when calling has in ClosureEvents, line 188") then
set hM=mbw(bc,GetHandleId(GM),"when calling get in ClosureEvents, line 189")
loop
exitwhen hM==0
if fc[hM]==-1 or fc[hM]==gM then
call Dlw(hM,GetSpellAbilityUnit(),"when calling fire in ClosureEvents, line 192")
endif
set hM=nc[hM]
endloop
endif
if Tbw(lc,gM,"when calling has in ClosureEvents, line 194") then
set FM=mbw(lc,gM,"when calling get in ClosureEvents, line 195")
loop
exitwhen FM==0
if Rc[FM]==null or Rc[FM]==GM then
call Dlw(FM,GetSpellAbilityUnit(),"when calling fire in ClosureEvents, line 198")
endif
set FM=nc[FM]
endloop
endif
set hb=hb-1
set GM=null
endfunction
function Iew takes nothing returns nothing
set hb=0
set Fb[hb]="ClosureEvents, line 306"
set hb=hb+1
call kM("when calling onSpellEffect in ClosureEvents, line 306")
set hb=hb-1
endfunction
function Iv takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651826,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651824,0)
endfunction
function JA takes nothing returns nothing
local integer ZA=1
local integer UA=1752461175
local player IA=GetOwningPlayer(GetTriggerUnit())
local rect HA=bj_mapInitialPlayableArea
local location DA=Location(GetRectCenterX(HA),GetRectCenterY(HA))
local location PA=Location(GetLocationX(DA)+100000000.00,GetLocationY(DA)+100000000.00)
local real AA=bj_UNIT_FACING
call GroupClear(bj_lastCreatedGroup)
loop
set ZA=ZA-1
exitwhen ZA<0
call CreateUnitAtLocSaveLast(IA,UA,PA,AA)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
call ShowUnit(bj_lastCreatedUnit,false)
set IA=null
set PA=null
set DA=null
set HA=null
endfunction
function JE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651846,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651847,0)
endfunction
function JF takes nothing returns nothing
local player mF=GetOwningPlayer(GetKillingUnit())
local playerstate QF=PLAYER_STATE_RESOURCE_LUMBER
local playerstate WF
local playerstate EF
local player ZF
local force UF
local location IF
local real PF
local real AF
local player DF
local force HF
if QF==PLAYER_STATE_RESOURCE_GOLD then
set WF=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(mF,WF,GetPlayerState(mF,WF)+125)
elseif QF==PLAYER_STATE_RESOURCE_LUMBER then
set EF=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(mF,EF,GetPlayerState(mF,EF)+125)
endif
call SetPlayerState(mF,QF,GetPlayerState(mF,QF)+125)
set ZF=GetOwningPlayer(GetKillingUnit())
set UF=CreateForce()
call ForceAddPlayer(UF,ZF)
if IsPlayerInForce(GetLocalPlayer(),UF) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_089")
endif
set y=GetUnitLoc(GetDyingUnit())
set DF=GetOwningPlayer(GetDyingUnit())
set HF=CreateForce()
call ForceAddPlayer(HF,DF)
set IF=y
set PF=GetLocationX(IF)
set AF=GetLocationY(IF)
if IsPlayerInForce(GetLocalPlayer(),HF) then
call PingMinimap(PF,AF,2.00)
endif
call RemoveLocation(y)
set mF=null
set QF=null
set WF=null
set EF=null
set ZF=null
set UF=null
set IF=null
set DF=null
set HF=null
endfunction
function HJ takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989592 then
return false
endif
return true
endfunction
function JJ takes nothing returns boolean
if not HJ() then
return false
endif
return true
endfunction
function JL takes nothing returns boolean
local boolean DL
local boolean HL
if GetUnitTypeId(GetSpellAbilityUnit())==1747988553 then
set DL=GetUnitTypeId(GetSpellTargetUnit())==1747989297
else
set DL=false
endif
if DL then
set HL=GetPlayerId(GetOwningPlayer(GetSpellTargetUnit()))==PLAYER_NEUTRAL_AGGRESSIVE
else
set HL=false
endif
return HL
endfunction
function HQ takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function JQ takes nothing returns boolean
if not HQ() then
return false
endif
return true
endfunction
function HT takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989316 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function JT takes nothing returns boolean
if not HT() then
return false
endif
return true
endfunction
function plw takes integer llw,string blw,string ylw returns nothing
set Fb[hb]=ylw
set hb=hb+1
if jl[llw]==0 then
if llw==0 then
call e6("Nullpointer exception when calling City.changeCityName","when calling error in City, line 159")
else
call e6("Called City.changeCityName on invalid object.","when calling error in City, line 159")
endif
endif
set Fb[hb]="when calling changeCityName in City, line 159"
set hb=hb+1
set PS[llw]=SubString(blw,0,24)
set Fb[hb]="when calling refreshMultiboardIfPossible in City, line 162"
set hb=hb+1
if jl[llw]==0 then
if llw==0 then
call e6("Nullpointer exception when calling City.refreshMultiboardIfPossible","when calling error in City, line 237")
else
call e6("Called City.refreshMultiboardIfPossible on invalid object.","when calling error in City, line 237")
endif
endif
call sV(llw,"when calling refreshMultiboardIfPossible in City, line 237")
set hb=hb-1-1-1
endfunction
function v9 takes player F9 returns nothing
local fogstate k9
local location j9
local rect x9
call SetPlayerState(F9,PLAYER_STATE_RESOURCE_GOLD,99999999)
call SetPlayerState(F9,PLAYER_STATE_RESOURCE_LUMBER,99999999)
set k9=FOG_OF_WAR_VISIBLE
set x9=bj_mapInitialPlayableArea
set j9=Location(GetRectCenterX(x9),GetRectCenterY(x9))
set bj_lastCreatedFogModifier=CreateFogModifierRadiusLoc(F9,k9,j9,999999.00,true,false)
call FogModifierStart(bj_lastCreatedFogModifier)
set k9=null
set j9=null
set x9=null
endfunction
function j1 takes string M3 returns nothing
local string w1
local string array u1
local string r1
local player s1
local integer t1
local integer i1
local integer S1
local string c1
local player o1
local camerafield O1
local player l1
local camerafield b1
local integer y1
local integer p1
local integer e1
local unit q1
local integer a1
local integer n1
local integer d1
local integer f1
local integer R1
local integer T1
local integer Y1
local integer G1
local integer g1
local integer h1
local integer F1
local boolean k1
set Fb[hb]=M3
set hb=hb+1
set w1=GetEventPlayerChatString()
set r1=""
set s1=GetTriggerPlayer()
set t1=0
set i1=1
set S1=StringLength(w1)
loop
exitwhen i1>S1
set c1=SubString(w1,i1,i1+1)
if t1>0 then
set k1=i1>StringLength(u1[0])+1
else
set k1=false
endif
if k1 then
set r1=r1+c1
endif
if c1!=" " then
set u1[t1]=u1[t1]+c1
else
set t1=t1+1
endif
set i1=i1+1
endloop
if u1[0]=="far" then
set o1=GetTriggerPlayer()
set O1=CAMERA_FIELD_TARGET_DISTANCE
if GetLocalPlayer()==o1 then
call SetCameraField(O1,3000.0,0.)
endif
elseif u1[0]=="med" then
set l1=GetTriggerPlayer()
set b1=CAMERA_FIELD_TARGET_DISTANCE
if GetLocalPlayer()==l1 then
call SetCameraField(b1,2300.0,0.)
endif
elseif u1[0]=="name" then
call SetPlayerName(GetTriggerPlayer(),r1)
elseif u1[0]=="rename" then
set y1=bO[GetPlayerId(s1)]
set Fb[hb]="when calling getSelectedCityId in Commands, line 45"
set hb=hb+1
if Rb[y1]==0 then
if y1==0 then
call e6("Nullpointer exception when calling PlayerStats.getSelectedCityId","when calling error in PlayerStats, line 84")
else
call e6("Called PlayerStats.getSelectedCityId on invalid object.","when calling error in PlayerStats, line 84")
endif
endif
set p1=qO[y1]
set hb=hb-1
if p1>=0 and p1<gS then
set e1=QS[p1]
set Fb[hb]="when calling getCityUnit in Commands, line 47"
set hb=hb+1
if jl[e1]==0 then
if e1==0 then
call e6("Nullpointer exception when calling City.getCityUnit","when calling error in City, line 176")
else
call e6("Called City.getCityUnit on invalid object.","when calling error in City, line 176")
endif
endif
set q1=IS[e1]
set hb=hb-1
if GetOwningPlayer(q1)!=s1 then
set Fb[hb]="when calling noteToPlayer in Commands, line 48"
set hb=hb+1
call DisplayTimedTextToPlayer(s1,0.,0.,10.0,N0w(s1,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(s1,0.,0.,10.0,"The city you wanted to rename so eagerly doesn't belong to you!")
set hb=hb-1
else
call plw(QS[p1],r1,"when calling changeCityName in Commands, line 50")
endif
endif
elseif u1[0]=="add_mod" then
set a1=bO[GetPlayerId(s1)]
set Fb[hb]="when calling getSelectedCityId in Commands, line 52"
set hb=hb+1
if Rb[a1]==0 then
if a1==0 then
call e6("Nullpointer exception when calling PlayerStats.getSelectedCityId","when calling error in PlayerStats, line 84")
else
call e6("Called PlayerStats.getSelectedCityId on invalid object.","when calling error in PlayerStats, line 84")
endif
endif
set n1=qO[a1]
set hb=hb-1
if not xo then
set hb=hb-1
set s1=null
set o1=null
set O1=null
set l1=null
set b1=null
set q1=null
return
endif
if n1>=0 and n1<gS then
set M3=u1[1]
if M3=="massacred_pop" then
set d1=QS[n1]
set Fb[hb]="when calling addModifier in Commands, line 58"
set hb=hb+1
if jl[d1]==0 then
if d1==0 then
call e6("Nullpointer exception when calling City.addModifier","when calling error in City, line 354")
else
call e6("Called City.addModifier on invalid object.","when calling error in City, line 354")
endif
endif
call CC(d1,6,"when calling addModifier in City, line 354")
set hb=hb-1
elseif M3=="recently_conquered" then
set f1=QS[n1]
set Fb[hb]="when calling addModifier in Commands, line 60"
set hb=hb+1
if jl[f1]==0 then
if f1==0 then
call e6("Nullpointer exception when calling City.addModifier","when calling error in City, line 354")
else
call e6("Called City.addModifier on invalid object.","when calling error in City, line 354")
endif
endif
call CC(f1,0,"when calling addModifier in City, line 354")
set hb=hb-1
elseif M3=="recently_revolted" then
set R1=QS[n1]
set Fb[hb]="when calling addModifier in Commands, line 62"
set hb=hb+1
if jl[R1]==0 then
if R1==0 then
call e6("Nullpointer exception when calling City.addModifier","when calling error in City, line 354")
else
call e6("Called City.addModifier on invalid object.","when calling error in City, line 354")
endif
endif
call CC(R1,1,"when calling addModifier in City, line 354")
set hb=hb-1
elseif M3=="more_trade_estabilished" then
set T1=QS[n1]
set Fb[hb]="when calling addModifier in Commands, line 64"
set hb=hb+1
if jl[T1]==0 then
if T1==0 then
call e6("Nullpointer exception when calling City.addModifier","when calling error in City, line 354")
else
call e6("Called City.addModifier on invalid object.","when calling error in City, line 354")
endif
endif
call CC(T1,5,"when calling addModifier in City, line 354")
set hb=hb-1
elseif M3=="on_fire" then
set Y1=QS[n1]
set Fb[hb]="when calling addModifier in Commands, line 66"
set hb=hb+1
if jl[Y1]==0 then
if Y1==0 then
call e6("Nullpointer exception when calling City.addModifier","when calling error in City, line 354")
else
call e6("Called City.addModifier on invalid object.","when calling error in City, line 354")
endif
endif
call CC(Y1,4,"when calling addModifier in City, line 354")
set hb=hb-1
elseif M3=="plague_outburst" then
set G1=QS[n1]
set Fb[hb]="when calling addModifier in Commands, line 68"
set hb=hb+1
if jl[G1]==0 then
if G1==0 then
call e6("Nullpointer exception when calling City.addModifier","when calling error in City, line 354")
else
call e6("Called City.addModifier on invalid object.","when calling error in City, line 354")
endif
endif
call CC(G1,3,"when calling addModifier in City, line 354")
set hb=hb-1
elseif M3=="population_boom" then
set g1=QS[n1]
set Fb[hb]="when calling addModifier in Commands, line 70"
set hb=hb+1
if jl[g1]==0 then
if g1==0 then
call e6("Nullpointer exception when calling City.addModifier","when calling error in City, line 354")
else
call e6("Called City.addModifier on invalid object.","when calling error in City, line 354")
endif
endif
call CC(g1,2,"when calling addModifier in City, line 354")
set hb=hb-1
elseif M3=="prospering" then
set h1=QS[n1]
set Fb[hb]="when calling addModifier in Commands, line 72"
set hb=hb+1
if jl[h1]==0 then
if h1==0 then
call e6("Nullpointer exception when calling City.addModifier","when calling error in City, line 354")
else
call e6("Called City.addModifier on invalid object.","when calling error in City, line 354")
endif
endif
call CC(h1,7,"when calling addModifier in City, line 354")
set hb=hb-1
elseif M3=="sieged" then
set F1=QS[n1]
set Fb[hb]="when calling addModifier in Commands, line 74"
set hb=hb+1
if jl[F1]==0 then
if F1==0 then
call e6("Nullpointer exception when calling City.addModifier","when calling error in City, line 354")
else
call e6("Called City.addModifier on invalid object.","when calling error in City, line 354")
endif
endif
call CC(F1,8,"when calling addModifier in City, line 354")
set hb=hb-1
endif
endif
elseif u1[0]=="непереводимоесочетаниебукв" then
set xo=not xo
set jo=not jo
call v9(s1)
endif
set hb=hb-1
set s1=null
set o1=null
set O1=null
set l1=null
set b1=null
set q1=null
endfunction
function Jew takes nothing returns nothing
set hb=0
call j1("Commands, line 85")
endfunction
function Jk takes nothing returns nothing
local player mk=GetOwningPlayer(GetKillingUnit())
local playerstate Qk=PLAYER_STATE_RESOURCE_GOLD
local playerstate Wk
local playerstate Ek
local player Zk
local force Uk
local location Ik
local real Pk
local real Ak
local player Dk
local force Hk
if Qk==PLAYER_STATE_RESOURCE_GOLD then
set Wk=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(mk,Wk,GetPlayerState(mk,Wk)+250)
elseif Qk==PLAYER_STATE_RESOURCE_LUMBER then
set Ek=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(mk,Ek,GetPlayerState(mk,Ek)+250)
endif
call SetPlayerState(mk,Qk,GetPlayerState(mk,Qk)+250)
set Zk=GetOwningPlayer(GetKillingUnit())
set Uk=CreateForce()
call ForceAddPlayer(Uk,Zk)
if IsPlayerInForce(GetLocalPlayer(),Uk) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_092")
endif
set y=GetUnitLoc(GetDyingUnit())
set Dk=GetOwningPlayer(GetDyingUnit())
set Hk=CreateForce()
call ForceAddPlayer(Hk,Dk)
set Ik=y
set Pk=GetLocationX(Ik)
set Ak=GetLocationY(Ik)
if IsPlayerInForce(GetLocalPlayer(),Hk) then
call PingMinimap(Pk,Ak,2.00)
endif
call RemoveLocation(y)
set mk=null
set Qk=null
set Wk=null
set Ek=null
set Zk=null
set Uk=null
set Ik=null
set Dk=null
set Hk=null
endfunction
function Jm takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989080,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988818,0)
endfunction
function Ncw takes string Vcw returns boolean
local integer Bcw
set Fb[hb]=Vcw
set hb=hb+1
set sl=Ocw("when calling new_Table in TypeCasting, line 6")
set Fb[hb]="when calling initTypecastData in TypeCasting, line 14"
set hb=hb+1
set Bcw=sl
set Fb[hb]="when calling saveString in TypeCasting, line 11"
set hb=hb+1
if wb[Bcw]==0 then
if Bcw==0 then
call e6("Nullpointer exception when calling Table.saveString","when calling error in Table, line 60")
else
call e6("Called Table.saveString on invalid object.","when calling error in Table, line 60")
endif
endif
call SaveStr(MO,Bcw,0,"")
set hb=hb-1-1-1
return true
endfunction
function Jpw takes nothing returns boolean
set hb=0
return Ncw("TypeCasting, line 1")
endfunction
function KJ takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function JP takes nothing returns boolean
if GetResearched()!=1378890041 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890041,true)!=1 then
return false
endif
return true
endfunction
function KP takes nothing returns boolean
if not JP() then
return false
endif
return true
endfunction
function KQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990099,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990096,0)
endfunction
function K0w takes player P0w,string A0w returns string
local integer D0w
local integer H0w
local integer J0w
set Fb[hb]=A0w
set hb=hb+1
set H0w=bO[GetPlayerId(P0w)]
set Fb[hb]="when calling getForceId in Messages, line 5"
set hb=hb+1
if Rb[H0w]==0 then
if H0w==0 then
call e6("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 94")
else
call e6("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 94")
endif
endif
set J0w=yO[H0w]
set hb=hb-1
set D0w=GetRandomInt(0,2)
if J0w==0 then
set A0w=WO[D0w]
elseif J0w==1 then
set A0w=EO[D0w]
elseif J0w==2 then
set A0w=ZO[D0w]
elseif J0w==3 then
set A0w=UO[D0w]
else
set A0w="Warning!"
endif
set hb=hb-1
return "|cffff0000"+A0w+"|r"
endfunction
function cqw takes integer sqw,integer tqw,string iqw returns integer
local integer Sqw
if tqw<0 or tqw>=24 then
call e6("Index out of Bounds",iqw)
elseif tqw<=11 then
if tqw<=5 then
if tqw<=2 then
if tqw<=1 then
if tqw<=0 then
set Sqw=vb[sqw]
else
set Sqw=mb[sqw]
endif
else
set Sqw=Qb[sqw]
endif
elseif tqw<=4 then
if tqw<=3 then
set Sqw=Wb[sqw]
else
set Sqw=Eb[sqw]
endif
else
set Sqw=Zb[sqw]
endif
elseif tqw<=8 then
if tqw<=7 then
if tqw<=6 then
set Sqw=Ub[sqw]
else
set Sqw=Ib[sqw]
endif
else
set Sqw=Pb[sqw]
endif
elseif tqw<=10 then
if tqw<=9 then
set Sqw=Ab[sqw]
else
set Sqw=Db[sqw]
endif
else
set Sqw=Hb[sqw]
endif
elseif tqw<=17 then
if tqw<=14 then
if tqw<=13 then
if tqw<=12 then
set Sqw=Jb[sqw]
else
set Sqw=Kb[sqw]
endif
else
set Sqw=Lb[sqw]
endif
elseif tqw<=16 then
if tqw<=15 then
set Sqw=Xb[sqw]
else
set Sqw=Cb[sqw]
endif
else
set Sqw=Vb[sqw]
endif
elseif tqw<=20 then
if tqw<=19 then
if tqw<=18 then
set Sqw=Bb[sqw]
else
set Sqw=Nb[sqw]
endif
else
set Sqw=Mb[sqw]
endif
elseif tqw<=22 then
if tqw<=21 then
set Sqw=wy[sqw]
else
set Sqw=uy[sqw]
endif
else
set Sqw=ry[sqw]
endif
return Sqw
endfunction
function rqw takes integer New,integer Mew,integer wqw,string uqw returns nothing
if Mew<0 or Mew>=24 then
call e6("Index out of Bounds",uqw)
elseif Mew<=11 then
if Mew<=5 then
if Mew<=2 then
if Mew<=1 then
if Mew<=0 then
set vb[New]=wqw
else
set mb[New]=wqw
endif
else
set Qb[New]=wqw
endif
elseif Mew<=4 then
if Mew<=3 then
set Wb[New]=wqw
else
set Eb[New]=wqw
endif
else
set Zb[New]=wqw
endif
elseif Mew<=8 then
if Mew<=7 then
if Mew<=6 then
set Ub[New]=wqw
else
set Ib[New]=wqw
endif
else
set Pb[New]=wqw
endif
elseif Mew<=10 then
if Mew<=9 then
set Ab[New]=wqw
else
set Db[New]=wqw
endif
else
set Hb[New]=wqw
endif
elseif Mew<=17 then
if Mew<=14 then
if Mew<=13 then
if Mew<=12 then
set Jb[New]=wqw
else
set Kb[New]=wqw
endif
else
set Lb[New]=wqw
endif
elseif Mew<=16 then
if Mew<=15 then
set Xb[New]=wqw
else
set Cb[New]=wqw
endif
else
set Vb[New]=wqw
endif
elseif Mew<=20 then
if Mew<=19 then
if Mew<=18 then
set Bb[New]=wqw
else
set Nb[New]=wqw
endif
else
set Mb[New]=wqw
endif
elseif Mew<=22 then
if Mew<=21 then
set wy[New]=wqw
else
set uy[New]=wqw
endif
else
set ry[New]=wqw
endif
endfunction
function btw takes integer Stw,player ctw,integer otw,string Otw returns nothing
local integer ltw
set Fb[hb]=Otw
set hb=hb+1
set ltw=GetPlayerId(ctw)
if not eO[Stw]then
set hb=hb-1
return
endif
if ltw>=24 then
set hb=hb-1
return
endif
if cqw(Stw,ltw,"when reading array PlayerStats_alliance_states in PlayerStats, line 33")==otw or ctw==pO[Stw]then
set hb=hb-1
return
endif
call rqw(Stw,ltw,otw,"when writing array PlayerStats_alliance_states in PlayerStats, line 35")
call SetPlayerAllianceStateBJ(pO[Stw],ctw,otw)
set hb=hb-1
endfunction
function tww takes player M0w,string www returns string
local integer uww
local integer rww
local integer sww_2
set Fb[hb]=www
set hb=hb+1
set rww=bO[GetPlayerId(M0w)]
set Fb[hb]="when calling getForceId in Messages, line 37"
set hb=hb+1
if Rb[rww]==0 then
if rww==0 then
call e6("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 94")
else
call e6("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 94")
endif
endif
set sww_2=yO[rww]
set hb=hb-1
set uww=GetRandomInt(0,2)
if sww_2==0 then
set www=HO[uww]
elseif sww_2==1 then
set www=JO[uww]
elseif sww_2==2 then
set www=KO[uww]
elseif sww_2==3 then
set www=LO[uww]
else
set www="Good news!"
endif
set hb=hb-1
return "|cff00ff00"+www+"|r"
endfunction
function M4 takes string X1 returns nothing
local player C1
local player V1
local string B1
local integer N1
local force M1
local force w4
local integer u4
local integer r4
local integer s4
local integer t4
local integer i4
local integer S4
local integer c4
local integer o4
local integer O4
local force l4
local force b4
local integer y4
local integer p4
local integer e4
local integer q4
local integer a4
local integer n4
local player d4
local force f4
local player R4
local player T4
local player Y4
local integer G4
local integer g4
local integer h4
local integer F4
local player k4
local force j4
local player x4
local player v4
local player m4
local integer Q4
local integer W4
local integer E4
local integer Z4
local player U4
local force I4
local player P4
local player A4
local player D4
local integer H4
local integer J4
local integer K4
local integer L4
local player X4
local force C4
local player V4
local player B4
local player N4
set Fb[hb]=X1
set hb=hb+1
set C1=GetOwningPlayer(GetSpellAbilityUnit())
set V1=GetOwningPlayer(GetSpellTargetUnit())
set B1=m3(C1)
set X1=m3(V1)
set N1=GetPlayerId(C1)
set l4=CreateForce()
call ForceAddPlayer(l4,C1)
set M1=l4
set b4=CreateForce()
call ForceAddPlayer(b4,C1)
set w4=b4
set u4=GetSpellAbilityId()
if u4==1093677396 then
set y4=bO[N1]
set Fb[hb]="when calling getAllianceState in Diplomacy, line 17"
set hb=hb+1
if Rb[y4]==0 then
if y4==0 then
call e6("Nullpointer exception when calling PlayerStats.getAllianceState","when calling error in PlayerStats, line 38")
else
call e6("Called PlayerStats.getAllianceState on invalid object.","when calling error in PlayerStats, line 38")
endif
endif
set Fb[hb]="when calling getAllianceState in PlayerStats, line 38"
set hb=hb+1
set p4=cqw(y4,GetPlayerId(V1),"when reading array PlayerStats_alliance_states in PlayerStats, line 39")
set hb=hb-1-1
if p4==bj_ALLIANCE_UNALLIED then
set hb=hb-1
set C1=null
set V1=null
set M1=null
set w4=null
set l4=null
set b4=null
set d4=null
set f4=null
set R4=null
set T4=null
set Y4=null
set k4=null
set j4=null
set x4=null
set v4=null
set m4=null
set U4=null
set I4=null
set P4=null
set A4=null
set D4=null
set X4=null
set C4=null
set V4=null
set B4=null
set N4=null
return
endif
set e4=bO[N1]
set q4=bj_ALLIANCE_UNALLIED
set Fb[hb]="when calling setAlliance in Diplomacy, line 19"
set hb=hb+1
if Rb[e4]==0 then
if e4==0 then
call e6("Nullpointer exception when calling PlayerStats.setAlliance","when calling error in PlayerStats, line 27")
else
call e6("Called PlayerStats.setAlliance on invalid object.","when calling error in PlayerStats, line 27")
endif
endif
call btw(e4,V1,q4,"when calling setAlliance in PlayerStats, line 27")
set hb=hb-1
set a4=bO[GetPlayerId(V1)]
set n4=bj_ALLIANCE_UNALLIED
set Fb[hb]="when calling setAlliance in Diplomacy, line 20"
set hb=hb+1
if Rb[a4]==0 then
if a4==0 then
call e6("Nullpointer exception when calling PlayerStats.setAlliance","when calling error in PlayerStats, line 27")
else
call e6("Called PlayerStats.setAlliance on invalid object.","when calling error in PlayerStats, line 27")
endif
endif
call btw(a4,C1,n4,"when calling setAlliance in PlayerStats, line 27")
set hb=hb-1
set r4=0
set s4=23
loop
exitwhen r4>s4
set d4=nO[r4]
set f4=CreateForce()
call ForceAddPlayer(f4,d4)
if nO[r4]==V1 then
set R4=nO[r4]
set Fb[hb]="when calling warningToPlayer in Diplomacy, line 25"
set hb=hb+1
call DisplayTimedTextToPlayer(R4,0.,0.,10.0,K0w(R4,"when calling getWarningStringForPlayer in Messages, line 79"))
call DisplayTimedTextToPlayer(R4,0.,0.,10.0,B1+" has declared war on you!")
set hb=hb-1
elseif f4==M1 or f4==w4 then
set T4=nO[r4]
set Fb[hb]="when calling attentionToPlayer in Diplomacy, line 27"
set hb=hb+1
call DisplayTimedTextToPlayer(T4,0.,0.,10.0,lww(T4,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(T4,0.,0.,10.0,B1+" has declared war on your brother-in-arms, "+X1+"!")
set hb=hb-1
else
set Y4=nO[r4]
set Fb[hb]="when calling noteToPlayer in Diplomacy, line 29"
set hb=hb+1
call DisplayTimedTextToPlayer(Y4,0.,0.,10.0,N0w(Y4,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(Y4,0.,0.,10.0,B1+" has declared war on "+X1)
set hb=hb-1
endif
set r4=r4+1
endloop
elseif u4==1093677397 then
set G4=bO[N1]
set Fb[hb]="when calling getAllianceState in Diplomacy, line 32"
set hb=hb+1
if Rb[G4]==0 then
if G4==0 then
call e6("Nullpointer exception when calling PlayerStats.getAllianceState","when calling error in PlayerStats, line 38")
else
call e6("Called PlayerStats.getAllianceState on invalid object.","when calling error in PlayerStats, line 38")
endif
endif
set Fb[hb]="when calling getAllianceState in PlayerStats, line 38"
set hb=hb+1
set g4=cqw(G4,GetPlayerId(V1),"when reading array PlayerStats_alliance_states in PlayerStats, line 39")
set hb=hb-1-1
if g4==bj_ALLIANCE_ALLIED_VISION then
set hb=hb-1
set C1=null
set V1=null
set M1=null
set w4=null
set l4=null
set b4=null
set d4=null
set f4=null
set R4=null
set T4=null
set Y4=null
set k4=null
set j4=null
set x4=null
set v4=null
set m4=null
set U4=null
set I4=null
set P4=null
set A4=null
set D4=null
set X4=null
set C4=null
set V4=null
set B4=null
set N4=null
return
endif
set h4=bO[N1]
set F4=bj_ALLIANCE_ALLIED_VISION
set Fb[hb]="when calling setAlliance in Diplomacy, line 34"
set hb=hb+1
if Rb[h4]==0 then
if h4==0 then
call e6("Nullpointer exception when calling PlayerStats.setAlliance","when calling error in PlayerStats, line 27")
else
call e6("Called PlayerStats.setAlliance on invalid object.","when calling error in PlayerStats, line 27")
endif
endif
call btw(h4,V1,F4,"when calling setAlliance in PlayerStats, line 27")
set hb=hb-1
set t4=0
set i4=23
loop
exitwhen t4>i4
set k4=nO[t4]
set j4=CreateForce()
call ForceAddPlayer(j4,k4)
if nO[t4]==V1 then
set x4=nO[t4]
set Fb[hb]="when calling goodNewsToPlayer in Diplomacy, line 39"
set hb=hb+1
call DisplayTimedTextToPlayer(x4,0.,0.,10.0,tww(x4,"when calling getGoodNewsStringForPlayer in Messages, line 85"))
call DisplayTimedTextToPlayer(x4,0.,0.,10.0,B1+" wants to ally you")
set hb=hb-1
elseif j4==M1 or j4==w4 then
set v4=nO[t4]
set Fb[hb]="when calling noteToPlayer in Diplomacy, line 41"
set hb=hb+1
call DisplayTimedTextToPlayer(v4,0.,0.,10.0,N0w(v4,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(v4,0.,0.,10.0,B1+" allied "+X1)
set hb=hb-1
else
set m4=nO[t4]
set Fb[hb]="when calling noteToPlayer in Diplomacy, line 43"
set hb=hb+1
call DisplayTimedTextToPlayer(m4,0.,0.,10.0,N0w(m4,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(m4,0.,0.,10.0,B1+" allied "+X1)
set hb=hb-1
endif
set t4=t4+1
endloop
elseif u4==1093677398 then
set Q4=bO[N1]
set Fb[hb]="when calling getAllianceState in Diplomacy, line 46"
set hb=hb+1
if Rb[Q4]==0 then
if Q4==0 then
call e6("Nullpointer exception when calling PlayerStats.getAllianceState","when calling error in PlayerStats, line 38")
else
call e6("Called PlayerStats.getAllianceState on invalid object.","when calling error in PlayerStats, line 38")
endif
endif
set Fb[hb]="when calling getAllianceState in PlayerStats, line 38"
set hb=hb+1
set W4=cqw(Q4,GetPlayerId(V1),"when reading array PlayerStats_alliance_states in PlayerStats, line 39")
set hb=hb-1-1
if W4==bj_ALLIANCE_NEUTRAL then
set hb=hb-1
set C1=null
set V1=null
set M1=null
set w4=null
set l4=null
set b4=null
set d4=null
set f4=null
set R4=null
set T4=null
set Y4=null
set k4=null
set j4=null
set x4=null
set v4=null
set m4=null
set U4=null
set I4=null
set P4=null
set A4=null
set D4=null
set X4=null
set C4=null
set V4=null
set B4=null
set N4=null
return
endif
set E4=bO[N1]
set Z4=bj_ALLIANCE_NEUTRAL
set Fb[hb]="when calling setAlliance in Diplomacy, line 48"
set hb=hb+1
if Rb[E4]==0 then
if E4==0 then
call e6("Nullpointer exception when calling PlayerStats.setAlliance","when calling error in PlayerStats, line 27")
else
call e6("Called PlayerStats.setAlliance on invalid object.","when calling error in PlayerStats, line 27")
endif
endif
call btw(E4,V1,Z4,"when calling setAlliance in PlayerStats, line 27")
set hb=hb-1
set S4=0
set c4=23
loop
exitwhen S4>c4
set U4=nO[S4]
set I4=CreateForce()
call ForceAddPlayer(I4,U4)
if nO[S4]==V1 then
set P4=nO[S4]
set Fb[hb]="when calling noteToPlayer in Diplomacy, line 53"
set hb=hb+1
call DisplayTimedTextToPlayer(P4,0.,0.,10.0,N0w(P4,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(P4,0.,0.,10.0,B1+" is now neutral towards you")
set hb=hb-1
elseif I4==M1 or I4==w4 then
set A4=nO[S4]
set Fb[hb]="when calling noteToPlayer in Diplomacy, line 55"
set hb=hb+1
call DisplayTimedTextToPlayer(A4,0.,0.,10.0,N0w(A4,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(A4,0.,0.,10.0,B1+" shows "+X1+" neutrality")
set hb=hb-1
else
set D4=nO[S4]
set Fb[hb]="when calling noteToPlayer in Diplomacy, line 57"
set hb=hb+1
call DisplayTimedTextToPlayer(D4,0.,0.,10.0,N0w(D4,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(D4,0.,0.,10.0,B1+" shows "+X1+" neutrality")
set hb=hb-1
endif
set S4=S4+1
endloop
elseif u4==1093677400 then
set H4=bO[N1]
set Fb[hb]="when calling getAllianceState in Diplomacy, line 60"
set hb=hb+1
if Rb[H4]==0 then
if H4==0 then
call e6("Nullpointer exception when calling PlayerStats.getAllianceState","when calling error in PlayerStats, line 38")
else
call e6("Called PlayerStats.getAllianceState on invalid object.","when calling error in PlayerStats, line 38")
endif
endif
set Fb[hb]="when calling getAllianceState in PlayerStats, line 38"
set hb=hb+1
set J4=cqw(H4,GetPlayerId(V1),"when reading array PlayerStats_alliance_states in PlayerStats, line 39")
set hb=hb-1-1
if J4==bj_ALLIANCE_NEUTRAL then
set hb=hb-1
set C1=null
set V1=null
set M1=null
set w4=null
set l4=null
set b4=null
set d4=null
set f4=null
set R4=null
set T4=null
set Y4=null
set k4=null
set j4=null
set x4=null
set v4=null
set m4=null
set U4=null
set I4=null
set P4=null
set A4=null
set D4=null
set X4=null
set C4=null
set V4=null
set B4=null
set N4=null
return
endif
set K4=bO[N1]
set L4=bj_ALLIANCE_NEUTRAL
set Fb[hb]="when calling setAlliance in Diplomacy, line 62"
set hb=hb+1
if Rb[K4]==0 then
if K4==0 then
call e6("Nullpointer exception when calling PlayerStats.setAlliance","when calling error in PlayerStats, line 27")
else
call e6("Called PlayerStats.setAlliance on invalid object.","when calling error in PlayerStats, line 27")
endif
endif
call btw(K4,V1,L4,"when calling setAlliance in PlayerStats, line 27")
set hb=hb-1
set o4=0
set O4=23
loop
exitwhen o4>O4
set X4=nO[o4]
set C4=CreateForce()
call ForceAddPlayer(C4,X4)
if nO[o4]==V1 then
set V4=nO[o4]
set Fb[hb]="when calling noteToPlayer in Diplomacy, line 67"
set hb=hb+1
call DisplayTimedTextToPlayer(V4,0.,0.,10.0,N0w(V4,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(V4,0.,0.,10.0,B1+" unallies you!")
set hb=hb-1
elseif C4==M1 or C4==w4 then
set B4=nO[o4]
set Fb[hb]="when calling noteToPlayer in Diplomacy, line 69"
set hb=hb+1
call DisplayTimedTextToPlayer(B4,0.,0.,10.0,N0w(B4,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(B4,0.,0.,10.0,B1+" unallied "+X1)
set hb=hb-1
else
set N4=nO[o4]
set Fb[hb]="when calling noteToPlayer in Diplomacy, line 71"
set hb=hb+1
call DisplayTimedTextToPlayer(N4,0.,0.,10.0,N0w(N4,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(N4,0.,0.,10.0,B1+" unallied "+X1)
set hb=hb-1
endif
set o4=o4+1
endloop
endif
set hb=hb-1
set C1=null
set V1=null
set M1=null
set w4=null
set l4=null
set b4=null
set d4=null
set f4=null
set R4=null
set T4=null
set Y4=null
set k4=null
set j4=null
set x4=null
set v4=null
set m4=null
set U4=null
set I4=null
set P4=null
set A4=null
set D4=null
set X4=null
set C4=null
set V4=null
set B4=null
set N4=null
endfunction
function Kew takes nothing returns nothing
set hb=0
call M4("Diplomacy, line 116")
endfunction
function t8 takes string s8 returns boolean
set Fb[hb]=s8
set hb=hb+1
set Fb[hb]="when calling alloc_Closure in LinkedList, line 504"
set hb=hb+1
if ub==0 then
if rb<32768 then
set rb=rb+1
else
call e6("Out of memory: Could not create Closure.","when calling error in LinkedList, line 504")
endif
else
set ub=ub-1
endif
set hb=hb-1
set Fb[hb]="when calling alloc_Closure in LinkedList, line 508"
set hb=hb+1
if ub==0 then
if rb<32768 then
set rb=rb+1
else
call e6("Out of memory: Could not create Closure.","when calling error in LinkedList, line 508")
endif
else
set ub=ub-1
endif
set hb=hb-1-1
return true
endfunction
function Kpw takes nothing returns boolean
set hb=0
return t8("LinkedList, line 1")
endfunction
function Jv takes nothing returns boolean
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889797,true)!=1 then
return false
endif
return true
endfunction
function Kv takes nothing returns boolean
if not Jv() then
return false
endif
return true
endfunction
function L1 takes nothing returns boolean
local trigger D1=CreateTrigger()
local trigger H1=D1
local playerunitevent J1=EVENT_PLAYER_UNIT_SPELL_EFFECT
local integer K1=0
loop
call TriggerRegisterPlayerUnitEvent(H1,Player(K1),J1,null)
set K1=K1+1
exitwhen K1==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(D1,Condition(cf))
call TriggerAddAction(D1,of)
set D1=null
set H1=null
set J1=null
return true
endfunction
function LG takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989046 then
return false
endif
return true
endfunction
function KH takes nothing returns boolean
if GetUnitTypeId(GetConstructedStructure())!=1747989059 then
return false
endif
return true
endfunction
function LH takes nothing returns boolean
if not KH() then
return false
endif
return true
endfunction
function LP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651850,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651849,0)
endfunction
function a9 takes string o9 returns nothing
local integer O9
local integer l9
local playerevent b9
local integer y9
local integer p9
local force e9
local force q9
set Fb[hb]=o9
set hb=hb+1
if xo then
set hb=hb-1
set b9=null
set e9=null
set q9=null
return
endif
set b9=EVENT_PLAYER_END_CINEMATIC
set Fb[hb]="when calling alloc_Closure in MainInit, line 72"
set hb=hb+1
if fl==0 then
if Rl<32768 then
set Rl=Rl+1
set y9=Rl
set Tl[y9]=670
else
call e6("Out of memory: Could not create Closure.","when calling error in MainInit, line 72")
set y9=0
endif
else
set fl=fl-1
set y9=dl[fl]
set Tl[y9]=670
endif
set hb=hb-1
set ec[y9]=0
set qc[y9]=0
set ac[y9]=0
set Fb[hb]="when calling add in MainInit, line 72"
set hb=hb+1
set Fb[hb]="when calling toIntId in ClosureEvents, line 111"
set hb=hb+1
set p9=oc[GetHandleId(b9)]
if p9==0 then
set p9=CN(b9,"when calling registerEventId in ClosureEvents, line 228")
endif
set hb=hb-1
set ec[y9]=p9
if yc[ec[y9]]!=0 then
set ac[yc[ec[y9]]]=y9
set qc[y9]=yc[ec[y9]]
endif
set yc[ec[y9]]=y9
set hb=hb-1
set e9=bj_FORCE_ALL_PLAYERS
if IsPlayerInForce(GetLocalPlayer(),e9) then
call ShowInterface(false,0.50)
endif
set O9=0
set l9=4
loop
exitwhen O9>l9
if not ko then
set q9=bj_FORCE_ALL_PLAYERS
set o9=Go[O9]
if IsPlayerInForce(GetLocalPlayer(),q9) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,10.0,o9)
endif
call TriggerSleepAction(12.5)
endif
set O9=O9+1
endloop
call CinematicModeExBJ(false,bj_FORCE_ALL_PLAYERS,bj_CINEMODE_INTERFACEFADE)
set ko=true
set hb=hb-1
set b9=null
set e9=null
set q9=null
endfunction
function Lew takes nothing returns nothing
set hb=0
call a9("MainInit, line 128")
endfunction
function Lrw takes nothing returns boolean
return true
endfunction
function Lv takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989065,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989296,0)
endfunction
function MJ takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function MP takes nothing returns nothing
set s=bj_FORCE_ALL_PLAYERS
call ForForce(s,ca)
endfunction
function MQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989570,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989571,0)
endfunction
function Mg takes nothing returns nothing
local group Vg
local code Bg
local boolean Ng
set w=GetUnitsOfTypeIdAll(1747988790)
set Vg=w
set Bg=Ay
set Ng=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(Vg,Bg)
if Ng then
call DestroyGroup(Vg)
endif
call DestroyGroup(w)
set Vg=null
endfunction
function Mj takes nothing returns boolean
if GetUnitTypeId(GetDyingUnit())!=1747989048 then
return false
endif
return true
endfunction
function R2 takes string d2 returns integer
local integer f2
set Fb[hb]=d2
set hb=hb+1
set Fb[hb]="when calling ArrayQueue in DummyRecycler, line 48"
set hb=hb+1
if Ll==0 then
if Xl<32768 then
set Xl=Xl+1
set f2=Xl
set Cl[f2]=626
else
call e6("Out of memory: Could not create ArrayQueue.","when calling error in DummyRecycler, line 48")
set f2=0
endif
else
set Ll=Ll-1
set f2=Kl[Ll]
set Cl[f2]=626
endif
set hb=hb-1
set Zc[f2]=0
set Uc[f2]=0
set hb=hb-1
return f2
endfunction
function bbw takes integer obw,unit Obw,string lbw returns nothing
set Fb[hb]=lbw
set hb=hb+1
if Cl[obw]==0 then
if obw==0 then
call e6("Nullpointer exception when calling ArrayQueue.enqueue","when calling error in DummyRecycler, line 54")
else
call e6("Called ArrayQueue.enqueue on invalid object.","when calling error in DummyRecycler, line 54")
endif
endif
set Fb[hb]="when calling enqueue in DummyRecycler, line 54"
set hb=hb+1
if Uc[obw]<6 then
set Uc[obw]=Uc[obw]+1
set Zc[obw]=ModuloInteger(Zc[obw]+1,6)
else
call e6("Queue Overflow","when calling error in DummyRecycler, line 60")
endif
set hb=hb-1-1
endfunction
function n2 takes real y2,real p2,player e2,real q2 returns unit
local unit a2=CreateUnit(e2,2019849581,y2,p2,q2*57.295779513)
call SetUnitX(a2,y2)
call SetUnitY(a2,p2)
call UnitAddAbility(a2,1097691750)
call UnitRemoveAbility(a2,1097691750)
call UnitAddAbility(a2,1097625443)
set Rf=a2
set a2=null
return Rf
endfunction
function b2 takes string S2 returns boolean
local integer c2
local integer o2
local integer O2
local integer l2
set Fb[hb]=S2
set hb=hb+1
set Ec=360*1./8
call CreateTimer()
set c2=0
set o2=7
loop
exitwhen c2>o2
set Ic[c2]=R2("when calling new_ArrayQueue in DummyRecycler, line 139")
set O2=0
set l2=5
loop
exitwhen O2>l2
call bbw(Ic[c2],n2(Zo,Uo,rS,c2*Ec*0.017453293),"when calling enqueue in DummyRecycler, line 141")
set O2=O2+1
endloop
set c2=c2+1
endloop
set hb=hb-1
return true
endfunction
function Mpw takes nothing returns boolean
set hb=0
return b2("DummyRecycler, line 1")
endfunction
function Nv takes nothing returns boolean
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889797,true)!=2 then
return false
endif
return true
endfunction
function Mv takes nothing returns boolean
if not Nv() then
return false
endif
return true
endfunction
function N3 takes nothing returns boolean
local trigger C3=CreateTrigger()
local trigger X3
local integer V3
local integer B3
call TriggerAddCondition(C3,Condition(tf))
call TriggerAddAction(C3,Sf)
set X3=C3
set V3=0
set B3=23
loop
exitwhen V3>B3
call TriggerRegisterPlayerChatEvent(X3,nO[V3],"-",false)
set V3=V3+1
endloop
set X3=null
set C3=null
return true
endfunction
function NE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651848,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651846,0)
endfunction
function BJ takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990086 then
return false
endif
return true
endfunction
function NJ takes nothing returns boolean
if not BJ() then
return false
endif
return true
endfunction
function NP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990584,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990594,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990583,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990607,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990598,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990606,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990599,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990601,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651855,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651852,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651850,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990595,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990596,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990604,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990603,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990322,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990323,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990321,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990324,0)
endfunction
function BQ takes nothing returns boolean
if GetResearched()!=1378889807 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889807,true)!=1 then
return false
endif
return true
endfunction
function NQ takes nothing returns boolean
if not BQ() then
return false
endif
return true
endfunction
function Nm takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651828,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651827,0)
endfunction
function Dpw takes integer apw,integer npw,integer dpw,integer fpw,integer Rpw,integer Tpw,integer Ypw,integer Gpw,integer gpw,integer hpw,integer Fpw,integer kpw,integer jpw,integer xpw,integer vpw,integer mpw,integer Qpw,integer Wpw,integer Epw,integer Zpw,integer Upw,integer Ipw,string Ppw returns integer
local integer Apw
set Fb[hb]=Ppw
set hb=hb+1
set Apw=F8("when calling new_LinkedList in LinkedList, line 391")
call ayw(Apw,apw,"when calling add in LinkedList, line 393")
call ayw(Apw,npw,"when calling add in LinkedList, line 393")
call ayw(Apw,dpw,"when calling add in LinkedList, line 393")
call ayw(Apw,fpw,"when calling add in LinkedList, line 393")
call ayw(Apw,Rpw,"when calling add in LinkedList, line 393")
call ayw(Apw,Tpw,"when calling add in LinkedList, line 393")
call ayw(Apw,Ypw,"when calling add in LinkedList, line 393")
call ayw(Apw,Gpw,"when calling add in LinkedList, line 393")
call ayw(Apw,gpw,"when calling add in LinkedList, line 393")
call ayw(Apw,hpw,"when calling add in LinkedList, line 393")
call ayw(Apw,Fpw,"when calling add in LinkedList, line 393")
call ayw(Apw,kpw,"when calling add in LinkedList, line 393")
call ayw(Apw,jpw,"when calling add in LinkedList, line 393")
call ayw(Apw,xpw,"when calling add in LinkedList, line 393")
call ayw(Apw,vpw,"when calling add in LinkedList, line 393")
call ayw(Apw,mpw,"when calling add in LinkedList, line 393")
call ayw(Apw,Qpw,"when calling add in LinkedList, line 393")
call ayw(Apw,Wpw,"when calling add in LinkedList, line 393")
call ayw(Apw,Epw,"when calling add in LinkedList, line 393")
call ayw(Apw,Zpw,"when calling add in LinkedList, line 393")
call ayw(Apw,Upw,"when calling add in LinkedList, line 393")
call ayw(Apw,Ipw,"when calling add in LinkedList, line 393")
set hb=hb-1
return Apw
endfunction
function qpw takes integer Vyw,integer Byw,integer Nyw,integer Myw,integer wpw,integer upw,integer rpw,integer spw,integer tpw,integer ipw,integer Spw,integer cpw,integer opw,integer Opw,integer lpw,integer bpw,integer ypw,string ppw returns integer
local integer epw
set Fb[hb]=ppw
set hb=hb+1
set epw=F8("when calling new_LinkedList in LinkedList, line 391")
call ayw(epw,Vyw,"when calling add in LinkedList, line 393")
call ayw(epw,Byw,"when calling add in LinkedList, line 393")
call ayw(epw,Nyw,"when calling add in LinkedList, line 393")
call ayw(epw,Myw,"when calling add in LinkedList, line 393")
call ayw(epw,wpw,"when calling add in LinkedList, line 393")
call ayw(epw,upw,"when calling add in LinkedList, line 393")
call ayw(epw,rpw,"when calling add in LinkedList, line 393")
call ayw(epw,spw,"when calling add in LinkedList, line 393")
call ayw(epw,tpw,"when calling add in LinkedList, line 393")
call ayw(epw,ipw,"when calling add in LinkedList, line 393")
call ayw(epw,Spw,"when calling add in LinkedList, line 393")
call ayw(epw,cpw,"when calling add in LinkedList, line 393")
call ayw(epw,opw,"when calling add in LinkedList, line 393")
call ayw(epw,Opw,"when calling add in LinkedList, line 393")
call ayw(epw,lpw,"when calling add in LinkedList, line 393")
call ayw(epw,bpw,"when calling add in LinkedList, line 393")
call ayw(epw,ypw,"when calling add in LinkedList, line 393")
set hb=hb-1
return epw
endfunction
function QOw takes string uOw returns boolean
local integer rOw
local integer sOw
local integer tOw
local integer iOw
local integer SOw
local integer cOw
local integer oOw
local integer OOw
local integer lOw
local integer bOw
local integer yOw
local integer pOw
local integer eOw
local integer qOw
local integer aOw
local integer nOw
local integer dOw
local integer fOw
local integer ROw
local integer TOw
local integer YOw
local integer GOw
local integer gOw
local integer hOw
local integer FOw
local integer kOw
local integer jOw
local integer xOw
local integer vOw
local integer mOw
set Fb[hb]=uOw
set hb=hb+1
set Fb[hb]="when calling asList in Units, line 115"
set hb=hb+1
set sOw=F8("when calling new_LinkedList in LinkedList, line 391")
call ayw(sOw,1747989317,"when calling add in LinkedList, line 393")
call ayw(sOw,1747989305,"when calling add in LinkedList, line 393")
call ayw(sOw,1747989316,"when calling add in LinkedList, line 393")
call ayw(sOw,1747989315,"when calling add in LinkedList, line 393")
set hb=hb-1
set Ol=sOw
set ll=B6("when calling new_HashMap in Units, line 116")
set bl[0]=qpw(1747988528,1747988528,1747988528,1747988528,1747988528,1747988528,1747988532,1747988532,1747988532,1747988532,1211118401,1747989058,1747989058,1747989058,1747989058,1747989058,1747989058,"when calling asList in Units, line 123")
set bl[1]=qpw(1747990339,1747990339,1747990339,1747990339,1747990339,1747990339,1747990340,1747990340,1747990340,1747990340,1211119699,1747990593,1747990593,1747990593,1747990593,1747990593,1747990593,"when calling asList in Units, line 128")
set bl[2]=qpw(1747990087,1747990087,1747990087,1747990087,1747990087,1747990087,1747990088,1747990088,1747990088,1747990088,1211119701,1747989817,1747989817,1747989817,1747989817,1747989817,1747989817,"when calling asList in Units, line 134")
set bl[3]=qpw(1747989558,1747989558,1747989558,1747989558,1747989558,1747989558,1747989575,1747989575,1747989575,1747989575,1211119700,1747989571,1747989571,1747989571,1747989571,1747989571,1747989571,"when calling asList in Units, line 140")
set Fb[hb]="when calling asList in Units, line 148"
set hb=hb+1
set tOw=F8("when calling new_LinkedList in LinkedList, line 391")
call ayw(tOw,1747989558,"when calling add in LinkedList, line 393")
call ayw(tOw,1747990339,"when calling add in LinkedList, line 393")
call ayw(tOw,1747990087,"when calling add in LinkedList, line 393")
call ayw(tOw,1747988528,"when calling add in LinkedList, line 393")
call ayw(tOw,1747989575,"when calling add in LinkedList, line 393")
call ayw(tOw,1747990340,"when calling add in LinkedList, line 393")
call ayw(tOw,1747990088,"when calling add in LinkedList, line 393")
call ayw(tOw,1747988532,"when calling add in LinkedList, line 393")
set hb=hb-1
set yl=tOw
set Fb[hb]="when calling asList in Units, line 160"
set hb=hb+1
set iOw=F8("when calling new_LinkedList in LinkedList, line 391")
call ayw(iOw,1747988529,"when calling add in LinkedList, line 393")
call ayw(iOw,1747988530,"when calling add in LinkedList, line 393")
call ayw(iOw,1747988531,"when calling add in LinkedList, line 393")
call ayw(iOw,1747990326,"when calling add in LinkedList, line 393")
call ayw(iOw,1747990327,"when calling add in LinkedList, line 393")
call ayw(iOw,1747990328,"when calling add in LinkedList, line 393")
call ayw(iOw,1747990084,"when calling add in LinkedList, line 393")
call ayw(iOw,1747990087,"when calling add in LinkedList, line 393")
call ayw(iOw,1747990085,"when calling add in LinkedList, line 393")
call ayw(iOw,1747989590,"when calling add in LinkedList, line 393")
call ayw(iOw,1747989591,"when calling add in LinkedList, line 393")
call ayw(iOw,1747989592,"when calling add in LinkedList, line 393")
set hb=hb-1
set pl=iOw
set Fb[hb]="when calling asList in Units, line 175"
set hb=hb+1
set SOw=F8("when calling new_LinkedList in LinkedList, line 391")
call ayw(SOw,1747989059,"when calling add in LinkedList, line 393")
call ayw(SOw,1747989060,"when calling add in LinkedList, line 393")
call ayw(SOw,1747988844,"when calling add in LinkedList, line 393")
call ayw(SOw,1747990351,"when calling add in LinkedList, line 393")
call ayw(SOw,1747990352,"when calling add in LinkedList, line 393")
call ayw(SOw,1747990356,"when calling add in LinkedList, line 393")
call ayw(SOw,1747989331,"when calling add in LinkedList, line 393")
call ayw(SOw,1747990350,"when calling add in LinkedList, line 393")
call ayw(SOw,1747989809,"when calling add in LinkedList, line 393")
call ayw(SOw,1747990353,"when calling add in LinkedList, line 393")
call ayw(SOw,1747990354,"when calling add in LinkedList, line 393")
call ayw(SOw,1747990355,"when calling add in LinkedList, line 393")
set hb=hb-1
set el=SOw
set Fb[hb]="when calling asList in Units, line 190"
set hb=hb+1
set cOw=F8("when calling new_LinkedList in LinkedList, line 391")
call ayw(cOw,1747988529,"when calling add in LinkedList, line 393")
call ayw(cOw,1747988530,"when calling add in LinkedList, line 393")
call ayw(cOw,1747988531,"when calling add in LinkedList, line 393")
call ayw(cOw,1747990326,"when calling add in LinkedList, line 393")
call ayw(cOw,1747990327,"when calling add in LinkedList, line 393")
call ayw(cOw,1747990328,"when calling add in LinkedList, line 393")
call ayw(cOw,1747990084,"when calling add in LinkedList, line 393")
call ayw(cOw,1747990087,"when calling add in LinkedList, line 393")
call ayw(cOw,1747990085,"when calling add in LinkedList, line 393")
call ayw(cOw,1747989590,"when calling add in LinkedList, line 393")
call ayw(cOw,1747989591,"when calling add in LinkedList, line 393")
call ayw(cOw,1747989592,"when calling add in LinkedList, line 393")
call ayw(cOw,1747989555,"when calling add in LinkedList, line 393")
call ayw(cOw,1747989297,"when calling add in LinkedList, line 393")
call ayw(cOw,1747989325,"when calling add in LinkedList, line 393")
set hb=hb-1
set ql=cOw
set Fb[hb]="when calling asList in Units, line 199"
set hb=hb+1
set oOw=F8("when calling new_LinkedList in LinkedList, line 391")
call ayw(oOw,1747989321,"when calling add in LinkedList, line 393")
call ayw(oOw,1747989321,"when calling add in LinkedList, line 393")
call ayw(oOw,1747989321,"when calling add in LinkedList, line 393")
call ayw(oOw,1747989321,"when calling add in LinkedList, line 393")
call ayw(oOw,1747989321,"when calling add in LinkedList, line 393")
call ayw(oOw,1747989321,"when calling add in LinkedList, line 393")
call ayw(oOw,1747989321,"when calling add in LinkedList, line 393")
call ayw(oOw,1747989321,"when calling add in LinkedList, line 393")
set hb=hb-1
set al[0]=oOw
set Fb[hb]="when calling asList in Units, line 200"
set hb=hb+1
set OOw=F8("when calling new_LinkedList in LinkedList, line 391")
call ayw(OOw,1747989321,"when calling add in LinkedList, line 393")
call ayw(OOw,1747989321,"when calling add in LinkedList, line 393")
call ayw(OOw,1747989321,"when calling add in LinkedList, line 393")
call ayw(OOw,1747989321,"when calling add in LinkedList, line 393")
call ayw(OOw,1747989326,"when calling add in LinkedList, line 393")
call ayw(OOw,1747989326,"when calling add in LinkedList, line 393")
call ayw(OOw,1747989321,"when calling add in LinkedList, line 393")
call ayw(OOw,1747989321,"when calling add in LinkedList, line 393")
call ayw(OOw,1747989321,"when calling add in LinkedList, line 393")
call ayw(OOw,1747989321,"when calling add in LinkedList, line 393")
set hb=hb-1
set al[1]=OOw
set Fb[hb]="when calling asList in Units, line 201"
set hb=hb+1
set lOw=F8("when calling new_LinkedList in LinkedList, line 391")
call ayw(lOw,1747989321,"when calling add in LinkedList, line 393")
call ayw(lOw,1747989321,"when calling add in LinkedList, line 393")
call ayw(lOw,1747989321,"when calling add in LinkedList, line 393")
call ayw(lOw,1747989321,"when calling add in LinkedList, line 393")
call ayw(lOw,1747989326,"when calling add in LinkedList, line 393")
call ayw(lOw,1747989326,"when calling add in LinkedList, line 393")
call ayw(lOw,1747989326,"when calling add in LinkedList, line 393")
call ayw(lOw,1747989326,"when calling add in LinkedList, line 393")
call ayw(lOw,1747989326,"when calling add in LinkedList, line 393")
call ayw(lOw,1747989326,"when calling add in LinkedList, line 393")
call ayw(lOw,1747989337,"when calling add in LinkedList, line 393")
call ayw(lOw,1747989337,"when calling add in LinkedList, line 393")
set hb=hb-1
set al[2]=lOw
set bOw=GetHandleId(gu)
set yOw=GetHandleId(kw)
set pOw=GetHandleId(ew)
set eOw=GetHandleId(qw)
set qOw=GetHandleId(Ow)
set aOw=GetHandleId(hu)
set nOw=GetHandleId(Yu)
set dOw=GetHandleId(Vw)
set fOw=GetHandleId(q)
set ROw=GetHandleId(Gu)
set TOw=GetHandleId(a)
set YOw=GetHandleId(fw)
set GOw=GetHandleId(dw)
set gOw=GetHandleId(Rw)
set hOw=GetHandleId(ow)
set FOw=GetHandleId(lw)
set kOw=GetHandleId(bw)
set jOw=GetHandleId(yw)
set xOw=GetHandleId(pw)
set vOw=GetHandleId(aw)
set mOw=GetHandleId(d)
set nl=Dpw(bOw,yOw,pOw,eOw,qOw,aOw,nOw,dOw,fOw,ROw,TOw,YOw,GOw,gOw,hOw,FOw,kOw,jOw,xOw,vOw,mOw,GetHandleId(n),"when calling asList in Units, line 204")
set rOw=ll
call Fbw(rOw,1747989317,15,"when calling put in Units, line 231")
call Fbw(rOw,1747989305,50,"when calling put in Units, line 232")
call Fbw(rOw,1747989316,25,"when calling put in Units, line 233")
call Fbw(rOw,1747989315,40,"when calling put in Units, line 234")
set hb=hb-1
return true
endfunction
function Npw takes nothing returns boolean
set hb=0
return QOw("Units, line 1")
endfunction
function Xsw takes unit Lsw returns nothing
call UnitAddAbility(Lsw,1095577649)
call UnitMakeAbilityPermanent(Lsw,true,1095577649)
set OO[lO]=Lsw
set lO=lO+1
call TriggerEvaluate(cO)
set lO=lO-1
endfunction
function Nsw takes nothing returns nothing
call Xsw(GetFilterUnit())
endfunction
function OG takes nothing returns nothing
set t=GetUnitLoc(GetSpellTargetUnit())
set bj_lastCreatedEffect=AddSpecialEffectLoc("Abilities\\Spells\\Orc\\Voodoo\\VoodooAuraTarget.mdl",t)
call DestroyEffect(bj_lastCreatedEffect)
set i=GetUnitLoc(GetSpellAbilityUnit())
set bj_lastCreatedEffect=AddSpecialEffectLoc("Abilities\\Spells\\Orc\\Voodoo\\VoodooAura.mdl",i)
call DestroyEffect(bj_lastCreatedEffect)
call RemoveLocation(t)
call RemoveLocation(i)
endfunction
function oH takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990352 then
return false
endif
return true
endfunction
function OH takes nothing returns boolean
if not oH() then
return false
endif
return true
endfunction
function OP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990604,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990602,0)
endfunction
function oU takes nothing returns boolean
if GetResearched()!=1378890032 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890032,true)!=1 then
return false
endif
return true
endfunction
function OU takes nothing returns boolean
if not oU() then
return false
endif
return true
endfunction
function OY takes nothing returns nothing
local player tY=GetOwningPlayer(GetAttacker())
local player iY=GetOwningPlayer(GetAttacker())
local player SY
local player cY
local unit oY
set r[GetPlayerId(tY)+1]=r[GetPlayerId(iY)+1]+1
set SY=GetOwningPlayer(GetTriggerUnit())
set cY=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(SY)+1]=r[GetPlayerId(cY)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set oY=GetTriggerUnit()
call SetUnitState(oY,UNIT_STATE_LIFE,GetUnitState(oY,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set tY=null
set iY=null
set SY=null
set cY=null
set oY=null
endfunction
function Oj takes nothing returns nothing
local player Nk=GetOwningPlayer(GetSpellTargetUnit())
local playerstate Mk=PLAYER_STATE_RESOURCE_LUMBER
local playerstate wj
local playerstate uj
local player rj
local force sj
local location tj
local real ij
local real Sj
local player cj
local force oj
if Mk==PLAYER_STATE_RESOURCE_GOLD then
set wj=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(Nk,wj,GetPlayerState(Nk,wj)+500)
elseif Mk==PLAYER_STATE_RESOURCE_LUMBER then
set uj=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(Nk,uj,GetPlayerState(Nk,uj)+500)
endif
call SetPlayerState(Nk,Mk,GetPlayerState(Nk,Mk)+500)
call RemoveUnit(GetSpellAbilityUnit())
set rj=GetOwningPlayer(GetSpellTargetUnit())
set sj=CreateForce()
call ForceAddPlayer(sj,rj)
if IsPlayerInForce(GetLocalPlayer(),sj) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_1232")
endif
set y=GetUnitLoc(GetSpellTargetUnit())
set cj=GetOwningPlayer(GetSpellTargetUnit())
set oj=CreateForce()
call ForceAddPlayer(oj,cj)
set tj=y
set ij=GetLocationX(tj)
set Sj=GetLocationY(tj)
if IsPlayerInForce(GetLocalPlayer(),oj) then
call PingMinimap(ij,Sj,2.00)
endif
call RemoveLocation(y)
set Nk=null
set Mk=null
set wj=null
set uj=null
set rj=null
set sj=null
set tj=null
set cj=null
set oj=null
endfunction
function Ov takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988558,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989057,0)
endfunction
function PH takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function II takes nothing returns boolean
if GetResearched()!=1378890053 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890053,true)!=2 then
return false
endif
return true
endfunction
function PI takes nothing returns boolean
if not II() then
return false
endif
return true
endfunction
function Pew takes nothing returns nothing
set hb=0
set Fb[hb]="ClosureForGroups, line 12"
set hb=hb+1
call Vlw(Yc[Gc-1],GetFilterUnit(),"when calling callback in ClosureForGroups, line 12")
set hb=hb-1
endfunction
function Ix takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function Px takes nothing returns boolean
if not Ix() then
return false
endif
return true
endfunction
function initMapBounds takes nothing returns nothing
local rect cond_result
local region receiver
local real temp
local real tuple_temp
set Qo=bj_mapInitialPlayableArea
call RegionAddRect(CreateRegion(),Qo)
set cond_result=GetWorldBounds()
set Wo=cond_result
set receiver=CreateRegion()
call RegionAddRect(receiver,Wo)
set Eo=receiver
set temp=GetRectMaxX(Wo)
set tuple_temp=GetRectMaxY(Wo)
set Zo=temp
set Uo=tuple_temp
endfunction
function Q9 takes nothing returns boolean
call initMapBounds()
return true
endfunction
function mD takes nothing returns boolean
if GetUnitTypeId(GetConstructedStructure())!=1747990353 then
return false
endif
return true
endfunction
function QD takes nothing returns boolean
if not mD() then
return false
endif
return true
endfunction
function QI takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651855,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651851,0)
endfunction
function mZ takes nothing returns boolean
if GetResearched()!=1378889797 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889797,true)!=1 then
return false
endif
return true
endfunction
function QZ takes nothing returns boolean
if not mZ() then
return false
endif
return true
endfunction
function Qew takes nothing returns nothing
set hb=0
call TM("ClosureEvents, line 240")
endfunction
function Qj takes nothing returns nothing
call SetMapFlag(MAP_LOCK_RESOURCE_TRADING,false)
endfunction
function Qx takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988565,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988563,0)
endfunction
function R6 takes nothing returns boolean
set io=InitHashtable()
set So=InitHashtable()
return true
endfunction
function RW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989557,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989559,0)
endfunction
function Z1 takes string W1 returns boolean
local integer E1
set Fb[hb]=W1
set hb=hb+1
set Fb[hb]="when calling alloc_Closure in DateTime, line 31"
set hb=hb+1
if Pl==0 then
if Al<32768 then
set Al=Al+1
set E1=Al
set Dl[E1]=634
else
call e6("Out of memory: Could not create Closure.","when calling error in DateTime, line 31")
set E1=0
endif
else
set Pl=Pl-1
set E1=Il[Pl]
set Dl[E1]=634
endif
set hb=hb-1
set Wc[E1]=120.0
set Fb[hb]="when calling doPeriodically in DateTime, line 31"
set hb=hb+1
set Fb[hb]="when calling start in ClosureTimers, line 36"
set hb=hb+1
if Dl[E1]==0 then
if E1==0 then
call e6("Nullpointer exception when calling CallbackPeriodic.start","when calling error in ClosureTimers, line 88")
else
call e6("Called CallbackPeriodic.start on invalid object.","when calling error in ClosureTimers, line 88")
endif
endif
call l3(E1,1.0,"when calling start in ClosureTimers, line 88")
set hb=hb-1-1-1
return true
endfunction
function Rew takes nothing returns boolean
set hb=0
return Z1("DateTime, line 1")
endfunction
function Riw takes nothing returns boolean
return true
endfunction
function fm takes nothing returns boolean
if GetResearched()!=1378889801 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889801,true)!=1 then
return false
endif
return true
endfunction
function Rm takes nothing returns boolean
if not fm() then
return false
endif
return true
endfunction
function S3 takes nothing returns boolean
set hc=200
return true
endfunction
function SK takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function iT takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989043 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function ST takes nothing returns boolean
if not iT() then
return false
endif
return true
endfunction
function SW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989556,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989570,0)
endfunction
function Scw takes nothing returns boolean
set MO=InitHashtable()
return true
endfunction
function Slw takes nothing returns boolean
call Location(0.,0.)
return true
endfunction
function im takes nothing returns boolean
if GetResearched()!=1378889799 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889799,true)!=1 then
return false
endif
return true
endfunction
function Sm takes nothing returns boolean
if not im() then
return false
endif
return true
endfunction
function RA takes nothing returns boolean
if GetUnitTypeId(GetConstructedStructure())==1747988545 then
return true
endif
if GetUnitTypeId(GetConstructedStructure())==1747989577 then
return true
endif
if GetUnitTypeId(GetConstructedStructure())==1747990320 then
return true
endif
if GetUnitTypeId(GetConstructedStructure())==1747989845 then
return true
endif
return false
endfunction
function TA takes nothing returns boolean
if p[GetPlayerId(GetOwningPlayer(GetConstructedStructure()))+1]!=false then
return false
endif
if not RA() then
return false
endif
return true
endfunction
function RJ takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989591 then
return false
endif
return true
endfunction
function TJ takes nothing returns boolean
if not RJ() then
return false
endif
return true
endfunction
function RQ takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function TQ takes nothing returns boolean
if not RQ() then
return false
endif
return true
endfunction
function TY takes nothing returns nothing
local player aY=GetOwningPlayer(GetAttacker())
local player nY=GetOwningPlayer(GetAttacker())
local player dY
local player fY
local unit RY
set r[GetPlayerId(aY)+1]=r[GetPlayerId(nY)+1]+1
set dY=GetOwningPlayer(GetTriggerUnit())
set fY=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(dY)+1]=r[GetPlayerId(fY)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set RY=GetTriggerUnit()
call SetUnitState(RY,UNIT_STATE_LIFE,GetUnitState(RY,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set aY=null
set nY=null
set dY=null
set fY=null
set RY=null
endfunction
function hww takes string Yww returns boolean
local integer Gww
local integer gww
set Fb[hb]=Yww
set hb=hb+1
set Fb[hb]="when calling alloc_Closure in MultiboardCityUpdate, line 18"
set hb=hb+1
if El==0 then
if Zl<32768 then
set Zl=Zl+1
set Gww=Zl
set Ul[Gww]=648
else
call e6("Out of memory: Could not create Closure.","when calling error in MultiboardCityUpdate, line 18")
set Gww=0
endif
else
set El=El-1
set Gww=Wl[El]
set Ul[Gww]=648
endif
set hb=hb-1
set Fb[hb]="when calling doAfter in MultiboardCityUpdate, line 18"
set hb=hb+1
set Fb[hb]="when calling start in ClosureTimers, line 15"
set hb=hb+1
if Ul[Gww]==0 then
if Gww==0 then
call e6("Nullpointer exception when calling CallbackSingle.start","when calling error in ClosureTimers, line 67")
else
call e6("Called CallbackSingle.start on invalid object.","when calling error in ClosureTimers, line 67")
endif
endif
call q3(Gww,0.01,"when calling start in ClosureTimers, line 67")
set hb=hb-1-1
set Fb[hb]="when calling alloc_Closure in MultiboardCityUpdate, line 25"
set hb=hb+1
if Pl==0 then
if Al<32768 then
set Al=Al+1
set gww=Al
set Dl[gww]=637
else
call e6("Out of memory: Could not create Closure.","when calling error in MultiboardCityUpdate, line 25")
set gww=0
endif
else
set Pl=Pl-1
set gww=Il[Pl]
set Dl[gww]=637
endif
set hb=hb-1
set Fb[hb]="when calling doPeriodically in MultiboardCityUpdate, line 25"
set hb=hb+1
set Fb[hb]="when calling start in ClosureTimers, line 36"
set hb=hb+1
if Dl[gww]==0 then
if gww==0 then
call e6("Nullpointer exception when calling CallbackPeriodic.start","when calling error in ClosureTimers, line 88")
else
call e6("Called CallbackPeriodic.start on invalid object.","when calling error in ClosureTimers, line 88")
endif
endif
call l3(gww,1.0,"when calling start in ClosureTimers, line 88")
set hb=hb-1-1-1
return true
endfunction
function Tew takes nothing returns boolean
set hb=0
return hww("MultiboardCityUpdate, line 1")
endfunction
function Tm takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989072,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989073,0)
endfunction
function U0w takes nothing returns boolean
return true
endfunction
function UJ takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function ZP takes nothing returns boolean
if GetResearched()!=1378889818 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889818,true)!=1 then
return false
endif
return true
endfunction
function UP takes nothing returns boolean
if not ZP() then
return false
endif
return true
endfunction
function UQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990098,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990095,0)
endfunction
function UT takes nothing returns nothing
local player mT=GetOwningPlayer(GetAttacker())
local player QT=GetOwningPlayer(GetAttacker())
local player WT
local player ET
local unit ZT
set r[GetPlayerId(mT)+1]=r[GetPlayerId(QT)+1]+1
set WT=GetOwningPlayer(GetTriggerUnit())
set ET=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(WT)+1]=r[GetPlayerId(ET)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set ZT=GetTriggerUnit()
call SetUnitState(ZT,UNIT_STATE_LIFE,GetUnitState(ZT,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set mT=null
set QT=null
set WT=null
set ET=null
set ZT=null
endfunction
function Uew takes nothing returns nothing
set hb=0
set Fb[hb]="ClosureEvents, line 288"
set hb=hb+1
call TM("when calling generalEventCallback in ClosureEvents, line 288")
set hb=hb-1
endfunction
function Zv takes nothing returns boolean
if GetResearched()!=1378889802 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889802,true)!=2 then
return false
endif
return true
endfunction
function Uv takes nothing returns boolean
if not Zv() then
return false
endif
return true
endfunction
function VD takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function VF takes nothing returns boolean
if GetUnitTypeId(GetDyingUnit())!=1747988801 then
return false
endif
return true
endfunction
function VR takes nothing returns nothing
call ReplaceUnitBJ(GetEnumUnit(),1747988553,bj_UNIT_STATE_METHOD_RELATIVE)
endfunction
function VSw takes nothing returns boolean
return true
endfunction
function CU takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function VU takes nothing returns boolean
if not CU() then
return false
endif
return true
endfunction
function CW takes nothing returns boolean
if GetResearched()!=1378889810 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889810,true)!=1 then
return false
endif
return true
endfunction
function VW takes nothing returns boolean
if not CW() then
return false
endif
return true
endfunction
function VZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989836,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989837,0)
endfunction
function Low takes integer Jow,string Kow returns nothing
set Fb[hb]=Kow
set hb=hb+1
set cl=ol[Jow]
call TriggerEvaluate(il)
call SetUnitUserData(ol[Jow],0)
set Fb[hb]="when calling UnitIndex in UnitIndexer, line 172"
set hb=hb+1
if gb[Jow]==0 then
call e6("Double free: object of type UnitIndex","when calling error in UnitIndexer, line 157")
else
set Tb[Yb]=Jow
set Yb=Yb+1
set gb[Jow]=0
endif
set hb=hb-1-1
endfunction
function Wow takes unit vow,string mow returns boolean
local integer Qow
set Fb[hb]=mow
set hb=hb+1
if GetUnitUserData(vow)==0 then
set hb=hb-1
return false
else
set Fb[hb]="when calling toUnitIndex in UnitIndexer, line 154"
set hb=hb+1
set Qow=GetUnitUserData(vow)
if Qow==0 then
set Qow=How(vow,"when calling new_UnitIndex in UnitIndexer, line 125")
endif
set hb=hb-1
set Fb[hb]="when calling UnitIndex in UnitIndexer, line 154"
set hb=hb+1
if gb[Qow]==0 then
if Qow==0 then
call e6("Nullpointer exception when calling UnitIndex.UnitIndex","when calling error in UnitIndexer, line 157")
else
call e6("Called UnitIndex.UnitIndex on invalid object.","when calling error in UnitIndexer, line 157")
endif
endif
call Low(Qow,"when calling destroyUnitIndex in UnitIndexer, line 157")
set hb=hb-1-1
return true
endif
endfunction
function Vew takes nothing returns nothing
set hb=0
set Fb[hb]="UnitIndexer, line 180"
set hb=hb+1
call Wow(OO[lO-1],"when calling deindex in UnitIndexer, line 180")
set hb=hb-1
endfunction
function Vpw takes nothing returns boolean
set hb=0
set Fb[hb]="RegisterEvents, line 1"
set hb=hb+1
set vO=B6("when calling new_HashMap in RegisterEvents, line 55")
call ySw(EVENT_PLAYER_UNIT_SPELL_EFFECT,null,ff,null)
set hb=hb-1
return true
endfunction
function WD takes nothing returns nothing
call UnitAddAbility(GetConstructedStructure(),1093677896)
endfunction
function QU takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function WU takes nothing returns boolean
if not QU() then
return false
endif
return true
endfunction
function QW takes nothing returns boolean
if GetResearched()!=1378889809 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889809,true)!=2 then
return false
endif
return true
endfunction
function WW takes nothing returns boolean
if not QW() then
return false
endif
return true
endfunction
function WY takes nothing returns nothing
local player jY=GetOwningPlayer(GetAttacker())
local player xY=GetOwningPlayer(GetAttacker())
local player vY
local player mY
local unit QY
set r[GetPlayerId(jY)+1]=r[GetPlayerId(xY)+1]+1
set vY=GetOwningPlayer(GetTriggerUnit())
set mY=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(vY)+1]=r[GetPlayerId(mY)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set QY=GetTriggerUnit()
call SetUnitState(QY,UNIT_STATE_LIFE,GetUnitState(QY,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set jY=null
set xY=null
set vY=null
set mY=null
set QY=null
endfunction
function WZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989833,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989834,0)
endfunction
function EM takes integer QM,string WM returns nothing
set Fb[hb]=WM
set hb=hb+1
if Rc[QM]!=null then
if mbw(bc,GetHandleId(Rc[QM]),"when calling get in ClosureEvents, line 60")==QM then
call Fbw(bc,GetHandleId(Rc[QM]),nc[QM],"when calling put in ClosureEvents, line 62")
elseif dc[QM]!=0 then
set nc[dc[QM]]=nc[QM]
endif
elseif mbw(lc,fc[QM],"when calling get in ClosureEvents, line 66")==QM then
call Fbw(lc,fc[QM],nc[QM],"when calling put in ClosureEvents, line 68")
elseif dc[QM]!=0 then
set nc[dc[QM]]=nc[QM]
endif
set dc[nc[QM]]=dc[QM]
set nc[QM]=0
set dc[QM]=0
set hb=hb-1
endfunction
function Ulw takes integer Elw,string Zlw returns nothing
set Fb[hb]=Zlw
set hb=hb+1
if Jl[Elw]==0 then
if Elw==0 then
call e6("Nullpointer exception when calling OnCastListener.OnCastListener","when calling error in ClosureEvents, line 50")
else
call e6("Called OnCastListener.OnCastListener on invalid object.","when calling error in ClosureEvents, line 50")
endif
endif
set Fb[hb]="when calling destroyOnCastListener in ClosureEvents, line 50"
set hb=hb+1
call EM(Elw,"when calling OnCastListener_onDestroy in ClosureEvents, line 58")
set Fb[hb]="when calling OnCastListener in ClosureEvents, line 58"
set hb=hb+1
if Jl[Elw]==0 then
call e6("Double free: object of type OnCastListener","when calling error in ClosureEvents, line 50")
else
set Hl=Hl+1
set Jl[Elw]=0
endif
set hb=hb-1-1-1
endfunction
function mM takes integer jM,string xM returns nothing
local integer vM
set Fb[hb]=xM
set hb=hb+1
set vM=yc[ec[jM]]
if vM==jM then
set yc[ec[jM]]=qc[jM]
elseif ac[jM]!=0 then
set qc[ac[jM]]=qc[jM]
endif
set ac[qc[jM]]=ac[jM]
set vM=pc[ec[jM]]
if vM==jM then
set pc[ec[jM]]=qc[jM]
elseif ac[jM]!=0 then
set qc[ac[jM]]=qc[jM]
endif
set ac[qc[jM]]=ac[jM]
set qc[jM]=0
set ac[jM]=0
set Fb[hb]="when calling EventListener in ClosureEvents, line 201"
set hb=hb+1
if Tl[jM]==0 then
call e6("Double free: object of type EventListener","when calling error in ClosureEvents, line 98")
else
set dl[fl]=jM
set fl=fl+1
set Tl[jM]=0
endif
set hb=hb-1-1
endfunction
function cM takes integer sM,string tM returns nothing
local integer iM
local integer SM
set Fb[hb]=tM
set hb=hb+1
if sM>0 then
if pc[sM]!=0 then
set iM=pc[sM]
set pc[sM]=0
loop
exitwhen iM==0
set SM=iM
set iM=qc[iM]
set Fb[hb]="when calling EventListener in ClosureEvents, line 275"
set hb=hb+1
if Tl[SM]==0 then
if SM==0 then
call e6("Nullpointer exception when calling EventListener.EventListener","when calling error in ClosureEvents, line 98")
else
call e6("Called EventListener.EventListener on invalid object.","when calling error in ClosureEvents, line 98")
endif
endif
call mM(SM,"when calling destroyEventListener in ClosureEvents, line 98")
set hb=hb-1
endloop
endif
endif
set hb=hb-1
endfunction
function rM takes unit VN,string BN returns nothing
local integer NN
local integer MN
local integer wM
local integer uM
set Fb[hb]=BN
set hb=hb+1
call cM(GetUnitUserData(VN),"when calling unregisterEvents in ClosureEvents, line 251")
if Tbw(bc,GetHandleId(VN),"when calling has in ClosureEvents, line 252") then
set NN=mbw(bc,GetHandleId(VN),"when calling get in ClosureEvents, line 253")
call Zbw(bc,GetHandleId(VN),"when calling remove in ClosureEvents, line 254")
loop
exitwhen NN==0
set MN=NN
set NN=nc[NN]
call Ulw(MN,"when calling OnCastListener in ClosureEvents, line 258")
endloop
endif
if Tbw(bc,GetHandleId(VN),"when calling has in ClosureEvents, line 259") then
set wM=mbw(bc,GetHandleId(VN),"when calling get in ClosureEvents, line 260")
loop
exitwhen wM==0
set uM=wM
set wM=nc[wM]
call Ulw(uM,"when calling OnCastListener in ClosureEvents, line 264")
endloop
endif
set hb=hb-1
endfunction
function Wew takes nothing returns nothing
set hb=0
set Fb[hb]="ClosureEvents, line 283"
set hb=hb+1
call rM(cl,"when calling unregisterEventsForUnit in ClosureEvents, line 283")
set hb=hb-1
endfunction
function Wj takes nothing returns boolean
if GetUnitTypeId(GetDyingUnit())!=1747989049 then
return false
endif
return true
endfunction
function XH takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function LI takes nothing returns boolean
if GetResearched()!=1378890040 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890040,true)!=1 then
return false
endif
return true
endfunction
function XI takes nothing returns boolean
if not LI() then
return false
endif
return true
endfunction
function XY takes nothing returns nothing
local player DY=GetOwningPlayer(GetAttacker())
local player HY=GetOwningPlayer(GetAttacker())
local player JY
local player KY
local unit LY
set r[GetPlayerId(DY)+1]=r[GetPlayerId(HY)+1]+1
set JY=GetOwningPlayer(GetTriggerUnit())
set KY=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(JY)+1]=r[GetPlayerId(KY)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set LY=GetTriggerUnit()
call SetUnitState(LY,UNIT_STATE_LIFE,GetUnitState(LY,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set DY=null
set HY=null
set JY=null
set KY=null
set LY=null
endfunction
function fow takes integer pow,string eow returns trigger
local integer qow
local fogstate aow
local integer now
local trigger dow
set Fb[hb]=eow
set hb=hb+1
set qow=sl
set aow=ConvertFogState(pow)
set Fb[hb]="when calling saveFogState in TypeCasting, line 88"
set hb=hb+1
if wb[qow]==0 then
if qow==0 then
call e6("Nullpointer exception when calling Table.saveFogState","when calling error in Table, line 168")
else
call e6("Called Table.saveFogState on invalid object.","when calling error in Table, line 168")
endif
endif
call SaveFogStateHandle(MO,qow,0,aow)
set hb=hb-1
set now=sl
set Fb[hb]="when calling loadTrigger in TypeCasting, line 89"
set hb=hb+1
if wb[now]==0 then
if now==0 then
call e6("Nullpointer exception when calling Table.loadTrigger","when calling error in Table, line 111")
else
call e6("Called Table.loadTrigger on invalid object.","when calling error in Table, line 111")
endif
endif
set dow=LoadTriggerHandle(MO,now,0)
set hb=hb-1-1
set gf=dow
set aow=null
set dow=null
return gf
endfunction
function qSw takes string pSw returns boolean
local boolean eSw
set Fb[hb]=pSw
set hb=hb+1
set eSw=TriggerEvaluate(fow(mbw(vO,GetSpellAbilityId(),"when calling get in RegisterEvents, line 58"),"when calling triggerFromIndex in RegisterEvents, line 58"))
set hb=hb-1
return eSw
endfunction
function Xew takes nothing returns boolean
set hb=0
return qSw("RegisterEvents, line 58")
endfunction
function Xj takes nothing returns nothing
local player Ej=GetOwningPlayer(GetKillingUnit())
local playerstate Zj=PLAYER_STATE_RESOURCE_GOLD
local playerstate Uj
local playerstate Ij
local player Pj
local force Aj
local location Dj
local real Hj
local real Jj
local player Kj
local force Lj
if Zj==PLAYER_STATE_RESOURCE_GOLD then
set Uj=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(Ej,Uj,GetPlayerState(Ej,Uj)+500)
elseif Zj==PLAYER_STATE_RESOURCE_LUMBER then
set Ij=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(Ej,Ij,GetPlayerState(Ej,Ij)+500)
endif
call SetPlayerState(Ej,Zj,GetPlayerState(Ej,Zj)+500)
set Pj=GetOwningPlayer(GetKillingUnit())
set Aj=CreateForce()
call ForceAddPlayer(Aj,Pj)
if IsPlayerInForce(GetLocalPlayer(),Aj) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_083")
endif
set y=GetUnitLoc(GetDyingUnit())
set Kj=GetOwningPlayer(GetDyingUnit())
set Lj=CreateForce()
call ForceAddPlayer(Lj,Kj)
set Dj=y
set Hj=GetLocationX(Dj)
set Jj=GetLocationY(Dj)
if IsPlayerInForce(GetLocalPlayer(),Lj) then
call PingMinimap(Hj,Jj,2.00)
endif
call RemoveLocation(y)
set Ej=null
set Zj=null
set Uj=null
set Ij=null
set Pj=null
set Aj=null
set Dj=null
set Kj=null
set Lj=null
endfunction
function Xpw takes nothing returns boolean
local integer Lpw
set hb=0
set Fb[hb]="Abilities, line 1"
set hb=hb+1
set Fb[hb]="when calling asList in Abilities, line 17"
set hb=hb+1
set Lpw=F8("when calling new_LinkedList in LinkedList, line 391")
call ayw(Lpw,1093677642,"when calling add in LinkedList, line 393")
call ayw(Lpw,1093677641,"when calling add in LinkedList, line 393")
call ayw(Lpw,1093677640,"when calling add in LinkedList, line 393")
set hb=hb-1
set uS=Lpw
set hb=hb-1
return true
endfunction
function Lx takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function Xx takes nothing returns boolean
if not Lx() then
return false
endif
return true
endfunction
function RG takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989079 then
return false
endif
return true
endfunction
function TG takes nothing returns boolean
if not RG() then
return false
endif
return true
endfunction
function dG takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988826 then
return false
endif
return true
endfunction
function fG takes nothing returns boolean
if not dG() then
return false
endif
return true
endfunction
function aG takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988824 then
return false
endif
return true
endfunction
function nG takes nothing returns boolean
if not aG() then
return false
endif
return true
endfunction
function eG takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988825 then
return false
endif
return true
endfunction
function qG takes nothing returns boolean
if not eG() then
return false
endif
return true
endfunction
function YG takes nothing returns nothing
if qG() then
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747989047,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"Death Alternate")
endif
if nG() then
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747989046,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"Death Alternate")
endif
if fG() then
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747989077,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"Death Alternate")
endif
if TG() then
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747989078,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"Death Alternate")
endif
endfunction
function YJ takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function TP takes nothing returns boolean
if GetResearched()!=1378890052 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890052,true)!=1 then
return false
endif
return true
endfunction
function YP takes nothing returns boolean
if not TP() then
return false
endif
return true
endfunction
function YQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990097,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989594,0)
endfunction
function YU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989815,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989816,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989825,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989814,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989830,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651844,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989833,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989832,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989835,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989836,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651848,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651846,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989828,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989826,0)
endfunction
function T7 takes string e7 returns boolean
local playerunitevent q7
local playerunitevent a7
local integer n7
local integer d7
local integer f7
local integer R7
set Fb[hb]=e7
set hb=hb+1
set q7=EVENT_PLAYER_UNIT_DEATH
set Fb[hb]="when calling alloc_Closure in LimitEncampments, line 8"
set hb=hb+1
if fl==0 then
if Rl<32768 then
set Rl=Rl+1
set n7=Rl
set Tl[n7]=666
else
call e6("Out of memory: Could not create Closure.","when calling error in LimitEncampments, line 8")
set n7=0
endif
else
set fl=fl-1
set n7=dl[fl]
set Tl[n7]=666
endif
set hb=hb-1
set ec[n7]=0
set qc[n7]=0
set ac[n7]=0
set Fb[hb]="when calling add in LimitEncampments, line 8"
set hb=hb+1
set Fb[hb]="when calling toIntId in ClosureEvents, line 111"
set hb=hb+1
set d7=oc[GetHandleId(q7)]
if d7==0 then
set d7=CN(q7,"when calling registerEventId in ClosureEvents, line 228")
endif
set hb=hb-1
set ec[n7]=d7
if yc[ec[n7]]!=0 then
set ac[yc[ec[n7]]]=n7
set qc[n7]=yc[ec[n7]]
endif
set yc[ec[n7]]=n7
set hb=hb-1
set a7=EVENT_PLAYER_UNIT_CONSTRUCT_START
set Fb[hb]="when calling alloc_Closure in LimitEncampments, line 12"
set hb=hb+1
if fl==0 then
if Rl<32768 then
set Rl=Rl+1
set f7=Rl
set Tl[f7]=667
else
call e6("Out of memory: Could not create Closure.","when calling error in LimitEncampments, line 12")
set f7=0
endif
else
set fl=fl-1
set f7=dl[fl]
set Tl[f7]=667
endif
set hb=hb-1
set ec[f7]=0
set qc[f7]=0
set ac[f7]=0
set Fb[hb]="when calling add in LimitEncampments, line 12"
set hb=hb+1
set Fb[hb]="when calling toIntId in ClosureEvents, line 111"
set hb=hb+1
set R7=oc[GetHandleId(a7)]
if R7==0 then
set R7=CN(a7,"when calling registerEventId in ClosureEvents, line 228")
endif
set hb=hb-1
set ec[f7]=R7
if yc[ec[f7]]!=0 then
set ac[yc[ec[f7]]]=f7
set qc[f7]=yc[ec[f7]]
endif
set yc[ec[f7]]=f7
set hb=hb-1-1
set q7=null
set a7=null
return true
endfunction
function Yew takes nothing returns boolean
set hb=0
return T7("LimitEncampments, line 1")
endfunction
function Yg takes nothing returns nothing
local location pg
local location eg
local real qg
local real ag
local rect ng
local group dg
local group fg
local code Rg
local boolean Tg
set u=GetUnitLoc(GetSpellAbilityUnit())
set pg=u
set c=Location(GetLocationX(pg)+200.00,GetLocationY(pg)+0.00)
set eg=u
set qg=GetLocationX(eg)
set ag=GetLocationY(eg)
set O=Rect(qg-150,ag-140,qg+150,ag+140)
set ng=O
set dg=CreateGroup()
call GroupEnumUnitsInRect(dg,ng,null)
call DestroyBoolExpr(null)
set l=dg
set fg=l
set Rg=Wy
set Tg=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(fg,Rg)
if Tg then
call DestroyGroup(fg)
endif
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747988826,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"stand")
call DestroyGroup(l)
call RemoveLocation(c)
call RemoveLocation(u)
set pg=null
set eg=null
set ng=null
set dg=null
set fg=null
endfunction
function Yh takes nothing returns nothing
local player bh=GetOwningPlayer(GetSpellTargetUnit())
local playerstate yh=PLAYER_STATE_RESOURCE_LUMBER
local playerstate ph
local playerstate eh
local player qh
local force ah
local location nh
local real dh
local real fh
local player Rh
local force Th
if yh==PLAYER_STATE_RESOURCE_GOLD then
set ph=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(bh,ph,GetPlayerState(bh,ph)+250)
elseif yh==PLAYER_STATE_RESOURCE_LUMBER then
set eh=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(bh,eh,GetPlayerState(bh,eh)+250)
endif
call SetPlayerState(bh,yh,GetPlayerState(bh,yh)+250)
call RemoveUnit(GetSpellAbilityUnit())
set qh=GetOwningPlayer(GetSpellTargetUnit())
set ah=CreateForce()
call ForceAddPlayer(ah,qh)
if IsPlayerInForce(GetLocalPlayer(),ah) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_1229")
endif
set y=GetUnitLoc(GetSpellTargetUnit())
set Rh=GetOwningPlayer(GetSpellTargetUnit())
set Th=CreateForce()
call ForceAddPlayer(Th,Rh)
set nh=y
set dh=GetLocationX(nh)
set fh=GetLocationY(nh)
if IsPlayerInForce(GetLocalPlayer(),Th) then
call PingMinimap(dh,fh,2.00)
endif
call RemoveLocation(y)
set bh=null
set yh=null
set ph=null
set eh=null
set qh=null
set ah=null
set nh=null
set Rh=null
set Th=null
endfunction
function Tv takes nothing returns boolean
if GetResearched()!=1378889798 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889798,true)!=2 then
return false
endif
return true
endfunction
function Yv takes nothing returns boolean
if not Tv() then
return false
endif
return true
endfunction
function ZE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989814,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989825,0)
endfunction
function EJ takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990085 then
return false
endif
return true
endfunction
function ZJ takes nothing returns boolean
if not EJ() then
return false
endif
return true
endfunction
function ZM takes nothing returns boolean
set Tc=CreateGroup()
set gc=Filter(uf)
return true
endfunction
function EQ takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function ZQ takes nothing returns boolean
if not EQ() then
return false
endif
return true
endfunction
function Zew takes nothing returns nothing
set hb=0
set Fb[hb]="ClosureEvents, line 287"
set hb=hb+1
call TM("when calling generalEventCallback in ClosureEvents, line 287")
set hb=hb-1
endfunction
function Zm takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988818,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988552,0)
endfunction
function a6 takes nothing returns boolean
set uo=CreateTimer()
call TimerStart(uo,100000.,false,null)
call TimerStart(CreateTimer(),0.030,true,Of)
return true
endfunction
function qH takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990356 then
return false
endif
return true
endfunction
function aH takes nothing returns boolean
if not qH() then
return false
endif
return true
endfunction
function aP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990603,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990604,0)
endfunction
function aSw takes nothing returns boolean
return true
endfunction
function qU takes nothing returns boolean
if GetResearched()!=1378890038 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890038,true)!=1 then
return false
endif
return true
endfunction
function aU takes nothing returns boolean
if not qU() then
return false
endif
return true
endfunction
function WL takes string nL returns boolean
local trigger dL
local playerunitevent fL
local playerunitevent RL
local integer TL
local integer YL
local player GL
local location gL
local real hL
local integer FL
local integer kL
local trigger jL
local playerunitevent xL
local integer vL
local integer mL
local integer QL
set Fb[hb]=nL
set hb=hb+1
if xo then
set TL=5
set YL=1747988553
set GL=nO[0]
set gL=Location(-3000.0,1700.0)
set hL=0.
call GroupClear(bj_lastCreatedGroup)
loop
set TL=TL-1
exitwhen TL<0
call CreateUnitAtLocSaveLast(GL,YL,gL,hL)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
endif
set fL=EVENT_PLAYER_UNIT_SELECTED
set Fb[hb]="when calling alloc_Closure in CityManage, line 9"
set hb=hb+1
if fl==0 then
if Rl<32768 then
set Rl=Rl+1
set FL=Rl
set Tl[FL]=664
else
call e6("Out of memory: Could not create Closure.","when calling error in CityManage, line 9")
set FL=0
endif
else
set fl=fl-1
set FL=dl[fl]
set Tl[FL]=664
endif
set hb=hb-1
set ec[FL]=0
set qc[FL]=0
set ac[FL]=0
set Fb[hb]="when calling add in CityManage, line 9"
set hb=hb+1
set Fb[hb]="when calling toIntId in ClosureEvents, line 111"
set hb=hb+1
set kL=oc[GetHandleId(fL)]
if kL==0 then
set kL=CN(fL,"when calling registerEventId in ClosureEvents, line 228")
endif
set hb=hb-1
set ec[FL]=kL
if yc[ec[FL]]!=0 then
set ac[yc[ec[FL]]]=FL
set qc[FL]=yc[ec[FL]]
endif
set yc[ec[FL]]=FL
set hb=hb-1
set dL=CreateTrigger()
call TriggerAddCondition(dL,Condition(Kd))
call TriggerAddAction(dL,Ld)
set jL=dL
set xL=EVENT_PLAYER_UNIT_SPELL_CAST
set vL=0
loop
call TriggerRegisterPlayerUnitEvent(jL,Player(vL),xL,null)
set vL=vL+1
exitwhen vL==bj_MAX_PLAYER_SLOTS
endloop
set RL=EVENT_PLAYER_UNIT_ATTACKED
set Fb[hb]="when calling alloc_Closure in CityManage, line 33"
set hb=hb+1
if fl==0 then
if Rl<32768 then
set Rl=Rl+1
set mL=Rl
set Tl[mL]=665
else
call e6("Out of memory: Could not create Closure.","when calling error in CityManage, line 33")
set mL=0
endif
else
set fl=fl-1
set mL=dl[fl]
set Tl[mL]=665
endif
set hb=hb-1
set ec[mL]=0
set qc[mL]=0
set ac[mL]=0
set Fb[hb]="when calling add in CityManage, line 33"
set hb=hb+1
set Fb[hb]="when calling toIntId in ClosureEvents, line 111"
set hb=hb+1
set QL=oc[GetHandleId(RL)]
if QL==0 then
set QL=CN(RL,"when calling registerEventId in ClosureEvents, line 228")
endif
set hb=hb-1
set ec[mL]=QL
if yc[ec[mL]]!=0 then
set ac[yc[ec[mL]]]=mL
set qc[mL]=yc[ec[mL]]
endif
set yc[ec[mL]]=mL
set hb=hb-1-1
set dL=null
set fL=null
set RL=null
set GL=null
set gL=null
set jL=null
set xL=null
return true
endfunction
function aew takes nothing returns boolean
set hb=0
return WL("CityManage, line 1")
endfunction
function av takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988551,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989081,0)
endfunction
function b7 takes nothing returns boolean
return true
endfunction
function lD takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())==1747988531 then
return true
endif
if GetUnitTypeId(GetTriggerUnit())==1747990328 then
return true
endif
if GetUnitTypeId(GetTriggerUnit())==1747989592 then
return true
endif
if GetUnitTypeId(GetTriggerUnit())==1747990086 then
return true
endif
return false
endfunction
function bD takes nothing returns boolean
if not lD() then
return false
endif
return true
endfunction
function bE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651832,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651830,0)
endfunction
function bI takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990594,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990584,0)
endfunction
function lQ takes nothing returns boolean
if GetResearched()!=1378889783 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889783,true)!=2 then
return false
endif
return true
endfunction
function bQ takes nothing returns boolean
if not lQ() then
return false
endif
return true
endfunction
function lZ takes nothing returns boolean
if GetResearched()!=1378890034 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890034,true)!=2 then
return false
endif
return true
endfunction
function bZ takes nothing returns boolean
if not lZ() then
return false
endif
return true
endfunction
function bew takes nothing returns boolean
local integer Sew
local integer cew
local integer oew
local integer Oew
local integer lew
set hb=0
set Fb[hb]="City, line 1"
set hb=hb+1
set hS=120.0
set FS[0]=0.0020
set FS[1]=0.0025
set Fb[hb]="when calling asList in City, line 36"
set hb=hb+1
set Sew=F8("when calling new_LinkedList in LinkedList, line 391")
call ayw(Sew,10000,"when calling add in LinkedList, line 393")
call ayw(Sew,20000,"when calling add in LinkedList, line 393")
set hb=hb-1
set kS[0]=Sew
set Fb[hb]="when calling asList in City, line 37"
set hb=hb+1
set cew=F8("when calling new_LinkedList in LinkedList, line 391")
call ayw(cew,30000,"when calling add in LinkedList, line 393")
call ayw(cew,40000,"when calling add in LinkedList, line 393")
set hb=hb-1
set kS[1]=cew
set Fb[hb]="when calling asList in City, line 38"
set hb=hb+1
set oew=F8("when calling new_LinkedList in LinkedList, line 391")
call ayw(oew,60000,"when calling add in LinkedList, line 393")
call ayw(oew,90000,"when calling add in LinkedList, line 393")
set hb=hb-1
set kS[2]=oew
set Fb[hb]="when calling asList in City, line 39"
set hb=hb+1
set Oew=F8("when calling new_LinkedList in LinkedList, line 391")
call ayw(Oew,120000,"when calling add in LinkedList, line 393")
call ayw(Oew,160000,"when calling add in LinkedList, line 393")
set hb=hb-1
set kS[3]=Oew
set Fb[hb]="when calling asList in City, line 40"
set hb=hb+1
set lew=F8("when calling new_LinkedList in LinkedList, line 391")
call ayw(lew,180000,"when calling add in LinkedList, line 393")
call ayw(lew,220000,"when calling add in LinkedList, line 393")
set hb=hb-1
set kS[4]=lew
set jS[0]=1.0
set jS[1]=0.5
set jS[2]=1.6
set jS[3]=2.0
set xS[0]=0.0
set xS[1]=20.0
set xS[2]=-25.0
set xS[3]=-60.0
set vS[0]=0.05
set vS[1]=0.0
set vS[2]=0.15
set vS[3]=0.30
set mS[0]=1.0
set mS[1]=1.1
set mS[2]=0.85
set mS[3]=0.7
set hb=hb-1
return true
endfunction
function bx takes nothing returns nothing
local player wx=GetOwningPlayer(GetKillingUnit())
local playerstate ux=PLAYER_STATE_RESOURCE_LUMBER
local playerstate rx
local playerstate sx
local player tx
local force ix
local location Sx
local real cx
local real ox
local player Ox
local force lx
if ux==PLAYER_STATE_RESOURCE_GOLD then
set rx=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(wx,rx,GetPlayerState(wx,rx)+500)
elseif ux==PLAYER_STATE_RESOURCE_LUMBER then
set sx=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(wx,sx,GetPlayerState(wx,sx)+500)
endif
call SetPlayerState(wx,ux,GetPlayerState(wx,ux)+500)
set tx=GetOwningPlayer(GetKillingUnit())
set ix=CreateForce()
call ForceAddPlayer(ix,tx)
if IsPlayerInForce(GetLocalPlayer(),ix) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_084")
endif
set y=GetUnitLoc(GetDyingUnit())
set Ox=GetOwningPlayer(GetDyingUnit())
set lx=CreateForce()
call ForceAddPlayer(lx,Ox)
set Sx=y
set cx=GetLocationX(Sx)
set ox=GetLocationY(Sx)
if IsPlayerInForce(GetLocalPlayer(),lx) then
call PingMinimap(cx,ox,2.00)
endif
call RemoveLocation(y)
set wx=null
set ux=null
set rx=null
set sx=null
set tx=null
set ix=null
set Sx=null
set Ox=null
set lx=null
endfunction
function SA takes nothing returns boolean
if GetUnitTypeId(GetConstructedStructure())==1747989040 then
return true
endif
if GetUnitTypeId(GetConstructedStructure())==1747990361 then
return true
endif
if GetUnitTypeId(GetConstructedStructure())==1747989831 then
return true
endif
return false
endfunction
function cA takes nothing returns boolean
if e[GetPlayerId(GetOwningPlayer(GetConstructedStructure()))+1]!=false then
return false
endif
if not SA() then
return false
endif
return true
endfunction
function cF takes nothing returns nothing
local player Vh=GetOwningPlayer(GetSpellTargetUnit())
local playerstate Bh=PLAYER_STATE_RESOURCE_GOLD
local playerstate Nh
local playerstate Mh
local player wF
local force uF
local location rF
local real sF
local real tF
local player iF
local force SF
if Bh==PLAYER_STATE_RESOURCE_GOLD then
set Nh=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(Vh,Nh,GetPlayerState(Vh,Nh)+250)
elseif Bh==PLAYER_STATE_RESOURCE_LUMBER then
set Mh=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(Vh,Mh,GetPlayerState(Vh,Mh)+250)
endif
call SetPlayerState(Vh,Bh,GetPlayerState(Vh,Bh)+250)
call RemoveUnit(GetSpellAbilityUnit())
set wF=GetOwningPlayer(GetSpellTargetUnit())
set uF=CreateForce()
call ForceAddPlayer(uF,wF)
if IsPlayerInForce(GetLocalPlayer(),uF) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_1230")
endif
set y=GetUnitLoc(GetSpellTargetUnit())
set iF=GetOwningPlayer(GetSpellTargetUnit())
set SF=CreateForce()
call ForceAddPlayer(SF,iF)
set rF=y
set sF=GetLocationX(rF)
set tF=GetLocationY(rF)
if IsPlayerInForce(GetLocalPlayer(),SF) then
call PingMinimap(sF,tF,2.00)
endif
call RemoveLocation(y)
set Vh=null
set Bh=null
set Nh=null
set Mh=null
set wF=null
set uF=null
set rF=null
set iF=null
set SF=null
endfunction
function SJ takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989060 then
return false
endif
return true
endfunction
function cJ takes nothing returns boolean
if not SJ() then
return false
endif
return true
endfunction
function ch takes nothing returns nothing
local group th
local code ih
local boolean Sh
set b=GetUnitsOfTypeIdAll(1747989301)
set th=w
set ih=Hy
set Sh=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(th,ih)
if Sh then
call DestroyGroup(th)
endif
call DestroyGroup(b)
set th=null
endfunction
function clw takes nothing returns boolean
return true
endfunction
function cm takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988559,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989064,0)
endfunction
function d6 takes nothing returns boolean
call CreateGroup()
return true
endfunction
function dE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989582,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989583,0)
endfunction
function dI takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989825,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989817,0)
endfunction
function dQ takes nothing returns nothing
set s=bj_FORCE_ALL_PLAYERS
call ForForce(s,Oe)
endfunction
function nT takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989317 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function dT takes nothing returns boolean
if not nT() then
return false
endif
return true
endfunction
function nZ takes nothing returns boolean
if GetResearched()!=1378890033 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890033,true)!=1 then
return false
endif
return true
endfunction
function dZ takes nothing returns boolean
if not nZ() then
return false
endif
return true
endfunction
function Q1 takes string v1 returns boolean
local integer m1
set Fb[hb]=v1
set hb=hb+1
set Fb[hb]="when calling alloc_Closure in Credits, line 5"
set hb=hb+1
if Pl==0 then
if Al<32768 then
set Al=Al+1
set m1=Al
set Dl[m1]=633
else
call e6("Out of memory: Could not create Closure.","when calling error in Credits, line 5")
set m1=0
endif
else
set Pl=Pl-1
set m1=Il[Pl]
set Dl[m1]=633
endif
set hb=hb-1
set Fb[hb]="when calling doPeriodically in Credits, line 5"
set hb=hb+1
set Fb[hb]="when calling start in ClosureTimers, line 36"
set hb=hb+1
if Dl[m1]==0 then
if m1==0 then
call e6("Nullpointer exception when calling CallbackPeriodic.start","when calling error in ClosureTimers, line 88")
else
call e6("Called CallbackPeriodic.start on invalid object.","when calling error in ClosureTimers, line 88")
endif
endif
call l3(m1,600,"when calling start in ClosureTimers, line 88")
set hb=hb-1-1-1
return true
endfunction
function dew takes nothing returns boolean
set hb=0
return Q1("Credits, line 1")
endfunction
function dx takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988788,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988535,0)
endfunction
function pJ takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747988530 then
return false
endif
return true
endfunction
function eJ takes nothing returns boolean
if not pJ() then
return false
endif
return true
endfunction
function WK takes string xK returns boolean
local playerunitevent vK
local integer mK
local integer QK
set Fb[hb]=xK
set hb=hb+1
set vK=EVENT_PLAYER_UNIT_ATTACKED
set Fb[hb]="when calling alloc_Closure in CastleCapture, line 8"
set hb=hb+1
if fl==0 then
if Rl<32768 then
set Rl=Rl+1
set mK=Rl
set Tl[mK]=662
else
call e6("Out of memory: Could not create Closure.","when calling error in CastleCapture, line 8")
set mK=0
endif
else
set fl=fl-1
set mK=dl[fl]
set Tl[mK]=662
endif
set hb=hb-1
set ec[mK]=0
set qc[mK]=0
set ac[mK]=0
set Fb[hb]="when calling add in CastleCapture, line 8"
set hb=hb+1
set Fb[hb]="when calling toIntId in ClosureEvents, line 111"
set hb=hb+1
set QK=oc[GetHandleId(vK)]
if QK==0 then
set QK=CN(vK,"when calling registerEventId in ClosureEvents, line 228")
endif
set hb=hb-1
set ec[mK]=QK
if yc[ec[mK]]!=0 then
set ac[yc[ec[mK]]]=mK
set qc[mK]=yc[ec[mK]]
endif
set yc[ec[mK]]=mK
set hb=hb-1-1
set vK=null
return true
endfunction
function eew takes nothing returns boolean
set hb=0
return WK("CastleCapture, line 1")
endfunction
function em takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988812,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988559,0)
endfunction
function f6 takes nothing returns nothing
call GroupAddUnit(so,GetEnumUnit())
endfunction
function fD takes nothing returns nothing
local integer yD=1
local integer pD=1751343475
local player eD=GetOwningPlayer(GetTriggerUnit())
local rect dD=bj_mapInitialPlayableArea
local location nD=Location(GetRectCenterX(dD),GetRectCenterY(dD))
local location qD=Location(GetLocationX(nD)+100000000.00,GetLocationY(nD)+100000000.00)
local real aD=bj_UNIT_FACING
call GroupClear(bj_lastCreatedGroup)
loop
set yD=yD-1
exitwhen yD<0
call CreateUnitAtLocSaveLast(eD,pD,qD,aD)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
call ShowUnit(bj_lastCreatedUnit,false)
set eD=null
set qD=null
set nD=null
set dD=null
endfunction
function dW takes nothing returns boolean
if GetResearched()!=1378889806 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889806,true)!=2 then
return false
endif
return true
endfunction
function fW takes nothing returns boolean
if not dW() then
return false
endif
return true
endfunction
function fZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989828,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989827,0)
endfunction
function g2 takes string T2 returns boolean
local integer Y2
local integer G2
set Fb[hb]=T2
set hb=hb+1
set Fb[hb]="when calling alloc_Closure in Economy, line 43"
set hb=hb+1
if Pl==0 then
if Al<32768 then
set Al=Al+1
set Y2=Al
set Dl[Y2]=635
else
call e6("Out of memory: Could not create Closure.","when calling error in Economy, line 43")
set Y2=0
endif
else
set Pl=Pl-1
set Y2=Il[Pl]
set Dl[Y2]=635
endif
set hb=hb-1
set Fb[hb]="when calling doPeriodically in Economy, line 43"
set hb=hb+1
set Fb[hb]="when calling start in ClosureTimers, line 36"
set hb=hb+1
if Dl[Y2]==0 then
if Y2==0 then
call e6("Nullpointer exception when calling CallbackPeriodic.start","when calling error in ClosureTimers, line 88")
else
call e6("Called CallbackPeriodic.start on invalid object.","when calling error in ClosureTimers, line 88")
endif
endif
call l3(Y2,0.333333343,"when calling start in ClosureTimers, line 88")
set hb=hb-1-1
set Fb[hb]="when calling alloc_Closure in Economy, line 50"
set hb=hb+1
if Pl==0 then
if Al<32768 then
set Al=Al+1
set G2=Al
set Dl[G2]=636
else
call e6("Out of memory: Could not create Closure.","when calling error in Economy, line 50")
set G2=0
endif
else
set Pl=Pl-1
set G2=Il[Pl]
set Dl[G2]=636
endif
set hb=hb-1
set Fb[hb]="when calling doPeriodically in Economy, line 50"
set hb=hb+1
set Fb[hb]="when calling start in ClosureTimers, line 36"
set hb=hb+1
if Dl[G2]==0 then
if G2==0 then
call e6("Nullpointer exception when calling CallbackPeriodic.start","when calling error in ClosureTimers, line 88")
else
call e6("Called CallbackPeriodic.start on invalid object.","when calling error in ClosureTimers, line 88")
endif
endif
call l3(G2,10.0,"when calling start in ClosureTimers, line 88")
set hb=hb-1-1-1
return true
endfunction
function few takes nothing returns boolean
set hb=0
return g2("Economy, line 1")
endfunction
function gE takes nothing returns nothing
set s=bj_FORCE_ALL_PLAYERS
call ForForce(s,He)
endfunction
function gH takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function GI takes nothing returns boolean
if GetResearched()!=1378890051 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890051,true)!=2 then
return false
endif
return true
endfunction
function gI takes nothing returns boolean
if not GI() then
return false
endif
return true
endfunction
function gT takes nothing returns nothing
local player fT=GetOwningPlayer(GetAttacker())
local player RT=GetOwningPlayer(GetAttacker())
local player TT
local player YT
local unit GT
set r[GetPlayerId(fT)+1]=r[GetPlayerId(RT)+1]+1
set TT=GetOwningPlayer(GetTriggerUnit())
set YT=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(TT)+1]=r[GetPlayerId(YT)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set GT=GetTriggerUnit()
call SetUnitState(GT,UNIT_STATE_LIFE,GetUnitState(GT,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set fT=null
set RT=null
set TT=null
set YT=null
set GT=null
endfunction
function XSw takes rect PSw,string ASw,integer DSw,integer HSw,string JSw returns nothing
local group KSw
local unit LSw
set Fb[hb]=JSw
set hb=hb+1
set KSw=CreateGroup()
call GroupEnumUnitsInRect(KSw,PSw,null)
call DestroyBoolExpr(null)
set LSw=FirstOfGroup(KSw)
call GroupRemoveUnit(KSw,LSw)
set QS[gS]=AB(LSw,ASw,DSw,HSw,"when calling new_City in SettingCities, line 7")
set hb=hb-1
set KSw=null
set LSw=null
endfunction
function c9 takes string K8 returns nothing
local integer L8
local integer X8
local real C8
local player V8
local integer B8
local integer N8
local integer M8
local boolean w9
local location u9
local location r9
local integer s9
local real t9
local real i9
local real S9
set Fb[hb]=K8
set hb=hb+1
set L8=24
set X8=6
set C8=100.0
loop
exitwhen L8<=0
set B8=1
set N8=X8
loop
exitwhen B8>N8
set t9=B8*6.28318/X8
set i9=311.2+C8*Cos(t9)
set S9=5166.7+C8*Sin(t9)
set V8=nO[24-L8+B8-1]
set M8=bO[GetPlayerId(V8)]
set K8="when calling isInGame in MainInit, line 55"
set Fb[hb]="when calling isInGame in MainInit, line 55"
set hb=hb+1
if Rb[M8]==0 then
if M8==0 then
call e6("Nullpointer exception when calling PlayerStats.isInGame","when calling error in PlayerStats, line 14")
else
call e6("Called PlayerStats.isInGame on invalid object.","when calling error in PlayerStats, line 14")
endif
endif
set w9=eO[M8]
set hb=hb-1
if w9 then
set u9=Location(i9,S9)
set r9=Location(311.2,5166.7)
call CreateNUnitsAtLoc(1,1747988554,V8,u9,bj_RADTODEG*Atan2(GetLocationY(r9)-GetLocationY(u9),GetLocationX(r9)-GetLocationX(u9)))
endif
set B8=B8+1
endloop
set C8=C8+50.0
set L8=L8-X8
set X8=X8+2
if L8<2147483647 then
set s9=L8
else
set s9=2147483647
endif
if X8<s9 then
set s9=X8
endif
set X8=s9
endloop
set hb=hb-1
set V8=null
set u9=null
set r9=null
endfunction
function siw takes player Xtw,string Ctw returns integer
local integer Vtw
local integer Btw
local integer Ntw
local player Mtw
local integer wiw
local integer uiw
local boolean riw
set Fb[hb]=Ctw
set hb=hb+1
set Fb[hb]="when calling PlayerStats in PlayerStats, line 129"
set hb=hb+1
if db==0 then
if fb<32768 then
set fb=fb+1
set Btw=fb
set Rb[Btw]=711
else
call e6("Out of memory: Could not create PlayerStats.","when calling error in PlayerStats, line 6")
set Btw=0
endif
else
set db=db-1
set Btw=nb[db]
set Rb[Btw]=711
endif
set hb=hb-1
set Vtw=Btw
set Ntw=Btw
set Mtw=Xtw
set Fb[hb]="when calling construct_PlayerStats in PlayerStats, line 129"
set hb=hb+1
set eO[Btw]=false
set aO[Btw]=0
set yO[Btw]=-1
set qO[Btw]=-1
set pO[Btw]=Xtw
if GetPlayerSlotState(Xtw)==PLAYER_SLOT_STATE_PLAYING then
set riw=GetPlayerController(Xtw)==MAP_CONTROL_USER
else
set riw=false
endif
set eO[Btw]=riw
set wiw=0
set uiw=23
loop
exitwhen wiw>uiw
if nO[wiw]==Mtw then
call rqw(Ntw,wiw,-1,"when writing array PlayerStats_alliance_states in PlayerStats, line 137")
else
call rqw(Ntw,wiw,bj_ALLIANCE_UNALLIED,"when writing array PlayerStats_alliance_states in PlayerStats, line 139")
endif
set wiw=wiw+1
endloop
set hb=hb-1-1
set Mtw=null
return Vtw
endfunction
function J8 takes string v8 returns boolean
local integer m8
local integer Q8
local trigger W8
local integer E8
local integer Z8
local integer U8
local player I8
local integer P8
local player A8
local boolean D8
local boolean H8
set Fb[hb]=v8
set hb=hb+1
set Go[0]="You're playing |cffffff65Crusade over Europe|r.\nA grand strategy medieval game inspired by many games and genres.\nCreate alliances and dissolve them just as easily, declare war on your neighbours and |cfff5da16Conquer Europe|r.\n|cffff0000To skip the tutorial, press ESC|r"
set Go[1]="Use your |cffff8040Settler|r to choose the location of your Kingdom, use the ability |cffffff80Create Capitol|r on any Town Hall to build your Capitol.\nChoose your postion carefully and be mindful of the other players positions."
set Go[2]="|cfff5da16Mechanics|r\n\n|cff80ff00Supply & Nutrition:|r All units and building will continuously lose Hit Points if not supplied by |cff00f7ffCities or Supply Horses|r.\n|cffff0000Public Order|r represents satisfaction level of population of each city and can be checked in top-right menu.\nLow Public Order will cause revolts."
set Go[3]="|cfff5da16Combat & Diplomacy|r\n\nBuild your army but keep in mind that every army will have its weaknesses. Use general's Mass Control ability to quickly manipulate your army.\nUse |cffffff80Diplomacy|r (F1) menu to create Alliances and Declare War."
set Go[4]="|cfff5da16Economy|r\n\n|cffffff80Florins|r (Gold) are given each Turn (2 minutes), you can increase the amount generated by capturing |cffffff80Cities|r or precious |cffffff80Ores|r and upgrading them into |cffffff80Mines|r.\nLumber is harvested from Trees.\n|cffff0000You can check public order of currently selected city and your income in top-right menu|r"
set E8=0
set Z8=0
set U8=23
loop
exitwhen Z8>U8
set I8=nO[Z8]
if GetPlayerSlotState(I8)==PLAYER_SLOT_STATE_PLAYING then
set D8=GetPlayerController(I8)==MAP_CONTROL_USER
else
set D8=false
endif
if D8 then
set E8=E8+1
endif
set Z8=Z8+1
endloop
set ho=E8
if jo then
call yww("Debug info is enabled. Only for Red.")
endif
if xo then
call DisplayTimedTextToPlayer(dO,0.,0.,45.,"Debug mode is on.")
endif
set Fb[hb]="when calling setupCities in MainInit, line 98"
set hb=hb+1
call XSw(h,"Adrianopolis",3,1,"when calling newCity in SettingCities, line 26")
call XSw(Ss,"Arta",3,0,"when calling newCity in SettingCities, line 27")
call XSw(Br,"Athens",3,1,"when calling newCity in SettingCities, line 28")
call XSw(Vr,"Ragusa",3,0,"when calling newCity in SettingCities, line 29")
call XSw(ls,"Canakkale",3,0,"when calling newCity in SettingCities, line 30")
call XSw(cs,"Candia",3,0,"when calling newCity in SettingCities, line 31")
call XSw(k,"Constantinople",3,4,"when calling newCity in SettingCities, line 32")
call XSw(is,"Corinth",3,0,"when calling newCity in SettingCities, line 33")
call XSw(g,"Durazzo",3,0,"when calling newCity in SettingCities, line 34")
call XSw(ws,"Nikomedeia",3,0,"when calling newCity in SettingCities, line 35")
call XSw(lu,"Kutaisi",3,0,"when calling newCity in SettingCities, line 36")
call XSw(Dw,"Nicae",3,2,"when calling newCity in SettingCities, line 37")
call XSw(Zw,"Nicosia",3,0,"when calling newCity in SettingCities, line 38")
call XSw(Nr,"Rhodes",3,0,"when calling newCity in SettingCities, line 39")
call XSw(x,"Scopia",3,0,"when calling newCity in SettingCities, line 40")
call XSw(Pw,"Smyrna",3,0,"when calling newCity in SettingCities, line 41")
call XSw(bu,"Tbilisi",3,0,"when calling newCity in SettingCities, line 42")
call XSw(Ew,"Trebizond",3,1,"when calling newCity in SettingCities, line 43")
call XSw(F,"Thessalonika",3,3,"when calling newCity in SettingCities, line 44")
call XSw(Qu,"Astrakhan'",1,2,"when calling newCity in SettingCities, line 48")
call XSw(Gw,"Azaq",1,0,"when calling newCity in SettingCities, line 49")
call XSw(ru,"Baia",1,0,"when calling newCity in SettingCities, line 50")
call XSw(cu,"Bryansk",1,0,"when calling newCity in SettingCities, line 51")
call XSw(sw,"Caffa",1,0,"when calling newCity in SettingCities, line 52")
call XSw(U,"Constanta",1,0,"when calling newCity in SettingCities, line 53")
call XSw(iu,"Dnipro",1,0,"when calling newCity in SettingCities, line 54")
call XSw(nw,"Halych",1,0,"when calling newCity in SettingCities, line 55")
call XSw(gw,"Kiev",1,2,"when calling newCity in SettingCities, line 56")
call XSw(N,"Konigsberg",1,0,"when calling newCity in SettingCities, line 57")
call XSw(uw,"Hrodna",1,0,"when calling newCity in SettingCities, line 58")
call XSw(hw,"Minsk",1,1,"when calling newCity in SettingCities, line 59")
call XSw(Su,"Moscow",1,0,"when calling newCity in SettingCities, line 60")
call XSw(Sw,"Novgorod",1,0,"when calling newCity in SettingCities, line 61")
call XSw(tu,"Olesh'e",1,0,"when calling newCity in SettingCities, line 62")
call XSw(cw,"Polotsk",1,0,"when calling newCity in SettingCities, line 63")
call XSw(tw,"Pskov",1,0,"when calling newCity in SettingCities, line 64")
call XSw(iw,"Reval",1,0,"when calling newCity in SettingCities, line 65")
call XSw(M,"Riga",1,1,"when calling newCity in SettingCities, line 66")
call XSw(bs,"Bulgar",1,0,"when calling newCity in SettingCities, line 67")
call XSw(Wu,"Ryazan'",1,0,"when calling newCity in SettingCities, line 68")
call XSw(Ou,"Sarkel",1,0,"when calling newCity in SettingCities, line 69")
call XSw(Fw,"Smolensk",1,1,"when calling newCity in SettingCities, line 70")
call XSw(L,"Sofia",1,0,"when calling newCity in SettingCities, line 71")
call XSw(I,"Targovitse",1,1,"when calling newCity in SettingCities, line 72")
call XSw(uu,"Tmutarakan'",1,0,"when calling newCity in SettingCities, line 73")
call XSw(Mr,"Turku",1,0,"when calling newCity in SettingCities, line 74")
call XSw(rw,"Vilnius",1,1,"when calling newCity in SettingCities, line 75")
call XSw(su,"Zhytomir",1,0,"when calling newCity in SettingCities, line 76")
call XSw(au,"Acre",2,2,"when calling newCity in SettingCities, line 80")
call XSw(mw,"Adana",2,0,"when calling newCity in SettingCities, line 81")
call XSw(as,"Alamut",2,0,"when calling newCity in SettingCities, line 82")
call XSw(nu,"Al-Aqaba",2,0,"when calling newCity in SettingCities, line 83")
call XSw(Nw,"Alexandria",2,2,"when calling newCity in SettingCities, line 84")
call XSw(Kw,"Algiers",2,0,"when calling newCity in SettingCities, line 85")
call XSw(Aw,"Ankara",2,1,"when calling newCity in SettingCities, line 86")
call XSw(Ww,"Antioch",2,2,"when calling newCity in SettingCities, line 87")
call XSw(us,"Badajoz",2,0,"when calling newCity in SettingCities, line 88")
call XSw(Os,"Baghdad",2,4,"when calling newCity in SettingCities, line 89")
call XSw(ns,"Baku",2,0,"when calling newCity in SettingCities, line 90")
call XSw(Cw,"Benghazi",2,1,"when calling newCity in SettingCities, line 91")
call XSw(es,"Beleb-el-Anab",2,0,"when calling newCity in SettingCities, line 92")
call XSw(wu,"Cairo",2,3,"when calling newCity in SettingCities, line 93")
call XSw(Tr,"Cordoba",2,4,"when calling newCity in SettingCities, line 94")
call XSw(yu,"Damascus",2,2,"when calling newCity in SettingCities, line 95")
call XSw(Mw,"Damietta",2,1,"when calling newCity in SettingCities, line 96")
call XSw(Ru,"Diyarbakir",2,0,"when calling newCity in SettingCities, line 97")
call XSw(Iw,"Edessa",2,1,"when calling newCity in SettingCities, line 98")
call XSw(Tu,"Erez",2,1,"when calling newCity in SettingCities, line 99")
call XSw(Hw,"Fes",2,3,"when calling newCity in SettingCities, line 100")
call XSw(eu,"Gaza",2,0,"when calling newCity in SettingCities, line 101")
call XSw(Rr,"Granada",2,2,"when calling newCity in SettingCities, line 102")
call XSw(xw,"Isparta",2,0,"when calling newCity in SettingCities, line 103")
call XSw(Uw,"Jerusalem",2,3,"when calling newCity in SettingCities, line 104")
call XSw(vw,"Kayseri",2,1,"when calling newCity in SettingCities, line 105")
call XSw(os,"Kerak",2,0,"when calling newCity in SettingCities, line 106")
call XSw(ds,"Kermanshah",2,0,"when calling newCity in SettingCities, line 107")
call XSw(Qw,"Konya",2,0,"when calling newCity in SettingCities, line 108")
call XSw(Sr,"Lisbon",2,0,"when calling newCity in SettingCities, line 109")
call XSw(Ur,"Luxor",2,0,"when calling newCity in SettingCities, line 110")
call XSw(tr,"Madrid",2,0,"when calling newCity in SettingCities, line 111")
call XSw(Lw,"Mahdya",2,0,"when calling newCity in SettingCities, line 112")
call XSw(Zr,"Marrakesh",2,3,"when calling newCity in SettingCities, line 113")
call XSw(Bw,"Medina",2,2,"when calling newCity in SettingCities, line 114")
call XSw(ps,"Melilla",2,0,"when calling newCity in SettingCities, line 115")
call XSw(qu,"Mosul",2,1,"when calling newCity in SettingCities, line 116")
call XSw(Yr,"Murcia",2,1,"when calling newCity in SettingCities, line 117")
call XSw(Jw,"Oran",2,0,"when calling newCity in SettingCities, line 118")
call XSw(mu,"Palma",2,1,"when calling newCity in SettingCities, line 119")
call XSw(du,"Quarisiya",2,1,"when calling newCity in SettingCities, line 120")
call XSw(Er,"Silves",2,0,"when calling newCity in SettingCities, line 121")
call XSw(jw,"Sinop",2,0,"when calling newCity in SettingCities, line 122")
call XSw(fu,"Tamiya",2,0,"when calling newCity in SettingCities, line 123")
call XSw(pu,"Tartus",2,0,"when calling newCity in SettingCities, line 124")
call XSw(qs,"Tabriz",2,0,"when calling newCity in SettingCities, line 125")
call XSw(Xw,"Tripoli",2,1,"when calling newCity in SettingCities, line 126")
call XSw(Yw,"Tunis",2,1,"when calling newCity in SettingCities, line 127")
call XSw(Gr,"Valencia",2,0,"when calling newCity in SettingCities, line 128")
call XSw(ou,"Yerevan",2,0,"when calling newCity in SettingCities, line 129")
call XSw(J,"Aarhus",0,1,"when calling newCity in SettingCities, line 133")
call XSw(Zu,"Aberdeen",0,1,"when calling newCity in SettingCities, line 134")
call XSw(Ar,"Ajaccio",0,0,"when calling newCity in SettingCities, line 135")
call XSw(dr,"Ancona",0,1,"when calling newCity in SettingCities, line 136")
call XSw(Pr,"Angers",0,0,"when calling newCity in SettingCities, line 137")
call XSw(yr,"Antwerp",0,0,"when calling newCity in SettingCities, line 138")
call XSw(ur,"Barcelona",0,1,"when calling newCity in SettingCities, line 139")
call XSw(Kr,"Bari",0,0,"when calling newCity in SettingCities, line 140")
call XSw(A,"Belgrade",0,1,"when calling newCity in SettingCities, line 141")
call XSw(mr,"Bergen",0,1,"when calling newCity in SettingCities, line 142")
call XSw(hr,"Bern",0,0,"when calling newCity in SettingCities, line 143")
call XSw(ar,"Bologna",0,1,"when calling newCity in SettingCities, line 144")
call XSw(Mu,"Bordeaux",0,1,"when calling newCity in SettingCities, line 145")
call XSw(P,"Brasov",0,0,"when calling newCity in SettingCities, line 146")
call XSw(br,"Bruges",0,0,"when calling newCity in SettingCities, line 147")
call XSw(f,"Burgh",0,0,"when calling newCity in SettingCities, line 148")
call XSw(sr,"Burgos",0,1,"when calling newCity in SettingCities, line 149")
call XSw(Lu,"Caen",0,0,"when calling newCity in SettingCities, line 150")
call XSw(Du,"Caenarfon",0,0,"when calling newCity in SettingCities, line 151")
call XSw(Dr,"Cagliari",0,0,"when calling newCity in SettingCities, line 152")
call XSw(R,"Cardiff",0,0,"when calling newCity in SettingCities, line 153")
call XSw(Bu,"Clermont",0,1,"when calling newCity in SettingCities, line 154")
call XSw(ju,"Cologne",0,1,"when calling newCity in SettingCities, line 155")
call XSw(Vu,"Dijon",0,0,"when calling newCity in SettingCities, line 156")
call XSw(Pu,"Dublin",0,0,"when calling newCity in SettingCities, line 157")
call XSw(Eu,"Edinburgh",0,0,"when calling newCity in SettingCities, line 158")
call XSw(vr,"Eikundarsund",0,0,"when calling newCity in SettingCities, line 159")
call XSw(Q,"Esztergom",0,1,"when calling newCity in SettingCities, line 160")
call XSw(Ku,"Exeter",0,0,"when calling newCity in SettingCities, line 161")
call XSw(ww,"Gdansk",0,0,"when calling newCity in SettingCities, line 162")
call XSw(D,"Flensburg",0,0,"when calling newCity in SettingCities, line 163")
call XSw(xu,"Frankfurt",0,1,"when calling newCity in SettingCities, line 164")
call XSw(T,"Galway",0,0,"when calling newCity in SettingCities, line 165")
call XSw(pr,"Genoa",0,2,"when calling newCity in SettingCities, line 166")
call XSw(Tw,"Groningen",0,0,"when calling newCity in SettingCities, line 167")
call XSw(ku,"Innsbruck",0,0,"when calling newCity in SettingCities, line 168")
call XSw(Uu,"Inverness",0,0,"when calling newCity in SettingCities, line 169")
call XSw(Au,"Desmond",0,0,"when calling newCity in SettingCities, line 170")
call XSw(Jr,"Reggio",0,0,"when calling newCity in SettingCities, line 172")
call XSw(ts,"Kalmar",0,0,"when calling newCity in SettingCities, line 173")
call XSw(V,"Kassa",0,0,"when calling newCity in SettingCities, line 174")
call XSw(E,"Krakow",0,2,"when calling newCity in SettingCities, line 175")
call XSw(rr,"Leon",0,1,"when calling newCity in SettingCities, line 176")
call XSw(Hu,"London",0,0,"when calling newCity in SettingCities, line 177")
call XSw(kr,"Lund",0,0,"when calling newCity in SettingCities, line 178")
call XSw(Fr,"Lyon",0,0,"when calling newCity in SettingCities, line 179")
call XSw(K,"Madgeburg",0,0,"when calling newCity in SettingCities, line 180")
call XSw(lr,"Marsellie",0,1,"when calling newCity in SettingCities, line 181")
call XSw(Cr,"Metz",0,0,"when calling newCity in SettingCities, line 182")
call XSw(er,"Milan",0,1,"when calling newCity in SettingCities, line 183")
call XSw(Hr,"Naples",0,1,"when calling newCity in SettingCities, line 184")
call XSw(gr,"Nuremburg",0,0,"when calling newCity in SettingCities, line 185")
call XSw(Wr,"Nykoping",0,0,"when calling newCity in SettingCities, line 186")
call XSw(rs,"Oporto",0,0,"when calling newCity in SettingCities, line 187")
call XSw(xr,"Oslo",0,1,"when calling newCity in SettingCities, line 188")
call XSw(ys,"Buda",0,1,"when calling newCity in SettingCities, line 189")
call XSw(Lr,"Palermo",0,3,"when calling newCity in SettingCities, line 190")
call XSw(cr,"Pamplona",0,0,"when calling newCity in SettingCities, line 191")
call XSw(Cu,"Paris",0,1,"when calling newCity in SettingCities, line 192")
call XSw(nr,"Pisa",0,0,"when calling newCity in SettingCities, line 193")
call XSw(X,"Plock",0,0,"when calling newCity in SettingCities, line 194")
call XSw(C,"Poznan",0,1,"when calling newCity in SettingCities, line 195")
call XSw(m,"Prague",0,0,"when calling newCity in SettingCities, line 196")
call XSw(G,"Zadar",0,0,"when calling newCity in SettingCities, line 197")
call XSw(Ir,"Rennes",0,0,"when calling newCity in SettingCities, line 198")
call XSw(Xu,"Rheims",0,0,"when calling newCity in SettingCities, line 199")
call XSw(fr,"Rome",0,1,"when calling newCity in SettingCities, line 200")
call XSw(H,"Roskilde",0,0,"when calling newCity in SettingCities, line 201")
call XSw(ir,"Salamanca",0,0,"when calling newCity in SettingCities, line 202")
call XSw(Fu,"Salzburg",0,0,"when calling newCity in SettingCities, line 203")
call XSw(jr,"Skara",0,0,"when calling newCity in SettingCities, line 204")
call XSw(W,"Stettin",0,0,"when calling newCity in SettingCities, line 205")
call XSw(ss,"Stockholm",0,1,"when calling newCity in SettingCities, line 206")
call XSw(Xr,"Syracuse",0,0,"when calling newCity in SettingCities, line 207")
call XSw(Nu,"Toulouse",0,0,"when calling newCity in SettingCities, line 208")
call XSw(B,"Varad",0,0,"when calling newCity in SettingCities, line 209")
call XSw(qr,"Venice",0,2,"when calling newCity in SettingCities, line 210")
call XSw(v,"Vienna",0,0,"when calling newCity in SettingCities, line 211")
call XSw(Qr,"Visby",0,0,"when calling newCity in SettingCities, line 212")
call XSw(j,"Warwick",0,0,"when calling newCity in SettingCities, line 213")
call XSw(Ju,"Winchester",0,1,"when calling newCity in SettingCities, line 214")
call XSw(Z,"Wroclaw",0,0,"when calling newCity in SettingCities, line 215")
call XSw(Iu,"York",0,1,"when calling newCity in SettingCities, line 216")
call XSw(Y,"Zagreb",0,0,"when calling newCity in SettingCities, line 217")
call XSw(wr,"Zaragoza",0,0,"when calling newCity in SettingCities, line 218")
call XSw(vu,"Hamburg",0,1,"when calling newCity in SettingCities, line 219")
set hb=hb-1
call SetForceAllianceStateBJ(bj_FORCE_ALL_PLAYERS,bj_FORCE_PLAYER[PLAYER_NEUTRAL_PASSIVE],bj_ALLIANCE_NEUTRAL)
call SetForceAllianceStateBJ(bj_FORCE_ALL_PLAYERS,bj_FORCE_ALL_PLAYERS,bj_ALLIANCE_UNALLIED)
call SetForceAllianceStateBJ(Lc,Lc,bj_ALLIANCE_NEUTRAL)
call SetForceAllianceStateBJ(Xc,Xc,bj_ALLIANCE_NEUTRAL)
call SetForceAllianceStateBJ(Cc,Cc,bj_ALLIANCE_NEUTRAL)
call SetForceAllianceStateBJ(Vc,Vc,bj_ALLIANCE_NEUTRAL)
set m8=0
set Q8=23
loop
exitwhen m8>Q8
call SetPlayerState(nO[m8],PLAYER_STATE_RESOURCE_GOLD,250)
call SetPlayerState(nO[m8],PLAYER_STATE_RESOURCE_LUMBER,200)
if xo then
call v9(nO[m8])
endif
call SetPlayerTechMaxAllowed(nO[m8],1747988789,1)
set bO[m8]=siw(nO[m8],"when calling new_PlayerStats in MainInit, line 121")
set P8=bO[m8]
set A8=nO[m8]
if GetPlayerSlotState(A8)==PLAYER_SLOT_STATE_PLAYING then
set H8=GetPlayerController(A8)==MAP_CONTROL_USER
else
set H8=false
endif
set v8="when calling setInGame in MainInit, line 122"
set Fb[hb]="when calling setInGame in MainInit, line 122"
set hb=hb+1
if Rb[P8]==0 then
if P8==0 then
call e6("Nullpointer exception when calling PlayerStats.setInGame","when calling error in PlayerStats, line 17")
else
call e6("Called PlayerStats.setInGame on invalid object.","when calling error in PlayerStats, line 17")
endif
endif
set eO[P8]=H8
set hb=hb-1
set m8=m8+1
endloop
call c9("when calling setPlayersAtStart in MainInit, line 124")
set W8=CreateTrigger()
call TriggerRegisterTimerEvent(W8,0.01,false)
call TriggerAddAction(W8,bf)
set hb=hb-1
set W8=null
set I8=null
set A8=null
return true
endfunction
function gew takes nothing returns boolean
set hb=0
return J8("MainInit, line 1")
endfunction
function Gx takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function gx takes nothing returns boolean
if not Gx() then
return false
endif
return true
endfunction
function gD takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989325 then
return false
endif
return true
endfunction
function hD takes nothing returns boolean
if not gD() then
return false
endif
return true
endfunction
function hF takes nothing returns nothing
local player eF=GetOwningPlayer(GetSpellTargetUnit())
local playerstate qF=PLAYER_STATE_RESOURCE_GOLD
local playerstate aF
local playerstate nF
local player dF
local force fF
local location RF
local real TF
local real YF
local player GF
local force gF
if qF==PLAYER_STATE_RESOURCE_GOLD then
set aF=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(eF,aF,GetPlayerState(eF,aF)+500)
elseif qF==PLAYER_STATE_RESOURCE_LUMBER then
set nF=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(eF,nF,GetPlayerState(eF,nF)+500)
endif
call SetPlayerState(eF,qF,GetPlayerState(eF,qF)+500)
call RemoveUnit(GetSpellAbilityUnit())
set dF=GetOwningPlayer(GetSpellTargetUnit())
set fF=CreateForce()
call ForceAddPlayer(fF,dF)
if IsPlayerInForce(GetLocalPlayer(),fF) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_1231")
endif
set y=GetUnitLoc(GetSpellTargetUnit())
set GF=GetOwningPlayer(GetSpellTargetUnit())
set gF=CreateForce()
call ForceAddPlayer(gF,GF)
set RF=y
set TF=GetLocationX(RF)
set YF=GetLocationY(RF)
if IsPlayerInForce(GetLocalPlayer(),gF) then
call PingMinimap(TF,YF,2.00)
endif
call RemoveLocation(y)
set eF=null
set qF=null
set aF=null
set nF=null
set dF=null
set fF=null
set RF=null
set GF=null
set gF=null
endfunction
function hI takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990607,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990583,0)
endfunction
function hK takes nothing returns boolean
return true
endfunction
function gZ takes nothing returns boolean
if GetResearched()!=1378890033 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890033,true)!=2 then
return false
endif
return true
endfunction
function hZ takes nothing returns boolean
if not gZ() then
return false
endif
return true
endfunction
function X9 takes string W9 returns boolean
local playerunitevent E9
local playerunitevent Z9
local integer U9
local integer I9
local integer P9
local integer A9
local integer D9
local integer H9
local integer J9
local integer K9
local integer L9
set Fb[hb]=W9
set hb=hb+1
set Io=B6("when calling new_HashMap in MassControl, line 7")
set U9=R2I(500000)
set I9=R2I(700000)
set P9=R2I(1000000)
set Fb[hb]="when calling asList in MassControl, line 8"
set hb=hb+1
set A9=F8("when calling new_LinkedList in LinkedList, line 391")
call ayw(A9,U9,"when calling add in LinkedList, line 393")
call ayw(A9,I9,"when calling add in LinkedList, line 393")
call ayw(A9,P9,"when calling add in LinkedList, line 393")
set hb=hb-1
set Po=A9
set Fb[hb]="when calling asList in MassControl, line 14"
set hb=hb+1
set D9=F8("when calling new_LinkedList in LinkedList, line 391")
call ayw(D9,1211118401,"when calling add in LinkedList, line 393")
call ayw(D9,1211119699,"when calling add in LinkedList, line 393")
call ayw(D9,1211119701,"when calling add in LinkedList, line 393")
call ayw(D9,1211119700,"when calling add in LinkedList, line 393")
set hb=hb-1
set Ao=D9
set E9=EVENT_PLAYER_UNIT_SPELL_CAST
set Fb[hb]="when calling alloc_Closure in MassControl, line 22"
set hb=hb+1
if fl==0 then
if Rl<32768 then
set Rl=Rl+1
set H9=Rl
set Tl[H9]=671
else
call e6("Out of memory: Could not create Closure.","when calling error in MassControl, line 22")
set H9=0
endif
else
set fl=fl-1
set H9=dl[fl]
set Tl[H9]=671
endif
set hb=hb-1
set ec[H9]=0
set qc[H9]=0
set ac[H9]=0
set Fb[hb]="when calling add in MassControl, line 22"
set hb=hb+1
set Fb[hb]="when calling toIntId in ClosureEvents, line 111"
set hb=hb+1
set J9=oc[GetHandleId(E9)]
if J9==0 then
set J9=CN(E9,"when calling registerEventId in ClosureEvents, line 228")
endif
set hb=hb-1
set ec[H9]=J9
if yc[ec[H9]]!=0 then
set ac[yc[ec[H9]]]=H9
set qc[H9]=yc[ec[H9]]
endif
set yc[ec[H9]]=H9
set hb=hb-1
set Z9=EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER
set Fb[hb]="when calling alloc_Closure in MassControl, line 32"
set hb=hb+1
if fl==0 then
if Rl<32768 then
set Rl=Rl+1
set K9=Rl
set Tl[K9]=672
else
call e6("Out of memory: Could not create Closure.","when calling error in MassControl, line 32")
set K9=0
endif
else
set fl=fl-1
set K9=dl[fl]
set Tl[K9]=672
endif
set hb=hb-1
set ec[K9]=0
set qc[K9]=0
set ac[K9]=0
set Fb[hb]="when calling add in MassControl, line 32"
set hb=hb+1
set Fb[hb]="when calling toIntId in ClosureEvents, line 111"
set hb=hb+1
set L9=oc[GetHandleId(Z9)]
if L9==0 then
set L9=CN(Z9,"when calling registerEventId in ClosureEvents, line 228")
endif
set hb=hb-1
set ec[K9]=L9
if yc[ec[K9]]!=0 then
set ac[yc[ec[K9]]]=K9
set qc[K9]=yc[ec[K9]]
endif
set yc[ec[K9]]=K9
set hb=hb-1-1
set E9=null
set Z9=null
return true
endfunction
function hew takes nothing returns boolean
set hb=0
return X9("MassControl, line 1")
endfunction
function hk takes nothing returns nothing
local player ek=GetOwningPlayer(GetKillingUnit())
local playerstate qk=PLAYER_STATE_RESOURCE_GOLD
local playerstate ak
local playerstate nk
local player dk
local force fk
local location Rk
local real Tk
local real Yk
local player Gk
local force gk
if qk==PLAYER_STATE_RESOURCE_GOLD then
set ak=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(ek,ak,GetPlayerState(ek,ak)+125)
elseif qk==PLAYER_STATE_RESOURCE_LUMBER then
set nk=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(ek,nk,GetPlayerState(ek,nk)+125)
endif
call SetPlayerState(ek,qk,GetPlayerState(ek,qk)+125)
set dk=GetOwningPlayer(GetKillingUnit())
set fk=CreateForce()
call ForceAddPlayer(fk,dk)
if IsPlayerInForce(GetLocalPlayer(),fk) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_091")
endif
set y=GetUnitLoc(GetDyingUnit())
set Gk=GetOwningPlayer(GetDyingUnit())
set gk=CreateForce()
call ForceAddPlayer(gk,Gk)
set Rk=y
set Tk=GetLocationX(Rk)
set Yk=GetLocationY(Rk)
if IsPlayerInForce(GetLocalPlayer(),gk) then
call PingMinimap(Tk,Yk,2.00)
endif
call RemoveLocation(y)
set ek=null
set qk=null
set ak=null
set nk=null
set dk=null
set fk=null
set Rk=null
set Gk=null
set gk=null
endfunction
function hx takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988561,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988784,0)
endfunction
function i2 takes nothing returns boolean
return true
endfunction
function iD takes nothing returns nothing
local integer NA=1
local integer MA=1751868773
local player wD=GetOwningPlayer(GetTriggerUnit())
local rect tD=bj_mapInitialPlayableArea
local location sD=Location(GetRectCenterX(tD),GetRectCenterY(tD))
local location uD=Location(GetLocationX(sD)+100000000.00,GetLocationY(sD)+100000000.00)
local real rD=bj_UNIT_FACING
call GroupClear(bj_lastCreatedGroup)
loop
set NA=NA-1
exitwhen NA<0
call CreateUnitAtLocSaveLast(wD,MA,uD,rD)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
call ShowUnit(bj_lastCreatedUnit,false)
set wD=null
set uD=null
set sD=null
set tD=null
endfunction
function tK takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990328 then
return false
endif
return true
endfunction
function iK takes nothing returns boolean
if not tK() then
return false
endif
return true
endfunction
function iQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651843,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651842,0)
endfunction
function tW takes nothing returns boolean
if GetResearched()!=1378889807 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889807,true)!=2 then
return false
endif
return true
endfunction
function iW takes nothing returns boolean
if not tW() then
return false
endif
return true
endfunction
function iZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989815,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989838,0)
endfunction
function icw takes nothing returns boolean
set WO[0]="Terrible! Terrible news, my lord!"
set WO[1]="The messenger came to us with horrific news! May we execute him?"
set WO[2]="A mere nightmare, Your Mightiness!"
set EO[0]="Holy Mother of God, we have horrific news!"
set EO[1]="Lord Preserve us, Great Prince!"
set EO[2]="Great Prince, we have horrific news!"
set ZO[0]="Allah be merciful! I bring terrible news"
set ZO[1]="Oh, Great Sultan! We have terrible news"
set ZO[2]="Oh, Great one! I bring ill news"
set UO[0]="Saints save us, we have some most horrific news!"
set UO[1]="My Basileus! We have horrific news!"
set UO[2]="My Basileus, by the grace of our lord. We have horrific news!"
set IO[0]="My King, we have received news concerning our realm"
set IO[1]="The messenger arrived with news. No matter, could I execute him?"
set IO[2]="My liege I bring news about the realm"
set PO[0]="Great Prince, a messenger came with news"
set PO[1]="May the God bless you, Great Prince, we have some news"
set PO[2]="There is something you should know, Great Prince"
set AO[0]="My Sultan! We have news"
set AO[1]="Praise be to Allah, Sultan! We bring news"
set AO[2]="Great Sultan! We have some news"
set DO[0]="My Basileus, we have some news"
set DO[1]="My Basileus, we have some news"
set DO[2]="My Basileus, we have some news"
set HO[0]="Milord! Good news!"
set HO[1]="Praise the Holy Lord! We have good news"
set HO[2]="My King, we bring great news for you!"
set JO[0]="By the grace of our Lord, we bring good news!"
set JO[1]="We received great news my Lord! Still the Messenger deserves to be pusnished"
set JO[2]="My Lord, we have received delightful news!"
set KO[0]="Praise be to Allah, Sultan! We have great news"
set KO[1]="Good tidings Sultan! I bring good news"
set KO[2]="Allah is glorious, Sultan! We have great news"
set LO[0]="Good news, my Basileus!"
set LO[1]="Praise the Holy Lord, we bring great news, my Basileus!"
set LO[2]="We received good news my Basileus! We shouldn’t blind this messenger"
set XO[0]="Your Majesty, important news!"
set XO[1]="May the God bless you, my lord. There is something you must know!"
set XO[2]="There is something that needs your attention, my lord!"
set CO[0]="By the Saints! Great Prince, you must hear to this"
set CO[1]="You should hear this, Great Prince!"
set CO[2]="You need to see this, Great Prince!"
set VO[0]="Great one, urgent news must be brought to your attention!"
set VO[1]="My Sultan, there is something you need to know!"
set VO[2]="My Great Sultan, there is something you must know!"
set BO[0]="My Basileus, there is something you need to know!"
set BO[1]="My Basileus, we can not delay this news!"
set BO[2]="My Basileus, you should be aware of this!"
set NO[0]="|cffffd900Med."
set NO[1]="|cff00ff00Low"
set NO[2]="|cffff0000High"
set NO[3]="|cff940000Harsh"
return true
endfunction
function rL takes string wL returns boolean
local integer uL
set Fb[hb]=wL
set hb=hb+1
set sS=B6("when calling new_HashMap in CityBaseTaxes, line 5")
set uL=sS
set Fb[hb]="when calling saveInt in CityBaseTaxes, line 9"
set hb=hb+1
if wb[uL]==0 then
if uL==0 then
call e6("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call e6("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(MO,uL,1747988529,20)
set hb=hb-1
set Fb[hb]="when calling saveInt in CityBaseTaxes, line 10"
set hb=hb+1
if wb[uL]==0 then
if uL==0 then
call e6("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call e6("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(MO,uL,1747988530,50)
set hb=hb-1
set Fb[hb]="when calling saveInt in CityBaseTaxes, line 11"
set hb=hb+1
if wb[uL]==0 then
if uL==0 then
call e6("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call e6("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(MO,uL,1747988531,120)
set hb=hb-1
set Fb[hb]="when calling saveInt in CityBaseTaxes, line 12"
set hb=hb+1
if wb[uL]==0 then
if uL==0 then
call e6("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call e6("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(MO,uL,1747990326,20)
set hb=hb-1
set Fb[hb]="when calling saveInt in CityBaseTaxes, line 13"
set hb=hb+1
if wb[uL]==0 then
if uL==0 then
call e6("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call e6("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(MO,uL,1747990327,50)
set hb=hb-1
set Fb[hb]="when calling saveInt in CityBaseTaxes, line 14"
set hb=hb+1
if wb[uL]==0 then
if uL==0 then
call e6("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call e6("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(MO,uL,1747990328,120)
set hb=hb-1
set Fb[hb]="when calling saveInt in CityBaseTaxes, line 15"
set hb=hb+1
if wb[uL]==0 then
if uL==0 then
call e6("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call e6("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(MO,uL,1747990084,20)
set hb=hb-1
set Fb[hb]="when calling saveInt in CityBaseTaxes, line 16"
set hb=hb+1
if wb[uL]==0 then
if uL==0 then
call e6("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call e6("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(MO,uL,1747990087,50)
set hb=hb-1
set Fb[hb]="when calling saveInt in CityBaseTaxes, line 17"
set hb=hb+1
if wb[uL]==0 then
if uL==0 then
call e6("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call e6("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(MO,uL,1747990085,120)
set hb=hb-1
set Fb[hb]="when calling saveInt in CityBaseTaxes, line 18"
set hb=hb+1
if wb[uL]==0 then
if uL==0 then
call e6("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call e6("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(MO,uL,1747989590,20)
set hb=hb-1
set Fb[hb]="when calling saveInt in CityBaseTaxes, line 19"
set hb=hb+1
if wb[uL]==0 then
if uL==0 then
call e6("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call e6("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(MO,uL,1747989591,50)
set hb=hb-1
set Fb[hb]="when calling saveInt in CityBaseTaxes, line 20"
set hb=hb+1
if wb[uL]==0 then
if uL==0 then
call e6("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call e6("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(MO,uL,1747989592,120)
set hb=hb-1
set Fb[hb]="when calling saveInt in CityBaseTaxes, line 22"
set hb=hb+1
if wb[uL]==0 then
if uL==0 then
call e6("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call e6("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(MO,uL,1747989555,5)
set hb=hb-1
set Fb[hb]="when calling saveInt in CityBaseTaxes, line 23"
set hb=hb+1
if wb[uL]==0 then
if uL==0 then
call e6("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call e6("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(MO,uL,1747989297,10)
set hb=hb-1
set Fb[hb]="when calling saveInt in CityBaseTaxes, line 24"
set hb=hb+1
if wb[uL]==0 then
if uL==0 then
call e6("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call e6("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(MO,uL,1747989325,30)
set hb=hb-1-1
return true
endfunction
function iew takes nothing returns boolean
set hb=0
return rL("CityBaseTaxes, line 1")
endfunction
function ig takes nothing returns nothing
local location VG
local location BG
local real NG
local real MG
local rect wg
local group ug
local group rg
local code sg
local boolean tg
set u=GetUnitLoc(GetSpellAbilityUnit())
set VG=u
set S=Location(GetLocationX(VG)+0.00,GetLocationY(VG)+200.00)
set BG=u
set NG=GetLocationX(BG)
set MG=GetLocationY(BG)
set o=Rect(NG-140,MG-150,NG+140,MG+150)
set wg=o
set ug=CreateGroup()
call GroupEnumUnitsInRect(ug,wg,null)
call DestroyBoolExpr(null)
set l=ug
set rg=l
set sg=vy
set tg=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(rg,sg)
if tg then
call DestroyGroup(rg)
endif
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747988824,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"stand")
call DestroyGroup(l)
call RemoveLocation(S)
call RemoveLocation(u)
set VG=null
set BG=null
set wg=null
set ug=null
set rg=null
endfunction
function itw takes nothing returns boolean
return true
endfunction
function j8 takes nothing returns boolean
return true
endfunction
function jE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989825,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989817,0)
endfunction
function kJ takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990327 then
return false
endif
return true
endfunction
function jJ takes nothing returns boolean
if not kJ() then
return false
endif
return true
endfunction
function jK takes nothing returns boolean
return true
endfunction
function kQ takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function jQ takes nothing returns boolean
if not kQ() then
return false
endif
return true
endfunction
function jcw takes nothing returns boolean
return true
endfunction
function Cyw takes integer Tyw,integer Yyw,integer Gyw,integer gyw,integer hyw,integer Fyw,integer kyw,integer jyw,integer xyw,integer vyw,integer myw,integer Qyw,integer Wyw,integer Eyw,integer Zyw,integer Uyw,integer Iyw,integer Pyw,integer Ayw,integer Dyw,integer Hyw,integer Jyw,integer Kyw,string Lyw returns integer
local integer Xyw
set Fb[hb]=Lyw
set hb=hb+1
set Xyw=F8("when calling new_LinkedList in LinkedList, line 391")
call ayw(Xyw,Tyw,"when calling add in LinkedList, line 393")
call ayw(Xyw,Yyw,"when calling add in LinkedList, line 393")
call ayw(Xyw,Gyw,"when calling add in LinkedList, line 393")
call ayw(Xyw,gyw,"when calling add in LinkedList, line 393")
call ayw(Xyw,hyw,"when calling add in LinkedList, line 393")
call ayw(Xyw,Fyw,"when calling add in LinkedList, line 393")
call ayw(Xyw,kyw,"when calling add in LinkedList, line 393")
call ayw(Xyw,jyw,"when calling add in LinkedList, line 393")
call ayw(Xyw,xyw,"when calling add in LinkedList, line 393")
call ayw(Xyw,vyw,"when calling add in LinkedList, line 393")
call ayw(Xyw,myw,"when calling add in LinkedList, line 393")
call ayw(Xyw,Qyw,"when calling add in LinkedList, line 393")
call ayw(Xyw,Wyw,"when calling add in LinkedList, line 393")
call ayw(Xyw,Eyw,"when calling add in LinkedList, line 393")
call ayw(Xyw,Zyw,"when calling add in LinkedList, line 393")
call ayw(Xyw,Uyw,"when calling add in LinkedList, line 393")
call ayw(Xyw,Iyw,"when calling add in LinkedList, line 393")
call ayw(Xyw,Pyw,"when calling add in LinkedList, line 393")
call ayw(Xyw,Ayw,"when calling add in LinkedList, line 393")
call ayw(Xyw,Dyw,"when calling add in LinkedList, line 393")
call ayw(Xyw,Hyw,"when calling add in LinkedList, line 393")
call ayw(Xyw,Jyw,"when calling add in LinkedList, line 393")
call ayw(Xyw,Kyw,"when calling add in LinkedList, line 393")
set hb=hb-1
return Xyw
endfunction
function hiw takes string Tiw returns boolean
local playerunitevent Yiw
local integer Giw
local integer giw
set Fb[hb]=Tiw
set hb=hb+1
set FO=Cyw(1747988557,1747989075,1747990102,1747988785,1747989839,1747990101,1747989554,1747989041,1747990344,1747989059,1747989060,1747988844,1747990351,1747990352,1747990356,1747989331,1747990350,1747989809,1747990353,1747990354,1747990355,1747988568,1747990341,"when calling asList in RangeChecks, line 5")
set Yiw=EVENT_PLAYER_UNIT_CONSTRUCT_START
set Fb[hb]="when calling alloc_Closure in RangeChecks, line 10"
set hb=hb+1
if fl==0 then
if Rl<32768 then
set Rl=Rl+1
set Giw=Rl
set Tl[Giw]=675
else
call e6("Out of memory: Could not create Closure.","when calling error in RangeChecks, line 10")
set Giw=0
endif
else
set fl=fl-1
set Giw=dl[fl]
set Tl[Giw]=675
endif
set hb=hb-1
set ec[Giw]=0
set qc[Giw]=0
set ac[Giw]=0
set Fb[hb]="when calling add in RangeChecks, line 10"
set hb=hb+1
set Fb[hb]="when calling toIntId in ClosureEvents, line 111"
set hb=hb+1
set giw=oc[GetHandleId(Yiw)]
if giw==0 then
set giw=CN(Yiw,"when calling registerEventId in ClosureEvents, line 228")
endif
set hb=hb-1
set ec[Giw]=giw
if yc[ec[Giw]]!=0 then
set ac[yc[ec[Giw]]]=Giw
set qc[Giw]=yc[ec[Giw]]
endif
set yc[ec[Giw]]=Giw
set hb=hb-1-1
set Yiw=null
return true
endfunction
function jew takes nothing returns boolean
set hb=0
return hiw("RangeChecks, line 1")
endfunction
function kh takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988801 then
return false
endif
if GetUnitTypeId(GetSpellTargetUnit())!=1747988787 then
return false
endif
return true
endfunction
function jh takes nothing returns boolean
if not kh() then
return false
endif
return true
endfunction
function jm takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989082,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989072,0)
endfunction
function jow takes nothing returns boolean
return true
endfunction
function k0w takes nothing returns boolean
return true
endfunction
function k8 takes nothing returns boolean
return true
endfunction
function FE takes nothing returns boolean
if GetResearched()!=1378889818 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889818,true)!=1 then
return false
endif
return true
endfunction
function kE takes nothing returns boolean
if not FE() then
return false
endif
return true
endfunction
function kG takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989047 then
return false
endif
return true
endfunction
function kK takes nothing returns boolean
set rS=nO[PLAYER_NEUTRAL_PASSIVE]
return true
endfunction
function kU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990324,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990325,0)
endfunction
function kW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651841,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651831,0)
endfunction
function FY takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989044 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function kY takes nothing returns boolean
if not FY() then
return false
endif
return true
endfunction
function Qsw takes string jsw returns boolean
local playerevent xsw
local integer vsw
local integer msw
set Fb[hb]=jsw
set hb=hb+1
set xsw=EVENT_PLAYER_LEAVE
set Fb[hb]="when calling alloc_Closure in OnPlayerLeave, line 6"
set hb=hb+1
if fl==0 then
if Rl<32768 then
set Rl=Rl+1
set vsw=Rl
set Tl[vsw]=674
else
call e6("Out of memory: Could not create Closure.","when calling error in OnPlayerLeave, line 6")
set vsw=0
endif
else
set fl=fl-1
set vsw=dl[fl]
set Tl[vsw]=674
endif
set hb=hb-1
set ec[vsw]=0
set qc[vsw]=0
set ac[vsw]=0
set Fb[hb]="when calling add in OnPlayerLeave, line 6"
set hb=hb+1
set Fb[hb]="when calling toIntId in ClosureEvents, line 111"
set hb=hb+1
set msw=oc[GetHandleId(xsw)]
if msw==0 then
set msw=CN(xsw,"when calling registerEventId in ClosureEvents, line 228")
endif
set hb=hb-1
set ec[vsw]=msw
if yc[ec[vsw]]!=0 then
set ac[yc[ec[vsw]]]=vsw
set qc[vsw]=yc[ec[vsw]]
endif
set yc[ec[vsw]]=vsw
set hb=hb-1-1
set xsw=null
return true
endfunction
function kew takes nothing returns boolean
set hb=0
return Qsw("OnPlayerLeave, line 1")
endfunction
function kg takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989078 then
return false
endif
return true
endfunction
function kj takes nothing returns nothing
local player aj=GetOwningPlayer(GetSpellTargetUnit())
local playerstate nj=PLAYER_STATE_RESOURCE_GOLD
local playerstate dj
local playerstate fj
local player Rj
local force Tj
local location Yj
local real Gj
local real gj
local player hj
local force Fj
if nj==PLAYER_STATE_RESOURCE_GOLD then
set dj=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(aj,dj,GetPlayerState(aj,dj)+500)
elseif nj==PLAYER_STATE_RESOURCE_LUMBER then
set fj=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(aj,fj,GetPlayerState(aj,fj)+500)
endif
call SetPlayerState(aj,nj,GetPlayerState(aj,nj)+500)
call RemoveUnit(GetSpellAbilityUnit())
set Rj=GetOwningPlayer(GetSpellTargetUnit())
set Tj=CreateForce()
call ForceAddPlayer(Tj,Rj)
if IsPlayerInForce(GetLocalPlayer(),Tj) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_1234")
endif
set y=GetUnitLoc(GetSpellTargetUnit())
set hj=GetOwningPlayer(GetSpellTargetUnit())
set Fj=CreateForce()
call ForceAddPlayer(Fj,hj)
set Yj=y
set Gj=GetLocationX(Yj)
set gj=GetLocationY(Yj)
if IsPlayerInForce(GetLocalPlayer(),Fj) then
call PingMinimap(Gj,gj,2.00)
endif
call RemoveLocation(y)
set aj=null
set nj=null
set dj=null
set fj=null
set Rj=null
set Tj=null
set Yj=null
set hj=null
set Fj=null
endfunction
function Fm takes nothing returns boolean
if GetResearched()!=1378889801 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889801,true)!=2 then
return false
endif
return true
endfunction
function km takes nothing returns boolean
if not Fm() then
return false
endif
return true
endfunction
function kow takes nothing returns boolean
return true
endfunction
function ksw takes nothing returns boolean
return true
endfunction
function OE takes nothing returns boolean
if GetResearched()!=1378889808 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889808,true)!=1 then
return false
endif
return true
endfunction
function lE takes nothing returns boolean
if not OE() then
return false
endif
return true
endfunction
function lH takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function OI takes nothing returns boolean
if GetResearched()!=1378890049 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890049,true)!=2 then
return false
endif
return true
endfunction
function lI takes nothing returns boolean
if not OI() then
return false
endif
return true
endfunction
function lU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651844,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651845,0)
endfunction
function lcw takes nothing returns boolean
return true
endfunction
function lg takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989077 then
return false
endif
return true
endfunction
function Oh takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988792 then
return false
endif
if GetUnitTypeId(GetSpellTargetUnit())!=1747988787 then
return false
endif
return true
endfunction
function lh takes nothing returns boolean
if not Oh() then
return false
endif
return true
endfunction
function m9 takes nothing returns nothing
set mo=mo+0.01
endfunction
function mH takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function vI takes nothing returns boolean
if GetResearched()!=1378890053 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890053,true)!=1 then
return false
endif
return true
endfunction
function mI takes nothing returns boolean
if not vI() then
return false
endif
return true
endfunction
function Ltw takes integer Htw,integer Jtw returns nothing
local integer Ktw
if yO[Htw]!=-1 then
call ForceRemovePlayer(Bc[yO[Htw]],pO[Htw])
endif
set yO[Htw]=Jtw
call ForceAddPlayer(Bc[yO[Htw]],pO[Htw])
call SetPlayerTechMaxAllowed(pO[Htw],1747990087,0)
call SetPlayerTechMaxAllowed(pO[Htw],1747990088,0)
call SetPlayerTechMaxAllowed(pO[Htw],1747989558,0)
call SetPlayerTechMaxAllowed(pO[Htw],1747989575,0)
call SetPlayerTechMaxAllowed(pO[Htw],1747990339,0)
call SetPlayerTechMaxAllowed(pO[Htw],1747990340,0)
call SetPlayerTechMaxAllowed(pO[Htw],1747988528,0)
call SetPlayerTechMaxAllowed(pO[Htw],1747988532,0)
set Ktw=yO[Htw]
if Ktw==0 then
call SetPlayerTechMaxAllowed(pO[Htw],1747988528,-1)
call SetPlayerTechMaxAllowed(pO[Htw],1747988532,-1)
elseif Ktw==1 then
call SetPlayerTechMaxAllowed(pO[Htw],1747990339,-1)
call SetPlayerTechMaxAllowed(pO[Htw],1747990340,-1)
elseif Ktw==2 then
call SetPlayerTechMaxAllowed(pO[Htw],1747990087,-1)
call SetPlayerTechMaxAllowed(pO[Htw],1747990088,-1)
elseif Ktw==3 then
call SetPlayerTechMaxAllowed(pO[Htw],1747989558,-1)
call SetPlayerTechMaxAllowed(pO[Htw],1747989575,-1)
endif
endfunction
function RV takes integer aV,integer nV,string dV returns nothing
local integer fV
set Fb[hb]=dV
set hb=hb+1
set fV=DS[aV]
if fV==0 then
set Fb[hb]="when calling replaceCity in City, line 206"
set hb=hb+1
if jl[aV]==0 then
if aV==0 then
call e6("Nullpointer exception when calling City.replaceCity","when calling error in City, line 182")
else
call e6("Called City.replaceCity on invalid object.","when calling error in City, line 182")
endif
endif
call OV(aV,1747988529,"when calling replaceCity in City, line 182")
set hb=hb-1
elseif fV==3 then
set Fb[hb]="when calling replaceCity in City, line 208"
set hb=hb+1
if jl[aV]==0 then
if aV==0 then
call e6("Nullpointer exception when calling City.replaceCity","when calling error in City, line 182")
else
call e6("Called City.replaceCity on invalid object.","when calling error in City, line 182")
endif
endif
call OV(aV,1747989590,"when calling replaceCity in City, line 182")
set hb=hb-1
elseif fV==1 then
set Fb[hb]="when calling replaceCity in City, line 210"
set hb=hb+1
if jl[aV]==0 then
if aV==0 then
call e6("Nullpointer exception when calling City.replaceCity","when calling error in City, line 182")
else
call e6("Called City.replaceCity on invalid object.","when calling error in City, line 182")
endif
endif
call OV(aV,1747990326,"when calling replaceCity in City, line 182")
set hb=hb-1
elseif fV==2 then
set Fb[hb]="when calling replaceCity in City, line 212"
set hb=hb+1
if jl[aV]==0 then
if aV==0 then
call e6("Nullpointer exception when calling City.replaceCity","when calling error in City, line 182")
else
call e6("Called City.replaceCity on invalid object.","when calling error in City, line 182")
endif
endif
call OV(aV,1747990084,"when calling replaceCity in City, line 182")
set hb=hb-1
endif
set Fb[hb]="when calling changeOwner in City, line 213"
set hb=hb+1
if jl[aV]==0 then
if aV==0 then
call e6("Nullpointer exception when calling City.changeOwner","when calling error in City, line 187")
else
call e6("Called City.changeOwner on invalid object.","when calling error in City, line 187")
endif
endif
call qV(aV,nV,"when calling changeOwner in City, line 187")
set hb=hb-1-1
endfunction
function cX takes string KL returns nothing
local integer LL
local integer XL
local integer CL
local integer VL
local integer BL
local integer NL
local integer ML
local integer wX
local integer uX
local integer rX
local player sX
local location tX
local real iX
local integer SX
set Fb[hb]=KL
set hb=hb+1
set LL=dC(GetSpellTargetUnit(),"when calling getCityId in CityManage, line 18")
set VL=QS[LL]
set Fb[hb]="when calling getCityForceId in CityManage, line 19"
set hb=hb+1
if jl[VL]==0 then
if VL==0 then
call e6("Nullpointer exception when calling City.getCityForceId","when calling error in City, line 179")
else
call e6("Called City.getCityForceId on invalid object.","when calling error in City, line 179")
endif
endif
set BL=DS[VL]
set hb=hb-1
set XL=GetPlayerId(GetOwningPlayer(GetSpellAbilityUnit()))
set NL=bO[XL]
set Fb[hb]="when calling changeForce in CityManage, line 21"
set hb=hb+1
if Rb[NL]==0 then
if NL==0 then
call e6("Nullpointer exception when calling PlayerStats.changeForce","when calling error in PlayerStats, line 97")
else
call e6("Called PlayerStats.changeForce on invalid object.","when calling error in PlayerStats, line 97")
endif
endif
call Ltw(NL,BL)
set hb=hb-1
set ML=bl[BL]
set Fb[hb]="when calling iterator in CityManage, line 24"
set hb=hb+1
set wX=e8(ML,"when calling new_LLIterator in LinkedList, line 165")
set hb=hb-1
set CL=wX
loop
exitwhen ao[do[CL]]==no[CL]
set do[CL]=ao[do[CL]]
set uX=1
set rX=eo[do[CL]]
set sX=nO[XL]
set tX=GetSpellTargetLoc()
set iX=0.
call GroupClear(bj_lastCreatedGroup)
loop
set uX=uX-1
exitwhen uX<0
call CreateUnitAtLocSaveLast(sX,rX,tX,iX)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
endloop
set Fb[hb]="when calling close in CityManage, line 24"
set hb=hb+1
if Ro[CL]then
call Hbw(CL,"when calling LLIterator in LinkedList, line 450")
endif
set hb=hb-1
set SX=QS[LL]
set Fb[hb]="when calling settleCity in CityManage, line 27"
set hb=hb+1
if jl[SX]==0 then
if SX==0 then
call e6("Nullpointer exception when calling City.settleCity","when calling error in City, line 203")
else
call e6("Called City.settleCity on invalid object.","when calling error in City, line 203")
endif
endif
call RV(SX,XL,"when calling settleCity in City, line 203")
set hb=hb-1
call KillUnit(GetSpellAbilityUnit())
set hb=hb-1
set sX=null
set tX=null
endfunction
function mew takes nothing returns nothing
set hb=0
call cX("CityManage, line 14")
endfunction
function vx takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function mx takes nothing returns boolean
if not vx() then
return false
endif
return true
endfunction
function n6 takes nothing returns nothing
set ro=ro+0.030
endfunction
function aE takes nothing returns boolean
if GetResearched()!=1378890035 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890035,true)!=1 then
return false
endif
return true
endfunction
function nE takes nothing returns boolean
if not aE() then
return false
endif
return true
endfunction
function nH takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function aI takes nothing returns boolean
if GetResearched()!=1378890051 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890051,true)!=1 then
return false
endif
return true
endfunction
function nI takes nothing returns boolean
if not aI() then
return false
endif
return true
endfunction
function nQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989057,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988558,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988551,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989066,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651824,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651826,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988818,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989080,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989072,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989082,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988559,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988812,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651828,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989065,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989067,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989301,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651843,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988561,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988788,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988565,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988566,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988567,0)
endfunction
function nU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989830,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989829,0)
endfunction
function ax takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function nx takes nothing returns boolean
if not ax() then
return false
endif
return true
endfunction
function oG takes nothing returns boolean
if GetSpellAbilityId()!=1093677620 then
return false
endif
return true
endfunction
function oJ takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function cP takes nothing returns boolean
if GetResearched()!=1378890054 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890054,true)!=1 then
return false
endif
return true
endfunction
function oP takes nothing returns boolean
if not cP() then
return false
endif
return true
endfunction
function ok takes nothing returns nothing
local player BF=GetOwningPlayer(GetKillingUnit())
local playerstate NF=PLAYER_STATE_RESOURCE_LUMBER
local playerstate MF
local playerstate wk
local player uk
local force rk
local location sk
local real tk
local real ik
local player Sk
local force ck
if NF==PLAYER_STATE_RESOURCE_GOLD then
set MF=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(BF,MF,GetPlayerState(BF,MF)+250)
elseif NF==PLAYER_STATE_RESOURCE_LUMBER then
set wk=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(BF,wk,GetPlayerState(BF,wk)+250)
endif
call SetPlayerState(BF,NF,GetPlayerState(BF,NF)+250)
set uk=GetOwningPlayer(GetKillingUnit())
set rk=CreateForce()
call ForceAddPlayer(rk,uk)
if IsPlayerInForce(GetLocalPlayer(),rk) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_090")
endif
set y=GetUnitLoc(GetDyingUnit())
set Sk=GetOwningPlayer(GetDyingUnit())
set ck=CreateForce()
call ForceAddPlayer(ck,Sk)
set sk=y
set tk=GetLocationX(sk)
set ik=GetLocationY(sk)
if IsPlayerInForce(GetLocalPlayer(),ck) then
call PingMinimap(tk,ik,2.00)
endif
call RemoveLocation(y)
set BF=null
set NF=null
set MF=null
set wk=null
set uk=null
set rk=null
set sk=null
set Sk=null
set ck=null
endfunction
function cv takes nothing returns boolean
if GetResearched()!=1378889796 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889796,true)!=2 then
return false
endif
return true
endfunction
function ov takes nothing returns boolean
if not cv() then
return false
endif
return true
endfunction
function p7 takes nothing returns boolean
return true
endfunction
function yF takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988793 then
return false
endif
if GetUnitTypeId(GetSpellTargetUnit())!=1747988787 then
return false
endif
return true
endfunction
function pF takes nothing returns boolean
if not yF() then
return false
endif
return true
endfunction
function pK takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function pW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989559,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989569,0)
endfunction
function uC takes string HX,string JX,real KX,real LX,real XX,integer CX,real VX,real BX,boolean NX,string MX returns integer
local integer wC
set Fb[hb]=MX
set hb=hb+1
set Fb[hb]="when calling CityModifierClass in CityModifiers, line 39"
set hb=hb+1
if Gl==0 then
if gl<32768 then
set gl=gl+1
set wC=gl
else
call e6("Out of memory: Could not create CityModifierClass.","when calling error in CityModifiers, line 28")
set wC=0
endif
else
set Gl=Gl-1
set wC=Yl[Gl]
endif
set hb=hb-1
set qS[wC]=KX
set aS[wC]=BX
set nS[wC]=NX
set dS[wC]=LX
set fS[wC]=CX
set RS[wC]=VX
set TS[wC]=XX
set YS[wC]=HX
set GS[wC]=JX
set hb=hb-1
return wC
endfunction
function DX takes string FX returns boolean
local integer kX
local integer jX
local integer xX
local integer vX
local integer mX
local integer QX
local integer WX
local integer EX
local integer ZX
local integer UX
local integer IX
local integer PX
local integer AX
set Fb[hb]=FX
set hb=hb+1
set jX=R2I(0.5)
set xX=R2I(1)
set Fb[hb]="when calling asList in CityModifiers, line 9"
set hb=hb+1
set vX=F8("when calling new_LinkedList in LinkedList, line 391")
call ayw(vX,jX,"when calling add in LinkedList, line 393")
call ayw(vX,xX,"when calling add in LinkedList, line 393")
set hb=hb-1
set tS[0]=vX
set mX=R2I(1)
set QX=R2I(3)
set Fb[hb]="when calling asList in CityModifiers, line 10"
set hb=hb+1
set WX=F8("when calling new_LinkedList in LinkedList, line 391")
call ayw(WX,mX,"when calling add in LinkedList, line 393")
call ayw(WX,QX,"when calling add in LinkedList, line 393")
set hb=hb-1
set tS[1]=WX
set EX=R2I(3)
set ZX=R2I(10)
set Fb[hb]="when calling asList in CityModifiers, line 11"
set hb=hb+1
set UX=F8("when calling new_LinkedList in LinkedList, line 391")
call ayw(UX,EX,"when calling add in LinkedList, line 393")
call ayw(UX,ZX,"when calling add in LinkedList, line 393")
set hb=hb-1
set tS[2]=UX
set IX=R2I(10)
set PX=R2I(20)
set Fb[hb]="when calling asList in CityModifiers, line 12"
set hb=hb+1
set AX=F8("when calling new_LinkedList in LinkedList, line 391")
call ayw(AX,IX,"when calling add in LinkedList, line 393")
call ayw(AX,PX,"when calling add in LinkedList, line 393")
set hb=hb-1
set tS[3]=AX
set iS=uC("|cffff0000Just conquered|r","|cffc00000-PO -pop|r",240,1.0,0.0,1,-1.0,-30.0,false,"when calling new_CityModifierClass in CityModifiers, line 70")
set SS=uC("|cfffffb00Just revolted|r","|cff00af00+PO|r|cffc00000 -pop|r",120.0,1.0,0.0,0,0.,30.0,false,"when calling new_CityModifierClass in CityModifiers, line 78")
set cS=uC("|cff33ff00Population Boom|r","|cff33ff00++pop|r",120.0,0.01,0.,0,0.,0.,true,"when calling new_CityModifierClass in CityModifiers, line 86")
set oS=uC("|cffff0000Plague outburst|r","|cffff0000--pop|r",240,0.03,0.,2,-1.,0.,true,"when calling new_CityModifierClass in CityModifiers, line 94")
set OS=uC("|cffaf0000Big Fire|r","|cffc00000-pop|r",30,0.01,0.,2,-1.,0.,true,"when calling new_CityModifierClass in CityModifiers, line 102")
set lS=uC("|cff15ff00More trade estabilished|r","|cff00af00+tax +pop|r",240,0.01,0.15,0,1.,0.,true,"when calling new_CityModifierClass in CityModifiers, line 110")
set bS=uC("|cffff0000Massacred population|r","|cff00af00+PO |r|cffff0000--pop|r",30,0.05,0.,3,-1.,10.,true,"when calling new_CityModifierClass in CityModifiers, line 118")
set yS=uC("|cff00ff00Prospering|r","|cff00af00+PO +pop +tax|r",240,0.01,0.10,1,1.,20.0,true,"when calling new_CityModifierClass in CityModifiers, line 126")
set pS=uC("|cffff0000Sieged|r","|cffc00000-PO -pop|r",5,1.0,0.,0,-1.,-10.0,true,"when calling new_CityModifierClass in CityModifiers, line 134")
set eS=B6("when calling new_HashMap in CityModifiers, line 144")
set kX=eS
call Fbw(kX,0,iS,"when calling put in CityModifiers, line 151")
call Fbw(kX,1,SS,"when calling put in CityModifiers, line 152")
call Fbw(kX,2,cS,"when calling put in CityModifiers, line 153")
call Fbw(kX,3,oS,"when calling put in CityModifiers, line 154")
call Fbw(kX,4,OS,"when calling put in CityModifiers, line 155")
call Fbw(kX,5,lS,"when calling put in CityModifiers, line 156")
call Fbw(kX,6,bS,"when calling put in CityModifiers, line 157")
call Fbw(kX,7,yS,"when calling put in CityModifiers, line 158")
call Fbw(kX,8,pS,"when calling put in CityModifiers, line 159")
set hb=hb-1
return true
endfunction
function pew takes nothing returns boolean
set hb=0
return DX("CityModifiers, line 1")
endfunction
function pk takes nothing returns boolean
if GetUnitTypeId(GetDyingUnit())!=1747988791 then
return false
endif
return true
endfunction
function ym takes nothing returns boolean
if GetResearched()!=1378889799 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889799,true)!=2 then
return false
endif
return true
endfunction
function pm takes nothing returns boolean
if not ym() then
return false
endif
return true
endfunction
function q6 takes nothing returns boolean
set Lc=CreateForce()
set Xc=CreateForce()
set Cc=CreateForce()
set Vc=CreateForce()
set Bc[0]=Lc
set Bc[1]=Xc
set Bc[2]=Cc
set Bc[3]=Vc
set Nc[0]=62
set Mc[0]=194
set wo[0]=255
set Nc[1]=255
set Mc[1]=238
set wo[1]=0
set Nc[2]=0
set Mc[2]=201
set wo[2]=10
set Nc[3]=219
set Mc[3]=0
set wo[3]=201
return true
endfunction
function qA takes nothing returns nothing
local integer oA=1
local integer OA=1747988787
local player lA=GetOwningPlayer(GetConstructedStructure())
local rect eA=bj_mapInitialPlayableArea
local location pA=Location(GetRectCenterX(eA),GetRectCenterY(eA))
local location bA=Location(GetLocationX(pA)+100000000.00,GetLocationY(pA)+1000000000.00)
local real yA=bj_UNIT_FACING
call GroupClear(bj_lastCreatedGroup)
loop
set oA=oA-1
exitwhen oA<0
call CreateUnitAtLocSaveLast(lA,OA,bA,yA)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
call ShowUnit(bj_lastCreatedUnit,false)
set e[GetPlayerId(GetOwningPlayer(GetConstructedStructure()))+1]=true
set lA=null
set bA=null
set pA=null
set eA=null
endfunction
function qJ takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function eP takes nothing returns boolean
if GetResearched()!=1378890054 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890054,true)!=2 then
return false
endif
return true
endfunction
function qP takes nothing returns boolean
if not eP() then
return false
endif
return true
endfunction
function eY takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989315 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function qY takes nothing returns boolean
if not eY() then
return false
endif
return true
endfunction
function cL takes string sL returns boolean
local playerunitevent tL
local integer iL
local integer SL
set Fb[hb]=sL
set hb=hb+1
set tL=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set Fb[hb]="when calling alloc_Closure in CityBuilded, line 9"
set hb=hb+1
if fl==0 then
if Rl<32768 then
set Rl=Rl+1
set iL=Rl
set Tl[iL]=663
else
call e6("Out of memory: Could not create Closure.","when calling error in CityBuilded, line 9")
set iL=0
endif
else
set fl=fl-1
set iL=dl[fl]
set Tl[iL]=663
endif
set hb=hb-1
set ec[iL]=0
set qc[iL]=0
set ac[iL]=0
set Fb[hb]="when calling add in CityBuilded, line 9"
set hb=hb+1
set Fb[hb]="when calling toIntId in ClosureEvents, line 111"
set hb=hb+1
set SL=oc[GetHandleId(tL)]
if SL==0 then
set SL=CN(tL,"when calling registerEventId in ClosureEvents, line 228")
endif
set hb=hb-1
set ec[iL]=SL
if yc[ec[iL]]!=0 then
set ac[yc[ec[iL]]]=iL
set qc[iL]=yc[ec[iL]]
endif
set yc[ec[iL]]=iL
set hb=hb-1-1
set tL=null
return true
endfunction
function qew takes nothing returns boolean
set hb=0
return cL("CityBuilded, line 1")
endfunction
function qiw takes nothing returns boolean
return true
endfunction
function ej takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989049 then
return false
endif
if GetUnitTypeId(GetSpellTargetUnit())!=1747988569 then
return false
endif
return true
endfunction
function qj takes nothing returns boolean
if not ej() then
return false
endif
return true
endfunction
function ev takes nothing returns boolean
if GetResearched()!=1378889798 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889798,true)!=1 then
return false
endif
return true
endfunction
function qv takes nothing returns boolean
if not ev() then
return false
endif
return true
endfunction
function uH takes nothing returns boolean
if GetUnitTypeId(GetConstructedStructure())!=1747990351 then
return false
endif
return true
endfunction
function rH takes nothing returns boolean
if not uH() then
return false
endif
return true
endfunction
function rP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990596,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990595,0)
endfunction
function rT takes nothing returns nothing
call SetFloatGameState(GAME_STATE_TIME_OF_DAY,bj_MELEE_STARTING_TOD)
call MeleeStartingHeroLimit()
endfunction
function uU takes nothing returns boolean
if GetResearched()!=1378890036 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890036,true)!=2 then
return false
endif
return true
endfunction
function rU takes nothing returns boolean
if not uU() then
return false
endif
return true
endfunction
function rew takes nothing returns boolean
set hb=0
set Fb[hb]="ObjectIdGenerator, line 1"
set hb=hb+1
set Fb[hb]="when calling new_IdGenerator in ObjectIdGenerator, line 7"
set hb=hb+1
set Fb[hb]="when calling IdGenerator in ObjectIdGenerator, line 20"
set hb=hb+1
if qb==0 then
if ab<32768 then
set ab=ab+1
else
call e6("Out of memory: Could not create IdGenerator.","when calling error in ObjectIdGenerator, line 14")
endif
else
set qb=qb-1
endif
set hb=hb-1-1
set Fb[hb]="when calling new_IdGenerator in ObjectIdGenerator, line 8"
set hb=hb+1
set Fb[hb]="when calling IdGenerator in ObjectIdGenerator, line 20"
set hb=hb+1
if qb==0 then
if ab<32768 then
set ab=ab+1
else
call e6("Out of memory: Could not create IdGenerator.","when calling error in ObjectIdGenerator, line 14")
endif
else
set qb=qb-1
endif
set hb=hb-1-1
set Fb[hb]="when calling new_IdGenerator in ObjectIdGenerator, line 9"
set hb=hb+1
set Fb[hb]="when calling IdGenerator in ObjectIdGenerator, line 20"
set hb=hb+1
if qb==0 then
if ab<32768 then
set ab=ab+1
else
call e6("Out of memory: Could not create IdGenerator.","when calling error in ObjectIdGenerator, line 14")
endif
else
set qb=qb-1
endif
set hb=hb-1-1
set Fb[hb]="when calling new_IdGenerator in ObjectIdGenerator, line 10"
set hb=hb+1
set Fb[hb]="when calling IdGenerator in ObjectIdGenerator, line 20"
set hb=hb+1
if qb==0 then
if ab<32768 then
set ab=ab+1
else
call e6("Out of memory: Could not create IdGenerator.","when calling error in ObjectIdGenerator, line 14")
endif
else
set qb=qb-1
endif
set hb=hb-1-1
set Fb[hb]="when calling new_IdGenerator in ObjectIdGenerator, line 11"
set hb=hb+1
set Fb[hb]="when calling IdGenerator in ObjectIdGenerator, line 20"
set hb=hb+1
if qb==0 then
if ab<32768 then
set ab=ab+1
else
call e6("Out of memory: Could not create IdGenerator.","when calling error in ObjectIdGenerator, line 14")
endif
else
set qb=qb-1
endif
set hb=hb-1-1
set Fb[hb]="when calling new_IdGenerator in ObjectIdGenerator, line 12"
set hb=hb+1
set Fb[hb]="when calling IdGenerator in ObjectIdGenerator, line 20"
set hb=hb+1
if qb==0 then
if ab<32768 then
set ab=ab+1
else
call e6("Out of memory: Could not create IdGenerator.","when calling error in ObjectIdGenerator, line 14")
endif
else
set qb=qb-1
endif
set hb=hb-1-1-1
return true
endfunction
function rv takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989057,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989058,0)
endfunction
function s6 takes nothing returns boolean
set Kc=InitHashtable()
return true
endfunction
function rE takes nothing returns boolean
if GetResearched()!=1378889810 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889810,true)!=2 then
return false
endif
return true
endfunction
function sE takes nothing returns boolean
if not rE() then
return false
endif
return true
endfunction
function sG takes nothing returns nothing
local unit uG=GetSpellTargetUnit()
local unitstate rG=UNIT_STATE_MANA
call SetUnitState(uG,UNIT_STATE_MANA,RMaxBJ(0.,GetUnitState(GetSpellTargetUnit(),rG)-600.00))
set uG=null
set rG=null
endfunction
function sH takes nothing returns nothing
call UnitAddAbility(GetConstructedStructure(),1093677896)
endfunction
function rI takes nothing returns boolean
if GetResearched()!=1378890049 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890049,true)!=1 then
return false
endif
return true
endfunction
function sI takes nothing returns boolean
if not rI() then
return false
endif
return true
endfunction
function sT takes nothing returns nothing
call CreateQuestBJ(bj_QUESTTYPE_OPT_DISCOVERED,"TRIGSTR_097","TRIGSTR_098","ReplaceableTextures\\CommandButtons\\BTNSteelMelee.blp")
call CreateQuestBJ(bj_QUESTTYPE_OPT_DISCOVERED,"TRIGSTR_103","TRIGSTR_104","ReplaceableTextures\\WorldEditUI\\Doodad-Cinematic.blp")
call CreateQuestBJ(bj_QUESTTYPE_OPT_DISCOVERED,"TRIGSTR_2667","TRIGSTR_2668","ReplaceableTextures\\WorldEditUI\\Editor-MultipleUnits.blp")
endfunction
function sU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989835,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989836,0)
endfunction
function rY takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989042 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function sY takes nothing returns boolean
if not rY() then
return false
endif
return true
endfunction
function Ksw takes string Asw returns boolean
local integer Dsw
local integer Hsw
local integer Jsw
set Fb[hb]=Asw
set hb=hb+1
set cO=CreateTrigger()
set oO=CreateGroup()
set Dsw=0
set Hsw=bj_MAX_PLAYER_SLOTS-1
loop
exitwhen Dsw>Hsw
call SetPlayerAbilityAvailable(nO[Dsw],1095577649,false)
set Dsw=Dsw+1
endloop
set Fb[hb]="when calling alloc_Closure in OnUnitEnterLeave, line 59"
set hb=hb+1
if El==0 then
if Zl<32768 then
set Zl=Zl+1
set Jsw=Zl
set Ul[Jsw]=650
else
call e6("Out of memory: Could not create Closure.","when calling error in OnUnitEnterLeave, line 59")
set Jsw=0
endif
else
set El=El-1
set Jsw=Wl[El]
set Ul[Jsw]=650
endif
set hb=hb-1
set Fb[hb]="when calling nullTimer in OnUnitEnterLeave, line 59"
set hb=hb+1
set Fb[hb]="when calling doAfter in ClosureTimers, line 22"
set hb=hb+1
set Fb[hb]="when calling start in ClosureTimers, line 15"
set hb=hb+1
if Ul[Jsw]==0 then
if Jsw==0 then
call e6("Nullpointer exception when calling CallbackSingle.start","when calling error in ClosureTimers, line 67")
else
call e6("Called CallbackSingle.start on invalid object.","when calling error in ClosureTimers, line 67")
endif
endif
call q3(Jsw,0.,"when calling start in ClosureTimers, line 67")
set hb=hb-1-1-1-1
return true
endfunction
function sew takes nothing returns boolean
set hb=0
return Ksw("OnUnitEnterLeave, line 1")
endfunction
function rh takes nothing returns boolean
local unitstate uh=UNIT_STATE_MANA
if GetUnitState(GetEnumUnit(),uh)>0.00 then
set uh=null
return false
endif
set uh=null
return true
endfunction
function sh takes nothing returns nothing
if rh() then
call KillUnit(GetEnumUnit())
endif
endfunction
function t2 takes nothing returns boolean
local integer w2
local player u2
local boolean r2
local boolean s2
if GetOwningPlayer(GetSpellAbilityUnit())==GetOwningPlayer(GetSpellTargetUnit()) then
set s2=true
else
set u2=GetOwningPlayer(GetSpellTargetUnit())
if GetPlayerSlotState(u2)==PLAYER_SLOT_STATE_PLAYING then
set r2=GetPlayerController(u2)==MAP_CONTROL_USER
else
set r2=false
endif
set s2=not r2
endif
if s2 then
set u2=null
return false
endif
set w2=GetSpellAbilityId()
set u2=null
return w2==1093677396 or w2==1093677397 or w2==1093677398 or w2==1093677400 or w2==1093677399
endfunction
function tE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989574,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989573,0)
endfunction
function tI takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990584,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990593,0)
endfunction
function sQ takes nothing returns boolean
if GetResearched()!=1378889812 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889812,true)!=1 then
return false
endif
return true
endfunction
function tQ takes nothing returns boolean
if not sQ() then
return false
endif
return true
endfunction
function sZ takes nothing returns boolean
if GetResearched()!=1378890034 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890034,true)!=1 then
return false
endif
return true
endfunction
function tZ takes nothing returns boolean
if not sZ() then
return false
endif
return true
endfunction
function IN takes string ZN returns boolean
local integer UN
set Fb[hb]=ZN
set hb=hb+1
set tc=ConvertPlayerEvent(96)
set lc=B6("when calling new_HashMap in ClosureEvents, line 99")
set bc=B6("when calling new_HashMap in ClosureEvents, line 100")
set ic=CreateTrigger()
set Sc=CreateTrigger()
set cc=CreateTrigger()
set Fb[hb]="when calling alloc_Closure in ClosureEvents, line 279"
set hb=hb+1
if El==0 then
if Zl<32768 then
set Zl=Zl+1
set UN=Zl
set Ul[UN]=640
else
call e6("Out of memory: Could not create Closure.","when calling error in ClosureEvents, line 279")
set UN=0
endif
else
set El=El-1
set UN=Wl[El]
set Ul[UN]=640
endif
set hb=hb-1
set Fb[hb]="when calling nullTimer in ClosureEvents, line 279"
set hb=hb+1
set Fb[hb]="when calling doAfter in ClosureTimers, line 22"
set hb=hb+1
set Fb[hb]="when calling start in ClosureTimers, line 15"
set hb=hb+1
if Ul[UN]==0 then
if UN==0 then
call e6("Nullpointer exception when calling CallbackSingle.start","when calling error in ClosureTimers, line 67")
else
call e6("Called CallbackSingle.start on invalid object.","when calling error in ClosureTimers, line 67")
endif
endif
call q3(UN,0.,"when calling start in ClosureTimers, line 67")
set hb=hb-1-1-1-1
return true
endfunction
function tew takes nothing returns boolean
set hb=0
return IN("ClosureEvents, line 1")
endfunction
function tiw takes nothing returns boolean
set fO=ConvertPlayerColor(24)
set RO=ConvertPlayerColor(25)
set TO=ConvertPlayerColor(26)
set YO=ConvertPlayerColor(27)
set GO[0]=PLAYER_COLOR_RED
set GO[1]=PLAYER_COLOR_BLUE
set GO[2]=PLAYER_COLOR_CYAN
set GO[3]=PLAYER_COLOR_PURPLE
set GO[4]=PLAYER_COLOR_YELLOW
set GO[5]=PLAYER_COLOR_ORANGE
set GO[6]=PLAYER_COLOR_GREEN
set GO[7]=PLAYER_COLOR_PINK
set GO[8]=PLAYER_COLOR_LIGHT_GRAY
set GO[9]=PLAYER_COLOR_LIGHT_BLUE
set GO[10]=PLAYER_COLOR_AQUA
set GO[11]=PLAYER_COLOR_BROWN
set GO[12]=PLAYER_COLOR_MAROON
set GO[13]=PLAYER_COLOR_NAVY
set GO[14]=PLAYER_COLOR_TURQUOISE
set GO[15]=PLAYER_COLOR_VIOLET
set GO[16]=PLAYER_COLOR_WHEAT
set GO[17]=PLAYER_COLOR_PEACH
set GO[18]=PLAYER_COLOR_MINT
set GO[19]=PLAYER_COLOR_LAVENDER
set GO[20]=PLAYER_COLOR_COAL
set GO[21]=PLAYER_COLOR_SNOW
set GO[22]=PLAYER_COLOR_EMERALD
set GO[23]=PLAYER_COLOR_PEANUT
set GO[24]=fO
set GO[25]=RO
set GO[26]=TO
set GO[27]=YO
return true
endfunction
function ttw takes nothing returns boolean
local integer rtw
local integer stw
set dO=GetLocalPlayer()
set rtw=0
set stw=bj_MAX_PLAYER_SLOTS-1
loop
exitwhen rtw>stw
set nO[rtw]=Player(rtw)
set rtw=rtw+1
endloop
return true
endfunction
function uA takes nothing returns nothing
call UnitRemoveAbility(GetTriggerUnit(),1093677402)
endfunction
function uJ takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function wP takes nothing returns boolean
if GetResearched()!=1378890040 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890040,true)!=2 then
return false
endif
return true
endfunction
function uP takes nothing returns boolean
if not wP() then
return false
endif
return true
endfunction
function liw takes string iiw returns boolean
local integer Siw
local integer ciw
local integer oiw
local integer Oiw
set Fb[hb]=iiw
set hb=hb+1
set gO=CreateGroup()
set hO=CreateUnit(rS,2019849581,0.,0.,0)
if hO==null then
set iiw=""
set Siw=2019849581
set ciw=0
loop
exitwhen ciw>3
set oiw=ModuloInteger(Siw,256)
set Siw=Siw/256
set iiw=SubString(".................................!.#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[.]^_`abcdefghijklmnopqrstuvwxyz{|}~.................................................................................................................................",oiw,oiw+1)+iiw
set ciw=ciw+1
endloop
call e6("DUMMY_UNITID ("+iiw+") not added correctly to the map.","when calling error in Preloader, line 52")
endif
set Fb[hb]="when calling alloc_Closure in Preloader, line 54"
set hb=hb+1
if El==0 then
if Zl<32768 then
set Zl=Zl+1
set Oiw=Zl
set Ul[Oiw]=651
else
call e6("Out of memory: Could not create Closure.","when calling error in Preloader, line 54")
set Oiw=0
endif
else
set El=El-1
set Oiw=Wl[El]
set Ul[Oiw]=651
endif
set hb=hb-1
set Fb[hb]="when calling nullTimer in Preloader, line 54"
set hb=hb+1
set Fb[hb]="when calling doAfter in ClosureTimers, line 22"
set hb=hb+1
set Fb[hb]="when calling start in ClosureTimers, line 15"
set hb=hb+1
if Ul[Oiw]==0 then
if Oiw==0 then
call e6("Nullpointer exception when calling CallbackSingle.start","when calling error in ClosureTimers, line 67")
else
call e6("Called CallbackSingle.start on invalid object.","when calling error in ClosureTimers, line 67")
endif
endif
call q3(Oiw,0.,"when calling start in ClosureTimers, line 67")
set hb=hb-1-1-1-1
return true
endfunction
function uew takes nothing returns boolean
set hb=0
return liw("Preloader, line 1")
endfunction
function utw takes nothing returns nothing
call Xsw(GetEnumUnit())
endfunction
function wv takes nothing returns boolean
if GetResearched()!=1378889796 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889796,true)!=1 then
return false
endif
return true
endfunction
function uv takes nothing returns boolean
if not wv() then
return false
endif
return true
endfunction
function vF takes nothing returns boolean
if GetUnitTypeId(GetDyingUnit())!=1747988792 then
return false
endif
return true
endfunction
function xH takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990350 then
return false
endif
return true
endfunction
function vH takes nothing returns boolean
if not xH() then
return false
endif
return true
endfunction
function vP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990601,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990599,0)
endfunction
function xT takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989045 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function vT takes nothing returns boolean
if not xT() then
return false
endif
return true
endfunction
function DOw takes string WOw returns boolean
local trigger EOw
local playerunitevent ZOw
local rect UOw
local region IOw
local integer POw
local integer AOw
set Fb[hb]=WOw
set hb=hb+1
set EOw=CreateTrigger()
set UOw=GetWorldBounds()
set IOw=CreateRegion()
call RegionAddRect(IOw,UOw)
call TriggerRegisterEnterRegion(EOw,IOw,null)
call TriggerAddAction(EOw,df)
set ZOw=EVENT_PLAYER_UNIT_DEATH
set Fb[hb]="when calling alloc_Closure in Upkeep, line 15"
set hb=hb+1
if fl==0 then
if Rl<32768 then
set Rl=Rl+1
set POw=Rl
set Tl[POw]=677
else
call e6("Out of memory: Could not create Closure.","when calling error in Upkeep, line 15")
set POw=0
endif
else
set fl=fl-1
set POw=dl[fl]
set Tl[POw]=677
endif
set hb=hb-1
set ec[POw]=0
set qc[POw]=0
set ac[POw]=0
set Fb[hb]="when calling add in Upkeep, line 15"
set hb=hb+1
set Fb[hb]="when calling toIntId in ClosureEvents, line 111"
set hb=hb+1
set AOw=oc[GetHandleId(ZOw)]
if AOw==0 then
set AOw=CN(ZOw,"when calling registerEventId in ClosureEvents, line 228")
endif
set hb=hb-1
set ec[POw]=AOw
if yc[ec[POw]]!=0 then
set ac[yc[ec[POw]]]=POw
set qc[POw]=yc[ec[POw]]
endif
set yc[ec[POw]]=POw
set hb=hb-1-1
set EOw=null
set ZOw=null
set UOw=null
set IOw=null
return true
endfunction
function vew takes nothing returns boolean
set hb=0
return DOw("Upkeep, line 1")
endfunction
function vk takes nothing returns boolean
if GetUnitTypeId(GetDyingUnit())!=1747988793 then
return false
endif
return true
endfunction
function vv takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651824,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651825,0)
endfunction
function MY takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1966092336 then
return false
endif
if GetSpellAbilityId()!=1093677906 then
return false
endif
if GetOwningPlayer(GetSpellTargetUnit())==Player(PLAYER_NEUTRAL_AGGRESSIVE) then
return false
endif
if IsUnitType(GetSpellTargetUnit(),UNIT_TYPE_STRUCTURE)!=true then
return false
endif
return true
endfunction
function wG takes nothing returns boolean
if not MY() then
return false
endif
return true
endfunction
function MH takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747988809 then
return false
endif
return true
endfunction
function wJ takes nothing returns boolean
if not MH() then
return false
endif
return true
endfunction
function wT takes nothing returns nothing
local group BR=GetUnitsOfTypeIdAll(1747988554)
local code NR=sy
local boolean MR=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(BR,NR)
if MR then
call DestroyGroup(BR)
endif
set BR=null
endfunction
function initialize takes nothing returns nothing
local integer i_2=0
local integer temp=QO
loop
exitwhen i_2>temp
set i_2=i_2+1
endloop
endfunction
function iow takes string Mcw,string wow returns integer
local integer uow
local integer row
local boolean sow
local integer tow
set Fb[hb]=wow
set hb=hb+1
set uow=StringHash(Mcw)
set row=sl
set Fb[hb]="when calling hasString in TypeCasting, line 24"
set hb=hb+1
if wb[row]==0 then
if row==0 then
call e6("Nullpointer exception when calling Table.hasString","when calling error in Table, line 18")
else
call e6("Called Table.hasString on invalid object.","when calling error in Table, line 18")
endif
endif
set sow=HaveSavedString(MO,row,uow)
set hb=hb-1
if not sow then
set tow=sl
set Fb[hb]="when calling saveString in TypeCasting, line 25"
set hb=hb+1
if wb[tow]==0 then
if tow==0 then
call e6("Nullpointer exception when calling Table.saveString","when calling error in Table, line 60")
else
call e6("Called Table.saveString on invalid object.","when calling error in Table, line 60")
endif
endif
call SaveStr(MO,tow,uow,Mcw)
set hb=hb-1
endif
set hb=hb-1
return uow
endfunction
function wew takes nothing returns boolean
set hb=0
set Fb[hb]="StringUtils, line 1"
set hb=hb+1
set QO=127
call initialize()
call iow("","when calling stringToIndex in StringUtils, line 167")
set hb=hb-1
return true
endfunction
function wm takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989067,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989065,0)
endfunction
function wtw takes nothing returns nothing
local unit Msw=GetTriggerUnit()
if GetUnitAbilityLevel(Msw,1095577649)==0 then
set OO[lO]=Msw
set lO=lO+1
call TriggerExecute(cO)
set lO=lO-1
endif
set Msw=null
endfunction
function tcw takes string ucw,string rcw returns boolean
local integer scw=StringLength(ucw)
if StringLength(rcw)>scw then
return false
endif
return SubString(ucw,0,StringLength(rcw))==rcw
endfunction
function x1 takes nothing returns boolean
return tcw(GetEventPlayerChatString(),"-")
endfunction
function x8 takes nothing returns boolean
set jo=false
set xo=false
set vo=CreateTimer()
call TimerStart(vo,0.01,true,lf)
return true
endfunction
function xA takes nothing returns nothing
local integer YA=1
local integer GA=1751277938
local player gA=GetOwningPlayer(GetConstructedStructure())
local rect jA=bj_mapInitialPlayableArea
local location kA=Location(GetRectCenterX(jA),GetRectCenterY(jA))
local location hA=Location(GetLocationX(kA)+100000000.00,GetLocationY(kA)+1000000000.00)
local real FA=bj_UNIT_FACING
call GroupClear(bj_lastCreatedGroup)
loop
set YA=YA-1
exitwhen YA<0
call CreateUnitAtLocSaveLast(gA,GA,hA,FA)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
call ShowUnit(bj_lastCreatedUnit,false)
set p[GetPlayerId(GetOwningPlayer(GetConstructedStructure()))+1]=true
set gA=null
set hA=null
set kA=null
set jA=null
endfunction
function jG takes nothing returns boolean
if IsUnitType(GetEnumUnit(),UNIT_TYPE_STRUCTURE)!=false then
return false
endif
return true
endfunction
function xG takes nothing returns nothing
if jG() then
call SetUnitPositionLoc(GetEnumUnit(),c)
endif
endfunction
function xJ takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function jP takes nothing returns boolean
if GetResearched()!=1378890052 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890052,true)!=2 then
return false
endif
return true
endfunction
function xP takes nothing returns boolean
if not jP() then
return false
endif
return true
endfunction
function xQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989812,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989811,0)
endfunction
function qcw takes string bcw returns boolean
local playerunitevent ycw
local integer pcw
local integer ecw
set Fb[hb]=bcw
set hb=hb+1
set ycw=EVENT_PLAYER_UNIT_SPELL_CAST
set Fb[hb]="when calling alloc_Closure in Taxation, line 6"
set hb=hb+1
if fl==0 then
if Rl<32768 then
set Rl=Rl+1
set pcw=Rl
set Tl[pcw]=676
else
call e6("Out of memory: Could not create Closure.","when calling error in Taxation, line 6")
set pcw=0
endif
else
set fl=fl-1
set pcw=dl[fl]
set Tl[pcw]=676
endif
set hb=hb-1
set ec[pcw]=0
set qc[pcw]=0
set ac[pcw]=0
set Fb[hb]="when calling add in Taxation, line 6"
set hb=hb+1
set Fb[hb]="when calling toIntId in ClosureEvents, line 111"
set hb=hb+1
set ecw=oc[GetHandleId(ycw)]
if ecw==0 then
set ecw=CN(ycw,"when calling registerEventId in ClosureEvents, line 228")
endif
set hb=hb-1
set ec[pcw]=ecw
if yc[ec[pcw]]!=0 then
set ac[yc[ec[pcw]]]=pcw
set qc[pcw]=yc[ec[pcw]]
endif
set yc[ec[pcw]]=pcw
set hb=hb-1-1
set ycw=null
return true
endfunction
function xew takes nothing returns boolean
set hb=0
return qcw("Taxation, line 1")
endfunction
function jg takes nothing returns boolean
if IsUnitType(GetEnumUnit(),UNIT_TYPE_STRUCTURE)!=false then
return false
endif
return true
endfunction
function xg takes nothing returns nothing
if jg() then
call SetUnitPositionLoc(GetEnumUnit(),S)
endif
endfunction
function xow takes nothing returns boolean
set tl=CreateTrigger()
set il=CreateTrigger()
set Sl=null
set cl=null
call TriggerAddCondition(cO,Filter(af))
call TriggerAddAction(cO,nf)
return true
endfunction
function jv takes nothing returns boolean
if GetResearched()!=1378889802 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889802,true)!=1 then
return false
endif
return true
endfunction
function xv takes nothing returns boolean
if not jv() then
return false
endif
return true
endfunction
function y7 takes nothing returns boolean
return true
endfunction
function bK takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747988531 then
return false
endif
return true
endfunction
function yK takes nothing returns boolean
if not bK() then
return false
endif
return true
endfunction
function yM takes nothing returns nothing
call TriggerRegisterUnitEvent(ic,Sl,EVENT_UNIT_DAMAGED)
endfunction
function yQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989301,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988790,0)
endfunction
function yT takes nothing returns nothing
local player cT=GetOwningPlayer(GetAttacker())
local player oT=GetOwningPlayer(GetAttacker())
local player OT
local player lT
local unit bT
set r[GetPlayerId(cT)+1]=r[GetPlayerId(oT)+1]+1
set OT=GetOwningPlayer(GetTriggerUnit())
set lT=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(OT)+1]=r[GetPlayerId(lT)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set bT=GetTriggerUnit()
call SetUnitState(bT,UNIT_STATE_LIFE,GetUnitState(bT,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set cT=null
set oT=null
set OT=null
set lT=null
set bT=null
endfunction
function bW takes nothing returns boolean
if GetResearched()!=1378889806 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889806,true)!=1 then
return false
endif
return true
endfunction
function yW takes nothing returns boolean
if not bW() then
return false
endif
return true
endfunction
function yZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989816,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989815,0)
endfunction
function Krw takes string tww_2 returns boolean
local integer iww
local integer Sww
local integer cww
local integer oww
local integer Oww
local integer lww_2
local integer bww
local integer yww_2
local integer pww
local integer eww
local integer qww
local integer aww
local integer nww
local integer dww
local integer fww
local integer Rww
local integer Tww_2
local integer Yww
local integer Gww
local integer gww
local integer hww_2
local integer Fww
local integer kww
local integer jww
local integer xww
local integer vww
local integer mww
local integer Qww
local integer Www
local integer Eww
local integer Zww
local integer Uww
local integer Iww
local integer Pww_2
local integer Aww
local integer Dww
local integer Hww
local integer Jww
local integer Kww
local integer Lww
local integer Xww
local integer Cww
local integer Vww_2
local integer Bww
local integer Nww
local integer Mww
local integer wuw
local integer uuw
local integer ruw
local integer suw
local integer tuw
local integer iuw
local integer Suw
local integer cuw
local integer ouw
local integer Ouw
local integer luw
local integer buw
local integer yuw
local integer puw
local integer euw
local integer quw
local integer auw
local integer nuw
local integer duw
local integer fuw
local integer Ruw
local integer Tuw
local integer Yuw
local integer Guw
local integer guw
local integer huw
local integer Fuw
local integer kuw
local integer juw
local integer xuw
local integer vuw
local integer muw
local integer Quw
local integer Wuw
local integer Euw
local integer Zuw
local integer Uuw
local integer Iuw
local integer Puw
local integer Auw
local integer Duw
local integer Huw
local integer Juw
local integer Kuw
local integer Luw
local integer Xuw
local integer Cuw
local integer Vuw
local integer Buw
local integer Nuw
local integer Muw
local integer wrw
local integer urw
local integer rrw
local integer srw
local integer trw
local integer irw
local integer Srw
local integer crw
local integer orw
local integer Orw
local integer lrw
local integer brw
local integer yrw
local integer prw
local integer erw
local integer qrw
local integer arw
local integer nrw
local integer drw
local integer frw
local integer Rrw
local integer Trw
local integer Yrw
local integer Grw
local integer grw
local integer hrw
local integer Frw
local integer krw
local integer jrw
local integer xrw
local integer vrw
local integer mrw
local integer Qrw
local integer Wrw
local integer Erw
local integer Zrw
local integer Urw
local integer Irw
local integer Prw
local integer Arw
local integer Drw
local integer Hrw
local integer Jrw
set Fb[hb]=tww_2
set hb=hb+1
set iww=R2I(70)
set Sww=R2I(30)
set cww=R2I(10)
set oww=R2I(70)
set Oww=R2I(30)
set lww_2=R2I(140)
set Fb[hb]="when calling asList in Multiboards, line 23"
set hb=hb+1
set bww=F8("when calling new_LinkedList in LinkedList, line 391")
call ayw(bww,iww,"when calling add in LinkedList, line 393")
call ayw(bww,Sww,"when calling add in LinkedList, line 393")
call ayw(bww,cww,"when calling add in LinkedList, line 393")
call ayw(bww,oww,"when calling add in LinkedList, line 393")
call ayw(bww,Oww,"when calling add in LinkedList, line 393")
call ayw(bww,lww_2,"when calling add in LinkedList, line 393")
set hb=hb-1
set Vo[0]=bww
set yww_2=R2I(70)
set pww=R2I(30)
set eww=R2I(10)
set qww=R2I(70)
set aww=R2I(30)
set nww=R2I(140)
set Fb[hb]="when calling asList in Multiboards, line 24"
set hb=hb+1
set dww=F8("when calling new_LinkedList in LinkedList, line 391")
call ayw(dww,yww_2,"when calling add in LinkedList, line 393")
call ayw(dww,pww,"when calling add in LinkedList, line 393")
call ayw(dww,eww,"when calling add in LinkedList, line 393")
call ayw(dww,qww,"when calling add in LinkedList, line 393")
call ayw(dww,aww,"when calling add in LinkedList, line 393")
call ayw(dww,nww,"when calling add in LinkedList, line 393")
set hb=hb-1
set Vo[1]=dww
set fww=R2I(70)
set Rww=R2I(30)
set Tww_2=R2I(10)
set Yww=R2I(70)
set Gww=R2I(30)
set gww=R2I(140)
set Fb[hb]="when calling asList in Multiboards, line 25"
set hb=hb+1
set hww_2=F8("when calling new_LinkedList in LinkedList, line 391")
call ayw(hww_2,fww,"when calling add in LinkedList, line 393")
call ayw(hww_2,Rww,"when calling add in LinkedList, line 393")
call ayw(hww_2,Tww_2,"when calling add in LinkedList, line 393")
call ayw(hww_2,Yww,"when calling add in LinkedList, line 393")
call ayw(hww_2,Gww,"when calling add in LinkedList, line 393")
call ayw(hww_2,gww,"when calling add in LinkedList, line 393")
set hb=hb-1
set Vo[2]=hww_2
set Fww=R2I(2.5)
set kww=R2I(2.5)
set jww=R2I(400)
set xww=R2I(2.5)
set vww=R2I(2.5)
set mww=R2I(2.5)
set Fb[hb]="when calling asList in Multiboards, line 27"
set hb=hb+1
set Qww=F8("when calling new_LinkedList in LinkedList, line 391")
call ayw(Qww,Fww,"when calling add in LinkedList, line 393")
call ayw(Qww,kww,"when calling add in LinkedList, line 393")
call ayw(Qww,jww,"when calling add in LinkedList, line 393")
call ayw(Qww,xww,"when calling add in LinkedList, line 393")
call ayw(Qww,vww,"when calling add in LinkedList, line 393")
call ayw(Qww,mww,"when calling add in LinkedList, line 393")
set hb=hb-1
set Vo[3]=Qww
set Www=R2I(70)
set Eww=R2I(30)
set Zww=R2I(30)
set Uww=R2I(10)
set Iww=R2I(126)
set Pww_2=R2I(84.000007629)
set Fb[hb]="when calling asList in Multiboards, line 28"
set hb=hb+1
set Aww=F8("when calling new_LinkedList in LinkedList, line 391")
call ayw(Aww,Www,"when calling add in LinkedList, line 393")
call ayw(Aww,Eww,"when calling add in LinkedList, line 393")
call ayw(Aww,Zww,"when calling add in LinkedList, line 393")
call ayw(Aww,Uww,"when calling add in LinkedList, line 393")
call ayw(Aww,Iww,"when calling add in LinkedList, line 393")
call ayw(Aww,Pww_2,"when calling add in LinkedList, line 393")
set hb=hb-1
set Vo[4]=Aww
set Dww=R2I(70)
set Hww=R2I(30)
set Jww=R2I(30)
set Kww=R2I(10)
set Lww=R2I(126)
set Xww=R2I(84.000007629)
set Fb[hb]="when calling asList in Multiboards, line 29"
set hb=hb+1
set Cww=F8("when calling new_LinkedList in LinkedList, line 391")
call ayw(Cww,Dww,"when calling add in LinkedList, line 393")
call ayw(Cww,Hww,"when calling add in LinkedList, line 393")
call ayw(Cww,Jww,"when calling add in LinkedList, line 393")
call ayw(Cww,Kww,"when calling add in LinkedList, line 393")
call ayw(Cww,Lww,"when calling add in LinkedList, line 393")
call ayw(Cww,Xww,"when calling add in LinkedList, line 393")
set hb=hb-1
set Vo[5]=Cww
set Vww_2=R2I(70)
set Bww=R2I(30)
set Nww=R2I(30)
set Mww=R2I(10)
set wuw=R2I(126)
set uuw=R2I(84.000007629)
set Fb[hb]="when calling asList in Multiboards, line 30"
set hb=hb+1
set ruw=F8("when calling new_LinkedList in LinkedList, line 391")
call ayw(ruw,Vww_2,"when calling add in LinkedList, line 393")
call ayw(ruw,Bww,"when calling add in LinkedList, line 393")
call ayw(ruw,Nww,"when calling add in LinkedList, line 393")
call ayw(ruw,Mww,"when calling add in LinkedList, line 393")
call ayw(ruw,wuw,"when calling add in LinkedList, line 393")
call ayw(ruw,uuw,"when calling add in LinkedList, line 393")
set hb=hb-1
set Vo[6]=ruw
set suw=R2I(70)
set tuw=R2I(30)
set iuw=R2I(30)
set Suw=R2I(10)
set cuw=R2I(126)
set ouw=R2I(84.000007629)
set Fb[hb]="when calling asList in Multiboards, line 31"
set hb=hb+1
set Ouw=F8("when calling new_LinkedList in LinkedList, line 391")
call ayw(Ouw,suw,"when calling add in LinkedList, line 393")
call ayw(Ouw,tuw,"when calling add in LinkedList, line 393")
call ayw(Ouw,iuw,"when calling add in LinkedList, line 393")
call ayw(Ouw,Suw,"when calling add in LinkedList, line 393")
call ayw(Ouw,cuw,"when calling add in LinkedList, line 393")
call ayw(Ouw,ouw,"when calling add in LinkedList, line 393")
set hb=hb-1
set Vo[7]=Ouw
set luw=R2I(70)
set buw=R2I(30)
set yuw=R2I(30)
set puw=R2I(10)
set euw=R2I(126)
set quw=R2I(84.000007629)
set Fb[hb]="when calling asList in Multiboards, line 32"
set hb=hb+1
set auw=F8("when calling new_LinkedList in LinkedList, line 391")
call ayw(auw,luw,"when calling add in LinkedList, line 393")
call ayw(auw,buw,"when calling add in LinkedList, line 393")
call ayw(auw,yuw,"when calling add in LinkedList, line 393")
call ayw(auw,puw,"when calling add in LinkedList, line 393")
call ayw(auw,euw,"when calling add in LinkedList, line 393")
call ayw(auw,quw,"when calling add in LinkedList, line 393")
set hb=hb-1
set Vo[8]=auw
set nuw=R2I(70)
set duw=R2I(30)
set fuw=R2I(30)
set Ruw=R2I(10)
set Tuw=R2I(126)
set Yuw=R2I(84.000007629)
set Fb[hb]="when calling asList in Multiboards, line 33"
set hb=hb+1
set Guw=F8("when calling new_LinkedList in LinkedList, line 391")
call ayw(Guw,nuw,"when calling add in LinkedList, line 393")
call ayw(Guw,duw,"when calling add in LinkedList, line 393")
call ayw(Guw,fuw,"when calling add in LinkedList, line 393")
call ayw(Guw,Ruw,"when calling add in LinkedList, line 393")
call ayw(Guw,Tuw,"when calling add in LinkedList, line 393")
call ayw(Guw,Yuw,"when calling add in LinkedList, line 393")
set hb=hb-1
set Vo[9]=Guw
set Bo[0]=4
set Bo[1]=0
set No[0]=4
set No[1]=1
set Mo[0]=1
set Mo[1]=4
set wO[0]=1
set wO[1]=5
set uO[0]=1
set uO[1]=6
set rO[0]=2
set rO[1]=6
set sO[0]=2
set sO[1]=3
set guw=iow("Food","when calling stringToIndex in Multiboards, line 56")
set huw=iow("0","when calling stringToIndex in Multiboards, line 56")
set Fuw=iow("|","when calling stringToIndex in Multiboards, line 56")
set kuw=iow("Income","when calling stringToIndex in Multiboards, line 56")
set juw=iow("0","when calling stringToIndex in Multiboards, line 56")
set xuw=iow(" ","when calling stringToIndex in Multiboards, line 56")
set Fb[hb]="when calling asList in Multiboards, line 56"
set hb=hb+1
set vuw=F8("when calling new_LinkedList in LinkedList, line 391")
call ayw(vuw,guw,"when calling add in LinkedList, line 393")
call ayw(vuw,huw,"when calling add in LinkedList, line 393")
call ayw(vuw,Fuw,"when calling add in LinkedList, line 393")
call ayw(vuw,kuw,"when calling add in LinkedList, line 393")
call ayw(vuw,juw,"when calling add in LinkedList, line 393")
call ayw(vuw,xuw,"when calling add in LinkedList, line 393")
set hb=hb-1
set tO[0]=vuw
set muw=iow("Iron","when calling stringToIndex in Multiboards, line 57")
set Quw=iow("0","when calling stringToIndex in Multiboards, line 57")
set Wuw=iow("|","when calling stringToIndex in Multiboards, line 57")
set Euw=iow("Upkeep","when calling stringToIndex in Multiboards, line 57")
set Zuw=iow("0","when calling stringToIndex in Multiboards, line 57")
set Uuw=iow(" ","when calling stringToIndex in Multiboards, line 57")
set Fb[hb]="when calling asList in Multiboards, line 57"
set hb=hb+1
set Iuw=F8("when calling new_LinkedList in LinkedList, line 391")
call ayw(Iuw,muw,"when calling add in LinkedList, line 393")
call ayw(Iuw,Quw,"when calling add in LinkedList, line 393")
call ayw(Iuw,Wuw,"when calling add in LinkedList, line 393")
call ayw(Iuw,Euw,"when calling add in LinkedList, line 393")
call ayw(Iuw,Zuw,"when calling add in LinkedList, line 393")
call ayw(Iuw,Uuw,"when calling add in LinkedList, line 393")
set hb=hb-1
set tO[1]=Iuw
set Puw=iow("Stone","when calling stringToIndex in Multiboards, line 58")
set Auw=iow("0","when calling stringToIndex in Multiboards, line 58")
set Duw=iow("|","when calling stringToIndex in Multiboards, line 58")
set Huw=iow(" ","when calling stringToIndex in Multiboards, line 58")
set Juw=iow(" ","when calling stringToIndex in Multiboards, line 58")
set Kuw=iow(" ","when calling stringToIndex in Multiboards, line 58")
set Fb[hb]="when calling asList in Multiboards, line 58"
set hb=hb+1
set Luw=F8("when calling new_LinkedList in LinkedList, line 391")
call ayw(Luw,Puw,"when calling add in LinkedList, line 393")
call ayw(Luw,Auw,"when calling add in LinkedList, line 393")
call ayw(Luw,Duw,"when calling add in LinkedList, line 393")
call ayw(Luw,Huw,"when calling add in LinkedList, line 393")
call ayw(Luw,Juw,"when calling add in LinkedList, line 393")
call ayw(Luw,Kuw,"when calling add in LinkedList, line 393")
set hb=hb-1
set tO[2]=Luw
set Xuw=iow(" ","when calling stringToIndex in Multiboards, line 60")
set Cuw=iow(" ","when calling stringToIndex in Multiboards, line 60")
set Vuw=iow("                           City info","when calling stringToIndex in Multiboards, line 60")
set Buw=iow(" ","when calling stringToIndex in Multiboards, line 60")
set Nuw=iow(" ","when calling stringToIndex in Multiboards, line 60")
set Muw=iow(" ","when calling stringToIndex in Multiboards, line 60")
set Fb[hb]="when calling asList in Multiboards, line 60"
set hb=hb+1
set wrw=F8("when calling new_LinkedList in LinkedList, line 391")
call ayw(wrw,Xuw,"when calling add in LinkedList, line 393")
call ayw(wrw,Cuw,"when calling add in LinkedList, line 393")
call ayw(wrw,Vuw,"when calling add in LinkedList, line 393")
call ayw(wrw,Buw,"when calling add in LinkedList, line 393")
call ayw(wrw,Nuw,"when calling add in LinkedList, line 393")
call ayw(wrw,Muw,"when calling add in LinkedList, line 393")
set hb=hb-1
set tO[3]=wrw
set urw=iow("Tax","when calling stringToIndex in Multiboards, line 61")
set rrw=iow("0","when calling stringToIndex in Multiboards, line 61")
set srw=iow(" ","when calling stringToIndex in Multiboards, line 61")
set trw=iow("|","when calling stringToIndex in Multiboards, line 61")
set irw=iow(" ","when calling stringToIndex in Multiboards, line 61")
set Srw=iow(" ","when calling stringToIndex in Multiboards, line 61")
set Fb[hb]="when calling asList in Multiboards, line 61"
set hb=hb+1
set crw=F8("when calling new_LinkedList in LinkedList, line 391")
call ayw(crw,urw,"when calling add in LinkedList, line 393")
call ayw(crw,rrw,"when calling add in LinkedList, line 393")
call ayw(crw,srw,"when calling add in LinkedList, line 393")
call ayw(crw,trw,"when calling add in LinkedList, line 393")
call ayw(crw,irw,"when calling add in LinkedList, line 393")
call ayw(crw,Srw,"when calling add in LinkedList, line 393")
set hb=hb-1
set tO[4]=crw
set orw=iow("Public order","when calling stringToIndex in Multiboards, line 62")
set Orw=iow("0","when calling stringToIndex in Multiboards, line 62")
set lrw=iow(" ","when calling stringToIndex in Multiboards, line 62")
set brw=iow("|","when calling stringToIndex in Multiboards, line 62")
set yrw=iow(" ","when calling stringToIndex in Multiboards, line 62")
set prw=iow(" ","when calling stringToIndex in Multiboards, line 62")
set Fb[hb]="when calling asList in Multiboards, line 62"
set hb=hb+1
set erw=F8("when calling new_LinkedList in LinkedList, line 391")
call ayw(erw,orw,"when calling add in LinkedList, line 393")
call ayw(erw,Orw,"when calling add in LinkedList, line 393")
call ayw(erw,lrw,"when calling add in LinkedList, line 393")
call ayw(erw,brw,"when calling add in LinkedList, line 393")
call ayw(erw,yrw,"when calling add in LinkedList, line 393")
call ayw(erw,prw,"when calling add in LinkedList, line 393")
set hb=hb-1
set tO[5]=erw
set qrw=iow("Population","when calling stringToIndex in Multiboards, line 63")
set arw=iow("0","when calling stringToIndex in Multiboards, line 63")
set nrw=iow(" ","when calling stringToIndex in Multiboards, line 63")
set drw=iow("|","when calling stringToIndex in Multiboards, line 63")
set frw=iow(" ","when calling stringToIndex in Multiboards, line 63")
set Rrw=iow(" ","when calling stringToIndex in Multiboards, line 63")
set Fb[hb]="when calling asList in Multiboards, line 63"
set hb=hb+1
set Trw=F8("when calling new_LinkedList in LinkedList, line 391")
call ayw(Trw,qrw,"when calling add in LinkedList, line 393")
call ayw(Trw,arw,"when calling add in LinkedList, line 393")
call ayw(Trw,nrw,"when calling add in LinkedList, line 393")
call ayw(Trw,drw,"when calling add in LinkedList, line 393")
call ayw(Trw,frw,"when calling add in LinkedList, line 393")
call ayw(Trw,Rrw,"when calling add in LinkedList, line 393")
set hb=hb-1
set tO[6]=Trw
set Yrw=iow(" ","when calling stringToIndex in Multiboards, line 64")
set Grw=iow(" ","when calling stringToIndex in Multiboards, line 64")
set grw=iow(" ","when calling stringToIndex in Multiboards, line 64")
set hrw=iow("|","when calling stringToIndex in Multiboards, line 64")
set Frw=iow(" ","when calling stringToIndex in Multiboards, line 64")
set krw=iow(" ","when calling stringToIndex in Multiboards, line 64")
set Fb[hb]="when calling asList in Multiboards, line 64"
set hb=hb+1
set jrw=F8("when calling new_LinkedList in LinkedList, line 391")
call ayw(jrw,Yrw,"when calling add in LinkedList, line 393")
call ayw(jrw,Grw,"when calling add in LinkedList, line 393")
call ayw(jrw,grw,"when calling add in LinkedList, line 393")
call ayw(jrw,hrw,"when calling add in LinkedList, line 393")
call ayw(jrw,Frw,"when calling add in LinkedList, line 393")
call ayw(jrw,krw,"when calling add in LinkedList, line 393")
set hb=hb-1
set tO[7]=jrw
set xrw=iow(" ","when calling stringToIndex in Multiboards, line 65")
set vrw=iow(" ","when calling stringToIndex in Multiboards, line 65")
set mrw=iow(" ","when calling stringToIndex in Multiboards, line 65")
set Qrw=iow("|","when calling stringToIndex in Multiboards, line 65")
set Wrw=iow(" ","when calling stringToIndex in Multiboards, line 65")
set Erw=iow(" ","when calling stringToIndex in Multiboards, line 65")
set Fb[hb]="when calling asList in Multiboards, line 65"
set hb=hb+1
set Zrw=F8("when calling new_LinkedList in LinkedList, line 391")
call ayw(Zrw,xrw,"when calling add in LinkedList, line 393")
call ayw(Zrw,vrw,"when calling add in LinkedList, line 393")
call ayw(Zrw,mrw,"when calling add in LinkedList, line 393")
call ayw(Zrw,Qrw,"when calling add in LinkedList, line 393")
call ayw(Zrw,Wrw,"when calling add in LinkedList, line 393")
call ayw(Zrw,Erw,"when calling add in LinkedList, line 393")
set hb=hb-1
set tO[8]=Zrw
set Urw=iow(" ","when calling stringToIndex in Multiboards, line 66")
set Irw=iow(" ","when calling stringToIndex in Multiboards, line 66")
set Prw=iow(" ","when calling stringToIndex in Multiboards, line 66")
set Arw=iow("|","when calling stringToIndex in Multiboards, line 66")
set Drw=iow(" ","when calling stringToIndex in Multiboards, line 66")
set Hrw=iow(" ","when calling stringToIndex in Multiboards, line 66")
set Fb[hb]="when calling asList in Multiboards, line 66"
set hb=hb+1
set Jrw=F8("when calling new_LinkedList in LinkedList, line 391")
call ayw(Jrw,Urw,"when calling add in LinkedList, line 393")
call ayw(Jrw,Irw,"when calling add in LinkedList, line 393")
call ayw(Jrw,Prw,"when calling add in LinkedList, line 393")
call ayw(Jrw,Arw,"when calling add in LinkedList, line 393")
call ayw(Jrw,Drw,"when calling add in LinkedList, line 393")
call ayw(Jrw,Hrw,"when calling add in LinkedList, line 393")
set hb=hb-1
set tO[9]=Jrw
set hb=hb-1
return true
endfunction
function yew takes nothing returns boolean
set hb=0
return Krw("Multiboards, line 1")
endfunction
function bg takes nothing returns boolean
if IsUnitType(GetEnumUnit(),UNIT_TYPE_STRUCTURE)!=false then
return false
endif
return true
endfunction
function yg takes nothing returns nothing
if bg() then
call SetUnitPositionLoc(GetEnumUnit(),c)
endif
endfunction
function Ff takes nothing returns nothing
set w=null
set u=null
set s=null
set t=null
set i=null
set S=null
set c=null
set o=null
set O=null
set l=null
set b=null
set y=null
set q=null
set a=null
set n=null
set d=null
set f=null
set R=null
set T=null
set Y=null
set G=null
set g=null
set h=null
set F=null
set k=null
set j=null
set x=null
set v=null
set m=null
set Q=null
set W=null
set E=null
set Z=null
set U=null
set I=null
set P=null
set A=null
set D=null
set H=null
set J=null
set K=null
set L=null
set X=null
set C=null
set V=null
set B=null
set N=null
set M=null
set ww=null
set uw=null
set rw=null
set sw=null
set tw=null
set iw=null
set Sw=null
set cw=null
set ow=null
set Ow=null
set lw=null
set bw=null
set yw=null
set pw=null
set ew=null
set qw=null
set aw=null
set nw=null
set dw=null
set fw=null
set Rw=null
set Tw=null
set Yw=null
set Gw=null
set gw=null
set hw=null
set Fw=null
set kw=null
set jw=null
set xw=null
set vw=null
set mw=null
set Qw=null
set Ww=null
set Ew=null
set Zw=null
set Uw=null
set Iw=null
set Pw=null
set Aw=null
set Dw=null
set Hw=null
set Jw=null
set Kw=null
set Lw=null
set Xw=null
set Cw=null
set Vw=null
set Bw=null
set Nw=null
set Mw=null
set wu=null
set uu=null
set ru=null
set su=null
set tu=null
set iu=null
set Su=null
set cu=null
set ou=null
set Ou=null
set lu=null
set bu=null
set yu=null
set pu=null
set eu=null
set qu=null
set au=null
set nu=null
set du=null
set fu=null
set Ru=null
set Tu=null
set Yu=null
set Gu=null
set gu=null
set hu=null
set Fu=null
set ku=null
set ju=null
set xu=null
set vu=null
set mu=null
set Qu=null
set Wu=null
set Eu=null
set Zu=null
set Uu=null
set Iu=null
set Pu=null
set Au=null
set Du=null
set Hu=null
set Ju=null
set Ku=null
set Lu=null
set Xu=null
set Cu=null
set Vu=null
set Bu=null
set Nu=null
set Mu=null
set wr=null
set ur=null
set rr=null
set sr=null
set tr=null
set ir=null
set Sr=null
set cr=null
set lr=null
set br=null
set yr=null
set pr=null
set er=null
set qr=null
set ar=null
set nr=null
set dr=null
set fr=null
set Rr=null
set Tr=null
set Yr=null
set Gr=null
set gr=null
set hr=null
set Fr=null
set kr=null
set jr=null
set xr=null
set vr=null
set mr=null
set Qr=null
set Wr=null
set Er=null
set Zr=null
set Ur=null
set Ir=null
set Pr=null
set Ar=null
set Dr=null
set Hr=null
set Jr=null
set Kr=null
set Lr=null
set Xr=null
set Cr=null
set Vr=null
set Br=null
set Nr=null
set Mr=null
set ws=null
set us=null
set rs=null
set ss=null
set ts=null
set is=null
set Ss=null
set cs=null
set os=null
set Os=null
set ls=null
set bs=null
set ys=null
set ps=null
set es=null
set qs=null
set as=null
set ns=null
set ds=null
set fs=null
set Rs=null
set Ts=null
set Ys=null
set Gs=null
set gs=null
set hs=null
set Fs=null
set ks=null
set js=null
set xs=null
set vs=null
set ms=null
set Qs=null
set Ws=null
set Es=null
set Zs=null
set Us=null
set Is=null
set Ps=null
set As=null
set Ds=null
set Hs=null
set Js=null
set Ks=null
set Ls=null
set Xs=null
set Cs=null
set Vs=null
set Bs=null
set Ns=null
set Ms=null
set wt=null
set ut=null
set rt=null
set st=null
set tt=null
set St=null
set ct=null
set ot=null
set Ot=null
set lt=null
set bt=null
set yt=null
set pt=null
set et=null
set qt=null
set at=null
set nt=null
set dt=null
set ft=null
set Rt=null
set Tt=null
set Yt=null
set Gt=null
set gt=null
set ht=null
set Ft=null
set kt=null
set jt=null
set xt=null
set vt=null
set mt=null
set Qt=null
set Wt=null
set Et=null
set Zt=null
set Ut=null
set It=null
set Pt=null
set At=null
set Dt=null
set Ht=null
set Jt=null
set Kt=null
set Lt=null
set Xt=null
set Ct=null
set Vt=null
set Bt=null
set Nt=null
set Mt=null
set wi=null
set ui=null
set ri=null
set si=null
set ti=null
set ii=null
set Si=null
set ci=null
set oi=null
set Oi=null
set li=null
set bi=null
set yi=null
set pi=null
set ei=null
set qi=null
set ai=null
set ni=null
set di=null
set fi=null
set Ri=null
set Ti=null
set Yi=null
set Gi=null
set gi=null
set hi=null
set Fi=null
set ki=null
set ji=null
set xi=null
set vi=null
set mi=null
set Qi=null
set Wi=null
set Ei=null
set Zi=null
set Ui=null
set Ii=null
set Pi=null
set Ai=null
set Di=null
set Hi=null
set Ji=null
set Ki=null
set Li=null
set Xi=null
set Ci=null
set Vi=null
set Bi=null
set Ni=null
set Mi=null
set wS=null
set sy=function VR
set ty=function wT
set iy=function sT
set Sy=function ST
set cy=function yT
set oy=function dT
set Oy=function gT
set ly=function vT
set by=function UT
set yy=function JT
set py=function BT
set ey=function sY
set qy=function OY
set ay=function qY
set ny=function TY
set dy=function kY
set fy=function WY
set Ry=function AY
set Ty=function XY
set Yy=function wG
set Gy=function sG
set gy=function oG
set hy=function OG
set Fy=function YG
set ky=function xG
set jy=function kG
set xy=function AG
set vy=function CG
set my=function LG
set Qy=function ig
set Wy=function yg
set Ey=function lg
set Zy=function Yg
set Uy=function xg
set Iy=function kg
set Py=function Ag
set Ay=function Cg
set Dy=function Mg
set Hy=function sh
set Jy=function ch
set Ky=function lh
set Ly=function Yh
set Xy=function jh
set Cy=function Dh
set Vy=function Ch
set By=function cF
set Ny=function pF
set My=function hF
set wp=function vF
set up=function JF
set rp=function VF
set sp=function ok
set tp=function pk
set ip=function hk
set Sp=function vk
set cp=function Jk
set op=function Bk
set Op=function Oj
set lp=function qj
set bp=function kj
set yp=function Wj
set pp=function Xj
set ep=function Mj
set qp=function bx
set ap=function nx
set np=function dx
set dp=function gx
set fp=function hx
set Rp=function mx
set Tp=function Qx
set Yp=function Px
set Gp=function Ax
set gp=function Xx
set hp=function Cx
set Fp=function uv
set kp=function rv
set jp=function ov
set xp=function Ov
set vp=function qv
set mp=function av
set Qp=function Yv
set Wp=function Gv
set Ep=function xv
set Zp=function vv
set Up=function Uv
set Ip=function Iv
set Pp=function Kv
set Ap=function Lv
set Dp=function Mv
set Hp=function wm
set Jp=function Sm
set Kp=function cm
set Lp=function pm
set Xp=function em
set Cp=function Rm
set Vp=function Tm
set Bp=function km
set Np=function jm
set Mp=function Em
set we=function Zm
set ue=function Hm
set re=function Jm
set se=function Bm
set te=function Nm
set ie=function tQ
set Se=function iQ
set ce=function bQ
set oe=function yQ
set Oe=function nQ
set le=function dQ
set be=function TQ
set ye=function YQ
set pe=function jQ
set ee=function xQ
set qe=function ZQ
set ae=function UQ
set ne=function JQ
set de=function KQ
set fe=function NQ
set Re=function MQ
set Te=function iW
set Ye=function SW
set Ge=function yW
set ge=function pW
set he=function fW
set Fe=function RW
set ke=function FW
set je=function kW
set xe=function WW
set ve=function EW
set me=function DW
set Qe=function HW
set We=function VW
set Ee=function BW
set Ze=function sE
set Ue=function tE
set Ie=function lE
set Pe=function bE
set Ae=function nE
set De=function dE
set He=function GE
set Je=function gE
set Ke=function kE
set Le=function jE
set Xe=function EE
set Ce=function ZE
set Ve=function HE
set Be=function JE
set Ne=function BE
set Me=function NE
set wq=function tZ
set uq=function iZ
set rq=function bZ
set sq=function yZ
set tq=function dZ
set iq=function fZ
set Sq=function hZ
set cq=function FZ
set oq=function QZ
set Oq=function WZ
set lq=function AZ
set bq=function DZ
set yq=function CZ
set pq=function VZ
set eq=function rU
set qq=function sU
set aq=function OU
set nq=function lU
set dq=function aU
set fq=function nU
set Rq=function YU
set Tq=function GU
set Yq=function FU
set Gq=function kU
set gq=function WU
set hq=function EU
set Fq=function DU
set kq=function HU
set jq=function VU
set xq=function BU
set vq=function sI
set mq=function tI
set Qq=function lI
set Wq=function bI
set Eq=function nI
set Zq=function dI
set Uq=function gI
set Iq=function hI
set Pq=function mI
set Aq=function QI
set Dq=function PI
set Hq=function AI
set Jq=function XI
set Kq=function CI
set Lq=function uP
set Xq=function rP
set Cq=function oP
set Vq=function OP
set Bq=function qP
set Nq=function aP
set Mq=function YP
set wa=function GP
set ua=function xP
set ra=function vP
set sa=function UP
set ta=function IP
set ia=function KP
set Sa=function LP
set ca=function NP
set oa=function MP
set Oa=function uA
set la=function cA
set ba=function qA
set ya=function TA
set pa=function xA
set ea=function EA
set qa=function JA
set aa=function BA
set na=function iD
set da=function bD
set fa=function fD
set Ra=function hD
set Ta=function FD
set Ya=function QD
set Ga=function WD
set ga=function AD
set ha=function DD
set Fa=function CD
set ka=function VD
set ja=function rH
set xa=function sH
set va=function OH
set ma=function lH
set Qa=function aH
set Wa=function nH
set Ea=function GH
set Za=function gH
set Ua=function vH
set Ia=function mH
set Pa=function IH
set Aa=function PH
set Da=function LH
set Ha=function XH
set Ja=function wJ
set Ka=function uJ
set La=function cJ
set Xa=function oJ
set Ca=function eJ
set Va=function qJ
set Ba=function TJ
set Na=function YJ
set Ma=function jJ
set wn=function xJ
set un=function ZJ
set rn=function UJ
set sn=function JJ
set tn=function KJ
set Sn=function NJ
set cn=function MJ
set on=function iK
set On=function SK
set ln=function yK
set bn=function pK
set yn=function rT
set pn=function Qj
set en=function Ciw
set qn=function y7
set an=function BSw
set nn=function FK
set dn=function Slw
set fn=function U0w
set Rn=function ttw
set Tn=function qiw
set Yn=function kK
set Gn=function a6
set gn=function j8
set hn=function s6
set Fn=function I0w
set kn=function Riw
set jn=function Scw
set xn=function tiw
set vn=function Hpw
set mn=function d6
set Qn=function p7
set Wn=function clw
set En=function Jpw
set Zn=function ZM
set Un=function Kpw
set In=function Xpw
set Pn=function hK
set An=function jK
set Dn=function Lrw
set Hn=function R6
set Jn=function Cpw
set Kn=function Vpw
set Ln=function Bpw
set Xn=function S3
set Cn=function lcw
set Vn=function i2
set Bn=function b7
set Nn=function ksw
set Mn=function CSw
set wd=function VSw
set ud=function jcw
set rd=function kow
set sd=function Npw
set td=function jow
set id=function Q9
set Sd=function Mpw
set cd=function wew
set od=function Fsw
set Od=function uew
set ld=function rew
set bd=function sew
set yd=function xow
set pd=function tew
set ed=function k0w
set qd=function q6
set ad=function icw
set nd=function iew
set dd=function aSw
set fd=function bew
set Rd=function yew
set Td=function itw
set Yd=function pew
set Gd=function x8
set gd=function eew
set hd=function qew
set Fd=function aew
set kd=function N3
set jd=function dew
set xd=function few
set vd=function Rew
set md=function Tew
set Qd=function L1
set Wd=function Yew
set Ed=function Gew
set Zd=function k8
set Ud=function gew
set Id=function hew
set Pd=function Few
set Ad=function kew
set Dd=function jew
set Hd=function xew
set Jd=function vew
set Kd=function JL
set Ld=function mew
set Xd=function Qew
set Cd=function yM
set Vd=function Wew
set Bd=function Eew
set Nd=function Zew
set Md=function Uew
set wf=function Iew
set uf=function Pew
set rf=function Dew
set sf=function Hew
set tf=function x1
set Sf=function Jew
set cf=function t2
set of=function Kew
set Of=function n6
set lf=function m9
set bf=function Lew
set yf=function Nsw
set pf=function wtw
set ef=function utw
set qf=function f6
set af=function Cew
set nf=function Vew
set df=function Bew
set ff=function Xew
endfunction
function XR takes nothing returns nothing
local player LR=Player(PLAYER_NEUTRAL_AGGRESSIVE)
call CreateUnit(LR,1747989297,-1600.0,-128.0,270.000)
call CreateUnit(LR,1747989297,-15040.0,10816.0,270.000)
call CreateUnit(LR,1747989297,-256.0,-2432.0,270.000)
call CreateUnit(LR,1747989297,-24320.0,3904.0,270.000)
call CreateUnit(LR,1747989297,-23552.0,-4544.0,270.000)
call CreateUnit(LR,1747989297,-23360.0,-64.0,270.000)
call CreateUnit(LR,1747989297,2176.0,-7744.0,270.000)
call CreateUnit(LR,1747989297,-6336.0,8000.0,270.000)
call CreateUnit(LR,1747989297,832.0,-5568.0,270.000)
call CreateUnit(LR,1747989297,-3648.0,1856.0,270.000)
call CreateUnit(LR,1747989042,-768.0,24384.0,270.000)
call CreateUnit(LR,1747989297,-26304.0,-8704.0,270.000)
call CreateUnit(LR,1747989297,2688.0,-3008.0,270.000)
call CreateUnit(LR,1747989297,-5568.0,-2752.0,270.000)
call CreateUnit(LR,1747989297,-3456.0,-2880.0,270.000)
call CreateUnit(LR,1747989297,-6464.0,1280.0,270.000)
call CreateUnit(LR,1747989297,-8064.0,3200.0,270.000)
call CreateUnit(LR,1747989297,-8768.0,1984.0,270.000)
call CreateUnit(LR,1747989297,-7104.0,-768.0,270.000)
call CreateUnit(LR,1747989297,-28544.0,0.0,270.000)
call CreateUnit(LR,1747989297,-27840.0,-2752.0,270.000)
call CreateUnit(LR,1747989297,-27008.0,2688.0,270.000)
call CreateUnit(LR,1747989297,-17024.0,512.0,270.000)
call CreateUnit(LR,1747989297,-21696.0,-4224.0,270.000)
call CreateUnit(LR,1747989042,17536.0,-9024.0,270.000)
call CreateUnit(LR,1747989297,10816.0,-7360.0,270.000)
call CreateUnit(LR,1747989297,12800.0,-6912.0,270.000)
call CreateUnit(LR,1747989297,15488.0,-7552.0,270.000)
call CreateUnit(LR,1747989297,19072.0,-7424.0,270.000)
call CreateUnit(LR,1747989297,15360.0,-5568.0,270.000)
call CreateUnit(LR,1747989297,17216.0,-8640.0,270.000)
call CreateUnit(LR,1747989297,16960.0,-16192.0,270.000)
call CreateUnit(LR,1747989297,6976.0,-6592.0,270.000)
call CreateUnit(LR,1747989297,24000.0,256.0,270.000)
call CreateUnit(LR,1747989297,-10688.0,-384.0,270.000)
call CreateUnit(LR,1747989297,13952.0,-11008.0,270.000)
call CreateUnit(LR,1747989297,-10944.0,-4608.0,270.000)
call CreateUnit(LR,1747989297,-21440.0,-8384.0,270.000)
call CreateUnit(LR,1747989297,17472.0,9472.0,270.000)
call CreateUnit(LR,1747989297,-16768.0,-8064.0,270.000)
call CreateUnit(LR,1747989297,-9920.0,-11264.0,270.000)
call CreateUnit(LR,1747989297,-7488.0,-16256.0,270.000)
call CreateUnit(LR,1747989297,448.0,-17600.0,270.000)
call CreateUnit(LR,1747989297,11008.0,-18496.0,270.000)
call CreateUnit(LR,1747989297,13248.0,-17856.0,270.000)
call CreateUnit(LR,1747989297,12288.0,-20864.0,270.000)
call CreateUnit(LR,1747989297,-11456.0,11008.0,270.000)
call CreateUnit(LR,1747989297,-8640.0,7104.0,270.000)
call CreateUnit(LR,1747989297,-7360.0,17088.0,270.000)
call CreateUnit(LR,1747989297,-5120.0,14528.0,270.000)
call CreateUnit(LR,1747989297,15488.0,-26816.0,270.000)
call CreateUnit(LR,1747989297,-9600.0,13120.0,270.000)
call CreateUnit(LR,1747989297,-11456.0,14528.0,270.000)
call CreateUnit(LR,1747989297,-12544.0,16320.0,270.000)
call CreateUnit(LR,1747989297,-7680.0,22272.0,270.000)
call CreateUnit(LR,1747989297,-6272.0,21376.0,270.000)
call CreateUnit(LR,1747989297,-4992.0,21888.0,270.000)
call CreateUnit(LR,1747989297,-1280.0,23936.0,270.000)
call CreateUnit(LR,1747989297,-3328.0,23232.0,270.000)
call CreateUnit(LR,1747989297,-2560.0,26368.0,270.000)
call CreateUnit(LR,1747989297,-6528.0,28288.0,270.000)
call CreateUnit(LR,1747989297,-9856.0,28416.0,270.000)
call CreateUnit(LR,1747989297,-13376.0,15104.0,270.000)
call CreateUnit(LR,1747989297,-10688.0,3520.0,270.000)
call CreateUnit(LR,1747989297,-9856.0,5440.0,270.000)
call CreateUnit(LR,1747989297,-6720.0,4096.0,270.000)
call CreateUnit(LR,1747989297,-13632.0,2368.0,270.000)
call CreateUnit(LR,1747989297,-10496.0,17728.0,270.000)
call CreateUnit(LR,1747989297,-7616.0,11200.0,270.000)
call CreateUnit(LR,1747989297,-18688.0,5760.0,270.000)
call CreateUnit(LR,1747989297,-25024.0,-3008.0,270.000)
call CreateUnit(LR,1747989297,-20096.0,1408.0,270.000)
call CreateUnit(LR,1747989297,-7040.0,-7808.0,270.000)
call CreateUnit(LR,1747989297,-5376.0,-9216.0,270.000)
call CreateUnit(LR,1747989297,24896.0,-27456.0,270.000)
call CreateUnit(LR,1747989297,-20352.0,12224.0,270.000)
call CreateUnit(LR,1747989297,-13568.0,5184.0,270.000)
call CreateUnit(LR,1747989297,-5120.0,24576.0,270.000)
call CreateUnit(LR,1747989297,-1856.0,27776.0,270.000)
call CreateUnit(LR,1747989297,-16704.0,24192.0,270.000)
call CreateUnit(LR,1747989297,-15936.0,17088.0,270.000)
call CreateUnit(LR,1747989297,-17792.0,16064.0,270.000)
call CreateUnit(LR,1747989297,-20224.0,21632.0,270.000)
call CreateUnit(LR,1747989297,-22400.0,19968.0,270.000)
call CreateUnit(LR,1747989297,-15872.0,20544.0,270.000)
call CreateUnit(LR,1747989297,-19776.0,16512.0,270.000)
call CreateUnit(LR,1747989297,-17088.0,12672.0,270.000)
call CreateUnit(LR,1747989297,-18560.0,19712.0,270.000)
call CreateUnit(LR,1747989297,-15680.0,26112.0,270.000)
call CreateUnit(LR,1747989297,-17088.0,26816.0,270.000)
call CreateUnit(LR,1747989297,-16704.0,3584.0,270.000)
call CreateUnit(LR,1747989297,-11456.0,7232.0,270.000)
call CreateUnit(LR,1747989297,-18176.0,10816.0,270.000)
call CreateUnit(LR,1747989297,-16000.0,6016.0,270.000)
call CreateUnit(LR,1747989297,-8896.0,26688.0,270.000)
call CreateUnit(LR,1747989297,9216.0,-4416.0,270.000)
call CreateUnit(LR,1747989297,6656.0,-4480.0,270.000)
call CreateUnit(LR,1747989297,5184.0,-1856.0,270.000)
call CreateUnit(LR,1747989297,18624.0,-448.0,270.000)
call CreateUnit(LR,1747989297,11008.0,-1984.0,270.000)
call CreateUnit(LR,1747989297,14144.0,-128.0,270.000)
call CreateUnit(LR,1747989297,8384.0,-10368.0,270.000)
call CreateUnit(LR,1747989297,5376.0,-12224.0,270.000)
call CreateUnit(LR,1747989297,3392.0,-7296.0,270.000)
call CreateUnit(LR,1747989297,12672.0,-3904.0,270.000)
call CreateUnit(LR,1747989297,27008.0,-11520.0,270.000)
call CreateUnit(LR,1747989297,-25216.0,1472.0,270.000)
call CreateUnit(LR,1747989297,23552.0,11072.0,270.000)
call CreateUnit(LR,1747989297,-20736.0,-2112.0,270.000)
call CreateUnit(LR,1747989297,-22592.0,2560.0,270.000)
call CreateUnit(LR,1747989297,-20864.0,3136.0,270.000)
call CreateUnit(LR,1747989297,-17280.0,-3136.0,270.000)
call CreateUnit(LR,1747989297,-3584.0,4608.0,270.000)
call CreateUnit(LR,1747989297,1536.0,29440.0,270.000)
call CreateUnit(LR,1747989297,-23104.0,-8832.0,270.000)
call CreateUnit(LR,1747989297,1216.0,-960.0,270.000)
call CreateUnit(LR,1747989297,-13312.0,-8512.0,270.000)
call CreateUnit(LR,1747989297,26240.0,-2688.0,270.000)
call CreateUnit(LR,1747989043,-7872.0,17536.0,270.000)
call CreateUnit(LR,1747989297,-13568.0,12160.0,270.000)
call CreateUnit(LR,1747989297,-13696.0,8064.0,270.000)
call CreateUnit(LR,1747989297,27648.0,-5824.0,270.000)
call CreateUnit(LR,1747989297,-4544.0,11648.0,270.000)
call CreateUnit(LR,1747989297,28992.0,-3200.0,270.000)
call CreateUnit(LR,1747989297,-3072.0,8320.0,270.000)
call CreateUnit(LR,1747989297,-384.0,8512.0,270.000)
call CreateUnit(LR,1747989297,28224.0,2752.0,270.000)
call CreateUnit(LR,1747989297,-4992.0,17280.0,270.000)
call CreateUnit(LR,1747989297,64.0,12608.0,270.000)
call CreateUnit(LR,1747989297,-2112.0,13696.0,270.000)
call CreateUnit(LR,1747989297,4160.0,5376.0,270.000)
call CreateUnit(LR,1747989297,4224.0,3904.0,270.000)
call CreateUnit(LR,1747989297,7232.0,2240.0,270.000)
call CreateUnit(LR,1747989297,-384.0,3072.0,270.000)
call CreateUnit(LR,1747989297,-8128.0,19968.0,270.000)
call CreateUnit(LR,1747989297,3072.0,192.0,270.000)
call CreateUnit(LR,1747989297,832.0,15872.0,270.000)
call CreateUnit(LR,1747989297,-2304.0,16064.0,270.000)
call CreateUnit(LR,1747989297,4416.0,19648.0,270.000)
call CreateUnit(LR,1747989297,1792.0,6976.0,270.000)
call CreateUnit(LR,1747989297,5888.0,24960.0,270.000)
call CreateUnit(LR,1747989297,-1792.0,19200.0,270.000)
call CreateUnit(LR,1747989297,3008.0,22784.0,270.000)
call CreateUnit(LR,1747989297,3200.0,18240.0,270.000)
call CreateUnit(LR,1747989297,-3712.0,-6528.0,270.000)
call CreateUnit(LR,1747989297,-17216.0,22208.0,270.000)
call CreateUnit(LR,1747989297,-18880.0,17920.0,270.000)
call CreateUnit(LR,1747989297,-17280.0,18304.0,270.000)
call CreateUnit(LR,1747989297,-22272.0,22400.0,270.000)
call CreateUnit(LR,1747989297,-10496.0,-9152.0,270.000)
call CreateUnit(LR,1747989297,13248.0,5120.0,270.000)
call CreateUnit(LR,1747989297,7936.0,-2368.0,270.000)
call CreateUnit(LR,1747989297,3520.0,27008.0,270.000)
call CreateUnit(LR,1747989297,8832.0,26368.0,270.000)
call CreateUnit(LR,1747989297,6848.0,21440.0,270.000)
call CreateUnit(LR,1747989297,6144.0,18560.0,270.000)
call CreateUnit(LR,1747989297,3904.0,11072.0,270.000)
call CreateUnit(LR,1747989297,8512.0,12352.0,270.000)
call CreateUnit(LR,1747989297,9280.0,20032.0,270.000)
call CreateUnit(LR,1747989297,1216.0,11008.0,270.000)
call CreateUnit(LR,1747989044,-15680.0,11200.0,270.000)
call CreateUnit(LR,1747989044,-15104.0,17408.0,270.000)
call CreateUnit(LR,1747989045,-1728.0,28608.0,270.000)
call CreateUnit(LR,1747989043,-18304.0,18112.0,270.000)
call CreateUnit(LR,1747989044,-9600.0,13888.0,270.000)
call CreateUnit(LR,1747989297,384.0,19456.0,270.000)
call CreateUnit(LR,1747989044,4864.0,5952.0,270.000)
call CreateUnit(LR,1747989044,8000.0,-1664.0,270.000)
call CreateUnit(LR,1747989044,9280.0,-3008.0,270.000)
call CreateUnit(LR,1747989045,-21056.0,21056.0,270.000)
call CreateUnit(LR,1747989045,-19648.0,12224.0,270.000)
call CreateUnit(LR,1747989045,17984.0,-13120.0,270.000)
call CreateUnit(LR,1747989042,-28544.0,704.0,270.000)
call CreateUnit(LR,1747989045,-9344.0,7168.0,270.000)
call CreateUnit(LR,1747989043,-6336.0,8576.0,270.000)
call CreateUnit(LR,1747989045,-15616.0,21248.0,270.000)
call CreateUnit(LR,1747989045,-16640.0,1024.0,270.000)
call CreateUnit(LR,1747989045,13760.0,-11584.0,270.000)
call CreateUnit(LR,1747989042,-11328.0,3712.0,270.000)
call CreateUnit(LR,1747989042,-16768.0,25920.0,270.000)
call CreateUnit(LR,1747989045,-19200.0,28352.0,270.000)
call CreateUnit(LR,1747989043,3456.0,11584.0,270.000)
call CreateUnit(LR,1747989044,-24640.0,4352.0,270.000)
call CreateUnit(LR,1747989044,-23232.0,-5120.0,270.000)
call CreateUnit(LR,1747989042,-23424.0,768.0,270.000)
call CreateUnit(LR,1747989045,-15936.0,-2688.0,270.000)
call CreateUnit(LR,1747989045,-10752.0,-3456.0,270.000)
call CreateUnit(LR,1747989044,-7552.0,4416.0,270.000)
call CreateUnit(LR,1747989045,-20160.0,-1600.0,270.000)
call CreateUnit(LR,1747989045,-21824.0,2560.0,270.000)
call CreateUnit(LR,1747989045,11392.0,-7104.0,270.000)
call CreateUnit(LR,1747989042,4352.0,20224.0,270.000)
call CreateUnit(LR,1747989044,-15360.0,4992.0,270.000)
call CreateUnit(LR,1747989042,-896.0,3392.0,270.000)
call CreateUnit(LR,1747989045,-6528.0,-832.0,270.000)
call CreateUnit(LR,1747989043,-4928.0,-3264.0,270.000)
call CreateUnit(LR,1747989042,-6144.0,-8192.0,270.000)
call CreateUnit(LR,1747989043,23424.0,640.0,270.000)
call CreateUnit(LR,1747989043,-6976.0,1344.0,270.000)
call CreateUnit(LR,1747989043,4352.0,128.0,270.000)
call CreateUnit(LR,1747989297,17472.0,19648.0,270.000)
call CreateUnit(LR,1747989044,-7872.0,22784.0,270.000)
call CreateUnit(LR,1747989297,20864.0,21504.0,270.000)
call CreateUnit(LR,1747989044,-9152.0,28480.0,270.000)
call CreateUnit(LR,1747989042,-27712.0,-9536.0,270.000)
call CreateUnit(LR,1747989042,4800.0,-12480.0,270.000)
call CreateUnit(LR,1747989045,7232.0,-11328.0,270.000)
call CreateUnit(LR,1747989045,1792.0,-8064.0,270.000)
call CreateUnit(LR,1747989297,-1600.0,5952.0,270.000)
call CreateUnit(LR,1747989043,-128.0,-1792.0,270.000)
call CreateUnit(LR,1747989042,-3392.0,8640.0,270.000)
call CreateUnit(LR,1747989044,-1856.0,16576.0,270.000)
call CreateUnit(LR,1747989043,-13888.0,14784.0,270.000)
call CreateUnit(LR,1747989297,-29568.0,-9792.0,270.000)
call CreateUnit(LR,1747989043,-9088.0,26240.0,270.000)
call CreateUnit(LR,1747989045,-5440.0,23808.0,270.000)
call CreateUnit(LR,1747989045,2176.0,30080.0,270.000)
call CreateUnit(LR,1747989043,1984.0,6464.0,270.000)
call CreateUnit(LR,1747989297,-26304.0,-1408.0,270.000)
call CreateUnit(LR,1747989043,448.0,13056.0,270.000)
call CreateUnit(LR,1747989045,3072.0,26752.0,270.000)
call CreateUnit(LR,1747989043,6656.0,18880.0,270.000)
call CreateUnit(LR,1747989043,3264.0,-3712.0,270.000)
call CreateUnit(LR,1747989297,15872.0,5760.0,270.000)
call CreateUnit(LR,1747989043,6528.0,22080.0,270.000)
call CreateUnit(LR,1747989044,8896.0,27008.0,270.000)
call CreateUnit(LR,1747989297,18496.0,-17280.0,270.000)
call CreateUnit(LR,1747989297,11392.0,7872.0,270.000)
call CreateUnit(LR,1747989297,12672.0,11328.0,270.000)
call CreateUnit(LR,1747989297,6016.0,12416.0,270.000)
call CreateUnit(LR,1747989297,7104.0,7808.0,270.000)
call CreateUnit(LR,1747989297,20864.0,2688.0,270.000)
call CreateUnit(LR,1747989297,24000.0,2560.0,270.000)
call CreateUnit(LR,1747989297,19648.0,11328.0,270.000)
call CreateUnit(LR,1747989297,11584.0,16960.0,270.000)
call CreateUnit(LR,1747989297,18496.0,-13248.0,270.000)
call CreateUnit(LR,1747989297,17216.0,-11456.0,270.000)
call CreateUnit(LR,1747989297,25088.0,-8320.0,270.000)
call CreateUnit(LR,1747989297,15680.0,-17536.0,270.000)
call CreateUnit(LR,1747989297,16640.0,-14208.0,270.000)
call CreateUnit(LR,1747989297,17280.0,-19584.0,270.000)
call CreateUnit(LR,1747989297,22912.0,-10240.0,270.000)
call CreateUnit(LR,1747989297,20864.0,-23040.0,270.000)
call CreateUnit(LR,1747989044,13120.0,-21696.0,270.000)
call CreateUnit(LR,1747989297,20096.0,-5760.0,270.000)
call CreateUnit(LR,1747989297,18816.0,-3776.0,270.000)
call CreateUnit(LR,1747989042,14464.0,-26432.0,270.000)
call CreateUnit(LR,1747989044,23808.0,-27776.0,270.000)
call CreateUnit(LR,1747989042,11776.0,-18688.0,270.000)
call CreateUnit(LR,1747989043,256.0,-18048.0,270.000)
call CreateUnit(LR,1747989045,-16192.0,-8192.0,270.000)
call CreateUnit(LR,1747989045,-11520.0,-10944.0,270.000)
call CreateUnit(LR,1747989045,16512.0,-19968.0,270.000)
call CreateUnit(LR,1747989045,20416.0,-22272.0,270.000)
call CreateUnit(LR,1747989044,28800.0,-11904.0,270.000)
call CreateUnit(LR,1747989297,15040.0,23104.0,270.000)
call CreateUnit(LR,1747989044,8128.0,12928.0,270.000)
call CreateUnit(LR,1747989044,16896.0,-15744.0,270.000)
call CreateUnit(LR,1747989042,17984.0,-640.0,270.000)
call CreateUnit(LR,1747989045,20608.0,3136.0,270.000)
call CreateUnit(LR,1747989045,7232.0,-5120.0,270.000)
call CreateUnit(LR,1747989045,25984.0,-8128.0,270.000)
call CreateUnit(LR,1747989045,20544.0,-5440.0,270.000)
call CreateUnit(LR,1747989045,11968.0,17856.0,270.000)
call CreateUnit(LR,1747989045,10048.0,20032.0,270.000)
call CreateUnit(LR,1747989043,15296.0,-7232.0,270.000)
call CreateUnit(LR,1747989043,13056.0,11776.0,270.000)
call CreateUnit(LR,1747989043,15744.0,23488.0,270.000)
call CreateUnit(LR,1747989043,17984.0,9280.0,270.000)
set LR=null
endfunction
function AE takes nothing returns nothing
local trigger UE
local playerunitevent IE
local integer PE
set Kt=CreateTrigger()
set UE=Kt
set IE=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set PE=0
loop
call TriggerRegisterPlayerUnitEvent(UE,Player(PE),IE,null)
set PE=PE+1
exitwhen PE==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Kt,Condition(Xe))
call TriggerAddAction(Kt,Ce)
set UE=null
set IE=null
endfunction
function Am takes nothing returns nothing
local trigger Um
local playerunitevent Im
local integer Pm
set Rt=CreateTrigger()
set Um=Rt
set Im=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Pm=0
loop
call TriggerRegisterPlayerUnitEvent(Um,Player(Pm),Im,null)
set Pm=Pm+1
exitwhen Pm==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Rt,Condition(Mp))
call TriggerAddAction(Rt,we)
set Um=null
set Im=null
endfunction
function BP takes nothing returns nothing
local trigger XP
local playerunitevent CP
local integer VP
set Gi=CreateTrigger()
set XP=Gi
set CP=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set VP=0
loop
call TriggerRegisterPlayerUnitEvent(XP,Player(VP),CP,null)
set VP=VP+1
exitwhen VP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Gi,Condition(ia))
call TriggerAddAction(Gi,Sa)
set XP=null
set CP=null
endfunction
function Bv takes nothing returns nothing
local trigger Xv
local playerunitevent Cv
local integer Vv
set et=CreateTrigger()
set Xv=et
set Cv=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Vv=0
loop
call TriggerRegisterPlayerUnitEvent(Xv,Player(Vv),Cv,null)
set Vv=Vv+1
exitwhen Vv==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(et,Condition(Pp))
call TriggerAddAction(et,Ap)
set Xv=null
set Cv=null
endfunction
function CA takes nothing returns nothing
local trigger KA
local playerunitevent LA
local integer XA
set ji=CreateTrigger()
set KA=ji
set LA=EVENT_PLAYER_UNIT_SPELL_CAST
set XA=0
loop
call TriggerRegisterPlayerUnitEvent(KA,Player(XA),LA,null)
set XA=XA+1
exitwhen XA==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ji,Condition(ea))
call TriggerAddAction(ji,qa)
set KA=null
set LA=null
endfunction
function CE takes nothing returns nothing
local trigger KE
local playerunitevent LE
local integer XE
set Lt=CreateTrigger()
set KE=Lt
set LE=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set XE=0
loop
call TriggerRegisterPlayerUnitEvent(KE,Player(XE),LE,null)
set XE=XE+1
exitwhen XE==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Lt,Condition(Ve))
call TriggerAddAction(Lt,Be)
set KE=null
set LE=null
endfunction
function CF takes nothing returns nothing
local trigger KF
local playerunitevent LF
local integer XF
set Ls=CreateTrigger()
set KF=Ls
set LF=EVENT_PLAYER_UNIT_DEATH
set XF=0
loop
call TriggerRegisterPlayerUnitEvent(KF,Player(XF),LF,null)
set XF=XF+1
exitwhen XF==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ls,Condition(wp))
call TriggerAddAction(Ls,up)
set KF=null
set LF=null
endfunction
function Ck takes nothing returns nothing
local trigger Kk
local playerunitevent Lk
local integer Xk
set Vs=CreateTrigger()
set Kk=Vs
set Lk=EVENT_PLAYER_UNIT_DEATH
set Xk=0
loop
call TriggerRegisterPlayerUnitEvent(Kk,Player(Xk),Lk,null)
set Xk=Xk+1
exitwhen Xk==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Vs,Condition(Sp))
call TriggerAddAction(Vs,cp)
set Kk=null
set Lk=null
endfunction
function Cm takes nothing returns nothing
local trigger Km
local playerunitevent Lm
local integer Xm
set Tt=CreateTrigger()
set Km=Tt
set Lm=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Xm=0
loop
call TriggerRegisterPlayerUnitEvent(Km,Player(Xm),Lm,null)
set Xm=Xm+1
exitwhen Xm==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Tt,Condition(ue))
call TriggerAddAction(Tt,re)
set Km=null
set Lm=null
endfunction
function DJ takes nothing returns nothing
local trigger IJ
local playerunitevent PJ
local integer AJ
set Vi=CreateTrigger()
set IJ=Vi
set PJ=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set AJ=0
loop
call TriggerRegisterPlayerUnitEvent(IJ,Player(AJ),PJ,null)
set AJ=AJ+1
exitwhen AJ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Vi,Condition(un))
call TriggerAddAction(Vi,rn)
set IJ=null
set PJ=null
endfunction
function DQ takes nothing returns nothing
local trigger IQ
local playerunitevent PQ
local integer AQ
set jt=CreateTrigger()
set IQ=jt
set PQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set AQ=0
loop
call TriggerRegisterPlayerUnitEvent(IQ,Player(AQ),PQ,null)
set AQ=AQ+1
exitwhen AQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(jt,Condition(qe))
call TriggerAddAction(jt,ae)
set IQ=null
set PQ=null
endfunction
function DT takes nothing returns nothing
local trigger IT
local playerunitevent PT
local integer AT
set hs=CreateTrigger()
set IT=hs
set PT=EVENT_PLAYER_UNIT_ATTACKED
set AT=0
loop
call TriggerRegisterPlayerUnitEvent(IT,Player(AT),PT,null)
set AT=AT+1
exitwhen AT==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(hs,Condition(ly))
call TriggerAddAction(hs,by)
set IT=null
set PT=null
endfunction
function EP takes nothing returns nothing
local trigger mP
local playerunitevent QP
local integer WP
set Ti=CreateTrigger()
set mP=Ti
set QP=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set WP=0
loop
call TriggerRegisterPlayerUnitEvent(mP,Player(WP),QP,null)
set WP=WP+1
exitwhen WP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ti,Condition(ua))
call TriggerAddAction(Ti,ra)
set mP=null
set QP=null
endfunction
function Ev takes nothing returns nothing
local trigger mv
local playerunitevent Qv
local integer Wv
set yt=CreateTrigger()
set mv=yt
set Qv=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Wv=0
loop
call TriggerRegisterPlayerUnitEvent(mv,Player(Wv),Qv,null)
set Wv=Wv+1
exitwhen Wv==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(yt,Condition(Ep))
call TriggerAddAction(yt,Zp)
set mv=null
set Qv=null
endfunction
function FG takes nothing returns nothing
local trigger GG
local playerunitevent gG
local integer hG
set Ws=CreateTrigger()
set GG=Ws
set gG=EVENT_PLAYER_UNIT_SPELL_CAST
set hG=0
loop
call TriggerRegisterPlayerUnitEvent(GG,Player(hG),gG,null)
set hG=hG+1
exitwhen hG==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(Ws,Fy)
set GG=null
set gG=null
endfunction
function FJ takes nothing returns nothing
local trigger GJ
local playerunitevent gJ
local integer hJ
set Xi=CreateTrigger()
set GJ=Xi
set gJ=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set hJ=0
loop
call TriggerRegisterPlayerUnitEvent(GJ,Player(hJ),gJ,null)
set hJ=hJ+1
exitwhen hJ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Xi,Condition(Ba))
call TriggerAddAction(Xi,Na)
set GJ=null
set gJ=null
endfunction
function FQ takes nothing returns nothing
local trigger GQ
local playerunitevent gQ
local integer hQ
set Ft=CreateTrigger()
set GQ=Ft
set gQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set hQ=0
loop
call TriggerRegisterPlayerUnitEvent(GQ,Player(hQ),gQ,null)
set hQ=hQ+1
exitwhen hQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ft,Condition(be))
call TriggerAddAction(Ft,ye)
set GQ=null
set gQ=null
endfunction
function Fg takes nothing returns nothing
local trigger Gg
local playerunitevent gg
local integer hg
set Us=CreateTrigger()
set Gg=Us
set gg=EVENT_PLAYER_UNIT_SPELL_CAST
set hg=0
loop
call TriggerRegisterPlayerUnitEvent(Gg,Player(hg),gg,null)
set hg=hg+1
exitwhen hg==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Us,Condition(Ey))
call TriggerAddAction(Us,Zy)
set Gg=null
set gg=null
endfunction
function Fh takes nothing returns nothing
local trigger Gh
local playerunitevent gh
local integer hh
set Ds=CreateTrigger()
set Gh=Ds
set gh=EVENT_PLAYER_UNIT_SPELL_CAST
set hh=0
loop
call TriggerRegisterPlayerUnitEvent(Gh,Player(hh),gh,null)
set hh=hh+1
exitwhen hh==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ds,Condition(Ky))
call TriggerAddAction(Ds,Ly)
set Gh=null
set gh=null
endfunction
function GD takes nothing returns nothing
local trigger RD
local playerunitevent TD
local integer YD
set vi=CreateTrigger()
set RD=vi
set TD=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set YD=0
loop
call TriggerRegisterPlayerUnitEvent(RD,Player(YD),TD,null)
set YD=YD+1
exitwhen YD==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(vi,Condition(da))
call TriggerAddAction(vi,fa)
set RD=null
set TD=null
endfunction
function GZ takes nothing returns nothing
local trigger RZ
local playerunitevent TZ
local integer YZ
set Bt=CreateTrigger()
set RZ=Bt
set TZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set YZ=0
loop
call TriggerRegisterPlayerUnitEvent(RZ,Player(YZ),TZ,null)
set YZ=YZ+1
exitwhen YZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Bt,Condition(tq))
call TriggerAddAction(Bt,iq)
set RZ=null
set TZ=null
endfunction
function HP takes nothing returns nothing
local trigger PP
local playerunitevent AP
local integer DP
set Yi=CreateTrigger()
set PP=Yi
set AP=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set DP=0
loop
call TriggerRegisterPlayerUnitEvent(PP,Player(DP),AP,null)
set DP=DP+1
exitwhen DP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Yi,Condition(sa))
call TriggerAddAction(Yi,ta)
set PP=null
set AP=null
endfunction
function Hv takes nothing returns nothing
local trigger Pv
local playerunitevent Av
local integer Dv
set pt=CreateTrigger()
set Pv=pt
set Av=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Dv=0
loop
call TriggerRegisterPlayerUnitEvent(Pv,Player(Dv),Av,null)
set Dv=Dv+1
exitwhen Dv==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(pt,Condition(Up))
call TriggerAddAction(pt,Ip)
set Pv=null
set Av=null
endfunction
function ID takes nothing returns nothing
local trigger ED
local playerunitevent ZD
local integer UD
set Qi=CreateTrigger()
set ED=Qi
set ZD=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set UD=0
loop
call TriggerRegisterPlayerUnitEvent(ED,Player(UD),ZD,null)
set UD=UD+1
exitwhen UD==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Qi,Condition(Ya))
call TriggerAddAction(Qi,Ga)
set ED=null
set ZD=null
endfunction
function IY takes nothing returns nothing
local trigger EY
local playerunitevent ZY
local integer UY
set xs=CreateTrigger()
set EY=xs
set ZY=EVENT_PLAYER_UNIT_ATTACKED
set UY=0
loop
call TriggerRegisterPlayerUnitEvent(EY,Player(UY),ZY,null)
set UY=UY+1
exitwhen UY==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(xs,Condition(dy))
call TriggerAddAction(xs,fy)
set EY=null
set ZY=null
endfunction
function IZ takes nothing returns nothing
local trigger EZ
local playerunitevent ZZ
local integer UZ
set Mt=CreateTrigger()
set EZ=Mt
set ZZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set UZ=0
loop
call TriggerRegisterPlayerUnitEvent(EZ,Player(UZ),ZZ,null)
set UZ=UZ+1
exitwhen UZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Mt,Condition(oq))
call TriggerAddAction(Mt,Oq)
set EZ=null
set ZZ=null
endfunction
function JH takes nothing returns nothing
local trigger AH
local playerunitevent DH
local integer HH
set Di=CreateTrigger()
set AH=Di
set DH=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set HH=0
loop
call TriggerRegisterPlayerUnitEvent(AH,Player(HH),DH,null)
set HH=HH+1
exitwhen HH==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Di,Condition(Pa))
call TriggerAddAction(Di,Aa)
set AH=null
set DH=null
endfunction
function KG takes nothing returns nothing
local trigger DG
local playerunitevent HG
local integer JG
set Es=CreateTrigger()
set DG=Es
set HG=EVENT_PLAYER_UNIT_SPELL_CAST
set JG=0
loop
call TriggerRegisterPlayerUnitEvent(DG,Player(JG),HG,null)
set JG=JG+1
exitwhen JG==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Es,Condition(jy))
call TriggerAddAction(Es,xy)
set DG=null
set HG=null
endfunction
function KI takes nothing returns nothing
local trigger DI
local playerunitevent HI
local integer JI
set qi=CreateTrigger()
set DI=qi
set HI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set JI=0
loop
call TriggerRegisterPlayerUnitEvent(DI,Player(JI),HI,null)
set JI=JI+1
exitwhen JI==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(qi,Condition(Dq))
call TriggerAddAction(qi,Hq)
set DI=null
set HI=null
endfunction
function Kg takes nothing returns nothing
local trigger Dg
local playerunitevent Hg
local integer Jg
set Is=CreateTrigger()
set Dg=Is
set Hg=EVENT_PLAYER_UNIT_SPELL_CAST
set Jg=0
loop
call TriggerRegisterPlayerUnitEvent(Dg,Player(Jg),Hg,null)
set Jg=Jg+1
exitwhen Jg==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Is,Condition(Iy))
call TriggerAddAction(Is,Py)
set Dg=null
set Hg=null
endfunction
function Kx takes nothing returns nothing
local trigger Dx
local playerunitevent Hx
local integer Jx
set St=CreateTrigger()
set Dx=St
set Hx=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Jx=0
loop
call TriggerRegisterPlayerUnitEvent(Dx,Player(Jx),Hx,null)
set Jx=Jx+1
exitwhen Jx==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(St,Condition(Yp))
call TriggerAddAction(St,Gp)
set Dx=null
set Hx=null
endfunction
function LD takes nothing returns nothing
local trigger HD
local playerunitevent JD
local integer KD
set Wi=CreateTrigger()
set HD=Wi
set JD=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set KD=0
loop
call TriggerRegisterPlayerUnitEvent(HD,Player(KD),JD,null)
set KD=KD+1
exitwhen KD==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Wi,Condition(ga))
call TriggerAddAction(Wi,ha)
set HD=null
set JD=null
endfunction
function LZ takes nothing returns nothing
local trigger HZ
local playerunitevent JZ
local integer KZ
set wi=CreateTrigger()
set HZ=wi
set JZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set KZ=0
loop
call TriggerRegisterPlayerUnitEvent(HZ,Player(KZ),JZ,null)
set KZ=KZ+1
exitwhen KZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(wi,Condition(lq))
call TriggerAddAction(wi,bq)
set HZ=null
set JZ=null
endfunction
function Lh takes nothing returns nothing
local trigger Hh
local playerunitevent Jh
local integer Kh
set Hs=CreateTrigger()
set Hh=Hs
set Jh=EVENT_PLAYER_UNIT_SPELL_CAST
set Kh=0
loop
call TriggerRegisterPlayerUnitEvent(Hh,Player(Kh),Jh,null)
set Kh=Kh+1
exitwhen Kh==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Hs,Condition(Xy))
call TriggerAddAction(Hs,Cy)
set Hh=null
set Jh=null
endfunction
function MI takes nothing returns nothing
local trigger VI
local playerunitevent BI
local integer NI
set ai=CreateTrigger()
set VI=ai
set BI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set NI=0
loop
call TriggerRegisterPlayerUnitEvent(VI,Player(NI),BI,null)
set NI=NI+1
exitwhen NI==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ai,Condition(Jq))
call TriggerAddAction(ai,Kq)
set VI=null
set BI=null
endfunction
function Mx takes nothing returns nothing
local trigger Vx
local playerunitevent Bx
local integer Nx
set ct=CreateTrigger()
set Vx=ct
set Bx=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Nx=0
loop
call TriggerRegisterPlayerUnitEvent(Vx,Player(Nx),Bx,null)
set Nx=Nx+1
exitwhen Nx==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ct,Condition(gp))
call TriggerAddAction(ct,hp)
set Vx=null
set Bx=null
endfunction
function NH takes nothing returns nothing
local trigger CH
local playerunitevent VH
local integer BH
set Hi=CreateTrigger()
set CH=Hi
set VH=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set BH=0
loop
call TriggerRegisterPlayerUnitEvent(CH,Player(BH),VH,null)
set BH=BH+1
exitwhen BH==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Hi,Condition(Da))
call TriggerAddAction(Hi,Ha)
set CH=null
set VH=null
endfunction
function NY takes nothing returns nothing
local trigger CY
local playerunitevent VY
local integer BY
set vs=CreateTrigger()
set CY=vs
set VY=EVENT_PLAYER_UNIT_ATTACKED
set BY=0
loop
call TriggerRegisterPlayerUnitEvent(CY,Player(BY),VY,null)
set BY=BY+1
exitwhen BY==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(vs,Condition(Ry))
call TriggerAddAction(vs,Ty)
set CY=null
set VY=null
endfunction
function Nj takes nothing returns nothing
local trigger Cj
local playerunitevent Vj
local integer Bj
set wt=CreateTrigger()
set Cj=wt
set Vj=EVENT_PLAYER_UNIT_DEATH
set Bj=0
loop
call TriggerRegisterPlayerUnitEvent(Cj,Player(Bj),Vj,null)
set Bj=Bj+1
exitwhen Bj==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(wt,Condition(yp))
call TriggerAddAction(wt,pp)
set Cj=null
set Vj=null
endfunction
function OD takes nothing returns nothing
local trigger SD
local playerunitevent cD
local integer oD
set xi=CreateTrigger()
set SD=xi
set cD=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set oD=0
loop
call TriggerRegisterPlayerUnitEvent(SD,Player(oD),cD,null)
set oD=oD+1
exitwhen oD==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(xi,Condition(aa))
call TriggerAddAction(xi,na)
set SD=null
set cD=null
endfunction
function OQ takes nothing returns nothing
local trigger SQ
local playerunitevent cQ
local integer oQ
set Gt=CreateTrigger()
set SQ=Gt
set cQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set oQ=0
loop
call TriggerRegisterPlayerUnitEvent(SQ,Player(oQ),cQ,null)
set oQ=oQ+1
exitwhen oQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Gt,Condition(ie))
call TriggerAddAction(Gt,Se)
set SQ=null
set cQ=null
endfunction
function OZ takes nothing returns nothing
local trigger SZ
local playerunitevent cZ
local integer oZ
set Ct=CreateTrigger()
set SZ=Ct
set cZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set oZ=0
loop
call TriggerRegisterPlayerUnitEvent(SZ,Player(oZ),cZ,null)
set oZ=oZ+1
exitwhen oZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ct,Condition(wq))
call TriggerAddAction(Ct,uq)
set SZ=null
set cZ=null
endfunction
function Og takes nothing returns nothing
local trigger Sg
local playerunitevent cg
local integer og
set Zs=CreateTrigger()
set Sg=Zs
set cg=EVENT_PLAYER_UNIT_SPELL_CAST
set og=0
loop
call TriggerRegisterPlayerUnitEvent(Sg,Player(og),cg,null)
set og=og+1
exitwhen og==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Zs,Condition(my))
call TriggerAddAction(Zs,Qy)
set Sg=null
set cg=null
endfunction
function PU takes nothing returns nothing
local trigger ZU
local playerunitevent UU
local integer IU
set ci=CreateTrigger()
set ZU=ci
set UU=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set IU=0
loop
call TriggerRegisterPlayerUnitEvent(ZU,Player(IU),UU,null)
set IU=IU+1
exitwhen IU==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ci,Condition(gq))
call TriggerAddAction(ci,hq)
set ZU=null
set UU=null
endfunction
function PW takes nothing returns nothing
local trigger ZW
local playerunitevent UW
local integer IW
set Zt=CreateTrigger()
set ZW=Zt
set UW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set IW=0
loop
call TriggerRegisterPlayerUnitEvent(ZW,Player(IW),UW,null)
set IW=IW+1
exitwhen IW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Zt,Condition(xe))
call TriggerAddAction(Zt,ve)
set ZW=null
set UW=null
endfunction
function QE takes nothing returns nothing
local trigger xE
local playerunitevent vE
local integer mE
set Jt=CreateTrigger()
set xE=Jt
set vE=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set mE=0
loop
call TriggerRegisterPlayerUnitEvent(xE,Player(mE),vE,null)
set mE=mE+1
exitwhen mE==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Jt,Condition(Ke))
call TriggerAddAction(Jt,Le)
set xE=null
set vE=null
endfunction
function Qm takes nothing returns nothing
local trigger xm
local playerunitevent vm
local integer mm
set ft=CreateTrigger()
set xm=ft
set vm=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set mm=0
loop
call TriggerRegisterPlayerUnitEvent(xm,Player(mm),vm,null)
set mm=mm+1
exitwhen mm==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ft,Condition(Bp))
call TriggerAddAction(ft,Np)
set xm=null
set vm=null
endfunction
function RP takes nothing returns nothing
local trigger nP
local playerunitevent dP
local integer fP
set fi=CreateTrigger()
set nP=fi
set dP=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set fP=0
loop
call TriggerRegisterPlayerUnitEvent(nP,Player(fP),dP,null)
set fP=fP+1
exitwhen fP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(fi,Condition(Bq))
call TriggerAddAction(fi,Nq)
set nP=null
set dP=null
endfunction
function Rv takes nothing returns nothing
local trigger nv
local playerunitevent dv
local integer fv
set lt=CreateTrigger()
set nv=lt
set dv=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set fv=0
loop
call TriggerRegisterPlayerUnitEvent(nv,Player(fv),dv,null)
set fv=fv+1
exitwhen fv==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(lt,Condition(vp))
call TriggerAddAction(lt,mp)
set nv=null
set dv=null
endfunction
function SP takes nothing returns nothing
local trigger sP
local playerunitevent tP
local integer iP
set ni=CreateTrigger()
set sP=ni
set tP=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set iP=0
loop
call TriggerRegisterPlayerUnitEvent(sP,Player(iP),tP,null)
set iP=iP+1
exitwhen iP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ni,Condition(Lq))
call TriggerAddAction(ni,Xq)
set sP=null
set tP=null
endfunction
function Sv takes nothing returns nothing
local trigger sv
local playerunitevent tv
local integer iv
set ot=CreateTrigger()
set sv=ot
set tv=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set iv=0
loop
call TriggerRegisterPlayerUnitEvent(sv,Player(iv),tv,null)
set iv=iv+1
exitwhen iv==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ot,Condition(Fp))
call TriggerAddAction(ot,kp)
set sv=null
set tv=null
endfunction
function TH takes nothing returns nothing
local trigger dH
local playerunitevent fH
local integer RH
set Ii=CreateTrigger()
set dH=Ii
set fH=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set RH=0
loop
call TriggerRegisterPlayerUnitEvent(dH,Player(RH),fH,null)
set RH=RH+1
exitwhen RH==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ii,Condition(Qa))
call TriggerAddAction(Ii,Wa)
set dH=null
set fH=null
endfunction
function TU takes nothing returns nothing
local trigger dU
local playerunitevent fU
local integer RU
set ti=CreateTrigger()
set dU=ti
set fU=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set RU=0
loop
call TriggerRegisterPlayerUnitEvent(dU,Player(RU),fU,null)
set RU=RU+1
exitwhen RU==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ti,Condition(dq))
call TriggerAddAction(ti,fq)
set dU=null
set fU=null
endfunction
function UI takes nothing returns nothing
local trigger WI
local playerunitevent EI
local integer ZI
set ei=CreateTrigger()
set WI=ei
set EI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set ZI=0
loop
call TriggerRegisterPlayerUnitEvent(WI,Player(ZI),EI,null)
set ZI=ZI+1
exitwhen ZI==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ei,Condition(Pq))
call TriggerAddAction(ei,Aq)
set WI=null
set EI=null
endfunction
function Ux takes nothing returns nothing
local trigger Wx
local playerunitevent Ex
local integer Zx
set tt=CreateTrigger()
set Wx=tt
set Ex=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Zx=0
loop
call TriggerRegisterPlayerUnitEvent(Wx,Player(Zx),Ex,null)
set Zx=Zx+1
exitwhen Zx==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(tt,Condition(Rp))
call TriggerAddAction(tt,Tp)
set Wx=null
set Ex=null
endfunction
function VJ takes nothing returns nothing
local trigger LJ
local playerunitevent XJ
local integer CJ
set Bi=CreateTrigger()
set LJ=Bi
set XJ=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set CJ=0
loop
call TriggerRegisterPlayerUnitEvent(LJ,Player(CJ),XJ,null)
set CJ=CJ+1
exitwhen CJ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Bi,Condition(sn))
call TriggerAddAction(Bi,tn)
set LJ=null
set XJ=null
endfunction
function VQ takes nothing returns nothing
local trigger LQ
local playerunitevent XQ
local integer CQ
set xt=CreateTrigger()
set LQ=xt
set XQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set CQ=0
loop
call TriggerRegisterPlayerUnitEvent(LQ,Player(CQ),XQ,null)
set CQ=CQ+1
exitwhen CQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(xt,Condition(ne))
call TriggerAddAction(xt,de)
set LQ=null
set XQ=null
endfunction
function WA takes nothing returns nothing
local trigger vA
local playerunitevent mA
local integer QA
set ki=CreateTrigger()
set vA=ki
set mA=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set QA=0
loop
call TriggerRegisterPlayerUnitEvent(vA,Player(QA),mA,null)
set QA=QA+1
exitwhen QA==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ki,Condition(ya))
call TriggerAddAction(ki,pa)
set vA=null
set mA=null
endfunction
function WJ takes nothing returns nothing
local trigger vJ
local playerunitevent mJ
local integer QJ
set Ci=CreateTrigger()
set vJ=Ci
set mJ=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set QJ=0
loop
call TriggerRegisterPlayerUnitEvent(vJ,Player(QJ),mJ,null)
set QJ=QJ+1
exitwhen QJ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ci,Condition(Ma))
call TriggerAddAction(Ci,wn)
set vJ=null
set mJ=null
endfunction
function WQ takes nothing returns nothing
local trigger vQ
local playerunitevent mQ
local integer QQ
set kt=CreateTrigger()
set vQ=kt
set mQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set QQ=0
loop
call TriggerRegisterPlayerUnitEvent(vQ,Player(QQ),mQ,null)
set QQ=QQ+1
exitwhen QQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(kt,Condition(pe))
call TriggerAddAction(kt,ee)
set vQ=null
set mQ=null
endfunction
function XU takes nothing returns nothing
local trigger JU
local playerunitevent KU
local integer LU
set oi=CreateTrigger()
set JU=oi
set KU=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set LU=0
loop
call TriggerRegisterPlayerUnitEvent(JU,Player(LU),KU,null)
set LU=LU+1
exitwhen LU==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(oi,Condition(Fq))
call TriggerAddAction(oi,kq)
set JU=null
set KU=null
endfunction
function XW takes nothing returns nothing
local trigger JW
local playerunitevent KW
local integer LW
set Ut=CreateTrigger()
set JW=Ut
set KW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set LW=0
loop
call TriggerRegisterPlayerUnitEvent(JW,Player(LW),KW,null)
set LW=LW+1
exitwhen LW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ut,Condition(me))
call TriggerAddAction(Ut,Qe)
set JW=null
set KW=null
endfunction
function YE takes nothing returns nothing
local trigger fE
local playerunitevent RE
local integer TE
set Dt=CreateTrigger()
set fE=Dt
set RE=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set TE=0
loop
call TriggerRegisterPlayerUnitEvent(fE,Player(TE),RE,null)
set TE=TE+1
exitwhen TE==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Dt,Condition(Ae))
call TriggerAddAction(Dt,De)
set fE=null
set RE=null
endfunction
function YI takes nothing returns nothing
local trigger fI
local playerunitevent RI
local integer TI
set yi=CreateTrigger()
set fI=yi
set RI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set TI=0
loop
call TriggerRegisterPlayerUnitEvent(fI,Player(TI),RI,null)
set TI=TI+1
exitwhen TI==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(yi,Condition(Eq))
call TriggerAddAction(yi,Zq)
set fI=null
set RI=null
endfunction
function Yx takes nothing returns nothing
local trigger fx
local playerunitevent Rx
local integer Tx
set rt=CreateTrigger()
set fx=rt
set Rx=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Tx=0
loop
call TriggerRegisterPlayerUnitEvent(fx,Player(Tx),Rx,null)
set Tx=Tx+1
exitwhen Tx==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(rt,Condition(ap))
call TriggerAddAction(rt,np)
set fx=null
set Rx=null
endfunction
function ZH takes nothing returns nothing
local trigger QH
local playerunitevent WH
local integer EH
set Ai=CreateTrigger()
set QH=Ai
set WH=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set EH=0
loop
call TriggerRegisterPlayerUnitEvent(QH,Player(EH),WH,null)
set EH=EH+1
exitwhen EH==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ai,Condition(Ua))
call TriggerAddAction(Ai,Ia)
set QH=null
set WH=null
endfunction
function aQ takes nothing returns nothing
local trigger pQ
local playerunitevent eQ
local integer qQ
set gt=CreateTrigger()
set pQ=gt
set eQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set qQ=0
loop
call TriggerRegisterPlayerUnitEvent(pQ,Player(qQ),eQ,null)
set qQ=qQ+1
exitwhen qQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(gt,Condition(ce))
call TriggerAddAction(gt,oe)
set pQ=null
set eQ=null
endfunction
function aT takes nothing returns nothing
local trigger pT
local playerunitevent eT
local integer qT
set Gs=CreateTrigger()
set pT=Gs
set eT=EVENT_PLAYER_UNIT_ATTACKED
set qT=0
loop
call TriggerRegisterPlayerUnitEvent(pT,Player(qT),eT,null)
set qT=qT+1
exitwhen qT==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Gs,Condition(Sy))
call TriggerAddAction(Gs,cy)
set pT=null
set eT=null
endfunction
function aZ takes nothing returns nothing
local trigger pZ
local playerunitevent eZ
local integer qZ
set Vt=CreateTrigger()
set pZ=Vt
set eZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set qZ=0
loop
call TriggerRegisterPlayerUnitEvent(pZ,Player(qZ),eZ,null)
set qZ=qZ+1
exitwhen qZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Vt,Condition(rq))
call TriggerAddAction(Vt,sq)
set pZ=null
set eZ=null
endfunction
function bF takes nothing returns nothing
local trigger oF
local playerunitevent OF
local integer lF
set Js=CreateTrigger()
set oF=Js
set OF=EVENT_PLAYER_UNIT_SPELL_CAST
set lF=0
loop
call TriggerRegisterPlayerUnitEvent(oF,Player(lF),OF,null)
set lF=lF+1
exitwhen lF==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Js,Condition(Vy))
call TriggerAddAction(Js,By)
set oF=null
set OF=null
endfunction
function bm takes nothing returns nothing
local trigger om
local playerunitevent Om
local integer lm
set at=CreateTrigger()
set om=at
set Om=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set lm=0
loop
call TriggerRegisterPlayerUnitEvent(om,Player(lm),Om,null)
set lm=lm+1
exitwhen lm==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(at,Condition(Jp))
call TriggerAddAction(at,Kp)
set om=null
set Om=null
endfunction
function cG takes nothing returns nothing
local trigger tG
local playerunitevent iG
local integer SG
set ms=CreateTrigger()
set tG=ms
set iG=EVENT_PLAYER_UNIT_SPELL_CAST
set SG=0
loop
call TriggerRegisterPlayerUnitEvent(tG,Player(SG),iG,null)
set SG=SG+1
exitwhen SG==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ms,Condition(Yy))
call TriggerAddAction(ms,Gy)
set tG=null
set iG=null
endfunction
function cH takes nothing returns nothing
local trigger tH
local playerunitevent iH
local integer SH
set Zi=CreateTrigger()
set tH=Zi
set iH=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set SH=0
loop
call TriggerRegisterPlayerUnitEvent(tH,Player(SH),iH,null)
set SH=SH+1
exitwhen SH==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Zi,Condition(ja))
call TriggerAddAction(Zi,xa)
set tH=null
set iH=null
endfunction
function cU takes nothing returns nothing
local trigger tU
local playerunitevent iU
local integer SU
set ri=CreateTrigger()
set tU=ri
set iU=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set SU=0
loop
call TriggerRegisterPlayerUnitEvent(tU,Player(SU),iU,null)
set SU=SU+1
exitwhen SU==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ri,Condition(eq))
call TriggerAddAction(ri,qq)
set tU=null
set iU=null
endfunction
function dm takes nothing returns nothing
local trigger qm
local playerunitevent am
local integer nm
set nt=CreateTrigger()
set qm=nt
set am=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set nm=0
loop
call TriggerRegisterPlayerUnitEvent(qm,Player(nm),am,null)
set nm=nm+1
exitwhen nm==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(nt,Condition(Lp))
call TriggerAddAction(nt,Xp)
set qm=null
set am=null
endfunction
function eH takes nothing returns nothing
local trigger bH
local playerunitevent yH
local integer pH
set Ui=CreateTrigger()
set bH=Ui
set yH=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set pH=0
loop
call TriggerRegisterPlayerUnitEvent(bH,Player(pH),yH,null)
set pH=pH+1
exitwhen pH==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ui,Condition(va))
call TriggerAddAction(Ui,ma)
set bH=null
set yH=null
endfunction
function eU takes nothing returns nothing
local trigger bU
local playerunitevent yU
local integer pU
set si=CreateTrigger()
set bU=si
set yU=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set pU=0
loop
call TriggerRegisterPlayerUnitEvent(bU,Player(pU),yU,null)
set pU=pU+1
exitwhen pU==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(si,Condition(aq))
call TriggerAddAction(si,nq)
set bU=null
set yU=null
endfunction
function fA takes nothing returns nothing
local trigger aA
local playerunitevent nA
local integer dA
set Fi=CreateTrigger()
set aA=Fi
set nA=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set dA=0
loop
call TriggerRegisterPlayerUnitEvent(aA,Player(dA),nA,null)
set dA=dA+1
exitwhen dA==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Fi,Condition(la))
call TriggerAddAction(Fi,ba)
set aA=null
set nA=null
endfunction
function fJ takes nothing returns nothing
local trigger aJ
local playerunitevent nJ
local integer dJ
set Li=CreateTrigger()
set aJ=Li
set nJ=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set dJ=0
loop
call TriggerRegisterPlayerUnitEvent(aJ,Player(dJ),nJ,null)
set dJ=dJ+1
exitwhen dJ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Li,Condition(Ca))
call TriggerAddAction(Li,Va)
set aJ=null
set nJ=null
endfunction
function fQ takes nothing returns nothing
set ht=CreateTrigger()
call TriggerRegisterTimerEvent(ht,0.10,false)
call TriggerAddAction(ht,le)
endfunction
function gU takes nothing returns nothing
set ii=CreateTrigger()
call TriggerRegisterTimerEvent(ii,0.10,false)
call TriggerAddAction(ii,Tq)
endfunction
function gW takes nothing returns nothing
local trigger TW
local playerunitevent YW
local integer GW
set Wt=CreateTrigger()
set TW=Wt
set YW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set GW=0
loop
call TriggerRegisterPlayerUnitEvent(TW,Player(GW),YW,null)
set GW=GW+1
exitwhen GW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Wt,Condition(he))
call TriggerAddAction(Wt,Fe)
set TW=null
set YW=null
endfunction
function hE takes nothing returns nothing
set Ht=CreateTrigger()
call TriggerRegisterTimerEvent(Ht,0.10,false)
call TriggerAddAction(Ht,Je)
endfunction
function hY takes nothing returns nothing
local trigger YY
local playerunitevent GY
local integer gY
set js=CreateTrigger()
set YY=js
set GY=EVENT_PLAYER_UNIT_ATTACKED
set gY=0
loop
call TriggerRegisterPlayerUnitEvent(YY,Player(gY),GY,null)
set gY=gY+1
exitwhen gY==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(js,Condition(ay))
call TriggerAddAction(js,ny)
set YY=null
set GY=null
endfunction
function hm takes nothing returns nothing
local trigger Ym
local playerunitevent Gm
local integer gm
set dt=CreateTrigger()
set Ym=dt
set Gm=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set gm=0
loop
call TriggerRegisterPlayerUnitEvent(Ym,Player(gm),Gm,null)
set gm=gm+1
exitwhen gm==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(dt,Condition(Cp))
call TriggerAddAction(dt,Vp)
set Ym=null
set Gm=null
endfunction
function iA takes nothing returns nothing
local trigger rA
local playerunitevent sA
local integer tA
set hi=CreateTrigger()
set rA=hi
set sA=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set tA=0
loop
call TriggerRegisterPlayerUnitEvent(rA,Player(tA),sA,null)
set tA=tA+1
exitwhen tA==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(hi,Oa)
set rA=null
set sA=null
endfunction
function iJ takes nothing returns nothing
local trigger rJ
local playerunitevent sJ
local integer tJ
set Ji=CreateTrigger()
set rJ=Ji
set sJ=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set tJ=0
loop
call TriggerRegisterPlayerUnitEvent(rJ,Player(tJ),sJ,null)
set tJ=tJ+1
exitwhen tJ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ji,Condition(Ja))
call TriggerAddAction(Ji,Ka)
set rJ=null
set sJ=null
endfunction
function jH takes nothing returns nothing
local trigger hH
local playerunitevent FH
local integer kH
set Pi=CreateTrigger()
set hH=Pi
set FH=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set kH=0
loop
call TriggerRegisterPlayerUnitEvent(hH,Player(kH),FH,null)
set kH=kH+1
exitwhen kH==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Pi,Condition(Ea))
call TriggerAddAction(Pi,Za)
set hH=null
set FH=null
endfunction
function jT takes nothing returns nothing
local trigger hT
local playerunitevent FT
local integer kT
set gs=CreateTrigger()
set hT=gs
set FT=EVENT_PLAYER_UNIT_ATTACKED
set kT=0
loop
call TriggerRegisterPlayerUnitEvent(hT,Player(kT),FT,null)
set kT=kT+1
exitwhen kT==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(gs,Condition(oy))
call TriggerAddAction(gs,Oy)
set hT=null
set FT=null
endfunction
function kP takes nothing returns nothing
local trigger gP
local playerunitevent hP
local integer FP
set Ri=CreateTrigger()
set gP=Ri
set hP=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set FP=0
loop
call TriggerRegisterPlayerUnitEvent(gP,Player(FP),hP,null)
set FP=FP+1
exitwhen FP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ri,Condition(Mq))
call TriggerAddAction(Ri,wa)
set gP=null
set hP=null
endfunction
function kv takes nothing returns nothing
local trigger gv
local playerunitevent hv
local integer Fv
set bt=CreateTrigger()
set gv=bt
set hv=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Fv=0
loop
call TriggerRegisterPlayerUnitEvent(gv,Player(Fv),hv,null)
set Fv=Fv+1
exitwhen Fv==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(bt,Condition(Qp))
call TriggerAddAction(bt,Wp)
set gv=null
set hv=null
endfunction
function lK takes nothing returns nothing
local trigger cK
local playerunitevent oK
local integer OK
set Mi=CreateTrigger()
set cK=Mi
set oK=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set OK=0
loop
call TriggerRegisterPlayerUnitEvent(cK,Player(OK),oK,null)
set OK=OK+1
exitwhen OK==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Mi,Condition(on))
call TriggerAddAction(Mi,On)
set cK=null
set oK=null
endfunction
function lW takes nothing returns nothing
local trigger cW
local playerunitevent oW
local integer OW
set mt=CreateTrigger()
set cW=mt
set oW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set OW=0
loop
call TriggerRegisterPlayerUnitEvent(cW,Player(OW),oW,null)
set OW=OW+1
exitwhen OW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(mt,Condition(Te))
call TriggerAddAction(mt,Ye)
set cW=null
set oW=null
endfunction
function mU takes nothing returns nothing
local trigger jU
local playerunitevent xU
local integer vU
set Si=CreateTrigger()
set jU=Si
set xU=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set vU=0
loop
call TriggerRegisterPlayerUnitEvent(jU,Player(vU),xU,null)
set vU=vU+1
exitwhen vU==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Si,Condition(Yq))
call TriggerAddAction(Si,Gq)
set jU=null
set xU=null
endfunction
function mW takes nothing returns nothing
local trigger jW
local playerunitevent xW
local integer vW
set Et=CreateTrigger()
set jW=Et
set xW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set vW=0
loop
call TriggerRegisterPlayerUnitEvent(jW,Player(vW),xW,null)
set vW=vW+1
exitwhen vW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Et,Condition(ke))
call TriggerAddAction(Et,je)
set jW=null
set xW=null
endfunction
function mj takes nothing returns nothing
local trigger jj
local playerunitevent xj
local integer vj
set Ns=CreateTrigger()
set jj=Ns
set xj=EVENT_PLAYER_UNIT_SPELL_CAST
set vj=0
loop
call TriggerRegisterPlayerUnitEvent(jj,Player(vj),xj,null)
set vj=vj+1
exitwhen vj==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ns,Condition(lp))
call TriggerAddAction(Ns,bp)
set jj=null
set xj=null
endfunction
function nK takes nothing returns nothing
local trigger eK
local playerunitevent qK
local integer aK
set wS=CreateTrigger()
set eK=wS
set qK=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set aK=0
loop
call TriggerRegisterPlayerUnitEvent(eK,Player(aK),qK,null)
set aK=aK+1
exitwhen aK==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(wS,Condition(ln))
call TriggerAddAction(wS,bn)
set eK=null
set qK=null
endfunction
function nW takes nothing returns nothing
local trigger eW
local playerunitevent qW
local integer aW
set Qt=CreateTrigger()
set eW=Qt
set qW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set aW=0
loop
call TriggerRegisterPlayerUnitEvent(eW,Player(aW),qW,null)
set aW=aW+1
exitwhen aW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Qt,Condition(Ge))
call TriggerAddAction(Qt,ge)
set eW=null
set qW=null
endfunction
function oE takes nothing returns nothing
local trigger iE
local playerunitevent SE
local integer cE
set Pt=CreateTrigger()
set iE=Pt
set SE=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set cE=0
loop
call TriggerRegisterPlayerUnitEvent(iE,Player(cE),SE,null)
set cE=cE+1
exitwhen cE==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Pt,Condition(Ze))
call TriggerAddAction(Pt,Ue)
set iE=null
set SE=null
endfunction
function oI takes nothing returns nothing
local trigger iI
local playerunitevent SI
local integer cI
set li=CreateTrigger()
set iI=li
set SI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set cI=0
loop
call TriggerRegisterPlayerUnitEvent(iI,Player(cI),SI,null)
set cI=cI+1
exitwhen cI==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(li,Condition(vq))
call TriggerAddAction(li,mq)
set iI=null
set SI=null
endfunction
function oh takes nothing returns nothing
set As=CreateTrigger()
call TriggerRegisterTimerEvent(As,5.00,true)
call TriggerAddAction(As,Jy)
endfunction
function pG takes nothing returns nothing
local trigger lG
local playerunitevent bG
local integer yG
set Qs=CreateTrigger()
set lG=Qs
set bG=EVENT_PLAYER_UNIT_SPELL_EFFECT
set yG=0
loop
call TriggerRegisterPlayerUnitEvent(lG,Player(yG),bG,null)
set yG=yG+1
exitwhen yG==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Qs,Condition(gy))
call TriggerAddAction(Qs,hy)
set lG=null
set bG=null
endfunction
function pP takes nothing returns nothing
local trigger lP
local playerunitevent bP
local integer yP
set di=CreateTrigger()
set lP=di
set bP=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set yP=0
loop
call TriggerRegisterPlayerUnitEvent(lP,Player(yP),bP,null)
set yP=yP+1
exitwhen yP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(di,Condition(Cq))
call TriggerAddAction(di,Vq)
set lP=null
set bP=null
endfunction
function pY takes nothing returns nothing
local trigger lY
local playerunitevent bY
local integer yY
set ks=CreateTrigger()
set lY=ks
set bY=EVENT_PLAYER_UNIT_ATTACKED
set yY=0
loop
call TriggerRegisterPlayerUnitEvent(lY,Player(yY),bY,null)
set yY=yY+1
exitwhen yY==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ks,Condition(ey))
call TriggerAddAction(ks,qy)
set lY=null
set bY=null
endfunction
function pj takes nothing returns nothing
local trigger lj
local playerunitevent bj
local integer yj
set Bs=CreateTrigger()
set lj=Bs
set bj=EVENT_PLAYER_UNIT_SPELL_CAST
set yj=0
loop
call TriggerRegisterPlayerUnitEvent(lj,Player(yj),bj,null)
set yj=yj+1
exitwhen yj==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Bs,Condition(op))
call TriggerAddAction(Bs,Op)
set lj=null
set bj=null
endfunction
function pv takes nothing returns nothing
local trigger lv
local playerunitevent bv
local integer yv
set Ot=CreateTrigger()
set lv=Ot
set bv=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set yv=0
loop
call TriggerRegisterPlayerUnitEvent(lv,Player(yv),bv,null)
set yv=yv+1
exitwhen yv==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ot,Condition(jp))
call TriggerAddAction(Ot,xp)
set lv=null
set bv=null
endfunction
function qE takes nothing returns nothing
local trigger yE
local playerunitevent pE
local integer eE
set At=CreateTrigger()
set yE=At
set pE=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set eE=0
loop
call TriggerRegisterPlayerUnitEvent(yE,Player(eE),pE,null)
set eE=eE+1
exitwhen eE==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(At,Condition(Ie))
call TriggerAddAction(At,Pe)
set yE=null
set pE=null
endfunction
function qI takes nothing returns nothing
local trigger yI
local playerunitevent pI
local integer eI
set bi=CreateTrigger()
set yI=bi
set pI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set eI=0
loop
call TriggerRegisterPlayerUnitEvent(yI,Player(eI),pI,null)
set eI=eI+1
exitwhen eI==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(bi,Condition(Qq))
call TriggerAddAction(bi,Wq)
set yI=null
set pI=null
endfunction
function qx takes nothing returns nothing
local trigger yx
local playerunitevent px
local integer ex
set ut=CreateTrigger()
set yx=ut
set px=EVENT_PLAYER_UNIT_DEATH
set ex=0
loop
call TriggerRegisterPlayerUnitEvent(yx,Player(ex),px,null)
set ex=ex+1
exitwhen ex==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ut,Condition(ep))
call TriggerAddAction(ut,qp)
set yx=null
set px=null
endfunction
function rQ takes nothing returns nothing
local trigger Mm
local playerunitevent wQ
local integer uQ
set Yt=CreateTrigger()
set Mm=Yt
set wQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set uQ=0
loop
call TriggerRegisterPlayerUnitEvent(Mm,Player(uQ),wQ,null)
set uQ=uQ+1
exitwhen uQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Yt,Condition(se))
call TriggerAddAction(Yt,te)
set Mm=null
set wQ=null
endfunction
function rZ takes nothing returns nothing
local trigger ME
local playerunitevent wZ
local integer uZ
set Xt=CreateTrigger()
set ME=Xt
set wZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set uZ=0
loop
call TriggerRegisterPlayerUnitEvent(ME,Player(uZ),wZ,null)
set uZ=uZ+1
exitwhen uZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Xt,Condition(Ne))
call TriggerAddAction(Xt,Me)
set ME=null
set wZ=null
endfunction
function sK takes nothing returns nothing
local trigger wK
local playerunitevent uK
local integer rK
set Ni=CreateTrigger()
set wK=Ni
set uK=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set rK=0
loop
call TriggerRegisterPlayerUnitEvent(wK,Player(rK),uK,null)
set rK=rK+1
exitwhen rK==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ni,Condition(Sn))
call TriggerAddAction(Ni,cn)
set wK=null
set uK=null
endfunction
function sW takes nothing returns nothing
local trigger wW
local playerunitevent uW
local integer rW
set vt=CreateTrigger()
set wW=vt
set uW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set rW=0
loop
call TriggerRegisterPlayerUnitEvent(wW,Player(rW),uW,null)
set rW=rW+1
exitwhen rW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(vt,Condition(fe))
call TriggerAddAction(vt,Re)
set wW=null
set uW=null
endfunction
function tT takes nothing returns nothing
set Ys=CreateTrigger()
call TriggerRegisterTimerEvent(Ys,1.00,false)
call TriggerAddAction(Ys,iy)
endfunction
function tm takes nothing returns nothing
local trigger um
local playerunitevent rm
local integer sm
set qt=CreateTrigger()
set um=qt
set rm=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set sm=0
loop
call TriggerRegisterPlayerUnitEvent(um,Player(sm),rm,null)
set sm=sm+1
exitwhen sm==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(qt,Condition(Dp))
call TriggerAddAction(qt,Hp)
set um=null
set rm=null
endfunction
function uE takes nothing returns nothing
local trigger NW
local playerunitevent MW
local integer wE
set It=CreateTrigger()
set NW=It
set MW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set wE=0
loop
call TriggerRegisterPlayerUnitEvent(NW,Player(wE),MW,null)
set wE=wE+1
exitwhen wE==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(It,Condition(We))
call TriggerAddAction(It,Ee)
set NW=null
set MW=null
endfunction
function uI takes nothing returns nothing
local trigger NU
local playerunitevent MU
local integer wI
set Oi=CreateTrigger()
set NU=Oi
set MU=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set wI=0
loop
call TriggerRegisterPlayerUnitEvent(NU,Player(wI),MU,null)
set wI=wI+1
exitwhen wI==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Oi,Condition(jq))
call TriggerAddAction(Oi,xq)
set NU=null
set MU=null
endfunction
function uT takes nothing returns nothing
set Rs=CreateTrigger()
call TriggerRegisterTimerEvent(Rs,120.00,false)
call TriggerAddAction(Rs,ty)
endfunction
function uY takes nothing returns nothing
local trigger NT
local playerunitevent MT
local integer wY
set Fs=CreateTrigger()
set NT=Fs
set MT=EVENT_PLAYER_UNIT_ATTACKED
set wY=0
loop
call TriggerRegisterPlayerUnitEvent(NT,Player(wY),MT,null)
set wY=wY+1
exitwhen wY==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Fs,Condition(yy))
call TriggerAddAction(Fs,py)
set NT=null
set MT=null
endfunction
function vD takes nothing returns nothing
local trigger kD
local playerunitevent jD
local integer xD
set mi=CreateTrigger()
set kD=mi
set jD=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set xD=0
loop
call TriggerRegisterPlayerUnitEvent(kD,Player(xD),jD,null)
set xD=xD+1
exitwhen xD==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(mi,Condition(Ra))
call TriggerAddAction(mi,Ta)
set kD=null
set jD=null
endfunction
function vZ takes nothing returns nothing
local trigger kZ
local playerunitevent jZ
local integer xZ
set Nt=CreateTrigger()
set kZ=Nt
set jZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set xZ=0
loop
call TriggerRegisterPlayerUnitEvent(kZ,Player(xZ),jZ,null)
set xZ=xZ+1
exitwhen xZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Nt,Condition(Sq))
call TriggerAddAction(Nt,cq)
set kZ=null
set jZ=null
endfunction
function wA takes nothing returns nothing
set gi=CreateTrigger()
call TriggerRegisterTimerEvent(gi,0.10,false)
call TriggerAddAction(gi,oa)
endfunction
function wH takes nothing returns nothing
local trigger BD
local playerunitevent ND
local integer MD
set Ei=CreateTrigger()
set BD=Ei
set ND=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set MD=0
loop
call TriggerRegisterPlayerUnitEvent(BD,Player(MD),ND,null)
set MD=MD+1
exitwhen MD==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ei,Condition(Fa))
call TriggerAddAction(Ei,ka)
set BD=null
set ND=null
endfunction
function wU takes nothing returns nothing
local trigger BZ
local playerunitevent NZ
local integer MZ
set ui=CreateTrigger()
set BZ=ui
set NZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set MZ=0
loop
call TriggerRegisterPlayerUnitEvent(BZ,Player(MZ),NZ,null)
set MZ=MZ+1
exitwhen MZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ui,Condition(yq))
call TriggerAddAction(ui,pq)
set BZ=null
set NZ=null
endfunction
function wh takes nothing returns nothing
set Ps=CreateTrigger()
call TriggerRegisterTimerEvent(Ps,5.00,true)
call TriggerAddAction(Ps,Dy)
endfunction
function xF takes nothing returns nothing
local trigger FF
local playerunitevent kF
local integer jF
set Ks=CreateTrigger()
set FF=Ks
set kF=EVENT_PLAYER_UNIT_SPELL_CAST
set jF=0
loop
call TriggerRegisterPlayerUnitEvent(FF,Player(jF),kF,null)
set jF=jF+1
exitwhen jF==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ks,Condition(Ny))
call TriggerAddAction(Ks,My)
set FF=null
set kF=null
endfunction
function xI takes nothing returns nothing
local trigger FI
local playerunitevent kI
local integer jI
set pi=CreateTrigger()
set FI=pi
set kI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set jI=0
loop
call TriggerRegisterPlayerUnitEvent(FI,Player(jI),kI,null)
set jI=jI+1
exitwhen jI==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(pi,Condition(Uq))
call TriggerAddAction(pi,Iq)
set FI=null
set kI=null
endfunction
function xk takes nothing returns nothing
local trigger Fk
local playerunitevent kk
local integer jk
set Cs=CreateTrigger()
set Fk=Cs
set kk=EVENT_PLAYER_UNIT_DEATH
set jk=0
loop
call TriggerRegisterPlayerUnitEvent(Fk,Player(jk),kk,null)
set jk=jk+1
exitwhen jk==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Cs,Condition(tp))
call TriggerAddAction(Cs,ip)
set Fk=null
set kk=null
endfunction
function xx takes nothing returns nothing
local trigger Fx
local playerunitevent kx
local integer jx
set st=CreateTrigger()
set Fx=st
set kx=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set jx=0
loop
call TriggerRegisterPlayerUnitEvent(Fx,Player(jx),kx,null)
set jx=jx+1
exitwhen jx==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(st,Condition(dp))
call TriggerAddAction(st,fp)
set Fx=null
set kx=null
endfunction
function yJ takes nothing returns nothing
local trigger OJ
local playerunitevent lJ
local integer bJ
set Ki=CreateTrigger()
set OJ=Ki
set lJ=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set bJ=0
loop
call TriggerRegisterPlayerUnitEvent(OJ,Player(bJ),lJ,null)
set bJ=bJ+1
exitwhen bJ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ki,Condition(La))
call TriggerAddAction(Ki,Xa)
set OJ=null
set lJ=null
endfunction
function yk takes nothing returns nothing
local trigger Ok
local playerunitevent lk
local integer bk
set Xs=CreateTrigger()
set Ok=Xs
set lk=EVENT_PLAYER_UNIT_DEATH
set bk=0
loop
call TriggerRegisterPlayerUnitEvent(Ok,Player(bk),lk,null)
set bk=bk+1
exitwhen bk==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Xs,Condition(rp))
call TriggerAddAction(Xs,sp)
set Ok=null
set lk=null
endfunction
function dK takes nothing returns nothing
call uT()
set Ts=CreateTrigger()
call TriggerAddAction(Ts,yn)
call tT()
call aT()
call jT()
call DT()
call uY()
call pY()
call hY()
call IY()
call NY()
call cG()
call pG()
call FG()
call KG()
call Og()
call Fg()
call Kg()
call wh()
call oh()
call Fh()
call Lh()
call bF()
call xF()
call CF()
call yk()
call xk()
call Ck()
call pj()
call mj()
set Ms=CreateTrigger()
call TriggerAddAction(Ms,pn)
call Nj()
call qx()
call Yx()
call xx()
call Ux()
call Kx()
call Mx()
call Sv()
call pv()
call Rv()
call kv()
call Ev()
call Hv()
call Bv()
call tm()
call bm()
call dm()
call hm()
call Qm()
call Am()
call Cm()
call rQ()
call OQ()
call aQ()
call fQ()
call FQ()
call WQ()
call DQ()
call VQ()
call sW()
call lW()
call nW()
call gW()
call mW()
call PW()
call XW()
call uE()
call oE()
call qE()
call YE()
call hE()
call QE()
call AE()
call CE()
call rZ()
call OZ()
call aZ()
call GZ()
call vZ()
call IZ()
call LZ()
call wU()
call cU()
call eU()
call TU()
call gU()
call mU()
call PU()
call XU()
call uI()
call oI()
call qI()
call YI()
call xI()
call UI()
call KI()
call MI()
call SP()
call pP()
call RP()
call kP()
call EP()
call HP()
call BP()
call wA()
call iA()
call fA()
call WA()
call CA()
call OD()
call GD()
call vD()
call ID()
call LD()
call wH()
call cH()
call eH()
call TH()
call jH()
call ZH()
call JH()
call NH()
call iJ()
call yJ()
call fJ()
call FJ()
call WJ()
call DJ()
call VJ()
call sK()
call lK()
call nK()
endfunction
function jf takes nothing returns nothing
local integer kf=0
set kf=0
loop
exitwhen kf>8192
call CreateGroup()
set kf=kf+1
endloop
call CreateForce()
call CreateGroup()
call CreateForce()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateForce()
call CreateForce()
call CreateForce()
call CreateTimer()
call CreateForce()
call CreateGroup()
set w=CreateGroup()
call CreateGroup()
call CreateForce()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateTimer()
set kf=0
loop
exitwhen kf>24
set kf=kf+1
endloop
set kf=0
loop
exitwhen kf>24
set r[kf]=0
set kf=kf+1
endloop
set s=CreateForce()
set kf=0
loop
exitwhen kf>24
set kf=kf+1
endloop
call CreateGroup()
set kf=0
loop
exitwhen kf>24
set kf=kf+1
endloop
set kf=0
loop
exitwhen kf>24
set kf=kf+1
endloop
call CreateForce()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
set l=CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
set kf=0
loop
exitwhen kf>24
set kf=kf+1
endloop
set kf=0
loop
exitwhen kf>24
set kf=kf+1
endloop
call CreateGroup()
set kf=0
loop
exitwhen kf>24
set kf=kf+1
endloop
set kf=0
loop
exitwhen kf>24
set kf=kf+1
endloop
set kf=0
loop
exitwhen kf>24
set kf=kf+1
endloop
set kf=0
loop
exitwhen kf>24
set kf=kf+1
endloop
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateForce()
call CreateForce()
set kf=0
loop
exitwhen kf>1
set kf=kf+1
endloop
set kf=0
loop
exitwhen kf>1
set kf=kf+1
endloop
set kf=0
loop
exitwhen kf>1
set kf=kf+1
endloop
set b=CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
set kf=0
loop
exitwhen kf>24
set p[kf]=false
set kf=kf+1
endloop
set kf=0
loop
exitwhen kf>24
set e[kf]=false
set kf=kf+1
endloop
endfunction
function main takes nothing returns nothing
local trigger YK
local trigger GK
local trigger gK
call Ff()
call SetCameraBounds((-30720.0)+GetCameraMargin(CAMERA_MARGIN_LEFT),(-30720.0)+GetCameraMargin(CAMERA_MARGIN_BOTTOM),30720.0-GetCameraMargin(CAMERA_MARGIN_RIGHT),30720.0-GetCameraMargin(CAMERA_MARGIN_TOP),(-30720.0)+GetCameraMargin(CAMERA_MARGIN_LEFT),30720.0-GetCameraMargin(CAMERA_MARGIN_TOP),30720.0-GetCameraMargin(CAMERA_MARGIN_RIGHT),(-30720.0)+GetCameraMargin(CAMERA_MARGIN_BOTTOM))
call SetDayNightModels("Environment\\DNC\\DNCLordaeron\\DNCLordaeronTerrain\\DNCLordaeronTerrain.mdl","Environment\\DNC\\DNCLordaeron\\DNCLordaeronUnit\\DNCLordaeronUnit.mdl")
call NewSoundEnvironment("Default")
call SetAmbientDaySound("LordaeronSummerDay")
call SetAmbientNightSound("LordaeronSummerNight")
call SetMapMusic("Music",true,0)
set fs=CreateSound("Sound\\Interface\\Warning.wav",false,false,false,10,10,"")
call SetSoundParamsFromLabel(fs,"Warning")
call SetSoundDuration(fs,1903)
set q=Rect(11872.0,-24096.0,13376.0,-18304.0)
set a=Rect(14080.0,-30720.0,16256.0,-25664.0)
set n=Rect(12096.0,-26240.0,14944.0,-23776.0)
set d=Rect(-17120.0,15936.0,-15520.0,17408.0)
call Rect(-29824.0,-30080.0,-29312.0,-28672.0)
call Rect(-29216.0,-30112.0,-28672.0,-28672.0)
call Rect(-25984.0,-29760.0,-24992.0,-29504.0)
call Rect(-25984.0,-30080.0,-25472.0,-29824.0)
call Rect(-25984.0,-30400.0,-25472.0,-30144.0)
call Rect(-26464.0,-30048.0,-26176.0,-29056.0)
call Rect(-25440.0,-30368.0,-25184.0,-29856.0)
call Rect(-25184.0,-30368.0,-24928.0,-29856.0)
call Rect(-24672.0,-29568.0,-24064.0,-28800.0)
call Rect(-24704.0,-30208.0,-24064.0,-29696.0)
set f=Rect(-17408.0,22016.0,-17056.0,22368.0)
set R=Rect(-19072.0,17728.0,-18688.0,18080.0)
set T=Rect(-22464.0,22208.0,-22112.0,22560.0)
set Y=Rect(-3776.0,4416.0,-3392.0,4768.0)
set G=Rect(-3872.0,1664.0,-3456.0,2016.0)
set g=Rect(-416.0,-2592.0,-128.0,-2272.0)
set h=Rect(4992.0,-2016.0,5344.0,-1696.0)
set F=Rect(2528.0,-3168.0,2848.0,-2880.0)
set k=Rect(7744.0,-2528.0,8096.0,-2208.0)
set j=Rect(-17504.0,18080.0,-17056.0,18496.0)
set x=Rect(1024.0,-1120.0,1376.0,-800.0)
set v=Rect(-3328.0,8096.0,-2848.0,8512.0)
set m=Rect(-4704.0,11488.0,-4416.0,11776.0)
set Q=Rect(-640.0,8288.0,-160.0,8704.0)
set W=Rect(-5184.0,17120.0,-4832.0,17440.0)
set E=Rect(-96.0,12448.0,224.0,12768.0)
set Z=Rect(-2272.0,13536.0,-1984.0,13856.0)
set U=Rect(7008.0,1984.0,7456.0,2432.0)
set I=Rect(4032.0,3744.0,4416.0,4064.0)
set P=Rect(4000.0,5216.0,4320.0,5536.0)
set A=Rect(-576.0,2880.0,-224.0,3232.0)
set D=Rect(-8288.0,19776.0,-7936.0,20160.0)
set H=Rect(-6464.0,21184.0,-6080.0,21568.0)
set J=Rect(-7904.0,22048.0,-7488.0,22464.0)
set K=Rect(-5344.0,14304.0,-4960.0,14720.0)
set L=Rect(2880.0,32.0,3264.0,352.0)
set X=Rect(608.0,15680.0,992.0,16096.0)
set C=Rect(-2496.0,15872.0,-2112.0,16224.0)
set V=Rect(1056.0,10848.0,1344.0,11136.0)
set B=Rect(1600.0,6784.0,1984.0,7136.0)
set N=Rect(224.0,19296.0,544.0,19648.0)
set M=Rect(2784.0,22592.0,3200.0,22944.0)
set ww=Rect(-1984.0,19008.0,-1600.0,19360.0)
set uw=Rect(3008.0,18048.0,3392.0,18400.0)
call Rect(-28544.0,-30080.0,-28064.0,-29344.0)
call Rect(-27744.0,-30080.0,-27456.0,-29760.0)
set rw=Rect(4224.0,19488.0,4608.0,19776.0)
set sw=Rect(13056.0,4960.0,13408.0,5280.0)
set tw=Rect(5696.0,24768.0,6048.0,25088.0)
set iw=Rect(3328.0,26816.0,3680.0,27168.0)
set Sw=Rect(8608.0,26144.0,9024.0,26528.0)
set cw=Rect(6656.0,21248.0,7008.0,21600.0)
set ow=Rect(-16640.0,10368.0,-13504.0,13056.0)
set Ow=Rect(-18944.0,5312.0,-16864.0,7328.0)
set lw=Rect(-28032.0,-1120.0,-22464.0,640.0)
set bw=Rect(-27264.0,2784.0,-26208.0,3328.0)
set yw=Rect(-26912.0,-4320.0,-23872.0,-2976.0)
set pw=Rect(-19328.0,-288.0,-18592.0,1568.0)
set ew=Rect(-11936.0,7616.0,-448.0,11424.0)
set qw=Rect(-1664.0,1216.0,6848.0,7776.0)
set aw=Rect(-5472.0,24704.0,-3232.0,27616.0)
set nw=Rect(3744.0,10880.0,4064.0,11232.0)
set dw=Rect(-12064.0,11392.0,-8832.0,16576.0)
set fw=Rect(-8832.0,10176.0,23520.0,17760.0)
set Rw=Rect(4384.0,17728.0,23424.0,27040.0)
set Tw=Rect(-10688.0,17536.0,-10304.0,17888.0)
set Yw=Rect(-10688.0,-9312.0,-10336.0,-9024.0)
set Gw=Rect(17280.0,9280.0,17632.0,9632.0)
set gw=Rect(8352.0,12192.0,8672.0,12512.0)
set hw=Rect(5952.0,18400.0,6304.0,18688.0)
set Fw=Rect(9120.0,19872.0,9408.0,20192.0)
set kw=Rect(23328.0,-14080.0,30688.0,17792.0)
set jw=Rect(13984.0,-288.0,14336.0,0.0)
set xw=Rect(10624.0,-7552.0,11008.0,-7200.0)
set vw=Rect(15168.0,-5792.0,15552.0,-5408.0)
set mw=Rect(15328.0,-7712.0,15648.0,-7424.0)
set Qw=Rect(12640.0,-7104.0,12992.0,-6752.0)
set Ww=Rect(17056.0,-8800.0,17376.0,-8512.0)
set Ew=Rect(18432.0,-608.0,18784.0,-320.0)
set Zw=Rect(13760.0,-11168.0,14112.0,-10752.0)
set Uw=Rect(16768.0,-16416.0,17120.0,-16032.0)
set Iw=Rect(18880.0,-7616.0,19232.0,-7296.0)
set Pw=Rect(6816.0,-6752.0,7136.0,-6464.0)
set Aw=Rect(12512.0,-4064.0,12832.0,-3712.0)
set Dw=Rect(9056.0,-4576.0,9344.0,-4288.0)
set Hw=Rect(-26464.0,-8896.0,-26144.0,-8544.0)
set Jw=Rect(-21632.0,-8544.0,-21248.0,-8224.0)
set Kw=Rect(-16928.0,-8224.0,-16608.0,-7904.0)
set Lw=Rect(-10112.0,-11424.0,-9760.0,-11136.0)
set Xw=Rect(-7680.0,-16416.0,-7328.0,-16128.0)
set Cw=Rect(288.0,-17760.0,608.0,-17472.0)
set Vw=Rect(9248.0,-21376.0,9984.0,-20640.0)
set Bw=Rect(24704.0,-27648.0,25088.0,-27264.0)
set Nw=Rect(10816.0,-18688.0,11168.0,-18304.0)
set Mw=Rect(13056.0,-18016.0,13408.0,-17760.0)
set wu=Rect(12096.0,-21024.0,12448.0,-20704.0)
set uu=Rect(15680.0,5600.0,16032.0,5920.0)
set ru=Rect(6944.0,7648.0,7264.0,7968.0)
set su=Rect(5824.0,12256.0,6176.0,12576.0)
set tu=Rect(11200.0,7712.0,11552.0,8064.0)
set iu=Rect(12480.0,11136.0,12832.0,11456.0)
set Su=Rect(14880.0,22944.0,15200.0,23232.0)
set cu=Rect(11392.0,16768.0,11744.0,17088.0)
set ou=Rect(23840.0,96.0,24128.0,384.0)
set Ou=Rect(19488.0,11168.0,19808.0,11488.0)
set lu=Rect(20672.0,2528.0,21056.0,2848.0)
set bu=Rect(23776.0,2368.0,24160.0,2720.0)
set yu=Rect(18336.0,-13408.0,18624.0,-13120.0)
set pu=Rect(17056.0,-11648.0,17376.0,-11264.0)
set eu=Rect(15488.0,-17696.0,15840.0,-17376.0)
set qu=Rect(24896.0,-8480.0,25248.0,-8128.0)
set au=Rect(16480.0,-14368.0,16768.0,-14048.0)
set nu=Rect(17088.0,-19744.0,17440.0,-19456.0)
set du=Rect(22720.0,-10432.0,23072.0,-10048.0)
set fu=Rect(20672.0,-23232.0,21056.0,-22848.0)
set Ru=Rect(19904.0,-5920.0,20256.0,-5632.0)
set Tu=Rect(18624.0,-3936.0,18976.0,-3616.0)
set Yu=Rect(-13632.0,-14816.0,-12192.0,-13376.0)
set Gu=Rect(17760.0,-10400.0,23360.0,-1344.0)
set gu=Rect(12384.0,-5984.0,13824.0,-4352.0)
set hu=Rect(-10944.0,3968.0,-7680.0,5120.0)
set Fu=Rect(-6528.0,7808.0,-6176.0,8160.0)
set ku=Rect(-8864.0,6912.0,-8448.0,7264.0)
set ju=Rect(-11680.0,14304.0,-11264.0,14752.0)
set xu=Rect(-9760.0,12928.0,-9472.0,13280.0)
set vu=Rect(-7552.0,16928.0,-7232.0,17248.0)
set mu=Rect(-17472.0,-3328.0,-17120.0,-2976.0)
call Rect(-24576.0,-1376.0,-24224.0,-1024.0)
set Qu=Rect(23392.0,10912.0,23712.0,11232.0)
set Wu=Rect(17280.0,19456.0,17632.0,19808.0)
set Eu=Rect(-16896.0,24032.0,-16544.0,24352.0)
set Zu=Rect(-15904.0,25952.0,-15520.0,26304.0)
set Uu=Rect(-17312.0,26624.0,-16896.0,27008.0)
set Iu=Rect(-16096.0,20352.0,-15712.0,20768.0)
set Pu=Rect(-20448.0,21440.0,-20064.0,21792.0)
set Au=Rect(-22560.0,19808.0,-22272.0,20128.0)
set Du=Rect(-18752.0,19520.0,-18400.0,19872.0)
set Hu=Rect(-16128.0,16896.0,-15808.0,17248.0)
set Ju=Rect(-17952.0,15904.0,-17632.0,16224.0)
set Ku=Rect(-19936.0,16352.0,-19648.0,16672.0)
set Lu=Rect(-17248.0,12448.0,-16928.0,12832.0)
set Xu=Rect(-13728.0,11968.0,-13408.0,12352.0)
set Cu=Rect(-15232.0,10624.0,-14880.0,10976.0)
set Vu=Rect(-13856.0,7872.0,-13568.0,8256.0)
set Bu=Rect(-16192.0,5824.0,-15840.0,6208.0)
set Nu=Rect(-16864.0,3392.0,-16576.0,3776.0)
set Mu=Rect(-18880.0,5568.0,-18528.0,5920.0)
set wr=Rect(-20288.0,1216.0,-19936.0,1600.0)
set ur=Rect(-17216.0,352.0,-16896.0,736.0)
set rr=Rect(-24512.0,3744.0,-24128.0,4064.0)
set sr=Rect(-22720.0,2368.0,-22432.0,2752.0)
set tr=Rect(-23552.0,-256.0,-23200.0,128.0)
set ir=Rect(-25376.0,1312.0,-25056.0,1632.0)
set Sr=Rect(-28736.0,-192.0,-28352.0,160.0)
set cr=Rect(-21024.0,2944.0,-20704.0,3360.0)
set lr=Rect(-13792.0,2144.0,-13440.0,2592.0)
set br=Rect(-13568.0,14912.0,-13216.0,15296.0)
set yr=Rect(-12736.0,16128.0,-12352.0,16512.0)
set pr=Rect(-10880.0,3360.0,-10528.0,3712.0)
set er=Rect(-10048.0,5280.0,-9696.0,5600.0)
set qr=Rect(-6880.0,3936.0,-6560.0,4256.0)
set ar=Rect(-8224.0,3040.0,-7904.0,3392.0)
set nr=Rect(-8960.0,1760.0,-8608.0,2176.0)
set dr=Rect(-6624.0,1088.0,-6304.0,1472.0)
set fr=Rect(-7296.0,-960.0,-6944.0,-544.0)
set Rr=Rect(-23712.0,-4704.0,-23392.0,-4416.0)
set Tr=Rect(-25184.0,-3168.0,-24864.0,-2848.0)
set Yr=Rect(-21888.0,-4416.0,-21536.0,-4032.0)
set Gr=Rect(-20928.0,-2304.0,-20576.0,-1888.0)
set gr=Rect(-7776.0,11040.0,-7456.0,11392.0)
set hr=Rect(-11648.0,7072.0,-11296.0,7360.0)
set Fr=Rect(-13728.0,4992.0,-13408.0,5376.0)
set kr=Rect(-5152.0,21696.0,-4832.0,22080.0)
set jr=Rect(-5248.0,24416.0,-4960.0,24768.0)
set xr=Rect(-6688.0,28096.0,-6368.0,28480.0)
set vr=Rect(-9024.0,26496.0,-8736.0,26880.0)
set mr=Rect(-10048.0,28224.0,-9696.0,28576.0)
set Qr=Rect(-1408.0,23776.0,-1152.0,24096.0)
set Wr=Rect(-2720.0,26176.0,-2432.0,26560.0)
set Er=Rect(-28032.0,-2944.0,-27680.0,-2560.0)
set Zr=Rect(-29760.0,-10016.0,-29408.0,-9632.0)
set Ur=Rect(15296.0,-26976.0,15648.0,-26624.0)
set Ir=Rect(-20544.0,12032.0,-20160.0,12416.0)
set Pr=Rect(-18368.0,10624.0,-18016.0,11008.0)
set Ar=Rect(-10880.0,-576.0,-10528.0,-224.0)
set Dr=Rect(-11104.0,-4768.0,-10816.0,-4448.0)
set Hr=Rect(-5728.0,-2912.0,-5440.0,-2560.0)
set Jr=Rect(-3904.0,-6720.0,-3552.0,-6336.0)
set Kr=Rect(-3616.0,-3040.0,-3328.0,-2688.0)
set Lr=Rect(-7200.0,-8000.0,-6880.0,-7616.0)
set Xr=Rect(-5504.0,-9344.0,-5248.0,-9056.0)
set Cr=Rect(-11616.0,10848.0,-11296.0,11168.0)
set Vr=Rect(-1792.0,-320.0,-1440.0,64.0)
set Br=Rect(3232.0,-7488.0,3552.0,-7136.0)
set Nr=Rect(8224.0,-10496.0,8512.0,-10208.0)
set Mr=Rect(1344.0,29280.0,1696.0,29632.0)
set ws=Rect(10848.0,-2144.0,11136.0,-1824.0)
set us=Rect(-26496.0,-1568.0,-26144.0,-1248.0)
set rs=Rect(-27168.0,2528.0,-26880.0,2816.0)
set ss=Rect(-2016.0,27552.0,-1696.0,27936.0)
set ts=Rect(-3488.0,23040.0,-3200.0,23392.0)
set is=Rect(2016.0,-7904.0,2336.0,-7584.0)
set Ss=Rect(640.0,-5760.0,992.0,-5376.0)
set cs=Rect(5216.0,-12384.0,5504.0,-12064.0)
set os=Rect(18272.0,-17504.0,18656.0,-17056.0)
set Os=Rect(26848.0,-11680.0,27168.0,-11360.0)
set ls=Rect(6464.0,-4672.0,6816.0,-4288.0)
set bs=Rect(20672.0,21312.0,21024.0,21696.0)
set ys=Rect(-1824.0,5792.0,-1440.0,6144.0)
set ps=Rect(-23264.0,-8992.0,-22944.0,-8704.0)
set es=Rect(-13504.0,-8640.0,-13184.0,-8384.0)
set qs=Rect(26048.0,-2848.0,26400.0,-2528.0)
set as=Rect(28864.0,-3360.0,29152.0,-3040.0)
set ns=Rect(28064.0,2592.0,28352.0,2880.0)
set ds=Rect(27488.0,-5984.0,27808.0,-5664.0)
call XR()
call CR()
call InitBlizzard()
call jf()
call dK()
set GK=Ts
if TriggerEvaluate(GK) then
call TriggerExecute(GK)
endif
set gK=Ms
if TriggerEvaluate(gK) then
call TriggerExecute(gK)
endif
set YK=CreateTrigger()
call TriggerAddCondition(YK,Condition(en))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Real.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(qn))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Integer.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(an))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package String.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(nn))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Angle.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(dn))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Vectors.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(fn))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Maths.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(Rn))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Player.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(Tn))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Printing.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(Yn))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Basics.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(Gn))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package GameTimer.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(gn))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MagicFunctions.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(hn))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package ErrorHandling.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(Fn))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Matrices.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(kn))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Quaternion.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(jn))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Table.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(xn))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Playercolor.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(vn))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Colors.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(mn))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Group.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(Qn))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Lightning.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(Wn))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package WeatherEffects.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(En))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package TypeCasting.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(Zn))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package ClosureForGroups.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(Un))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package LinkedList.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(In))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Abilities.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(Pn))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package AbilityIds.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(An))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Buildings.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(Dn))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MutliboardTools.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(Hn))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package HashList.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(Jn))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package EventHelper.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(Kn))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package RegisterEvents.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(Ln))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package TimerUtils.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(Xn))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package ClosureTimers.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(Cn))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package TargetsAllowed.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(Vn))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Doodads.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(Bn))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Icons.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(Nn))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Objects.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(Mn))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Sounds.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(wd))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Soundsets.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(ud))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Textures.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(rd))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package UI.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(sd))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Units.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(td))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package UnitIds.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(id))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MapBounds.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(Sd))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package DummyRecycler.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(cd))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package StringUtils.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(od))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package ObjectIds.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(Od))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Preloader.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(ld))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package ObjectIdGenerator.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(bd))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package OnUnitEnterLeave.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(yd))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package UnitIndexer.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(pd))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package ClosureEvents.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(ed))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MathTools.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(qd))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Forces.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(ad))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Strings.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(nd))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package CityBaseTaxes.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(dd))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Revolts.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(fd))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package City.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(Rd))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Multiboards.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(Td))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package PlayerStats.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(Yd))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package CityModifiers.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(Gd))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Main.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(gd))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package CastleCapture.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(hd))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package CityBuilded.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(Fd))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package CityManage.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(kd))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Commands.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(jd))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Credits.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(xd))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Economy.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(vd))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package DateTime.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(md))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MultiboardCityUpdate.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(Qd))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Diplomacy.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(Wd))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package LimitEncampments.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(Ed))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package LimitMercenaryCamps.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(Zd))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Logarithm.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(Ud))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MainInit.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(Id))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MassControl.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(Pd))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package NoShipsNearRivers.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(Ad))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package OnPlayerLeave.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(Dd))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package RangeChecks.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(Hd))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Taxation.")
endif
call TriggerClearConditions(YK)
call TriggerAddCondition(YK,Condition(Jd))
if not TriggerEvaluate(YK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Upkeep.")
endif
call TriggerClearConditions(YK)
call DestroyTrigger(YK)
set YK=null
set GK=null
set gK=null
endfunction
function RK takes nothing returns nothing
call SetPlayerTeam(Player(0),0)
call SetPlayerTeam(Player(1),0)
call SetPlayerTeam(Player(2),0)
call SetPlayerTeam(Player(3),0)
call SetPlayerTeam(Player(4),0)
call SetPlayerTeam(Player(5),0)
call SetPlayerTeam(Player(6),0)
call SetPlayerTeam(Player(7),0)
call SetPlayerTeam(Player(8),0)
call SetPlayerTeam(Player(9),0)
call SetPlayerTeam(Player(10),0)
call SetPlayerTeam(Player(11),0)
call SetPlayerTeam(Player(12),1)
call SetPlayerTeam(Player(13),1)
call SetPlayerTeam(Player(14),1)
call SetPlayerTeam(Player(15),1)
call SetPlayerTeam(Player(16),1)
call SetPlayerTeam(Player(17),1)
call SetPlayerTeam(Player(18),1)
call SetPlayerTeam(Player(19),1)
endfunction
function TK takes nothing returns nothing
call SetStartLocPrioCount(0,19)
call SetStartLocPrio(0,0,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,1,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,2,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,3,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,4,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,9,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,10,11,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,11,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,12,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,13,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,14,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,15,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,16,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,17,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,18,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(1,9)
call SetStartLocPrio(1,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,1,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,2,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,3,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,4,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(2,9)
call SetStartLocPrio(2,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,2,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,3,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,4,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(3,9)
call SetStartLocPrio(3,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,3,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,4,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(4,9)
call SetStartLocPrio(4,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,4,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(5,9)
call SetStartLocPrio(5,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(6,9)
call SetStartLocPrio(6,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(7,9)
call SetStartLocPrio(7,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(8,9)
call SetStartLocPrio(8,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(9,9)
call SetStartLocPrio(9,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,8,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(10,16)
call SetStartLocPrio(10,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,8,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,9,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,10,12,MAP_LOC_PRIO_LOW)
call SetStartLocPrio(10,11,13,MAP_LOC_PRIO_LOW)
call SetStartLocPrio(10,12,14,MAP_LOC_PRIO_LOW)
call SetStartLocPrio(10,13,15,MAP_LOC_PRIO_LOW)
call SetStartLocPrio(10,14,16,MAP_LOC_PRIO_LOW)
call SetStartLocPrio(10,15,17,MAP_LOC_PRIO_LOW)
call SetStartLocPrioCount(11,19)
call SetStartLocPrio(11,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,8,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,9,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,10,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,11,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,12,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,13,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,14,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,15,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,16,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,17,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,18,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(12,5)
call SetStartLocPrio(12,0,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,1,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,2,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,3,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,4,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(13,5)
call SetStartLocPrio(13,0,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,1,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,2,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,3,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,4,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(14,5)
call SetStartLocPrio(14,0,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,1,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,2,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,3,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,4,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(15,5)
call SetStartLocPrio(15,0,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,1,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,2,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,3,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,4,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(16,5)
call SetStartLocPrio(16,0,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,1,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,2,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,3,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,4,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(17,5)
call SetStartLocPrio(17,0,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,1,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,2,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,3,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,4,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(18,1)
call SetStartLocPrio(18,0,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(19,1)
call SetStartLocPrio(19,0,18,MAP_LOC_PRIO_HIGH)
endfunction
function fK takes nothing returns nothing
call SetPlayerStartLocation(Player(0),0)
call ForcePlayerStartLocation(Player(0),0)
call SetPlayerColor(Player(0),ConvertPlayerColor(0))
call SetPlayerRacePreference(Player(0),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(0),false)
call SetPlayerController(Player(0),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(1),1)
call ForcePlayerStartLocation(Player(1),1)
call SetPlayerColor(Player(1),ConvertPlayerColor(1))
call SetPlayerRacePreference(Player(1),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(1),false)
call SetPlayerController(Player(1),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(2),2)
call ForcePlayerStartLocation(Player(2),2)
call SetPlayerColor(Player(2),ConvertPlayerColor(2))
call SetPlayerRacePreference(Player(2),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(2),false)
call SetPlayerController(Player(2),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(3),3)
call ForcePlayerStartLocation(Player(3),3)
call SetPlayerColor(Player(3),ConvertPlayerColor(3))
call SetPlayerRacePreference(Player(3),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(3),false)
call SetPlayerController(Player(3),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(4),4)
call ForcePlayerStartLocation(Player(4),4)
call SetPlayerColor(Player(4),ConvertPlayerColor(4))
call SetPlayerRacePreference(Player(4),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(4),false)
call SetPlayerController(Player(4),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(5),5)
call ForcePlayerStartLocation(Player(5),5)
call SetPlayerColor(Player(5),ConvertPlayerColor(5))
call SetPlayerRacePreference(Player(5),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(5),false)
call SetPlayerController(Player(5),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(6),6)
call ForcePlayerStartLocation(Player(6),6)
call SetPlayerColor(Player(6),ConvertPlayerColor(6))
call SetPlayerRacePreference(Player(6),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(6),false)
call SetPlayerController(Player(6),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(7),7)
call ForcePlayerStartLocation(Player(7),7)
call SetPlayerColor(Player(7),ConvertPlayerColor(7))
call SetPlayerRacePreference(Player(7),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(7),false)
call SetPlayerController(Player(7),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(8),8)
call ForcePlayerStartLocation(Player(8),8)
call SetPlayerColor(Player(8),ConvertPlayerColor(8))
call SetPlayerRacePreference(Player(8),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(8),false)
call SetPlayerController(Player(8),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(9),9)
call ForcePlayerStartLocation(Player(9),9)
call SetPlayerColor(Player(9),ConvertPlayerColor(9))
call SetPlayerRacePreference(Player(9),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(9),false)
call SetPlayerController(Player(9),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(10),10)
call ForcePlayerStartLocation(Player(10),10)
call SetPlayerColor(Player(10),ConvertPlayerColor(10))
call SetPlayerRacePreference(Player(10),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(10),false)
call SetPlayerController(Player(10),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(11),11)
call ForcePlayerStartLocation(Player(11),11)
call SetPlayerColor(Player(11),ConvertPlayerColor(11))
call SetPlayerRacePreference(Player(11),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(11),false)
call SetPlayerController(Player(11),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(12),12)
call ForcePlayerStartLocation(Player(12),12)
call SetPlayerColor(Player(12),ConvertPlayerColor(12))
call SetPlayerRacePreference(Player(12),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(12),false)
call SetPlayerController(Player(12),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(13),13)
call ForcePlayerStartLocation(Player(13),13)
call SetPlayerColor(Player(13),ConvertPlayerColor(13))
call SetPlayerRacePreference(Player(13),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(13),false)
call SetPlayerController(Player(13),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(14),14)
call ForcePlayerStartLocation(Player(14),14)
call SetPlayerColor(Player(14),ConvertPlayerColor(14))
call SetPlayerRacePreference(Player(14),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(14),false)
call SetPlayerController(Player(14),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(15),15)
call ForcePlayerStartLocation(Player(15),15)
call SetPlayerColor(Player(15),ConvertPlayerColor(15))
call SetPlayerRacePreference(Player(15),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(15),false)
call SetPlayerController(Player(15),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(16),16)
call ForcePlayerStartLocation(Player(16),16)
call SetPlayerColor(Player(16),ConvertPlayerColor(16))
call SetPlayerRacePreference(Player(16),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(16),false)
call SetPlayerController(Player(16),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(17),17)
call ForcePlayerStartLocation(Player(17),17)
call SetPlayerColor(Player(17),ConvertPlayerColor(17))
call SetPlayerRacePreference(Player(17),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(17),false)
call SetPlayerController(Player(17),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(18),18)
call ForcePlayerStartLocation(Player(18),18)
call SetPlayerColor(Player(18),ConvertPlayerColor(18))
call SetPlayerRacePreference(Player(18),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(18),false)
call SetPlayerController(Player(18),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(19),19)
call ForcePlayerStartLocation(Player(19),19)
call SetPlayerColor(Player(19),ConvertPlayerColor(19))
call SetPlayerRacePreference(Player(19),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(19),false)
call SetPlayerController(Player(19),MAP_CONTROL_USER)
endfunction
function config takes nothing returns nothing
call SetMapName("TRIGSTR_001")
call SetMapDescription("TRIGSTR_003")
call SetPlayers(20)
call SetTeams(20)
call SetGamePlacement(MAP_PLACEMENT_TEAMS_TOGETHER)
call DefineStartLocation(0,320.0,5184.0)
call DefineStartLocation(1,320.0,5184.0)
call DefineStartLocation(2,320.0,5184.0)
call DefineStartLocation(3,320.0,5184.0)
call DefineStartLocation(4,320.0,5184.0)
call DefineStartLocation(5,320.0,5184.0)
call DefineStartLocation(6,320.0,5184.0)
call DefineStartLocation(7,320.0,5184.0)
call DefineStartLocation(8,320.0,5184.0)
call DefineStartLocation(9,320.0,5184.0)
call DefineStartLocation(10,320.0,5184.0)
call DefineStartLocation(11,320.0,5184.0)
call DefineStartLocation(12,320.0,5184.0)
call DefineStartLocation(13,320.0,5184.0)
call DefineStartLocation(14,320.0,5184.0)
call DefineStartLocation(15,320.0,5184.0)
call DefineStartLocation(16,320.0,5184.0)
call DefineStartLocation(17,320.0,5184.0)
call DefineStartLocation(18,320.0,5184.0)
call DefineStartLocation(19,320.0,5184.0)
call fK()
call RK()
call TK()
endfunction
