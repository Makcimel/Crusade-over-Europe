// this script was compiled with wurst 1.8.0.0-jenkins-Wurst-1091
globals
group w=null
location u=null
integer array r
force s=null
location t=null
location i=null
location S=null
location c=null
rect o=null
rect O=null
group l=null
group b=null
location y=null
boolean array p
boolean array e
rect q=null
rect a=null
rect n=null
rect d=null
rect f=null
rect R=null
rect T=null
rect Y=null
rect G=null
rect g=null
rect h=null
rect F=null
rect k=null
rect j=null
rect x=null
rect v=null
rect m=null
rect Q=null
rect W=null
rect E=null
rect Z=null
rect U=null
rect I=null
rect P=null
rect A=null
rect D=null
rect H=null
rect J=null
rect K=null
rect L=null
rect X=null
rect C=null
rect V=null
rect B=null
rect N=null
rect M=null
rect ww=null
rect uw=null
rect rw=null
rect sw=null
rect tw=null
rect iw=null
rect Sw=null
rect cw=null
rect ow=null
rect Ow=null
rect lw=null
rect bw=null
rect yw=null
rect pw=null
rect ew=null
rect qw=null
rect aw=null
rect nw=null
rect dw=null
rect fw=null
rect Rw=null
rect Tw=null
rect Yw=null
rect Gw=null
rect gw=null
rect hw=null
rect Fw=null
rect kw=null
rect jw=null
rect xw=null
rect vw=null
rect mw=null
rect Qw=null
rect Ww=null
rect Ew=null
rect Zw=null
rect Uw=null
rect Iw=null
rect Pw=null
rect Aw=null
rect Dw=null
rect Hw=null
rect Jw=null
rect Kw=null
rect Lw=null
rect Xw=null
rect Cw=null
rect Vw=null
rect Bw=null
rect Nw=null
rect Mw=null
rect wu=null
rect uu=null
rect ru=null
rect su=null
rect tu=null
rect iu=null
rect Su=null
rect cu=null
rect ou=null
rect Ou=null
rect lu=null
rect bu=null
rect yu=null
rect pu=null
rect eu=null
rect qu=null
rect au=null
rect nu=null
rect du=null
rect fu=null
rect Ru=null
rect Tu=null
rect Yu=null
rect Gu=null
rect gu=null
rect hu=null
rect Fu=null
rect ku=null
rect ju=null
rect xu=null
rect vu=null
rect mu=null
rect Qu=null
rect Wu=null
rect Eu=null
rect Zu=null
rect Uu=null
rect Iu=null
rect Pu=null
rect Au=null
rect Du=null
rect Hu=null
rect Ju=null
rect Ku=null
rect Lu=null
rect Xu=null
rect Cu=null
rect Vu=null
rect Bu=null
rect Nu=null
rect Mu=null
rect wr=null
rect ur=null
rect rr=null
rect sr=null
rect tr=null
rect ir=null
rect Sr=null
rect cr=null
rect lr=null
rect br=null
rect yr=null
rect pr=null
rect er=null
rect qr=null
rect ar=null
rect nr=null
rect dr=null
rect fr=null
rect Rr=null
rect Tr=null
rect Yr=null
rect Gr=null
rect gr=null
rect hr=null
rect Fr=null
rect kr=null
rect jr=null
rect xr=null
rect vr=null
rect mr=null
rect Qr=null
rect Wr=null
rect Er=null
rect Zr=null
rect Ur=null
rect Ir=null
rect Pr=null
rect Ar=null
rect Dr=null
rect Hr=null
rect Jr=null
rect Kr=null
rect Lr=null
rect Xr=null
rect Cr=null
rect Vr=null
rect Br=null
rect Nr=null
rect Mr=null
rect ws=null
rect us=null
rect rs=null
rect ss=null
rect ts=null
rect is=null
rect Ss=null
rect cs=null
rect os=null
rect Os=null
rect ls=null
rect bs=null
rect ys=null
rect ps=null
rect es=null
rect qs=null
rect as=null
rect ns=null
rect ds=null
sound fs=null
trigger Rs=null
trigger Ts=null
trigger Ys=null
trigger Gs=null
trigger gs=null
trigger hs=null
trigger Fs=null
trigger ks=null
trigger js=null
trigger xs=null
trigger vs=null
trigger ms=null
trigger Qs=null
trigger Ws=null
trigger Es=null
trigger Zs=null
trigger Us=null
trigger Is=null
trigger Ps=null
trigger As=null
trigger Ds=null
trigger Hs=null
trigger Js=null
trigger Ks=null
trigger Ls=null
trigger Xs=null
trigger Cs=null
trigger Vs=null
trigger Bs=null
trigger Ns=null
trigger Ms=null
trigger wt=null
trigger ut=null
trigger rt=null
trigger st=null
trigger tt=null
trigger St=null
trigger ct=null
trigger ot=null
trigger Ot=null
trigger lt=null
trigger bt=null
trigger yt=null
trigger pt=null
trigger et=null
trigger qt=null
trigger at=null
trigger nt=null
trigger dt=null
trigger ft=null
trigger Rt=null
trigger Tt=null
trigger Yt=null
trigger Gt=null
trigger gt=null
trigger ht=null
trigger Ft=null
trigger kt=null
trigger jt=null
trigger xt=null
trigger vt=null
trigger mt=null
trigger Qt=null
trigger Wt=null
trigger Et=null
trigger Zt=null
trigger Ut=null
trigger It=null
trigger Pt=null
trigger At=null
trigger Dt=null
trigger Ht=null
trigger Jt=null
trigger Kt=null
trigger Lt=null
trigger Xt=null
trigger Ct=null
trigger Vt=null
trigger Bt=null
trigger Nt=null
trigger Mt=null
trigger wi=null
trigger ui=null
trigger ri=null
trigger si=null
trigger ti=null
trigger ii=null
trigger Si=null
trigger ci=null
trigger oi=null
trigger Oi=null
trigger li=null
trigger bi=null
trigger yi=null
trigger pi=null
trigger ei=null
trigger qi=null
trigger ai=null
trigger ni=null
trigger di=null
trigger fi=null
trigger Ri=null
trigger Ti=null
trigger Yi=null
trigger Gi=null
trigger gi=null
trigger hi=null
trigger Fi=null
trigger ki=null
trigger ji=null
trigger xi=null
trigger vi=null
trigger mi=null
trigger Qi=null
trigger Wi=null
trigger Ei=null
trigger Zi=null
trigger Ui=null
trigger Ii=null
trigger Pi=null
trigger Ai=null
trigger Di=null
trigger Hi=null
trigger Ji=null
trigger Ki=null
trigger Li=null
trigger Xi=null
trigger Ci=null
trigger Vi=null
trigger Bi=null
trigger Ni=null
trigger Mi=null
trigger wS=null
trigger uS=null
trigger rS=null
trigger sS=null
trigger tS=null
trigger iS=null
trigger SS=null
integer cS=0
player oS=null
integer OS=0
integer array lS
integer bS=0
integer yS=0
integer pS=0
integer eS=0
integer qS=0
integer aS=0
integer nS=0
integer dS=0
integer fS=0
integer RS=0
integer TS=0
real YS=0.
real array GS
integer array gS
real array hS
real array FS
real array kS
real array jS
integer array xS
playerevent vS=null
trigger mS=null
trigger QS=null
trigger WS=null
integer array ES
integer ZS=0
integer US=0
integer IS=0
integer array PS
integer array AS
boolean DS=false
group HS=null
integer array JS
integer KS=0
integer LS=0
integer XS=0
filterfunc CS=null
integer VS=0
integer array BS
integer array NS
integer array MS
string array wc
integer uc=0
real rc=0.
integer array sc
integer array tc
integer array ic
integer Sc=0
hashtable cc=null
force oc=null
force Oc=null
force lc=null
force bc=null
force array yc
integer array pc
integer array ec
integer array qc
timer ac=null
real nc=0.
group dc=null
hashtable fc=null
hashtable Rc=null
hashtable Tc=null
integer array Yc
integer array Gc
integer gc=0
boolean hc=false
boolean Fc=false
boolean kc=false
timer jc=null
real xc=0.
rect vc=null
rect mc=null
region Qc=null
real Wc=0.
real Ec=0.
integer Zc=0
integer Uc=0
integer Ic=0
integer array Pc
integer array Ac
integer array Dc
integer array Hc
integer array Jc
integer array Kc
integer array Lc
integer array Xc
integer array Cc
multiboard array Vc
trigger Bc=null
group Nc=null
unit array Mc
integer wo=0
integer array uo
player array ro
player so=null
playercolor io=null
playercolor So=null
playercolor co=null
playercolor oo=null
playercolor array Oo
group lo=null
unit bo=null
integer yo=0
real po=0.
trigger array eo
integer qo=0
real array ao
integer no=0
string array do
string array fo
string array Ro
string array To
string array Yo
string array Go
string array go
string array ho
string array Fo
string array ko
string array jo
string array xo
string array vo
string array mo
string array Qo
string array Wo
string array Eo
hashtable Zo=null
timer array Uo
integer Io=0
integer Po=0
integer Ao=0
trigger Do=null
trigger Ho=null
unit array Jo
integer Ko=0
integer Lo=0
integer Xo=0
integer array Co
integer Vo=0
integer Bo=0
integer No=0
integer Mo=0
integer array wO
integer uO=0
integer array rO
integer array sO
integer tO=0
integer array iO
integer SO=0
integer cO=0
integer array oO
integer array OO
integer lO=0
integer bO=0
integer array yO
integer pO=0
integer eO=0
integer array qO
integer array aO
integer nO=0
integer dO=0
integer array fO
integer array RO
integer TO=0
integer YO=0
integer array GO
integer array gO
integer hO=0
integer FO=0
integer array kO
integer jO=0
integer array xO
integer array vO
integer mO=0
integer QO=0
integer array WO
integer array EO
integer ZO=0
integer UO=0
integer array IO
integer array PO
integer AO=0
integer DO=0
integer array HO
integer JO=0
integer KO=0
integer array LO
integer XO=0
integer CO=0
integer array VO
integer array BO
integer NO=0
integer MO=0
integer array wl
integer array ul
integer rl=0
integer sl=0
integer array tl
integer il=0
integer Sl=0
integer array cl
integer ol=0
integer Ol=0
integer array ll
integer array bl
integer yl=0
integer pl=0
integer array el
integer ql=0
integer al=0
integer array nl
real array dl
real array fl
boolean array Rl
real array Tl
integer array Yl
real array Gl
real array gl
string array hl
string array Fl
unit array kl
string array jl
integer array xl
integer array vl
integer array ml
real array Ql
real array Wl
integer array El
integer array Zl
real array Ul
real array Il
real array Pl
real array Al
integer array Dl
real array Hl
integer array Jl
integer array Kl
integer array Ll
integer array Xl
integer array Cl
integer array Vl
integer array Bl
integer array Nl
integer array Ml
integer array wb
integer array ub
integer array rb
integer array sb
unit array tb
timer array ib
real array Sb
integer array cb
integer array ob
integer array Ob
integer array lb
integer array bb
integer array yb
integer array pb
unit array eb
unit array qb
integer array ab
integer array nb
integer array db
integer array fb
integer array Rb
integer array Tb
integer array Yb
boolean array Gb
integer array gb
integer array hb
player array Fb
unit array kb
integer array jb
unit array xb
integer array vb
real array mb
real array Qb
unit array Wb
integer array Eb
player array Zb
boolean array Ub
integer array Ib
integer array Pb
boolean array Ab
unit array Db
unit array Hb
integer Jb=0
string array Kb
integer Lb=0
integer Xb=0
integer Cb=0
integer array Vb
integer array Bb
integer array Nb
integer array Mb
integer array wy
integer array uy
integer array ry
integer array sy
integer array ty
integer array iy
integer array Sy
integer array cy
integer array oy
integer array Oy
integer array ly
integer array by
integer array yy
integer array py
integer array ey
integer array qy
integer array ay
integer array ny
integer array dy
integer array fy
code Ry=null
code Ty=null
code Yy=null
code Gy=null
code gy=null
code hy=null
code Fy=null
code ky=null
code jy=null
code xy=null
code vy=null
code my=null
code Qy=null
code Wy=null
code Ey=null
code Zy=null
code Uy=null
code Iy=null
code Py=null
code Ay=null
code Dy=null
code Hy=null
code Jy=null
code Ky=null
code Ly=null
code Xy=null
code Cy=null
code Vy=null
code By=null
code Ny=null
code My=null
code wp=null
code up=null
code rp=null
code sp=null
code tp=null
code ip=null
code Sp=null
code cp=null
code op=null
code Op=null
code lp=null
code bp=null
code yp=null
code pp=null
code ep=null
code qp=null
code ap=null
code np=null
code dp=null
code fp=null
code Rp=null
code Tp=null
code Yp=null
code Gp=null
code gp=null
code hp=null
code Fp=null
code kp=null
code jp=null
code xp=null
code vp=null
code mp=null
code Qp=null
code Wp=null
code Ep=null
code Zp=null
code Up=null
code Ip=null
code Pp=null
code Ap=null
code Dp=null
code Hp=null
code Jp=null
code Kp=null
code Lp=null
code Xp=null
code Cp=null
code Vp=null
code Bp=null
code Np=null
code Mp=null
code we=null
code ue=null
code re=null
code se=null
code te=null
code ie=null
code Se=null
code ce=null
code oe=null
code Oe=null
code le=null
code be=null
code ye=null
code pe=null
code ee=null
code qe=null
code ae=null
code ne=null
code de=null
code fe=null
code Re=null
code Te=null
code Ye=null
code Ge=null
code ge=null
code he=null
code Fe=null
code ke=null
code je=null
code xe=null
code ve=null
code me=null
code Qe=null
code We=null
code Ee=null
code Ze=null
code Ue=null
code Ie=null
code Pe=null
code Ae=null
code De=null
code He=null
code Je=null
code Ke=null
code Le=null
code Xe=null
code Ce=null
code Ve=null
code Be=null
code Ne=null
code Me=null
code wq=null
code uq=null
code rq=null
code sq=null
code tq=null
code iq=null
code Sq=null
code cq=null
code oq=null
code Oq=null
code lq=null
code bq=null
code yq=null
code pq=null
code eq=null
code qq=null
code aq=null
code nq=null
code dq=null
code fq=null
code Rq=null
code Tq=null
code Yq=null
code Gq=null
code gq=null
code hq=null
code Fq=null
code kq=null
code jq=null
code xq=null
code vq=null
code mq=null
code Qq=null
code Wq=null
code Eq=null
code Zq=null
code Uq=null
code Iq=null
code Pq=null
code Aq=null
code Dq=null
code Hq=null
code Jq=null
code Kq=null
code Lq=null
code Xq=null
code Cq=null
code Vq=null
code Bq=null
code Nq=null
code Mq=null
code wa=null
code ua=null
code ra=null
code sa=null
code ta=null
code ia=null
code Sa=null
code ca=null
code oa=null
code Oa=null
code la=null
code ba=null
code ya=null
code pa=null
code ea=null
code qa=null
code aa=null
code na=null
code da=null
code fa=null
code Ra=null
code Ta=null
code Ya=null
code Ga=null
code ga=null
code ha=null
code Fa=null
code ka=null
code ja=null
code xa=null
code va=null
code ma=null
code Qa=null
code Wa=null
code Ea=null
code Za=null
code Ua=null
code Ia=null
code Pa=null
code Aa=null
code Da=null
code Ha=null
code Ja=null
code Ka=null
code La=null
code Xa=null
code Ca=null
code Va=null
code Ba=null
code Na=null
code Ma=null
code wn=null
code un=null
code rn=null
code sn=null
code tn=null
code Sn=null
code cn=null
code on=null
code On=null
code ln=null
code bn=null
code yn=null
code pn=null
code en=null
code qn=null
code an=null
code nn=null
code dn=null
code fn=null
code Rn=null
code Tn=null
code Yn=null
code Gn=null
code gn=null
code hn=null
code Fn=null
code kn=null
code jn=null
code xn=null
code vn=null
code mn=null
code Qn=null
code Wn=null
code En=null
code Zn=null
code Un=null
code In=null
code Pn=null
code An=null
code Dn=null
code Hn=null
code Jn=null
code Kn=null
code Ln=null
code Xn=null
code Cn=null
code Vn=null
code Bn=null
code Nn=null
code Mn=null
code wd=null
code ud=null
code rd=null
code sd=null
code td=null
code id=null
code Sd=null
code cd=null
code od=null
code Od=null
code ld=null
code bd=null
code yd=null
code pd=null
code ed=null
code qd=null
code ad=null
code nd=null
code dd=null
code fd=null
code Rd=null
code Td=null
code Yd=null
code Gd=null
code gd=null
code hd=null
code Fd=null
code kd=null
code jd=null
code xd=null
code vd=null
code md=null
code Qd=null
code Wd=null
code Ed=null
code Zd=null
code Ud=null
code Id=null
code Pd=null
code Ad=null
code Dd=null
code Hd=null
code Jd=null
code Kd=null
code Ld=null
code Xd=null
code Cd=null
code Vd=null
code Bd=null
code Nd=null
code Md=null
code wf=null
code uf=null
code rf=null
code sf=null
code tf=null
code Sf=null
code cf=null
code of=null
code Of=null
code lf=null
code bf=null
code yf=null
code pf=null
code ef=null
code qf=null
code af=null
code nf=null
code df=null
code ff=null
code Rf=null
code Tf=null
code Yf=null
code Gf=null
code gf=null
code hf=null
code Ff=null
code kf=null
code jf=null
code xf=null
code vf=null
code mf=null
code Qf=null
code Wf=null
code Ef=null
code Zf=null
code Uf=null
code If=null
code Pf=null
code Af=null
code Df=null
code Hf=null
code Jf=null
code Kf=null
code Lf=null
code Xf=null
code Cf=null
code Vf=null
code Bf=null
code Nf=null
code Mf=null
code wR=null
code uR=null
code rR=null
code sR=null
code tR=null
code iR=null
code SR=null
code cR=null
code oR=null
unit OR=null
multiboard lR=null
timer bR=null
unit yR=null
trigger pR=null
rect eR=null
endglobals
function ET takes nothing returns nothing
local player WT=Player(PLAYER_NEUTRAL_AGGRESSIVE)
call CreateUnit(WT,1747989297,-1600.0,-128.0,270.000)
call CreateUnit(WT,1747989297,-15040.0,10816.0,270.000)
call CreateUnit(WT,1747989297,-256.0,-2432.0,270.000)
call CreateUnit(WT,1747989297,-24320.0,3904.0,270.000)
call CreateUnit(WT,1747989297,-23552.0,-4544.0,270.000)
call CreateUnit(WT,1747989297,-23360.0,-64.0,270.000)
call CreateUnit(WT,1747989297,2176.0,-7744.0,270.000)
call CreateUnit(WT,1747989297,-6336.0,8000.0,270.000)
call CreateUnit(WT,1747989297,832.0,-5568.0,270.000)
call CreateUnit(WT,1747989297,-3648.0,1856.0,270.000)
call CreateUnit(WT,1747989042,-768.0,24384.0,270.000)
call CreateUnit(WT,1747989297,-26304.0,-8704.0,270.000)
call CreateUnit(WT,1747989297,2688.0,-3008.0,270.000)
call CreateUnit(WT,1747989297,-5568.0,-2752.0,270.000)
call CreateUnit(WT,1747989297,-3456.0,-2880.0,270.000)
call CreateUnit(WT,1747989297,-6464.0,1280.0,270.000)
call CreateUnit(WT,1747989297,-8064.0,3200.0,270.000)
call CreateUnit(WT,1747989297,-8768.0,1984.0,270.000)
call CreateUnit(WT,1747989297,-7104.0,-768.0,270.000)
call CreateUnit(WT,1747989297,-28544.0,0.0,270.000)
call CreateUnit(WT,1747989297,-27840.0,-2752.0,270.000)
call CreateUnit(WT,1747989297,-27008.0,2688.0,270.000)
call CreateUnit(WT,1747989297,-17024.0,512.0,270.000)
call CreateUnit(WT,1747989297,-21696.0,-4224.0,270.000)
call CreateUnit(WT,1747989042,17536.0,-9024.0,270.000)
call CreateUnit(WT,1747989297,10816.0,-7360.0,270.000)
call CreateUnit(WT,1747989297,12800.0,-6912.0,270.000)
call CreateUnit(WT,1747989297,15488.0,-7552.0,270.000)
call CreateUnit(WT,1747989297,19072.0,-7424.0,270.000)
call CreateUnit(WT,1747989297,15360.0,-5568.0,270.000)
call CreateUnit(WT,1747989297,17216.0,-8640.0,270.000)
call CreateUnit(WT,1747989297,16960.0,-16192.0,270.000)
call CreateUnit(WT,1747989297,6976.0,-6592.0,270.000)
call CreateUnit(WT,1747989297,24000.0,256.0,270.000)
call CreateUnit(WT,1747989297,-10688.0,-384.0,270.000)
call CreateUnit(WT,1747989297,13952.0,-11008.0,270.000)
call CreateUnit(WT,1747989297,-10944.0,-4608.0,270.000)
call CreateUnit(WT,1747989297,-21440.0,-8384.0,270.000)
call CreateUnit(WT,1747989297,17472.0,9472.0,270.000)
call CreateUnit(WT,1747989297,-16768.0,-8064.0,270.000)
call CreateUnit(WT,1747989297,-9920.0,-11264.0,270.000)
call CreateUnit(WT,1747989297,-7488.0,-16256.0,270.000)
call CreateUnit(WT,1747989297,448.0,-17600.0,270.000)
call CreateUnit(WT,1747989297,11008.0,-18496.0,270.000)
call CreateUnit(WT,1747989297,13248.0,-17856.0,270.000)
call CreateUnit(WT,1747989297,12288.0,-20864.0,270.000)
call CreateUnit(WT,1747989297,-11456.0,11008.0,270.000)
call CreateUnit(WT,1747989297,-8640.0,7104.0,270.000)
call CreateUnit(WT,1747989297,-7360.0,17088.0,270.000)
call CreateUnit(WT,1747989297,-5120.0,14528.0,270.000)
call CreateUnit(WT,1747989297,15488.0,-26816.0,270.000)
call CreateUnit(WT,1747989297,-9600.0,13120.0,270.000)
call CreateUnit(WT,1747989297,-11456.0,14528.0,270.000)
call CreateUnit(WT,1747989297,-12544.0,16320.0,270.000)
call CreateUnit(WT,1747989297,-7680.0,22272.0,270.000)
call CreateUnit(WT,1747989297,-6272.0,21376.0,270.000)
call CreateUnit(WT,1747989297,-4992.0,21888.0,270.000)
call CreateUnit(WT,1747989297,-1280.0,23936.0,270.000)
call CreateUnit(WT,1747989297,-3328.0,23232.0,270.000)
call CreateUnit(WT,1747989297,-2560.0,26368.0,270.000)
call CreateUnit(WT,1747989297,-6528.0,28288.0,270.000)
call CreateUnit(WT,1747989297,-9856.0,28416.0,270.000)
call CreateUnit(WT,1747989297,-13376.0,15104.0,270.000)
call CreateUnit(WT,1747989297,-10688.0,3520.0,270.000)
call CreateUnit(WT,1747989297,-9856.0,5440.0,270.000)
call CreateUnit(WT,1747989297,-6720.0,4096.0,270.000)
call CreateUnit(WT,1747989297,-13632.0,2368.0,270.000)
call CreateUnit(WT,1747989297,-10496.0,17728.0,270.000)
call CreateUnit(WT,1747989297,-7616.0,11200.0,270.000)
call CreateUnit(WT,1747989297,-18688.0,5760.0,270.000)
call CreateUnit(WT,1747989297,-25024.0,-3008.0,270.000)
call CreateUnit(WT,1747989297,-20096.0,1408.0,270.000)
call CreateUnit(WT,1747989297,-7040.0,-7808.0,270.000)
call CreateUnit(WT,1747989297,-5376.0,-9216.0,270.000)
call CreateUnit(WT,1747989297,24896.0,-27456.0,270.000)
call CreateUnit(WT,1747989297,-20352.0,12224.0,270.000)
call CreateUnit(WT,1747989297,-13568.0,5184.0,270.000)
call CreateUnit(WT,1747989297,-5120.0,24576.0,270.000)
call CreateUnit(WT,1747989297,-1856.0,27776.0,270.000)
call CreateUnit(WT,1747989297,-16704.0,24192.0,270.000)
call CreateUnit(WT,1747989297,-15936.0,17088.0,270.000)
call CreateUnit(WT,1747989297,-17792.0,16064.0,270.000)
call CreateUnit(WT,1747989297,-20224.0,21632.0,270.000)
call CreateUnit(WT,1747989297,-22400.0,19968.0,270.000)
call CreateUnit(WT,1747989297,-15872.0,20544.0,270.000)
call CreateUnit(WT,1747989297,-19776.0,16512.0,270.000)
call CreateUnit(WT,1747989297,-17088.0,12672.0,270.000)
call CreateUnit(WT,1747989297,-18560.0,19712.0,270.000)
call CreateUnit(WT,1747989297,-15680.0,26112.0,270.000)
call CreateUnit(WT,1747989297,-17088.0,26816.0,270.000)
call CreateUnit(WT,1747989297,-16704.0,3584.0,270.000)
call CreateUnit(WT,1747989297,-11456.0,7232.0,270.000)
call CreateUnit(WT,1747989297,-18176.0,10816.0,270.000)
call CreateUnit(WT,1747989297,-16000.0,6016.0,270.000)
call CreateUnit(WT,1747989297,-8896.0,26688.0,270.000)
call CreateUnit(WT,1747989297,9216.0,-4416.0,270.000)
call CreateUnit(WT,1747989297,6656.0,-4480.0,270.000)
call CreateUnit(WT,1747989297,5184.0,-1856.0,270.000)
call CreateUnit(WT,1747989297,18624.0,-448.0,270.000)
call CreateUnit(WT,1747989297,11008.0,-1984.0,270.000)
call CreateUnit(WT,1747989297,14144.0,-128.0,270.000)
call CreateUnit(WT,1747989297,8384.0,-10368.0,270.000)
call CreateUnit(WT,1747989297,5376.0,-12224.0,270.000)
call CreateUnit(WT,1747989297,3392.0,-7296.0,270.000)
call CreateUnit(WT,1747989297,12672.0,-3904.0,270.000)
call CreateUnit(WT,1747989297,27008.0,-11520.0,270.000)
call CreateUnit(WT,1747989297,-25216.0,1472.0,270.000)
call CreateUnit(WT,1747989297,23552.0,11072.0,270.000)
call CreateUnit(WT,1747989297,-20736.0,-2112.0,270.000)
call CreateUnit(WT,1747989297,-22592.0,2560.0,270.000)
call CreateUnit(WT,1747989297,-20864.0,3136.0,270.000)
call CreateUnit(WT,1747989297,-17280.0,-3136.0,270.000)
call CreateUnit(WT,1747989297,-3584.0,4608.0,270.000)
call CreateUnit(WT,1747989297,1536.0,29440.0,270.000)
call CreateUnit(WT,1747989297,-23104.0,-8832.0,270.000)
call CreateUnit(WT,1747989297,1216.0,-960.0,270.000)
call CreateUnit(WT,1747989297,-13312.0,-8512.0,270.000)
call CreateUnit(WT,1747989297,26240.0,-2688.0,270.000)
call CreateUnit(WT,1747989043,-7872.0,17536.0,270.000)
call CreateUnit(WT,1747989297,-13568.0,12160.0,270.000)
call CreateUnit(WT,1747989297,-13696.0,8064.0,270.000)
call CreateUnit(WT,1747989297,27648.0,-5824.0,270.000)
call CreateUnit(WT,1747989297,-4544.0,11648.0,270.000)
call CreateUnit(WT,1747989297,28992.0,-3200.0,270.000)
call CreateUnit(WT,1747989297,-3072.0,8320.0,270.000)
call CreateUnit(WT,1747989297,-384.0,8512.0,270.000)
call CreateUnit(WT,1747989297,28224.0,2752.0,270.000)
call CreateUnit(WT,1747989297,-4992.0,17280.0,270.000)
call CreateUnit(WT,1747989297,64.0,12608.0,270.000)
call CreateUnit(WT,1747989297,-2112.0,13696.0,270.000)
call CreateUnit(WT,1747989297,4160.0,5376.0,270.000)
call CreateUnit(WT,1747989297,4224.0,3904.0,270.000)
call CreateUnit(WT,1747989297,7232.0,2240.0,270.000)
call CreateUnit(WT,1747989297,-384.0,3072.0,270.000)
call CreateUnit(WT,1747989297,-8128.0,19968.0,270.000)
call CreateUnit(WT,1747989297,3072.0,192.0,270.000)
call CreateUnit(WT,1747989297,832.0,15872.0,270.000)
call CreateUnit(WT,1747989297,-2304.0,16064.0,270.000)
call CreateUnit(WT,1747989297,4416.0,19648.0,270.000)
call CreateUnit(WT,1747989297,1792.0,6976.0,270.000)
call CreateUnit(WT,1747989297,5888.0,24960.0,270.000)
call CreateUnit(WT,1747989297,-1792.0,19200.0,270.000)
call CreateUnit(WT,1747989297,3008.0,22784.0,270.000)
call CreateUnit(WT,1747989297,3200.0,18240.0,270.000)
call CreateUnit(WT,1747989297,-3712.0,-6528.0,270.000)
call CreateUnit(WT,1747989297,-17216.0,22208.0,270.000)
call CreateUnit(WT,1747989297,-18880.0,17920.0,270.000)
call CreateUnit(WT,1747989297,-17280.0,18304.0,270.000)
call CreateUnit(WT,1747989297,-22272.0,22400.0,270.000)
call CreateUnit(WT,1747989297,-10496.0,-9152.0,270.000)
call CreateUnit(WT,1747989297,13248.0,5120.0,270.000)
call CreateUnit(WT,1747989297,7936.0,-2368.0,270.000)
call CreateUnit(WT,1747989297,3520.0,27008.0,270.000)
call CreateUnit(WT,1747989297,8832.0,26368.0,270.000)
call CreateUnit(WT,1747989297,6848.0,21440.0,270.000)
call CreateUnit(WT,1747989297,6144.0,18560.0,270.000)
call CreateUnit(WT,1747989297,3904.0,11072.0,270.000)
call CreateUnit(WT,1747989297,8512.0,12352.0,270.000)
call CreateUnit(WT,1747989297,9280.0,20032.0,270.000)
call CreateUnit(WT,1747989297,1216.0,11008.0,270.000)
call CreateUnit(WT,1747989044,-15680.0,11200.0,270.000)
call CreateUnit(WT,1747989044,-15104.0,17408.0,270.000)
call CreateUnit(WT,1747989045,-1728.0,28608.0,270.000)
call CreateUnit(WT,1747989043,-18304.0,18112.0,270.000)
call CreateUnit(WT,1747989044,-9600.0,13888.0,270.000)
call CreateUnit(WT,1747989297,384.0,19456.0,270.000)
call CreateUnit(WT,1747989044,4864.0,5952.0,270.000)
call CreateUnit(WT,1747989044,8000.0,-1664.0,270.000)
call CreateUnit(WT,1747989044,9280.0,-3008.0,270.000)
call CreateUnit(WT,1747989045,-21056.0,21056.0,270.000)
call CreateUnit(WT,1747989045,-19648.0,12224.0,270.000)
call CreateUnit(WT,1747989045,17984.0,-13120.0,270.000)
call CreateUnit(WT,1747989042,-28544.0,704.0,270.000)
call CreateUnit(WT,1747989045,-9344.0,7168.0,270.000)
call CreateUnit(WT,1747989043,-6336.0,8576.0,270.000)
call CreateUnit(WT,1747989045,-15616.0,21248.0,270.000)
call CreateUnit(WT,1747989045,-16640.0,1024.0,270.000)
call CreateUnit(WT,1747989045,13760.0,-11584.0,270.000)
call CreateUnit(WT,1747989042,-11328.0,3712.0,270.000)
call CreateUnit(WT,1747989042,-16768.0,25920.0,270.000)
call CreateUnit(WT,1747989045,-19200.0,28352.0,270.000)
call CreateUnit(WT,1747989043,3456.0,11584.0,270.000)
call CreateUnit(WT,1747989044,-24640.0,4352.0,270.000)
call CreateUnit(WT,1747989044,-23232.0,-5120.0,270.000)
call CreateUnit(WT,1747989042,-23424.0,768.0,270.000)
call CreateUnit(WT,1747989045,-15936.0,-2688.0,270.000)
call CreateUnit(WT,1747989045,-10752.0,-3456.0,270.000)
call CreateUnit(WT,1747989044,-7552.0,4416.0,270.000)
call CreateUnit(WT,1747989045,-20160.0,-1600.0,270.000)
call CreateUnit(WT,1747989045,-21824.0,2560.0,270.000)
call CreateUnit(WT,1747989045,11392.0,-7104.0,270.000)
call CreateUnit(WT,1747989042,4352.0,20224.0,270.000)
call CreateUnit(WT,1747989044,-15360.0,4992.0,270.000)
call CreateUnit(WT,1747989042,-896.0,3392.0,270.000)
call CreateUnit(WT,1747989045,-6528.0,-832.0,270.000)
call CreateUnit(WT,1747989043,-4928.0,-3264.0,270.000)
call CreateUnit(WT,1747989042,-6144.0,-8192.0,270.000)
call CreateUnit(WT,1747989043,23424.0,640.0,270.000)
call CreateUnit(WT,1747989043,-6976.0,1344.0,270.000)
call CreateUnit(WT,1747989043,4352.0,128.0,270.000)
call CreateUnit(WT,1747989297,17472.0,19648.0,270.000)
call CreateUnit(WT,1747989044,-7872.0,22784.0,270.000)
call CreateUnit(WT,1747989297,20864.0,21504.0,270.000)
call CreateUnit(WT,1747989044,-9152.0,28480.0,270.000)
call CreateUnit(WT,1747989042,-27712.0,-9536.0,270.000)
call CreateUnit(WT,1747989042,4800.0,-12480.0,270.000)
call CreateUnit(WT,1747989045,7232.0,-11328.0,270.000)
call CreateUnit(WT,1747989045,1792.0,-8064.0,270.000)
call CreateUnit(WT,1747989297,-1600.0,5952.0,270.000)
call CreateUnit(WT,1747989043,-128.0,-1792.0,270.000)
call CreateUnit(WT,1747989042,-3392.0,8640.0,270.000)
call CreateUnit(WT,1747989044,-1856.0,16576.0,270.000)
call CreateUnit(WT,1747989043,-13888.0,14784.0,270.000)
call CreateUnit(WT,1747989297,-29568.0,-9792.0,270.000)
call CreateUnit(WT,1747989043,-9088.0,26240.0,270.000)
call CreateUnit(WT,1747989045,-5440.0,23808.0,270.000)
call CreateUnit(WT,1747989045,2176.0,30080.0,270.000)
call CreateUnit(WT,1747989043,1984.0,6464.0,270.000)
call CreateUnit(WT,1747989297,-26304.0,-1408.0,270.000)
call CreateUnit(WT,1747989043,448.0,13056.0,270.000)
call CreateUnit(WT,1747989045,3072.0,26752.0,270.000)
call CreateUnit(WT,1747989043,6656.0,18880.0,270.000)
call CreateUnit(WT,1747989043,3264.0,-3712.0,270.000)
call CreateUnit(WT,1747989297,15872.0,5760.0,270.000)
call CreateUnit(WT,1747989043,6528.0,22080.0,270.000)
call CreateUnit(WT,1747989044,8896.0,27008.0,270.000)
call CreateUnit(WT,1747989297,18496.0,-17280.0,270.000)
call CreateUnit(WT,1747989297,11392.0,7872.0,270.000)
call CreateUnit(WT,1747989297,12672.0,11328.0,270.000)
call CreateUnit(WT,1747989297,6016.0,12416.0,270.000)
call CreateUnit(WT,1747989297,7104.0,7808.0,270.000)
call CreateUnit(WT,1747989297,20864.0,2688.0,270.000)
call CreateUnit(WT,1747989297,24000.0,2560.0,270.000)
call CreateUnit(WT,1747989297,19648.0,11328.0,270.000)
call CreateUnit(WT,1747989297,11584.0,16960.0,270.000)
call CreateUnit(WT,1747989297,18496.0,-13248.0,270.000)
call CreateUnit(WT,1747989297,17216.0,-11456.0,270.000)
call CreateUnit(WT,1747989297,25088.0,-8320.0,270.000)
call CreateUnit(WT,1747989297,15680.0,-17536.0,270.000)
call CreateUnit(WT,1747989297,16640.0,-14208.0,270.000)
call CreateUnit(WT,1747989297,17280.0,-19584.0,270.000)
call CreateUnit(WT,1747989297,22912.0,-10240.0,270.000)
call CreateUnit(WT,1747989297,20864.0,-23040.0,270.000)
call CreateUnit(WT,1747989044,13120.0,-21696.0,270.000)
call CreateUnit(WT,1747989297,20096.0,-5760.0,270.000)
call CreateUnit(WT,1747989297,18816.0,-3776.0,270.000)
call CreateUnit(WT,1747989042,14464.0,-26432.0,270.000)
call CreateUnit(WT,1747989044,23808.0,-27776.0,270.000)
call CreateUnit(WT,1747989042,11776.0,-18688.0,270.000)
call CreateUnit(WT,1747989043,256.0,-18048.0,270.000)
call CreateUnit(WT,1747989045,-16192.0,-8192.0,270.000)
call CreateUnit(WT,1747989045,-11520.0,-10944.0,270.000)
call CreateUnit(WT,1747989045,16512.0,-19968.0,270.000)
call CreateUnit(WT,1747989045,20416.0,-22272.0,270.000)
call CreateUnit(WT,1747989044,28800.0,-11904.0,270.000)
call CreateUnit(WT,1747989297,15040.0,23104.0,270.000)
call CreateUnit(WT,1747989044,8128.0,12928.0,270.000)
call CreateUnit(WT,1747989044,16896.0,-15744.0,270.000)
call CreateUnit(WT,1747989042,17984.0,-640.0,270.000)
call CreateUnit(WT,1747989045,20608.0,3136.0,270.000)
call CreateUnit(WT,1747989045,7232.0,-5120.0,270.000)
call CreateUnit(WT,1747989045,25984.0,-8128.0,270.000)
call CreateUnit(WT,1747989045,20544.0,-5440.0,270.000)
call CreateUnit(WT,1747989045,11968.0,17856.0,270.000)
call CreateUnit(WT,1747989045,10048.0,20032.0,270.000)
call CreateUnit(WT,1747989043,15296.0,-7232.0,270.000)
call CreateUnit(WT,1747989043,13056.0,11776.0,270.000)
call CreateUnit(WT,1747989043,15744.0,23488.0,270.000)
call CreateUnit(WT,1747989043,17984.0,9280.0,270.000)
set WT=null
endfunction
function FR takes nothing returns nothing
local player gR=Player(2)
local unit hR=CreateUnit(gR,1211118391,-30324.4,30466.1,270.380)
call SetHeroLevel(hR,15,false)
call SetUnitState(hR,UNIT_STATE_MANA,85.)
set hR=CreateUnit(gR,1211118406,-30346.6,29573.7,270.406)
call SetHeroLevel(hR,15,false)
set gR=null
set hR=null
endfunction
function FT takes nothing returns nothing
local player gT=Player(19)
local unit hT=CreateUnit(gT,1211118391,-29820.0,29950.4,269.903)
call SetHeroLevel(hT,15,false)
call SetUnitState(hT,UNIT_STATE_MANA,85.)
set hT=CreateUnit(gT,1211118406,-29707.1,29309.8,269.793)
call SetHeroLevel(hT,15,false)
set gT=null
set hT=null
endfunction
function GR takes nothing returns nothing
local player TR=Player(1)
local unit YR=CreateUnit(TR,1211118391,-30205.9,30601.1,270.267)
call SetHeroLevel(YR,15,false)
call SetUnitState(YR,UNIT_STATE_MANA,85.)
set YR=CreateUnit(TR,1211118406,-30199.1,29448.7,270.266)
call SetHeroLevel(YR,15,false)
set TR=null
set YR=null
endfunction
function GT takes nothing returns nothing
local player TT=Player(18)
local unit YT=CreateUnit(TT,1211118391,-29691.7,30077.9,269.782)
call SetHeroLevel(YT,15,false)
call SetUnitState(YT,UNIT_STATE_MANA,85.)
set YT=CreateUnit(TT,1211118406,-29792.0,29571.7,269.875)
call SetHeroLevel(YT,15,false)
set TT=null
set YT=null
endfunction
function HR takes nothing returns nothing
local player AR=Player(7)
local unit DR=CreateUnit(AR,1211118391,-29818.2,30468.8,269.903)
call SetHeroLevel(DR,15,false)
call SetUnitState(DR,UNIT_STATE_MANA,85.)
set DR=CreateUnit(AR,1211118406,-29998.9,29444.3,270.074)
call SetHeroLevel(DR,15,false)
set AR=null
set DR=null
endfunction
function LR takes nothing returns nothing
local player JR=Player(8)
local unit KR=CreateUnit(JR,1211118391,-29946.0,30342.9,270.023)
call SetHeroLevel(KR,15,false)
call SetUnitState(KR,UNIT_STATE_MANA,85.)
set KR=CreateUnit(JR,1211118406,-30137.9,29561.1,270.206)
call SetHeroLevel(KR,15,false)
set JR=null
set KR=null
endfunction
function MR takes nothing returns nothing
local player BR=Player(10)
local unit NR=CreateUnit(BR,1211118391,-30338.2,30210.1,270.394)
call SetHeroLevel(NR,15,false)
call SetUnitState(NR,UNIT_STATE_MANA,85.)
set NR=CreateUnit(BR,1211118406,-29904.6,29442.8,269.983)
call SetHeroLevel(NR,15,false)
set BR=null
set NR=null
endfunction
function PR takes nothing returns nothing
local player UR=Player(6)
local unit IR=CreateUnit(UR,1211118391,-29693.7,30597.0,269.786)
call SetHeroLevel(IR,15,false)
call SetUnitState(IR,UNIT_STATE_MANA,85.)
set IR=CreateUnit(UR,1211118406,-30199.8,29310.0,270.267)
call SetHeroLevel(IR,15,false)
set UR=null
set IR=null
endfunction
function QR takes nothing returns nothing
local player vR=Player(4)
local unit mR=CreateUnit(vR,1211118391,-30204.6,30339.2,270.267)
call SetHeroLevel(mR,15,false)
call SetUnitState(mR,UNIT_STATE_MANA,85.)
set mR=CreateUnit(vR,1211118406,-30106.5,29439.8,270.177)
call SetHeroLevel(mR,15,false)
set vR=null
set mR=null
endfunction
function QT takes nothing returns nothing
local player vT=Player(23)
local unit mT=CreateUnit(vT,1211118391,-29689.5,29824.6,269.779)
call SetHeroLevel(mT,15,false)
call SetUnitState(mT,UNIT_STATE_MANA,85.)
set mT=CreateUnit(vT,1211118406,-29815.4,29434.4,269.898)
call SetHeroLevel(mT,15,false)
set vT=null
set mT=null
endfunction
function RR takes nothing returns nothing
local player dR=Player(0)
local unit fR=CreateUnit(dR,1211118391,-30470.9,30602.5,270.516)
call SetHeroLevel(fR,15,false)
call SetUnitState(fR,UNIT_STATE_MANA,85.)
set fR=CreateUnit(dR,1211118406,-30360.2,29312.6,270.421)
call SetHeroLevel(fR,15,false)
set dR=null
set fR=null
endfunction
function RT takes nothing returns nothing
local player dT=Player(17)
local unit fT=CreateUnit(dT,1211118391,-29951.6,30084.7,270.028)
call SetHeroLevel(fT,15,false)
call SetUnitState(fT,UNIT_STATE_MANA,85.)
set fT=CreateUnit(dT,1211118406,-29862.1,29302.2,269.942)
call SetHeroLevel(fT,15,false)
set dT=null
set fT=null
endfunction
function VR takes nothing returns nothing
local player XR=Player(9)
local unit CR=CreateUnit(XR,1211118391,-29693.5,30338.3,269.785)
call SetHeroLevel(CR,15,false)
call SetUnitState(CR,UNIT_STATE_MANA,85.)
set CR=CreateUnit(XR,1211118406,-30045.2,29554.8,270.118)
call SetHeroLevel(CR,15,false)
set XR=null
set CR=null
endfunction
function ZR takes nothing returns nothing
local player WR=Player(5)
local unit ER=CreateUnit(WR,1211118391,-29950.2,30589.5,270.027)
call SetHeroLevel(ER,15,false)
call SetUnitState(ER,UNIT_STATE_MANA,85.)
set ER=CreateUnit(WR,1211118406,-30283.9,29308.8,270.348)
call SetHeroLevel(ER,15,false)
set WR=null
set ER=null
endfunction
function bT takes nothing returns nothing
local player OT=Player(14)
local unit lT=CreateUnit(OT,1211118391,-30339.8,29950.4,270.397)
call SetHeroLevel(lT,15,false)
call SetUnitState(lT,UNIT_STATE_MANA,85.)
set lT=CreateUnit(OT,1211118406,-29968.7,29556.2,270.045)
call SetHeroLevel(lT,15,false)
set OT=null
set lT=null
endfunction
function eT takes nothing returns nothing
local player yT=Player(15)
local unit pT=CreateUnit(yT,1211118391,-30467.2,29834.7,270.519)
call SetHeroLevel(pT,15,false)
call SetUnitState(pT,UNIT_STATE_MANA,85.)
set pT=CreateUnit(yT,1211118406,-29874.4,29559.4,269.954)
call SetHeroLevel(pT,15,false)
set yT=null
set pT=null
endfunction
function iT takes nothing returns nothing
local player sT=Player(12)
local unit tT=CreateUnit(sT,1211118391,-30464.7,30089.7,270.515)
call SetHeroLevel(tT,15,false)
call SetUnitState(tT,UNIT_STATE_MANA,85.)
set tT=CreateUnit(sT,1211118406,-29962.2,29311.8,270.038)
call SetHeroLevel(tT,15,false)
set sT=null
set tT=null
endfunction
function nT takes nothing returns nothing
local player qT=Player(16)
local unit aT=CreateUnit(qT,1211118391,-30203.1,29826.8,270.268)
call SetHeroLevel(aT,15,false)
call SetUnitState(aT,UNIT_STATE_MANA,85.)
set aT=CreateUnit(qT,1211118406,-29780.4,29300.3,269.864)
call SetHeroLevel(aT,15,false)
set qT=null
set aT=null
endfunction
function oT takes nothing returns nothing
local player ST=Player(13)
local unit cT=CreateUnit(ST,1211118391,-30204.3,30080.3,270.268)
call SetHeroLevel(cT,15,false)
call SetUnitState(cT,UNIT_STATE_MANA,85.)
set cT=CreateUnit(ST,1211118406,-30039.0,29306.5,270.112)
call SetHeroLevel(cT,15,false)
set ST=null
set cT=null
endfunction
function rT takes nothing returns nothing
local player wT=Player(11)
local unit uT=CreateUnit(wT,1211118391,-29827.0,30210.1,269.911)
call SetHeroLevel(uT,15,false)
call SetUnitState(uT,UNIT_STATE_MANA,85.)
set uT=CreateUnit(wT,1211118406,-30125.9,29321.4,270.196)
call SetHeroLevel(uT,15,false)
set wT=null
set uT=null
endfunction
function xR takes nothing returns nothing
local player kR=Player(3)
local unit jR=CreateUnit(kR,1211118391,-30468.2,30345.3,270.516)
call SetHeroLevel(jR,15,false)
call SetUnitState(jR,UNIT_STATE_MANA,85.)
set jR=CreateUnit(kR,1211118406,-30252.3,29576.9,270.316)
call SetHeroLevel(jR,15,false)
set kR=null
set jR=null
endfunction
function xT takes nothing returns nothing
local player kT=Player(22)
local unit jT=CreateUnit(kT,1211118391,-29948.2,29831.1,270.025)
call SetHeroLevel(jT,15,false)
call SetUnitState(jT,UNIT_STATE_MANA,85.)
set jT=CreateUnit(kT,1211118406,-29699.3,29565.4,269.787)
call SetHeroLevel(jT,15,false)
set kT=null
set jT=null
endfunction
function ZT takes nothing returns nothing
call RR()
call GR()
call FR()
call xR()
call QR()
call ZR()
call PR()
call HR()
call LR()
call VR()
call MR()
call rT()
call iT()
call oT()
call bT()
call eT()
call nT()
call RT()
call GT()
call FT()
call xT()
call QT()
endfunction
function AP takes nothing returns nothing
local trigger UP
local playerunitevent IP
local integer PP
set oi=CreateTrigger()
set UP=oi
set IP=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set PP=0
loop
call TriggerRegisterPlayerUnitEvent(UP,Player(PP),IP,null)
set PP=PP+1
exitwhen PP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(oi,Condition(Cq))
call TriggerAddAction(oi,Vq)
set UP=null
set IP=null
endfunction
function BI takes nothing returns nothing
local trigger XI
local playerunitevent CI
local integer VI
set ri=CreateTrigger()
set XI=ri
set CI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set VI=0
loop
call TriggerRegisterPlayerUnitEvent(XI,Player(VI),CI,null)
set VI=VI+1
exitwhen VI==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ri,Condition(Eq))
call TriggerAddAction(ri,Zq)
set XI=null
set CI=null
endfunction
function BX takes nothing returns nothing
local trigger XX
local playerunitevent CX
local integer VX
set iS=CreateTrigger()
set XX=iS
set CX=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set VX=0
loop
call TriggerRegisterPlayerUnitEvent(XX,Player(VX),CX,null)
set VX=VX+1
exitwhen VX==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(iS,Condition(Jn))
call TriggerAddAction(iS,Kn)
set XX=null
set CX=null
endfunction
function CP takes nothing returns nothing
local trigger KP
local playerunitevent LP
local integer XP
set Oi=CreateTrigger()
set KP=Oi
set LP=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set XP=0
loop
call TriggerRegisterPlayerUnitEvent(KP,Player(XP),LP,null)
set XP=XP+1
exitwhen XP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Oi,Condition(Bq))
call TriggerAddAction(Oi,Nq)
set KP=null
set LP=null
endfunction
function Ck takes nothing returns nothing
local trigger Kk
local playerunitevent Lk
local integer Xk
set Xs=CreateTrigger()
set Kk=Xs
set Lk=EVENT_PLAYER_UNIT_SPELL_CAST
set Xk=0
loop
call TriggerRegisterPlayerUnitEvent(Kk,Player(Xk),Lk,null)
set Xk=Xk+1
exitwhen Xk==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Xs,Condition(Yp))
call TriggerAddAction(Xs,Gp)
set Kk=null
set Lk=null
endfunction
function DA takes nothing returns nothing
local trigger IA
local playerunitevent PA
local integer AA
set ai=CreateTrigger()
set IA=ai
set PA=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set AA=0
loop
call TriggerRegisterPlayerUnitEvent(IA,Player(AA),PA,null)
set AA=AA+1
exitwhen AA==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ai,Condition(ba))
call TriggerAddAction(ai,ya)
set IA=null
set PA=null
endfunction
function DU takes nothing returns nothing
local trigger IU
local playerunitevent PU
local integer AU
set Lt=CreateTrigger()
set IU=Lt
set PU=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set AU=0
loop
call TriggerRegisterPlayerUnitEvent(IU,Player(AU),PU,null)
set AU=AU+1
exitwhen AU==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Lt,Condition(aq))
call TriggerAddAction(Lt,nq)
set IU=null
set PU=null
endfunction
function Dm takes nothing returns nothing
local trigger Im
local playerunitevent Pm
local integer Am
set ct=CreateTrigger()
set Im=ct
set Pm=EVENT_PLAYER_UNIT_DEATH
set Am=0
loop
call TriggerRegisterPlayerUnitEvent(Im,Player(Am),Pm,null)
set Am=Am+1
exitwhen Am==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ct,Condition(Lp))
call TriggerAddAction(ct,Xp)
set Im=null
set Pm=null
endfunction
function EE takes nothing returns nothing
local trigger mE
local playerunitevent QE
local integer WE
set jt=CreateTrigger()
set mE=jt
set QE=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set WE=0
loop
call TriggerRegisterPlayerUnitEvent(mE,Player(WE),QE,null)
set WE=WE+1
exitwhen WE==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(jt,Condition(Ze))
call TriggerAddAction(jt,Ue)
set mE=null
set QE=null
endfunction
function EI takes nothing returns nothing
local trigger mI
local playerunitevent QI
local integer WI
set wi=CreateTrigger()
set mI=wi
set QI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set WI=0
loop
call TriggerRegisterPlayerUnitEvent(mI,Player(WI),QI,null)
set WI=WI+1
exitwhen WI==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(wi,Condition(vq))
call TriggerAddAction(wi,mq)
set mI=null
set QI=null
endfunction
function EX takes nothing returns nothing
local trigger mX
local playerunitevent QX
local integer WX
set sS=CreateTrigger()
set mX=sS
set QX=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set WX=0
loop
call TriggerRegisterPlayerUnitEvent(mX,Player(WX),QX,null)
set WX=WX+1
exitwhen WX==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(sS,Condition(Pn))
call TriggerAddAction(sS,An)
set mX=null
set QX=null
endfunction
function FA takes nothing returns nothing
local trigger GA
local playerunitevent gA
local integer hA
set ei=CreateTrigger()
set GA=ei
set gA=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set hA=0
loop
call TriggerRegisterPlayerUnitEvent(GA,Player(hA),gA,null)
set hA=hA+1
exitwhen hA==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ei,Condition(ca))
call TriggerAddAction(ei,oa)
set GA=null
set gA=null
endfunction
function FG takes nothing returns nothing
local trigger GG
local playerunitevent gG
local integer hG
set xs=CreateTrigger()
set GG=xs
set gG=EVENT_PLAYER_UNIT_ATTACKED
set hG=0
loop
call TriggerRegisterPlayerUnitEvent(GG,Player(hG),gG,null)
set hG=hG+1
exitwhen hG==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(xs,Condition(Zy))
call TriggerAddAction(xs,Uy)
set GG=null
set gG=null
endfunction
function FU takes nothing returns nothing
local trigger GU
local playerunitevent gU
local integer hU
set Jt=CreateTrigger()
set GU=Jt
set gU=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set hU=0
loop
call TriggerRegisterPlayerUnitEvent(GU,Player(hU),gU,null)
set hU=hU+1
exitwhen hU==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Jt,Condition(yq))
call TriggerAddAction(Jt,pq)
set GU=null
set gU=null
endfunction
function Gm takes nothing returns nothing
local trigger Rm
local playerunitevent Tm
local integer Ym
set St=CreateTrigger()
set Rm=St
set Tm=EVENT_PLAYER_UNIT_DEATH
set Ym=0
loop
call TriggerRegisterPlayerUnitEvent(Rm,Player(Ym),Tm,null)
set Ym=Ym+1
exitwhen Ym==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(St,Condition(Jp))
call TriggerAddAction(St,Kp)
set Rm=null
set Tm=null
endfunction
function HE takes nothing returns nothing
local trigger PE
local playerunitevent AE
local integer DE
set xt=CreateTrigger()
set PE=xt
set AE=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set DE=0
loop
call TriggerRegisterPlayerUnitEvent(PE,Player(DE),AE,null)
set DE=DE+1
exitwhen DE==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(xt,Condition(Ie))
call TriggerAddAction(xt,Pe)
set PE=null
set AE=null
endfunction
function HI takes nothing returns nothing
local trigger PI
local playerunitevent AI
local integer DI
set ui=CreateTrigger()
set PI=ui
set AI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set DI=0
loop
call TriggerRegisterPlayerUnitEvent(PI,Player(DI),AI,null)
set DI=DI+1
exitwhen DI==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ui,Condition(Qq))
call TriggerAddAction(ui,Wq)
set PI=null
set AI=null
endfunction
function HT takes nothing returns nothing
set Rs=CreateTrigger()
call TriggerRegisterTimerEvent(Rs,70.00,false)
call TriggerAddAction(Rs,Ty)
endfunction
function HX takes nothing returns nothing
local trigger PX
local playerunitevent AX
local integer DX
set tS=CreateTrigger()
set PX=tS
set AX=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set DX=0
loop
call TriggerRegisterPlayerUnitEvent(PX,Player(DX),AX,null)
set DX=DX+1
exitwhen DX==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(tS,Condition(Dn))
call TriggerAddAction(tS,Hn)
set PX=null
set AX=null
endfunction
function HY takes nothing returns nothing
local trigger PY
local playerunitevent AY
local integer DY
set Fs=CreateTrigger()
set PY=Fs
set AY=EVENT_PLAYER_UNIT_ATTACKED
set DY=0
loop
call TriggerRegisterPlayerUnitEvent(PY,Player(DY),AY,null)
set DY=DY+1
exitwhen DY==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Fs,Condition(xy))
call TriggerAddAction(Fs,vy)
set PY=null
set AY=null
endfunction
function Iv takes nothing returns nothing
local trigger Ev
local playerunitevent Zv
local integer Uv
set rt=CreateTrigger()
set Ev=rt
set Zv=EVENT_PLAYER_UNIT_SPELL_CAST
set Uv=0
loop
call TriggerRegisterPlayerUnitEvent(Ev,Player(Uv),Zv,null)
set Uv=Uv+1
exitwhen Uv==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(rt,Condition(Pp))
call TriggerAddAction(rt,Ap)
set Ev=null
set Zv=null
endfunction
function JZ takes nothing returns nothing
local trigger AZ
local playerunitevent DZ
local integer HZ
set It=CreateTrigger()
set AZ=It
set DZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set HZ=0
loop
call TriggerRegisterPlayerUnitEvent(AZ,Player(HZ),DZ,null)
set HZ=HZ+1
exitwhen HZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(It,Condition(rq))
call TriggerAddAction(It,sq)
set AZ=null
set DZ=null
endfunction
function KH takes nothing returns nothing
local trigger DH
local playerunitevent HH
local integer JH
set mi=CreateTrigger()
set DH=mi
set HH=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set JH=0
loop
call TriggerRegisterPlayerUnitEvent(DH,Player(JH),HH,null)
set JH=JH+1
exitwhen JH==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(mi,Ka)
set DH=null
set HH=null
endfunction
function KL takes nothing returns nothing
local trigger DL
local playerunitevent HL
local integer JL
set Bi=CreateTrigger()
set DL=Bi
set HL=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set JL=0
loop
call TriggerRegisterPlayerUnitEvent(DL,Player(JL),HL,null)
set JL=JL+1
exitwhen JL==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Bi,Condition(Fn))
call TriggerAddAction(Bi,kn)
set DL=null
set HL=null
endfunction
function KW takes nothing returns nothing
local trigger DW
local playerunitevent HW
local integer JW
set Yt=CreateTrigger()
set DW=Yt
set HW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set JW=0
loop
call TriggerRegisterPlayerUnitEvent(DW,Player(JW),HW,null)
set JW=JW+1
exitwhen JW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Yt,Condition(Ge))
call TriggerAddAction(Yt,ge)
set DW=null
set HW=null
endfunction
function LE takes nothing returns nothing
set vt=CreateTrigger()
call TriggerRegisterTimerEvent(vt,0.10,false)
call TriggerAddAction(vt,De)
endfunction
function LT takes nothing returns nothing
set Ys=CreateTrigger()
call TriggerRegisterTimerEvent(Ys,1.00,false)
call TriggerAddAction(Ys,Yy)
endfunction
function ML takes nothing returns nothing
local trigger VL
local playerunitevent BL
local integer NL
set Ni=CreateTrigger()
set VL=Ni
set BL=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set NL=0
loop
call TriggerRegisterPlayerUnitEvent(VL,Player(NL),BL,null)
set NL=NL+1
exitwhen NL==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ni,Condition(jn))
call TriggerAddAction(Ni,xn)
set VL=null
set BL=null
endfunction
function MU takes nothing returns nothing
set Ct=CreateTrigger()
call TriggerRegisterTimerEvent(Ct,0.10,false)
call TriggerAddAction(Ct,Tq)
endfunction
function MW takes nothing returns nothing
local trigger VW
local playerunitevent BW
local integer NW
set Gt=CreateTrigger()
set VW=Gt
set BW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set NW=0
loop
call TriggerRegisterPlayerUnitEvent(VW,Player(NW),BW,null)
set NW=NW+1
exitwhen NW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Gt,Condition(he))
call TriggerAddAction(Gt,Fe)
set VW=null
set BW=null
endfunction
function NP takes nothing returns nothing
set li=CreateTrigger()
call TriggerRegisterTimerEvent(li,0.10,false)
call TriggerAddAction(li,wa)
endfunction
function NZ takes nothing returns nothing
local trigger CZ
local playerunitevent VZ
local integer BZ
set Pt=CreateTrigger()
set CZ=Pt
set VZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set BZ=0
loop
call TriggerRegisterPlayerUnitEvent(CZ,Player(BZ),VZ,null)
set BZ=BZ+1
exitwhen BZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Pt,Condition(tq))
call TriggerAddAction(Pt,iq)
set CZ=null
set VZ=null
endfunction
function PD takes nothing returns nothing
local trigger ZD
local playerunitevent UD
local integer ID
set Gi=CreateTrigger()
set ZD=Gi
set UD=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set ID=0
loop
call TriggerRegisterPlayerUnitEvent(ZD,Player(ID),UD,null)
set ID=ID+1
exitwhen ID==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Gi,Condition(ha))
call TriggerAddAction(Gi,Fa)
set ZD=null
set UD=null
endfunction
function PG takes nothing returns nothing
local trigger ZG
local playerunitevent UG
local integer IG
set vs=CreateTrigger()
set ZG=vs
set UG=EVENT_PLAYER_UNIT_ATTACKED
set IG=0
loop
call TriggerRegisterPlayerUnitEvent(ZG,Player(IG),UG,null)
set IG=IG+1
exitwhen IG==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(vs,Condition(Iy))
call TriggerAddAction(vs,Py)
set ZG=null
set UG=null
endfunction
function PH takes nothing returns nothing
local trigger ZH
local playerunitevent UH
local integer IH
set vi=CreateTrigger()
set ZH=vi
set UH=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set IH=0
loop
call TriggerRegisterPlayerUnitEvent(ZH,Player(IH),UH,null)
set IH=IH+1
exitwhen IH==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(vi,Condition(Ha))
call TriggerAddAction(vi,Ja)
set ZH=null
set UH=null
endfunction
function PK takes nothing returns nothing
local trigger ZK
local playerunitevent UK
local integer IK
set Di=CreateTrigger()
set ZK=Di
set UK=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set IK=0
loop
call TriggerRegisterPlayerUnitEvent(ZK,Player(IK),UK,null)
set IK=IK+1
exitwhen IK==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Di,Condition(ln))
call TriggerAddAction(Di,bn)
set ZK=null
set UK=null
endfunction
function PQ takes nothing returns nothing
local trigger ZQ
local playerunitevent UQ
local integer IQ
set et=CreateTrigger()
set ZQ=et
set UQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set IQ=0
loop
call TriggerRegisterPlayerUnitEvent(ZQ,Player(IQ),UQ,null)
set IQ=IQ+1
exitwhen IQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(et,Condition(ce))
call TriggerAddAction(et,oe)
set ZQ=null
set UQ=null
endfunction
function QP takes nothing returns nothing
local trigger xP
local playerunitevent vP
local integer mP
set ci=CreateTrigger()
set xP=ci
set vP=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set mP=0
loop
call TriggerRegisterPlayerUnitEvent(xP,Player(mP),vP,null)
set mP=mP+1
exitwhen mP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ci,Condition(Lq))
call TriggerAddAction(ci,Xq)
set xP=null
set vP=null
endfunction
function RE takes nothing returns nothing
local trigger nE
local playerunitevent dE
local integer fE
set Ft=CreateTrigger()
set nE=Ft
set dE=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set fE=0
loop
call TriggerRegisterPlayerUnitEvent(nE,Player(fE),dE,null)
set fE=fE+1
exitwhen fE==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ft,Condition(me))
call TriggerAddAction(Ft,Qe)
set nE=null
set dE=null
endfunction
function RI takes nothing returns nothing
local trigger nI
local playerunitevent dI
local integer fI
set Nt=CreateTrigger()
set nI=Nt
set dI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set fI=0
loop
call TriggerRegisterPlayerUnitEvent(nI,Player(fI),dI,null)
set fI=fI+1
exitwhen fI==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Nt,Condition(Fq))
call TriggerAddAction(Nt,kq)
set nI=null
set dI=null
endfunction
function RJ takes nothing returns nothing
local trigger nJ
local playerunitevent dJ
local integer fJ
set Wi=CreateTrigger()
set nJ=Wi
set dJ=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set fJ=0
loop
call TriggerRegisterPlayerUnitEvent(nJ,Player(fJ),dJ,null)
set fJ=fJ+1
exitwhen fJ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Wi,Condition(Ca))
call TriggerAddAction(Wi,Va)
set nJ=null
set dJ=null
endfunction
function RX takes nothing returns nothing
local trigger nX
local playerunitevent dX
local integer fX
set uS=CreateTrigger()
set nX=uS
set dX=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set fX=0
loop
call TriggerRegisterPlayerUnitEvent(nX,Player(fX),dX,null)
set fX=fX+1
exitwhen fX==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(uS,Condition(En))
call TriggerAddAction(uS,Zn)
set nX=null
set dX=null
endfunction
function SE takes nothing returns nothing
local trigger sE
local playerunitevent tE
local integer iE
set gt=CreateTrigger()
set sE=gt
set tE=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set iE=0
loop
call TriggerRegisterPlayerUnitEvent(sE,Player(iE),tE,null)
set iE=iE+1
exitwhen iE==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(gt,Condition(ke))
call TriggerAddAction(gt,je)
set sE=null
set tE=null
endfunction
function SI takes nothing returns nothing
local trigger sI
local playerunitevent tI
local integer iI
set Vt=CreateTrigger()
set sI=Vt
set tI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set iI=0
loop
call TriggerRegisterPlayerUnitEvent(sI,Player(iI),tI,null)
set iI=iI+1
exitwhen iI==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Vt,Condition(Yq))
call TriggerAddAction(Vt,Gq)
set sI=null
set tI=null
endfunction
function SJ takes nothing returns nothing
local trigger sJ
local playerunitevent tJ
local integer iJ
set Qi=CreateTrigger()
set sJ=Qi
set tJ=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set iJ=0
loop
call TriggerRegisterPlayerUnitEvent(sJ,Player(iJ),tJ,null)
set iJ=iJ+1
exitwhen iJ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Qi,Condition(La))
call TriggerAddAction(Qi,Xa)
set sJ=null
set tJ=null
endfunction
function SX takes nothing returns nothing
local trigger sX
local playerunitevent tX
local integer iX
set Mi=CreateTrigger()
set sX=Mi
set tX=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set iX=0
loop
call TriggerRegisterPlayerUnitEvent(sX,Player(iX),tX,null)
set iX=iX+1
exitwhen iX==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Mi,Condition(vn))
call TriggerAddAction(Mi,mn)
set sX=null
set tX=null
endfunction
function TZ takes nothing returns nothing
local trigger dZ
local playerunitevent fZ
local integer RZ
set Et=CreateTrigger()
set dZ=Et
set fZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set RZ=0
loop
call TriggerRegisterPlayerUnitEvent(dZ,Player(RZ),fZ,null)
set RZ=RZ+1
exitwhen RZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Et,Condition(Ve))
call TriggerAddAction(Et,Be)
set dZ=null
set fZ=null
endfunction
function UL takes nothing returns nothing
local trigger WL
local playerunitevent EL
local integer ZL
set Vi=CreateTrigger()
set WL=Vi
set EL=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set ZL=0
loop
call TriggerRegisterPlayerUnitEvent(WL,Player(ZL),EL,null)
set ZL=ZL+1
exitwhen ZL==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Vi,Condition(gn))
call TriggerAddAction(Vi,hn)
set WL=null
set EL=null
endfunction
function UW takes nothing returns nothing
local trigger WW
local playerunitevent EW
local integer ZW
set Tt=CreateTrigger()
set WW=Tt
set EW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set ZW=0
loop
call TriggerRegisterPlayerUnitEvent(WW,Player(ZW),EW,null)
set ZW=ZW+1
exitwhen ZW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Tt,Condition(Te))
call TriggerAddAction(Tt,Ye)
set WW=null
set EW=null
endfunction
function VA takes nothing returns nothing
local trigger LA
local playerunitevent XA
local integer CA
set ni=CreateTrigger()
set LA=ni
set XA=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set CA=0
loop
call TriggerRegisterPlayerUnitEvent(LA,Player(CA),XA,null)
set CA=CA+1
exitwhen CA==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ni,Condition(pa))
call TriggerAddAction(ni,ea)
set LA=null
set XA=null
endfunction
function VG takes nothing returns nothing
local trigger LG
local playerunitevent XG
local integer CG
set ms=CreateTrigger()
set LG=ms
set XG=EVENT_PLAYER_UNIT_SPELL_CAST
set CG=0
loop
call TriggerRegisterPlayerUnitEvent(LG,Player(CG),XG,null)
set CG=CG+1
exitwhen CG==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ms,Condition(Ay))
call TriggerAddAction(ms,Dy)
set LG=null
set XG=null
endfunction
function VJ takes nothing returns nothing
local trigger LJ
local playerunitevent XJ
local integer CJ
set Zi=CreateTrigger()
set LJ=Zi
set XJ=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set CJ=0
loop
call TriggerRegisterPlayerUnitEvent(LJ,Player(CJ),XJ,null)
set CJ=CJ+1
exitwhen CJ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Zi,Condition(Ma))
call TriggerAddAction(Zi,wn)
set LJ=null
set XJ=null
endfunction
function VU takes nothing returns nothing
local trigger LU
local playerunitevent XU
local integer CU
set Xt=CreateTrigger()
set LU=Xt
set XU=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set CU=0
loop
call TriggerRegisterPlayerUnitEvent(LU,Player(CU),XU,null)
set CU=CU+1
exitwhen CU==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Xt,Condition(dq))
call TriggerAddAction(Xt,fq)
set LU=null
set XU=null
endfunction
function Vm takes nothing returns nothing
local trigger Lm
local playerunitevent Xm
local integer Cm
set ot=CreateTrigger()
set Lm=ot
set Xm=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Cm=0
loop
call TriggerRegisterPlayerUnitEvent(Lm,Player(Cm),Xm,null)
set Cm=Cm+1
exitwhen Cm==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ot,Condition(Cp))
call TriggerAddAction(ot,Vp)
set Lm=null
set Xm=null
endfunction
function WA takes nothing returns nothing
local trigger vA
local playerunitevent mA
local integer QA
set qi=CreateTrigger()
set vA=qi
set mA=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set QA=0
loop
call TriggerRegisterPlayerUnitEvent(vA,Player(QA),mA,null)
set QA=QA+1
exitwhen QA==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(qi,Condition(Oa))
call TriggerAddAction(qi,la)
set vA=null
set mA=null
endfunction
function WJ takes nothing returns nothing
local trigger vJ
local playerunitevent mJ
local integer QJ
set Ei=CreateTrigger()
set vJ=Ei
set mJ=EVENT_PLAYER_UNIT_SPELL_CAST
set QJ=0
loop
call TriggerRegisterPlayerUnitEvent(vJ,Player(QJ),mJ,null)
set QJ=QJ+1
exitwhen QJ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ei,Condition(Ba))
call TriggerAddAction(Ei,Na)
set vJ=null
set mJ=null
endfunction
function WU takes nothing returns nothing
local trigger vU
local playerunitevent mU
local integer QU
set Kt=CreateTrigger()
set vU=Kt
set mU=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set QU=0
loop
call TriggerRegisterPlayerUnitEvent(vU,Player(QU),mU,null)
set QU=QU+1
exitwhen QU==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Kt,Condition(eq))
call TriggerAddAction(Kt,qq)
set vU=null
set mU=null
endfunction
function Wj takes nothing returns nothing
local trigger vj
local playerunitevent mj
local integer Qj
set Vs=CreateTrigger()
set vj=Vs
set mj=EVENT_PLAYER_UNIT_SPELL_CAST
set Qj=0
loop
call TriggerRegisterPlayerUnitEvent(vj,Player(Qj),mj,null)
set Qj=Qj+1
exitwhen Qj==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Vs,Condition(Fp))
call TriggerAddAction(Vs,kp)
set vj=null
set mj=null
endfunction
function XD takes nothing returns nothing
local trigger JD
local playerunitevent KD
local integer LD
set gi=CreateTrigger()
set JD=gi
set KD=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set LD=0
loop
call TriggerRegisterPlayerUnitEvent(JD,Player(LD),KD,null)
set LD=LD+1
exitwhen LD==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(gi,Condition(ka))
call TriggerAddAction(gi,ja)
set JD=null
set KD=null
endfunction
function XF takes nothing returns nothing
local trigger JF
local playerunitevent KF
local integer LF
set Hs=CreateTrigger()
set JF=Hs
set KF=EVENT_PLAYER_UNIT_SPELL_CAST
set LF=0
loop
call TriggerRegisterPlayerUnitEvent(JF,Player(LF),KF,null)
set LF=LF+1
exitwhen LF==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Hs,Condition(pp))
call TriggerAddAction(Hs,ep)
set JF=null
set KF=null
endfunction
function XK takes nothing returns nothing
local trigger JK
local playerunitevent KK
local integer LK
set Hi=CreateTrigger()
set JK=Hi
set KK=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set LK=0
loop
call TriggerRegisterPlayerUnitEvent(JK,Player(LK),KK,null)
set LK=LK+1
exitwhen LK==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Hi,Condition(yn))
call TriggerAddAction(Hi,pn)
set JK=null
set KK=null
endfunction
function XQ takes nothing returns nothing
local trigger JQ
local playerunitevent KQ
local integer LQ
set qt=CreateTrigger()
set JQ=qt
set KQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set LQ=0
loop
call TriggerRegisterPlayerUnitEvent(JQ,Player(LQ),KQ,null)
set LQ=LQ+1
exitwhen LQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(qt,Condition(Oe))
call TriggerAddAction(qt,le)
set JQ=null
set KQ=null
endfunction
function Xg takes nothing returns nothing
local trigger Jg
local playerunitevent Kg
local integer Lg
set Zs=CreateTrigger()
set Jg=Zs
set Kg=EVENT_PLAYER_UNIT_SPELL_CAST
set Lg=0
loop
call TriggerRegisterPlayerUnitEvent(Jg,Player(Lg),Kg,null)
set Lg=Lg+1
exitwhen Lg==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Zs,Condition(Cy))
call TriggerAddAction(Zs,Vy)
set Jg=null
set Kg=null
endfunction
function Xh takes nothing returns nothing
local trigger Jh
local playerunitevent Kh
local integer Lh
set Ps=CreateTrigger()
set Jh=Ps
set Kh=EVENT_PLAYER_UNIT_SPELL_CAST
set Lh=0
loop
call TriggerRegisterPlayerUnitEvent(Jh,Player(Lh),Kh,null)
set Lh=Lh+1
exitwhen Lh==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ps,Condition(tp))
call TriggerAddAction(Ps,ip)
set Jh=null
set Kh=null
endfunction
function YH takes nothing returns nothing
local trigger fH
local playerunitevent RH
local integer TH
set ji=CreateTrigger()
set fH=ji
set RH=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set TH=0
loop
call TriggerRegisterPlayerUnitEvent(fH,Player(TH),RH,null)
set TH=TH+1
exitwhen TH==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ji,Condition(Za))
call TriggerAddAction(ji,Ua)
set fH=null
set RH=null
endfunction
function YL takes nothing returns nothing
local trigger fL
local playerunitevent RL
local integer TL
set Xi=CreateTrigger()
set fL=Xi
set RL=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set TL=0
loop
call TriggerRegisterPlayerUnitEvent(fL,Player(TL),RL,null)
set TL=TL+1
exitwhen TL==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Xi,Condition(Rn))
call TriggerAddAction(Xi,Tn)
set fL=null
set RL=null
endfunction
function YW takes nothing returns nothing
local trigger fW
local playerunitevent RW
local integer TW
set ft=CreateTrigger()
set fW=ft
set RW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set TW=0
loop
call TriggerRegisterPlayerUnitEvent(fW,Player(TW),RW,null)
set TW=TW+1
exitwhen TW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ft,Condition(ne))
call TriggerAddAction(ft,de)
set fW=null
set RW=null
endfunction
function ZZ takes nothing returns nothing
local trigger QZ
local playerunitevent WZ
local integer EZ
set Ut=CreateTrigger()
set QZ=Ut
set WZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set EZ=0
loop
call TriggerRegisterPlayerUnitEvent(QZ,Player(EZ),WZ,null)
set EZ=EZ+1
exitwhen EZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ut,Condition(wq))
call TriggerAddAction(Ut,uq)
set QZ=null
set WZ=null
endfunction
function Zx takes nothing returns nothing
local trigger Qx
local playerunitevent Wx
local integer Ex
set Ms=CreateTrigger()
set Qx=Ms
set Wx=EVENT_PLAYER_UNIT_DEATH
set Ex=0
loop
call TriggerRegisterPlayerUnitEvent(Qx,Player(Ex),Wx,null)
set Ex=Ex+1
exitwhen Ex==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ms,Condition(Qp))
call TriggerAddAction(Ms,Wp)
set Qx=null
set Wx=null
endfunction
function bF takes nothing returns nothing
local trigger oF
local playerunitevent OF
local integer lF
set As=CreateTrigger()
set oF=As
set OF=EVENT_PLAYER_UNIT_SPELL_CAST
set lF=0
loop
call TriggerRegisterPlayerUnitEvent(oF,Player(lF),OF,null)
set lF=lF+1
exitwhen lF==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(As,Condition(cp))
call TriggerAddAction(As,op)
set oF=null
set OF=null
endfunction
function bP takes nothing returns nothing
local trigger oP
local playerunitevent OP
local integer lP
set ti=CreateTrigger()
set oP=ti
set OP=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set lP=0
loop
call TriggerRegisterPlayerUnitEvent(oP,Player(lP),OP,null)
set lP=lP+1
exitwhen lP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ti,Condition(Pq))
call TriggerAddAction(ti,Aq)
set oP=null
set OP=null
endfunction
function bh takes nothing returns nothing
local trigger oh
local playerunitevent Oh
local integer lh
set Us=CreateTrigger()
set oh=Us
set Oh=EVENT_PLAYER_UNIT_SPELL_CAST
set lh=0
loop
call TriggerRegisterPlayerUnitEvent(oh,Player(lh),Oh,null)
set lh=lh+1
exitwhen lh==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Us,Condition(Ny))
call TriggerAddAction(Us,My)
set oh=null
set Oh=null
endfunction
function bk takes nothing returns nothing
local trigger ok
local playerunitevent Ok
local integer lk
set Js=CreateTrigger()
set ok=Js
set Ok=EVENT_PLAYER_UNIT_SPELL_CAST
set lk=0
loop
call TriggerRegisterPlayerUnitEvent(ok,Player(lk),Ok,null)
set lk=lk+1
exitwhen lk==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Js,Condition(ap))
call TriggerAddAction(Js,np)
set ok=null
set Ok=null
endfunction
function cZ takes nothing returns nothing
local trigger tZ
local playerunitevent iZ
local integer SZ
set Qt=CreateTrigger()
set tZ=Qt
set iZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set SZ=0
loop
call TriggerRegisterPlayerUnitEvent(tZ,Player(SZ),iZ,null)
set SZ=SZ+1
exitwhen SZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Qt,Condition(Ke))
call TriggerAddAction(Qt,Le)
set tZ=null
set iZ=null
endfunction
function dP takes nothing returns nothing
local trigger qP
local playerunitevent aP
local integer nP
set ii=CreateTrigger()
set qP=ii
set aP=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set nP=0
loop
call TriggerRegisterPlayerUnitEvent(qP,Player(nP),aP,null)
set nP=nP+1
exitwhen nP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ii,Condition(Dq))
call TriggerAddAction(ii,Hq)
set qP=null
set aP=null
endfunction
function dv takes nothing returns nothing
local trigger qv
local playerunitevent av
local integer nv
set ut=CreateTrigger()
set qv=ut
set av=EVENT_PLAYER_UNIT_DEATH
set nv=0
loop
call TriggerRegisterPlayerUnitEvent(qv,Player(nv),av,null)
set nv=nv+1
exitwhen nv==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ut,Condition(Up))
call TriggerAddAction(ut,Ip)
set qv=null
set av=null
endfunction
function dx takes nothing returns nothing
local trigger qx
local playerunitevent ax
local integer nx
set Ns=CreateTrigger()
set qx=Ns
set ax=EVENT_PLAYER_UNIT_DEATH
set nx=0
loop
call TriggerRegisterPlayerUnitEvent(qx,Player(nx),ax,null)
set nx=nx+1
exitwhen nx==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ns,Condition(vp))
call TriggerAddAction(Ns,mp)
set qx=null
set ax=null
endfunction
function eG takes nothing returns nothing
local trigger bG
local playerunitevent yG
local integer pG
set js=CreateTrigger()
set bG=js
set yG=EVENT_PLAYER_UNIT_ATTACKED
set pG=0
loop
call TriggerRegisterPlayerUnitEvent(bG,Player(pG),yG,null)
set pG=pG+1
exitwhen pG==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(js,Condition(Wy))
call TriggerAddAction(js,Ey)
set bG=null
set yG=null
endfunction
function eZ takes nothing returns nothing
local trigger bZ
local playerunitevent yZ
local integer pZ
set Wt=CreateTrigger()
set bZ=Wt
set yZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set pZ=0
loop
call TriggerRegisterPlayerUnitEvent(bZ,Player(pZ),yZ,null)
set pZ=pZ+1
exitwhen pZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Wt,Condition(Xe))
call TriggerAddAction(Wt,Ce)
set bZ=null
set yZ=null
endfunction
function ej takes nothing returns nothing
local trigger bj
local playerunitevent yj
local integer pj
set Cs=CreateTrigger()
set bj=Cs
set yj=EVENT_PLAYER_UNIT_SPELL_CAST
set pj=0
loop
call TriggerRegisterPlayerUnitEvent(bj,Player(pj),yj,null)
set pj=pj+1
exitwhen pj==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Cs,Condition(gp))
call TriggerAddAction(Cs,hp)
set bj=null
set yj=null
endfunction
function fA takes nothing returns nothing
local trigger aA
local playerunitevent nA
local integer dA
set pi=CreateTrigger()
set aA=pi
set nA=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set dA=0
loop
call TriggerRegisterPlayerUnitEvent(aA,Player(dA),nA,null)
set dA=dA+1
exitwhen dA==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(pi,Condition(ia))
call TriggerAddAction(pi,Sa)
set aA=null
set nA=null
endfunction
function fU takes nothing returns nothing
local trigger aU
local playerunitevent nU
local integer dU
set Ht=CreateTrigger()
set aU=Ht
set nU=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set dU=0
loop
call TriggerRegisterPlayerUnitEvent(aU,Player(dU),nU,null)
set dU=dU+1
exitwhen dU==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ht,Condition(lq))
call TriggerAddAction(Ht,bq)
set aU=null
set nU=null
endfunction
function fk takes nothing returns nothing
set Ks=CreateTrigger()
call TriggerRegisterTimerEvent(Ks,5.00,true)
call TriggerAddAction(Ks,fp)
endfunction
function gD takes nothing returns nothing
local trigger TD
local playerunitevent YD
local integer GD
set Ti=CreateTrigger()
set TD=Ti
set YD=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set GD=0
loop
call TriggerRegisterPlayerUnitEvent(TD,Player(GD),YD,null)
set GD=GD+1
exitwhen GD==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ti,Condition(Ta))
call TriggerAddAction(Ti,Ya)
set TD=null
set YD=null
endfunction
function gK takes nothing returns nothing
local trigger TK
local playerunitevent YK
local integer GK
set Pi=CreateTrigger()
set TK=Pi
set YK=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set GK=0
loop
call TriggerRegisterPlayerUnitEvent(TK,Player(GK),YK,null)
set GK=GK+1
exitwhen GK==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Pi,Condition(Sn))
call TriggerAddAction(Pi,cn)
set TK=null
set YK=null
endfunction
function gQ takes nothing returns nothing
local trigger TQ
local playerunitevent YQ
local integer GQ
set yt=CreateTrigger()
set TQ=yt
set YQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set GQ=0
loop
call TriggerRegisterPlayerUnitEvent(TQ,Player(GQ),YQ,null)
set GQ=GQ+1
exitwhen GQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(yt,Condition(se))
call TriggerAddAction(yt,te)
set TQ=null
set YQ=null
endfunction
function hH takes nothing returns nothing
set xi=CreateTrigger()
call TriggerRegisterTimerEvent(xi,0.10,false)
call TriggerAddAction(xi,Pa)
endfunction
function hP takes nothing returns nothing
local trigger YP
local playerunitevent GP
local integer gP
set Si=CreateTrigger()
set YP=Si
set GP=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set gP=0
loop
call TriggerRegisterPlayerUnitEvent(YP,Player(gP),GP,null)
set gP=gP+1
exitwhen gP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Si,Condition(Jq))
call TriggerAddAction(Si,Kq)
set YP=null
set GP=null
endfunction
function iA takes nothing returns nothing
local trigger rA
local playerunitevent sA
local integer tA
set bi=CreateTrigger()
set rA=bi
set sA=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set tA=0
loop
call TriggerRegisterPlayerUnitEvent(rA,Player(tA),sA,null)
set tA=tA+1
exitwhen tA==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(bi,Condition(ua))
call TriggerAddAction(bi,ra)
set rA=null
set sA=null
endfunction
function iU takes nothing returns nothing
local trigger rU
local playerunitevent sU
local integer tU
set At=CreateTrigger()
set rU=At
set sU=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set tU=0
loop
call TriggerRegisterPlayerUnitEvent(rU,Player(tU),sU,null)
set tU=tU+1
exitwhen tU==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(At,Condition(Sq))
call TriggerAddAction(At,cq)
set rU=null
set sU=null
endfunction
function iY takes nothing returns nothing
local trigger rY
local playerunitevent sY
local integer tY
set Gs=CreateTrigger()
set rY=Gs
set sY=EVENT_PLAYER_UNIT_ATTACKED
set tY=0
loop
call TriggerRegisterPlayerUnitEvent(rY,Player(tY),sY,null)
set tY=tY+1
exitwhen tY==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Gs,Condition(Gy))
call TriggerAddAction(Gs,gy)
set rY=null
set sY=null
endfunction
function im takes nothing returns nothing
local trigger rm
local playerunitevent sm
local integer tm
set st=CreateTrigger()
set rm=st
set sm=EVENT_PLAYER_UNIT_SPELL_CAST
set tm=0
loop
call TriggerRegisterPlayerUnitEvent(rm,Player(tm),sm,null)
set tm=tm+1
exitwhen tm==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(st,Condition(Dp))
call TriggerAddAction(st,Hp)
set rm=null
set sm=null
endfunction
function jF takes nothing returns nothing
local trigger hF
local playerunitevent FF
local integer kF
set Ds=CreateTrigger()
set hF=Ds
set FF=EVENT_PLAYER_UNIT_SPELL_CAST
set kF=0
loop
call TriggerRegisterPlayerUnitEvent(hF,Player(kF),FF,null)
set kF=kF+1
exitwhen kF==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ds,Condition(lp))
call TriggerAddAction(Ds,bp)
set hF=null
set FF=null
endfunction
function jZ takes nothing returns nothing
local trigger hZ
local playerunitevent FZ
local integer kZ
set Zt=CreateTrigger()
set hZ=Zt
set FZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set kZ=0
loop
call TriggerRegisterPlayerUnitEvent(hZ,Player(kZ),FZ,null)
set kZ=kZ+1
exitwhen kZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Zt,Condition(Ne))
call TriggerAddAction(Zt,Me)
set hZ=null
set FZ=null
endfunction
function jg takes nothing returns nothing
local trigger hg
local playerunitevent Fg
local integer kg
set Es=CreateTrigger()
set hg=Es
set Fg=EVENT_PLAYER_UNIT_SPELL_CAST
set kg=0
loop
call TriggerRegisterPlayerUnitEvent(hg,Player(kg),Fg,null)
set kg=kg+1
exitwhen kg==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(Es,Ly)
set hg=null
set Fg=null
endfunction
function jh takes nothing returns nothing
local trigger hh
local playerunitevent Fh
local integer kh
set Is=CreateTrigger()
set hh=Is
set Fh=EVENT_PLAYER_UNIT_SPELL_CAST
set kh=0
loop
call TriggerRegisterPlayerUnitEvent(hh,Player(kh),Fh,null)
set kh=kh+1
exitwhen kh==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Is,Condition(up))
call TriggerAddAction(Is,rp)
set hh=null
set Fh=null
endfunction
function kE takes nothing returns nothing
local trigger gE
local playerunitevent hE
local integer FE
set kt=CreateTrigger()
set gE=kt
set hE=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set FE=0
loop
call TriggerRegisterPlayerUnitEvent(gE,Player(FE),hE,null)
set FE=FE+1
exitwhen FE==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(kt,Condition(We))
call TriggerAddAction(kt,Ee)
set gE=null
set hE=null
endfunction
function kI takes nothing returns nothing
local trigger gI
local playerunitevent hI
local integer FI
set Mt=CreateTrigger()
set gI=Mt
set hI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set FI=0
loop
call TriggerRegisterPlayerUnitEvent(gI,Player(FI),hI,null)
set FI=FI+1
exitwhen FI==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Mt,Condition(jq))
call TriggerAddAction(Mt,xq)
set gI=null
set hI=null
endfunction
function kX takes nothing returns nothing
local trigger gX
local playerunitevent hX
local integer FX
set rS=CreateTrigger()
set gX=rS
set hX=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set FX=0
loop
call TriggerRegisterPlayerUnitEvent(gX,Player(FX),hX,null)
set FX=FX+1
exitwhen FX==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(rS,Condition(Un))
call TriggerAddAction(rS,In)
set gX=null
set hX=null
endfunction
function kk takes nothing returns nothing
set Ls=CreateTrigger()
call TriggerRegisterTimerEvent(Ls,5.00,true)
call TriggerAddAction(Ls,Tp)
endfunction
function lD takes nothing returns nothing
local trigger cD
local playerunitevent oD
local integer OD
set fi=CreateTrigger()
set cD=fi
set oD=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set OD=0
loop
call TriggerRegisterPlayerUnitEvent(cD,Player(OD),oD,null)
set OD=OD+1
exitwhen OD==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(fi,Condition(na))
call TriggerAddAction(fi,da)
set cD=null
set oD=null
endfunction
function lK takes nothing returns nothing
local trigger cK
local playerunitevent oK
local integer OK
set Ui=CreateTrigger()
set cK=Ui
set oK=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set OK=0
loop
call TriggerRegisterPlayerUnitEvent(cK,Player(OK),oK,null)
set OK=OK+1
exitwhen OK==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ui,Condition(un))
call TriggerAddAction(Ui,rn)
set cK=null
set oK=null
endfunction
function lQ takes nothing returns nothing
local trigger cQ
local playerunitevent oQ
local integer OQ
set lt=CreateTrigger()
set cQ=lt
set oQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set OQ=0
loop
call TriggerRegisterPlayerUnitEvent(cQ,Player(OQ),oQ,null)
set OQ=OQ+1
exitwhen OQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(lt,Condition(Mp))
call TriggerAddAction(lt,we)
set cQ=null
set oQ=null
endfunction
function mD takes nothing returns nothing
local trigger jD
local playerunitevent xD
local integer vD
set Yi=CreateTrigger()
set jD=Yi
set xD=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set vD=0
loop
call TriggerRegisterPlayerUnitEvent(jD,Player(vD),xD,null)
set vD=vD+1
exitwhen vD==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Yi,Condition(Ga))
call TriggerAddAction(Yi,ga)
set jD=null
set xD=null
endfunction
function mK takes nothing returns nothing
local trigger jK
local playerunitevent xK
local integer vK
set Ai=CreateTrigger()
set jK=Ai
set xK=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set vK=0
loop
call TriggerRegisterPlayerUnitEvent(jK,Player(vK),xK,null)
set vK=vK+1
exitwhen vK==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ai,Condition(on))
call TriggerAddAction(Ai,On)
set jK=null
set xK=null
endfunction
function mQ takes nothing returns nothing
local trigger jQ
local playerunitevent xQ
local integer vQ
set pt=CreateTrigger()
set jQ=pt
set xQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set vQ=0
loop
call TriggerRegisterPlayerUnitEvent(jQ,Player(vQ),xQ,null)
set vQ=vQ+1
exitwhen vQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(pt,Condition(ie))
call TriggerAddAction(pt,Se)
set jQ=null
set xQ=null
endfunction
function nD takes nothing returns nothing
local trigger eD
local playerunitevent qD
local integer aD
set Ri=CreateTrigger()
set eD=Ri
set qD=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set aD=0
loop
call TriggerRegisterPlayerUnitEvent(eD,Player(aD),qD,null)
set aD=aD+1
exitwhen aD==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ri,Condition(fa))
call TriggerAddAction(Ri,Ra)
set eD=null
set qD=null
endfunction
function nK takes nothing returns nothing
local trigger eK
local playerunitevent qK
local integer aK
set Ii=CreateTrigger()
set eK=Ii
set qK=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set aK=0
loop
call TriggerRegisterPlayerUnitEvent(eK,Player(aK),qK,null)
set aK=aK+1
exitwhen aK==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ii,Condition(sn))
call TriggerAddAction(Ii,tn)
set eK=null
set qK=null
endfunction
function nQ takes nothing returns nothing
local trigger eQ
local playerunitevent qQ
local integer aQ
set bt=CreateTrigger()
set eQ=bt
set qQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set aQ=0
loop
call TriggerRegisterPlayerUnitEvent(eQ,Player(aQ),qQ,null)
set aQ=aQ+1
exitwhen aQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(bt,Condition(ue))
call TriggerAddAction(bt,re)
set eQ=null
set qQ=null
endfunction
function nY takes nothing returns nothing
local trigger eY
local playerunitevent qY
local integer aY
set gs=CreateTrigger()
set eY=gs
set qY=EVENT_PLAYER_UNIT_ATTACKED
set aY=0
loop
call TriggerRegisterPlayerUnitEvent(eY,Player(aY),qY,null)
set aY=aY+1
exitwhen aY==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(gs,Condition(hy))
call TriggerAddAction(gs,Fy)
set eY=null
set qY=null
endfunction
function oH takes nothing returns nothing
local trigger iH
local playerunitevent SH
local integer cH
set Fi=CreateTrigger()
set iH=Fi
set SH=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set cH=0
loop
call TriggerRegisterPlayerUnitEvent(iH,Player(cH),SH,null)
set cH=cH+1
exitwhen cH==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Fi,Condition(ma))
call TriggerAddAction(Fi,Qa)
set iH=null
set SH=null
endfunction
function oL takes nothing returns nothing
local trigger iL
local playerunitevent SL
local integer cL
set Ki=CreateTrigger()
set iL=Ki
set SL=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set cL=0
loop
call TriggerRegisterPlayerUnitEvent(iL,Player(cL),SL,null)
set cL=cL+1
exitwhen cL==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ki,Condition(an))
call TriggerAddAction(Ki,nn)
set iL=null
set SL=null
endfunction
function oW takes nothing returns nothing
local trigger iW
local playerunitevent SW
local integer cW
set nt=CreateTrigger()
set iW=nt
set SW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set cW=0
loop
call TriggerRegisterPlayerUnitEvent(iW,Player(cW),SW,null)
set cW=cW+1
exitwhen cW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(nt,Condition(pe))
call TriggerAddAction(nt,ee)
set iW=null
set SW=null
endfunction
function pE takes nothing returns nothing
local trigger lE
local playerunitevent bE
local integer yE
set ht=CreateTrigger()
set lE=ht
set bE=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set yE=0
loop
call TriggerRegisterPlayerUnitEvent(lE,Player(yE),bE,null)
set yE=yE+1
exitwhen yE==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ht,Condition(xe))
call TriggerAddAction(ht,ve)
set lE=null
set bE=null
endfunction
function pI takes nothing returns nothing
local trigger lI
local playerunitevent bI
local integer yI
set Bt=CreateTrigger()
set lI=Bt
set bI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set yI=0
loop
call TriggerRegisterPlayerUnitEvent(lI,Player(yI),bI,null)
set yI=yI+1
exitwhen yI==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Bt,Condition(gq))
call TriggerAddAction(Bt,hq)
set lI=null
set bI=null
endfunction
function pX takes nothing returns nothing
local trigger lX
local playerunitevent bX
local integer yX
set wS=CreateTrigger()
set lX=wS
set bX=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set yX=0
loop
call TriggerRegisterPlayerUnitEvent(lX,Player(yX),bX,null)
set yX=yX+1
exitwhen yX==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(wS,Condition(Qn))
call TriggerAddAction(wS,Wn)
set lX=null
set bX=null
endfunction
function qH takes nothing returns nothing
local trigger yH
local playerunitevent pH
local integer eH
set ki=CreateTrigger()
set yH=ki
set pH=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set eH=0
loop
call TriggerRegisterPlayerUnitEvent(yH,Player(eH),pH,null)
set eH=eH+1
exitwhen eH==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ki,Condition(Wa))
call TriggerAddAction(ki,Ea)
set yH=null
set pH=null
endfunction
function qL takes nothing returns nothing
local trigger yL
local playerunitevent pL
local integer eL
set Li=CreateTrigger()
set yL=Li
set pL=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set eL=0
loop
call TriggerRegisterPlayerUnitEvent(yL,Player(eL),pL,null)
set eL=eL+1
exitwhen eL==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Li,Condition(dn))
call TriggerAddAction(Li,fn)
set yL=null
set pL=null
endfunction
function qW takes nothing returns nothing
local trigger yW
local playerunitevent pW
local integer eW
set dt=CreateTrigger()
set yW=dt
set pW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set eW=0
loop
call TriggerRegisterPlayerUnitEvent(yW,Player(eW),pW,null)
set eW=eW+1
exitwhen eW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(dt,Condition(qe))
call TriggerAddAction(dt,ae)
set yW=null
set pW=null
endfunction
function qg takes nothing returns nothing
local trigger yg
local playerunitevent pg
local integer eg
set Ws=CreateTrigger()
set yg=Ws
set pg=EVENT_PLAYER_UNIT_SPELL_CAST
set eg=0
loop
call TriggerRegisterPlayerUnitEvent(yg,Player(eg),pg,null)
set eg=eg+1
exitwhen eg==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(Ws,Ky)
set yg=null
set pg=null
endfunction
function rG takes nothing returns nothing
local trigger MY
local playerunitevent wG
local integer uG
set ks=CreateTrigger()
set MY=ks
set wG=EVENT_PLAYER_UNIT_ATTACKED
set uG=0
loop
call TriggerRegisterPlayerUnitEvent(MY,Player(uG),wG,null)
set uG=uG+1
exitwhen uG==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ks,Condition(my))
call TriggerAddAction(ks,Qy)
set MY=null
set wG=null
endfunction
function rg takes nothing returns nothing
local trigger MG
local playerunitevent wg
local integer ug
set Qs=CreateTrigger()
set MG=Qs
set wg=EVENT_PLAYER_UNIT_SPELL_EFFECT
set ug=0
loop
call TriggerRegisterPlayerUnitEvent(MG,Player(ug),wg,null)
set ug=ug+1
exitwhen ug==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Qs,Condition(Hy))
call TriggerAddAction(Qs,Jy)
set MG=null
set wg=null
endfunction
function sD takes nothing returns nothing
local trigger wD
local playerunitevent uD
local integer rD
set di=CreateTrigger()
set wD=di
set uD=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set rD=0
loop
call TriggerRegisterPlayerUnitEvent(wD,Player(rD),uD,null)
set rD=rD+1
exitwhen rD==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(di,Condition(qa))
call TriggerAddAction(di,aa)
set wD=null
set uD=null
endfunction
function sQ takes nothing returns nothing
local trigger wQ
local playerunitevent uQ
local integer rQ
set Ot=CreateTrigger()
set wQ=Ot
set uQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set rQ=0
loop
call TriggerRegisterPlayerUnitEvent(wQ,Player(rQ),uQ,null)
set rQ=rQ+1
exitwhen rQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ot,Condition(Bp))
call TriggerAddAction(Ot,Np)
set wQ=null
set uQ=null
endfunction
function tC takes nothing returns nothing
local trigger uC
local playerunitevent rC
local integer sC
set SS=CreateTrigger()
set uC=SS
set rC=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set sC=0
loop
call TriggerRegisterPlayerUnitEvent(uC,Player(sC),rC,null)
set sC=sC+1
exitwhen sC==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(SS,Condition(Ln))
call TriggerAddAction(SS,Xn)
set uC=null
set rC=null
endfunction
function tP takes nothing returns nothing
local trigger uP
local playerunitevent rP
local integer sP
set si=CreateTrigger()
set uP=si
set rP=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set sP=0
loop
call TriggerRegisterPlayerUnitEvent(uP,Player(sP),rP,null)
set sP=sP+1
exitwhen sP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(si,Condition(Uq))
call TriggerAddAction(si,Iq)
set uP=null
set rP=null
endfunction
function uH takes nothing returns nothing
local trigger ND
local playerunitevent MD
local integer wH
set hi=CreateTrigger()
set ND=hi
set MD=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set wH=0
loop
call TriggerRegisterPlayerUnitEvent(ND,Player(wH),MD,null)
set wH=wH+1
exitwhen wH==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(hi,Condition(xa))
call TriggerAddAction(hi,va)
set ND=null
set MD=null
endfunction
function uL takes nothing returns nothing
local trigger NK
local playerunitevent MK
local integer wL
set Ji=CreateTrigger()
set NK=Ji
set MK=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set wL=0
loop
call TriggerRegisterPlayerUnitEvent(NK,Player(wL),MK,null)
set wL=wL+1
exitwhen wL==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ji,Condition(en))
call TriggerAddAction(Ji,qn)
set NK=null
set MK=null
endfunction
function uW takes nothing returns nothing
local trigger NQ
local playerunitevent MQ
local integer wW
set at=CreateTrigger()
set NQ=at
set MQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set wW=0
loop
call TriggerRegisterPlayerUnitEvent(NQ,Player(wW),MQ,null)
set wW=wW+1
exitwhen wW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(at,Condition(be))
call TriggerAddAction(at,ye)
set NQ=null
set MQ=null
endfunction
function uv takes nothing returns nothing
local trigger Nx
local playerunitevent Mx
local integer wv
set wt=CreateTrigger()
set Nx=wt
set Mx=EVENT_PLAYER_UNIT_DEATH
set wv=0
loop
call TriggerRegisterPlayerUnitEvent(Nx,Player(wv),Mx,null)
set wv=wv+1
exitwhen wv==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(wt,Condition(Ep))
call TriggerAddAction(wt,Zp)
set Nx=null
set Mx=null
endfunction
function ux takes nothing returns nothing
local trigger Nj
local playerunitevent Mj
local integer wx
set Bs=CreateTrigger()
set Nj=Bs
set Mj=EVENT_PLAYER_UNIT_SPELL_CAST
set wx=0
loop
call TriggerRegisterPlayerUnitEvent(Nj,Player(wx),Mj,null)
set wx=wx+1
exitwhen wx==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Bs,Condition(jp))
call TriggerAddAction(Bs,xp)
set Nj=null
set Mj=null
endfunction
function wZ takes nothing returns nothing
local trigger BE
local playerunitevent NE
local integer ME
set mt=CreateTrigger()
set BE=mt
set NE=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set ME=0
loop
call TriggerRegisterPlayerUnitEvent(BE,Player(ME),NE,null)
set ME=ME+1
exitwhen ME==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(mt,Condition(He))
call TriggerAddAction(mt,Je)
set BE=null
set NE=null
endfunction
function xL takes nothing returns nothing
local trigger FL
local playerunitevent kL
local integer jL
set Ci=CreateTrigger()
set FL=Ci
set kL=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set jL=0
loop
call TriggerRegisterPlayerUnitEvent(FL,Player(jL),kL,null)
set jL=jL+1
exitwhen jL==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ci,Condition(Yn))
call TriggerAddAction(Ci,Gn)
set FL=null
set kL=null
endfunction
function xW takes nothing returns nothing
local trigger FW
local playerunitevent kW
local integer jW
set Rt=CreateTrigger()
set FW=Rt
set kW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set jW=0
loop
call TriggerRegisterPlayerUnitEvent(FW,Player(jW),kW,null)
set jW=jW+1
exitwhen jW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Rt,Condition(fe))
call TriggerAddAction(Rt,Re)
set FW=null
set kW=null
endfunction
function xY takes nothing returns nothing
local trigger FY
local playerunitevent kY
local integer jY
set hs=CreateTrigger()
set FY=hs
set kY=EVENT_PLAYER_UNIT_ATTACKED
set jY=0
loop
call TriggerRegisterPlayerUnitEvent(FY,Player(jY),kY,null)
set jY=jY+1
exitwhen jY==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(hs,Condition(ky))
call TriggerAddAction(hs,jy)
set FY=null
set kY=null
endfunction
function yA takes nothing returns nothing
local trigger OA
local playerunitevent lA
local integer bA
set yi=CreateTrigger()
set OA=yi
set lA=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set bA=0
loop
call TriggerRegisterPlayerUnitEvent(OA,Player(bA),lA,null)
set bA=bA+1
exitwhen bA==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(yi,Condition(sa))
call TriggerAddAction(yi,ta)
set OA=null
set lA=null
endfunction
function yU takes nothing returns nothing
local trigger OU
local playerunitevent lU
local integer bU
set Dt=CreateTrigger()
set OU=Dt
set lU=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set bU=0
loop
call TriggerRegisterPlayerUnitEvent(OU,Player(bU),lU,null)
set bU=bU+1
exitwhen bU==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Dt,Condition(oq))
call TriggerAddAction(Dt,Oq)
set OU=null
set lU=null
endfunction
function iC takes nothing returns nothing
call HT()
set Ts=CreateTrigger()
call TriggerAddAction(Ts,Cn)
call LT()
call iY()
call nY()
call xY()
call HY()
call rG()
call eG()
call FG()
call PG()
call VG()
call rg()
call qg()
call jg()
call Xg()
call bh()
call jh()
call Xh()
call bF()
call jF()
call XF()
call bk()
call fk()
call kk()
call Ck()
call ej()
call Wj()
call ux()
call dx()
call Zx()
call uv()
call dv()
call Iv()
call im()
set tt=CreateTrigger()
call TriggerAddAction(tt,Vn)
call Gm()
call Dm()
call Vm()
call sQ()
call lQ()
call nQ()
call gQ()
call mQ()
call PQ()
call XQ()
call uW()
call oW()
call qW()
call YW()
call xW()
call UW()
call KW()
call MW()
call SE()
call pE()
call RE()
call kE()
call EE()
call HE()
call LE()
call wZ()
call cZ()
call eZ()
call TZ()
call jZ()
call ZZ()
call JZ()
call NZ()
call iU()
call yU()
call fU()
call FU()
call WU()
call DU()
call VU()
call MU()
call SI()
call pI()
call RI()
call kI()
call EI()
call HI()
call BI()
call tP()
call bP()
call dP()
call hP()
call QP()
call AP()
call CP()
call NP()
call iA()
call yA()
call fA()
call FA()
call WA()
call DA()
call VA()
call sD()
call lD()
call nD()
call gD()
call mD()
call PD()
call XD()
call uH()
call oH()
call qH()
call YH()
call hH()
call PH()
call KH()
call SJ()
call RJ()
call WJ()
call VJ()
call lK()
call nK()
call gK()
call mK()
call PK()
call XK()
call uL()
call oL()
call qL()
call YL()
call xL()
call UL()
call KL()
call ML()
call SX()
call pX()
call RX()
call kX()
call EX()
call HX()
call BX()
call tC()
endfunction
function nR takes nothing returns nothing
local integer aR=0
set aR=0
loop
exitwhen aR>8192
call CreateGroup()
set aR=aR+1
endloop
call CreateForce()
call CreateGroup()
call CreateForce()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateForce()
call CreateForce()
call CreateForce()
call CreateTimer()
call CreateForce()
call CreateGroup()
set w=CreateGroup()
call CreateGroup()
call CreateForce()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateTimer()
set aR=0
loop
exitwhen aR>24
set aR=aR+1
endloop
set aR=0
loop
exitwhen aR>24
set r[aR]=0
set aR=aR+1
endloop
set s=CreateForce()
set aR=0
loop
exitwhen aR>24
set aR=aR+1
endloop
call CreateGroup()
set aR=0
loop
exitwhen aR>24
set aR=aR+1
endloop
set aR=0
loop
exitwhen aR>24
set aR=aR+1
endloop
call CreateForce()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
set l=CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
set aR=0
loop
exitwhen aR>24
set aR=aR+1
endloop
set aR=0
loop
exitwhen aR>24
set aR=aR+1
endloop
call CreateGroup()
set aR=0
loop
exitwhen aR>24
set aR=aR+1
endloop
set aR=0
loop
exitwhen aR>24
set aR=aR+1
endloop
set aR=0
loop
exitwhen aR>24
set aR=aR+1
endloop
set aR=0
loop
exitwhen aR>24
set aR=aR+1
endloop
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateForce()
call CreateForce()
set aR=0
loop
exitwhen aR>1
set aR=aR+1
endloop
set aR=0
loop
exitwhen aR>1
set aR=aR+1
endloop
set aR=0
loop
exitwhen aR>1
set aR=aR+1
endloop
set b=CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
set aR=0
loop
exitwhen aR>24
set p[aR]=false
set aR=aR+1
endloop
set aR=0
loop
exitwhen aR>24
set e[aR]=false
set aR=aR+1
endloop
endfunction
function A9 takes nothing returns boolean
return true
endfunction
function AH takes nothing returns nothing
call UnitRemoveAbility(GetTriggerUnit(),1093677402)
endfunction
function AL takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function AW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988812,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988559,0)
endfunction
function G0w takes integer Y0w returns string
if Y0w==0 then
return "|cffADADADtrace|r"
elseif Y0w==1 then
return "|cff2685DCdebug|r"
elseif Y0w==2 then
return "|cffFFCC00info|r"
elseif Y0w==3 then
return "|cffF47E3Ewarning|r"
elseif Y0w==4 then
return "|cffFB2700error|r"
endif
return "?"
endfunction
function S4 takes string V1,string B1 returns nothing
local integer N1
local integer M1
local integer w4
local string u4
local integer r4
local integer s4
local string t4
local string i4
set Kb[Jb]=B1
set Jb=Jb+1
set N1=StringHash(V1)
if HaveSavedInteger(cc,-1,N1) then
if LoadInteger(cc,-1,N1)+60<nc then
set t4=V1
set B1=""
set M1=Jb
set w4=0
loop
set M1=M1-1
set w4=w4+1
exitwhen w4>20 or M1<0
set B1=B1+"\n   "+Kb[M1]
endloop
call DisplayTimedTextToPlayer(so,0.,0.,45.,G0w(4)+" - "+t4+B1)
call SaveInteger(cc,-1,N1,R2I(nc))
call SaveBoolean(cc,-1,N1,false)
elseif HaveSavedBoolean(cc,-1,N1) then
if not LoadBoolean(cc,-1,N1) then
call DisplayTimedTextToPlayer(so,0.,0.,45.,G0w(4)+" - "+"|cffFF3A29Excessive repeating errors are being omitted")
call SaveBoolean(cc,-1,N1,true)
endif
else
call DisplayTimedTextToPlayer(so,0.,0.,45.,G0w(4)+" - "+"|cffFF3A29Excessive repeating errors are being omitted")
call SaveBoolean(cc,-1,N1,true)
endif
else
call SaveInteger(cc,-1,N1,R2I(nc))
set i4="Message: "+V1
set u4=""
set r4=Jb
set s4=0
loop
set r4=r4-1
set s4=s4+1
exitwhen s4>20 or r4<0
set u4=u4+"\n   "+Kb[r4]
endloop
call DisplayTimedTextToPlayer(so,0.,0.,45.,G0w(4)+" - "+i4+u4)
endif
call I2S(1/0)
set Jb=Jb-1
endfunction
function Zqw takes integer Wqw,unit Eqw returns nothing
set Hb[Wqw]=Eqw
call SetUnitUserData(Hb[Wqw],Wqw)
set Jo[Ko]=Eqw
set Ko=Ko+1
call TriggerEvaluate(Do)
set Ko=Ko-1
endfunction
function Qqw takes unit xqw,string vqw returns integer
local integer mqw
set Kb[Jb]=vqw
set Jb=Jb+1
set Kb[Jb]="when calling alloc_UnitIndex in UnitIndexer, line 181"
set Jb=Jb+1
if ql==0 then
if al<32768 then
set al=al+1
set mqw=al
set nl[mqw]=737
else
call S4("Out of memory: Could not create UnitIndex.","when calling error in UnitIndexer, line 172")
set mqw=0
endif
else
set ql=ql-1
set mqw=el[ql]
set nl[mqw]=737
endif
set Jb=Jb-1
call Zqw(mqw,xqw)
set Jb=Jb-1
return mqw
endfunction
function Ouw takes string cuw returns nothing
local unit ouw
set Kb[Jb]=cuw
set Jb=Jb+1
set ouw=Mc[wo-1]
set Kb[Jb]="when calling toUnitIndex in UnitIndexer, line 196"
set Jb=Jb+1
if GetUnitUserData(ouw)==0 then
call Qqw(ouw,"when calling new_UnitIndex in UnitIndexer, line 135")
endif
set Jb=Jb-1-1
set ouw=null
endfunction
function AYw takes nothing returns nothing
set Jb=0
call Ouw("UnitIndexer, line 196")
endfunction
function BD takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990599,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990600,0)
endfunction
function VF takes nothing returns boolean
if IsUnitType(GetEnumUnit(),UNIT_TYPE_STRUCTURE)!=false then
return false
endif
return true
endfunction
function BF takes nothing returns nothing
if VF() then
call SetUnitPositionLoc(GetEnumUnit(),S)
endif
endfunction
function BG takes nothing returns boolean
if GetSpellAbilityId()!=1093677620 then
return false
endif
return true
endfunction
function BK takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function BP takes nothing returns nothing
set s=bj_FORCE_ALL_PLAYERS
call ForForce(s,Mq)
endfunction
function BQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989066,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988551,0)
endfunction
function BTw takes nothing returns boolean
set Jb=0
set Kb[Jb]="ObjectIdGenerator, line 1"
set Jb=Jb+1
set Kb[Jb]="when calling new_IdGenerator in ObjectIdGenerator, line 7"
set Jb=Jb+1
set Kb[Jb]="when calling alloc_IdGenerator in ObjectIdGenerator, line 20"
set Jb=Jb+1
if il==0 then
if Sl<32768 then
set Sl=Sl+1
else
call S4("Out of memory: Could not create IdGenerator.","when calling error in ObjectIdGenerator, line 14")
endif
else
set il=il-1
endif
set Jb=Jb-1-1
set Kb[Jb]="when calling new_IdGenerator in ObjectIdGenerator, line 8"
set Jb=Jb+1
set Kb[Jb]="when calling alloc_IdGenerator in ObjectIdGenerator, line 20"
set Jb=Jb+1
if il==0 then
if Sl<32768 then
set Sl=Sl+1
else
call S4("Out of memory: Could not create IdGenerator.","when calling error in ObjectIdGenerator, line 14")
endif
else
set il=il-1
endif
set Jb=Jb-1-1
set Kb[Jb]="when calling new_IdGenerator in ObjectIdGenerator, line 9"
set Jb=Jb+1
set Kb[Jb]="when calling alloc_IdGenerator in ObjectIdGenerator, line 20"
set Jb=Jb+1
if il==0 then
if Sl<32768 then
set Sl=Sl+1
else
call S4("Out of memory: Could not create IdGenerator.","when calling error in ObjectIdGenerator, line 14")
endif
else
set il=il-1
endif
set Jb=Jb-1-1
set Kb[Jb]="when calling new_IdGenerator in ObjectIdGenerator, line 10"
set Jb=Jb+1
set Kb[Jb]="when calling alloc_IdGenerator in ObjectIdGenerator, line 20"
set Jb=Jb+1
if il==0 then
if Sl<32768 then
set Sl=Sl+1
else
call S4("Out of memory: Could not create IdGenerator.","when calling error in ObjectIdGenerator, line 14")
endif
else
set il=il-1
endif
set Jb=Jb-1-1
set Kb[Jb]="when calling new_IdGenerator in ObjectIdGenerator, line 11"
set Jb=Jb+1
set Kb[Jb]="when calling alloc_IdGenerator in ObjectIdGenerator, line 20"
set Jb=Jb+1
if il==0 then
if Sl<32768 then
set Sl=Sl+1
else
call S4("Out of memory: Could not create IdGenerator.","when calling error in ObjectIdGenerator, line 14")
endif
else
set il=il-1
endif
set Jb=Jb-1-1
set Kb[Jb]="when calling new_IdGenerator in ObjectIdGenerator, line 12"
set Jb=Jb+1
set Kb[Jb]="when calling alloc_IdGenerator in ObjectIdGenerator, line 20"
set Jb=Jb+1
if il==0 then
if Sl<32768 then
set Sl=Sl+1
else
call S4("Out of memory: Could not create IdGenerator.","when calling error in ObjectIdGenerator, line 14")
endif
else
set il=il-1
endif
set Jb=Jb-1-1-1
return true
endfunction
function BU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989570,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989556,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989559,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989557,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989560,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989573,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989574,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651841,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651833,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651832,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989582,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990097,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989812,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990098,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990099,0)
endfunction
function N0w takes playerunitevent D0w,code H0w,code J0w,code K0w returns nothing
local integer L0w=GetHandleId(D0w)
local integer X0w
local filterfunc C0w
local trigger V0w
local player B0w
if eo[L0w]==null then
set eo[L0w]=CreateTrigger()
set X0w=bj_MAX_PLAYER_SLOTS-1
loop
exitwhen X0w<0
set V0w=eo[L0w]
set B0w=ro[X0w]
if H0w!=null then
set C0w=Filter(H0w)
else
set C0w=null
endif
call TriggerRegisterPlayerUnitEvent(V0w,B0w,D0w,C0w)
set X0w=X0w-1
endloop
endif
if J0w!=null then
call TriggerAddCondition(eo[L0w],Filter(J0w))
endif
if K0w!=null then
call TriggerAddAction(eo[L0w],K0w)
endif
set C0w=null
set V0w=null
set B0w=null
endfunction
function Acw takes integer Ucw returns nothing
local integer Icw
local trigger Pcw
call TriggerAddAction(mS,Mf)
call TriggerAddAction(QS,wR)
call TriggerAddAction(WS,uR)
set Ucw=0
set Icw=bj_MAX_PLAYERS-1
loop
exitwhen Ucw>Icw
call TriggerRegisterPlayerEvent(QS,ro[Ucw],EVENT_PLAYER_LEAVE)
set Pcw=WS
call TriggerRegisterPlayerEvent(Pcw,ro[Ucw],EVENT_PLAYER_ARROW_DOWN_DOWN)
call TriggerRegisterPlayerEvent(Pcw,ro[Ucw],EVENT_PLAYER_ARROW_DOWN_UP)
call TriggerRegisterPlayerEvent(Pcw,ro[Ucw],EVENT_PLAYER_ARROW_UP_DOWN)
call TriggerRegisterPlayerEvent(Pcw,ro[Ucw],EVENT_PLAYER_ARROW_UP_UP)
call TriggerRegisterPlayerEvent(Pcw,ro[Ucw],EVENT_PLAYER_ARROW_LEFT_DOWN)
call TriggerRegisterPlayerEvent(Pcw,ro[Ucw],EVENT_PLAYER_ARROW_LEFT_UP)
call TriggerRegisterPlayerEvent(Pcw,ro[Ucw],EVENT_PLAYER_ARROW_RIGHT_DOWN)
call TriggerRegisterPlayerEvent(Pcw,ro[Ucw],EVENT_PLAYER_ARROW_RIGHT_UP)
call TriggerRegisterPlayerEvent(Pcw,ro[Ucw],EVENT_PLAYER_END_CINEMATIC)
call TriggerRegisterPlayerChatEvent(Pcw,ro[Ucw],"",false)
set Ucw=Ucw+1
endloop
call N0w(EVENT_PLAYER_UNIT_SPELL_EFFECT,null,rR,null)
set Pcw=null
endfunction
function d9 takes multiboard y9,integer p9,integer e9,real q9,string a9 returns nothing
local multiboarditem n9=MultiboardGetItem(y9,e9,p9)
call MultiboardSetItemWidth(n9,q9)
call MultiboardSetItemValue(n9,a9)
set n9=null
endfunction
function gdw takes integer ndw,integer ddw,string fdw returns integer
local integer Rdw
local integer Tdw
local integer Ydw
local integer Gdw
set Kb[Jb]=fdw
set Jb=Jb+1
if tl[ndw]==0 then
if ndw==0 then
call S4("Nullpointer exception when calling LinkedList.get","when calling error in LinkedList, line 50")
else
call S4("Called LinkedList.get on invalid object.","when calling error in LinkedList, line 50")
endif
endif
set Kb[Jb]="when calling get in LinkedList, line 50"
set Jb=Jb+1
set Kb[Jb]="when calling getEntry in LinkedList, line 51"
set Jb=Jb+1
if tl[ndw]==0 then
if ndw==0 then
call S4("Nullpointer exception when calling LinkedList.getEntry","when calling error in LinkedList, line 366")
else
call S4("Called LinkedList.getEntry on invalid object.","when calling error in LinkedList, line 366")
endif
endif
set Tdw=gb[ndw]
set Ydw=0
set Gdw=ddw
loop
exitwhen Ydw>Gdw
set Tdw=fb[Tdw]
set Ydw=Ydw+1
endloop
set Jb=Jb-1
set Rdw=nb[Tdw]
set Jb=Jb-1-1
return Rdw
endfunction
function T6 takes string l6 returns multiboard
local multiboard b6
local integer y6
local integer p6
local integer e6
local integer q6
local integer a6
local integer n6
local integer d6
local integer f6
local real R6
set Kb[Jb]=l6
set Jb=Jb+1
set b6=CreateMultiboardBJ(6,10,"Income: 2:00")
call MultiboardMinimize(b6,true)
call MultiboardSetItemsStyle(b6,true,false)
set y6=0
set p6=23
loop
exitwhen y6>p6
if so==ro[y6]then
call MultiboardDisplay(b6,false)
endif
set y6=y6+1
endloop
set e6=0
set q6=9
loop
exitwhen e6>q6
set a6=0
set n6=5
loop
exitwhen a6>n6
set R6=gdw(Pc[e6],a6,"when calling get in MultiboardCityUpdate, line 14")/1000.
set d6=gdw(Cc[e6],a6,"when calling get in MultiboardCityUpdate, line 14")
set Kb[Jb]="when calling stringFromIndex in MultiboardCityUpdate, line 14"
set Jb=Jb+1
set f6=Ao
set Kb[Jb]="when calling loadString in TypeCasting, line 35"
set Jb=Jb+1
if HO[f6]==0 then
if f6==0 then
call S4("Nullpointer exception when calling Table.loadString","when calling error in Table, line 57")
else
call S4("Called Table.loadString on invalid object.","when calling error in Table, line 57")
endif
endif
set l6=LoadStr(Zo,f6,d6)
set Jb=Jb-1-1
call d9(b6,a6,e6,R6,l6)
set a6=a6+1
endloop
set e6=e6+1
endloop
set Jb=Jb-1
set lR=b6
set b6=null
return lR
endfunction
function Lyw takes integer Uyw,string Iyw returns nothing
local integer Pyw
local integer Ayw
local integer Dyw
local integer Hyw
local boolean Jyw
local multiboard Kyw
set Kb[Jb]=Iyw
set Jb=Jb+1
set Uyw=0
set Pyw=23
loop
exitwhen Uyw>Pyw
set Hyw=uo[Uyw]
set Iyw="when calling isInGame in MultiboardCityUpdate, line 20"
set Kb[Jb]="when calling isInGame in MultiboardCityUpdate, line 20"
set Jb=Jb+1
if ll[Hyw]==0 then
if Hyw==0 then
call S4("Nullpointer exception when calling PlayerStats.isInGame","when calling error in PlayerStats, line 42")
else
call S4("Called PlayerStats.isInGame on invalid object.","when calling error in PlayerStats, line 42")
endif
endif
set Jyw=Ub[Hyw]
set Jb=Jb-1
if Jyw then
set Vc[Uyw]=T6("when calling createCoEMultiboard in MultiboardCityUpdate, line 21")
endif
set Uyw=Uyw+1
endloop
set Ayw=0
set Dyw=23
loop
exitwhen Ayw>Dyw
set Kyw=Vc[Ayw]
if so==ro[Ayw]then
call MultiboardDisplay(Kyw,true)
endif
set Ayw=Ayw+1
endloop
set Jb=Jb-1
set Kyw=null
endfunction
function Zbw takes integer vbw,integer mbw,integer Qbw,string Wbw returns integer
local integer Ebw
set Kb[Jb]=Wbw
set Jb=Jb+1
set Kb[Jb]="when calling alloc_LLEntry in LinkedList, line 401"
set Jb=Jb+1
if XO==0 then
if CO<32768 then
set CO=CO+1
set Ebw=CO
set VO[Ebw]=698
else
call S4("Out of memory: Could not create LLEntry.","when calling error in LinkedList, line 396")
set Ebw=0
endif
else
set XO=XO-1
set Ebw=LO[XO]
set VO[Ebw]=698
endif
set Jb=Jb-1
set nb[Ebw]=vbw
set db[Ebw]=mbw
set fb[Ebw]=Qbw
set Jb=Jb-1
return Ebw
endfunction
function Ddw takes integer Udw,integer Idw,string Pdw returns nothing
local integer Adw
set Kb[Jb]=Pdw
set Jb=Jb+1
if tl[Udw]==0 then
if Udw==0 then
call S4("Nullpointer exception when calling LinkedList.add","when calling error in LinkedList, line 37")
else
call S4("Called LinkedList.add on invalid object.","when calling error in LinkedList, line 37")
endif
endif
set Kb[Jb]="when calling add in LinkedList, line 37"
set Jb=Jb+1
set Adw=Zbw(Idw,db[gb[Udw]],gb[Udw],"when calling new_LLEntry in LinkedList, line 39")
set fb[db[gb[Udw]]]=Adw
set db[gb[Udw]]=Adw
set hb[Udw]=hb[Udw]+1
set Jb=Jb-1-1
endfunction
function Bbw takes integer Xbw,integer Cbw returns boolean
local integer Vbw=fb[gb[Xbw]]
loop
exitwhen Vbw==gb[Xbw]
if nb[Vbw]==Cbw then
return true
endif
set Vbw=fb[Vbw]
endloop
return false
endfunction
function udw takes integer Bnw,integer Nnw,string Mnw returns integer
local integer wdw
set Kb[Jb]=Mnw
set Jb=Jb+1
if HO[Bnw]==0 then
if Bnw==0 then
call S4("Nullpointer exception when calling HashMap.get","when calling error in HashMap, line 23")
else
call S4("Called HashMap.get on invalid object.","when calling error in HashMap, line 23")
endif
endif
set Kb[Jb]="when calling get in HashMap, line 23"
set Jb=Jb+1
set Kb[Jb]="when calling loadInt in HashMap, line 24"
set Jb=Jb+1
if HO[Bnw]==0 then
if Bnw==0 then
call S4("Nullpointer exception when calling Table.loadInt","when calling error in Table, line 39")
else
call S4("Called Table.loadInt on invalid object.","when calling error in Table, line 39")
endif
endif
set wdw=LoadInteger(Zo,Bnw,Nnw)
set Jb=Jb-1-1-1
return wdw
endfunction
function How takes integer xow,unit vow,string mow returns nothing
local integer Qow
local integer Wow
local boolean Eow
local player Zow
local player Uow
local boolean Iow
local boolean Aow
local integer Dow
set Kb[Jb]=mow
set Jb=Jb+1
set Qow=Lo
set Wow=GetUnitTypeId(vow)
set Kb[Jb]="when calling has in Economy, line 39"
set Jb=Jb+1
if tl[Qow]==0 then
if Qow==0 then
call S4("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call S4("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set Eow=Bbw(Qow,Wow)
set Jb=Jb-1
if Eow then
set Zow=ro[GetPlayerId(GetOwningPlayer(vow))]
if GetPlayerSlotState(Zow)==PLAYER_SLOT_STATE_PLAYING then
set Iow=GetPlayerController(Zow)==MAP_CONTROL_USER
else
set Iow=false
endif
set Aow=Iow
else
set Aow=false
endif
if Aow then
set Uow=GetOwningPlayer(vow)
set xow=tc[GetPlayerId(GetOwningPlayer(vow))]
set Dow=Xo
set tc[GetPlayerId(Uow)]=xow+udw(Dow,GetUnitTypeId(vow),"when calling get in Economy, line 40")
endif
set Jb=Jb-1
set Zow=null
set Uow=null
endfunction
function Yyw takes integer qyw,unit ayw,string nyw returns nothing
local integer dyw
local integer fyw
local boolean Ryw
local boolean Tyw
set Kb[Jb]=nyw
set Jb=Jb+1
if GetOwningPlayer(ayw)==Fb[qyw]then
set dyw=Vo
set fyw=GetUnitTypeId(ayw)
set Kb[Jb]="when calling has in MassControl, line 28"
set Jb=Jb+1
if tl[dyw]==0 then
if dyw==0 then
call S4("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call S4("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set Ryw=Bbw(dyw,fyw)
set Jb=Jb-1
set Tyw=not Ryw
else
set Tyw=false
endif
if Tyw and ayw!=kb[qyw] and(not IsUnitType(ayw,UNIT_TYPE_STRUCTURE)) then
call Ddw(jb[qyw],GetHandleId(ayw),"when calling add in MassControl, line 29")
endif
set Jb=Jb-1
endfunction
function h0w takes integer g0w returns real
if g0w==1747988785 then
return 10.0
elseif g0w==1747989075 then
return 10.0
elseif g0w==1747990102 then
return 10.0
elseif g0w==1747989839 then
return 10.0
elseif g0w==1747988568 then
return 5.0
elseif g0w==1747990341 then
return 5.0
elseif g0w==1747988789 then
return 15.0
elseif g0w==1747990103 then
return 15.0
elseif g0w==1747990064 then
return 15.0
elseif g0w==1747989846 then
return 15.0
else
return 0.0
endif
endfunction
function icw takes integer rcw,unit scw returns nothing
local boolean tcw
if IsUnitType(scw,UNIT_TYPE_STRUCTURE) then
set tcw=GetOwningPlayer(scw)==ro[ml[Ll[rcw]]]
else
set tcw=false
endif
if tcw then
set Il[Ll[rcw]]=Il[Ll[rcw]]+h0w(GetUnitTypeId(scw))
endif
endfunction
function ucw takes integer XSw,unit CSw,string VSw returns nothing
local integer BSw
local integer NSw
local boolean MSw
local boolean wcw
set Kb[Jb]=VSw
set Jb=Jb+1
set BSw=Vo
set NSw=GetUnitTypeId(CSw)
set Kb[Jb]="when calling has in City, line 301"
set Jb=Jb+1
if tl[BSw]==0 then
if BSw==0 then
call S4("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call S4("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set MSw=Bbw(BSw,NSw)
set Jb=Jb-1
if not MSw then
set wcw=GetOwningPlayer(CSw)==ro[ml[Kl[XSw]]]
else
set wcw=false
endif
if wcw then
set Il[Kl[XSw]]=Il[Kl[XSw]]+0.5
endif
set Jb=Jb-1
endfunction
function Caw takes integer Kaw,unit Law,string Xaw returns nothing
set Kb[Jb]=Xaw
set Jb=Jb+1
if fO[Kaw]==0 then
if Kaw==0 then
call S4("Nullpointer exception when calling ForGroupCallback.callback","when calling error in ClosureForGroups, line 4")
else
call S4("Called ForGroupCallback.callback on invalid object.","when calling error in ClosureForGroups, line 4")
endif
endif
if fO[Kaw]<=685 then
if fO[Kaw]<=684 then
if fO[Kaw]<=683 then
call ucw(Kaw,Law,"when calling City_City_callback_line300 in ClosureForGroups, line 4")
else
call icw(Kaw,Law)
endif
else
call How(Kaw,Law,"when calling Economy_callback_line38 in ClosureForGroups, line 4")
endif
elseif fO[Kaw]<=687 then
if fO[Kaw]<=686 then
set Kb[Jb]="when calling LinkedList_callback_line514 in ClosureForGroups, line 4"
set Jb=Jb+1
call Ddw(ab[Kaw],GetHandleId(Law),"when calling add in LinkedList, line 515")
set Jb=Jb-1
else
call Yyw(Kaw,Law,"when calling MassControl_callback_line27 in ClosureForGroups, line 4")
endif
else
call RemoveUnit(Law)
endif
set Jb=Jb-1
endfunction
function Jaw takes integer Daw,string Haw returns nothing
set Kb[Jb]=Haw
set Jb=Jb+1
if fO[Daw]==0 then
if Daw==0 then
call S4("Nullpointer exception when calling ForGroupCallback.ForGroupCallback","when calling error in ClosureForGroups, line 3")
else
call S4("Called ForGroupCallback.ForGroupCallback on invalid object.","when calling error in ClosureForGroups, line 3")
endif
endif
set Kb[Jb]="when calling destroyForGroupCallback in ClosureForGroups, line 3"
set Jb=Jb+1
set Kb[Jb]="when calling dealloc_ForGroupCallback in ClosureForGroups, line 3"
set Jb=Jb+1
if fO[Daw]==0 then
call S4("Double free: object of type ForGroupCallback","when calling error in ClosureForGroups, line 3")
else
set aO[nO]=Daw
set nO=nO+1
set fO[Daw]=0
endif
set Jb=Jb-1-1-1
endfunction
function CB takes group HB,integer JB,string KB returns nothing
local group LB
local unit XB
set Kb[Jb]=KB
set Jb=Jb+1
set LB=HB
loop
exitwhen FirstOfGroup(LB)==null
set XB=FirstOfGroup(LB)
call GroupRemoveUnit(LB,XB)
call Caw(JB,XB,"when calling callback in ClosureForGroups, line 40")
endloop
call Jaw(JB,"when calling dispatch_ForGroupCallback_destroyForGroupCallback in ClosureForGroups, line 41")
set Jb=Jb-1
set LB=null
set XB=null
endfunction
function R0w takes string n0w returns nothing
local group d0w
local integer f0w
set Kb[Jb]=n0w
set Jb=Jb+1
call RemoveUnit(bo)
set d0w=lo
set Kb[Jb]="when calling alloc_Preloader_ForGroupCallback_line45 in Preloader, line 45"
set Jb=Jb+1
if nO==0 then
if dO<32768 then
set dO=dO+1
set f0w=dO
set fO[f0w]=688
else
call S4("Out of memory: Could not create Preloader_ForGroupCallback_line45.","when calling error in Preloader, line 45")
set f0w=0
endif
else
set nO=nO-1
set f0w=aO[nO]
set fO[f0w]=688
endif
set Jb=Jb-1
call CB(d0w,f0w,"when calling forEachFrom in Preloader, line 45")
call DestroyGroup(lo)
set lo=null
set Jb=Jb-1
set d0w=null
endfunction
function Ssw takes string isw returns nothing
endfunction
function Tpw takes integer fpw returns nothing
local group Rpw
call TriggerRegisterEnterRegion(CreateTrigger(),Qc,Filter(tR))
call N0w(EVENT_PLAYER_UNIT_ISSUED_ORDER,null,iR,null)
call GroupEnumUnitsInRect(Nc,mc,null)
call ForGroup(Nc,SR)
set Rpw=Nc
call GroupClear(Rpw)
call DestroyGroup(Rpw)
set Rpw=null
endfunction
function odw takes integer Sdw,string cdw returns nothing
set Kb[Jb]=cdw
set Jb=Jb+1
if VO[Sdw]==0 then
if Sdw==0 then
call S4("Nullpointer exception when calling LLEntry.LLEntry","when calling error in LinkedList, line 396")
else
call S4("Called LLEntry.LLEntry on invalid object.","when calling error in LinkedList, line 396")
endif
endif
set Kb[Jb]="when calling destroyLLEntry in LinkedList, line 396"
set Jb=Jb+1
set Kb[Jb]="when calling dealloc_LLEntry in LinkedList, line 396"
set Jb=Jb+1
if VO[Sdw]==0 then
call S4("Double free: object of type LLEntry","when calling error in LinkedList, line 396")
else
set LO[XO]=Sdw
set XO=XO+1
set VO[Sdw]=0
endif
set Jb=Jb-1-1-1
endfunction
function jdw takes integer hdw,integer Fdw,string kdw returns nothing
set Kb[Jb]=kdw
set Jb=Jb+1
if tl[hdw]==0 then
if hdw==0 then
call S4("Nullpointer exception when calling LinkedList.removeEntry","when calling error in LinkedList, line 373")
else
call S4("Called LinkedList.removeEntry on invalid object.","when calling error in LinkedList, line 373")
endif
endif
set Kb[Jb]="when calling removeEntry in LinkedList, line 373"
set Jb=Jb+1
set fb[db[Fdw]]=fb[Fdw]
set db[fb[Fdw]]=db[Fdw]
call odw(Fdw,"when calling dispatch_LLEntry_destroyLLEntry in LinkedList, line 376")
set hb[hdw]=hb[hdw]-1
set Jb=Jb-1-1
endfunction
function ryw takes integer Nbw,integer Mbw,string wyw returns nothing
local integer uyw
set Kb[Jb]=wyw
set Jb=Jb+1
set uyw=fb[gb[Nbw]]
loop
exitwhen uyw==gb[Nbw]
if nb[uyw]==Mbw then
call jdw(Nbw,uyw,"when calling removeEntry in LinkedList, line 126")
set Jb=Jb-1
return
endif
set uyw=fb[uyw]
endloop
set Jb=Jb-1
endfunction
function xaw takes integer Faw,integer kaw,string jaw returns nothing
set Kb[Jb]=jaw
set Jb=Jb+1
if qO[Faw]==0 then
if Faw==0 then
call S4("Nullpointer exception when calling City.getCityModifierOnRemove","when calling error in City, line 411")
else
call S4("Called City.getCityModifierOnRemove on invalid object.","when calling error in City, line 411")
endif
endif
set Kb[Jb]="when calling getCityModifierOnRemove in City, line 411"
set Jb=Jb+1
if Rl[udw(RS,kaw,"when calling get in City, line 412")]then
set Pl[Faw]=Pl[Faw]-fl[udw(RS,kaw,"when calling get in City, line 413")]
endif
set Al[Faw]=Al[Faw]-gl[udw(RS,kaw,"when calling get in City, line 414")]
set Jb=Jb-1-1
endfunction
function iSw takes integer Miw,integer wSw,string uSw returns boolean
local integer rSw
local boolean sSw
local integer tSw
set Kb[Jb]=uSw
set Jb=Jb+1
set rSw=Jl[Miw]
set Kb[Jb]="when calling has in City, line 366"
set Jb=Jb+1
if tl[rSw]==0 then
if rSw==0 then
call S4("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call S4("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set sSw=Bbw(rSw,wSw)
set Jb=Jb-1
if not sSw then
set Jb=Jb-1
return false
endif
set tSw=Jl[Miw]
set Kb[Jb]="when calling remove in City, line 368"
set Jb=Jb+1
if tl[tSw]==0 then
if tSw==0 then
call S4("Nullpointer exception when calling LinkedList.remove","when calling error in LinkedList, line 122")
else
call S4("Called LinkedList.remove on invalid object.","when calling error in LinkedList, line 122")
endif
endif
call ryw(tSw,wSw,"when calling remove in LinkedList, line 122")
set Jb=Jb-1
call xaw(Miw,wSw,"when calling getCityModifierOnRemove in City, line 370")
set Jb=Jb-1
return true
endfunction
function adw takes integer ydw,string pdw returns nothing
local integer edw
local integer qdw
set Kb[Jb]=pdw
set Jb=Jb+1
if wl[ydw]==0 then
if ydw==0 then
call S4("Nullpointer exception when calling LLIterator.reset","when calling error in LinkedList, line 421")
else
call S4("Called LLIterator.reset on invalid object.","when calling error in LinkedList, line 421")
endif
endif
set Kb[Jb]="when calling reset in LinkedList, line 421"
set Jb=Jb+1
set edw=Yb[ydw]
set Kb[Jb]="when calling getDummy in LinkedList, line 422"
set Jb=Jb+1
if tl[edw]==0 then
if edw==0 then
call S4("Nullpointer exception when calling LinkedList.getDummy","when calling error in LinkedList, line 362")
else
call S4("Called LinkedList.getDummy on invalid object.","when calling error in LinkedList, line 362")
endif
endif
set qdw=gb[edw]
set Jb=Jb-1
set Rb[ydw]=qdw
set Tb[ydw]=Rb[ydw]
set Jb=Jb-1-1
endfunction
function Abw takes integer Ubw,string Ibw returns integer
local integer Pbw
set Kb[Jb]=Ibw
set Jb=Jb+1
set Kb[Jb]="when calling alloc_LLIterator in LinkedList, line 412"
set Jb=Jb+1
if NO==0 then
if MO<32768 then
set MO=MO+1
set Pbw=MO
set wl[Pbw]=699
else
call S4("Out of memory: Could not create LLIterator.","when calling error in LinkedList, line 406")
set Pbw=0
endif
else
set NO=NO-1
set Pbw=BO[NO]
set wl[Pbw]=699
endif
set Jb=Jb-1
set Kb[Jb]="when calling construct_LLIterator in LinkedList, line 412"
set Jb=Jb+1
set Gb[Pbw]=true
set Yb[Pbw]=Ubw
call adw(Pbw,"when calling reset in LinkedList, line 414")
set Jb=Jb-1-1
return Pbw
endfunction
function L5 takes player A5,string D5 returns string
local integer H5
local integer J5
local integer K5
set Kb[Jb]=D5
set Jb=Jb+1
set J5=uo[GetPlayerId(A5)]
set Kb[Jb]="when calling getForceId in Messages, line 53"
set Jb=Jb+1
if ll[J5]==0 then
if J5==0 then
call S4("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 122")
else
call S4("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 122")
endif
endif
set K5=Eb[J5]
set Jb=Jb-1
set H5=GetRandomInt(0,2)
if K5==0 then
set D5=vo[H5]
elseif K5==1 then
set D5=mo[H5]
elseif K5==2 then
set D5=Qo[H5]
elseif K5==3 then
set D5=Wo[H5]
else
set D5="Attention!"
endif
set Jb=Jb-1
return "|cffffa600"+D5+"|r"
endfunction
function Taw takes integer paw,string eaw returns string
local integer qaw
local integer aaw
local integer naw
local integer daw
local integer faw
local integer Raw
set Kb[Jb]=eaw
set Jb=Jb+1
if qO[paw]==0 then
if paw==0 then
call S4("Nullpointer exception when calling City.getCityNameColored","when calling error in City, line 167")
else
call S4("Called City.getCityNameColored on invalid object.","when calling error in City, line 167")
endif
endif
set daw=pc[vl[paw]]
set faw=ec[vl[paw]]
set Raw=qc[vl[paw]]
set qaw=daw/16
set aaw=faw/16
set naw=Raw/16
set eaw="|cff"+wc[qaw]+wc[daw-qaw*16]+wc[aaw]+wc[faw-aaw*16]+wc[naw]+wc[Raw-naw*16]+jl[paw]+"|r"
set Jb=Jb-1
return eaw
endfunction
function bdw takes integer Odw,string ldw returns nothing
set Kb[Jb]=ldw
set Jb=Jb+1
if wl[Odw]==0 then
if Odw==0 then
call S4("Nullpointer exception when calling LLIterator.LLIterator","when calling error in LinkedList, line 406")
else
call S4("Called LLIterator.LLIterator on invalid object.","when calling error in LinkedList, line 406")
endif
endif
set Kb[Jb]="when calling destroyLLIterator in LinkedList, line 406"
set Jb=Jb+1
set Kb[Jb]="when calling dealloc_LLIterator in LinkedList, line 406"
set Jb=Jb+1
if wl[Odw]==0 then
call S4("Double free: object of type LLIterator","when calling error in LinkedList, line 406")
else
set BO[NO]=Odw
set NO=NO+1
set wl[Odw]=0
endif
set Jb=Jb-1-1-1
endfunction
function iww takes timer www,integer uww,string rww returns nothing
local integer sww
local integer tww
set Kb[Jb]=rww
set Jb=Jb+1
set sww=Po
set tww=GetHandleId(www)
set Kb[Jb]="when calling saveInt in TimerUtils, line 17"
set Jb=Jb+1
if HO[sww]==0 then
if sww==0 then
call S4("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call S4("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Zo,sww,tww,uww)
set Jb=Jb-1-1
endfunction
function eww takes string yww returns timer
local timer pww
set Kb[Jb]=yww
set Jb=Jb+1
if Io>0 then
set Io=Io-1
call iww(Uo[Io],0,"when calling setData in TimerUtils, line 29")
set Jb=Jb-1
set pww=null
return Uo[Io]
else
set pww=CreateTimer()
call iww(pww,0,"when calling setData in TimerUtils, line 32")
set Jb=Jb-1
set bR=pww
set pww=null
return bR
endif
endfunction
function haw takes integer Yaw,integer Gaw,string gaw returns nothing
set Kb[Jb]=gaw
set Jb=Jb+1
if qO[Yaw]==0 then
if Yaw==0 then
call S4("Nullpointer exception when calling City.getCityModifierOnAdd","when calling error in City, line 406")
else
call S4("Called City.getCityModifierOnAdd on invalid object.","when calling error in City, line 406")
endif
endif
set Kb[Jb]="when calling getCityModifierOnAdd in City, line 406"
set Jb=Jb+1
set Pl[Yaw]=Pl[Yaw]+fl[udw(RS,Gaw,"when calling get in City, line 407")]
set Al[Yaw]=Al[Yaw]+gl[udw(RS,Gaw,"when calling get in City, line 408")]
set Jb=Jb-1-1
endfunction
function wow takes integer Vcw,timer Bcw,real Ncw,string Mcw returns nothing
set Kb[Jb]=Mcw
set Jb=Jb+1
call iww(Bcw,Vcw,"when calling setData in ClosureTimers, line 113")
call TimerStart(Bcw,Ncw,false,sR)
set ib[Vcw]=Bcw
set Jb=Jb-1
endfunction
function anw takes integer ynw,timer pnw,real enw,string qnw returns nothing
set Kb[Jb]=qnw
set Jb=Jb+1
if GO[ynw]==0 then
if ynw==0 then
call S4("Nullpointer exception when calling CallbackSingle.start","when calling error in ClosureTimers, line 111")
else
call S4("Called CallbackSingle.start on invalid object.","when calling error in ClosureTimers, line 111")
endif
endif
call wow(ynw,pnw,enw,"when calling start in ClosureTimers, line 111")
set Jb=Jb-1
endfunction
function yN takes timer oN,real ON,integer lN,string bN returns integer
set Kb[Jb]=bN
set Jb=Jb+1
call anw(lN,oN,ON,"when calling start in ClosureTimers, line 16")
set Jb=Jb-1
return lN
endfunction
function htw takes integer dtw,integer ftw,string Rtw returns boolean
local real Ttw
local integer Ytw
local boolean Gtw
local integer gtw
set Kb[Jb]=Rtw
set Jb=Jb+1
set Ytw=Jl[dtw]
set Kb[Jb]="when calling has in City, line 356"
set Jb=Jb+1
if tl[Ytw]==0 then
if Ytw==0 then
call S4("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call S4("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set Gtw=Bbw(Ytw,ftw)
set Jb=Jb-1
if Gtw then
set Jb=Jb-1
return false
endif
call Ddw(Jl[dtw],ftw,"when calling add in City, line 358")
call haw(dtw,ftw,"when calling getCityModifierOnAdd in City, line 359")
set Ttw=dl[udw(RS,ftw,"when calling get in City, line 361")]
set Kb[Jb]="when calling alloc_City_City_CallbackSingle_line361 in City, line 361"
set Jb=Jb+1
if TO==0 then
if YO<32768 then
set YO=YO+1
set gtw=YO
set GO[gtw]=639
else
call S4("Out of memory: Could not create City_City_CallbackSingle_line361.","when calling error in City, line 361")
set gtw=0
endif
else
set TO=TO-1
set gtw=RO[TO]
set GO[gtw]=639
endif
set Jb=Jb-1
set Xl[gtw]=dtw
set Cl[gtw]=ftw
set Kb[Jb]="when calling doAfter in City, line 361"
set Jb=Jb+1
call yN(eww("when calling getTimer in ClosureTimers, line 27"),Ttw,gtw,"when calling doAfter in ClosureTimers, line 27")
set Jb=Jb-1-1
return true
endfunction
function Gww takes integer sww,string tww returns nothing
local unit iww_2
local integer Sww
local integer cww
local integer oww
local integer Oww
local real lww
local integer bww
local unit yww
local player pww
local integer eww_2
local player qww
local integer aww
local integer nww
local integer dww
local integer fww
local integer Rww
local integer Tww
local boolean Yww
set Kb[Jb]=tww
set Jb=Jb+1
if sww<0 or sww>=TS then
set Jb=Jb-1
set iww_2=null
set yww=null
set pww=null
set qww=null
return
endif
if xc-ao[sww]<=60 then
set Jb=Jb-1
set iww_2=null
set yww=null
set pww=null
set qww=null
return
endif
set Oww=xS[sww]
set Kb[Jb]="when calling getLastPublicOrder in Revolts, line 18"
set Jb=Jb+1
if qO[Oww]==0 then
if Oww==0 then
call S4("Nullpointer exception when calling City.getLastPublicOrder","when calling error in City, line 319")
else
call S4("Called City.getLastPublicOrder on invalid object.","when calling error in City, line 319")
endif
endif
set lww=Il[Oww]
set Jb=Jb-1
set bww=xS[sww]
set Kb[Jb]="when calling getCityUnit in Revolts, line 19"
set Jb=Jb+1
if qO[bww]==0 then
if bww==0 then
call S4("Nullpointer exception when calling City.getCityUnit","when calling error in City, line 176")
else
call S4("Called City.getCityUnit on invalid object.","when calling error in City, line 176")
endif
endif
set yww=kl[bww]
set Jb=Jb-1
set iww_2=yww
set pww=GetOwningPlayer(yww)
if GetPlayerSlotState(pww)==PLAYER_SLOT_STATE_PLAYING then
set Yww=GetPlayerController(pww)==MAP_CONTROL_USER
else
set Yww=false
endif
if not Yww then
set Jb=Jb-1
set iww_2=null
set yww=null
set pww=null
set qww=null
return
endif
if lww<50.0 then
set ao[sww]=xc
set eww_2=xS[sww]
set Kb[Jb]="when calling addModifier in Revolts, line 24"
set Jb=Jb+1
if qO[eww_2]==0 then
if eww_2==0 then
call S4("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call S4("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call htw(eww_2,1,"when calling addModifier in City, line 355")
set Jb=Jb-1
set tww="A violent mob has appeared near the gates of "+Taw(xS[sww],"when calling getCityNameColored in Revolts, line 25")+"!"
set qww=GetOwningPlayer(yww)
set Kb[Jb]="when calling attentionToPlayer in Revolts, line 25"
set Jb=Jb+1
call DisplayTimedTextToPlayer(qww,0.,0.,10.0,L5(qww,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(qww,0.,0.,10.0,tww)
set Jb=Jb-1
if lww>=30.0 then
set aww=wO[0]
set Kb[Jb]="when calling iterator in Revolts, line 28"
set Jb=Jb+1
set nww=Abw(aww,"when calling new_LLIterator in LinkedList, line 165")
set Jb=Jb-1
set Sww=nww
loop
exitwhen fb[Tb[Sww]]==Rb[Sww]
set Tb[Sww]=fb[Tb[Sww]]
call CreateUnit(ro[PLAYER_NEUTRAL_AGGRESSIVE],nb[Tb[Sww]],GetUnitX(iww_2),GetUnitY(iww_2),0.)
endloop
set Kb[Jb]="when calling close in Revolts, line 28"
set Jb=Jb+1
if Gb[Sww]then
call bdw(Sww,"when calling dispatch_LLIterator_destroyLLIterator in LinkedList, line 450")
endif
set Jb=Jb-1
elseif lww>=15.0 then
set dww=wO[1]
set Kb[Jb]="when calling iterator in Revolts, line 32"
set Jb=Jb+1
set fww=Abw(dww,"when calling new_LLIterator in LinkedList, line 165")
set Jb=Jb-1
set cww=fww
loop
exitwhen fb[Tb[cww]]==Rb[cww]
set Tb[cww]=fb[Tb[cww]]
call CreateUnit(ro[PLAYER_NEUTRAL_AGGRESSIVE],nb[Tb[cww]],GetUnitX(iww_2),GetUnitY(iww_2),0.)
endloop
set Kb[Jb]="when calling close in Revolts, line 32"
set Jb=Jb+1
if Gb[cww]then
call bdw(cww,"when calling dispatch_LLIterator_destroyLLIterator in LinkedList, line 450")
endif
set Jb=Jb-1
else
set Rww=wO[2]
set Kb[Jb]="when calling iterator in Revolts, line 36"
set Jb=Jb+1
set Tww=Abw(Rww,"when calling new_LLIterator in LinkedList, line 165")
set Jb=Jb-1
set oww=Tww
loop
exitwhen fb[Tb[oww]]==Rb[oww]
set Tb[oww]=fb[Tb[oww]]
call CreateUnit(ro[PLAYER_NEUTRAL_AGGRESSIVE],nb[Tb[oww]],GetUnitX(iww_2),GetUnitY(iww_2),0.)
endloop
set Kb[Jb]="when calling close in Revolts, line 36"
set Jb=Jb+1
if Gb[oww]then
call bdw(oww,"when calling dispatch_LLIterator_destroyLLIterator in LinkedList, line 450")
endif
set Jb=Jb-1
endif
endif
set Jb=Jb-1
set iww_2=null
set yww=null
set pww=null
set qww=null
endfunction
function SN takes real uN,real rN,real sN,integer tN,string iN returns nothing
set Kb[Jb]=iN
set Jb=Jb+1
set JS[KS]=tN
set KS=KS+1
set XS=0
set LS=2147483647
call GroupEnumUnitsInRange(HS,uN,rN,sN,CS)
set Kb[Jb]="when calling popCallback in ClosureForGroups, line 98"
set Jb=Jb+1
call GroupClear(HS)
set KS=KS-1
call Jaw(JS[KS],"when calling dispatch_ForGroupCallback_destroyForGroupCallback in ClosureForGroups, line 30")
set Jb=Jb-1-1
endfunction
function Piw takes integer xiw,string viw returns real
local integer miw
local integer Qiw
local boolean Wiw
local real Eiw
local real Ziw
local real Uiw
local real Iiw
set Kb[Jb]=viw
set Jb=Jb+1
set Il[xiw]=100.0-Ul[xiw]*1000.-SquareRoot(El[xiw]*1.)/17.+Pl[xiw]-El[xiw]*1./1000*kS[Dl[xiw]]
set Eiw=Ql[xiw]
set Ziw=Wl[xiw]
set Kb[Jb]="when calling alloc_City_City_ForGroupCallback_line300 in City, line 300"
set Jb=Jb+1
if nO==0 then
if dO<32768 then
set dO=dO+1
set miw=dO
set fO[miw]=683
else
call S4("Out of memory: Could not create City_City_ForGroupCallback_line300.","when calling error in City, line 300")
set miw=0
endif
else
set nO=nO-1
set miw=aO[nO]
set fO[miw]=683
endif
set Jb=Jb-1
set Kl[miw]=xiw
call SN(Eiw,Ziw,500,miw,"when calling forUnitsInRange in City, line 300")
set Uiw=Ql[xiw]
set Iiw=Wl[xiw]
set Kb[Jb]="when calling alloc_City_City_ForGroupCallback_line304 in City, line 304"
set Jb=Jb+1
if nO==0 then
if dO<32768 then
set dO=dO+1
set Qiw=dO
set fO[Qiw]=684
else
call S4("Out of memory: Could not create City_City_ForGroupCallback_line304.","when calling error in City, line 304")
set Qiw=0
endif
else
set nO=nO-1
set Qiw=aO[nO]
set fO[Qiw]=684
endif
set Jb=Jb-1
set Ll[Qiw]=xiw
call SN(Uiw,Iiw,1500.0,Qiw,"when calling forUnitsInRange in City, line 304")
if Il[xiw]<0.0 then
set Il[xiw]=0.0
endif
if Il[xiw]>100.0 then
set Il[xiw]=100.0
endif
if Il[xiw]<50.0 then
set Wiw=GetRandomReal(0.0,1.0)<=0.01
else
set Wiw=false
endif
if Wiw then
call Gww(xl[xiw],"when calling checkForRevolt in City, line 315")
endif
set Jb=Jb-1
return Il[xiw]
endfunction
function jiw takes integer Riw,string Tiw returns integer
local integer Yiw
local real Giw
local real giw
local real hiw
local real Fiw
local real kiw
set Kb[Jb]=Tiw
set Jb=Jb+1
set Yiw=0
set Yiw=0+udw(OS,GetUnitTypeId(kl[Riw]),"when calling get in City, line 270")
set kiw=El[Riw]*1.
set Kb[Jb]="when calling countPublicOrder in City, line 282"
set Jb=Jb+1
if qO[Riw]==0 then
if Riw==0 then
call S4("Nullpointer exception when calling City.countPublicOrder","when calling error in City, line 295")
else
call S4("Called City.countPublicOrder on invalid object.","when calling error in City, line 295")
endif
endif
set Fiw=Piw(Riw,"when calling countPublicOrder in City, line 295")
set Jb=Jb-1
set Giw=Fiw/100.
set giw=po
if 0.75>giw then
set hiw=0.75
else
set hiw=giw
endif
if Giw>hiw then
set hiw=Giw
endif
set Yiw=Yiw+R2I(SquareRoot(kiw*hiw)/6.)
set Yiw=R2I(Yiw*Al[Riw]*hS[Dl[Riw]])
set Jb=Jb-1
return Yiw
endfunction
function jow takes integer bow,string yow returns nothing
local integer pow
local integer eow
local integer qow
local integer aow
local integer now
local integer dow
local integer fow
local unit Row
local player Tow
local integer Yow
local unit Gow
local integer gow
local integer how
local boolean Fow
local integer kow
set Kb[Jb]=yow
set Jb=Jb+1
set pow=Ob[bow]*lb[bow]
set aow=TS-1
set now=(Ob[bow]+1)*lb[bow]-1
if aow<2147483647 then
set dow=aow
else
set dow=2147483647
endif
if now<dow then
set dow=now
endif
set eow=dow
loop
exitwhen pow>eow
set fow=xS[pow]
set Kb[Jb]="when calling getCityUnit in Economy, line 31"
set Jb=Jb+1
if qO[fow]==0 then
if fow==0 then
call S4("Nullpointer exception when calling City.getCityUnit","when calling error in City, line 176")
else
call S4("Called City.getCityUnit on invalid object.","when calling error in City, line 176")
endif
endif
set Row=kl[fow]
set Jb=Jb-1
set qow=GetPlayerId(GetOwningPlayer(Row))
set Yow=xS[pow]
set Kb[Jb]="when calling getCityUnit in Economy, line 32"
set Jb=Jb+1
if qO[Yow]==0 then
if Yow==0 then
call S4("Nullpointer exception when calling City.getCityUnit","when calling error in City, line 176")
else
call S4("Called City.getCityUnit on invalid object.","when calling error in City, line 176")
endif
endif
set Gow=kl[Yow]
set Jb=Jb-1
set Tow=GetOwningPlayer(Gow)
if GetPlayerSlotState(Tow)==PLAYER_SLOT_STATE_PLAYING then
set Fow=GetPlayerController(Tow)==MAP_CONTROL_USER
else
set Fow=false
endif
if Fow then
set kow=tc[qow]
set gow=xS[pow]
set yow="when calling countTax in Economy, line 33"
set Kb[Jb]="when calling countTax in Economy, line 33"
set Jb=Jb+1
if qO[gow]==0 then
if gow==0 then
call S4("Nullpointer exception when calling City.countTax","when calling error in City, line 266")
else
call S4("Called City.countTax on invalid object.","when calling error in City, line 266")
endif
endif
set how=jiw(gow,"when calling countTax in City, line 266")
set Jb=Jb-1
set tc[qow]=kow+how
endif
set pow=pow+1
endloop
set Jb=Jb-1
set Row=null
set Tow=null
set Gow=null
endfunction
function bnw takes integer Snw,string cnw returns nothing
local integer onw
local integer Onw
local integer lnw
set Kb[Jb]=cnw
set Jb=Jb+1
if GO[Snw]==0 then
if Snw==0 then
call S4("Nullpointer exception when calling CallbackSingle.call","when calling error in ClosureTimers, line 109")
else
call S4("Called CallbackSingle.call on invalid object.","when calling error in ClosureTimers, line 109")
endif
endif
if GO[Snw]<=645 then
if GO[Snw]<=642 then
if GO[Snw]<=640 then
if GO[Snw]<=639 then
set Kb[Jb]="when calling City_City_call_line361 in ClosureTimers, line 109"
set Jb=Jb+1
set onw=Xl[Snw]
set Onw=Cl[Snw]
set Kb[Jb]="when calling removeModifier in City, line 362"
set Jb=Jb+1
if qO[onw]==0 then
if onw==0 then
call S4("Nullpointer exception when calling City.removeModifier","when calling error in City, line 365")
else
call S4("Called City.removeModifier on invalid object.","when calling error in City, line 365")
endif
endif
call iSw(onw,Onw,"when calling removeModifier in City, line 365")
set Jb=Jb-1-1
else
call Acw(Snw)
endif
elseif GO[Snw]<=641 then
set VS=VS+50
else
set VS=VS*2
endif
elseif GO[Snw]<=644 then
if GO[Snw]<=643 then
set VS=VS/2
set lnw=VS
if lnw!=250 then
call Ssw("Expected <"+I2S(250)+">, Actual <"+I2S(lnw)+">")
endif
else
call jow(Snw,"when calling Economy_call_line29 in ClosureTimers, line 109")
endif
else
call IssueImmediateOrderById(eb[Snw],851976)
endif
elseif GO[Snw]<=649 then
if GO[Snw]<=647 then
if GO[Snw]<=646 then
call IssueImmediateOrderById(qb[Snw],851976)
else
call IssuePointOrderById(xb[Snw],vb[Snw],mb[Snw],Qb[Snw])
endif
elseif GO[Snw]<=648 then
call Lyw(Snw,"when calling MultiboardCityUpdate_call_line18 in ClosureTimers, line 109")
else
call IssueImmediateOrderById(Wb[Snw],851976)
endif
elseif GO[Snw]<=651 then
if GO[Snw]<=650 then
call Tpw(Snw)
else
set Kb[Jb]="when calling Preloader_call_line54 in ClosureTimers, line 109"
set Jb=Jb+1
call R0w("when calling finishPreload in Preloader, line 54")
set Jb=Jb-1
endif
else
call IssueImmediateOrderById(Db[Snw],851976)
endif
set Jb=Jb-1
endfunction
function bww takes timer Sww,string cww returns integer
local integer oww
local integer Oww
local integer lww
set Kb[Jb]=cww
set Jb=Jb+1
set oww=Po
set Oww=GetHandleId(Sww)
set Kb[Jb]="when calling loadInt in TimerUtils, line 21"
set Jb=Jb+1
if HO[oww]==0 then
if oww==0 then
call S4("Nullpointer exception when calling Table.loadInt","when calling error in Table, line 39")
else
call S4("Called Table.loadInt on invalid object.","when calling error in Table, line 39")
endif
endif
set lww=LoadInteger(Zo,oww,Oww)
set Jb=Jb-1-1
return lww
endfunction
function nww takes timer qww,string aww returns nothing
set Kb[Jb]=aww
set Jb=Jb+1
if qww==null then
call S4("Trying to release a null timer","when calling error in TimerUtils, line 37")
set Jb=Jb-1
return
endif
if bww(qww,"when calling getData in TimerUtils, line 39")==679645218 then
call S4("ReleaseTimer: Double free!","when calling error in TimerUtils, line 40")
set Jb=Jb-1
return
endif
call iww(qww,679645218,"when calling setData in TimerUtils, line 42")
call PauseTimer(qww)
set Uo[Io]=qww
set Io=Io+1
set Jb=Jb-1
endfunction
function sow takes integer uow,string row returns nothing
set Kb[Jb]=row
set Jb=Jb+1
set Kb[Jb]="when calling CallbackSingle_onDestroy in ClosureTimers, line 123"
set Jb=Jb+1
call nww(ib[uow],"when calling release in ClosureTimers, line 124")
set Jb=Jb-1
set Kb[Jb]="when calling dealloc_CallbackSingle in ClosureTimers, line 123"
set Jb=Jb+1
if GO[uow]==0 then
call S4("Double free: object of type CallbackSingle","when calling error in ClosureTimers, line 107")
else
set RO[TO]=uow
set TO=TO+1
set GO[uow]=0
endif
set Jb=Jb-1-1
endfunction
function qN takes string pN returns nothing
local integer eN
set Kb[Jb]=pN
set Jb=Jb+1
set eN=bww(GetExpiredTimer(),"when calling getData in ClosureTimers, line 119")
call bnw(eN,"when calling call in ClosureTimers, line 120")
set Kb[Jb]="when calling dispatch_CallbackSingle_destroyCallbackSingle in ClosureTimers, line 121"
set Jb=Jb+1
if GO[eN]==0 then
if eN==0 then
call S4("Nullpointer exception when calling CallbackSingle.CallbackSingle","when calling error in ClosureTimers, line 107")
else
call S4("Called CallbackSingle.CallbackSingle on invalid object.","when calling error in ClosureTimers, line 107")
endif
endif
call sow(eN,"when calling destroyCallbackSingle in ClosureTimers, line 107")
set Jb=Jb-1-1
endfunction
function BYw takes nothing returns nothing
set Jb=0
set Kb[Jb]="ClosureTimers, line 114"
set Jb=Jb+1
call qN("when calling staticCallback in ClosureTimers, line 114")
set Jb=Jb-1
endfunction
function Vg takes nothing returns boolean
if IsUnitType(GetEnumUnit(),UNIT_TYPE_STRUCTURE)!=false then
return false
endif
return true
endfunction
function Bg takes nothing returns nothing
if Vg() then
call SetUnitPositionLoc(GetEnumUnit(),c)
endif
endfunction
function Vh takes nothing returns boolean
if IsUnitType(GetEnumUnit(),UNIT_TYPE_STRUCTURE)!=false then
return false
endif
return true
endfunction
function Bh takes nothing returns nothing
if Vh() then
call SetUnitPositionLoc(GetEnumUnit(),c)
endif
endfunction
function Bj takes nothing returns nothing
local player Ij=GetOwningPlayer(GetSpellTargetUnit())
local playerstate Pj=PLAYER_STATE_RESOURCE_GOLD
local playerstate Aj
local playerstate Dj
local player Hj
local force Jj
local location Kj
local real Lj
local real Xj
local player Cj
local force Vj
if Pj==PLAYER_STATE_RESOURCE_GOLD then
set Aj=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(Ij,Aj,GetPlayerState(Ij,Aj)+500)
elseif Pj==PLAYER_STATE_RESOURCE_LUMBER then
set Dj=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(Ij,Dj,GetPlayerState(Ij,Dj)+500)
endif
call SetPlayerState(Ij,Pj,GetPlayerState(Ij,Pj)+500)
call RemoveUnit(GetSpellAbilityUnit())
set Hj=GetOwningPlayer(GetSpellTargetUnit())
set Jj=CreateForce()
call ForceAddPlayer(Jj,Hj)
if IsPlayerInForce(GetLocalPlayer(),Jj) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_1231")
endif
set y=GetUnitLoc(GetSpellTargetUnit())
set Cj=GetOwningPlayer(GetSpellTargetUnit())
set Vj=CreateForce()
call ForceAddPlayer(Vj,Cj)
set Kj=y
set Lj=GetLocationX(Kj)
set Xj=GetLocationY(Kj)
if IsPlayerInForce(GetLocalPlayer(),Vj) then
call PingMinimap(Lj,Xj,2.00)
endif
call RemoveLocation(y)
set Ij=null
set Pj=null
set Aj=null
set Dj=null
set Hj=null
set Jj=null
set Kj=null
set Cj=null
set Vj=null
endfunction
function Bx takes nothing returns nothing
local player Ix=GetOwningPlayer(GetKillingUnit())
local playerstate Px=PLAYER_STATE_RESOURCE_GOLD
local playerstate Ax
local playerstate Dx
local player Hx
local force Jx
local location Kx
local real Lx
local real Xx
local player Cx
local force Vx
if Px==PLAYER_STATE_RESOURCE_GOLD then
set Ax=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(Ix,Ax,GetPlayerState(Ix,Ax)+125)
elseif Px==PLAYER_STATE_RESOURCE_LUMBER then
set Dx=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(Ix,Dx,GetPlayerState(Ix,Dx)+125)
endif
call SetPlayerState(Ix,Px,GetPlayerState(Ix,Px)+125)
set Hx=GetOwningPlayer(GetKillingUnit())
set Jx=CreateForce()
call ForceAddPlayer(Jx,Hx)
if IsPlayerInForce(GetLocalPlayer(),Jx) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_091")
endif
set y=GetUnitLoc(GetDyingUnit())
set Cx=GetOwningPlayer(GetDyingUnit())
set Vx=CreateForce()
call ForceAddPlayer(Vx,Cx)
set Kx=y
set Lx=GetLocationX(Kx)
set Xx=GetLocationY(Kx)
if IsPlayerInForce(GetLocalPlayer(),Vx) then
call PingMinimap(Lx,Xx,2.00)
endif
call RemoveLocation(y)
set Ix=null
set Px=null
set Ax=null
set Dx=null
set Hx=null
set Jx=null
set Kx=null
set Cx=null
set Vx=null
endfunction
function C1 takes nothing returns boolean
set cc=InitHashtable()
return true
endfunction
function C2 takes nothing returns nothing
set xc=xc+0.01
endfunction
function XE takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function CE takes nothing returns boolean
if not XE() then
return false
endif
return true
endfunction
function CF takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747990071 then
return false
endif
return true
endfunction
function CL takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function XT takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989043 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function CT takes nothing returns boolean
if not XT() then
return false
endif
return true
endfunction
function initialize takes nothing returns nothing
local integer i_2=0
local integer temp=no
loop
exitwhen i_2>temp
set i_2=i_2+1
endloop
endfunction
function xww takes string Tww,string Yww returns integer
local integer Gww_2
local integer gww
local boolean hww
local integer Fww
local string kww
local integer jww
set Kb[Jb]=Yww
set Jb=Jb+1
set Gww_2=StringHash(Tww)
loop
set gww=Ao
set Yww="when calling hasString in TypeCasting, line 25"
set Kb[Jb]="when calling hasString in TypeCasting, line 25"
set Jb=Jb+1
if HO[gww]==0 then
if gww==0 then
call S4("Nullpointer exception when calling Table.hasString","when calling error in Table, line 18")
else
call S4("Called Table.hasString on invalid object.","when calling error in Table, line 18")
endif
endif
set hww=HaveSavedString(Zo,gww,Gww_2)
set Jb=Jb-1
if hww then
set Fww=Ao
set Kb[Jb]="when calling loadString in TypeCasting, line 26"
set Jb=Jb+1
if HO[Fww]==0 then
if Fww==0 then
call S4("Nullpointer exception when calling Table.loadString","when calling error in Table, line 57")
else
call S4("Called Table.loadString on invalid object.","when calling error in Table, line 57")
endif
endif
set kww=LoadStr(Zo,Fww,Gww_2)
set Jb=Jb-1
exitwhen kww==Tww
else
set jww=Ao
set Kb[Jb]="when calling saveString in TypeCasting, line 29"
set Jb=Jb+1
if HO[jww]==0 then
if jww==0 then
call S4("Nullpointer exception when calling Table.saveString","when calling error in Table, line 60")
else
call S4("Called Table.saveString on invalid object.","when calling error in Table, line 60")
endif
endif
call SaveStr(Zo,jww,Gww_2,Tww)
set Jb=Jb-1
exitwhen true
endif
set Gww_2=Gww_2+1
endloop
set Jb=Jb-1
return Gww_2
endfunction
function CTw takes nothing returns boolean
set Jb=0
set Kb[Jb]="StringUtils, line 1"
set Jb=Jb+1
set no=127
call initialize()
call xww("","when calling stringToIndex in StringUtils, line 167")
set Jb=Jb-1
return true
endfunction
function CW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989072,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989073,0)
endfunction
function Cg takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747990091 then
return false
endif
return true
endfunction
function Ch takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989077 then
return false
endif
return true
endfunction
function D4 takes nothing returns boolean
return true
endfunction
function D9 takes nothing returns boolean
return true
endfunction
function DB takes nothing returns boolean
set HS=CreateGroup()
set LS=2147483647
set CS=Filter(Pf)
return true
endfunction
function AD takes nothing returns boolean
if GetResearched()!=1378890054 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890054,true)!=2 then
return false
endif
return true
endfunction
function DD takes nothing returns boolean
if not AD() then
return false
endif
return true
endfunction
function AG takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1966092336 then
return false
endif
if GetSpellAbilityId()!=1093677906 then
return false
endif
if GetOwningPlayer(GetSpellTargetUnit())==Player(PLAYER_NEUTRAL_AGGRESSIVE) then
return false
endif
if IsUnitType(GetSpellTargetUnit(),UNIT_TYPE_STRUCTURE)!=true then
return false
endif
return true
endfunction
function DG takes nothing returns boolean
if not AG() then
return false
endif
return true
endfunction
function AK takes nothing returns boolean
if GetUnitTypeId(GetConstructedStructure())!=1747990351 then
return false
endif
return true
endfunction
function DK takes nothing returns boolean
if not AK() then
return false
endif
return true
endfunction
function AQ takes nothing returns boolean
if GetResearched()!=1378889798 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889798,true)!=1 then
return false
endif
return true
endfunction
function DQ takes nothing returns boolean
if not AQ() then
return false
endif
return true
endfunction
function DT takes nothing returns nothing
local group IT=GetUnitsOfTypeIdAll(1747988554)
local code PT=Ry
local boolean AT=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(IT,PT)
if AT then
call DestroyGroup(IT)
endif
set IT=null
endfunction
function iyw takes string syw returns integer
local integer tyw
set Kb[Jb]=syw
set Jb=Jb+1
set Kb[Jb]="when calling alloc_LinkedList in LinkedList, line 31"
set Jb=Jb+1
if rl==0 then
if sl<32768 then
set sl=sl+1
set tyw=sl
set tl[tyw]=702
else
call S4("Out of memory: Could not create LinkedList.","when calling error in LinkedList, line 17")
set tyw=0
endif
else
set rl=rl-1
set tyw=ul[rl]
set tl[tyw]=702
endif
set Jb=Jb-1
set Kb[Jb]="when calling construct_LinkedList2 in LinkedList, line 31"
set Jb=Jb+1
set gb[tyw]=Zbw(0,0,0,"when calling new_LLEntry in LinkedList, line 18")
set hb[tyw]=0
set fb[gb[tyw]]=gb[tyw]
set db[gb[tyw]]=gb[tyw]
set Jb=Jb-1-1
return tyw
endfunction
function DTw takes nothing returns boolean
local integer ATw
set Jb=0
set Kb[Jb]="Abilities, line 1"
set Jb=Jb+1
set Kb[Jb]="when calling asList in Abilities, line 17"
set Jb=Jb+1
set ATw=iyw("when calling new_LinkedList in LinkedList, line 391")
call Ddw(ATw,1093677642,"when calling add in LinkedList, line 393")
call Ddw(ATw,1093677641,"when calling add in LinkedList, line 393")
call Ddw(ATw,1093677640,"when calling add in LinkedList, line 393")
call Ddw(ATw,1093678155,"when calling add in LinkedList, line 393")
set Jb=Jb-1
set cS=ATw
set Jb=Jb-1
return true
endfunction
function Iqw takes integer Uqw returns nothing
set Jo[Ko]=Hb[Uqw]
set Ko=Ko+1
call TriggerEvaluate(Ho)
set Ko=Ko-1
call SetUnitUserData(Hb[Uqw],0)
endfunction
function Zdw takes integer Wdw,string Edw returns nothing
set Kb[Jb]=Edw
set Jb=Jb+1
if nl[Wdw]==0 then
if Wdw==0 then
call S4("Nullpointer exception when calling UnitIndex.UnitIndex","when calling error in UnitIndexer, line 172")
else
call S4("Called UnitIndex.UnitIndex on invalid object.","when calling error in UnitIndexer, line 172")
endif
endif
set Kb[Jb]="when calling destroyUnitIndex in UnitIndexer, line 172"
set Jb=Jb+1
call Iqw(Wdw)
set Kb[Jb]="when calling dealloc_UnitIndex in UnitIndexer, line 188"
set Jb=Jb+1
if nl[Wdw]==0 then
call S4("Double free: object of type UnitIndex","when calling error in UnitIndexer, line 172")
else
set el[ql]=Wdw
set ql=ql+1
set nl[Wdw]=0
endif
set Jb=Jb-1-1-1
endfunction
function Suw takes unit suw,string tuw returns boolean
local integer iuw
set Kb[Jb]=tuw
set Jb=Jb+1
if GetUnitUserData(suw)==0 then
set Jb=Jb-1
return false
else
set Kb[Jb]="when calling toUnitIndex in UnitIndexer, line 169"
set Jb=Jb+1
set iuw=GetUnitUserData(suw)
if iuw==0 then
set iuw=Qqw(suw,"when calling new_UnitIndex in UnitIndexer, line 135")
endif
set Jb=Jb-1
call Zdw(iuw,"when calling dispatch_UnitIndex_destroyUnitIndex in UnitIndexer, line 169")
set Jb=Jb-1
return true
endif
endfunction
function buw takes string luw returns nothing
set Kb[Jb]=luw
set Jb=Jb+1
call Suw(Mc[wo-1],"when calling deindex in UnitIndexer, line 197")
set Jb=Jb-1
endfunction
function DYw takes nothing returns nothing
set Jb=0
call buw("UnitIndexer, line 197")
endfunction
function Pv takes nothing returns boolean
if GetUnitTypeId(GetSpellTargetUnit())==1747990581 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747990580 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747989813 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747988569 then
return true
endif
return false
endfunction
function Av takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989049 then
return false
endif
if not Pv() then
return false
endif
return true
endfunction
function Dv takes nothing returns boolean
if not Av() then
return false
endif
return true
endfunction
function ED takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990604,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990602,0)
endfunction
function EG takes nothing returns nothing
local player xG=GetOwningPlayer(GetAttacker())
local player vG=GetOwningPlayer(GetAttacker())
local player mG
local player QG
local unit WG
set r[GetPlayerId(xG)+1]=r[GetPlayerId(vG)+1]+1
set mG=GetOwningPlayer(GetTriggerUnit())
set QG=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(mG)+1]=r[GetPlayerId(QG)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set WG=GetTriggerUnit()
call SetUnitState(WG,UNIT_STATE_LIFE,GetUnitState(WG,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set xG=null
set vG=null
set mG=null
set QG=null
set WG=null
endfunction
function EH takes nothing returns nothing
local player mH=GetOwningPlayer(GetTriggerUnit())
local boolexpr QH=Condition(Aa)
local group WH=CreateGroup()
local code xH
local boolean vH
call GroupEnumUnitsOfPlayer(WH,mH,QH)
call DestroyBoolExpr(QH)
set xH=Da
set vH=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(WH,xH)
if vH then
call DestroyGroup(WH)
endif
set mH=null
set QH=null
set WH=null
endfunction
function EK takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function WP takes nothing returns boolean
if GetResearched()!=1378890032 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890032,true)!=1 then
return false
endif
return true
endfunction
function EP takes nothing returns boolean
if not WP() then
return false
endif
return true
endfunction
function EQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988558,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989057,0)
endfunction
function Q5 takes player k5,string j5 returns string
local integer x5
local integer v5
local integer m5
set Kb[Jb]=j5
set Jb=Jb+1
set v5=uo[GetPlayerId(k5)]
set Kb[Jb]="when calling getForceId in Messages, line 21"
set Jb=Jb+1
if ll[v5]==0 then
if v5==0 then
call S4("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 122")
else
call S4("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 122")
endif
endif
set m5=Eb[v5]
set Jb=Jb-1
set x5=GetRandomInt(0,2)
if m5==0 then
set j5=Yo[x5]
elseif m5==1 then
set j5=Go[x5]
elseif m5==2 then
set j5=go[x5]
elseif m5==3 then
set j5=ho[x5]
else
set j5="Note:"
endif
set Jb=Jb-1
return "|cff00ccff"+j5+"|r"
endfunction
function X2 takes player H2 returns nothing
local fogstate J2
local location K2
local rect L2
call SetPlayerState(H2,PLAYER_STATE_RESOURCE_GOLD,99999999)
call SetPlayerState(H2,PLAYER_STATE_RESOURCE_LUMBER,99999999)
set J2=FOG_OF_WAR_VISIBLE
set L2=bj_mapInitialPlayableArea
set K2=Location(GetRectCenterX(L2),GetRectCenterY(L2))
set bj_lastCreatedFogModifier=CreateFogModifierRadiusLoc(H2,J2,K2,999999.00,true,false)
call FogModifierStart(bj_lastCreatedFogModifier)
set J2=null
set K2=null
set L2=null
endfunction
function PN takes playercolor FN returns integer
local playercolor vN=FN
local integer mN=0
local integer QN=0
local integer WN=bj_MAX_PLAYER_SLOTS-1
local integer kN
local integer jN
local integer xN
local playercolor EN
local integer ZN
local integer UN
local integer IN
loop
exitwhen QN>WN
if Oo[QN]==vN then
set mN=QN
exitwhen true
endif
set QN=QN+1
endloop
if mN<=23 then
set EN=FN
set ZN=0
set UN=0
set IN=bj_MAX_PLAYER_SLOTS-1
loop
exitwhen UN>IN
if Oo[UN]==EN then
set ZN=UN
exitwhen true
endif
set UN=UN+1
endloop
set kN=BS[ZN]
set jN=NS[ZN]
set xN=MS[ZN]
else
set kN=0
set jN=0
set xN=0
endif
set Lb=kN
set Xb=jN
set Cb=xN
set vN=null
set EN=null
return Lb
endfunction
function hN takes player dN returns string
local integer YN=PN(GetPlayerColor(dN))
local integer GN=Xb
local integer gN=Cb
local integer fN=YN/16
local integer RN=GN/16
local integer TN=gN/16
return "|cff"+wc[fN]+wc[YN-fN*16]+wc[RN]+wc[GN-RN*16]+wc[TN]+wc[gN-TN*16]+GetPlayerName(dN)+"|r"
endfunction
function cGw takes integer sGw,integer tGw,string iGw returns integer
local integer SGw
if tGw<0 or tGw>=24 then
call S4("Index out of Bounds",iGw)
elseif tGw<=11 then
if tGw<=5 then
if tGw<=2 then
if tGw<=1 then
if tGw<=0 then
set SGw=Vb[sGw]
else
set SGw=Bb[sGw]
endif
else
set SGw=Nb[sGw]
endif
elseif tGw<=4 then
if tGw<=3 then
set SGw=Mb[sGw]
else
set SGw=wy[sGw]
endif
else
set SGw=uy[sGw]
endif
elseif tGw<=8 then
if tGw<=7 then
if tGw<=6 then
set SGw=ry[sGw]
else
set SGw=sy[sGw]
endif
else
set SGw=ty[sGw]
endif
elseif tGw<=10 then
if tGw<=9 then
set SGw=iy[sGw]
else
set SGw=Sy[sGw]
endif
else
set SGw=cy[sGw]
endif
elseif tGw<=17 then
if tGw<=14 then
if tGw<=13 then
if tGw<=12 then
set SGw=oy[sGw]
else
set SGw=Oy[sGw]
endif
else
set SGw=ly[sGw]
endif
elseif tGw<=16 then
if tGw<=15 then
set SGw=by[sGw]
else
set SGw=yy[sGw]
endif
else
set SGw=py[sGw]
endif
elseif tGw<=20 then
if tGw<=19 then
if tGw<=18 then
set SGw=ey[sGw]
else
set SGw=qy[sGw]
endif
else
set SGw=ay[sGw]
endif
elseif tGw<=22 then
if tGw<=21 then
set SGw=ny[sGw]
else
set SGw=dy[sGw]
endif
else
set SGw=fy[sGw]
endif
return SGw
endfunction
function rGw takes integer NYw,integer MYw,integer wGw,string uGw returns nothing
if MYw<0 or MYw>=24 then
call S4("Index out of Bounds",uGw)
elseif MYw<=11 then
if MYw<=5 then
if MYw<=2 then
if MYw<=1 then
if MYw<=0 then
set Vb[NYw]=wGw
else
set Bb[NYw]=wGw
endif
else
set Nb[NYw]=wGw
endif
elseif MYw<=4 then
if MYw<=3 then
set Mb[NYw]=wGw
else
set wy[NYw]=wGw
endif
else
set uy[NYw]=wGw
endif
elseif MYw<=8 then
if MYw<=7 then
if MYw<=6 then
set ry[NYw]=wGw
else
set sy[NYw]=wGw
endif
else
set ty[NYw]=wGw
endif
elseif MYw<=10 then
if MYw<=9 then
set iy[NYw]=wGw
else
set Sy[NYw]=wGw
endif
else
set cy[NYw]=wGw
endif
elseif MYw<=17 then
if MYw<=14 then
if MYw<=13 then
if MYw<=12 then
set oy[NYw]=wGw
else
set Oy[NYw]=wGw
endif
else
set ly[NYw]=wGw
endif
elseif MYw<=16 then
if MYw<=15 then
set by[NYw]=wGw
else
set yy[NYw]=wGw
endif
else
set py[NYw]=wGw
endif
elseif MYw<=20 then
if MYw<=19 then
if MYw<=18 then
set ey[NYw]=wGw
else
set qy[NYw]=wGw
endif
else
set ay[NYw]=wGw
endif
elseif MYw<=22 then
if MYw<=21 then
set ny[NYw]=wGw
else
set dy[NYw]=wGw
endif
else
set fy[NYw]=wGw
endif
endfunction
function Yew takes integer aew,player dew,integer few,string Rew returns nothing
local integer Tew
set Kb[Jb]=Rew
set Jb=Jb+1
set Tew=GetPlayerId(dew)
if not Ub[aew]then
set Jb=Jb-1
return
endif
if Tew>=24 then
set Jb=Jb-1
return
endif
if cGw(aew,Tew,"when reading array PlayerStats_alliance_states in  in PlayerStats, line 61")==few or dew==Zb[aew]then
set Jb=Jb-1
return
endif
call rGw(aew,Tew,few,"when writing array PlayerStats_alliance_states in PlayerStats, line 63")
call SetPlayerAllianceStateBJ(Zb[aew],dew,few)
set Jb=Jb-1
endfunction
function qew takes integer wew,string uew returns nothing
local integer rew
local integer sew
local integer tew
local integer iew
local player Sew
local integer cew
local integer oew
local player Oew
local integer lew
local player bew
local fogstate yew
local location pew
local rect eew
set Kb[Jb]=uew
set Jb=Jb+1
set Ab[wew]=true
set rew=GetPlayerId(Zb[wew])
set sew=0
set tew=23
loop
exitwhen sew>tew
set iew=uo[sew]
set Sew=Zb[wew]
set cew=bj_ALLIANCE_UNALLIED
set uew="when calling setAlliance in PlayerStats, line 37"
set Kb[Jb]="when calling setAlliance in PlayerStats, line 37"
set Jb=Jb+1
if ll[iew]==0 then
if iew==0 then
call S4("Nullpointer exception when calling PlayerStats.setAlliance","when calling error in PlayerStats, line 55")
else
call S4("Called PlayerStats.setAlliance on invalid object.","when calling error in PlayerStats, line 55")
endif
endif
call Yew(iew,Sew,cew,"when calling setAlliance in PlayerStats, line 55")
set Jb=Jb-1
set oew=uo[rew]
set Oew=ro[sew]
set lew=bj_ALLIANCE_UNALLIED
set Kb[Jb]="when calling setAlliance in PlayerStats, line 38"
set Jb=Jb+1
if ll[oew]==0 then
if oew==0 then
call S4("Nullpointer exception when calling PlayerStats.setAlliance","when calling error in PlayerStats, line 55")
else
call S4("Called PlayerStats.setAlliance on invalid object.","when calling error in PlayerStats, line 55")
endif
endif
call Yew(oew,Oew,lew,"when calling setAlliance in PlayerStats, line 55")
set Jb=Jb-1
set sew=sew+1
endloop
set bew=Zb[wew]
set yew=FOG_OF_WAR_VISIBLE
set eew=bj_mapInitialPlayableArea
set pew=Location(GetRectCenterX(eew),GetRectCenterY(eew))
set bj_lastCreatedFogModifier=CreateFogModifierRadiusLoc(bew,yew,pew,999999.00,true,false)
call FogModifierStart(bj_lastCreatedFogModifier)
set Jb=Jb-1
set Sew=null
set Oew=null
set bew=null
set yew=null
set pew=null
set eew=null
endfunction
function Inw takes integer Wnw,integer Enw,string Znw returns boolean
local integer Unw
set Kb[Jb]=Znw
set Jb=Jb+1
if IO[Wnw]==0 then
if Wnw==0 then
call S4("Nullpointer exception when calling HashList.has","when calling error in HashList, line 87")
else
call S4("Called HashList.has on invalid object.","when calling error in HashList, line 87")
endif
endif
set Kb[Jb]="when calling has in HashList, line 87"
set Jb=Jb+1
set Kb[Jb]="when calling count in HashList, line 88"
set Jb=Jb+1
if IO[Wnw]==0 then
if Wnw==0 then
call S4("Nullpointer exception when calling HashList.count","when calling error in HashList, line 15")
else
call S4("Called HashList.count on invalid object.","when calling error in HashList, line 15")
endif
endif
set Unw=LoadInteger(Rc,Wnw,Enw)
set Jb=Jb-1
set Jb=Jb-1-1
return Unw>0
endfunction
function Hrw takes integer Prw,player Arw,string Drw returns nothing
set Kb[Jb]=Drw
set Jb=Jb+1
if Prw<0 then
set Jb=Jb-1
return
endif
if not Inw(sO[Prw],GetPlayerId(Arw),"when calling has in VoteKick, line 68") then
set rO[Prw]=rO[Prw]+1
endif
set Jb=Jb-1
endfunction
function Irw takes string Erw returns integer
local integer Zrw=0
local integer Urw=23
loop
exitwhen Zrw>Urw
if GetPlayerName(ro[Zrw])==Erw then
return Zrw
endif
set Zrw=Zrw+1
endloop
return -1
endfunction
function Lbw takes integer Dbw,integer Hbw returns integer
local integer Jbw=fb[gb[Dbw]]
local integer Kbw=0
loop
exitwhen Jbw==gb[Dbw]
if nb[Jbw]==Hbw then
return Kbw
endif
set Jbw=fb[Jbw]
set Kbw=Kbw+1
endloop
return -1
endfunction
function krw takes nothing returns integer
local integer Yrw=0
local integer Grw=0
local integer grw=23
local player hrw
local boolean Frw
loop
exitwhen Grw>grw
set hrw=ro[Grw]
if GetPlayerSlotState(hrw)==PLAYER_SLOT_STATE_PLAYING then
set Frw=GetPlayerController(hrw)==MAP_CONTROL_USER
else
set Frw=false
endif
if Frw then
set Yrw=Yrw+1
endif
set Grw=Grw+1
endloop
set hrw=null
return R2I((Yrw-1)*1./2)+1
endfunction
function Wrw takes integer jrw returns nothing
local string xrw
local force vrw
local string mrw
local force Qrw
if jrw<0 then
set vrw=null
set Qrw=null
return
endif
if rO[jrw]>=krw() then
call CustomDefeatBJ(ro[jrw],"You've been kicked from the game!")
set xrw="The player "+hN(ro[jrw])+" has been kicked with the power of democracy!"
set vrw=bj_FORCE_ALL_PLAYERS
if IsPlayerInForce(GetLocalPlayer(),vrw) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,10.0,xrw)
endif
else
set mrw=I2S(rO[jrw])+" |cffff0000out of|r "+I2S(krw())+" |cffff0000voted to kick the player|r "+hN(ro[jrw])+"! |cff00ffdd(player number is "+I2S(jrw)+")|r"
set Qrw=bj_FORCE_ALL_PLAYERS
if IsPlayerInForce(GetLocalPlayer(),Qrw) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,10.0,mrw)
endif
endif
set vrw=null
set Qrw=null
endfunction
function ssw takes player Jrw,string Krw,string Lrw returns nothing
local integer Xrw
local integer Crw
local integer Vrw
local boolean Brw
local integer Nrw
local integer Mrw
local integer wsw
local boolean usw
local boolean rsw
set Kb[Jb]=Lrw
set Jb=Jb+1
set Xrw=23
if StringLength(Krw)<=2 then
set usw=S2I(Krw)>0
else
set usw=false
endif
if usw then
set rsw=S2I(Krw)<24
else
set rsw=false
endif
if rsw then
set Xrw=S2I(Krw)
else
set Crw=tO
set Vrw=xww(Krw,"when calling stringToIndex in VoteKick, line 77")
set Kb[Jb]="when calling has in VoteKick, line 77"
set Jb=Jb+1
if tl[Crw]==0 then
if Crw==0 then
call S4("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call S4("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set Brw=Bbw(Crw,Vrw)
set Jb=Jb-1
if Brw then
set Nrw=tO
set Mrw=xww(Krw,"when calling stringToIndex in VoteKick, line 78")
set Kb[Jb]="when calling indexOf in VoteKick, line 78"
set Jb=Jb+1
if tl[Nrw]==0 then
if Nrw==0 then
call S4("Nullpointer exception when calling LinkedList.indexOf","when calling error in LinkedList, line 54")
else
call S4("Called LinkedList.indexOf on invalid object.","when calling error in LinkedList, line 54")
endif
endif
set wsw=Lbw(Nrw,Mrw)
set Jb=Jb-1
set Xrw=wsw
elseif Irw(Krw)!=-1 then
set Xrw=Irw(Krw)
else
set Kb[Jb]="when calling noteToPlayer in VoteKick, line 82"
set Jb=Jb+1
call DisplayTimedTextToPlayer(Jrw,0.,0.,10.0,Q5(Jrw,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(Jrw,0.,0.,10.0,"Couldn't find player: '"+Krw+"'")
set Jb=Jb-1-1
return
endif
endif
call Hrw(Xrw,Jrw,"when calling addVote in VoteKick, line 85")
call Wrw(Xrw)
set Jb=Jb-1
endfunction
function Ciw takes integer Aiw,string Diw returns string
local real Hiw
local integer Jiw
local integer Kiw
local integer Liw
local integer Xiw
set Kb[Jb]=Diw
set Jb=Jb+1
set Kb[Jb]="when calling countPublicOrder in City, line 323"
set Jb=Jb+1
if qO[Aiw]==0 then
if Aiw==0 then
call S4("Nullpointer exception when calling City.countPublicOrder","when calling error in City, line 295")
else
call S4("Called City.countPublicOrder on invalid object.","when calling error in City, line 295")
endif
endif
set Hiw=Piw(Aiw,"when calling countPublicOrder in City, line 295")
set Jb=Jb-1
set Liw=R2I(255.-Hiw/100.*255.)
set Xiw=R2I(Hiw/100.*255.)
set Jiw=Liw/16
set Kiw=Xiw/16
set Diw=StringCase("|cff"+wc[Jiw]+wc[Liw-Jiw*16]+wc[Kiw]+wc[Xiw-Kiw*16]+wc[0]+wc[0],false)+I2S(R2I(Hiw))+","+I2S(R2I(ModuloReal(R2I(Hiw*10.),10)))+"%|r"
set Jb=Jb-1
return Diw
endfunction
function y5 takes real b5 returns real
if b5>0. then
return 1.
elseif b5<0. then
return -1.
else
return 0.
endif
endfunction
function Iww takes integer Zww returns string
local string Uww="|cff15ff00+"
if y5(Zww*1.)==-1. then
set Uww="|cffff0000"
endif
return Uww+I2S(Zww)+"|r"
endfunction
function Niw takes integer Viw returns string
local string Biw
if Fc then
return I2S(El[Viw])
endif
if El[Viw]<100000 then
set Biw=I2S(R2I(El[Viw]*1./1000))+","+I2S(R2I(ModuloReal(El[Viw],1000)/100.))+"k"
else
set Biw=I2S(R2I(El[Viw]*1./1000))+"k"
endif
return Biw
endfunction
function j9 takes multiboard f9,integer R9,integer T9,string Y9,real G9 returns nothing
local multiboarditem g9=MultiboardGetItem(f9,T9,R9)
local string h9=Y9
local string F9
local integer k9
set T9=R2I((R2I(G9/0.004)-StringLength(Y9))*1./2)
set F9=""
set k9=0
set R9=T9-1
loop
exitwhen k9>R9
set F9=F9+" "
set k9=k9+1
endloop
if ModuloReal(T9,2)==1. then
set h9=" "+h9
endif
set h9=F9+h9
call MultiboardSetItemValue(g9,h9)
set g9=null
endfunction
function Mpw takes integer Ypw,string Gpw returns nothing
local integer gpw
local multiboard hpw
local integer Fpw
local integer kpw
local integer jpw
local multiboard xpw
local integer vpw
local integer mpw
local multiboard Qpw
local integer Wpw
local integer Epw
local integer Zpw
local string Upw
local integer Ipw
local string Ppw
local integer Apw
local integer Dpw
local string Hpw
local integer Jpw
local integer Kpw
local string Lpw
local integer Xpw
local integer Cpw
local integer Vpw
local string Bpw
local string Npw
set Kb[Jb]=Gpw
set Jb=Jb+1
if Ib[Ypw]==-1 then
set Jb=Jb-1
set hpw=null
set xpw=null
set Qpw=null
return
endif
set gpw=GetPlayerId(Zb[Ypw])
call j9(Vc[gpw],Xc[0],Xc[1],Taw(xS[Ib[Ypw]],"when calling getCityNameColored in PlayerStats, line 76"),0.40)
set Wpw=xS[Ib[Ypw]]
set Kb[Jb]="when calling countTax in PlayerStats, line 85"
set Jb=Jb+1
if qO[Wpw]==0 then
if Wpw==0 then
call S4("Nullpointer exception when calling City.countTax","when calling error in City, line 266")
else
call S4("Called City.countTax on invalid object.","when calling error in City, line 266")
endif
endif
set Epw=jiw(Wpw,"when calling countTax in City, line 266")
set Jb=Jb-1
set Zpw=xS[Ib[Ypw]]
set Kb[Jb]="when calling getTaxLevelString in PlayerStats, line 86"
set Jb=Jb+1
if qO[Zpw]==0 then
if Zpw==0 then
call S4("Nullpointer exception when calling City.getTaxLevelString","when calling error in City, line 164")
else
call S4("Called City.getTaxLevelString on invalid object.","when calling error in City, line 164")
endif
endif
set Upw=Eo[Dl[Zpw]]
set Jb=Jb-1
set Ipw=xS[Ib[Ypw]]
set Kb[Jb]="when calling getPublicOrderStr in PlayerStats, line 87"
set Jb=Jb+1
if qO[Ipw]==0 then
if Ipw==0 then
call S4("Nullpointer exception when calling City.getPublicOrderStr","when calling error in City, line 322")
else
call S4("Called City.getPublicOrderStr on invalid object.","when calling error in City, line 322")
endif
endif
set Ppw=Ciw(Ipw,"when calling getPublicOrderStr in City, line 322")
set Jb=Jb-1
set Apw=xS[Ib[Ypw]]
set Kb[Jb]="when calling getPopulationStr in PlayerStats, line 88"
set Jb=Jb+1
if qO[Apw]==0 then
if Apw==0 then
call S4("Nullpointer exception when calling City.getPopulationStr","when calling error in City, line 343")
else
call S4("Called City.getPopulationStr on invalid object.","when calling error in City, line 343")
endif
endif
set Gpw=Niw(Apw)
set Jb=Jb-1
set Dpw=xS[Ib[Ypw]]
set Kb[Jb]="when calling getPopulationGrowthStr in PlayerStats, line 89"
set Jb=Jb+1
if qO[Dpw]==0 then
if Dpw==0 then
call S4("Nullpointer exception when calling City.getPopulationGrowthStr","when calling error in City, line 340")
else
call S4("Called City.getPopulationGrowthStr on invalid object.","when calling error in City, line 340")
endif
endif
set Hpw=Iww(Zl[Dpw])
set Jb=Jb-1
set hpw=Vc[gpw]
set Jpw=Hc[0]
set Kpw=Hc[1]
set Lpw=I2S(Epw)
call MultiboardSetItemValue(MultiboardGetItem(hpw,Kpw,Jpw),Lpw)
call MultiboardSetItemValue(MultiboardGetItem(hpw,Hc[1],Hc[0]+1),Upw)
call MultiboardSetItemValue(MultiboardGetItem(hpw,Jc[1],Jc[0]),Ppw)
call MultiboardSetItemValue(MultiboardGetItem(hpw,Kc[1],Kc[0]),Gpw)
call MultiboardSetItemValue(MultiboardGetItem(hpw,Lc[1],Lc[0]),Hpw)
set Fpw=0
set Cpw=xS[Ib[Ypw]]
set Kb[Jb]="when calling getModifiers in PlayerStats, line 99"
set Jb=Jb+1
if qO[Cpw]==0 then
if Cpw==0 then
call S4("Nullpointer exception when calling City.getModifiers","when calling error in City, line 378")
else
call S4("Called City.getModifiers on invalid object.","when calling error in City, line 378")
endif
endif
set Vpw=Jl[Cpw]
set Jb=Jb-1
set Kb[Jb]="when calling iterator in PlayerStats, line 99"
set Jb=Jb+1
set Xpw=Abw(Vpw,"when calling new_LLIterator in LinkedList, line 165")
set Jb=Jb-1
set kpw=Xpw
loop
exitwhen fb[Tb[kpw]]==Rb[kpw]
set Tb[kpw]=fb[Tb[kpw]]
set jpw=nb[Tb[kpw]]
set xpw=Vc[gpw]
set Bpw=hl[udw(RS,jpw,"when calling get in PlayerStats, line 101")]
call MultiboardSetItemValue(MultiboardGetItem(xpw,4+Fpw,4),Bpw)
set Npw="("+Fl[udw(RS,jpw,"when calling get in PlayerStats, line 102")]+")"
call MultiboardSetItemValue(MultiboardGetItem(xpw,4+Fpw,5),Npw)
set Fpw=Fpw+1
endloop
set Kb[Jb]="when calling close in PlayerStats, line 99"
set Jb=Jb+1
if Gb[kpw]then
call bdw(kpw,"when calling dispatch_LLIterator_destroyLLIterator in LinkedList, line 450")
endif
set Jb=Jb-1
set vpw=Fpw
set mpw=9
loop
exitwhen vpw>mpw
set Qpw=Vc[gpw]
call MultiboardSetItemValue(MultiboardGetItem(Qpw,4+vpw,4)," ")
call MultiboardSetItemValue(MultiboardGetItem(Qpw,4+vpw,5)," ")
set vpw=vpw+1
endloop
set Jb=Jb-1
set hpw=null
set xpw=null
set Qpw=null
endfunction
function Wtw takes integer Ftw,string ktw returns nothing
local integer jtw
local integer xtw
local integer vtw
local integer mtw
local integer Qtw
set Kb[Jb]=ktw
set Jb=Jb+1
set jtw=0
set xtw=23
loop
exitwhen jtw>xtw
set vtw=uo[jtw]
set ktw="when calling getSelectedCityId in City, line 239"
set Kb[Jb]="when calling getSelectedCityId in City, line 239"
set Jb=Jb+1
if ll[vtw]==0 then
if vtw==0 then
call S4("Nullpointer exception when calling PlayerStats.getSelectedCityId","when calling error in PlayerStats, line 112")
else
call S4("Called PlayerStats.getSelectedCityId on invalid object.","when calling error in PlayerStats, line 112")
endif
endif
set mtw=Ib[vtw]
set Jb=Jb-1
if mtw==xl[Ftw]then
set Qtw=uo[jtw]
set Kb[Jb]="when calling refreshMultiboardCity in City, line 240"
set Jb=Jb+1
if ll[Qtw]==0 then
if Qtw==0 then
call S4("Nullpointer exception when calling PlayerStats.refreshMultiboardCity","when calling error in PlayerStats, line 71")
else
call S4("Called PlayerStats.refreshMultiboardCity on invalid object.","when calling error in PlayerStats, line 71")
endif
endif
call Mpw(Qtw,"when calling refreshMultiboardCity in PlayerStats, line 71")
set Jb=Jb-1
endif
set jtw=jtw+1
endloop
set Jb=Jb-1
endfunction
function yaw takes integer Oaw,string law,string baw returns nothing
set Kb[Jb]=baw
set Jb=Jb+1
if qO[Oaw]==0 then
if Oaw==0 then
call S4("Nullpointer exception when calling City.changeCityName","when calling error in City, line 159")
else
call S4("Called City.changeCityName on invalid object.","when calling error in City, line 159")
endif
endif
set Kb[Jb]="when calling changeCityName in City, line 159"
set Jb=Jb+1
set jl[Oaw]=SubString(law,0,24)
set Kb[Jb]="when calling refreshMultiboardIfPossible in City, line 162"
set Jb=Jb+1
if qO[Oaw]==0 then
if Oaw==0 then
call S4("Nullpointer exception when calling City.refreshMultiboardIfPossible","when calling error in City, line 237")
else
call S4("Called City.refreshMultiboardIfPossible on invalid object.","when calling error in City, line 237")
endif
endif
call Wtw(Oaw,"when calling refreshMultiboardIfPossible in City, line 237")
set Jb=Jb-1-1-1
endfunction
function ZM takes string LN returns nothing
local string XN
local string array CN
local string VN
local player BN
local integer NN
local integer MN
local integer wM
local string uM
local integer rM
local boolean sM
local group tM
local player iM
local camerafield SM
local player cM
local camerafield oM
local integer OM
local integer lM
local integer bM
local unit yM
local integer pM
local integer eM
local integer qM
local integer aM
local integer nM
local integer dM
local integer fM
local integer RM
local integer TM
local integer YM
local integer GM
local player gM
local camerafield hM
local real FM
local integer kM
local boolean jM
local group xM
local unit vM
local integer mM
local string QM
local force WM
local boolean EM
set Kb[Jb]=LN
set Jb=Jb+1
set XN=GetEventPlayerChatString()
set VN=""
set BN=GetTriggerPlayer()
set NN=0
set MN=1
set wM=StringLength(XN)
loop
exitwhen MN>wM
set LN=SubString(XN,MN,MN+1)
if NN>0 then
set EM=MN>StringLength(CN[0])+1
else
set EM=false
endif
if EM then
set VN=VN+LN
endif
if LN!=" " then
set CN[NN]=CN[NN]+LN
else
set NN=NN+1
endif
set MN=MN+1
endloop
if CN[0]=="far" then
set iM=GetTriggerPlayer()
set SM=CAMERA_FIELD_TARGET_DISTANCE
if GetLocalPlayer()==iM then
call SetCameraField(SM,3000.0,0.)
endif
elseif CN[0]=="med" then
set cM=GetTriggerPlayer()
set oM=CAMERA_FIELD_TARGET_DISTANCE
if GetLocalPlayer()==cM then
call SetCameraField(oM,2300.0,0.)
endif
elseif CN[0]=="name" then
call SetPlayerName(GetTriggerPlayer(),SubString(VN,0,40))
elseif CN[0]=="rename" then
set OM=uo[GetPlayerId(BN)]
set Kb[Jb]="when calling getSelectedCityId in Commands, line 50"
set Jb=Jb+1
if ll[OM]==0 then
if OM==0 then
call S4("Nullpointer exception when calling PlayerStats.getSelectedCityId","when calling error in PlayerStats, line 112")
else
call S4("Called PlayerStats.getSelectedCityId on invalid object.","when calling error in PlayerStats, line 112")
endif
endif
set lM=Ib[OM]
set Jb=Jb-1
if lM>=0 and lM<TS then
set bM=xS[lM]
set Kb[Jb]="when calling getCityUnit in Commands, line 52"
set Jb=Jb+1
if qO[bM]==0 then
if bM==0 then
call S4("Nullpointer exception when calling City.getCityUnit","when calling error in City, line 176")
else
call S4("Called City.getCityUnit on invalid object.","when calling error in City, line 176")
endif
endif
set yM=kl[bM]
set Jb=Jb-1
if GetOwningPlayer(yM)!=BN then
set Kb[Jb]="when calling noteToPlayer in Commands, line 53"
set Jb=Jb+1
call DisplayTimedTextToPlayer(BN,0.,0.,10.0,Q5(BN,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(BN,0.,0.,10.0,"The city you wanted to rename so eagerly doesn't belong to you!")
set Jb=Jb-1
else
call yaw(xS[lM],VN,"when calling changeCityName in Commands, line 55")
endif
endif
elseif CN[0]=="add_mod" then
set pM=uo[GetPlayerId(BN)]
set Kb[Jb]="when calling getSelectedCityId in Commands, line 57"
set Jb=Jb+1
if ll[pM]==0 then
if pM==0 then
call S4("Nullpointer exception when calling PlayerStats.getSelectedCityId","when calling error in PlayerStats, line 112")
else
call S4("Called PlayerStats.getSelectedCityId on invalid object.","when calling error in PlayerStats, line 112")
endif
endif
set eM=Ib[pM]
set Jb=Jb-1
if not kc then
set Jb=Jb-1
set BN=null
set tM=null
set iM=null
set SM=null
set cM=null
set oM=null
set yM=null
set gM=null
set hM=null
set xM=null
set vM=null
set WM=null
return
endif
if eM>=0 and eM<TS then
set uM=CN[1]
if uM=="massacred_pop" then
set qM=xS[eM]
set Kb[Jb]="when calling addModifier in Commands, line 63"
set Jb=Jb+1
if qO[qM]==0 then
if qM==0 then
call S4("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call S4("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call htw(qM,6,"when calling addModifier in City, line 355")
set Jb=Jb-1
elseif uM=="recently_conquered" then
set aM=xS[eM]
set Kb[Jb]="when calling addModifier in Commands, line 65"
set Jb=Jb+1
if qO[aM]==0 then
if aM==0 then
call S4("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call S4("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call htw(aM,0,"when calling addModifier in City, line 355")
set Jb=Jb-1
elseif uM=="recently_revolted" then
set nM=xS[eM]
set Kb[Jb]="when calling addModifier in Commands, line 67"
set Jb=Jb+1
if qO[nM]==0 then
if nM==0 then
call S4("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call S4("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call htw(nM,1,"when calling addModifier in City, line 355")
set Jb=Jb-1
elseif uM=="more_trade_estabilished" then
set dM=xS[eM]
set Kb[Jb]="when calling addModifier in Commands, line 69"
set Jb=Jb+1
if qO[dM]==0 then
if dM==0 then
call S4("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call S4("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call htw(dM,5,"when calling addModifier in City, line 355")
set Jb=Jb-1
elseif uM=="on_fire" then
set fM=xS[eM]
set Kb[Jb]="when calling addModifier in Commands, line 71"
set Jb=Jb+1
if qO[fM]==0 then
if fM==0 then
call S4("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call S4("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call htw(fM,4,"when calling addModifier in City, line 355")
set Jb=Jb-1
elseif uM=="plague_outburst" then
set RM=xS[eM]
set Kb[Jb]="when calling addModifier in Commands, line 73"
set Jb=Jb+1
if qO[RM]==0 then
if RM==0 then
call S4("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call S4("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call htw(RM,3,"when calling addModifier in City, line 355")
set Jb=Jb-1
elseif uM=="population_boom" then
set TM=xS[eM]
set Kb[Jb]="when calling addModifier in Commands, line 75"
set Jb=Jb+1
if qO[TM]==0 then
if TM==0 then
call S4("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call S4("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call htw(TM,2,"when calling addModifier in City, line 355")
set Jb=Jb-1
elseif uM=="prospering" then
set YM=xS[eM]
set Kb[Jb]="when calling addModifier in Commands, line 77"
set Jb=Jb+1
if qO[YM]==0 then
if YM==0 then
call S4("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call S4("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call htw(YM,7,"when calling addModifier in City, line 355")
set Jb=Jb-1
elseif uM=="sieged" then
set GM=xS[eM]
set Kb[Jb]="when calling addModifier in Commands, line 79"
set Jb=Jb+1
if qO[GM]==0 then
if GM==0 then
call S4("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call S4("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call htw(GM,8,"when calling addModifier in City, line 355")
set Jb=Jb-1
endif
endif
elseif CN[0]=="непереводимоесочетаниебукв" then
set kc=not kc
set Fc=not Fc
call X2(BN)
elseif CN[0]=="votekick" then
call ssw(BN,VN,"when calling voteKick in Commands, line 85")
elseif CN[0]=="zoom" then
set rM=S2I(CN[1])
set gM=GetTriggerPlayer()
set hM=CAMERA_FIELD_TARGET_DISTANCE
set FM=rM*1.
if GetLocalPlayer()==gM then
call SetCameraField(hM,FM,0.)
endif
elseif CN[0]=="observe" then
set kM=uo[GetPlayerId(BN)]
set Kb[Jb]="when calling isObserver in Commands, line 90"
set Jb=Jb+1
if ll[kM]==0 then
if kM==0 then
call S4("Nullpointer exception when calling PlayerStats.isObserver","when calling error in PlayerStats, line 29")
else
call S4("Called PlayerStats.isObserver on invalid object.","when calling error in PlayerStats, line 29")
endif
endif
set jM=Ab[kM]
set Jb=Jb-1
if not jM then
set sM=true
set xM=CreateGroup()
call GroupEnumUnitsOfPlayer(xM,BN,null)
call DestroyBoolExpr(null)
set dc=CreateGroup()
call ForGroup(xM,Hf)
set tM=dc
loop
exitwhen FirstOfGroup(tM)==null
set vM=FirstOfGroup(tM)
call GroupRemoveUnit(tM,vM)
if not IsUnitHidden(vM) then
set sM=false
endif
endloop
call GroupClear(tM)
call DestroyGroup(tM)
if sM then
set mM=uo[GetPlayerId(BN)]
set Kb[Jb]="when calling becomeObserver in Commands, line 97"
set Jb=Jb+1
if ll[mM]==0 then
if mM==0 then
call S4("Nullpointer exception when calling PlayerStats.becomeObserver","when calling error in PlayerStats, line 32")
else
call S4("Called PlayerStats.becomeObserver on invalid object.","when calling error in PlayerStats, line 32")
endif
endif
call qew(mM,"when calling becomeObserver in PlayerStats, line 32")
set Jb=Jb-1
set QM=hN(BN)+" has just became an observer."
set WM=bj_FORCE_ALL_PLAYERS
if IsPlayerInForce(GetLocalPlayer(),WM) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,10.0,QM)
endif
else
set Kb[Jb]="when calling noteToPlayer in Commands, line 100"
set Jb=Jb+1
call DisplayTimedTextToPlayer(BN,0.,0.,10.0,Q5(BN,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(BN,0.,0.,10.0,"To become an observer, you should have no units!")
set Jb=Jb-1
endif
endif
else
set Kb[Jb]="when calling noteToPlayer in Commands, line 102"
set Jb=Jb+1
call DisplayTimedTextToPlayer(BN,0.,0.,10.0,Q5(BN,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(BN,0.,0.,10.0,"Couldn't find command: '"+CN[0]+"'")
set Jb=Jb-1
endif
set Jb=Jb-1
set BN=null
set tM=null
set iM=null
set SM=null
set cM=null
set oM=null
set yM=null
set gM=null
set hM=null
set xM=null
set vM=null
set WM=null
endfunction
function EYw takes nothing returns nothing
set Jb=0
call ZM("Commands, line 111")
endfunction
function Eww takes nothing returns boolean
return true
endfunction
function F0w takes nothing returns boolean
return true
endfunction
function hD takes nothing returns boolean
if GetResearched()!=1378890040 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890040,true)!=2 then
return false
endif
return true
endfunction
function FD takes nothing returns boolean
if not hD() then
return false
endif
return true
endfunction
function FH takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
return true
endfunction
function hK takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990354 then
return false
endif
return true
endfunction
function FK takes nothing returns boolean
if not hK() then
return false
endif
return true
endfunction
function hQ takes nothing returns boolean
if GetResearched()!=1378889796 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889796,true)!=1 then
return false
endif
return true
endfunction
function FQ takes nothing returns boolean
if not hQ() then
return false
endif
return true
endfunction
function pqw takes string cqw,string oqw,integer Oqw,integer lqw,integer bqw,string yqw returns integer
set Kb[Jb]=yqw
set Jb=Jb+1
set Kb[Jb]="when calling alloc_ReligionClass in Religion, line 15"
set Jb=Jb+1
if yl==0 then
if pl<32768 then
set pl=pl+1
set lqw=pl
else
call S4("Out of memory: Could not create ReligionClass.","when calling error in Religion, line 10")
set lqw=0
endif
else
set yl=yl-1
set lqw=bl[yl]
endif
set Jb=Jb-1-1
return lqw
endfunction
function FYw takes nothing returns boolean
set Jb=0
set Kb[Jb]="Religion, line 1"
set Jb=Jb+1
call pqw("Catholicism","Catholic",244,255,96,"when calling new_ReligionClass in Religion, line 29")
call pqw("Orthodoxy","Orthodox",234,0,255,"when calling new_ReligionClass in Religion, line 35")
call pqw("Islam","Muslim",0,151,0,"when calling new_ReligionClass in Religion, line 41")
call pqw("Orthodoxy","Orthodox",234,0,255,"when calling new_ReligionClass in Religion, line 47")
set Jb=Jb-1
return true
endfunction
function Fk takes nothing returns nothing
local group Gk
local code gk
local boolean hk
set b=GetUnitsOfTypeIdAll(1747989301)
set Gk=b
set gk=Rp
set hk=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(Gk,gk)
if hk then
call DestroyGroup(Gk)
endif
call DestroyGroup(b)
set Gk=null
endfunction
function GE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651828,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651827,0)
endfunction
function GH takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990584,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990594,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990583,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990607,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990598,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990606,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990599,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990601,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651855,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651852,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651850,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990595,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990596,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990604,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990603,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990322,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990323,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990321,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990324,0)
endfunction
function GI takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651848,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651846,0)
endfunction
function GX takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function bB takes eventid MV,string wB returns integer
local integer uB
local integer rB
local integer sB
local trigger tB
local integer iB
local integer SB
local integer cB
local integer oB
local boolean OB
local boolean lB
set Kb[Jb]=wB
set Jb=Jb+1
set uB=GetHandleId(MV)
set ZS=ZS+1
set ES[uB]=ZS
set iB=GetHandleId(MV)
if (iB>=18 and iB<=51)or(iB>=269 and iB<=277) then
call N0w(ConvertPlayerUnitEvent(uB),null,If,null)
else
if MV!=EVENT_UNIT_DAMAGED and MV!=EVENT_PLAYER_LEAVE and MV!=vS then
set SB=GetHandleId(MV)
set OB=SB<261 or SB>268 and SB!=17
else
set OB=false
endif
if OB then
set cB=GetHandleId(MV)
set lB=cB<305 or cB>307
else
set lB=false
endif
if lB then
call S4("registering handleid: "+I2S(uB)+" non-playerunitevent. Except EVENT_UNIT_DAMAGED and EVENT_PLAYER_LEAVE these are not supported right now.","when calling error in ClosureEvents, line 243")
endif
endif
set oB=GetHandleId(MV)
if oB>=305 and oB<=307 and(not DS) then
set DS=true
set rB=0
set sB=bj_MAX_PLAYERS-1
loop
exitwhen rB>sB
set tB=WS
call TriggerRegisterPlayerEvent(tB,ro[rB],EVENT_PLAYER_MOUSE_UP)
call TriggerRegisterPlayerEvent(tB,ro[rB],EVENT_PLAYER_MOUSE_DOWN)
call TriggerRegisterPlayerEvent(tB,ro[rB],EVENT_PLAYER_MOUSE_MOVE)
set rB=rB+1
endloop
endif
set Jb=Jb-1
set tB=null
return ZS
endfunction
function P9 takes string E9 returns boolean
local playerunitevent Z9
local integer U9
local integer I9
set Kb[Jb]=E9
set Jb=Jb+1
set Z9=EVENT_PLAYER_UNIT_ISSUED_ORDER
set Kb[Jb]="when calling alloc_NoStarvationOnBoat_EventListener_line6 in NoStarvationOnBoat, line 6"
set Jb=Jb+1
if SO==0 then
if cO<32768 then
set cO=cO+1
set U9=cO
set oO[U9]=674
else
call S4("Out of memory: Could not create NoStarvationOnBoat_EventListener_line6.","when calling error in NoStarvationOnBoat, line 6")
set U9=0
endif
else
set SO=SO-1
set U9=iO[SO]
set oO[U9]=674
endif
set Jb=Jb-1
set Nl[U9]=0
set Ml[U9]=0
set wb[U9]=0
set Kb[Jb]="when calling add in NoStarvationOnBoat, line 6"
set Jb=Jb+1
set Kb[Jb]="when calling toIntId in ClosureEvents, line 112"
set Jb=Jb+1
set I9=ES[GetHandleId(Z9)]
if I9==0 then
set I9=bB(Z9,"when calling registerEventId in ClosureEvents, line 229")
endif
set Jb=Jb-1
set Nl[U9]=I9
if PS[Nl[U9]]!=0 then
set wb[PS[Nl[U9]]]=U9
set Ml[U9]=PS[Nl[U9]]
endif
set PS[Nl[U9]]=U9
set Jb=Jb-1-1
set Z9=null
return true
endfunction
function GYw takes nothing returns boolean
set Jb=0
return P9("NoStarvationOnBoat, line 1")
endfunction
function YZ takes nothing returns boolean
if GetResearched()!=1378889807 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889807,true)!=1 then
return false
endif
return true
endfunction
function GZ takes nothing returns boolean
if not YZ() then
return false
endif
return true
endfunction
function H4 takes nothing returns boolean
return true
endfunction
function HD takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990603,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990604,0)
endfunction
function HF takes nothing returns nothing
local location QF
local location WF
local real EF
local real ZF
local rect UF
local group IF
local group PF
local code AF
local boolean DF
set u=GetUnitLoc(GetSpellAbilityUnit())
set QF=u
set S=Location(GetLocationX(QF)+0.00,GetLocationY(QF)+200.00)
set WF=u
set EF=GetLocationX(WF)
set ZF=GetLocationY(WF)
set o=Rect(EF-140,ZF-150,EF+140,ZF+150)
set UF=o
set IF=CreateGroup()
call GroupEnumUnitsInRect(IF,UF,null)
call DestroyBoolExpr(null)
set l=IF
set PF=l
set AF=yp
set DF=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(PF,AF)
if DF then
call DestroyGroup(PF)
endif
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747989079,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"stand")
call DestroyGroup(l)
call RemoveLocation(S)
call RemoveLocation(u)
set QF=null
set WF=null
set UF=null
set IF=null
set PF=null
endfunction
function HK takes nothing returns nothing
call UnitAddAbility(GetConstructedStructure(),1093677896)
endfunction
function DP takes nothing returns boolean
if GetResearched()!=1378890038 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890038,true)!=1 then
return false
endif
return true
endfunction
function HP takes nothing returns boolean
if not DP() then
return false
endif
return true
endfunction
function HQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988551,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989081,0)
endfunction
function Tlw takes string flw returns integer
local integer Rlw
set Kb[Jb]=flw
set Jb=Jb+1
set Kb[Jb]="when calling alloc_HashMap in HashMap, line 7"
set Jb=Jb+1
if AO==0 then
if DO<32768 then
set DO=DO+1
set Rlw=DO
set HO[Rlw]=728
else
call S4("Out of memory: Could not create HashMap.","when calling error in HashMap, line 8")
set Rlw=0
endif
else
set AO=AO-1
set Rlw=PO[AO]
set HO[Rlw]=728
endif
set Jb=Jb-1
set yb[Rlw]=0
set Jb=Jb-1
return Rlw
endfunction
function aqw takes string eqw returns integer
local integer qqw
set Kb[Jb]=eqw
set Jb=Jb+1
set Kb[Jb]="when calling alloc_Table in Table, line 5"
set Jb=Jb+1
if AO==0 then
if DO<32768 then
set DO=DO+1
set qqw=DO
set HO[qqw]=727
else
call S4("Out of memory: Could not create Table.","when calling error in Table, line 6")
set qqw=0
endif
else
set AO=AO-1
set qqw=PO[AO]
set HO[qqw]=727
endif
set Jb=Jb-1-1
return qqw
endfunction
function HTw takes nothing returns boolean
set Jb=0
set Kb[Jb]="EventHelper, line 1"
set Jb=Jb+1
call Tlw("when calling new_HashMap in EventHelper, line 6")
call Tlw("when calling new_HashMap in EventHelper, line 7")
call aqw("when calling new_Table in EventHelper, line 8")
set Jb=Jb-1
return true
endfunction
function arw takes string Orw returns nothing
local unit lrw
local integer brw
local player yrw
local integer prw
local integer erw
local boolean qrw
set Kb[Jb]=Orw
set Jb=Jb+1
set lrw=GetEnteringUnit()
set brw=GetPlayerId(GetOwningPlayer(lrw))
set yrw=ro[brw]
if GetPlayerSlotState(yrw)==PLAYER_SLOT_STATE_PLAYING then
set qrw=GetPlayerController(yrw)==MAP_CONTROL_USER
else
set qrw=false
endif
if qrw and(not IsUnitType(lrw,UNIT_TYPE_STRUCTURE)) then
set prw=uo[brw]
set erw=-GetUnitLevel(lrw)
set Kb[Jb]="when calling changeUpkeep in Upkeep, line 25"
set Jb=Jb+1
if ll[prw]==0 then
if prw==0 then
call S4("Nullpointer exception when calling PlayerStats.changeUpkeep","when calling error in PlayerStats, line 51")
else
call S4("Called PlayerStats.changeUpkeep on invalid object.","when calling error in PlayerStats, line 51")
endif
endif
set Pb[prw]=Pb[prw]+erw
set Jb=Jb-1
endif
set Jb=Jb-1
set lrw=null
set yrw=null
endfunction
function HYw takes nothing returns nothing
set Jb=0
call arw("Upkeep, line 21")
endfunction
function Hg takes nothing returns nothing
local location Qg
local location Wg
local real Eg
local real Zg
local rect Ug
local group Ig
local group Pg
local code Ag
local boolean Dg
set u=GetUnitLoc(GetSpellAbilityUnit())
set Qg=u
set c=Location(GetLocationX(Qg)+200.00,GetLocationY(Qg)+0.00)
set Wg=u
set Eg=GetLocationX(Wg)
set Zg=GetLocationY(Wg)
set O=Rect(Eg-150,Zg-140,Eg+150,Zg+140)
set Ug=O
set Ig=CreateGroup()
call GroupEnumUnitsInRect(Ig,Ug,null)
call DestroyBoolExpr(null)
set l=Ig
set Pg=l
set Ag=Xy
set Dg=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(Pg,Ag)
if Dg then
call DestroyGroup(Pg)
endif
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747988825,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"stand")
call DestroyGroup(l)
call RemoveLocation(c)
call RemoveLocation(u)
set Qg=null
set Wg=null
set Ug=null
set Ig=null
set Pg=null
endfunction
function Hh takes nothing returns nothing
local location Qh
local location Wh
local real Eh
local real Zh
local rect Uh
local group Ih
local group Ph
local code Ah
local boolean Dh
set u=GetUnitLoc(GetSpellAbilityUnit())
set Qh=u
set S=Location(GetLocationX(Qh)+0.00,GetLocationY(Qh)+200.00)
set Wh=u
set Eh=GetLocationX(Wh)
set Zh=GetLocationY(Wh)
set o=Rect(Eh-140,Zh-150,Eh+140,Zh+150)
set Uh=o
set Ih=CreateGroup()
call GroupEnumUnitsInRect(Ih,Uh,null)
call DestroyBoolExpr(null)
set l=Ih
set Ph=l
set Ah=sp
set Dh=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(Ph,Ah)
if Dh then
call DestroyGroup(Ph)
endif
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747990090,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"stand")
call DestroyGroup(l)
call RemoveLocation(S)
call RemoveLocation(u)
set Qh=null
set Wh=null
set Uh=null
set Ih=null
set Ph=null
endfunction
function IE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989301,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988790,0)
endfunction
function II takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989816,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989815,0)
endfunction
function Rww takes string dww returns boolean
local integer fww
set Kb[Jb]=dww
set Jb=Jb+1
set Ao=aqw("when calling new_Table in TypeCasting, line 6")
set Kb[Jb]="when calling initTypecastData in TypeCasting, line 14"
set Jb=Jb+1
set fww=Ao
set Kb[Jb]="when calling saveString in TypeCasting, line 11"
set Jb=Jb+1
if HO[fww]==0 then
if fww==0 then
call S4("Nullpointer exception when calling Table.saveString","when calling error in Table, line 60")
else
call S4("Called Table.saveString on invalid object.","when calling error in Table, line 60")
endif
endif
call SaveStr(Zo,fww,0,"")
set Jb=Jb-1-1-1
return true
endfunction
function ITw takes nothing returns boolean
set Jb=0
return Rww("TypeCasting, line 1")
endfunction
function IX takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function IY takes nothing returns nothing
local player QY=GetOwningPlayer(GetAttacker())
local player WY=GetOwningPlayer(GetAttacker())
local player EY
local player ZY
local unit UY
set r[GetPlayerId(QY)+1]=r[GetPlayerId(WY)+1]+1
set EY=GetOwningPlayer(GetTriggerUnit())
set ZY=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(EY)+1]=r[GetPlayerId(ZY)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set UY=GetTriggerUnit()
call SetUnitState(UY,UNIT_STATE_LIFE,GetUnitState(UY,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set QY=null
set WY=null
set EY=null
set ZY=null
set UY=null
endfunction
function D2 takes string Y2 returns nothing
local fogmodifier array G2
local integer g2
local integer h2
local integer F2
local integer k2
local integer j2
local player x2
local fogstate v2
local location m2
local rect Q2
local force W2
local integer E2
local integer Z2
local integer U2
local integer I2
local string P2
local force A2
set Kb[Jb]=Y2
set Jb=Jb+1
if kc then
set Jb=Jb-1
set x2=null
set v2=null
set m2=null
set Q2=null
set W2=null
set A2=null
return
endif
set g2=0
set h2=23
loop
exitwhen g2>h2
set x2=ro[g2]
set v2=FOG_OF_WAR_VISIBLE
set Q2=bj_mapInitialPlayableArea
set m2=Location(GetRectCenterX(Q2),GetRectCenterY(Q2))
set bj_lastCreatedFogModifier=CreateFogModifierRadiusLoc(x2,v2,m2,999999.00,true,false)
call FogModifierStart(bj_lastCreatedFogModifier)
set G2[g2]=bj_lastCreatedFogModifier
call FogModifierStart(G2[g2])
set g2=g2+1
endloop
set W2=bj_FORCE_ALL_PLAYERS
if IsPlayerInForce(GetLocalPlayer(),W2) then
call ShowInterface(false,0.50)
endif
set E2=gc
set Kb[Jb]="when calling iterator in MainInit, line 89"
set Jb=Jb+1
set Z2=Abw(E2,"when calling new_LLIterator in LinkedList, line 165")
set Jb=Jb-1
set F2=Z2
loop
exitwhen fb[Tb[F2]]==Rb[F2]
set Tb[F2]=fb[Tb[F2]]
set U2=nb[Tb[F2]]
set Kb[Jb]="when calling stringFromIndex in MainInit, line 89"
set Jb=Jb+1
set I2=Ao
set Kb[Jb]="when calling loadString in TypeCasting, line 35"
set Jb=Jb+1
if HO[I2]==0 then
if I2==0 then
call S4("Nullpointer exception when calling Table.loadString","when calling error in Table, line 57")
else
call S4("Called Table.loadString on invalid object.","when calling error in Table, line 57")
endif
endif
set P2=LoadStr(Zo,I2,U2)
set Jb=Jb-1-1
set Y2=P2
if not hc then
set A2=bj_FORCE_ALL_PLAYERS
if IsPlayerInForce(GetLocalPlayer(),A2) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,10.0,P2)
endif
call TriggerSleepAction(12.5)
endif
endloop
set Kb[Jb]="when calling close in MainInit, line 89"
set Jb=Jb+1
if Gb[F2]then
call bdw(F2,"when calling dispatch_LLIterator_destroyLLIterator in LinkedList, line 450")
endif
set Jb=Jb-1
call CinematicModeExBJ(false,bj_FORCE_ALL_PLAYERS,bj_CINEMODE_INTERFACEFADE)
set k2=0
set j2=23
loop
exitwhen k2>j2
call FogModifierStop(G2[k2])
set k2=k2+1
endloop
set hc=true
set Jb=Jb-1
set x2=null
set v2=null
set m2=null
set Q2=null
set W2=null
set A2=null
endfunction
function IYw takes nothing returns nothing
set Jb=0
call D2("MainInit, line 138")
endfunction
function UZ takes nothing returns boolean
if GetResearched()!=1378889806 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889806,true)!=1 then
return false
endif
return true
endfunction
function IZ takes nothing returns boolean
if not UZ() then
return false
endif
return true
endfunction
function J4 takes nothing returns boolean
set Fc=false
set kc=false
set jc=CreateTimer()
call TimerStart(jc,0.01,true,Xf)
return true
endfunction
function HA takes nothing returns boolean
if GetResearched()!=1378890051 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890051,true)!=1 then
return false
endif
return true
endfunction
function JA takes nothing returns boolean
if not HA() then
return false
endif
return true
endfunction
function JE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989057,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988558,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988551,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989066,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651824,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651826,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988818,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989080,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989072,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989082,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988559,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988812,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651828,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989065,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989067,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989301,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651843,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988561,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988788,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988565,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988566,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988567,0)
endfunction
function JP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989830,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989829,0)
endfunction
function JT takes nothing returns nothing
call SetFloatGameState(GAME_STATE_TIME_OF_DAY,bj_MELEE_STARTING_TOD)
call MeleeStartingHeroLimit()
endfunction
function JTw takes nothing returns boolean
set Jb=0
set Kb[Jb]="RegisterEvents, line 1"
set Jb=Jb+1
set qo=Tlw("when calling new_HashMap in RegisterEvents, line 55")
call N0w(EVENT_PLAYER_UNIT_SPELL_EFFECT,null,oR,null)
set Jb=Jb-1
return true
endfunction
function HU takes nothing returns boolean
if GetResearched()!=1378890035 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890035,true)!=1 then
return false
endif
return true
endfunction
function JU takes nothing returns boolean
if not HU() then
return false
endif
return true
endfunction
function EV takes integer QV,integer WV returns integer
if QV==1 then
if WV==0 then
return 1747989059
elseif WV==1 then
return 1747990351
elseif WV==2 then
return 1747989331
elseif WV==3 then
return 1747990353
else
return 1747989059
endif
elseif QV==2 then
if WV==0 then
return 1747989060
elseif WV==1 then
return 1747990352
elseif WV==2 then
return 1747990350
elseif WV==3 then
return 1747990354
else
return 1747989060
endif
elseif QV==3 then
if WV==0 then
return 1747988844
elseif WV==1 then
return 1747990356
elseif WV==2 then
return 1747989809
elseif WV==3 then
return 1747990355
else
return 1747988844
endif
elseif WV==0 then
return 1747989059
elseif WV==1 then
return 1747990351
elseif WV==2 then
return 1747989331
elseif WV==3 then
return 1747990353
else
return 1747989059
endif
endfunction
function mV takes integer vV returns integer
if vV==1747989059 then
return 1
elseif vV==1747989060 then
return 2
elseif vV==1747988844 then
return 3
elseif vV==1747990351 then
return 1
elseif vV==1747990352 then
return 2
elseif vV==1747990356 then
return 3
elseif vV==1747989331 then
return 1
elseif vV==1747990350 then
return 2
elseif vV==1747989809 then
return 3
elseif vV==1747990353 then
return 1
elseif vV==1747990354 then
return 2
elseif vV==1747990355 then
return 3
else
return 1
endif
endfunction
function Gsw takes integer csw,string osw returns nothing
local unit Osw
local player lsw
local integer bsw
local boolean ysw
local unit psw
local integer esw
local integer qsw
local boolean asw
local real nsw
local boolean dsw
local integer fsw
local real Rsw
local real Tsw
local real Ysw
set Kb[Jb]=osw
set Jb=Jb+1
set Osw=GetTriggerUnit()
set csw=No
set bsw=GetUnitTypeId(Osw)
set Kb[Jb]="when calling has in CastleCapture, line 11"
set Jb=Jb+1
if tl[csw]==0 then
if csw==0 then
call S4("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call S4("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set ysw=Bbw(csw,bsw)
set Jb=Jb-1
if ysw then
if GetUnitStatePercent(Osw,UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)<=50.0 then
set asw=GetOwningPlayer(Osw)!=GetOwningPlayer(GetAttacker())
else
set asw=false
endif
if asw then
set nsw=GetUnitX(Osw)
set Rsw=GetUnitY(Osw)
set psw=GetAttacker()
set Tsw=nsw-GetUnitX(psw)
set Ysw=Rsw-GetUnitY(psw)
set dsw=SquareRoot(Tsw*Tsw+Ysw*Ysw)<=300.0
else
set dsw=false
endif
if dsw then
set lsw=GetOwningPlayer(GetAttacker())
call SetUnitOwner(Osw,lsw,true)
if GetPlayerId(lsw)!=PLAYER_NEUTRAL_AGGRESSIVE then
set fsw=mV(GetUnitTypeId(Osw))
set esw=uo[GetPlayerId(lsw)]
set Kb[Jb]="when calling getForceId in CastleCapture, line 17"
set Jb=Jb+1
if ll[esw]==0 then
if esw==0 then
call S4("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 122")
else
call S4("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 122")
endif
endif
set qsw=Eb[esw]
set Jb=Jb-1
call ReplaceUnitBJ(Osw,EV(fsw,qsw),bj_UNIT_STATE_METHOD_RELATIVE)
endif
call SetUnitState(Osw,UNIT_STATE_LIFE,GetUnitState(Osw,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,60.0)*0.01)
call SetUnitState(Osw,UNIT_STATE_MANA,GetUnitState(Osw,UNIT_STATE_MAX_MANA)*RMaxBJ(0.,0.0)*0.01)
call UnitAddAbility(Osw,1093677896)
endif
endif
set Jb=Jb-1
set Osw=null
set lsw=null
set psw=null
endfunction
function HOw takes integer xOw,string vOw returns nothing
local unit mOw
local integer QOw
local integer WOw
local boolean EOw
local integer ZOw
local boolean UOw
local player IOw
local boolean POw
local boolean AOw
local boolean DOw
set Kb[Jb]=vOw
set Jb=Jb+1
set mOw=GetTriggerUnit()
set Kb[Jb]="when calling isCity in Garissons, line 8"
set Jb=Jb+1
set QOw=Mo
set WOw=GetUnitTypeId(mOw)
set Kb[Jb]="when calling has in City, line 423"
set Jb=Jb+1
if tl[QOw]==0 then
if QOw==0 then
call S4("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call S4("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set EOw=Bbw(QOw,WOw)
set Jb=Jb-1-1
if EOw then
set POw=true
else
set xOw=No
set ZOw=GetUnitTypeId(mOw)
set Kb[Jb]="when calling has in Garissons, line 8"
set Jb=Jb+1
if tl[xOw]==0 then
if xOw==0 then
call S4("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call S4("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set UOw=Bbw(xOw,ZOw)
set Jb=Jb-1
set POw=UOw
endif
if POw then
set IOw=GetOwningPlayer(mOw)
if GetPlayerSlotState(IOw)==PLAYER_SLOT_STATE_PLAYING then
set AOw=GetPlayerController(IOw)==MAP_CONTROL_USER
else
set AOw=false
endif
set DOw=not AOw
else
set DOw=false
endif
if DOw then
call IssueImmediateOrder(mOw,"spiritwolf")
endif
set Jb=Jb-1
set mOw=null
set IOw=null
endfunction
function CV takes unit DV,string HV returns integer
local integer JV
local integer KV
local integer LV
local unit XV
set Kb[Jb]=HV
set Jb=Jb+1
set JV=0
set KV=TS-1
loop
exitwhen JV>KV
set LV=xS[JV]
set HV="when calling getCityUnit in City, line 429"
set Kb[Jb]="when calling getCityUnit in City, line 429"
set Jb=Jb+1
if qO[LV]==0 then
if LV==0 then
call S4("Nullpointer exception when calling City.getCityUnit","when calling error in City, line 176")
else
call S4("Called City.getCityUnit on invalid object.","when calling error in City, line 176")
endif
endif
set XV=kl[LV]
set Jb=Jb-1
if XV==DV then
set Jb=Jb-1
set XV=null
return JV
endif
set JV=JV+1
endloop
set Jb=Jb-1
set XV=null
return -1
endfunction
function Qdw takes integer xdw,integer vdw,string mdw returns nothing
set Kb[Jb]=mdw
set Jb=Jb+1
if ll[xdw]==0 then
if xdw==0 then
call S4("Nullpointer exception when calling PlayerStats.setSelectedCityId","when calling error in PlayerStats, line 116")
else
call S4("Called PlayerStats.setSelectedCityId on invalid object.","when calling error in PlayerStats, line 116")
endif
endif
set Kb[Jb]="when calling setSelectedCityId in PlayerStats, line 116"
set Jb=Jb+1
if vdw>=0 and vdw<TS then
set Ib[xdw]=vdw
set Kb[Jb]="when calling refreshMultiboardCity in PlayerStats, line 119"
set Jb=Jb+1
if ll[xdw]==0 then
if xdw==0 then
call S4("Nullpointer exception when calling PlayerStats.refreshMultiboardCity","when calling error in PlayerStats, line 71")
else
call S4("Called PlayerStats.refreshMultiboardCity on invalid object.","when calling error in PlayerStats, line 71")
endif
endif
call Mpw(xdw,"when calling refreshMultiboardCity in PlayerStats, line 71")
set Jb=Jb-1
endif
set Jb=Jb-1-1
endfunction
function Psw takes integer Wsw,string Esw returns nothing
local unit Zsw
local integer Usw
local boolean Isw
set Kb[Jb]=Esw
set Jb=Jb+1
set Zsw=GetTriggerUnit()
set Kb[Jb]="when calling isCity in CityManage, line 10"
set Jb=Jb+1
set Kb[Jb]="when calling isCity in UnitTools, line 5"
set Jb=Jb+1
set Wsw=Mo
set Usw=GetUnitTypeId(Zsw)
set Kb[Jb]="when calling has in City, line 423"
set Jb=Jb+1
if tl[Wsw]==0 then
if Wsw==0 then
call S4("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call S4("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set Isw=Bbw(Wsw,Usw)
set Jb=Jb-1-1-1
if Isw then
call Qdw(uo[GetPlayerId(GetTriggerPlayer())],CV(GetTriggerUnit(),"when calling getCityId in CityManage, line 11"),"when calling setSelectedCityId in CityManage, line 11")
endif
set Jb=Jb-1
set Zsw=null
endfunction
function d5 takes real p5,real e5,real q5,real a5,real n5 returns real
set q5=GetRandomReal(q5,a5)
return (p5+e5)/2.+y5(q5)*Pow(2.718281828,-(Pow(q5,2.)/2.*n5))/SquareRoot(6.283185482*n5)*((e5-p5)/2.)
endfunction
function inw takes integer unw,timer rnw,real snw,string tnw returns nothing
set Kb[Jb]=tnw
set Jb=Jb+1
if kO[unw]==0 then
if unw==0 then
call S4("Nullpointer exception when calling CallbackPeriodic.start","when calling error in ClosureTimers, line 132")
else
call S4("Called CallbackPeriodic.start on invalid object.","when calling error in ClosureTimers, line 132")
endif
endif
set Kb[Jb]="when calling start in ClosureTimers, line 132"
set Jb=Jb+1
call iww(rnw,unw,"when calling setData in ClosureTimers, line 134")
call TimerStart(rnw,snw,true,cR)
set Jb=Jb-1-1
endfunction
function LSw takes integer kSw,unit jSw,string xSw,integer vSw,integer mSw,string QSw returns nothing
local real WSw
local real ESw
local unit ZSw
local player USw
local real ISw
local integer PSw
local timer ASw
local integer DSw
local timer HSw
local real JSw
local real KSw
set Kb[Jb]=QSw
set Jb=Jb+1
set Dl[kSw]=0
set Hl[kSw]=0.
set Jl[kSw]=iyw("when calling new_LinkedList in City, line 103")
set Al[kSw]=1.0
set kl[kSw]=jSw
set ZSw=kl[kSw]
set JSw=GetUnitX(ZSw)
set KSw=GetUnitY(ZSw)
set Ql[kSw]=JSw
set Wl[kSw]=KSw
set jl[kSw]=xSw
set vl[kSw]=vSw
set USw=GetOwningPlayer(kl[kSw])
set ml[kSw]=GetPlayerId(USw)
set jl[kSw]=SubString(xSw,0,24)
set xl[kSw]=TS
set TS=TS+1
set Ul[kSw]=d5(GS[0],GS[1],-5.0,5.0,0.15)
set ISw=d5(gdw(gS[mSw],0,"when calling get in City, line 121")*1.,gdw(gS[mSw],1,"when calling get in City, line 121")*1.,-5.0,5.0,0.15)
set El[kSw]=R2I(ISw)
set Pl[kSw]=0.
set WSw=2.5+GetRandomReal(2.5,5.0)
set Kb[Jb]="when calling alloc_City_City_CallbackPeriodic_line126 in City, line 126"
set Jb=Jb+1
if hO==0 then
if FO<32768 then
set FO=FO+1
set PSw=FO
set kO[PSw]=631
else
call S4("Out of memory: Could not create City_City_CallbackPeriodic_line126.","when calling error in City, line 126")
set PSw=0
endif
else
set hO=hO-1
set PSw=gO[hO]
set kO[PSw]=631
endif
set Jb=Jb-1
set Vl[PSw]=kSw
set Kb[Jb]="when calling doPeriodically in City, line 126"
set Jb=Jb+1
set ASw=eww("when calling getTimer in ClosureTimers, line 57")
set Kb[Jb]="when calling doPeriodically in ClosureTimers, line 57"
set Jb=Jb+1
call inw(PSw,ASw,WSw,"when calling start in ClosureTimers, line 45")
set Jb=Jb-1-1
set ESw=60+GetRandomReal(60,120.0)
set Kb[Jb]="when calling alloc_City_City_CallbackPeriodic_line142 in City, line 142"
set Jb=Jb+1
if hO==0 then
if FO<32768 then
set FO=FO+1
set DSw=FO
set kO[DSw]=632
else
call S4("Out of memory: Could not create City_City_CallbackPeriodic_line142.","when calling error in City, line 142")
set DSw=0
endif
else
set hO=hO-1
set DSw=gO[hO]
set kO[DSw]=632
endif
set Jb=Jb-1
set Bl[DSw]=kSw
set Kb[Jb]="when calling doPeriodically in City, line 142"
set Jb=Jb+1
set HSw=eww("when calling getTimer in ClosureTimers, line 57")
set Kb[Jb]="when calling doPeriodically in ClosureTimers, line 57"
set Jb=Jb+1
call inw(DSw,HSw,ESw,"when calling start in ClosureTimers, line 45")
set Jb=Jb-1-1-1
set ZSw=null
set USw=null
set ASw=null
set HSw=null
endfunction
function FSw takes unit RSw,string TSw,integer YSw,integer GSw,string gSw returns integer
local integer hSw
set Kb[Jb]=gSw
set Jb=Jb+1
set Kb[Jb]="when calling alloc_City in City, line 100"
set Jb=Jb+1
if pO==0 then
if eO<32768 then
set eO=eO+1
set hSw=eO
set qO[hSw]=653
else
call S4("Out of memory: Could not create City.","when calling error in City, line 70")
set hSw=0
endif
else
set pO=pO-1
set hSw=yO[pO]
set qO[hSw]=653
endif
set Jb=Jb-1
call LSw(hSw,RSw,TSw,YSw,GSw,"when calling construct_City in City, line 100")
set Jb=Jb-1
return hSw
endfunction
function Qsw takes integer gsw,string hsw returns nothing
local unit Fsw
local integer ksw
local boolean jsw
local integer xsw
local integer vsw
local unit msw
set Kb[Jb]=hsw
set Jb=Jb+1
set Fsw=GetConstructedStructure()
set Kb[Jb]="when calling isCity in CityBuilded, line 10"
set Jb=Jb+1
set Kb[Jb]="when calling isCity in UnitTools, line 5"
set Jb=Jb+1
set gsw=Mo
set ksw=GetUnitTypeId(Fsw)
set Kb[Jb]="when calling has in City, line 423"
set Jb=Jb+1
if tl[gsw]==0 then
if gsw==0 then
call S4("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call S4("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set jsw=Bbw(gsw,ksw)
set Jb=Jb-1-1-1
if jsw then
set msw=GetConstructedStructure()
set xsw=uo[GetPlayerId(GetOwningPlayer(GetConstructedStructure()))]
set Kb[Jb]="when calling getForceId in CityBuilded, line 11"
set Jb=Jb+1
if ll[xsw]==0 then
if xsw==0 then
call S4("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 122")
else
call S4("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 122")
endif
endif
set vsw=Eb[xsw]
set Jb=Jb-1
set xS[TS]=FSw(msw,"New",vsw,1,"when calling new_City in CityBuilded, line 11")
endif
set Jb=Jb-1
set Fsw=null
set msw=null
endfunction
function duw takes unit yuw,unit puw returns real
local real euw=GetUnitX(yuw)
local real quw=GetUnitY(yuw)
local real auw=euw-GetUnitX(puw)
local real nuw=quw-GetUnitY(puw)
return SquareRoot(auw*auw+nuw*nuw)
endfunction
function Sqw takes integer Iew,string Pew returns nothing
local unit Aew
local integer Dew
local player Hew
local group Jew
local integer Kew
local boolean Lew
local location Xew
local group Cew
local unit Vew
local integer Bew
local boolean New
local integer Mew
local integer wqw
local boolean uqw
local timer rqw
local boolean sqw
local boolean tqw
local boolean iqw
set Kb[Jb]=Pew
set Jb=Jb+1
set Aew=GetTriggerUnit()
set Dew=GetUnitTypeId(Aew)
set Kew=yo
set Kb[Jb]="when calling has in RangeChecks, line 14"
set Jb=Jb+1
if tl[Kew]==0 then
if Kew==0 then
call S4("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call S4("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set Lew=Bbw(Kew,Dew)
set Jb=Jb-1
if Lew then
set Hew=GetOwningPlayer(Aew)
set Xew=GetUnitLoc(Aew)
set Cew=CreateGroup()
call GroupEnumUnitsInRangeOfLoc(Cew,Xew,2000.0,null)
call DestroyBoolExpr(null)
set dc=CreateGroup()
call ForGroup(Cew,Hf)
set Jew=dc
loop
exitwhen FirstOfGroup(Jew)==null
set Vew=FirstOfGroup(Jew)
call GroupRemoveUnit(Jew,Vew)
if GetOwningPlayer(Vew)==Hew and Vew!=Aew then
if GetUnitTypeId(Vew)==Dew and duw(Vew,Aew)<=1500 then
set tqw=true
else
set Bew=No
set Kb[Jb]="when calling has in RangeChecks, line 21"
set Jb=Jb+1
if tl[Bew]==0 then
if Bew==0 then
call S4("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call S4("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set New=Bbw(Bew,Dew)
set Jb=Jb-1
if New then
set Mew=No
set wqw=GetUnitTypeId(Vew)
set Kb[Jb]="when calling has in RangeChecks, line 21"
set Jb=Jb+1
if tl[Mew]==0 then
if Mew==0 then
call S4("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call S4("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set uqw=Bbw(Mew,wqw)
set Jb=Jb-1
set sqw=uqw
else
set sqw=false
endif
set tqw=sqw
endif
set iqw=tqw
else
set iqw=false
endif
if iqw then
set Kb[Jb]="when calling alloc_RangeChecks_CallbackSingle_line23 in RangeChecks, line 23"
set Jb=Jb+1
if TO==0 then
if YO<32768 then
set YO=YO+1
set Iew=YO
set GO[Iew]=652
else
call S4("Out of memory: Could not create RangeChecks_CallbackSingle_line23.","when calling error in RangeChecks, line 23")
set Iew=0
endif
else
set TO=TO-1
set Iew=RO[TO]
set GO[Iew]=652
endif
set Jb=Jb-1
set Db[Iew]=Aew
set Kb[Jb]="when calling doAfter in RangeChecks, line 23"
set Jb=Jb+1
set rqw=eww("when calling getTimer in ClosureTimers, line 27")
set Kb[Jb]="when calling doAfter in ClosureTimers, line 27"
set Jb=Jb+1
call anw(Iew,rqw,0.01,"when calling start in ClosureTimers, line 16")
set Jb=Jb-1-1
if Dew==1747988557 then
set Kb[Jb]="when calling attentionToPlayer in RangeChecks, line 27"
set Jb=Jb+1
call DisplayTimedTextToPlayer(Hew,0.,0.,10.0,L5(Hew,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(Hew,0.,0.,10.0,"You cannot build settlements too close to each other.")
set Jb=Jb-1
elseif Dew==1747989041 then
set Kb[Jb]="when calling attentionToPlayer in RangeChecks, line 29"
set Jb=Jb+1
call DisplayTimedTextToPlayer(Hew,0.,0.,10.0,L5(Hew,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(Hew,0.,0.,10.0,"You cannot build settlements too close to each other.")
set Jb=Jb-1
elseif Dew==1747990344 then
set Kb[Jb]="when calling attentionToPlayer in RangeChecks, line 31"
set Jb=Jb+1
call DisplayTimedTextToPlayer(Hew,0.,0.,10.0,L5(Hew,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(Hew,0.,0.,10.0,"You cannot build settlements too close to each other.")
set Jb=Jb-1
elseif Dew==1747989075 then
set Pew="You cannot build churches too close to each other."
set Kb[Jb]="when calling attentionToPlayer in RangeChecks, line 33"
set Jb=Jb+1
call DisplayTimedTextToPlayer(Hew,0.,0.,10.0,L5(Hew,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(Hew,0.,0.,10.0,"You cannot build churches too close to each other.")
set Jb=Jb-1
elseif Dew==1747990102 then
set Kb[Jb]="when calling attentionToPlayer in RangeChecks, line 35"
set Jb=Jb+1
call DisplayTimedTextToPlayer(Hew,0.,0.,10.0,L5(Hew,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(Hew,0.,0.,10.0,"You cannot build churches too close to each other.")
set Jb=Jb-1
elseif Dew==1747988785 then
set Kb[Jb]="when calling attentionToPlayer in RangeChecks, line 37"
set Jb=Jb+1
call DisplayTimedTextToPlayer(Hew,0.,0.,10.0,L5(Hew,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(Hew,0.,0.,10.0,"You cannot build churches too close to each other.")
set Jb=Jb-1
elseif Dew==1747989839 then
set Kb[Jb]="when calling attentionToPlayer in RangeChecks, line 39"
set Jb=Jb+1
call DisplayTimedTextToPlayer(Hew,0.,0.,10.0,L5(Hew,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(Hew,0.,0.,10.0,"You cannot build mosques too close to each other.")
set Jb=Jb-1
elseif Dew==1747989059 then
set Kb[Jb]="when calling attentionToPlayer in RangeChecks, line 41"
set Jb=Jb+1
call DisplayTimedTextToPlayer(Hew,0.,0.,10.0,L5(Hew,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(Hew,0.,0.,10.0,"You cannot build castles too close to each other.")
set Jb=Jb-1
elseif Dew==1747989331 then
set Kb[Jb]="when calling attentionToPlayer in RangeChecks, line 43"
set Jb=Jb+1
call DisplayTimedTextToPlayer(Hew,0.,0.,10.0,L5(Hew,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(Hew,0.,0.,10.0,"You cannot build castles too close to each other.")
set Jb=Jb-1
elseif Dew==1747990351 then
set Kb[Jb]="when calling attentionToPlayer in RangeChecks, line 45"
set Jb=Jb+1
call DisplayTimedTextToPlayer(Hew,0.,0.,10.0,L5(Hew,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(Hew,0.,0.,10.0,"You cannot build castles too close to each other.")
set Jb=Jb-1
elseif Dew==1747990353 then
set Kb[Jb]="when calling attentionToPlayer in RangeChecks, line 47"
set Jb=Jb+1
call DisplayTimedTextToPlayer(Hew,0.,0.,10.0,L5(Hew,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(Hew,0.,0.,10.0,"You cannot build castles too close to each other.")
set Jb=Jb-1
elseif Dew==1747988568 then
set Kb[Jb]="when calling attentionToPlayer in RangeChecks, line 49"
set Jb=Jb+1
call DisplayTimedTextToPlayer(Hew,0.,0.,10.0,L5(Hew,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(Hew,0.,0.,10.0,"You cannot build inns too close to each other.")
set Jb=Jb-1
elseif Dew==1747990341 then
set Kb[Jb]="when calling attentionToPlayer in RangeChecks, line 51"
set Jb=Jb+1
call DisplayTimedTextToPlayer(Hew,0.,0.,10.0,L5(Hew,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(Hew,0.,0.,10.0,"You cannot build inns too close to each other.")
set Jb=Jb-1
endif
exitwhen true
endif
endloop
call GroupClear(Jew)
call DestroyGroup(Jew)
endif
set Jb=Jb-1
set Aew=null
set Hew=null
set Jew=null
set Xew=null
set Cew=null
set Vew=null
set rqw=null
endfunction
function Tbw takes integer nbw returns nothing
local unit dbw=GetConstructingStructure()
local player fbw
local player Rbw
if GetUnitTypeId(dbw)==1747990614 then
set fbw=GetOwningPlayer(dbw)
set Rbw=GetOwningPlayer(dbw)
set Gc[GetPlayerId(fbw)]=Gc[GetPlayerId(Rbw)]-1
endif
set dbw=null
set fbw=null
set Rbw=null
endfunction
function Jnw takes integer Pnw,integer Anw,string Dnw returns boolean
local boolean Hnw
set Kb[Jb]=Dnw
set Jb=Jb+1
if HO[Pnw]==0 then
if Pnw==0 then
call S4("Nullpointer exception when calling HashMap.has","when calling error in HashMap, line 13")
else
call S4("Called HashMap.has on invalid object.","when calling error in HashMap, line 13")
endif
endif
set Kb[Jb]="when calling has in HashMap, line 13"
set Jb=Jb+1
set Kb[Jb]="when calling hasInt in HashMap, line 14"
set Jb=Jb+1
if HO[Pnw]==0 then
if Pnw==0 then
call S4("Nullpointer exception when calling Table.hasInt","when calling error in Table, line 9")
else
call S4("Called Table.hasInt on invalid object.","when calling error in Table, line 9")
endif
endif
set Hnw=HaveSavedInteger(Zo,Pnw,Anw)
set Jb=Jb-1-1-1
return Hnw
endfunction
function Uww takes integer vww,string mww returns unit
local integer Qww
local fogstate Www
local integer Eww_2
local unit Zww
set Kb[Jb]=mww
set Jb=Jb+1
set Qww=Ao
set Www=ConvertFogState(vww)
set Kb[Jb]="when calling saveFogState in TypeCasting, line 52"
set Jb=Jb+1
if HO[Qww]==0 then
if Qww==0 then
call S4("Nullpointer exception when calling Table.saveFogState","when calling error in Table, line 168")
else
call S4("Called Table.saveFogState on invalid object.","when calling error in Table, line 168")
endif
endif
call SaveFogStateHandle(Zo,Qww,0,Www)
set Jb=Jb-1
set Eww_2=Ao
set Kb[Jb]="when calling loadUnit in TypeCasting, line 53"
set Jb=Jb+1
if HO[Eww_2]==0 then
if Eww_2==0 then
call S4("Nullpointer exception when calling Table.loadUnit","when calling error in Table, line 75")
else
call S4("Called Table.loadUnit on invalid object.","when calling error in Table, line 75")
endif
endif
set Zww=LoadUnitHandle(Zo,Eww_2,0)
set Jb=Jb-1-1
set yR=Zww
set Www=null
set Zww=null
return yR
endfunction
function rlw takes integer BOw,integer NOw,string MOw returns nothing
local hashtable wlw
local integer ulw
set Kb[Jb]=MOw
set Jb=Jb+1
set wlw=Rc
set Kb[Jb]="when calling count in HashList, line 22"
set Jb=Jb+1
if IO[BOw]==0 then
if BOw==0 then
call S4("Nullpointer exception when calling HashList.count","when calling error in HashList, line 15")
else
call S4("Called HashList.count on invalid object.","when calling error in HashList, line 15")
endif
endif
set ulw=LoadInteger(Rc,BOw,NOw)
set Jb=Jb-1
call SaveInteger(wlw,BOw,NOw,ulw-1)
set Jb=Jb-1
set wlw=null
endfunction
function Olw takes integer slw,integer tlw,string ilw returns nothing
local integer Slw
local integer clw
local integer olw
set Kb[Jb]=ilw
set Jb=Jb+1
set olw=LoadInteger(fc,slw,tlw)
set Kb[Jb]="when calling decrOccurences in HashList, line 54"
set Jb=Jb+1
if IO[slw]==0 then
if slw==0 then
call S4("Nullpointer exception when calling HashList.decrOccurences","when calling error in HashList, line 21")
else
call S4("Called HashList.decrOccurences on invalid object.","when calling error in HashList, line 21")
endif
endif
call rlw(slw,olw,"when calling decrOccurences in HashList, line 21")
set Jb=Jb-1
set Slw=tlw
set clw=bb[slw]
loop
exitwhen Slw>clw
call SaveInteger(fc,slw,Slw,LoadInteger(fc,slw,Slw+1))
set Slw=Slw+1
endloop
set bb[slw]=bb[slw]-1
set Jb=Jb-1
endfunction
function Xlw takes integer Wlw,integer Elw,string Zlw returns nothing
local integer Ulw
local integer Ilw
local hashtable Plw
local integer Alw
local integer Dlw
local hashtable Hlw
local integer Jlw
local hashtable Klw
local integer Llw
set Kb[Jb]=Zlw
set Jb=Jb+1
set Plw=Tc
set Kb[Jb]="when calling get in HashSet, line 22"
set Jb=Jb+1
if IO[Wlw]==0 then
if Wlw==0 then
call S4("Nullpointer exception when calling HashList.get","when calling error in HashList, line 79")
else
call S4("Called HashList.get on invalid object.","when calling error in HashList, line 79")
endif
endif
set Alw=LoadInteger(fc,Wlw,Elw)
set Jb=Jb-1
call RemoveSavedInteger(Plw,Wlw,Alw)
set Ulw=Elw+1
set Kb[Jb]="when calling size in HashSet, line 23"
set Jb=Jb+1
if IO[Wlw]==0 then
if Wlw==0 then
call S4("Nullpointer exception when calling HashList.size","when calling error in HashList, line 67")
else
call S4("Called HashList.size on invalid object.","when calling error in HashList, line 67")
endif
endif
set Dlw=bb[Wlw]
set Jb=Jb-1
set Ilw=Dlw
loop
exitwhen Ulw>Ilw
set Hlw=Tc
set Kb[Jb]="when calling get in HashSet, line 24"
set Jb=Jb+1
if IO[Wlw]==0 then
if Wlw==0 then
call S4("Nullpointer exception when calling HashList.get","when calling error in HashList, line 79")
else
call S4("Called HashList.get on invalid object.","when calling error in HashList, line 79")
endif
endif
set Jlw=LoadInteger(fc,Wlw,Ulw)
set Jb=Jb-1
set Klw=Tc
set Kb[Jb]="when calling get in HashSet, line 24"
set Jb=Jb+1
if IO[Wlw]==0 then
if Wlw==0 then
call S4("Nullpointer exception when calling HashList.get","when calling error in HashList, line 79")
else
call S4("Called HashList.get on invalid object.","when calling error in HashList, line 79")
endif
endif
set Llw=LoadInteger(fc,Wlw,Ulw)
set Jb=Jb-1
call SaveInteger(Hlw,Wlw,Jlw,LoadInteger(Klw,Wlw,Llw)-1)
set Ulw=Ulw+1
endloop
call Olw(Wlw,Elw,"when calling removeAt in HashSet, line 25")
set Jb=Jb-1
set Plw=null
set Hlw=null
set Klw=null
endfunction
function gnw takes integer Tnw,integer Ynw,string Gnw returns nothing
set Kb[Jb]=Gnw
set Jb=Jb+1
if IO[Tnw]==0 then
if Tnw==0 then
call S4("Nullpointer exception when calling HashList.removeAt","when calling error in HashList, line 53")
else
call S4("Called HashList.removeAt on invalid object.","when calling error in HashList, line 53")
endif
endif
if IO[Tnw]<=691 then
call Olw(Tnw,Ynw,"when calling removeAt in HashList, line 53")
else
call Xlw(Tnw,Ynw,"when calling removeAt in HashList, line 53")
endif
set Jb=Jb-1
endfunction
function wbw takes integer Clw,integer Vlw,string Blw returns nothing
local integer Nlw
local integer Mlw
set Kb[Jb]=Blw
set Jb=Jb+1
set Kb[Jb]="when calling count in HashSet, line 17"
set Jb=Jb+1
if IO[Clw]==0 then
if Clw==0 then
call S4("Nullpointer exception when calling HashList.count","when calling error in HashList, line 15")
else
call S4("Called HashList.count on invalid object.","when calling error in HashList, line 15")
endif
endif
set Nlw=LoadInteger(Rc,Clw,Vlw)
set Jb=Jb-1
if Nlw>0 then
set Mlw=LoadInteger(Tc,Clw,Vlw)
set Kb[Jb]="when calling removeAt in HashSet, line 18"
set Jb=Jb+1
if IO[Clw]==0 then
if Clw==0 then
call S4("Nullpointer exception when calling HashSet.removeAt","when calling error in HashSet, line 21")
else
call S4("Called HashSet.removeAt on invalid object.","when calling error in HashSet, line 21")
endif
endif
call Xlw(Clw,Mlw,"when calling removeAt in HashSet, line 21")
set Jb=Jb-1
endif
set Jb=Jb-1
endfunction
function Qnw takes integer hnw,integer Fnw,string knw returns nothing
local integer jnw
local integer xnw
local integer vnw
local integer mnw
set Kb[Jb]=knw
set Jb=Jb+1
if IO[hnw]==0 then
if hnw==0 then
call S4("Nullpointer exception when calling HashList.remove","when calling error in HashList, line 60")
else
call S4("Called HashList.remove on invalid object.","when calling error in HashList, line 60")
endif
endif
if IO[hnw]<=691 then
set jnw=hnw
set xnw=Fnw
set Kb[Jb]="when calling remove in HashList, line 60"
set Jb=Jb+1
set vnw=0
set mnw=bb[hnw]-1
loop
exitwhen vnw>mnw
if xnw==LoadInteger(fc,jnw,vnw) then
call gnw(jnw,vnw,"when calling removeAt in HashList, line 63")
exitwhen true
endif
set vnw=vnw+1
endloop
set Jb=Jb-1
else
call wbw(hnw,Fnw,"when calling remove in HashList, line 60")
endif
set Jb=Jb-1
endfunction
function dlw takes integer qlw,integer alw,string nlw returns nothing
set Kb[Jb]=nlw
set Jb=Jb+1
if Jnw(qlw,alw,"when calling has in HashMap, line 28") then
set yb[qlw]=yb[qlw]-1
endif
set Kb[Jb]="when calling removeInt in HashMap, line 30"
set Jb=Jb+1
if HO[qlw]==0 then
if qlw==0 then
call S4("Nullpointer exception when calling Table.removeInt","when calling error in Table, line 24")
else
call S4("Called Table.removeInt on invalid object.","when calling error in Table, line 24")
endif
endif
call RemoveSavedInteger(Zo,qlw,alw)
set Jb=Jb-1-1
endfunction
function Qlw takes integer jlw,integer xlw,string vlw returns nothing
local boolean mlw
set Kb[Jb]=vlw
set Jb=Jb+1
call dlw(jlw,xlw,"when calling remove in HashMap, line 66")
set Kb[Jb]="when calling hasKey in HashMap, line 67"
set Jb=Jb+1
if HO[jlw]==0 then
if jlw==0 then
call S4("Nullpointer exception when calling IterableMap.hasKey","when calling error in HashMap, line 87")
else
call S4("Called IterableMap.hasKey on invalid object.","when calling error in HashMap, line 87")
endif
endif
set Kb[Jb]="when calling hasKey in HashMap, line 87"
set Jb=Jb+1
set mlw=Inw(pb[jlw],xlw,"when calling has in HashMap, line 88")
set Jb=Jb-1-1
if mlw then
call Qnw(pb[jlw],xlw,"when calling remove in HashMap, line 68")
endif
set Jb=Jb-1
endfunction
function idw takes integer rdw,integer sdw,string tdw returns nothing
set Kb[Jb]=tdw
set Jb=Jb+1
if HO[rdw]==0 then
if rdw==0 then
call S4("Nullpointer exception when calling HashMap.remove","when calling error in HashMap, line 27")
else
call S4("Called HashMap.remove on invalid object.","when calling error in HashMap, line 27")
endif
endif
if HO[rdw]<=728 then
call dlw(rdw,sdw,"when calling remove in HashMap, line 27")
else
call Qlw(rdw,sdw,"when calling remove in HashMap, line 27")
endif
set Jb=Jb-1
endfunction
function Zyw takes integer Gyw,string gyw returns nothing
local integer hyw
local integer Fyw
local real kyw
local real jyw
local integer xyw
local unit vyw
local integer myw
local integer Qyw
local boolean Wyw
local integer Eyw
set Kb[Jb]=gyw
set Jb=Jb+1
set myw=Ic
set Qyw=GetUnitTypeId(GetOrderedUnit())
set Kb[Jb]="when calling has in MassControl, line 33"
set Jb=Jb+1
if tl[myw]==0 then
if myw==0 then
call S4("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call S4("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set Wyw=Bbw(myw,Qyw)
set Jb=Jb-1
if Wyw then
if Jnw(Zc,GetHandleId(GetOrderedUnit()),"when calling has in MassControl, line 34") then
set hyw=udw(Zc,GetHandleId(GetOrderedUnit()),"when calling get in MassControl, line 35")
set Fyw=GetIssuedOrderId()
set kyw=GetOrderPointX()
set jyw=GetOrderPointY()
set Kb[Jb]="when calling iterator in MassControl, line 38"
set Jb=Jb+1
set Gyw=Abw(hyw,"when calling new_LLIterator in LinkedList, line 165")
set Jb=Jb-1
set xyw=Gyw
loop
exitwhen fb[Tb[xyw]]==Rb[xyw]
set Tb[xyw]=fb[Tb[xyw]]
set vyw=Uww(nb[Tb[xyw]],"when calling unitFromIndex in MassControl, line 38")
set Kb[Jb]="when calling alloc_MassControl_CallbackSingle_line39 in MassControl, line 39"
set Jb=Jb+1
if TO==0 then
if YO<32768 then
set YO=YO+1
set Eyw=YO
set GO[Eyw]=647
else
call S4("Out of memory: Could not create MassControl_CallbackSingle_line39.","when calling error in MassControl, line 39")
set Eyw=0
endif
else
set TO=TO-1
set Eyw=RO[TO]
set GO[Eyw]=647
endif
set Jb=Jb-1
set xb[Eyw]=vyw
set vb[Eyw]=Fyw
set mb[Eyw]=kyw
set Qb[Eyw]=jyw
set Kb[Jb]="when calling doAfter in MassControl, line 39"
set Jb=Jb+1
call yN(eww("when calling getTimer in ClosureTimers, line 27"),0.01,Eyw,"when calling doAfter in ClosureTimers, line 27")
set Jb=Jb-1
endloop
set Kb[Jb]="when calling close in MassControl, line 38"
set Jb=Jb+1
if Gb[xyw]then
call bdw(xyw,"when calling dispatch_LLIterator_destroyLLIterator in LinkedList, line 450")
endif
set Jb=Jb-1
call idw(Zc,GetHandleId(GetOrderedUnit()),"when calling remove in MassControl, line 42")
endif
endif
set Jb=Jb-1
set vyw=null
endfunction
function abw takes integer Obw,string lbw returns nothing
local unit bbw
local player ybw
local player pbw
local player ebw
local timer qbw
set Kb[Jb]=lbw
set Jb=Jb+1
set bbw=GetConstructingStructure()
if GetUnitTypeId(bbw)==1747988808 then
if Yc[GetPlayerId(GetOwningPlayer(bbw))]<3 then
set ybw=GetOwningPlayer(bbw)
set pbw=GetOwningPlayer(bbw)
set Yc[GetPlayerId(ybw)]=Yc[GetPlayerId(pbw)]+1
else
set ebw=GetOwningPlayer(bbw)
set Kb[Jb]="when calling attentionToPlayer in LimitEncampments, line 18"
set Jb=Jb+1
call DisplayTimedTextToPlayer(ebw,0.,0.,10.0,L5(ebw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(ebw,0.,0.,10.0,"You cannot build more than 3 encampments.")
set Jb=Jb-1
set Kb[Jb]="when calling alloc_LimitEncampments_CallbackSingle_line19 in LimitEncampments, line 19"
set Jb=Jb+1
if TO==0 then
if YO<32768 then
set YO=YO+1
set Obw=YO
set GO[Obw]=645
else
call S4("Out of memory: Could not create LimitEncampments_CallbackSingle_line19.","when calling error in LimitEncampments, line 19")
set Obw=0
endif
else
set TO=TO-1
set Obw=RO[TO]
set GO[Obw]=645
endif
set Jb=Jb-1
set eb[Obw]=bbw
set Kb[Jb]="when calling doAfter in LimitEncampments, line 19"
set Jb=Jb+1
set qbw=eww("when calling getTimer in ClosureTimers, line 27")
set Kb[Jb]="when calling doAfter in ClosureTimers, line 27"
set Jb=Jb+1
call anw(Obw,qbw,0.01,"when calling start in ClosureTimers, line 16")
set Jb=Jb-1-1
endif
endif
set Jb=Jb-1
set bbw=null
set ybw=null
set pbw=null
set ebw=null
set qbw=null
endfunction
function dpw takes integer qpw,string apw returns nothing
local force npw
set Kb[Jb]=apw
set Jb=Jb+1
set apw=hN(GetTriggerPlayer())+" has left the game!"
set npw=bj_FORCE_ALL_PLAYERS
if IsPlayerInForce(GetLocalPlayer(),npw) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,5.0,apw)
endif
set qpw=uo[GetPlayerId(GetTriggerPlayer())]
set Kb[Jb]="when calling setInGame in OnPlayerLeave, line 8"
set Jb=Jb+1
if ll[qpw]==0 then
if qpw==0 then
call S4("Nullpointer exception when calling PlayerStats.setInGame","when calling error in PlayerStats, line 45")
else
call S4("Called PlayerStats.setInGame on invalid object.","when calling error in PlayerStats, line 45")
endif
endif
set Ub[qpw]=false
set Jb=Jb-1
call SetPlayerName(GetTriggerPlayer(),GetPlayerName(GetTriggerPlayer())+" [LEFT]")
set Jb=Jb-1
set npw=null
endfunction
function epw takes integer bpw returns nothing
local boolean ypw
local boolean ppw
if GetIssuedOrderId()==852056 then
set ypw=GetUnitTypeId(GetOrderedUnit())!=1747988813
else
set ypw=false
endif
if ypw then
call UnitRemoveAbility(GetOrderedUnit(),1093677904)
endif
if GetIssuedOrderId()==851972 then
set ppw=GetUnitTypeId(GetOrderedUnit())!=1747988813
else
set ppw=false
endif
if ppw then
call UnitAddAbility(GetOrderedUnit(),1093677904)
endif
endfunction
function elw takes integer llw,integer blw,integer ylw,string plw returns nothing
set Kb[Jb]=plw
set Jb=Jb+1
if not Jnw(llw,blw,"when calling has in HashMap, line 18") then
set yb[llw]=yb[llw]+1
endif
set Kb[Jb]="when calling saveInt in HashMap, line 20"
set Jb=Jb+1
if HO[llw]==0 then
if llw==0 then
call S4("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call S4("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Zo,llw,blw,ylw)
set Jb=Jb-1-1
endfunction
function VOw takes integer JOw,integer KOw,string LOw returns nothing
local hashtable XOw
local integer COw
set Kb[Jb]=LOw
set Jb=Jb+1
set XOw=Rc
set Kb[Jb]="when calling count in HashList, line 19"
set Jb=Jb+1
if IO[JOw]==0 then
if JOw==0 then
call S4("Nullpointer exception when calling HashList.count","when calling error in HashList, line 15")
else
call S4("Called HashList.count on invalid object.","when calling error in HashList, line 15")
endif
endif
set COw=LoadInteger(Rc,JOw,KOw)
set Jb=Jb-1
call SaveInteger(XOw,JOw,KOw,COw+1)
set Jb=Jb-1
set XOw=null
endfunction
function gTw takes integer TTw,integer YTw,string GTw returns nothing
set Kb[Jb]=GTw
set Jb=Jb+1
call SaveInteger(fc,TTw,bb[TTw],YTw)
set Kb[Jb]="when calling incrOccurences in HashList, line 28"
set Jb=Jb+1
if IO[TTw]==0 then
if TTw==0 then
call S4("Nullpointer exception when calling HashList.incrOccurences","when calling error in HashList, line 18")
else
call S4("Called HashList.incrOccurences on invalid object.","when calling error in HashList, line 18")
endif
endif
call VOw(TTw,YTw,"when calling incrOccurences in HashList, line 18")
set Jb=Jb-1
set bb[TTw]=bb[TTw]+1
set Jb=Jb-1
endfunction
function mTw takes integer hTw,integer FTw,string kTw returns nothing
local integer jTw
local hashtable xTw
local integer vTw
set Kb[Jb]=kTw
set Jb=Jb+1
set Kb[Jb]="when calling count in HashSet, line 11"
set Jb=Jb+1
if IO[hTw]==0 then
if hTw==0 then
call S4("Nullpointer exception when calling HashList.count","when calling error in HashList, line 15")
else
call S4("Called HashList.count on invalid object.","when calling error in HashList, line 15")
endif
endif
set jTw=LoadInteger(Rc,hTw,FTw)
set Jb=Jb-1
if jTw<=0 then
set xTw=Tc
set Kb[Jb]="when calling size in HashSet, line 12"
set Jb=Jb+1
if IO[hTw]==0 then
if hTw==0 then
call S4("Nullpointer exception when calling HashList.size","when calling error in HashList, line 67")
else
call S4("Called HashList.size on invalid object.","when calling error in HashList, line 67")
endif
endif
set vTw=bb[hTw]
set Jb=Jb-1
call SaveInteger(xTw,hTw,FTw,vTw)
call gTw(hTw,FTw,"when calling add in HashSet, line 13")
endif
set Jb=Jb-1
set xTw=null
endfunction
function ZTw takes integer QTw,integer WTw,string ETw returns nothing
set Kb[Jb]=ETw
set Jb=Jb+1
if IO[QTw]==0 then
if QTw==0 then
call S4("Nullpointer exception when calling HashList.add","when calling error in HashList, line 25")
else
call S4("Called HashList.add on invalid object.","when calling error in HashList, line 25")
endif
endif
if IO[QTw]<=691 then
call gTw(QTw,WTw,"when calling add in HashList, line 25")
else
call mTw(QTw,WTw,"when calling add in HashList, line 25")
endif
set Jb=Jb-1
endfunction
function klw takes integer Ylw,integer Glw,integer glw,string hlw returns nothing
local boolean Flw
set Kb[Jb]=hlw
set Jb=Jb+1
call elw(Ylw,Glw,glw,"when calling put in HashMap, line 60")
set Kb[Jb]="when calling hasKey in HashMap, line 61"
set Jb=Jb+1
if HO[Ylw]==0 then
if Ylw==0 then
call S4("Nullpointer exception when calling IterableMap.hasKey","when calling error in HashMap, line 87")
else
call S4("Called IterableMap.hasKey on invalid object.","when calling error in HashMap, line 87")
endif
endif
set Kb[Jb]="when calling hasKey in HashMap, line 87"
set Jb=Jb+1
set Flw=Inw(pb[Ylw],Glw,"when calling has in HashMap, line 88")
set Jb=Jb-1-1
if not Flw then
call ZTw(pb[Ylw],Glw,"when calling add in HashMap, line 62")
endif
set Jb=Jb-1
endfunction
function Vnw takes integer Knw,integer Lnw,integer Xnw,string Cnw returns nothing
set Kb[Jb]=Cnw
set Jb=Jb+1
if HO[Knw]==0 then
if Knw==0 then
call S4("Nullpointer exception when calling HashMap.put","when calling error in HashMap, line 17")
else
call S4("Called HashMap.put on invalid object.","when calling error in HashMap, line 17")
endif
endif
if HO[Knw]<=728 then
call elw(Knw,Lnw,Xnw,"when calling put in HashMap, line 17")
else
call klw(Knw,Lnw,Xnw,"when calling put in HashMap, line 17")
endif
set Jb=Jb-1
endfunction
function eyw takes integer Syw,string cyw returns nothing
local integer oyw
local unit Oyw
local player lyw
local real byw
local real yyw
local real pyw
set Kb[Jb]=cyw
set Jb=Jb+1
if GetSpellAbilityId()==1093678154 then
set oyw=iyw("when calling new_LinkedList in MassControl, line 24")
set Oyw=GetSpellAbilityUnit()
set lyw=GetOwningPlayer(Oyw)
set yyw=GetSpellTargetX()
set pyw=GetSpellTargetY()
set byw=gdw(Uc,GetLearnedSkillLevel(),"when calling get in MassControl, line 27")/1000.
set Kb[Jb]="when calling alloc_MassControl_ForGroupCallback_line27 in MassControl, line 27"
set Jb=Jb+1
if nO==0 then
if dO<32768 then
set dO=dO+1
set Syw=dO
set fO[Syw]=687
else
call S4("Out of memory: Could not create MassControl_ForGroupCallback_line27.","when calling error in MassControl, line 27")
set Syw=0
endif
else
set nO=nO-1
set Syw=aO[nO]
set fO[Syw]=687
endif
set Jb=Jb-1
set Fb[Syw]=lyw
set kb[Syw]=Oyw
set jb[Syw]=oyw
call SN(yyw,pyw,byw,Syw,"when calling forUnitsInRange in MassControl, line 27")
call Vnw(Zc,GetHandleId(Oyw),oyw,"when calling put in MassControl, line 30")
endif
set Jb=Jb-1
set Oyw=null
set lyw=null
endfunction
function AV takes integer IV,integer PV returns integer
if IV==1 then
if PV==0 then
return 1747988529
elseif PV==1 then
return 1747990326
elseif PV==2 then
return 1747990084
elseif PV==3 then
return 1747989590
else
return 1747988529
endif
elseif IV==2 then
if PV==0 then
return 1747988530
elseif PV==1 then
return 1747990327
elseif PV==2 then
return 1747990087
elseif PV==3 then
return 1747989591
else
return 1747988530
endif
elseif IV==3 then
if PV==0 then
return 1747988531
elseif PV==1 then
return 1747990328
elseif PV==2 then
return 1747990085
elseif PV==3 then
return 1747989592
else
return 1747988531
endif
elseif PV==0 then
return 1747988529
elseif PV==1 then
return 1747990326
elseif PV==2 then
return 1747990084
elseif PV==3 then
return 1747989590
else
return 1747988529
endif
endfunction
function Atw takes integer Etw,integer Ztw,string Utw returns nothing
local integer Itw
local boolean Ptw
set Kb[Jb]=Utw
set Jb=Jb+1
set Itw=Mo
set Kb[Jb]="when calling has in City, line 183"
set Jb=Jb+1
if tl[Itw]==0 then
if Itw==0 then
call S4("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call S4("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set Ptw=Bbw(Itw,Ztw)
set Jb=Jb-1
if not Ptw then
set Jb=Jb-1
return
endif
set kl[Etw]=ReplaceUnitBJ(kl[Etw],Ztw,bj_UNIT_STATE_METHOD_RELATIVE)
set Jb=Jb-1
endfunction
function UV takes integer ZV returns integer
if ZV==1747988529 then
return 1
elseif ZV==1747988530 then
return 2
elseif ZV==1747988531 then
return 3
elseif ZV==1747990326 then
return 1
elseif ZV==1747990327 then
return 2
elseif ZV==1747990328 then
return 3
elseif ZV==1747990084 then
return 1
elseif ZV==1747990087 then
return 2
elseif ZV==1747990085 then
return 3
elseif ZV==1747989590 then
return 1
elseif ZV==1747989591 then
return 2
elseif ZV==1747989592 then
return 3
else
return 1
endif
endfunction
function Xtw takes integer Dtw,integer Htw,string Jtw returns nothing
local integer Ktw
local integer Ltw
set Kb[Jb]=Jtw
set Jb=Jb+1
if Htw==PLAYER_NEUTRAL_AGGRESSIVE then
call SetUnitOwner(kl[Dtw],Player(Htw),true)
set Kb[Jb]="when calling changeTaxLevelFORCED in City, line 192"
set Jb=Jb+1
if qO[Dtw]==0 then
if Dtw==0 then
call S4("Nullpointer exception when calling City.changeTaxLevelFORCED","when calling error in City, line 260")
else
call S4("Called City.changeTaxLevelFORCED on invalid object.","when calling error in City, line 260")
endif
endif
set Pl[Dtw]=Pl[Dtw]-FS[Dl[Dtw]]
set Pl[Dtw]=Pl[Dtw]+FS[0]
set Dl[Dtw]=0
set Jb=Jb-1
else
call SetUnitOwner(kl[Dtw],ro[Htw],true)
endif
set ml[Dtw]=Htw
if Htw>=0 and Htw<24 then
set Ktw=uo[Htw]
set Kb[Jb]="when calling getForceId in City, line 199"
set Jb=Jb+1
if ll[Ktw]==0 then
if Ktw==0 then
call S4("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 122")
else
call S4("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 122")
endif
endif
set Ltw=Eb[Ktw]
set Jb=Jb-1
set vl[Dtw]=Ltw
endif
set Kb[Jb]="when calling refreshMultiboardIfPossible in City, line 201"
set Jb=Jb+1
if qO[Dtw]==0 then
if Dtw==0 then
call S4("Nullpointer exception when calling City.refreshMultiboardIfPossible","when calling error in City, line 237")
else
call S4("Called City.refreshMultiboardIfPossible on invalid object.","when calling error in City, line 237")
endif
endif
call Wtw(Dtw,"when calling refreshMultiboardIfPossible in City, line 237")
set Jb=Jb-1-1
endfunction
function eiw takes integer wiw,player uiw,string riw returns nothing
local integer siw
local integer tiw
local unit iiw
local unit Siw
local real ciw
local integer oiw
local integer Oiw
local integer liw
local integer biw
local boolean yiw
local integer piw
set Kb[Jb]=riw
set Jb=Jb+1
set iiw=kl[wiw]
call SetUnitState(iiw,UNIT_STATE_LIFE,GetUnitState(iiw,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,60.0)*0.01)
set Siw=kl[wiw]
call SetUnitState(Siw,UNIT_STATE_MANA,GetUnitState(Siw,UNIT_STATE_MAX_MANA)*RMaxBJ(0.,30.0)*0.01)
set Kb[Jb]="when calling addModifier in City, line 222"
set Jb=Jb+1
if qO[wiw]==0 then
if wiw==0 then
call S4("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call S4("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call htw(wiw,0,"when calling addModifier in City, line 355")
set Jb=Jb-1
set ciw=Tl[udw(RS,6,"when calling get in City, line 223")]
if GetRandomReal(0.0,1.0)<=ciw then
set Kb[Jb]="when calling addModifier in City, line 224"
set Jb=Jb+1
if qO[wiw]==0 then
if wiw==0 then
call S4("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call S4("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call htw(wiw,6,"when calling addModifier in City, line 355")
set Jb=Jb-1
endif
set siw=vl[wiw]
set tiw=GetPlayerId(uiw)
if tiw>=0 and tiw<24 then
set oiw=uo[tiw]
set Kb[Jb]="when calling getForceId in City, line 229"
set Jb=Jb+1
if ll[oiw]==0 then
if oiw==0 then
call S4("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 122")
else
call S4("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 122")
endif
endif
set Oiw=Eb[oiw]
set Jb=Jb-1
set siw=Oiw
endif
set liw=Bo
set biw=GetUnitTypeId(kl[wiw])
set Kb[Jb]="when calling has in City, line 231"
set Jb=Jb+1
if tl[liw]==0 then
if liw==0 then
call S4("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call S4("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set yiw=Bbw(liw,biw)
set Jb=Jb-1
if yiw then
set piw=AV(UV(GetUnitTypeId(kl[wiw])),siw)
set Kb[Jb]="when calling replaceCity in City, line 232"
set Jb=Jb+1
if qO[wiw]==0 then
if wiw==0 then
call S4("Nullpointer exception when calling City.replaceCity","when calling error in City, line 182")
else
call S4("Called City.replaceCity on invalid object.","when calling error in City, line 182")
endif
endif
call Atw(wiw,piw,"when calling replaceCity in City, line 182")
set Jb=Jb-1
call UnitAddAbility(kl[wiw],1093677634)
endif
set Kb[Jb]="when calling changeOwner in City, line 235"
set Jb=Jb+1
if qO[wiw]==0 then
if wiw==0 then
call S4("Nullpointer exception when calling City.changeOwner","when calling error in City, line 187")
else
call S4("Called City.changeOwner on invalid object.","when calling error in City, line 187")
endif
endif
call Xtw(wiw,tiw,"when calling changeOwner in City, line 187")
set Jb=Jb-1-1
set iiw=null
set Siw=null
endfunction
function t6 takes string V5,force B5,string N5 returns nothing
local integer M5
local integer w6
local player u6
local player r6
local force s6
set Kb[Jb]=N5
set Jb=Jb+1
set M5=0
set w6=23
loop
exitwhen M5>w6
set r6=ro[M5]
set s6=CreateForce()
call ForceAddPlayer(s6,r6)
if s6==B5 then
set u6=ro[M5]
call DisplayTimedTextToPlayer(u6,0.,0.,10.0,L5(u6,"when calling getAttentionStringForPlayer in Messages, line 116"))
call DisplayTimedTextToPlayer(u6,0.,0.,10.0,V5)
endif
set M5=M5+1
endloop
set Jb=Jb-1
set u6=null
set r6=null
set s6=null
endfunction
function itw takes integer Asw,string Dsw returns nothing
local unit Hsw
local integer Jsw
local integer Ksw
local boolean Lsw
local unit Xsw
local integer Csw
local integer Vsw
local player Bsw
local integer Nsw
local boolean Msw
local boolean wtw
local real utw
local real rtw
local real stw
local real ttw
set Kb[Jb]=Dsw
set Jb=Jb+1
set Hsw=GetTriggerUnit()
set Kb[Jb]="when calling isCity in CityManage, line 36"
set Jb=Jb+1
set Kb[Jb]="when calling isCity in UnitTools, line 5"
set Jb=Jb+1
set Jsw=Mo
set Ksw=GetUnitTypeId(Hsw)
set Kb[Jb]="when calling has in City, line 423"
set Jb=Jb+1
if tl[Jsw]==0 then
if Jsw==0 then
call S4("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call S4("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set Lsw=Bbw(Jsw,Ksw)
set Jb=Jb-1-1-1
if Lsw then
if GetUnitStatePercent(Hsw,UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)<=50.0 then
set wtw=GetOwningPlayer(Hsw)!=GetOwningPlayer(GetAttacker())
else
set wtw=false
endif
if wtw then
set utw=GetUnitX(Hsw)
set rtw=GetUnitY(Hsw)
set Xsw=GetAttacker()
set stw=utw-GetUnitX(Xsw)
set ttw=rtw-GetUnitY(Xsw)
if SquareRoot(stw*stw+ttw*ttw)>300.0 then
call SetUnitState(Hsw,UNIT_STATE_LIFE,GetUnitState(Hsw,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,50.0)*0.01)
else
set Kb[Jb]="when calling getCityId in CityManage, line 41"
set Jb=Jb+1
set Csw=CV(Hsw,"when calling getCityId in UnitTools, line 9")
set Jb=Jb-1
set Vsw=xS[Csw]
set Bsw=GetOwningPlayer(GetAttacker())
set Kb[Jb]="when calling capture in CityManage, line 42"
set Jb=Jb+1
if qO[Vsw]==0 then
if Vsw==0 then
call S4("Nullpointer exception when calling City.capture","when calling error in City, line 218")
else
call S4("Called City.capture on invalid object.","when calling error in City, line 218")
endif
endif
call eiw(Vsw,Bsw,"when calling capture in City, line 218")
set Jb=Jb-1
set Asw=GetUnitTypeId(Hsw)
set Nsw=Bo
set Kb[Jb]="when calling has in CityManage, line 44"
set Jb=Jb+1
if tl[Nsw]==0 then
if Nsw==0 then
call S4("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call S4("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set Msw=Bbw(Nsw,Asw)
set Jb=Jb-1
if Msw then
call t6(hN(GetOwningPlayer(GetAttacker()))+" has just captured "+hN(GetOwningPlayer(GetTriggerUnit()))+" Capitol!",bj_FORCE_ALL_PLAYERS,"when calling attentionToForce in CityManage, line 45")
endif
endif
elseif GetUnitStatePercent(Hsw,UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)<=50.0 then
call SetUnitState(Hsw,UNIT_STATE_LIFE,GetUnitState(Hsw,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,50.0)*0.01)
endif
endif
set Jb=Jb-1
set Hsw=null
set Xsw=null
set Bsw=null
endfunction
function fiw takes integer qiw,integer aiw,string niw returns nothing
local player diw
set Kb[Jb]=niw
set Jb=Jb+1
if xc-Hl[qiw]>=YS then
set Hl[qiw]=xc
set Pl[qiw]=Pl[qiw]-FS[Dl[qiw]]
set Pl[qiw]=Pl[qiw]+FS[aiw]
set Dl[qiw]=aiw
else
set diw=ro[ml[qiw]]
set Kb[Jb]="when calling noteToPlayer in City, line 258"
set Jb=Jb+1
call DisplayTimedTextToPlayer(diw,0.,0.,10.0,Q5(diw,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(diw,0.,0.,10.0,"Wait 1 turn to be able to change tax level.")
set Jb=Jb-1
endif
set Jb=Jb-1
set diw=null
endfunction
function jqw takes integer nqw,string dqw returns nothing
local integer fqw
local integer Rqw
local integer Tqw
local boolean Yqw
local unit Gqw
local integer gqw
local integer hqw
local boolean Fqw
local integer kqw
set Kb[Jb]=dqw
set Jb=Jb+1
set nqw=cS
set Tqw=GetSpellAbilityId()
set Kb[Jb]="when calling has in Taxation, line 7"
set Jb=Jb+1
if tl[nqw]==0 then
if nqw==0 then
call S4("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call S4("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set Yqw=Bbw(nqw,Tqw)
set Jb=Jb-1
if Yqw then
set Gqw=GetSpellTargetUnit()
set Kb[Jb]="when calling isCity in Taxation, line 8"
set Jb=Jb+1
set gqw=Mo
set hqw=GetUnitTypeId(Gqw)
set Kb[Jb]="when calling has in City, line 423"
set Jb=Jb+1
if tl[gqw]==0 then
if gqw==0 then
call S4("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call S4("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set Fqw=Bbw(gqw,hqw)
set Jb=Jb-1-1
if Fqw then
if GetOwningPlayer(GetSpellTargetUnit())==GetOwningPlayer(GetSpellAbilityUnit()) then
set fqw=0
set Rqw=GetSpellAbilityId()
if Rqw==1093677642 then
set fqw=1
elseif Rqw==1093677641 then
set fqw=0
elseif Rqw==1093677640 then
set fqw=2
elseif Rqw==1093678155 then
set fqw=3
endif
set kqw=xS[CV(GetSpellTargetUnit(),"when calling getCityId in Taxation, line 20")]
set Kb[Jb]="when calling changeTaxLevel in Taxation, line 20"
set Jb=Jb+1
if qO[kqw]==0 then
if kqw==0 then
call S4("Nullpointer exception when calling City.changeTaxLevel","when calling error in City, line 249")
else
call S4("Called City.changeTaxLevel on invalid object.","when calling error in City, line 249")
endif
endif
call fiw(kqw,fqw,"when calling changeTaxLevel in City, line 249")
set Jb=Jb-1
endif
endif
endif
set Jb=Jb-1
set Gqw=null
endfunction
function A0w takes rect W0w,real E0w,real Z0w returns boolean
local boolean U0w
local boolean I0w
local boolean P0w
if E0w>GetRectMinX(W0w) then
set U0w=E0w<GetRectMaxX(W0w)
else
set U0w=false
endif
if U0w then
set I0w=Z0w>GetRectMinY(W0w)
else
set I0w=false
endif
if I0w then
set P0w=Z0w<GetRectMaxY(W0w)
else
set P0w=false
endif
return P0w
endfunction
function Mww takes integer Lww,string Xww returns rect
local integer Cww
local fogstate Vww
local integer Bww
local rect Nww
set Kb[Jb]=Xww
set Jb=Jb+1
set Cww=Ao
set Vww=ConvertFogState(Lww)
set Kb[Jb]="when calling saveFogState in TypeCasting, line 136"
set Jb=Jb+1
if HO[Cww]==0 then
if Cww==0 then
call S4("Nullpointer exception when calling Table.saveFogState","when calling error in Table, line 168")
else
call S4("Called Table.saveFogState on invalid object.","when calling error in Table, line 168")
endif
endif
call SaveFogStateHandle(Zo,Cww,0,Vww)
set Jb=Jb-1
set Bww=Ao
set Kb[Jb]="when calling loadRect in TypeCasting, line 137"
set Jb=Jb+1
if HO[Bww]==0 then
if Bww==0 then
call S4("Nullpointer exception when calling Table.loadRect","when calling error in Table, line 147")
else
call S4("Called Table.loadRect on invalid object.","when calling error in Table, line 147")
endif
endif
set Nww=LoadRectHandle(Zo,Bww,0)
set Jb=Jb-1-1
set eR=Nww
set Vww=null
set Nww=null
return eR
endfunction
function lpw takes integer upw,string rpw returns nothing
local unit spw
local real tpw
local real ipw
local integer Spw
local integer cpw
local integer opw
local player Opw
set Kb[Jb]=rpw
set Jb=Jb+1
set spw=GetTriggerUnit()
if GetUnitTypeId(spw)==1747988569 then
set tpw=GetUnitX(spw)
set ipw=GetUnitY(spw)
set cpw=uO
set Kb[Jb]="when calling iterator in NoShipsNearRivers, line 11"
set Jb=Jb+1
set opw=Abw(cpw,"when calling new_LLIterator in LinkedList, line 165")
set Jb=Jb-1
set Spw=opw
loop
exitwhen fb[Tb[Spw]]==Rb[Spw]
set Tb[Spw]=fb[Tb[Spw]]
if A0w(Mww(nb[Tb[Spw]],"when calling rectFromIndex in NoShipsNearRivers, line 11"),tpw,ipw) then
set Kb[Jb]="when calling alloc_NoShipsNearRivers_CallbackSingle_line14 in NoShipsNearRivers, line 14"
set Jb=Jb+1
if TO==0 then
if YO<32768 then
set YO=YO+1
set upw=YO
set GO[upw]=649
else
call S4("Out of memory: Could not create NoShipsNearRivers_CallbackSingle_line14.","when calling error in NoShipsNearRivers, line 14")
set upw=0
endif
else
set TO=TO-1
set upw=RO[TO]
set GO[upw]=649
endif
set Jb=Jb-1
set Wb[upw]=spw
set Kb[Jb]="when calling doAfter in NoShipsNearRivers, line 14"
set Jb=Jb+1
call yN(eww("when calling getTimer in ClosureTimers, line 27"),0.01,upw,"when calling doAfter in ClosureTimers, line 27")
set Jb=Jb-1
set rpw="You cannot build shipyards near rivers"
set Opw=GetOwningPlayer(spw)
set Kb[Jb]="when calling attentionToPlayer in NoShipsNearRivers, line 16"
set Jb=Jb+1
call DisplayTimedTextToPlayer(Opw,0.,0.,10.0,L5(Opw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(Opw,0.,0.,10.0,"You cannot build shipyards near rivers")
set Jb=Jb-1
endif
endloop
set Kb[Jb]="when calling close in NoShipsNearRivers, line 11"
set Jb=Jb+1
if Gb[Spw]then
call bdw(Spw,"when calling dispatch_LLIterator_destroyLLIterator in LinkedList, line 450")
endif
set Jb=Jb-1
endif
set Jb=Jb-1
set spw=null
set Opw=null
endfunction
function oaw takes integer uaw,string raw returns nothing
local unit saw
local integer taw
local player iaw
local integer Saw
local boolean caw
set Kb[Jb]=raw
set Jb=Jb+1
set saw=GetDyingUnit()
set taw=GetPlayerId(GetOwningPlayer(saw))
set iaw=ro[taw]
if GetPlayerSlotState(iaw)==PLAYER_SLOT_STATE_PLAYING then
set caw=GetPlayerController(iaw)==MAP_CONTROL_USER
else
set caw=false
endif
if caw and(not IsUnitType(saw,UNIT_TYPE_STRUCTURE)) then
set Saw=uo[taw]
set uaw=GetUnitLevel(saw)
set Kb[Jb]="when calling changeUpkeep in Upkeep, line 32"
set Jb=Jb+1
if ll[Saw]==0 then
if Saw==0 then
call S4("Nullpointer exception when calling PlayerStats.changeUpkeep","when calling error in PlayerStats, line 51")
else
call S4("Called PlayerStats.changeUpkeep on invalid object.","when calling error in PlayerStats, line 51")
endif
endif
set Pb[Saw]=Pb[Saw]+uaw
set Jb=Jb-1
endif
set Jb=Jb-1
set saw=null
set iaw=null
endfunction
function obw takes integer tbw returns nothing
local unit ibw=GetConstructingStructure()
local player Sbw
local player cbw
if GetUnitTypeId(ibw)==1747988808 then
set Sbw=GetOwningPlayer(ibw)
set cbw=GetOwningPlayer(ibw)
set Yc[GetPlayerId(Sbw)]=Yc[GetPlayerId(cbw)]-1
endif
set ibw=null
set Sbw=null
set cbw=null
endfunction
function waw takes integer Pqw,string Aqw returns nothing
local unit Dqw
local unit Hqw
local integer Jqw
local player Kqw
local integer Lqw
local integer Xqw
local player Cqw
local integer Vqw
local integer Bqw
local boolean Nqw
local boolean Mqw
set Kb[Jb]=Aqw
set Jb=Jb+1
if GetSpellAbilityId()==1093677620 then
set Dqw=GetSpellAbilityUnit()
set Hqw=GetSpellTargetUnit()
set Pqw=GetPlayerId(GetOwningPlayer(Dqw))
set Jqw=GetPlayerId(GetOwningPlayer(Hqw))
set Kqw=ro[Pqw]
if GetPlayerSlotState(Kqw)==PLAYER_SLOT_STATE_PLAYING then
set Nqw=GetPlayerController(Kqw)==MAP_CONTROL_USER
else
set Nqw=false
endif
if Nqw then
set Lqw=uo[Pqw]
set Xqw=-GetUnitLevel(Hqw)
set Kb[Jb]="when calling changeUpkeep in Upkeep, line 15"
set Jb=Jb+1
if ll[Lqw]==0 then
if Lqw==0 then
call S4("Nullpointer exception when calling PlayerStats.changeUpkeep","when calling error in PlayerStats, line 51")
else
call S4("Called PlayerStats.changeUpkeep on invalid object.","when calling error in PlayerStats, line 51")
endif
endif
set Pb[Lqw]=Pb[Lqw]+Xqw
set Jb=Jb-1
endif
set Cqw=ro[Jqw]
if GetPlayerSlotState(Cqw)==PLAYER_SLOT_STATE_PLAYING then
set Mqw=GetPlayerController(Cqw)==MAP_CONTROL_USER
else
set Mqw=false
endif
if Mqw then
set Vqw=uo[Jqw]
set Bqw=GetUnitLevel(Hqw)
set Kb[Jb]="when calling changeUpkeep in Upkeep, line 17"
set Jb=Jb+1
if ll[Vqw]==0 then
if Vqw==0 then
call S4("Nullpointer exception when calling PlayerStats.changeUpkeep","when calling error in PlayerStats, line 51")
else
call S4("Called PlayerStats.changeUpkeep on invalid object.","when calling error in PlayerStats, line 51")
endif
endif
set Pb[Vqw]=Pb[Vqw]+Bqw
set Jb=Jb-1
endif
endif
set Jb=Jb-1
set Dqw=null
set Hqw=null
set Kqw=null
set Cqw=null
endfunction
function xbw takes integer Ybw,string Gbw returns nothing
local unit gbw
local player hbw
local player Fbw
local player kbw
local timer jbw
set Kb[Jb]=Gbw
set Jb=Jb+1
set gbw=GetConstructingStructure()
if GetUnitTypeId(gbw)==1747990614 then
if Gc[GetPlayerId(GetOwningPlayer(gbw))]<3 then
set hbw=GetOwningPlayer(gbw)
set Fbw=GetOwningPlayer(gbw)
set Gc[GetPlayerId(hbw)]=Gc[GetPlayerId(Fbw)]+1
else
set kbw=GetOwningPlayer(gbw)
set Kb[Jb]="when calling attentionToPlayer in LimitMercenaryCamps, line 18"
set Jb=Jb+1
call DisplayTimedTextToPlayer(kbw,0.,0.,10.0,L5(kbw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(kbw,0.,0.,10.0,"You cannot build more than 3 mercenary camps.")
set Jb=Jb-1
set Kb[Jb]="when calling alloc_LimitMercenaryCamps_CallbackSingle_line19 in LimitMercenaryCamps, line 19"
set Jb=Jb+1
if TO==0 then
if YO<32768 then
set YO=YO+1
set Ybw=YO
set GO[Ybw]=646
else
call S4("Out of memory: Could not create LimitMercenaryCamps_CallbackSingle_line19.","when calling error in LimitMercenaryCamps, line 19")
set Ybw=0
endif
else
set TO=TO-1
set Ybw=RO[TO]
set GO[Ybw]=646
endif
set Jb=Jb-1
set qb[Ybw]=gbw
set Kb[Jb]="when calling doAfter in LimitMercenaryCamps, line 19"
set Jb=Jb+1
set jbw=eww("when calling getTimer in ClosureTimers, line 27")
set Kb[Jb]="when calling doAfter in ClosureTimers, line 27"
set Jb=Jb+1
call anw(Ybw,jbw,0.01,"when calling start in ClosureTimers, line 16")
set Jb=Jb-1-1
endif
endif
set Jb=Jb-1
set gbw=null
set hbw=null
set Fbw=null
set kbw=null
set jbw=null
endfunction
function Qaw takes integer vaw,string maw returns nothing
set Kb[Jb]=maw
set Jb=Jb+1
if oO[vaw]==0 then
if vaw==0 then
call S4("Nullpointer exception when calling EventListener.onEvent","when calling error in ClosureEvents, line 109")
else
call S4("Called EventListener.onEvent on invalid object.","when calling error in ClosureEvents, line 109")
endif
endif
if oO[vaw]<=670 then
if oO[vaw]<=666 then
if oO[vaw]<=664 then
if oO[vaw]<=663 then
if oO[vaw]<=662 then
call Gsw(vaw,"when calling CastleCapture_onEvent_line8 in ClosureEvents, line 109")
else
call Qsw(vaw,"when calling CityBuilded_onEvent_line9 in ClosureEvents, line 109")
endif
else
call itw(vaw,"when calling CityManage_onEvent_line33 in ClosureEvents, line 109")
endif
elseif oO[vaw]<=665 then
call Psw(vaw,"when calling CityManage_onEvent_line9 in ClosureEvents, line 109")
else
call HOw(vaw,"when calling Garissons_onEvent_line6 in ClosureEvents, line 109")
endif
elseif oO[vaw]<=668 then
if oO[vaw]<=667 then
call abw(vaw,"when calling LimitEncampments_onEvent_line12 in ClosureEvents, line 109")
else
call obw(vaw)
endif
elseif oO[vaw]<=669 then
call xbw(vaw,"when calling LimitMercenaryCamps_onEvent_line12 in ClosureEvents, line 109")
else
call Tbw(vaw)
endif
elseif oO[vaw]<=675 then
if oO[vaw]<=673 then
if oO[vaw]<=672 then
if oO[vaw]<=671 then
call eyw(vaw,"when calling MassControl_onEvent_line22 in ClosureEvents, line 109")
else
call Zyw(vaw,"when calling MassControl_onEvent_line32 in ClosureEvents, line 109")
endif
else
call lpw(vaw,"when calling NoShipsNearRivers_onEvent_line7 in ClosureEvents, line 109")
endif
elseif oO[vaw]<=674 then
call epw(vaw)
else
call dpw(vaw,"when calling OnPlayerLeave_onEvent_line6 in ClosureEvents, line 109")
endif
elseif oO[vaw]<=677 then
if oO[vaw]<=676 then
call Sqw(vaw,"when calling RangeChecks_onEvent_line11 in ClosureEvents, line 109")
else
call jqw(vaw,"when calling Taxation_onEvent_line6 in ClosureEvents, line 109")
endif
elseif oO[vaw]<=678 then
call oaw(vaw,"when calling Upkeep_onEvent_line28 in ClosureEvents, line 109")
else
call waw(vaw,"when calling Upkeep_onEvent_line6 in ClosureEvents, line 109")
endif
set Jb=Jb-1
endfunction
function WB takes string hB returns nothing
local unit FB
local integer kB
local integer jB
local integer xB
local eventid vB
local integer mB
local boolean QB
set Kb[Jb]=hB
set Jb=Jb+1
set FB=GetTriggerUnit()
set vB=GetTriggerEventId()
set Kb[Jb]="when calling toIntId in ClosureEvents, line 170"
set Jb=Jb+1
set mB=ES[GetHandleId(vB)]
if mB==0 then
set mB=bB(vB,"when calling registerEventId in ClosureEvents, line 229")
endif
set Jb=Jb-1
set kB=mB
if FB!=null then
set QB=GetUnitUserData(FB)>0
else
set QB=false
endif
if QB then
if AS[GetUnitUserData(FB)]!=0 then
set jB=AS[GetUnitUserData(FB)]
loop
exitwhen jB==0
if Nl[jB]==kB then
call Qaw(jB,"when calling onEvent in ClosureEvents, line 177")
endif
set jB=Ml[jB]
endloop
endif
endif
if PS[kB]!=0 then
set xB=PS[kB]
loop
exitwhen xB==0
call Qaw(xB,"when calling onEvent in ClosureEvents, line 183")
set xB=Ml[xB]
endloop
endif
set Jb=Jb-1
set FB=null
set vB=null
endfunction
function JYw takes nothing returns nothing
set Jb=0
set Kb[Jb]="ClosureEvents, line 291"
set Jb=Jb+1
call WB("when calling generalEventCallback in ClosureEvents, line 291")
set Jb=Jb-1
endfunction
function Jk takes nothing returns nothing
local player mk=GetOwningPlayer(GetSpellTargetUnit())
local playerstate Qk=PLAYER_STATE_RESOURCE_LUMBER
local playerstate Wk
local playerstate Ek
local player Zk
local force Uk
local location Ik
local real Pk
local real Ak
local player Dk
local force Hk
if Qk==PLAYER_STATE_RESOURCE_GOLD then
set Wk=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(mk,Wk,GetPlayerState(mk,Wk)+250)
elseif Qk==PLAYER_STATE_RESOURCE_LUMBER then
set Ek=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(mk,Ek,GetPlayerState(mk,Ek)+250)
endif
call SetPlayerState(mk,Qk,GetPlayerState(mk,Qk)+250)
call RemoveUnit(GetSpellAbilityUnit())
set Zk=GetOwningPlayer(GetSpellTargetUnit())
set Uk=CreateForce()
call ForceAddPlayer(Uk,Zk)
if IsPlayerInForce(GetLocalPlayer(),Uk) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_1229")
endif
set y=GetUnitLoc(GetSpellTargetUnit())
set Dk=GetOwningPlayer(GetSpellTargetUnit())
set Hk=CreateForce()
call ForceAddPlayer(Hk,Dk)
set Ik=y
set Pk=GetLocationX(Ik)
set Ak=GetLocationY(Ik)
if IsPlayerInForce(GetLocalPlayer(),Hk) then
call PingMinimap(Pk,Ak,2.00)
endif
call RemoveLocation(y)
set mk=null
set Qk=null
set Wk=null
set Ek=null
set Zk=null
set Uk=null
set Ik=null
set Dk=null
set Hk=null
endfunction
function Hm takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function Jm takes nothing returns boolean
if not Hm() then
return false
endif
return true
endfunction
function Jww takes nothing returns boolean
set do[0]="Terrible! Terrible news, my lord!"
set do[1]="The messenger came to us with horrific news! May we execute him?"
set do[2]="A mere nightmare, Your Mightiness!"
set fo[0]="Holy Mother of God, we have horrific news!"
set fo[1]="Lord Preserve us, Great Prince!"
set fo[2]="Great Prince, we have horrific news!"
set Ro[0]="Allah be merciful! I bring terrible news"
set Ro[1]="Oh, Great Sultan! We have terrible news"
set Ro[2]="Oh, Great one! I bring ill news"
set To[0]="Saints save us, we have some most horrific news!"
set To[1]="My Basileus! We have horrific news!"
set To[2]="My Basileus, by the grace of our lord. We have horrific news!"
set Yo[0]="My King, we have received news concerning our realm"
set Yo[1]="The messenger arrived with news. No matter, could I execute him?"
set Yo[2]="My liege I bring news about the realm"
set Go[0]="Great Prince, a messenger came with news"
set Go[1]="May the God bless you, Great Prince, we have some news"
set Go[2]="There is something you should know, Great Prince"
set go[0]="My Sultan! We have news"
set go[1]="Praise be to Allah, Sultan! We bring news"
set go[2]="Great Sultan! We have some news"
set ho[0]="My Basileus, we have some news"
set ho[1]="My Basileus, we have some news"
set ho[2]="My Basileus, we have some news"
set Fo[0]="Milord! Good news!"
set Fo[1]="Praise the Holy Lord! We have good news"
set Fo[2]="My King, we bring great news for you!"
set ko[0]="By the grace of our Lord, we bring good news!"
set ko[1]="We received great news my Lord! Still the Messenger deserves to be pusnished"
set ko[2]="My Lord, we have received delightful news!"
set jo[0]="Praise be to Allah, Sultan! We have great news"
set jo[1]="Good tidings Sultan! I bring good news"
set jo[2]="Allah is glorious, Sultan! We have great news"
set xo[0]="Good news, my Basileus!"
set xo[1]="Praise the Holy Lord, we bring great news, my Basileus!"
set xo[2]="We received good news my Basileus! We shouldn’t blind this messenger"
set vo[0]="Your Majesty, important news!"
set vo[1]="May the God bless you, my lord. There is something you must know!"
set vo[2]="There is something that needs your attention, my lord!"
set mo[0]="By the Saints! Great Prince, you must hear to this"
set mo[1]="You should hear this, Great Prince!"
set mo[2]="You need to see this, Great Prince!"
set Qo[0]="Great one, urgent news must be brought to your attention!"
set Qo[1]="My Sultan, there is something you need to know!"
set Qo[2]="My Great Sultan, there is something you must know!"
set Wo[0]="My Basileus, there is something you need to know!"
set Wo[1]="My Basileus, we can not delay this news!"
set Wo[2]="My Basileus, you should be aware of this!"
set Eo[0]="|cffffd900Med."
set Eo[1]="|cff00ff00Low"
set Eo[2]="|cffff0000High"
set Eo[3]="|cff940000Harsh"
return true
endfunction
function KA takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989825,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989817,0)
endfunction
function KE takes nothing returns nothing
set s=bj_FORCE_ALL_PLAYERS
call ForForce(s,Ae)
endfunction
function KG takes nothing returns nothing
local unit HG=GetSpellTargetUnit()
local unitstate JG=UNIT_STATE_MANA
call SetUnitState(HG,UNIT_STATE_MANA,RMaxBJ(0.,GetUnitState(GetSpellTargetUnit(),JG)-600.00))
set HG=null
set JG=null
endfunction
function JI takes nothing returns boolean
if GetResearched()!=1378890033 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890033,true)!=1 then
return false
endif
return true
endfunction
function KI takes nothing returns boolean
if not JI() then
return false
endif
return true
endfunction
function KJ takes nothing returns nothing
local integer UJ=1
local integer IJ=1751868773
local player PJ=GetOwningPlayer(GetTriggerUnit())
local rect JJ=bj_mapInitialPlayableArea
local location HJ=Location(GetRectCenterX(JJ),GetRectCenterY(JJ))
local location AJ=Location(GetLocationX(HJ)+100000000.00,GetLocationY(HJ)+100000000.00)
local real DJ=bj_UNIT_FACING
call GroupClear(bj_lastCreatedGroup)
loop
set UJ=UJ-1
exitwhen UJ<0
call CreateUnitAtLocSaveLast(PJ,IJ,AJ,DJ)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
call ShowUnit(bj_lastCreatedUnit,false)
set PJ=null
set AJ=null
set HJ=null
set JJ=null
endfunction
function KN takes nothing returns boolean
local trigger DN=CreateTrigger()
local trigger AN
local integer HN
local integer JN
call TriggerAddCondition(DN,Condition(Af))
call TriggerAddAction(DN,Df)
set AN=DN
set HN=0
set JN=23
loop
exitwhen HN>JN
call TriggerRegisterPlayerChatEvent(AN,ro[HN],"-",false)
set HN=HN+1
endloop
set AN=null
set DN=null
return true
endfunction
function KT takes nothing returns nothing
call CreateQuestBJ(bj_QUESTTYPE_OPT_DISCOVERED,"TRIGSTR_097","TRIGSTR_098","ReplaceableTextures\\CommandButtons\\BTNSteelMelee.blp")
call CreateQuestBJ(bj_QUESTTYPE_OPT_DISCOVERED,"TRIGSTR_103","TRIGSTR_104","ReplaceableTextures\\WorldEditUI\\Doodad-Cinematic.blp")
call CreateQuestBJ(bj_QUESTTYPE_OPT_DISCOVERED,"TRIGSTR_2667","TRIGSTR_2668","ReplaceableTextures\\WorldEditUI\\Editor-MultipleUnits.blp")
endfunction
function KTw takes nothing returns boolean
set Jb=0
set Kb[Jb]="TimerUtils, line 1"
set Jb=Jb+1
set Po=aqw("when calling new_Table in TimerUtils, line 12")
call CreateTimer()
call CreateTrigger()
set Jb=Jb-1
return true
endfunction
function KU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989582,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989583,0)
endfunction
function JX takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990328 then
return false
endif
return true
endfunction
function KX takes nothing returns boolean
if not JX() then
return false
endif
return true
endfunction
function JY takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989042 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function KY takes nothing returns boolean
if not JY() then
return false
endif
return true
endfunction
function KYw takes nothing returns nothing
set Jb=0
set Kb[Jb]="ClosureEvents, line 292"
set Jb=Jb+1
call WB("when calling generalEventCallback in ClosureEvents, line 292")
set Jb=Jb-1
endfunction
function Km takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988788,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988535,0)
endfunction
function Kww takes nothing returns boolean
set Zo=InitHashtable()
return true
endfunction
function LI takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989828,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989827,0)
endfunction
function LRw takes integer RRw,integer TRw,integer YRw,integer GRw,integer gRw,integer hRw,integer FRw,integer kRw,integer jRw,integer xRw,integer vRw,integer mRw,integer QRw,integer WRw,integer ERw,integer ZRw,integer URw,integer IRw,integer PRw,integer ARw,integer DRw,integer HRw,string JRw returns integer
local integer KRw
set Kb[Jb]=JRw
set Jb=Jb+1
set KRw=iyw("when calling new_LinkedList in LinkedList, line 391")
call Ddw(KRw,RRw,"when calling add in LinkedList, line 393")
call Ddw(KRw,TRw,"when calling add in LinkedList, line 393")
call Ddw(KRw,YRw,"when calling add in LinkedList, line 393")
call Ddw(KRw,GRw,"when calling add in LinkedList, line 393")
call Ddw(KRw,gRw,"when calling add in LinkedList, line 393")
call Ddw(KRw,hRw,"when calling add in LinkedList, line 393")
call Ddw(KRw,FRw,"when calling add in LinkedList, line 393")
call Ddw(KRw,kRw,"when calling add in LinkedList, line 393")
call Ddw(KRw,jRw,"when calling add in LinkedList, line 393")
call Ddw(KRw,xRw,"when calling add in LinkedList, line 393")
call Ddw(KRw,vRw,"when calling add in LinkedList, line 393")
call Ddw(KRw,mRw,"when calling add in LinkedList, line 393")
call Ddw(KRw,QRw,"when calling add in LinkedList, line 393")
call Ddw(KRw,WRw,"when calling add in LinkedList, line 393")
call Ddw(KRw,ERw,"when calling add in LinkedList, line 393")
call Ddw(KRw,ZRw,"when calling add in LinkedList, line 393")
call Ddw(KRw,URw,"when calling add in LinkedList, line 393")
call Ddw(KRw,IRw,"when calling add in LinkedList, line 393")
call Ddw(KRw,PRw,"when calling add in LinkedList, line 393")
call Ddw(KRw,ARw,"when calling add in LinkedList, line 393")
call Ddw(KRw,DRw,"when calling add in LinkedList, line 393")
call Ddw(KRw,HRw,"when calling add in LinkedList, line 393")
set Jb=Jb-1
return KRw
endfunction
function Ufw takes integer afw,integer nfw,integer dfw,integer ffw,integer Rfw,integer Tfw,integer Yfw,integer Gfw,integer gfw,integer hfw,integer Ffw,integer kfw,integer jfw,integer xfw,integer vfw,integer mfw,integer Qfw,integer Wfw,string Efw returns integer
local integer Zfw
set Kb[Jb]=Efw
set Jb=Jb+1
set Zfw=iyw("when calling new_LinkedList in LinkedList, line 391")
call Ddw(Zfw,afw,"when calling add in LinkedList, line 393")
call Ddw(Zfw,nfw,"when calling add in LinkedList, line 393")
call Ddw(Zfw,dfw,"when calling add in LinkedList, line 393")
call Ddw(Zfw,ffw,"when calling add in LinkedList, line 393")
call Ddw(Zfw,Rfw,"when calling add in LinkedList, line 393")
call Ddw(Zfw,Tfw,"when calling add in LinkedList, line 393")
call Ddw(Zfw,Yfw,"when calling add in LinkedList, line 393")
call Ddw(Zfw,Gfw,"when calling add in LinkedList, line 393")
call Ddw(Zfw,gfw,"when calling add in LinkedList, line 393")
call Ddw(Zfw,hfw,"when calling add in LinkedList, line 393")
call Ddw(Zfw,Ffw,"when calling add in LinkedList, line 393")
call Ddw(Zfw,kfw,"when calling add in LinkedList, line 393")
call Ddw(Zfw,jfw,"when calling add in LinkedList, line 393")
call Ddw(Zfw,xfw,"when calling add in LinkedList, line 393")
call Ddw(Zfw,vfw,"when calling add in LinkedList, line 393")
call Ddw(Zfw,mfw,"when calling add in LinkedList, line 393")
call Ddw(Zfw,Qfw,"when calling add in LinkedList, line 393")
call Ddw(Zfw,Wfw,"when calling add in LinkedList, line 393")
set Jb=Jb-1
return Zfw
endfunction
function fRw takes integer tRw,integer iRw,integer SRw,integer cRw,integer oRw,integer ORw,integer lRw,integer bRw,integer yRw,integer pRw,integer eRw,integer qRw,integer aRw,string nRw returns integer
local integer dRw
set Kb[Jb]=nRw
set Jb=Jb+1
set dRw=iyw("when calling new_LinkedList in LinkedList, line 391")
call Ddw(dRw,tRw,"when calling add in LinkedList, line 393")
call Ddw(dRw,iRw,"when calling add in LinkedList, line 393")
call Ddw(dRw,SRw,"when calling add in LinkedList, line 393")
call Ddw(dRw,cRw,"when calling add in LinkedList, line 393")
call Ddw(dRw,oRw,"when calling add in LinkedList, line 393")
call Ddw(dRw,ORw,"when calling add in LinkedList, line 393")
call Ddw(dRw,lRw,"when calling add in LinkedList, line 393")
call Ddw(dRw,bRw,"when calling add in LinkedList, line 393")
call Ddw(dRw,yRw,"when calling add in LinkedList, line 393")
call Ddw(dRw,pRw,"when calling add in LinkedList, line 393")
call Ddw(dRw,eRw,"when calling add in LinkedList, line 393")
call Ddw(dRw,qRw,"when calling add in LinkedList, line 393")
call Ddw(dRw,aRw,"when calling add in LinkedList, line 393")
set Jb=Jb-1
return dRw
endfunction
function sRw takes integer Ifw,integer Pfw,integer Afw,integer Dfw,integer Hfw,integer Jfw,integer Kfw,integer Lfw,integer Xfw,integer Cfw,integer Vfw,integer Bfw,integer Nfw,integer Mfw,integer wRw,string uRw returns integer
local integer rRw
set Kb[Jb]=uRw
set Jb=Jb+1
set rRw=iyw("when calling new_LinkedList in LinkedList, line 391")
call Ddw(rRw,Ifw,"when calling add in LinkedList, line 393")
call Ddw(rRw,Pfw,"when calling add in LinkedList, line 393")
call Ddw(rRw,Afw,"when calling add in LinkedList, line 393")
call Ddw(rRw,Dfw,"when calling add in LinkedList, line 393")
call Ddw(rRw,Hfw,"when calling add in LinkedList, line 393")
call Ddw(rRw,Jfw,"when calling add in LinkedList, line 393")
call Ddw(rRw,Kfw,"when calling add in LinkedList, line 393")
call Ddw(rRw,Lfw,"when calling add in LinkedList, line 393")
call Ddw(rRw,Xfw,"when calling add in LinkedList, line 393")
call Ddw(rRw,Cfw,"when calling add in LinkedList, line 393")
call Ddw(rRw,Vfw,"when calling add in LinkedList, line 393")
call Ddw(rRw,Bfw,"when calling add in LinkedList, line 393")
call Ddw(rRw,Nfw,"when calling add in LinkedList, line 393")
call Ddw(rRw,Mfw,"when calling add in LinkedList, line 393")
call Ddw(rRw,wRw,"when calling add in LinkedList, line 393")
set Jb=Jb-1
return rRw
endfunction
function Buw takes string fuw returns boolean
local integer Ruw
local integer Tuw
local integer Yuw
local integer Guw
local integer guw
local integer huw
local integer Fuw
local integer kuw
local integer juw
local integer xuw
local integer vuw
local integer muw
local integer Quw
local integer Wuw
local integer Euw
local integer Zuw
local integer Uuw
local integer Iuw
local integer Puw
local integer Auw
local integer Duw
local integer Huw
local integer Juw
local integer Kuw
local integer Luw
local integer Xuw
local integer Cuw
local integer Vuw
set Kb[Jb]=fuw
set Jb=Jb+1
set Kb[Jb]="when calling asList in Units, line 118"
set Jb=Jb+1
set Tuw=iyw("when calling new_LinkedList in LinkedList, line 391")
call Ddw(Tuw,1747989317,"when calling add in LinkedList, line 393")
call Ddw(Tuw,1747989305,"when calling add in LinkedList, line 393")
call Ddw(Tuw,1747989316,"when calling add in LinkedList, line 393")
call Ddw(Tuw,1747989315,"when calling add in LinkedList, line 393")
set Jb=Jb-1
set Lo=Tuw
set Xo=Tlw("when calling new_HashMap in Units, line 119")
set Co[0]=Ufw(1747988528,1747988528,1747988528,1747988528,1747988528,1747988528,1747988532,1747988532,1747988532,1747988532,1211118401,1747989058,1747989058,1747989058,1747989058,1747989058,1747989058,1747988790,"when calling asList in Units, line 126")
set Co[1]=Ufw(1747990339,1747990339,1747990339,1747990339,1747990339,1747990339,1747990340,1747990340,1747990340,1747990340,1211119699,1747990593,1747990593,1747990593,1747990593,1747990593,1747990593,1747988790,"when calling asList in Units, line 132")
set Co[2]=Ufw(1747990087,1747990087,1747990087,1747990087,1747990087,1747990087,1747990088,1747990088,1747990088,1747990088,1211119701,1747989817,1747989817,1747989817,1747989817,1747989817,1747989817,1747988790,"when calling asList in Units, line 139")
set Co[3]=Ufw(1747989558,1747989558,1747989558,1747989558,1747989558,1747989558,1747989575,1747989575,1747989575,1747989575,1211119700,1747989571,1747989571,1747989571,1747989571,1747989571,1747989571,1747988790,"when calling asList in Units, line 146")
set Kb[Jb]="when calling asList in Units, line 155"
set Jb=Jb+1
set Yuw=iyw("when calling new_LinkedList in LinkedList, line 391")
call Ddw(Yuw,1747989558,"when calling add in LinkedList, line 393")
call Ddw(Yuw,1747990339,"when calling add in LinkedList, line 393")
call Ddw(Yuw,1747990087,"when calling add in LinkedList, line 393")
call Ddw(Yuw,1747988528,"when calling add in LinkedList, line 393")
call Ddw(Yuw,1747989575,"when calling add in LinkedList, line 393")
call Ddw(Yuw,1747990340,"when calling add in LinkedList, line 393")
call Ddw(Yuw,1747990088,"when calling add in LinkedList, line 393")
call Ddw(Yuw,1747988532,"when calling add in LinkedList, line 393")
set Jb=Jb-1
set Vo=Yuw
set Kb[Jb]="when calling asList in Units, line 167"
set Jb=Jb+1
set Guw=iyw("when calling new_LinkedList in LinkedList, line 391")
call Ddw(Guw,1747988529,"when calling add in LinkedList, line 393")
call Ddw(Guw,1747988530,"when calling add in LinkedList, line 393")
call Ddw(Guw,1747988531,"when calling add in LinkedList, line 393")
call Ddw(Guw,1747990326,"when calling add in LinkedList, line 393")
call Ddw(Guw,1747990327,"when calling add in LinkedList, line 393")
call Ddw(Guw,1747990328,"when calling add in LinkedList, line 393")
call Ddw(Guw,1747990084,"when calling add in LinkedList, line 393")
call Ddw(Guw,1747990087,"when calling add in LinkedList, line 393")
call Ddw(Guw,1747990085,"when calling add in LinkedList, line 393")
call Ddw(Guw,1747989590,"when calling add in LinkedList, line 393")
call Ddw(Guw,1747989591,"when calling add in LinkedList, line 393")
call Ddw(Guw,1747989592,"when calling add in LinkedList, line 393")
set Jb=Jb-1
set Bo=Guw
set Kb[Jb]="when calling asList in Units, line 182"
set Jb=Jb+1
set guw=iyw("when calling new_LinkedList in LinkedList, line 391")
call Ddw(guw,1747989059,"when calling add in LinkedList, line 393")
call Ddw(guw,1747989060,"when calling add in LinkedList, line 393")
call Ddw(guw,1747988844,"when calling add in LinkedList, line 393")
call Ddw(guw,1747990351,"when calling add in LinkedList, line 393")
call Ddw(guw,1747990352,"when calling add in LinkedList, line 393")
call Ddw(guw,1747990356,"when calling add in LinkedList, line 393")
call Ddw(guw,1747989331,"when calling add in LinkedList, line 393")
call Ddw(guw,1747990350,"when calling add in LinkedList, line 393")
call Ddw(guw,1747989809,"when calling add in LinkedList, line 393")
call Ddw(guw,1747990353,"when calling add in LinkedList, line 393")
call Ddw(guw,1747990354,"when calling add in LinkedList, line 393")
call Ddw(guw,1747990355,"when calling add in LinkedList, line 393")
set Jb=Jb-1
set No=guw
set Mo=sRw(1747988529,1747988530,1747988531,1747990326,1747990327,1747990328,1747990084,1747990087,1747990085,1747989590,1747989591,1747989592,1747989555,1747989297,1747989325,"when calling asList in Units, line 197")
set Kb[Jb]="when calling asList in Units, line 206"
set Jb=Jb+1
set huw=iyw("when calling new_LinkedList in LinkedList, line 391")
call Ddw(huw,1747989321,"when calling add in LinkedList, line 393")
call Ddw(huw,1747989321,"when calling add in LinkedList, line 393")
call Ddw(huw,1747989321,"when calling add in LinkedList, line 393")
call Ddw(huw,1747989321,"when calling add in LinkedList, line 393")
call Ddw(huw,1747989321,"when calling add in LinkedList, line 393")
call Ddw(huw,1747989321,"when calling add in LinkedList, line 393")
call Ddw(huw,1747989321,"when calling add in LinkedList, line 393")
call Ddw(huw,1747989321,"when calling add in LinkedList, line 393")
call Ddw(huw,1747988790,"when calling add in LinkedList, line 393")
set Jb=Jb-1
set wO[0]=huw
set Kb[Jb]="when calling asList in Units, line 207"
set Jb=Jb+1
set Fuw=iyw("when calling new_LinkedList in LinkedList, line 391")
call Ddw(Fuw,1747989321,"when calling add in LinkedList, line 393")
call Ddw(Fuw,1747989321,"when calling add in LinkedList, line 393")
call Ddw(Fuw,1747989321,"when calling add in LinkedList, line 393")
call Ddw(Fuw,1747989321,"when calling add in LinkedList, line 393")
call Ddw(Fuw,1747989326,"when calling add in LinkedList, line 393")
call Ddw(Fuw,1747989326,"when calling add in LinkedList, line 393")
call Ddw(Fuw,1747989321,"when calling add in LinkedList, line 393")
call Ddw(Fuw,1747989321,"when calling add in LinkedList, line 393")
call Ddw(Fuw,1747989321,"when calling add in LinkedList, line 393")
call Ddw(Fuw,1747989321,"when calling add in LinkedList, line 393")
call Ddw(Fuw,1747988790,"when calling add in LinkedList, line 393")
set Jb=Jb-1
set wO[1]=Fuw
set wO[2]=fRw(1747989321,1747989321,1747989321,1747989321,1747989326,1747989326,1747989326,1747989326,1747989326,1747989326,1747989337,1747989337,1747988790,"when calling asList in Units, line 208")
set kuw=GetHandleId(gu)
set juw=GetHandleId(kw)
set xuw=GetHandleId(ew)
set vuw=GetHandleId(qw)
set muw=GetHandleId(Ow)
set Quw=GetHandleId(hu)
set Wuw=GetHandleId(Yu)
set Euw=GetHandleId(Vw)
set Zuw=GetHandleId(q)
set Uuw=GetHandleId(Gu)
set Iuw=GetHandleId(a)
set Puw=GetHandleId(fw)
set Auw=GetHandleId(dw)
set Duw=GetHandleId(Rw)
set Huw=GetHandleId(ow)
set Juw=GetHandleId(lw)
set Kuw=GetHandleId(bw)
set Luw=GetHandleId(yw)
set Xuw=GetHandleId(pw)
set Cuw=GetHandleId(aw)
set Vuw=GetHandleId(d)
set uO=LRw(kuw,juw,xuw,vuw,muw,Quw,Wuw,Euw,Zuw,Uuw,Iuw,Puw,Auw,Duw,Huw,Juw,Kuw,Luw,Xuw,Cuw,Vuw,GetHandleId(n),"when calling asList in Units, line 211")
set Ruw=Xo
call Vnw(Ruw,1747989317,15,"when calling put in Units, line 238")
call Vnw(Ruw,1747989305,50,"when calling put in Units, line 239")
call Vnw(Ruw,1747989316,25,"when calling put in Units, line 240")
call Vnw(Ruw,1747989315,40,"when calling put in Units, line 241")
set Jb=Jb-1
return true
endfunction
function LTw takes nothing returns boolean
set Jb=0
return Buw("Units, line 1")
endfunction
function LX takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function LYw takes nothing returns nothing
set Jb=0
set Kb[Jb]="ClosureEvents, line 293"
set Jb=Jb+1
call WB("when calling generalEventCallback in ClosureEvents, line 293")
set Jb=Jb-1
endfunction
function KZ takes nothing returns boolean
if GetResearched()!=1378889806 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889806,true)!=2 then
return false
endif
return true
endfunction
function LZ takes nothing returns boolean
if not KZ() then
return false
endif
return true
endfunction
function Lww takes nothing returns boolean
return true
endfunction
function MA takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990607,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990583,0)
endfunction
function NI takes nothing returns boolean
if GetResearched()!=1378890033 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890033,true)!=2 then
return false
endif
return true
endfunction
function MI takes nothing returns boolean
if not NI() then
return false
endif
return true
endfunction
function NV takes string VV returns boolean
local integer BV
set Kb[Jb]=VV
set Jb=Jb+1
set vS=ConvertPlayerEvent(96)
set US=Tlw("when calling new_HashMap in ClosureEvents, line 99")
set IS=Tlw("when calling new_HashMap in ClosureEvents, line 100")
set mS=CreateTrigger()
set QS=CreateTrigger()
set WS=CreateTrigger()
call TriggerAddCondition(Do,Condition(Zf))
call TriggerAddCondition(Ho,Condition(Uf))
set Kb[Jb]="when calling alloc_ClosureEvents_CallbackSingle_line290 in ClosureEvents, line 290"
set Jb=Jb+1
if TO==0 then
if YO<32768 then
set YO=YO+1
set BV=YO
set GO[BV]=640
else
call S4("Out of memory: Could not create ClosureEvents_CallbackSingle_line290.","when calling error in ClosureEvents, line 290")
set BV=0
endif
else
set TO=TO-1
set BV=RO[TO]
set GO[BV]=640
endif
set Jb=Jb-1
set Kb[Jb]="when calling nullTimer in ClosureEvents, line 290"
set Jb=Jb+1
set Kb[Jb]="when calling doAfter in ClosureTimers, line 33"
set Jb=Jb+1
call yN(eww("when calling getTimer in ClosureTimers, line 27"),0.,BV,"when calling doAfter in ClosureTimers, line 27")
set Jb=Jb-1-1-1
return true
endfunction
function MTw takes nothing returns boolean
set Jb=0
return NV("ClosureEvents, line 1")
endfunction
function NX takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747988531 then
return false
endif
return true
endfunction
function MX takes nothing returns boolean
if not NX() then
return false
endif
return true
endfunction
function Mm takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988561,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988784,0)
endfunction
function Mww_2 takes nothing returns boolean
return true
endfunction
function BA takes nothing returns boolean
if GetResearched()!=1378890051 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890051,true)!=2 then
return false
endif
return true
endfunction
function NA takes nothing returns boolean
if not BA() then
return false
endif
return true
endfunction
function NC takes nothing returns boolean
local boolean VC
local boolean BC
if GetUnitTypeId(GetSpellAbilityUnit())==1747988553 then
set VC=GetUnitTypeId(GetSpellTargetUnit())==1747989297
else
set VC=false
endif
if VC then
set BC=GetPlayerId(GetOwningPlayer(GetSpellTargetUnit()))==PLAYER_NEUTRAL_AGGRESSIVE
else
set BC=false
endif
return BC
endfunction
function NG takes nothing returns nothing
set t=GetUnitLoc(GetSpellTargetUnit())
set bj_lastCreatedEffect=AddSpecialEffectLoc("Abilities\\Spells\\Orc\\Voodoo\\VoodooAuraTarget.mdl",t)
call DestroyEffect(bj_lastCreatedEffect)
set i=GetUnitLoc(GetSpellAbilityUnit())
set bj_lastCreatedEffect=AddSpecialEffectLoc("Abilities\\Spells\\Orc\\Voodoo\\VoodooAura.mdl",i)
call DestroyEffect(bj_lastCreatedEffect)
call RemoveLocation(t)
call RemoveLocation(i)
endfunction
function BJ takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())==1747988531 then
return true
endif
if GetUnitTypeId(GetTriggerUnit())==1747990328 then
return true
endif
if GetUnitTypeId(GetTriggerUnit())==1747989592 then
return true
endif
if GetUnitTypeId(GetTriggerUnit())==1747990086 then
return true
endif
return false
endfunction
function NJ takes nothing returns boolean
if not BJ() then
return false
endif
return true
endfunction
function NM takes nothing returns boolean
local trigger XM=CreateTrigger()
local trigger CM=XM
local playerunitevent VM=EVENT_PLAYER_UNIT_SPELL_EFFECT
local integer BM=0
loop
call TriggerRegisterPlayerUnitEvent(CM,Player(BM),VM,null)
set BM=BM+1
exitwhen BM==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(XM,Condition(Jf))
call TriggerAddAction(XM,Kf)
set XM=null
set CM=null
set VM=null
return true
endfunction
function M9 takes string C9 returns boolean
local integer V9
local integer B9
local integer N9
set Kb[Jb]=C9
set Jb=Jb+1
set Bc=CreateTrigger()
set Nc=CreateGroup()
set V9=0
set B9=bj_MAX_PLAYER_SLOTS-1
loop
exitwhen V9>B9
call SetPlayerAbilityAvailable(ro[V9],1095577649,false)
set V9=V9+1
endloop
set Kb[Jb]="when calling alloc_OnUnitEnterLeave_CallbackSingle_line62 in OnUnitEnterLeave, line 62"
set Jb=Jb+1
if TO==0 then
if YO<32768 then
set YO=YO+1
set N9=YO
set GO[N9]=650
else
call S4("Out of memory: Could not create OnUnitEnterLeave_CallbackSingle_line62.","when calling error in OnUnitEnterLeave, line 62")
set N9=0
endif
else
set TO=TO-1
set N9=RO[TO]
set GO[N9]=650
endif
set Jb=Jb-1
set Kb[Jb]="when calling nullTimer in OnUnitEnterLeave, line 62"
set Jb=Jb+1
set Kb[Jb]="when calling doAfter in ClosureTimers, line 33"
set Jb=Jb+1
call yN(eww("when calling getTimer in ClosureTimers, line 27"),0.,N9,"when calling doAfter in ClosureTimers, line 27")
set Jb=Jb-1-1-1
return true
endfunction
function NTw takes nothing returns boolean
set Jb=0
return M9("OnUnitEnterLeave, line 1")
endfunction
function NU takes nothing returns nothing
set s=bj_FORCE_ALL_PLAYERS
call ForForce(s,Rq)
endfunction
function NY takes nothing returns nothing
local player LY=GetOwningPlayer(GetAttacker())
local player XY=GetOwningPlayer(GetAttacker())
local player CY
local player VY
local unit BY
set r[GetPlayerId(LY)+1]=r[GetPlayerId(XY)+1]+1
set CY=GetOwningPlayer(GetTriggerUnit())
set VY=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(CY)+1]=r[GetPlayerId(VY)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set BY=GetTriggerUnit()
call SetUnitState(BY,UNIT_STATE_LIFE,GetUnitState(BY,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set LY=null
set XY=null
set CY=null
set VY=null
set BY=null
endfunction
function Vk takes nothing returns boolean
if GetUnitTypeId(GetSpellTargetUnit())==1747988787 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747990361 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747989831 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747989040 then
return true
endif
return false
endfunction
function Bk takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988801 then
return false
endif
if not Vk() then
return false
endif
return true
endfunction
function Nk takes nothing returns boolean
if not Bk() then
return false
endif
return true
endfunction
function Bm takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function Nm takes nothing returns boolean
if not Bm() then
return false
endif
return true
endfunction
function O0w takes nothing returns boolean
return true
endfunction
function O4 takes nothing returns nothing
set nc=nc+0.030
endfunction
function OE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988818,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988552,0)
endfunction
function OI takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989814,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989825,0)
endfunction
function OX takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function TC takes string nC returns boolean
local playerunitevent dC
local integer fC
local integer RC
set Kb[Jb]=nC
set Jb=Jb+1
set dC=EVENT_PLAYER_UNIT_ATTACKED
set Kb[Jb]="when calling alloc_CastleCapture_EventListener_line8 in CastleCapture, line 8"
set Jb=Jb+1
if SO==0 then
if cO<32768 then
set cO=cO+1
set fC=cO
set oO[fC]=662
else
call S4("Out of memory: Could not create CastleCapture_EventListener_line8.","when calling error in CastleCapture, line 8")
set fC=0
endif
else
set SO=SO-1
set fC=iO[SO]
set oO[fC]=662
endif
set Jb=Jb-1
set Nl[fC]=0
set Ml[fC]=0
set wb[fC]=0
set Kb[Jb]="when calling add in CastleCapture, line 8"
set Jb=Jb+1
set Kb[Jb]="when calling toIntId in ClosureEvents, line 112"
set Jb=Jb+1
set RC=ES[GetHandleId(dC)]
if RC==0 then
set RC=bB(dC,"when calling registerEventId in ClosureEvents, line 229")
endif
set Jb=Jb-1
set Nl[fC]=RC
if PS[Nl[fC]]!=0 then
set wb[PS[Nl[fC]]]=fC
set Ml[fC]=PS[Nl[fC]]
endif
set PS[Nl[fC]]=fC
set Jb=Jb-1-1
set dC=null
return true
endfunction
function OYw takes nothing returns boolean
set Jb=0
return TC("CastleCapture, line 1")
endfunction
function oZ takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function OZ takes nothing returns boolean
if not oZ() then
return false
endif
return true
endfunction
function IL takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747988809 then
return false
endif
return true
endfunction
function PL takes nothing returns boolean
if not IL() then
return false
endif
return true
endfunction
function A4 takes string P4 returns boolean
set Kb[Jb]=P4
set Jb=Jb+1
set Kb[Jb]="when calling alloc_LinkedList_Comparator_line504 in LinkedList, line 504"
set Jb=Jb+1
if JO==0 then
if KO<32768 then
set KO=KO+1
else
call S4("Out of memory: Could not create LinkedList_Comparator_line504.","when calling error in LinkedList, line 504")
endif
else
set JO=JO-1
endif
set Jb=Jb-1
set Kb[Jb]="when calling alloc_LinkedList_Comparator_line508 in LinkedList, line 508"
set Jb=Jb+1
if JO==0 then
if KO<32768 then
set KO=KO+1
else
call S4("Out of memory: Could not create LinkedList_Comparator_line508.","when calling error in LinkedList, line 508")
endif
else
set JO=JO-1
endif
set Jb=Jb-1-1
return true
endfunction
function PTw takes nothing returns boolean
set Jb=0
return A4("LinkedList, line 1")
endfunction
function IW takes nothing returns boolean
if GetResearched()!=1378889799 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889799,true)!=2 then
return false
endif
return true
endfunction
function PW takes nothing returns boolean
if not IW() then
return false
endif
return true
endfunction
function Kww_2 takes integer Iww_2,string Pww returns trigger
local integer Aww
local fogstate Dww
local integer Hww
local trigger Jww_2
set Kb[Jb]=Pww
set Jb=Jb+1
set Aww=Ao
set Dww=ConvertFogState(Iww_2)
set Kb[Jb]="when calling saveFogState in TypeCasting, line 94"
set Jb=Jb+1
if HO[Aww]==0 then
if Aww==0 then
call S4("Nullpointer exception when calling Table.saveFogState","when calling error in Table, line 168")
else
call S4("Called Table.saveFogState on invalid object.","when calling error in Table, line 168")
endif
endif
call SaveFogStateHandle(Zo,Aww,0,Dww)
set Jb=Jb-1
set Hww=Ao
set Kb[Jb]="when calling loadTrigger in TypeCasting, line 95"
set Jb=Jb+1
if HO[Hww]==0 then
if Hww==0 then
call S4("Nullpointer exception when calling Table.loadTrigger","when calling error in Table, line 111")
else
call S4("Called Table.loadTrigger on invalid object.","when calling error in Table, line 111")
endif
endif
set Jww_2=LoadTriggerHandle(Zo,Hww,0)
set Jb=Jb-1-1
set pR=Jww_2
set Dww=null
set Jww_2=null
return pR
endfunction
function uww takes string M0w returns boolean
local boolean www
set Kb[Jb]=M0w
set Jb=Jb+1
set www=TriggerEvaluate(Kww_2(udw(qo,GetSpellAbilityId(),"when calling get in RegisterEvents, line 58"),"when calling triggerFromIndex in RegisterEvents, line 58"))
set Jb=Jb-1
return www
endfunction
function PYw takes nothing returns boolean
set Jb=0
return uww("RegisterEvents, line 58")
endfunction
function PZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989559,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989569,0)
endfunction
function Q0w takes nothing returns boolean
set po=-340282366920938000000000000000000000000.
return true
endfunction
function QL takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function QW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988559,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989064,0)
endfunction
function Qww takes nothing returns boolean
return true
endfunction
function R4 takes nothing returns boolean
return true
endfunction
function R5 takes nothing returns boolean
return true
endfunction
function RD takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990595,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990608,0)
endfunction
function RK takes nothing returns nothing
call UnitAddAbility(GetConstructedStructure(),1093677896)
endfunction
function fP takes nothing returns boolean
if GetResearched()!=1378890036 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890036,true)!=1 then
return false
endif
return true
endfunction
function RP takes nothing returns boolean
if not fP() then
return false
endif
return true
endfunction
function RQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988567,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988564,0)
endfunction
function O5 takes string B2 returns boolean
local playerunitevent N2
local playerunitevent M2
local integer w5
local integer u5
local integer r5
local integer s5
local integer t5
local integer i5
local integer S5
local integer c5
local integer o5
set Kb[Jb]=B2
set Jb=Jb+1
set Zc=Tlw("when calling new_HashMap in MassControl, line 7")
set w5=R2I(500000)
set u5=R2I(700000)
set r5=R2I(1000000)
set Kb[Jb]="when calling asList in MassControl, line 8"
set Jb=Jb+1
set s5=iyw("when calling new_LinkedList in LinkedList, line 391")
call Ddw(s5,w5,"when calling add in LinkedList, line 393")
call Ddw(s5,u5,"when calling add in LinkedList, line 393")
call Ddw(s5,r5,"when calling add in LinkedList, line 393")
set Jb=Jb-1
set Uc=s5
set Kb[Jb]="when calling asList in MassControl, line 14"
set Jb=Jb+1
set t5=iyw("when calling new_LinkedList in LinkedList, line 391")
call Ddw(t5,1211118401,"when calling add in LinkedList, line 393")
call Ddw(t5,1211119699,"when calling add in LinkedList, line 393")
call Ddw(t5,1211119701,"when calling add in LinkedList, line 393")
call Ddw(t5,1211119700,"when calling add in LinkedList, line 393")
set Jb=Jb-1
set Ic=t5
set N2=EVENT_PLAYER_UNIT_SPELL_CAST
set Kb[Jb]="when calling alloc_MassControl_EventListener_line22 in MassControl, line 22"
set Jb=Jb+1
if SO==0 then
if cO<32768 then
set cO=cO+1
set i5=cO
set oO[i5]=671
else
call S4("Out of memory: Could not create MassControl_EventListener_line22.","when calling error in MassControl, line 22")
set i5=0
endif
else
set SO=SO-1
set i5=iO[SO]
set oO[i5]=671
endif
set Jb=Jb-1
set Nl[i5]=0
set Ml[i5]=0
set wb[i5]=0
set Kb[Jb]="when calling add in MassControl, line 22"
set Jb=Jb+1
set Kb[Jb]="when calling toIntId in ClosureEvents, line 112"
set Jb=Jb+1
set S5=ES[GetHandleId(N2)]
if S5==0 then
set S5=bB(N2,"when calling registerEventId in ClosureEvents, line 229")
endif
set Jb=Jb-1
set Nl[i5]=S5
if PS[Nl[i5]]!=0 then
set wb[PS[Nl[i5]]]=i5
set Ml[i5]=PS[Nl[i5]]
endif
set PS[Nl[i5]]=i5
set Jb=Jb-1
set M2=EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER
set Kb[Jb]="when calling alloc_MassControl_EventListener_line32 in MassControl, line 32"
set Jb=Jb+1
if SO==0 then
if cO<32768 then
set cO=cO+1
set c5=cO
set oO[c5]=672
else
call S4("Out of memory: Could not create MassControl_EventListener_line32.","when calling error in MassControl, line 32")
set c5=0
endif
else
set SO=SO-1
set c5=iO[SO]
set oO[c5]=672
endif
set Jb=Jb-1
set Nl[c5]=0
set Ml[c5]=0
set wb[c5]=0
set Kb[Jb]="when calling add in MassControl, line 32"
set Jb=Jb+1
set Kb[Jb]="when calling toIntId in ClosureEvents, line 112"
set Jb=Jb+1
set o5=ES[GetHandleId(M2)]
if o5==0 then
set o5=bB(M2,"when calling registerEventId in ClosureEvents, line 229")
endif
set Jb=Jb-1
set Nl[c5]=o5
if PS[Nl[c5]]!=0 then
set wb[PS[Nl[c5]]]=c5
set Ml[c5]=PS[Nl[c5]]
endif
set PS[Nl[c5]]=c5
set Jb=Jb-1-1
set N2=null
set M2=null
return true
endfunction
function RYw takes nothing returns boolean
set Jb=0
return O5("MassControl, line 1")
endfunction
function SD takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651855,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651851,0)
endfunction
function SK takes nothing returns nothing
local integer MJ=1
local integer wK=1751343475
local player uK=GetOwningPlayer(GetTriggerUnit())
local rect iK=bj_mapInitialPlayableArea
local location tK=Location(GetRectCenterX(iK),GetRectCenterY(iK))
local location rK=Location(GetLocationX(tK)+100000000.00,GetLocationY(tK)+100000000.00)
local real sK=bj_UNIT_FACING
call GroupClear(bj_lastCreatedGroup)
loop
set MJ=MJ-1
exitwhen MJ<0
call CreateUnitAtLocSaveLast(uK,wK,rK,sK)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
call ShowUnit(bj_lastCreatedUnit,false)
set uK=null
set rK=null
set tK=null
set iK=null
endfunction
function iP takes nothing returns boolean
if GetResearched()!=1378889797 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889797,true)!=1 then
return false
endif
return true
endfunction
function SP takes nothing returns boolean
if not iP() then
return false
endif
return true
endfunction
function SQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988565,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988563,0)
endfunction
function SYw takes nothing returns boolean
local integer uYw
local integer rYw
local integer sYw
local integer tYw
local integer iYw
set Jb=0
set Kb[Jb]="City, line 1"
set Jb=Jb+1
set YS=120.0
set GS[0]=0.0020
set GS[1]=0.0025
set Kb[Jb]="when calling asList in City, line 36"
set Jb=Jb+1
set uYw=iyw("when calling new_LinkedList in LinkedList, line 391")
call Ddw(uYw,10000,"when calling add in LinkedList, line 393")
call Ddw(uYw,20000,"when calling add in LinkedList, line 393")
set Jb=Jb-1
set gS[0]=uYw
set Kb[Jb]="when calling asList in City, line 37"
set Jb=Jb+1
set rYw=iyw("when calling new_LinkedList in LinkedList, line 391")
call Ddw(rYw,30000,"when calling add in LinkedList, line 393")
call Ddw(rYw,40000,"when calling add in LinkedList, line 393")
set Jb=Jb-1
set gS[1]=rYw
set Kb[Jb]="when calling asList in City, line 38"
set Jb=Jb+1
set sYw=iyw("when calling new_LinkedList in LinkedList, line 391")
call Ddw(sYw,60000,"when calling add in LinkedList, line 393")
call Ddw(sYw,90000,"when calling add in LinkedList, line 393")
set Jb=Jb-1
set gS[2]=sYw
set Kb[Jb]="when calling asList in City, line 39"
set Jb=Jb+1
set tYw=iyw("when calling new_LinkedList in LinkedList, line 391")
call Ddw(tYw,120000,"when calling add in LinkedList, line 393")
call Ddw(tYw,160000,"when calling add in LinkedList, line 393")
set Jb=Jb-1
set gS[3]=tYw
set Kb[Jb]="when calling asList in City, line 40"
set Jb=Jb+1
set iYw=iyw("when calling new_LinkedList in LinkedList, line 391")
call Ddw(iYw,180000,"when calling add in LinkedList, line 393")
call Ddw(iYw,220000,"when calling add in LinkedList, line 393")
set Jb=Jb-1
set gS[4]=iYw
set hS[0]=1.0
set hS[1]=0.5
set hS[2]=1.6
set hS[3]=2.0
set FS[0]=0.0
set FS[1]=20.0
set FS[2]=-25.0
set FS[3]=-60.0
set kS[0]=0.05
set kS[1]=0.0
set kS[2]=0.15
set kS[3]=0.30
set jS[0]=1.0
set jS[1]=1.1
set jS[2]=0.85
set jS[3]=0.7
set Jb=Jb-1
return true
endfunction
function Sm takes nothing returns nothing
call SetMapFlag(MAP_LOCK_RESOURCE_TRADING,false)
endfunction
function T0w takes nothing returns boolean
return true
endfunction
function T4 takes nothing returns boolean
return true
endfunction
function RA takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function TA takes nothing returns boolean
if not RA() then
return false
endif
return true
endfunction
function TJ takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747988553 then
return false
endif
return true
endfunction
function TP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989836,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989837,0)
endfunction
function RU takes nothing returns boolean
if GetResearched()!=1378889810 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889810,true)!=1 then
return false
endif
return true
endfunction
function TU takes nothing returns boolean
if not RU() then
return false
endif
return true
endfunction
function O6 takes string i6 returns boolean
local integer S6
local integer c6
local timer o6
set Kb[Jb]=i6
set Jb=Jb+1
set Kb[Jb]="when calling alloc_MultiboardCityUpdate_CallbackSingle_line18 in MultiboardCityUpdate, line 18"
set Jb=Jb+1
if TO==0 then
if YO<32768 then
set YO=YO+1
set S6=YO
set GO[S6]=648
else
call S4("Out of memory: Could not create MultiboardCityUpdate_CallbackSingle_line18.","when calling error in MultiboardCityUpdate, line 18")
set S6=0
endif
else
set TO=TO-1
set S6=RO[TO]
set GO[S6]=648
endif
set Jb=Jb-1
set Kb[Jb]="when calling doAfter in MultiboardCityUpdate, line 18"
set Jb=Jb+1
call yN(eww("when calling getTimer in ClosureTimers, line 27"),0.01,S6,"when calling doAfter in ClosureTimers, line 27")
set Jb=Jb-1
set Kb[Jb]="when calling alloc_MultiboardCityUpdate_CallbackPeriodic_line25 in MultiboardCityUpdate, line 25"
set Jb=Jb+1
if hO==0 then
if FO<32768 then
set FO=FO+1
set c6=FO
set kO[c6]=637
else
call S4("Out of memory: Could not create MultiboardCityUpdate_CallbackPeriodic_line25.","when calling error in MultiboardCityUpdate, line 25")
set c6=0
endif
else
set hO=hO-1
set c6=gO[hO]
set kO[c6]=637
endif
set Jb=Jb-1
set Kb[Jb]="when calling doPeriodically in MultiboardCityUpdate, line 25"
set Jb=Jb+1
set o6=eww("when calling getTimer in ClosureTimers, line 57")
set Kb[Jb]="when calling doPeriodically in ClosureTimers, line 57"
set Jb=Jb+1
call inw(c6,o6,1.0,"when calling start in ClosureTimers, line 45")
set Jb=Jb-1-1-1
set o6=null
return true
endfunction
function TYw takes nothing returns boolean
set Jb=0
return O6("MultiboardCityUpdate, line 1")
endfunction
function fv takes nothing returns boolean
if GetUnitTypeId(GetSpellTargetUnit())==1747990581 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747990580 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747989813 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747988569 then
return true
endif
return false
endfunction
function Rv takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989048 then
return false
endif
if not fv() then
return false
endif
return true
endfunction
function Tv takes nothing returns boolean
if not Rv() then
return false
endif
return true
endfunction
function UA takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990594,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990584,0)
endfunction
function ZE takes nothing returns boolean
if GetResearched()!=1378889783 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889783,true)!=2 then
return false
endif
return true
endfunction
function UE takes nothing returns boolean
if not ZE() then
return false
endif
return true
endfunction
function ZI takes nothing returns boolean
if GetResearched()!=1378890034 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890034,true)!=2 then
return false
endif
return true
endfunction
function UI takes nothing returns boolean
if not ZI() then
return false
endif
return true
endfunction
function Hww takes string Pww,string Aww returns boolean
local integer Dww=StringLength(Pww)
if StringLength(Aww)>Dww then
return false
endif
return SubString(Pww,0,StringLength(Aww))==Aww
endfunction
function UM takes nothing returns boolean
return Hww(GetEventPlayerChatString(),"-")
endfunction
function UT takes nothing returns nothing
call ReplaceUnitBJ(GetEnumUnit(),1747988553,bj_UNIT_STATE_METHOD_RELATIVE)
endfunction
function initializeTable takes string stackPos returns nothing
local integer i_2
local integer this
local integer parentKey
set Kb[Jb]=stackPos
set Jb=Jb+1
set i_2=0
loop
exitwhen i_2>15
set this=uc
set parentKey=StringHash(wc[i_2])
set stackPos="when calling saveInt in Colors, line 206"
set Kb[Jb]="when calling saveInt in Colors, line 206"
set Jb=Jb+1
if HO[this]==0 then
if this==0 then
call S4("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call S4("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Zo,this,parentKey,i_2)
set Jb=Jb-1
set i_2=i_2+1
endloop
set Jb=Jb-1
endfunction
function nN takes string aN returns boolean
set Kb[Jb]=aN
set Jb=Jb+1
set BS[0]=255
set NS[0]=2
set MS[0]=2
set BS[1]=0
set NS[1]=65
set MS[1]=255
set BS[2]=27
set NS[2]=229
set MS[2]=184
set BS[3]=83
set NS[3]=0
set MS[3]=128
set BS[4]=255
set NS[4]=252
set MS[4]=0
set BS[5]=254
set NS[5]=137
set MS[5]=13
set BS[6]=31
set NS[6]=191
set MS[6]=0
set BS[7]=228
set NS[7]=90
set MS[7]=175
set BS[8]=148
set NS[8]=149
set MS[8]=150
set BS[9]=125
set NS[9]=190
set MS[9]=241
set BS[10]=15
set NS[10]=97
set MS[10]=69
set BS[11]=77
set NS[11]=41
set MS[11]=3
set BS[12]=155
set NS[12]=0
set MS[12]=0
set BS[13]=0
set NS[13]=0
set MS[13]=195
set BS[14]=0
set NS[14]=234
set MS[14]=255
set BS[15]=190
set NS[15]=0
set MS[15]=254
set BS[16]=235
set NS[16]=205
set MS[16]=135
set BS[17]=248
set NS[17]=164
set MS[17]=139
set BS[18]=191
set NS[18]=255
set MS[18]=128
set BS[19]=220
set NS[19]=185
set MS[19]=235
set BS[20]=40
set NS[20]=40
set MS[20]=40
set BS[21]=235
set NS[21]=240
set MS[21]=255
set BS[22]=0
set NS[22]=120
set MS[22]=30
set BS[23]=164
set NS[23]=11
set MS[23]=51
set wc[0]="0"
set wc[1]="1"
set wc[2]="2"
set wc[3]="3"
set wc[4]="4"
set wc[5]="5"
set wc[6]="6"
set wc[7]="7"
set wc[8]="8"
set wc[9]="9"
set wc[10]="A"
set wc[11]="B"
set wc[12]="C"
set wc[13]="D"
set wc[14]="E"
set wc[15]="F"
set uc=aqw("when calling new_Table in Colors, line 154")
call initializeTable("when calling initializeTable in Colors, line 209")
set Jb=Jb-1
return true
endfunction
function UTw takes nothing returns boolean
set Jb=0
return nN("Colors, line 1")
endfunction
function UU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651832,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651830,0)
endfunction
function ZX takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990086 then
return false
endif
return true
endfunction
function UX takes nothing returns boolean
if not ZX() then
return false
endif
return true
endfunction
function F5 takes player T5,string Y5 returns string
local integer G5
local integer g5
local integer h5
set Kb[Jb]=Y5
set Jb=Jb+1
set g5=uo[GetPlayerId(T5)]
set Kb[Jb]="when calling getForceId in Messages, line 5"
set Jb=Jb+1
if ll[g5]==0 then
if g5==0 then
call S4("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 122")
else
call S4("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 122")
endif
endif
set h5=Eb[g5]
set Jb=Jb-1
set G5=GetRandomInt(0,2)
if h5==0 then
set Y5=do[G5]
elseif h5==1 then
set Y5=fo[G5]
elseif h5==2 then
set Y5=Ro[G5]
elseif h5==3 then
set Y5=To[G5]
else
set Y5="Warning!"
endif
set Jb=Jb-1
return "|cffff0000"+Y5+"|r"
endfunction
function P5 takes player W5,string E5 returns string
local integer Z5
local integer U5
local integer I5
set Kb[Jb]=E5
set Jb=Jb+1
set U5=uo[GetPlayerId(W5)]
set Kb[Jb]="when calling getForceId in Messages, line 37"
set Jb=Jb+1
if ll[U5]==0 then
if U5==0 then
call S4("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 122")
else
call S4("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 122")
endif
endif
set I5=Eb[U5]
set Jb=Jb-1
set Z5=GetRandomInt(0,2)
if I5==0 then
set E5=Fo[Z5]
elseif I5==1 then
set E5=ko[Z5]
elseif I5==2 then
set E5=jo[Z5]
elseif I5==3 then
set E5=xo[Z5]
else
set E5="Good news!"
endif
set Jb=Jb-1
return "|cff00ff00"+E5+"|r"
endfunction
function t1 takes string MM returns nothing
local player w3
local player u3
local string r3
local integer s3
local force t3
local force i3
local integer S3
local integer c3
local integer o3
local integer O3
local integer l3
local integer b3
local integer y3
local integer p3
local integer e3
local force q3
local force a3
local integer n3
local integer d3
local integer f3
local integer R3
local integer T3
local integer Y3
local player G3
local force g3
local player h3
local player F3
local player k3
local integer j3
local integer x3
local integer v3
local integer m3
local player Q3
local force W3
local player E3
local player Z3
local player U3
local integer I3
local integer P3
local integer A3
local integer D3
local player H3
local force J3
local player K3
local player L3
local player X3
local integer C3
local integer V3
local integer B3
local integer N3
local player M3
local force w1
local player u1
local player r1
local player s1
set Kb[Jb]=MM
set Jb=Jb+1
set w3=GetOwningPlayer(GetSpellAbilityUnit())
set u3=GetOwningPlayer(GetSpellTargetUnit())
set r3=hN(w3)
set MM=hN(u3)
set s3=GetPlayerId(w3)
set q3=CreateForce()
call ForceAddPlayer(q3,w3)
set t3=q3
set a3=CreateForce()
call ForceAddPlayer(a3,w3)
set i3=a3
set S3=GetSpellAbilityId()
if S3==1093677396 then
set n3=uo[s3]
set Kb[Jb]="when calling getAllianceState in Diplomacy, line 16"
set Jb=Jb+1
if ll[n3]==0 then
if n3==0 then
call S4("Nullpointer exception when calling PlayerStats.getAllianceState","when calling error in PlayerStats, line 66")
else
call S4("Called PlayerStats.getAllianceState on invalid object.","when calling error in PlayerStats, line 66")
endif
endif
set Kb[Jb]="when calling getAllianceState in PlayerStats, line 66"
set Jb=Jb+1
set d3=cGw(n3,GetPlayerId(u3),"when reading array PlayerStats_alliance_states in  in PlayerStats, line 67")
set Jb=Jb-1-1
if d3==bj_ALLIANCE_UNALLIED then
set Jb=Jb-1
set w3=null
set u3=null
set t3=null
set i3=null
set q3=null
set a3=null
set G3=null
set g3=null
set h3=null
set F3=null
set k3=null
set Q3=null
set W3=null
set E3=null
set Z3=null
set U3=null
set H3=null
set J3=null
set K3=null
set L3=null
set X3=null
set M3=null
set w1=null
set u1=null
set r1=null
set s1=null
return
endif
set f3=uo[s3]
set R3=bj_ALLIANCE_UNALLIED
set Kb[Jb]="when calling setAlliance in Diplomacy, line 18"
set Jb=Jb+1
if ll[f3]==0 then
if f3==0 then
call S4("Nullpointer exception when calling PlayerStats.setAlliance","when calling error in PlayerStats, line 55")
else
call S4("Called PlayerStats.setAlliance on invalid object.","when calling error in PlayerStats, line 55")
endif
endif
call Yew(f3,u3,R3,"when calling setAlliance in PlayerStats, line 55")
set Jb=Jb-1
set T3=uo[GetPlayerId(u3)]
set Y3=bj_ALLIANCE_UNALLIED
set Kb[Jb]="when calling setAlliance in Diplomacy, line 19"
set Jb=Jb+1
if ll[T3]==0 then
if T3==0 then
call S4("Nullpointer exception when calling PlayerStats.setAlliance","when calling error in PlayerStats, line 55")
else
call S4("Called PlayerStats.setAlliance on invalid object.","when calling error in PlayerStats, line 55")
endif
endif
call Yew(T3,w3,Y3,"when calling setAlliance in PlayerStats, line 55")
set Jb=Jb-1
set c3=0
set o3=23
loop
exitwhen c3>o3
set G3=ro[c3]
set g3=CreateForce()
call ForceAddPlayer(g3,G3)
if ro[c3]==u3 then
set h3=ro[c3]
set Kb[Jb]="when calling warningToPlayer in Diplomacy, line 24"
set Jb=Jb+1
call DisplayTimedTextToPlayer(h3,0.,0.,10.0,F5(h3,"when calling getWarningStringForPlayer in Messages, line 79"))
call DisplayTimedTextToPlayer(h3,0.,0.,10.0,r3+" has declared war on you!")
set Jb=Jb-1
elseif g3==t3 or g3==i3 then
set F3=ro[c3]
set Kb[Jb]="when calling attentionToPlayer in Diplomacy, line 26"
set Jb=Jb+1
call DisplayTimedTextToPlayer(F3,0.,0.,10.0,L5(F3,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(F3,0.,0.,10.0,r3+" has declared war on your brother-in-arms, "+MM+"!")
set Jb=Jb-1
else
set k3=ro[c3]
set Kb[Jb]="when calling noteToPlayer in Diplomacy, line 28"
set Jb=Jb+1
call DisplayTimedTextToPlayer(k3,0.,0.,10.0,Q5(k3,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(k3,0.,0.,10.0,r3+" has declared war on "+MM)
set Jb=Jb-1
endif
set c3=c3+1
endloop
elseif S3==1093677397 then
set j3=uo[s3]
set Kb[Jb]="when calling getAllianceState in Diplomacy, line 31"
set Jb=Jb+1
if ll[j3]==0 then
if j3==0 then
call S4("Nullpointer exception when calling PlayerStats.getAllianceState","when calling error in PlayerStats, line 66")
else
call S4("Called PlayerStats.getAllianceState on invalid object.","when calling error in PlayerStats, line 66")
endif
endif
set Kb[Jb]="when calling getAllianceState in PlayerStats, line 66"
set Jb=Jb+1
set x3=cGw(j3,GetPlayerId(u3),"when reading array PlayerStats_alliance_states in  in PlayerStats, line 67")
set Jb=Jb-1-1
if x3==bj_ALLIANCE_ALLIED_VISION then
set Jb=Jb-1
set w3=null
set u3=null
set t3=null
set i3=null
set q3=null
set a3=null
set G3=null
set g3=null
set h3=null
set F3=null
set k3=null
set Q3=null
set W3=null
set E3=null
set Z3=null
set U3=null
set H3=null
set J3=null
set K3=null
set L3=null
set X3=null
set M3=null
set w1=null
set u1=null
set r1=null
set s1=null
return
endif
set v3=uo[s3]
set m3=bj_ALLIANCE_ALLIED_VISION
set Kb[Jb]="when calling setAlliance in Diplomacy, line 33"
set Jb=Jb+1
if ll[v3]==0 then
if v3==0 then
call S4("Nullpointer exception when calling PlayerStats.setAlliance","when calling error in PlayerStats, line 55")
else
call S4("Called PlayerStats.setAlliance on invalid object.","when calling error in PlayerStats, line 55")
endif
endif
call Yew(v3,u3,m3,"when calling setAlliance in PlayerStats, line 55")
set Jb=Jb-1
set O3=0
set l3=23
loop
exitwhen O3>l3
set Q3=ro[O3]
set W3=CreateForce()
call ForceAddPlayer(W3,Q3)
if ro[O3]==u3 then
set E3=ro[O3]
set Kb[Jb]="when calling goodNewsToPlayer in Diplomacy, line 38"
set Jb=Jb+1
call DisplayTimedTextToPlayer(E3,0.,0.,10.0,P5(E3,"when calling getGoodNewsStringForPlayer in Messages, line 85"))
call DisplayTimedTextToPlayer(E3,0.,0.,10.0,r3+" seeks an alliance with you!")
set Jb=Jb-1
elseif W3==t3 or W3==i3 then
set Z3=ro[O3]
set Kb[Jb]="when calling noteToPlayer in Diplomacy, line 40"
set Jb=Jb+1
call DisplayTimedTextToPlayer(Z3,0.,0.,10.0,Q5(Z3,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(Z3,0.,0.,10.0,r3+" has allied "+MM)
set Jb=Jb-1
else
set U3=ro[O3]
set Kb[Jb]="when calling noteToPlayer in Diplomacy, line 42"
set Jb=Jb+1
call DisplayTimedTextToPlayer(U3,0.,0.,10.0,Q5(U3,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(U3,0.,0.,10.0,r3+" has allied "+MM)
set Jb=Jb-1
endif
set O3=O3+1
endloop
elseif S3==1093677398 then
set I3=uo[s3]
set Kb[Jb]="when calling getAllianceState in Diplomacy, line 45"
set Jb=Jb+1
if ll[I3]==0 then
if I3==0 then
call S4("Nullpointer exception when calling PlayerStats.getAllianceState","when calling error in PlayerStats, line 66")
else
call S4("Called PlayerStats.getAllianceState on invalid object.","when calling error in PlayerStats, line 66")
endif
endif
set Kb[Jb]="when calling getAllianceState in PlayerStats, line 66"
set Jb=Jb+1
set P3=cGw(I3,GetPlayerId(u3),"when reading array PlayerStats_alliance_states in  in PlayerStats, line 67")
set Jb=Jb-1-1
if P3==bj_ALLIANCE_NEUTRAL then
set Jb=Jb-1
set w3=null
set u3=null
set t3=null
set i3=null
set q3=null
set a3=null
set G3=null
set g3=null
set h3=null
set F3=null
set k3=null
set Q3=null
set W3=null
set E3=null
set Z3=null
set U3=null
set H3=null
set J3=null
set K3=null
set L3=null
set X3=null
set M3=null
set w1=null
set u1=null
set r1=null
set s1=null
return
endif
set A3=uo[s3]
set D3=bj_ALLIANCE_NEUTRAL
set Kb[Jb]="when calling setAlliance in Diplomacy, line 47"
set Jb=Jb+1
if ll[A3]==0 then
if A3==0 then
call S4("Nullpointer exception when calling PlayerStats.setAlliance","when calling error in PlayerStats, line 55")
else
call S4("Called PlayerStats.setAlliance on invalid object.","when calling error in PlayerStats, line 55")
endif
endif
call Yew(A3,u3,D3,"when calling setAlliance in PlayerStats, line 55")
set Jb=Jb-1
set b3=0
set y3=23
loop
exitwhen b3>y3
set H3=ro[b3]
set J3=CreateForce()
call ForceAddPlayer(J3,H3)
if ro[b3]==u3 then
set K3=ro[b3]
set Kb[Jb]="when calling noteToPlayer in Diplomacy, line 52"
set Jb=Jb+1
call DisplayTimedTextToPlayer(K3,0.,0.,10.0,Q5(K3,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(K3,0.,0.,10.0,r3+" is now neutral towards you!")
set Jb=Jb-1
elseif J3==t3 or J3==i3 then
set L3=ro[b3]
set Kb[Jb]="when calling noteToPlayer in Diplomacy, line 54"
set Jb=Jb+1
call DisplayTimedTextToPlayer(L3,0.,0.,10.0,Q5(L3,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(L3,0.,0.,10.0,r3+" shows neutrality towards "+MM)
set Jb=Jb-1
else
set X3=ro[b3]
set Kb[Jb]="when calling noteToPlayer in Diplomacy, line 56"
set Jb=Jb+1
call DisplayTimedTextToPlayer(X3,0.,0.,10.0,Q5(X3,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(X3,0.,0.,10.0,r3+" shows neutrality towards "+MM)
set Jb=Jb-1
endif
set b3=b3+1
endloop
elseif S3==1093677400 then
set C3=uo[s3]
set Kb[Jb]="when calling getAllianceState in Diplomacy, line 59"
set Jb=Jb+1
if ll[C3]==0 then
if C3==0 then
call S4("Nullpointer exception when calling PlayerStats.getAllianceState","when calling error in PlayerStats, line 66")
else
call S4("Called PlayerStats.getAllianceState on invalid object.","when calling error in PlayerStats, line 66")
endif
endif
set Kb[Jb]="when calling getAllianceState in PlayerStats, line 66"
set Jb=Jb+1
set V3=cGw(C3,GetPlayerId(u3),"when reading array PlayerStats_alliance_states in  in PlayerStats, line 67")
set Jb=Jb-1-1
if V3==bj_ALLIANCE_NEUTRAL then
set Jb=Jb-1
set w3=null
set u3=null
set t3=null
set i3=null
set q3=null
set a3=null
set G3=null
set g3=null
set h3=null
set F3=null
set k3=null
set Q3=null
set W3=null
set E3=null
set Z3=null
set U3=null
set H3=null
set J3=null
set K3=null
set L3=null
set X3=null
set M3=null
set w1=null
set u1=null
set r1=null
set s1=null
return
endif
set B3=uo[s3]
set N3=bj_ALLIANCE_NEUTRAL
set Kb[Jb]="when calling setAlliance in Diplomacy, line 61"
set Jb=Jb+1
if ll[B3]==0 then
if B3==0 then
call S4("Nullpointer exception when calling PlayerStats.setAlliance","when calling error in PlayerStats, line 55")
else
call S4("Called PlayerStats.setAlliance on invalid object.","when calling error in PlayerStats, line 55")
endif
endif
call Yew(B3,u3,N3,"when calling setAlliance in PlayerStats, line 55")
set Jb=Jb-1
set p3=0
set e3=23
loop
exitwhen p3>e3
set M3=ro[p3]
set w1=CreateForce()
call ForceAddPlayer(w1,M3)
if ro[p3]==u3 then
set u1=ro[p3]
set Kb[Jb]="when calling noteToPlayer in Diplomacy, line 66"
set Jb=Jb+1
call DisplayTimedTextToPlayer(u1,0.,0.,10.0,Q5(u1,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(u1,0.,0.,10.0,r3+" unallies you!")
set Jb=Jb-1
elseif w1==t3 or w1==i3 then
set r1=ro[p3]
set Kb[Jb]="when calling noteToPlayer in Diplomacy, line 68"
set Jb=Jb+1
call DisplayTimedTextToPlayer(r1,0.,0.,10.0,Q5(r1,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(r1,0.,0.,10.0,r3+" has unallied "+MM)
set Jb=Jb-1
else
set s1=ro[p3]
set Kb[Jb]="when calling noteToPlayer in Diplomacy, line 70"
set Jb=Jb+1
call DisplayTimedTextToPlayer(s1,0.,0.,10.0,Q5(s1,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(s1,0.,0.,10.0,r3+" has unallied "+MM)
set Jb=Jb-1
endif
set p3=p3+1
endloop
endif
set Jb=Jb-1
set w3=null
set u3=null
set t3=null
set i3=null
set q3=null
set a3=null
set G3=null
set g3=null
set h3=null
set F3=null
set k3=null
set Q3=null
set W3=null
set E3=null
set Z3=null
set U3=null
set H3=null
set J3=null
set K3=null
set L3=null
set X3=null
set M3=null
set w1=null
set u1=null
set r1=null
set s1=null
endfunction
function UYw takes nothing returns nothing
set Jb=0
call t1("Diplomacy, line 119")
endfunction
function Ej takes nothing returns boolean
if GetUnitTypeId(GetSpellTargetUnit())==1747988787 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747990361 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747989831 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747989040 then
return true
endif
return false
endfunction
function Zj takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988793 then
return false
endif
if not Ej() then
return false
endif
return true
endfunction
function Uj takes nothing returns boolean
if not Zj() then
return false
endif
return true
endfunction
function Um takes nothing returns nothing
local player hm=GetOwningPlayer(GetKillingUnit())
local playerstate Fm=PLAYER_STATE_RESOURCE_LUMBER
local playerstate km
local playerstate jm
local player xm
local force vm
local location mm
local real Qm
local real Wm
local player Em
local force Zm
if Fm==PLAYER_STATE_RESOURCE_GOLD then
set km=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(hm,km,GetPlayerState(hm,km)+500)
elseif Fm==PLAYER_STATE_RESOURCE_LUMBER then
set jm=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(hm,jm,GetPlayerState(hm,jm)+500)
endif
call SetPlayerState(hm,Fm,GetPlayerState(hm,Fm)+500)
set xm=GetOwningPlayer(GetKillingUnit())
set vm=CreateForce()
call ForceAddPlayer(vm,xm)
if IsPlayerInForce(GetLocalPlayer(),vm) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_084")
endif
set y=GetUnitLoc(GetDyingUnit())
set Em=GetOwningPlayer(GetDyingUnit())
set Zm=CreateForce()
call ForceAddPlayer(Zm,Em)
set mm=y
set Qm=GetLocationX(mm)
set Wm=GetLocationY(mm)
if IsPlayerInForce(GetLocalPlayer(),Zm) then
call PingMinimap(Qm,Wm,2.00)
endif
call RemoveLocation(y)
set hm=null
set Fm=null
set km=null
set jm=null
set xm=null
set vm=null
set mm=null
set Em=null
set Zm=null
endfunction
function Ux takes nothing returns boolean
if GetUnitTypeId(GetDyingUnit())!=1747988791 then
return false
endif
return true
endfunction
function initMapBounds takes nothing returns nothing
local rect cond_result
local region receiver
local real temp
local real tuple_temp
set vc=bj_mapInitialPlayableArea
call RegionAddRect(CreateRegion(),vc)
set cond_result=GetWorldBounds()
set mc=cond_result
set receiver=CreateRegion()
call RegionAddRect(receiver,mc)
set Qc=receiver
set temp=GetRectMaxX(mc)
set tuple_temp=GetRectMaxY(mc)
set Wc=temp
set Ec=tuple_temp
endfunction
function V2 takes nothing returns boolean
call initMapBounds()
return true
endfunction
function CD takes nothing returns boolean
if GetResearched()!=1378890052 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890052,true)!=1 then
return false
endif
return true
endfunction
function VD takes nothing returns boolean
if not CD() then
return false
endif
return true
endfunction
function VE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990097,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989594,0)
endfunction
function CK takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990352 then
return false
endif
return true
endfunction
function VK takes nothing returns boolean
if not CK() then
return false
endif
return true
endfunction
function VP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989815,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989816,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989825,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989814,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989830,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651844,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989833,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989832,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989835,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989836,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651848,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651846,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989828,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989826,0)
endfunction
function CQ takes nothing returns boolean
if GetResearched()!=1378889798 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889798,true)!=2 then
return false
endif
return true
endfunction
function VQ takes nothing returns boolean
if not CQ() then
return false
endif
return true
endfunction
function a0w takes string b0w returns boolean
local integer y0w
local integer p0w
local integer e0w
local integer q0w
set Kb[Jb]=b0w
set Jb=Jb+1
set lo=CreateGroup()
set bo=CreateUnit(oS,2019849581,0.,0.,0)
if bo==null then
set b0w=""
set y0w=2019849581
set p0w=0
loop
exitwhen p0w>3
set e0w=ModuloInteger(y0w,256)
set y0w=y0w/256
set b0w=SubString(".................................!.#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[.]^_`abcdefghijklmnopqrstuvwxyz{|}~.................................................................................................................................",e0w,e0w+1)+b0w
set p0w=p0w+1
endloop
call S4("DUMMY_UNITID ("+b0w+") not added correctly to the map.","when calling error in Preloader, line 52")
endif
set Kb[Jb]="when calling alloc_Preloader_CallbackSingle_line54 in Preloader, line 54"
set Jb=Jb+1
if TO==0 then
if YO<32768 then
set YO=YO+1
set q0w=YO
set GO[q0w]=651
else
call S4("Out of memory: Could not create Preloader_CallbackSingle_line54.","when calling error in Preloader, line 54")
set q0w=0
endif
else
set TO=TO-1
set q0w=RO[TO]
set GO[q0w]=651
endif
set Jb=Jb-1
set Kb[Jb]="when calling nullTimer in Preloader, line 54"
set Jb=Jb+1
set Kb[Jb]="when calling doAfter in ClosureTimers, line 33"
set Jb=Jb+1
call yN(eww("when calling getTimer in ClosureTimers, line 27"),0.,q0w,"when calling doAfter in ClosureTimers, line 27")
set Jb=Jb-1-1-1
return true
endfunction
function VTw takes nothing returns boolean
set Jb=0
return a0w("Preloader, line 1")
endfunction
function Zcw takes integer fcw,integer Rcw,string Tcw returns nothing
local integer Ycw
local real Gcw
local integer gcw
local real hcw
local real Fcw
local integer kcw
local real jcw
local integer xcw
local real vcw
local integer mcw
local integer Qcw
local integer Wcw
local integer Ecw
set Kb[Jb]=Tcw
set Jb=Jb+1
set Gcw=Tl[udw(RS,2,"when calling get in City, line 143")]
if GetRandomReal(0.0,1.0)<=Gcw then
set gcw=Bl[fcw]
set Kb[Jb]="when calling addModifier in City, line 144"
set Jb=Jb+1
if qO[gcw]==0 then
if gcw==0 then
call S4("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call S4("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call htw(gcw,2,"when calling addModifier in City, line 355")
set Jb=Jb-1
endif
set hcw=Tl[udw(RS,5,"when calling get in City, line 145")]
if GetRandomReal(0.0,1.0)<=hcw then
set Rcw=Bl[fcw]
set Kb[Jb]="when calling addModifier in City, line 146"
set Jb=Jb+1
if qO[Rcw]==0 then
if Rcw==0 then
call S4("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call S4("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call htw(Rcw,5,"when calling addModifier in City, line 355")
set Jb=Jb-1
endif
set Fcw=Tl[udw(RS,7,"when calling get in City, line 147")]
if GetRandomReal(0.0,1.0)<=Fcw then
set kcw=Bl[fcw]
set Kb[Jb]="when calling addModifier in City, line 148"
set Jb=Jb+1
if qO[kcw]==0 then
if kcw==0 then
call S4("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call S4("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call htw(kcw,7,"when calling addModifier in City, line 355")
set Jb=Jb-1
endif
set jcw=Tl[udw(RS,3,"when calling get in City, line 149")]
if GetRandomReal(0.0,1.0)<=jcw then
set xcw=Bl[fcw]
set Kb[Jb]="when calling addModifier in City, line 150"
set Jb=Jb+1
if qO[xcw]==0 then
if xcw==0 then
call S4("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call S4("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call htw(xcw,3,"when calling addModifier in City, line 355")
set Jb=Jb-1
endif
set vcw=Tl[udw(RS,4,"when calling get in City, line 151")]
if GetRandomReal(0.0,1.0)<=vcw then
set mcw=Bl[fcw]
set Kb[Jb]="when calling addModifier in City, line 152"
set Jb=Jb+1
if qO[mcw]==0 then
if mcw==0 then
call S4("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call S4("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call htw(mcw,4,"when calling addModifier in City, line 355")
set Jb=Jb-1
endif
set Qcw=Jl[Bl[fcw]]
set Kb[Jb]="when calling iterator in City, line 154"
set Jb=Jb+1
set Wcw=Abw(Qcw,"when calling new_LLIterator in LinkedList, line 165")
set Jb=Jb-1
set Ycw=Wcw
loop
exitwhen fb[Tb[Ycw]]==Rb[Ycw]
set Tb[Ycw]=fb[Tb[Ycw]]
set Ecw=Bl[fcw]
set Tcw="when calling getCityModifierOnLongCount in City, line 155"
set Kb[Jb]="when calling getCityModifierOnLongCount in City, line 155"
set Jb=Jb+1
if qO[Ecw]==0 then
if Ecw==0 then
call S4("Nullpointer exception when calling City.getCityModifierOnLongCount","when calling error in City, line 402")
else
call S4("Called City.getCityModifierOnLongCount on invalid object.","when calling error in City, line 402")
endif
endif
set Jb=Jb-1
endloop
set Kb[Jb]="when calling close in City, line 154"
set Jb=Jb+1
if Gb[Ycw]then
call bdw(Ycw,"when calling dispatch_LLIterator_destroyLLIterator in LinkedList, line 450")
endif
set Jb=Jb-1-1
endfunction
function cow takes integer tow,integer iow returns nothing
local integer Sow
set Sb[tow]=Sb[tow]-1.
set iow=0
set Sow=23
loop
exitwhen iow>Sow
call MultiboardSetTitleText(Vc[iow],"Income: "+I2S(R2I(Sb[tow]/60.))+":"+I2S(R2I(ModuloReal(Sb[tow],60.)/10.))+I2S(R2I(ModuloReal(ModuloReal(Sb[tow],60.),10.))))
set iow=iow+1
endloop
if Sb[tow]<=0. then
set Sb[tow]=120.0
endif
endfunction
function pSw takes integer SSw,integer cSw,real oSw,string OSw returns nothing
local integer lSw
local real bSw
local integer ySw
set Kb[Jb]=OSw
set Jb=Jb+1
set lSw=El[SSw]
set ySw=El[SSw]
set bSw=oSw*GetRandomReal(gdw(lS[cSw],0,"when calling get in City, line 389")/1000.,gdw(lS[cSw],1,"when calling get in City, line 389")/1000.)*El[SSw]
set El[SSw]=ySw+R2I(bSw)
set Zl[SSw]=Zl[SSw]+(El[SSw]-lSw)
set Jb=Jb-1
endfunction
function fSw takes integer eSw,integer qSw,string aSw returns nothing
local integer nSw
local real dSw
set Kb[Jb]=aSw
set Jb=Jb+1
set nSw=Yl[udw(RS,qSw,"when calling get in City, line 394")]
set dSw=Gl[udw(RS,qSw,"when calling get in City, line 395")]
set Kb[Jb]="when calling addPopulation in City, line 396"
set Jb=Jb+1
if qO[eSw]==0 then
if eSw==0 then
call S4("Nullpointer exception when calling City.addPopulation","when calling error in City, line 387")
else
call S4("Called City.addPopulation on invalid object.","when calling error in City, line 387")
endif
endif
call pSw(eSw,nSw,dSw,"when calling addPopulation in City, line 387")
set Jb=Jb-1
if Rl[udw(RS,qSw,"when calling get in City, line 398")]==false then
set Pl[eSw]=Pl[eSw]-fl[udw(RS,qSw,"when calling get in City, line 399")]*5.0/dl[udw(RS,qSw,"when calling get in City, line 399")]
endif
set Jb=Jb-1
endfunction
function dcw takes integer Scw,integer ccw,string ocw returns nothing
local integer Ocw
local integer lcw
local integer bcw
local integer ycw
local integer pcw
local real ecw
local integer qcw
local integer acw
local integer ncw
set Kb[Jb]=ocw
set Jb=Jb+1
set Ul[Vl[Scw]]=Ul[Vl[Scw]]+GetRandomReal(-0.0001,0.00015)*Ul[Vl[Scw]]
set Ocw=El[Vl[Scw]]
set ccw=El[Vl[Scw]]
set ecw=Pow(El[Vl[Scw]]*Ul[Vl[Scw]],0.8)*jS[Dl[Vl[Scw]]]
set El[Vl[Scw]]=ccw+R2I(ecw)
set lcw=El[Vl[Scw]]-Ocw
set bcw=GetRandomInt(R2I(-(0.25*lcw)),R2I(0.25*lcw))
set El[Vl[Scw]]=El[Vl[Scw]]+bcw
set Zl[Vl[Scw]]=El[Vl[Scw]]-Ocw
set qcw=Jl[Vl[Scw]]
set Kb[Jb]="when calling iterator in City, line 137"
set Jb=Jb+1
set acw=Abw(qcw,"when calling new_LLIterator in LinkedList, line 165")
set Jb=Jb-1
set ycw=acw
loop
exitwhen fb[Tb[ycw]]==Rb[ycw]
set Tb[ycw]=fb[Tb[ycw]]
set pcw=nb[Tb[ycw]]
set ncw=Vl[Scw]
set ocw="when calling getCityModifierOnFastCount in City, line 138"
set Kb[Jb]="when calling getCityModifierOnFastCount in City, line 138"
set Jb=Jb+1
if qO[ncw]==0 then
if ncw==0 then
call S4("Nullpointer exception when calling City.getCityModifierOnFastCount","when calling error in City, line 393")
else
call S4("Called City.getCityModifierOnFastCount on invalid object.","when calling error in City, line 393")
endif
endif
call fSw(ncw,pcw,"when calling getCityModifierOnFastCount in City, line 393")
set Jb=Jb-1
endloop
set Kb[Jb]="when calling close in City, line 137"
set Jb=Jb+1
if Gb[ycw]then
call bdw(ycw,"when calling dispatch_LLIterator_destroyLLIterator in LinkedList, line 450")
endif
set Jb=Jb-1-1
endfunction
function wN takes integer VB,string BB returns nothing
local integer NB
local integer MB
set Kb[Jb]=BB
set Jb=Jb+1
set NB=0
set MB=bj_MAX_PLAYER_SLOTS-1
loop
exitwhen NB>MB
set JS[KS]=VB
set KS=KS+1
set XS=0
set LS=2147483647
call GroupEnumUnitsOfPlayer(HS,ro[NB],CS)
call GroupClear(HS)
set KS=KS-1
set NB=NB+1
endloop
call Jaw(VB,"when calling dispatch_ForGroupCallback_destroyForGroupCallback in ClosureForGroups, line 78")
set Jb=Jb-1
endfunction
function X1 takes string W1 returns nothing
local integer E1
local integer Z1
local integer U1
local integer I1
local integer P1
local real A1
local integer D1
local integer H1
local integer J1
local integer K1
local integer L1
set Kb[Jb]=W1
set Jb=Jb+1
set E1=0
set Z1=23
loop
exitwhen E1>Z1
set tc[E1]=0
set ic[E1]=0
set E1=E1+1
endloop
set U1=R2I(TS*0.5/10.0)+1
set I1=0
set P1=R2I(20)-1
loop
exitwhen I1>P1
set A1=I1*0.5
set Kb[Jb]="when calling alloc_Economy_CallbackSingle_line29 in Economy, line 29"
set Jb=Jb+1
if TO==0 then
if YO<32768 then
set YO=YO+1
set D1=YO
set GO[D1]=644
else
call S4("Out of memory: Could not create Economy_CallbackSingle_line29.","when calling error in Economy, line 29")
set D1=0
endif
else
set TO=TO-1
set D1=RO[TO]
set GO[D1]=644
endif
set Jb=Jb-1
set Ob[D1]=I1
set lb[D1]=U1
set W1="when calling doAfter in Economy, line 29"
set Kb[Jb]="when calling doAfter in Economy, line 29"
set Jb=Jb+1
call yN(eww("when calling getTimer in ClosureTimers, line 27"),A1,D1,"when calling doAfter in ClosureTimers, line 27")
set Jb=Jb-1
set H1=TS-1
set J1=(I1+1)*U1-1
if H1<2147483647 then
set K1=H1
else
set K1=2147483647
endif
if J1<K1 then
set K1=J1
endif
exitwhen K1==TS-1
set I1=I1+1
endloop
set Kb[Jb]="when calling alloc_Economy_ForGroupCallback_line38 in Economy, line 38"
set Jb=Jb+1
if nO==0 then
if dO<32768 then
set dO=dO+1
set L1=dO
set fO[L1]=685
else
call S4("Out of memory: Could not create Economy_ForGroupCallback_line38.","when calling error in Economy, line 38")
set L1=0
endif
else
set nO=nO-1
set L1=aO[nO]
set fO[L1]=685
endif
set Jb=Jb-1
call wN(L1,"when calling forUnitsAll in Economy, line 38")
set Jb=Jb-1
endfunction
function jOw takes integer sOw,integer tOw,string iOw returns nothing
local integer SOw
local integer cOw
local multiboard oOw
local integer OOw
local integer lOw
local integer bOw
local integer yOw
local boolean pOw
local integer eOw
local string qOw
local integer aOw
local integer nOw
local string dOw
local integer fOw
local integer ROw
local integer TOw
local boolean YOw
local integer GOw
local integer gOw
local integer hOw
local player FOw
local playerstate kOw
set Kb[Jb]=iOw
set Jb=Jb+1
set Sc=Sc+1
set SOw=0
set cOw=23
loop
exitwhen SOw>cOw
set yOw=uo[SOw]
set Kb[Jb]="when calling isInGame in Economy, line 53"
set Jb=Jb+1
if ll[yOw]==0 then
if yOw==0 then
call S4("Nullpointer exception when calling PlayerStats.isInGame","when calling error in PlayerStats, line 42")
else
call S4("Called PlayerStats.isInGame on invalid object.","when calling error in PlayerStats, line 42")
endif
endif
set pOw=Ub[yOw]
set Jb=Jb-1
if pOw then
set oOw=Vc[SOw]
set sOw=Ac[0]
set eOw=Ac[1]
set qOw=Iww(tc[SOw])
call MultiboardSetItemValue(MultiboardGetItem(oOw,eOw,sOw),qOw)
set aOw=Dc[0]
set nOw=Dc[1]
set fOw=uo[SOw]
set Kb[Jb]="when calling getUpkeep in Economy, line 56"
set Jb=Jb+1
if ll[fOw]==0 then
if fOw==0 then
call S4("Nullpointer exception when calling PlayerStats.getUpkeep","when calling error in PlayerStats, line 48")
else
call S4("Called PlayerStats.getUpkeep on invalid object.","when calling error in PlayerStats, line 48")
endif
endif
set ROw=Pb[fOw]
set Jb=Jb-1
set dOw=Iww(ROw)
call MultiboardSetItemValue(MultiboardGetItem(oOw,nOw,aOw),dOw)
endif
set SOw=SOw+1
endloop
if Sc==R2I(12) then
set Sc=0
set OOw=0
set lOw=23
loop
exitwhen OOw>lOw
set TOw=uo[OOw]
set Kb[Jb]="when calling isInGame in Economy, line 61"
set Jb=Jb+1
if ll[TOw]==0 then
if TOw==0 then
call S4("Nullpointer exception when calling PlayerStats.isInGame","when calling error in PlayerStats, line 42")
else
call S4("Called PlayerStats.isInGame on invalid object.","when calling error in PlayerStats, line 42")
endif
endif
set YOw=Ub[TOw]
set Jb=Jb-1
if YOw then
set tOw=GetPlayerState(ro[OOw],PLAYER_STATE_RESOURCE_GOLD)
set bOw=GetPlayerState(ro[OOw],PLAYER_STATE_RESOURCE_LUMBER)
set FOw=ro[OOw]
set kOw=PLAYER_STATE_RESOURCE_GOLD
set hOw=tOw+tc[OOw]
set GOw=uo[OOw]
set iOw="when calling getUpkeep in Economy, line 64"
set Kb[Jb]="when calling getUpkeep in Economy, line 64"
set Jb=Jb+1
if ll[GOw]==0 then
if GOw==0 then
call S4("Nullpointer exception when calling PlayerStats.getUpkeep","when calling error in PlayerStats, line 48")
else
call S4("Called PlayerStats.getUpkeep on invalid object.","when calling error in PlayerStats, line 48")
endif
endif
set gOw=Pb[GOw]
set Jb=Jb-1
call SetPlayerState(FOw,kOw,hOw+gOw)
call SetPlayerState(ro[OOw],PLAYER_STATE_RESOURCE_LUMBER,bOw+ic[OOw])
endif
set OOw=OOw+1
endloop
endif
call X1("when calling countIncomeForAll in Economy, line 68")
set Jb=Jb-1
set oOw=null
set FOw=null
set kOw=null
endfunction
function rOw takes integer Jow,integer Kow,string Low returns nothing
local integer Xow
local integer Cow
local multiboard Vow
local boolean Bow
local integer Now
local string Mow
local integer wOw
local integer uOw
set Kb[Jb]=Low
set Jb=Jb+1
set Xow=0
set Cow=23
loop
exitwhen Xow>Cow
set Kow=uo[Xow]
set Low="when calling isInGame in Economy, line 45"
set Kb[Jb]="when calling isInGame in Economy, line 45"
set Jb=Jb+1
if ll[Kow]==0 then
if Kow==0 then
call S4("Nullpointer exception when calling PlayerStats.isInGame","when calling error in PlayerStats, line 42")
else
call S4("Called PlayerStats.isInGame on invalid object.","when calling error in PlayerStats, line 42")
endif
endif
set Bow=Ub[Kow]
set Jb=Jb-1
if Bow then
set Vow=Vc[Xow]
set Now=Dc[0]
set Jow=Dc[1]
set wOw=uo[Xow]
set Kb[Jb]="when calling getUpkeep in Economy, line 47"
set Jb=Jb+1
if ll[wOw]==0 then
if wOw==0 then
call S4("Nullpointer exception when calling PlayerStats.getUpkeep","when calling error in PlayerStats, line 48")
else
call S4("Called PlayerStats.getUpkeep on invalid object.","when calling error in PlayerStats, line 48")
endif
endif
set uOw=Pb[wOw]
set Jb=Jb-1
set Mow=Iww(uOw)
call MultiboardSetItemValue(MultiboardGetItem(Vow,Jow,Now),Mow)
endif
set Xow=Xow+1
endloop
set Jb=Jb-1
set Vow=null
endfunction
function wpw takes integer Xyw,integer Cyw,string Vyw returns nothing
local integer Byw
local boolean Nyw
local integer Myw
set Kb[Jb]=Vyw
set Jb=Jb+1
set Xyw=0
set Byw=23
loop
exitwhen Xyw>Byw
set Cyw=uo[Xyw]
set Kb[Jb]="when calling isInGame in MultiboardCityUpdate, line 27"
set Jb=Jb+1
if ll[Cyw]==0 then
if Cyw==0 then
call S4("Nullpointer exception when calling PlayerStats.isInGame","when calling error in PlayerStats, line 42")
else
call S4("Called PlayerStats.isInGame on invalid object.","when calling error in PlayerStats, line 42")
endif
endif
set Nyw=Ub[Cyw]
set Jb=Jb-1
if Nyw then
set Myw=uo[Xyw]
set Vyw="when calling refreshMultiboardCity in MultiboardCityUpdate, line 28"
set Kb[Jb]="when calling refreshMultiboardCity in MultiboardCityUpdate, line 28"
set Jb=Jb+1
if ll[Myw]==0 then
if Myw==0 then
call S4("Nullpointer exception when calling PlayerStats.refreshMultiboardCity","when calling error in PlayerStats, line 71")
else
call S4("Called PlayerStats.refreshMultiboardCity on invalid object.","when calling error in PlayerStats, line 71")
endif
endif
call Mpw(Myw,"when calling refreshMultiboardCity in PlayerStats, line 71")
set Jb=Jb-1
endif
set Xyw=Xyw+1
endloop
set Jb=Jb-1
endfunction
function wnw takes integer Vaw,integer Baw,string Naw returns nothing
local force Maw
set Kb[Jb]=Naw
set Jb=Jb+1
if kO[Vaw]==0 then
if Vaw==0 then
call S4("Nullpointer exception when calling CallbackPeriodic.call","when calling error in ClosureTimers, line 130")
else
call S4("Called CallbackPeriodic.call on invalid object.","when calling error in ClosureTimers, line 130")
endif
endif
if kO[Vaw]<=634 then
if kO[Vaw]<=632 then
if kO[Vaw]<=631 then
call dcw(Vaw,Baw,"when calling City_City_call_line126 in ClosureTimers, line 130")
else
call Zcw(Vaw,Baw,"when calling City_City_call_line142 in ClosureTimers, line 130")
endif
elseif kO[Vaw]<=633 then
set Maw=bj_FORCE_ALL_PLAYERS
if IsPlayerInForce(GetLocalPlayer(),Maw) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,20.0,"Enjoying the map? Join the |cffe100ffofficial CoE discord channel|r! Link: |cffffff00discord.gg/V6kmxsy|r")
endif
else
call cow(Vaw,Baw)
endif
elseif kO[Vaw]<=636 then
if kO[Vaw]<=635 then
call rOw(Vaw,Baw,"when calling Economy_call_line43 in ClosureTimers, line 130")
else
call jOw(Vaw,Baw,"when calling Economy_call_line50 in ClosureTimers, line 130")
endif
else
call wpw(Vaw,Baw,"when calling MultiboardCityUpdate_call_line25 in ClosureTimers, line 130")
endif
set Jb=Jb-1
set Maw=null
endfunction
function VYw takes nothing returns nothing
local integer CYw
set Jb=0
set Kb[Jb]="ClosureTimers, line 135"
set Jb=Jb+1
set CYw=bww(GetExpiredTimer(),"when calling getData in ClosureTimers, line 138")
call wnw(CYw,CYw,"when calling call in ClosureTimers, line 139")
set Jb=Jb-1
endfunction
function QD takes nothing returns boolean
if GetResearched()!=1378890054 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890054,true)!=1 then
return false
endif
return true
endfunction
function WD takes nothing returns boolean
if not QD() then
return false
endif
return true
endfunction
function QK takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990356 then
return false
endif
return true
endfunction
function WK takes nothing returns boolean
if not QK() then
return false
endif
return true
endfunction
function QQ takes nothing returns boolean
if GetResearched()!=1378889796 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889796,true)!=2 then
return false
endif
return true
endfunction
function WQ takes nothing returns boolean
if not QQ() then
return false
endif
return true
endfunction
function WYw takes nothing returns nothing
local unit QYw
set Jb=0
set Kb[Jb]="ClosureForGroups, line 14"
set Jb=Jb+1
set QYw=GetFilterUnit()
set Kb[Jb]="when calling filterCallback in ClosureForGroups, line 14"
set Jb=Jb+1
if XS<LS then
call Caw(JS[KS-1],QYw,"when calling callback in ClosureForGroups, line 18")
endif
set XS=XS+1
set Jb=Jb-1-1
set QYw=null
endfunction
function Wv takes nothing returns nothing
local player Yv=GetOwningPlayer(GetSpellTargetUnit())
local playerstate Gv=PLAYER_STATE_RESOURCE_LUMBER
local playerstate gv
local playerstate hv
local player Fv
local force kv
local location jv
local real xv
local real vv
local player mv
local force Qv
if Gv==PLAYER_STATE_RESOURCE_GOLD then
set gv=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(Yv,gv,GetPlayerState(Yv,gv)+500)
elseif Gv==PLAYER_STATE_RESOURCE_LUMBER then
set hv=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(Yv,hv,GetPlayerState(Yv,hv)+500)
endif
call SetPlayerState(Yv,Gv,GetPlayerState(Yv,Gv)+500)
call RemoveUnit(GetSpellAbilityUnit())
set Fv=GetOwningPlayer(GetSpellTargetUnit())
set kv=CreateForce()
call ForceAddPlayer(kv,Fv)
if IsPlayerInForce(GetLocalPlayer(),kv) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_1232")
endif
set y=GetUnitLoc(GetSpellTargetUnit())
set mv=GetOwningPlayer(GetSpellTargetUnit())
set Qv=CreateForce()
call ForceAddPlayer(Qv,mv)
set jv=y
set xv=GetLocationX(jv)
set vv=GetLocationY(jv)
if IsPlayerInForce(GetLocalPlayer(),Qv) then
call PingMinimap(xv,vv,2.00)
endif
call RemoveLocation(y)
set Yv=null
set Gv=null
set gv=null
set hv=null
set Fv=null
set kv=null
set jv=null
set mv=null
set Qv=null
endfunction
function Www takes nothing returns boolean
return true
endfunction
function LH takes nothing returns boolean
if GetUnitTypeId(GetConstructedStructure())==1747989040 then
return true
endif
if GetUnitTypeId(GetConstructedStructure())==1747990361 then
return true
endif
if GetUnitTypeId(GetConstructedStructure())==1747989831 then
return true
endif
return false
endfunction
function XH takes nothing returns boolean
if e[GetPlayerId(GetOwningPlayer(GetConstructedStructure()))+1]!=false then
return false
endif
if not LH() then
return false
endif
return true
endfunction
function LL takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989060 then
return false
endif
return true
endfunction
function XL takes nothing returns boolean
if not LL() then
return false
endif
return true
endfunction
function F1 takes real T1,real Y1,player G1,real g1 returns unit
local unit h1=CreateUnit(G1,2019849581,T1,Y1,g1*57.295779513)
call SetUnitX(h1,T1)
call SetUnitY(h1,Y1)
call UnitAddAbility(h1,1097691750)
call UnitRemoveAbility(h1,1097691750)
call UnitAddAbility(h1,1097625443)
set OR=h1
set h1=null
return OR
endfunction
function Rnw takes integer nnw,unit dnw,string fnw returns nothing
set Kb[Jb]=fnw
set Jb=Jb+1
if WO[nnw]==0 then
if nnw==0 then
call S4("Nullpointer exception when calling ArrayQueue.enqueue","when calling error in DummyRecycler, line 55")
else
call S4("Called ArrayQueue.enqueue on invalid object.","when calling error in DummyRecycler, line 55")
endif
endif
set Kb[Jb]="when calling enqueue in DummyRecycler, line 55"
set Jb=Jb+1
if ob[nnw]<6 then
set ob[nnw]=ob[nnw]+1
set cb[nnw]=ModuloInteger(cb[nnw]+1,6)
else
call S4("Queue Overflow","when calling error in DummyRecycler, line 61")
endif
set Jb=Jb-1-1
endfunction
function low takes string oow returns integer
local integer Oow
set Kb[Jb]=oow
set Jb=Jb+1
set Kb[Jb]="when calling alloc_ArrayQueue in DummyRecycler, line 49"
set Jb=Jb+1
if mO==0 then
if QO<32768 then
set QO=QO+1
set Oow=QO
set WO[Oow]=626
else
call S4("Out of memory: Could not create ArrayQueue.","when calling error in DummyRecycler, line 49")
set Oow=0
endif
else
set mO=mO-1
set Oow=vO[mO]
set WO[Oow]=626
endif
set Jb=Jb-1
set cb[Oow]=0
set ob[Oow]=0
set Jb=Jb-1
return Oow
endfunction
function R1 takes string q1 returns boolean
local integer a1
local integer n1
local integer d1
local integer f1
set Kb[Jb]=q1
set Jb=Jb+1
set rc=360*1./8
call CreateTimer()
set a1=0
set n1=7
loop
exitwhen a1>n1
set sc[a1]=low("when calling new_ArrayQueue in DummyRecycler, line 140")
set d1=0
set f1=5
loop
exitwhen d1>f1
call Rnw(sc[a1],F1(Wc,Ec,oS,a1*rc*0.017453293),"when calling enqueue in DummyRecycler, line 142")
set d1=d1+1
endloop
set a1=a1+1
endloop
set Jb=Jb-1
return true
endfunction
function XTw takes nothing returns boolean
set Jb=0
return R1("DummyRecycler, line 1")
endfunction
function LW takes nothing returns boolean
if GetResearched()!=1378889801 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889801,true)!=1 then
return false
endif
return true
endfunction
function XW takes nothing returns boolean
if not LW() then
return false
endif
return true
endfunction
function Aaw takes integer Uaw,unit Iaw,string Paw returns nothing
set Kb[Jb]=Paw
set Jb=Jb+1
if xO[Uaw]==0 then
if Uaw==0 then
call S4("Nullpointer exception when calling OnCastListener.fire","when calling error in ClosureEvents, line 56")
else
call S4("Called OnCastListener.fire on invalid object.","when calling error in ClosureEvents, line 56")
endif
endif
set Jb=Jb-1
endfunction
function AB takes string EB returns nothing
local unit ZB
local integer UB
local integer IB
local integer PB
set Kb[Jb]=EB
set Jb=Jb+1
set ZB=GetTriggerUnit()
set UB=GetSpellAbilityId()
if Jnw(IS,GetHandleId(ZB),"when calling has in ClosureEvents, line 189") then
set IB=udw(IS,GetHandleId(ZB),"when calling get in ClosureEvents, line 190")
loop
exitwhen IB==0
if sb[IB]==-1 or sb[IB]==UB then
call Aaw(IB,GetSpellAbilityUnit(),"when calling fire in ClosureEvents, line 193")
endif
set IB=ub[IB]
endloop
endif
if Jnw(US,UB,"when calling has in ClosureEvents, line 195") then
set PB=udw(US,UB,"when calling get in ClosureEvents, line 196")
loop
exitwhen PB==0
if tb[PB]==null or tb[PB]==ZB then
call Aaw(PB,GetSpellAbilityUnit(),"when calling fire in ClosureEvents, line 199")
endif
set PB=ub[PB]
endloop
endif
set Jb=Jb-1
set ZB=null
endfunction
function XYw takes nothing returns nothing
set Jb=0
set Kb[Jb]="ClosureEvents, line 308"
set Jb=Jb+1
call AB("when calling onSpellEffect in ClosureEvents, line 308")
set Jb=Jb-1
endfunction
function XZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989557,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989559,0)
endfunction
function YA takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990323,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990106,0)
endfunction
function TE takes nothing returns boolean
if GetResearched()!=1378889803 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889803,true)!=1 then
return false
endif
return true
endfunction
function YE takes nothing returns boolean
if not TE() then
return false
endif
return true
endfunction
function YG takes nothing returns nothing
local player nG=GetOwningPlayer(GetAttacker())
local player dG=GetOwningPlayer(GetAttacker())
local player fG
local player RG
local unit TG
set r[GetPlayerId(nG)+1]=r[GetPlayerId(dG)+1]+1
set fG=GetOwningPlayer(GetTriggerUnit())
set RG=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(fG)+1]=r[GetPlayerId(RG)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set TG=GetTriggerUnit()
call SetUnitState(TG,UNIT_STATE_LIFE,GetUnitState(TG,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set nG=null
set dG=null
set fG=null
set RG=null
set TG=null
endfunction
function TI takes nothing returns boolean
if GetResearched()!=1378890037 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890037,true)!=2 then
return false
endif
return true
endfunction
function YI takes nothing returns boolean
if not TI() then
return false
endif
return true
endfunction
function YU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989573,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989572,0)
endfunction
function TX takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990085 then
return false
endif
return true
endfunction
function YX takes nothing returns boolean
if not TX() then
return false
endif
return true
endfunction
function W9 takes string x9 returns boolean
local playerunitevent v9
local integer m9
local integer Q9
set Kb[Jb]=x9
set Jb=Jb+1
set v9=EVENT_PLAYER_UNIT_CONSTRUCT_START
set Kb[Jb]="when calling alloc_NoShipsNearRivers_EventListener_line7 in NoShipsNearRivers, line 7"
set Jb=Jb+1
if SO==0 then
if cO<32768 then
set cO=cO+1
set m9=cO
set oO[m9]=673
else
call S4("Out of memory: Could not create NoShipsNearRivers_EventListener_line7.","when calling error in NoShipsNearRivers, line 7")
set m9=0
endif
else
set SO=SO-1
set m9=iO[SO]
set oO[m9]=673
endif
set Jb=Jb-1
set Nl[m9]=0
set Ml[m9]=0
set wb[m9]=0
set Kb[Jb]="when calling add in NoShipsNearRivers, line 7"
set Jb=Jb+1
set Kb[Jb]="when calling toIntId in ClosureEvents, line 112"
set Jb=Jb+1
set Q9=ES[GetHandleId(v9)]
if Q9==0 then
set Q9=bB(v9,"when calling registerEventId in ClosureEvents, line 229")
endif
set Jb=Jb-1
set Nl[m9]=Q9
if PS[Nl[m9]]!=0 then
set wb[PS[Nl[m9]]]=m9
set Ml[m9]=PS[Nl[m9]]
endif
set PS[Nl[m9]]=m9
set Jb=Jb-1-1
set v9=null
return true
endfunction
function YYw takes nothing returns boolean
set Jb=0
return W9("NoShipsNearRivers, line 1")
endfunction
function Tk takes nothing returns boolean
local unitstate Rk=UNIT_STATE_MANA
if GetUnitState(GetEnumUnit(),Rk)>0.00 then
set Rk=null
return false
endif
set Rk=null
return true
endfunction
function Yk takes nothing returns nothing
if Tk() then
call KillUnit(GetEnumUnit())
endif
endfunction
function EA takes nothing returns boolean
if GetResearched()!=1378890049 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890049,true)!=2 then
return false
endif
return true
endfunction
function ZA takes nothing returns boolean
if not EA() then
return false
endif
return true
endfunction
function EJ takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())==1747988530 then
return true
endif
if GetUnitTypeId(GetTriggerUnit())==1747990327 then
return true
endif
if GetUnitTypeId(GetTriggerUnit())==1747989591 then
return true
endif
if GetUnitTypeId(GetTriggerUnit())==1747990085 then
return true
endif
return false
endfunction
function ZJ takes nothing returns boolean
if not EJ() then
return false
endif
return true
endfunction
function ZP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651844,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651845,0)
endfunction
function EU takes nothing returns boolean
if GetResearched()!=1378889808 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889808,true)!=1 then
return false
endif
return true
endfunction
function ZU takes nothing returns boolean
if not EU() then
return false
endif
return true
endfunction
function p1 takes string i1 returns boolean
local integer S1
local integer c1
local boolean o1
local integer O1
local boolean l1
local boolean b1
local boolean y1
set Kb[Jb]=i1
set Jb=Jb+1
if GetOwningPlayer(GetSpellAbilityUnit())==GetOwningPlayer(GetSpellTargetUnit()) then
set b1=true
else
set c1=uo[GetPlayerId(GetOwningPlayer(GetSpellAbilityUnit()))]
set Kb[Jb]="when calling isObserver in Diplomacy, line 107"
set Jb=Jb+1
if ll[c1]==0 then
if c1==0 then
call S4("Nullpointer exception when calling PlayerStats.isObserver","when calling error in PlayerStats, line 29")
else
call S4("Called PlayerStats.isObserver on invalid object.","when calling error in PlayerStats, line 29")
endif
endif
set o1=Ab[c1]
set Jb=Jb-1
set b1=o1
endif
if b1 then
set y1=true
else
set O1=uo[GetPlayerId(GetOwningPlayer(GetSpellTargetUnit()))]
set Kb[Jb]="when calling isObserver in Diplomacy, line 108"
set Jb=Jb+1
if ll[O1]==0 then
if O1==0 then
call S4("Nullpointer exception when calling PlayerStats.isObserver","when calling error in PlayerStats, line 29")
else
call S4("Called PlayerStats.isObserver on invalid object.","when calling error in PlayerStats, line 29")
endif
endif
set l1=Ab[O1]
set Jb=Jb-1
set y1=l1
endif
if y1 then
set Jb=Jb-1
return false
endif
set S1=GetSpellAbilityId()
set Jb=Jb-1
return S1==1093677396 or S1==1093677397 or S1==1093677398 or S1==1093677400 or S1==1093677399
endfunction
function ZYw takes nothing returns boolean
set Jb=0
return p1("Diplomacy, line 118")
endfunction
function a4 takes nothing returns nothing
call GroupAddUnit(dc,GetEnumUnit())
endfunction
function aC takes nothing returns boolean
return true
endfunction
function aE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989080,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988818,0)
endfunction
function qG takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989044 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function aG takes nothing returns boolean
if not qG() then
return false
endif
return true
endfunction
function aI takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651846,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651847,0)
endfunction
function aJ takes nothing returns nothing
local integer OJ=1
local integer lJ=1751277938
local player bJ=GetOwningPlayer(GetConstructedStructure())
local rect qJ=bj_mapInitialPlayableArea
local location eJ=Location(GetRectCenterX(qJ),GetRectCenterY(qJ))
local location yJ=Location(GetLocationX(eJ)+100000000.00,GetLocationY(eJ)+1000000000.00)
local real pJ=bj_UNIT_FACING
call GroupClear(bj_lastCreatedGroup)
loop
set OJ=OJ-1
exitwhen OJ<0
call CreateUnitAtLocSaveLast(bJ,lJ,yJ,pJ)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
call ShowUnit(bj_lastCreatedUnit,false)
set p[GetPlayerId(GetOwningPlayer(GetConstructedStructure()))+1]=true
set bJ=null
set yJ=null
set eJ=null
set qJ=null
endfunction
function aX takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function e4 takes string l4 returns boolean
local playerunitevent b4
local integer y4
local integer p4
set Kb[Jb]=l4
set Jb=Jb+1
set b4=EVENT_PLAYER_UNIT_ATTACKED
set Kb[Jb]="when calling alloc_Garissons_EventListener_line6 in Garissons, line 6"
set Jb=Jb+1
if SO==0 then
if cO<32768 then
set cO=cO+1
set y4=cO
set oO[y4]=666
else
call S4("Out of memory: Could not create Garissons_EventListener_line6.","when calling error in Garissons, line 6")
set y4=0
endif
else
set SO=SO-1
set y4=iO[SO]
set oO[y4]=666
endif
set Jb=Jb-1
set Nl[y4]=0
set Ml[y4]=0
set wb[y4]=0
set Kb[Jb]="when calling add in Garissons, line 6"
set Jb=Jb+1
set Kb[Jb]="when calling toIntId in ClosureEvents, line 112"
set Jb=Jb+1
set p4=ES[GetHandleId(b4)]
if p4==0 then
set p4=bB(b4,"when calling registerEventId in ClosureEvents, line 229")
endif
set Jb=Jb-1
set Nl[y4]=p4
if PS[Nl[y4]]!=0 then
set wb[PS[Nl[y4]]]=y4
set Ml[y4]=PS[Nl[y4]]
endif
set PS[Nl[y4]]=y4
set Jb=Jb-1-1
set b4=null
return true
endfunction
function aYw takes nothing returns boolean
set Jb=0
return e4("Garissons, line 1")
endfunction
function qZ takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function aZ takes nothing returns boolean
if not qZ() then
return false
endif
return true
endfunction
function b9 takes nothing returns boolean
return true
endfunction
function bH takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990598,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990597,0)
endfunction
function bL takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function bW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651826,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651824,0)
endfunction
function CC takes string vC returns boolean
local trigger mC
local playerunitevent QC
local playerunitevent WC
local integer EC
local integer ZC
local player UC
local location IC
local real PC
local integer AC
local integer DC
local trigger HC
local playerunitevent JC
local integer KC
local integer LC
local integer XC
set Kb[Jb]=vC
set Jb=Jb+1
if kc then
set EC=5
set ZC=1747988553
set UC=ro[0]
set IC=Location(-3000.0,1700.0)
set PC=0.
call GroupClear(bj_lastCreatedGroup)
loop
set EC=EC-1
exitwhen EC<0
call CreateUnitAtLocSaveLast(UC,ZC,IC,PC)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
endif
set QC=EVENT_PLAYER_UNIT_SELECTED
set Kb[Jb]="when calling alloc_CityManage_EventListener_line9 in CityManage, line 9"
set Jb=Jb+1
if SO==0 then
if cO<32768 then
set cO=cO+1
set AC=cO
set oO[AC]=665
else
call S4("Out of memory: Could not create CityManage_EventListener_line9.","when calling error in CityManage, line 9")
set AC=0
endif
else
set SO=SO-1
set AC=iO[SO]
set oO[AC]=665
endif
set Jb=Jb-1
set Nl[AC]=0
set Ml[AC]=0
set wb[AC]=0
set Kb[Jb]="when calling add in CityManage, line 9"
set Jb=Jb+1
set Kb[Jb]="when calling toIntId in ClosureEvents, line 112"
set Jb=Jb+1
set DC=ES[GetHandleId(QC)]
if DC==0 then
set DC=bB(QC,"when calling registerEventId in ClosureEvents, line 229")
endif
set Jb=Jb-1
set Nl[AC]=DC
if PS[Nl[AC]]!=0 then
set wb[PS[Nl[AC]]]=AC
set Ml[AC]=PS[Nl[AC]]
endif
set PS[Nl[AC]]=AC
set Jb=Jb-1
set mC=CreateTrigger()
call TriggerAddCondition(mC,Condition(Wf))
call TriggerAddAction(mC,Ef)
set HC=mC
set JC=EVENT_PLAYER_UNIT_SPELL_CAST
set KC=0
loop
call TriggerRegisterPlayerUnitEvent(HC,Player(KC),JC,null)
set KC=KC+1
exitwhen KC==bj_MAX_PLAYER_SLOTS
endloop
set WC=EVENT_PLAYER_UNIT_ATTACKED
set Kb[Jb]="when calling alloc_CityManage_EventListener_line33 in CityManage, line 33"
set Jb=Jb+1
if SO==0 then
if cO<32768 then
set cO=cO+1
set LC=cO
set oO[LC]=664
else
call S4("Out of memory: Could not create CityManage_EventListener_line33.","when calling error in CityManage, line 33")
set LC=0
endif
else
set SO=SO-1
set LC=iO[SO]
set oO[LC]=664
endif
set Jb=Jb-1
set Nl[LC]=0
set Ml[LC]=0
set wb[LC]=0
set Kb[Jb]="when calling add in CityManage, line 33"
set Jb=Jb+1
set Kb[Jb]="when calling toIntId in ClosureEvents, line 112"
set Jb=Jb+1
set XC=ES[GetHandleId(WC)]
if XC==0 then
set XC=bB(WC,"when calling registerEventId in ClosureEvents, line 229")
endif
set Jb=Jb-1
set Nl[LC]=XC
if PS[Nl[LC]]!=0 then
set wb[PS[Nl[LC]]]=LC
set Ml[LC]=PS[Nl[LC]]
endif
set PS[Nl[LC]]=LC
set Jb=Jb-1-1
set mC=null
set QC=null
set WC=null
set UC=null
set IC=null
set HC=null
set JC=null
return true
endfunction
function bYw takes nothing returns boolean
set Jb=0
return CC("CityManage, line 1")
endfunction
function ig takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988824 then
return false
endif
return true
endfunction
function Sg takes nothing returns boolean
if not ig() then
return false
endif
return true
endfunction
function Og takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989079 then
return false
endif
return true
endfunction
function lg takes nothing returns boolean
if not Og() then
return false
endif
return true
endfunction
function cg takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988826 then
return false
endif
return true
endfunction
function og takes nothing returns boolean
if not cg() then
return false
endif
return true
endfunction
function sg takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988825 then
return false
endif
return true
endfunction
function tg takes nothing returns boolean
if not sg() then
return false
endif
return true
endfunction
function bg takes nothing returns nothing
if tg() then
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747989047,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"Death Alternate")
endif
if Sg() then
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747989046,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"Death Alternate")
endif
if og() then
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747989077,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"Death Alternate")
endif
if lg() then
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747989078,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"Death Alternate")
endif
endfunction
function c4 takes nothing returns boolean
set oc=CreateForce()
set Oc=CreateForce()
set lc=CreateForce()
set bc=CreateForce()
set yc[0]=oc
set yc[1]=Oc
set yc[2]=lc
set yc[3]=bc
set pc[0]=62
set ec[0]=194
set qc[0]=255
set pc[1]=255
set ec[1]=238
set qc[1]=0
set pc[2]=0
set ec[2]=201
set qc[2]=10
set pc[3]=219
set ec[3]=0
set qc[3]=201
return true
endfunction
function SA takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function cA takes nothing returns boolean
if not SA() then
return false
endif
return true
endfunction
function cF takes nothing returns nothing
local location Nh
local location Mh
local real wF
local real uF
local rect rF
local group sF
local group tF
local code iF
local boolean SF
set u=GetUnitLoc(GetSpellAbilityUnit())
set Nh=u
set c=Location(GetLocationX(Nh)+200.00,GetLocationY(Nh)+0.00)
set Mh=u
set wF=GetLocationX(Mh)
set uF=GetLocationY(Mh)
set O=Rect(wF-150,uF-140,wF+150,uF+140)
set rF=O
set sF=CreateGroup()
call GroupEnumUnitsInRect(sF,rF,null)
call DestroyBoolExpr(null)
set l=sF
set tF=l
set iF=Sp
set SF=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(tF,iF)
if SF then
call DestroyGroup(tF)
endif
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747988826,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"stand")
call DestroyGroup(l)
call RemoveLocation(c)
call RemoveLocation(u)
set Nh=null
set Mh=null
set rF=null
set sF=null
set tF=null
endfunction
function cN takes nothing returns boolean
set VS=200
return true
endfunction
function cP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989833,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989834,0)
endfunction
function SU takes nothing returns boolean
if GetResearched()!=1378889809 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889809,true)!=2 then
return false
endif
return true
endfunction
function cU takes nothing returns boolean
if not SU() then
return false
endif
return true
endfunction
function SY takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989317 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function cY takes nothing returns boolean
if not SY() then
return false
endif
return true
endfunction
function l9 takes string Y6 returns boolean
local integer G6
local integer g6
local integer h6
local integer F6
local integer k6
local integer j6
local integer x6
local integer v6
local integer m6
local integer Q6
local integer W6
local integer E6
local integer Z6
local integer U6
local integer I6
local integer P6
local integer A6
local integer D6
local integer H6
local integer J6
local integer K6
local integer L6
local integer X6
local integer C6
local integer V6
local integer B6
local integer N6
local integer M6
local integer w7
local integer u7
local integer r7
local integer s7
local integer t7
local integer i7
local integer S7
local integer c7
local integer o7
local integer O7
local integer l7
local integer b7
local integer y7
local integer p7
local integer e7
local integer q7
local integer a7
local integer n7
local integer d7
local integer f7
local integer R7
local integer T7
local integer Y7
local integer G7
local integer g7
local integer h7
local integer F7
local integer k7
local integer j7
local integer x7
local integer v7
local integer m7
local integer Q7
local integer W7
local integer E7
local integer Z7
local integer U7
local integer I7
local integer P7
local integer A7
local integer D7
local integer H7
local integer J7
local integer K7
local integer L7
local integer X7
local integer C7
local integer V7
local integer B7
local integer N7
local integer M7
local integer w8
local integer u8
local integer r8
local integer s8
local integer t8
local integer i8
local integer S8
local integer c8
local integer o8
local integer O8
local integer l8
local integer b8
local integer y8
local integer p8
local integer e8
local integer q8
local integer a8
local integer n8
local integer d8
local integer f8
local integer R8
local integer T8
local integer Y8
local integer G8
local integer g8
local integer h8
local integer F8
local integer k8
local integer j8
local integer x8
local integer v8
local integer m8
local integer Q8
local integer W8
local integer E8
local integer Z8
local integer U8
local integer I8
local integer P8
local integer A8
local integer D8
local integer H8
local integer J8
local integer K8
local integer L8
local integer X8
local integer C8
local integer V8
local integer B8
local integer N8
local integer M8
local integer w9
local integer u9
local integer r9
local integer s9
local integer t9
local integer i9
local integer S9
local integer c9
local integer o9
local integer O9
set Kb[Jb]=Y6
set Jb=Jb+1
set G6=R2I(70)
set g6=R2I(30)
set h6=R2I(10)
set F6=R2I(70)
set k6=R2I(30)
set j6=R2I(140)
set Kb[Jb]="when calling asList in Multiboards, line 23"
set Jb=Jb+1
set x6=iyw("when calling new_LinkedList in LinkedList, line 391")
call Ddw(x6,G6,"when calling add in LinkedList, line 393")
call Ddw(x6,g6,"when calling add in LinkedList, line 393")
call Ddw(x6,h6,"when calling add in LinkedList, line 393")
call Ddw(x6,F6,"when calling add in LinkedList, line 393")
call Ddw(x6,k6,"when calling add in LinkedList, line 393")
call Ddw(x6,j6,"when calling add in LinkedList, line 393")
set Jb=Jb-1
set Pc[0]=x6
set v6=R2I(70)
set m6=R2I(30)
set Q6=R2I(10)
set W6=R2I(70)
set E6=R2I(30)
set Z6=R2I(140)
set Kb[Jb]="when calling asList in Multiboards, line 24"
set Jb=Jb+1
set U6=iyw("when calling new_LinkedList in LinkedList, line 391")
call Ddw(U6,v6,"when calling add in LinkedList, line 393")
call Ddw(U6,m6,"when calling add in LinkedList, line 393")
call Ddw(U6,Q6,"when calling add in LinkedList, line 393")
call Ddw(U6,W6,"when calling add in LinkedList, line 393")
call Ddw(U6,E6,"when calling add in LinkedList, line 393")
call Ddw(U6,Z6,"when calling add in LinkedList, line 393")
set Jb=Jb-1
set Pc[1]=U6
set I6=R2I(70)
set P6=R2I(30)
set A6=R2I(10)
set D6=R2I(70)
set H6=R2I(30)
set J6=R2I(140)
set Kb[Jb]="when calling asList in Multiboards, line 25"
set Jb=Jb+1
set K6=iyw("when calling new_LinkedList in LinkedList, line 391")
call Ddw(K6,I6,"when calling add in LinkedList, line 393")
call Ddw(K6,P6,"when calling add in LinkedList, line 393")
call Ddw(K6,A6,"when calling add in LinkedList, line 393")
call Ddw(K6,D6,"when calling add in LinkedList, line 393")
call Ddw(K6,H6,"when calling add in LinkedList, line 393")
call Ddw(K6,J6,"when calling add in LinkedList, line 393")
set Jb=Jb-1
set Pc[2]=K6
set L6=R2I(2.5)
set X6=R2I(2.5)
set C6=R2I(400)
set V6=R2I(2.5)
set B6=R2I(2.5)
set N6=R2I(2.5)
set Kb[Jb]="when calling asList in Multiboards, line 27"
set Jb=Jb+1
set M6=iyw("when calling new_LinkedList in LinkedList, line 391")
call Ddw(M6,L6,"when calling add in LinkedList, line 393")
call Ddw(M6,X6,"when calling add in LinkedList, line 393")
call Ddw(M6,C6,"when calling add in LinkedList, line 393")
call Ddw(M6,V6,"when calling add in LinkedList, line 393")
call Ddw(M6,B6,"when calling add in LinkedList, line 393")
call Ddw(M6,N6,"when calling add in LinkedList, line 393")
set Jb=Jb-1
set Pc[3]=M6
set w7=R2I(70)
set u7=R2I(30)
set r7=R2I(30)
set s7=R2I(10)
set t7=R2I(126)
set i7=R2I(84.000007629)
set Kb[Jb]="when calling asList in Multiboards, line 28"
set Jb=Jb+1
set S7=iyw("when calling new_LinkedList in LinkedList, line 391")
call Ddw(S7,w7,"when calling add in LinkedList, line 393")
call Ddw(S7,u7,"when calling add in LinkedList, line 393")
call Ddw(S7,r7,"when calling add in LinkedList, line 393")
call Ddw(S7,s7,"when calling add in LinkedList, line 393")
call Ddw(S7,t7,"when calling add in LinkedList, line 393")
call Ddw(S7,i7,"when calling add in LinkedList, line 393")
set Jb=Jb-1
set Pc[4]=S7
set c7=R2I(70)
set o7=R2I(30)
set O7=R2I(30)
set l7=R2I(10)
set b7=R2I(126)
set y7=R2I(84.000007629)
set Kb[Jb]="when calling asList in Multiboards, line 29"
set Jb=Jb+1
set p7=iyw("when calling new_LinkedList in LinkedList, line 391")
call Ddw(p7,c7,"when calling add in LinkedList, line 393")
call Ddw(p7,o7,"when calling add in LinkedList, line 393")
call Ddw(p7,O7,"when calling add in LinkedList, line 393")
call Ddw(p7,l7,"when calling add in LinkedList, line 393")
call Ddw(p7,b7,"when calling add in LinkedList, line 393")
call Ddw(p7,y7,"when calling add in LinkedList, line 393")
set Jb=Jb-1
set Pc[5]=p7
set e7=R2I(70)
set q7=R2I(30)
set a7=R2I(30)
set n7=R2I(10)
set d7=R2I(126)
set f7=R2I(84.000007629)
set Kb[Jb]="when calling asList in Multiboards, line 30"
set Jb=Jb+1
set R7=iyw("when calling new_LinkedList in LinkedList, line 391")
call Ddw(R7,e7,"when calling add in LinkedList, line 393")
call Ddw(R7,q7,"when calling add in LinkedList, line 393")
call Ddw(R7,a7,"when calling add in LinkedList, line 393")
call Ddw(R7,n7,"when calling add in LinkedList, line 393")
call Ddw(R7,d7,"when calling add in LinkedList, line 393")
call Ddw(R7,f7,"when calling add in LinkedList, line 393")
set Jb=Jb-1
set Pc[6]=R7
set T7=R2I(70)
set Y7=R2I(30)
set G7=R2I(30)
set g7=R2I(10)
set h7=R2I(126)
set F7=R2I(84.000007629)
set Kb[Jb]="when calling asList in Multiboards, line 31"
set Jb=Jb+1
set k7=iyw("when calling new_LinkedList in LinkedList, line 391")
call Ddw(k7,T7,"when calling add in LinkedList, line 393")
call Ddw(k7,Y7,"when calling add in LinkedList, line 393")
call Ddw(k7,G7,"when calling add in LinkedList, line 393")
call Ddw(k7,g7,"when calling add in LinkedList, line 393")
call Ddw(k7,h7,"when calling add in LinkedList, line 393")
call Ddw(k7,F7,"when calling add in LinkedList, line 393")
set Jb=Jb-1
set Pc[7]=k7
set j7=R2I(70)
set x7=R2I(30)
set v7=R2I(30)
set m7=R2I(10)
set Q7=R2I(126)
set W7=R2I(84.000007629)
set Kb[Jb]="when calling asList in Multiboards, line 32"
set Jb=Jb+1
set E7=iyw("when calling new_LinkedList in LinkedList, line 391")
call Ddw(E7,j7,"when calling add in LinkedList, line 393")
call Ddw(E7,x7,"when calling add in LinkedList, line 393")
call Ddw(E7,v7,"when calling add in LinkedList, line 393")
call Ddw(E7,m7,"when calling add in LinkedList, line 393")
call Ddw(E7,Q7,"when calling add in LinkedList, line 393")
call Ddw(E7,W7,"when calling add in LinkedList, line 393")
set Jb=Jb-1
set Pc[8]=E7
set Z7=R2I(70)
set U7=R2I(30)
set I7=R2I(30)
set P7=R2I(10)
set A7=R2I(126)
set D7=R2I(84.000007629)
set Kb[Jb]="when calling asList in Multiboards, line 33"
set Jb=Jb+1
set H7=iyw("when calling new_LinkedList in LinkedList, line 391")
call Ddw(H7,Z7,"when calling add in LinkedList, line 393")
call Ddw(H7,U7,"when calling add in LinkedList, line 393")
call Ddw(H7,I7,"when calling add in LinkedList, line 393")
call Ddw(H7,P7,"when calling add in LinkedList, line 393")
call Ddw(H7,A7,"when calling add in LinkedList, line 393")
call Ddw(H7,D7,"when calling add in LinkedList, line 393")
set Jb=Jb-1
set Pc[9]=H7
set Ac[0]=4
set Ac[1]=0
set Dc[0]=4
set Dc[1]=1
set Hc[0]=1
set Hc[1]=4
set Jc[0]=1
set Jc[1]=5
set Kc[0]=1
set Kc[1]=6
set Lc[0]=2
set Lc[1]=6
set Xc[0]=2
set Xc[1]=3
set J7=xww("Food","when calling stringToIndex in Multiboards, line 56")
set K7=xww("0","when calling stringToIndex in Multiboards, line 56")
set L7=xww("|","when calling stringToIndex in Multiboards, line 56")
set X7=xww("Income","when calling stringToIndex in Multiboards, line 56")
set C7=xww("0","when calling stringToIndex in Multiboards, line 56")
set V7=xww(" ","when calling stringToIndex in Multiboards, line 56")
set Kb[Jb]="when calling asList in Multiboards, line 56"
set Jb=Jb+1
set B7=iyw("when calling new_LinkedList in LinkedList, line 391")
call Ddw(B7,J7,"when calling add in LinkedList, line 393")
call Ddw(B7,K7,"when calling add in LinkedList, line 393")
call Ddw(B7,L7,"when calling add in LinkedList, line 393")
call Ddw(B7,X7,"when calling add in LinkedList, line 393")
call Ddw(B7,C7,"when calling add in LinkedList, line 393")
call Ddw(B7,V7,"when calling add in LinkedList, line 393")
set Jb=Jb-1
set Cc[0]=B7
set N7=xww("Iron","when calling stringToIndex in Multiboards, line 57")
set M7=xww("0","when calling stringToIndex in Multiboards, line 57")
set w8=xww("|","when calling stringToIndex in Multiboards, line 57")
set u8=xww("Upkeep","when calling stringToIndex in Multiboards, line 57")
set r8=xww("0","when calling stringToIndex in Multiboards, line 57")
set s8=xww(" ","when calling stringToIndex in Multiboards, line 57")
set Kb[Jb]="when calling asList in Multiboards, line 57"
set Jb=Jb+1
set t8=iyw("when calling new_LinkedList in LinkedList, line 391")
call Ddw(t8,N7,"when calling add in LinkedList, line 393")
call Ddw(t8,M7,"when calling add in LinkedList, line 393")
call Ddw(t8,w8,"when calling add in LinkedList, line 393")
call Ddw(t8,u8,"when calling add in LinkedList, line 393")
call Ddw(t8,r8,"when calling add in LinkedList, line 393")
call Ddw(t8,s8,"when calling add in LinkedList, line 393")
set Jb=Jb-1
set Cc[1]=t8
set i8=xww("Stone","when calling stringToIndex in Multiboards, line 58")
set S8=xww("0","when calling stringToIndex in Multiboards, line 58")
set c8=xww("|","when calling stringToIndex in Multiboards, line 58")
set o8=xww(" ","when calling stringToIndex in Multiboards, line 58")
set O8=xww(" ","when calling stringToIndex in Multiboards, line 58")
set l8=xww(" ","when calling stringToIndex in Multiboards, line 58")
set Kb[Jb]="when calling asList in Multiboards, line 58"
set Jb=Jb+1
set b8=iyw("when calling new_LinkedList in LinkedList, line 391")
call Ddw(b8,i8,"when calling add in LinkedList, line 393")
call Ddw(b8,S8,"when calling add in LinkedList, line 393")
call Ddw(b8,c8,"when calling add in LinkedList, line 393")
call Ddw(b8,o8,"when calling add in LinkedList, line 393")
call Ddw(b8,O8,"when calling add in LinkedList, line 393")
call Ddw(b8,l8,"when calling add in LinkedList, line 393")
set Jb=Jb-1
set Cc[2]=b8
set y8=xww(" ","when calling stringToIndex in Multiboards, line 60")
set p8=xww(" ","when calling stringToIndex in Multiboards, line 60")
set e8=xww("                           City info","when calling stringToIndex in Multiboards, line 60")
set q8=xww(" ","when calling stringToIndex in Multiboards, line 60")
set a8=xww(" ","when calling stringToIndex in Multiboards, line 60")
set n8=xww(" ","when calling stringToIndex in Multiboards, line 60")
set Kb[Jb]="when calling asList in Multiboards, line 60"
set Jb=Jb+1
set d8=iyw("when calling new_LinkedList in LinkedList, line 391")
call Ddw(d8,y8,"when calling add in LinkedList, line 393")
call Ddw(d8,p8,"when calling add in LinkedList, line 393")
call Ddw(d8,e8,"when calling add in LinkedList, line 393")
call Ddw(d8,q8,"when calling add in LinkedList, line 393")
call Ddw(d8,a8,"when calling add in LinkedList, line 393")
call Ddw(d8,n8,"when calling add in LinkedList, line 393")
set Jb=Jb-1
set Cc[3]=d8
set f8=xww("Tax","when calling stringToIndex in Multiboards, line 61")
set R8=xww("0","when calling stringToIndex in Multiboards, line 61")
set T8=xww(" ","when calling stringToIndex in Multiboards, line 61")
set Y8=xww("|","when calling stringToIndex in Multiboards, line 61")
set G8=xww(" ","when calling stringToIndex in Multiboards, line 61")
set g8=xww(" ","when calling stringToIndex in Multiboards, line 61")
set Kb[Jb]="when calling asList in Multiboards, line 61"
set Jb=Jb+1
set h8=iyw("when calling new_LinkedList in LinkedList, line 391")
call Ddw(h8,f8,"when calling add in LinkedList, line 393")
call Ddw(h8,R8,"when calling add in LinkedList, line 393")
call Ddw(h8,T8,"when calling add in LinkedList, line 393")
call Ddw(h8,Y8,"when calling add in LinkedList, line 393")
call Ddw(h8,G8,"when calling add in LinkedList, line 393")
call Ddw(h8,g8,"when calling add in LinkedList, line 393")
set Jb=Jb-1
set Cc[4]=h8
set F8=xww("Public order","when calling stringToIndex in Multiboards, line 62")
set k8=xww("0","when calling stringToIndex in Multiboards, line 62")
set j8=xww(" ","when calling stringToIndex in Multiboards, line 62")
set x8=xww("|","when calling stringToIndex in Multiboards, line 62")
set v8=xww(" ","when calling stringToIndex in Multiboards, line 62")
set m8=xww(" ","when calling stringToIndex in Multiboards, line 62")
set Kb[Jb]="when calling asList in Multiboards, line 62"
set Jb=Jb+1
set Q8=iyw("when calling new_LinkedList in LinkedList, line 391")
call Ddw(Q8,F8,"when calling add in LinkedList, line 393")
call Ddw(Q8,k8,"when calling add in LinkedList, line 393")
call Ddw(Q8,j8,"when calling add in LinkedList, line 393")
call Ddw(Q8,x8,"when calling add in LinkedList, line 393")
call Ddw(Q8,v8,"when calling add in LinkedList, line 393")
call Ddw(Q8,m8,"when calling add in LinkedList, line 393")
set Jb=Jb-1
set Cc[5]=Q8
set W8=xww("Population","when calling stringToIndex in Multiboards, line 63")
set E8=xww("0","when calling stringToIndex in Multiboards, line 63")
set Z8=xww(" ","when calling stringToIndex in Multiboards, line 63")
set U8=xww("|","when calling stringToIndex in Multiboards, line 63")
set I8=xww(" ","when calling stringToIndex in Multiboards, line 63")
set P8=xww(" ","when calling stringToIndex in Multiboards, line 63")
set Kb[Jb]="when calling asList in Multiboards, line 63"
set Jb=Jb+1
set A8=iyw("when calling new_LinkedList in LinkedList, line 391")
call Ddw(A8,W8,"when calling add in LinkedList, line 393")
call Ddw(A8,E8,"when calling add in LinkedList, line 393")
call Ddw(A8,Z8,"when calling add in LinkedList, line 393")
call Ddw(A8,U8,"when calling add in LinkedList, line 393")
call Ddw(A8,I8,"when calling add in LinkedList, line 393")
call Ddw(A8,P8,"when calling add in LinkedList, line 393")
set Jb=Jb-1
set Cc[6]=A8
set D8=xww(" ","when calling stringToIndex in Multiboards, line 64")
set H8=xww(" ","when calling stringToIndex in Multiboards, line 64")
set J8=xww(" ","when calling stringToIndex in Multiboards, line 64")
set K8=xww("|","when calling stringToIndex in Multiboards, line 64")
set L8=xww(" ","when calling stringToIndex in Multiboards, line 64")
set X8=xww(" ","when calling stringToIndex in Multiboards, line 64")
set Kb[Jb]="when calling asList in Multiboards, line 64"
set Jb=Jb+1
set C8=iyw("when calling new_LinkedList in LinkedList, line 391")
call Ddw(C8,D8,"when calling add in LinkedList, line 393")
call Ddw(C8,H8,"when calling add in LinkedList, line 393")
call Ddw(C8,J8,"when calling add in LinkedList, line 393")
call Ddw(C8,K8,"when calling add in LinkedList, line 393")
call Ddw(C8,L8,"when calling add in LinkedList, line 393")
call Ddw(C8,X8,"when calling add in LinkedList, line 393")
set Jb=Jb-1
set Cc[7]=C8
set V8=xww(" ","when calling stringToIndex in Multiboards, line 65")
set B8=xww(" ","when calling stringToIndex in Multiboards, line 65")
set N8=xww(" ","when calling stringToIndex in Multiboards, line 65")
set M8=xww("|","when calling stringToIndex in Multiboards, line 65")
set w9=xww(" ","when calling stringToIndex in Multiboards, line 65")
set u9=xww(" ","when calling stringToIndex in Multiboards, line 65")
set Kb[Jb]="when calling asList in Multiboards, line 65"
set Jb=Jb+1
set r9=iyw("when calling new_LinkedList in LinkedList, line 391")
call Ddw(r9,V8,"when calling add in LinkedList, line 393")
call Ddw(r9,B8,"when calling add in LinkedList, line 393")
call Ddw(r9,N8,"when calling add in LinkedList, line 393")
call Ddw(r9,M8,"when calling add in LinkedList, line 393")
call Ddw(r9,w9,"when calling add in LinkedList, line 393")
call Ddw(r9,u9,"when calling add in LinkedList, line 393")
set Jb=Jb-1
set Cc[8]=r9
set s9=xww(" ","when calling stringToIndex in Multiboards, line 66")
set t9=xww(" ","when calling stringToIndex in Multiboards, line 66")
set i9=xww(" ","when calling stringToIndex in Multiboards, line 66")
set S9=xww("|","when calling stringToIndex in Multiboards, line 66")
set c9=xww(" ","when calling stringToIndex in Multiboards, line 66")
set o9=xww(" ","when calling stringToIndex in Multiboards, line 66")
set Kb[Jb]="when calling asList in Multiboards, line 66"
set Jb=Jb+1
set O9=iyw("when calling new_LinkedList in LinkedList, line 391")
call Ddw(O9,s9,"when calling add in LinkedList, line 393")
call Ddw(O9,t9,"when calling add in LinkedList, line 393")
call Ddw(O9,i9,"when calling add in LinkedList, line 393")
call Ddw(O9,S9,"when calling add in LinkedList, line 393")
call Ddw(O9,c9,"when calling add in LinkedList, line 393")
call Ddw(O9,o9,"when calling add in LinkedList, line 393")
set Jb=Jb-1
set Cc[9]=O9
set Jb=Jb-1
return true
endfunction
function cYw takes nothing returns boolean
set Jb=0
return l9("Multiboards, line 1")
endfunction
function ch takes nothing returns nothing
local location Ng
local location Mg
local real wh
local real uh
local rect rh
local group sh
local group th
local code ih
local boolean Sh
set u=GetUnitLoc(GetSpellAbilityUnit())
set Ng=u
set c=Location(GetLocationX(Ng)+200.00,GetLocationY(Ng)+0.00)
set Mg=u
set wh=GetLocationX(Mg)
set uh=GetLocationY(Mg)
set O=Rect(wh-150,uh-140,wh+150,uh+140)
set rh=O
set sh=CreateGroup()
call GroupEnumUnitsInRect(sh,rh,null)
call DestroyBoolExpr(null)
set l=sh
set th=l
set ih=By
set Sh=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(th,ih)
if Sh then
call DestroyGroup(th)
endif
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747990092,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"stand")
call DestroyGroup(l)
call RemoveLocation(c)
call RemoveLocation(u)
set Ng=null
set Mg=null
set rh=null
set sh=null
set th=null
endfunction
function ck takes nothing returns nothing
local location NF
local location MF
local real wk
local real uk
local rect rk
local group sk
local group tk
local code ik
local boolean Sk
set u=GetUnitLoc(GetSpellAbilityUnit())
set NF=u
set S=Location(GetLocationX(NF)+0.00,GetLocationY(NF)+200.00)
set MF=u
set wk=GetLocationX(MF)
set uk=GetLocationY(MF)
set o=Rect(wk-140,uk-150,wk+140,uk+150)
set rk=o
set sk=CreateGroup()
call GroupEnumUnitsInRect(sk,rk,null)
call DestroyBoolExpr(null)
set l=sk
set tk=l
set ik=qp
set Sk=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(tk,ik)
if Sk then
call DestroyGroup(tk)
endif
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747990072,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"stand")
call DestroyGroup(l)
call RemoveLocation(S)
call RemoveLocation(u)
set NF=null
set MF=null
set rk=null
set sk=null
set tk=null
endfunction
function cm takes nothing returns boolean
if GetUnitTypeId(GetDyingUnit())!=1747989049 then
return false
endif
return true
endfunction
function d4 takes nothing returns boolean
set Tc=InitHashtable()
return true
endfunction
function dH takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651850,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651849,0)
endfunction
function dL takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function dW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989065,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989296,0)
endfunction
function I4 takes string v4 returns boolean
local playerunitevent m4
local playerunitevent Q4
local integer W4
local integer E4
local integer Z4
local integer U4
set Kb[Jb]=v4
set Jb=Jb+1
set m4=EVENT_PLAYER_UNIT_DEATH
set Kb[Jb]="when calling alloc_LimitMercenaryCamps_EventListener_line8 in LimitMercenaryCamps, line 8"
set Jb=Jb+1
if SO==0 then
if cO<32768 then
set cO=cO+1
set W4=cO
set oO[W4]=670
else
call S4("Out of memory: Could not create LimitMercenaryCamps_EventListener_line8.","when calling error in LimitMercenaryCamps, line 8")
set W4=0
endif
else
set SO=SO-1
set W4=iO[SO]
set oO[W4]=670
endif
set Jb=Jb-1
set Nl[W4]=0
set Ml[W4]=0
set wb[W4]=0
set Kb[Jb]="when calling add in LimitMercenaryCamps, line 8"
set Jb=Jb+1
set Kb[Jb]="when calling toIntId in ClosureEvents, line 112"
set Jb=Jb+1
set E4=ES[GetHandleId(m4)]
if E4==0 then
set E4=bB(m4,"when calling registerEventId in ClosureEvents, line 229")
endif
set Jb=Jb-1
set Nl[W4]=E4
if PS[Nl[W4]]!=0 then
set wb[PS[Nl[W4]]]=W4
set Ml[W4]=PS[Nl[W4]]
endif
set PS[Nl[W4]]=W4
set Jb=Jb-1
set Q4=EVENT_PLAYER_UNIT_CONSTRUCT_START
set Kb[Jb]="when calling alloc_LimitMercenaryCamps_EventListener_line12 in LimitMercenaryCamps, line 12"
set Jb=Jb+1
if SO==0 then
if cO<32768 then
set cO=cO+1
set Z4=cO
set oO[Z4]=669
else
call S4("Out of memory: Could not create LimitMercenaryCamps_EventListener_line12.","when calling error in LimitMercenaryCamps, line 12")
set Z4=0
endif
else
set SO=SO-1
set Z4=iO[SO]
set oO[Z4]=669
endif
set Jb=Jb-1
set Nl[Z4]=0
set Ml[Z4]=0
set wb[Z4]=0
set Kb[Jb]="when calling add in LimitMercenaryCamps, line 12"
set Jb=Jb+1
set Kb[Jb]="when calling toIntId in ClosureEvents, line 112"
set Jb=Jb+1
set U4=ES[GetHandleId(Q4)]
if U4==0 then
set U4=bB(Q4,"when calling registerEventId in ClosureEvents, line 229")
endif
set Jb=Jb-1
set Nl[Z4]=U4
if PS[Nl[Z4]]!=0 then
set wb[PS[Nl[Z4]]]=Z4
set Ml[Z4]=PS[Nl[Z4]]
endif
set PS[Nl[Z4]]=Z4
set Jb=Jb-1-1
set m4=null
set Q4=null
return true
endfunction
function dYw takes nothing returns boolean
set Jb=0
return I4("LimitMercenaryCamps, line 1")
endfunction
function dk takes nothing returns nothing
local group qk
local code ak
local boolean nk
set w=GetUnitsOfTypeIdAll(1747988790)
set qk=w
set ak=dp
set nk=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(qk,ak)
if nk then
call DestroyGroup(qk)
endif
call DestroyGroup(w)
set qk=null
endfunction
function e1 takes nothing returns boolean
return true
endfunction
function pA takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function eA takes nothing returns boolean
if not pA() then
return false
endif
return true
endfunction
function eC takes nothing returns boolean
set oS=ro[PLAYER_NEUTRAL_PASSIVE]
return true
endfunction
function pF takes nothing returns boolean
if IsUnitType(GetEnumUnit(),UNIT_TYPE_STRUCTURE)!=false then
return false
endif
return true
endfunction
function eF takes nothing returns nothing
if pF() then
call SetUnitPositionLoc(GetEnumUnit(),c)
endif
endfunction
function eP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989832,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989833,0)
endfunction
function pU takes nothing returns boolean
if GetResearched()!=1378889811 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889811,true)!=1 then
return false
endif
return true
endfunction
function eU takes nothing returns boolean
if not pU() then
return false
endif
return true
endfunction
function Q1 takes string k1 returns boolean
local integer j1
local timer x1
local integer v1
local timer m1
set Kb[Jb]=k1
set Jb=Jb+1
set Kb[Jb]="when calling alloc_Economy_CallbackPeriodic_line43 in Economy, line 43"
set Jb=Jb+1
if hO==0 then
if FO<32768 then
set FO=FO+1
set j1=FO
set kO[j1]=635
else
call S4("Out of memory: Could not create Economy_CallbackPeriodic_line43.","when calling error in Economy, line 43")
set j1=0
endif
else
set hO=hO-1
set j1=gO[hO]
set kO[j1]=635
endif
set Jb=Jb-1
set Kb[Jb]="when calling doPeriodically in Economy, line 43"
set Jb=Jb+1
set x1=eww("when calling getTimer in ClosureTimers, line 57")
set Kb[Jb]="when calling doPeriodically in ClosureTimers, line 57"
set Jb=Jb+1
call inw(j1,x1,0.333333343,"when calling start in ClosureTimers, line 45")
set Jb=Jb-1-1
set Kb[Jb]="when calling alloc_Economy_CallbackPeriodic_line50 in Economy, line 50"
set Jb=Jb+1
if hO==0 then
if FO<32768 then
set FO=FO+1
set v1=FO
set kO[v1]=636
else
call S4("Out of memory: Could not create Economy_CallbackPeriodic_line50.","when calling error in Economy, line 50")
set v1=0
endif
else
set hO=hO-1
set v1=gO[hO]
set kO[v1]=636
endif
set Jb=Jb-1
set Kb[Jb]="when calling doPeriodically in Economy, line 50"
set Jb=Jb+1
set m1=eww("when calling getTimer in ClosureTimers, line 57")
set Kb[Jb]="when calling doPeriodically in ClosureTimers, line 57"
set Jb=Jb+1
call inw(v1,m1,10.0,"when calling start in ClosureTimers, line 45")
set Jb=Jb-1-1-1
set x1=null
set m1=null
return true
endfunction
function eYw takes nothing returns boolean
set Jb=0
return Q1("Economy, line 1")
endfunction
function ph takes nothing returns boolean
if IsUnitType(GetEnumUnit(),UNIT_TYPE_STRUCTURE)!=false then
return false
endif
return true
endfunction
function eh takes nothing returns nothing
if ph() then
call SetUnitPositionLoc(GetEnumUnit(),S)
endif
endfunction
function pk takes nothing returns boolean
local unitstate yk=UNIT_STATE_MANA
if GetUnitState(GetEnumUnit(),yk)>0.00 then
set yk=null
return false
endif
set yk=null
return true
endfunction
function ek takes nothing returns nothing
if pk() then
call KillUnit(GetEnumUnit())
endif
endfunction
function ev takes nothing returns nothing
local player sv=GetOwningPlayer(GetKillingUnit())
local playerstate tv=PLAYER_STATE_RESOURCE_GOLD
local playerstate iv
local playerstate Sv
local player cv
local force ov
local location Ov
local real lv
local real bv
local player yv
local force pv
if tv==PLAYER_STATE_RESOURCE_GOLD then
set iv=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(sv,iv,GetPlayerState(sv,iv)+250)
elseif tv==PLAYER_STATE_RESOURCE_LUMBER then
set Sv=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(sv,Sv,GetPlayerState(sv,Sv)+250)
endif
call SetPlayerState(sv,tv,GetPlayerState(sv,tv)+250)
set cv=GetOwningPlayer(GetKillingUnit())
set ov=CreateForce()
call ForceAddPlayer(ov,cv)
if IsPlayerInForce(GetLocalPlayer(),ov) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_092")
endif
set y=GetUnitLoc(GetDyingUnit())
set yv=GetOwningPlayer(GetDyingUnit())
set pv=CreateForce()
call ForceAddPlayer(pv,yv)
set Ov=y
set lv=GetLocationX(Ov)
set bv=GetLocationY(Ov)
if IsPlayerInForce(GetLocalPlayer(),pv) then
call PingMinimap(lv,bv,2.00)
endif
call RemoveLocation(y)
set sv=null
set tv=null
set iv=null
set Sv=null
set cv=null
set ov=null
set Ov=null
set yv=null
set pv=null
endfunction
function ex takes nothing returns nothing
local player sx=GetOwningPlayer(GetKillingUnit())
local playerstate tx=PLAYER_STATE_RESOURCE_LUMBER
local playerstate ix
local playerstate Sx
local player cx
local force ox
local location Ox
local real lx
local real bx
local player yx
local force px
if tx==PLAYER_STATE_RESOURCE_GOLD then
set ix=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(sx,ix,GetPlayerState(sx,ix)+125)
elseif tx==PLAYER_STATE_RESOURCE_LUMBER then
set Sx=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(sx,Sx,GetPlayerState(sx,Sx)+125)
endif
call SetPlayerState(sx,tx,GetPlayerState(sx,tx)+125)
set cx=GetOwningPlayer(GetKillingUnit())
set ox=CreateForce()
call ForceAddPlayer(ox,cx)
if IsPlayerInForce(GetLocalPlayer(),ox) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_089")
endif
set y=GetUnitLoc(GetDyingUnit())
set yx=GetOwningPlayer(GetDyingUnit())
set px=CreateForce()
call ForceAddPlayer(px,yx)
set Ox=y
set lx=GetLocationX(Ox)
set bx=GetLocationY(Ox)
if IsPlayerInForce(GetLocalPlayer(),px) then
call PingMinimap(lx,bx,2.00)
endif
call RemoveLocation(y)
set sx=null
set tx=null
set ix=null
set Sx=null
set cx=null
set ox=null
set Ox=null
set yx=null
set px=null
endfunction
function f4 takes nothing returns boolean
return true
endfunction
function f5 takes nothing returns boolean
return true
endfunction
function dD takes nothing returns boolean
if GetResearched()!=1378890040 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890040,true)!=1 then
return false
endif
return true
endfunction
function fD takes nothing returns boolean
if not dD() then
return false
endif
return true
endfunction
function dK takes nothing returns boolean
if GetUnitTypeId(GetConstructedStructure())!=1747990353 then
return false
endif
return true
endfunction
function fK takes nothing returns boolean
if not dK() then
return false
endif
return true
endfunction
function dQ takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function fQ takes nothing returns boolean
if not dQ() then
return false
endif
return true
endfunction
function dY takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989045 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function fY takes nothing returns boolean
if not dY() then
return false
endif
return true
endfunction
function C5 takes string X5 returns nothing
if (not Fc)and(not kc) then
return
endif
call DisplayTimedTextToPlayer(ro[0],0.,0.,60.,X5)
endfunction
function T2 takes string c2 returns nothing
local integer o2
local integer O2
local real l2
local player b2
local integer y2
local integer p2
local integer e2
local boolean q2
local location a2
local integer n2
local real d2
local real f2
local real R2
set Kb[Jb]=c2
set Jb=Jb+1
set o2=24
set O2=6
set l2=100.0
loop
exitwhen o2<=0
set y2=1
set p2=O2
loop
exitwhen y2>p2
set d2=y2*6.28318/O2
set f2=311.2+l2*Cos(d2)
set R2=5166.7+l2*Sin(d2)
set b2=ro[24-o2+y2-1]
set e2=uo[GetPlayerId(b2)]
set c2="when calling isInGame in MainInit, line 54"
set Kb[Jb]="when calling isInGame in MainInit, line 54"
set Jb=Jb+1
if ll[e2]==0 then
if e2==0 then
call S4("Nullpointer exception when calling PlayerStats.isInGame","when calling error in PlayerStats, line 42")
else
call S4("Called PlayerStats.isInGame on invalid object.","when calling error in PlayerStats, line 42")
endif
endif
set q2=Ub[e2]
set Jb=Jb-1
if q2 then
set a2=Location(f2,R2)
call CreateNUnitsAtLoc(1,1747988554,b2,a2,AngleBetweenPoints(a2,Location(311.2,5166.7)))
endif
set y2=y2+1
endloop
set l2=l2+50.0
set o2=o2-O2
set O2=O2+2
if o2<2147483647 then
set n2=o2
else
set n2=2147483647
endif
if O2<n2 then
set n2=O2
endif
set O2=n2
endloop
set Jb=Jb-1
set b2=null
set a2=null
endfunction
function Uew takes player kew,string jew returns integer
local integer xew
local integer vew
local integer mew
local player Qew
local integer Wew
local integer Eew
local boolean Zew
set Kb[Jb]=jew
set Jb=Jb+1
set Kb[Jb]="when calling alloc_PlayerStats in PlayerStats, line 16"
set Jb=Jb+1
if ol==0 then
if Ol<32768 then
set Ol=Ol+1
set vew=Ol
set ll[vew]=713
else
call S4("Out of memory: Could not create PlayerStats.","when calling error in PlayerStats, line 6")
set vew=0
endif
else
set ol=ol-1
set vew=cl[ol]
set ll[vew]=713
endif
set Jb=Jb-1
set xew=vew
set mew=vew
set Qew=kew
set Kb[Jb]="when calling construct_PlayerStats in PlayerStats, line 16"
set Jb=Jb+1
set Ub[vew]=false
set Ab[vew]=false
set Pb[vew]=0
set Eb[vew]=-1
set Ib[vew]=-1
set Zb[vew]=kew
if GetPlayerSlotState(kew)==PLAYER_SLOT_STATE_PLAYING then
set Zew=GetPlayerController(kew)==MAP_CONTROL_USER
else
set Zew=false
endif
set Ub[vew]=Zew
set Wew=0
set Eew=23
loop
exitwhen Wew>Eew
if ro[Wew]==Qew then
call rGw(mew,Wew,-1,"when writing array PlayerStats_alliance_states in PlayerStats, line 25")
else
call rGw(mew,Wew,bj_ALLIANCE_UNALLIED,"when writing array PlayerStats_alliance_states in PlayerStats, line 27")
endif
set Wew=Wew+1
endloop
set Jb=Jb-1-1
set Qew=null
return xew
endfunction
function mww takes rect gww,string hww,integer Fww,integer kww,string jww returns nothing
local group xww_2
local unit vww
set Kb[Jb]=jww
set Jb=Jb+1
set xww_2=CreateGroup()
call GroupEnumUnitsInRect(xww_2,gww,null)
call DestroyBoolExpr(null)
set vww=FirstOfGroup(xww_2)
call GroupRemoveUnit(xww_2,vww)
set xS[TS]=FSw(vww,hww,Fww,kww,"when calling new_City in SettingCities, line 7")
set Jb=Jb-1
set xww_2=null
set vww=null
endfunction
function S2 takes string K4 returns boolean
local integer L4
local integer X4
local trigger C4
local integer V4
local integer B4
local integer N4
local integer M4
local integer w2
local player u2
local integer r2
local player s2
local boolean t2
local boolean i2
set Kb[Jb]=K4
set Jb=Jb+1
set V4=xww("You're playing |cffffff65Crusade over Europe|r.\n\nUse your |cff0011ffsettler|r to choose the foundation of your new kingdom.\nThe location you choose will |cffff0000determine the faction you will get|r.\nUse the |cff00ffffF1|r menu to create alliances.\nExpand quickly, Capture cities and ores to |cffff0000increase your income|r.\nUse the |cff00fff2F2|r menu to set the taxes of your newly acquired |cff0026ffcities|r.\nFor more information, please, go to |cff00d3f8F9 menu|r.","when calling stringToIndex in MainInit, line 21")
set Kb[Jb]="when calling asList in MainInit, line 20"
set Jb=Jb+1
set B4=iyw("when calling new_LinkedList in LinkedList, line 391")
call Ddw(B4,V4,"when calling add in LinkedList, line 393")
set Jb=Jb-1
set gc=B4
set N4=0
set M4=0
set w2=23
loop
exitwhen M4>w2
set u2=ro[M4]
if GetPlayerSlotState(u2)==PLAYER_SLOT_STATE_PLAYING then
set t2=GetPlayerController(u2)==MAP_CONTROL_USER
else
set t2=false
endif
if t2 then
set N4=N4+1
endif
set M4=M4+1
endloop
if Fc then
call C5("Debug info is enabled. Only for Red.")
endif
if kc then
call DisplayTimedTextToPlayer(so,0.,0.,45.,"Debug mode is on.")
endif
set Kb[Jb]="when calling setupCities in MainInit, line 106"
set Jb=Jb+1
call mww(h,"Adrianopolis",3,1,"when calling newCity in SettingCities, line 26")
call mww(Ss,"Arta",3,0,"when calling newCity in SettingCities, line 27")
call mww(Br,"Athens",3,1,"when calling newCity in SettingCities, line 28")
call mww(Vr,"Ragusa",3,0,"when calling newCity in SettingCities, line 29")
call mww(ls,"Canakkale",3,0,"when calling newCity in SettingCities, line 30")
call mww(cs,"Candia",3,0,"when calling newCity in SettingCities, line 31")
call mww(k,"Constantinople",3,4,"when calling newCity in SettingCities, line 32")
call mww(is,"Corinth",3,0,"when calling newCity in SettingCities, line 33")
call mww(g,"Durazzo",3,0,"when calling newCity in SettingCities, line 34")
call mww(ws,"Nikomedeia",3,0,"when calling newCity in SettingCities, line 35")
call mww(lu,"Kutaisi",3,0,"when calling newCity in SettingCities, line 36")
call mww(Dw,"Nicae",3,2,"when calling newCity in SettingCities, line 37")
call mww(Zw,"Nicosia",3,0,"when calling newCity in SettingCities, line 38")
call mww(Nr,"Rhodes",3,0,"when calling newCity in SettingCities, line 39")
call mww(x,"Scopia",3,0,"when calling newCity in SettingCities, line 40")
call mww(Pw,"Smyrna",3,0,"when calling newCity in SettingCities, line 41")
call mww(bu,"Tbilisi",3,0,"when calling newCity in SettingCities, line 42")
call mww(Ew,"Trebizond",3,1,"when calling newCity in SettingCities, line 43")
call mww(F,"Thessalonika",3,3,"when calling newCity in SettingCities, line 44")
call mww(Qu,"Astrakhan'",1,2,"when calling newCity in SettingCities, line 48")
call mww(Gw,"Azaq",1,0,"when calling newCity in SettingCities, line 49")
call mww(ru,"Baia",1,0,"when calling newCity in SettingCities, line 50")
call mww(cu,"Bryansk",1,0,"when calling newCity in SettingCities, line 51")
call mww(sw,"Caffa",1,0,"when calling newCity in SettingCities, line 52")
call mww(U,"Constanta",1,0,"when calling newCity in SettingCities, line 53")
call mww(iu,"Dnipro",1,0,"when calling newCity in SettingCities, line 54")
call mww(nw,"Halych",1,0,"when calling newCity in SettingCities, line 55")
call mww(gw,"Kiev",1,2,"when calling newCity in SettingCities, line 56")
call mww(N,"Konigsberg",1,0,"when calling newCity in SettingCities, line 57")
call mww(uw,"Hrodna",1,0,"when calling newCity in SettingCities, line 58")
call mww(hw,"Minsk",1,1,"when calling newCity in SettingCities, line 59")
call mww(Su,"Moscow",1,0,"when calling newCity in SettingCities, line 60")
call mww(Sw,"Novgorod",1,0,"when calling newCity in SettingCities, line 61")
call mww(tu,"Olesh'e",1,0,"when calling newCity in SettingCities, line 62")
call mww(cw,"Polotsk",1,0,"when calling newCity in SettingCities, line 63")
call mww(tw,"Pskov",1,0,"when calling newCity in SettingCities, line 64")
call mww(iw,"Reval",1,0,"when calling newCity in SettingCities, line 65")
call mww(M,"Riga",1,1,"when calling newCity in SettingCities, line 66")
call mww(bs,"Bulgar",1,0,"when calling newCity in SettingCities, line 67")
call mww(Wu,"Ryazan'",1,0,"when calling newCity in SettingCities, line 68")
call mww(Ou,"Sarkel",1,0,"when calling newCity in SettingCities, line 69")
call mww(Fw,"Smolensk",1,1,"when calling newCity in SettingCities, line 70")
call mww(L,"Sofia",1,0,"when calling newCity in SettingCities, line 71")
call mww(I,"Targovitse",1,1,"when calling newCity in SettingCities, line 72")
call mww(uu,"Tmutarakan'",1,0,"when calling newCity in SettingCities, line 73")
call mww(Mr,"Turku",1,0,"when calling newCity in SettingCities, line 74")
call mww(rw,"Vilnius",1,1,"when calling newCity in SettingCities, line 75")
call mww(su,"Zhytomir",1,0,"when calling newCity in SettingCities, line 76")
call mww(au,"Acre",2,2,"when calling newCity in SettingCities, line 80")
call mww(mw,"Adana",2,0,"when calling newCity in SettingCities, line 81")
call mww(as,"Alamut",2,0,"when calling newCity in SettingCities, line 82")
call mww(nu,"Al-Aqaba",2,0,"when calling newCity in SettingCities, line 83")
call mww(Nw,"Alexandria",2,2,"when calling newCity in SettingCities, line 84")
call mww(Kw,"Algiers",2,0,"when calling newCity in SettingCities, line 85")
call mww(Aw,"Ankara",2,1,"when calling newCity in SettingCities, line 86")
call mww(Ww,"Antioch",2,2,"when calling newCity in SettingCities, line 87")
call mww(us,"Badajoz",2,0,"when calling newCity in SettingCities, line 88")
call mww(Os,"Baghdad",2,4,"when calling newCity in SettingCities, line 89")
call mww(ns,"Baku",2,0,"when calling newCity in SettingCities, line 90")
call mww(Cw,"Benghazi",2,1,"when calling newCity in SettingCities, line 91")
call mww(es,"Beleb-el-Anab",2,0,"when calling newCity in SettingCities, line 92")
call mww(wu,"Cairo",2,3,"when calling newCity in SettingCities, line 93")
call mww(Tr,"Cordoba",2,4,"when calling newCity in SettingCities, line 94")
call mww(yu,"Damascus",2,2,"when calling newCity in SettingCities, line 95")
call mww(Mw,"Damietta",2,1,"when calling newCity in SettingCities, line 96")
call mww(Ru,"Diyarbakir",2,0,"when calling newCity in SettingCities, line 97")
call mww(Iw,"Edessa",2,1,"when calling newCity in SettingCities, line 98")
call mww(Tu,"Erez",2,1,"when calling newCity in SettingCities, line 99")
call mww(Hw,"Fes",2,3,"when calling newCity in SettingCities, line 100")
call mww(eu,"Gaza",2,0,"when calling newCity in SettingCities, line 101")
call mww(Rr,"Granada",2,2,"when calling newCity in SettingCities, line 102")
call mww(xw,"Isparta",2,0,"when calling newCity in SettingCities, line 103")
call mww(Uw,"Jerusalem",2,3,"when calling newCity in SettingCities, line 104")
call mww(vw,"Kayseri",2,1,"when calling newCity in SettingCities, line 105")
call mww(os,"Kerak",2,0,"when calling newCity in SettingCities, line 106")
call mww(ds,"Kermanshah",2,0,"when calling newCity in SettingCities, line 107")
call mww(Qw,"Konya",2,0,"when calling newCity in SettingCities, line 108")
call mww(Sr,"Lisbon",2,0,"when calling newCity in SettingCities, line 109")
call mww(Ur,"Luxor",2,0,"when calling newCity in SettingCities, line 110")
call mww(tr,"Madrid",2,0,"when calling newCity in SettingCities, line 111")
call mww(Lw,"Mahdya",2,0,"when calling newCity in SettingCities, line 112")
call mww(Zr,"Marrakesh",2,3,"when calling newCity in SettingCities, line 113")
call mww(Bw,"Medina",2,2,"when calling newCity in SettingCities, line 114")
call mww(ps,"Melilla",2,0,"when calling newCity in SettingCities, line 115")
call mww(qu,"Mosul",2,1,"when calling newCity in SettingCities, line 116")
call mww(Yr,"Murcia",2,1,"when calling newCity in SettingCities, line 117")
call mww(Jw,"Oran",2,0,"when calling newCity in SettingCities, line 118")
call mww(mu,"Palma",2,1,"when calling newCity in SettingCities, line 119")
call mww(du,"Quarisiya",2,1,"when calling newCity in SettingCities, line 120")
call mww(Er,"Silves",2,0,"when calling newCity in SettingCities, line 121")
call mww(jw,"Sinop",2,0,"when calling newCity in SettingCities, line 122")
call mww(fu,"Tamiya",2,0,"when calling newCity in SettingCities, line 123")
call mww(pu,"Tartus",2,0,"when calling newCity in SettingCities, line 124")
call mww(qs,"Tabriz",2,0,"when calling newCity in SettingCities, line 125")
call mww(Xw,"Tripoli",2,1,"when calling newCity in SettingCities, line 126")
call mww(Yw,"Tunis",2,1,"when calling newCity in SettingCities, line 127")
call mww(Gr,"Valencia",2,0,"when calling newCity in SettingCities, line 128")
call mww(ou,"Yerevan",2,0,"when calling newCity in SettingCities, line 129")
call mww(J,"Aarhus",0,1,"when calling newCity in SettingCities, line 133")
call mww(Zu,"Aberdeen",0,1,"when calling newCity in SettingCities, line 134")
call mww(Ar,"Ajaccio",0,0,"when calling newCity in SettingCities, line 135")
call mww(dr,"Ancona",0,1,"when calling newCity in SettingCities, line 136")
call mww(Pr,"Angers",0,0,"when calling newCity in SettingCities, line 137")
call mww(yr,"Antwerp",0,0,"when calling newCity in SettingCities, line 138")
call mww(ur,"Barcelona",0,1,"when calling newCity in SettingCities, line 139")
call mww(Kr,"Bari",0,0,"when calling newCity in SettingCities, line 140")
call mww(A,"Belgrade",0,1,"when calling newCity in SettingCities, line 141")
call mww(mr,"Bergen",0,1,"when calling newCity in SettingCities, line 142")
call mww(hr,"Bern",0,0,"when calling newCity in SettingCities, line 143")
call mww(ar,"Bologna",0,1,"when calling newCity in SettingCities, line 144")
call mww(Mu,"Bordeaux",0,1,"when calling newCity in SettingCities, line 145")
call mww(P,"Brasov",0,0,"when calling newCity in SettingCities, line 146")
call mww(br,"Bruges",0,0,"when calling newCity in SettingCities, line 147")
call mww(f,"Burgh",0,0,"when calling newCity in SettingCities, line 148")
call mww(sr,"Burgos",0,1,"when calling newCity in SettingCities, line 149")
call mww(Lu,"Caen",0,0,"when calling newCity in SettingCities, line 150")
call mww(Du,"Caenarfon",0,0,"when calling newCity in SettingCities, line 151")
call mww(Dr,"Cagliari",0,0,"when calling newCity in SettingCities, line 152")
call mww(R,"Cardiff",0,0,"when calling newCity in SettingCities, line 153")
call mww(Bu,"Clermont",0,1,"when calling newCity in SettingCities, line 154")
call mww(ju,"Cologne",0,1,"when calling newCity in SettingCities, line 155")
call mww(Vu,"Dijon",0,0,"when calling newCity in SettingCities, line 156")
call mww(Pu,"Dublin",0,0,"when calling newCity in SettingCities, line 157")
call mww(Eu,"Edinburgh",0,0,"when calling newCity in SettingCities, line 158")
call mww(vr,"Eikundarsund",0,0,"when calling newCity in SettingCities, line 159")
call mww(Q,"Esztergom",0,1,"when calling newCity in SettingCities, line 160")
call mww(Ku,"Exeter",0,0,"when calling newCity in SettingCities, line 161")
call mww(ww,"Gdansk",0,0,"when calling newCity in SettingCities, line 162")
call mww(D,"Flensburg",0,0,"when calling newCity in SettingCities, line 163")
call mww(xu,"Frankfurt",0,1,"when calling newCity in SettingCities, line 164")
call mww(T,"Galway",0,0,"when calling newCity in SettingCities, line 165")
call mww(pr,"Genoa",0,2,"when calling newCity in SettingCities, line 166")
call mww(Tw,"Groningen",0,0,"when calling newCity in SettingCities, line 167")
call mww(ku,"Innsbruck",0,0,"when calling newCity in SettingCities, line 168")
call mww(Uu,"Inverness",0,0,"when calling newCity in SettingCities, line 169")
call mww(Au,"Desmond",0,0,"when calling newCity in SettingCities, line 170")
call mww(Jr,"Reggio",0,0,"when calling newCity in SettingCities, line 172")
call mww(ts,"Kalmar",0,0,"when calling newCity in SettingCities, line 173")
call mww(V,"Kassa",0,0,"when calling newCity in SettingCities, line 174")
call mww(E,"Krakow",0,2,"when calling newCity in SettingCities, line 175")
call mww(rr,"Leon",0,1,"when calling newCity in SettingCities, line 176")
call mww(Hu,"London",0,0,"when calling newCity in SettingCities, line 177")
call mww(kr,"Lund",0,0,"when calling newCity in SettingCities, line 178")
call mww(Fr,"Lyon",0,0,"when calling newCity in SettingCities, line 179")
call mww(K,"Madgeburg",0,0,"when calling newCity in SettingCities, line 180")
call mww(lr,"Marsellie",0,1,"when calling newCity in SettingCities, line 181")
call mww(Cr,"Metz",0,0,"when calling newCity in SettingCities, line 182")
call mww(er,"Milan",0,1,"when calling newCity in SettingCities, line 183")
call mww(Hr,"Naples",0,1,"when calling newCity in SettingCities, line 184")
call mww(gr,"Nuremburg",0,0,"when calling newCity in SettingCities, line 185")
call mww(Wr,"Nykoping",0,0,"when calling newCity in SettingCities, line 186")
call mww(rs,"Oporto",0,0,"when calling newCity in SettingCities, line 187")
call mww(xr,"Oslo",0,1,"when calling newCity in SettingCities, line 188")
call mww(ys,"Buda",0,1,"when calling newCity in SettingCities, line 189")
call mww(Lr,"Palermo",0,3,"when calling newCity in SettingCities, line 190")
call mww(cr,"Pamplona",0,0,"when calling newCity in SettingCities, line 191")
call mww(Cu,"Paris",0,1,"when calling newCity in SettingCities, line 192")
call mww(nr,"Pisa",0,0,"when calling newCity in SettingCities, line 193")
call mww(X,"Plock",0,0,"when calling newCity in SettingCities, line 194")
call mww(C,"Poznan",0,1,"when calling newCity in SettingCities, line 195")
call mww(m,"Prague",0,0,"when calling newCity in SettingCities, line 196")
call mww(G,"Zadar",0,0,"when calling newCity in SettingCities, line 197")
call mww(Ir,"Rennes",0,0,"when calling newCity in SettingCities, line 198")
call mww(Xu,"Rheims",0,0,"when calling newCity in SettingCities, line 199")
call mww(fr,"Rome",0,1,"when calling newCity in SettingCities, line 200")
call mww(H,"Roskilde",0,0,"when calling newCity in SettingCities, line 201")
call mww(ir,"Salamanca",0,0,"when calling newCity in SettingCities, line 202")
call mww(Fu,"Salzburg",0,0,"when calling newCity in SettingCities, line 203")
call mww(jr,"Skara",0,0,"when calling newCity in SettingCities, line 204")
call mww(W,"Stettin",0,0,"when calling newCity in SettingCities, line 205")
call mww(ss,"Stockholm",0,1,"when calling newCity in SettingCities, line 206")
call mww(Xr,"Syracuse",0,0,"when calling newCity in SettingCities, line 207")
call mww(Nu,"Toulouse",0,0,"when calling newCity in SettingCities, line 208")
call mww(B,"Varad",0,0,"when calling newCity in SettingCities, line 209")
call mww(qr,"Venice",0,2,"when calling newCity in SettingCities, line 210")
call mww(v,"Vienna",0,0,"when calling newCity in SettingCities, line 211")
call mww(Qr,"Visby",0,0,"when calling newCity in SettingCities, line 212")
call mww(j,"Warwick",0,0,"when calling newCity in SettingCities, line 213")
call mww(Ju,"Winchester",0,1,"when calling newCity in SettingCities, line 214")
call mww(Z,"Wroclaw",0,0,"when calling newCity in SettingCities, line 215")
call mww(Iu,"York",0,1,"when calling newCity in SettingCities, line 216")
call mww(Y,"Zagreb",0,0,"when calling newCity in SettingCities, line 217")
call mww(wr,"Zaragoza",0,0,"when calling newCity in SettingCities, line 218")
call mww(vu,"Hamburg",0,1,"when calling newCity in SettingCities, line 219")
set Jb=Jb-1
call SetForceAllianceStateBJ(bj_FORCE_ALL_PLAYERS,bj_FORCE_PLAYER[PLAYER_NEUTRAL_PASSIVE],bj_ALLIANCE_NEUTRAL)
call SetForceAllianceStateBJ(bj_FORCE_ALL_PLAYERS,bj_FORCE_ALL_PLAYERS,bj_ALLIANCE_UNALLIED)
call SetForceAllianceStateBJ(oc,oc,bj_ALLIANCE_NEUTRAL)
call SetForceAllianceStateBJ(Oc,Oc,bj_ALLIANCE_NEUTRAL)
call SetForceAllianceStateBJ(lc,lc,bj_ALLIANCE_NEUTRAL)
call SetForceAllianceStateBJ(bc,bc,bj_ALLIANCE_NEUTRAL)
set L4=0
set X4=23
loop
exitwhen L4>X4
call SetPlayerState(ro[L4],PLAYER_STATE_RESOURCE_GOLD,200)
call SetPlayerState(ro[L4],PLAYER_STATE_RESOURCE_LUMBER,200)
if kc then
call X2(ro[L4])
endif
call SetPlayerTechMaxAllowed(ro[L4],1747988789,1)
set uo[L4]=Uew(ro[L4],"when calling new_PlayerStats in MainInit, line 129")
set r2=uo[L4]
set s2=ro[L4]
if GetPlayerSlotState(s2)==PLAYER_SLOT_STATE_PLAYING then
set i2=GetPlayerController(s2)==MAP_CONTROL_USER
else
set i2=false
endif
set Kb[Jb]="when calling setInGame in MainInit, line 130"
set Jb=Jb+1
if ll[r2]==0 then
if r2==0 then
call S4("Nullpointer exception when calling PlayerStats.setInGame","when calling error in PlayerStats, line 45")
else
call S4("Called PlayerStats.setInGame on invalid object.","when calling error in PlayerStats, line 45")
endif
endif
set Ub[r2]=i2
set Jb=Jb-1
set L4=L4+1
endloop
call T2("when calling setPlayersAtStart in MainInit, line 132")
set C4=CreateTrigger()
call TriggerRegisterTimerEvent(C4,0.01,false)
call TriggerAddAction(C4,Cf)
set Jb=Jb-1
set C4=null
set u2=null
set s2=null
return true
endfunction
function fYw takes nothing returns boolean
set Jb=0
return S2("MainInit, line 1")
endfunction
function fm takes nothing returns nothing
local player om=GetOwningPlayer(GetKillingUnit())
local playerstate Om=PLAYER_STATE_RESOURCE_GOLD
local playerstate lm
local playerstate bm
local player ym
local force pm
local location em
local real qm
local real am
local player nm
local force dm
if Om==PLAYER_STATE_RESOURCE_GOLD then
set lm=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(om,lm,GetPlayerState(om,lm)+500)
elseif Om==PLAYER_STATE_RESOURCE_LUMBER then
set bm=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(om,bm,GetPlayerState(om,bm)+500)
endif
call SetPlayerState(om,Om,GetPlayerState(om,Om)+500)
set ym=GetOwningPlayer(GetKillingUnit())
set pm=CreateForce()
call ForceAddPlayer(pm,ym)
if IsPlayerInForce(GetLocalPlayer(),pm) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_083")
endif
set y=GetUnitLoc(GetDyingUnit())
set nm=GetOwningPlayer(GetDyingUnit())
set dm=CreateForce()
call ForceAddPlayer(dm,nm)
set em=y
set qm=GetLocationX(em)
set am=GetLocationY(em)
if IsPlayerInForce(GetLocalPlayer(),dm) then
call PingMinimap(qm,am,2.00)
endif
call RemoveLocation(y)
set om=null
set Om=null
set lm=null
set bm=null
set ym=null
set pm=null
set em=null
set nm=null
set dm=null
endfunction
function fx takes nothing returns boolean
if GetUnitTypeId(GetDyingUnit())!=1747988801 then
return false
endif
return true
endfunction
function gB takes nothing returns nothing
call TriggerRegisterUnitEvent(mS,Jo[Ko-1],EVENT_UNIT_DAMAGED)
endfunction
function gF takes nothing returns nothing
local location qF
local location aF
local real nF
local real dF
local rect fF
local group RF
local group TF
local code YF
local boolean GF
set u=GetUnitLoc(GetSpellAbilityUnit())
set qF=u
set c=Location(GetLocationX(qF)+200.00,GetLocationY(qF)+0.00)
set aF=u
set nF=GetLocationX(aF)
set dF=GetLocationY(aF)
set O=Rect(nF-150,dF-140,nF+150,dF+140)
set fF=O
set RF=CreateGroup()
call GroupEnumUnitsInRect(RF,fF,null)
call DestroyBoolExpr(null)
set l=RF
set TF=l
set YF=Op
set GF=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(TF,YF)
if GF then
call DestroyGroup(TF)
endif
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747990081,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"stand")
call DestroyGroup(l)
call RemoveLocation(c)
call RemoveLocation(u)
set qF=null
set aF=null
set fF=null
set RF=null
set TF=null
endfunction
function gH takes nothing returns nothing
set s=bj_FORCE_ALL_PLAYERS
call ForForce(s,Ia)
endfunction
function GL takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989809 then
return false
endif
return true
endfunction
function gL takes nothing returns boolean
if not GL() then
return false
endif
return true
endfunction
function GW takes nothing returns boolean
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889797,true)!=2 then
return false
endif
return true
endfunction
function gW takes nothing returns boolean
if not GW() then
return false
endif
return true
endfunction
function X9 takes string H9 returns boolean
local playerevent J9
local integer K9
local integer L9
set Kb[Jb]=H9
set Jb=Jb+1
set J9=EVENT_PLAYER_LEAVE
set Kb[Jb]="when calling alloc_OnPlayerLeave_EventListener_line6 in OnPlayerLeave, line 6"
set Jb=Jb+1
if SO==0 then
if cO<32768 then
set cO=cO+1
set K9=cO
set oO[K9]=675
else
call S4("Out of memory: Could not create OnPlayerLeave_EventListener_line6.","when calling error in OnPlayerLeave, line 6")
set K9=0
endif
else
set SO=SO-1
set K9=iO[SO]
set oO[K9]=675
endif
set Jb=Jb-1
set Nl[K9]=0
set Ml[K9]=0
set wb[K9]=0
set Kb[Jb]="when calling add in OnPlayerLeave, line 6"
set Jb=Jb+1
set Kb[Jb]="when calling toIntId in ClosureEvents, line 112"
set Jb=Jb+1
set L9=ES[GetHandleId(J9)]
if L9==0 then
set L9=bB(J9,"when calling registerEventId in ClosureEvents, line 229")
endif
set Jb=Jb-1
set Nl[K9]=L9
if PS[Nl[K9]]!=0 then
set wb[PS[Nl[K9]]]=K9
set Ml[K9]=PS[Nl[K9]]
endif
set PS[Nl[K9]]=K9
set Jb=Jb-1-1
set J9=null
return true
endfunction
function gYw takes nothing returns boolean
set Jb=0
return X9("OnPlayerLeave, line 1")
endfunction
function gZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989570,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989571,0)
endfunction
function Yg takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747990072 then
return false
endif
return true
endfunction
function Gg takes nothing returns boolean
if not Yg() then
return false
endif
return true
endfunction
function Rg takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747990081 then
return false
endif
return true
endfunction
function Tg takes nothing returns boolean
if not Rg() then
return false
endif
return true
endfunction
function dg takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747990090 then
return false
endif
return true
endfunction
function fg takes nothing returns boolean
if not dg() then
return false
endif
return true
endfunction
function ag takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747990092 then
return false
endif
return true
endfunction
function ng takes nothing returns boolean
if not ag() then
return false
endif
return true
endfunction
function gg takes nothing returns nothing
if ng() then
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747990091,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"Death Alternate")
endif
if fg() then
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747990089,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"Death Alternate")
endif
if Tg() then
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747990073,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"Death Alternate")
endif
if Gg() then
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747990071,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"Death Alternate")
endif
endfunction
function gh takes nothing returns nothing
local location qh
local location ah
local real nh
local real dh
local rect fh
local group Rh
local group Th
local code Yh
local boolean Gh
set u=GetUnitLoc(GetSpellAbilityUnit())
set qh=u
set S=Location(GetLocationX(qh)+0.00,GetLocationY(qh)+200.00)
set ah=u
set nh=GetLocationX(ah)
set dh=GetLocationY(ah)
set o=Rect(nh-140,dh-150,nh+140,dh+150)
set fh=o
set Rh=CreateGroup()
call GroupEnumUnitsInRect(Rh,fh,null)
call DestroyBoolExpr(null)
set l=Rh
set Th=l
set Yh=wp
set Gh=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(Th,Yh)
if Gh then
call DestroyGroup(Th)
endif
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747988824,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"stand")
call DestroyGroup(l)
call RemoveLocation(S)
call RemoveLocation(u)
set qh=null
set ah=null
set fh=null
set Rh=null
set Th=null
endfunction
function gm takes nothing returns boolean
if GetUnitTypeId(GetDyingUnit())!=1747989048 then
return false
endif
return true
endfunction
function hL takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function hW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989067,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989065,0)
endfunction
function hY takes nothing returns nothing
local player RY=GetOwningPlayer(GetAttacker())
local player TY=GetOwningPlayer(GetAttacker())
local player YY
local player GY
local unit gY
set r[GetPlayerId(RY)+1]=r[GetPlayerId(TY)+1]+1
set YY=GetOwningPlayer(GetTriggerUnit())
set GY=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(YY)+1]=r[GetPlayerId(GY)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set gY=GetTriggerUnit()
call SetUnitState(gY,UNIT_STATE_LIFE,GetUnitState(gY,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set RY=null
set TY=null
set YY=null
set GY=null
set gY=null
endfunction
function qfw takes integer Hdw,integer Jdw,integer Kdw,integer Ldw,integer Xdw,integer Cdw,integer Vdw,integer Bdw,integer Ndw,integer Mdw,integer wfw,integer ufw,integer rfw,integer sfw,integer tfw,integer ifw,integer Sfw,integer cfw,integer ofw,integer Ofw,integer lfw,integer bfw,integer yfw,string pfw returns integer
local integer efw
set Kb[Jb]=pfw
set Jb=Jb+1
set efw=iyw("when calling new_LinkedList in LinkedList, line 391")
call Ddw(efw,Hdw,"when calling add in LinkedList, line 393")
call Ddw(efw,Jdw,"when calling add in LinkedList, line 393")
call Ddw(efw,Kdw,"when calling add in LinkedList, line 393")
call Ddw(efw,Ldw,"when calling add in LinkedList, line 393")
call Ddw(efw,Xdw,"when calling add in LinkedList, line 393")
call Ddw(efw,Cdw,"when calling add in LinkedList, line 393")
call Ddw(efw,Vdw,"when calling add in LinkedList, line 393")
call Ddw(efw,Bdw,"when calling add in LinkedList, line 393")
call Ddw(efw,Ndw,"when calling add in LinkedList, line 393")
call Ddw(efw,Mdw,"when calling add in LinkedList, line 393")
call Ddw(efw,wfw,"when calling add in LinkedList, line 393")
call Ddw(efw,ufw,"when calling add in LinkedList, line 393")
call Ddw(efw,rfw,"when calling add in LinkedList, line 393")
call Ddw(efw,sfw,"when calling add in LinkedList, line 393")
call Ddw(efw,tfw,"when calling add in LinkedList, line 393")
call Ddw(efw,ifw,"when calling add in LinkedList, line 393")
call Ddw(efw,Sfw,"when calling add in LinkedList, line 393")
call Ddw(efw,cfw,"when calling add in LinkedList, line 393")
call Ddw(efw,ofw,"when calling add in LinkedList, line 393")
call Ddw(efw,Ofw,"when calling add in LinkedList, line 393")
call Ddw(efw,lfw,"when calling add in LinkedList, line 393")
call Ddw(efw,bfw,"when calling add in LinkedList, line 393")
call Ddw(efw,yfw,"when calling add in LinkedList, line 393")
set Jb=Jb-1
return efw
endfunction
function m0w takes string k0w returns boolean
local playerunitevent j0w
local integer x0w
local integer v0w
set Kb[Jb]=k0w
set Jb=Jb+1
set yo=qfw(1747988557,1747989075,1747990102,1747988785,1747989839,1747990101,1747989554,1747989041,1747990344,1747989059,1747989060,1747988844,1747990351,1747990352,1747990356,1747989331,1747990350,1747989809,1747990353,1747990354,1747990355,1747988568,1747990341,"when calling asList in RangeChecks, line 5")
set j0w=EVENT_PLAYER_UNIT_CONSTRUCT_START
set Kb[Jb]="when calling alloc_RangeChecks_EventListener_line11 in RangeChecks, line 11"
set Jb=Jb+1
if SO==0 then
if cO<32768 then
set cO=cO+1
set x0w=cO
set oO[x0w]=676
else
call S4("Out of memory: Could not create RangeChecks_EventListener_line11.","when calling error in RangeChecks, line 11")
set x0w=0
endif
else
set SO=SO-1
set x0w=iO[SO]
set oO[x0w]=676
endif
set Jb=Jb-1
set Nl[x0w]=0
set Ml[x0w]=0
set wb[x0w]=0
set Kb[Jb]="when calling add in RangeChecks, line 11"
set Jb=Jb+1
set Kb[Jb]="when calling toIntId in ClosureEvents, line 112"
set Jb=Jb+1
set v0w=ES[GetHandleId(j0w)]
if v0w==0 then
set v0w=bB(j0w,"when calling registerEventId in ClosureEvents, line 229")
endif
set Jb=Jb-1
set Nl[x0w]=v0w
if PS[Nl[x0w]]!=0 then
set wb[PS[Nl[x0w]]]=x0w
set Ml[x0w]=PS[Nl[x0w]]
endif
set PS[Nl[x0w]]=x0w
set Jb=Jb-1-1
set j0w=null
return true
endfunction
function hYw takes nothing returns boolean
set Jb=0
return m0w("RangeChecks, line 1")
endfunction
function u0w takes unit w0w returns nothing
call UnitAddAbility(w0w,1095577649)
call UnitMakeAbilityPermanent(w0w,true,1095577649)
set Mc[wo]=w0w
set wo=wo+1
call TriggerEvaluate(Bc)
set wo=wo-1
endfunction
function i0w takes nothing returns nothing
call u0w(GetEnumUnit())
endfunction
function tD takes nothing returns boolean
if GetResearched()!=1378890053 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890053,true)!=1 then
return false
endif
return true
endfunction
function iD takes nothing returns boolean
if not tD() then
return false
endif
return true
endfunction
function tQ takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function iQ takes nothing returns boolean
if not tQ() then
return false
endif
return true
endfunction
function kA takes nothing returns boolean
if GetResearched()!=1378890049 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890049,true)!=1 then
return false
endif
return true
endfunction
function jA takes nothing returns boolean
if not kA() then
return false
endif
return true
endfunction
function kG takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989305 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function jG takes nothing returns boolean
if not kG() then
return false
endif
return true
endfunction
function jH takes nothing returns nothing
if GetUnitTypeId(GetEnumUnit())==1747988535 then
call ReplaceUnitBJ(GetEnumUnit(),1747988788,bj_UNIT_STATE_METHOD_RELATIVE)
endif
if GetUnitTypeId(GetEnumUnit())==1747990325 then
call ReplaceUnitBJ(GetEnumUnit(),1747990324,bj_UNIT_STATE_METHOD_RELATIVE)
endif
if GetUnitTypeId(GetEnumUnit())==1747989594 then
call ReplaceUnitBJ(GetEnumUnit(),1747990097,bj_UNIT_STATE_METHOD_RELATIVE)
endif
if GetUnitTypeId(GetEnumUnit())==1747988784 then
call ReplaceUnitBJ(GetEnumUnit(),1747988561,bj_UNIT_STATE_METHOD_RELATIVE)
endif
if GetUnitTypeId(GetEnumUnit())==1747988563 then
call ReplaceUnitBJ(GetEnumUnit(),1747988565,bj_UNIT_STATE_METHOD_RELATIVE)
endif
if GetUnitTypeId(GetEnumUnit())==1747988562 then
call ReplaceUnitBJ(GetEnumUnit(),1747988566,bj_UNIT_STATE_METHOD_RELATIVE)
endif
if GetUnitTypeId(GetEnumUnit())==1747988564 then
call ReplaceUnitBJ(GetEnumUnit(),1747988567,bj_UNIT_STATE_METHOD_RELATIVE)
endif
if GetUnitTypeId(GetEnumUnit())==1747990104 then
call ReplaceUnitBJ(GetEnumUnit(),1747990321,bj_UNIT_STATE_METHOD_RELATIVE)
endif
if GetUnitTypeId(GetEnumUnit())==1747990105 then
call ReplaceUnitBJ(GetEnumUnit(),1747990322,bj_UNIT_STATE_METHOD_RELATIVE)
endif
if GetUnitTypeId(GetEnumUnit())==1747990106 then
call ReplaceUnitBJ(GetEnumUnit(),1747990323,bj_UNIT_STATE_METHOD_RELATIVE)
endif
if GetUnitTypeId(GetEnumUnit())==1747989811 then
call ReplaceUnitBJ(GetEnumUnit(),1747989812,bj_UNIT_STATE_METHOD_RELATIVE)
endif
if GetUnitTypeId(GetEnumUnit())==1747990095 then
call ReplaceUnitBJ(GetEnumUnit(),1747990098,bj_UNIT_STATE_METHOD_RELATIVE)
endif
if GetUnitTypeId(GetEnumUnit())==1747990096 then
call ReplaceUnitBJ(GetEnumUnit(),1747990099,bj_UNIT_STATE_METHOD_RELATIVE)
endif
endfunction
function jP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989835,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989836,0)
endfunction
function kU takes nothing returns boolean
if GetResearched()!=1378889810 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889810,true)!=2 then
return false
endif
return true
endfunction
function jU takes nothing returns boolean
if not kU() then
return false
endif
return true
endfunction
function orw takes string Nuw returns boolean
local trigger Muw
local playerunitevent wrw
local playerunitevent urw
local integer rrw
local integer srw
local rect trw
local region irw
local integer Srw
local integer crw
set Kb[Jb]=Nuw
set Jb=Jb+1
set wrw=EVENT_PLAYER_UNIT_SPELL_FINISH
set Kb[Jb]="when calling alloc_Upkeep_EventListener_line6 in Upkeep, line 6"
set Jb=Jb+1
if SO==0 then
if cO<32768 then
set cO=cO+1
set rrw=cO
set oO[rrw]=679
else
call S4("Out of memory: Could not create Upkeep_EventListener_line6.","when calling error in Upkeep, line 6")
set rrw=0
endif
else
set SO=SO-1
set rrw=iO[SO]
set oO[rrw]=679
endif
set Jb=Jb-1
set Nl[rrw]=0
set Ml[rrw]=0
set wb[rrw]=0
set Kb[Jb]="when calling add in Upkeep, line 6"
set Jb=Jb+1
set Kb[Jb]="when calling toIntId in ClosureEvents, line 112"
set Jb=Jb+1
set srw=ES[GetHandleId(wrw)]
if srw==0 then
set srw=bB(wrw,"when calling registerEventId in ClosureEvents, line 229")
endif
set Jb=Jb-1
set Nl[rrw]=srw
if PS[Nl[rrw]]!=0 then
set wb[PS[Nl[rrw]]]=rrw
set Ml[rrw]=PS[Nl[rrw]]
endif
set PS[Nl[rrw]]=rrw
set Jb=Jb-1
set Muw=CreateTrigger()
set trw=GetWorldBounds()
set irw=CreateRegion()
call RegionAddRect(irw,trw)
call TriggerRegisterEnterRegion(Muw,irw,null)
call TriggerAddAction(Muw,Nf)
set urw=EVENT_PLAYER_UNIT_DEATH
set Kb[Jb]="when calling alloc_Upkeep_EventListener_line28 in Upkeep, line 28"
set Jb=Jb+1
if SO==0 then
if cO<32768 then
set cO=cO+1
set Srw=cO
set oO[Srw]=678
else
call S4("Out of memory: Could not create Upkeep_EventListener_line28.","when calling error in Upkeep, line 28")
set Srw=0
endif
else
set SO=SO-1
set Srw=iO[SO]
set oO[Srw]=678
endif
set Jb=Jb-1
set Nl[Srw]=0
set Ml[Srw]=0
set wb[Srw]=0
set Kb[Jb]="when calling add in Upkeep, line 28"
set Jb=Jb+1
set Kb[Jb]="when calling toIntId in ClosureEvents, line 112"
set Jb=Jb+1
set crw=ES[GetHandleId(urw)]
if crw==0 then
set crw=bB(urw,"when calling registerEventId in ClosureEvents, line 229")
endif
set Jb=Jb-1
set Nl[Srw]=crw
if PS[Nl[Srw]]!=0 then
set wb[PS[Nl[Srw]]]=Srw
set Ml[Srw]=PS[Nl[Srw]]
endif
set PS[Nl[Srw]]=Srw
set Jb=Jb-1-1
set Muw=null
set wrw=null
set urw=null
set trw=null
set irw=null
return true
endfunction
function jYw takes nothing returns boolean
set Jb=0
return orw("Upkeep, line 1")
endfunction
function kD takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990596,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990595,0)
endfunction
function kH takes nothing returns boolean
return IsUnitType(GetTriggerUnit(),UNIT_TYPE_STRUCTURE)==true
endfunction
function kK takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function FP takes nothing returns boolean
if GetResearched()!=1378890036 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890036,true)!=2 then
return false
endif
return true
endfunction
function kP takes nothing returns boolean
if not FP() then
return false
endif
return true
endfunction
function kQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989057,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989058,0)
endfunction
function Nww takes string Xww returns boolean
local playerunitevent Cww
local integer Vww
local integer Bww
set Kb[Jb]=Xww
set Jb=Jb+1
set Cww=EVENT_PLAYER_UNIT_SPELL_CAST
set Kb[Jb]="when calling alloc_Taxation_EventListener_line6 in Taxation, line 6"
set Jb=Jb+1
if SO==0 then
if cO<32768 then
set cO=cO+1
set Vww=cO
set oO[Vww]=677
else
call S4("Out of memory: Could not create Taxation_EventListener_line6.","when calling error in Taxation, line 6")
set Vww=0
endif
else
set SO=SO-1
set Vww=iO[SO]
set oO[Vww]=677
endif
set Jb=Jb-1
set Nl[Vww]=0
set Ml[Vww]=0
set wb[Vww]=0
set Kb[Jb]="when calling add in Taxation, line 6"
set Jb=Jb+1
set Kb[Jb]="when calling toIntId in ClosureEvents, line 112"
set Jb=Jb+1
set Bww=ES[GetHandleId(Cww)]
if Bww==0 then
set Bww=bB(Cww,"when calling registerEventId in ClosureEvents, line 229")
endif
set Jb=Jb-1
set Nl[Vww]=Bww
if PS[Nl[Vww]]!=0 then
set wb[PS[Nl[Vww]]]=Vww
set Ml[Vww]=PS[Nl[Vww]]
endif
set PS[Nl[Vww]]=Vww
set Jb=Jb-1-1
set Cww=null
return true
endfunction
function kYw takes nothing returns boolean
set Jb=0
return Nww("Taxation, line 1")
endfunction
function l0w takes nothing returns boolean
set io=ConvertPlayerColor(24)
set So=ConvertPlayerColor(25)
set co=ConvertPlayerColor(26)
set oo=ConvertPlayerColor(27)
set Oo[0]=PLAYER_COLOR_RED
set Oo[1]=PLAYER_COLOR_BLUE
set Oo[2]=PLAYER_COLOR_CYAN
set Oo[3]=PLAYER_COLOR_PURPLE
set Oo[4]=PLAYER_COLOR_YELLOW
set Oo[5]=PLAYER_COLOR_ORANGE
set Oo[6]=PLAYER_COLOR_GREEN
set Oo[7]=PLAYER_COLOR_PINK
set Oo[8]=PLAYER_COLOR_LIGHT_GRAY
set Oo[9]=PLAYER_COLOR_LIGHT_BLUE
set Oo[10]=PLAYER_COLOR_AQUA
set Oo[11]=PLAYER_COLOR_BROWN
set Oo[12]=PLAYER_COLOR_MAROON
set Oo[13]=PLAYER_COLOR_NAVY
set Oo[14]=PLAYER_COLOR_TURQUOISE
set Oo[15]=PLAYER_COLOR_VIOLET
set Oo[16]=PLAYER_COLOR_WHEAT
set Oo[17]=PLAYER_COLOR_PEACH
set Oo[18]=PLAYER_COLOR_MINT
set Oo[19]=PLAYER_COLOR_LAVENDER
set Oo[20]=PLAYER_COLOR_COAL
set Oo[21]=PLAYER_COLOR_SNOW
set Oo[22]=PLAYER_COLOR_EMERALD
set Oo[23]=PLAYER_COLOR_PEANUT
set Oo[24]=io
set Oo[25]=So
set Oo[26]=co
set Oo[27]=oo
return true
endfunction
function l5 takes nothing returns boolean
return true
endfunction
function lG takes nothing returns nothing
local player iG=GetOwningPlayer(GetAttacker())
local player SG=GetOwningPlayer(GetAttacker())
local player cG
local player oG
local unit OG
set r[GetPlayerId(iG)+1]=r[GetPlayerId(SG)+1]+1
set cG=GetOwningPlayer(GetTriggerUnit())
set oG=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(cG)+1]=r[GetPlayerId(oG)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set OG=GetTriggerUnit()
call SetUnitState(OG,UNIT_STATE_LIFE,GetUnitState(OG,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set iG=null
set SG=null
set cG=null
set oG=null
set OG=null
endfunction
function OH takes nothing returns boolean
if GetResearched()!=1378889818 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889818,true)!=1 then
return false
endif
return true
endfunction
function lH takes nothing returns boolean
if not OH() then
return false
endif
return true
endfunction
function OL takes nothing returns boolean
if GetUnitTypeId(GetConstructedStructure())!=1747989331 then
return false
endif
return true
endfunction
function lL takes nothing returns boolean
if not OL() then
return false
endif
return true
endfunction
function OW takes nothing returns boolean
if GetResearched()!=1378889802 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889802,true)!=2 then
return false
endif
return true
endfunction
function lW takes nothing returns boolean
if not OW() then
return false
endif
return true
endfunction
function xC takes string hC returns boolean
local playerunitevent FC
local integer kC
local integer jC
set Kb[Jb]=hC
set Jb=Jb+1
set FC=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set Kb[Jb]="when calling alloc_CityBuilded_EventListener_line9 in CityBuilded, line 9"
set Jb=Jb+1
if SO==0 then
if cO<32768 then
set cO=cO+1
set kC=cO
set oO[kC]=663
else
call S4("Out of memory: Could not create CityBuilded_EventListener_line9.","when calling error in CityBuilded, line 9")
set kC=0
endif
else
set SO=SO-1
set kC=iO[SO]
set oO[kC]=663
endif
set Jb=Jb-1
set Nl[kC]=0
set Ml[kC]=0
set wb[kC]=0
set Kb[Jb]="when calling add in CityBuilded, line 9"
set Jb=Jb+1
set Kb[Jb]="when calling toIntId in ClosureEvents, line 112"
set Jb=Jb+1
set jC=ES[GetHandleId(FC)]
if jC==0 then
set jC=bB(FC,"when calling registerEventId in ClosureEvents, line 229")
endif
set Jb=Jb-1
set Nl[kC]=jC
if PS[Nl[kC]]!=0 then
set wb[PS[Nl[kC]]]=kC
set Ml[kC]=PS[Nl[kC]]
endif
set PS[Nl[kC]]=kC
set Jb=Jb-1-1
set FC=null
return true
endfunction
function lYw takes nothing returns boolean
set Jb=0
return xC("CityBuilded, line 1")
endfunction
function lZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990098,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990095,0)
endfunction
function lj takes nothing returns nothing
local player Mk=GetOwningPlayer(GetSpellTargetUnit())
local playerstate wj=PLAYER_STATE_RESOURCE_LUMBER
local playerstate uj
local playerstate rj
local player sj
local force tj
local location ij
local real Sj
local real cj
local player oj
local force Oj
if wj==PLAYER_STATE_RESOURCE_GOLD then
set uj=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(Mk,uj,GetPlayerState(Mk,uj)+500)
elseif wj==PLAYER_STATE_RESOURCE_LUMBER then
set rj=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(Mk,rj,GetPlayerState(Mk,rj)+500)
endif
call SetPlayerState(Mk,wj,GetPlayerState(Mk,wj)+500)
call RemoveUnit(GetSpellAbilityUnit())
set sj=GetOwningPlayer(GetSpellTargetUnit())
set tj=CreateForce()
call ForceAddPlayer(tj,sj)
if IsPlayerInForce(GetLocalPlayer(),tj) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_1228")
endif
set y=GetUnitLoc(GetSpellTargetUnit())
set oj=GetOwningPlayer(GetSpellTargetUnit())
set Oj=CreateForce()
call ForceAddPlayer(Oj,oj)
set ij=y
set Sj=GetLocationX(ij)
set cj=GetLocationY(ij)
if IsPlayerInForce(GetLocalPlayer(),Oj) then
call PingMinimap(Sj,cj,2.00)
endif
call RemoveLocation(y)
set Mk=null
set wj=null
set uj=null
set rj=null
set sj=null
set tj=null
set ij=null
set oj=null
set Oj=null
endfunction
function vF takes nothing returns boolean
if IsUnitType(GetEnumUnit(),UNIT_TYPE_STRUCTURE)!=false then
return false
endif
return true
endfunction
function mF takes nothing returns nothing
if vF() then
call SetUnitPositionLoc(GetEnumUnit(),S)
endif
endfunction
function vL takes nothing returns boolean
if GetUnitTypeId(GetConstructedStructure())!=1747989059 then
return false
endif
return true
endfunction
function mL takes nothing returns boolean
if not vL() then
return false
endif
return true
endfunction
function vW takes nothing returns boolean
if GetResearched()!=1378889799 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889799,true)!=1 then
return false
endif
return true
endfunction
function mW takes nothing returns boolean
if not vW() then
return false
endif
return true
endfunction
function vY takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989316 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function mY takes nothing returns boolean
if not vY() then
return false
endif
return true
endfunction
function mYw takes nothing returns nothing
set Jb=0
call WB("ClosureEvents, line 241")
endfunction
function mZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989556,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989570,0)
endfunction
function vg takes nothing returns boolean
if IsUnitType(GetEnumUnit(),UNIT_TYPE_STRUCTURE)!=false then
return false
endif
return true
endfunction
function mg takes nothing returns nothing
if vg() then
call SetUnitPositionLoc(GetEnumUnit(),c)
endif
endfunction
function vh takes nothing returns boolean
if IsUnitType(GetEnumUnit(),UNIT_TYPE_STRUCTURE)!=false then
return false
endif
return true
endfunction
function mh takes nothing returns nothing
if vh() then
call SetUnitPositionLoc(GetEnumUnit(),S)
endif
endfunction
function mx takes nothing returns nothing
local player Rx=GetOwningPlayer(GetKillingUnit())
local playerstate Tx=PLAYER_STATE_RESOURCE_LUMBER
local playerstate Yx
local playerstate Gx
local player gx
local force hx
local location Fx
local real kx
local real jx
local player xx
local force vx
if Tx==PLAYER_STATE_RESOURCE_GOLD then
set Yx=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(Rx,Yx,GetPlayerState(Rx,Yx)+250)
elseif Tx==PLAYER_STATE_RESOURCE_LUMBER then
set Gx=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(Rx,Gx,GetPlayerState(Rx,Gx)+250)
endif
call SetPlayerState(Rx,Tx,GetPlayerState(Rx,Tx)+250)
set gx=GetOwningPlayer(GetKillingUnit())
set hx=CreateForce()
call ForceAddPlayer(hx,gx)
if IsPlayerInForce(GetLocalPlayer(),hx) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_090")
endif
set y=GetUnitLoc(GetDyingUnit())
set xx=GetOwningPlayer(GetDyingUnit())
set vx=CreateForce()
call ForceAddPlayer(vx,xx)
set Fx=y
set kx=GetLocationX(Fx)
set jx=GetLocationY(Fx)
if IsPlayerInForce(GetLocalPlayer(),vx) then
call PingMinimap(kx,jx,2.00)
endif
call RemoveLocation(y)
set Rx=null
set Tx=null
set Yx=null
set Gx=null
set gx=null
set hx=null
set Fx=null
set xx=null
set vx=null
endfunction
function n4 takes nothing returns boolean
set fc=InitHashtable()
set Rc=InitHashtable()
return true
endfunction
function aH takes nothing returns boolean
if GetResearched()!=1378890041 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890041,true)!=1 then
return false
endif
return true
endfunction
function nH takes nothing returns boolean
if not aH() then
return false
endif
return true
endfunction
function aL takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990350 then
return false
endif
return true
endfunction
function nL takes nothing returns boolean
if not aL() then
return false
endif
return true
endfunction
function aW takes nothing returns boolean
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889797,true)!=1 then
return false
endif
return true
endfunction
function nW takes nothing returns boolean
if not aW() then
return false
endif
return true
endfunction
function x4 takes string Y4 returns boolean
local playerunitevent G4
local playerunitevent g4
local integer h4
local integer F4
local integer k4
local integer j4
set Kb[Jb]=Y4
set Jb=Jb+1
set G4=EVENT_PLAYER_UNIT_DEATH
set Kb[Jb]="when calling alloc_LimitEncampments_EventListener_line8 in LimitEncampments, line 8"
set Jb=Jb+1
if SO==0 then
if cO<32768 then
set cO=cO+1
set h4=cO
set oO[h4]=668
else
call S4("Out of memory: Could not create LimitEncampments_EventListener_line8.","when calling error in LimitEncampments, line 8")
set h4=0
endif
else
set SO=SO-1
set h4=iO[SO]
set oO[h4]=668
endif
set Jb=Jb-1
set Nl[h4]=0
set Ml[h4]=0
set wb[h4]=0
set Kb[Jb]="when calling add in LimitEncampments, line 8"
set Jb=Jb+1
set Kb[Jb]="when calling toIntId in ClosureEvents, line 112"
set Jb=Jb+1
set F4=ES[GetHandleId(G4)]
if F4==0 then
set F4=bB(G4,"when calling registerEventId in ClosureEvents, line 229")
endif
set Jb=Jb-1
set Nl[h4]=F4
if PS[Nl[h4]]!=0 then
set wb[PS[Nl[h4]]]=h4
set Ml[h4]=PS[Nl[h4]]
endif
set PS[Nl[h4]]=h4
set Jb=Jb-1
set g4=EVENT_PLAYER_UNIT_CONSTRUCT_START
set Kb[Jb]="when calling alloc_LimitEncampments_EventListener_line12 in LimitEncampments, line 12"
set Jb=Jb+1
if SO==0 then
if cO<32768 then
set cO=cO+1
set k4=cO
set oO[k4]=667
else
call S4("Out of memory: Could not create LimitEncampments_EventListener_line12.","when calling error in LimitEncampments, line 12")
set k4=0
endif
else
set SO=SO-1
set k4=iO[SO]
set oO[k4]=667
endif
set Jb=Jb-1
set Nl[k4]=0
set Ml[k4]=0
set wb[k4]=0
set Kb[Jb]="when calling add in LimitEncampments, line 12"
set Jb=Jb+1
set Kb[Jb]="when calling toIntId in ClosureEvents, line 112"
set Jb=Jb+1
set j4=ES[GetHandleId(g4)]
if j4==0 then
set j4=bB(g4,"when calling registerEventId in ClosureEvents, line 229")
endif
set Jb=Jb-1
set Nl[k4]=j4
if PS[Nl[k4]]!=0 then
set wb[PS[Nl[k4]]]=k4
set Ml[k4]=PS[Nl[k4]]
endif
set PS[Nl[k4]]=k4
set Jb=Jb-1-1
set G4=null
set g4=null
return true
endfunction
function nYw takes nothing returns boolean
set Jb=0
return x4("LimitEncampments, line 1")
endfunction
function nZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990099,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990096,0)
endfunction
function qj takes nothing returns boolean
if GetUnitTypeId(GetSpellTargetUnit())==1747988787 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747990361 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747989831 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747989040 then
return true
endif
return false
endfunction
function aj takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988791 then
return false
endif
if not qj() then
return false
endif
return true
endfunction
function nj takes nothing returns boolean
if not aj() then
return false
endif
return true
endfunction
function nrw takes nothing returns boolean
call Location(0.,0.)
return true
endfunction
function o0w takes nothing returns boolean
local integer S0w
local integer c0w
set so=GetLocalPlayer()
set S0w=0
set c0w=bj_MAX_PLAYER_SLOTS-1
loop
exitwhen S0w>c0w
set ro[S0w]=Player(S0w)
set S0w=S0w+1
endloop
return true
endfunction
function o4 takes nothing returns boolean
set ac=CreateTimer()
call TimerStart(ac,100000.,false,null)
call TimerStart(CreateTimer(),0.030,true,Lf)
return true
endfunction
function oA takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990321,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990104,0)
endfunction
function cE takes nothing returns boolean
if GetResearched()!=1378889800 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889800,true)!=1 then
return false
endif
return true
endfunction
function oE takes nothing returns boolean
if not cE() then
return false
endif
return true
endfunction
function cI takes nothing returns boolean
if GetResearched()!=1378889818 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889818,true)!=2 then
return false
endif
return true
endfunction
function oI takes nothing returns boolean
if not cI() then
return false
endif
return true
endfunction
function cJ takes nothing returns boolean
if GetUnitTypeId(GetConstructedStructure())==1747988545 then
return true
endif
if GetUnitTypeId(GetConstructedStructure())==1747989577 then
return true
endif
if GetUnitTypeId(GetConstructedStructure())==1747990320 then
return true
endif
if GetUnitTypeId(GetConstructedStructure())==1747989845 then
return true
endif
return false
endfunction
function oJ takes nothing returns boolean
if p[GetPlayerId(GetOwningPlayer(GetConstructedStructure()))+1]!=false then
return false
endif
if not cJ() then
return false
endif
return true
endfunction
function oU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651833,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651841,0)
endfunction
function cX takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989591 then
return false
endif
return true
endfunction
function oX takes nothing returns boolean
if not cX() then
return false
endif
return true
endfunction
function ntw takes string Stw,string ctw,real otw,real Otw,real ltw,integer btw,real ytw,real ptw,boolean etw,string qtw returns integer
local integer atw
set Kb[Jb]=qtw
set Jb=Jb+1
set Kb[Jb]="when calling alloc_CityModifierClass in CityModifiers, line 39"
set Jb=Jb+1
if lO==0 then
if bO<32768 then
set bO=bO+1
set atw=bO
else
call S4("Out of memory: Could not create CityModifierClass.","when calling error in CityModifiers, line 28")
set atw=0
endif
else
set lO=lO-1
set atw=OO[lO]
endif
set Jb=Jb-1
set dl[atw]=otw
set fl[atw]=ptw
set Rl[atw]=etw
set Tl[atw]=Otw
set Yl[atw]=btw
set Gl[atw]=ytw
set gl[atw]=ltw
set hl[atw]=Stw
set Fl[atw]=ctw
set Jb=Jb-1
return atw
endfunction
function xV takes string qV returns boolean
local integer aV
local integer nV
local integer dV
local integer fV
local integer RV
local integer TV
local integer YV
local integer GV
local integer gV
local integer hV
local integer FV
local integer kV
local integer jV
set Kb[Jb]=qV
set Jb=Jb+1
set nV=R2I(0.5)
set dV=R2I(1)
set Kb[Jb]="when calling asList in CityModifiers, line 9"
set Jb=Jb+1
set fV=iyw("when calling new_LinkedList in LinkedList, line 391")
call Ddw(fV,nV,"when calling add in LinkedList, line 393")
call Ddw(fV,dV,"when calling add in LinkedList, line 393")
set Jb=Jb-1
set lS[0]=fV
set RV=R2I(1)
set TV=R2I(3)
set Kb[Jb]="when calling asList in CityModifiers, line 10"
set Jb=Jb+1
set YV=iyw("when calling new_LinkedList in LinkedList, line 391")
call Ddw(YV,RV,"when calling add in LinkedList, line 393")
call Ddw(YV,TV,"when calling add in LinkedList, line 393")
set Jb=Jb-1
set lS[1]=YV
set GV=R2I(3)
set gV=R2I(10)
set Kb[Jb]="when calling asList in CityModifiers, line 11"
set Jb=Jb+1
set hV=iyw("when calling new_LinkedList in LinkedList, line 391")
call Ddw(hV,GV,"when calling add in LinkedList, line 393")
call Ddw(hV,gV,"when calling add in LinkedList, line 393")
set Jb=Jb-1
set lS[2]=hV
set FV=R2I(10)
set kV=R2I(20)
set Kb[Jb]="when calling asList in CityModifiers, line 12"
set Jb=Jb+1
set jV=iyw("when calling new_LinkedList in LinkedList, line 391")
call Ddw(jV,FV,"when calling add in LinkedList, line 393")
call Ddw(jV,kV,"when calling add in LinkedList, line 393")
set Jb=Jb-1
set lS[3]=jV
set bS=ntw("|cffff0000Just conquered|r","|cffc00000-PO -pop|r",240,1.0,0.0,1,-1.0,-30.0,false,"when calling new_CityModifierClass in CityModifiers, line 70")
set yS=ntw("|cfffffb00Just revolted|r","|cff00af00+PO|r|cffc00000 -pop|r",120.0,1.0,0.0,0,0.,30.0,false,"when calling new_CityModifierClass in CityModifiers, line 78")
set pS=ntw("|cff33ff00Population Boom|r","|cff33ff00++pop|r",120.0,0.01,0.,0,0.,0.,true,"when calling new_CityModifierClass in CityModifiers, line 86")
set eS=ntw("|cffff0000Plague outburst|r","|cffff0000--pop|r",240,0.03,0.,2,-1.,0.,true,"when calling new_CityModifierClass in CityModifiers, line 94")
set qS=ntw("|cffaf0000Big Fire|r","|cffc00000-pop|r",30,0.01,0.,2,-1.,0.,true,"when calling new_CityModifierClass in CityModifiers, line 102")
set aS=ntw("|cff15ff00More trade estabilished|r","|cff00af00+tax +pop|r",240,0.01,0.15,0,1.,0.,true,"when calling new_CityModifierClass in CityModifiers, line 110")
set nS=ntw("|cffff0000Massacred population|r","|cff00af00+PO |r|cffff0000--pop|r",30,0.05,0.,3,-1.,10.,true,"when calling new_CityModifierClass in CityModifiers, line 118")
set dS=ntw("|cff00ff00Prospering|r","|cff00af00+PO +pop +tax|r",240,0.01,0.10,1,1.,20.0,true,"when calling new_CityModifierClass in CityModifiers, line 126")
set fS=ntw("|cffff0000Sieged|r","|cffc00000-PO -pop|r",5,1.0,0.,0,-1.,-10.0,true,"when calling new_CityModifierClass in CityModifiers, line 134")
set RS=Tlw("when calling new_HashMap in CityModifiers, line 144")
set aV=RS
call Vnw(aV,0,bS,"when calling put in CityModifiers, line 151")
call Vnw(aV,1,yS,"when calling put in CityModifiers, line 152")
call Vnw(aV,2,pS,"when calling put in CityModifiers, line 153")
call Vnw(aV,3,eS,"when calling put in CityModifiers, line 154")
call Vnw(aV,4,qS,"when calling put in CityModifiers, line 155")
call Vnw(aV,5,aS,"when calling put in CityModifiers, line 156")
call Vnw(aV,6,nS,"when calling put in CityModifiers, line 157")
call Vnw(aV,7,dS,"when calling put in CityModifiers, line 158")
call Vnw(aV,8,fS,"when calling put in CityModifiers, line 159")
set Jb=Jb-1
return true
endfunction
function oYw takes nothing returns boolean
set Jb=0
return xV("CityModifiers, line 1")
endfunction
function pC takes nothing returns boolean
return true
endfunction
function pD takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651852,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651855,0)
endfunction
function pK takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function yP takes nothing returns boolean
if GetResearched()!=1378889797 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889797,true)!=2 then
return false
endif
return true
endfunction
function pP takes nothing returns boolean
if not yP() then
return false
endif
return true
endfunction
function pQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988566,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988562,0)
endfunction
function pY takes nothing returns nothing
local player oY=GetOwningPlayer(GetAttacker())
local player OY=GetOwningPlayer(GetAttacker())
local player lY
local player bY
local unit yY
set r[GetPlayerId(oY)+1]=r[GetPlayerId(OY)+1]+1
set lY=GetOwningPlayer(GetTriggerUnit())
set bY=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(lY)+1]=r[GetPlayerId(bY)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set yY=GetTriggerUnit()
call SetUnitState(yY,UNIT_STATE_LIFE,GetUnitState(yY,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set oY=null
set OY=null
set lY=null
set bY=null
set yY=null
endfunction
function DM takes string IM returns boolean
local integer PM
local timer AM
set Kb[Jb]=IM
set Jb=Jb+1
set Kb[Jb]="when calling alloc_Credits_CallbackPeriodic_line5 in Credits, line 5"
set Jb=Jb+1
if hO==0 then
if FO<32768 then
set FO=FO+1
set PM=FO
set kO[PM]=633
else
call S4("Out of memory: Could not create Credits_CallbackPeriodic_line5.","when calling error in Credits, line 5")
set PM=0
endif
else
set hO=hO-1
set PM=gO[hO]
set kO[PM]=633
endif
set Jb=Jb-1
set Kb[Jb]="when calling doPeriodically in Credits, line 5"
set Jb=Jb+1
set AM=eww("when calling getTimer in ClosureTimers, line 57")
set Kb[Jb]="when calling doPeriodically in ClosureTimers, line 57"
set Jb=Jb+1
call inw(PM,AM,600,"when calling start in ClosureTimers, line 45")
set Jb=Jb-1-1-1
set AM=null
return true
endfunction
function pYw takes nothing returns boolean
set Jb=0
return DM("Credits, line 1")
endfunction
function q4 takes nothing returns boolean
call CreateGroup()
return true
endfunction
function qA takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990322,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990105,0)
endfunction
function qC takes nothing returns boolean
return true
endfunction
function eE takes nothing returns boolean
if GetResearched()!=1378889800 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889800,true)!=2 then
return false
endif
return true
endfunction
function qE takes nothing returns boolean
if not eE() then
return false
endif
return true
endfunction
function eI takes nothing returns boolean
if GetResearched()!=1378890037 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890037,true)!=1 then
return false
endif
return true
endfunction
function qI takes nothing returns boolean
if not eI() then
return false
endif
return true
endfunction
function qU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989560,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989579,0)
endfunction
function eX takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990327 then
return false
endif
return true
endfunction
function qX takes nothing returns boolean
if not eX() then
return false
endif
return true
endfunction
function LM takes string HM returns boolean
local integer JM
local timer KM
set Kb[Jb]=HM
set Jb=Jb+1
set Kb[Jb]="when calling alloc_DateTime_CallbackPeriodic_line31 in DateTime, line 31"
set Jb=Jb+1
if hO==0 then
if FO<32768 then
set FO=FO+1
set JM=FO
set kO[JM]=634
else
call S4("Out of memory: Could not create DateTime_CallbackPeriodic_line31.","when calling error in DateTime, line 31")
set JM=0
endif
else
set hO=hO-1
set JM=gO[hO]
set kO[JM]=634
endif
set Jb=Jb-1
set Sb[JM]=120.0
set Kb[Jb]="when calling doPeriodically in DateTime, line 31"
set Jb=Jb+1
set KM=eww("when calling getTimer in ClosureTimers, line 57")
set Kb[Jb]="when calling doPeriodically in ClosureTimers, line 57"
set Jb=Jb+1
call inw(JM,KM,1.0,"when calling start in ClosureTimers, line 45")
set Jb=Jb-1-1-1
set KM=null
return true
endfunction
function qYw takes nothing returns boolean
set Jb=0
return LM("DateTime, line 1")
endfunction
function r0w takes nothing returns nothing
call u0w(GetFilterUnit())
endfunction
function rE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989082,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989072,0)
endfunction
function rI takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989825,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989817,0)
endfunction
function rJ takes nothing returns nothing
local integer CH=1
local integer VH=1747988787
local player BH=GetOwningPlayer(GetConstructedStructure())
local rect uJ=bj_mapInitialPlayableArea
local location wJ=Location(GetRectCenterX(uJ),GetRectCenterY(uJ))
local location NH=Location(GetLocationX(wJ)+100000000.00,GetLocationY(wJ)+1000000000.00)
local real MH=bj_UNIT_FACING
call GroupClear(bj_lastCreatedGroup)
loop
set CH=CH-1
exitwhen CH<0
call CreateUnitAtLocSaveLast(BH,VH,NH,MH)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
call UnitRemoveAbility(bj_lastCreatedUnit,1093677905)
call ShowUnit(bj_lastCreatedUnit,false)
set e[GetPlayerId(GetOwningPlayer(GetConstructedStructure()))+1]=true
set BH=null
set NH=null
set wJ=null
set uJ=null
endfunction
function rX takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function uZ takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function rZ takes nothing returns boolean
if not uZ() then
return false
endif
return true
endfunction
function ruw takes nothing returns boolean
set Do=CreateTrigger()
set Ho=CreateTrigger()
call TriggerAddCondition(Bc,Filter(Vf))
call TriggerAddAction(Bc,Bf)
return true
endfunction
function rv takes nothing returns boolean
if GetUnitTypeId(GetDyingUnit())!=1747988793 then
return false
endif
return true
endfunction
function rww takes nothing returns boolean
return true
endfunction
function rx takes nothing returns boolean
if GetUnitTypeId(GetDyingUnit())!=1747988792 then
return false
endif
return true
endfunction
function rH takes nothing returns boolean
if GetResearched()!=1378890052 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890052,true)!=2 then
return false
endif
return true
endfunction
function sH takes nothing returns boolean
if not rH() then
return false
endif
return true
endfunction
function rL takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990356 then
return false
endif
return true
endfunction
function sL takes nothing returns boolean
if not rL() then
return false
endif
return true
endfunction
function rW takes nothing returns boolean
if GetResearched()!=1378889802 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889802,true)!=1 then
return false
endif
return true
endfunction
function sW takes nothing returns boolean
if not rW() then
return false
endif
return true
endfunction
function sZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989812,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989811,0)
endfunction
function t0w takes nothing returns nothing
local unit s0w=GetTriggerUnit()
if GetUnitAbilityLevel(s0w,1095577649)==0 then
set Mc[wo]=s0w
set wo=wo+1
call TriggerExecute(Bc)
set wo=wo-1
endif
set s0w=null
endfunction
function sG takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989315 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function tG takes nothing returns boolean
if not sG() then
return false
endif
return true
endfunction
function tH takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990601,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990599,0)
endfunction
function tL takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function tW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651824,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651825,0)
endfunction
function tsw takes nothing returns boolean
return true
endfunction
function uA takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990324,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990325,0)
endfunction
function wE takes nothing returns boolean
if GetResearched()!=1378889801 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889801,true)!=2 then
return false
endif
return true
endfunction
function uE takes nothing returns boolean
if not wE() then
return false
endif
return true
endfunction
function wI takes nothing returns boolean
if GetResearched()!=1378889818 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889818,true)!=1 then
return false
endif
return true
endfunction
function uI takes nothing returns boolean
if not wI() then
return false
endif
return true
endfunction
function uU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651841,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651831,0)
endfunction
function wX takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747988530 then
return false
endif
return true
endfunction
function uX takes nothing returns boolean
if not wX() then
return false
endif
return true
endfunction
function uY takes nothing returns nothing
local player VT=GetOwningPlayer(GetAttacker())
local player BT=GetOwningPlayer(GetAttacker())
local player NT
local player MT
local unit wY
set r[GetPlayerId(VT)+1]=r[GetPlayerId(BT)+1]+1
set NT=GetOwningPlayer(GetTriggerUnit())
set MT=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(NT)+1]=r[GetPlayerId(MT)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set wY=GetTriggerUnit()
call SetUnitState(wY,UNIT_STATE_LIFE,GetUnitState(wY,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set VT=null
set BT=null
set NT=null
set MT=null
set wY=null
endfunction
function um takes nothing returns nothing
local player Hv=GetOwningPlayer(GetSpellTargetUnit())
local playerstate Jv=PLAYER_STATE_RESOURCE_GOLD
local playerstate Kv
local playerstate Lv
local player Xv
local force Cv
local location Vv
local real Bv
local real Nv
local player Mv
local force wm
if Jv==PLAYER_STATE_RESOURCE_GOLD then
set Kv=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(Hv,Kv,GetPlayerState(Hv,Kv)+500)
elseif Jv==PLAYER_STATE_RESOURCE_LUMBER then
set Lv=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(Hv,Lv,GetPlayerState(Hv,Lv)+500)
endif
call SetPlayerState(Hv,Jv,GetPlayerState(Hv,Jv)+500)
call RemoveUnit(GetSpellAbilityUnit())
set Xv=GetOwningPlayer(GetSpellTargetUnit())
set Cv=CreateForce()
call ForceAddPlayer(Cv,Xv)
if IsPlayerInForce(GetLocalPlayer(),Cv) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_1234")
endif
set y=GetUnitLoc(GetSpellTargetUnit())
set Mv=GetOwningPlayer(GetSpellTargetUnit())
set wm=CreateForce()
call ForceAddPlayer(wm,Mv)
set Vv=y
set Bv=GetLocationX(Vv)
set Nv=GetLocationY(Vv)
if IsPlayerInForce(GetLocalPlayer(),wm) then
call PingMinimap(Bv,Nv,2.00)
endif
call RemoveLocation(y)
set Hv=null
set Jv=null
set Kv=null
set Lv=null
set Xv=null
set Cv=null
set Vv=null
set Mv=null
set wm=null
endfunction
function uuw takes nothing returns boolean
return true
endfunction
function vE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651843,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651842,0)
endfunction
function vI takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989815,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989838,0)
endfunction
function vX takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function Kcw takes integer Dcw,string Hcw returns nothing
local integer Jcw
set Kb[Jb]=Hcw
set Jb=Jb+1
set Jcw=PS[Nl[Dcw]]
if Jcw==Dcw then
set PS[Nl[Dcw]]=Ml[Dcw]
elseif wb[Dcw]!=0 then
set Ml[wb[Dcw]]=Ml[Dcw]
endif
set wb[Ml[Dcw]]=wb[Dcw]
set Jcw=AS[Nl[Dcw]]
if Jcw==Dcw then
set AS[Nl[Dcw]]=Ml[Dcw]
elseif wb[Dcw]!=0 then
set Ml[wb[Dcw]]=Ml[Dcw]
endif
set wb[Ml[Dcw]]=wb[Dcw]
set Ml[Dcw]=0
set wb[Dcw]=0
set Kb[Jb]="when calling dealloc_EventListener in ClosureEvents, line 202"
set Jb=Jb+1
if oO[Dcw]==0 then
call S4("Double free: object of type EventListener","when calling error in ClosureEvents, line 98")
else
set iO[SO]=Dcw
set SO=SO+1
set oO[Dcw]=0
endif
set Jb=Jb-1-1
endfunction
function GB takes integer fB,string RB returns nothing
local integer TB
local integer YB
set Kb[Jb]=RB
set Jb=Jb+1
if fB>0 then
if AS[fB]!=0 then
set TB=AS[fB]
set AS[fB]=0
loop
exitwhen TB==0
set YB=TB
set TB=Ml[TB]
set Kb[Jb]="when calling dispatch_EventListener_destroyEventListener in ClosureEvents, line 282"
set Jb=Jb+1
if oO[YB]==0 then
if YB==0 then
call S4("Nullpointer exception when calling EventListener.EventListener","when calling error in ClosureEvents, line 98")
else
call S4("Called EventListener.EventListener on invalid object.","when calling error in ClosureEvents, line 98")
endif
endif
call Kcw(YB,"when calling destroyEventListener in ClosureEvents, line 98")
set Jb=Jb-1
endloop
endif
endif
set Jb=Jb-1
endfunction
function Ccw takes integer Lcw,string Xcw returns nothing
set Kb[Jb]=Xcw
set Jb=Jb+1
if tb[Lcw]!=null then
if udw(IS,GetHandleId(tb[Lcw]),"when calling get in ClosureEvents, line 60")==Lcw then
call Vnw(IS,GetHandleId(tb[Lcw]),ub[Lcw],"when calling put in ClosureEvents, line 62")
elseif rb[Lcw]!=0 then
set ub[rb[Lcw]]=ub[Lcw]
endif
elseif udw(US,sb[Lcw],"when calling get in ClosureEvents, line 66")==Lcw then
call Vnw(US,sb[Lcw],ub[Lcw],"when calling put in ClosureEvents, line 68")
elseif rb[Lcw]!=0 then
set ub[rb[Lcw]]=ub[Lcw]
endif
set rb[ub[Lcw]]=rb[Lcw]
set ub[Lcw]=0
set rb[Lcw]=0
set Jb=Jb-1
endfunction
function Zaw takes integer Waw,string Eaw returns nothing
set Kb[Jb]=Eaw
set Jb=Jb+1
if xO[Waw]==0 then
if Waw==0 then
call S4("Nullpointer exception when calling OnCastListener.OnCastListener","when calling error in ClosureEvents, line 50")
else
call S4("Called OnCastListener.OnCastListener on invalid object.","when calling error in ClosureEvents, line 50")
endif
endif
set Kb[Jb]="when calling destroyOnCastListener in ClosureEvents, line 50"
set Jb=Jb+1
call Ccw(Waw,"when calling OnCastListener_onDestroy in ClosureEvents, line 58")
set Kb[Jb]="when calling dealloc_OnCastListener in ClosureEvents, line 58"
set Jb=Jb+1
if xO[Waw]==0 then
call S4("Double free: object of type OnCastListener","when calling error in ClosureEvents, line 50")
else
set jO=jO+1
set xO[Waw]=0
endif
set Jb=Jb-1-1-1
endfunction
function dB takes unit yB,string pB returns nothing
local integer eB
local integer qB
local integer aB
local integer nB
set Kb[Jb]=pB
set Jb=Jb+1
call GB(GetUnitUserData(yB),"when calling unregisterEvents in ClosureEvents, line 258")
if Jnw(IS,GetHandleId(yB),"when calling has in ClosureEvents, line 259") then
set eB=udw(IS,GetHandleId(yB),"when calling get in ClosureEvents, line 260")
call idw(IS,GetHandleId(yB),"when calling remove in ClosureEvents, line 261")
loop
exitwhen eB==0
set qB=eB
set eB=ub[eB]
call Zaw(qB,"when calling dispatch_OnCastListener_destroyOnCastListener in ClosureEvents, line 265")
endloop
endif
if Jnw(IS,GetHandleId(yB),"when calling has in ClosureEvents, line 266") then
set aB=udw(IS,GetHandleId(yB),"when calling get in ClosureEvents, line 267")
loop
exitwhen aB==0
set nB=aB
set aB=ub[aB]
call Zaw(nB,"when calling dispatch_OnCastListener_destroyOnCastListener in ClosureEvents, line 271")
endloop
endif
set Jb=Jb-1
endfunction
function vYw takes nothing returns nothing
set Jb=0
set Kb[Jb]="ClosureEvents, line 288"
set Jb=Jb+1
call dB(Jo[Ko-1],"when calling unregisterEventsForUnit in ClosureEvents, line 288")
set Jb=Jb-1
endfunction
function xZ takes nothing returns boolean
if GetResearched()!=1378889807 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889807,true)!=2 then
return false
endif
return true
endfunction
function vZ takes nothing returns boolean
if not xZ() then
return false
endif
return true
endfunction
function jk takes nothing returns boolean
if GetUnitTypeId(GetSpellTargetUnit())==1747988787 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747990361 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747989831 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747989040 then
return true
endif
return false
endfunction
function xk takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988792 then
return false
endif
if not jk() then
return false
endif
return true
endfunction
function vk takes nothing returns boolean
if not xk() then
return false
endif
return true
endfunction
function MP takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function wA takes nothing returns boolean
if not MP() then
return false
endif
return true
endfunction
function wC takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function wP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989826,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989828,0)
endfunction
function MZ takes nothing returns boolean
if GetResearched()!=1378889809 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889809,true)!=1 then
return false
endif
return true
endfunction
function wU takes nothing returns boolean
if not MZ() then
return false
endif
return true
endfunction
function gC takes string YC returns boolean
local integer GC
set Kb[Jb]=YC
set Jb=Jb+1
set OS=Tlw("when calling new_HashMap in CityBaseTaxes, line 5")
set GC=OS
set Kb[Jb]="when calling saveInt in CityBaseTaxes, line 9"
set Jb=Jb+1
if HO[GC]==0 then
if GC==0 then
call S4("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call S4("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Zo,GC,1747988529,20)
set Jb=Jb-1
set Kb[Jb]="when calling saveInt in CityBaseTaxes, line 10"
set Jb=Jb+1
if HO[GC]==0 then
if GC==0 then
call S4("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call S4("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Zo,GC,1747988530,50)
set Jb=Jb-1
set Kb[Jb]="when calling saveInt in CityBaseTaxes, line 11"
set Jb=Jb+1
if HO[GC]==0 then
if GC==0 then
call S4("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call S4("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Zo,GC,1747988531,120)
set Jb=Jb-1
set Kb[Jb]="when calling saveInt in CityBaseTaxes, line 12"
set Jb=Jb+1
if HO[GC]==0 then
if GC==0 then
call S4("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call S4("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Zo,GC,1747990326,20)
set Jb=Jb-1
set Kb[Jb]="when calling saveInt in CityBaseTaxes, line 13"
set Jb=Jb+1
if HO[GC]==0 then
if GC==0 then
call S4("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call S4("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Zo,GC,1747990327,50)
set Jb=Jb-1
set Kb[Jb]="when calling saveInt in CityBaseTaxes, line 14"
set Jb=Jb+1
if HO[GC]==0 then
if GC==0 then
call S4("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call S4("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Zo,GC,1747990328,120)
set Jb=Jb-1
set Kb[Jb]="when calling saveInt in CityBaseTaxes, line 15"
set Jb=Jb+1
if HO[GC]==0 then
if GC==0 then
call S4("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call S4("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Zo,GC,1747990084,20)
set Jb=Jb-1
set Kb[Jb]="when calling saveInt in CityBaseTaxes, line 16"
set Jb=Jb+1
if HO[GC]==0 then
if GC==0 then
call S4("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call S4("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Zo,GC,1747990087,50)
set Jb=Jb-1
set Kb[Jb]="when calling saveInt in CityBaseTaxes, line 17"
set Jb=Jb+1
if HO[GC]==0 then
if GC==0 then
call S4("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call S4("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Zo,GC,1747990085,120)
set Jb=Jb-1
set Kb[Jb]="when calling saveInt in CityBaseTaxes, line 18"
set Jb=Jb+1
if HO[GC]==0 then
if GC==0 then
call S4("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call S4("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Zo,GC,1747989590,20)
set Jb=Jb-1
set Kb[Jb]="when calling saveInt in CityBaseTaxes, line 19"
set Jb=Jb+1
if HO[GC]==0 then
if GC==0 then
call S4("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call S4("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Zo,GC,1747989591,50)
set Jb=Jb-1
set Kb[Jb]="when calling saveInt in CityBaseTaxes, line 20"
set Jb=Jb+1
if HO[GC]==0 then
if GC==0 then
call S4("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call S4("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Zo,GC,1747989592,120)
set Jb=Jb-1
set Kb[Jb]="when calling saveInt in CityBaseTaxes, line 22"
set Jb=Jb+1
if HO[GC]==0 then
if GC==0 then
call S4("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call S4("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Zo,GC,1747989555,5)
set Jb=Jb-1
set Kb[Jb]="when calling saveInt in CityBaseTaxes, line 23"
set Jb=Jb+1
if HO[GC]==0 then
if GC==0 then
call S4("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call S4("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Zo,GC,1747989297,10)
set Jb=Jb-1
set Kb[Jb]="when calling saveInt in CityBaseTaxes, line 24"
set Jb=Jb+1
if HO[GC]==0 then
if GC==0 then
call S4("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call S4("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Zo,GC,1747989325,30)
set Jb=Jb-1-1
return true
endfunction
function wYw takes nothing returns boolean
set Jb=0
return gC("CityBaseTaxes, line 1")
endfunction
function wuw takes nothing returns boolean
return true
endfunction
function xA takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990584,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990593,0)
endfunction
function jE takes nothing returns boolean
if GetResearched()!=1378889812 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889812,true)!=1 then
return false
endif
return true
endfunction
function xE takes nothing returns boolean
if not jE() then
return false
endif
return true
endfunction
function xF takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989078 then
return false
endif
return true
endfunction
function jI takes nothing returns boolean
if GetResearched()!=1378890034 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890034,true)!=1 then
return false
endif
return true
endfunction
function xI takes nothing returns boolean
if not jI() then
return false
endif
return true
endfunction
function xJ takes nothing returns nothing
local integer YJ=1
local integer GJ=1752461175
local player gJ=GetOwningPlayer(GetTriggerUnit())
local rect jJ=bj_mapInitialPlayableArea
local location kJ=Location(GetRectCenterX(jJ),GetRectCenterY(jJ))
local location hJ=Location(GetLocationX(kJ)+100000000.00,GetLocationY(kJ)+100000000.00)
local real FJ=bj_UNIT_FACING
call GroupClear(bj_lastCreatedGroup)
loop
set YJ=YJ-1
exitwhen YJ<0
call CreateUnitAtLocSaveLast(gJ,GJ,hJ,FJ)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
call ShowUnit(bj_lastCreatedUnit,false)
set gJ=null
set hJ=null
set kJ=null
set jJ=null
endfunction
function xU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989574,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989573,0)
endfunction
function jX takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989592 then
return false
endif
return true
endfunction
function xX takes nothing returns boolean
if not jX() then
return false
endif
return true
endfunction
function Few takes integer Gew,integer gew returns nothing
local integer hew
if Eb[Gew]!=-1 then
call ForceRemovePlayer(yc[Eb[Gew]],Zb[Gew])
endif
set Eb[Gew]=gew
call ForceAddPlayer(yc[Eb[Gew]],Zb[Gew])
call SetPlayerTechMaxAllowed(Zb[Gew],1747990087,0)
call SetPlayerTechMaxAllowed(Zb[Gew],1747990088,0)
call SetPlayerTechMaxAllowed(Zb[Gew],1747989558,0)
call SetPlayerTechMaxAllowed(Zb[Gew],1747989575,0)
call SetPlayerTechMaxAllowed(Zb[Gew],1747990339,0)
call SetPlayerTechMaxAllowed(Zb[Gew],1747990340,0)
call SetPlayerTechMaxAllowed(Zb[Gew],1747988528,0)
call SetPlayerTechMaxAllowed(Zb[Gew],1747988532,0)
set hew=Eb[Gew]
if hew==0 then
call SetPlayerTechMaxAllowed(Zb[Gew],1747988528,-1)
call SetPlayerTechMaxAllowed(Zb[Gew],1747988532,-1)
elseif hew==1 then
call SetPlayerTechMaxAllowed(Zb[Gew],1747990339,-1)
call SetPlayerTechMaxAllowed(Zb[Gew],1747990340,-1)
elseif hew==2 then
call SetPlayerTechMaxAllowed(Zb[Gew],1747990087,-1)
call SetPlayerTechMaxAllowed(Zb[Gew],1747990088,-1)
elseif hew==3 then
call SetPlayerTechMaxAllowed(Zb[Gew],1747989558,-1)
call SetPlayerTechMaxAllowed(Zb[Gew],1747989575,-1)
endif
endfunction
function Mtw takes integer Ctw,integer Vtw,string Btw returns nothing
local integer Ntw
set Kb[Jb]=Btw
set Jb=Jb+1
set Ntw=vl[Ctw]
if Ntw==0 then
set Kb[Jb]="when calling replaceCity in City, line 206"
set Jb=Jb+1
if qO[Ctw]==0 then
if Ctw==0 then
call S4("Nullpointer exception when calling City.replaceCity","when calling error in City, line 182")
else
call S4("Called City.replaceCity on invalid object.","when calling error in City, line 182")
endif
endif
call Atw(Ctw,1747988529,"when calling replaceCity in City, line 182")
set Jb=Jb-1
elseif Ntw==3 then
set Kb[Jb]="when calling replaceCity in City, line 208"
set Jb=Jb+1
if qO[Ctw]==0 then
if Ctw==0 then
call S4("Nullpointer exception when calling City.replaceCity","when calling error in City, line 182")
else
call S4("Called City.replaceCity on invalid object.","when calling error in City, line 182")
endif
endif
call Atw(Ctw,1747989590,"when calling replaceCity in City, line 182")
set Jb=Jb-1
elseif Ntw==1 then
set Kb[Jb]="when calling replaceCity in City, line 210"
set Jb=Jb+1
if qO[Ctw]==0 then
if Ctw==0 then
call S4("Nullpointer exception when calling City.replaceCity","when calling error in City, line 182")
else
call S4("Called City.replaceCity on invalid object.","when calling error in City, line 182")
endif
endif
call Atw(Ctw,1747990326,"when calling replaceCity in City, line 182")
set Jb=Jb-1
elseif Ntw==2 then
set Kb[Jb]="when calling replaceCity in City, line 212"
set Jb=Jb+1
if qO[Ctw]==0 then
if Ctw==0 then
call S4("Nullpointer exception when calling City.replaceCity","when calling error in City, line 182")
else
call S4("Called City.replaceCity on invalid object.","when calling error in City, line 182")
endif
endif
call Atw(Ctw,1747990084,"when calling replaceCity in City, line 182")
set Jb=Jb-1
endif
set Kb[Jb]="when calling changeOwner in City, line 213"
set Jb=Jb+1
if qO[Ctw]==0 then
if Ctw==0 then
call S4("Nullpointer exception when calling City.changeOwner","when calling error in City, line 187")
else
call S4("Called City.changeOwner on invalid object.","when calling error in City, line 187")
endif
endif
call Xtw(Ctw,Vtw,"when calling changeOwner in City, line 187")
set Jb=Jb-1-1
endfunction
function eV takes string MC returns nothing
local integer wV
local integer uV
local integer rV
local integer sV
local integer tV
local integer iV
local integer SV
local integer cV
local integer oV
local integer OV
local player lV
local location bV
local real yV
local integer pV
set Kb[Jb]=MC
set Jb=Jb+1
set wV=CV(GetSpellTargetUnit(),"when calling getCityId in CityManage, line 18")
set sV=xS[wV]
set Kb[Jb]="when calling getCityForceId in CityManage, line 19"
set Jb=Jb+1
if qO[sV]==0 then
if sV==0 then
call S4("Nullpointer exception when calling City.getCityForceId","when calling error in City, line 179")
else
call S4("Called City.getCityForceId on invalid object.","when calling error in City, line 179")
endif
endif
set tV=vl[sV]
set Jb=Jb-1
set uV=GetPlayerId(GetOwningPlayer(GetSpellAbilityUnit()))
set iV=uo[uV]
set Kb[Jb]="when calling changeForce in CityManage, line 21"
set Jb=Jb+1
if ll[iV]==0 then
if iV==0 then
call S4("Nullpointer exception when calling PlayerStats.changeForce","when calling error in PlayerStats, line 125")
else
call S4("Called PlayerStats.changeForce on invalid object.","when calling error in PlayerStats, line 125")
endif
endif
call Few(iV,tV)
set Jb=Jb-1
set SV=Co[tV]
set Kb[Jb]="when calling iterator in CityManage, line 24"
set Jb=Jb+1
set cV=Abw(SV,"when calling new_LLIterator in LinkedList, line 165")
set Jb=Jb-1
set rV=cV
loop
exitwhen fb[Tb[rV]]==Rb[rV]
set Tb[rV]=fb[Tb[rV]]
set oV=1
set OV=nb[Tb[rV]]
set lV=ro[uV]
set bV=GetSpellTargetLoc()
set yV=0.
call GroupClear(bj_lastCreatedGroup)
loop
set oV=oV-1
exitwhen oV<0
call CreateUnitAtLocSaveLast(lV,OV,bV,yV)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
endloop
set Kb[Jb]="when calling close in CityManage, line 24"
set Jb=Jb+1
if Gb[rV]then
call bdw(rV,"when calling dispatch_LLIterator_destroyLLIterator in LinkedList, line 450")
endif
set Jb=Jb-1
set pV=xS[wV]
set Kb[Jb]="when calling settleCity in CityManage, line 27"
set Jb=Jb+1
if qO[pV]==0 then
if pV==0 then
call S4("Nullpointer exception when calling City.settleCity","when calling error in City, line 203")
else
call S4("Called City.settleCity on invalid object.","when calling error in City, line 203")
endif
endif
call Mtw(pV,uV,"when calling settleCity in City, line 203")
set Jb=Jb-1
call KillUnit(GetSpellAbilityUnit())
set Jb=Jb-1
set lV=null
set bV=null
endfunction
function xYw takes nothing returns nothing
set Jb=0
call eV("CityManage, line 16")
endfunction
function xg takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989047 then
return false
endif
return true
endfunction
function xh takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747990089 then
return false
endif
return true
endfunction
function xj takes nothing returns nothing
local player dj=GetOwningPlayer(GetSpellTargetUnit())
local playerstate fj=PLAYER_STATE_RESOURCE_GOLD
local playerstate Rj
local playerstate Tj
local player Yj
local force Gj
local location gj
local real hj
local real Fj
local player kj
local force jj
if fj==PLAYER_STATE_RESOURCE_GOLD then
set Rj=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(dj,Rj,GetPlayerState(dj,Rj)+250)
elseif fj==PLAYER_STATE_RESOURCE_LUMBER then
set Tj=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(dj,Tj,GetPlayerState(dj,Tj)+250)
endif
call SetPlayerState(dj,fj,GetPlayerState(dj,fj)+250)
call RemoveUnit(GetSpellAbilityUnit())
set Yj=GetOwningPlayer(GetSpellTargetUnit())
set Gj=CreateForce()
call ForceAddPlayer(Gj,Yj)
if IsPlayerInForce(GetLocalPlayer(),Gj) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_1230")
endif
set y=GetUnitLoc(GetSpellTargetUnit())
set kj=GetOwningPlayer(GetSpellTargetUnit())
set jj=CreateForce()
call ForceAddPlayer(jj,kj)
set gj=y
set hj=GetLocationX(gj)
set Fj=GetLocationY(gj)
if IsPlayerInForce(GetLocalPlayer(),jj) then
call PingMinimap(hj,Fj,2.00)
endif
call RemoveLocation(y)
set dj=null
set fj=null
set Rj=null
set Tj=null
set Yj=null
set Gj=null
set gj=null
set kj=null
set jj=null
endfunction
function yC takes nothing returns boolean
return true
endfunction
function bD takes nothing returns boolean
if GetResearched()!=1378890053 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890053,true)!=2 then
return false
endif
return true
endfunction
function yD takes nothing returns boolean
if not bD() then
return false
endif
return true
endfunction
function yF takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747990073 then
return false
endif
return true
endfunction
function bK takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989325 then
return false
endif
return true
endfunction
function yK takes nothing returns boolean
if not bK() then
return false
endif
return true
endfunction
function bQ takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function yQ takes nothing returns boolean
if not bQ() then
return false
endif
return true
endfunction
function RTw takes integer XRw,integer CRw,integer VRw,integer BRw,integer NRw,integer MRw,integer wTw,integer uTw,integer rTw,integer sTw,integer tTw,integer iTw,integer STw,integer cTw,integer oTw,integer OTw,integer lTw,integer bTw,integer yTw,integer pTw,integer eTw,integer qTw,integer aTw,integer nTw,string dTw returns integer
local integer fTw
set Kb[Jb]=dTw
set Jb=Jb+1
set fTw=iyw("when calling new_LinkedList in LinkedList, line 391")
call Ddw(fTw,XRw,"when calling add in LinkedList, line 393")
call Ddw(fTw,CRw,"when calling add in LinkedList, line 393")
call Ddw(fTw,VRw,"when calling add in LinkedList, line 393")
call Ddw(fTw,BRw,"when calling add in LinkedList, line 393")
call Ddw(fTw,NRw,"when calling add in LinkedList, line 393")
call Ddw(fTw,MRw,"when calling add in LinkedList, line 393")
call Ddw(fTw,wTw,"when calling add in LinkedList, line 393")
call Ddw(fTw,uTw,"when calling add in LinkedList, line 393")
call Ddw(fTw,rTw,"when calling add in LinkedList, line 393")
call Ddw(fTw,sTw,"when calling add in LinkedList, line 393")
call Ddw(fTw,tTw,"when calling add in LinkedList, line 393")
call Ddw(fTw,iTw,"when calling add in LinkedList, line 393")
call Ddw(fTw,STw,"when calling add in LinkedList, line 393")
call Ddw(fTw,cTw,"when calling add in LinkedList, line 393")
call Ddw(fTw,oTw,"when calling add in LinkedList, line 393")
call Ddw(fTw,OTw,"when calling add in LinkedList, line 393")
call Ddw(fTw,lTw,"when calling add in LinkedList, line 393")
call Ddw(fTw,bTw,"when calling add in LinkedList, line 393")
call Ddw(fTw,yTw,"when calling add in LinkedList, line 393")
call Ddw(fTw,pTw,"when calling add in LinkedList, line 393")
call Ddw(fTw,eTw,"when calling add in LinkedList, line 393")
call Ddw(fTw,qTw,"when calling add in LinkedList, line 393")
call Ddw(fTw,aTw,"when calling add in LinkedList, line 393")
call Ddw(fTw,nTw,"when calling add in LinkedList, line 393")
set Jb=Jb-1
return fTw
endfunction
function sbw takes string ubw returns integer
local integer rbw
set Kb[Jb]=ubw
set Jb=Jb+1
set Kb[Jb]="when calling alloc_HashSet in HashSet, line 4"
set Jb=Jb+1
if ZO==0 then
if UO<32768 then
set UO=UO+1
set rbw=UO
set IO[rbw]=692
else
call S4("Out of memory: Could not create HashSet.","when calling error in HashSet, line 5")
set rbw=0
endif
else
set ZO=ZO-1
set rbw=EO[ZO]
set IO[rbw]=692
endif
set Jb=Jb-1
set bb[rbw]=0
set Jb=Jb-1
return rbw
endfunction
function Trw takes string drw returns boolean
local integer frw
local integer Rrw
set Kb[Jb]=drw
set Jb=Jb+1
set frw=0
set Rrw=23
loop
exitwhen frw>Rrw
set sO[frw]=sbw("when calling new_HashSet in VoteKick, line 10")
set frw=frw+1
endloop
set tO=RTw(xww("red","when calling stringToIndex in VoteKick, line 13"),xww("blue","when calling stringToIndex in VoteKick, line 14"),xww("teal","when calling stringToIndex in VoteKick, line 15"),xww("purple","when calling stringToIndex in VoteKick, line 16"),xww("yellow","when calling stringToIndex in VoteKick, line 17"),xww("orange","when calling stringToIndex in VoteKick, line 18"),xww("green","when calling stringToIndex in VoteKick, line 19"),xww("pink","when calling stringToIndex in VoteKick, line 20"),xww("grey","when calling stringToIndex in VoteKick, line 21"),xww("light blue","when calling stringToIndex in VoteKick, line 22"),xww("dark green","when calling stringToIndex in VoteKick, line 23"),xww("brown","when calling stringToIndex in VoteKick, line 24"),xww("maroon","when calling stringToIndex in VoteKick, line 25"),xww("navy","when calling stringToIndex in VoteKick, line 26"),xww("turquoise","when calling stringToIndex in VoteKick, line 27"),xww("violet","when calling stringToIndex in VoteKick, line 28"),xww("wheat","when calling stringToIndex in VoteKick, line 29"),xww("peach","when calling stringToIndex in VoteKick, line 30"),xww("mint","when calling stringToIndex in VoteKick, line 31"),xww("lavender","when calling stringToIndex in VoteKick, line 32"),xww("coal","when calling stringToIndex in VoteKick, line 33"),xww("snow","when calling stringToIndex in VoteKick, line 34"),xww("emerald","when calling stringToIndex in VoteKick, line 35"),xww("peanut","when calling stringToIndex in VoteKick, line 36"),"when calling asList in VoteKick, line 12")
set Jb=Jb-1
return true
endfunction
function yYw takes nothing returns boolean
set Jb=0
return Trw("VoteKick, line 1")
endfunction
function yh takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989046 then
return false
endif
return true
endfunction
function qR takes nothing returns nothing
set w=null
set u=null
set s=null
set t=null
set i=null
set S=null
set c=null
set o=null
set O=null
set l=null
set b=null
set y=null
set q=null
set a=null
set n=null
set d=null
set f=null
set R=null
set T=null
set Y=null
set G=null
set g=null
set h=null
set F=null
set k=null
set j=null
set x=null
set v=null
set m=null
set Q=null
set W=null
set E=null
set Z=null
set U=null
set I=null
set P=null
set A=null
set D=null
set H=null
set J=null
set K=null
set L=null
set X=null
set C=null
set V=null
set B=null
set N=null
set M=null
set ww=null
set uw=null
set rw=null
set sw=null
set tw=null
set iw=null
set Sw=null
set cw=null
set ow=null
set Ow=null
set lw=null
set bw=null
set yw=null
set pw=null
set ew=null
set qw=null
set aw=null
set nw=null
set dw=null
set fw=null
set Rw=null
set Tw=null
set Yw=null
set Gw=null
set gw=null
set hw=null
set Fw=null
set kw=null
set jw=null
set xw=null
set vw=null
set mw=null
set Qw=null
set Ww=null
set Ew=null
set Zw=null
set Uw=null
set Iw=null
set Pw=null
set Aw=null
set Dw=null
set Hw=null
set Jw=null
set Kw=null
set Lw=null
set Xw=null
set Cw=null
set Vw=null
set Bw=null
set Nw=null
set Mw=null
set wu=null
set uu=null
set ru=null
set su=null
set tu=null
set iu=null
set Su=null
set cu=null
set ou=null
set Ou=null
set lu=null
set bu=null
set yu=null
set pu=null
set eu=null
set qu=null
set au=null
set nu=null
set du=null
set fu=null
set Ru=null
set Tu=null
set Yu=null
set Gu=null
set gu=null
set hu=null
set Fu=null
set ku=null
set ju=null
set xu=null
set vu=null
set mu=null
set Qu=null
set Wu=null
set Eu=null
set Zu=null
set Uu=null
set Iu=null
set Pu=null
set Au=null
set Du=null
set Hu=null
set Ju=null
set Ku=null
set Lu=null
set Xu=null
set Cu=null
set Vu=null
set Bu=null
set Nu=null
set Mu=null
set wr=null
set ur=null
set rr=null
set sr=null
set tr=null
set ir=null
set Sr=null
set cr=null
set lr=null
set br=null
set yr=null
set pr=null
set er=null
set qr=null
set ar=null
set nr=null
set dr=null
set fr=null
set Rr=null
set Tr=null
set Yr=null
set Gr=null
set gr=null
set hr=null
set Fr=null
set kr=null
set jr=null
set xr=null
set vr=null
set mr=null
set Qr=null
set Wr=null
set Er=null
set Zr=null
set Ur=null
set Ir=null
set Pr=null
set Ar=null
set Dr=null
set Hr=null
set Jr=null
set Kr=null
set Lr=null
set Xr=null
set Cr=null
set Vr=null
set Br=null
set Nr=null
set Mr=null
set ws=null
set us=null
set rs=null
set ss=null
set ts=null
set is=null
set Ss=null
set cs=null
set os=null
set Os=null
set ls=null
set bs=null
set ys=null
set ps=null
set es=null
set qs=null
set as=null
set ns=null
set ds=null
set fs=null
set Rs=null
set Ts=null
set Ys=null
set Gs=null
set gs=null
set hs=null
set Fs=null
set ks=null
set js=null
set xs=null
set vs=null
set ms=null
set Qs=null
set Ws=null
set Es=null
set Zs=null
set Us=null
set Is=null
set Ps=null
set As=null
set Ds=null
set Hs=null
set Js=null
set Ks=null
set Ls=null
set Xs=null
set Cs=null
set Vs=null
set Bs=null
set Ns=null
set Ms=null
set wt=null
set ut=null
set rt=null
set st=null
set tt=null
set St=null
set ct=null
set ot=null
set Ot=null
set lt=null
set bt=null
set yt=null
set pt=null
set et=null
set qt=null
set at=null
set nt=null
set dt=null
set ft=null
set Rt=null
set Tt=null
set Yt=null
set Gt=null
set gt=null
set ht=null
set Ft=null
set kt=null
set jt=null
set xt=null
set vt=null
set mt=null
set Qt=null
set Wt=null
set Et=null
set Zt=null
set Ut=null
set It=null
set Pt=null
set At=null
set Dt=null
set Ht=null
set Jt=null
set Kt=null
set Lt=null
set Xt=null
set Ct=null
set Vt=null
set Bt=null
set Nt=null
set Mt=null
set wi=null
set ui=null
set ri=null
set si=null
set ti=null
set ii=null
set Si=null
set ci=null
set oi=null
set Oi=null
set li=null
set bi=null
set yi=null
set pi=null
set ei=null
set qi=null
set ai=null
set ni=null
set di=null
set fi=null
set Ri=null
set Ti=null
set Yi=null
set Gi=null
set gi=null
set hi=null
set Fi=null
set ki=null
set ji=null
set xi=null
set vi=null
set mi=null
set Qi=null
set Wi=null
set Ei=null
set Zi=null
set Ui=null
set Ii=null
set Pi=null
set Ai=null
set Di=null
set Hi=null
set Ji=null
set Ki=null
set Li=null
set Xi=null
set Ci=null
set Vi=null
set Bi=null
set Ni=null
set Mi=null
set wS=null
set uS=null
set rS=null
set sS=null
set tS=null
set iS=null
set SS=null
set Ry=function UT
set Ty=function DT
set Yy=function KT
set Gy=function CT
set gy=function uY
set hy=function cY
set Fy=function pY
set ky=function fY
set jy=function hY
set xy=function mY
set vy=function IY
set my=function KY
set Qy=function NY
set Wy=function tG
set Ey=function lG
set Zy=function aG
set Uy=function YG
set Iy=function jG
set Py=function EG
set Ay=function DG
set Dy=function KG
set Hy=function BG
set Jy=function NG
set Ky=function bg
set Ly=function gg
set Xy=function mg
set Cy=function xg
set Vy=function Hg
set By=function Bg
set Ny=function Cg
set My=function ch
set wp=function eh
set up=function yh
set rp=function gh
set sp=function mh
set tp=function xh
set ip=function Hh
set Sp=function Bh
set cp=function Ch
set op=function cF
set Op=function eF
set lp=function yF
set bp=function gF
set yp=function mF
set pp=function xF
set ep=function HF
set qp=function BF
set ap=function CF
set np=function ck
set dp=function ek
set fp=function dk
set Rp=function Yk
set Tp=function Fk
set Yp=function vk
set Gp=function Jk
set gp=function Nk
set hp=function lj
set Fp=function nj
set kp=function xj
set jp=function Uj
set xp=function Bj
set vp=function rx
set mp=function ex
set Qp=function fx
set Wp=function mx
set Ep=function Ux
set Zp=function Bx
set Up=function rv
set Ip=function ev
set Pp=function Tv
set Ap=function Wv
set Dp=function Dv
set Hp=function um
set Jp=function cm
set Kp=function fm
set Lp=function gm
set Xp=function Um
set Cp=function Jm
set Vp=function Km
set Bp=function Nm
set Np=function Mm
set Mp=function iQ
set we=function SQ
set ue=function yQ
set re=function pQ
set se=function fQ
set te=function RQ
set ie=function FQ
set Se=function kQ
set ce=function WQ
set oe=function EQ
set Oe=function DQ
set le=function HQ
set be=function VQ
set ye=function BQ
set pe=function sW
set ee=function tW
set qe=function lW
set ae=function bW
set ne=function nW
set de=function dW
set fe=function gW
set Re=function hW
set Te=function mW
set Ye=function QW
set Ge=function PW
set ge=function AW
set he=function XW
set Fe=function CW
set ke=function uE
set je=function rE
set xe=function oE
set ve=function OE
set me=function qE
set Qe=function aE
set We=function YE
set Ee=function GE
set Ze=function xE
set Ue=function vE
set Ie=function UE
set Pe=function IE
set Ae=function JE
set De=function KE
set He=function CE
set Je=function VE
set Ke=function rZ
set Le=function sZ
set Xe=function OZ
set Ce=function lZ
set Ve=function aZ
set Be=function nZ
set Ne=function GZ
set Me=function gZ
set wq=function vZ
set uq=function mZ
set rq=function IZ
set sq=function PZ
set tq=function LZ
set iq=function XZ
set Sq=function wU
set cq=function uU
set oq=function cU
set Oq=function oU
set lq=function eU
set bq=function qU
set yq=function TU
set pq=function YU
set eq=function jU
set qq=function xU
set aq=function ZU
set nq=function UU
set dq=function JU
set fq=function KU
set Rq=function BU
set Tq=function NU
set Yq=function uI
set Gq=function rI
set gq=function oI
set hq=function OI
set Fq=function qI
set kq=function aI
set jq=function YI
set xq=function GI
set vq=function xI
set mq=function vI
set Qq=function UI
set Wq=function II
set Eq=function KI
set Zq=function LI
set Uq=function MI
set Iq=function wP
set Pq=function SP
set Aq=function cP
set Dq=function pP
set Hq=function eP
set Jq=function RP
set Kq=function TP
set Lq=function kP
set Xq=function jP
set Cq=function EP
set Vq=function ZP
set Bq=function HP
set Nq=function JP
set Mq=function VP
set wa=function BP
set ua=function wA
set ra=function uA
set sa=function cA
set ta=function oA
set ia=function eA
set Sa=function qA
set ca=function TA
set oa=function YA
set Oa=function jA
set la=function xA
set ba=function ZA
set ya=function UA
set pa=function JA
set ea=function KA
set qa=function NA
set aa=function MA
set na=function iD
set da=function SD
set fa=function yD
set Ra=function pD
set Ta=function fD
set Ya=function RD
set Ga=function FD
set ga=function kD
set ha=function WD
set Fa=function ED
set ka=function DD
set ja=function HD
set xa=function VD
set va=function BD
set ma=function sH
set Qa=function tH
set Wa=function lH
set Ea=function bH
set Za=function nH
set Ua=function dH
set Ia=function GH
set Pa=function gH
set Aa=function kH
set Da=function jH
set Ha=function FH
set Ja=function EH
set Ka=function AH
set La=function XH
set Xa=function rJ
set Ca=function oJ
set Va=function aJ
set Ba=function TJ
set Na=function xJ
set Ma=function ZJ
set wn=function KJ
set un=function NJ
set rn=function SK
set sn=function yK
set tn=function pK
set Sn=function fK
set cn=function RK
set on=function FK
set On=function kK
set ln=function WK
set bn=function EK
set yn=function DK
set pn=function HK
set en=function VK
set qn=function BK
set an=function sL
set nn=function tL
set dn=function lL
set fn=function bL
set Rn=function nL
set Tn=function dL
set Yn=function gL
set Gn=function hL
set gn=function mL
set hn=function QL
set Fn=function PL
set kn=function AL
set jn=function XL
set xn=function CL
set vn=function uX
set mn=function rX
set Qn=function oX
set Wn=function OX
set En=function qX
set Zn=function aX
set Un=function YX
set In=function GX
set Pn=function xX
set An=function vX
set Dn=function UX
set Hn=function IX
set Jn=function KX
set Kn=function LX
set Ln=function MX
set Xn=function wC
set Cn=function JT
set Vn=function Sm
set Bn=function Q0w
set Nn=function R4
set Mn=function Eww
set wd=function pC
set ud=function nrw
set rd=function f5
set sd=function o0w
set td=function T0w
set id=function eC
set Sd=function o4
set cd=function H4
set od=function C1
set Od=function R5
set ld=function F0w
set bd=function Kww
set yd=function l0w
set pd=function UTw
set ed=function q4
set qd=function T4
set ad=function tsw
set nd=function ITw
set dd=function DB
set fd=function PTw
set Rd=function DTw
set Td=function yC
set Yd=function qC
set Gd=function aC
set gd=function b9
set hd=function n4
set Fd=function HTw
set kd=function JTw
set jd=function KTw
set xd=function cN
set vd=function Lww
set md=function e1
set Qd=function f4
set Wd=function D9
set Ed=function Qww
set Zd=function Www
set Ud=function Mww_2
set Id=function wuw
set Pd=function LTw
set Ad=function uuw
set Dd=function V2
set Hd=function XTw
set Jd=function CTw
set Kd=function A9
set Ld=function VTw
set Xd=function BTw
set Cd=function NTw
set Vd=function ruw
set Bd=function MTw
set Nd=function l5
set Md=function c4
set wf=function Jww
set uf=function wYw
set rf=function rww
set sf=function SYw
set tf=function cYw
set Sf=function O0w
set cf=function oYw
set of=function J4
set Of=function OYw
set lf=function lYw
set bf=function bYw
set yf=function d4
set pf=function yYw
set ef=function KN
set qf=function pYw
set af=function eYw
set nf=function qYw
set df=function NM
set ff=function aYw
set Rf=function nYw
set Tf=function dYw
set Yf=function D4
set Gf=function fYw
set gf=function RYw
set hf=function TYw
set Ff=function YYw
set kf=function GYw
set jf=function gYw
set xf=function hYw
set vf=function FYw
set mf=function kYw
set Qf=function jYw
set Wf=function NC
set Ef=function xYw
set Zf=function gB
set Uf=function vYw
set If=function mYw
set Pf=function WYw
set Af=function UM
set Df=function EYw
set Hf=function a4
set Jf=function ZYw
set Kf=function UYw
set Lf=function O4
set Xf=function C2
set Cf=function IYw
set Vf=function AYw
set Bf=function DYw
set Nf=function HYw
set Mf=function JYw
set wR=function KYw
set uR=function LYw
set rR=function XYw
set sR=function BYw
set tR=function r0w
set iR=function t0w
set SR=function i0w
set cR=function VYw
set oR=function PYw
endfunction
function main takes nothing returns nothing
local trigger OC
local trigger lC
local trigger bC
call qR()
call SetCameraBounds((-30720.0)+GetCameraMargin(CAMERA_MARGIN_LEFT),(-30720.0)+GetCameraMargin(CAMERA_MARGIN_BOTTOM),30720.0-GetCameraMargin(CAMERA_MARGIN_RIGHT),30720.0-GetCameraMargin(CAMERA_MARGIN_TOP),(-30720.0)+GetCameraMargin(CAMERA_MARGIN_LEFT),30720.0-GetCameraMargin(CAMERA_MARGIN_TOP),30720.0-GetCameraMargin(CAMERA_MARGIN_RIGHT),(-30720.0)+GetCameraMargin(CAMERA_MARGIN_BOTTOM))
call SetDayNightModels("Environment\\DNC\\DNCLordaeron\\DNCLordaeronTerrain\\DNCLordaeronTerrain.mdl","Environment\\DNC\\DNCLordaeron\\DNCLordaeronUnit\\DNCLordaeronUnit.mdl")
call NewSoundEnvironment("Default")
call SetAmbientDaySound("LordaeronSummerDay")
call SetAmbientNightSound("LordaeronSummerNight")
call SetMapMusic("Music",true,0)
set fs=CreateSound("Sound\\Interface\\Warning.wav",false,false,false,10,10,"")
call SetSoundParamsFromLabel(fs,"Warning")
call SetSoundDuration(fs,1903)
set q=Rect(11872.0,-24096.0,13376.0,-18304.0)
set a=Rect(14080.0,-30720.0,16256.0,-25664.0)
set n=Rect(12096.0,-26240.0,14944.0,-23776.0)
set d=Rect(-17120.0,15936.0,-15520.0,17408.0)
call Rect(-29824.0,-30080.0,-29312.0,-28672.0)
call Rect(-29216.0,-30112.0,-28672.0,-28672.0)
call Rect(-25984.0,-29760.0,-24992.0,-29504.0)
call Rect(-25984.0,-30080.0,-25472.0,-29824.0)
call Rect(-25984.0,-30400.0,-25472.0,-30144.0)
call Rect(-26464.0,-30048.0,-26176.0,-29056.0)
call Rect(-25440.0,-30368.0,-25184.0,-29856.0)
call Rect(-25184.0,-30368.0,-24928.0,-29856.0)
call Rect(-24672.0,-29568.0,-24064.0,-28800.0)
call Rect(-24704.0,-30208.0,-24064.0,-29696.0)
set f=Rect(-17408.0,22016.0,-17056.0,22368.0)
set R=Rect(-19072.0,17728.0,-18688.0,18080.0)
set T=Rect(-22464.0,22208.0,-22112.0,22560.0)
set Y=Rect(-3776.0,4416.0,-3392.0,4768.0)
set G=Rect(-3872.0,1664.0,-3456.0,2016.0)
set g=Rect(-416.0,-2592.0,-128.0,-2272.0)
set h=Rect(4992.0,-2016.0,5344.0,-1696.0)
set F=Rect(2528.0,-3168.0,2848.0,-2880.0)
set k=Rect(7744.0,-2528.0,8096.0,-2208.0)
set j=Rect(-17504.0,18080.0,-17056.0,18496.0)
set x=Rect(1024.0,-1120.0,1376.0,-800.0)
set v=Rect(-3328.0,8096.0,-2848.0,8512.0)
set m=Rect(-4704.0,11488.0,-4416.0,11776.0)
set Q=Rect(-640.0,8288.0,-160.0,8704.0)
set W=Rect(-5184.0,17120.0,-4832.0,17440.0)
set E=Rect(-96.0,12448.0,224.0,12768.0)
set Z=Rect(-2272.0,13536.0,-1984.0,13856.0)
set U=Rect(7008.0,1984.0,7456.0,2432.0)
set I=Rect(4032.0,3744.0,4416.0,4064.0)
set P=Rect(4000.0,5216.0,4320.0,5536.0)
set A=Rect(-576.0,2880.0,-224.0,3232.0)
set D=Rect(-8288.0,19776.0,-7936.0,20160.0)
set H=Rect(-6464.0,21184.0,-6080.0,21568.0)
set J=Rect(-7904.0,22048.0,-7488.0,22464.0)
set K=Rect(-5344.0,14304.0,-4960.0,14720.0)
set L=Rect(2880.0,32.0,3264.0,352.0)
set X=Rect(608.0,15680.0,992.0,16096.0)
set C=Rect(-2496.0,15872.0,-2112.0,16224.0)
set V=Rect(1056.0,10848.0,1344.0,11136.0)
set B=Rect(1600.0,6784.0,1984.0,7136.0)
set N=Rect(224.0,19296.0,544.0,19648.0)
set M=Rect(2784.0,22592.0,3200.0,22944.0)
set ww=Rect(-1984.0,19008.0,-1600.0,19360.0)
set uw=Rect(3008.0,18048.0,3392.0,18400.0)
call Rect(-28544.0,-30080.0,-28064.0,-29344.0)
call Rect(-27744.0,-30080.0,-27456.0,-29760.0)
set rw=Rect(4224.0,19488.0,4608.0,19776.0)
set sw=Rect(13056.0,4960.0,13408.0,5280.0)
set tw=Rect(5696.0,24768.0,6048.0,25088.0)
set iw=Rect(3328.0,26816.0,3680.0,27168.0)
set Sw=Rect(8608.0,26144.0,9024.0,26528.0)
set cw=Rect(6656.0,21248.0,7008.0,21600.0)
set ow=Rect(-16640.0,10368.0,-13504.0,13056.0)
set Ow=Rect(-18944.0,5312.0,-16864.0,7328.0)
set lw=Rect(-28032.0,-1120.0,-22464.0,640.0)
set bw=Rect(-27264.0,2784.0,-26208.0,3328.0)
set yw=Rect(-26912.0,-4320.0,-23872.0,-2976.0)
set pw=Rect(-19328.0,-288.0,-18592.0,1568.0)
set ew=Rect(-11936.0,7616.0,-448.0,11424.0)
set qw=Rect(-1664.0,1216.0,6848.0,7776.0)
set aw=Rect(-5472.0,24704.0,-3232.0,27616.0)
set nw=Rect(3744.0,10880.0,4064.0,11232.0)
set dw=Rect(-12064.0,11392.0,-8832.0,16576.0)
set fw=Rect(-8832.0,10176.0,23520.0,17760.0)
set Rw=Rect(4384.0,17728.0,23424.0,27040.0)
set Tw=Rect(-10688.0,17536.0,-10304.0,17888.0)
set Yw=Rect(-10688.0,-9312.0,-10336.0,-9024.0)
set Gw=Rect(17280.0,9280.0,17632.0,9632.0)
set gw=Rect(8352.0,12192.0,8672.0,12512.0)
set hw=Rect(5952.0,18400.0,6304.0,18688.0)
set Fw=Rect(9120.0,19872.0,9408.0,20192.0)
set kw=Rect(23328.0,-14080.0,30688.0,17792.0)
set jw=Rect(13984.0,-288.0,14336.0,0.0)
set xw=Rect(10624.0,-7552.0,11008.0,-7200.0)
set vw=Rect(15168.0,-5792.0,15552.0,-5408.0)
set mw=Rect(15328.0,-7712.0,15648.0,-7424.0)
set Qw=Rect(12640.0,-7104.0,12992.0,-6752.0)
set Ww=Rect(17056.0,-8800.0,17376.0,-8512.0)
set Ew=Rect(18432.0,-608.0,18784.0,-320.0)
set Zw=Rect(13760.0,-11168.0,14112.0,-10752.0)
set Uw=Rect(16768.0,-16416.0,17120.0,-16032.0)
set Iw=Rect(18880.0,-7616.0,19232.0,-7296.0)
set Pw=Rect(6816.0,-6752.0,7136.0,-6464.0)
set Aw=Rect(12512.0,-4064.0,12832.0,-3712.0)
set Dw=Rect(9056.0,-4576.0,9344.0,-4288.0)
set Hw=Rect(-26464.0,-8896.0,-26144.0,-8544.0)
set Jw=Rect(-21632.0,-8544.0,-21248.0,-8224.0)
set Kw=Rect(-16928.0,-8224.0,-16608.0,-7904.0)
set Lw=Rect(-10112.0,-11424.0,-9760.0,-11136.0)
set Xw=Rect(-7680.0,-16416.0,-7328.0,-16128.0)
set Cw=Rect(288.0,-17760.0,608.0,-17472.0)
set Vw=Rect(9248.0,-21376.0,9984.0,-20640.0)
set Bw=Rect(24704.0,-27648.0,25088.0,-27264.0)
set Nw=Rect(10816.0,-18688.0,11168.0,-18304.0)
set Mw=Rect(13056.0,-18016.0,13408.0,-17760.0)
set wu=Rect(12096.0,-21024.0,12448.0,-20704.0)
set uu=Rect(15680.0,5600.0,16032.0,5920.0)
set ru=Rect(6944.0,7648.0,7264.0,7968.0)
set su=Rect(5824.0,12256.0,6176.0,12576.0)
set tu=Rect(11200.0,7712.0,11552.0,8064.0)
set iu=Rect(12480.0,11136.0,12832.0,11456.0)
set Su=Rect(14880.0,22944.0,15200.0,23232.0)
set cu=Rect(11392.0,16768.0,11744.0,17088.0)
set ou=Rect(23840.0,96.0,24128.0,384.0)
set Ou=Rect(19488.0,11168.0,19808.0,11488.0)
set lu=Rect(20672.0,2528.0,21056.0,2848.0)
set bu=Rect(23776.0,2368.0,24160.0,2720.0)
set yu=Rect(18336.0,-13408.0,18624.0,-13120.0)
set pu=Rect(17056.0,-11648.0,17376.0,-11264.0)
set eu=Rect(15488.0,-17696.0,15840.0,-17376.0)
set qu=Rect(24896.0,-8480.0,25248.0,-8128.0)
set au=Rect(16480.0,-14368.0,16768.0,-14048.0)
set nu=Rect(17088.0,-19744.0,17440.0,-19456.0)
set du=Rect(22720.0,-10432.0,23072.0,-10048.0)
set fu=Rect(20672.0,-23232.0,21056.0,-22848.0)
set Ru=Rect(19904.0,-5920.0,20256.0,-5632.0)
set Tu=Rect(18624.0,-3936.0,18976.0,-3616.0)
set Yu=Rect(-13632.0,-14816.0,-12192.0,-13376.0)
set Gu=Rect(17760.0,-10400.0,23360.0,-1344.0)
set gu=Rect(12384.0,-5984.0,13824.0,-4352.0)
set hu=Rect(-10944.0,3968.0,-7680.0,5120.0)
set Fu=Rect(-6528.0,7808.0,-6176.0,8160.0)
set ku=Rect(-8864.0,6912.0,-8448.0,7264.0)
set ju=Rect(-11680.0,14304.0,-11264.0,14752.0)
set xu=Rect(-9760.0,12928.0,-9472.0,13280.0)
set vu=Rect(-7552.0,16928.0,-7232.0,17248.0)
set mu=Rect(-17472.0,-3328.0,-17120.0,-2976.0)
call Rect(-24576.0,-1376.0,-24224.0,-1024.0)
set Qu=Rect(23392.0,10912.0,23712.0,11232.0)
set Wu=Rect(17280.0,19456.0,17632.0,19808.0)
set Eu=Rect(-16896.0,24032.0,-16544.0,24352.0)
set Zu=Rect(-15904.0,25952.0,-15520.0,26304.0)
set Uu=Rect(-17312.0,26624.0,-16896.0,27008.0)
set Iu=Rect(-16096.0,20352.0,-15712.0,20768.0)
set Pu=Rect(-20448.0,21440.0,-20064.0,21792.0)
set Au=Rect(-22560.0,19808.0,-22272.0,20128.0)
set Du=Rect(-18752.0,19520.0,-18400.0,19872.0)
set Hu=Rect(-16128.0,16896.0,-15808.0,17248.0)
set Ju=Rect(-17952.0,15904.0,-17632.0,16224.0)
set Ku=Rect(-19936.0,16352.0,-19648.0,16672.0)
set Lu=Rect(-17248.0,12448.0,-16928.0,12832.0)
set Xu=Rect(-13728.0,11968.0,-13408.0,12352.0)
set Cu=Rect(-15232.0,10624.0,-14880.0,10976.0)
set Vu=Rect(-13856.0,7872.0,-13568.0,8256.0)
set Bu=Rect(-16192.0,5824.0,-15840.0,6208.0)
set Nu=Rect(-16864.0,3392.0,-16576.0,3776.0)
set Mu=Rect(-18880.0,5568.0,-18528.0,5920.0)
set wr=Rect(-20288.0,1216.0,-19936.0,1600.0)
set ur=Rect(-17216.0,352.0,-16896.0,736.0)
set rr=Rect(-24512.0,3744.0,-24128.0,4064.0)
set sr=Rect(-22720.0,2368.0,-22432.0,2752.0)
set tr=Rect(-23552.0,-256.0,-23200.0,128.0)
set ir=Rect(-25376.0,1312.0,-25056.0,1632.0)
set Sr=Rect(-28736.0,-192.0,-28352.0,160.0)
set cr=Rect(-21024.0,2944.0,-20704.0,3360.0)
set lr=Rect(-13792.0,2144.0,-13440.0,2592.0)
set br=Rect(-13568.0,14912.0,-13216.0,15296.0)
set yr=Rect(-12736.0,16128.0,-12352.0,16512.0)
set pr=Rect(-10880.0,3360.0,-10528.0,3712.0)
set er=Rect(-10048.0,5280.0,-9696.0,5600.0)
set qr=Rect(-6880.0,3936.0,-6560.0,4256.0)
set ar=Rect(-8224.0,3040.0,-7904.0,3392.0)
set nr=Rect(-8960.0,1760.0,-8608.0,2176.0)
set dr=Rect(-6624.0,1088.0,-6304.0,1472.0)
set fr=Rect(-7296.0,-960.0,-6944.0,-544.0)
set Rr=Rect(-23712.0,-4704.0,-23392.0,-4416.0)
set Tr=Rect(-25184.0,-3168.0,-24864.0,-2848.0)
set Yr=Rect(-21888.0,-4416.0,-21536.0,-4032.0)
set Gr=Rect(-20928.0,-2304.0,-20576.0,-1888.0)
set gr=Rect(-7776.0,11040.0,-7456.0,11392.0)
set hr=Rect(-11648.0,7072.0,-11296.0,7360.0)
set Fr=Rect(-13728.0,4992.0,-13408.0,5376.0)
set kr=Rect(-5152.0,21696.0,-4832.0,22080.0)
set jr=Rect(-5248.0,24416.0,-4960.0,24768.0)
set xr=Rect(-6688.0,28096.0,-6368.0,28480.0)
set vr=Rect(-9024.0,26496.0,-8736.0,26880.0)
set mr=Rect(-10048.0,28224.0,-9696.0,28576.0)
set Qr=Rect(-1408.0,23776.0,-1152.0,24096.0)
set Wr=Rect(-2720.0,26176.0,-2432.0,26560.0)
set Er=Rect(-28032.0,-2944.0,-27680.0,-2560.0)
set Zr=Rect(-29760.0,-10016.0,-29408.0,-9632.0)
set Ur=Rect(15296.0,-26976.0,15648.0,-26624.0)
set Ir=Rect(-20544.0,12032.0,-20160.0,12416.0)
set Pr=Rect(-18368.0,10624.0,-18016.0,11008.0)
set Ar=Rect(-10880.0,-576.0,-10528.0,-224.0)
set Dr=Rect(-11104.0,-4768.0,-10816.0,-4448.0)
set Hr=Rect(-5728.0,-2912.0,-5440.0,-2560.0)
set Jr=Rect(-3904.0,-6720.0,-3552.0,-6336.0)
set Kr=Rect(-3616.0,-3040.0,-3328.0,-2688.0)
set Lr=Rect(-7200.0,-8000.0,-6880.0,-7616.0)
set Xr=Rect(-5504.0,-9344.0,-5248.0,-9056.0)
set Cr=Rect(-11616.0,10848.0,-11296.0,11168.0)
set Vr=Rect(-1792.0,-320.0,-1440.0,64.0)
set Br=Rect(3232.0,-7488.0,3552.0,-7136.0)
set Nr=Rect(8224.0,-10496.0,8512.0,-10208.0)
set Mr=Rect(1344.0,29280.0,1696.0,29632.0)
set ws=Rect(10848.0,-2144.0,11136.0,-1824.0)
set us=Rect(-26496.0,-1568.0,-26144.0,-1248.0)
set rs=Rect(-27168.0,2528.0,-26880.0,2816.0)
set ss=Rect(-2016.0,27552.0,-1696.0,27936.0)
set ts=Rect(-3488.0,23040.0,-3200.0,23392.0)
set is=Rect(2016.0,-7904.0,2336.0,-7584.0)
set Ss=Rect(640.0,-5760.0,992.0,-5376.0)
set cs=Rect(5216.0,-12384.0,5504.0,-12064.0)
set os=Rect(18272.0,-17504.0,18656.0,-17056.0)
set Os=Rect(26848.0,-11680.0,27168.0,-11360.0)
set ls=Rect(6464.0,-4672.0,6816.0,-4288.0)
set bs=Rect(20672.0,21312.0,21024.0,21696.0)
set ys=Rect(-1824.0,5792.0,-1440.0,6144.0)
set ps=Rect(-23264.0,-8992.0,-22944.0,-8704.0)
set es=Rect(-13504.0,-8640.0,-13184.0,-8384.0)
set qs=Rect(26048.0,-2848.0,26400.0,-2528.0)
set as=Rect(28864.0,-3360.0,29152.0,-3040.0)
set ns=Rect(28064.0,2592.0,28352.0,2880.0)
set ds=Rect(27488.0,-5984.0,27808.0,-5664.0)
call ET()
call ZT()
call InitBlizzard()
call nR()
call iC()
set lC=Ts
if TriggerEvaluate(lC) then
call TriggerExecute(lC)
endif
set bC=tt
if TriggerEvaluate(bC) then
call TriggerExecute(bC)
endif
set OC=CreateTrigger()
call TriggerAddCondition(OC,Condition(Bn))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Real.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(Nn))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Integer.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(Mn))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package String.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(wd))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Angle.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(ud))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Vectors.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(rd))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Maths.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(sd))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Player.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(td))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Printing.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(id))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Basics.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(Sd))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package GameTimer.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(cd))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MagicFunctions.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(od))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package ErrorHandling.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(Od))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Matrices.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(ld))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Quaternion.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(bd))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Table.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(yd))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Playercolor.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(pd))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Colors.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(ed))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Group.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(qd))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Lightning.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(ad))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package WeatherEffects.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(nd))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package TypeCasting.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(dd))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package ClosureForGroups.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(fd))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package LinkedList.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(Rd))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Abilities.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(Td))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package AbilityIds.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(Yd))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Bootleg.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(Gd))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Buildings.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(gd))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MutliboardTools.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(hd))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package HashList.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(Fd))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package EventHelper.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(kd))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package RegisterEvents.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(jd))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package TimerUtils.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(xd))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package ClosureTimers.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(vd))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package TargetsAllowed.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(md))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Doodads.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(Qd))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Icons.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(Wd))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Objects.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(Ed))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Sounds.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(Zd))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Soundsets.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(Ud))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Textures.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(Id))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package UI.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(Pd))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Units.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(Ad))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package UnitIds.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(Dd))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MapBounds.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(Hd))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package DummyRecycler.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(Jd))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package StringUtils.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(Kd))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package ObjectIds.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(Ld))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Preloader.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(Xd))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package ObjectIdGenerator.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(Cd))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package OnUnitEnterLeave.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(Vd))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package UnitIndexer.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(Bd))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package ClosureEvents.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(Nd))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MathTools.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(Md))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Forces.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(wf))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Strings.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(uf))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package CityBaseTaxes.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(rf))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Revolts.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(sf))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package City.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(tf))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Multiboards.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(Sf))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package PlayerStats.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(cf))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package CityModifiers.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(of))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Main.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(Of))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package CastleCapture.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(lf))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package CityBuilded.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(bf))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package CityManage.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(yf))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package HashSet.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(pf))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package VoteKick.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(ef))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Commands.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(qf))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Credits.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(af))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Economy.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(nf))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package DateTime.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(df))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Diplomacy.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(ff))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Garissons.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(Rf))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package LimitEncampments.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(Tf))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package LimitMercenaryCamps.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(Yf))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Logarithm.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(Gf))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MainInit.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(gf))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MassControl.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(hf))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MultiboardCityUpdate.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(Ff))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package NoShipsNearRivers.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(kf))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package NoStarvationOnBoat.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(jf))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package OnPlayerLeave.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(xf))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package RangeChecks.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(vf))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Religion.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(mf))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Taxation.")
endif
call TriggerClearConditions(OC)
call TriggerAddCondition(OC,Condition(Qf))
if not TriggerEvaluate(OC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Upkeep.")
endif
call TriggerClearConditions(OC)
call DestroyTrigger(OC)
set OC=null
set lC=null
set bC=null
endfunction
function SC takes nothing returns nothing
call SetPlayerStartLocation(Player(0),0)
call ForcePlayerStartLocation(Player(0),0)
call SetPlayerColor(Player(0),ConvertPlayerColor(0))
call SetPlayerRacePreference(Player(0),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(0),false)
call SetPlayerController(Player(0),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(1),1)
call ForcePlayerStartLocation(Player(1),1)
call SetPlayerColor(Player(1),ConvertPlayerColor(1))
call SetPlayerRacePreference(Player(1),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(1),false)
call SetPlayerController(Player(1),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(2),2)
call ForcePlayerStartLocation(Player(2),2)
call SetPlayerColor(Player(2),ConvertPlayerColor(2))
call SetPlayerRacePreference(Player(2),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(2),false)
call SetPlayerController(Player(2),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(3),3)
call ForcePlayerStartLocation(Player(3),3)
call SetPlayerColor(Player(3),ConvertPlayerColor(3))
call SetPlayerRacePreference(Player(3),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(3),false)
call SetPlayerController(Player(3),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(4),4)
call ForcePlayerStartLocation(Player(4),4)
call SetPlayerColor(Player(4),ConvertPlayerColor(4))
call SetPlayerRacePreference(Player(4),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(4),false)
call SetPlayerController(Player(4),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(5),5)
call ForcePlayerStartLocation(Player(5),5)
call SetPlayerColor(Player(5),ConvertPlayerColor(5))
call SetPlayerRacePreference(Player(5),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(5),false)
call SetPlayerController(Player(5),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(6),6)
call ForcePlayerStartLocation(Player(6),6)
call SetPlayerColor(Player(6),ConvertPlayerColor(6))
call SetPlayerRacePreference(Player(6),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(6),false)
call SetPlayerController(Player(6),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(7),7)
call ForcePlayerStartLocation(Player(7),7)
call SetPlayerColor(Player(7),ConvertPlayerColor(7))
call SetPlayerRacePreference(Player(7),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(7),false)
call SetPlayerController(Player(7),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(8),8)
call ForcePlayerStartLocation(Player(8),8)
call SetPlayerColor(Player(8),ConvertPlayerColor(8))
call SetPlayerRacePreference(Player(8),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(8),false)
call SetPlayerController(Player(8),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(9),9)
call ForcePlayerStartLocation(Player(9),9)
call SetPlayerColor(Player(9),ConvertPlayerColor(9))
call SetPlayerRacePreference(Player(9),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(9),false)
call SetPlayerController(Player(9),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(10),10)
call ForcePlayerStartLocation(Player(10),10)
call SetPlayerColor(Player(10),ConvertPlayerColor(10))
call SetPlayerRacePreference(Player(10),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(10),false)
call SetPlayerController(Player(10),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(11),11)
call ForcePlayerStartLocation(Player(11),11)
call SetPlayerColor(Player(11),ConvertPlayerColor(11))
call SetPlayerRacePreference(Player(11),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(11),false)
call SetPlayerController(Player(11),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(12),12)
call ForcePlayerStartLocation(Player(12),12)
call SetPlayerColor(Player(12),ConvertPlayerColor(12))
call SetPlayerRacePreference(Player(12),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(12),false)
call SetPlayerController(Player(12),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(13),13)
call ForcePlayerStartLocation(Player(13),13)
call SetPlayerColor(Player(13),ConvertPlayerColor(13))
call SetPlayerRacePreference(Player(13),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(13),false)
call SetPlayerController(Player(13),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(14),14)
call ForcePlayerStartLocation(Player(14),14)
call SetPlayerColor(Player(14),ConvertPlayerColor(14))
call SetPlayerRacePreference(Player(14),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(14),false)
call SetPlayerController(Player(14),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(15),15)
call ForcePlayerStartLocation(Player(15),15)
call SetPlayerColor(Player(15),ConvertPlayerColor(15))
call SetPlayerRacePreference(Player(15),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(15),false)
call SetPlayerController(Player(15),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(16),16)
call ForcePlayerStartLocation(Player(16),16)
call SetPlayerColor(Player(16),ConvertPlayerColor(16))
call SetPlayerRacePreference(Player(16),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(16),false)
call SetPlayerController(Player(16),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(17),17)
call ForcePlayerStartLocation(Player(17),17)
call SetPlayerColor(Player(17),ConvertPlayerColor(17))
call SetPlayerRacePreference(Player(17),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(17),false)
call SetPlayerController(Player(17),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(18),18)
call ForcePlayerStartLocation(Player(18),18)
call SetPlayerColor(Player(18),ConvertPlayerColor(18))
call SetPlayerRacePreference(Player(18),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(18),false)
call SetPlayerController(Player(18),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(19),19)
call ForcePlayerStartLocation(Player(19),19)
call SetPlayerColor(Player(19),ConvertPlayerColor(19))
call SetPlayerRacePreference(Player(19),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(19),false)
call SetPlayerController(Player(19),MAP_CONTROL_USER)
endfunction
function cC takes nothing returns nothing
call SetPlayerTeam(Player(0),0)
call SetPlayerTeam(Player(1),0)
call SetPlayerTeam(Player(2),0)
call SetPlayerTeam(Player(3),0)
call SetPlayerTeam(Player(4),0)
call SetPlayerTeam(Player(5),0)
call SetPlayerTeam(Player(6),0)
call SetPlayerTeam(Player(7),0)
call SetPlayerTeam(Player(8),0)
call SetPlayerTeam(Player(9),0)
call SetPlayerTeam(Player(10),0)
call SetPlayerTeam(Player(11),0)
call SetPlayerTeam(Player(12),1)
call SetPlayerTeam(Player(13),1)
call SetPlayerTeam(Player(14),1)
call SetPlayerTeam(Player(15),1)
call SetPlayerTeam(Player(16),1)
call SetPlayerTeam(Player(17),1)
call SetPlayerTeam(Player(18),1)
call SetPlayerTeam(Player(19),1)
endfunction
function oC takes nothing returns nothing
call SetStartLocPrioCount(0,19)
call SetStartLocPrio(0,0,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,1,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,2,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,3,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,4,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,9,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,10,11,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,11,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,12,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,13,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,14,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,15,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,16,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,17,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,18,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(1,9)
call SetStartLocPrio(1,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,1,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,2,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,3,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,4,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(2,9)
call SetStartLocPrio(2,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,2,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,3,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,4,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(3,9)
call SetStartLocPrio(3,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,3,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,4,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(4,9)
call SetStartLocPrio(4,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,4,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(5,9)
call SetStartLocPrio(5,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(6,9)
call SetStartLocPrio(6,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(7,9)
call SetStartLocPrio(7,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(8,9)
call SetStartLocPrio(8,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(9,9)
call SetStartLocPrio(9,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,8,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(10,16)
call SetStartLocPrio(10,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,8,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,9,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,10,12,MAP_LOC_PRIO_LOW)
call SetStartLocPrio(10,11,13,MAP_LOC_PRIO_LOW)
call SetStartLocPrio(10,12,14,MAP_LOC_PRIO_LOW)
call SetStartLocPrio(10,13,15,MAP_LOC_PRIO_LOW)
call SetStartLocPrio(10,14,16,MAP_LOC_PRIO_LOW)
call SetStartLocPrio(10,15,17,MAP_LOC_PRIO_LOW)
call SetStartLocPrioCount(11,19)
call SetStartLocPrio(11,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,8,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,9,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,10,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,11,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,12,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,13,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,14,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,15,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,16,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,17,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,18,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(12,5)
call SetStartLocPrio(12,0,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,1,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,2,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,3,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,4,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(13,5)
call SetStartLocPrio(13,0,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,1,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,2,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,3,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,4,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(14,5)
call SetStartLocPrio(14,0,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,1,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,2,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,3,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,4,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(15,5)
call SetStartLocPrio(15,0,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,1,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,2,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,3,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,4,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(16,5)
call SetStartLocPrio(16,0,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,1,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,2,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,3,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,4,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(17,5)
call SetStartLocPrio(17,0,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,1,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,2,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,3,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,4,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(18,1)
call SetStartLocPrio(18,0,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(19,1)
call SetStartLocPrio(19,0,18,MAP_LOC_PRIO_HIGH)
endfunction
function config takes nothing returns nothing
call SetMapName("TRIGSTR_001")
call SetMapDescription("TRIGSTR_003")
call SetPlayers(20)
call SetTeams(20)
call SetGamePlacement(MAP_PLACEMENT_TEAMS_TOGETHER)
call DefineStartLocation(0,320.0,5184.0)
call DefineStartLocation(1,320.0,5184.0)
call DefineStartLocation(2,320.0,5184.0)
call DefineStartLocation(3,320.0,5184.0)
call DefineStartLocation(4,320.0,5184.0)
call DefineStartLocation(5,320.0,5184.0)
call DefineStartLocation(6,320.0,5184.0)
call DefineStartLocation(7,320.0,5184.0)
call DefineStartLocation(8,320.0,5184.0)
call DefineStartLocation(9,320.0,5184.0)
call DefineStartLocation(10,320.0,5184.0)
call DefineStartLocation(11,320.0,5184.0)
call DefineStartLocation(12,320.0,5184.0)
call DefineStartLocation(13,320.0,5184.0)
call DefineStartLocation(14,320.0,5184.0)
call DefineStartLocation(15,320.0,5184.0)
call DefineStartLocation(16,320.0,5184.0)
call DefineStartLocation(17,320.0,5184.0)
call DefineStartLocation(18,320.0,5184.0)
call DefineStartLocation(19,320.0,5184.0)
call SC()
call cC()
call oC()
endfunction
