// this script was compiled with wurst 1.8.0.0-jenkins-Wurst-1072
globals
group w=null
location u=null
integer array r
force s=null
integer array t
location i=null
location S=null
location c=null
location o=null
rect O=null
rect l=null
group b=null
integer array y
group p=null
location e=null
boolean array q
rect a=null
rect n=null
rect d=null
rect f=null
rect R=null
rect T=null
rect Y=null
rect G=null
rect g=null
rect h=null
rect F=null
rect k=null
rect j=null
rect x=null
rect v=null
rect m=null
rect Q=null
rect W=null
rect E=null
rect Z=null
rect U=null
rect I=null
rect P=null
rect A=null
rect D=null
rect H=null
rect J=null
rect K=null
rect L=null
rect X=null
rect C=null
rect V=null
rect B=null
rect N=null
rect M=null
rect ww=null
rect uw=null
rect rw=null
rect sw=null
rect tw=null
rect iw=null
rect Sw=null
rect cw=null
rect ow=null
rect Ow=null
rect lw=null
rect bw=null
rect yw=null
rect pw=null
rect ew=null
rect qw=null
rect aw=null
rect nw=null
rect dw=null
rect fw=null
rect Rw=null
rect Tw=null
rect Yw=null
rect Gw=null
rect gw=null
rect hw=null
rect Fw=null
rect kw=null
rect jw=null
rect xw=null
rect vw=null
rect mw=null
rect Qw=null
rect Ww=null
rect Ew=null
rect Zw=null
rect Uw=null
rect Iw=null
rect Pw=null
rect Aw=null
rect Dw=null
rect Hw=null
rect Jw=null
rect Kw=null
rect Lw=null
rect Xw=null
rect Cw=null
rect Vw=null
rect Bw=null
rect Nw=null
rect Mw=null
rect wu=null
rect uu=null
rect ru=null
rect su=null
rect tu=null
rect iu=null
rect Su=null
rect cu=null
rect ou=null
rect Ou=null
rect lu=null
rect bu=null
rect yu=null
rect pu=null
rect eu=null
rect qu=null
rect au=null
rect nu=null
rect du=null
rect fu=null
rect Ru=null
rect Tu=null
rect Yu=null
rect Gu=null
rect gu=null
rect hu=null
rect Fu=null
rect ku=null
rect ju=null
rect xu=null
rect vu=null
rect mu=null
rect Qu=null
rect Wu=null
rect Eu=null
rect Zu=null
rect Uu=null
rect Iu=null
rect Pu=null
rect Au=null
rect Du=null
rect Hu=null
rect Ju=null
rect Ku=null
rect Lu=null
rect Xu=null
rect Cu=null
rect Vu=null
rect Bu=null
rect Nu=null
rect Mu=null
rect wr=null
rect ur=null
rect rr=null
rect sr=null
rect tr=null
rect ir=null
rect Sr=null
rect cr=null
rect lr=null
rect br=null
rect yr=null
rect pr=null
rect er=null
rect qr=null
rect ar=null
rect nr=null
rect dr=null
rect fr=null
rect Rr=null
rect Tr=null
rect Yr=null
rect Gr=null
rect gr=null
rect hr=null
rect Fr=null
rect kr=null
rect jr=null
rect xr=null
rect vr=null
rect mr=null
rect Qr=null
rect Wr=null
rect Er=null
rect Zr=null
rect Ur=null
rect Ir=null
rect Pr=null
rect Ar=null
rect Dr=null
rect Hr=null
rect Jr=null
rect Kr=null
rect Lr=null
rect Xr=null
rect Cr=null
rect Vr=null
rect Br=null
rect Nr=null
rect Mr=null
rect ws=null
rect us=null
rect rs=null
rect ss=null
rect ts=null
rect is=null
rect Ss=null
rect cs=null
rect os=null
rect Os=null
rect ls=null
rect bs=null
rect ys=null
rect ps=null
rect es=null
rect qs=null
rect as=null
rect ns=null
rect ds=null
rect fs=null
sound Rs=null
trigger Ts=null
trigger Ys=null
trigger Gs=null
trigger gs=null
trigger hs=null
trigger Fs=null
trigger ks=null
trigger js=null
trigger xs=null
trigger vs=null
trigger ms=null
trigger Qs=null
trigger Ws=null
trigger Es=null
trigger Zs=null
trigger Us=null
trigger Is=null
trigger Ps=null
trigger As=null
trigger Ds=null
trigger Hs=null
trigger Js=null
trigger Ks=null
trigger Ls=null
trigger Xs=null
trigger Cs=null
trigger Vs=null
trigger Bs=null
trigger Ns=null
trigger Ms=null
trigger wt=null
trigger ut=null
trigger rt=null
trigger st=null
trigger tt=null
trigger St=null
trigger ct=null
trigger ot=null
trigger Ot=null
trigger lt=null
trigger bt=null
trigger yt=null
trigger pt=null
trigger et=null
trigger qt=null
trigger at=null
trigger nt=null
trigger dt=null
trigger ft=null
trigger Rt=null
trigger Tt=null
trigger Yt=null
trigger Gt=null
trigger gt=null
trigger ht=null
trigger Ft=null
trigger kt=null
trigger jt=null
trigger xt=null
trigger vt=null
trigger mt=null
trigger Qt=null
trigger Wt=null
trigger Et=null
trigger Zt=null
trigger Ut=null
trigger It=null
trigger Pt=null
trigger At=null
trigger Dt=null
trigger Ht=null
trigger Jt=null
trigger Kt=null
trigger Lt=null
trigger Xt=null
trigger Ct=null
trigger Vt=null
trigger Bt=null
trigger Nt=null
trigger Mt=null
trigger wi=null
trigger ui=null
trigger ri=null
trigger si=null
trigger ti=null
trigger ii=null
trigger Si=null
trigger ci=null
trigger oi=null
trigger Oi=null
trigger li=null
trigger bi=null
trigger yi=null
trigger pi=null
trigger ei=null
trigger qi=null
trigger ai=null
trigger ni=null
trigger di=null
trigger fi=null
trigger Ri=null
trigger Ti=null
trigger Yi=null
trigger Gi=null
trigger gi=null
trigger hi=null
trigger Fi=null
trigger ki=null
trigger ji=null
trigger xi=null
trigger vi=null
trigger mi=null
trigger Qi=null
trigger Wi=null
trigger Ei=null
trigger Zi=null
trigger Ui=null
trigger Ii=null
trigger Pi=null
trigger Ai=null
trigger Di=null
trigger Hi=null
trigger Ji=null
trigger Ki=null
trigger Li=null
trigger Xi=null
trigger Ci=null
trigger Vi=null
trigger Bi=null
trigger Ni=null
trigger Mi=null
trigger wS=null
trigger uS=null
trigger rS=null
trigger sS=null
trigger tS=null
trigger iS=null
trigger SS=null
trigger cS=null
trigger oS=null
integer OS=0
player lS=null
integer bS=0
integer array yS
integer pS=0
integer eS=0
integer qS=0
integer aS=0
integer nS=0
integer dS=0
integer fS=0
integer RS=0
integer TS=0
integer YS=0
real array GS
real array gS
boolean array hS
real array FS
integer array kS
real array jS
real array xS
string array vS
string array mS
integer QS=0
real WS=0.
real array ES
integer array ZS
real array US
real array IS
real array PS
integer array AS
integer array DS
integer array HS
integer array JS
integer array KS
unit array LS
string array XS
integer array CS
integer array VS
integer array BS
real array NS
real array MS
integer array wc
integer array uc
real array rc
real array sc
real array tc
real array ic
integer array Sc
real array cc
integer array oc
integer array Oc
integer array lc
playerevent bc=null
trigger yc=null
trigger pc=null
trigger ec=null
integer array qc
integer ac=0
integer nc=0
integer dc=0
integer array fc
integer array Rc
integer array Tc
integer array Yc
integer array Gc
integer array gc
integer array hc
integer array Fc
unit array kc
group jc=null
integer array xc
integer vc=0
filterfunc mc=null
integer Qc=0
timer array Wc
timer array Ec
integer array Zc
integer array Uc
integer array Ic
string array Pc
integer Ac=0
real array Dc
real Hc=0.
integer array Jc
integer array Kc
integer array Lc
integer array Xc
integer array Cc
integer Vc=0
integer array Bc
integer array Nc
hashtable Mc=null
force wo=null
force uo=null
force ro=null
force so=null
force array io
integer array So
integer array co
integer array oo
timer Oo=null
real lo=0.
hashtable bo=null
hashtable yo=null
integer array po
integer array eo
integer array qo
unit array ao
integer array no
unit array do
integer array fo
integer array Ro
integer array To
integer array Yo
integer array Go
integer array go
integer array ho
boolean array Fo
integer array ko
integer array jo
string array xo
boolean array vo
integer mo=0
integer Qo=0
boolean Wo=false
boolean Eo=false
boolean Zo=false
timer Uo=null
real Io=0.
rect Po=null
rect Ao=null
region Do=null
real Ho=0.
real Jo=0.
integer Ko=0
integer Lo=0
integer Xo=0
player array Co
unit array Vo
integer array Bo
unit array No
integer array Mo
real array wO
real array uO
integer array rO
integer array sO
integer array tO
integer array iO
integer array SO
integer array cO
integer array oO
integer array OO
integer array lO
multiboard array bO
unit array yO
trigger pO=null
group eO=null
unit array qO
integer aO=0
integer array nO
integer array dO
player array fO
boolean array RO
integer array TO
integer array YO
player array GO
player gO=null
playercolor hO=null
playercolor FO=null
playercolor kO=null
playercolor jO=null
playercolor array xO
group vO=null
unit mO=null
integer QO=0
unit array WO
boolean array EO
integer array ZO
player array UO
unit array IO
real PO=0.
trigger array AO
integer DO=0
real array HO
integer JO=0
string array KO
string array LO
string array XO
string array CO
string array VO
string array BO
string array NO
string array MO
string array wl
string array ul
string array rl
string array sl
string array tl
string array il
string array Sl
string array cl
string array ol
hashtable Ol=null
timer array ll
integer bl=0
integer yl=0
integer pl=0
trigger el=null
trigger ql=null
unit al=null
unit nl=null
unit array dl
integer fl=0
integer Rl=0
integer array Tl
integer Yl=0
integer Gl=0
integer gl=0
integer array hl
integer Fl=0
integer array kl
integer jl=0
integer xl=0
integer array vl
integer array ml
integer Ql=0
integer Wl=0
integer array El
integer Zl=0
integer Ul=0
integer array Il
integer array Pl
integer Al=0
integer Dl=0
integer array Hl
integer array Jl
integer Kl=0
integer Ll=0
integer array Xl
integer array Cl
integer Vl=0
integer Bl=0
integer array Nl
integer Ml=0
integer array wb
integer array ub
integer rb=0
integer sb=0
integer array tb
integer array ib
integer array Sb
integer cb=0
integer ob=0
integer array Ob
integer lb=0
integer bb=0
integer array yb
integer pb=0
integer eb=0
integer array qb
integer array ab
integer nb=0
integer db=0
integer array fb
integer array Rb
integer Tb=0
integer Yb=0
integer array Gb
integer gb=0
integer hb=0
integer array Fb
integer kb=0
integer jb=0
integer array xb
integer array vb
integer mb=0
integer Qb=0
integer array Wb
integer Eb=0
string array Zb
integer Ub=0
integer Ib=0
integer Pb=0
integer array Ab
integer array Db
integer array Hb
integer array Jb
integer array Kb
integer array Lb
integer array Xb
integer array Cb
integer array Vb
integer array Bb
integer array Nb
integer array Mb
integer array wy
integer array uy
integer array ry
integer array sy
integer array ty
integer array iy
integer array Sy
integer array cy
integer array oy
integer array Oy
integer array ly
integer array by
code yy=null
code py=null
code ey=null
code qy=null
code ay=null
code ny=null
code dy=null
code fy=null
code Ry=null
code Ty=null
code Yy=null
code Gy=null
code gy=null
code hy=null
code Fy=null
code ky=null
code jy=null
code xy=null
code vy=null
code my=null
code Qy=null
code Wy=null
code Ey=null
code Zy=null
code Uy=null
code Iy=null
code Py=null
code Ay=null
code Dy=null
code Hy=null
code Jy=null
code Ky=null
code Ly=null
code Xy=null
code Cy=null
code Vy=null
code By=null
code Ny=null
code My=null
code wp=null
code up=null
code rp=null
code sp=null
code tp=null
code ip=null
code Sp=null
code cp=null
code op=null
code Op=null
code lp=null
code bp=null
code yp=null
code pp=null
code ep=null
code qp=null
code ap=null
code np=null
code dp=null
code fp=null
code Rp=null
code Tp=null
code Yp=null
code Gp=null
code gp=null
code hp=null
code Fp=null
code kp=null
code jp=null
code xp=null
code vp=null
code mp=null
code Qp=null
code Wp=null
code Ep=null
code Zp=null
code Up=null
code Ip=null
code Pp=null
code Ap=null
code Dp=null
code Hp=null
code Jp=null
code Kp=null
code Lp=null
code Xp=null
code Cp=null
code Vp=null
code Bp=null
code Np=null
code Mp=null
code we=null
code ue=null
code re=null
code se=null
code te=null
code ie=null
code Se=null
code ce=null
code oe=null
code Oe=null
code le=null
code be=null
code ye=null
code pe=null
code ee=null
code qe=null
code ae=null
code ne=null
code de=null
code fe=null
code Re=null
code Te=null
code Ye=null
code Ge=null
code ge=null
code he=null
code Fe=null
code ke=null
code je=null
code xe=null
code ve=null
code me=null
code Qe=null
code We=null
code Ee=null
code Ze=null
code Ue=null
code Ie=null
code Pe=null
code Ae=null
code De=null
code He=null
code Je=null
code Ke=null
code Le=null
code Xe=null
code Ce=null
code Ve=null
code Be=null
code Ne=null
code Me=null
code wq=null
code uq=null
code rq=null
code sq=null
code tq=null
code iq=null
code Sq=null
code cq=null
code oq=null
code Oq=null
code lq=null
code bq=null
code yq=null
code pq=null
code eq=null
code qq=null
code aq=null
code nq=null
code dq=null
code fq=null
code Rq=null
code Tq=null
code Yq=null
code Gq=null
code gq=null
code hq=null
code Fq=null
code kq=null
code jq=null
code xq=null
code vq=null
code mq=null
code Qq=null
code Wq=null
code Eq=null
code Zq=null
code Uq=null
code Iq=null
code Pq=null
code Aq=null
code Dq=null
code Hq=null
code Jq=null
code Kq=null
code Lq=null
code Xq=null
code Cq=null
code Vq=null
code Bq=null
code Nq=null
code Mq=null
code wa=null
code ua=null
code ra=null
code sa=null
code ta=null
code ia=null
code Sa=null
code ca=null
code oa=null
code Oa=null
code la=null
code ba=null
code ya=null
code pa=null
code ea=null
code qa=null
code aa=null
code na=null
code da=null
code fa=null
code Ra=null
code Ta=null
code Ya=null
code Ga=null
code ga=null
code ha=null
code Fa=null
code ka=null
code ja=null
code xa=null
code va=null
code ma=null
code Qa=null
code Wa=null
code Ea=null
code Za=null
code Ua=null
code Ia=null
code Pa=null
code Aa=null
code Da=null
code Ha=null
code Ja=null
code Ka=null
code La=null
code Xa=null
code Ca=null
code Va=null
code Ba=null
code Na=null
code Ma=null
code wn=null
code un=null
code rn=null
code sn=null
code tn=null
code Sn=null
code cn=null
code on=null
code On=null
code ln=null
code bn=null
code yn=null
code pn=null
code en=null
code qn=null
code an=null
code nn=null
code dn=null
code fn=null
code Rn=null
code Tn=null
code Yn=null
code Gn=null
code gn=null
code hn=null
code Fn=null
code kn=null
code jn=null
code xn=null
code vn=null
code mn=null
code Qn=null
code Wn=null
code En=null
code Zn=null
code Un=null
code In=null
code Pn=null
code An=null
code Dn=null
code Hn=null
code Jn=null
code Kn=null
code Ln=null
code Xn=null
code Cn=null
code Vn=null
code Bn=null
code Nn=null
code Mn=null
code wd=null
code ud=null
code rd=null
code sd=null
code td=null
code id=null
code Sd=null
code cd=null
code od=null
code Od=null
code ld=null
code bd=null
code yd=null
code pd=null
code ed=null
code qd=null
code ad=null
code nd=null
code dd=null
code fd=null
code Rd=null
code Td=null
code Yd=null
code Gd=null
code gd=null
code hd=null
code Fd=null
code kd=null
code jd=null
code xd=null
code vd=null
code md=null
code Qd=null
code Wd=null
code Ed=null
code Zd=null
code Ud=null
code Id=null
code Pd=null
code Ad=null
code Dd=null
code Hd=null
code Jd=null
code Kd=null
code Ld=null
code Xd=null
code Cd=null
code Vd=null
code Bd=null
code Nd=null
code Md=null
code wf=null
code uf=null
code rf=null
code sf=null
code tf=null
code Sf=null
code cf=null
code of=null
code Of=null
code lf=null
code bf=null
code yf=null
code pf=null
code ef=null
code qf=null
code af=null
code nf=null
code df=null
code ff=null
code Rf=null
code Tf=null
code Yf=null
code Gf=null
code gf=null
code hf=null
code Ff=null
code kf=null
code jf=null
code xf=null
code vf=null
code mf=null
code Qf=null
code Wf=null
code Ef=null
code Zf=null
code Uf=null
code If=null
code Pf=null
code Af=null
unit Df=null
multiboard Hf=null
timer Jf=null
unit Kf=null
trigger Lf=null
rect Xf=null
endglobals
function Bf takes nothing returns nothing
local integer Vf=0
set Vf=0
loop
exitwhen Vf>8192
call CreateGroup()
set Vf=Vf+1
endloop
call CreateForce()
call CreateGroup()
call CreateForce()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateForce()
call CreateForce()
call CreateForce()
call CreateTimer()
call CreateForce()
call CreateGroup()
set w=CreateGroup()
call CreateGroup()
call CreateForce()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateTimer()
set Vf=0
loop
exitwhen Vf>24
set Vf=Vf+1
endloop
set Vf=0
loop
exitwhen Vf>24
set r[Vf]=0
set Vf=Vf+1
endloop
set s=CreateForce()
set Vf=0
loop
exitwhen Vf>24
set t[Vf]=0
set Vf=Vf+1
endloop
call CreateGroup()
set Vf=0
loop
exitwhen Vf>24
set Vf=Vf+1
endloop
set Vf=0
loop
exitwhen Vf>24
set Vf=Vf+1
endloop
call CreateForce()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
set b=CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
set Vf=0
loop
exitwhen Vf>24
set Vf=Vf+1
endloop
set Vf=0
loop
exitwhen Vf>24
set Vf=Vf+1
endloop
call CreateGroup()
set Vf=0
loop
exitwhen Vf>24
set Vf=Vf+1
endloop
set Vf=0
loop
exitwhen Vf>24
set Vf=Vf+1
endloop
set Vf=0
loop
exitwhen Vf>24
set Vf=Vf+1
endloop
set Vf=0
loop
exitwhen Vf>24
set y[Vf]=0
set Vf=Vf+1
endloop
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateForce()
call CreateForce()
set Vf=0
loop
exitwhen Vf>1
set Vf=Vf+1
endloop
set Vf=0
loop
exitwhen Vf>1
set Vf=Vf+1
endloop
set Vf=0
loop
exitwhen Vf>1
set Vf=Vf+1
endloop
set p=CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
set Vf=0
loop
exitwhen Vf>24
set q[Vf]=false
set Vf=Vf+1
endloop
endfunction
function AF takes nothing returns boolean
if GetUnitTypeId(GetDyingUnit())!=1747988801 then
return false
endif
return true
endfunction
function PU takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function AU takes nothing returns boolean
if not PU() then
return false
endif
return true
endfunction
function PW takes nothing returns boolean
if GetResearched()!=1378889810 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889810,true)!=1 then
return false
endif
return true
endfunction
function AW takes nothing returns boolean
if not PW() then
return false
endif
return true
endfunction
function AZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989836,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989837,0)
endfunction
function iSw takes integer tSw returns string
if tSw==0 then
return "|cffADADADtrace|r"
elseif tSw==1 then
return "|cff2685DCdebug|r"
elseif tSw==2 then
return "|cffFFCC00info|r"
elseif tSw==3 then
return "|cffF47E3Ewarning|r"
elseif tSw==4 then
return "|cffFB2700error|r"
endif
return "?"
endfunction
function r7 takes string K6,string L6 returns nothing
local integer X6
local string C6
local integer V6
local integer B6
local integer N6
local integer M6
local string w7
local string u7
set Zb[Eb]=L6
set Eb=Eb+1
set X6=StringHash(K6)
if HaveSavedInteger(Mc,-1,X6) then
if LoadInteger(Mc,-1,X6)+60<lo then
set w7=K6
set C6=""
set V6=Eb
set B6=0
loop
set V6=V6-1
set B6=B6+1
exitwhen B6>20 or V6<0
set C6=C6+"\n   "+Zb[V6]
endloop
call DisplayTimedTextToPlayer(gO,0.,0.,45.,iSw(4)+" - "+w7+C6)
call SaveInteger(Mc,-1,X6,R2I(lo))
call SaveBoolean(Mc,-1,X6,false)
elseif HaveSavedBoolean(Mc,-1,X6) then
if not LoadBoolean(Mc,-1,X6) then
call DisplayTimedTextToPlayer(gO,0.,0.,45.,iSw(4)+" - "+"|cffFF3A29Excessive repeating errors are being omitted")
call SaveBoolean(Mc,-1,X6,true)
endif
else
call DisplayTimedTextToPlayer(gO,0.,0.,45.,iSw(4)+" - "+"|cffFF3A29Excessive repeating errors are being omitted")
call SaveBoolean(Mc,-1,X6,true)
endif
else
call SaveInteger(Mc,-1,X6,R2I(lo))
set u7="Message: "+K6
set L6=""
set N6=Eb
set M6=0
loop
set N6=N6-1
set M6=M6+1
exitwhen M6>20 or N6<0
set L6=L6+"\n   "+Zb[N6]
endloop
call DisplayTimedTextToPlayer(gO,0.,0.,45.,iSw(4)+" - "+u7+L6)
endif
call I2S(1/0)
set Eb=Eb-1
endfunction
function Wow takes timer jow,integer xow,string vow returns nothing
local integer mow
local integer Qow
set Zb[Eb]=vow
set Eb=Eb+1
set mow=yl
set Qow=GetHandleId(jow)
set Zb[Eb]="when calling saveInt in TimerUtils, line 17"
set Eb=Eb+1
if Ob[mow]==0 then
if mow==0 then
call r7("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call r7("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Ol,mow,Qow,xow)
set Eb=Eb-1-1
endfunction
function Kow takes string How returns timer
local timer Jow
set Zb[Eb]=How
set Eb=Eb+1
if bl>0 then
set bl=bl-1
call Wow(ll[bl],0,"when calling setData in TimerUtils, line 29")
set Eb=Eb-1
set Jow=null
return ll[bl]
else
set Jow=CreateTimer()
call Wow(Jow,0,"when calling setData in TimerUtils, line 32")
set Eb=Eb-1
set Jf=Jow
set Jow=null
return Jf
endif
endfunction
function H3 takes integer I3,real P3,string A3 returns nothing
local timer D3
set Zb[Eb]=A3
set Eb=Eb+1
set D3=Kow("when calling getTimer in ClosureTimers, line 68")
call Wow(D3,I3,"when calling setData in ClosureTimers, line 69")
call TimerStart(D3,P3,false,hf)
set Ec[I3]=D3
set Eb=Eb-1
set D3=null
endfunction
function ryw takes integer Mbw,real wyw,string uyw returns nothing
set Zb[Eb]=uyw
set Eb=Eb+1
if Xl[Mbw]==0 then
if Mbw==0 then
call r7("Nullpointer exception when calling CallbackSingle.start","when calling error in ClosureTimers, line 67")
else
call r7("Called CallbackSingle.start on invalid object.","when calling error in ClosureTimers, line 67")
endif
endif
call H3(Mbw,wyw,"when calling start in ClosureTimers, line 67")
set Eb=Eb-1
endfunction
function vtw takes string Ftw returns boolean
local integer ktw
local integer jtw
local integer xtw
set Zb[Eb]=Ftw
set Eb=Eb+1
set pO=CreateTrigger()
set eO=CreateGroup()
set ktw=0
set jtw=bj_MAX_PLAYER_SLOTS-1
loop
exitwhen ktw>jtw
call SetPlayerAbilityAvailable(GO[ktw],1095577649,false)
set ktw=ktw+1
endloop
set Zb[Eb]="when calling alloc_Closure in OnUnitEnterLeave, line 59"
set Eb=Eb+1
if Kl==0 then
if Ll<32768 then
set Ll=Ll+1
set xtw=Ll
set Xl[xtw]=650
else
call r7("Out of memory: Could not create Closure.","when calling error in OnUnitEnterLeave, line 59")
set xtw=0
endif
else
set Kl=Kl-1
set xtw=Jl[Kl]
set Xl[xtw]=650
endif
set Eb=Eb-1
set Zb[Eb]="when calling nullTimer in OnUnitEnterLeave, line 59"
set Eb=Eb+1
set Zb[Eb]="when calling doAfter in ClosureTimers, line 22"
set Eb=Eb+1
call ryw(xtw,0.,"when calling start in ClosureTimers, line 15")
set Eb=Eb-1-1-1
return true
endfunction
function Aqw takes nothing returns boolean
set Eb=0
return vtw("OnUnitEnterLeave, line 1")
endfunction
function Qtw takes unit mtw returns nothing
call UnitAddAbility(mtw,1095577649)
call UnitMakeAbilityPermanent(mtw,true,1095577649)
set qO[aO]=mtw
set aO=aO+1
call TriggerEvaluate(pO)
set aO=aO-1
endfunction
function Atw takes nothing returns nothing
call Qtw(GetEnumUnit())
endfunction
function BA takes nothing returns nothing
local integer HA=1
local integer JA=1751343475
local player KA=GetOwningPlayer(GetTriggerUnit())
local rect VA=bj_mapInitialPlayableArea
local location CA=Location(GetRectCenterX(VA),GetRectCenterY(VA))
local location LA=Location(GetLocationX(CA)+100000000.00,GetLocationY(CA)+100000000.00)
local real XA=bj_UNIT_FACING
call GroupClear(bj_lastCreatedGroup)
loop
set HA=HA-1
exitwhen HA<0
call CreateUnitAtLocSaveLast(KA,JA,LA,XA)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
call ShowUnit(bj_lastCreatedUnit,false)
set KA=null
set LA=null
set CA=null
set VA=null
endfunction
function BE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989815,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989838,0)
endfunction
function BG takes nothing returns nothing
local location AG
local location DG
local real HG
local real JG
local rect KG
local group LG
local group XG
local code CG
local boolean VG
set u=GetUnitLoc(GetSpellAbilityUnit())
set AG=u
set c=Location(GetLocationX(AG)+0.00,GetLocationY(AG)+200.00)
set DG=u
set HG=GetLocationX(DG)
set JG=GetLocationY(DG)
set O=Rect(HG-140,JG-150,HG+140,JG+150)
set KG=O
set LG=CreateGroup()
call GroupEnumUnitsInRect(LG,KG,null)
call DestroyBoolExpr(null)
set b=LG
set XG=b
set CG=Iy
set VG=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(XG,CG)
if VG then
call DestroyGroup(XG)
endif
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747988824,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"stand")
call DestroyGroup(b)
call RemoveLocation(c)
call RemoveLocation(u)
set AG=null
set DG=null
set KG=null
set LG=null
set XG=null
endfunction
function BJ takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function VK takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989315 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function BK takes nothing returns boolean
if not VK() then
return false
endif
return true
endfunction
function VQ takes nothing returns boolean
if GetResearched()!=1378889807 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889807,true)!=2 then
return false
endif
return true
endfunction
function BQ takes nothing returns boolean
if not VQ() then
return false
endif
return true
endfunction
function Blw takes nothing returns boolean
call Location(0.,0.)
return true
endfunction
function Bm takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651843,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651842,0)
endfunction
function U3 takes integer W3,real E3,string Z3 returns nothing
set Zb[Eb]=Z3
set Eb=Eb+1
set Wc[W3]=Kow("when calling getTimer in ClosureTimers, line 89")
call Wow(Wc[W3],W3,"when calling setData in ClosureTimers, line 90")
call TimerStart(Wc[W3],E3,true,gf)
set Eb=Eb-1
endfunction
function yww takes string Oww returns boolean
local integer lww
local integer bww
set Zb[Eb]=Oww
set Eb=Eb+1
set Zb[Eb]="when calling alloc_Closure in MultiboardCityUpdate, line 18"
set Eb=Eb+1
if Kl==0 then
if Ll<32768 then
set Ll=Ll+1
set lww=Ll
set Xl[lww]=648
else
call r7("Out of memory: Could not create Closure.","when calling error in MultiboardCityUpdate, line 18")
set lww=0
endif
else
set Kl=Kl-1
set lww=Jl[Kl]
set Xl[lww]=648
endif
set Eb=Eb-1
set Zb[Eb]="when calling doAfter in MultiboardCityUpdate, line 18"
set Eb=Eb+1
call ryw(lww,0.01,"when calling start in ClosureTimers, line 15")
set Eb=Eb-1
set Zb[Eb]="when calling alloc_Closure in MultiboardCityUpdate, line 25"
set Eb=Eb+1
if Vl==0 then
if Bl<32768 then
set Bl=Bl+1
set bww=Bl
set Nl[bww]=637
else
call r7("Out of memory: Could not create Closure.","when calling error in MultiboardCityUpdate, line 25")
set bww=0
endif
else
set Vl=Vl-1
set bww=Cl[Vl]
set Nl[bww]=637
endif
set Eb=Eb-1
set Zb[Eb]="when calling doPeriodically in MultiboardCityUpdate, line 25"
set Eb=Eb+1
set Zb[Eb]="when calling start in ClosureTimers, line 36"
set Eb=Eb+1
if Nl[bww]==0 then
if bww==0 then
call r7("Nullpointer exception when calling CallbackPeriodic.start","when calling error in ClosureTimers, line 88")
else
call r7("Called CallbackPeriodic.start on invalid object.","when calling error in ClosureTimers, line 88")
endif
endif
call U3(bww,1.0,"when calling start in ClosureTimers, line 88")
set Eb=Eb-1-1-1
return true
endfunction
function Bqw takes nothing returns boolean
set Eb=0
return yww("MultiboardCityUpdate, line 1")
endfunction
function CR takes nothing returns nothing
endfunction
function XT takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989043 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function CT takes nothing returns boolean
if not XT() then
return false
endif
return true
endfunction
function XU takes nothing returns boolean
if GetResearched()!=1378890049 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890049,true)!=1 then
return false
endif
return true
endfunction
function CU takes nothing returns boolean
if not XU() then
return false
endif
return true
endfunction
function XW takes nothing returns boolean
if GetResearched()!=1378889810 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889810,true)!=2 then
return false
endif
return true
endfunction
function CW takes nothing returns boolean
if not XW() then
return false
endif
return true
endfunction
function CY takes nothing returns nothing
local unit LY=GetSpellTargetUnit()
local unitstate XY=UNIT_STATE_MANA
call SetUnitState(LY,UNIT_STATE_MANA,RMaxBJ(0.,GetUnitState(GetSpellTargetUnit(),XY)-600.00))
set LY=null
set XY=null
endfunction
function CZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989835,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989836,0)
endfunction
function Ccw takes nothing returns boolean
return true
endfunction
function Xg takes nothing returns boolean
local unitstate Lg=UNIT_STATE_MANA
if GetUnitState(GetEnumUnit(),Lg)>0.00 then
set Lg=null
return false
endif
set Lg=null
return true
endfunction
function Cg takes nothing returns nothing
if Xg() then
call KillUnit(GetEnumUnit())
endif
endfunction
function y5 takes string O5 returns boolean
local integer l5
local integer b5
set Zb[Eb]=O5
set Eb=Eb+1
set Zb[Eb]="when calling alloc_Closure in Economy, line 43"
set Eb=Eb+1
if Vl==0 then
if Bl<32768 then
set Bl=Bl+1
set l5=Bl
set Nl[l5]=635
else
call r7("Out of memory: Could not create Closure.","when calling error in Economy, line 43")
set l5=0
endif
else
set Vl=Vl-1
set l5=Cl[Vl]
set Nl[l5]=635
endif
set Eb=Eb-1
set Zb[Eb]="when calling doPeriodically in Economy, line 43"
set Eb=Eb+1
set Zb[Eb]="when calling start in ClosureTimers, line 36"
set Eb=Eb+1
if Nl[l5]==0 then
if l5==0 then
call r7("Nullpointer exception when calling CallbackPeriodic.start","when calling error in ClosureTimers, line 88")
else
call r7("Called CallbackPeriodic.start on invalid object.","when calling error in ClosureTimers, line 88")
endif
endif
call U3(l5,0.333333343,"when calling start in ClosureTimers, line 88")
set Eb=Eb-1-1
set Zb[Eb]="when calling alloc_Closure in Economy, line 50"
set Eb=Eb+1
if Vl==0 then
if Bl<32768 then
set Bl=Bl+1
set b5=Bl
set Nl[b5]=636
else
call r7("Out of memory: Could not create Closure.","when calling error in Economy, line 50")
set b5=0
endif
else
set Vl=Vl-1
set b5=Cl[Vl]
set Nl[b5]=636
endif
set Eb=Eb-1
set Zb[Eb]="when calling doPeriodically in Economy, line 50"
set Eb=Eb+1
set Zb[Eb]="when calling start in ClosureTimers, line 36"
set Eb=Eb+1
if Nl[b5]==0 then
if b5==0 then
call r7("Nullpointer exception when calling CallbackPeriodic.start","when calling error in ClosureTimers, line 88")
else
call r7("Called CallbackPeriodic.start on invalid object.","when calling error in ClosureTimers, line 88")
endif
endif
call U3(b5,10.0,"when calling start in ClosureTimers, line 88")
set Eb=Eb-1-1-1
return true
endfunction
function Cqw takes nothing returns boolean
set Eb=0
return y5("Economy, line 1")
endfunction
function AA takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())==1747988531 then
return true
endif
if GetUnitTypeId(GetTriggerUnit())==1747990328 then
return true
endif
if GetUnitTypeId(GetTriggerUnit())==1747989592 then
return true
endif
if GetUnitTypeId(GetTriggerUnit())==1747990086 then
return true
endif
return false
endfunction
function DA takes nothing returns boolean
if not AA() then
return false
endif
return true
endfunction
function AE takes nothing returns boolean
if GetResearched()!=1378890037 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890037,true)!=2 then
return false
endif
return true
endfunction
function DE takes nothing returns boolean
if not AE() then
return false
endif
return true
endfunction
function AJ takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990085 then
return false
endif
return true
endfunction
function DJ takes nothing returns boolean
if not AJ() then
return false
endif
return true
endfunction
function DT takes nothing returns nothing
local player PT=GetOwningPlayer(GetConstructedStructure())
local player AT=GetOwningPlayer(GetConstructedStructure())
set y[GetPlayerId(PT)+1]=y[GetPlayerId(AT)+1]+75
call UnitAddAbility(GetConstructedStructure(),1093677891)
set PT=null
set AT=null
endfunction
function DU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990323,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990106,0)
endfunction
function DW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989573,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989572,0)
endfunction
function Ak takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989048 then
return false
endif
if GetUnitTypeId(GetSpellTargetUnit())!=1747988569 then
return false
endif
return true
endfunction
function Dk takes nothing returns boolean
if not Ak() then
return false
endif
return true
endfunction
function Am takes nothing returns boolean
if GetResearched()!=1378889803 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889803,true)!=1 then
return false
endif
return true
endfunction
function Dm takes nothing returns boolean
if not Am() then
return false
endif
return true
endfunction
function Z7 takes string W7 returns integer
local integer E7
set Zb[Eb]=W7
set Eb=Eb+1
set Zb[Eb]="when calling HashMap in HashMap, line 7"
set Eb=Eb+1
if cb==0 then
if ob<32768 then
set ob=ob+1
set E7=ob
set Ob[E7]=725
else
call r7("Out of memory: Could not create HashMap.","when calling error in HashMap, line 8")
set E7=0
endif
else
set cb=cb-1
set E7=Sb[cb]
set Ob[E7]=725
endif
set Eb=Eb-1-1
return E7
endfunction
function yM takes string lM returns boolean
local integer bM
set Zb[Eb]=lM
set Eb=Eb+1
set bc=ConvertPlayerEvent(96)
set nc=Z7("when calling new_HashMap in ClosureEvents, line 99")
set dc=Z7("when calling new_HashMap in ClosureEvents, line 100")
set yc=CreateTrigger()
set pc=CreateTrigger()
set ec=CreateTrigger()
set Zb[Eb]="when calling alloc_Closure in ClosureEvents, line 279"
set Eb=Eb+1
if Kl==0 then
if Ll<32768 then
set Ll=Ll+1
set bM=Ll
set Xl[bM]=640
else
call r7("Out of memory: Could not create Closure.","when calling error in ClosureEvents, line 279")
set bM=0
endif
else
set Kl=Kl-1
set bM=Jl[Kl]
set Xl[bM]=640
endif
set Eb=Eb-1
set Zb[Eb]="when calling nullTimer in ClosureEvents, line 279"
set Eb=Eb+1
set Zb[Eb]="when calling doAfter in ClosureTimers, line 22"
set Eb=Eb+1
call ryw(bM,0.,"when calling start in ClosureTimers, line 15")
set Eb=Eb-1-1-1
return true
endfunction
function Dqw takes nothing returns boolean
set Eb=0
return yM("ClosureEvents, line 1")
endfunction
function EA takes nothing returns nothing
local integer kA=1
local integer jA=1751868773
local player xA=GetOwningPlayer(GetTriggerUnit())
local rect WA=bj_mapInitialPlayableArea
local location QA=Location(GetRectCenterX(WA),GetRectCenterY(WA))
local location vA=Location(GetLocationX(QA)+100000000.00,GetLocationY(QA)+100000000.00)
local real mA=bj_UNIT_FACING
call GroupClear(bj_lastCreatedGroup)
loop
set kA=kA-1
exitwhen kA<0
call CreateUnitAtLocSaveLast(xA,jA,vA,mA)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
call ShowUnit(bj_lastCreatedUnit,false)
set xA=null
set vA=null
set QA=null
set WA=null
endfunction
function EE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651846,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651847,0)
endfunction
function EF takes nothing returns nothing
local player GF=GetOwningPlayer(GetKillingUnit())
local playerstate gF=PLAYER_STATE_RESOURCE_LUMBER
local playerstate hF
local playerstate FF
local player kF
local force jF
local location xF
local real vF
local real mF
local player QF
local force WF
if gF==PLAYER_STATE_RESOURCE_GOLD then
set hF=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(GF,hF,GetPlayerState(GF,hF)+125)
elseif gF==PLAYER_STATE_RESOURCE_LUMBER then
set FF=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(GF,FF,GetPlayerState(GF,FF)+125)
endif
call SetPlayerState(GF,gF,GetPlayerState(GF,gF)+125)
set kF=GetOwningPlayer(GetKillingUnit())
set jF=CreateForce()
call ForceAddPlayer(jF,kF)
if IsPlayerInForce(GetLocalPlayer(),jF) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_089")
endif
set e=GetUnitLoc(GetDyingUnit())
set QF=GetOwningPlayer(GetDyingUnit())
set WF=CreateForce()
call ForceAddPlayer(WF,QF)
set xF=e
set vF=GetLocationX(xF)
set mF=GetLocationY(xF)
if IsPlayerInForce(GetLocalPlayer(),WF) then
call PingMinimap(vF,mF,2.00)
endif
call RemoveLocation(e)
set GF=null
set gF=null
set hF=null
set FF=null
set kF=null
set jF=null
set xF=null
set QF=null
set WF=null
endfunction
function EJ takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function WQ takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function EQ takes nothing returns boolean
if not WQ() then
return false
endif
return true
endfunction
function Ek takes nothing returns nothing
local player Gk=GetOwningPlayer(GetKillingUnit())
local playerstate gk=PLAYER_STATE_RESOURCE_GOLD
local playerstate hk
local playerstate Fk
local player kk
local force jk
local location xk
local real vk
local real mk
local player Qk
local force Wk
if gk==PLAYER_STATE_RESOURCE_GOLD then
set hk=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(Gk,hk,GetPlayerState(Gk,hk)+250)
elseif gk==PLAYER_STATE_RESOURCE_LUMBER then
set Fk=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(Gk,Fk,GetPlayerState(Gk,Fk)+250)
endif
call SetPlayerState(Gk,gk,GetPlayerState(Gk,gk)+250)
set kk=GetOwningPlayer(GetKillingUnit())
set jk=CreateForce()
call ForceAddPlayer(jk,kk)
if IsPlayerInForce(GetLocalPlayer(),jk) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_092")
endif
set e=GetUnitLoc(GetDyingUnit())
set Qk=GetOwningPlayer(GetDyingUnit())
set Wk=CreateForce()
call ForceAddPlayer(Wk,Qk)
set xk=e
set vk=GetLocationX(xk)
set mk=GetLocationY(xk)
if IsPlayerInForce(GetLocalPlayer(),Wk) then
call PingMinimap(vk,mk,2.00)
endif
call RemoveLocation(e)
set Gk=null
set gk=null
set hk=null
set Fk=null
set kk=null
set jk=null
set xk=null
set Qk=null
set Wk=null
endfunction
function Em takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989080,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988818,0)
endfunction
function oow takes string Sow returns integer
local integer cow
set Zb[Eb]=Sow
set Eb=Eb+1
set Zb[Eb]="when calling Table in Table, line 5"
set Eb=Eb+1
if cb==0 then
if ob<32768 then
set ob=ob+1
set cow=ob
set Ob[cow]=724
else
call r7("Out of memory: Could not create Table.","when calling error in Table, line 6")
set cow=0
endif
else
set cb=cb-1
set cow=Sb[cb]
set Ob[cow]=724
endif
set Eb=Eb-1-1
return cow
endfunction
function Eqw takes nothing returns boolean
set Eb=0
set Zb[Eb]="TimerUtils, line 1"
set Eb=Eb+1
set yl=oow("when calling new_Table in TimerUtils, line 12")
call CreateTimer()
call CreateTrigger()
set Eb=Eb-1
return true
endfunction
function hA takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())==1747988530 then
return true
endif
if GetUnitTypeId(GetTriggerUnit())==1747990327 then
return true
endif
if GetUnitTypeId(GetTriggerUnit())==1747989591 then
return true
endif
if GetUnitTypeId(GetTriggerUnit())==1747990085 then
return true
endif
return false
endfunction
function FA takes nothing returns boolean
if not hA() then
return false
endif
return true
endfunction
function hE takes nothing returns boolean
if GetResearched()!=1378889818 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889818,true)!=2 then
return false
endif
return true
endfunction
function FE takes nothing returns boolean
if not hE() then
return false
endif
return true
endfunction
function hJ takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989591 then
return false
endif
return true
endfunction
function FJ takes nothing returns boolean
if not hJ() then
return false
endif
return true
endfunction
function FU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990321,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990104,0)
endfunction
function FW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651833,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651841,0)
endfunction
function hm takes nothing returns boolean
if GetResearched()!=1378889800 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889800,true)!=1 then
return false
endif
return true
endfunction
function Fm takes nothing returns boolean
if not hm() then
return false
endif
return true
endfunction
function YD takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989325 then
return false
endif
return true
endfunction
function GD takes nothing returns boolean
if not YD() then
return false
endif
return true
endfunction
function YI takes nothing returns boolean
if GetResearched()!=1378890053 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890053,true)!=1 then
return false
endif
return true
endfunction
function GI takes nothing returns boolean
if not YI() then
return false
endif
return true
endfunction
function DOw takes unit IOw,string POw returns integer
local integer AOw
set Zb[Eb]=POw
set Eb=Eb+1
set Zb[Eb]="when calling UnitIndex in UnitIndexer, line 166"
set Eb=Eb+1
if mb==0 then
if Qb<32768 then
set Qb=Qb+1
set AOw=Qb
set Wb[AOw]=734
else
call r7("Out of memory: Could not create UnitIndex.","when calling error in UnitIndexer, line 157")
set AOw=0
endif
else
set mb=mb-1
set AOw=vb[mb]
set Wb[AOw]=734
endif
set Eb=Eb-1
set dl[AOw]=IOw
call SetUnitUserData(dl[AOw],AOw)
set al=dl[AOw]
call TriggerEvaluate(el)
set Eb=Eb-1
return AOw
endfunction
function KOw takes integer HOw,string JOw returns nothing
set Zb[Eb]=JOw
set Eb=Eb+1
set nl=dl[HOw]
call TriggerEvaluate(ql)
call SetUnitUserData(dl[HOw],0)
set Zb[Eb]="when calling UnitIndex in UnitIndexer, line 172"
set Eb=Eb+1
if Wb[HOw]==0 then
call r7("Double free: object of type UnitIndex","when calling error in UnitIndexer, line 157")
else
set vb[mb]=HOw
set mb=mb+1
set Wb[HOw]=0
endif
set Eb=Eb-1-1
endfunction
function WOw takes unit vOw,string mOw returns boolean
local integer QOw
set Zb[Eb]=mOw
set Eb=Eb+1
if GetUnitUserData(vOw)==0 then
set Eb=Eb-1
return false
else
set Zb[Eb]="when calling toUnitIndex in UnitIndexer, line 154"
set Eb=Eb+1
set QOw=GetUnitUserData(vOw)
if QOw==0 then
set QOw=DOw(vOw,"when calling new_UnitIndex in UnitIndexer, line 125")
endif
set Eb=Eb-1
set Zb[Eb]="when calling UnitIndex in UnitIndexer, line 154"
set Eb=Eb+1
if Wb[QOw]==0 then
if QOw==0 then
call r7("Nullpointer exception when calling UnitIndex.UnitIndex","when calling error in UnitIndexer, line 157")
else
call r7("Called UnitIndex.UnitIndex on invalid object.","when calling error in UnitIndexer, line 157")
endif
endif
call KOw(QOw,"when calling destroyUnitIndex in UnitIndexer, line 157")
set Eb=Eb-1-1
return true
endif
endfunction
function Gaw takes nothing returns nothing
set Eb=0
set Zb[Eb]="UnitIndexer, line 180"
set Eb=Eb+1
call WOw(qO[aO-1],"when calling deindex in UnitIndexer, line 180")
set Eb=Eb-1
endfunction
function B8 takes integer K8,integer L8,integer X8,string C8 returns integer
local integer V8
set Zb[Eb]=C8
set Eb=Eb+1
set Zb[Eb]="when calling LLEntry in LinkedList, line 401"
set Eb=Eb+1
if pb==0 then
if eb<32768 then
set eb=eb+1
set V8=eb
set qb[V8]=696
else
call r7("Out of memory: Could not create LLEntry.","when calling error in LinkedList, line 396")
set V8=0
endif
else
set pb=pb-1
set V8=yb[pb]
set qb[V8]=696
endif
set Eb=Eb-1
set Ro[V8]=K8
set To[V8]=L8
set Yo[V8]=X8
set Eb=Eb-1
return V8
endfunction
function bpw takes integer cpw,integer opw,string Opw returns nothing
local integer lpw
set Zb[Eb]=Opw
set Eb=Eb+1
if Gb[cpw]==0 then
if cpw==0 then
call r7("Nullpointer exception when calling LinkedList.add","when calling error in LinkedList, line 37")
else
call r7("Called LinkedList.add on invalid object.","when calling error in LinkedList, line 37")
endif
endif
set Zb[Eb]="when calling add in LinkedList, line 37"
set Eb=Eb+1
set lpw=B8(opw,To[ko[cpw]],ko[cpw],"when calling new_LLEntry in LinkedList, line 39")
set Yo[To[ko[cpw]]]=lpw
set To[ko[cpw]]=lpw
set jo[cpw]=jo[cpw]+1
set Eb=Eb-1-1
endfunction
function p9 takes string b9 returns integer
local integer y9
set Zb[Eb]=b9
set Eb=Eb+1
set Zb[Eb]="when calling LinkedList in LinkedList, line 31"
set Eb=Eb+1
if Tb==0 then
if Yb<32768 then
set Yb=Yb+1
set y9=Yb
set Gb[y9]=700
else
call r7("Out of memory: Could not create LinkedList.","when calling error in LinkedList, line 17")
set y9=0
endif
else
set Tb=Tb-1
set y9=Rb[Tb]
set Gb[y9]=700
endif
set Eb=Eb-1
set Zb[Eb]="when calling construct_LinkedList2 in LinkedList, line 31"
set Eb=Eb+1
set ko[y9]=B8(0,0,0,"when calling new_LLEntry in LinkedList, line 18")
set jo[y9]=0
set Yo[ko[y9]]=ko[y9]
set To[ko[y9]]=ko[y9]
set Eb=Eb-1-1
return y9
endfunction
function Gqw takes nothing returns boolean
local integer Yqw
set Eb=0
set Zb[Eb]="Abilities, line 1"
set Eb=Eb+1
set Zb[Eb]="when calling asList in Abilities, line 16"
set Eb=Eb+1
set Yqw=p9("when calling new_LinkedList in LinkedList, line 391")
call bpw(Yqw,1093677642,"when calling add in LinkedList, line 393")
call bpw(Yqw,1093677641,"when calling add in LinkedList, line 393")
call bpw(Yqw,1093677640,"when calling add in LinkedList, line 393")
set Eb=Eb-1
set OS=Yqw
set Eb=Eb-1
return true
endfunction
function Gww takes nothing returns boolean
return true
endfunction
function Yx takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function Gx takes nothing returns boolean
if not Yx() then
return false
endif
return true
endfunction
function HE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651848,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651846,0)
endfunction
function HJ takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function HP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990584,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990594,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990583,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990607,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990598,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990606,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990599,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990601,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651855,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651852,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651850,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990595,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990596,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990604,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990603,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990322,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990323,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990321,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990324,0)
endfunction
function DQ takes nothing returns boolean
if GetResearched()!=1378889807 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889807,true)!=1 then
return false
endif
return true
endfunction
function HQ takes nothing returns boolean
if not DQ() then
return false
endif
return true
endfunction
function Hm takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651828,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651827,0)
endfunction
function iOw takes string Mow,string wOw returns integer
local integer uOw
local integer rOw
local boolean sOw
local integer tOw
set Zb[Eb]=wOw
set Eb=Eb+1
set uOw=StringHash(Mow)
set rOw=pl
set Zb[Eb]="when calling hasString in TypeCasting, line 24"
set Eb=Eb+1
if Ob[rOw]==0 then
if rOw==0 then
call r7("Nullpointer exception when calling Table.hasString","when calling error in Table, line 18")
else
call r7("Called Table.hasString on invalid object.","when calling error in Table, line 18")
endif
endif
set sOw=HaveSavedString(Ol,rOw,uOw)
set Eb=Eb-1
if not sOw then
set tOw=pl
set Zb[Eb]="when calling saveString in TypeCasting, line 25"
set Eb=Eb+1
if Ob[tOw]==0 then
if tOw==0 then
call r7("Nullpointer exception when calling Table.saveString","when calling error in Table, line 60")
else
call r7("Called Table.saveString on invalid object.","when calling error in Table, line 60")
endif
endif
call SaveStr(Ol,tOw,uOw,Mow)
set Eb=Eb-1
endif
set Eb=Eb-1
return uOw
endfunction
function vsw takes string Jww returns boolean
local integer Kww
local integer Lww
local integer Xww
local integer Cww
local integer Vww
local integer Bww
local integer Nww
local integer Mww
local integer wuw
local integer uuw
local integer ruw
local integer suw
local integer tuw
local integer iuw
local integer Suw
local integer cuw
local integer ouw
local integer Ouw
local integer luw
local integer buw
local integer yuw
local integer puw
local integer euw
local integer quw
local integer auw
local integer nuw
local integer duw
local integer fuw
local integer Ruw
local integer Tuw
local integer Yuw
local integer Guw
local integer guw
local integer huw
local integer Fuw
local integer kuw
local integer juw
local integer xuw
local integer vuw
local integer muw
local integer Quw
local integer Wuw
local integer Euw
local integer Zuw
local integer Uuw
local integer Iuw
local integer Puw
local integer Auw
local integer Duw
local integer Huw
local integer Juw
local integer Kuw
local integer Luw
local integer Xuw
local integer Cuw
local integer Vuw
local integer Buw
local integer Nuw
local integer Muw
local integer wrw
local integer urw
local integer rrw
local integer srw
local integer trw
local integer irw
local integer Srw
local integer crw
local integer orw
local integer Orw
local integer lrw
local integer brw
local integer yrw
local integer prw
local integer erw
local integer qrw
local integer arw
local integer nrw
local integer drw
local integer frw
local integer Rrw
local integer Trw
local integer Yrw
local integer Grw
local integer grw
local integer hrw
local integer Frw
local integer krw
local integer jrw
local integer xrw
local integer vrw
local integer mrw
local integer Qrw
local integer Wrw
local integer Erw
local integer Zrw
local integer Urw
local integer Irw
local integer Prw
local integer Arw
local integer Drw
local integer Hrw
local integer Jrw
local integer Krw
local integer Lrw
local integer Xrw
local integer Crw
local integer Vrw
local integer Brw
local integer Nrw
local integer Mrw
local integer wsw
local integer usw
local integer rsw
local integer ssw
local integer tsw
local integer isw
local integer Ssw
local integer csw
local integer osw
local integer Osw
local integer lsw
local integer bsw
local integer ysw
local integer psw
local integer esw
local integer qsw
local integer asw
local integer nsw
local integer dsw
local integer fsw
local integer Rsw
local integer Tsw
local integer Ysw
local integer Gsw
local integer gsw
local integer hsw
local integer Fsw
local integer ksw
local integer jsw
local integer xsw
set Zb[Eb]=Jww
set Eb=Eb+1
set Kww=R2I(70)
set Lww=R2I(30)
set Xww=R2I(10)
set Cww=R2I(70)
set Vww=R2I(30)
set Bww=R2I(140)
set Zb[Eb]="when calling asList in Multiboards, line 23"
set Eb=Eb+1
set Nww=p9("when calling new_LinkedList in LinkedList, line 391")
call bpw(Nww,Kww,"when calling add in LinkedList, line 393")
call bpw(Nww,Lww,"when calling add in LinkedList, line 393")
call bpw(Nww,Xww,"when calling add in LinkedList, line 393")
call bpw(Nww,Cww,"when calling add in LinkedList, line 393")
call bpw(Nww,Vww,"when calling add in LinkedList, line 393")
call bpw(Nww,Bww,"when calling add in LinkedList, line 393")
set Eb=Eb-1
set rO[0]=Nww
set Mww=R2I(70)
set wuw=R2I(30)
set uuw=R2I(10)
set ruw=R2I(70)
set suw=R2I(30)
set tuw=R2I(140)
set Zb[Eb]="when calling asList in Multiboards, line 24"
set Eb=Eb+1
set iuw=p9("when calling new_LinkedList in LinkedList, line 391")
call bpw(iuw,Mww,"when calling add in LinkedList, line 393")
call bpw(iuw,wuw,"when calling add in LinkedList, line 393")
call bpw(iuw,uuw,"when calling add in LinkedList, line 393")
call bpw(iuw,ruw,"when calling add in LinkedList, line 393")
call bpw(iuw,suw,"when calling add in LinkedList, line 393")
call bpw(iuw,tuw,"when calling add in LinkedList, line 393")
set Eb=Eb-1
set rO[1]=iuw
set Suw=R2I(70)
set cuw=R2I(30)
set ouw=R2I(10)
set Ouw=R2I(70)
set luw=R2I(30)
set buw=R2I(140)
set Zb[Eb]="when calling asList in Multiboards, line 25"
set Eb=Eb+1
set yuw=p9("when calling new_LinkedList in LinkedList, line 391")
call bpw(yuw,Suw,"when calling add in LinkedList, line 393")
call bpw(yuw,cuw,"when calling add in LinkedList, line 393")
call bpw(yuw,ouw,"when calling add in LinkedList, line 393")
call bpw(yuw,Ouw,"when calling add in LinkedList, line 393")
call bpw(yuw,luw,"when calling add in LinkedList, line 393")
call bpw(yuw,buw,"when calling add in LinkedList, line 393")
set Eb=Eb-1
set rO[2]=yuw
set puw=R2I(2.5)
set euw=R2I(2.5)
set quw=R2I(400)
set auw=R2I(2.5)
set nuw=R2I(2.5)
set duw=R2I(2.5)
set Zb[Eb]="when calling asList in Multiboards, line 27"
set Eb=Eb+1
set fuw=p9("when calling new_LinkedList in LinkedList, line 391")
call bpw(fuw,puw,"when calling add in LinkedList, line 393")
call bpw(fuw,euw,"when calling add in LinkedList, line 393")
call bpw(fuw,quw,"when calling add in LinkedList, line 393")
call bpw(fuw,auw,"when calling add in LinkedList, line 393")
call bpw(fuw,nuw,"when calling add in LinkedList, line 393")
call bpw(fuw,duw,"when calling add in LinkedList, line 393")
set Eb=Eb-1
set rO[3]=fuw
set Ruw=R2I(70)
set Tuw=R2I(30)
set Yuw=R2I(30)
set Guw=R2I(10)
set guw=R2I(126)
set huw=R2I(84.000007629)
set Zb[Eb]="when calling asList in Multiboards, line 28"
set Eb=Eb+1
set Fuw=p9("when calling new_LinkedList in LinkedList, line 391")
call bpw(Fuw,Ruw,"when calling add in LinkedList, line 393")
call bpw(Fuw,Tuw,"when calling add in LinkedList, line 393")
call bpw(Fuw,Yuw,"when calling add in LinkedList, line 393")
call bpw(Fuw,Guw,"when calling add in LinkedList, line 393")
call bpw(Fuw,guw,"when calling add in LinkedList, line 393")
call bpw(Fuw,huw,"when calling add in LinkedList, line 393")
set Eb=Eb-1
set rO[4]=Fuw
set kuw=R2I(70)
set juw=R2I(30)
set xuw=R2I(30)
set vuw=R2I(10)
set muw=R2I(126)
set Quw=R2I(84.000007629)
set Zb[Eb]="when calling asList in Multiboards, line 29"
set Eb=Eb+1
set Wuw=p9("when calling new_LinkedList in LinkedList, line 391")
call bpw(Wuw,kuw,"when calling add in LinkedList, line 393")
call bpw(Wuw,juw,"when calling add in LinkedList, line 393")
call bpw(Wuw,xuw,"when calling add in LinkedList, line 393")
call bpw(Wuw,vuw,"when calling add in LinkedList, line 393")
call bpw(Wuw,muw,"when calling add in LinkedList, line 393")
call bpw(Wuw,Quw,"when calling add in LinkedList, line 393")
set Eb=Eb-1
set rO[5]=Wuw
set Euw=R2I(70)
set Zuw=R2I(30)
set Uuw=R2I(30)
set Iuw=R2I(10)
set Puw=R2I(126)
set Auw=R2I(84.000007629)
set Zb[Eb]="when calling asList in Multiboards, line 30"
set Eb=Eb+1
set Duw=p9("when calling new_LinkedList in LinkedList, line 391")
call bpw(Duw,Euw,"when calling add in LinkedList, line 393")
call bpw(Duw,Zuw,"when calling add in LinkedList, line 393")
call bpw(Duw,Uuw,"when calling add in LinkedList, line 393")
call bpw(Duw,Iuw,"when calling add in LinkedList, line 393")
call bpw(Duw,Puw,"when calling add in LinkedList, line 393")
call bpw(Duw,Auw,"when calling add in LinkedList, line 393")
set Eb=Eb-1
set rO[6]=Duw
set Huw=R2I(70)
set Juw=R2I(30)
set Kuw=R2I(30)
set Luw=R2I(10)
set Xuw=R2I(126)
set Cuw=R2I(84.000007629)
set Zb[Eb]="when calling asList in Multiboards, line 31"
set Eb=Eb+1
set Vuw=p9("when calling new_LinkedList in LinkedList, line 391")
call bpw(Vuw,Huw,"when calling add in LinkedList, line 393")
call bpw(Vuw,Juw,"when calling add in LinkedList, line 393")
call bpw(Vuw,Kuw,"when calling add in LinkedList, line 393")
call bpw(Vuw,Luw,"when calling add in LinkedList, line 393")
call bpw(Vuw,Xuw,"when calling add in LinkedList, line 393")
call bpw(Vuw,Cuw,"when calling add in LinkedList, line 393")
set Eb=Eb-1
set rO[7]=Vuw
set Buw=R2I(70)
set Nuw=R2I(30)
set Muw=R2I(30)
set wrw=R2I(10)
set urw=R2I(126)
set rrw=R2I(84.000007629)
set Zb[Eb]="when calling asList in Multiboards, line 32"
set Eb=Eb+1
set srw=p9("when calling new_LinkedList in LinkedList, line 391")
call bpw(srw,Buw,"when calling add in LinkedList, line 393")
call bpw(srw,Nuw,"when calling add in LinkedList, line 393")
call bpw(srw,Muw,"when calling add in LinkedList, line 393")
call bpw(srw,wrw,"when calling add in LinkedList, line 393")
call bpw(srw,urw,"when calling add in LinkedList, line 393")
call bpw(srw,rrw,"when calling add in LinkedList, line 393")
set Eb=Eb-1
set rO[8]=srw
set trw=R2I(70)
set irw=R2I(30)
set Srw=R2I(30)
set crw=R2I(10)
set orw=R2I(126)
set Orw=R2I(84.000007629)
set Zb[Eb]="when calling asList in Multiboards, line 33"
set Eb=Eb+1
set lrw=p9("when calling new_LinkedList in LinkedList, line 391")
call bpw(lrw,trw,"when calling add in LinkedList, line 393")
call bpw(lrw,irw,"when calling add in LinkedList, line 393")
call bpw(lrw,Srw,"when calling add in LinkedList, line 393")
call bpw(lrw,crw,"when calling add in LinkedList, line 393")
call bpw(lrw,orw,"when calling add in LinkedList, line 393")
call bpw(lrw,Orw,"when calling add in LinkedList, line 393")
set Eb=Eb-1
set rO[9]=lrw
set sO[0]=4
set sO[1]=0
set tO[0]=4
set tO[1]=1
set iO[0]=1
set iO[1]=4
set SO[0]=1
set SO[1]=5
set cO[0]=1
set cO[1]=6
set oO[0]=2
set oO[1]=6
set OO[0]=2
set OO[1]=3
set brw=iOw("Food","when calling stringToIndex in Multiboards, line 56")
set yrw=iOw("0","when calling stringToIndex in Multiboards, line 56")
set prw=iOw("|","when calling stringToIndex in Multiboards, line 56")
set erw=iOw("Income","when calling stringToIndex in Multiboards, line 56")
set qrw=iOw("0","when calling stringToIndex in Multiboards, line 56")
set arw=iOw(" ","when calling stringToIndex in Multiboards, line 56")
set Zb[Eb]="when calling asList in Multiboards, line 56"
set Eb=Eb+1
set nrw=p9("when calling new_LinkedList in LinkedList, line 391")
call bpw(nrw,brw,"when calling add in LinkedList, line 393")
call bpw(nrw,yrw,"when calling add in LinkedList, line 393")
call bpw(nrw,prw,"when calling add in LinkedList, line 393")
call bpw(nrw,erw,"when calling add in LinkedList, line 393")
call bpw(nrw,qrw,"when calling add in LinkedList, line 393")
call bpw(nrw,arw,"when calling add in LinkedList, line 393")
set Eb=Eb-1
set lO[0]=nrw
set drw=iOw("Iron","when calling stringToIndex in Multiboards, line 57")
set frw=iOw("0","when calling stringToIndex in Multiboards, line 57")
set Rrw=iOw("|","when calling stringToIndex in Multiboards, line 57")
set Trw=iOw("Upkeep","when calling stringToIndex in Multiboards, line 57")
set Yrw=iOw("0","when calling stringToIndex in Multiboards, line 57")
set Grw=iOw(" ","when calling stringToIndex in Multiboards, line 57")
set Zb[Eb]="when calling asList in Multiboards, line 57"
set Eb=Eb+1
set grw=p9("when calling new_LinkedList in LinkedList, line 391")
call bpw(grw,drw,"when calling add in LinkedList, line 393")
call bpw(grw,frw,"when calling add in LinkedList, line 393")
call bpw(grw,Rrw,"when calling add in LinkedList, line 393")
call bpw(grw,Trw,"when calling add in LinkedList, line 393")
call bpw(grw,Yrw,"when calling add in LinkedList, line 393")
call bpw(grw,Grw,"when calling add in LinkedList, line 393")
set Eb=Eb-1
set lO[1]=grw
set hrw=iOw("Stone","when calling stringToIndex in Multiboards, line 58")
set Frw=iOw("0","when calling stringToIndex in Multiboards, line 58")
set krw=iOw("|","when calling stringToIndex in Multiboards, line 58")
set jrw=iOw(" ","when calling stringToIndex in Multiboards, line 58")
set xrw=iOw(" ","when calling stringToIndex in Multiboards, line 58")
set vrw=iOw(" ","when calling stringToIndex in Multiboards, line 58")
set Zb[Eb]="when calling asList in Multiboards, line 58"
set Eb=Eb+1
set mrw=p9("when calling new_LinkedList in LinkedList, line 391")
call bpw(mrw,hrw,"when calling add in LinkedList, line 393")
call bpw(mrw,Frw,"when calling add in LinkedList, line 393")
call bpw(mrw,krw,"when calling add in LinkedList, line 393")
call bpw(mrw,jrw,"when calling add in LinkedList, line 393")
call bpw(mrw,xrw,"when calling add in LinkedList, line 393")
call bpw(mrw,vrw,"when calling add in LinkedList, line 393")
set Eb=Eb-1
set lO[2]=mrw
set Qrw=iOw(" ","when calling stringToIndex in Multiboards, line 60")
set Wrw=iOw(" ","when calling stringToIndex in Multiboards, line 60")
set Erw=iOw("                           City info","when calling stringToIndex in Multiboards, line 60")
set Zrw=iOw(" ","when calling stringToIndex in Multiboards, line 60")
set Urw=iOw(" ","when calling stringToIndex in Multiboards, line 60")
set Irw=iOw(" ","when calling stringToIndex in Multiboards, line 60")
set Zb[Eb]="when calling asList in Multiboards, line 60"
set Eb=Eb+1
set Prw=p9("when calling new_LinkedList in LinkedList, line 391")
call bpw(Prw,Qrw,"when calling add in LinkedList, line 393")
call bpw(Prw,Wrw,"when calling add in LinkedList, line 393")
call bpw(Prw,Erw,"when calling add in LinkedList, line 393")
call bpw(Prw,Zrw,"when calling add in LinkedList, line 393")
call bpw(Prw,Urw,"when calling add in LinkedList, line 393")
call bpw(Prw,Irw,"when calling add in LinkedList, line 393")
set Eb=Eb-1
set lO[3]=Prw
set Arw=iOw("Tax","when calling stringToIndex in Multiboards, line 61")
set Drw=iOw("0","when calling stringToIndex in Multiboards, line 61")
set Hrw=iOw(" ","when calling stringToIndex in Multiboards, line 61")
set Jrw=iOw("|","when calling stringToIndex in Multiboards, line 61")
set Krw=iOw(" ","when calling stringToIndex in Multiboards, line 61")
set Lrw=iOw(" ","when calling stringToIndex in Multiboards, line 61")
set Zb[Eb]="when calling asList in Multiboards, line 61"
set Eb=Eb+1
set Xrw=p9("when calling new_LinkedList in LinkedList, line 391")
call bpw(Xrw,Arw,"when calling add in LinkedList, line 393")
call bpw(Xrw,Drw,"when calling add in LinkedList, line 393")
call bpw(Xrw,Hrw,"when calling add in LinkedList, line 393")
call bpw(Xrw,Jrw,"when calling add in LinkedList, line 393")
call bpw(Xrw,Krw,"when calling add in LinkedList, line 393")
call bpw(Xrw,Lrw,"when calling add in LinkedList, line 393")
set Eb=Eb-1
set lO[4]=Xrw
set Crw=iOw("Public order","when calling stringToIndex in Multiboards, line 62")
set Vrw=iOw("0","when calling stringToIndex in Multiboards, line 62")
set Brw=iOw(" ","when calling stringToIndex in Multiboards, line 62")
set Nrw=iOw("|","when calling stringToIndex in Multiboards, line 62")
set Mrw=iOw(" ","when calling stringToIndex in Multiboards, line 62")
set wsw=iOw(" ","when calling stringToIndex in Multiboards, line 62")
set Zb[Eb]="when calling asList in Multiboards, line 62"
set Eb=Eb+1
set usw=p9("when calling new_LinkedList in LinkedList, line 391")
call bpw(usw,Crw,"when calling add in LinkedList, line 393")
call bpw(usw,Vrw,"when calling add in LinkedList, line 393")
call bpw(usw,Brw,"when calling add in LinkedList, line 393")
call bpw(usw,Nrw,"when calling add in LinkedList, line 393")
call bpw(usw,Mrw,"when calling add in LinkedList, line 393")
call bpw(usw,wsw,"when calling add in LinkedList, line 393")
set Eb=Eb-1
set lO[5]=usw
set rsw=iOw("Population","when calling stringToIndex in Multiboards, line 63")
set ssw=iOw("0","when calling stringToIndex in Multiboards, line 63")
set tsw=iOw(" ","when calling stringToIndex in Multiboards, line 63")
set isw=iOw("|","when calling stringToIndex in Multiboards, line 63")
set Ssw=iOw(" ","when calling stringToIndex in Multiboards, line 63")
set csw=iOw(" ","when calling stringToIndex in Multiboards, line 63")
set Zb[Eb]="when calling asList in Multiboards, line 63"
set Eb=Eb+1
set osw=p9("when calling new_LinkedList in LinkedList, line 391")
call bpw(osw,rsw,"when calling add in LinkedList, line 393")
call bpw(osw,ssw,"when calling add in LinkedList, line 393")
call bpw(osw,tsw,"when calling add in LinkedList, line 393")
call bpw(osw,isw,"when calling add in LinkedList, line 393")
call bpw(osw,Ssw,"when calling add in LinkedList, line 393")
call bpw(osw,csw,"when calling add in LinkedList, line 393")
set Eb=Eb-1
set lO[6]=osw
set Osw=iOw(" ","when calling stringToIndex in Multiboards, line 64")
set lsw=iOw(" ","when calling stringToIndex in Multiboards, line 64")
set bsw=iOw(" ","when calling stringToIndex in Multiboards, line 64")
set ysw=iOw("|","when calling stringToIndex in Multiboards, line 64")
set psw=iOw(" ","when calling stringToIndex in Multiboards, line 64")
set esw=iOw(" ","when calling stringToIndex in Multiboards, line 64")
set Zb[Eb]="when calling asList in Multiboards, line 64"
set Eb=Eb+1
set qsw=p9("when calling new_LinkedList in LinkedList, line 391")
call bpw(qsw,Osw,"when calling add in LinkedList, line 393")
call bpw(qsw,lsw,"when calling add in LinkedList, line 393")
call bpw(qsw,bsw,"when calling add in LinkedList, line 393")
call bpw(qsw,ysw,"when calling add in LinkedList, line 393")
call bpw(qsw,psw,"when calling add in LinkedList, line 393")
call bpw(qsw,esw,"when calling add in LinkedList, line 393")
set Eb=Eb-1
set lO[7]=qsw
set asw=iOw(" ","when calling stringToIndex in Multiboards, line 65")
set nsw=iOw(" ","when calling stringToIndex in Multiboards, line 65")
set dsw=iOw(" ","when calling stringToIndex in Multiboards, line 65")
set fsw=iOw("|","when calling stringToIndex in Multiboards, line 65")
set Rsw=iOw(" ","when calling stringToIndex in Multiboards, line 65")
set Tsw=iOw(" ","when calling stringToIndex in Multiboards, line 65")
set Zb[Eb]="when calling asList in Multiboards, line 65"
set Eb=Eb+1
set Ysw=p9("when calling new_LinkedList in LinkedList, line 391")
call bpw(Ysw,asw,"when calling add in LinkedList, line 393")
call bpw(Ysw,nsw,"when calling add in LinkedList, line 393")
call bpw(Ysw,dsw,"when calling add in LinkedList, line 393")
call bpw(Ysw,fsw,"when calling add in LinkedList, line 393")
call bpw(Ysw,Rsw,"when calling add in LinkedList, line 393")
call bpw(Ysw,Tsw,"when calling add in LinkedList, line 393")
set Eb=Eb-1
set lO[8]=Ysw
set Gsw=iOw(" ","when calling stringToIndex in Multiboards, line 66")
set gsw=iOw(" ","when calling stringToIndex in Multiboards, line 66")
set hsw=iOw(" ","when calling stringToIndex in Multiboards, line 66")
set Fsw=iOw("|","when calling stringToIndex in Multiboards, line 66")
set ksw=iOw(" ","when calling stringToIndex in Multiboards, line 66")
set jsw=iOw(" ","when calling stringToIndex in Multiboards, line 66")
set Zb[Eb]="when calling asList in Multiboards, line 66"
set Eb=Eb+1
set xsw=p9("when calling new_LinkedList in LinkedList, line 391")
call bpw(xsw,Gsw,"when calling add in LinkedList, line 393")
call bpw(xsw,gsw,"when calling add in LinkedList, line 393")
call bpw(xsw,hsw,"when calling add in LinkedList, line 393")
call bpw(xsw,Fsw,"when calling add in LinkedList, line 393")
call bpw(xsw,ksw,"when calling add in LinkedList, line 393")
call bpw(xsw,jsw,"when calling add in LinkedList, line 393")
set Eb=Eb-1
set lO[9]=xsw
set Eb=Eb-1
return true
endfunction
function Hqw takes nothing returns boolean
set Eb=0
return vsw("Multiboards, line 1")
endfunction
function UD takes nothing returns boolean
if GetUnitTypeId(GetConstructedStructure())!=1747990353 then
return false
endif
return true
endfunction
function ID takes nothing returns boolean
if not UD() then
return false
endif
return true
endfunction
function UI takes nothing returns boolean
if GetResearched()!=1378890040 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890040,true)!=1 then
return false
endif
return true
endfunction
function II takes nothing returns boolean
if not UI() then
return false
endif
return true
endfunction
function UT takes nothing returns boolean
if GetUnitTypeId(GetConstructedStructure())==1747988789 then
return true
endif
return false
endfunction
function IT takes nothing returns boolean
if not UT() then
return false
endif
return true
endfunction
function IY takes nothing returns nothing
local player QY=GetOwningPlayer(GetAttacker())
local player WY=GetOwningPlayer(GetAttacker())
local player EY
local player ZY
local unit UY
set r[GetPlayerId(QY)+1]=r[GetPlayerId(WY)+1]+1
set EY=GetOwningPlayer(GetTriggerUnit())
set ZY=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(EY)+1]=r[GetPlayerId(ZY)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set UY=GetTriggerUnit()
call SetUnitState(UY,UNIT_STATE_LIFE,GetUnitState(UY,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set QY=null
set WY=null
set EY=null
set ZY=null
set UY=null
endfunction
function Ij takes nothing returns nothing
local player Fj=GetOwningPlayer(GetKillingUnit())
local playerstate kj=PLAYER_STATE_RESOURCE_GOLD
local playerstate jj
local playerstate xj
local player vj
local force mj
local location Qj
local real Wj
local real Ej
local player Zj
local force Uj
if kj==PLAYER_STATE_RESOURCE_GOLD then
set jj=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(Fj,jj,GetPlayerState(Fj,jj)+500)
elseif kj==PLAYER_STATE_RESOURCE_LUMBER then
set xj=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(Fj,xj,GetPlayerState(Fj,xj)+500)
endif
call SetPlayerState(Fj,kj,GetPlayerState(Fj,kj)+500)
set vj=GetOwningPlayer(GetKillingUnit())
set mj=CreateForce()
call ForceAddPlayer(mj,vj)
if IsPlayerInForce(GetLocalPlayer(),mj) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_083")
endif
set e=GetUnitLoc(GetDyingUnit())
set Zj=GetOwningPlayer(GetDyingUnit())
set Uj=CreateForce()
call ForceAddPlayer(Uj,Zj)
set Qj=e
set Wj=GetLocationX(Qj)
set Ej=GetLocationY(Qj)
if IsPlayerInForce(GetLocalPlayer(),Uj) then
call PingMinimap(Wj,Ej,2.00)
endif
call RemoveLocation(e)
set Fj=null
set kj=null
set jj=null
set xj=null
set vj=null
set mj=null
set Qj=null
set Zj=null
set Uj=null
endfunction
function Niw takes string Liw returns boolean
local integer Xiw
local integer Ciw
local integer Viw
local integer Biw
set Zb[Eb]=Liw
set Eb=Eb+1
set vO=CreateGroup()
set mO=CreateUnit(lS,2019849581,0.,0.,0)
if mO==null then
set Liw=""
set Xiw=2019849581
set Ciw=0
loop
exitwhen Ciw>3
set Viw=ModuloInteger(Xiw,256)
set Xiw=Xiw/256
set Liw=SubString(".................................!.#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[.]^_`abcdefghijklmnopqrstuvwxyz{|}~.................................................................................................................................",Viw,Viw+1)+Liw
set Ciw=Ciw+1
endloop
call r7("DUMMY_UNITID ("+Liw+") not added correctly to the map.","when calling error in Preloader, line 52")
endif
set Zb[Eb]="when calling alloc_Closure in Preloader, line 54"
set Eb=Eb+1
if Kl==0 then
if Ll<32768 then
set Ll=Ll+1
set Biw=Ll
set Xl[Biw]=651
else
call r7("Out of memory: Could not create Closure.","when calling error in Preloader, line 54")
set Biw=0
endif
else
set Kl=Kl-1
set Biw=Jl[Kl]
set Xl[Biw]=651
endif
set Eb=Eb-1
set Zb[Eb]="when calling nullTimer in Preloader, line 54"
set Eb=Eb+1
set Zb[Eb]="when calling doAfter in ClosureTimers, line 22"
set Eb=Eb+1
call ryw(Biw,0.,"when calling start in ClosureTimers, line 15")
set Eb=Eb-1-1-1
return true
endfunction
function Iqw takes nothing returns boolean
set Eb=0
return Niw("Preloader, line 1")
endfunction
function Ux takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function Ix takes nothing returns boolean
if not Ux() then
return false
endif
return true
endfunction
function J6 takes nothing returns boolean
set Mc=InitHashtable()
return true
endfunction
function HH takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989809 then
return false
endif
return true
endfunction
function JH takes nothing returns boolean
if not HH() then
return false
endif
return true
endfunction
function JK takes nothing returns nothing
local player IK=GetOwningPlayer(GetAttacker())
local player PK=GetOwningPlayer(GetAttacker())
local player AK
local player DK
local unit HK
set r[GetPlayerId(IK)+1]=r[GetPlayerId(PK)+1]+1
set AK=GetOwningPlayer(GetTriggerUnit())
set DK=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(AK)+1]=r[GetPlayerId(DK)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set HK=GetTriggerUnit()
call SetUnitState(HK,UNIT_STATE_LIFE,GetUnitState(HK,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set IK=null
set PK=null
set AK=null
set DK=null
set HK=null
endfunction
function JP takes nothing returns nothing
set s=bj_FORCE_ALL_PLAYERS
call ForForce(s,ea)
endfunction
function JQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989570,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989571,0)
endfunction
function Jg takes nothing returns nothing
local group Ag
local code Dg
local boolean Hg
set w=GetUnitsOfTypeIdAll(1747988790)
set Ag=w
set Dg=Cy
set Hg=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(Ag,Dg)
if Hg then
call DestroyGroup(Ag)
endif
call DestroyGroup(w)
set Ag=null
endfunction
function Jj takes nothing returns boolean
if GetUnitTypeId(GetDyingUnit())!=1747989048 then
return false
endif
return true
endfunction
function QC takes string TC,string YC,real GC,real gC,real hC,integer FC,real kC,real jC,boolean xC,string vC returns integer
local integer mC
set Zb[Eb]=vC
set Eb=Eb+1
set Zb[Eb]="when calling CityModifierClass in CityModifiers, line 39"
set Eb=Eb+1
if Ql==0 then
if Wl<32768 then
set Wl=Wl+1
set mC=Wl
else
call r7("Out of memory: Could not create CityModifierClass.","when calling error in CityModifiers, line 28")
set mC=0
endif
else
set Ql=Ql-1
set mC=ml[Ql]
endif
set Eb=Eb-1
set GS[mC]=GC
set gS[mC]=jC
set hS[mC]=xC
set FS[mC]=gC
set kS[mC]=FC
set jS[mC]=kC
set xS[mC]=hC
set vS[mC]=TC
set mS[mC]=YC
set Eb=Eb-1
return mC
endfunction
function byw takes integer cyw,integer oyw,string Oyw returns boolean
local integer lyw
set Zb[Eb]=Oyw
set Eb=Eb+1
if ib[cyw]==0 then
if cyw==0 then
call r7("Nullpointer exception when calling HashList.has","when calling error in HashList, line 87")
else
call r7("Called HashList.has on invalid object.","when calling error in HashList, line 87")
endif
endif
set Zb[Eb]="when calling has in HashList, line 87"
set Eb=Eb+1
set Zb[Eb]="when calling count in HashList, line 88"
set Eb=Eb+1
if ib[cyw]==0 then
if cyw==0 then
call r7("Nullpointer exception when calling HashList.count","when calling error in HashList, line 15")
else
call r7("Called HashList.count on invalid object.","when calling error in HashList, line 15")
endif
endif
set lyw=LoadInteger(yo,cyw,oyw)
set Eb=Eb-1
set Eb=Eb-1-1
return lyw>0
endfunction
function p7 takes integer o7,integer O7,string l7 returns nothing
local hashtable b7
local integer y7
set Zb[Eb]=l7
set Eb=Eb+1
set b7=yo
set Zb[Eb]="when calling count in HashList, line 19"
set Eb=Eb+1
if ib[o7]==0 then
if o7==0 then
call r7("Nullpointer exception when calling HashList.count","when calling error in HashList, line 15")
else
call r7("Called HashList.count on invalid object.","when calling error in HashList, line 15")
endif
endif
set y7=LoadInteger(yo,o7,O7)
set Eb=Eb-1
call SaveInteger(b7,o7,O7,y7+1)
set Eb=Eb-1
set b7=null
endfunction
function qpw takes integer ypw,integer ppw,string epw returns nothing
set Zb[Eb]=epw
set Eb=Eb+1
call SaveInteger(bo,ypw,po[ypw],ppw)
set Zb[Eb]="when calling incrOccurences in HashList, line 28"
set Eb=Eb+1
if ib[ypw]==0 then
if ypw==0 then
call r7("Nullpointer exception when calling HashList.incrOccurences","when calling error in HashList, line 18")
else
call r7("Called HashList.incrOccurences on invalid object.","when calling error in HashList, line 18")
endif
endif
call p7(ypw,ppw,"when calling incrOccurences in HashList, line 18")
set Eb=Eb-1
set po[ypw]=po[ypw]+1
set Eb=Eb-1
endfunction
function J7 takes integer U7,integer I7,integer P7,string A7 returns nothing
local boolean D7
local integer H7
set Zb[Eb]=A7
set Eb=Eb+1
set Zb[Eb]="when calling put in HashMap, line 48"
set Eb=Eb+1
set Zb[Eb]="when calling saveInt in HashMap, line 16"
set Eb=Eb+1
if Ob[U7]==0 then
if U7==0 then
call r7("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call r7("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Ol,U7,I7,P7)
set Eb=Eb-1-1
set Zb[Eb]="when calling hasKey in HashMap, line 49"
set Eb=Eb+1
if Ob[U7]==0 then
if U7==0 then
call r7("Nullpointer exception when calling IterableMap.hasKey","when calling error in HashMap, line 75")
else
call r7("Called IterableMap.hasKey on invalid object.","when calling error in HashMap, line 75")
endif
endif
set Zb[Eb]="when calling hasKey in HashMap, line 75"
set Eb=Eb+1
set D7=byw(eo[U7],I7,"when calling has in HashMap, line 76")
set Eb=Eb-1-1
if not D7 then
set H7=eo[U7]
set Zb[Eb]="when calling add in HashMap, line 50"
set Eb=Eb+1
if ib[H7]==0 then
if H7==0 then
call r7("Nullpointer exception when calling HashList.add","when calling error in HashList, line 25")
else
call r7("Called HashList.add on invalid object.","when calling error in HashList, line 25")
endif
endif
call qpw(H7,I7,"when calling add in HashList, line 25")
set Eb=Eb-1
endif
set Eb=Eb-1
endfunction
function Tyw takes integer nyw,integer dyw,integer fyw,string Ryw returns nothing
set Zb[Eb]=Ryw
set Eb=Eb+1
if Ob[nyw]==0 then
if nyw==0 then
call r7("Nullpointer exception when calling HashMap.put","when calling error in HashMap, line 15")
else
call r7("Called HashMap.put on invalid object.","when calling error in HashMap, line 15")
endif
endif
if Ob[nyw]<=725 then
set Zb[Eb]="when calling put in HashMap, line 15"
set Eb=Eb+1
set Zb[Eb]="when calling saveInt in HashMap, line 16"
set Eb=Eb+1
if Ob[nyw]==0 then
if nyw==0 then
call r7("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call r7("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Ol,nyw,dyw,fyw)
set Eb=Eb-1-1
else
call J7(nyw,dyw,fyw,"when calling put in HashMap, line 15")
endif
set Eb=Eb-1
endfunction
function RC takes string SC returns boolean
local integer cC
local integer oC
local integer OC
local integer lC
local integer bC
local integer yC
local integer pC
local integer eC
local integer qC
local integer aC
local integer nC
local integer dC
local integer fC
set Zb[Eb]=SC
set Eb=Eb+1
set oC=R2I(0.5)
set OC=R2I(1)
set Zb[Eb]="when calling asList in CityModifiers, line 9"
set Eb=Eb+1
set lC=p9("when calling new_LinkedList in LinkedList, line 391")
call bpw(lC,oC,"when calling add in LinkedList, line 393")
call bpw(lC,OC,"when calling add in LinkedList, line 393")
set Eb=Eb-1
set yS[0]=lC
set bC=R2I(1)
set yC=R2I(3)
set Zb[Eb]="when calling asList in CityModifiers, line 10"
set Eb=Eb+1
set pC=p9("when calling new_LinkedList in LinkedList, line 391")
call bpw(pC,bC,"when calling add in LinkedList, line 393")
call bpw(pC,yC,"when calling add in LinkedList, line 393")
set Eb=Eb-1
set yS[1]=pC
set eC=R2I(3)
set qC=R2I(10)
set Zb[Eb]="when calling asList in CityModifiers, line 11"
set Eb=Eb+1
set aC=p9("when calling new_LinkedList in LinkedList, line 391")
call bpw(aC,eC,"when calling add in LinkedList, line 393")
call bpw(aC,qC,"when calling add in LinkedList, line 393")
set Eb=Eb-1
set yS[2]=aC
set nC=R2I(10)
set dC=R2I(20)
set Zb[Eb]="when calling asList in CityModifiers, line 12"
set Eb=Eb+1
set fC=p9("when calling new_LinkedList in LinkedList, line 391")
call bpw(fC,nC,"when calling add in LinkedList, line 393")
call bpw(fC,dC,"when calling add in LinkedList, line 393")
set Eb=Eb-1
set yS[3]=fC
set pS=QC("|cffff0000Just conquered|r","|cffc00000-PO -pop|r",240,1.0,0.0,1,-1.0,-30.0,false,"when calling new_CityModifierClass in CityModifiers, line 70")
set eS=QC("|cfffffb00Just revolted|r","|cff00af00+PO|r|cffc00000 -pop|r",120.0,1.0,0.0,0,0.,30.0,false,"when calling new_CityModifierClass in CityModifiers, line 78")
set qS=QC("|cff33ff00Population Boom|r","|cff33ff00++pop|r",120.0,0.01,0.,0,0.,0.,true,"when calling new_CityModifierClass in CityModifiers, line 86")
set aS=QC("|cffff0000Plague outburst|r","|cffff0000--pop|r",240,0.03,0.,2,-1.,0.,true,"when calling new_CityModifierClass in CityModifiers, line 94")
set nS=QC("|cffaf0000Big Fire|r","|cffc00000-pop|r",30,0.01,0.,2,-1.,0.,true,"when calling new_CityModifierClass in CityModifiers, line 102")
set dS=QC("|cff15ff00More trade estabilished|r","|cff00af00+tax +pop|r",240,0.01,0.15,0,1.,0.,true,"when calling new_CityModifierClass in CityModifiers, line 110")
set fS=QC("|cffff0000Massacred population|r","|cff00af00+PO |r|cffff0000--pop|r",30,0.05,0.,3,-1.,10.,true,"when calling new_CityModifierClass in CityModifiers, line 118")
set RS=QC("|cff00ff00Prospering|r","|cff00af00+PO +pop +tax|r",240,0.01,0.10,1,1.,20.0,true,"when calling new_CityModifierClass in CityModifiers, line 126")
set TS=QC("|cffff0000Sieged|r","|cffc00000-PO -pop|r",5,1.0,0.,0,-1.,-10.0,true,"when calling new_CityModifierClass in CityModifiers, line 134")
set YS=Z7("when calling new_HashMap in CityModifiers, line 144")
set cC=YS
call Tyw(cC,0,pS,"when calling put in CityModifiers, line 151")
call Tyw(cC,1,eS,"when calling put in CityModifiers, line 152")
call Tyw(cC,2,qS,"when calling put in CityModifiers, line 153")
call Tyw(cC,3,aS,"when calling put in CityModifiers, line 154")
call Tyw(cC,4,nS,"when calling put in CityModifiers, line 155")
call Tyw(cC,5,dS,"when calling put in CityModifiers, line 156")
call Tyw(cC,6,fS,"when calling put in CityModifiers, line 157")
call Tyw(cC,7,RS,"when calling put in CityModifiers, line 158")
call Tyw(cC,8,TS,"when calling put in CityModifiers, line 159")
set Eb=Eb-1
return true
endfunction
function Jqw takes nothing returns boolean
set Eb=0
return RC("CityModifiers, line 1")
endfunction
function Jtw takes nothing returns boolean
local integer Dtw
local integer Htw
set gO=GetLocalPlayer()
set Dtw=0
set Htw=bj_MAX_PLAYER_SLOTS-1
loop
exitwhen Dtw>Htw
set GO[Dtw]=Player(Dtw)
set Dtw=Dtw+1
endloop
return true
endfunction
function Hv takes nothing returns boolean
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889797,true)!=2 then
return false
endif
return true
endfunction
function Jv takes nothing returns boolean
if not Hv() then
return false
endif
return true
endfunction
function K2 takes nothing returns boolean
local integer A2
local player D2
local boolean H2
local boolean J2
if GetOwningPlayer(GetSpellAbilityUnit())==GetOwningPlayer(GetSpellTargetUnit()) then
set J2=true
else
set D2=GetOwningPlayer(GetSpellTargetUnit())
if GetPlayerSlotState(D2)==PLAYER_SLOT_STATE_PLAYING then
set H2=GetPlayerController(D2)==MAP_CONTROL_USER
else
set H2=false
endif
set J2=not H2
endif
if J2 then
set D2=null
return false
endif
set A2=GetSpellAbilityId()
set D2=null
return A2==1093677396 or A2==1093677397 or A2==1093677398 or A2==1093677400 or A2==1093677399
endfunction
function KH takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function JY takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1966092336 then
return false
endif
if GetSpellAbilityId()!=1093677906 then
return false
endif
if GetOwningPlayer(GetSpellTargetUnit())==Player(PLAYER_NEUTRAL_AGGRESSIVE) then
return false
endif
if IsUnitType(GetSpellTargetUnit(),UNIT_TYPE_STRUCTURE)!=true then
return false
endif
return true
endfunction
function KY takes nothing returns boolean
if not JY() then
return false
endif
return true
endfunction
function Kiw takes nothing returns boolean
set hO=ConvertPlayerColor(24)
set FO=ConvertPlayerColor(25)
set kO=ConvertPlayerColor(26)
set jO=ConvertPlayerColor(27)
set xO[0]=PLAYER_COLOR_RED
set xO[1]=PLAYER_COLOR_BLUE
set xO[2]=PLAYER_COLOR_CYAN
set xO[3]=PLAYER_COLOR_PURPLE
set xO[4]=PLAYER_COLOR_YELLOW
set xO[5]=PLAYER_COLOR_ORANGE
set xO[6]=PLAYER_COLOR_GREEN
set xO[7]=PLAYER_COLOR_PINK
set xO[8]=PLAYER_COLOR_LIGHT_GRAY
set xO[9]=PLAYER_COLOR_LIGHT_BLUE
set xO[10]=PLAYER_COLOR_AQUA
set xO[11]=PLAYER_COLOR_BROWN
set xO[12]=PLAYER_COLOR_MAROON
set xO[13]=PLAYER_COLOR_NAVY
set xO[14]=PLAYER_COLOR_TURQUOISE
set xO[15]=PLAYER_COLOR_VIOLET
set xO[16]=PLAYER_COLOR_WHEAT
set xO[17]=PLAYER_COLOR_PEACH
set xO[18]=PLAYER_COLOR_MINT
set xO[19]=PLAYER_COLOR_LAVENDER
set xO[20]=PLAYER_COLOR_COAL
set xO[21]=PLAYER_COLOR_SNOW
set xO[22]=PLAYER_COLOR_EMERALD
set xO[23]=PLAYER_COLOR_PEANUT
set xO[24]=hO
set xO[25]=FO
set xO[26]=kO
set xO[27]=jO
return true
endfunction
function bcw takes playerunitevent rcw,code scw,code tcw,code icw returns nothing
local integer Scw=GetHandleId(rcw)
local integer ccw
local filterfunc ocw
local trigger Ocw
local player lcw
if AO[Scw]==null then
set AO[Scw]=CreateTrigger()
set ccw=bj_MAX_PLAYER_SLOTS-1
loop
exitwhen ccw<0
set Ocw=AO[Scw]
set lcw=GO[ccw]
if scw!=null then
set ocw=Filter(scw)
else
set ocw=null
endif
call TriggerRegisterPlayerUnitEvent(Ocw,lcw,rcw,ocw)
set ccw=ccw-1
endloop
endif
if tcw!=null then
call TriggerAddCondition(AO[Scw],Filter(tcw))
endif
if icw!=null then
call TriggerAddAction(AO[Scw],icw)
endif
set ocw=null
set Ocw=null
set lcw=null
endfunction
function TM takes eventid pM,string eM returns integer
local integer qM
local integer aM
local integer nM
local integer dM
local boolean fM
local boolean RM
set Zb[Eb]=eM
set Eb=Eb+1
set qM=GetHandleId(pM)
set ac=ac+1
set qc[qM]=ac
set aM=GetHandleId(pM)
if (aM>=18 and aM<=51)or(aM>=269 and aM<=277) then
call bcw(ConvertPlayerUnitEvent(qM),null,af,null)
else
if pM!=EVENT_UNIT_DAMAGED and pM!=EVENT_PLAYER_LEAVE and pM!=bc then
set nM=GetHandleId(pM)
set fM=nM<261 or nM>268 and nM!=17
else
set fM=false
endif
if fM then
set dM=GetHandleId(pM)
set RM=dM<305 or dM>307
else
set RM=false
endif
if RM then
call r7("registering handleid: "+I2S(qM)+" non-playerunitevent. Except EVENT_UNIT_DAMAGED and EVENT_PLAYER_LEAVE these are not supported right now.","when calling error in ClosureEvents, line 242")
endif
endif
set Eb=Eb-1
return ac
endfunction
function PL takes string EL returns boolean
local playerunitevent ZL
local integer UL
local integer IL
set Zb[Eb]=EL
set Eb=Eb+1
set ZL=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set Zb[Eb]="when calling alloc_Closure in CityBuilded, line 9"
set Eb=Eb+1
if jl==0 then
if xl<32768 then
set xl=xl+1
set UL=xl
set vl[UL]=662
else
call r7("Out of memory: Could not create Closure.","when calling error in CityBuilded, line 9")
set UL=0
endif
else
set jl=jl-1
set UL=kl[jl]
set vl[UL]=662
endif
set Eb=Eb-1
set Tc[UL]=0
set Yc[UL]=0
set Gc[UL]=0
set Zb[Eb]="when calling add in CityBuilded, line 9"
set Eb=Eb+1
set Zb[Eb]="when calling toIntId in ClosureEvents, line 111"
set Eb=Eb+1
set IL=qc[GetHandleId(ZL)]
if IL==0 then
set IL=TM(ZL,"when calling registerEventId in ClosureEvents, line 228")
endif
set Eb=Eb-1
set Tc[UL]=IL
if fc[Tc[UL]]!=0 then
set Gc[fc[Tc[UL]]]=UL
set Yc[UL]=fc[Tc[UL]]
endif
set fc[Tc[UL]]=UL
set Eb=Eb-1-1
set ZL=null
return true
endfunction
function Kqw takes nothing returns boolean
set Eb=0
return PL("CityBuilded, line 1")
endfunction
function Ktw takes nothing returns boolean
return true
endfunction
function Kv takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989067,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989065,0)
endfunction
function L2 takes nothing returns boolean
return true
endfunction
function KD takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990354 then
return false
endif
return true
endfunction
function LD takes nothing returns boolean
if not KD() then
return false
endif
return true
endfunction
function KI takes nothing returns boolean
if GetResearched()!=1378890040 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890040,true)!=2 then
return false
endif
return true
endfunction
function LI takes nothing returns boolean
if not KI() then
return false
endif
return true
endfunction
function LP takes nothing returns nothing
call UnitRemoveAbility(GetTriggerUnit(),1093677402)
endfunction
function pX takes string BL returns boolean
local trigger NL
local playerunitevent ML
local playerunitevent wX
local integer uX
local integer rX
local player sX
local location tX
local real iX
local integer SX
local integer cX
local trigger oX
local playerunitevent OX
local integer lX
local integer bX
local integer yX
set Zb[Eb]=BL
set Eb=Eb+1
if Zo then
set uX=5
set rX=1747988553
set sX=GO[0]
set tX=Location(-3000.0,1700.0)
set iX=0.
call GroupClear(bj_lastCreatedGroup)
loop
set uX=uX-1
exitwhen uX<0
call CreateUnitAtLocSaveLast(sX,rX,tX,iX)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
endif
set ML=EVENT_PLAYER_UNIT_SELECTED
set Zb[Eb]="when calling alloc_Closure in CityManage, line 9"
set Eb=Eb+1
if jl==0 then
if xl<32768 then
set xl=xl+1
set SX=xl
set vl[SX]=663
else
call r7("Out of memory: Could not create Closure.","when calling error in CityManage, line 9")
set SX=0
endif
else
set jl=jl-1
set SX=kl[jl]
set vl[SX]=663
endif
set Eb=Eb-1
set Tc[SX]=0
set Yc[SX]=0
set Gc[SX]=0
set Zb[Eb]="when calling add in CityManage, line 9"
set Eb=Eb+1
set Zb[Eb]="when calling toIntId in ClosureEvents, line 111"
set Eb=Eb+1
set cX=qc[GetHandleId(ML)]
if cX==0 then
set cX=TM(ML,"when calling registerEventId in ClosureEvents, line 228")
endif
set Eb=Eb-1
set Tc[SX]=cX
if fc[Tc[SX]]!=0 then
set Gc[fc[Tc[SX]]]=SX
set Yc[SX]=fc[Tc[SX]]
endif
set fc[Tc[SX]]=SX
set Eb=Eb-1
set NL=CreateTrigger()
call TriggerAddCondition(NL,Condition(ef))
call TriggerAddAction(NL,qf)
set oX=NL
set OX=EVENT_PLAYER_UNIT_SPELL_CAST
set lX=0
loop
call TriggerRegisterPlayerUnitEvent(oX,Player(lX),OX,null)
set lX=lX+1
exitwhen lX==bj_MAX_PLAYER_SLOTS
endloop
set wX=EVENT_PLAYER_UNIT_ATTACKED
set Zb[Eb]="when calling alloc_Closure in CityManage, line 33"
set Eb=Eb+1
if jl==0 then
if xl<32768 then
set xl=xl+1
set bX=xl
set vl[bX]=664
else
call r7("Out of memory: Could not create Closure.","when calling error in CityManage, line 33")
set bX=0
endif
else
set jl=jl-1
set bX=kl[jl]
set vl[bX]=664
endif
set Eb=Eb-1
set Tc[bX]=0
set Yc[bX]=0
set Gc[bX]=0
set Zb[Eb]="when calling add in CityManage, line 33"
set Eb=Eb+1
set Zb[Eb]="when calling toIntId in ClosureEvents, line 111"
set Eb=Eb+1
set yX=qc[GetHandleId(wX)]
if yX==0 then
set yX=TM(wX,"when calling registerEventId in ClosureEvents, line 228")
endif
set Eb=Eb-1
set Tc[bX]=yX
if fc[Tc[bX]]!=0 then
set Gc[fc[Tc[bX]]]=bX
set Yc[bX]=fc[Tc[bX]]
endif
set fc[Tc[bX]]=bX
set Eb=Eb-1-1
set NL=null
set ML=null
set wX=null
set sX=null
set tX=null
set oX=null
set OX=null
return true
endfunction
function Lqw takes nothing returns boolean
set Eb=0
return pX("CityManage, line 1")
endfunction
function Kx takes nothing returns boolean
if GetResearched()!=1378889796 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889796,true)!=1 then
return false
endif
return true
endfunction
function Lx takes nothing returns boolean
if not Kx() then
return false
endif
return true
endfunction
function M7 takes nothing returns boolean
return true
endfunction
function MH takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function NP takes nothing returns boolean
if GetUnitTypeId(GetConstructedStructure())==1747988545 then
return true
endif
if GetUnitTypeId(GetConstructedStructure())==1747989577 then
return true
endif
if GetUnitTypeId(GetConstructedStructure())==1747990320 then
return true
endif
if GetUnitTypeId(GetConstructedStructure())==1747989845 then
return true
endif
return false
endfunction
function MP takes nothing returns boolean
if q[GetPlayerId(GetOwningPlayer(GetConstructedStructure()))+1]!=false then
return false
endif
if not NP() then
return false
endif
return true
endfunction
function NR takes nothing returns boolean
if GetUnitTypeId(GetConstructedStructure())==1747988785 then
return true
endif
return false
endfunction
function MR takes nothing returns boolean
if not NR() then
return false
endif
return true
endfunction
function Mg takes nothing returns nothing
local group Vg
local code Bg
local boolean Ng
set p=GetUnitsOfTypeIdAll(1747989301)
set Vg=w
set Bg=By
set Ng=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(Vg,Bg)
if Ng then
call DestroyGroup(Vg)
endif
call DestroyGroup(p)
set Vg=null
endfunction
function Mh takes nothing returns nothing
local player Ah=GetOwningPlayer(GetSpellTargetUnit())
local playerstate Dh=PLAYER_STATE_RESOURCE_GOLD
local playerstate Hh
local playerstate Jh
local player Kh
local force Lh
local location Xh
local real Ch
local real Vh
local player Bh
local force Nh
if Dh==PLAYER_STATE_RESOURCE_GOLD then
set Hh=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(Ah,Hh,GetPlayerState(Ah,Hh)+250)
elseif Dh==PLAYER_STATE_RESOURCE_LUMBER then
set Jh=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(Ah,Jh,GetPlayerState(Ah,Jh)+250)
endif
call SetPlayerState(Ah,Dh,GetPlayerState(Ah,Dh)+250)
call RemoveUnit(GetSpellAbilityUnit())
set Kh=GetOwningPlayer(GetSpellTargetUnit())
set Lh=CreateForce()
call ForceAddPlayer(Lh,Kh)
if IsPlayerInForce(GetLocalPlayer(),Lh) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_1230")
endif
set e=GetUnitLoc(GetSpellTargetUnit())
set Bh=GetOwningPlayer(GetSpellTargetUnit())
set Nh=CreateForce()
call ForceAddPlayer(Nh,Bh)
set Xh=e
set Ch=GetLocationX(Xh)
set Vh=GetLocationY(Xh)
if IsPlayerInForce(GetLocalPlayer(),Nh) then
call PingMinimap(Ch,Vh,2.00)
endif
call RemoveLocation(e)
set Ah=null
set Dh=null
set Hh=null
set Jh=null
set Kh=null
set Lh=null
set Xh=null
set Bh=null
set Nh=null
endfunction
function j8 takes string T8 returns boolean
local playerunitevent Y8
local playerunitevent G8
local integer g8
local integer h8
local integer F8
local integer k8
set Zb[Eb]=T8
set Eb=Eb+1
set Y8=EVENT_PLAYER_UNIT_DEATH
set Zb[Eb]="when calling alloc_Closure in LimitMercenaryCamps, line 8"
set Eb=Eb+1
if jl==0 then
if xl<32768 then
set xl=xl+1
set g8=xl
set vl[g8]=667
else
call r7("Out of memory: Could not create Closure.","when calling error in LimitMercenaryCamps, line 8")
set g8=0
endif
else
set jl=jl-1
set g8=kl[jl]
set vl[g8]=667
endif
set Eb=Eb-1
set Tc[g8]=0
set Yc[g8]=0
set Gc[g8]=0
set Zb[Eb]="when calling add in LimitMercenaryCamps, line 8"
set Eb=Eb+1
set Zb[Eb]="when calling toIntId in ClosureEvents, line 111"
set Eb=Eb+1
set h8=qc[GetHandleId(Y8)]
if h8==0 then
set h8=TM(Y8,"when calling registerEventId in ClosureEvents, line 228")
endif
set Eb=Eb-1
set Tc[g8]=h8
if fc[Tc[g8]]!=0 then
set Gc[fc[Tc[g8]]]=g8
set Yc[g8]=fc[Tc[g8]]
endif
set fc[Tc[g8]]=g8
set Eb=Eb-1
set G8=EVENT_PLAYER_UNIT_CONSTRUCT_START
set Zb[Eb]="when calling alloc_Closure in LimitMercenaryCamps, line 12"
set Eb=Eb+1
if jl==0 then
if xl<32768 then
set xl=xl+1
set F8=xl
set vl[F8]=668
else
call r7("Out of memory: Could not create Closure.","when calling error in LimitMercenaryCamps, line 12")
set F8=0
endif
else
set jl=jl-1
set F8=kl[jl]
set vl[F8]=668
endif
set Eb=Eb-1
set Tc[F8]=0
set Yc[F8]=0
set Gc[F8]=0
set Zb[Eb]="when calling add in LimitMercenaryCamps, line 12"
set Eb=Eb+1
set Zb[Eb]="when calling toIntId in ClosureEvents, line 111"
set Eb=Eb+1
set k8=qc[GetHandleId(G8)]
if k8==0 then
set k8=TM(G8,"when calling registerEventId in ClosureEvents, line 228")
endif
set Eb=Eb-1
set Tc[F8]=k8
if fc[Tc[F8]]!=0 then
set Gc[fc[Tc[F8]]]=F8
set Yc[F8]=fc[Tc[F8]]
endif
set fc[Tc[F8]]=F8
set Eb=Eb-1-1
set Y8=null
set G8=null
return true
endfunction
function Mqw takes nothing returns boolean
set Eb=0
return j8("LimitMercenaryCamps, line 1")
endfunction
function Mv takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988559,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989064,0)
endfunction
function N7 takes nothing returns boolean
return true
endfunction
function BH takes nothing returns boolean
if GetUnitTypeId(GetConstructedStructure())!=1747989059 then
return false
endif
return true
endfunction
function NH takes nothing returns boolean
if not BH() then
return false
endif
return true
endfunction
function NQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989556,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989570,0)
endfunction
function Nlw takes nothing returns boolean
return true
endfunction
function o8 takes string u8 returns boolean
local playerunitevent r8
local playerunitevent s8
local integer t8
local integer i8
local integer S8
local integer c8
set Zb[Eb]=u8
set Eb=Eb+1
set r8=EVENT_PLAYER_UNIT_DEATH
set Zb[Eb]="when calling alloc_Closure in LimitEncampments, line 8"
set Eb=Eb+1
if jl==0 then
if xl<32768 then
set xl=xl+1
set t8=xl
set vl[t8]=665
else
call r7("Out of memory: Could not create Closure.","when calling error in LimitEncampments, line 8")
set t8=0
endif
else
set jl=jl-1
set t8=kl[jl]
set vl[t8]=665
endif
set Eb=Eb-1
set Tc[t8]=0
set Yc[t8]=0
set Gc[t8]=0
set Zb[Eb]="when calling add in LimitEncampments, line 8"
set Eb=Eb+1
set Zb[Eb]="when calling toIntId in ClosureEvents, line 111"
set Eb=Eb+1
set i8=qc[GetHandleId(r8)]
if i8==0 then
set i8=TM(r8,"when calling registerEventId in ClosureEvents, line 228")
endif
set Eb=Eb-1
set Tc[t8]=i8
if fc[Tc[t8]]!=0 then
set Gc[fc[Tc[t8]]]=t8
set Yc[t8]=fc[Tc[t8]]
endif
set fc[Tc[t8]]=t8
set Eb=Eb-1
set s8=EVENT_PLAYER_UNIT_CONSTRUCT_START
set Zb[Eb]="when calling alloc_Closure in LimitEncampments, line 12"
set Eb=Eb+1
if jl==0 then
if xl<32768 then
set xl=xl+1
set S8=xl
set vl[S8]=666
else
call r7("Out of memory: Could not create Closure.","when calling error in LimitEncampments, line 12")
set S8=0
endif
else
set jl=jl-1
set S8=kl[jl]
set vl[S8]=666
endif
set Eb=Eb-1
set Tc[S8]=0
set Yc[S8]=0
set Gc[S8]=0
set Zb[Eb]="when calling add in LimitEncampments, line 12"
set Eb=Eb+1
set Zb[Eb]="when calling toIntId in ClosureEvents, line 111"
set Eb=Eb+1
set c8=qc[GetHandleId(s8)]
if c8==0 then
set c8=TM(s8,"when calling registerEventId in ClosureEvents, line 228")
endif
set Eb=Eb-1
set Tc[S8]=c8
if fc[Tc[S8]]!=0 then
set Gc[fc[Tc[S8]]]=S8
set Yc[S8]=fc[Tc[S8]]
endif
set fc[Tc[S8]]=S8
set Eb=Eb-1-1
set r8=null
set s8=null
return true
endfunction
function Nqw takes nothing returns boolean
set Eb=0
return o8("LimitEncampments, line 1")
endfunction
function Bv takes nothing returns boolean
if GetResearched()!=1378889799 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889799,true)!=1 then
return false
endif
return true
endfunction
function Nv takes nothing returns boolean
if not Bv() then
return false
endif
return true
endfunction
function oD takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747988557 then
return false
endif
return true
endfunction
function OD takes nothing returns boolean
if not oD() then
return false
endif
return true
endfunction
function oE takes nothing returns boolean
if GetResearched()!=1378890035 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890035,true)!=1 then
return false
endif
return true
endfunction
function OE takes nothing returns boolean
if not oE() then
return false
endif
return true
endfunction
function oI takes nothing returns boolean
if GetResearched()!=1378890051 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890051,true)!=1 then
return false
endif
return true
endfunction
function OI takes nothing returns boolean
if not oI() then
return false
endif
return true
endfunction
function oL takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989305 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function OL takes nothing returns boolean
if not oL() then
return false
endif
return true
endfunction
function OQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989057,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988558,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988551,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989066,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651824,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651826,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988818,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989080,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989072,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989082,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988559,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988812,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651828,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989065,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989067,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989301,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651843,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988561,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988788,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988565,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988566,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988567,0)
endfunction
function OU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989830,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989829,0)
endfunction
function Fyw takes integer Yyw,integer Gyw,string gyw returns integer
local integer hyw
set Zb[Eb]=gyw
set Eb=Eb+1
if Ob[Yyw]==0 then
if Yyw==0 then
call r7("Nullpointer exception when calling HashMap.get","when calling error in HashMap, line 19")
else
call r7("Called HashMap.get on invalid object.","when calling error in HashMap, line 19")
endif
endif
set Zb[Eb]="when calling get in HashMap, line 19"
set Eb=Eb+1
set Zb[Eb]="when calling loadInt in HashMap, line 20"
set Eb=Eb+1
if Ob[Yyw]==0 then
if Yyw==0 then
call r7("Nullpointer exception when calling Table.loadInt","when calling error in Table, line 39")
else
call r7("Called Table.loadInt on invalid object.","when calling error in Table, line 39")
endif
endif
set hyw=LoadInteger(Ol,Yyw,Gyw)
set Eb=Eb-1-1-1
return hyw
endfunction
function S3 takes integer s3,string t3 returns nothing
local integer i3
set Zb[Eb]=t3
set Eb=Eb+1
set i3=fc[Tc[s3]]
if i3==s3 then
set fc[Tc[s3]]=Yc[s3]
elseif Gc[s3]!=0 then
set Yc[Gc[s3]]=Yc[s3]
endif
set Gc[Yc[s3]]=Gc[s3]
set i3=Rc[Tc[s3]]
if i3==s3 then
set Rc[Tc[s3]]=Yc[s3]
elseif Gc[s3]!=0 then
set Yc[Gc[s3]]=Yc[s3]
endif
set Gc[Yc[s3]]=Gc[s3]
set Yc[s3]=0
set Gc[s3]=0
set Zb[Eb]="when calling EventListener in ClosureEvents, line 201"
set Eb=Eb+1
if vl[s3]==0 then
call r7("Double free: object of type EventListener","when calling error in ClosureEvents, line 98")
else
set kl[jl]=s3
set jl=jl+1
set vl[s3]=0
endif
set Eb=Eb-1-1
endfunction
function WM takes integer xM,string vM returns nothing
local integer mM
local integer QM
set Zb[Eb]=vM
set Eb=Eb+1
if xM>0 then
if Rc[xM]!=0 then
set mM=Rc[xM]
set Rc[xM]=0
loop
exitwhen mM==0
set QM=mM
set mM=Yc[mM]
set Zb[Eb]="when calling EventListener in ClosureEvents, line 275"
set Eb=Eb+1
if vl[QM]==0 then
if QM==0 then
call r7("Nullpointer exception when calling EventListener.EventListener","when calling error in ClosureEvents, line 98")
else
call r7("Called EventListener.EventListener on invalid object.","when calling error in ClosureEvents, line 98")
endif
endif
call S3(QM,"when calling destroyEventListener in ClosureEvents, line 98")
set Eb=Eb-1
endloop
endif
endif
set Eb=Eb-1
endfunction
function ayw takes integer yyw,integer pyw,string eyw returns boolean
local boolean qyw
set Zb[Eb]=eyw
set Eb=Eb+1
if Ob[yyw]==0 then
if yyw==0 then
call r7("Nullpointer exception when calling HashMap.has","when calling error in HashMap, line 11")
else
call r7("Called HashMap.has on invalid object.","when calling error in HashMap, line 11")
endif
endif
set Zb[Eb]="when calling has in HashMap, line 11"
set Eb=Eb+1
set Zb[Eb]="when calling hasInt in HashMap, line 12"
set Eb=Eb+1
if Ob[yyw]==0 then
if yyw==0 then
call r7("Nullpointer exception when calling Table.hasInt","when calling error in Table, line 9")
else
call r7("Called Table.hasInt on invalid object.","when calling error in Table, line 9")
endif
endif
set qyw=HaveSavedInteger(Ol,yyw,pyw)
set Eb=Eb-1-1-1
return qyw
endfunction
function O3 takes integer c3,string o3 returns nothing
set Zb[Eb]=o3
set Eb=Eb+1
if kc[c3]!=null then
if Fyw(dc,GetHandleId(kc[c3]),"when calling get in ClosureEvents, line 60")==c3 then
call Tyw(dc,GetHandleId(kc[c3]),gc[c3],"when calling put in ClosureEvents, line 62")
elseif hc[c3]!=0 then
set gc[hc[c3]]=gc[c3]
endif
elseif Fyw(nc,Fc[c3],"when calling get in ClosureEvents, line 66")==c3 then
call Tyw(nc,Fc[c3],gc[c3],"when calling put in ClosureEvents, line 68")
elseif hc[c3]!=0 then
set gc[hc[c3]]=gc[c3]
endif
set hc[gc[c3]]=hc[c3]
set gc[c3]=0
set hc[c3]=0
set Eb=Eb-1
endfunction
function kbw takes integer hbw,string Fbw returns nothing
set Zb[Eb]=Fbw
set Eb=Eb+1
if wb[hbw]==0 then
if hbw==0 then
call r7("Nullpointer exception when calling OnCastListener.OnCastListener","when calling error in ClosureEvents, line 50")
else
call r7("Called OnCastListener.OnCastListener on invalid object.","when calling error in ClosureEvents, line 50")
endif
endif
set Zb[Eb]="when calling destroyOnCastListener in ClosureEvents, line 50"
set Eb=Eb+1
call O3(hbw,"when calling OnCastListener_onDestroy in ClosureEvents, line 58")
set Zb[Eb]="when calling OnCastListener in ClosureEvents, line 58"
set Eb=Eb+1
if wb[hbw]==0 then
call r7("Double free: object of type OnCastListener","when calling error in ClosureEvents, line 50")
else
set Ml=Ml+1
set wb[hbw]=0
endif
set Eb=Eb-1-1-1
endfunction
function f7 takes integer e7,integer q7,string a7 returns nothing
local hashtable n7
local integer d7
set Zb[Eb]=a7
set Eb=Eb+1
set n7=yo
set Zb[Eb]="when calling count in HashList, line 22"
set Eb=Eb+1
if ib[e7]==0 then
if e7==0 then
call r7("Nullpointer exception when calling HashList.count","when calling error in HashList, line 15")
else
call r7("Called HashList.count on invalid object.","when calling error in HashList, line 15")
endif
endif
set d7=LoadInteger(yo,e7,q7)
set Eb=Eb-1
call SaveInteger(n7,e7,q7,d7-1)
set Eb=Eb-1
set n7=null
endfunction
function F7 takes integer R7,integer T7,string Y7 returns nothing
local integer G7
local integer g7
local integer h7
set Zb[Eb]=Y7
set Eb=Eb+1
set h7=LoadInteger(bo,R7,T7)
set Zb[Eb]="when calling decrOccurences in HashList, line 54"
set Eb=Eb+1
if ib[R7]==0 then
if R7==0 then
call r7("Nullpointer exception when calling HashList.decrOccurences","when calling error in HashList, line 21")
else
call r7("Called HashList.decrOccurences on invalid object.","when calling error in HashList, line 21")
endif
endif
call f7(R7,h7,"when calling decrOccurences in HashList, line 21")
set Eb=Eb-1
set G7=T7
set g7=po[R7]
loop
exitwhen G7>g7
call SaveInteger(bo,R7,G7,LoadInteger(bo,R7,G7+1))
set G7=G7+1
endloop
set po[R7]=po[R7]-1
set Eb=Eb-1
endfunction
function Q7 takes integer k7,integer j7,string x7 returns nothing
local integer v7
local integer m7
set Zb[Eb]=x7
set Eb=Eb+1
set v7=0
set m7=po[k7]-1
loop
exitwhen v7>m7
if j7==LoadInteger(bo,k7,v7) then
set x7="when calling removeAt in HashList, line 63"
set Zb[Eb]="when calling removeAt in HashList, line 63"
set Eb=Eb+1
if ib[k7]==0 then
if k7==0 then
call r7("Nullpointer exception when calling HashList.removeAt","when calling error in HashList, line 53")
else
call r7("Called HashList.removeAt on invalid object.","when calling error in HashList, line 53")
endif
endif
call F7(k7,v7,"when calling removeAt in HashList, line 53")
set Eb=Eb-1
exitwhen true
endif
set v7=v7+1
endloop
set Eb=Eb-1
endfunction
function B7 takes integer K7,integer L7,string X7 returns nothing
local boolean C7
local integer V7
set Zb[Eb]=X7
set Eb=Eb+1
set Zb[Eb]="when calling remove in HashMap, line 54"
set Eb=Eb+1
set Zb[Eb]="when calling removeInt in HashMap, line 24"
set Eb=Eb+1
if Ob[K7]==0 then
if K7==0 then
call r7("Nullpointer exception when calling Table.removeInt","when calling error in Table, line 24")
else
call r7("Called Table.removeInt on invalid object.","when calling error in Table, line 24")
endif
endif
call RemoveSavedInteger(Ol,K7,L7)
set Eb=Eb-1-1
set Zb[Eb]="when calling hasKey in HashMap, line 55"
set Eb=Eb+1
if Ob[K7]==0 then
if K7==0 then
call r7("Nullpointer exception when calling IterableMap.hasKey","when calling error in HashMap, line 75")
else
call r7("Called IterableMap.hasKey on invalid object.","when calling error in HashMap, line 75")
endif
endif
set Zb[Eb]="when calling hasKey in HashMap, line 75"
set Eb=Eb+1
set C7=byw(eo[K7],L7,"when calling has in HashMap, line 76")
set Eb=Eb-1-1
if C7 then
set V7=eo[K7]
set Zb[Eb]="when calling remove in HashMap, line 56"
set Eb=Eb+1
if ib[V7]==0 then
if V7==0 then
call r7("Nullpointer exception when calling HashList.remove","when calling error in HashList, line 60")
else
call r7("Called HashList.remove on invalid object.","when calling error in HashList, line 60")
endif
endif
call Q7(V7,L7,"when calling remove in HashList, line 60")
set Eb=Eb-1
endif
set Eb=Eb-1
endfunction
function vyw takes integer kyw,integer jyw,string xyw returns nothing
set Zb[Eb]=xyw
set Eb=Eb+1
if Ob[kyw]==0 then
if kyw==0 then
call r7("Nullpointer exception when calling HashMap.remove","when calling error in HashMap, line 23")
else
call r7("Called HashMap.remove on invalid object.","when calling error in HashMap, line 23")
endif
endif
if Ob[kyw]<=725 then
set Zb[Eb]="when calling remove in HashMap, line 23"
set Eb=Eb+1
set Zb[Eb]="when calling removeInt in HashMap, line 24"
set Eb=Eb+1
if Ob[kyw]==0 then
if kyw==0 then
call r7("Nullpointer exception when calling Table.removeInt","when calling error in Table, line 24")
else
call r7("Called Table.removeInt on invalid object.","when calling error in Table, line 24")
endif
endif
call RemoveSavedInteger(Ol,kyw,jyw)
set Eb=Eb-1-1
else
call B7(kyw,jyw,"when calling remove in HashMap, line 23")
endif
set Eb=Eb-1
endfunction
function jM takes unit YM,string GM returns nothing
local integer gM
local integer hM
local integer FM
local integer kM
set Zb[Eb]=GM
set Eb=Eb+1
call WM(GetUnitUserData(YM),"when calling unregisterEvents in ClosureEvents, line 251")
if ayw(dc,GetHandleId(YM),"when calling has in ClosureEvents, line 252") then
set gM=Fyw(dc,GetHandleId(YM),"when calling get in ClosureEvents, line 253")
call vyw(dc,GetHandleId(YM),"when calling remove in ClosureEvents, line 254")
loop
exitwhen gM==0
set hM=gM
set gM=gc[gM]
call kbw(hM,"when calling OnCastListener in ClosureEvents, line 258")
endloop
endif
if ayw(dc,GetHandleId(YM),"when calling has in ClosureEvents, line 259") then
set FM=Fyw(dc,GetHandleId(YM),"when calling get in ClosureEvents, line 260")
loop
exitwhen FM==0
set kM=FM
set FM=gc[FM]
call kbw(kM,"when calling OnCastListener in ClosureEvents, line 264")
endloop
endif
set Eb=Eb-1
endfunction
function Oaw takes nothing returns nothing
set Eb=0
set Zb[Eb]="ClosureEvents, line 283"
set Eb=Eb+1
call jM(nl,"when calling unregisterEventsForUnit in ClosureEvents, line 283")
set Eb=Eb-1
endfunction
function Oow takes nothing returns boolean
return true
endfunction
function ox takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function Ox takes nothing returns boolean
if not ox() then
return false
endif
return true
endfunction
function PD takes nothing returns nothing
call UnitAddAbility(GetConstructedStructure(),1093677896)
endfunction
function IG takes nothing returns boolean
if IsUnitType(GetEnumUnit(),UNIT_TYPE_STRUCTURE)!=false then
return false
endif
return true
endfunction
function PG takes nothing returns nothing
if IG() then
call SetUnitPositionLoc(GetEnumUnit(),c)
endif
endfunction
function PI takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990595,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990608,0)
endfunction
function PM takes nothing returns nothing
call TriggerRegisterUnitEvent(yc,al,EVENT_UNIT_DAMAGED)
endfunction
function IZ takes nothing returns boolean
if GetResearched()!=1378890036 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890036,true)!=1 then
return false
endif
return true
endfunction
function PZ takes nothing returns boolean
if not IZ() then
return false
endif
return true
endfunction
function Ig takes nothing returns boolean
local unitstate Ug=UNIT_STATE_MANA
if GetUnitState(GetEnumUnit(),Ug)>0.00 then
set Ug=null
return false
endif
set Ug=null
return true
endfunction
function Pg takes nothing returns nothing
if Ig() then
call KillUnit(GetEnumUnit())
endif
endfunction
function Ih takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988791 then
return false
endif
if GetUnitTypeId(GetSpellTargetUnit())!=1747988787 then
return false
endif
return true
endfunction
function Ph takes nothing returns boolean
if not Ih() then
return false
endif
return true
endfunction
function Pqw takes nothing returns boolean
set Eb=0
set Zb[Eb]="ObjectIdGenerator, line 1"
set Eb=Eb+1
set Zb[Eb]="when calling new_IdGenerator in ObjectIdGenerator, line 7"
set Eb=Eb+1
set Zb[Eb]="when calling IdGenerator in ObjectIdGenerator, line 20"
set Eb=Eb+1
if gb==0 then
if hb<32768 then
set hb=hb+1
else
call r7("Out of memory: Could not create IdGenerator.","when calling error in ObjectIdGenerator, line 14")
endif
else
set gb=gb-1
endif
set Eb=Eb-1-1
set Zb[Eb]="when calling new_IdGenerator in ObjectIdGenerator, line 8"
set Eb=Eb+1
set Zb[Eb]="when calling IdGenerator in ObjectIdGenerator, line 20"
set Eb=Eb+1
if gb==0 then
if hb<32768 then
set hb=hb+1
else
call r7("Out of memory: Could not create IdGenerator.","when calling error in ObjectIdGenerator, line 14")
endif
else
set gb=gb-1
endif
set Eb=Eb-1-1
set Zb[Eb]="when calling new_IdGenerator in ObjectIdGenerator, line 9"
set Eb=Eb+1
set Zb[Eb]="when calling IdGenerator in ObjectIdGenerator, line 20"
set Eb=Eb+1
if gb==0 then
if hb<32768 then
set hb=hb+1
else
call r7("Out of memory: Could not create IdGenerator.","when calling error in ObjectIdGenerator, line 14")
endif
else
set gb=gb-1
endif
set Eb=Eb-1-1
set Zb[Eb]="when calling new_IdGenerator in ObjectIdGenerator, line 10"
set Eb=Eb+1
set Zb[Eb]="when calling IdGenerator in ObjectIdGenerator, line 20"
set Eb=Eb+1
if gb==0 then
if hb<32768 then
set hb=hb+1
else
call r7("Out of memory: Could not create IdGenerator.","when calling error in ObjectIdGenerator, line 14")
endif
else
set gb=gb-1
endif
set Eb=Eb-1-1
set Zb[Eb]="when calling new_IdGenerator in ObjectIdGenerator, line 11"
set Eb=Eb+1
set Zb[Eb]="when calling IdGenerator in ObjectIdGenerator, line 20"
set Eb=Eb+1
if gb==0 then
if hb<32768 then
set hb=hb+1
else
call r7("Out of memory: Could not create IdGenerator.","when calling error in ObjectIdGenerator, line 14")
endif
else
set gb=gb-1
endif
set Eb=Eb-1-1
set Zb[Eb]="when calling new_IdGenerator in ObjectIdGenerator, line 12"
set Eb=Eb+1
set Zb[Eb]="when calling IdGenerator in ObjectIdGenerator, line 20"
set Eb=Eb+1
if gb==0 then
if hb<32768 then
set hb=hb+1
else
call r7("Out of memory: Could not create IdGenerator.","when calling error in ObjectIdGenerator, line 14")
endif
else
set gb=gb-1
endif
set Eb=Eb-1-1-1
return true
endfunction
function Ptw takes nothing returns nothing
local unit Itw=GetTriggerUnit()
if GetUnitAbilityLevel(Itw,1095577649)==0 then
set qO[aO]=Itw
set aO=aO+1
call TriggerExecute(pO)
set aO=aO-1
endif
set Itw=null
endfunction
function Px takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988567,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988564,0)
endfunction
function Q3 takes nothing returns boolean
set Qc=200
return true
endfunction
function mU takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function QU takes nothing returns boolean
if not mU() then
return false
endif
return true
endfunction
function mW takes nothing returns boolean
if GetResearched()!=1378889811 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889811,true)!=1 then
return false
endif
return true
endfunction
function QW takes nothing returns boolean
if not mW() then
return false
endif
return true
endfunction
function QZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989832,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989833,0)
endfunction
function Qh takes nothing returns nothing
local player Th=GetOwningPlayer(GetSpellTargetUnit())
local playerstate Yh=PLAYER_STATE_RESOURCE_LUMBER
local playerstate Gh
local playerstate gh
local player hh
local force Fh
local location kh
local real jh
local real xh
local player vh
local force mh
if Yh==PLAYER_STATE_RESOURCE_GOLD then
set Gh=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(Th,Gh,GetPlayerState(Th,Gh)+500)
elseif Yh==PLAYER_STATE_RESOURCE_LUMBER then
set gh=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(Th,gh,GetPlayerState(Th,gh)+500)
endif
call SetPlayerState(Th,Yh,GetPlayerState(Th,Yh)+500)
call RemoveUnit(GetSpellAbilityUnit())
set hh=GetOwningPlayer(GetSpellTargetUnit())
set Fh=CreateForce()
call ForceAddPlayer(Fh,hh)
if IsPlayerInForce(GetLocalPlayer(),Fh) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_1228")
endif
set e=GetUnitLoc(GetSpellTargetUnit())
set vh=GetOwningPlayer(GetSpellTargetUnit())
set mh=CreateForce()
call ForceAddPlayer(mh,vh)
set kh=e
set jh=GetLocationX(kh)
set xh=GetLocationY(kh)
if IsPlayerInForce(GetLocalPlayer(),mh) then
call PingMinimap(jh,xh,2.00)
endif
call RemoveLocation(e)
set Th=null
set Yh=null
set Gh=null
set gh=null
set hh=null
set Fh=null
set kh=null
set vh=null
set mh=null
endfunction
function Qqw takes nothing returns boolean
set Eb=0
set Zb[Eb]="EventHelper, line 1"
set Eb=Eb+1
call Z7("when calling new_HashMap in EventHelper, line 6")
call Z7("when calling new_HashMap in EventHelper, line 7")
call oow("when calling new_Table in EventHelper, line 8")
set Eb=Eb-1
return true
endfunction
function RA takes nothing returns nothing
local integer pA=1
local integer eA=1752461175
local player qA=GetOwningPlayer(GetTriggerUnit())
local rect fA=bj_mapInitialPlayableArea
local location dA=Location(GetRectCenterX(fA),GetRectCenterY(fA))
local location aA=Location(GetLocationX(dA)+100000000.00,GetLocationY(dA)+100000000.00)
local real nA=bj_UNIT_FACING
call GroupClear(bj_lastCreatedGroup)
loop
set pA=pA-1
exitwhen pA<0
call CreateUnitAtLocSaveLast(qA,eA,aA,nA)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
call ShowUnit(bj_lastCreatedUnit,false)
set qA=null
set aA=null
set dA=null
set fA=null
endfunction
function RE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989825,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989817,0)
endfunction
function RJ takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function fQ takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function RQ takes nothing returns boolean
if not fQ() then
return false
endif
return true
endfunction
function s0w takes string C9 returns nothing
local integer V9
local integer B9
local playerevent N9
local integer M9
local integer w0w
local force u0w
local force r0w
set Zb[Eb]=C9
set Eb=Eb+1
if Zo then
set Eb=Eb-1
set N9=null
set u0w=null
set r0w=null
return
endif
set N9=EVENT_PLAYER_END_CINEMATIC
set Zb[Eb]="when calling alloc_Closure in MainInit, line 72"
set Eb=Eb+1
if jl==0 then
if xl<32768 then
set xl=xl+1
set M9=xl
set vl[M9]=669
else
call r7("Out of memory: Could not create Closure.","when calling error in MainInit, line 72")
set M9=0
endif
else
set jl=jl-1
set M9=kl[jl]
set vl[M9]=669
endif
set Eb=Eb-1
set Tc[M9]=0
set Yc[M9]=0
set Gc[M9]=0
set Zb[Eb]="when calling add in MainInit, line 72"
set Eb=Eb+1
set Zb[Eb]="when calling toIntId in ClosureEvents, line 111"
set Eb=Eb+1
set w0w=qc[GetHandleId(N9)]
if w0w==0 then
set w0w=TM(N9,"when calling registerEventId in ClosureEvents, line 228")
endif
set Eb=Eb-1
set Tc[M9]=w0w
if fc[Tc[M9]]!=0 then
set Gc[fc[Tc[M9]]]=M9
set Yc[M9]=fc[Tc[M9]]
endif
set fc[Tc[M9]]=M9
set Eb=Eb-1
set u0w=bj_FORCE_ALL_PLAYERS
if IsPlayerInForce(GetLocalPlayer(),u0w) then
call ShowInterface(false,0.50)
endif
set V9=0
set B9=4
loop
exitwhen V9>B9
if not Wo then
set r0w=bj_FORCE_ALL_PLAYERS
set C9=xo[V9]
if IsPlayerInForce(GetLocalPlayer(),r0w) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,10.0,C9)
endif
call TriggerSleepAction(12.5)
endif
set V9=V9+1
endloop
call CinematicModeExBJ(false,bj_FORCE_ALL_PLAYERS,bj_CINEMODE_INTERFACEFADE)
set Wo=true
set Eb=Eb-1
set N9=null
set u0w=null
set r0w=null
endfunction
function Raw takes nothing returns nothing
set Eb=0
call s0w("MainInit, line 128")
endfunction
function fh takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988801 then
return false
endif
if GetUnitTypeId(GetSpellTargetUnit())!=1747988787 then
return false
endif
return true
endfunction
function Rh takes nothing returns boolean
if not fh() then
return false
endif
return true
endfunction
function Rm takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989082,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989072,0)
endfunction
function Now takes string Vow returns boolean
local integer Bow
set Zb[Eb]=Vow
set Eb=Eb+1
set pl=oow("when calling new_Table in TypeCasting, line 6")
set Zb[Eb]="when calling initTypecastData in TypeCasting, line 14"
set Eb=Eb+1
set Bow=pl
set Zb[Eb]="when calling saveString in TypeCasting, line 11"
set Eb=Eb+1
if Ob[Bow]==0 then
if Bow==0 then
call r7("Nullpointer exception when calling Table.saveString","when calling error in Table, line 60")
else
call r7("Called Table.saveString on invalid object.","when calling error in Table, line 60")
endif
endif
call SaveStr(Ol,Bow,0,"")
set Eb=Eb-1-1-1
return true
endfunction
function Rqw takes nothing returns boolean
set Eb=0
return Now("TypeCasting, line 1")
endfunction
function S7 takes nothing returns boolean
call CreateGroup()
return true
endfunction
function SD takes nothing returns nothing
local group sD=GetUnitsOfTypeIdAll(1747988554)
local code tD=ha
local boolean iD=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(sD,tD)
if iD then
call DestroyGroup(sD)
endif
set sD=null
endfunction
function SJ takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function mlw takes string glw returns boolean
local trigger hlw
local playerunitevent Flw
local rect klw
local region jlw
local integer xlw
local integer vlw
set Zb[Eb]=glw
set Eb=Eb+1
set hlw=CreateTrigger()
set klw=GetWorldBounds()
set jlw=CreateRegion()
call RegionAddRect(jlw,klw)
call TriggerRegisterEnterRegion(hlw,jlw,null)
call TriggerAddAction(hlw,Pf)
set Flw=EVENT_PLAYER_UNIT_DEATH
set Zb[Eb]="when calling alloc_Closure in Upkeep, line 15"
set Eb=Eb+1
if jl==0 then
if xl<32768 then
set xl=xl+1
set xlw=xl
set vl[xlw]=676
else
call r7("Out of memory: Could not create Closure.","when calling error in Upkeep, line 15")
set xlw=0
endif
else
set jl=jl-1
set xlw=kl[jl]
set vl[xlw]=676
endif
set Eb=Eb-1
set Tc[xlw]=0
set Yc[xlw]=0
set Gc[xlw]=0
set Zb[Eb]="when calling add in Upkeep, line 15"
set Eb=Eb+1
set Zb[Eb]="when calling toIntId in ClosureEvents, line 111"
set Eb=Eb+1
set vlw=qc[GetHandleId(Flw)]
if vlw==0 then
set vlw=TM(Flw,"when calling registerEventId in ClosureEvents, line 228")
endif
set Eb=Eb-1
set Tc[xlw]=vlw
if fc[Tc[xlw]]!=0 then
set Gc[fc[Tc[xlw]]]=xlw
set Yc[xlw]=fc[Tc[xlw]]
endif
set fc[Tc[xlw]]=xlw
set Eb=Eb-1-1
set hlw=null
set Flw=null
set klw=null
set jlw=null
return true
endfunction
function Saw takes nothing returns boolean
set Eb=0
return mlw("Upkeep, line 1")
endfunction
function Sm takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988812,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988559,0)
endfunction
function RG takes nothing returns boolean
if IsUnitType(GetEnumUnit(),UNIT_TYPE_STRUCTURE)!=false then
return false
endif
return true
endfunction
function TG takes nothing returns nothing
if RG() then
call SetUnitPositionLoc(GetEnumUnit(),o)
endif
endfunction
function RH takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990356 then
return false
endif
return true
endfunction
function TH takes nothing returns boolean
if not RH() then
return false
endif
return true
endfunction
function RP takes nothing returns boolean
if GetResearched()!=1378890052 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890052,true)!=2 then
return false
endif
return true
endfunction
function TP takes nothing returns boolean
if not RP() then
return false
endif
return true
endfunction
function TQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989812,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989811,0)
endfunction
function fOw takes integer pOw,string eOw returns trigger
local integer qOw
local fogstate aOw
local integer nOw
local trigger dOw
set Zb[Eb]=eOw
set Eb=Eb+1
set qOw=pl
set aOw=ConvertFogState(pOw)
set Zb[Eb]="when calling saveFogState in TypeCasting, line 88"
set Eb=Eb+1
if Ob[qOw]==0 then
if qOw==0 then
call r7("Nullpointer exception when calling Table.saveFogState","when calling error in Table, line 168")
else
call r7("Called Table.saveFogState on invalid object.","when calling error in Table, line 168")
endif
endif
call SaveFogStateHandle(Ol,qOw,0,aOw)
set Eb=Eb-1
set nOw=pl
set Zb[Eb]="when calling loadTrigger in TypeCasting, line 89"
set Eb=Eb+1
if Ob[nOw]==0 then
if nOw==0 then
call r7("Nullpointer exception when calling Table.loadTrigger","when calling error in Table, line 111")
else
call r7("Called Table.loadTrigger on invalid object.","when calling error in Table, line 111")
endif
endif
set dOw=LoadTriggerHandle(Ol,nOw,0)
set Eb=Eb-1-1
set Lf=dOw
set aOw=null
set dOw=null
return Lf
endfunction
function ecw takes string ycw returns boolean
local boolean pcw
set Zb[Eb]=ycw
set Eb=Eb+1
set pcw=TriggerEvaluate(fOw(Fyw(DO,GetSpellAbilityId(),"when calling get in RegisterEvents, line 58"),"when calling triggerFromIndex in RegisterEvents, line 58"))
set Eb=Eb-1
return pcw
endfunction
function Taw takes nothing returns boolean
set Eb=0
return ecw("RegisterEvents, line 58")
endfunction
function Rg takes nothing returns boolean
if IsUnitType(GetEnumUnit(),UNIT_TYPE_STRUCTURE)!=false then
return false
endif
return true
endfunction
function Tg takes nothing returns nothing
if Rg() then
call SetUnitPositionLoc(GetEnumUnit(),c)
endif
endfunction
function J8 takes string H8 returns boolean
set Zb[Eb]=H8
set Eb=Eb+1
set Zb[Eb]="when calling alloc_Closure in LinkedList, line 504"
set Eb=Eb+1
if lb==0 then
if bb<32768 then
set bb=bb+1
else
call r7("Out of memory: Could not create Closure.","when calling error in LinkedList, line 504")
endif
else
set lb=lb-1
endif
set Eb=Eb-1
set Zb[Eb]="when calling alloc_Closure in LinkedList, line 508"
set Eb=Eb+1
if lb==0 then
if bb<32768 then
set bb=bb+1
else
call r7("Out of memory: Could not create Closure.","when calling error in LinkedList, line 508")
endif
else
set lb=lb-1
endif
set Eb=Eb-1-1
return true
endfunction
function Tqw takes nothing returns boolean
set Eb=0
return J8("LinkedList, line 1")
endfunction
function Rv takes nothing returns boolean
if GetResearched()!=1378889802 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889802,true)!=1 then
return false
endif
return true
endfunction
function Tv takes nothing returns boolean
if not Rv() then
return false
endif
return true
endfunction
function UG takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989046 then
return false
endif
return true
endfunction
function UH takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function ZK takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989316 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function UK takes nothing returns boolean
if not ZK() then
return false
endif
return true
endfunction
function UP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651850,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651849,0)
endfunction
function initialize takes nothing returns nothing
local integer i_2=0
local integer temp=JO
loop
exitwhen i_2>temp
set i_2=i_2+1
endloop
endfunction
function Uqw takes nothing returns boolean
set Eb=0
set Zb[Eb]="StringUtils, line 1"
set Eb=Eb+1
set JO=127
call initialize()
call iOw("","when calling stringToIndex in StringUtils, line 167")
set Eb=Eb-1
return true
endfunction
function Utw takes nothing returns nothing
call Qtw(GetFilterUnit())
endfunction
function Uv takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989065,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989296,0)
endfunction
function CE takes nothing returns boolean
if GetResearched()!=1378890034 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890034,true)!=1 then
return false
endif
return true
endfunction
function VE takes nothing returns boolean
if not CE() then
return false
endif
return true
endfunction
function CJ takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989592 then
return false
endif
return true
endfunction
function VJ takes nothing returns boolean
if not CJ() then
return false
endif
return true
endfunction
function VR takes nothing returns nothing
call CreateQuestBJ(bj_QUESTTYPE_OPT_DISCOVERED,"TRIGSTR_097","TRIGSTR_098","ReplaceableTextures\\CommandButtons\\BTNSteelMelee.blp")
call CreateQuestBJ(bj_QUESTTYPE_OPT_DISCOVERED,"TRIGSTR_103","TRIGSTR_104","ReplaceableTextures\\WorldEditUI\\Doodad-Cinematic.blp")
call CreateQuestBJ(bj_QUESTTYPE_OPT_DISCOVERED,"TRIGSTR_2667","TRIGSTR_2668","ReplaceableTextures\\WorldEditUI\\Editor-MultipleUnits.blp")
endfunction
function VU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990584,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990593,0)
endfunction
function VW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989574,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989573,0)
endfunction
function Vcw takes nothing returns boolean
return true
endfunction
function Cm takes nothing returns boolean
if GetResearched()!=1378889812 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889812,true)!=1 then
return false
endif
return true
endfunction
function Vm takes nothing returns boolean
if not Cm() then
return false
endif
return true
endfunction
function l4 takes string o4 returns boolean
local integer O4
set Zb[Eb]=o4
set Eb=Eb+1
set Zb[Eb]="when calling alloc_Closure in DateTime, line 31"
set Eb=Eb+1
if Vl==0 then
if Bl<32768 then
set Bl=Bl+1
set O4=Bl
set Nl[O4]=634
else
call r7("Out of memory: Could not create Closure.","when calling error in DateTime, line 31")
set O4=0
endif
else
set Vl=Vl-1
set O4=Cl[Vl]
set Nl[O4]=634
endif
set Eb=Eb-1
set Dc[O4]=120.0
set Zb[Eb]="when calling doPeriodically in DateTime, line 31"
set Eb=Eb+1
set Zb[Eb]="when calling start in ClosureTimers, line 36"
set Eb=Eb+1
if Nl[O4]==0 then
if O4==0 then
call r7("Nullpointer exception when calling CallbackPeriodic.start","when calling error in ClosureTimers, line 88")
else
call r7("Called CallbackPeriodic.start on invalid object.","when calling error in ClosureTimers, line 88")
endif
endif
call U3(O4,1.0,"when calling start in ClosureTimers, line 88")
set Eb=Eb-1-1-1
return true
endfunction
function Vqw takes nothing returns boolean
set Eb=0
return l4("DateTime, line 1")
endfunction
function QE takes nothing returns boolean
if GetResearched()!=1378890037 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890037,true)!=1 then
return false
endif
return true
endfunction
function WE takes nothing returns boolean
if not QE() then
return false
endif
return true
endfunction
function QJ takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990327 then
return false
endif
return true
endfunction
function WJ takes nothing returns boolean
if not QJ() then
return false
endif
return true
endfunction
function WU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990322,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990105,0)
endfunction
function WW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989560,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989579,0)
endfunction
function Qm takes nothing returns boolean
if GetResearched()!=1378889800 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889800,true)!=2 then
return false
endif
return true
endfunction
function Wm takes nothing returns boolean
if not Qm() then
return false
endif
return true
endfunction
function Wqw takes nothing returns boolean
set Eb=0
set Zb[Eb]="RegisterEvents, line 1"
set Eb=Eb+1
set DO=Z7("when calling new_HashMap in RegisterEvents, line 55")
call bcw(EVENT_PLAYER_UNIT_SPELL_EFFECT,null,Af,null)
set Eb=Eb-1
return true
endfunction
function XD takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function XI takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990596,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990595,0)
endfunction
function XR takes nothing returns nothing
call SetFloatGameState(GAME_STATE_TIME_OF_DAY,bj_MELEE_STARTING_TOD)
call MeleeStartingHeroLimit()
endfunction
function XSw takes nothing returns boolean
set PO=-340282366920938000000000000000000000000.
return true
endfunction
function LZ takes nothing returns boolean
if GetResearched()!=1378890036 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890036,true)!=2 then
return false
endif
return true
endfunction
function XZ takes nothing returns boolean
if not LZ() then
return false
endif
return true
endfunction
function Xcw takes nothing returns boolean
return true
endfunction
function c4 takes string i4 returns boolean
local integer S4
set Zb[Eb]=i4
set Eb=Eb+1
set Zb[Eb]="when calling alloc_Closure in Credits, line 5"
set Eb=Eb+1
if Vl==0 then
if Bl<32768 then
set Bl=Bl+1
set S4=Bl
set Nl[S4]=633
else
call r7("Out of memory: Could not create Closure.","when calling error in Credits, line 5")
set S4=0
endif
else
set Vl=Vl-1
set S4=Cl[Vl]
set Nl[S4]=633
endif
set Eb=Eb-1
set Zb[Eb]="when calling doPeriodically in Credits, line 5"
set Eb=Eb+1
set Zb[Eb]="when calling start in ClosureTimers, line 36"
set Eb=Eb+1
if Nl[S4]==0 then
if S4==0 then
call r7("Nullpointer exception when calling CallbackPeriodic.start","when calling error in ClosureTimers, line 88")
else
call r7("Called CallbackPeriodic.start on invalid object.","when calling error in ClosureTimers, line 88")
endif
endif
call U3(S4,600,"when calling start in ClosureTimers, line 88")
set Eb=Eb-1-1-1
return true
endfunction
function Xqw takes nothing returns boolean
set Eb=0
return c4("Credits, line 1")
endfunction
function Xx takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989057,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989058,0)
endfunction
function YF takes nothing returns boolean
if GetUnitTypeId(GetDyingUnit())!=1747988792 then
return false
endif
return true
endfunction
function YH takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function YP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990601,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990599,0)
endfunction
function YT takes nothing returns nothing
local player RT=GetOwningPlayer(GetTriggerUnit())
local player TT=GetOwningPlayer(GetTriggerUnit())
set y[GetPlayerId(RT)+1]=y[GetPlayerId(TT)+1]+10
call UnitAddAbility(GetConstructedStructure(),1093677647)
set RT=null
set TT=null
endfunction
function YX takes nothing returns boolean
local boolean RX
local boolean TX
if GetUnitTypeId(GetSpellAbilityUnit())==1747988553 then
set RX=GetUnitTypeId(GetSpellTargetUnit())==1747989297
else
set RX=false
endif
if RX then
set TX=GetPlayerId(GetOwningPlayer(GetSpellTargetUnit()))==PLAYER_NEUTRAL_AGGRESSIVE
else
set TX=false
endif
return TX
endfunction
function UOw takes string EOw returns nothing
local unit ZOw
set Zb[Eb]=EOw
set Eb=Eb+1
set ZOw=qO[aO-1]
set Zb[Eb]="when calling toUnitIndex in UnitIndexer, line 179"
set Eb=Eb+1
if GetUnitUserData(ZOw)==0 then
call DOw(ZOw,"when calling new_UnitIndex in UnitIndexer, line 125")
endif
set Eb=Eb-1-1
set ZOw=null
endfunction
function Yaw takes nothing returns nothing
set Eb=0
call UOw("UnitIndexer, line 179")
endfunction
function Yk takes nothing returns boolean
if GetUnitTypeId(GetDyingUnit())!=1747988793 then
return false
endif
return true
endfunction
function Yv takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651824,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651825,0)
endfunction
function EH takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990350 then
return false
endif
return true
endfunction
function ZH takes nothing returns boolean
if not EH() then
return false
endif
return true
endfunction
function EP takes nothing returns boolean
if GetResearched()!=1378890041 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890041,true)!=1 then
return false
endif
return true
endfunction
function ZP takes nothing returns boolean
if not EP() then
return false
endif
return true
endfunction
function ZQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990099,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990096,0)
endfunction
function Syw takes integer syw,unit tyw,string iyw returns nothing
set Zb[Eb]=iyw
set Eb=Eb+1
if tb[syw]==0 then
if syw==0 then
call r7("Nullpointer exception when calling ArrayQueue.enqueue","when calling error in DummyRecycler, line 54")
else
call r7("Called ArrayQueue.enqueue on invalid object.","when calling error in DummyRecycler, line 54")
endif
endif
set Zb[Eb]="when calling enqueue in DummyRecycler, line 54"
set Eb=Eb+1
if Kc[syw]<6 then
set Kc[syw]=Kc[syw]+1
set Jc[syw]=ModuloInteger(Jc[syw]+1,6)
else
call r7("Queue Overflow","when calling error in DummyRecycler, line 60")
endif
set Eb=Eb-1-1
endfunction
function i5 takes real w5,real u5,player r5,real s5 returns unit
local unit t5=CreateUnit(r5,2019849581,w5,u5,s5*57.295779513)
call SetUnitX(t5,w5)
call SetUnitY(t5,u5)
call UnitAddAbility(t5,1097691750)
call UnitRemoveAbility(t5,1097691750)
call UnitAddAbility(t5,1097625443)
set Df=t5
set t5=null
return Df
endfunction
function o5 takes string S5 returns integer
local integer c5
set Zb[Eb]=S5
set Eb=Eb+1
set Zb[Eb]="when calling ArrayQueue in DummyRecycler, line 48"
set Eb=Eb+1
if rb==0 then
if sb<32768 then
set sb=sb+1
set c5=sb
set tb[c5]=626
else
call r7("Out of memory: Could not create ArrayQueue.","when calling error in DummyRecycler, line 48")
set c5=0
endif
else
set rb=rb-1
set c5=ub[rb]
set tb[c5]=626
endif
set Eb=Eb-1
set Jc[c5]=0
set Kc[c5]=0
set Eb=Eb-1
return c5
endfunction
function M2 takes string X2 returns boolean
local integer C2
local integer V2
local integer B2
local integer N2
set Zb[Eb]=X2
set Eb=Eb+1
set Hc=360*1./8
call CreateTimer()
set C2=0
set V2=7
loop
exitwhen C2>V2
set Lc[C2]=o5("when calling new_ArrayQueue in DummyRecycler, line 139")
set B2=0
set N2=5
loop
exitwhen B2>N2
call Syw(Lc[C2],i5(Ho,Jo,lS,C2*Hc*0.017453293),"when calling enqueue in DummyRecycler, line 141")
set B2=B2+1
endloop
set C2=C2+1
endloop
set Eb=Eb-1
return true
endfunction
function Zqw takes nothing returns boolean
set Eb=0
return M2("DummyRecycler, line 1")
endfunction
function Ev takes nothing returns boolean
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889797,true)!=1 then
return false
endif
return true
endfunction
function Zv takes nothing returns boolean
if not Ev() then
return false
endif
return true
endfunction
function a9 takes nothing returns boolean
set Eo=false
set Zo=false
set Uo=CreateTimer()
call TimerStart(Uo,0.01,true,mf)
return true
endfunction
function qD takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989325 then
return false
endif
return true
endfunction
function aD takes nothing returns boolean
if not qD() then
return false
endif
return true
endfunction
function aE takes nothing returns nothing
set s=bj_FORCE_ALL_PLAYERS
call ForForce(s,Be)
endfunction
function qI takes nothing returns boolean
if GetResearched()!=1378890051 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890051,true)!=2 then
return false
endif
return true
endfunction
function aI takes nothing returns boolean
if not qI() then
return false
endif
return true
endfunction
function Dow takes timer Eow,string Zow returns integer
local integer Uow
local integer Iow
local integer Aow
set Zb[Eb]=Zow
set Eb=Eb+1
set Uow=yl
set Iow=GetHandleId(Eow)
set Zb[Eb]="when calling loadInt in TimerUtils, line 21"
set Eb=Eb+1
if Ob[Uow]==0 then
if Uow==0 then
call r7("Nullpointer exception when calling Table.loadInt","when calling error in Table, line 39")
else
call r7("Called Table.loadInt on invalid object.","when calling error in Table, line 39")
endif
endif
set Aow=LoadInteger(Ol,Uow,Iow)
set Eb=Eb-1-1
return Aow
endfunction
function aww takes real qww returns real
if qww>0. then
return 1.
elseif qww<0. then
return -1.
else
return 0.
endif
endfunction
function Mcw takes integer Bcw returns string
local string Ncw="|cff15ff00+"
if aww(Bcw*1.)==-1. then
set Ncw="|cffff0000"
endif
return Ncw+I2S(Bcw)+"|r"
endfunction
function Ebw takes integer Qbw,string Wbw returns nothing
set Zb[Eb]=Wbw
set Eb=Eb+1
if Hl[Qbw]==0 then
if Qbw==0 then
call r7("Nullpointer exception when calling ForGroupCallback.ForGroupCallback","when calling error in ClosureForGroups, line 3")
else
call r7("Called ForGroupCallback.ForGroupCallback on invalid object.","when calling error in ClosureForGroups, line 3")
endif
endif
set Zb[Eb]="when calling destroyForGroupCallback in ClosureForGroups, line 3"
set Eb=Eb+1
set Zb[Eb]="when calling ForGroupCallback in ClosureForGroups, line 3"
set Eb=Eb+1
if Hl[Qbw]==0 then
call r7("Double free: object of type ForGroupCallback","when calling error in ClosureForGroups, line 3")
else
set Pl[Al]=Qbw
set Al=Al+1
set Hl[Qbw]=0
endif
set Eb=Eb-1-1-1
endfunction
function h3 takes integer T3,string Y3 returns nothing
local integer G3
local integer g3
set Zb[Eb]=Y3
set Eb=Eb+1
set G3=0
set g3=bj_MAX_PLAYER_SLOTS-1
loop
exitwhen G3>g3
set xc[vc]=T3
set vc=vc+1
call GroupEnumUnitsOfPlayer(jc,GO[G3],mc)
call GroupClear(jc)
set vc=vc-1
set G3=G3+1
endloop
call Ebw(T3,"when calling ForGroupCallback in ClosureForGroups, line 66")
set Eb=Eb-1
endfunction
function h5 takes string p5 returns nothing
local integer e5
local integer q5
local integer a5
local integer n5
local integer d5
local real f5
local integer R5
local integer T5
local integer Y5
local integer G5
local integer g5
set Zb[Eb]=p5
set Eb=Eb+1
set e5=0
set q5=23
loop
exitwhen e5>q5
set Xc[e5]=0
set Cc[e5]=0
set e5=e5+1
endloop
set a5=R2I(QS*0.5/10.0)+1
set n5=0
set d5=R2I(20)-1
loop
exitwhen n5>d5
set f5=n5*0.5
set Zb[Eb]="when calling alloc_Closure in Economy, line 29"
set Eb=Eb+1
if Kl==0 then
if Ll<32768 then
set Ll=Ll+1
set R5=Ll
set Xl[R5]=644
else
call r7("Out of memory: Could not create Closure.","when calling error in Economy, line 29")
set R5=0
endif
else
set Kl=Kl-1
set R5=Jl[Kl]
set Xl[R5]=644
endif
set Eb=Eb-1
set Bc[R5]=n5
set Nc[R5]=a5
set Zb[Eb]="when calling doAfter in Economy, line 29"
set Eb=Eb+1
call ryw(R5,f5,"when calling start in ClosureTimers, line 15")
set Eb=Eb-1
set T5=QS-1
set Y5=(n5+1)*a5-1
if T5<2147483647 then
set G5=T5
else
set G5=2147483647
endif
if Y5<G5 then
set G5=Y5
endif
exitwhen G5==QS-1
set n5=n5+1
endloop
set Zb[Eb]="when calling alloc_Closure in Economy, line 38"
set Eb=Eb+1
if Al==0 then
if Dl<32768 then
set Dl=Dl+1
set g5=Dl
set Hl[g5]=682
else
call r7("Out of memory: Could not create Closure.","when calling error in Economy, line 38")
set g5=0
endif
else
set Al=Al-1
set g5=Pl[Al]
set Hl[g5]=682
endif
set Eb=Eb-1
call h3(g5,"when calling forUnitsAll in Economy, line 38")
set Eb=Eb-1
endfunction
function H6 takes integer n6,integer d6,string f6 returns nothing
local integer R6
local integer T6
local multiboard Y6
local integer G6
local integer g6
local integer h6
local integer F6
local boolean k6
local integer j6
local integer x6
local integer v6
local integer m6
local string Q6
local integer W6
local integer E6
local boolean Z6
local integer U6
local integer I6
local integer P6
local player A6
local playerstate D6
set Zb[Eb]=f6
set Eb=Eb+1
set Vc=Vc+1
set R6=0
set T6=23
loop
exitwhen R6>T6
set F6=nO[R6]
set Zb[Eb]="when calling isInGame in Economy, line 53"
set Eb=Eb+1
if xb[F6]==0 then
if F6==0 then
call r7("Nullpointer exception when calling PlayerStats.isInGame","when calling error in PlayerStats, line 14")
else
call r7("Called PlayerStats.isInGame on invalid object.","when calling error in PlayerStats, line 14")
endif
endif
set k6=RO[F6]
set Eb=Eb-1
if k6 then
set Y6=bO[R6]
set j6=sO[0]
set x6=sO[1]
set f6=Mcw(Xc[R6])
call MultiboardSetItemValue(MultiboardGetItem(Y6,x6,j6),f6)
set v6=tO[0]
set m6=tO[1]
set W6=nO[R6]
set Zb[Eb]="when calling getUpkeep in Economy, line 56"
set Eb=Eb+1
if xb[W6]==0 then
if W6==0 then
call r7("Nullpointer exception when calling PlayerStats.getUpkeep","when calling error in PlayerStats, line 20")
else
call r7("Called PlayerStats.getUpkeep on invalid object.","when calling error in PlayerStats, line 20")
endif
endif
set E6=YO[W6]
set Eb=Eb-1
set Q6=Mcw(E6)
call MultiboardSetItemValue(MultiboardGetItem(Y6,m6,v6),Q6)
endif
set R6=R6+1
endloop
if Vc==R2I(12) then
set Vc=0
set G6=0
set g6=23
loop
exitwhen G6>g6
set d6=nO[G6]
set Zb[Eb]="when calling isInGame in Economy, line 61"
set Eb=Eb+1
if xb[d6]==0 then
if d6==0 then
call r7("Nullpointer exception when calling PlayerStats.isInGame","when calling error in PlayerStats, line 14")
else
call r7("Called PlayerStats.isInGame on invalid object.","when calling error in PlayerStats, line 14")
endif
endif
set Z6=RO[d6]
set Eb=Eb-1
if Z6 then
set n6=GetPlayerState(GO[G6],PLAYER_STATE_RESOURCE_GOLD)
set h6=GetPlayerState(GO[G6],PLAYER_STATE_RESOURCE_LUMBER)
set A6=GO[G6]
set D6=PLAYER_STATE_RESOURCE_GOLD
set P6=n6+Xc[G6]
set U6=nO[G6]
set Zb[Eb]="when calling getUpkeep in Economy, line 64"
set Eb=Eb+1
if xb[U6]==0 then
if U6==0 then
call r7("Nullpointer exception when calling PlayerStats.getUpkeep","when calling error in PlayerStats, line 20")
else
call r7("Called PlayerStats.getUpkeep on invalid object.","when calling error in PlayerStats, line 20")
endif
endif
set I6=YO[U6]
set Eb=Eb-1
call SetPlayerState(A6,D6,P6+I6)
call SetPlayerState(GO[G6],PLAYER_STATE_RESOURCE_LUMBER,h6+Cc[G6])
endif
set G6=G6+1
endloop
endif
call h5("when calling countIncomeForAll in Economy, line 68")
set Eb=Eb-1
set Y6=null
set A6=null
set D6=null
endfunction
function Bsw takes multiboard Asw,integer Dsw,integer Hsw,string Jsw,real Ksw returns nothing
local multiboarditem Lsw=MultiboardGetItem(Asw,Hsw,Dsw)
local string Xsw=Jsw
local string Csw
local integer Vsw
set Dsw=R2I((R2I(Ksw/0.004)-StringLength(Jsw))*1./2)
set Csw=""
set Hsw=0
set Vsw=Dsw-1
loop
exitwhen Hsw>Vsw
set Csw=Csw+" "
set Hsw=Hsw+1
endloop
if ModuloReal(Dsw,2)==1. then
set Xsw=" "+Xsw
endif
set Xsw=Csw+Xsw
call MultiboardSetItemValue(Lsw,Xsw)
set Lsw=null
endfunction
function Uyw takes integer Eyw,string Zyw returns nothing
set Zb[Eb]=Zyw
set Eb=Eb+1
if fb[Eyw]==0 then
if Eyw==0 then
call r7("Nullpointer exception when calling LLIterator.LLIterator","when calling error in LinkedList, line 406")
else
call r7("Called LLIterator.LLIterator on invalid object.","when calling error in LinkedList, line 406")
endif
endif
set Zb[Eb]="when calling destroyLLIterator in LinkedList, line 406"
set Eb=Eb+1
set Zb[Eb]="when calling LLIterator in LinkedList, line 406"
set Eb=Eb+1
if fb[Eyw]==0 then
call r7("Double free: object of type LLIterator","when calling error in LinkedList, line 406")
else
set ab[nb]=Eyw
set nb=nb+1
set fb[Eyw]=0
endif
set Eb=Eb-1-1-1
endfunction
function Bww takes player Kww,string Lww returns string
local integer Xww
local integer Cww
local integer Vww
set Zb[Eb]=Lww
set Eb=Eb+1
set Cww=nO[GetPlayerId(Kww)]
set Zb[Eb]="when calling getForceId in Messages, line 53"
set Eb=Eb+1
if xb[Cww]==0 then
if Cww==0 then
call r7("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 94")
else
call r7("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 94")
endif
endif
set Vww=dO[Cww]
set Eb=Eb-1
set Xww=GetRandomInt(0,2)
if Vww==0 then
set Lww=tl[Xww]
elseif Vww==1 then
set Lww=il[Xww]
elseif Vww==2 then
set Lww=Sl[Xww]
elseif Vww==3 then
set Lww=cl[Xww]
else
set Lww="Attention!"
endif
set Eb=Eb-1
return "|cffffa600"+Lww+"|r"
endfunction
function i9 takes integer r9,integer s9 returns boolean
local integer t9=Yo[ko[r9]]
loop
exitwhen t9==ko[r9]
if Ro[t9]==s9 then
return true
endif
set t9=Yo[t9]
endloop
return false
endfunction
function nbw takes integer ebw,integer qbw,string abw returns nothing
set Zb[Eb]=abw
set Eb=Eb+1
if Il[ebw]==0 then
if ebw==0 then
call r7("Nullpointer exception when calling City.getCityModifierOnAdd","when calling error in City, line 386")
else
call r7("Called City.getCityModifierOnAdd on invalid object.","when calling error in City, line 386")
endif
endif
set Zb[Eb]="when calling getCityModifierOnAdd in City, line 386"
set Eb=Eb+1
set tc[ebw]=tc[ebw]+gS[Fyw(YS,qbw,"when calling get in City, line 387")]
set ic[ebw]=ic[ebw]+xS[Fyw(YS,qbw,"when calling get in City, line 388")]
set Eb=Eb-1-1
endfunction
function TV takes integer eV,integer qV,string aV returns boolean
local real nV
local integer dV
local boolean fV
local integer RV
set Zb[Eb]=aV
set Eb=Eb+1
set dV=oc[eV]
set Zb[Eb]="when calling has in City, line 336"
set Eb=Eb+1
if Gb[dV]==0 then
if dV==0 then
call r7("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call r7("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set fV=i9(dV,qV)
set Eb=Eb-1
if fV then
set Eb=Eb-1
return false
endif
call bpw(oc[eV],qV,"when calling add in City, line 338")
call nbw(eV,qV,"when calling getCityModifierOnAdd in City, line 339")
set nV=GS[Fyw(YS,qV,"when calling get in City, line 341")]
set Zb[Eb]="when calling alloc_Closure in City, line 341"
set Eb=Eb+1
if Kl==0 then
if Ll<32768 then
set Ll=Ll+1
set RV=Ll
set Xl[RV]=639
else
call r7("Out of memory: Could not create Closure.","when calling error in City, line 341")
set RV=0
endif
else
set Kl=Kl-1
set RV=Jl[Kl]
set Xl[RV]=639
endif
set Eb=Eb-1
set JS[RV]=eV
set KS[RV]=qV
set Zb[Eb]="when calling doAfter in City, line 341"
set Eb=Eb+1
set Zb[Eb]="when calling start in ClosureTimers, line 15"
set Eb=Eb+1
if Xl[RV]==0 then
if RV==0 then
call r7("Nullpointer exception when calling CallbackSingle.start","when calling error in ClosureTimers, line 67")
else
call r7("Called CallbackSingle.start on invalid object.","when calling error in ClosureTimers, line 67")
endif
endif
call H3(RV,nV,"when calling start in ClosureTimers, line 67")
set Eb=Eb-1-1-1
return true
endfunction
function pbw takes integer ibw,string Sbw returns string
local integer cbw
local integer obw
local integer Obw
local integer lbw
local integer bbw
local integer ybw
set Zb[Eb]=Sbw
set Eb=Eb+1
if Il[ibw]==0 then
if ibw==0 then
call r7("Nullpointer exception when calling City.getCityNameColored","when calling error in City, line 159")
else
call r7("Called City.getCityNameColored on invalid object.","when calling error in City, line 159")
endif
endif
set lbw=So[VS[ibw]]
set bbw=co[VS[ibw]]
set ybw=oo[VS[ibw]]
set cbw=lbw/16
set obw=bbw/16
set Obw=ybw/16
set Sbw="|cff"+Pc[cbw]+Pc[lbw-cbw*16]+Pc[obw]+Pc[bbw-obw*16]+Pc[Obw]+Pc[ybw-Obw*16]+XS[ibw]+"|r"
set Eb=Eb-1
return Sbw
endfunction
function Hyw takes integer Iyw,string Pyw returns nothing
local integer Ayw
local integer Dyw
set Zb[Eb]=Pyw
set Eb=Eb+1
if fb[Iyw]==0 then
if Iyw==0 then
call r7("Nullpointer exception when calling LLIterator.reset","when calling error in LinkedList, line 421")
else
call r7("Called LLIterator.reset on invalid object.","when calling error in LinkedList, line 421")
endif
endif
set Zb[Eb]="when calling reset in LinkedList, line 421"
set Eb=Eb+1
set Ayw=ho[Iyw]
set Zb[Eb]="when calling getDummy in LinkedList, line 422"
set Eb=Eb+1
if Gb[Ayw]==0 then
if Ayw==0 then
call r7("Nullpointer exception when calling LinkedList.getDummy","when calling error in LinkedList, line 362")
else
call r7("Called LinkedList.getDummy on invalid object.","when calling error in LinkedList, line 362")
endif
endif
set Dyw=ko[Ayw]
set Eb=Eb-1
set Go[Iyw]=Dyw
set go[Iyw]=Go[Iyw]
set Eb=Eb-1-1
endfunction
function u9 takes integer N8,string M8 returns integer
local integer w9
set Zb[Eb]=M8
set Eb=Eb+1
set Zb[Eb]="when calling LLIterator in LinkedList, line 412"
set Eb=Eb+1
if nb==0 then
if db<32768 then
set db=db+1
set w9=db
set fb[w9]=697
else
call r7("Out of memory: Could not create LLIterator.","when calling error in LinkedList, line 406")
set w9=0
endif
else
set nb=nb-1
set w9=ab[nb]
set fb[w9]=697
endif
set Eb=Eb-1
set Zb[Eb]="when calling construct_LLIterator in LinkedList, line 412"
set Eb=Eb+1
set Fo[w9]=true
set ho[w9]=N8
call Hyw(w9,"when calling reset in LinkedList, line 414")
set Eb=Eb-1-1
return w9
endfunction
function Ucw takes integer acw,string ncw returns nothing
local unit dcw
local integer fcw
local integer Rcw
local integer Tcw
local integer Ycw
local real Gcw
local integer gcw
local unit hcw
local player Fcw
local integer kcw
local player jcw
local integer xcw
local integer vcw
local integer mcw
local integer Qcw
local integer Wcw
local integer Ecw
local boolean Zcw
set Zb[Eb]=ncw
set Eb=Eb+1
if acw<0 or acw>=QS then
set Eb=Eb-1
set dcw=null
set hcw=null
set Fcw=null
set jcw=null
return
endif
if Io-HO[acw]<=60 then
set Eb=Eb-1
set dcw=null
set hcw=null
set Fcw=null
set jcw=null
return
endif
set Ycw=AS[acw]
set Zb[Eb]="when calling getLastPublicOrder in Revolts, line 18"
set Eb=Eb+1
if Il[Ycw]==0 then
if Ycw==0 then
call r7("Nullpointer exception when calling City.getLastPublicOrder","when calling error in City, line 299")
else
call r7("Called City.getLastPublicOrder on invalid object.","when calling error in City, line 299")
endif
endif
set Gcw=sc[Ycw]
set Eb=Eb-1
set gcw=AS[acw]
set Zb[Eb]="when calling getCityUnit in Revolts, line 19"
set Eb=Eb+1
if Il[gcw]==0 then
if gcw==0 then
call r7("Nullpointer exception when calling City.getCityUnit","when calling error in City, line 168")
else
call r7("Called City.getCityUnit on invalid object.","when calling error in City, line 168")
endif
endif
set hcw=LS[gcw]
set Eb=Eb-1
set dcw=hcw
set Fcw=GetOwningPlayer(hcw)
if GetPlayerSlotState(Fcw)==PLAYER_SLOT_STATE_PLAYING then
set Zcw=GetPlayerController(Fcw)==MAP_CONTROL_USER
else
set Zcw=false
endif
if not Zcw then
set Eb=Eb-1
set dcw=null
set hcw=null
set Fcw=null
set jcw=null
return
endif
if Gcw<50.0 then
set HO[acw]=Io
set kcw=AS[acw]
set Zb[Eb]="when calling addModifier in Revolts, line 24"
set Eb=Eb+1
if Il[kcw]==0 then
if kcw==0 then
call r7("Nullpointer exception when calling City.addModifier","when calling error in City, line 335")
else
call r7("Called City.addModifier on invalid object.","when calling error in City, line 335")
endif
endif
call TV(kcw,1,"when calling addModifier in City, line 335")
set Eb=Eb-1
set ncw="A violent mob has appeared near the gates of "+pbw(AS[acw],"when calling getCityNameColored in Revolts, line 25")+"!"
set jcw=GetOwningPlayer(hcw)
set Zb[Eb]="when calling attentionToPlayer in Revolts, line 25"
set Eb=Eb+1
call DisplayTimedTextToPlayer(jcw,0.,0.,10.0,Bww(jcw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(jcw,0.,0.,10.0,ncw)
set Eb=Eb-1
if Gcw>=30.0 then
set xcw=hl[0]
set Zb[Eb]="when calling iterator in Revolts, line 28"
set Eb=Eb+1
set vcw=u9(xcw,"when calling new_LLIterator in LinkedList, line 165")
set Eb=Eb-1
set fcw=vcw
loop
exitwhen Yo[go[fcw]]==Go[fcw]
set go[fcw]=Yo[go[fcw]]
call CreateUnit(GO[PLAYER_NEUTRAL_AGGRESSIVE],Ro[go[fcw]],GetUnitX(dcw),GetUnitY(dcw),0.)
endloop
set Zb[Eb]="when calling close in Revolts, line 28"
set Eb=Eb+1
if Fo[fcw]then
call Uyw(fcw,"when calling LLIterator in LinkedList, line 450")
endif
set Eb=Eb-1
elseif Gcw>=15.0 then
set mcw=hl[1]
set Zb[Eb]="when calling iterator in Revolts, line 32"
set Eb=Eb+1
set Qcw=u9(mcw,"when calling new_LLIterator in LinkedList, line 165")
set Eb=Eb-1
set Rcw=Qcw
loop
exitwhen Yo[go[Rcw]]==Go[Rcw]
set go[Rcw]=Yo[go[Rcw]]
call CreateUnit(GO[PLAYER_NEUTRAL_AGGRESSIVE],Ro[go[Rcw]],GetUnitX(dcw),GetUnitY(dcw),0.)
endloop
set Zb[Eb]="when calling close in Revolts, line 32"
set Eb=Eb+1
if Fo[Rcw]then
call Uyw(Rcw,"when calling LLIterator in LinkedList, line 450")
endif
set Eb=Eb-1
else
set Wcw=hl[2]
set Zb[Eb]="when calling iterator in Revolts, line 36"
set Eb=Eb+1
set Ecw=u9(Wcw,"when calling new_LLIterator in LinkedList, line 165")
set Eb=Eb-1
set Tcw=Ecw
loop
exitwhen Yo[go[Tcw]]==Go[Tcw]
set go[Tcw]=Yo[go[Tcw]]
call CreateUnit(GO[PLAYER_NEUTRAL_AGGRESSIVE],Ro[go[Tcw]],GetUnitX(dcw),GetUnitY(dcw),0.)
endloop
set Zb[Eb]="when calling close in Revolts, line 36"
set Eb=Eb+1
if Fo[Tcw]then
call Uyw(Tcw,"when calling LLIterator in LinkedList, line 450")
endif
set Eb=Eb-1
endif
endif
set Eb=Eb-1
set dcw=null
set hcw=null
set Fcw=null
set jcw=null
endfunction
function m3 takes real F3,real k3,real j3,integer x3,string v3 returns nothing
set Zb[Eb]=v3
set Eb=Eb+1
set xc[vc]=x3
set vc=vc+1
call GroupEnumUnitsInRange(jc,F3,k3,j3,mc)
set Zb[Eb]="when calling popCallback in ClosureForGroups, line 85"
set Eb=Eb+1
call GroupClear(jc)
set vc=vc-1
call Ebw(xc[vc],"when calling ForGroupCallback in ClosureForGroups, line 21")
set Eb=Eb-1-1
endfunction
function hB takes integer aB,string nB returns real
local integer dB
local integer fB
local boolean RB
local real TB
local real YB
local real GB
local real gB
set Zb[Eb]=nB
set Eb=Eb+1
set sc[aB]=100.0-rc[aB]*1000.-SquareRoot(wc[aB]*1.)/17.+tc[aB]-wc[aB]*1./1000*PS[Sc[aB]]
set TB=NS[aB]
set YB=MS[aB]
set Zb[Eb]="when calling alloc_Closure in City, line 280"
set Eb=Eb+1
if Al==0 then
if Dl<32768 then
set Dl=Dl+1
set dB=Dl
set Hl[dB]=680
else
call r7("Out of memory: Could not create Closure.","when calling error in City, line 280")
set dB=0
endif
else
set Al=Al-1
set dB=Pl[Al]
set Hl[dB]=680
endif
set Eb=Eb-1
set DS[dB]=aB
call m3(TB,YB,500,dB,"when calling forUnitsInRange in City, line 280")
set GB=NS[aB]
set gB=MS[aB]
set Zb[Eb]="when calling alloc_Closure in City, line 284"
set Eb=Eb+1
if Al==0 then
if Dl<32768 then
set Dl=Dl+1
set fB=Dl
set Hl[fB]=681
else
call r7("Out of memory: Could not create Closure.","when calling error in City, line 284")
set fB=0
endif
else
set Al=Al-1
set fB=Pl[Al]
set Hl[fB]=681
endif
set Eb=Eb-1
set HS[fB]=aB
call m3(GB,gB,1500.0,fB,"when calling forUnitsInRange in City, line 284")
if sc[aB]<0.0 then
set sc[aB]=0.0
endif
if sc[aB]>100.0 then
set sc[aB]=100.0
endif
if sc[aB]<50.0 then
set RB=GetRandomReal(0.0,1.0)<=0.01
else
set RB=false
endif
if RB then
call Ucw(CS[aB],"when calling checkForRevolt in City, line 295")
endif
set Eb=Eb-1
return sc[aB]
endfunction
function lV takes integer sV,string tV returns string
local real iV
local integer SV
local integer cV
local integer oV
local integer OV
set Zb[Eb]=tV
set Eb=Eb+1
set Zb[Eb]="when calling countPublicOrder in City, line 303"
set Eb=Eb+1
if Il[sV]==0 then
if sV==0 then
call r7("Nullpointer exception when calling City.countPublicOrder","when calling error in City, line 275")
else
call r7("Called City.countPublicOrder on invalid object.","when calling error in City, line 275")
endif
endif
set iV=hB(sV,"when calling countPublicOrder in City, line 275")
set Eb=Eb-1
set oV=R2I(255.-iV/100.*255.)
set OV=R2I(iV/100.*255.)
set SV=oV/16
set cV=OV/16
set tV=StringCase("|cff"+Pc[SV]+Pc[oV-SV*16]+Pc[cV]+Pc[OV-cV*16]+Pc[0]+Pc[0],false)+I2S(R2I(iV))+","+I2S(R2I(ModuloReal(R2I(iV*10.),10)))+"%|r"
set Eb=Eb-1
return tV
endfunction
function pV takes integer bV returns string
local string yV
if Eo then
return I2S(wc[bV])
endif
if wc[bV]<100000 then
set yV=I2S(R2I(wc[bV]*1./1000))+","+I2S(R2I(ModuloReal(wc[bV],1000)/100.))+"k"
else
set yV=I2S(R2I(wc[bV]*1./1000))+"k"
endif
return yV
endfunction
function rV takes integer XC,string CC returns integer
local integer VC
local real BC
local real NC
local real MC
local real wV
local real uV
set Zb[Eb]=CC
set Eb=Eb+1
set VC=0
set VC=0+Fyw(bS,GetUnitTypeId(LS[XC]),"when calling get in City, line 250")
set uV=wc[XC]*1.
set Zb[Eb]="when calling countPublicOrder in City, line 262"
set Eb=Eb+1
if Il[XC]==0 then
if XC==0 then
call r7("Nullpointer exception when calling City.countPublicOrder","when calling error in City, line 275")
else
call r7("Called City.countPublicOrder on invalid object.","when calling error in City, line 275")
endif
endif
set wV=hB(XC,"when calling countPublicOrder in City, line 275")
set Eb=Eb-1
set BC=wV/100.
set NC=PO
if 0.75>NC then
set MC=0.75
else
set MC=NC
endif
if BC>MC then
set MC=BC
endif
set VC=VC+R2I(SquareRoot(uV*MC)/6.)
set VC=R2I(VC*ic[XC]*US[Sc[XC]])
set Eb=Eb-1
return VC
endfunction
function jiw takes integer Mtw,string wiw returns nothing
local integer uiw
local multiboard riw
local integer siw
local integer tiw
local integer iiw
local multiboard Siw
local integer ciw
local integer oiw
local multiboard Oiw
local integer liw
local integer biw
local integer yiw
local string piw
local integer eiw
local string qiw
local integer aiw
local string niw
local integer diw
local string fiw
local integer Riw
local integer Tiw
local string Yiw
local integer Giw
local integer giw
local integer hiw
local string Fiw
local string kiw
set Zb[Eb]=wiw
set Eb=Eb+1
if TO[Mtw]==-1 then
set Eb=Eb-1
set riw=null
set Siw=null
set Oiw=null
return
endif
set uiw=GetPlayerId(fO[Mtw])
call Bsw(bO[uiw],OO[0],OO[1],pbw(AS[TO[Mtw]],"when calling getCityNameColored in PlayerStats, line 48"),0.40)
set liw=AS[TO[Mtw]]
set Zb[Eb]="when calling countTax in PlayerStats, line 57"
set Eb=Eb+1
if Il[liw]==0 then
if liw==0 then
call r7("Nullpointer exception when calling City.countTax","when calling error in City, line 246")
else
call r7("Called City.countTax on invalid object.","when calling error in City, line 246")
endif
endif
set biw=rV(liw,"when calling countTax in City, line 246")
set Eb=Eb-1
set yiw=AS[TO[Mtw]]
set Zb[Eb]="when calling getTaxLevel in PlayerStats, line 58"
set Eb=Eb+1
if Il[yiw]==0 then
if yiw==0 then
call r7("Nullpointer exception when calling City.getTaxLevel","when calling error in City, line 156")
else
call r7("Called City.getTaxLevel on invalid object.","when calling error in City, line 156")
endif
endif
set piw=ol[Sc[yiw]]
set Eb=Eb-1
set eiw=AS[TO[Mtw]]
set Zb[Eb]="when calling getPublicOrderStr in PlayerStats, line 59"
set Eb=Eb+1
if Il[eiw]==0 then
if eiw==0 then
call r7("Nullpointer exception when calling City.getPublicOrderStr","when calling error in City, line 302")
else
call r7("Called City.getPublicOrderStr on invalid object.","when calling error in City, line 302")
endif
endif
set qiw=lV(eiw,"when calling getPublicOrderStr in City, line 302")
set Eb=Eb-1
set aiw=AS[TO[Mtw]]
set Zb[Eb]="when calling getPopulationStr in PlayerStats, line 60"
set Eb=Eb+1
if Il[aiw]==0 then
if aiw==0 then
call r7("Nullpointer exception when calling City.getPopulationStr","when calling error in City, line 323")
else
call r7("Called City.getPopulationStr on invalid object.","when calling error in City, line 323")
endif
endif
set niw=pV(aiw)
set Eb=Eb-1
set diw=AS[TO[Mtw]]
set Zb[Eb]="when calling getPopulationGrowthStr in PlayerStats, line 61"
set Eb=Eb+1
if Il[diw]==0 then
if diw==0 then
call r7("Nullpointer exception when calling City.getPopulationGrowthStr","when calling error in City, line 320")
else
call r7("Called City.getPopulationGrowthStr on invalid object.","when calling error in City, line 320")
endif
endif
set fiw=Mcw(uc[diw])
set Eb=Eb-1
set riw=bO[uiw]
set Riw=iO[0]
set Tiw=iO[1]
set Yiw=I2S(biw)
call MultiboardSetItemValue(MultiboardGetItem(riw,Tiw,Riw),Yiw)
call MultiboardSetItemValue(MultiboardGetItem(riw,iO[1],iO[0]+1),piw)
call MultiboardSetItemValue(MultiboardGetItem(riw,SO[1],SO[0]),qiw)
call MultiboardSetItemValue(MultiboardGetItem(riw,cO[1],cO[0]),niw)
call MultiboardSetItemValue(MultiboardGetItem(riw,oO[1],oO[0]),fiw)
set siw=0
set giw=AS[TO[Mtw]]
set Zb[Eb]="when calling getModifiers in PlayerStats, line 71"
set Eb=Eb+1
if Il[giw]==0 then
if giw==0 then
call r7("Nullpointer exception when calling City.getModifiers","when calling error in City, line 358")
else
call r7("Called City.getModifiers on invalid object.","when calling error in City, line 358")
endif
endif
set hiw=oc[giw]
set Eb=Eb-1
set Zb[Eb]="when calling iterator in PlayerStats, line 71"
set Eb=Eb+1
set Giw=u9(hiw,"when calling new_LLIterator in LinkedList, line 165")
set Eb=Eb-1
set tiw=Giw
loop
exitwhen Yo[go[tiw]]==Go[tiw]
set go[tiw]=Yo[go[tiw]]
set iiw=Ro[go[tiw]]
set Siw=bO[uiw]
set Fiw=vS[Fyw(YS,iiw,"when calling get in PlayerStats, line 73")]
call MultiboardSetItemValue(MultiboardGetItem(Siw,4+siw,4),Fiw)
set kiw="("+mS[Fyw(YS,iiw,"when calling get in PlayerStats, line 74")]+")"
call MultiboardSetItemValue(MultiboardGetItem(Siw,4+siw,5),kiw)
set siw=siw+1
endloop
set Zb[Eb]="when calling close in PlayerStats, line 71"
set Eb=Eb+1
if Fo[tiw]then
call Uyw(tiw,"when calling LLIterator in LinkedList, line 450")
endif
set Eb=Eb-1
set ciw=siw
set oiw=9
loop
exitwhen ciw>oiw
set Oiw=bO[uiw]
set wiw=" "
call MultiboardSetItemValue(MultiboardGetItem(Oiw,4+ciw,4)," ")
call MultiboardSetItemValue(MultiboardGetItem(Oiw,4+ciw,5)," ")
set ciw=ciw+1
endloop
set Eb=Eb-1
set riw=null
set Siw=null
set Oiw=null
endfunction
function Hww takes integer Zww,integer Uww,string Iww returns nothing
local integer Pww
local integer Aww
local boolean Dww
set Zb[Eb]=Iww
set Eb=Eb+1
set Pww=0
set Aww=23
loop
exitwhen Pww>Aww
set Zww=nO[Pww]
set Iww="when calling isInGame in MultiboardCityUpdate, line 27"
set Zb[Eb]="when calling isInGame in MultiboardCityUpdate, line 27"
set Eb=Eb+1
if xb[Zww]==0 then
if Zww==0 then
call r7("Nullpointer exception when calling PlayerStats.isInGame","when calling error in PlayerStats, line 14")
else
call r7("Called PlayerStats.isInGame on invalid object.","when calling error in PlayerStats, line 14")
endif
endif
set Dww=RO[Zww]
set Eb=Eb-1
if Dww then
set Uww=nO[Pww]
set Zb[Eb]="when calling refreshMultiboardCity in MultiboardCityUpdate, line 28"
set Eb=Eb+1
if xb[Uww]==0 then
if Uww==0 then
call r7("Nullpointer exception when calling PlayerStats.refreshMultiboardCity","when calling error in PlayerStats, line 43")
else
call r7("Called PlayerStats.refreshMultiboardCity on invalid object.","when calling error in PlayerStats, line 43")
endif
endif
call jiw(Uww,"when calling refreshMultiboardCity in PlayerStats, line 43")
set Eb=Eb-1
endif
set Pww=Pww+1
endloop
set Eb=Eb-1
endfunction
function Nyw takes integer Jyw,integer Kyw,string Lyw returns integer
local integer Xyw
local integer Cyw
local integer Vyw
local integer Byw
set Zb[Eb]=Lyw
set Eb=Eb+1
if Gb[Jyw]==0 then
if Jyw==0 then
call r7("Nullpointer exception when calling LinkedList.get","when calling error in LinkedList, line 50")
else
call r7("Called LinkedList.get on invalid object.","when calling error in LinkedList, line 50")
endif
endif
set Zb[Eb]="when calling get in LinkedList, line 50"
set Eb=Eb+1
set Zb[Eb]="when calling getEntry in LinkedList, line 51"
set Eb=Eb+1
if Gb[Jyw]==0 then
if Jyw==0 then
call r7("Nullpointer exception when calling LinkedList.getEntry","when calling error in LinkedList, line 366")
else
call r7("Called LinkedList.getEntry on invalid object.","when calling error in LinkedList, line 366")
endif
endif
set Cyw=ko[Jyw]
set Vyw=0
set Byw=Kyw
loop
exitwhen Vyw>Byw
set Cyw=Yo[Cyw]
set Vyw=Vyw+1
endloop
set Eb=Eb-1
set Xyw=Ro[Cyw]
set Eb=Eb-1-1
return Xyw
endfunction
function uN takes integer XB,integer CB,real VB,string BB returns nothing
local integer NB
local real MB
local integer wN
set Zb[Eb]=BB
set Eb=Eb+1
set NB=wc[XB]
set wN=wc[XB]
set MB=VB*GetRandomReal(Nyw(yS[CB],0,"when calling get in City, line 369")/1000.,Nyw(yS[CB],1,"when calling get in City, line 369")/1000.)*wc[XB]
set wc[XB]=wN+R2I(MB)
set uc[XB]=uc[XB]+(wc[XB]-NB)
set Eb=Eb-1
endfunction
function cN takes integer rN,integer sN,string tN returns nothing
local integer iN
local real SN
set Zb[Eb]=tN
set Eb=Eb+1
set iN=kS[Fyw(YS,sN,"when calling get in City, line 374")]
set SN=jS[Fyw(YS,sN,"when calling get in City, line 375")]
set Zb[Eb]="when calling addPopulation in City, line 376"
set Eb=Eb+1
if Il[rN]==0 then
if rN==0 then
call r7("Nullpointer exception when calling City.addPopulation","when calling error in City, line 367")
else
call r7("Called City.addPopulation on invalid object.","when calling error in City, line 367")
endif
endif
call uN(rN,iN,SN,"when calling addPopulation in City, line 367")
set Eb=Eb-1
if hS[Fyw(YS,sN,"when calling get in City, line 378")]==false then
set tc[rN]=tc[rN]-gS[Fyw(YS,sN,"when calling get in City, line 379")]*5.0/GS[Fyw(YS,sN,"when calling get in City, line 379")]
endif
set Eb=Eb-1
endfunction
function KN takes integer mN,integer QN,string WN returns nothing
local integer EN
local integer ZN
local integer UN
local integer IN
local integer PN
local real AN
local integer DN
local integer HN
local integer JN
set Zb[Eb]=WN
set Eb=Eb+1
set rc[Oc[mN]]=rc[Oc[mN]]+GetRandomReal(-0.0001,0.00015)*rc[Oc[mN]]
set EN=wc[Oc[mN]]
set JN=wc[Oc[mN]]
set AN=Pow(wc[Oc[mN]]*rc[Oc[mN]],0.8)
set wc[Oc[mN]]=JN+R2I(AN)
set ZN=wc[Oc[mN]]-EN
set UN=GetRandomInt(R2I(-(0.25*ZN)),R2I(0.25*ZN))
set wc[Oc[mN]]=wc[Oc[mN]]+UN
set uc[Oc[mN]]=wc[Oc[mN]]-EN
set DN=oc[Oc[mN]]
set Zb[Eb]="when calling iterator in City, line 129"
set Eb=Eb+1
set HN=u9(DN,"when calling new_LLIterator in LinkedList, line 165")
set Eb=Eb-1
set IN=HN
loop
exitwhen Yo[go[IN]]==Go[IN]
set go[IN]=Yo[go[IN]]
set PN=Ro[go[IN]]
set QN=Oc[mN]
set Zb[Eb]="when calling getCityModifierOnFastCount in City, line 130"
set Eb=Eb+1
if Il[QN]==0 then
if QN==0 then
call r7("Nullpointer exception when calling City.getCityModifierOnFastCount","when calling error in City, line 373")
else
call r7("Called City.getCityModifierOnFastCount on invalid object.","when calling error in City, line 373")
endif
endif
call cN(QN,PN,"when calling getCityModifierOnFastCount in City, line 373")
set Eb=Eb-1
endloop
set Zb[Eb]="when calling close in City, line 129"
set Eb=Eb+1
if Fo[IN]then
call Uyw(IN,"when calling LLIterator in LinkedList, line 450")
endif
set Eb=Eb-1-1
endfunction
function OM takes integer LN,integer XN,string CN returns nothing
local integer VN
local real BN
local integer NN
local real MN
local integer wM
local real uM
local real rM
local integer sM
local real tM
local integer iM
local integer SM
local integer cM
local integer oM
set Zb[Eb]=CN
set Eb=Eb+1
set BN=FS[Fyw(YS,2,"when calling get in City, line 135")]
if GetRandomReal(0.0,1.0)<=BN then
set NN=lc[LN]
set Zb[Eb]="when calling addModifier in City, line 136"
set Eb=Eb+1
if Il[NN]==0 then
if NN==0 then
call r7("Nullpointer exception when calling City.addModifier","when calling error in City, line 335")
else
call r7("Called City.addModifier on invalid object.","when calling error in City, line 335")
endif
endif
call TV(NN,2,"when calling addModifier in City, line 335")
set Eb=Eb-1
endif
set MN=FS[Fyw(YS,5,"when calling get in City, line 137")]
if GetRandomReal(0.0,1.0)<=MN then
set wM=lc[LN]
set Zb[Eb]="when calling addModifier in City, line 138"
set Eb=Eb+1
if Il[wM]==0 then
if wM==0 then
call r7("Nullpointer exception when calling City.addModifier","when calling error in City, line 335")
else
call r7("Called City.addModifier on invalid object.","when calling error in City, line 335")
endif
endif
call TV(wM,5,"when calling addModifier in City, line 335")
set Eb=Eb-1
endif
set uM=FS[Fyw(YS,7,"when calling get in City, line 139")]
if GetRandomReal(0.0,1.0)<=uM then
set XN=lc[LN]
set Zb[Eb]="when calling addModifier in City, line 140"
set Eb=Eb+1
if Il[XN]==0 then
if XN==0 then
call r7("Nullpointer exception when calling City.addModifier","when calling error in City, line 335")
else
call r7("Called City.addModifier on invalid object.","when calling error in City, line 335")
endif
endif
call TV(XN,7,"when calling addModifier in City, line 335")
set Eb=Eb-1
endif
set rM=FS[Fyw(YS,3,"when calling get in City, line 141")]
if GetRandomReal(0.0,1.0)<=rM then
set sM=lc[LN]
set Zb[Eb]="when calling addModifier in City, line 142"
set Eb=Eb+1
if Il[sM]==0 then
if sM==0 then
call r7("Nullpointer exception when calling City.addModifier","when calling error in City, line 335")
else
call r7("Called City.addModifier on invalid object.","when calling error in City, line 335")
endif
endif
call TV(sM,3,"when calling addModifier in City, line 335")
set Eb=Eb-1
endif
set tM=FS[Fyw(YS,4,"when calling get in City, line 143")]
if GetRandomReal(0.0,1.0)<=tM then
set iM=lc[LN]
set Zb[Eb]="when calling addModifier in City, line 144"
set Eb=Eb+1
if Il[iM]==0 then
if iM==0 then
call r7("Nullpointer exception when calling City.addModifier","when calling error in City, line 335")
else
call r7("Called City.addModifier on invalid object.","when calling error in City, line 335")
endif
endif
call TV(iM,4,"when calling addModifier in City, line 335")
set Eb=Eb-1
endif
set SM=oc[lc[LN]]
set Zb[Eb]="when calling iterator in City, line 146"
set Eb=Eb+1
set cM=u9(SM,"when calling new_LLIterator in LinkedList, line 165")
set Eb=Eb-1
set VN=cM
loop
exitwhen Yo[go[VN]]==Go[VN]
set go[VN]=Yo[go[VN]]
set oM=lc[LN]
set Zb[Eb]="when calling getCityModifierOnLongCount in City, line 147"
set Eb=Eb+1
if Il[oM]==0 then
if oM==0 then
call r7("Nullpointer exception when calling City.getCityModifierOnLongCount","when calling error in City, line 382")
else
call r7("Called City.getCityModifierOnLongCount on invalid object.","when calling error in City, line 382")
endif
endif
set Eb=Eb-1
endloop
set Zb[Eb]="when calling close in City, line 146"
set Eb=Eb+1
if Fo[VN]then
call Uyw(VN,"when calling LLIterator in LinkedList, line 450")
endif
set Eb=Eb-1-1
endfunction
function a6 takes integer i6,integer S6,string c6 returns nothing
local integer o6
local multiboard O6
local integer l6
local boolean b6
local integer y6
local string p6
local integer e6
local integer q6
set Zb[Eb]=c6
set Eb=Eb+1
set i6=0
set o6=23
loop
exitwhen i6>o6
set l6=nO[i6]
set c6="when calling isInGame in Economy, line 45"
set Zb[Eb]="when calling isInGame in Economy, line 45"
set Eb=Eb+1
if xb[l6]==0 then
if l6==0 then
call r7("Nullpointer exception when calling PlayerStats.isInGame","when calling error in PlayerStats, line 14")
else
call r7("Called PlayerStats.isInGame on invalid object.","when calling error in PlayerStats, line 14")
endif
endif
set b6=RO[l6]
set Eb=Eb-1
if b6 then
set O6=bO[i6]
set S6=tO[0]
set y6=tO[1]
set e6=nO[i6]
set Zb[Eb]="when calling getUpkeep in Economy, line 47"
set Eb=Eb+1
if xb[e6]==0 then
if e6==0 then
call r7("Nullpointer exception when calling PlayerStats.getUpkeep","when calling error in PlayerStats, line 20")
else
call r7("Called PlayerStats.getUpkeep on invalid object.","when calling error in PlayerStats, line 20")
endif
endif
set q6=YO[e6]
set Eb=Eb-1
set p6=Mcw(q6)
call MultiboardSetItemValue(MultiboardGetItem(O6,y6,S6),p6)
endif
set i6=i6+1
endloop
set Eb=Eb-1
set O6=null
endfunction
function e4 takes integer b4,integer y4 returns nothing
local integer p4
set Dc[b4]=Dc[b4]-1.
set p4=0
set y4=23
loop
exitwhen p4>y4
call MultiboardSetTitleText(bO[p4],"Income: "+I2S(R2I(Dc[b4]/60.))+":"+I2S(R2I(ModuloReal(Dc[b4],60.)/10.))+I2S(R2I(ModuloReal(ModuloReal(Dc[b4],60.),10.))))
set p4=p4+1
endloop
if Dc[b4]<=0. then
set Dc[b4]=120.0
endif
endfunction
function Kbw takes integer Abw,integer Dbw,string Hbw returns nothing
local force Jbw
set Zb[Eb]=Hbw
set Eb=Eb+1
if Nl[Abw]==0 then
if Abw==0 then
call r7("Nullpointer exception when calling CallbackPeriodic.call","when calling error in ClosureTimers, line 86")
else
call r7("Called CallbackPeriodic.call on invalid object.","when calling error in ClosureTimers, line 86")
endif
endif
if Nl[Abw]<=634 then
if Nl[Abw]<=632 then
if Nl[Abw]<=631 then
call KN(Abw,Dbw,"when calling City_closure_impl in ClosureTimers, line 86")
else
call OM(Abw,Dbw,"when calling City_closure_impl in ClosureTimers, line 86")
endif
elseif Nl[Abw]<=633 then
set Jbw=bj_FORCE_ALL_PLAYERS
if IsPlayerInForce(GetLocalPlayer(),Jbw) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,20.0,"Enjoying the map? Join the |cffe100ffofficial CoE discord channel|r! Link: |cffffff00discord.gg/V6kmxsy|r")
endif
else
call e4(Abw,Dbw)
endif
elseif Nl[Abw]<=636 then
if Nl[Abw]<=635 then
call a6(Abw,Dbw,"when calling Economy_closure_impl in ClosureTimers, line 86")
else
call H6(Abw,Dbw,"when calling Economy_closure_impl in ClosureTimers, line 86")
endif
else
call Hww(Abw,Dbw,"when calling MultiboardCityUpdate_closure_impl in ClosureTimers, line 86")
endif
set Eb=Eb-1
set Jbw=null
endfunction
function aaw takes nothing returns nothing
local integer qaw
set Eb=0
set Zb[Eb]="ClosureTimers, line 91"
set Eb=Eb+1
set qaw=Dow(GetExpiredTimer(),"when calling getData in ClosureTimers, line 94")
call Kbw(qaw,qaw,"when calling call in ClosureTimers, line 95")
set Eb=Eb-1
endfunction
function qx takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function ax takes nothing returns boolean
if not qx() then
return false
endif
return true
endfunction
function bK takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function lW takes nothing returns boolean
if GetResearched()!=1378889806 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889806,true)!=2 then
return false
endif
return true
endfunction
function bW takes nothing returns boolean
if not lW() then
return false
endif
return true
endfunction
function bZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989828,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989827,0)
endfunction
function D8 takes integer E8,string Z8 returns nothing
local unit U8
local player I8
local player P8
local player A8
set Zb[Eb]=Z8
set Eb=Eb+1
set U8=GetConstructingStructure()
if GetUnitTypeId(U8)==1747990614 then
if no[GetPlayerId(GetOwningPlayer(U8))]<3 then
set I8=GetOwningPlayer(U8)
set P8=GetOwningPlayer(U8)
set no[GetPlayerId(I8)]=no[GetPlayerId(P8)]+1
else
set A8=GetOwningPlayer(U8)
set Zb[Eb]="when calling attentionToPlayer in LimitMercenaryCamps, line 18"
set Eb=Eb+1
call DisplayTimedTextToPlayer(A8,0.,0.,10.0,Bww(A8,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(A8,0.,0.,10.0,"You cannot build more than 3 mercenary camps.")
set Eb=Eb-1
set Zb[Eb]="when calling alloc_Closure in LimitMercenaryCamps, line 19"
set Eb=Eb+1
if Kl==0 then
if Ll<32768 then
set Ll=Ll+1
set E8=Ll
set Xl[E8]=646
else
call r7("Out of memory: Could not create Closure.","when calling error in LimitMercenaryCamps, line 19")
set E8=0
endif
else
set Kl=Kl-1
set E8=Jl[Kl]
set Xl[E8]=646
endif
set Eb=Eb-1
set do[E8]=U8
set Zb[Eb]="when calling doAfter in LimitMercenaryCamps, line 19"
set Eb=Eb+1
call ryw(E8,0.01,"when calling start in ClosureTimers, line 15")
set Eb=Eb-1
endif
endif
set Eb=Eb-1
set U8=null
set I8=null
set P8=null
set A8=null
endfunction
function LC takes unit PC,string AC returns integer
local integer DC
local integer HC
local integer JC
local unit KC
set Zb[Eb]=AC
set Eb=Eb+1
set DC=0
set HC=QS-1
loop
exitwhen DC>HC
set JC=AS[DC]
set AC="when calling getCityUnit in City, line 409"
set Zb[Eb]="when calling getCityUnit in City, line 409"
set Eb=Eb+1
if Il[JC]==0 then
if JC==0 then
call r7("Nullpointer exception when calling City.getCityUnit","when calling error in City, line 168")
else
call r7("Called City.getCityUnit on invalid object.","when calling error in City, line 168")
endif
endif
set KC=LS[JC]
set Eb=Eb-1
if KC==PC then
set Eb=Eb-1
set KC=null
return DC
endif
set DC=DC+1
endloop
set Eb=Eb-1
set KC=null
return -1
endfunction
function Uww takes player mww,string Qww returns string
local integer Www
local integer Eww
local integer Zww
set Zb[Eb]=Qww
set Eb=Eb+1
set Eww=nO[GetPlayerId(mww)]
set Zb[Eb]="when calling getForceId in Messages, line 21"
set Eb=Eb+1
if xb[Eww]==0 then
if Eww==0 then
call r7("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 94")
else
call r7("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 94")
endif
endif
set Zww=dO[Eww]
set Eb=Eb-1
set Www=GetRandomInt(0,2)
if Zww==0 then
set Qww=VO[Www]
elseif Zww==1 then
set Qww=BO[Www]
elseif Zww==2 then
set Qww=NO[Www]
elseif Zww==3 then
set Qww=MO[Www]
else
set Qww="Note:"
endif
set Eb=Eb-1
return "|cff00ccff"+Qww+"|r"
endfunction
function qB takes integer bB,integer yB,string pB returns nothing
local player eB
set Zb[Eb]=pB
set Eb=Eb+1
if Io-cc[bB]>=WS then
set cc[bB]=Io
set tc[bB]=tc[bB]-IS[Sc[bB]]
set tc[bB]=tc[bB]+IS[yB]
set Sc[bB]=yB
else
set eB=GO[BS[bB]]
set Zb[Eb]="when calling noteToPlayer in City, line 244"
set Eb=Eb+1
call DisplayTimedTextToPlayer(eB,0.,0.,10.0,Uww(eB,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(eB,0.,0.,10.0,"Wait 1 turn to be able to change tax level.")
set Eb=Eb-1
endif
set Eb=Eb-1
set eB=null
endfunction
function Fow takes integer qow,string aow returns nothing
local integer now
local integer dow
local integer fow
local boolean Row
local unit Tow
local integer Yow
local integer Gow
local boolean gow
local integer how
set Zb[Eb]=aow
set Eb=Eb+1
set fow=OS
set qow=GetSpellAbilityId()
set Zb[Eb]="when calling has in Taxation, line 7"
set Eb=Eb+1
if Gb[fow]==0 then
if fow==0 then
call r7("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call r7("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set Row=i9(fow,qow)
set Eb=Eb-1
if Row then
set Tow=GetSpellTargetUnit()
set Zb[Eb]="when calling isCity in Taxation, line 8"
set Eb=Eb+1
set Yow=gl
set Gow=GetUnitTypeId(Tow)
set Zb[Eb]="when calling has in City, line 403"
set Eb=Eb+1
if Gb[Yow]==0 then
if Yow==0 then
call r7("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call r7("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set gow=i9(Yow,Gow)
set Eb=Eb-1-1
if gow then
if GetOwningPlayer(GetSpellTargetUnit())==GetOwningPlayer(GetSpellAbilityUnit()) then
set now=0
set dow=GetSpellAbilityId()
if dow==1093677642 then
set now=1
elseif dow==1093677641 then
set now=0
elseif dow==1093677640 then
set now=2
endif
set how=AS[LC(GetSpellTargetUnit(),"when calling getCityId in Taxation, line 18")]
set Zb[Eb]="when calling changeTaxLevel in Taxation, line 18"
set Eb=Eb+1
if Il[how]==0 then
if how==0 then
call r7("Nullpointer exception when calling City.changeTaxLevel","when calling error in City, line 235")
else
call r7("Called City.changeTaxLevel on invalid object.","when calling error in City, line 235")
endif
endif
call qB(how,now,"when calling changeTaxLevel in City, line 235")
set Eb=Eb-1
endif
endif
endif
set Eb=Eb-1
set Tow=null
endfunction
function GSw takes integer eSw,string qSw returns nothing
local unit aSw
local integer nSw
local player dSw
local boolean fSw
local integer RSw
local real TSw
local real YSw
set Zb[Eb]=qSw
set Eb=Eb+1
set aSw=GetTriggerUnit()
set nSw=GetUnitTypeId(aSw)
set TSw=GetUnitX(aSw)
set YSw=GetUnitY(aSw)
set dSw=GetOwningPlayer(aSw)
set eSw=QO
set Zb[Eb]="when calling has in RangeChecks, line 13"
set Eb=Eb+1
if Gb[eSw]==0 then
if eSw==0 then
call r7("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call r7("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set fSw=i9(eSw,nSw)
set Eb=Eb-1
if fSw then
set Zb[Eb]="when calling alloc_Closure in RangeChecks, line 15"
set Eb=Eb+1
if Al==0 then
if Dl<32768 then
set Dl=Dl+1
set RSw=Dl
set Hl[RSw]=687
else
call r7("Out of memory: Could not create Closure.","when calling error in RangeChecks, line 15")
set RSw=0
endif
else
set Al=Al-1
set RSw=Pl[Al]
set Hl[RSw]=687
endif
set Eb=Eb-1
set EO[RSw]=false
set ZO[RSw]=nSw
set UO[RSw]=dSw
set IO[RSw]=aSw
call m3(TSw,YSw,1500.0,RSw,"when calling forUnitsInRange in RangeChecks, line 15")
endif
set Eb=Eb-1
set aSw=null
set dSw=null
endfunction
function H0w takes integer W0w,string E0w returns nothing
local integer Z0w
local unit U0w
local player I0w
local real P0w
local real A0w
local real D0w
set Zb[Eb]=E0w
set Eb=Eb+1
if GetSpellAbilityId()==1093678154 then
set Z0w=p9("when calling new_LinkedList in MassControl, line 24")
set U0w=GetSpellAbilityUnit()
set I0w=GetOwningPlayer(U0w)
set A0w=GetSpellTargetX()
set D0w=GetSpellTargetY()
set P0w=Nyw(Lo,GetLearnedSkillLevel(),"when calling get in MassControl, line 27")/1000.
set Zb[Eb]="when calling alloc_Closure in MassControl, line 27"
set Eb=Eb+1
if Al==0 then
if Dl<32768 then
set Dl=Dl+1
set W0w=Dl
set Hl[W0w]=684
else
call r7("Out of memory: Could not create Closure.","when calling error in MassControl, line 27")
set W0w=0
endif
else
set Al=Al-1
set W0w=Pl[Al]
set Hl[W0w]=684
endif
set Eb=Eb-1
set Co[W0w]=I0w
set Vo[W0w]=U0w
set Bo[W0w]=Z0w
call m3(A0w,D0w,P0w,W0w,"when calling forUnitsInRange in MassControl, line 27")
call Tyw(Ko,GetHandleId(U0w),Z0w,"when calling put in MassControl, line 30")
endif
set Eb=Eb-1
set U0w=null
set I0w=null
endfunction
function R8 takes integer e8,string q8 returns nothing
local unit a8
local player n8
local player d8
local player f8
set Zb[Eb]=q8
set Eb=Eb+1
set a8=GetConstructingStructure()
if GetUnitTypeId(a8)==1747988808 then
if qo[GetPlayerId(GetOwningPlayer(a8))]<3 then
set n8=GetOwningPlayer(a8)
set d8=GetOwningPlayer(a8)
set qo[GetPlayerId(n8)]=qo[GetPlayerId(d8)]+1
else
set f8=GetOwningPlayer(a8)
set Zb[Eb]="when calling attentionToPlayer in LimitEncampments, line 18"
set Eb=Eb+1
call DisplayTimedTextToPlayer(f8,0.,0.,10.0,Bww(f8,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(f8,0.,0.,10.0,"You cannot build more than 3 encampments.")
set Eb=Eb-1
set Zb[Eb]="when calling alloc_Closure in LimitEncampments, line 19"
set Eb=Eb+1
if Kl==0 then
if Ll<32768 then
set Ll=Ll+1
set e8=Ll
set Xl[e8]=645
else
call r7("Out of memory: Could not create Closure.","when calling error in LimitEncampments, line 19")
set e8=0
endif
else
set Kl=Kl-1
set e8=Jl[Kl]
set Xl[e8]=645
endif
set Eb=Eb-1
set ao[e8]=a8
set Zb[Eb]="when calling doAfter in LimitEncampments, line 19"
set Eb=Eb+1
call ryw(e8,0.01,"when calling start in ClosureTimers, line 15")
set Eb=Eb-1
endif
endif
set Eb=Eb-1
set a8=null
set n8=null
set d8=null
set f8=null
endfunction
function Yww takes real nww,real dww,real fww,real Rww,real Tww returns real
set fww=GetRandomReal(fww,Rww)
return (nww+dww)/2.+aww(fww)*Pow(2.718281828,-(Pow(fww,2.)/2.*Tww))/SquareRoot(6.283185482*Tww)*((dww-nww)/2.)
endfunction
function vN takes integer qN,unit aN,string nN,integer dN,integer fN,string RN returns nothing
local real TN
local real YN
local unit GN
local player gN
local real hN
local integer FN
local integer kN
local real jN
local real xN
set Zb[Eb]=RN
set Eb=Eb+1
set Sc[qN]=0
set cc[qN]=0.
set oc[qN]=p9("when calling new_LinkedList in City, line 95")
set ic[qN]=1.0
set LS[qN]=aN
set GN=LS[qN]
set jN=GetUnitX(GN)
set xN=GetUnitY(GN)
set NS[qN]=jN
set MS[qN]=xN
set XS[qN]=nN
set VS[qN]=dN
set gN=GetOwningPlayer(LS[qN])
set BS[qN]=GetPlayerId(gN)
set XS[qN]=SubString(nN,0,24)
set CS[qN]=QS
set QS=QS+1
set rc[qN]=Yww(ES[0],ES[1],-5.0,5.0,0.15)
set hN=Yww(Nyw(ZS[fN],0,"when calling get in City, line 113")*1.,Nyw(ZS[fN],1,"when calling get in City, line 113")*1.,-5.0,5.0,0.15)
set wc[qN]=R2I(hN)
set tc[qN]=0.
set TN=2.5+GetRandomReal(2.5,5.0)
set Zb[Eb]="when calling alloc_Closure in City, line 118"
set Eb=Eb+1
if Vl==0 then
if Bl<32768 then
set Bl=Bl+1
set FN=Bl
set Nl[FN]=631
else
call r7("Out of memory: Could not create Closure.","when calling error in City, line 118")
set FN=0
endif
else
set Vl=Vl-1
set FN=Cl[Vl]
set Nl[FN]=631
endif
set Eb=Eb-1
set Oc[FN]=qN
set Zb[Eb]="when calling doPeriodically in City, line 118"
set Eb=Eb+1
set Zb[Eb]="when calling start in ClosureTimers, line 36"
set Eb=Eb+1
if Nl[FN]==0 then
if FN==0 then
call r7("Nullpointer exception when calling CallbackPeriodic.start","when calling error in ClosureTimers, line 88")
else
call r7("Called CallbackPeriodic.start on invalid object.","when calling error in ClosureTimers, line 88")
endif
endif
call U3(FN,TN,"when calling start in ClosureTimers, line 88")
set Eb=Eb-1-1
set YN=60+GetRandomReal(60,120.0)
set Zb[Eb]="when calling alloc_Closure in City, line 134"
set Eb=Eb+1
if Vl==0 then
if Bl<32768 then
set Bl=Bl+1
set kN=Bl
set Nl[kN]=632
else
call r7("Out of memory: Could not create Closure.","when calling error in City, line 134")
set kN=0
endif
else
set Vl=Vl-1
set kN=Cl[Vl]
set Nl[kN]=632
endif
set Eb=Eb-1
set lc[kN]=qN
set Zb[Eb]="when calling doPeriodically in City, line 134"
set Eb=Eb+1
set Zb[Eb]="when calling start in ClosureTimers, line 36"
set Eb=Eb+1
if Nl[kN]==0 then
if kN==0 then
call r7("Nullpointer exception when calling CallbackPeriodic.start","when calling error in ClosureTimers, line 88")
else
call r7("Called CallbackPeriodic.start on invalid object.","when calling error in ClosureTimers, line 88")
endif
endif
call U3(kN,YN,"when calling start in ClosureTimers, line 88")
set Eb=Eb-1-1-1
set GN=null
set gN=null
endfunction
function eN takes unit oN,string ON,integer lN,integer bN,string yN returns integer
local integer pN
set Zb[Eb]=yN
set Eb=Eb+1
set Zb[Eb]="when calling City in City, line 92"
set Eb=Eb+1
if Zl==0 then
if Ul<32768 then
set Ul=Ul+1
set pN=Ul
set Il[pN]=653
else
call r7("Out of memory: Could not create City.","when calling error in City, line 62")
set pN=0
endif
else
set Zl=Zl-1
set pN=El[Zl]
set Il[pN]=653
endif
set Eb=Eb-1
call vN(pN,oN,ON,lN,bN,"when calling construct_City in City, line 92")
set Eb=Eb-1
return pN
endfunction
function VL takes integer AL,string DL returns nothing
local unit HL
local integer JL
local integer KL
local boolean LL
local integer XL
local unit CL
set Zb[Eb]=DL
set Eb=Eb+1
set HL=GetConstructedStructure()
set Zb[Eb]="when calling isCity in CityBuilded, line 10"
set Eb=Eb+1
set Zb[Eb]="when calling isCity in UnitTools, line 5"
set Eb=Eb+1
set JL=gl
set KL=GetUnitTypeId(HL)
set Zb[Eb]="when calling has in City, line 403"
set Eb=Eb+1
if Gb[JL]==0 then
if JL==0 then
call r7("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call r7("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set LL=i9(JL,KL)
set Eb=Eb-1-1-1
if LL then
set CL=GetConstructedStructure()
set AL=nO[GetPlayerId(GetOwningPlayer(GetConstructedStructure()))]
set Zb[Eb]="when calling getForceId in CityBuilded, line 11"
set Eb=Eb+1
if xb[AL]==0 then
if AL==0 then
call r7("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 94")
else
call r7("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 94")
endif
endif
set XL=dO[AL]
set Eb=Eb-1
set AS[QS]=eN(CL,"New",XL,1,"when calling new_City in CityBuilded, line 11")
endif
set Eb=Eb-1
set HL=null
set CL=null
endfunction
function Vlw takes integer Dlw,string Hlw returns nothing
local unit Jlw
local player Klw
local integer Llw
local integer Xlw
local boolean Clw
set Zb[Eb]=Hlw
set Eb=Eb+1
set Jlw=GetDyingUnit()
set Dlw=GetPlayerId(GetOwningPlayer(Jlw))
set Klw=GO[Dlw]
if GetPlayerSlotState(Klw)==PLAYER_SLOT_STATE_PLAYING then
set Clw=GetPlayerController(Klw)==MAP_CONTROL_USER
else
set Clw=false
endif
if Clw and(not IsUnitType(Jlw,UNIT_TYPE_STRUCTURE)) then
set Llw=nO[Dlw]
set Xlw=GetUnitLevel(Jlw)
set Zb[Eb]="when calling changeUpkeep in Upkeep, line 19"
set Eb=Eb+1
if xb[Llw]==0 then
if Llw==0 then
call r7("Nullpointer exception when calling PlayerStats.changeUpkeep","when calling error in PlayerStats, line 23")
else
call r7("Called PlayerStats.changeUpkeep on invalid object.","when calling error in PlayerStats, line 23")
endif
endif
set YO[Llw]=YO[Llw]+Xlw
set Eb=Eb-1
endif
set Eb=Eb-1
set Jlw=null
set Klw=null
endfunction
function W8 takes integer x8 returns nothing
local unit v8=GetConstructingStructure()
local player m8
local player Q8
if GetUnitTypeId(v8)==1747990614 then
set m8=GetOwningPlayer(v8)
set Q8=GetOwningPlayer(v8)
set no[GetPlayerId(m8)]=no[GetPlayerId(Q8)]-1
endif
set v8=null
set m8=null
set Q8=null
endfunction
function Spw takes integer spw,integer tpw,string ipw returns nothing
set Zb[Eb]=ipw
set Eb=Eb+1
if xb[spw]==0 then
if spw==0 then
call r7("Nullpointer exception when calling PlayerStats.setSelectedCityId","when calling error in PlayerStats, line 88")
else
call r7("Called PlayerStats.setSelectedCityId on invalid object.","when calling error in PlayerStats, line 88")
endif
endif
set Zb[Eb]="when calling setSelectedCityId in PlayerStats, line 88"
set Eb=Eb+1
if tpw>=0 and tpw<QS then
set TO[spw]=tpw
set Zb[Eb]="when calling refreshMultiboardCity in PlayerStats, line 91"
set Eb=Eb+1
if xb[spw]==0 then
if spw==0 then
call r7("Nullpointer exception when calling PlayerStats.refreshMultiboardCity","when calling error in PlayerStats, line 43")
else
call r7("Called PlayerStats.refreshMultiboardCity on invalid object.","when calling error in PlayerStats, line 43")
endif
endif
call jiw(spw,"when calling refreshMultiboardCity in PlayerStats, line 43")
set Eb=Eb-1
endif
set Eb=Eb-1-1
endfunction
function fX takes integer eX,string qX returns nothing
local unit aX
local integer nX
local boolean dX
set Zb[Eb]=qX
set Eb=Eb+1
set aX=GetTriggerUnit()
set Zb[Eb]="when calling isCity in CityManage, line 10"
set Eb=Eb+1
set Zb[Eb]="when calling isCity in UnitTools, line 5"
set Eb=Eb+1
set nX=gl
set eX=GetUnitTypeId(aX)
set Zb[Eb]="when calling has in City, line 403"
set Eb=Eb+1
if Gb[nX]==0 then
if nX==0 then
call r7("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call r7("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set dX=i9(nX,eX)
set Eb=Eb-1-1-1
if dX then
call Spw(nO[GetPlayerId(GetTriggerPlayer())],LC(GetTriggerUnit(),"when calling getCityId in CityManage, line 11"),"when calling setSelectedCityId in CityManage, line 11")
endif
set Eb=Eb-1
set aX=null
endfunction
function R3 takes player n3,integer d3,string f3 returns nothing
set Zb[Eb]=f3
set Eb=Eb+1
set xc[vc]=d3
set vc=vc+1
call GroupEnumUnitsOfPlayer(jc,n3,mc)
set Zb[Eb]="when calling popCallback in ClosureForGroups, line 57"
set Eb=Eb+1
call GroupClear(jc)
set vc=vc-1
call Ebw(xc[vc],"when calling ForGroupCallback in ClosureForGroups, line 21")
set Eb=Eb-1-1
endfunction
function f1 takes playercolor c1 returns integer
local playercolor b1=c1
local integer y1=0
local integer p1=0
local integer e1=bj_MAX_PLAYER_SLOTS-1
local integer o1
local integer O1
local integer l1
local playercolor q1
local integer a1
local integer n1
local integer d1
loop
exitwhen p1>e1
if xO[p1]==b1 then
set y1=p1
exitwhen true
endif
set p1=p1+1
endloop
if y1<=23 then
set q1=c1
set a1=0
set n1=0
set d1=bj_MAX_PLAYER_SLOTS-1
loop
exitwhen n1>d1
if xO[n1]==q1 then
set a1=n1
exitwhen true
endif
set n1=n1+1
endloop
set o1=Zc[a1]
set O1=Uc[a1]
set l1=Ic[a1]
else
set o1=0
set O1=0
set l1=0
endif
set Ub=o1
set Ib=O1
set Pb=l1
set b1=null
set q1=null
return Ub
endfunction
function S1 takes player M3 returns string
local integer s1=f1(GetPlayerColor(M3))
local integer t1=Ib
local integer i1=Pb
local integer w1=s1/16
local integer u1=t1/16
local integer r1=i1/16
return "|cff"+Pc[w1]+Pc[s1-w1*16]+Pc[u1]+Pc[t1-u1*16]+Pc[r1]+Pc[i1-r1*16]+GetPlayerName(M3)+"|r"
endfunction
function htw takes integer Rtw,string Ttw returns nothing
local player Ytw
local force Gtw
local integer gtw
set Zb[Eb]=Ttw
set Eb=Eb+1
set Ttw=S1(GetTriggerPlayer())+" has left the game!"
set Gtw=bj_FORCE_ALL_PLAYERS
if IsPlayerInForce(GetLocalPlayer(),Gtw) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,5.0,Ttw)
endif
set gtw=nO[GetPlayerId(GetTriggerPlayer())]
set Zb[Eb]="when calling setInGame in OnPlayerLeave, line 8"
set Eb=Eb+1
if xb[gtw]==0 then
if gtw==0 then
call r7("Nullpointer exception when calling PlayerStats.setInGame","when calling error in PlayerStats, line 17")
else
call r7("Called PlayerStats.setInGame on invalid object.","when calling error in PlayerStats, line 17")
endif
endif
set RO[gtw]=false
set Eb=Eb-1
set Ytw=GetTriggerPlayer()
set Zb[Eb]="when calling alloc_Closure in OnPlayerLeave, line 9"
set Eb=Eb+1
if Al==0 then
if Dl<32768 then
set Dl=Dl+1
set Rtw=Dl
set Hl[Rtw]=685
else
call r7("Out of memory: Could not create Closure.","when calling error in OnPlayerLeave, line 9")
set Rtw=0
endif
else
set Al=Al-1
set Rtw=Pl[Al]
set Hl[Rtw]=685
endif
set Eb=Eb-1
call R3(Ytw,Rtw,"when calling forUnitsOfPlayer in OnPlayerLeave, line 9")
set Eb=Eb-1
set Ytw=null
set Gtw=null
endfunction
function EC takes integer WC returns integer
if WC==1747988529 then
return 1
elseif WC==1747988530 then
return 2
elseif WC==1747988531 then
return 3
elseif WC==1747990326 then
return 1
elseif WC==1747990327 then
return 2
elseif WC==1747990328 then
return 3
elseif WC==1747990084 then
return 1
elseif WC==1747990087 then
return 2
elseif WC==1747990085 then
return 3
elseif WC==1747989590 then
return 1
elseif WC==1747989591 then
return 2
elseif WC==1747989592 then
return 3
else
return 1
endif
endfunction
function xV takes integer YV,string GV returns nothing
local integer gV
local integer hV
local integer FV
local integer kV
local integer jV
set Zb[Eb]=GV
set Eb=Eb+1
set gV=0
set hV=23
loop
exitwhen gV>hV
set FV=nO[gV]
set GV="when calling getSelectedCityId in City, line 226"
set Zb[Eb]="when calling getSelectedCityId in City, line 226"
set Eb=Eb+1
if xb[FV]==0 then
if FV==0 then
call r7("Nullpointer exception when calling PlayerStats.getSelectedCityId","when calling error in PlayerStats, line 84")
else
call r7("Called PlayerStats.getSelectedCityId on invalid object.","when calling error in PlayerStats, line 84")
endif
endif
set kV=TO[FV]
set Eb=Eb-1
if kV==CS[YV]then
set jV=nO[gV]
set Zb[Eb]="when calling refreshMultiboardCity in City, line 227"
set Eb=Eb+1
if xb[jV]==0 then
if jV==0 then
call r7("Nullpointer exception when calling PlayerStats.refreshMultiboardCity","when calling error in PlayerStats, line 43")
else
call r7("Called PlayerStats.refreshMultiboardCity on invalid object.","when calling error in PlayerStats, line 43")
endif
endif
call jiw(jV,"when calling refreshMultiboardCity in PlayerStats, line 43")
set Eb=Eb-1
endif
set gV=gV+1
endloop
set Eb=Eb-1
endfunction
function HV takes integer UV,integer IV,string PV returns nothing
local integer AV
local integer DV
set Zb[Eb]=PV
set Eb=Eb+1
call SetUnitOwner(LS[UV],GO[IV],true)
set BS[UV]=IV
if IV>=0 and IV<24 then
set AV=nO[IV]
set Zb[Eb]="when calling getForceId in City, line 184"
set Eb=Eb+1
if xb[AV]==0 then
if AV==0 then
call r7("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 94")
else
call r7("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 94")
endif
endif
set DV=dO[AV]
set Eb=Eb-1
set VS[UV]=DV
endif
set Zb[Eb]="when calling refreshMultiboardIfPossible in City, line 186"
set Eb=Eb+1
if Il[UV]==0 then
if UV==0 then
call r7("Nullpointer exception when calling City.refreshMultiboardIfPossible","when calling error in City, line 224")
else
call r7("Called City.refreshMultiboardIfPossible on invalid object.","when calling error in City, line 224")
endif
endif
call xV(UV,"when calling refreshMultiboardIfPossible in City, line 224")
set Eb=Eb-1-1
endfunction
function IC takes integer ZC,integer UC returns integer
if ZC==1 then
if UC==0 then
return 1747988529
elseif UC==1 then
return 1747990326
elseif UC==2 then
return 1747990084
elseif UC==3 then
return 1747989590
else
return 1747988529
endif
elseif ZC==2 then
if UC==0 then
return 1747988530
elseif UC==1 then
return 1747990327
elseif UC==2 then
return 1747990087
elseif UC==3 then
return 1747989591
else
return 1747988530
endif
elseif ZC==3 then
if UC==0 then
return 1747988531
elseif UC==1 then
return 1747990328
elseif UC==2 then
return 1747990085
elseif UC==3 then
return 1747989592
else
return 1747988531
endif
elseif UC==0 then
return 1747988529
elseif UC==1 then
return 1747990326
elseif UC==2 then
return 1747990084
elseif UC==3 then
return 1747989590
else
return 1747988529
endif
endfunction
function ZV takes integer vV,integer mV,string QV returns nothing
local integer WV
local boolean EV
set Zb[Eb]=QV
set Eb=Eb+1
set WV=gl
set Zb[Eb]="when calling has in City, line 175"
set Eb=Eb+1
if Gb[WV]==0 then
if WV==0 then
call r7("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call r7("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set EV=i9(WV,mV)
set Eb=Eb-1
if not EV then
set Eb=Eb-1
return
endif
set LS[vV]=ReplaceUnitBJ(LS[vV],mV,bj_UNIT_STATE_METHOD_RELATIVE)
set Eb=Eb-1
endfunction
function lB takes integer VV,player BV,string NV returns nothing
local integer MV
local integer wB
local unit uB
local unit rB
local real sB
local integer tB
local integer iB
local integer SB
local integer cB
local boolean oB
local integer OB
set Zb[Eb]=NV
set Eb=Eb+1
set uB=LS[VV]
call SetUnitState(uB,UNIT_STATE_LIFE,GetUnitState(uB,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,60.0)*0.01)
set rB=LS[VV]
call SetUnitState(rB,UNIT_STATE_MANA,GetUnitState(rB,UNIT_STATE_MAX_MANA)*RMaxBJ(0.,30.0)*0.01)
set Zb[Eb]="when calling addModifier in City, line 207"
set Eb=Eb+1
if Il[VV]==0 then
if VV==0 then
call r7("Nullpointer exception when calling City.addModifier","when calling error in City, line 335")
else
call r7("Called City.addModifier on invalid object.","when calling error in City, line 335")
endif
endif
call TV(VV,0,"when calling addModifier in City, line 335")
set Eb=Eb-1
set sB=FS[Fyw(YS,6,"when calling get in City, line 208")]
if GetRandomReal(0.0,1.0)<=sB then
set Zb[Eb]="when calling addModifier in City, line 209"
set Eb=Eb+1
if Il[VV]==0 then
if VV==0 then
call r7("Nullpointer exception when calling City.addModifier","when calling error in City, line 335")
else
call r7("Called City.addModifier on invalid object.","when calling error in City, line 335")
endif
endif
call TV(VV,6,"when calling addModifier in City, line 335")
set Eb=Eb-1
endif
set MV=VS[VV]
set wB=GetPlayerId(BV)
if wB>=0 and wB<24 then
set tB=nO[wB]
set Zb[Eb]="when calling getForceId in City, line 214"
set Eb=Eb+1
if xb[tB]==0 then
if tB==0 then
call r7("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 94")
else
call r7("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 94")
endif
endif
set iB=dO[tB]
set Eb=Eb-1
set MV=iB
else
set Zb[Eb]="when calling changeOwner in City, line 216"
set Eb=Eb+1
if Il[VV]==0 then
if VV==0 then
call r7("Nullpointer exception when calling City.changeOwner","when calling error in City, line 179")
else
call r7("Called City.changeOwner on invalid object.","when calling error in City, line 179")
endif
endif
call HV(VV,wB,"when calling changeOwner in City, line 179")
set Eb=Eb-1
endif
set SB=Gl
set cB=GetUnitTypeId(LS[VV])
set Zb[Eb]="when calling has in City, line 218"
set Eb=Eb+1
if Gb[SB]==0 then
if SB==0 then
call r7("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call r7("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set oB=i9(SB,cB)
set Eb=Eb-1
if oB then
set OB=IC(EC(GetUnitTypeId(LS[VV])),MV)
set Zb[Eb]="when calling replaceCity in City, line 219"
set Eb=Eb+1
if Il[VV]==0 then
if VV==0 then
call r7("Nullpointer exception when calling City.replaceCity","when calling error in City, line 174")
else
call r7("Called City.replaceCity on invalid object.","when calling error in City, line 174")
endif
endif
call ZV(VV,OB,"when calling replaceCity in City, line 174")
set Eb=Eb-1
call UnitAddAbility(LS[VV],1093677634)
endif
set Zb[Eb]="when calling changeOwner in City, line 222"
set Eb=Eb+1
if Il[VV]==0 then
if VV==0 then
call r7("Nullpointer exception when calling City.changeOwner","when calling error in City, line 179")
else
call r7("Called City.changeOwner on invalid object.","when calling error in City, line 179")
endif
endif
call HV(VV,wB,"when calling changeOwner in City, line 179")
set Eb=Eb-1-1
set uB=null
set rB=null
endfunction
function oww takes string www,force uww,string rww returns nothing
local integer sww
local integer tww
local player iww
local player Sww
local force cww
set Zb[Eb]=rww
set Eb=Eb+1
set sww=0
set tww=23
loop
exitwhen sww>tww
set Sww=GO[sww]
set cww=CreateForce()
call ForceAddPlayer(cww,Sww)
if cww==uww then
set iww=GO[sww]
call DisplayTimedTextToPlayer(iww,0.,0.,10.0,Bww(iww,"when calling getAttentionStringForPlayer in Messages, line 116"))
call DisplayTimedTextToPlayer(iww,0.,0.,10.0,www)
endif
set sww=sww+1
endloop
set Eb=Eb-1
set iww=null
set Sww=null
set cww=null
endfunction
function iC takes integer AX,string DX returns nothing
local unit HX
local integer JX
local integer KX
local integer LX
local boolean XX
local unit CX
local integer VX
local integer BX
local player NX
local boolean MX
local boolean wC
local real uC
local real rC
local real sC
local real tC
set Zb[Eb]=DX
set Eb=Eb+1
set HX=GetTriggerUnit()
set Zb[Eb]="when calling isCity in CityManage, line 36"
set Eb=Eb+1
set Zb[Eb]="when calling isCity in UnitTools, line 5"
set Eb=Eb+1
set KX=gl
set LX=GetUnitTypeId(HX)
set Zb[Eb]="when calling has in City, line 403"
set Eb=Eb+1
if Gb[KX]==0 then
if KX==0 then
call r7("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call r7("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set XX=i9(KX,LX)
set Eb=Eb-1-1-1
if XX then
if GetUnitStatePercent(HX,UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)<=50.0 then
set wC=GetOwningPlayer(HX)!=GetOwningPlayer(GetAttacker())
else
set wC=false
endif
if wC then
set uC=GetUnitX(HX)
set rC=GetUnitY(HX)
set CX=GetAttacker()
set sC=uC-GetUnitX(CX)
set tC=rC-GetUnitY(CX)
if SquareRoot(sC*sC+tC*tC)>300.0 then
call SetUnitState(HX,UNIT_STATE_LIFE,GetUnitState(HX,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,50.0)*0.01)
else
set Zb[Eb]="when calling getCityId in CityManage, line 41"
set Eb=Eb+1
set VX=LC(HX,"when calling getCityId in UnitTools, line 9")
set Eb=Eb-1
set BX=AS[VX]
set NX=GetOwningPlayer(GetAttacker())
set Zb[Eb]="when calling capture in CityManage, line 42"
set Eb=Eb+1
if Il[BX]==0 then
if BX==0 then
call r7("Nullpointer exception when calling City.capture","when calling error in City, line 203")
else
call r7("Called City.capture on invalid object.","when calling error in City, line 203")
endif
endif
call lB(BX,NX,"when calling capture in City, line 203")
set Eb=Eb-1
set JX=GetUnitTypeId(HX)
set AX=Gl
set Zb[Eb]="when calling has in CityManage, line 44"
set Eb=Eb+1
if Gb[AX]==0 then
if AX==0 then
call r7("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call r7("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set MX=i9(AX,JX)
set Eb=Eb-1
if MX then
call oww(S1(GetOwningPlayer(GetAttacker()))+" has just captured "+S1(GetOwningPlayer(GetTriggerUnit()))+" Capitol!",bj_FORCE_ALL_PLAYERS,"when calling attentionToForce in CityManage, line 45")
endif
endif
elseif GetUnitStatePercent(HX,UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)<=50.0 then
call SetUnitState(HX,UNIT_STATE_LIFE,GetUnitState(HX,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,50.0)*0.01)
endif
endif
set Eb=Eb-1
set HX=null
set CX=null
set NX=null
endfunction
function p8 takes integer O8 returns nothing
local unit l8=GetConstructingStructure()
local player b8
local player y8
if GetUnitTypeId(l8)==1747988808 then
set b8=GetOwningPlayer(l8)
set y8=GetOwningPlayer(l8)
set qo[GetPlayerId(b8)]=qo[GetPlayerId(y8)]-1
endif
set l8=null
set b8=null
set y8=null
endfunction
function Mww takes string Nww returns nothing
if (not Eo)and(not Zo) then
return
endif
call DisplayTimedTextToPlayer(GO[0],0.,0.,60.,Nww)
endfunction
function yOw takes integer SOw,string cOw returns unit
local integer oOw
local fogstate OOw
local integer lOw
local unit bOw
set Zb[Eb]=cOw
set Eb=Eb+1
set oOw=pl
set OOw=ConvertFogState(SOw)
set Zb[Eb]="when calling saveFogState in TypeCasting, line 46"
set Eb=Eb+1
if Ob[oOw]==0 then
if oOw==0 then
call r7("Nullpointer exception when calling Table.saveFogState","when calling error in Table, line 168")
else
call r7("Called Table.saveFogState on invalid object.","when calling error in Table, line 168")
endif
endif
call SaveFogStateHandle(Ol,oOw,0,OOw)
set Eb=Eb-1
set lOw=pl
set Zb[Eb]="when calling loadUnit in TypeCasting, line 47"
set Eb=Eb+1
if Ob[lOw]==0 then
if lOw==0 then
call r7("Nullpointer exception when calling Table.loadUnit","when calling error in Table, line 75")
else
call r7("Called Table.loadUnit on invalid object.","when calling error in Table, line 75")
endif
endif
set bOw=LoadUnitHandle(Ol,lOw,0)
set Eb=Eb-1-1
set Kf=bOw
set OOw=null
set bOw=null
return Kf
endfunction
function pww takes integer M0w,string www returns nothing
local integer uww
local real rww
local real sww
local integer tww
local unit iww
local integer Sww
local integer cww
local boolean oww_2
local integer Oww
local integer lww
local integer bww
local integer yww_2
set Zb[Eb]=www
set Eb=Eb+1
set Sww=Xo
set cww=GetUnitTypeId(GetOrderedUnit())
set Zb[Eb]="when calling has in MassControl, line 33"
set Eb=Eb+1
if Gb[Sww]==0 then
if Sww==0 then
call r7("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call r7("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set oww_2=i9(Sww,cww)
set Eb=Eb-1
if oww_2 then
if ayw(Ko,GetHandleId(GetOrderedUnit()),"when calling has in MassControl, line 34") then
set Oww=Fyw(Ko,GetHandleId(GetOrderedUnit()),"when calling get in MassControl, line 35")
set Zb[Eb]="when calling size in MassControl, line 35"
set Eb=Eb+1
if Gb[Oww]==0 then
if Oww==0 then
call r7("Nullpointer exception when calling LinkedList.size","when calling error in LinkedList, line 135")
else
call r7("Called LinkedList.size on invalid object.","when calling error in LinkedList, line 135")
endif
endif
set lww=jo[Oww]
set Eb=Eb-1
call Mww(I2S(lww))
set M0w=Fyw(Ko,GetHandleId(GetOrderedUnit()),"when calling get in MassControl, line 36")
set uww=GetIssuedOrderId()
set rww=GetOrderPointX()
set sww=GetOrderPointY()
set Zb[Eb]="when calling iterator in MassControl, line 39"
set Eb=Eb+1
set bww=u9(M0w,"when calling new_LLIterator in LinkedList, line 165")
set Eb=Eb-1
set tww=bww
loop
exitwhen Yo[go[tww]]==Go[tww]
set go[tww]=Yo[go[tww]]
set iww=yOw(Ro[go[tww]],"when calling unitFromIndex in MassControl, line 39")
set Zb[Eb]="when calling alloc_Closure in MassControl, line 40"
set Eb=Eb+1
if Kl==0 then
if Ll<32768 then
set Ll=Ll+1
set yww_2=Ll
set Xl[yww_2]=647
else
call r7("Out of memory: Could not create Closure.","when calling error in MassControl, line 40")
set yww_2=0
endif
else
set Kl=Kl-1
set yww_2=Jl[Kl]
set Xl[yww_2]=647
endif
set Eb=Eb-1
set No[yww_2]=iww
set Mo[yww_2]=uww
set wO[yww_2]=rww
set uO[yww_2]=sww
set Zb[Eb]="when calling doAfter in MassControl, line 40"
set Eb=Eb+1
call ryw(yww_2,0.01,"when calling start in ClosureTimers, line 15")
set Eb=Eb-1
call Mww(" issued = "+GetUnitName(iww))
endloop
set Zb[Eb]="when calling close in MassControl, line 39"
set Eb=Eb+1
if Fo[tww]then
call Uyw(tww,"when calling LLIterator in LinkedList, line 450")
endif
set Eb=Eb-1
call vyw(Ko,GetHandleId(GetOrderedUnit()),"when calling remove in MassControl, line 44")
endif
endif
set Eb=Eb-1
set iww=null
endfunction
function y0w takes integer t0w returns nothing
local integer i0w
local integer S0w
local player c0w
local string o0w
local force O0w
local force l0w
local boolean b0w
if (not vo[GetPlayerId(GetTriggerPlayer())])and(not Wo) then
set i0w=0
set t0w=0
set S0w=23
loop
exitwhen t0w>S0w
set c0w=GO[t0w]
if GetPlayerSlotState(c0w)==PLAYER_SLOT_STATE_PLAYING then
set b0w=GetPlayerController(c0w)==MAP_CONTROL_USER
else
set b0w=false
endif
if b0w then
set i0w=i0w+1
endif
set t0w=t0w+1
endloop
set mo=i0w
set vo[GetPlayerId(GetTriggerPlayer())]=true
set Qo=Qo+1
set o0w="|cffff0000"+I2S(Qo)+"|r out of |cffff0000"+I2S(R2I((mo+1)*1./2))+"|r voted to skip the tutorial!"
set O0w=bj_FORCE_ALL_PLAYERS
if IsPlayerInForce(GetLocalPlayer(),O0w) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,5.0,o0w)
endif
if Qo>=R2I((mo+1)*1./2) then
set Wo=true
set l0w=bj_FORCE_ALL_PLAYERS
if IsPlayerInForce(GetLocalPlayer(),l0w) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,5.0,"|cffff0000Tutorial will shut down soon...|r")
endif
endif
endif
set c0w=null
set O0w=null
set l0w=null
endfunction
function FOw takes integer ROw,string TOw returns rect
local integer YOw
local fogstate GOw
local integer gOw
local rect hOw
set Zb[Eb]=TOw
set Eb=Eb+1
set YOw=pl
set GOw=ConvertFogState(ROw)
set Zb[Eb]="when calling saveFogState in TypeCasting, line 130"
set Eb=Eb+1
if Ob[YOw]==0 then
if YOw==0 then
call r7("Nullpointer exception when calling Table.saveFogState","when calling error in Table, line 168")
else
call r7("Called Table.saveFogState on invalid object.","when calling error in Table, line 168")
endif
endif
call SaveFogStateHandle(Ol,YOw,0,GOw)
set Eb=Eb-1
set gOw=pl
set Zb[Eb]="when calling loadRect in TypeCasting, line 131"
set Eb=Eb+1
if Ob[gOw]==0 then
if gOw==0 then
call r7("Nullpointer exception when calling Table.loadRect","when calling error in Table, line 147")
else
call r7("Called Table.loadRect on invalid object.","when calling error in Table, line 147")
endif
endif
set hOw=LoadRectHandle(Ol,gOw,0)
set Eb=Eb-1-1
set Xf=hOw
set GOw=null
set hOw=null
return Xf
endfunction
function ucw takes rect CSw,real VSw,real BSw returns boolean
local boolean NSw
local boolean MSw
local boolean wcw
if VSw>GetRectMinX(CSw) then
set NSw=VSw<GetRectMaxX(CSw)
else
set NSw=false
endif
if NSw then
set MSw=BSw>GetRectMinY(CSw)
else
set MSw=false
endif
if MSw then
set wcw=BSw<GetRectMaxY(CSw)
else
set wcw=false
endif
return wcw
endfunction
function ytw takes integer stw,string ttw returns nothing
local unit itw
local real Stw
local real ctw
local integer otw
local integer Otw
local integer ltw
local player btw
set Zb[Eb]=ttw
set Eb=Eb+1
set itw=GetTriggerUnit()
if GetUnitTypeId(itw)==1747988569 then
set Stw=GetUnitX(itw)
set ctw=GetUnitY(itw)
set otw=Fl
set Zb[Eb]="when calling iterator in NoShipsNearRivers, line 11"
set Eb=Eb+1
set Otw=u9(otw,"when calling new_LLIterator in LinkedList, line 165")
set Eb=Eb-1
set stw=Otw
loop
exitwhen Yo[go[stw]]==Go[stw]
set go[stw]=Yo[go[stw]]
if ucw(FOw(Ro[go[stw]],"when calling rectFromIndex in NoShipsNearRivers, line 11"),Stw,ctw) then
set Zb[Eb]="when calling alloc_Closure in NoShipsNearRivers, line 14"
set Eb=Eb+1
if Kl==0 then
if Ll<32768 then
set Ll=Ll+1
set ltw=Ll
set Xl[ltw]=649
else
call r7("Out of memory: Could not create Closure.","when calling error in NoShipsNearRivers, line 14")
set ltw=0
endif
else
set Kl=Kl-1
set ltw=Jl[Kl]
set Xl[ltw]=649
endif
set Eb=Eb-1
set yO[ltw]=itw
set Zb[Eb]="when calling doAfter in NoShipsNearRivers, line 14"
set Eb=Eb+1
call ryw(ltw,0.01,"when calling start in ClosureTimers, line 15")
set Eb=Eb-1
set btw=GetOwningPlayer(itw)
set ttw="when calling attentionToPlayer in NoShipsNearRivers, line 16"
set Zb[Eb]="when calling attentionToPlayer in NoShipsNearRivers, line 16"
set Eb=Eb+1
call DisplayTimedTextToPlayer(btw,0.,0.,10.0,Bww(btw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(btw,0.,0.,10.0,"You cannot build shipyards near rivers")
set Eb=Eb-1
endif
endloop
set Zb[Eb]="when calling close in NoShipsNearRivers, line 11"
set Eb=Eb+1
if Fo[stw]then
call Uyw(stw,"when calling LLIterator in LinkedList, line 450")
endif
set Eb=Eb-1
endif
set Eb=Eb-1
set itw=null
set btw=null
endfunction
function gbw takes integer Ybw,string Gbw returns nothing
set Zb[Eb]=Gbw
set Eb=Eb+1
if vl[Ybw]==0 then
if Ybw==0 then
call r7("Nullpointer exception when calling EventListener.onEvent","when calling error in ClosureEvents, line 108")
else
call r7("Called EventListener.onEvent on invalid object.","when calling error in ClosureEvents, line 108")
endif
endif
if vl[Ybw]<=669 then
if vl[Ybw]<=665 then
if vl[Ybw]<=663 then
if vl[Ybw]<=662 then
call VL(Ybw,"when calling CityBuilded_closure_impl in ClosureEvents, line 108")
else
call fX(Ybw,"when calling CityManage_closure_impl in ClosureEvents, line 108")
endif
elseif vl[Ybw]<=664 then
call iC(Ybw,"when calling CityManage_closure_impl in ClosureEvents, line 108")
else
call p8(Ybw)
endif
elseif vl[Ybw]<=667 then
if vl[Ybw]<=666 then
call R8(Ybw,"when calling LimitEncampments_closure_impl in ClosureEvents, line 108")
else
call W8(Ybw)
endif
elseif vl[Ybw]<=668 then
call D8(Ybw,"when calling LimitMercenaryCamps_closure_impl in ClosureEvents, line 108")
else
call y0w(Ybw)
endif
elseif vl[Ybw]<=673 then
if vl[Ybw]<=671 then
if vl[Ybw]<=670 then
call H0w(Ybw,"when calling MassControl_closure_impl in ClosureEvents, line 108")
else
call pww(Ybw,"when calling MassControl_closure_impl in ClosureEvents, line 108")
endif
elseif vl[Ybw]<=672 then
call ytw(Ybw,"when calling NoShipsNearRivers_closure_impl in ClosureEvents, line 108")
else
call htw(Ybw,"when calling OnPlayerLeave_closure_impl in ClosureEvents, line 108")
endif
elseif vl[Ybw]<=675 then
if vl[Ybw]<=674 then
call GSw(Ybw,"when calling RangeChecks_closure_impl in ClosureEvents, line 108")
else
call Fow(Ybw,"when calling Taxation_closure_impl in ClosureEvents, line 108")
endif
else
call Vlw(Ybw,"when calling Upkeep_closure_impl in ClosureEvents, line 108")
endif
set Eb=Eb-1
endfunction
function VM takes string AM returns nothing
local unit DM
local integer HM
local integer JM
local integer KM
local eventid LM
local integer XM
local boolean CM
set Zb[Eb]=AM
set Eb=Eb+1
set DM=GetTriggerUnit()
set LM=GetTriggerEventId()
set Zb[Eb]="when calling toIntId in ClosureEvents, line 169"
set Eb=Eb+1
set XM=qc[GetHandleId(LM)]
if XM==0 then
set XM=TM(LM,"when calling registerEventId in ClosureEvents, line 228")
endif
set Eb=Eb-1
set HM=XM
if DM!=null then
set CM=GetUnitUserData(DM)>0
else
set CM=false
endif
if CM then
if Rc[GetUnitUserData(DM)]!=0 then
set JM=Rc[GetUnitUserData(DM)]
loop
exitwhen JM==0
if Tc[JM]==HM then
call gbw(JM,"when calling onEvent in ClosureEvents, line 176")
endif
set JM=Yc[JM]
endloop
endif
endif
if fc[HM]!=0 then
set KM=fc[HM]
loop
exitwhen KM==0
call gbw(KM,"when calling onEvent in ClosureEvents, line 182")
set KM=Yc[KM]
endloop
endif
set Eb=Eb-1
set DM=null
set LM=null
endfunction
function baw takes nothing returns nothing
set Eb=0
set Zb[Eb]="ClosureEvents, line 287"
set Eb=Eb+1
call VM("when calling generalEventCallback in ClosureEvents, line 287")
set Eb=Eb-1
endfunction
function c7 takes nothing returns boolean
set bo=InitHashtable()
set yo=InitHashtable()
return true
endfunction
function cA takes nothing returns nothing
local integer wA=1
local integer uA=1751277938
local player rA=GetOwningPlayer(GetConstructedStructure())
local rect SA=bj_mapInitialPlayableArea
local location iA=Location(GetRectCenterX(SA),GetRectCenterY(SA))
local location sA=Location(GetLocationX(iA)+100000000.00,GetLocationY(iA)+1000000000.00)
local real tA=bj_UNIT_FACING
call GroupClear(bj_lastCreatedGroup)
loop
set wA=wA-1
exitwhen wA<0
call CreateUnitAtLocSaveLast(rA,uA,sA,tA)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
call ShowUnit(bj_lastCreatedUnit,false)
set q[GetPlayerId(GetOwningPlayer(GetConstructedStructure()))+1]=true
set rA=null
set sA=null
set iA=null
set SA=null
endfunction
function SH takes nothing returns boolean
if GetUnitTypeId(GetConstructedStructure())!=1747990351 then
return false
endif
return true
endfunction
function cH takes nothing returns boolean
if not SH() then
return false
endif
return true
endfunction
function SP takes nothing returns boolean
if GetResearched()!=1378890054 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890054,true)!=2 then
return false
endif
return true
endfunction
function cP takes nothing returns boolean
if not SP() then
return false
endif
return true
endfunction
function SY takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989045 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function cY takes nothing returns boolean
if not SY() then
return false
endif
return true
endfunction
function CV takes integer JV,integer KV,string LV returns nothing
local integer XV
set Zb[Eb]=LV
set Eb=Eb+1
set XV=VS[JV]
if XV==0 then
set Zb[Eb]="when calling replaceCity in City, line 191"
set Eb=Eb+1
if Il[JV]==0 then
if JV==0 then
call r7("Nullpointer exception when calling City.replaceCity","when calling error in City, line 174")
else
call r7("Called City.replaceCity on invalid object.","when calling error in City, line 174")
endif
endif
call ZV(JV,1747988529,"when calling replaceCity in City, line 174")
set Eb=Eb-1
elseif XV==3 then
set Zb[Eb]="when calling replaceCity in City, line 193"
set Eb=Eb+1
if Il[JV]==0 then
if JV==0 then
call r7("Nullpointer exception when calling City.replaceCity","when calling error in City, line 174")
else
call r7("Called City.replaceCity on invalid object.","when calling error in City, line 174")
endif
endif
call ZV(JV,1747989590,"when calling replaceCity in City, line 174")
set Eb=Eb-1
elseif XV==1 then
set Zb[Eb]="when calling replaceCity in City, line 195"
set Eb=Eb+1
if Il[JV]==0 then
if JV==0 then
call r7("Nullpointer exception when calling City.replaceCity","when calling error in City, line 174")
else
call r7("Called City.replaceCity on invalid object.","when calling error in City, line 174")
endif
endif
call ZV(JV,1747990326,"when calling replaceCity in City, line 174")
set Eb=Eb-1
elseif XV==2 then
set Zb[Eb]="when calling replaceCity in City, line 197"
set Eb=Eb+1
if Il[JV]==0 then
if JV==0 then
call r7("Nullpointer exception when calling City.replaceCity","when calling error in City, line 174")
else
call r7("Called City.replaceCity on invalid object.","when calling error in City, line 174")
endif
endif
call ZV(JV,1747990084,"when calling replaceCity in City, line 174")
set Eb=Eb-1
endif
set Zb[Eb]="when calling changeOwner in City, line 198"
set Eb=Eb+1
if Il[JV]==0 then
if JV==0 then
call r7("Nullpointer exception when calling City.changeOwner","when calling error in City, line 179")
else
call r7("Called City.changeOwner on invalid object.","when calling error in City, line 179")
endif
endif
call HV(JV,KV,"when calling changeOwner in City, line 179")
set Eb=Eb-1-1
endfunction
function Qiw takes integer xiw,integer viw returns nothing
local integer miw
if dO[xiw]!=-1 then
call ForceRemovePlayer(io[dO[xiw]],fO[xiw])
endif
set dO[xiw]=viw
call ForceAddPlayer(io[dO[xiw]],fO[xiw])
call SetPlayerTechMaxAllowed(fO[xiw],1747990087,0)
call SetPlayerTechMaxAllowed(fO[xiw],1747990088,0)
call SetPlayerTechMaxAllowed(fO[xiw],1747989558,0)
call SetPlayerTechMaxAllowed(fO[xiw],1747989575,0)
call SetPlayerTechMaxAllowed(fO[xiw],1747990339,0)
call SetPlayerTechMaxAllowed(fO[xiw],1747990340,0)
call SetPlayerTechMaxAllowed(fO[xiw],1747988528,0)
call SetPlayerTechMaxAllowed(fO[xiw],1747988532,0)
set miw=dO[xiw]
if miw==0 then
call SetPlayerTechMaxAllowed(fO[xiw],1747988528,-1)
call SetPlayerTechMaxAllowed(fO[xiw],1747988532,-1)
elseif miw==1 then
call SetPlayerTechMaxAllowed(fO[xiw],1747990339,-1)
call SetPlayerTechMaxAllowed(fO[xiw],1747990340,-1)
elseif miw==2 then
call SetPlayerTechMaxAllowed(fO[xiw],1747990087,-1)
call SetPlayerTechMaxAllowed(fO[xiw],1747990088,-1)
elseif miw==3 then
call SetPlayerTechMaxAllowed(fO[xiw],1747989558,-1)
call SetPlayerTechMaxAllowed(fO[xiw],1747989575,-1)
endif
endfunction
function PX takes string GX returns nothing
local integer gX
local integer hX
local integer FX
local integer kX
local integer jX
local integer xX
local integer vX
local integer mX
local integer QX
local integer WX
local player EX
local location ZX
local real UX
local integer IX
set Zb[Eb]=GX
set Eb=Eb+1
set gX=LC(GetSpellTargetUnit(),"when calling getCityId in CityManage, line 18")
set kX=AS[gX]
set Zb[Eb]="when calling getCityForceId in CityManage, line 19"
set Eb=Eb+1
if Il[kX]==0 then
if kX==0 then
call r7("Nullpointer exception when calling City.getCityForceId","when calling error in City, line 171")
else
call r7("Called City.getCityForceId on invalid object.","when calling error in City, line 171")
endif
endif
set jX=VS[kX]
set Eb=Eb-1
set hX=GetPlayerId(GetOwningPlayer(GetSpellAbilityUnit()))
set xX=nO[hX]
set Zb[Eb]="when calling changeForce in CityManage, line 21"
set Eb=Eb+1
if xb[xX]==0 then
if xX==0 then
call r7("Nullpointer exception when calling PlayerStats.changeForce","when calling error in PlayerStats, line 97")
else
call r7("Called PlayerStats.changeForce on invalid object.","when calling error in PlayerStats, line 97")
endif
endif
call Qiw(xX,jX)
set Eb=Eb-1
set vX=Tl[jX]
set Zb[Eb]="when calling iterator in CityManage, line 24"
set Eb=Eb+1
set mX=u9(vX,"when calling new_LLIterator in LinkedList, line 165")
set Eb=Eb-1
set FX=mX
loop
exitwhen Yo[go[FX]]==Go[FX]
set go[FX]=Yo[go[FX]]
set QX=1
set WX=Ro[go[FX]]
set EX=GO[hX]
set ZX=GetSpellTargetLoc()
set UX=0.
call GroupClear(bj_lastCreatedGroup)
loop
set QX=QX-1
exitwhen QX<0
call CreateUnitAtLocSaveLast(EX,WX,ZX,UX)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
endloop
set Zb[Eb]="when calling close in CityManage, line 24"
set Eb=Eb+1
if Fo[FX]then
call Uyw(FX,"when calling LLIterator in LinkedList, line 450")
endif
set Eb=Eb-1
set IX=AS[gX]
set Zb[Eb]="when calling settleCity in CityManage, line 27"
set Eb=Eb+1
if Il[IX]==0 then
if IX==0 then
call r7("Nullpointer exception when calling City.settleCity","when calling error in City, line 188")
else
call r7("Called City.settleCity on invalid object.","when calling error in City, line 188")
endif
endif
call CV(IX,hX,"when calling settleCity in City, line 188")
set Eb=Eb-1
call KillUnit(GetSpellAbilityUnit())
set Eb=Eb-1
set EX=null
set ZX=null
endfunction
function caw takes nothing returns nothing
set Eb=0
call PX("CityManage, line 14")
endfunction
function Sj takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989049 then
return false
endif
if GetUnitTypeId(GetSpellTargetUnit())!=1747988569 then
return false
endif
return true
endfunction
function cj takes nothing returns boolean
if not Sj() then
return false
endif
return true
endfunction
function Sv takes nothing returns boolean
if GetResearched()!=1378889798 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889798,true)!=1 then
return false
endif
return true
endfunction
function cv takes nothing returns boolean
if not Sv() then
return false
endif
return true
endfunction
function d0w takes nothing returns nothing
set Io=Io+0.01
endfunction
function dK takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function nU takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function dU takes nothing returns boolean
if not nU() then
return false
endif
return true
endfunction
function nW takes nothing returns boolean
if GetResearched()!=1378889809 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889809,true)!=1 then
return false
endif
return true
endfunction
function dW takes nothing returns boolean
if not nW() then
return false
endif
return true
endfunction
function dZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989826,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989828,0)
endfunction
function n0w takes player p0w returns nothing
local fogstate e0w
local location q0w
local rect a0w
call SetPlayerState(p0w,PLAYER_STATE_RESOURCE_GOLD,99999999)
call SetPlayerState(p0w,PLAYER_STATE_RESOURCE_LUMBER,99999999)
set e0w=FOG_OF_WAR_VISIBLE
set a0w=bj_mapInitialPlayableArea
set q0w=Location(GetRectCenterX(a0w),GetRectCenterY(a0w))
set bj_lastCreatedFogModifier=CreateFogModifierRadiusLoc(p0w,e0w,q0w,999999.00,true,false)
call FogModifierStart(bj_lastCreatedFogModifier)
set e0w=null
set q0w=null
set a0w=null
endfunction
function tbw takes integer ubw,string rbw,string sbw returns nothing
set Zb[Eb]=sbw
set Eb=Eb+1
if Il[ubw]==0 then
if ubw==0 then
call r7("Nullpointer exception when calling City.changeCityName","when calling error in City, line 151")
else
call r7("Called City.changeCityName on invalid object.","when calling error in City, line 151")
endif
endif
set Zb[Eb]="when calling changeCityName in City, line 151"
set Eb=Eb+1
set XS[ubw]=SubString(rbw,0,24)
set Zb[Eb]="when calling refreshMultiboardIfPossible in City, line 154"
set Eb=Eb+1
if Il[ubw]==0 then
if ubw==0 then
call r7("Nullpointer exception when calling City.refreshMultiboardIfPossible","when calling error in City, line 224")
else
call r7("Called City.refreshMultiboardIfPossible on invalid object.","when calling error in City, line 224")
endif
endif
call xV(ubw,"when calling refreshMultiboardIfPossible in City, line 224")
set Eb=Eb-1-1-1
endfunction
function s4 takes string h1 returns nothing
local string F1
local string array k1
local player j1
local integer x1
local integer v1
local integer m1
local string Q1
local string W1
local player E1
local camerafield Z1
local player U1
local camerafield I1
local integer P1
local integer A1
local integer D1
local unit H1
local integer J1
local integer K1
local integer L1
local integer X1
local integer C1
local integer V1
local integer B1
local integer N1
local integer M1
local integer w4
local integer u4
local boolean r4
set Zb[Eb]=h1
set Eb=Eb+1
set F1=GetEventPlayerChatString()
set h1=""
set j1=GetTriggerPlayer()
set x1=0
set v1=1
set m1=StringLength(F1)
loop
exitwhen v1>m1
set Q1=SubString(F1,v1,v1+1)
if x1>0 then
set r4=v1>StringLength(k1[0])+1
else
set r4=false
endif
if r4 then
set h1=h1+Q1
endif
if Q1!=" " then
set k1[x1]=k1[x1]+Q1
else
set x1=x1+1
endif
set v1=v1+1
endloop
if k1[0]=="far" then
set E1=GetTriggerPlayer()
set Z1=CAMERA_FIELD_TARGET_DISTANCE
if GetLocalPlayer()==E1 then
call SetCameraField(Z1,3000.0,0.)
endif
elseif k1[0]=="med" then
set U1=GetTriggerPlayer()
set I1=CAMERA_FIELD_TARGET_DISTANCE
if GetLocalPlayer()==U1 then
call SetCameraField(I1,2300.0,0.)
endif
elseif k1[0]=="name" then
call SetPlayerName(GetTriggerPlayer(),h1)
elseif k1[0]=="rename" then
set P1=nO[GetPlayerId(j1)]
set Zb[Eb]="when calling getSelectedCityId in Commands, line 45"
set Eb=Eb+1
if xb[P1]==0 then
if P1==0 then
call r7("Nullpointer exception when calling PlayerStats.getSelectedCityId","when calling error in PlayerStats, line 84")
else
call r7("Called PlayerStats.getSelectedCityId on invalid object.","when calling error in PlayerStats, line 84")
endif
endif
set A1=TO[P1]
set Eb=Eb-1
if A1>=0 and A1<QS then
set D1=AS[A1]
set Zb[Eb]="when calling getCityUnit in Commands, line 47"
set Eb=Eb+1
if Il[D1]==0 then
if D1==0 then
call r7("Nullpointer exception when calling City.getCityUnit","when calling error in City, line 168")
else
call r7("Called City.getCityUnit on invalid object.","when calling error in City, line 168")
endif
endif
set H1=LS[D1]
set Eb=Eb-1
if GetOwningPlayer(H1)!=j1 then
set Zb[Eb]="when calling noteToPlayer in Commands, line 48"
set Eb=Eb+1
call DisplayTimedTextToPlayer(j1,0.,0.,10.0,Uww(j1,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(j1,0.,0.,10.0,"The city you wanted to rename so eagerly doesn't belong to you!")
set Eb=Eb-1
else
call tbw(AS[A1],h1,"when calling changeCityName in Commands, line 50")
endif
endif
elseif k1[0]=="add_mod" then
set J1=nO[GetPlayerId(j1)]
set Zb[Eb]="when calling getSelectedCityId in Commands, line 52"
set Eb=Eb+1
if xb[J1]==0 then
if J1==0 then
call r7("Nullpointer exception when calling PlayerStats.getSelectedCityId","when calling error in PlayerStats, line 84")
else
call r7("Called PlayerStats.getSelectedCityId on invalid object.","when calling error in PlayerStats, line 84")
endif
endif
set K1=TO[J1]
set Eb=Eb-1
if not Zo then
set Eb=Eb-1
set j1=null
set E1=null
set Z1=null
set U1=null
set I1=null
set H1=null
return
endif
if K1>=0 and K1<QS then
set W1=k1[1]
if W1=="massacred_pop" then
set L1=AS[K1]
set Zb[Eb]="when calling addModifier in Commands, line 58"
set Eb=Eb+1
if Il[L1]==0 then
if L1==0 then
call r7("Nullpointer exception when calling City.addModifier","when calling error in City, line 335")
else
call r7("Called City.addModifier on invalid object.","when calling error in City, line 335")
endif
endif
call TV(L1,6,"when calling addModifier in City, line 335")
set Eb=Eb-1
elseif W1=="recently_conquered" then
set X1=AS[K1]
set Zb[Eb]="when calling addModifier in Commands, line 60"
set Eb=Eb+1
if Il[X1]==0 then
if X1==0 then
call r7("Nullpointer exception when calling City.addModifier","when calling error in City, line 335")
else
call r7("Called City.addModifier on invalid object.","when calling error in City, line 335")
endif
endif
call TV(X1,0,"when calling addModifier in City, line 335")
set Eb=Eb-1
elseif W1=="recently_revolted" then
set C1=AS[K1]
set Zb[Eb]="when calling addModifier in Commands, line 62"
set Eb=Eb+1
if Il[C1]==0 then
if C1==0 then
call r7("Nullpointer exception when calling City.addModifier","when calling error in City, line 335")
else
call r7("Called City.addModifier on invalid object.","when calling error in City, line 335")
endif
endif
call TV(C1,1,"when calling addModifier in City, line 335")
set Eb=Eb-1
elseif W1=="more_trade_estabilished" then
set V1=AS[K1]
set Zb[Eb]="when calling addModifier in Commands, line 64"
set Eb=Eb+1
if Il[V1]==0 then
if V1==0 then
call r7("Nullpointer exception when calling City.addModifier","when calling error in City, line 335")
else
call r7("Called City.addModifier on invalid object.","when calling error in City, line 335")
endif
endif
call TV(V1,5,"when calling addModifier in City, line 335")
set Eb=Eb-1
elseif W1=="on_fire" then
set B1=AS[K1]
set Zb[Eb]="when calling addModifier in Commands, line 66"
set Eb=Eb+1
if Il[B1]==0 then
if B1==0 then
call r7("Nullpointer exception when calling City.addModifier","when calling error in City, line 335")
else
call r7("Called City.addModifier on invalid object.","when calling error in City, line 335")
endif
endif
call TV(B1,4,"when calling addModifier in City, line 335")
set Eb=Eb-1
elseif W1=="plague_outburst" then
set N1=AS[K1]
set Zb[Eb]="when calling addModifier in Commands, line 68"
set Eb=Eb+1
if Il[N1]==0 then
if N1==0 then
call r7("Nullpointer exception when calling City.addModifier","when calling error in City, line 335")
else
call r7("Called City.addModifier on invalid object.","when calling error in City, line 335")
endif
endif
call TV(N1,3,"when calling addModifier in City, line 335")
set Eb=Eb-1
elseif W1=="population_boom" then
set M1=AS[K1]
set Zb[Eb]="when calling addModifier in Commands, line 70"
set Eb=Eb+1
if Il[M1]==0 then
if M1==0 then
call r7("Nullpointer exception when calling City.addModifier","when calling error in City, line 335")
else
call r7("Called City.addModifier on invalid object.","when calling error in City, line 335")
endif
endif
call TV(M1,2,"when calling addModifier in City, line 335")
set Eb=Eb-1
elseif W1=="prospering" then
set w4=AS[K1]
set Zb[Eb]="when calling addModifier in Commands, line 72"
set Eb=Eb+1
if Il[w4]==0 then
if w4==0 then
call r7("Nullpointer exception when calling City.addModifier","when calling error in City, line 335")
else
call r7("Called City.addModifier on invalid object.","when calling error in City, line 335")
endif
endif
call TV(w4,7,"when calling addModifier in City, line 335")
set Eb=Eb-1
elseif W1=="sieged" then
set u4=AS[K1]
set Zb[Eb]="when calling addModifier in Commands, line 74"
set Eb=Eb+1
if Il[u4]==0 then
if u4==0 then
call r7("Nullpointer exception when calling City.addModifier","when calling error in City, line 335")
else
call r7("Called City.addModifier on invalid object.","when calling error in City, line 335")
endif
endif
call TV(u4,8,"when calling addModifier in City, line 335")
set Eb=Eb-1
endif
endif
elseif k1[0]=="непереводимоесочетаниебукв" then
set Zo=not Zo
set Eo=not Eo
call n0w(GO[0])
endif
set Eb=Eb-1
set j1=null
set E1=null
set Z1=null
set U1=null
set I1=null
set H1=null
endfunction
function daw takes nothing returns nothing
set Eb=0
call s4("Commands, line 85")
endfunction
function e9 takes nothing returns boolean
return true
endfunction
function oG takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988824 then
return false
endif
return true
endfunction
function OG takes nothing returns boolean
if not oG() then
return false
endif
return true
endfunction
function lG takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988826 then
return false
endif
return true
endfunction
function bG takes nothing returns boolean
if not lG() then
return false
endif
return true
endfunction
function SG takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988825 then
return false
endif
return true
endfunction
function cG takes nothing returns boolean
if not SG() then
return false
endif
return true
endfunction
function yG takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989079 then
return false
endif
return true
endfunction
function pG takes nothing returns boolean
if not yG() then
return false
endif
return true
endfunction
function eG takes nothing returns nothing
if cG() then
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747989047,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"Death Alternate")
endif
if OG() then
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747989046,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"Death Alternate")
endif
if bG() then
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747989077,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"Death Alternate")
endif
if pG() then
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747989078,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"Death Alternate")
endif
endfunction
function pH takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990352 then
return false
endif
return true
endfunction
function eH takes nothing returns boolean
if not pH() then
return false
endif
return true
endfunction
function pP takes nothing returns boolean
if GetResearched()!=1378890052 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890052,true)!=1 then
return false
endif
return true
endfunction
function eP takes nothing returns boolean
if not pP() then
return false
endif
return true
endfunction
function eQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990097,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989594,0)
endfunction
function eU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989815,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989816,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989825,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989814,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989830,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651844,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989833,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989832,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989835,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989836,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651848,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651846,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989828,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989826,0)
endfunction
function cSw takes integer SSw returns real
if SSw==1747988785 then
return 10.0
elseif SSw==1747989075 then
return 10.0
elseif SSw==1747990102 then
return 10.0
elseif SSw==1747989839 then
return 10.0
elseif SSw==1747988568 then
return 5.0
elseif SSw==1747990341 then
return 5.0
elseif SSw==1747988789 then
return 15.0
elseif SSw==1747990103 then
return 15.0
elseif SSw==1747990064 then
return 15.0
elseif SSw==1747989846 then
return 15.0
else
return 0.0
endif
endfunction
function IB takes integer EB,unit ZB returns nothing
local boolean UB
if IsUnitType(ZB,UNIT_TYPE_STRUCTURE) then
set UB=GetOwningPlayer(ZB)==GO[BS[HS[EB]]]
else
set UB=false
endif
if UB then
set sc[HS[EB]]=sc[HS[EB]]+cSw(GetUnitTypeId(ZB))
endif
endfunction
function LSw takes integer gSw,unit hSw,string FSw returns nothing
local integer kSw
local integer jSw
local player xSw
local player vSw
local player mSw
local player QSw
local player WSw
local player ESw
local player ZSw
local player USw
local player ISw
local player PSw
local player ASw
local boolean DSw
local boolean HSw
local boolean JSw
local boolean KSw
set Zb[Eb]=FSw
set Eb=Eb+1
if not EO[gSw]then
if GetUnitTypeId(hSw)==ZO[gSw]then
set HSw=true
else
if GetUnitTypeId(hSw)==1747990101 then
set DSw=true
else
set DSw=GetUnitTypeId(hSw)==1747989554
endif
set HSw=DSw and ZO[gSw]==1747989041 or ZO[gSw]==1747990344 or ZO[gSw]==1747988557
endif
set JSw=HSw
else
set JSw=false
endif
if JSw then
set KSw=GetOwningPlayer(hSw)==UO[gSw]
else
set KSw=false
endif
if KSw and hSw!=IO[gSw]then
set EO[gSw]=true
set Zb[Eb]="when calling alloc_Closure in RangeChecks, line 20"
set Eb=Eb+1
if Kl==0 then
if Ll<32768 then
set Ll=Ll+1
set jSw=Ll
set Xl[jSw]=652
else
call r7("Out of memory: Could not create Closure.","when calling error in RangeChecks, line 20")
set jSw=0
endif
else
set Kl=Kl-1
set jSw=Jl[Kl]
set Xl[jSw]=652
endif
set Eb=Eb-1
set WO[jSw]=IO[gSw]
set Zb[Eb]="when calling doAfter in RangeChecks, line 20"
set Eb=Eb+1
call ryw(jSw,0.01,"when calling start in ClosureTimers, line 15")
set Eb=Eb-1
set kSw=ZO[gSw]
if kSw==1747988557 then
set xSw=UO[gSw]
set Zb[Eb]="when calling attentionToPlayer in RangeChecks, line 24"
set Eb=Eb+1
call DisplayTimedTextToPlayer(xSw,0.,0.,10.0,Bww(xSw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(xSw,0.,0.,10.0,"You cannot build settlements too close to each other.")
set Eb=Eb-1
elseif kSw==1747989075 then
set vSw=UO[gSw]
set Zb[Eb]="when calling attentionToPlayer in RangeChecks, line 26"
set Eb=Eb+1
call DisplayTimedTextToPlayer(vSw,0.,0.,10.0,Bww(vSw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(vSw,0.,0.,10.0,"You cannot build churches too close to each other.")
set Eb=Eb-1
elseif kSw==1747990102 then
set mSw=UO[gSw]
set Zb[Eb]="when calling attentionToPlayer in RangeChecks, line 28"
set Eb=Eb+1
call DisplayTimedTextToPlayer(mSw,0.,0.,10.0,Bww(mSw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(mSw,0.,0.,10.0,"You cannot build churches too close to each other.")
set Eb=Eb-1
elseif kSw==1747988785 then
set QSw=UO[gSw]
set Zb[Eb]="when calling attentionToPlayer in RangeChecks, line 30"
set Eb=Eb+1
call DisplayTimedTextToPlayer(QSw,0.,0.,10.0,Bww(QSw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(QSw,0.,0.,10.0,"You cannot build churches too close to each other.")
set Eb=Eb-1
elseif kSw==1747989839 then
set WSw=UO[gSw]
set Zb[Eb]="when calling attentionToPlayer in RangeChecks, line 32"
set Eb=Eb+1
call DisplayTimedTextToPlayer(WSw,0.,0.,10.0,Bww(WSw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(WSw,0.,0.,10.0,"You cannot build mosques too close to each other.")
set Eb=Eb-1
elseif kSw==1747989059 then
set ESw=UO[gSw]
set Zb[Eb]="when calling attentionToPlayer in RangeChecks, line 34"
set Eb=Eb+1
call DisplayTimedTextToPlayer(ESw,0.,0.,10.0,Bww(ESw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(ESw,0.,0.,10.0,"You cannot build castles too close to each other.")
set Eb=Eb-1
elseif kSw==1747989331 then
set ZSw=UO[gSw]
set Zb[Eb]="when calling attentionToPlayer in RangeChecks, line 36"
set Eb=Eb+1
call DisplayTimedTextToPlayer(ZSw,0.,0.,10.0,Bww(ZSw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(ZSw,0.,0.,10.0,"You cannot build castles too close to each other.")
set Eb=Eb-1
elseif kSw==1747990351 then
set USw=UO[gSw]
set Zb[Eb]="when calling attentionToPlayer in RangeChecks, line 38"
set Eb=Eb+1
call DisplayTimedTextToPlayer(USw,0.,0.,10.0,Bww(USw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(USw,0.,0.,10.0,"You cannot build castles too close to each other.")
set Eb=Eb-1
elseif kSw==1747990353 then
set ISw=UO[gSw]
set Zb[Eb]="when calling attentionToPlayer in RangeChecks, line 40"
set Eb=Eb+1
call DisplayTimedTextToPlayer(ISw,0.,0.,10.0,Bww(ISw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(ISw,0.,0.,10.0,"You cannot build castles too close to each other.")
set Eb=Eb-1
elseif kSw==1747988568 then
set PSw=UO[gSw]
set Zb[Eb]="when calling attentionToPlayer in RangeChecks, line 42"
set Eb=Eb+1
call DisplayTimedTextToPlayer(PSw,0.,0.,10.0,Bww(PSw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(PSw,0.,0.,10.0,"You cannot build inns too close to each other.")
set Eb=Eb-1
elseif kSw==1747990341 then
set ASw=UO[gSw]
set Zb[Eb]="when calling attentionToPlayer in RangeChecks, line 44"
set Eb=Eb+1
call DisplayTimedTextToPlayer(ASw,0.,0.,10.0,Bww(ASw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(ASw,0.,0.,10.0,"You cannot build inns too close to each other.")
set Eb=Eb-1
endif
endif
set Eb=Eb-1
set xSw=null
set vSw=null
set mSw=null
set QSw=null
set WSw=null
set ESw=null
set ZSw=null
set USw=null
set ISw=null
set PSw=null
set ASw=null
endfunction
function N0w takes integer J0w,unit K0w,string L0w returns nothing
local integer X0w
local integer C0w
local boolean V0w
local boolean B0w
set Zb[Eb]=L0w
set Eb=Eb+1
if GetOwningPlayer(K0w)==Co[J0w]then
set X0w=Yl
set C0w=GetUnitTypeId(K0w)
set Zb[Eb]="when calling has in MassControl, line 28"
set Eb=Eb+1
if Gb[X0w]==0 then
if X0w==0 then
call r7("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call r7("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set V0w=i9(X0w,C0w)
set Eb=Eb-1
set B0w=not V0w
else
set B0w=false
endif
if B0w and K0w!=Vo[J0w] and(not IsUnitType(K0w,UNIT_TYPE_STRUCTURE)) then
call bpw(Bo[J0w],GetHandleId(K0w),"when calling add in MassControl, line 29")
endif
set Eb=Eb-1
endfunction
function WB takes integer FB,unit kB,string jB returns nothing
local integer xB
local integer vB
local boolean mB
local boolean QB
set Zb[Eb]=jB
set Eb=Eb+1
set xB=Yl
set vB=GetUnitTypeId(kB)
set Zb[Eb]="when calling has in City, line 281"
set Eb=Eb+1
if Gb[xB]==0 then
if xB==0 then
call r7("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call r7("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set mB=i9(xB,vB)
set Eb=Eb-1
if not mB then
set QB=GetOwningPlayer(kB)==GO[BS[DS[FB]]]
else
set QB=false
endif
if QB then
set sc[DS[FB]]=sc[DS[FB]]+0.5
endif
set Eb=Eb-1
endfunction
function t6 takes integer L5,unit X5,string C5 returns nothing
local integer V5
local integer B5
local boolean N5
local player M5
local player w6
local boolean u6
local boolean r6
local integer s6
set Zb[Eb]=C5
set Eb=Eb+1
set V5=fl
set B5=GetUnitTypeId(X5)
set Zb[Eb]="when calling has in Economy, line 39"
set Eb=Eb+1
if Gb[V5]==0 then
if V5==0 then
call r7("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call r7("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set N5=i9(V5,B5)
set Eb=Eb-1
if N5 then
set M5=GO[GetPlayerId(GetOwningPlayer(X5))]
if GetPlayerSlotState(M5)==PLAYER_SLOT_STATE_PLAYING then
set u6=GetPlayerController(M5)==MAP_CONTROL_USER
else
set u6=false
endif
set r6=u6
else
set r6=false
endif
if r6 then
set w6=GetOwningPlayer(X5)
set s6=Xc[GetPlayerId(GetOwningPlayer(X5))]
set L5=Rl
set Xc[GetPlayerId(w6)]=s6+Fyw(L5,GetUnitTypeId(X5),"when calling get in Economy, line 40")
endif
set Eb=Eb-1
set M5=null
set w6=null
endfunction
function Pbw takes integer Zbw,unit Ubw,string Ibw returns nothing
set Zb[Eb]=Ibw
set Eb=Eb+1
if Hl[Zbw]==0 then
if Zbw==0 then
call r7("Nullpointer exception when calling ForGroupCallback.callback","when calling error in ClosureForGroups, line 4")
else
call r7("Called ForGroupCallback.callback on invalid object.","when calling error in ClosureForGroups, line 4")
endif
endif
if Hl[Zbw]<=683 then
if Hl[Zbw]<=681 then
if Hl[Zbw]<=680 then
call WB(Zbw,Ubw,"when calling City_closure_impl in ClosureForGroups, line 4")
else
call IB(Zbw,Ubw)
endif
elseif Hl[Zbw]<=682 then
call t6(Zbw,Ubw,"when calling Economy_closure_impl in ClosureForGroups, line 4")
else
set Zb[Eb]="when calling LinkedList_closure_impl in ClosureForGroups, line 4"
set Eb=Eb+1
call bpw(fo[Zbw],GetHandleId(Ubw),"when calling add in LinkedList, line 515")
set Eb=Eb-1
endif
elseif Hl[Zbw]<=685 then
if Hl[Zbw]<=684 then
call N0w(Zbw,Ubw,"when calling MassControl_closure_impl in ClosureForGroups, line 4")
else
call SetUnitOwner(Ubw,GO[PLAYER_NEUTRAL_AGGRESSIVE],true)
endif
elseif Hl[Zbw]<=686 then
call RemoveUnit(Ubw)
else
call LSw(Zbw,Ubw,"when calling RangeChecks_closure_impl in ClosureForGroups, line 4")
endif
set Eb=Eb-1
endfunction
function eaw takes nothing returns nothing
set Eb=0
set Zb[Eb]="ClosureForGroups, line 12"
set Eb=Eb+1
call Pbw(xc[vc-1],GetFilterUnit(),"when calling callback in ClosureForGroups, line 12")
set Eb=Eb-1
endfunction
function eg takes nothing returns nothing
local location ig
local location Sg
local real cg
local real og
local rect Og
local group lg
local group bg
local code yg
local boolean pg
set u=GetUnitLoc(GetSpellAbilityUnit())
set ig=u
set o=Location(GetLocationX(ig)+200.00,GetLocationY(ig)+0.00)
set Sg=u
set cg=GetLocationX(Sg)
set og=GetLocationY(Sg)
set l=Rect(cg-150,og-140,cg+150,og+140)
set Og=l
set lg=CreateGroup()
call GroupEnumUnitsInRect(lg,Og,null)
call DestroyBoolExpr(null)
set b=lg
set bg=b
set yg=Dy
set pg=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(bg,yg)
if pg then
call DestroyGroup(bg)
endif
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747988826,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"stand")
call DestroyGroup(b)
call RemoveLocation(o)
call RemoveLocation(u)
set ig=null
set Sg=null
set Og=null
set lg=null
set bg=null
endfunction
function eh takes nothing returns nothing
local player sh=GetOwningPlayer(GetSpellTargetUnit())
local playerstate th=PLAYER_STATE_RESOURCE_LUMBER
local playerstate ih
local playerstate Sh
local player ch
local force oh
local location Oh
local real lh
local real bh
local player yh
local force ph
if th==PLAYER_STATE_RESOURCE_GOLD then
set ih=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(sh,ih,GetPlayerState(sh,ih)+250)
elseif th==PLAYER_STATE_RESOURCE_LUMBER then
set Sh=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(sh,Sh,GetPlayerState(sh,Sh)+250)
endif
call SetPlayerState(sh,th,GetPlayerState(sh,th)+250)
call RemoveUnit(GetSpellAbilityUnit())
set ch=GetOwningPlayer(GetSpellTargetUnit())
set oh=CreateForce()
call ForceAddPlayer(oh,ch)
if IsPlayerInForce(GetLocalPlayer(),oh) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_1229")
endif
set e=GetUnitLoc(GetSpellTargetUnit())
set yh=GetOwningPlayer(GetSpellTargetUnit())
set ph=CreateForce()
call ForceAddPlayer(ph,yh)
set Oh=e
set lh=GetLocationX(Oh)
set bh=GetLocationY(Oh)
if IsPlayerInForce(GetLocalPlayer(),ph) then
call PingMinimap(lh,bh,2.00)
endif
call RemoveLocation(e)
set sh=null
set th=null
set ih=null
set Sh=null
set ch=null
set oh=null
set Oh=null
set yh=null
set ph=null
endfunction
function etw takes nothing returns boolean
return true
endfunction
function pv takes nothing returns boolean
if GetResearched()!=1378889798 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889798,true)!=2 then
return false
endif
return true
endfunction
function ev takes nothing returns boolean
if not pv() then
return false
endif
return true
endfunction
function eww takes nothing returns boolean
return true
endfunction
function initMapBounds takes nothing returns nothing
local rect cond_result
local region receiver
local real temp
local real tuple_temp
set Po=bj_mapInitialPlayableArea
call RegionAddRect(CreateRegion(),Po)
set cond_result=GetWorldBounds()
set Ao=cond_result
set receiver=CreateRegion()
call RegionAddRect(receiver,Ao)
set Do=receiver
set temp=GetRectMaxX(Ao)
set tuple_temp=GetRectMaxY(Ao)
set Ho=temp
set Jo=tuple_temp
endfunction
function f0w takes nothing returns boolean
call initMapBounds()
return true
endfunction
function f4 takes nothing returns boolean
local trigger q4=CreateTrigger()
local trigger a4=q4
local playerunitevent n4=EVENT_PLAYER_UNIT_SPELL_EFFECT
local integer d4=0
loop
call TriggerRegisterPlayerUnitEvent(a4,Player(d4),n4,null)
set d4=d4+1
exitwhen d4==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(q4,Condition(jf))
call TriggerAddAction(q4,xf)
set q4=null
set a4=null
set n4=null
return true
endfunction
function dE takes nothing returns boolean
if GetResearched()!=1378889818 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889818,true)!=1 then
return false
endif
return true
endfunction
function fE takes nothing returns boolean
if not dE() then
return false
endif
return true
endfunction
function fG takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989047 then
return false
endif
return true
endfunction
function dJ takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747988530 then
return false
endif
return true
endfunction
function fJ takes nothing returns boolean
if not dJ() then
return false
endif
return true
endfunction
function dT takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())==1747988568 then
return true
endif
return false
endfunction
function fT takes nothing returns boolean
if not dT() then
return false
endif
return true
endfunction
function fU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990324,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990325,0)
endfunction
function fW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651841,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651831,0)
endfunction
function dY takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989042 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function fY takes nothing returns boolean
if not dY() then
return false
endif
return true
endfunction
function Eaw takes integer vaw,integer maw,string Qaw returns integer
local integer Waw
if maw<0 or maw>=24 then
call r7("Index out of Bounds",Qaw)
elseif maw<=11 then
if maw<=5 then
if maw<=2 then
if maw<=1 then
if maw<=0 then
set Waw=Ab[vaw]
else
set Waw=Db[vaw]
endif
else
set Waw=Hb[vaw]
endif
elseif maw<=4 then
if maw<=3 then
set Waw=Jb[vaw]
else
set Waw=Kb[vaw]
endif
else
set Waw=Lb[vaw]
endif
elseif maw<=8 then
if maw<=7 then
if maw<=6 then
set Waw=Xb[vaw]
else
set Waw=Cb[vaw]
endif
else
set Waw=Vb[vaw]
endif
elseif maw<=10 then
if maw<=9 then
set Waw=Bb[vaw]
else
set Waw=Nb[vaw]
endif
else
set Waw=Mb[vaw]
endif
elseif maw<=17 then
if maw<=14 then
if maw<=13 then
if maw<=12 then
set Waw=wy[vaw]
else
set Waw=uy[vaw]
endif
else
set Waw=ry[vaw]
endif
elseif maw<=16 then
if maw<=15 then
set Waw=sy[vaw]
else
set Waw=ty[vaw]
endif
else
set Waw=iy[vaw]
endif
elseif maw<=20 then
if maw<=19 then
if maw<=18 then
set Waw=Sy[vaw]
else
set Waw=cy[vaw]
endif
else
set Waw=oy[vaw]
endif
elseif maw<=22 then
if maw<=21 then
set Waw=Oy[vaw]
else
set Waw=ly[vaw]
endif
else
set Waw=by[vaw]
endif
return Waw
endfunction
function Jww takes player Iww,string Pww returns string
local integer Aww
local integer Dww
local integer Hww_2
set Zb[Eb]=Pww
set Eb=Eb+1
set Dww=nO[GetPlayerId(Iww)]
set Zb[Eb]="when calling getForceId in Messages, line 37"
set Eb=Eb+1
if xb[Dww]==0 then
if Dww==0 then
call r7("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 94")
else
call r7("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 94")
endif
endif
set Hww_2=dO[Dww]
set Eb=Eb-1
set Aww=GetRandomInt(0,2)
if Hww_2==0 then
set Pww=wl[Aww]
elseif Hww_2==1 then
set Pww=ul[Aww]
elseif Hww_2==2 then
set Pww=rl[Aww]
elseif Hww_2==3 then
set Pww=sl[Aww]
else
set Pww="Good news!"
endif
set Eb=Eb-1
return "|cff00ff00"+Pww+"|r"
endfunction
function xaw takes integer haw,integer Faw,integer kaw,string jaw returns nothing
if Faw<0 or Faw>=24 then
call r7("Index out of Bounds",jaw)
elseif Faw<=11 then
if Faw<=5 then
if Faw<=2 then
if Faw<=1 then
if Faw<=0 then
set Ab[haw]=kaw
else
set Db[haw]=kaw
endif
else
set Hb[haw]=kaw
endif
elseif Faw<=4 then
if Faw<=3 then
set Jb[haw]=kaw
else
set Kb[haw]=kaw
endif
else
set Lb[haw]=kaw
endif
elseif Faw<=8 then
if Faw<=7 then
if Faw<=6 then
set Xb[haw]=kaw
else
set Cb[haw]=kaw
endif
else
set Vb[haw]=kaw
endif
elseif Faw<=10 then
if Faw<=9 then
set Bb[haw]=kaw
else
set Nb[haw]=kaw
endif
else
set Mb[haw]=kaw
endif
elseif Faw<=17 then
if Faw<=14 then
if Faw<=13 then
if Faw<=12 then
set wy[haw]=kaw
else
set uy[haw]=kaw
endif
else
set ry[haw]=kaw
endif
elseif Faw<=16 then
if Faw<=15 then
set sy[haw]=kaw
else
set ty[haw]=kaw
endif
else
set iy[haw]=kaw
endif
elseif Faw<=20 then
if Faw<=19 then
if Faw<=18 then
set Sy[haw]=kaw
else
set cy[haw]=kaw
endif
else
set oy[haw]=kaw
endif
elseif Faw<=22 then
if Faw<=21 then
set Oy[haw]=kaw
else
set ly[haw]=kaw
endif
else
set by[haw]=kaw
endif
endfunction
function Ntw takes integer Ltw,player Xtw,integer Ctw,string Vtw returns nothing
local integer Btw
set Zb[Eb]=Vtw
set Eb=Eb+1
set Btw=GetPlayerId(Xtw)
if not RO[Ltw]then
set Eb=Eb-1
return
endif
if Btw>=24 then
set Eb=Eb-1
return
endif
if Eaw(Ltw,Btw,"when reading array PlayerStats_alliance_states in PlayerStats, line 33")==Ctw or Xtw==fO[Ltw]then
set Eb=Eb-1
return
endif
call xaw(Ltw,Btw,Ctw,"when writing array PlayerStats_alliance_states in PlayerStats, line 35")
call SetPlayerAllianceStateBJ(fO[Ltw],Xtw,Ctw)
set Eb=Eb-1
endfunction
function Psw takes multiboard Qsw,integer Wsw,integer Esw,real Zsw,string Usw returns nothing
local multiboarditem Isw=MultiboardGetItem(Qsw,Esw,Wsw)
call MultiboardSetItemWidth(Isw,Zsw)
call MultiboardSetItemValue(Isw,Usw)
set Isw=null
endfunction
function hww takes string pww_2 returns multiboard
local multiboard eww_2
local integer qww
local integer aww_2
local integer nww
local integer dww
local integer fww
local integer Rww
local integer Tww
local integer Yww_2
local string Gww_2
local real gww
set Zb[Eb]=pww_2
set Eb=Eb+1
set bj_lastCreatedMultiboard=CreateMultiboard()
call MultiboardSetRowCount(bj_lastCreatedMultiboard,10)
call MultiboardSetColumnCount(bj_lastCreatedMultiboard,6)
call MultiboardSetTitleText(bj_lastCreatedMultiboard,"Income: 2:00")
call MultiboardDisplay(bj_lastCreatedMultiboard,true)
set eww_2=bj_lastCreatedMultiboard
call MultiboardMinimize(eww_2,true)
call MultiboardSetItemsStyle(eww_2,true,false)
set qww=0
set aww_2=23
loop
exitwhen qww>aww_2
if gO==GO[qww]then
call MultiboardDisplay(eww_2,false)
endif
set qww=qww+1
endloop
set nww=0
set dww=9
loop
exitwhen nww>dww
set fww=0
set Rww=5
loop
exitwhen fww>Rww
set gww=Nyw(rO[nww],fww,"when calling get in MultiboardCityUpdate, line 14")/1000.
set Tww=Nyw(lO[nww],fww,"when calling get in MultiboardCityUpdate, line 14")
set Zb[Eb]="when calling stringFromIndex in MultiboardCityUpdate, line 14"
set Eb=Eb+1
set Yww_2=pl
set pww_2="when calling loadString in TypeCasting, line 29"
set Zb[Eb]="when calling loadString in TypeCasting, line 29"
set Eb=Eb+1
if Ob[Yww_2]==0 then
if Yww_2==0 then
call r7("Nullpointer exception when calling Table.loadString","when calling error in Table, line 57")
else
call r7("Called Table.loadString on invalid object.","when calling error in Table, line 57")
endif
endif
set Gww_2=LoadStr(Ol,Yww_2,Tww)
set Eb=Eb-1-1
call Psw(eww_2,fww,nww,gww,Gww_2)
set fww=fww+1
endloop
set nww=nww+1
endloop
set Eb=Eb-1
set Hf=eww_2
set eww_2=null
return Hf
endfunction
function vww takes player hww_2,string Fww returns string
local integer kww
local integer jww
local integer xww
set Zb[Eb]=Fww
set Eb=Eb+1
set jww=nO[GetPlayerId(hww_2)]
set Zb[Eb]="when calling getForceId in Messages, line 5"
set Eb=Eb+1
if xb[jww]==0 then
if jww==0 then
call r7("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 94")
else
call r7("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 94")
endif
endif
set xww=dO[jww]
set Eb=Eb-1
set kww=GetRandomInt(0,2)
if xww==0 then
set Fww=KO[kww]
elseif xww==1 then
set Fww=LO[kww]
elseif xww==2 then
set Fww=XO[kww]
elseif xww==3 then
set Fww=CO[kww]
else
set Fww="Warning!"
endif
set Eb=Eb-1
return "|cffff0000"+Fww+"|r"
endfunction
function P2 takes string R4 returns nothing
local player T4
local player Y4
local string G4
local integer g4
local force h4
local force F4
local integer k4
local integer j4
local integer x4
local integer v4
local integer m4
local integer Q4
local integer W4
local integer E4
local integer Z4
local integer U4
local integer I4
local force P4
local force A4
local integer D4
local integer H4
local integer J4
local integer K4
local integer L4
local integer X4
local player C4
local force V4
local player B4
local player N4
local player M4
local integer w2
local integer u2
local integer r2
local integer s2
local player t2
local force i2
local player S2
local player c2
local player o2
local integer O2
local integer l2
local integer b2
local integer y2
local player p2
local force e2
local player q2
local player a2
local player n2
local integer d2
local integer f2
local integer R2
local integer T2
local player Y2
local force G2
local player g2
local player h2
local player F2
local integer k2
local integer j2
local integer x2
local integer v2
local multiboard m2
local multiboard Q2
local player W2
local force E2
local player Z2
local player U2
local player I2
set Zb[Eb]=R4
set Eb=Eb+1
set T4=GetOwningPlayer(GetSpellAbilityUnit())
set Y4=GetOwningPlayer(GetSpellTargetUnit())
set R4=S1(T4)
set G4=S1(Y4)
set g4=GetPlayerId(T4)
set P4=CreateForce()
call ForceAddPlayer(P4,T4)
set h4=P4
set A4=CreateForce()
call ForceAddPlayer(A4,T4)
set F4=A4
set k4=GetSpellAbilityId()
if k4==1093677396 then
set D4=nO[g4]
set Zb[Eb]="when calling getAllianceState in Diplomacy, line 17"
set Eb=Eb+1
if xb[D4]==0 then
if D4==0 then
call r7("Nullpointer exception when calling PlayerStats.getAllianceState","when calling error in PlayerStats, line 38")
else
call r7("Called PlayerStats.getAllianceState on invalid object.","when calling error in PlayerStats, line 38")
endif
endif
set Zb[Eb]="when calling getAllianceState in PlayerStats, line 38"
set Eb=Eb+1
set H4=Eaw(D4,GetPlayerId(Y4),"when reading array PlayerStats_alliance_states in PlayerStats, line 39")
set Eb=Eb-1-1
if H4==bj_ALLIANCE_UNALLIED then
set Eb=Eb-1
set T4=null
set Y4=null
set h4=null
set F4=null
set P4=null
set A4=null
set C4=null
set V4=null
set B4=null
set N4=null
set M4=null
set t2=null
set i2=null
set S2=null
set c2=null
set o2=null
set p2=null
set e2=null
set q2=null
set a2=null
set n2=null
set Y2=null
set G2=null
set g2=null
set h2=null
set F2=null
set m2=null
set Q2=null
set W2=null
set E2=null
set Z2=null
set U2=null
set I2=null
return
endif
set J4=nO[g4]
set K4=bj_ALLIANCE_UNALLIED
set Zb[Eb]="when calling setAlliance in Diplomacy, line 19"
set Eb=Eb+1
if xb[J4]==0 then
if J4==0 then
call r7("Nullpointer exception when calling PlayerStats.setAlliance","when calling error in PlayerStats, line 27")
else
call r7("Called PlayerStats.setAlliance on invalid object.","when calling error in PlayerStats, line 27")
endif
endif
call Ntw(J4,Y4,K4,"when calling setAlliance in PlayerStats, line 27")
set Eb=Eb-1
set L4=nO[GetPlayerId(Y4)]
set X4=bj_ALLIANCE_UNALLIED
set Zb[Eb]="when calling setAlliance in Diplomacy, line 20"
set Eb=Eb+1
if xb[L4]==0 then
if L4==0 then
call r7("Nullpointer exception when calling PlayerStats.setAlliance","when calling error in PlayerStats, line 27")
else
call r7("Called PlayerStats.setAlliance on invalid object.","when calling error in PlayerStats, line 27")
endif
endif
call Ntw(L4,T4,X4,"when calling setAlliance in PlayerStats, line 27")
set Eb=Eb-1
set j4=0
set x4=23
loop
exitwhen j4>x4
set C4=GO[j4]
set V4=CreateForce()
call ForceAddPlayer(V4,C4)
if GO[j4]==Y4 then
set B4=GO[j4]
set Zb[Eb]="when calling warningToPlayer in Diplomacy, line 25"
set Eb=Eb+1
call DisplayTimedTextToPlayer(B4,0.,0.,10.0,vww(B4,"when calling getWarningStringForPlayer in Messages, line 79"))
call DisplayTimedTextToPlayer(B4,0.,0.,10.0,R4+" has declared war on you!")
set Eb=Eb-1
elseif V4==h4 or V4==F4 then
set N4=GO[j4]
set Zb[Eb]="when calling attentionToPlayer in Diplomacy, line 27"
set Eb=Eb+1
call DisplayTimedTextToPlayer(N4,0.,0.,10.0,Bww(N4,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(N4,0.,0.,10.0,R4+" has declared war on your brother-in-arms, "+G4+"!")
set Eb=Eb-1
else
set M4=GO[j4]
set Zb[Eb]="when calling noteToPlayer in Diplomacy, line 29"
set Eb=Eb+1
call DisplayTimedTextToPlayer(M4,0.,0.,10.0,Uww(M4,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(M4,0.,0.,10.0,R4+" has declared war on "+G4)
set Eb=Eb-1
endif
set j4=j4+1
endloop
elseif k4==1093677397 then
set w2=nO[g4]
set Zb[Eb]="when calling getAllianceState in Diplomacy, line 32"
set Eb=Eb+1
if xb[w2]==0 then
if w2==0 then
call r7("Nullpointer exception when calling PlayerStats.getAllianceState","when calling error in PlayerStats, line 38")
else
call r7("Called PlayerStats.getAllianceState on invalid object.","when calling error in PlayerStats, line 38")
endif
endif
set Zb[Eb]="when calling getAllianceState in PlayerStats, line 38"
set Eb=Eb+1
set u2=Eaw(w2,GetPlayerId(Y4),"when reading array PlayerStats_alliance_states in PlayerStats, line 39")
set Eb=Eb-1-1
if u2==bj_ALLIANCE_ALLIED_VISION then
set Eb=Eb-1
set T4=null
set Y4=null
set h4=null
set F4=null
set P4=null
set A4=null
set C4=null
set V4=null
set B4=null
set N4=null
set M4=null
set t2=null
set i2=null
set S2=null
set c2=null
set o2=null
set p2=null
set e2=null
set q2=null
set a2=null
set n2=null
set Y2=null
set G2=null
set g2=null
set h2=null
set F2=null
set m2=null
set Q2=null
set W2=null
set E2=null
set Z2=null
set U2=null
set I2=null
return
endif
set r2=nO[g4]
set s2=bj_ALLIANCE_ALLIED_VISION
set Zb[Eb]="when calling setAlliance in Diplomacy, line 34"
set Eb=Eb+1
if xb[r2]==0 then
if r2==0 then
call r7("Nullpointer exception when calling PlayerStats.setAlliance","when calling error in PlayerStats, line 27")
else
call r7("Called PlayerStats.setAlliance on invalid object.","when calling error in PlayerStats, line 27")
endif
endif
call Ntw(r2,Y4,s2,"when calling setAlliance in PlayerStats, line 27")
set Eb=Eb-1
set v4=0
set m4=23
loop
exitwhen v4>m4
set t2=GO[v4]
set i2=CreateForce()
call ForceAddPlayer(i2,t2)
if GO[v4]==Y4 then
set S2=GO[v4]
set Zb[Eb]="when calling goodNewsToPlayer in Diplomacy, line 39"
set Eb=Eb+1
call DisplayTimedTextToPlayer(S2,0.,0.,10.0,Jww(S2,"when calling getGoodNewsStringForPlayer in Messages, line 85"))
call DisplayTimedTextToPlayer(S2,0.,0.,10.0,R4+" wants to ally you")
set Eb=Eb-1
elseif i2==h4 or i2==F4 then
set c2=GO[v4]
set Zb[Eb]="when calling noteToPlayer in Diplomacy, line 41"
set Eb=Eb+1
call DisplayTimedTextToPlayer(c2,0.,0.,10.0,Uww(c2,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(c2,0.,0.,10.0,R4+" allied "+G4)
set Eb=Eb-1
else
set o2=GO[v4]
set Zb[Eb]="when calling noteToPlayer in Diplomacy, line 43"
set Eb=Eb+1
call DisplayTimedTextToPlayer(o2,0.,0.,10.0,Uww(o2,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(o2,0.,0.,10.0,R4+" allied "+G4)
set Eb=Eb-1
endif
set v4=v4+1
endloop
elseif k4==1093677398 then
set O2=nO[g4]
set Zb[Eb]="when calling getAllianceState in Diplomacy, line 46"
set Eb=Eb+1
if xb[O2]==0 then
if O2==0 then
call r7("Nullpointer exception when calling PlayerStats.getAllianceState","when calling error in PlayerStats, line 38")
else
call r7("Called PlayerStats.getAllianceState on invalid object.","when calling error in PlayerStats, line 38")
endif
endif
set Zb[Eb]="when calling getAllianceState in PlayerStats, line 38"
set Eb=Eb+1
set l2=Eaw(O2,GetPlayerId(Y4),"when reading array PlayerStats_alliance_states in PlayerStats, line 39")
set Eb=Eb-1-1
if l2==bj_ALLIANCE_NEUTRAL then
set Eb=Eb-1
set T4=null
set Y4=null
set h4=null
set F4=null
set P4=null
set A4=null
set C4=null
set V4=null
set B4=null
set N4=null
set M4=null
set t2=null
set i2=null
set S2=null
set c2=null
set o2=null
set p2=null
set e2=null
set q2=null
set a2=null
set n2=null
set Y2=null
set G2=null
set g2=null
set h2=null
set F2=null
set m2=null
set Q2=null
set W2=null
set E2=null
set Z2=null
set U2=null
set I2=null
return
endif
set b2=nO[g4]
set y2=bj_ALLIANCE_NEUTRAL
set Zb[Eb]="when calling setAlliance in Diplomacy, line 48"
set Eb=Eb+1
if xb[b2]==0 then
if b2==0 then
call r7("Nullpointer exception when calling PlayerStats.setAlliance","when calling error in PlayerStats, line 27")
else
call r7("Called PlayerStats.setAlliance on invalid object.","when calling error in PlayerStats, line 27")
endif
endif
call Ntw(b2,Y4,y2,"when calling setAlliance in PlayerStats, line 27")
set Eb=Eb-1
set Q4=0
set W4=23
loop
exitwhen Q4>W4
set p2=GO[Q4]
set e2=CreateForce()
call ForceAddPlayer(e2,p2)
if GO[Q4]==Y4 then
set q2=GO[Q4]
set Zb[Eb]="when calling noteToPlayer in Diplomacy, line 53"
set Eb=Eb+1
call DisplayTimedTextToPlayer(q2,0.,0.,10.0,Uww(q2,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(q2,0.,0.,10.0,R4+" is now neutral towards you")
set Eb=Eb-1
elseif e2==h4 or e2==F4 then
set a2=GO[Q4]
set Zb[Eb]="when calling noteToPlayer in Diplomacy, line 55"
set Eb=Eb+1
call DisplayTimedTextToPlayer(a2,0.,0.,10.0,Uww(a2,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(a2,0.,0.,10.0,R4+" shows "+G4+" neutrality")
set Eb=Eb-1
else
set n2=GO[Q4]
set Zb[Eb]="when calling noteToPlayer in Diplomacy, line 57"
set Eb=Eb+1
call DisplayTimedTextToPlayer(n2,0.,0.,10.0,Uww(n2,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(n2,0.,0.,10.0,R4+" shows "+G4+" neutrality")
set Eb=Eb-1
endif
set Q4=Q4+1
endloop
elseif k4==1093677400 then
set d2=nO[g4]
set Zb[Eb]="when calling getAllianceState in Diplomacy, line 60"
set Eb=Eb+1
if xb[d2]==0 then
if d2==0 then
call r7("Nullpointer exception when calling PlayerStats.getAllianceState","when calling error in PlayerStats, line 38")
else
call r7("Called PlayerStats.getAllianceState on invalid object.","when calling error in PlayerStats, line 38")
endif
endif
set Zb[Eb]="when calling getAllianceState in PlayerStats, line 38"
set Eb=Eb+1
set f2=Eaw(d2,GetPlayerId(Y4),"when reading array PlayerStats_alliance_states in PlayerStats, line 39")
set Eb=Eb-1-1
if f2==bj_ALLIANCE_NEUTRAL then
set Eb=Eb-1
set T4=null
set Y4=null
set h4=null
set F4=null
set P4=null
set A4=null
set C4=null
set V4=null
set B4=null
set N4=null
set M4=null
set t2=null
set i2=null
set S2=null
set c2=null
set o2=null
set p2=null
set e2=null
set q2=null
set a2=null
set n2=null
set Y2=null
set G2=null
set g2=null
set h2=null
set F2=null
set m2=null
set Q2=null
set W2=null
set E2=null
set Z2=null
set U2=null
set I2=null
return
endif
set R2=nO[g4]
set T2=bj_ALLIANCE_NEUTRAL
set Zb[Eb]="when calling setAlliance in Diplomacy, line 62"
set Eb=Eb+1
if xb[R2]==0 then
if R2==0 then
call r7("Nullpointer exception when calling PlayerStats.setAlliance","when calling error in PlayerStats, line 27")
else
call r7("Called PlayerStats.setAlliance on invalid object.","when calling error in PlayerStats, line 27")
endif
endif
call Ntw(R2,Y4,T2,"when calling setAlliance in PlayerStats, line 27")
set Eb=Eb-1
set E4=0
set Z4=23
loop
exitwhen E4>Z4
set Y2=GO[E4]
set G2=CreateForce()
call ForceAddPlayer(G2,Y2)
if GO[E4]==Y4 then
set g2=GO[E4]
set Zb[Eb]="when calling noteToPlayer in Diplomacy, line 67"
set Eb=Eb+1
call DisplayTimedTextToPlayer(g2,0.,0.,10.0,Uww(g2,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(g2,0.,0.,10.0,R4+" unallies you!")
set Eb=Eb-1
elseif G2==h4 or G2==F4 then
set h2=GO[E4]
set Zb[Eb]="when calling noteToPlayer in Diplomacy, line 69"
set Eb=Eb+1
call DisplayTimedTextToPlayer(h2,0.,0.,10.0,Uww(h2,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(h2,0.,0.,10.0,R4+" unallied "+G4)
set Eb=Eb-1
else
set F2=GO[E4]
set Zb[Eb]="when calling noteToPlayer in Diplomacy, line 71"
set Eb=Eb+1
call DisplayTimedTextToPlayer(F2,0.,0.,10.0,Uww(F2,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(F2,0.,0.,10.0,R4+" unallied "+G4)
set Eb=Eb-1
endif
set E4=E4+1
endloop
elseif k4==1093677399 then
set k2=nO[g4]
set Zb[Eb]="when calling getAllianceState in Diplomacy, line 76"
set Eb=Eb+1
if xb[k2]==0 then
if k2==0 then
call r7("Nullpointer exception when calling PlayerStats.getAllianceState","when calling error in PlayerStats, line 38")
else
call r7("Called PlayerStats.getAllianceState on invalid object.","when calling error in PlayerStats, line 38")
endif
endif
set Zb[Eb]="when calling getAllianceState in PlayerStats, line 38"
set Eb=Eb+1
set j2=Eaw(k2,GetPlayerId(Y4),"when reading array PlayerStats_alliance_states in PlayerStats, line 39")
set Eb=Eb-1-1
if j2==bj_ALLIANCE_ALLIED_ADVUNITS then
set Eb=Eb-1
set T4=null
set Y4=null
set h4=null
set F4=null
set P4=null
set A4=null
set C4=null
set V4=null
set B4=null
set N4=null
set M4=null
set t2=null
set i2=null
set S2=null
set c2=null
set o2=null
set p2=null
set e2=null
set q2=null
set a2=null
set n2=null
set Y2=null
set G2=null
set g2=null
set h2=null
set F2=null
set m2=null
set Q2=null
set W2=null
set E2=null
set Z2=null
set U2=null
set I2=null
return
endif
set x2=nO[g4]
set v2=bj_ALLIANCE_ALLIED_ADVUNITS
set Zb[Eb]="when calling setAlliance in Diplomacy, line 78"
set Eb=Eb+1
if xb[x2]==0 then
if x2==0 then
call r7("Nullpointer exception when calling PlayerStats.setAlliance","when calling error in PlayerStats, line 27")
else
call r7("Called PlayerStats.setAlliance on invalid object.","when calling error in PlayerStats, line 27")
endif
endif
call Ntw(x2,Y4,v2,"when calling setAlliance in PlayerStats, line 27")
set Eb=Eb-1
set bO[GetPlayerId(Y4)]=null
set bO[GetPlayerId(Y4)]=hww("when calling createCoEMultiboard in Diplomacy, line 83")
set m2=bO[GetPlayerId(Y4)]
if gO==Y4 then
call MultiboardDisplay(m2,true)
endif
set bO[GetPlayerId(T4)]=null
set bO[GetPlayerId(T4)]=hww("when calling createCoEMultiboard in Diplomacy, line 87")
set Q2=bO[GetPlayerId(T4)]
if gO==T4 then
call MultiboardDisplay(Q2,true)
endif
set U4=0
set I4=23
loop
exitwhen U4>I4
set W2=GO[U4]
set E2=CreateForce()
call ForceAddPlayer(E2,W2)
if GO[U4]==Y4 then
set Z2=GO[U4]
set Zb[Eb]="when calling goodNewsToPlayer in Diplomacy, line 95"
set Eb=Eb+1
call DisplayTimedTextToPlayer(Z2,0.,0.,10.0,Jww(Z2,"when calling getGoodNewsStringForPlayer in Messages, line 85"))
call DisplayTimedTextToPlayer(Z2,0.,0.,10.0,R4+" wants to share his rule with you!")
set Eb=Eb-1
elseif E2==h4 or E2==F4 then
set U2=GO[U4]
set Zb[Eb]="when calling noteToPlayer in Diplomacy, line 97"
set Eb=Eb+1
call DisplayTimedTextToPlayer(U2,0.,0.,10.0,Uww(U2,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(U2,0.,0.,10.0,R4+" now shares rule with "+G4)
set Eb=Eb-1
else
set I2=GO[U4]
set Zb[Eb]="when calling noteToPlayer in Diplomacy, line 99"
set Eb=Eb+1
call DisplayTimedTextToPlayer(I2,0.,0.,10.0,Uww(I2,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(I2,0.,0.,10.0,R4+" now shares rule with "+G4)
set Eb=Eb-1
endif
set U4=U4+1
endloop
endif
set Eb=Eb-1
set T4=null
set Y4=null
set h4=null
set F4=null
set P4=null
set A4=null
set C4=null
set V4=null
set B4=null
set N4=null
set M4=null
set t2=null
set i2=null
set S2=null
set c2=null
set o2=null
set p2=null
set e2=null
set q2=null
set a2=null
set n2=null
set Y2=null
set G2=null
set g2=null
set h2=null
set F2=null
set m2=null
set Q2=null
set W2=null
set E2=null
set Z2=null
set U2=null
set I2=null
endfunction
function faw takes nothing returns nothing
set Eb=0
call P2("Diplomacy, line 116")
endfunction
function fg takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989078 then
return false
endif
return true
endfunction
function fj takes nothing returns nothing
local player oj=GetOwningPlayer(GetSpellTargetUnit())
local playerstate Oj=PLAYER_STATE_RESOURCE_GOLD
local playerstate lj
local playerstate bj
local player yj
local force pj
local location ej
local real qj
local real aj
local player nj
local force dj
if Oj==PLAYER_STATE_RESOURCE_GOLD then
set lj=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(oj,lj,GetPlayerState(oj,lj)+500)
elseif Oj==PLAYER_STATE_RESOURCE_LUMBER then
set bj=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(oj,bj,GetPlayerState(oj,bj)+500)
endif
call SetPlayerState(oj,Oj,GetPlayerState(oj,Oj)+500)
call RemoveUnit(GetSpellAbilityUnit())
set yj=GetOwningPlayer(GetSpellTargetUnit())
set pj=CreateForce()
call ForceAddPlayer(pj,yj)
if IsPlayerInForce(GetLocalPlayer(),pj) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_1234")
endif
set e=GetUnitLoc(GetSpellTargetUnit())
set nj=GetOwningPlayer(GetSpellTargetUnit())
set dj=CreateForce()
call ForceAddPlayer(dj,nj)
set ej=e
set qj=GetLocationX(ej)
set aj=GetLocationY(ej)
if IsPlayerInForce(GetLocalPlayer(),dj) then
call PingMinimap(qj,aj,2.00)
endif
call RemoveLocation(e)
set oj=null
set Oj=null
set lj=null
set bj=null
set yj=null
set pj=null
set ej=null
set nj=null
set dj=null
endfunction
function dm takes nothing returns boolean
if GetResearched()!=1378889801 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889801,true)!=2 then
return false
endif
return true
endfunction
function fm takes nothing returns boolean
if not dm() then
return false
endif
return true
endfunction
function initializeTable takes string stackPos returns nothing
local integer i_2
local integer this
local integer parentKey
set Zb[Eb]=stackPos
set Eb=Eb+1
set i_2=0
loop
exitwhen i_2>15
set this=Ac
set parentKey=StringHash(Pc[i_2])
set stackPos="when calling saveInt in Colors, line 206"
set Zb[Eb]="when calling saveInt in Colors, line 206"
set Eb=Eb+1
if Ob[this]==0 then
if this==0 then
call r7("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call r7("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Ol,this,parentKey,i_2)
set Eb=Eb-1
set i_2=i_2+1
endloop
set Eb=Eb-1
endfunction
function N3 takes string B3 returns boolean
set Zb[Eb]=B3
set Eb=Eb+1
set Zc[0]=255
set Uc[0]=2
set Ic[0]=2
set Zc[1]=0
set Uc[1]=65
set Ic[1]=255
set Zc[2]=27
set Uc[2]=229
set Ic[2]=184
set Zc[3]=83
set Uc[3]=0
set Ic[3]=128
set Zc[4]=255
set Uc[4]=252
set Ic[4]=0
set Zc[5]=254
set Uc[5]=137
set Ic[5]=13
set Zc[6]=31
set Uc[6]=191
set Ic[6]=0
set Zc[7]=228
set Uc[7]=90
set Ic[7]=175
set Zc[8]=148
set Uc[8]=149
set Ic[8]=150
set Zc[9]=125
set Uc[9]=190
set Ic[9]=241
set Zc[10]=15
set Uc[10]=97
set Ic[10]=69
set Zc[11]=77
set Uc[11]=41
set Ic[11]=3
set Zc[12]=155
set Uc[12]=0
set Ic[12]=0
set Zc[13]=0
set Uc[13]=0
set Ic[13]=195
set Zc[14]=0
set Uc[14]=234
set Ic[14]=255
set Zc[15]=190
set Uc[15]=0
set Ic[15]=254
set Zc[16]=235
set Uc[16]=205
set Ic[16]=135
set Zc[17]=248
set Uc[17]=164
set Ic[17]=139
set Zc[18]=191
set Uc[18]=255
set Ic[18]=128
set Zc[19]=220
set Uc[19]=185
set Ic[19]=235
set Zc[20]=40
set Uc[20]=40
set Ic[20]=40
set Zc[21]=235
set Uc[21]=240
set Ic[21]=255
set Zc[22]=0
set Uc[22]=120
set Ic[22]=30
set Zc[23]=164
set Uc[23]=11
set Ic[23]=51
set Pc[0]="0"
set Pc[1]="1"
set Pc[2]="2"
set Pc[3]="3"
set Pc[4]="4"
set Pc[5]="5"
set Pc[6]="6"
set Pc[7]="7"
set Pc[8]="8"
set Pc[9]="9"
set Pc[10]="A"
set Pc[11]="B"
set Pc[12]="C"
set Pc[13]="D"
set Pc[14]="E"
set Pc[15]="F"
set Ac=oow("when calling new_Table in Colors, line 154")
call initializeTable("when calling initializeTable in Colors, line 209")
set Eb=Eb-1
return true
endfunction
function fqw takes nothing returns boolean
set Eb=0
return N3("Colors, line 1")
endfunction
function g1 takes nothing returns boolean
local trigger T1=CreateTrigger()
local trigger R1
local integer Y1
local integer G1
call TriggerAddCondition(T1,Condition(Ff))
call TriggerAddAction(T1,kf)
set R1=T1
set Y1=0
set G1=23
loop
exitwhen Y1>G1
call TriggerRegisterPlayerChatEvent(R1,GO[Y1],"-",false)
set Y1=Y1+1
endloop
set R1=null
set T1=null
return true
endfunction
function gD takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function gI takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651855,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651851,0)
endfunction
function GK takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989317 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function gK takes nothing returns boolean
if not GK() then
return false
endif
return true
endfunction
function GZ takes nothing returns boolean
if GetResearched()!=1378889797 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889797,true)!=1 then
return false
endif
return true
endfunction
function gZ takes nothing returns boolean
if not GZ() then
return false
endif
return true
endfunction
function Alw takes string Qlw returns nothing
local unit Wlw
local integer Elw
local player Zlw
local integer Ulw
local integer Ilw
local boolean Plw
set Zb[Eb]=Qlw
set Eb=Eb+1
set Wlw=GetEnteringUnit()
set Elw=GetPlayerId(GetOwningPlayer(Wlw))
set Zlw=GO[Elw]
if GetPlayerSlotState(Zlw)==PLAYER_SLOT_STATE_PLAYING then
set Plw=GetPlayerController(Zlw)==MAP_CONTROL_USER
else
set Plw=false
endif
if Plw and(not IsUnitType(Wlw,UNIT_TYPE_STRUCTURE)) then
set Ulw=nO[Elw]
set Ilw=-GetUnitLevel(Wlw)
set Zb[Eb]="when calling changeUpkeep in Upkeep, line 12"
set Eb=Eb+1
if xb[Ulw]==0 then
if Ulw==0 then
call r7("Nullpointer exception when calling PlayerStats.changeUpkeep","when calling error in PlayerStats, line 23")
else
call r7("Called PlayerStats.changeUpkeep on invalid object.","when calling error in PlayerStats, line 23")
endif
endif
set YO[Ulw]=YO[Ulw]+Ilw
set Eb=Eb-1
endif
set Eb=Eb-1
set Wlw=null
set Zlw=null
endfunction
function gaw takes nothing returns nothing
set Eb=0
call Alw("Upkeep, line 8")
endfunction
function gj takes nothing returns nothing
call SetMapFlag(MAP_LOCK_RESOURCE_TRADING,false)
endfunction
function Lew takes integer bew,integer yew,integer pew,integer eew,integer qew,integer aew,integer dew,integer few,integer Rew,integer Tew,integer Yew,integer Gew,integer gew,integer hew,integer Few,integer kew,integer jew,integer xew,integer vew,integer mew,integer Qew,integer Wew,integer Eew,integer Zew,integer Uew,integer Iew,integer Pew,integer Aew,integer Dew,integer Hew,string Jew returns integer
local integer Kew
set Zb[Eb]=Jew
set Eb=Eb+1
set Kew=p9("when calling new_LinkedList in LinkedList, line 391")
call bpw(Kew,bew,"when calling add in LinkedList, line 393")
call bpw(Kew,yew,"when calling add in LinkedList, line 393")
call bpw(Kew,pew,"when calling add in LinkedList, line 393")
call bpw(Kew,eew,"when calling add in LinkedList, line 393")
call bpw(Kew,qew,"when calling add in LinkedList, line 393")
call bpw(Kew,aew,"when calling add in LinkedList, line 393")
call bpw(Kew,dew,"when calling add in LinkedList, line 393")
call bpw(Kew,few,"when calling add in LinkedList, line 393")
call bpw(Kew,Rew,"when calling add in LinkedList, line 393")
call bpw(Kew,Tew,"when calling add in LinkedList, line 393")
call bpw(Kew,Yew,"when calling add in LinkedList, line 393")
call bpw(Kew,Gew,"when calling add in LinkedList, line 393")
call bpw(Kew,gew,"when calling add in LinkedList, line 393")
call bpw(Kew,hew,"when calling add in LinkedList, line 393")
call bpw(Kew,Few,"when calling add in LinkedList, line 393")
call bpw(Kew,kew,"when calling add in LinkedList, line 393")
call bpw(Kew,jew,"when calling add in LinkedList, line 393")
call bpw(Kew,xew,"when calling add in LinkedList, line 393")
call bpw(Kew,vew,"when calling add in LinkedList, line 393")
call bpw(Kew,mew,"when calling add in LinkedList, line 393")
call bpw(Kew,Qew,"when calling add in LinkedList, line 393")
call bpw(Kew,Wew,"when calling add in LinkedList, line 393")
call bpw(Kew,Eew,"when calling add in LinkedList, line 393")
call bpw(Kew,Zew,"when calling add in LinkedList, line 393")
call bpw(Kew,Uew,"when calling add in LinkedList, line 393")
call bpw(Kew,Iew,"when calling add in LinkedList, line 393")
call bpw(Kew,Pew,"when calling add in LinkedList, line 393")
call bpw(Kew,Aew,"when calling add in LinkedList, line 393")
call bpw(Kew,Dew,"when calling add in LinkedList, line 393")
call bpw(Kew,Hew,"when calling add in LinkedList, line 393")
set Eb=Eb-1
return Kew
endfunction
function dqw takes integer Xew,integer Cew,integer Vew,integer Bew,integer New,integer Mew,integer wqw,integer uqw,integer rqw,integer sqw,integer tqw,integer iqw,integer Sqw,integer cqw,integer oqw,integer Oqw,integer lqw,integer bqw,integer yqw,integer pqw,integer eqw,integer qqw,string aqw returns integer
local integer nqw
set Zb[Eb]=aqw
set Eb=Eb+1
set nqw=p9("when calling new_LinkedList in LinkedList, line 391")
call bpw(nqw,Xew,"when calling add in LinkedList, line 393")
call bpw(nqw,Cew,"when calling add in LinkedList, line 393")
call bpw(nqw,Vew,"when calling add in LinkedList, line 393")
call bpw(nqw,Bew,"when calling add in LinkedList, line 393")
call bpw(nqw,New,"when calling add in LinkedList, line 393")
call bpw(nqw,Mew,"when calling add in LinkedList, line 393")
call bpw(nqw,wqw,"when calling add in LinkedList, line 393")
call bpw(nqw,uqw,"when calling add in LinkedList, line 393")
call bpw(nqw,rqw,"when calling add in LinkedList, line 393")
call bpw(nqw,sqw,"when calling add in LinkedList, line 393")
call bpw(nqw,tqw,"when calling add in LinkedList, line 393")
call bpw(nqw,iqw,"when calling add in LinkedList, line 393")
call bpw(nqw,Sqw,"when calling add in LinkedList, line 393")
call bpw(nqw,cqw,"when calling add in LinkedList, line 393")
call bpw(nqw,oqw,"when calling add in LinkedList, line 393")
call bpw(nqw,Oqw,"when calling add in LinkedList, line 393")
call bpw(nqw,lqw,"when calling add in LinkedList, line 393")
call bpw(nqw,bqw,"when calling add in LinkedList, line 393")
call bpw(nqw,yqw,"when calling add in LinkedList, line 393")
call bpw(nqw,pqw,"when calling add in LinkedList, line 393")
call bpw(nqw,eqw,"when calling add in LinkedList, line 393")
call bpw(nqw,qqw,"when calling add in LinkedList, line 393")
set Eb=Eb-1
return nqw
endfunction
function lew takes integer Jpw,integer Kpw,integer Lpw,integer Xpw,integer Cpw,integer Vpw,integer Bpw,integer Npw,integer Mpw,integer wew,integer uew,integer rew,integer sew,integer tew,integer iew,integer Sew,integer cew,string oew returns integer
local integer Oew
set Zb[Eb]=oew
set Eb=Eb+1
set Oew=p9("when calling new_LinkedList in LinkedList, line 391")
call bpw(Oew,Jpw,"when calling add in LinkedList, line 393")
call bpw(Oew,Kpw,"when calling add in LinkedList, line 393")
call bpw(Oew,Lpw,"when calling add in LinkedList, line 393")
call bpw(Oew,Xpw,"when calling add in LinkedList, line 393")
call bpw(Oew,Cpw,"when calling add in LinkedList, line 393")
call bpw(Oew,Vpw,"when calling add in LinkedList, line 393")
call bpw(Oew,Bpw,"when calling add in LinkedList, line 393")
call bpw(Oew,Npw,"when calling add in LinkedList, line 393")
call bpw(Oew,Mpw,"when calling add in LinkedList, line 393")
call bpw(Oew,wew,"when calling add in LinkedList, line 393")
call bpw(Oew,uew,"when calling add in LinkedList, line 393")
call bpw(Oew,rew,"when calling add in LinkedList, line 393")
call bpw(Oew,sew,"when calling add in LinkedList, line 393")
call bpw(Oew,tew,"when calling add in LinkedList, line 393")
call bpw(Oew,iew,"when calling add in LinkedList, line 393")
call bpw(Oew,Sew,"when calling add in LinkedList, line 393")
call bpw(Oew,cew,"when calling add in LinkedList, line 393")
set Eb=Eb-1
return Oew
endfunction
function Glw takes string LOw returns boolean
local integer XOw
local integer COw
local integer VOw
local integer BOw
local integer NOw
local integer MOw
local integer wlw
local integer ulw
local integer rlw
local integer slw
local integer tlw
local integer ilw
local integer Slw
local integer clw
local integer olw
local integer Olw
local integer llw
local integer blw
local integer ylw
local integer plw
local integer elw
local integer qlw
local integer alw
local integer nlw
local integer dlw
local integer flw
local integer Rlw
local integer Tlw
local integer Ylw
set Zb[Eb]=LOw
set Eb=Eb+1
set Zb[Eb]="when calling asList in Units, line 115"
set Eb=Eb+1
set COw=p9("when calling new_LinkedList in LinkedList, line 391")
call bpw(COw,1747989317,"when calling add in LinkedList, line 393")
call bpw(COw,1747989305,"when calling add in LinkedList, line 393")
call bpw(COw,1747989316,"when calling add in LinkedList, line 393")
call bpw(COw,1747989315,"when calling add in LinkedList, line 393")
set Eb=Eb-1
set fl=COw
set Rl=Z7("when calling new_HashMap in Units, line 116")
set Tl[0]=lew(1747988528,1747988528,1747988528,1747988528,1747988528,1747988528,1747988532,1747988532,1747988532,1747988532,1211118401,1747989058,1747989058,1747989058,1747989058,1747989058,1747989058,"when calling asList in Units, line 123")
set Tl[1]=lew(1747990339,1747990339,1747990339,1747990339,1747990339,1747990339,1747990340,1747990340,1747990340,1747990340,1211119699,1747990593,1747990593,1747990593,1747990593,1747990593,1747990593,"when calling asList in Units, line 128")
set Tl[2]=lew(1747990087,1747990087,1747990087,1747990087,1747990087,1747990087,1747990088,1747990088,1747990088,1747990088,1211119701,1747989817,1747989817,1747989817,1747989817,1747989817,1747989817,"when calling asList in Units, line 134")
set Tl[3]=lew(1747989558,1747989558,1747989558,1747989558,1747989558,1747989558,1747989575,1747989575,1747989575,1747989575,1211119700,1747989571,1747989571,1747989571,1747989571,1747989571,1747989571,"when calling asList in Units, line 140")
set Zb[Eb]="when calling asList in Units, line 148"
set Eb=Eb+1
set VOw=p9("when calling new_LinkedList in LinkedList, line 391")
call bpw(VOw,1747989558,"when calling add in LinkedList, line 393")
call bpw(VOw,1747990339,"when calling add in LinkedList, line 393")
call bpw(VOw,1747990087,"when calling add in LinkedList, line 393")
call bpw(VOw,1747988528,"when calling add in LinkedList, line 393")
call bpw(VOw,1747989575,"when calling add in LinkedList, line 393")
call bpw(VOw,1747990340,"when calling add in LinkedList, line 393")
call bpw(VOw,1747990088,"when calling add in LinkedList, line 393")
call bpw(VOw,1747988532,"when calling add in LinkedList, line 393")
set Eb=Eb-1
set Yl=VOw
set Zb[Eb]="when calling asList in Units, line 160"
set Eb=Eb+1
set BOw=p9("when calling new_LinkedList in LinkedList, line 391")
call bpw(BOw,1747988529,"when calling add in LinkedList, line 393")
call bpw(BOw,1747988530,"when calling add in LinkedList, line 393")
call bpw(BOw,1747988531,"when calling add in LinkedList, line 393")
call bpw(BOw,1747990326,"when calling add in LinkedList, line 393")
call bpw(BOw,1747990327,"when calling add in LinkedList, line 393")
call bpw(BOw,1747990328,"when calling add in LinkedList, line 393")
call bpw(BOw,1747990084,"when calling add in LinkedList, line 393")
call bpw(BOw,1747990087,"when calling add in LinkedList, line 393")
call bpw(BOw,1747990085,"when calling add in LinkedList, line 393")
call bpw(BOw,1747989590,"when calling add in LinkedList, line 393")
call bpw(BOw,1747989591,"when calling add in LinkedList, line 393")
call bpw(BOw,1747989592,"when calling add in LinkedList, line 393")
set Eb=Eb-1
set Gl=BOw
set Zb[Eb]="when calling asList in Units, line 175"
set Eb=Eb+1
set NOw=p9("when calling new_LinkedList in LinkedList, line 391")
call bpw(NOw,1747989059,"when calling add in LinkedList, line 393")
call bpw(NOw,1747989060,"when calling add in LinkedList, line 393")
call bpw(NOw,1747988844,"when calling add in LinkedList, line 393")
call bpw(NOw,1747990351,"when calling add in LinkedList, line 393")
call bpw(NOw,1747990352,"when calling add in LinkedList, line 393")
call bpw(NOw,1747990356,"when calling add in LinkedList, line 393")
call bpw(NOw,1747989331,"when calling add in LinkedList, line 393")
call bpw(NOw,1747990350,"when calling add in LinkedList, line 393")
call bpw(NOw,1747989809,"when calling add in LinkedList, line 393")
call bpw(NOw,1747990353,"when calling add in LinkedList, line 393")
call bpw(NOw,1747990354,"when calling add in LinkedList, line 393")
call bpw(NOw,1747990355,"when calling add in LinkedList, line 393")
set Eb=Eb-1
set gl=Lew(1747988529,1747988530,1747988531,1747990326,1747990327,1747990328,1747990084,1747990087,1747990085,1747989590,1747989591,1747989592,1747989555,1747989297,1747989325,1747989059,1747989060,1747988844,1747990351,1747990352,1747990356,1747989331,1747990350,1747989809,1747990353,1747990354,1747990355,1747989589,1747988555,1747988556,"when calling asList in Units, line 190")
set Zb[Eb]="when calling asList in Units, line 204"
set Eb=Eb+1
set MOw=p9("when calling new_LinkedList in LinkedList, line 391")
call bpw(MOw,1747989321,"when calling add in LinkedList, line 393")
call bpw(MOw,1747989321,"when calling add in LinkedList, line 393")
call bpw(MOw,1747989321,"when calling add in LinkedList, line 393")
call bpw(MOw,1747989321,"when calling add in LinkedList, line 393")
call bpw(MOw,1747989321,"when calling add in LinkedList, line 393")
call bpw(MOw,1747989321,"when calling add in LinkedList, line 393")
call bpw(MOw,1747989321,"when calling add in LinkedList, line 393")
call bpw(MOw,1747989321,"when calling add in LinkedList, line 393")
set Eb=Eb-1
set hl[0]=MOw
set Zb[Eb]="when calling asList in Units, line 205"
set Eb=Eb+1
set wlw=p9("when calling new_LinkedList in LinkedList, line 391")
call bpw(wlw,1747989321,"when calling add in LinkedList, line 393")
call bpw(wlw,1747989321,"when calling add in LinkedList, line 393")
call bpw(wlw,1747989321,"when calling add in LinkedList, line 393")
call bpw(wlw,1747989321,"when calling add in LinkedList, line 393")
call bpw(wlw,1747989326,"when calling add in LinkedList, line 393")
call bpw(wlw,1747989326,"when calling add in LinkedList, line 393")
call bpw(wlw,1747989321,"when calling add in LinkedList, line 393")
call bpw(wlw,1747989321,"when calling add in LinkedList, line 393")
call bpw(wlw,1747989321,"when calling add in LinkedList, line 393")
call bpw(wlw,1747989321,"when calling add in LinkedList, line 393")
set Eb=Eb-1
set hl[1]=wlw
set Zb[Eb]="when calling asList in Units, line 206"
set Eb=Eb+1
set ulw=p9("when calling new_LinkedList in LinkedList, line 391")
call bpw(ulw,1747989321,"when calling add in LinkedList, line 393")
call bpw(ulw,1747989321,"when calling add in LinkedList, line 393")
call bpw(ulw,1747989321,"when calling add in LinkedList, line 393")
call bpw(ulw,1747989321,"when calling add in LinkedList, line 393")
call bpw(ulw,1747989326,"when calling add in LinkedList, line 393")
call bpw(ulw,1747989326,"when calling add in LinkedList, line 393")
call bpw(ulw,1747989326,"when calling add in LinkedList, line 393")
call bpw(ulw,1747989326,"when calling add in LinkedList, line 393")
call bpw(ulw,1747989326,"when calling add in LinkedList, line 393")
call bpw(ulw,1747989326,"when calling add in LinkedList, line 393")
call bpw(ulw,1747989337,"when calling add in LinkedList, line 393")
call bpw(ulw,1747989337,"when calling add in LinkedList, line 393")
set Eb=Eb-1
set hl[2]=ulw
set rlw=GetHandleId(hu)
set slw=GetHandleId(jw)
set tlw=GetHandleId(qw)
set ilw=GetHandleId(aw)
set Slw=GetHandleId(lw)
set clw=GetHandleId(Fu)
set olw=GetHandleId(Gu)
set Olw=GetHandleId(Bw)
set llw=GetHandleId(a)
set blw=GetHandleId(gu)
set ylw=GetHandleId(n)
set plw=GetHandleId(Rw)
set elw=GetHandleId(fw)
set qlw=GetHandleId(Tw)
set alw=GetHandleId(Ow)
set nlw=GetHandleId(bw)
set dlw=GetHandleId(yw)
set flw=GetHandleId(pw)
set Rlw=GetHandleId(ew)
set Tlw=GetHandleId(nw)
set Ylw=GetHandleId(f)
set Fl=dqw(rlw,slw,tlw,ilw,Slw,clw,olw,Olw,llw,blw,ylw,plw,elw,qlw,alw,nlw,dlw,flw,Rlw,Tlw,Ylw,GetHandleId(d),"when calling asList in Units, line 209")
set XOw=Rl
call Tyw(XOw,1747989317,15,"when calling put in Units, line 236")
call Tyw(XOw,1747989305,50,"when calling put in Units, line 237")
call Tyw(XOw,1747989316,25,"when calling put in Units, line 238")
call Tyw(XOw,1747989315,40,"when calling put in Units, line 239")
set Eb=Eb-1
return true
endfunction
function gqw takes nothing returns boolean
set Eb=0
return Glw("Units, line 1")
endfunction
function gww takes nothing returns boolean
return true
endfunction
function gx takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988565,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988563,0)
endfunction
function gU takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function hU takes nothing returns boolean
if not gU() then
return false
endif
return true
endfunction
function gW takes nothing returns boolean
if GetResearched()!=1378889809 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889809,true)!=2 then
return false
endif
return true
endfunction
function hW takes nothing returns boolean
if not gW() then
return false
endif
return true
endfunction
function hY takes nothing returns nothing
local player RY=GetOwningPlayer(GetAttacker())
local player TY=GetOwningPlayer(GetAttacker())
local player YY
local player GY
local unit gY
set r[GetPlayerId(RY)+1]=r[GetPlayerId(TY)+1]+1
set YY=GetOwningPlayer(GetTriggerUnit())
set GY=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(YY)+1]=r[GetPlayerId(GY)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set gY=GetTriggerUnit()
call SetUnitState(gY,UNIT_STATE_LIFE,GetUnitState(gY,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set RY=null
set TY=null
set YY=null
set GY=null
set gY=null
endfunction
function hZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989833,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989834,0)
endfunction
function hj takes nothing returns boolean
if GetUnitTypeId(GetDyingUnit())!=1747989049 then
return false
endif
return true
endfunction
function WL takes string mL returns boolean
local integer QL
set Zb[Eb]=mL
set Eb=Eb+1
set bS=Z7("when calling new_HashMap in CityBaseTaxes, line 5")
set QL=bS
set Zb[Eb]="when calling saveInt in CityBaseTaxes, line 9"
set Eb=Eb+1
if Ob[QL]==0 then
if QL==0 then
call r7("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call r7("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Ol,QL,1747988529,20)
set Eb=Eb-1
set Zb[Eb]="when calling saveInt in CityBaseTaxes, line 10"
set Eb=Eb+1
if Ob[QL]==0 then
if QL==0 then
call r7("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call r7("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Ol,QL,1747988530,50)
set Eb=Eb-1
set Zb[Eb]="when calling saveInt in CityBaseTaxes, line 11"
set Eb=Eb+1
if Ob[QL]==0 then
if QL==0 then
call r7("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call r7("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Ol,QL,1747988531,120)
set Eb=Eb-1
set Zb[Eb]="when calling saveInt in CityBaseTaxes, line 12"
set Eb=Eb+1
if Ob[QL]==0 then
if QL==0 then
call r7("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call r7("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Ol,QL,1747990326,20)
set Eb=Eb-1
set Zb[Eb]="when calling saveInt in CityBaseTaxes, line 13"
set Eb=Eb+1
if Ob[QL]==0 then
if QL==0 then
call r7("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call r7("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Ol,QL,1747990327,50)
set Eb=Eb-1
set Zb[Eb]="when calling saveInt in CityBaseTaxes, line 14"
set Eb=Eb+1
if Ob[QL]==0 then
if QL==0 then
call r7("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call r7("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Ol,QL,1747990328,120)
set Eb=Eb-1
set Zb[Eb]="when calling saveInt in CityBaseTaxes, line 15"
set Eb=Eb+1
if Ob[QL]==0 then
if QL==0 then
call r7("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call r7("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Ol,QL,1747990084,20)
set Eb=Eb-1
set Zb[Eb]="when calling saveInt in CityBaseTaxes, line 16"
set Eb=Eb+1
if Ob[QL]==0 then
if QL==0 then
call r7("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call r7("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Ol,QL,1747990087,50)
set Eb=Eb-1
set Zb[Eb]="when calling saveInt in CityBaseTaxes, line 17"
set Eb=Eb+1
if Ob[QL]==0 then
if QL==0 then
call r7("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call r7("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Ol,QL,1747990085,120)
set Eb=Eb-1
set Zb[Eb]="when calling saveInt in CityBaseTaxes, line 18"
set Eb=Eb+1
if Ob[QL]==0 then
if QL==0 then
call r7("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call r7("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Ol,QL,1747989590,20)
set Eb=Eb-1
set Zb[Eb]="when calling saveInt in CityBaseTaxes, line 19"
set Eb=Eb+1
if Ob[QL]==0 then
if QL==0 then
call r7("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call r7("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Ol,QL,1747989591,50)
set Eb=Eb-1
set Zb[Eb]="when calling saveInt in CityBaseTaxes, line 20"
set Eb=Eb+1
if Ob[QL]==0 then
if QL==0 then
call r7("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call r7("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Ol,QL,1747989592,120)
set Eb=Eb-1
set Zb[Eb]="when calling saveInt in CityBaseTaxes, line 22"
set Eb=Eb+1
if Ob[QL]==0 then
if QL==0 then
call r7("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call r7("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Ol,QL,1747989555,5)
set Eb=Eb-1
set Zb[Eb]="when calling saveInt in CityBaseTaxes, line 23"
set Eb=Eb+1
if Ob[QL]==0 then
if QL==0 then
call r7("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call r7("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Ol,QL,1747989297,10)
set Eb=Eb-1
set Zb[Eb]="when calling saveInt in CityBaseTaxes, line 24"
set Eb=Eb+1
if Ob[QL]==0 then
if QL==0 then
call r7("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call r7("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Ol,QL,1747989325,30)
set Eb=Eb-1-1
return true
endfunction
function hqw takes nothing returns boolean
set Eb=0
return WL("CityBaseTaxes, line 1")
endfunction
function i7 takes nothing returns nothing
set lo=lo+0.030
endfunction
function tF takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988793 then
return false
endif
if GetUnitTypeId(GetSpellTargetUnit())!=1747988787 then
return false
endif
return true
endfunction
function iF takes nothing returns boolean
if not tF() then
return false
endif
return true
endfunction
function tJ takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747988809 then
return false
endif
return true
endfunction
function iJ takes nothing returns boolean
if not tJ() then
return false
endif
return true
endfunction
function iW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989559,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989569,0)
endfunction
function eow takes string low returns boolean
local playerunitevent bow
local integer yow
local integer pow
set Zb[Eb]=low
set Eb=Eb+1
set bow=EVENT_PLAYER_UNIT_SPELL_CAST
set Zb[Eb]="when calling alloc_Closure in Taxation, line 6"
set Eb=Eb+1
if jl==0 then
if xl<32768 then
set xl=xl+1
set yow=xl
set vl[yow]=675
else
call r7("Out of memory: Could not create Closure.","when calling error in Taxation, line 6")
set yow=0
endif
else
set jl=jl-1
set yow=kl[jl]
set vl[yow]=675
endif
set Eb=Eb-1
set Tc[yow]=0
set Yc[yow]=0
set Gc[yow]=0
set Zb[Eb]="when calling add in Taxation, line 6"
set Eb=Eb+1
set Zb[Eb]="when calling toIntId in ClosureEvents, line 111"
set Eb=Eb+1
set pow=qc[GetHandleId(bow)]
if pow==0 then
set pow=TM(bow,"when calling registerEventId in ClosureEvents, line 228")
endif
set Eb=Eb-1
set Tc[yow]=pow
if fc[Tc[yow]]!=0 then
set Gc[fc[Tc[yow]]]=yow
set Yc[yow]=fc[Tc[yow]]
endif
set fc[Tc[yow]]=yow
set Eb=Eb-1-1
set bow=null
return true
endfunction
function iaw takes nothing returns boolean
set Eb=0
return eow("Taxation, line 1")
endfunction
function ik takes nothing returns boolean
if GetUnitTypeId(GetDyingUnit())!=1747988791 then
return false
endif
return true
endfunction
function tm takes nothing returns boolean
if GetResearched()!=1378889799 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889799,true)!=2 then
return false
endif
return true
endfunction
function im takes nothing returns boolean
if not tm() then
return false
endif
return true
endfunction
function iow takes nothing returns boolean
set Ol=InitHashtable()
return true
endfunction
function kH takes nothing returns boolean
if GetUnitTypeId(GetConstructedStructure())!=1747989331 then
return false
endif
return true
endfunction
function jH takes nothing returns boolean
if not kH() then
return false
endif
return true
endfunction
function jL takes nothing returns boolean
return true
endfunction
function jOw takes nothing returns boolean
return true
endfunction
function kP takes nothing returns boolean
if GetResearched()!=1378889818 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889818,true)!=1 then
return false
endif
return true
endfunction
function jP takes nothing returns boolean
if not kP() then
return false
endif
return true
endfunction
function jQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990098,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990095,0)
endfunction
function kT takes nothing returns boolean
if GetUnitTypeId(GetConstructedStructure())==1747988803 then
return true
endif
return false
endfunction
function jT takes nothing returns boolean
if not kT() then
return false
endif
return true
endfunction
function kv takes nothing returns boolean
if GetResearched()!=1378889802 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889802,true)!=2 then
return false
endif
return true
endfunction
function jv takes nothing returns boolean
if not kv() then
return false
endif
return true
endfunction
function kE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989814,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989825,0)
endfunction
function kJ takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function kL takes nothing returns boolean
return true
endfunction
function kOw takes nothing returns boolean
return true
endfunction
function FQ takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function kQ takes nothing returns boolean
if not FQ() then
return false
endif
return true
endfunction
function km takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988818,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988552,0)
endfunction
function kow takes nothing returns boolean
return true
endfunction
function l3 takes nothing returns boolean
set jc=CreateGroup()
set mc=Filter(Gf)
return true
endfunction
function lD takes nothing returns nothing
call ReplaceUnitBJ(GetTriggerUnit(),1747989554,bj_UNIT_STATE_METHOD_RELATIVE)
call UnitAddAbility(bj_lastReplacedUnit,1093677635)
endfunction
function lE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989582,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989583,0)
endfunction
function lI takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989825,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989817,0)
endfunction
function OK takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990328 then
return false
endif
return true
endfunction
function lK takes nothing returns boolean
if not OK() then
return false
endif
return true
endfunction
function lQ takes nothing returns nothing
set s=bj_FORCE_ALL_PLAYERS
call ForForce(s,ae)
endfunction
function OZ takes nothing returns boolean
if GetResearched()!=1378890033 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890033,true)!=1 then
return false
endif
return true
endfunction
function lZ takes nothing returns boolean
if not OZ() then
return false
endif
return true
endfunction
function law takes nothing returns nothing
set Eb=0
set Zb[Eb]="ClosureEvents, line 286"
set Eb=Eb+1
call VM("when calling generalEventCallback in ClosureEvents, line 286")
set Eb=Eb-1
endfunction
function lx takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988788,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988535,0)
endfunction
function mD takes nothing returns nothing
call UnitAddAbility(GetConstructedStructure(),1093677896)
endfunction
function mG takes nothing returns nothing
local location YG
local location GG
local real gG
local real hG
local rect FG
local group kG
local group jG
local code xG
local boolean vG
set u=GetUnitLoc(GetSpellAbilityUnit())
set YG=u
set o=Location(GetLocationX(YG)+200.00,GetLocationY(YG)+0.00)
set GG=u
set gG=GetLocationX(GG)
set hG=GetLocationY(GG)
set l=Rect(gG-150,hG-140,gG+150,hG+140)
set FG=l
set kG=CreateGroup()
call GroupEnumUnitsInRect(kG,FG,null)
call DestroyBoolExpr(null)
set b=kG
set jG=b
set xG=Ey
set vG=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(jG,xG)
if vG then
call DestroyGroup(jG)
endif
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747988825,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"stand")
call DestroyGroup(b)
call RemoveLocation(o)
call RemoveLocation(u)
set YG=null
set GG=null
set FG=null
set kG=null
set jG=null
endfunction
function mI takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651852,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651855,0)
endfunction
function mT takes nothing returns nothing
local player xT=GetOwningPlayer(GetTriggerUnit())
local player vT=GetOwningPlayer(GetTriggerUnit())
set y[GetPlayerId(xT)+1]=y[GetPlayerId(vT)+1]+100
call UnitAddAbility(GetConstructedStructure(),1093677647)
set xT=null
set vT=null
endfunction
function vY takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989044 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function mY takes nothing returns boolean
if not vY() then
return false
endif
return true
endfunction
function vZ takes nothing returns boolean
if GetResearched()!=1378889797 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889797,true)!=2 then
return false
endif
return true
endfunction
function mZ takes nothing returns boolean
if not vZ() then
return false
endif
return true
endfunction
function mg takes nothing returns nothing
local location Yg
local location Gg
local real gg
local real hg
local rect Fg
local group kg
local group jg
local code xg
local boolean vg
set u=GetUnitLoc(GetSpellAbilityUnit())
set Yg=u
set c=Location(GetLocationX(Yg)+0.00,GetLocationY(Yg)+200.00)
set Gg=u
set gg=GetLocationX(Gg)
set hg=GetLocationY(Gg)
set O=Rect(gg-140,hg-150,gg+140,hg+150)
set Fg=O
set kg=CreateGroup()
call GroupEnumUnitsInRect(kg,Fg,null)
call DestroyBoolExpr(null)
set b=kg
set jg=b
set xg=Ky
set vg=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(jg,xg)
if vg then
call DestroyGroup(jg)
endif
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747989079,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"stand")
call DestroyGroup(b)
call RemoveLocation(c)
call RemoveLocation(u)
set Yg=null
set Gg=null
set Fg=null
set kg=null
set jg=null
endfunction
function mqw takes nothing returns boolean
local integer Fqw
local integer kqw
local integer jqw
local integer xqw
local integer vqw
set Eb=0
set Zb[Eb]="City, line 1"
set Eb=Eb+1
set WS=120.0
set ES[0]=0.0020
set ES[1]=0.0025
set Zb[Eb]="when calling asList in City, line 36"
set Eb=Eb+1
set Fqw=p9("when calling new_LinkedList in LinkedList, line 391")
call bpw(Fqw,10000,"when calling add in LinkedList, line 393")
call bpw(Fqw,20000,"when calling add in LinkedList, line 393")
set Eb=Eb-1
set ZS[0]=Fqw
set Zb[Eb]="when calling asList in City, line 37"
set Eb=Eb+1
set kqw=p9("when calling new_LinkedList in LinkedList, line 391")
call bpw(kqw,30000,"when calling add in LinkedList, line 393")
call bpw(kqw,40000,"when calling add in LinkedList, line 393")
set Eb=Eb-1
set ZS[1]=kqw
set Zb[Eb]="when calling asList in City, line 38"
set Eb=Eb+1
set jqw=p9("when calling new_LinkedList in LinkedList, line 391")
call bpw(jqw,60000,"when calling add in LinkedList, line 393")
call bpw(jqw,90000,"when calling add in LinkedList, line 393")
set Eb=Eb-1
set ZS[2]=jqw
set Zb[Eb]="when calling asList in City, line 39"
set Eb=Eb+1
set xqw=p9("when calling new_LinkedList in LinkedList, line 391")
call bpw(xqw,120000,"when calling add in LinkedList, line 393")
call bpw(xqw,160000,"when calling add in LinkedList, line 393")
set Eb=Eb-1
set ZS[3]=xqw
set Zb[Eb]="when calling asList in City, line 40"
set Eb=Eb+1
set vqw=p9("when calling new_LinkedList in LinkedList, line 391")
call bpw(vqw,180000,"when calling add in LinkedList, line 393")
call bpw(vqw,220000,"when calling add in LinkedList, line 393")
set Eb=Eb-1
set ZS[4]=vqw
set US[0]=1.0
set US[1]=0.5
set US[2]=1.6
set IS[0]=0.0
set IS[1]=20.0
set IS[2]=-30.0
set PS[0]=0.05
set PS[1]=0.0
set PS[2]=0.15
set Eb=Eb-1
return true
endfunction
function msw takes nothing returns boolean
return true
endfunction
function mx takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988566,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988562,0)
endfunction
function nD takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function nF takes nothing returns nothing
local player SF=GetOwningPlayer(GetSpellTargetUnit())
local playerstate cF=PLAYER_STATE_RESOURCE_GOLD
local playerstate oF
local playerstate OF
local player lF
local force bF
local location yF
local real pF
local real eF
local player qF
local force aF
if cF==PLAYER_STATE_RESOURCE_GOLD then
set oF=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(SF,oF,GetPlayerState(SF,oF)+500)
elseif cF==PLAYER_STATE_RESOURCE_LUMBER then
set OF=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(SF,OF,GetPlayerState(SF,OF)+500)
endif
call SetPlayerState(SF,cF,GetPlayerState(SF,cF)+500)
call RemoveUnit(GetSpellAbilityUnit())
set lF=GetOwningPlayer(GetSpellTargetUnit())
set bF=CreateForce()
call ForceAddPlayer(bF,lF)
if IsPlayerInForce(GetLocalPlayer(),bF) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_1231")
endif
set e=GetUnitLoc(GetSpellTargetUnit())
set qF=GetOwningPlayer(GetSpellTargetUnit())
set aF=CreateForce()
call ForceAddPlayer(aF,qF)
set yF=e
set pF=GetLocationX(yF)
set eF=GetLocationY(yF)
if IsPlayerInForce(GetLocalPlayer(),aF) then
call PingMinimap(pF,eF,2.00)
endif
call RemoveLocation(e)
set SF=null
set cF=null
set oF=null
set OF=null
set lF=null
set bF=null
set yF=null
set qF=null
set aF=null
endfunction
function nI takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990607,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990583,0)
endfunction
function aK takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747988531 then
return false
endif
return true
endfunction
function nK takes nothing returns boolean
if not aK() then
return false
endif
return true
endfunction
function aZ takes nothing returns boolean
if GetResearched()!=1378890033 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890033,true)!=2 then
return false
endif
return true
endfunction
function nZ takes nothing returns boolean
if not aZ() then
return false
endif
return true
endfunction
function Eww takes integer Fww,string kww returns nothing
local integer jww
local integer xww
local integer vww_2
local integer mww
local boolean Qww
local multiboard Www
set Zb[Eb]=kww
set Eb=Eb+1
set jww=0
set Fww=23
loop
exitwhen jww>Fww
set mww=nO[jww]
set kww="when calling isInGame in MultiboardCityUpdate, line 20"
set Zb[Eb]="when calling isInGame in MultiboardCityUpdate, line 20"
set Eb=Eb+1
if xb[mww]==0 then
if mww==0 then
call r7("Nullpointer exception when calling PlayerStats.isInGame","when calling error in PlayerStats, line 14")
else
call r7("Called PlayerStats.isInGame on invalid object.","when calling error in PlayerStats, line 14")
endif
endif
set Qww=RO[mww]
set Eb=Eb-1
if Qww then
set bO[jww]=hww("when calling createCoEMultiboard in MultiboardCityUpdate, line 21")
endif
set jww=jww+1
endloop
set xww=0
set vww_2=23
loop
exitwhen xww>vww_2
set Www=bO[xww]
if gO==GO[xww]then
call MultiboardDisplay(Www,true)
endif
set xww=xww+1
endloop
set Eb=Eb-1
set Www=null
endfunction
function IM takes integer EM returns nothing
local integer ZM
local trigger UM
call TriggerAddCondition(el,Condition(nf))
call TriggerAddCondition(ql,Condition(df))
call TriggerAddAction(yc,ff)
call TriggerAddAction(pc,Rf)
call TriggerAddAction(ec,Tf)
set EM=0
set ZM=bj_MAX_PLAYERS-1
loop
exitwhen EM>ZM
call TriggerRegisterPlayerEvent(pc,GO[EM],EVENT_PLAYER_LEAVE)
set UM=ec
call TriggerRegisterPlayerEvent(UM,GO[EM],EVENT_PLAYER_ARROW_DOWN_DOWN)
call TriggerRegisterPlayerEvent(UM,GO[EM],EVENT_PLAYER_ARROW_DOWN_UP)
call TriggerRegisterPlayerEvent(UM,GO[EM],EVENT_PLAYER_ARROW_UP_DOWN)
call TriggerRegisterPlayerEvent(UM,GO[EM],EVENT_PLAYER_ARROW_UP_UP)
call TriggerRegisterPlayerEvent(UM,GO[EM],EVENT_PLAYER_ARROW_LEFT_DOWN)
call TriggerRegisterPlayerEvent(UM,GO[EM],EVENT_PLAYER_ARROW_LEFT_UP)
call TriggerRegisterPlayerEvent(UM,GO[EM],EVENT_PLAYER_ARROW_RIGHT_DOWN)
call TriggerRegisterPlayerEvent(UM,GO[EM],EVENT_PLAYER_ARROW_RIGHT_UP)
call TriggerRegisterPlayerEvent(UM,GO[EM],EVENT_PLAYER_END_CINEMATIC)
call TriggerRegisterPlayerEvent(UM,GO[EM],EVENT_PLAYER_MOUSE_UP)
call TriggerRegisterPlayerEvent(UM,GO[EM],EVENT_PLAYER_MOUSE_DOWN)
call TriggerRegisterPlayerEvent(UM,GO[EM],EVENT_PLAYER_MOUSE_MOVE)
call TriggerRegisterPlayerChatEvent(UM,GO[EM],"",false)
set EM=EM+1
endloop
call bcw(EVENT_PLAYER_UNIT_SPELL_EFFECT,null,Yf,null)
set UM=null
endfunction
function K5 takes integer F5,string k5 returns nothing
local integer j5
local integer x5
local integer v5
local integer m5
local integer Q5
local integer W5
local integer E5
local unit Z5
local player U5
local integer I5
local unit P5
local integer A5
local integer D5
local boolean H5
local integer J5
set Zb[Eb]=k5
set Eb=Eb+1
set j5=Bc[F5]*Nc[F5]
set m5=QS-1
set Q5=(Bc[F5]+1)*Nc[F5]-1
if m5<2147483647 then
set W5=m5
else
set W5=2147483647
endif
if Q5<W5 then
set W5=Q5
endif
set x5=W5
loop
exitwhen j5>x5
set E5=AS[j5]
set Zb[Eb]="when calling getCityUnit in Economy, line 31"
set Eb=Eb+1
if Il[E5]==0 then
if E5==0 then
call r7("Nullpointer exception when calling City.getCityUnit","when calling error in City, line 168")
else
call r7("Called City.getCityUnit on invalid object.","when calling error in City, line 168")
endif
endif
set Z5=LS[E5]
set Eb=Eb-1
set v5=GetPlayerId(GetOwningPlayer(Z5))
set I5=AS[j5]
set k5="when calling getCityUnit in Economy, line 32"
set Zb[Eb]="when calling getCityUnit in Economy, line 32"
set Eb=Eb+1
if Il[I5]==0 then
if I5==0 then
call r7("Nullpointer exception when calling City.getCityUnit","when calling error in City, line 168")
else
call r7("Called City.getCityUnit on invalid object.","when calling error in City, line 168")
endif
endif
set P5=LS[I5]
set Eb=Eb-1
set U5=GetOwningPlayer(P5)
if GetPlayerSlotState(U5)==PLAYER_SLOT_STATE_PLAYING then
set H5=GetPlayerController(U5)==MAP_CONTROL_USER
else
set H5=false
endif
if H5 then
set J5=Xc[v5]
set A5=AS[j5]
set Zb[Eb]="when calling countTax in Economy, line 33"
set Eb=Eb+1
if Il[A5]==0 then
if A5==0 then
call r7("Nullpointer exception when calling City.countTax","when calling error in City, line 246")
else
call r7("Called City.countTax on invalid object.","when calling error in City, line 246")
endif
endif
set D5=rV(A5,"when calling countTax in City, line 246")
set Eb=Eb-1
set Xc[v5]=J5+D5
endif
set j5=j5+1
endloop
set Eb=Eb-1
set Z5=null
set U5=null
set P5=null
endfunction
function Tbw takes integer dbw,integer fbw,string Rbw returns nothing
set Zb[Eb]=Rbw
set Eb=Eb+1
if Il[dbw]==0 then
if dbw==0 then
call r7("Nullpointer exception when calling City.getCityModifierOnRemove","when calling error in City, line 391")
else
call r7("Called City.getCityModifierOnRemove on invalid object.","when calling error in City, line 391")
endif
endif
set Zb[Eb]="when calling getCityModifierOnRemove in City, line 391"
set Eb=Eb+1
if hS[Fyw(YS,fbw,"when calling get in City, line 392")]then
set tc[dbw]=tc[dbw]-gS[Fyw(YS,fbw,"when calling get in City, line 393")]
endif
set ic[dbw]=ic[dbw]-xS[Fyw(YS,fbw,"when calling get in City, line 394")]
set Eb=Eb-1-1
endfunction
function Wyw takes integer myw,string Qyw returns nothing
set Zb[Eb]=Qyw
set Eb=Eb+1
if qb[myw]==0 then
if myw==0 then
call r7("Nullpointer exception when calling LLEntry.LLEntry","when calling error in LinkedList, line 396")
else
call r7("Called LLEntry.LLEntry on invalid object.","when calling error in LinkedList, line 396")
endif
endif
set Zb[Eb]="when calling destroyLLEntry in LinkedList, line 396"
set Eb=Eb+1
set Zb[Eb]="when calling LLEntry in LinkedList, line 396"
set Eb=Eb+1
if qb[myw]==0 then
call r7("Double free: object of type LLEntry","when calling error in LinkedList, line 396")
else
set yb[pb]=myw
set pb=pb+1
set qb[myw]=0
endif
set Eb=Eb-1-1-1
endfunction
function rpw takes integer Myw,integer wpw,string upw returns nothing
set Zb[Eb]=upw
set Eb=Eb+1
if Gb[Myw]==0 then
if Myw==0 then
call r7("Nullpointer exception when calling LinkedList.removeEntry","when calling error in LinkedList, line 373")
else
call r7("Called LinkedList.removeEntry on invalid object.","when calling error in LinkedList, line 373")
endif
endif
set Zb[Eb]="when calling removeEntry in LinkedList, line 373"
set Eb=Eb+1
set Yo[To[wpw]]=Yo[wpw]
set To[Yo[wpw]]=To[wpw]
call Wyw(wpw,"when calling LLEntry in LinkedList, line 376")
set jo[Myw]=jo[Myw]-1
set Eb=Eb-1-1
endfunction
function l9 takes integer S9,integer c9,string o9 returns nothing
local integer O9
set Zb[Eb]=o9
set Eb=Eb+1
set O9=Yo[ko[S9]]
loop
exitwhen O9==ko[S9]
if Ro[O9]==c9 then
call rpw(S9,O9,"when calling removeEntry in LinkedList, line 126")
set Eb=Eb-1
return
endif
set O9=Yo[O9]
endloop
set Eb=Eb-1
endfunction
function LB takes integer PB,integer AB,string DB returns boolean
local integer HB
local boolean JB
local integer KB
set Zb[Eb]=DB
set Eb=Eb+1
set HB=oc[PB]
set Zb[Eb]="when calling has in City, line 346"
set Eb=Eb+1
if Gb[HB]==0 then
if HB==0 then
call r7("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call r7("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set JB=i9(HB,AB)
set Eb=Eb-1
if not JB then
set Eb=Eb-1
return false
endif
set KB=oc[PB]
set Zb[Eb]="when calling remove in City, line 348"
set Eb=Eb+1
if Gb[KB]==0 then
if KB==0 then
call r7("Nullpointer exception when calling LinkedList.remove","when calling error in LinkedList, line 122")
else
call r7("Called LinkedList.remove on invalid object.","when calling error in LinkedList, line 122")
endif
endif
call l9(KB,AB,"when calling remove in LinkedList, line 122")
set Eb=Eb-1
call Tbw(PB,AB,"when calling getCityModifierOnRemove in City, line 350")
set Eb=Eb-1
return true
endfunction
function Ztw takes integer Wtw returns nothing
local group Etw
call TriggerRegisterEnterRegion(CreateTrigger(),Do,Filter(Wf))
call bcw(EVENT_PLAYER_UNIT_ISSUED_ORDER,null,Ef,null)
call GroupEnumUnitsInRect(eO,Ao,null)
call ForGroup(eO,Zf)
set Etw=eO
call GroupClear(Etw)
call DestroyGroup(Etw)
set Etw=null
endfunction
function a3 takes group b3,integer y3,string p3 returns nothing
local group e3
local unit q3
set Zb[Eb]=p3
set Eb=Eb+1
set e3=b3
loop
exitwhen FirstOfGroup(e3)==null
set q3=FirstOfGroup(e3)
call GroupRemoveUnit(e3,q3)
call Pbw(y3,q3,"when calling callback in ClosureForGroups, line 31")
endloop
set Eb=Eb-1
set e3=null
set q3=null
endfunction
function rSw takes string Miw returns nothing
local group wSw
local integer uSw
set Zb[Eb]=Miw
set Eb=Eb+1
call RemoveUnit(mO)
set wSw=vO
set Zb[Eb]="when calling alloc_Closure in Preloader, line 45"
set Eb=Eb+1
if Al==0 then
if Dl<32768 then
set Dl=Dl+1
set uSw=Dl
set Hl[uSw]=686
else
call r7("Out of memory: Could not create Closure.","when calling error in Preloader, line 45")
set uSw=0
endif
else
set Al=Al-1
set uSw=Pl[Al]
set Hl[uSw]=686
endif
set Eb=Eb-1
call a3(wSw,uSw,"when calling forEachFrom in Preloader, line 45")
call DestroyGroup(vO)
set vO=null
set Eb=Eb-1
set wSw=null
endfunction
function wbw takes string Mlw returns nothing
endfunction
function Nbw takes integer Lbw,string Xbw returns nothing
local integer Cbw
local integer Vbw
local integer Bbw
set Zb[Eb]=Xbw
set Eb=Eb+1
if Xl[Lbw]==0 then
if Lbw==0 then
call r7("Nullpointer exception when calling CallbackSingle.call","when calling error in ClosureTimers, line 65")
else
call r7("Called CallbackSingle.call on invalid object.","when calling error in ClosureTimers, line 65")
endif
endif
if Xl[Lbw]<=645 then
if Xl[Lbw]<=642 then
if Xl[Lbw]<=640 then
if Xl[Lbw]<=639 then
set Zb[Eb]="when calling City_closure_impl in ClosureTimers, line 65"
set Eb=Eb+1
set Cbw=JS[Lbw]
set Vbw=KS[Lbw]
set Zb[Eb]="when calling removeModifier in City, line 342"
set Eb=Eb+1
if Il[Cbw]==0 then
if Cbw==0 then
call r7("Nullpointer exception when calling City.removeModifier","when calling error in City, line 345")
else
call r7("Called City.removeModifier on invalid object.","when calling error in City, line 345")
endif
endif
call LB(Cbw,Vbw,"when calling removeModifier in City, line 345")
set Eb=Eb-1-1
else
call IM(Lbw)
endif
elseif Xl[Lbw]<=641 then
set Qc=Qc+50
else
set Qc=Qc*2
endif
elseif Xl[Lbw]<=644 then
if Xl[Lbw]<=643 then
set Qc=Qc/2
set Bbw=Qc
if Bbw!=250 then
call wbw("Expected <"+I2S(250)+">, Actual <"+I2S(Bbw)+">")
endif
else
call K5(Lbw,"when calling Economy_closure_impl in ClosureTimers, line 65")
endif
else
call IssueImmediateOrderById(ao[Lbw],851976)
endif
elseif Xl[Lbw]<=649 then
if Xl[Lbw]<=647 then
if Xl[Lbw]<=646 then
call IssueImmediateOrderById(do[Lbw],851976)
else
call IssuePointOrderById(No[Lbw],Mo[Lbw],wO[Lbw],uO[Lbw])
endif
elseif Xl[Lbw]<=648 then
call Eww(Lbw,"when calling MultiboardCityUpdate_closure_impl in ClosureTimers, line 65")
else
call IssueImmediateOrderById(yO[Lbw],851976)
endif
elseif Xl[Lbw]<=651 then
if Xl[Lbw]<=650 then
call Ztw(Lbw)
else
set Zb[Eb]="when calling Preloader_closure_impl in ClosureTimers, line 65"
set Eb=Eb+1
call rSw("when calling finishPreload in Preloader, line 54")
set Eb=Eb-1
endif
else
call IssueImmediateOrderById(WO[Lbw],851976)
endif
set Eb=Eb-1
endfunction
function Cow takes timer Low,string Xow returns nothing
set Zb[Eb]=Xow
set Eb=Eb+1
if Low==null then
call r7("Trying to release a null timer","when calling error in TimerUtils, line 37")
set Eb=Eb-1
return
endif
if Dow(Low,"when calling getData in TimerUtils, line 39")==679645218 then
call r7("ReleaseTimer: Double free!","when calling error in TimerUtils, line 40")
set Eb=Eb-1
return
endif
call Wow(Low,679645218,"when calling setData in TimerUtils, line 42")
call PauseTimer(Low)
set ll[bl]=Low
set bl=bl+1
set Eb=Eb-1
endfunction
function V3 takes integer X3,string C3 returns nothing
set Zb[Eb]=C3
set Eb=Eb+1
set Zb[Eb]="when calling CallbackSingle_onDestroy in ClosureTimers, line 79"
set Eb=Eb+1
call Cow(Ec[X3],"when calling release in ClosureTimers, line 80")
set Eb=Eb-1
set Zb[Eb]="when calling CallbackSingle in ClosureTimers, line 79"
set Eb=Eb+1
if Xl[X3]==0 then
call r7("Double free: object of type CallbackSingle","when calling error in ClosureTimers, line 63")
else
set Jl[Kl]=X3
set Kl=Kl+1
set Xl[X3]=0
endif
set Eb=Eb-1-1
endfunction
function L3 takes string J3 returns nothing
local integer K3
set Zb[Eb]=J3
set Eb=Eb+1
set K3=Dow(GetExpiredTimer(),"when calling getData in ClosureTimers, line 75")
call Nbw(K3,"when calling call in ClosureTimers, line 76")
set Zb[Eb]="when calling CallbackSingle in ClosureTimers, line 77"
set Eb=Eb+1
if Xl[K3]==0 then
if K3==0 then
call r7("Nullpointer exception when calling CallbackSingle.CallbackSingle","when calling error in ClosureTimers, line 63")
else
call r7("Called CallbackSingle.CallbackSingle on invalid object.","when calling error in ClosureTimers, line 63")
endif
endif
call V3(K3,"when calling destroyCallbackSingle in ClosureTimers, line 63")
set Eb=Eb-1-1
endfunction
function naw takes nothing returns nothing
set Eb=0
set Zb[Eb]="ClosureTimers, line 68"
set Eb=Eb+1
call L3("when calling staticCallback in ClosureTimers, line 70")
set Eb=Eb-1
endfunction
function nk takes nothing returns nothing
local player Sk=GetOwningPlayer(GetKillingUnit())
local playerstate ck=PLAYER_STATE_RESOURCE_GOLD
local playerstate ok
local playerstate Ok
local player lk
local force bk
local location yk
local real pk
local real ek
local player qk
local force ak
if ck==PLAYER_STATE_RESOURCE_GOLD then
set ok=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(Sk,ok,GetPlayerState(Sk,ok)+125)
elseif ck==PLAYER_STATE_RESOURCE_LUMBER then
set Ok=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(Sk,Ok,GetPlayerState(Sk,Ok)+125)
endif
call SetPlayerState(Sk,ck,GetPlayerState(Sk,ck)+125)
set lk=GetOwningPlayer(GetKillingUnit())
set bk=CreateForce()
call ForceAddPlayer(bk,lk)
if IsPlayerInForce(GetLocalPlayer(),bk) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_091")
endif
set e=GetUnitLoc(GetDyingUnit())
set qk=GetOwningPlayer(GetDyingUnit())
set ak=CreateForce()
call ForceAddPlayer(ak,qk)
set yk=e
set pk=GetLocationX(yk)
set ek=GetLocationY(yk)
if IsPlayerInForce(GetLocalPlayer(),ak) then
call PingMinimap(pk,ek,2.00)
endif
call RemoveLocation(e)
set Sk=null
set ck=null
set ok=null
set Ok=null
set lk=null
set bk=null
set yk=null
set qk=null
set ak=null
endfunction
function nx takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988561,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988784,0)
endfunction
function oH takes nothing returns nothing
call UnitAddAbility(GetConstructedStructure(),1093677896)
endfunction
function oP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990603,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990604,0)
endfunction
function oSw takes nothing returns boolean
return true
endfunction
function cU takes nothing returns boolean
if GetResearched()!=1378890038 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890038,true)!=1 then
return false
endif
return true
endfunction
function oU takes nothing returns boolean
if not cU() then
return false
endif
return true
endfunction
function oaw takes nothing returns nothing
set Eb=0
call VM("ClosureEvents, line 240")
endfunction
function ov takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988551,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989081,0)
endfunction
function pJ takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function yQ takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function pQ takes nothing returns boolean
if not yQ() then
return false
endif
return true
endfunction
function tT takes nothing returns boolean
local player uT=GetOwningPlayer(GetConstructedStructure())
local integer rT=GetUnitTypeId(GetConstructedStructure())
local group sT=CreateGroup()
local boolean wT
set bj_groupEnumTypeId=rT
call GroupEnumUnitsOfPlayer(sT,uT,filterGetUnitsOfPlayerAndTypeId)
set wT=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
set bj_groupCountUnits=0
call ForGroup(sT,function CountUnitsInGroupEnum)
if wT then
call DestroyGroup(sT)
endif
if bj_groupCountUnits>3 then
set uT=null
set sT=null
return false
endif
set uT=null
set sT=null
return true
endfunction
function pT takes nothing returns nothing
local player iT
local player ST
local player cT
local player oT
local player OT
local player lT
local player bT
local player yT
if tT() then
set iT=GetOwningPlayer(GetConstructedStructure())
set ST=GetOwningPlayer(GetConstructedStructure())
set y[GetPlayerId(iT)+1]=y[GetPlayerId(ST)+1]+50
set cT=GetOwningPlayer(GetConstructedStructure())
set oT=GetOwningPlayer(GetConstructedStructure())
set t[GetPlayerId(cT)+1]=t[GetPlayerId(oT)+1]-10
else
set OT=GetOwningPlayer(GetConstructedStructure())
set lT=GetOwningPlayer(GetConstructedStructure())
set y[GetPlayerId(OT)+1]=y[GetPlayerId(lT)+1]+25
set bT=GetOwningPlayer(GetConstructedStructure())
set yT=GetOwningPlayer(GetConstructedStructure())
set t[GetPlayerId(bT)+1]=t[GetPlayerId(yT)+1]-10
endif
call UnitAddAbility(GetConstructedStructure(),1093677647)
set iT=null
set ST=null
set cT=null
set oT=null
set OT=null
set lT=null
set bT=null
set yT=null
endfunction
function pY takes nothing returns nothing
local player oY=GetOwningPlayer(GetAttacker())
local player OY=GetOwningPlayer(GetAttacker())
local player lY
local player bY
local unit yY
set r[GetPlayerId(oY)+1]=r[GetPlayerId(OY)+1]+1
set lY=GetOwningPlayer(GetTriggerUnit())
set bY=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(lY)+1]=r[GetPlayerId(bY)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set yY=GetTriggerUnit()
call SetUnitState(yY,UNIT_STATE_LIFE,GetUnitState(yY,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set oY=null
set OY=null
set lY=null
set bY=null
set yY=null
endfunction
function mbw takes integer jbw,unit xbw,string vbw returns nothing
set Zb[Eb]=vbw
set Eb=Eb+1
if wb[jbw]==0 then
if jbw==0 then
call r7("Nullpointer exception when calling OnCastListener.fire","when calling error in ClosureEvents, line 56")
else
call r7("Called OnCastListener.fire on invalid object.","when calling error in ClosureEvents, line 56")
endif
endif
set Eb=Eb-1
endfunction
function r3 takes string BM returns nothing
local unit NM
local integer MM
local integer w3
local integer u3
set Zb[Eb]=BM
set Eb=Eb+1
set NM=GetTriggerUnit()
set MM=GetSpellAbilityId()
if ayw(dc,GetHandleId(NM),"when calling has in ClosureEvents, line 188") then
set w3=Fyw(dc,GetHandleId(NM),"when calling get in ClosureEvents, line 189")
loop
exitwhen w3==0
if Fc[w3]==-1 or Fc[w3]==MM then
call mbw(w3,GetSpellAbilityUnit(),"when calling fire in ClosureEvents, line 192")
endif
set w3=gc[w3]
endloop
endif
if ayw(nc,MM,"when calling has in ClosureEvents, line 194") then
set u3=Fyw(nc,MM,"when calling get in ClosureEvents, line 195")
loop
exitwhen u3==0
if kc[u3]==null or kc[u3]==NM then
call mbw(u3,GetSpellAbilityUnit(),"when calling fire in ClosureEvents, line 198")
endif
set u3=gc[u3]
endloop
endif
set Eb=Eb-1
set NM=null
endfunction
function paw takes nothing returns nothing
set Eb=0
set Zb[Eb]="ClosureEvents, line 306"
set Eb=Eb+1
call r3("when calling onSpellEffect in ClosureEvents, line 306")
set Eb=Eb-1
endfunction
function pm takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989072,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989073,0)
endfunction
function ptw takes nothing returns boolean
return true
endfunction
function q9 takes nothing returns boolean
return true
endfunction
function qE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989570,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989556,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989559,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989557,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989560,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989573,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989574,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651841,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651833,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651832,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989582,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990097,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989812,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990098,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990099,0)
endfunction
function qH takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function qL takes nothing returns nothing
local player lL=GetOwningPlayer(GetAttacker())
local player bL=GetOwningPlayer(GetAttacker())
local player yL
local player pL
local unit eL
set r[GetPlayerId(lL)+1]=r[GetPlayerId(bL)+1]+1
set yL=GetOwningPlayer(GetTriggerUnit())
set pL=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(yL)+1]=r[GetPlayerId(pL)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set eL=GetTriggerUnit()
call SetUnitState(eL,UNIT_STATE_LIFE,GetUnitState(eL,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set lL=null
set bL=null
set yL=null
set pL=null
set eL=null
endfunction
function qP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990599,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990600,0)
endfunction
function qU takes nothing returns nothing
set s=bj_FORCE_ALL_PLAYERS
call ForForce(s,kq)
endfunction
function qcw takes nothing returns boolean
return true
endfunction
function qv takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989066,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988551,0)
endfunction
function rD takes nothing returns nothing
call ReplaceUnitBJ(GetEnumUnit(),1747988553,bj_UNIT_STATE_METHOD_RELATIVE)
endfunction
function uE takes nothing returns boolean
if GetResearched()!=1378889808 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889808,true)!=1 then
return false
endif
return true
endfunction
function rE takes nothing returns boolean
if not uE() then
return false
endif
return true
endfunction
function uI takes nothing returns boolean
if GetResearched()!=1378890049 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890049,true)!=2 then
return false
endif
return true
endfunction
function rI takes nothing returns boolean
if not uI() then
return false
endif
return true
endfunction
function rU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651844,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651845,0)
endfunction
function rtw takes string Nsw returns boolean
local playerunitevent Msw
local integer wtw
local integer utw
set Zb[Eb]=Nsw
set Eb=Eb+1
set Msw=EVENT_PLAYER_UNIT_CONSTRUCT_START
set Zb[Eb]="when calling alloc_Closure in NoShipsNearRivers, line 7"
set Eb=Eb+1
if jl==0 then
if xl<32768 then
set xl=xl+1
set wtw=xl
set vl[wtw]=672
else
call r7("Out of memory: Could not create Closure.","when calling error in NoShipsNearRivers, line 7")
set wtw=0
endif
else
set jl=jl-1
set wtw=kl[jl]
set vl[wtw]=672
endif
set Eb=Eb-1
set Tc[wtw]=0
set Yc[wtw]=0
set Gc[wtw]=0
set Zb[Eb]="when calling add in NoShipsNearRivers, line 7"
set Eb=Eb+1
set Zb[Eb]="when calling toIntId in ClosureEvents, line 111"
set Eb=Eb+1
set utw=qc[GetHandleId(Msw)]
if utw==0 then
set utw=TM(Msw,"when calling registerEventId in ClosureEvents, line 228")
endif
set Eb=Eb-1
set Tc[wtw]=utw
if fc[Tc[wtw]]!=0 then
set Gc[fc[Tc[wtw]]]=wtw
set Yc[wtw]=fc[Tc[wtw]]
endif
set fc[Tc[wtw]]=wtw
set Eb=Eb-1-1
set Msw=null
return true
endfunction
function raw takes nothing returns boolean
set Eb=0
return rtw("NoShipsNearRivers, line 1")
endfunction
function rg takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989077 then
return false
endif
return true
endfunction
function uh takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988792 then
return false
endif
if GetUnitTypeId(GetSpellTargetUnit())!=1747988787 then
return false
endif
return true
endfunction
function rh takes nothing returns boolean
if not uh() then
return false
endif
return true
endfunction
function s7 takes nothing returns boolean
set wo=CreateForce()
set uo=CreateForce()
set ro=CreateForce()
set so=CreateForce()
set io[0]=wo
set io[1]=uo
set io[2]=ro
set io[3]=so
set So[0]=62
set co[0]=194
set oo[0]=255
set So[1]=255
set co[1]=238
set oo[1]=0
set So[2]=0
set co[2]=201
set oo[2]=10
set So[3]=219
set co[3]=0
set oo[3]=201
return true
endfunction
function sE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651832,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651830,0)
endfunction
function sI takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990594,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990584,0)
endfunction
function rK takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990086 then
return false
endif
return true
endfunction
function sK takes nothing returns boolean
if not rK() then
return false
endif
return true
endfunction
function sL takes nothing returns nothing
local player NK=GetOwningPlayer(GetAttacker())
local player MK=GetOwningPlayer(GetAttacker())
local player wL
local player uL
local unit rL
set r[GetPlayerId(NK)+1]=r[GetPlayerId(MK)+1]+1
set wL=GetOwningPlayer(GetTriggerUnit())
set uL=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(wL)+1]=r[GetPlayerId(uL)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set rL=GetTriggerUnit()
call SetUnitState(rL,UNIT_STATE_LIFE,GetUnitState(rL,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set NK=null
set MK=null
set wL=null
set uL=null
set rL=null
endfunction
function rQ takes nothing returns boolean
if GetResearched()!=1378889783 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889783,true)!=2 then
return false
endif
return true
endfunction
function sQ takes nothing returns boolean
if not rQ() then
return false
endif
return true
endfunction
function sSw takes nothing returns boolean
return true
endfunction
function rZ takes nothing returns boolean
if GetResearched()!=1378890034 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890034,true)!=2 then
return false
endif
return true
endfunction
function sZ takes nothing returns boolean
if not rZ() then
return false
endif
return true
endfunction
function ftw takes string qtw returns boolean
local playerevent atw
local integer ntw
local integer dtw
set Zb[Eb]=qtw
set Eb=Eb+1
set atw=EVENT_PLAYER_LEAVE
set Zb[Eb]="when calling alloc_Closure in OnPlayerLeave, line 6"
set Eb=Eb+1
if jl==0 then
if xl<32768 then
set xl=xl+1
set ntw=xl
set vl[ntw]=673
else
call r7("Out of memory: Could not create Closure.","when calling error in OnPlayerLeave, line 6")
set ntw=0
endif
else
set jl=jl-1
set ntw=kl[jl]
set vl[ntw]=673
endif
set Eb=Eb-1
set Tc[ntw]=0
set Yc[ntw]=0
set Gc[ntw]=0
set Zb[Eb]="when calling add in OnPlayerLeave, line 6"
set Eb=Eb+1
set Zb[Eb]="when calling toIntId in ClosureEvents, line 111"
set Eb=Eb+1
set dtw=qc[GetHandleId(atw)]
if dtw==0 then
set dtw=TM(atw,"when calling registerEventId in ClosureEvents, line 228")
endif
set Eb=Eb-1
set Tc[ntw]=dtw
if fc[Tc[ntw]]!=0 then
set Gc[fc[Tc[ntw]]]=ntw
set Yc[ntw]=fc[Tc[ntw]]
endif
set fc[Tc[ntw]]=ntw
set Eb=Eb-1-1
set atw=null
return true
endfunction
function saw takes nothing returns boolean
set Eb=0
return ftw("OnPlayerLeave, line 1")
endfunction
function sx takes nothing returns nothing
local player Kj=GetOwningPlayer(GetKillingUnit())
local playerstate Lj=PLAYER_STATE_RESOURCE_LUMBER
local playerstate Xj
local playerstate Cj
local player Vj
local force Bj
local location Nj
local real Mj
local real wx
local player ux
local force rx
if Lj==PLAYER_STATE_RESOURCE_GOLD then
set Xj=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(Kj,Xj,GetPlayerState(Kj,Xj)+500)
elseif Lj==PLAYER_STATE_RESOURCE_LUMBER then
set Cj=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(Kj,Cj,GetPlayerState(Kj,Cj)+500)
endif
call SetPlayerState(Kj,Lj,GetPlayerState(Kj,Lj)+500)
set Vj=GetOwningPlayer(GetKillingUnit())
set Bj=CreateForce()
call ForceAddPlayer(Bj,Vj)
if IsPlayerInForce(GetLocalPlayer(),Bj) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_084")
endif
set e=GetUnitLoc(GetDyingUnit())
set ux=GetOwningPlayer(GetDyingUnit())
set rx=CreateForce()
call ForceAddPlayer(rx,ux)
set Nj=e
set Mj=GetLocationX(Nj)
set wx=GetLocationY(Nj)
if IsPlayerInForce(GetLocalPlayer(),rx) then
call PingMinimap(Mj,wx,2.00)
endif
call RemoveLocation(e)
set Kj=null
set Lj=null
set Xj=null
set Cj=null
set Vj=null
set Bj=null
set Nj=null
set ux=null
set rx=null
endfunction
function sow takes string wow,string uow returns boolean
local integer row=StringLength(wow)
if StringLength(uow)>row then
return false
endif
return SubString(wow,0,StringLength(uow))==uow
endfunction
function t4 takes nothing returns boolean
return sow(GetEventPlayerChatString(),"-")
endfunction
function t7 takes nothing returns boolean
set Oo=CreateTimer()
call TimerStart(Oo,100000.,false,null)
call TimerStart(CreateTimer(),0.030,true,vf)
return true
endfunction
function tK takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function tQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989301,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988790,0)
endfunction
function sW takes nothing returns boolean
if GetResearched()!=1378889806 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889806,true)!=1 then
return false
endif
return true
endfunction
function tW takes nothing returns boolean
if not sW() then
return false
endif
return true
endfunction
function tZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989816,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989815,0)
endfunction
function Hpw takes integer apw,integer npw,integer dpw,integer fpw,integer Rpw,integer Tpw,integer Ypw,integer Gpw,integer gpw,integer hpw,integer Fpw,integer kpw,integer jpw,integer xpw,integer vpw,integer mpw,integer Qpw,integer Wpw,integer Epw,integer Zpw,integer Upw,integer Ipw,integer Ppw,string Apw returns integer
local integer Dpw
set Zb[Eb]=Apw
set Eb=Eb+1
set Dpw=p9("when calling new_LinkedList in LinkedList, line 391")
call bpw(Dpw,apw,"when calling add in LinkedList, line 393")
call bpw(Dpw,npw,"when calling add in LinkedList, line 393")
call bpw(Dpw,dpw,"when calling add in LinkedList, line 393")
call bpw(Dpw,fpw,"when calling add in LinkedList, line 393")
call bpw(Dpw,Rpw,"when calling add in LinkedList, line 393")
call bpw(Dpw,Tpw,"when calling add in LinkedList, line 393")
call bpw(Dpw,Ypw,"when calling add in LinkedList, line 393")
call bpw(Dpw,Gpw,"when calling add in LinkedList, line 393")
call bpw(Dpw,gpw,"when calling add in LinkedList, line 393")
call bpw(Dpw,hpw,"when calling add in LinkedList, line 393")
call bpw(Dpw,Fpw,"when calling add in LinkedList, line 393")
call bpw(Dpw,kpw,"when calling add in LinkedList, line 393")
call bpw(Dpw,jpw,"when calling add in LinkedList, line 393")
call bpw(Dpw,xpw,"when calling add in LinkedList, line 393")
call bpw(Dpw,vpw,"when calling add in LinkedList, line 393")
call bpw(Dpw,mpw,"when calling add in LinkedList, line 393")
call bpw(Dpw,Qpw,"when calling add in LinkedList, line 393")
call bpw(Dpw,Wpw,"when calling add in LinkedList, line 393")
call bpw(Dpw,Epw,"when calling add in LinkedList, line 393")
call bpw(Dpw,Zpw,"when calling add in LinkedList, line 393")
call bpw(Dpw,Upw,"when calling add in LinkedList, line 393")
call bpw(Dpw,Ipw,"when calling add in LinkedList, line 393")
call bpw(Dpw,Ppw,"when calling add in LinkedList, line 393")
set Eb=Eb-1
return Dpw
endfunction
function pSw takes string OSw returns boolean
local playerunitevent lSw
local integer bSw
local integer ySw
set Zb[Eb]=OSw
set Eb=Eb+1
set QO=Hpw(1747988557,1747989075,1747990102,1747988785,1747989839,1747990101,1747989554,1747989041,1747990344,1747989059,1747989060,1747988844,1747990351,1747990352,1747990356,1747989331,1747990350,1747989809,1747990353,1747990354,1747990355,1747988568,1747990341,"when calling asList in RangeChecks, line 5")
set lSw=EVENT_PLAYER_UNIT_CONSTRUCT_START
set Zb[Eb]="when calling alloc_Closure in RangeChecks, line 8"
set Eb=Eb+1
if jl==0 then
if xl<32768 then
set xl=xl+1
set bSw=xl
set vl[bSw]=674
else
call r7("Out of memory: Could not create Closure.","when calling error in RangeChecks, line 8")
set bSw=0
endif
else
set jl=jl-1
set bSw=kl[jl]
set vl[bSw]=674
endif
set Eb=Eb-1
set Tc[bSw]=0
set Yc[bSw]=0
set Gc[bSw]=0
set Zb[Eb]="when calling add in RangeChecks, line 8"
set Eb=Eb+1
set Zb[Eb]="when calling toIntId in ClosureEvents, line 111"
set Eb=Eb+1
set ySw=qc[GetHandleId(lSw)]
if ySw==0 then
set ySw=TM(lSw,"when calling registerEventId in ClosureEvents, line 228")
endif
set Eb=Eb-1
set Tc[bSw]=ySw
if fc[Tc[bSw]]!=0 then
set Gc[fc[Tc[bSw]]]=bSw
set Yc[bSw]=fc[Tc[bSw]]
endif
set fc[Tc[bSw]]=bSw
set Eb=Eb-1-1
set lSw=null
return true
endfunction
function taw takes nothing returns boolean
set Eb=0
return pSw("RangeChecks, line 1")
endfunction
function sg takes nothing returns boolean
if IsUnitType(GetEnumUnit(),UNIT_TYPE_STRUCTURE)!=false then
return false
endif
return true
endfunction
function tg takes nothing returns nothing
if sg() then
call SetUnitPositionLoc(GetEnumUnit(),o)
endif
endfunction
function tow takes nothing returns boolean
set KO[0]="Terrible! Terrible news, my lord!"
set KO[1]="The messenger came to us with horrific news! May we execute him?"
set KO[2]="A mere nightmare, Your Mightiness!"
set LO[0]="Holy Mother of God, we have horrific news!"
set LO[1]="Lord Preserve us, Great Prince!"
set LO[2]="Great Prince, we have horrific news!"
set XO[0]="Allah be merciful! I bring terrible news"
set XO[1]="Oh, Great Sultan! We have terrible news"
set XO[2]="Oh, Great one! I bring ill news"
set CO[0]="Saints save us, we have some most horrific news!"
set CO[1]="My Basileus! We have horrific news!"
set CO[2]="My Basileus, by the grace of our lord. We have horrific news!"
set VO[0]="My King, we have received news concerning our realm"
set VO[1]="The messenger arrived with news. No matter, could I execute him?"
set VO[2]="My liege I bring news about the realm"
set BO[0]="Great Prince, a messenger came with news"
set BO[1]="May the God bless you, Great Prince, we have some news"
set BO[2]="There is something you should know, Great Prince"
set NO[0]="My Sultan! We have news"
set NO[1]="Praise be to Allah, Sultan! We bring news"
set NO[2]="Great Sultan! We have some news"
set MO[0]="My Basileus, we have some news"
set MO[1]="My Basileus, we have some news"
set MO[2]="My Basileus, we have some news"
set wl[0]="Milord! Good news!"
set wl[1]="Praise the Holy Lord! We have good news"
set wl[2]="My King, we bring great news for you!"
set ul[0]="By the grace of our Lord, we bring good news!"
set ul[1]="We received great news my Lord! Still the Messenger deserves to be pusnished"
set ul[2]="My Lord, we have received delightful news!"
set rl[0]="Praise be to Allah, Sultan! We have great news"
set rl[1]="Good tidings Sultan! I bring good news"
set rl[2]="Allah is glorious, Sultan! We have great news"
set sl[0]="Good news, my Basileus!"
set sl[1]="Praise the Holy Lord, we bring great news, my Basileus!"
set sl[2]="We received good news my Basileus! We shouldn’t blind this messenger"
set tl[0]="Your Majesty, important news!"
set tl[1]="May the God bless you, my lord. There is something you must know!"
set tl[2]="There is something that needs your attention, my lord!"
set il[0]="By the Saints! Great Prince, you must hear to this"
set il[1]="You should hear this, Great Prince!"
set il[2]="You need to see this, Great Prince!"
set Sl[0]="Great one, urgent news must be brought to your attention!"
set Sl[1]="My Sultan, there is something you need to know!"
set Sl[2]="My Great Sultan, there is something you must know!"
set cl[0]="My Basileus, there is something you need to know!"
set cl[1]="My Basileus, we can not delay this news!"
set cl[2]="My Basileus, you should be aware of this!"
set ol[0]="|cffffd900Med."
set ol[1]="|cff00ff00Low"
set ol[2]="|cffff0000High"
return true
endfunction
function uG takes nothing returns nothing
set i=GetUnitLoc(GetSpellTargetUnit())
set bj_lastCreatedEffect=AddSpecialEffectLoc("Abilities\\Spells\\Orc\\Voodoo\\VoodooAuraTarget.mdl",i)
call DestroyEffect(bj_lastCreatedEffect)
set S=GetUnitLoc(GetSpellAbilityUnit())
set bj_lastCreatedEffect=AddSpecialEffectLoc("Abilities\\Spells\\Orc\\Voodoo\\VoodooAura.mdl",S)
call DestroyEffect(bj_lastCreatedEffect)
call RemoveLocation(i)
call RemoveLocation(S)
endfunction
function uH takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function uP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990604,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990602,0)
endfunction
function wU takes nothing returns boolean
if GetResearched()!=1378890032 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890032,true)!=1 then
return false
endif
return true
endfunction
function uU takes nothing returns boolean
if not wU() then
return false
endif
return true
endfunction
function uY takes nothing returns nothing
local player VT=GetOwningPlayer(GetAttacker())
local player BT=GetOwningPlayer(GetAttacker())
local player NT
local player MT
local unit wY
set r[GetPlayerId(VT)+1]=r[GetPlayerId(BT)+1]+1
set NT=GetOwningPlayer(GetTriggerUnit())
set MT=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(NT)+1]=r[GetPlayerId(MT)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set wY=GetTriggerUnit()
call SetUnitState(wY,UNIT_STATE_LIFE,GetUnitState(wY,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set VT=null
set BT=null
set NT=null
set MT=null
set wY=null
endfunction
function Q0w takes string R0w returns boolean
local playerunitevent T0w
local playerunitevent Y0w
local integer G0w
local integer g0w
local integer h0w
local integer F0w
local integer k0w
local integer j0w
local integer x0w
local integer v0w
local integer m0w
set Zb[Eb]=R0w
set Eb=Eb+1
set Ko=Z7("when calling new_HashMap in MassControl, line 7")
set G0w=R2I(500000)
set g0w=R2I(700000)
set h0w=R2I(1000000)
set Zb[Eb]="when calling asList in MassControl, line 8"
set Eb=Eb+1
set F0w=p9("when calling new_LinkedList in LinkedList, line 391")
call bpw(F0w,G0w,"when calling add in LinkedList, line 393")
call bpw(F0w,g0w,"when calling add in LinkedList, line 393")
call bpw(F0w,h0w,"when calling add in LinkedList, line 393")
set Eb=Eb-1
set Lo=F0w
set Zb[Eb]="when calling asList in MassControl, line 14"
set Eb=Eb+1
set k0w=p9("when calling new_LinkedList in LinkedList, line 391")
call bpw(k0w,1211118401,"when calling add in LinkedList, line 393")
call bpw(k0w,1211119699,"when calling add in LinkedList, line 393")
call bpw(k0w,1211119701,"when calling add in LinkedList, line 393")
call bpw(k0w,1211119700,"when calling add in LinkedList, line 393")
set Eb=Eb-1
set Xo=k0w
set T0w=EVENT_PLAYER_UNIT_SPELL_CAST
set Zb[Eb]="when calling alloc_Closure in MassControl, line 22"
set Eb=Eb+1
if jl==0 then
if xl<32768 then
set xl=xl+1
set j0w=xl
set vl[j0w]=670
else
call r7("Out of memory: Could not create Closure.","when calling error in MassControl, line 22")
set j0w=0
endif
else
set jl=jl-1
set j0w=kl[jl]
set vl[j0w]=670
endif
set Eb=Eb-1
set Tc[j0w]=0
set Yc[j0w]=0
set Gc[j0w]=0
set Zb[Eb]="when calling add in MassControl, line 22"
set Eb=Eb+1
set Zb[Eb]="when calling toIntId in ClosureEvents, line 111"
set Eb=Eb+1
set x0w=qc[GetHandleId(T0w)]
if x0w==0 then
set x0w=TM(T0w,"when calling registerEventId in ClosureEvents, line 228")
endif
set Eb=Eb-1
set Tc[j0w]=x0w
if fc[Tc[j0w]]!=0 then
set Gc[fc[Tc[j0w]]]=j0w
set Yc[j0w]=fc[Tc[j0w]]
endif
set fc[Tc[j0w]]=j0w
set Eb=Eb-1
set Y0w=EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER
set Zb[Eb]="when calling alloc_Closure in MassControl, line 32"
set Eb=Eb+1
if jl==0 then
if xl<32768 then
set xl=xl+1
set v0w=xl
set vl[v0w]=671
else
call r7("Out of memory: Could not create Closure.","when calling error in MassControl, line 32")
set v0w=0
endif
else
set jl=jl-1
set v0w=kl[jl]
set vl[v0w]=671
endif
set Eb=Eb-1
set Tc[v0w]=0
set Yc[v0w]=0
set Gc[v0w]=0
set Zb[Eb]="when calling add in MassControl, line 32"
set Eb=Eb+1
set Zb[Eb]="when calling toIntId in ClosureEvents, line 111"
set Eb=Eb+1
set m0w=qc[GetHandleId(Y0w)]
if m0w==0 then
set m0w=TM(Y0w,"when calling registerEventId in ClosureEvents, line 228")
endif
set Eb=Eb-1
set Tc[v0w]=m0w
if fc[Tc[v0w]]!=0 then
set Gc[fc[Tc[v0w]]]=v0w
set Yc[v0w]=fc[Tc[v0w]]
endif
set fc[Tc[v0w]]=v0w
set Eb=Eb-1-1
set T0w=null
set Y0w=null
return true
endfunction
function uaw takes nothing returns boolean
set Eb=0
return Q0w("MassControl, line 1")
endfunction
function uj takes nothing returns nothing
local player Hk=GetOwningPlayer(GetSpellTargetUnit())
local playerstate Jk=PLAYER_STATE_RESOURCE_LUMBER
local playerstate Kk
local playerstate Lk
local player Xk
local force Ck
local location Vk
local real Bk
local real Nk
local player Mk
local force wj
if Jk==PLAYER_STATE_RESOURCE_GOLD then
set Kk=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(Hk,Kk,GetPlayerState(Hk,Kk)+500)
elseif Jk==PLAYER_STATE_RESOURCE_LUMBER then
set Lk=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(Hk,Lk,GetPlayerState(Hk,Lk)+500)
endif
call SetPlayerState(Hk,Jk,GetPlayerState(Hk,Jk)+500)
call RemoveUnit(GetSpellAbilityUnit())
set Xk=GetOwningPlayer(GetSpellTargetUnit())
set Ck=CreateForce()
call ForceAddPlayer(Ck,Xk)
if IsPlayerInForce(GetLocalPlayer(),Ck) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_1232")
endif
set e=GetUnitLoc(GetSpellTargetUnit())
set Mk=GetOwningPlayer(GetSpellTargetUnit())
set wj=CreateForce()
call ForceAddPlayer(wj,Mk)
set Vk=e
set Bk=GetLocationX(Vk)
set Nk=GetLocationY(Vk)
if IsPlayerInForce(GetLocalPlayer(),wj) then
call PingMinimap(Bk,Nk,2.00)
endif
call RemoveLocation(e)
set Hk=null
set Jk=null
set Kk=null
set Lk=null
set Xk=null
set Ck=null
set Vk=null
set Mk=null
set wj=null
endfunction
function uv takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988558,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989057,0)
endfunction
function xD takes nothing returns boolean
if GetUnitTypeId(GetConstructedStructure())!=1747990353 then
return false
endif
return true
endfunction
function vD takes nothing returns boolean
if not xD() then
return false
endif
return true
endfunction
function xI takes nothing returns boolean
if GetResearched()!=1378890053 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890053,true)!=2 then
return false
endif
return true
endfunction
function vI takes nothing returns boolean
if not xI() then
return false
endif
return true
endfunction
function vK takes nothing returns nothing
local player hK=GetOwningPlayer(GetAttacker())
local player FK=GetOwningPlayer(GetAttacker())
local player kK
local player jK
local unit xK
set r[GetPlayerId(hK)+1]=r[GetPlayerId(FK)+1]+1
set kK=GetOwningPlayer(GetTriggerUnit())
set jK=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(kK)+1]=r[GetPlayerId(jK)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set xK=GetTriggerUnit()
call SetUnitState(xK,UNIT_STATE_LIFE,GetUnitState(xK,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set hK=null
set FK=null
set kK=null
set jK=null
set xK=null
endfunction
function vL takes nothing returns boolean
return true
endfunction
function xx takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function vx takes nothing returns boolean
if not xx() then
return false
endif
return true
endfunction
function w8 takes nothing returns boolean
return true
endfunction
function wG takes nothing returns boolean
if GetSpellAbilityId()!=1093677620 then
return false
endif
return true
endfunction
function MD takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990356 then
return false
endif
return true
endfunction
function wH takes nothing returns boolean
if not MD() then
return false
endif
return true
endfunction
function MI takes nothing returns boolean
if GetResearched()!=1378890054 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890054,true)!=1 then
return false
endif
return true
endfunction
function wP takes nothing returns boolean
if not MI() then
return false
endif
return true
endfunction
function Jiw takes player Wiw,string Eiw returns integer
local integer Ziw
local integer Uiw
local integer Iiw
local player Piw
local integer Aiw
local integer Diw
local boolean Hiw
set Zb[Eb]=Eiw
set Eb=Eb+1
set Zb[Eb]="when calling PlayerStats in PlayerStats, line 129"
set Eb=Eb+1
if kb==0 then
if jb<32768 then
set jb=jb+1
set Uiw=jb
set xb[Uiw]=711
else
call r7("Out of memory: Could not create PlayerStats.","when calling error in PlayerStats, line 6")
set Uiw=0
endif
else
set kb=kb-1
set Uiw=Fb[kb]
set xb[Uiw]=711
endif
set Eb=Eb-1
set Ziw=Uiw
set Iiw=Uiw
set Piw=Wiw
set Zb[Eb]="when calling construct_PlayerStats in PlayerStats, line 129"
set Eb=Eb+1
set RO[Uiw]=false
set YO[Uiw]=0
set dO[Uiw]=-1
set TO[Uiw]=-1
set fO[Uiw]=Wiw
if GetPlayerSlotState(Wiw)==PLAYER_SLOT_STATE_PLAYING then
set Hiw=GetPlayerController(Wiw)==MAP_CONTROL_USER
else
set Hiw=false
endif
set RO[Uiw]=Hiw
set Aiw=0
set Diw=23
loop
exitwhen Aiw>Diw
if GO[Aiw]==Piw then
call xaw(Iiw,Aiw,-1,"when writing array PlayerStats_alliance_states in PlayerStats, line 137")
else
call xaw(Iiw,Aiw,bj_ALLIANCE_UNALLIED,"when writing array PlayerStats_alliance_states in PlayerStats, line 139")
endif
set Aiw=Aiw+1
endloop
set Eb=Eb-1-1
set Piw=null
return Ziw
endfunction
function Lcw takes rect Icw,string Pcw,integer Acw,integer Dcw,string Hcw returns nothing
local group Jcw
local unit Kcw
set Zb[Eb]=Hcw
set Eb=Eb+1
set Jcw=CreateGroup()
call GroupEnumUnitsInRect(Jcw,Icw,null)
call DestroyBoolExpr(null)
set Kcw=FirstOfGroup(Jcw)
call GroupRemoveUnit(Jcw,Kcw)
set AS[QS]=eN(Kcw,Pcw,Acw,Dcw,"when calling new_City in SettingCities, line 7")
set Eb=Eb-1
set Jcw=null
set Kcw=null
endfunction
function X9 takes string v9 returns nothing
local integer m9
local integer Q9
local real W9
local player E9
local integer Z9
local integer U9
local integer I9
local boolean P9
local location A9
local location D9
local integer H9
local real J9
local real K9
local real L9
set Zb[Eb]=v9
set Eb=Eb+1
set m9=24
set Q9=6
set W9=100.0
loop
exitwhen m9<=0
set Z9=1
set U9=Q9
loop
exitwhen Z9>U9
set J9=Z9*6.28318/Q9
set K9=311.2+W9*Cos(J9)
set L9=5166.7+W9*Sin(J9)
set E9=GO[24-m9+Z9-1]
set I9=nO[GetPlayerId(E9)]
set v9="when calling isInGame in MainInit, line 55"
set Zb[Eb]="when calling isInGame in MainInit, line 55"
set Eb=Eb+1
if xb[I9]==0 then
if I9==0 then
call r7("Nullpointer exception when calling PlayerStats.isInGame","when calling error in PlayerStats, line 14")
else
call r7("Called PlayerStats.isInGame on invalid object.","when calling error in PlayerStats, line 14")
endif
endif
set P9=RO[I9]
set Eb=Eb-1
if P9 then
set A9=Location(K9,L9)
set D9=Location(311.2,5166.7)
call CreateNUnitsAtLoc(1,1747988554,E9,A9,bj_RADTODEG*Atan2(GetLocationY(D9)-GetLocationY(A9),GetLocationX(D9)-GetLocationX(A9)))
endif
set Z9=Z9+1
endloop
set W9=W9+50.0
set m9=m9-Q9
set Q9=Q9+2
if m9<2147483647 then
set H9=m9
else
set H9=2147483647
endif
if Q9<H9 then
set H9=Q9
endif
set Q9=H9
endloop
set Eb=Eb-1
set E9=null
set A9=null
set D9=null
endfunction
function x9 takes string n9 returns boolean
local integer d9
local integer f9
local trigger R9
local integer T9
local integer Y9
local integer G9
local player g9
local integer h9
local player F9
local boolean k9
local boolean j9
set Zb[Eb]=n9
set Eb=Eb+1
set xo[0]="You're playing |cffffff65Crusade over Europe|r.\nA grand strategy medieval game inspired by many games and genres.\nCreate alliances and dissolve them just as easily, declare war on your neighbours and |cfff5da16Conquer Europe|r.\n|cffff0000To skip the tutorial, press ESC|r"
set xo[1]="Use your |cffff8040Settler|r to choose the location of your Kingdom, use the ability |cffffff80Create Capitol|r on any Town Hall to build your Capitol.\nChoose your postion carefully and be mindful of the other players positions."
set xo[2]="|cfff5da16Mechanics|r\n\n|cff80ff00Supply & Nutrition:|r All units and building will continuously lose Hit Points if not supplied by |cff00f7ffCities or Supply Horses|r.\n|cffff0000Public Order|r represents satisfaction level of population of each city and can be checked in top-right menu.\nLow Public Order will cause revolts."
set xo[3]="|cfff5da16Combat & Diplomacy|r\n\nBuild your army but keep in mind that every army will have its weaknesses. Use general's Mass Control ability to quickly manipulate your army.\nUse |cffffff80Diplomacy|r (F1) menu to create Alliances and Declare War."
set xo[4]="|cfff5da16Economy|r\n\n|cffffff80Florins|r (Gold) are given each Turn (2 minutes), you can increase the amount generated by capturing |cffffff80Cities|r or precious |cffffff80Ores|r and upgrading them into |cffffff80Mines|r.\nLumber is harvested from Trees.\n|cffff0000You can check public order of currently selected city and your income in top-right menu|r"
set T9=0
set Y9=0
set G9=23
loop
exitwhen Y9>G9
set g9=GO[Y9]
if GetPlayerSlotState(g9)==PLAYER_SLOT_STATE_PLAYING then
set k9=GetPlayerController(g9)==MAP_CONTROL_USER
else
set k9=false
endif
if k9 then
set T9=T9+1
endif
set Y9=Y9+1
endloop
set mo=T9
if Eo then
call Mww("Debug info is enabled. Only for Red.")
endif
if Zo then
call DisplayTimedTextToPlayer(gO,0.,0.,45.,"Debug mode is on.")
endif
set Zb[Eb]="when calling setupCities in MainInit, line 98"
set Eb=Eb+1
call Lcw(F,"Adrianopolis",3,1,"when calling newCity in SettingCities, line 26")
call Lcw(cs,"Arta",3,0,"when calling newCity in SettingCities, line 27")
call Lcw(Nr,"Athens",3,1,"when calling newCity in SettingCities, line 28")
call Lcw(Br,"Ragusa",3,0,"when calling newCity in SettingCities, line 29")
call Lcw(bs,"Canakkale",3,0,"when calling newCity in SettingCities, line 30")
call Lcw(os,"Candia",3,0,"when calling newCity in SettingCities, line 31")
call Lcw(j,"Constantinople",3,4,"when calling newCity in SettingCities, line 32")
call Lcw(Ss,"Corinth",3,0,"when calling newCity in SettingCities, line 33")
call Lcw(h,"Durazzo",3,0,"when calling newCity in SettingCities, line 34")
call Lcw(us,"Nikomedeia",3,0,"when calling newCity in SettingCities, line 35")
call Lcw(bu,"Kutaisi",3,0,"when calling newCity in SettingCities, line 36")
call Lcw(Hw,"Nicae",3,2,"when calling newCity in SettingCities, line 37")
call Lcw(Uw,"Nicosia",3,0,"when calling newCity in SettingCities, line 38")
call Lcw(Mr,"Rhodes",3,0,"when calling newCity in SettingCities, line 39")
call Lcw(v,"Scopia",3,0,"when calling newCity in SettingCities, line 40")
call Lcw(Aw,"Smyrna",3,0,"when calling newCity in SettingCities, line 41")
call Lcw(yu,"Tbilisi",3,0,"when calling newCity in SettingCities, line 42")
call Lcw(Zw,"Trebizond",3,1,"when calling newCity in SettingCities, line 43")
call Lcw(k,"Thessalonika",3,3,"when calling newCity in SettingCities, line 44")
call Lcw(Wu,"Astrakhan'",1,2,"when calling newCity in SettingCities, line 48")
call Lcw(gw,"Azaq",1,0,"when calling newCity in SettingCities, line 49")
call Lcw(su,"Baia",1,0,"when calling newCity in SettingCities, line 50")
call Lcw(ou,"Bryansk",1,0,"when calling newCity in SettingCities, line 51")
call Lcw(tw,"Caffa",1,0,"when calling newCity in SettingCities, line 52")
call Lcw(I,"Constanta",1,0,"when calling newCity in SettingCities, line 53")
call Lcw(Su,"Dnipro",1,0,"when calling newCity in SettingCities, line 54")
call Lcw(dw,"Halych",1,0,"when calling newCity in SettingCities, line 55")
call Lcw(hw,"Kiev",1,2,"when calling newCity in SettingCities, line 56")
call Lcw(M,"Konigsberg",1,0,"when calling newCity in SettingCities, line 57")
call Lcw(rw,"Hrodna",1,0,"when calling newCity in SettingCities, line 58")
call Lcw(Fw,"Minsk",1,1,"when calling newCity in SettingCities, line 59")
call Lcw(cu,"Moscow",1,0,"when calling newCity in SettingCities, line 60")
call Lcw(cw,"Novgorod",1,0,"when calling newCity in SettingCities, line 61")
call Lcw(iu,"Olesh'e",1,0,"when calling newCity in SettingCities, line 62")
call Lcw(ow,"Polotsk",1,0,"when calling newCity in SettingCities, line 63")
call Lcw(iw,"Pskov",1,0,"when calling newCity in SettingCities, line 64")
call Lcw(Sw,"Reval",1,0,"when calling newCity in SettingCities, line 65")
call Lcw(ww,"Riga",1,1,"when calling newCity in SettingCities, line 66")
call Lcw(ys,"Bulgar",1,0,"when calling newCity in SettingCities, line 67")
call Lcw(Eu,"Ryazan'",1,0,"when calling newCity in SettingCities, line 68")
call Lcw(lu,"Sarkel",1,0,"when calling newCity in SettingCities, line 69")
call Lcw(kw,"Smolensk",1,1,"when calling newCity in SettingCities, line 70")
call Lcw(X,"Sofia",1,0,"when calling newCity in SettingCities, line 71")
call Lcw(P,"Targovitse",1,1,"when calling newCity in SettingCities, line 72")
call Lcw(ru,"Tmutarakan'",1,0,"when calling newCity in SettingCities, line 73")
call Lcw(ws,"Turku",1,0,"when calling newCity in SettingCities, line 74")
call Lcw(sw,"Vilnius",1,1,"when calling newCity in SettingCities, line 75")
call Lcw(tu,"Zhytomir",1,0,"when calling newCity in SettingCities, line 76")
call Lcw(nu,"Acre",2,2,"when calling newCity in SettingCities, line 80")
call Lcw(Qw,"Adana",2,0,"when calling newCity in SettingCities, line 81")
call Lcw(ns,"Alamut",2,0,"when calling newCity in SettingCities, line 82")
call Lcw(du,"Al-Aqaba",2,0,"when calling newCity in SettingCities, line 83")
call Lcw(Mw,"Alexandria",2,2,"when calling newCity in SettingCities, line 84")
call Lcw(Lw,"Algiers",2,0,"when calling newCity in SettingCities, line 85")
call Lcw(Dw,"Ankara",2,1,"when calling newCity in SettingCities, line 86")
call Lcw(Ew,"Antioch",2,2,"when calling newCity in SettingCities, line 87")
call Lcw(rs,"Badajoz",2,0,"when calling newCity in SettingCities, line 88")
call Lcw(ls,"Baghdad",2,4,"when calling newCity in SettingCities, line 89")
call Lcw(ds,"Baku",2,0,"when calling newCity in SettingCities, line 90")
call Lcw(Vw,"Benghazi",2,1,"when calling newCity in SettingCities, line 91")
call Lcw(qs,"Beleb-el-Anab",2,0,"when calling newCity in SettingCities, line 92")
call Lcw(uu,"Cairo",2,3,"when calling newCity in SettingCities, line 93")
call Lcw(Yr,"Cordoba",2,4,"when calling newCity in SettingCities, line 94")
call Lcw(pu,"Damascus",2,2,"when calling newCity in SettingCities, line 95")
call Lcw(wu,"Damietta",2,1,"when calling newCity in SettingCities, line 96")
call Lcw(Tu,"Diyarbakir",2,0,"when calling newCity in SettingCities, line 97")
call Lcw(Pw,"Edessa",2,1,"when calling newCity in SettingCities, line 98")
call Lcw(Yu,"Erez",2,1,"when calling newCity in SettingCities, line 99")
call Lcw(Jw,"Fes",2,3,"when calling newCity in SettingCities, line 100")
call Lcw(qu,"Gaza",2,0,"when calling newCity in SettingCities, line 101")
call Lcw(Tr,"Granada",2,2,"when calling newCity in SettingCities, line 102")
call Lcw(vw,"Isparta",2,0,"when calling newCity in SettingCities, line 103")
call Lcw(Iw,"Jerusalem",2,3,"when calling newCity in SettingCities, line 104")
call Lcw(mw,"Kayseri",2,1,"when calling newCity in SettingCities, line 105")
call Lcw(Os,"Kerak",2,0,"when calling newCity in SettingCities, line 106")
call Lcw(fs,"Kermanshah",2,0,"when calling newCity in SettingCities, line 107")
call Lcw(Ww,"Konya",2,0,"when calling newCity in SettingCities, line 108")
call Lcw(cr,"Lisbon",2,0,"when calling newCity in SettingCities, line 109")
call Lcw(Ir,"Luxor",2,0,"when calling newCity in SettingCities, line 110")
call Lcw(ir,"Madrid",2,0,"when calling newCity in SettingCities, line 111")
call Lcw(Xw,"Mahdya",2,0,"when calling newCity in SettingCities, line 112")
call Lcw(Ur,"Marrakesh",2,3,"when calling newCity in SettingCities, line 113")
call Lcw(Nw,"Medina",2,2,"when calling newCity in SettingCities, line 114")
call Lcw(es,"Melilla",2,0,"when calling newCity in SettingCities, line 115")
call Lcw(au,"Mosul",2,1,"when calling newCity in SettingCities, line 116")
call Lcw(Gr,"Murcia",2,1,"when calling newCity in SettingCities, line 117")
call Lcw(Kw,"Oran",2,0,"when calling newCity in SettingCities, line 118")
call Lcw(Qu,"Palma",2,1,"when calling newCity in SettingCities, line 119")
call Lcw(fu,"Quarisiya",2,1,"when calling newCity in SettingCities, line 120")
call Lcw(Zr,"Silves",2,0,"when calling newCity in SettingCities, line 121")
call Lcw(xw,"Sinop",2,0,"when calling newCity in SettingCities, line 122")
call Lcw(Ru,"Tamiya",2,0,"when calling newCity in SettingCities, line 123")
call Lcw(eu,"Tartus",2,0,"when calling newCity in SettingCities, line 124")
call Lcw(as,"Tabriz",2,0,"when calling newCity in SettingCities, line 125")
call Lcw(Cw,"Tripoli",2,1,"when calling newCity in SettingCities, line 126")
call Lcw(Gw,"Tunis",2,1,"when calling newCity in SettingCities, line 127")
call Lcw(gr,"Valencia",2,0,"when calling newCity in SettingCities, line 128")
call Lcw(Ou,"Yerevan",2,0,"when calling newCity in SettingCities, line 129")
call Lcw(K,"Aarhus",0,1,"when calling newCity in SettingCities, line 133")
call Lcw(Uu,"Aberdeen",0,1,"when calling newCity in SettingCities, line 134")
call Lcw(Dr,"Ajaccio",0,0,"when calling newCity in SettingCities, line 135")
call Lcw(fr,"Ancona",0,1,"when calling newCity in SettingCities, line 136")
call Lcw(Ar,"Angers",0,0,"when calling newCity in SettingCities, line 137")
call Lcw(pr,"Antwerp",0,0,"when calling newCity in SettingCities, line 138")
call Lcw(rr,"Barcelona",0,1,"when calling newCity in SettingCities, line 139")
call Lcw(Lr,"Bari",0,0,"when calling newCity in SettingCities, line 140")
call Lcw(D,"Belgrade",0,1,"when calling newCity in SettingCities, line 141")
call Lcw(Qr,"Bergen",0,1,"when calling newCity in SettingCities, line 142")
call Lcw(Fr,"Bern",0,0,"when calling newCity in SettingCities, line 143")
call Lcw(nr,"Bologna",0,1,"when calling newCity in SettingCities, line 144")
call Lcw(wr,"Bordeaux",0,1,"when calling newCity in SettingCities, line 145")
call Lcw(A,"Brasov",0,0,"when calling newCity in SettingCities, line 146")
call Lcw(yr,"Bruges",0,0,"when calling newCity in SettingCities, line 147")
call Lcw(R,"Burgh",0,0,"when calling newCity in SettingCities, line 148")
call Lcw(tr,"Burgos",0,1,"when calling newCity in SettingCities, line 149")
call Lcw(Xu,"Caen",0,0,"when calling newCity in SettingCities, line 150")
call Lcw(Hu,"Caenarfon",0,0,"when calling newCity in SettingCities, line 151")
call Lcw(Hr,"Cagliari",0,0,"when calling newCity in SettingCities, line 152")
call Lcw(T,"Cardiff",0,0,"when calling newCity in SettingCities, line 153")
call Lcw(Nu,"Clermont",0,1,"when calling newCity in SettingCities, line 154")
call Lcw(xu,"Cologne",0,1,"when calling newCity in SettingCities, line 155")
call Lcw(Bu,"Dijon",0,0,"when calling newCity in SettingCities, line 156")
call Lcw(Au,"Dublin",0,0,"when calling newCity in SettingCities, line 157")
call Lcw(Zu,"Edinburgh",0,0,"when calling newCity in SettingCities, line 158")
call Lcw(mr,"Eikundarsund",0,0,"when calling newCity in SettingCities, line 159")
call Lcw(W,"Esztergom",0,1,"when calling newCity in SettingCities, line 160")
call Lcw(Lu,"Exeter",0,0,"when calling newCity in SettingCities, line 161")
call Lcw(uw,"Gdansk",0,0,"when calling newCity in SettingCities, line 162")
call Lcw(H,"Flensburg",0,0,"when calling newCity in SettingCities, line 163")
call Lcw(vu,"Frankfurt",0,1,"when calling newCity in SettingCities, line 164")
call Lcw(Y,"Galway",0,0,"when calling newCity in SettingCities, line 165")
call Lcw(er,"Genoa",0,2,"when calling newCity in SettingCities, line 166")
call Lcw(Yw,"Groningen",0,0,"when calling newCity in SettingCities, line 167")
call Lcw(ju,"Innsbruck",0,0,"when calling newCity in SettingCities, line 168")
call Lcw(Iu,"Inverness",0,0,"when calling newCity in SettingCities, line 169")
call Lcw(Du,"Desmond",0,0,"when calling newCity in SettingCities, line 170")
call Lcw(Kr,"Reggio",0,0,"when calling newCity in SettingCities, line 172")
call Lcw(is,"Kalmar",0,0,"when calling newCity in SettingCities, line 173")
call Lcw(B,"Kassa",0,0,"when calling newCity in SettingCities, line 174")
call Lcw(Z,"Krakow",0,2,"when calling newCity in SettingCities, line 175")
call Lcw(sr,"Leon",0,1,"when calling newCity in SettingCities, line 176")
call Lcw(Ju,"London",0,0,"when calling newCity in SettingCities, line 177")
call Lcw(jr,"Lund",0,0,"when calling newCity in SettingCities, line 178")
call Lcw(kr,"Lyon",0,0,"when calling newCity in SettingCities, line 179")
call Lcw(L,"Madgeburg",0,0,"when calling newCity in SettingCities, line 180")
call Lcw(br,"Marsellie",0,1,"when calling newCity in SettingCities, line 181")
call Lcw(Vr,"Metz",0,0,"when calling newCity in SettingCities, line 182")
call Lcw(qr,"Milan",0,1,"when calling newCity in SettingCities, line 183")
call Lcw(Jr,"Naples",0,1,"when calling newCity in SettingCities, line 184")
call Lcw(hr,"Nuremburg",0,0,"when calling newCity in SettingCities, line 185")
call Lcw(Er,"Nykoping",0,0,"when calling newCity in SettingCities, line 186")
call Lcw(ss,"Oporto",0,0,"when calling newCity in SettingCities, line 187")
call Lcw(vr,"Oslo",0,1,"when calling newCity in SettingCities, line 188")
call Lcw(ps,"Buda",0,1,"when calling newCity in SettingCities, line 189")
call Lcw(Xr,"Palermo",0,3,"when calling newCity in SettingCities, line 190")
call Lcw(lr,"Pamplona",0,0,"when calling newCity in SettingCities, line 191")
call Lcw(Vu,"Paris",0,1,"when calling newCity in SettingCities, line 192")
call Lcw(dr,"Pisa",0,0,"when calling newCity in SettingCities, line 193")
call Lcw(C,"Plock",0,0,"when calling newCity in SettingCities, line 194")
call Lcw(V,"Poznan",0,1,"when calling newCity in SettingCities, line 195")
call Lcw(Q,"Prague",0,0,"when calling newCity in SettingCities, line 196")
call Lcw(g,"Zadar",0,0,"when calling newCity in SettingCities, line 197")
call Lcw(Pr,"Rennes",0,0,"when calling newCity in SettingCities, line 198")
call Lcw(Cu,"Rheims",0,0,"when calling newCity in SettingCities, line 199")
call Lcw(Rr,"Rome",0,1,"when calling newCity in SettingCities, line 200")
call Lcw(J,"Roskilde",0,0,"when calling newCity in SettingCities, line 201")
call Lcw(Sr,"Salamanca",0,0,"when calling newCity in SettingCities, line 202")
call Lcw(ku,"Salzburg",0,0,"when calling newCity in SettingCities, line 203")
call Lcw(xr,"Skara",0,0,"when calling newCity in SettingCities, line 204")
call Lcw(E,"Stettin",0,0,"when calling newCity in SettingCities, line 205")
call Lcw(ts,"Stockholm",0,1,"when calling newCity in SettingCities, line 206")
call Lcw(Cr,"Syracuse",0,0,"when calling newCity in SettingCities, line 207")
call Lcw(Mu,"Toulouse",0,0,"when calling newCity in SettingCities, line 208")
call Lcw(N,"Varad",0,0,"when calling newCity in SettingCities, line 209")
call Lcw(ar,"Venice",0,2,"when calling newCity in SettingCities, line 210")
call Lcw(m,"Vienna",0,0,"when calling newCity in SettingCities, line 211")
call Lcw(Wr,"Visby",0,0,"when calling newCity in SettingCities, line 212")
call Lcw(x,"Warwick",0,0,"when calling newCity in SettingCities, line 213")
call Lcw(Ku,"Winchester",0,1,"when calling newCity in SettingCities, line 214")
call Lcw(U,"Wroclaw",0,0,"when calling newCity in SettingCities, line 215")
call Lcw(Pu,"York",0,1,"when calling newCity in SettingCities, line 216")
call Lcw(G,"Zagreb",0,0,"when calling newCity in SettingCities, line 217")
call Lcw(ur,"Zaragoza",0,0,"when calling newCity in SettingCities, line 218")
call Lcw(mu,"Hamburg",0,1,"when calling newCity in SettingCities, line 219")
set Eb=Eb-1
call SetForceAllianceStateBJ(bj_FORCE_ALL_PLAYERS,bj_FORCE_PLAYER[PLAYER_NEUTRAL_PASSIVE],bj_ALLIANCE_NEUTRAL)
call SetForceAllianceStateBJ(bj_FORCE_ALL_PLAYERS,bj_FORCE_ALL_PLAYERS,bj_ALLIANCE_UNALLIED)
call SetForceAllianceStateBJ(wo,wo,bj_ALLIANCE_NEUTRAL)
call SetForceAllianceStateBJ(uo,uo,bj_ALLIANCE_NEUTRAL)
call SetForceAllianceStateBJ(ro,ro,bj_ALLIANCE_NEUTRAL)
call SetForceAllianceStateBJ(so,so,bj_ALLIANCE_NEUTRAL)
set d9=0
set f9=23
loop
exitwhen d9>f9
call SetPlayerState(GO[d9],PLAYER_STATE_RESOURCE_GOLD,260)
call SetPlayerState(GO[d9],PLAYER_STATE_RESOURCE_LUMBER,250)
if Zo then
call n0w(GO[d9])
endif
call SetPlayerTechMaxAllowed(GO[d9],1747988789,1)
set nO[d9]=Jiw(GO[d9],"when calling new_PlayerStats in MainInit, line 121")
set h9=nO[d9]
set F9=GO[d9]
if GetPlayerSlotState(F9)==PLAYER_SLOT_STATE_PLAYING then
set j9=GetPlayerController(F9)==MAP_CONTROL_USER
else
set j9=false
endif
set Zb[Eb]="when calling setInGame in MainInit, line 122"
set Eb=Eb+1
if xb[h9]==0 then
if h9==0 then
call r7("Nullpointer exception when calling PlayerStats.setInGame","when calling error in PlayerStats, line 17")
else
call r7("Called PlayerStats.setInGame on invalid object.","when calling error in PlayerStats, line 17")
endif
endif
set RO[h9]=j9
set Eb=Eb-1
set d9=d9+1
endloop
call X9("when calling setPlayersAtStart in MainInit, line 124")
set R9=CreateTrigger()
call TriggerRegisterTimerEvent(R9,0.01,false)
call TriggerAddAction(R9,Qf)
set Eb=Eb-1
set R9=null
set g9=null
set F9=null
return true
endfunction
function waw takes nothing returns boolean
set Eb=0
return x9("MainInit, line 1")
endfunction
function wk takes nothing returns nothing
local player DF=GetOwningPlayer(GetKillingUnit())
local playerstate HF=PLAYER_STATE_RESOURCE_LUMBER
local playerstate JF
local playerstate KF
local player LF
local force XF
local location CF
local real VF
local real BF
local player NF
local force MF
if HF==PLAYER_STATE_RESOURCE_GOLD then
set JF=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(DF,JF,GetPlayerState(DF,JF)+250)
elseif HF==PLAYER_STATE_RESOURCE_LUMBER then
set KF=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(DF,KF,GetPlayerState(DF,KF)+250)
endif
call SetPlayerState(DF,HF,GetPlayerState(DF,HF)+250)
set LF=GetOwningPlayer(GetKillingUnit())
set XF=CreateForce()
call ForceAddPlayer(XF,LF)
if IsPlayerInForce(GetLocalPlayer(),XF) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_090")
endif
set e=GetUnitLoc(GetDyingUnit())
set NF=GetOwningPlayer(GetDyingUnit())
set MF=CreateForce()
call ForceAddPlayer(MF,NF)
set CF=e
set VF=GetLocationX(CF)
set BF=GetLocationY(CF)
if IsPlayerInForce(GetLocalPlayer(),MF) then
call PingMinimap(VF,BF,2.00)
endif
call RemoveLocation(e)
set DF=null
set HF=null
set JF=null
set KF=null
set LF=null
set XF=null
set CF=null
set NF=null
set MF=null
endfunction
function Mx takes nothing returns boolean
if GetResearched()!=1378889796 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889796,true)!=2 then
return false
endif
return true
endfunction
function wv takes nothing returns boolean
if not Mx() then
return false
endif
return true
endfunction
function xH takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function xL takes nothing returns boolean
set lS=GO[PLAYER_NEUTRAL_PASSIVE]
return true
endfunction
function xOw takes nothing returns boolean
set el=CreateTrigger()
set ql=CreateTrigger()
set al=null
set nl=null
call TriggerAddCondition(pO,Filter(Uf))
call TriggerAddAction(pO,If)
return true
endfunction
function xP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990598,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990597,0)
endfunction
function xv takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651826,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651824,0)
endfunction
function yA takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747988553 then
return false
endif
return true
endfunction
function bJ takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989060 then
return false
endif
return true
endfunction
function yJ takes nothing returns boolean
if not bJ() then
return false
endif
return true
endfunction
function yW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989557,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989559,0)
endfunction
function yaw takes nothing returns nothing
set Eb=0
set Zb[Eb]="ClosureEvents, line 288"
set Eb=Eb+1
call VM("when calling generalEventCallback in ClosureEvents, line 288")
set Eb=Eb-1
endfunction
function bm takes nothing returns boolean
if GetResearched()!=1378889801 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889801,true)!=1 then
return false
endif
return true
endfunction
function ym takes nothing returns boolean
if not bm() then
return false
endif
return true
endfunction
function Cf takes nothing returns nothing
set w=null
set u=null
set s=null
set i=null
set S=null
set c=null
set o=null
set O=null
set l=null
set b=null
set p=null
set e=null
set a=null
set n=null
set d=null
set f=null
set R=null
set T=null
set Y=null
set G=null
set g=null
set h=null
set F=null
set k=null
set j=null
set x=null
set v=null
set m=null
set Q=null
set W=null
set E=null
set Z=null
set U=null
set I=null
set P=null
set A=null
set D=null
set H=null
set J=null
set K=null
set L=null
set X=null
set C=null
set V=null
set B=null
set N=null
set M=null
set ww=null
set uw=null
set rw=null
set sw=null
set tw=null
set iw=null
set Sw=null
set cw=null
set ow=null
set Ow=null
set lw=null
set bw=null
set yw=null
set pw=null
set ew=null
set qw=null
set aw=null
set nw=null
set dw=null
set fw=null
set Rw=null
set Tw=null
set Yw=null
set Gw=null
set gw=null
set hw=null
set Fw=null
set kw=null
set jw=null
set xw=null
set vw=null
set mw=null
set Qw=null
set Ww=null
set Ew=null
set Zw=null
set Uw=null
set Iw=null
set Pw=null
set Aw=null
set Dw=null
set Hw=null
set Jw=null
set Kw=null
set Lw=null
set Xw=null
set Cw=null
set Vw=null
set Bw=null
set Nw=null
set Mw=null
set wu=null
set uu=null
set ru=null
set su=null
set tu=null
set iu=null
set Su=null
set cu=null
set ou=null
set Ou=null
set lu=null
set bu=null
set yu=null
set pu=null
set eu=null
set qu=null
set au=null
set nu=null
set du=null
set fu=null
set Ru=null
set Tu=null
set Yu=null
set Gu=null
set gu=null
set hu=null
set Fu=null
set ku=null
set ju=null
set xu=null
set vu=null
set mu=null
set Qu=null
set Wu=null
set Eu=null
set Zu=null
set Uu=null
set Iu=null
set Pu=null
set Au=null
set Du=null
set Hu=null
set Ju=null
set Ku=null
set Lu=null
set Xu=null
set Cu=null
set Vu=null
set Bu=null
set Nu=null
set Mu=null
set wr=null
set ur=null
set rr=null
set sr=null
set tr=null
set ir=null
set Sr=null
set cr=null
set lr=null
set br=null
set yr=null
set pr=null
set er=null
set qr=null
set ar=null
set nr=null
set dr=null
set fr=null
set Rr=null
set Tr=null
set Yr=null
set Gr=null
set gr=null
set hr=null
set Fr=null
set kr=null
set jr=null
set xr=null
set vr=null
set mr=null
set Qr=null
set Wr=null
set Er=null
set Zr=null
set Ur=null
set Ir=null
set Pr=null
set Ar=null
set Dr=null
set Hr=null
set Jr=null
set Kr=null
set Lr=null
set Xr=null
set Cr=null
set Vr=null
set Br=null
set Nr=null
set Mr=null
set ws=null
set us=null
set rs=null
set ss=null
set ts=null
set is=null
set Ss=null
set cs=null
set os=null
set Os=null
set ls=null
set bs=null
set ys=null
set ps=null
set es=null
set qs=null
set as=null
set ns=null
set ds=null
set fs=null
set Rs=null
set Ts=null
set Ys=null
set Gs=null
set gs=null
set hs=null
set Fs=null
set ks=null
set js=null
set xs=null
set vs=null
set ms=null
set Qs=null
set Ws=null
set Es=null
set Zs=null
set Us=null
set Is=null
set Ps=null
set As=null
set Ds=null
set Hs=null
set Js=null
set Ks=null
set Ls=null
set Xs=null
set Cs=null
set Vs=null
set Bs=null
set Ns=null
set Ms=null
set wt=null
set ut=null
set rt=null
set st=null
set tt=null
set St=null
set ct=null
set ot=null
set Ot=null
set lt=null
set bt=null
set yt=null
set pt=null
set et=null
set qt=null
set at=null
set nt=null
set dt=null
set ft=null
set Rt=null
set Tt=null
set Yt=null
set Gt=null
set gt=null
set ht=null
set Ft=null
set kt=null
set jt=null
set xt=null
set vt=null
set mt=null
set Qt=null
set Wt=null
set Et=null
set Zt=null
set Ut=null
set It=null
set Pt=null
set At=null
set Dt=null
set Ht=null
set Jt=null
set Kt=null
set Lt=null
set Xt=null
set Ct=null
set Vt=null
set Bt=null
set Nt=null
set Mt=null
set wi=null
set ui=null
set ri=null
set si=null
set ti=null
set ii=null
set Si=null
set ci=null
set oi=null
set Oi=null
set li=null
set bi=null
set yi=null
set pi=null
set ei=null
set qi=null
set ai=null
set ni=null
set di=null
set fi=null
set Ri=null
set Ti=null
set Yi=null
set Gi=null
set gi=null
set hi=null
set Fi=null
set ki=null
set ji=null
set xi=null
set vi=null
set mi=null
set Qi=null
set Wi=null
set Ei=null
set Zi=null
set Ui=null
set Ii=null
set Pi=null
set Ai=null
set Di=null
set Hi=null
set Ji=null
set Ki=null
set Li=null
set Xi=null
set Ci=null
set Vi=null
set Bi=null
set Ni=null
set Mi=null
set wS=null
set uS=null
set rS=null
set sS=null
set tS=null
set iS=null
set SS=null
set cS=null
set oS=null
set yy=function VR
set py=function MR
set ey=function pT
set qy=function fT
set ay=function YT
set ny=function jT
set dy=function mT
set fy=function IT
set Ry=function DT
set Ty=function CT
set Yy=function uY
set Gy=function cY
set gy=function pY
set hy=function fY
set Fy=function hY
set ky=function mY
set jy=function IY
set xy=function KY
set vy=function CY
set my=function wG
set Qy=function uG
set Wy=function eG
set Ey=function TG
set Zy=function fG
set Uy=function mG
set Iy=function PG
set Py=function UG
set Ay=function BG
set Dy=function tg
set Hy=function rg
set Jy=function eg
set Ky=function Tg
set Ly=function fg
set Xy=function mg
set Cy=function Pg
set Vy=function Jg
set By=function Cg
set Ny=function Mg
set My=function rh
set wp=function eh
set up=function Rh
set rp=function Qh
set sp=function Ph
set tp=function Mh
set ip=function iF
set Sp=function nF
set cp=function YF
set op=function EF
set Op=function AF
set lp=function wk
set bp=function ik
set yp=function nk
set pp=function Yk
set ep=function Ek
set qp=function Dk
set ap=function uj
set np=function cj
set dp=function fj
set fp=function hj
set Rp=function Ij
set Tp=function Jj
set Yp=function sx
set Gp=function Ox
set gp=function lx
set hp=function ax
set Fp=function nx
set kp=function Gx
set jp=function gx
set xp=function vx
set vp=function mx
set mp=function Ix
set Qp=function Px
set Wp=function Lx
set Ep=function Xx
set Zp=function wv
set Up=function uv
set Ip=function cv
set Pp=function ov
set Ap=function ev
set Dp=function qv
set Hp=function Tv
set Jp=function Yv
set Kp=function jv
set Lp=function xv
set Xp=function Zv
set Cp=function Uv
set Vp=function Jv
set Bp=function Kv
set Np=function Nv
set Mp=function Mv
set we=function im
set ue=function Sm
set re=function ym
set se=function pm
set te=function fm
set ie=function Rm
set Se=function Fm
set ce=function km
set oe=function Wm
set Oe=function Em
set le=function Dm
set be=function Hm
set ye=function Vm
set pe=function Bm
set ee=function sQ
set qe=function tQ
set ae=function OQ
set ne=function lQ
set de=function pQ
set fe=function eQ
set Re=function RQ
set Te=function TQ
set Ye=function kQ
set Ge=function jQ
set ge=function EQ
set he=function ZQ
set Fe=function HQ
set ke=function JQ
set je=function BQ
set xe=function NQ
set ve=function tW
set me=function iW
set Qe=function bW
set We=function yW
set Ee=function dW
set Ze=function fW
set Ue=function hW
set Ie=function FW
set Pe=function QW
set Ae=function WW
set De=function AW
set He=function DW
set Je=function CW
set Ke=function VW
set Le=function rE
set Xe=function sE
set Ce=function OE
set Ve=function lE
set Be=function qE
set Ne=function aE
set Me=function fE
set wq=function RE
set uq=function FE
set rq=function kE
set sq=function WE
set tq=function EE
set iq=function DE
set Sq=function HE
set cq=function VE
set oq=function BE
set Oq=function sZ
set lq=function tZ
set bq=function lZ
set yq=function bZ
set pq=function nZ
set eq=function dZ
set qq=function gZ
set aq=function hZ
set nq=function mZ
set dq=function QZ
set fq=function PZ
set Rq=function AZ
set Tq=function XZ
set Yq=function CZ
set Gq=function uU
set gq=function rU
set hq=function oU
set Fq=function OU
set kq=function eU
set jq=function qU
set xq=function dU
set vq=function fU
set mq=function hU
set Qq=function FU
set Wq=function QU
set Eq=function WU
set Zq=function AU
set Uq=function DU
set Iq=function CU
set Pq=function VU
set Aq=function rI
set Dq=function sI
set Hq=function OI
set Jq=function lI
set Kq=function aI
set Lq=function nI
set Xq=function GI
set Cq=function gI
set Vq=function vI
set Bq=function mI
set Nq=function II
set Mq=function PI
set wa=function LI
set ua=function XI
set ra=function wP
set sa=function uP
set ta=function cP
set ia=function oP
set Sa=function eP
set ca=function qP
set oa=function TP
set Oa=function YP
set la=function jP
set ba=function xP
set ya=function ZP
set pa=function UP
set ea=function HP
set qa=function JP
set aa=function LP
set na=function MP
set da=function cA
set fa=function yA
set Ra=function RA
set Ta=function FA
set Ya=function EA
set Ga=function DA
set ga=function BA
set ha=function rD
set Fa=function SD
set ka=function OD
set ja=function lD
set xa=function aD
set va=function nD
set ma=function GD
set Qa=function gD
set Wa=function vD
set Ea=function mD
set Za=function ID
set Ua=function PD
set Ia=function LD
set Pa=function XD
set Aa=function wH
set Da=function uH
set Ha=function cH
set Ja=function oH
set Ka=function eH
set La=function qH
set Xa=function TH
set Ca=function YH
set Va=function jH
set Ba=function xH
set Na=function ZH
set Ma=function UH
set wn=function JH
set un=function KH
set rn=function NH
set sn=function MH
set tn=function iJ
set Sn=function SJ
set cn=function yJ
set on=function pJ
set On=function fJ
set ln=function RJ
set bn=function FJ
set yn=function kJ
set pn=function WJ
set en=function EJ
set qn=function DJ
set an=function HJ
set nn=function VJ
set dn=function BJ
set fn=function sK
set Rn=function tK
set Tn=function lK
set Yn=function bK
set Gn=function nK
set gn=function dK
set hn=function gK
set Fn=function vK
set kn=function UK
set jn=function JK
set xn=function BK
set vn=function sL
set mn=function OL
set Qn=function qL
set Wn=function XR
set En=function CR
set Zn=function gj
set Un=function XSw
set In=function M7
set Pn=function Vcw
set An=function jL
set Dn=function Blw
set Hn=function Gww
set Jn=function Jtw
set Kn=function sSw
set Ln=function xL
set Xn=function t7
set Cn=function q9
set Vn=function J6
set Bn=function gww
set Nn=function oSw
set Mn=function iow
set wd=function Kiw
set ud=function fqw
set rd=function S7
set sd=function w8
set td=function Nlw
set id=function Rqw
set Sd=function l3
set cd=function Tqw
set od=function Gqw
set Od=function kL
set ld=function vL
set bd=function c7
set yd=function gqw
set pd=function hqw
set ed=function s7
set qd=function qcw
set ad=function mqw
set nd=function msw
set dd=function Qqw
set fd=function Wqw
set Rd=function Eqw
set Td=function Q3
set Yd=function Oow
set Gd=function L2
set gd=function N7
set hd=function etw
set Fd=function Xcw
set kd=function Ccw
set jd=function kow
set xd=function kOw
set vd=function jOw
set md=function f0w
set Qd=function Zqw
set Wd=function Uqw
set Ed=function ptw
set Zd=function Iqw
set Ud=function Pqw
set Id=function Aqw
set Pd=function xOw
set Ad=function Dqw
set Dd=function eww
set Hd=function tow
set Jd=function Hqw
set Kd=function Ktw
set Ld=function Jqw
set Xd=function a9
set Cd=function Kqw
set Vd=function Lqw
set Bd=function g1
set Nd=function Xqw
set Md=function Cqw
set wf=function Vqw
set uf=function Bqw
set rf=function f4
set sf=function Nqw
set tf=function Mqw
set Sf=function e9
set cf=function waw
set of=function uaw
set Of=function raw
set lf=function saw
set bf=function taw
set yf=function iaw
set pf=function Saw
set ef=function YX
set qf=function caw
set af=function oaw
set nf=function PM
set df=function Oaw
set ff=function law
set Rf=function baw
set Tf=function yaw
set Yf=function paw
set Gf=function eaw
set gf=function aaw
set hf=function naw
set Ff=function t4
set kf=function daw
set jf=function K2
set xf=function faw
set vf=function i7
set mf=function d0w
set Qf=function Raw
set Wf=function Utw
set Ef=function Ptw
set Zf=function Atw
set Uf=function Yaw
set If=function Gaw
set Pf=function gaw
set Af=function Taw
endfunction
function KR takes nothing returns nothing
local player JR=Player(PLAYER_NEUTRAL_AGGRESSIVE)
call CreateUnit(JR,1747989297,-1600.0,-128.0,270.000)
call CreateUnit(JR,1747989297,-15040.0,10816.0,270.000)
call CreateUnit(JR,1747989297,-256.0,-2432.0,270.000)
call CreateUnit(JR,1747989297,-24320.0,3904.0,270.000)
call CreateUnit(JR,1747989297,-23552.0,-4544.0,270.000)
call CreateUnit(JR,1747989297,-23360.0,-64.0,270.000)
call CreateUnit(JR,1747989297,2176.0,-7744.0,270.000)
call CreateUnit(JR,1747989297,-6336.0,8000.0,270.000)
call CreateUnit(JR,1747989297,832.0,-5568.0,270.000)
call CreateUnit(JR,1747989297,-3648.0,1856.0,270.000)
call CreateUnit(JR,1747989042,-768.0,24384.0,270.000)
call CreateUnit(JR,1747989297,-26304.0,-8704.0,270.000)
call CreateUnit(JR,1747989297,2688.0,-3008.0,270.000)
call CreateUnit(JR,1747989297,-5568.0,-2752.0,270.000)
call CreateUnit(JR,1747989297,-3456.0,-2880.0,270.000)
call CreateUnit(JR,1747989297,-6464.0,1280.0,270.000)
call CreateUnit(JR,1747989297,-8064.0,3200.0,270.000)
call CreateUnit(JR,1747989297,-8768.0,1984.0,270.000)
call CreateUnit(JR,1747989297,-7104.0,-768.0,270.000)
call CreateUnit(JR,1747989297,-28544.0,0.0,270.000)
call CreateUnit(JR,1747989297,-27840.0,-2752.0,270.000)
call CreateUnit(JR,1747989297,-27008.0,2688.0,270.000)
call CreateUnit(JR,1747989297,-17024.0,512.0,270.000)
call CreateUnit(JR,1747989297,-21696.0,-4224.0,270.000)
call CreateUnit(JR,1747989042,17536.0,-9024.0,270.000)
call CreateUnit(JR,1747989297,10816.0,-7360.0,270.000)
call CreateUnit(JR,1747989297,12800.0,-6912.0,270.000)
call CreateUnit(JR,1747989297,15488.0,-7552.0,270.000)
call CreateUnit(JR,1747989297,19072.0,-7424.0,270.000)
call CreateUnit(JR,1747989297,15360.0,-5568.0,270.000)
call CreateUnit(JR,1747989297,17216.0,-8640.0,270.000)
call CreateUnit(JR,1747989297,16960.0,-16192.0,270.000)
call CreateUnit(JR,1747989297,6976.0,-6592.0,270.000)
call CreateUnit(JR,1747989297,24000.0,256.0,270.000)
call CreateUnit(JR,1747989297,-10688.0,-384.0,270.000)
call CreateUnit(JR,1747989297,13952.0,-11008.0,270.000)
call CreateUnit(JR,1747989297,-10944.0,-4608.0,270.000)
call CreateUnit(JR,1747989297,-21440.0,-8384.0,270.000)
call CreateUnit(JR,1747989297,17472.0,9472.0,270.000)
call CreateUnit(JR,1747989297,-16768.0,-8064.0,270.000)
call CreateUnit(JR,1747989297,-9920.0,-11264.0,270.000)
call CreateUnit(JR,1747989297,-7488.0,-16256.0,270.000)
call CreateUnit(JR,1747989297,448.0,-17600.0,270.000)
call CreateUnit(JR,1747989297,11008.0,-18496.0,270.000)
call CreateUnit(JR,1747989297,13248.0,-17856.0,270.000)
call CreateUnit(JR,1747989297,12288.0,-20864.0,270.000)
call CreateUnit(JR,1747989297,-11456.0,11008.0,270.000)
call CreateUnit(JR,1747989297,-8640.0,7104.0,270.000)
call CreateUnit(JR,1747989297,-7360.0,17088.0,270.000)
call CreateUnit(JR,1747989297,-5120.0,14528.0,270.000)
call CreateUnit(JR,1747989297,15488.0,-26816.0,270.000)
call CreateUnit(JR,1747989297,-9600.0,13120.0,270.000)
call CreateUnit(JR,1747989297,-11456.0,14528.0,270.000)
call CreateUnit(JR,1747989297,-12544.0,16320.0,270.000)
call CreateUnit(JR,1747989297,-7680.0,22272.0,270.000)
call CreateUnit(JR,1747989297,-6272.0,21376.0,270.000)
call CreateUnit(JR,1747989297,-4992.0,21888.0,270.000)
call CreateUnit(JR,1747989297,-1280.0,23936.0,270.000)
call CreateUnit(JR,1747989297,-3328.0,23232.0,270.000)
call CreateUnit(JR,1747989297,-2560.0,26368.0,270.000)
call CreateUnit(JR,1747989297,-6528.0,28288.0,270.000)
call CreateUnit(JR,1747989297,-9856.0,28416.0,270.000)
call CreateUnit(JR,1747989297,-13376.0,15104.0,270.000)
call CreateUnit(JR,1747989297,-10688.0,3520.0,270.000)
call CreateUnit(JR,1747989297,-9856.0,5440.0,270.000)
call CreateUnit(JR,1747989297,-6720.0,4096.0,270.000)
call CreateUnit(JR,1747989297,-13632.0,2368.0,270.000)
call CreateUnit(JR,1747989297,-10496.0,17728.0,270.000)
call CreateUnit(JR,1747989297,-7616.0,11200.0,270.000)
call CreateUnit(JR,1747989297,-18688.0,5760.0,270.000)
call CreateUnit(JR,1747989297,-25024.0,-3008.0,270.000)
call CreateUnit(JR,1747989297,-20096.0,1408.0,270.000)
call CreateUnit(JR,1747989297,-7040.0,-7808.0,270.000)
call CreateUnit(JR,1747989297,-5376.0,-9216.0,270.000)
call CreateUnit(JR,1747989297,24896.0,-27456.0,270.000)
call CreateUnit(JR,1747989297,-20352.0,12224.0,270.000)
call CreateUnit(JR,1747989297,-13568.0,5184.0,270.000)
call CreateUnit(JR,1747989297,-5120.0,24576.0,270.000)
call CreateUnit(JR,1747989297,-1856.0,27776.0,270.000)
call CreateUnit(JR,1747989297,-16704.0,24192.0,270.000)
call CreateUnit(JR,1747989297,-15936.0,17088.0,270.000)
call CreateUnit(JR,1747989297,-17792.0,16064.0,270.000)
call CreateUnit(JR,1747989297,-20224.0,21632.0,270.000)
call CreateUnit(JR,1747989297,-22400.0,19968.0,270.000)
call CreateUnit(JR,1747989297,-15872.0,20544.0,270.000)
call CreateUnit(JR,1747989297,-19776.0,16512.0,270.000)
call CreateUnit(JR,1747989297,-17088.0,12672.0,270.000)
call CreateUnit(JR,1747989297,-18560.0,19712.0,270.000)
call CreateUnit(JR,1747989297,-15680.0,26112.0,270.000)
call CreateUnit(JR,1747989297,-17088.0,26816.0,270.000)
call CreateUnit(JR,1747989297,-16704.0,3584.0,270.000)
call CreateUnit(JR,1747989297,-11456.0,7232.0,270.000)
call CreateUnit(JR,1747989297,-18176.0,10816.0,270.000)
call CreateUnit(JR,1747989297,-16000.0,6016.0,270.000)
call CreateUnit(JR,1747989297,-8896.0,26688.0,270.000)
call CreateUnit(JR,1747989297,9216.0,-4416.0,270.000)
call CreateUnit(JR,1747989297,6656.0,-4480.0,270.000)
call CreateUnit(JR,1747989297,5184.0,-1856.0,270.000)
call CreateUnit(JR,1747989297,18624.0,-448.0,270.000)
call CreateUnit(JR,1747989297,11008.0,-1984.0,270.000)
call CreateUnit(JR,1747989297,14144.0,-128.0,270.000)
call CreateUnit(JR,1747989297,8384.0,-10368.0,270.000)
call CreateUnit(JR,1747989297,5376.0,-12224.0,270.000)
call CreateUnit(JR,1747989297,3392.0,-7296.0,270.000)
call CreateUnit(JR,1747989297,12672.0,-3904.0,270.000)
call CreateUnit(JR,1747989297,27008.0,-11520.0,270.000)
call CreateUnit(JR,1747989297,-25216.0,1472.0,270.000)
call CreateUnit(JR,1747989297,23552.0,11072.0,270.000)
call CreateUnit(JR,1747989297,-20736.0,-2112.0,270.000)
call CreateUnit(JR,1747989297,-22592.0,2560.0,270.000)
call CreateUnit(JR,1747989297,-20864.0,3136.0,270.000)
call CreateUnit(JR,1747989297,-17280.0,-3136.0,270.000)
call CreateUnit(JR,1747989297,-3584.0,4608.0,270.000)
call CreateUnit(JR,1747989297,1536.0,29440.0,270.000)
call CreateUnit(JR,1747989297,-23104.0,-8832.0,270.000)
call CreateUnit(JR,1747989297,1216.0,-960.0,270.000)
call CreateUnit(JR,1747989297,-13312.0,-8512.0,270.000)
call CreateUnit(JR,1747989297,26240.0,-2688.0,270.000)
call CreateUnit(JR,1747989043,-7872.0,17536.0,270.000)
call CreateUnit(JR,1747989297,-13568.0,12160.0,270.000)
call CreateUnit(JR,1747989297,-13696.0,8064.0,270.000)
call CreateUnit(JR,1747989297,27648.0,-5824.0,270.000)
call CreateUnit(JR,1747989297,-4544.0,11648.0,270.000)
call CreateUnit(JR,1747989297,28992.0,-3200.0,270.000)
call CreateUnit(JR,1747989297,-3072.0,8320.0,270.000)
call CreateUnit(JR,1747989297,-384.0,8512.0,270.000)
call CreateUnit(JR,1747989297,28224.0,2752.0,270.000)
call CreateUnit(JR,1747989297,-4992.0,17280.0,270.000)
call CreateUnit(JR,1747989297,64.0,12608.0,270.000)
call CreateUnit(JR,1747989297,-2112.0,13696.0,270.000)
call CreateUnit(JR,1747989297,4160.0,5376.0,270.000)
call CreateUnit(JR,1747989297,4224.0,3904.0,270.000)
call CreateUnit(JR,1747989297,7232.0,2240.0,270.000)
call CreateUnit(JR,1747989297,-384.0,3072.0,270.000)
call CreateUnit(JR,1747989297,-8128.0,19968.0,270.000)
call CreateUnit(JR,1747989297,3072.0,192.0,270.000)
call CreateUnit(JR,1747989297,832.0,15872.0,270.000)
call CreateUnit(JR,1747989297,-2304.0,16064.0,270.000)
call CreateUnit(JR,1747989297,4416.0,19648.0,270.000)
call CreateUnit(JR,1747989297,1792.0,6976.0,270.000)
call CreateUnit(JR,1747989297,5888.0,24960.0,270.000)
call CreateUnit(JR,1747989297,-1792.0,19200.0,270.000)
call CreateUnit(JR,1747989297,3008.0,22784.0,270.000)
call CreateUnit(JR,1747989297,3200.0,18240.0,270.000)
call CreateUnit(JR,1747989297,-3712.0,-6528.0,270.000)
call CreateUnit(JR,1747989297,-17216.0,22208.0,270.000)
call CreateUnit(JR,1747989297,-18880.0,17920.0,270.000)
call CreateUnit(JR,1747989297,-17280.0,18304.0,270.000)
call CreateUnit(JR,1747989297,-22272.0,22400.0,270.000)
call CreateUnit(JR,1747989297,-10496.0,-9152.0,270.000)
call CreateUnit(JR,1747989297,13248.0,5120.0,270.000)
call CreateUnit(JR,1747989297,7936.0,-2368.0,270.000)
call CreateUnit(JR,1747989297,3520.0,27008.0,270.000)
call CreateUnit(JR,1747989297,8832.0,26368.0,270.000)
call CreateUnit(JR,1747989297,6848.0,21440.0,270.000)
call CreateUnit(JR,1747989297,6144.0,18560.0,270.000)
call CreateUnit(JR,1747989297,3904.0,11072.0,270.000)
call CreateUnit(JR,1747989297,8512.0,12352.0,270.000)
call CreateUnit(JR,1747989297,9280.0,20032.0,270.000)
call CreateUnit(JR,1747989297,1216.0,11008.0,270.000)
call CreateUnit(JR,1747989044,-15680.0,11200.0,270.000)
call CreateUnit(JR,1747989044,-15104.0,17408.0,270.000)
call CreateUnit(JR,1747989045,-1728.0,28608.0,270.000)
call CreateUnit(JR,1747989043,-18304.0,18112.0,270.000)
call CreateUnit(JR,1747989044,-9600.0,13888.0,270.000)
call CreateUnit(JR,1747989297,384.0,19456.0,270.000)
call CreateUnit(JR,1747989044,4864.0,5952.0,270.000)
call CreateUnit(JR,1747989044,8000.0,-1664.0,270.000)
call CreateUnit(JR,1747989044,9280.0,-3008.0,270.000)
call CreateUnit(JR,1747989045,-21056.0,21056.0,270.000)
call CreateUnit(JR,1747989045,-19648.0,12224.0,270.000)
call CreateUnit(JR,1747989045,17984.0,-13120.0,270.000)
call CreateUnit(JR,1747989042,-28544.0,704.0,270.000)
call CreateUnit(JR,1747989045,-9344.0,7168.0,270.000)
call CreateUnit(JR,1747989043,-6336.0,8576.0,270.000)
call CreateUnit(JR,1747989045,-15616.0,21248.0,270.000)
call CreateUnit(JR,1747989045,-16640.0,1024.0,270.000)
call CreateUnit(JR,1747989045,13760.0,-11584.0,270.000)
call CreateUnit(JR,1747989042,-11328.0,3712.0,270.000)
call CreateUnit(JR,1747989042,-16768.0,25920.0,270.000)
call CreateUnit(JR,1747989045,-19200.0,28352.0,270.000)
call CreateUnit(JR,1747989043,3456.0,11584.0,270.000)
call CreateUnit(JR,1747989044,-24640.0,4352.0,270.000)
call CreateUnit(JR,1747989044,-23232.0,-5120.0,270.000)
call CreateUnit(JR,1747989042,-23424.0,768.0,270.000)
call CreateUnit(JR,1747989045,-15936.0,-2688.0,270.000)
call CreateUnit(JR,1747989045,-10752.0,-3456.0,270.000)
call CreateUnit(JR,1747989044,-7552.0,4416.0,270.000)
call CreateUnit(JR,1747989045,-20160.0,-1600.0,270.000)
call CreateUnit(JR,1747989045,-21824.0,2560.0,270.000)
call CreateUnit(JR,1747989045,11392.0,-7104.0,270.000)
call CreateUnit(JR,1747989042,4352.0,20224.0,270.000)
call CreateUnit(JR,1747989044,-15360.0,4992.0,270.000)
call CreateUnit(JR,1747989042,-896.0,3392.0,270.000)
call CreateUnit(JR,1747989045,-6528.0,-832.0,270.000)
call CreateUnit(JR,1747989043,-4928.0,-3264.0,270.000)
call CreateUnit(JR,1747989042,-6144.0,-8192.0,270.000)
call CreateUnit(JR,1747989043,23424.0,640.0,270.000)
call CreateUnit(JR,1747989043,-6976.0,1344.0,270.000)
call CreateUnit(JR,1747989043,4352.0,128.0,270.000)
call CreateUnit(JR,1747989297,17472.0,19648.0,270.000)
call CreateUnit(JR,1747989044,-7872.0,22784.0,270.000)
call CreateUnit(JR,1747989297,20864.0,21504.0,270.000)
call CreateUnit(JR,1747989044,-9152.0,28480.0,270.000)
call CreateUnit(JR,1747989042,-27712.0,-9536.0,270.000)
call CreateUnit(JR,1747989042,4800.0,-12480.0,270.000)
call CreateUnit(JR,1747989045,7232.0,-11328.0,270.000)
call CreateUnit(JR,1747989045,1792.0,-8064.0,270.000)
call CreateUnit(JR,1747989297,-1600.0,5952.0,270.000)
call CreateUnit(JR,1747989043,-128.0,-1792.0,270.000)
call CreateUnit(JR,1747989042,-3392.0,8640.0,270.000)
call CreateUnit(JR,1747989044,-1856.0,16576.0,270.000)
call CreateUnit(JR,1747989043,-13888.0,14784.0,270.000)
call CreateUnit(JR,1747989297,-29568.0,-9792.0,270.000)
call CreateUnit(JR,1747989043,-9088.0,26240.0,270.000)
call CreateUnit(JR,1747989045,-5440.0,23808.0,270.000)
call CreateUnit(JR,1747989045,2176.0,30080.0,270.000)
call CreateUnit(JR,1747989043,1984.0,6464.0,270.000)
call CreateUnit(JR,1747989297,-26304.0,-1408.0,270.000)
call CreateUnit(JR,1747989043,448.0,13056.0,270.000)
call CreateUnit(JR,1747989045,3072.0,26752.0,270.000)
call CreateUnit(JR,1747989043,6656.0,18880.0,270.000)
call CreateUnit(JR,1747989043,3264.0,-3712.0,270.000)
call CreateUnit(JR,1747989297,15872.0,5760.0,270.000)
call CreateUnit(JR,1747989043,6528.0,22080.0,270.000)
call CreateUnit(JR,1747989044,8896.0,27008.0,270.000)
call CreateUnit(JR,1747989297,18496.0,-17280.0,270.000)
call CreateUnit(JR,1747989297,11392.0,7872.0,270.000)
call CreateUnit(JR,1747989297,12672.0,11328.0,270.000)
call CreateUnit(JR,1747989297,6016.0,12416.0,270.000)
call CreateUnit(JR,1747989297,7104.0,7808.0,270.000)
call CreateUnit(JR,1747989297,20864.0,2688.0,270.000)
call CreateUnit(JR,1747989297,24000.0,2560.0,270.000)
call CreateUnit(JR,1747989297,19648.0,11328.0,270.000)
call CreateUnit(JR,1747989297,11584.0,16960.0,270.000)
call CreateUnit(JR,1747989297,18496.0,-13248.0,270.000)
call CreateUnit(JR,1747989297,17216.0,-11456.0,270.000)
call CreateUnit(JR,1747989297,25088.0,-8320.0,270.000)
call CreateUnit(JR,1747989297,15680.0,-17536.0,270.000)
call CreateUnit(JR,1747989297,16640.0,-14208.0,270.000)
call CreateUnit(JR,1747989297,17280.0,-19584.0,270.000)
call CreateUnit(JR,1747989297,22912.0,-10240.0,270.000)
call CreateUnit(JR,1747989297,20864.0,-23040.0,270.000)
call CreateUnit(JR,1747989044,13120.0,-21696.0,270.000)
call CreateUnit(JR,1747989297,20096.0,-5760.0,270.000)
call CreateUnit(JR,1747989297,18816.0,-3776.0,270.000)
call CreateUnit(JR,1747989042,14464.0,-26432.0,270.000)
call CreateUnit(JR,1747989044,23808.0,-27776.0,270.000)
call CreateUnit(JR,1747989042,11776.0,-18688.0,270.000)
call CreateUnit(JR,1747989043,256.0,-18048.0,270.000)
call CreateUnit(JR,1747989045,-16192.0,-8192.0,270.000)
call CreateUnit(JR,1747989045,-11520.0,-10944.0,270.000)
call CreateUnit(JR,1747989045,16512.0,-19968.0,270.000)
call CreateUnit(JR,1747989045,20416.0,-22272.0,270.000)
call CreateUnit(JR,1747989044,28800.0,-11904.0,270.000)
call CreateUnit(JR,1747989297,15040.0,23104.0,270.000)
call CreateUnit(JR,1747989044,8128.0,12928.0,270.000)
call CreateUnit(JR,1747989044,16896.0,-15744.0,270.000)
call CreateUnit(JR,1747989042,17984.0,-640.0,270.000)
call CreateUnit(JR,1747989045,20608.0,3136.0,270.000)
call CreateUnit(JR,1747989045,7232.0,-5120.0,270.000)
call CreateUnit(JR,1747989045,25984.0,-8128.0,270.000)
call CreateUnit(JR,1747989045,20544.0,-5440.0,270.000)
call CreateUnit(JR,1747989045,11968.0,17856.0,270.000)
call CreateUnit(JR,1747989045,10048.0,20032.0,270.000)
call CreateUnit(JR,1747989043,15296.0,-7232.0,270.000)
call CreateUnit(JR,1747989043,13056.0,11776.0,270.000)
call CreateUnit(JR,1747989043,15744.0,23488.0,270.000)
call CreateUnit(JR,1747989043,17984.0,9280.0,270.000)
set JR=null
endfunction
function AR takes nothing returns nothing
local player PR=Player(22)
call CreateUnit(PR,1211118391,-29948.2,29831.1,270.025)
call SetHeroLevel(CreateUnit(PR,1211118406,-29699.3,29565.4,269.787),15,false)
set PR=null
endfunction
function GR takes nothing returns nothing
local player YR=Player(12)
call CreateUnit(YR,1211118391,-30464.7,30089.7,270.515)
call SetHeroLevel(CreateUnit(YR,1211118406,-29962.2,29311.8,270.038),15,false)
set YR=null
endfunction
function HR takes nothing returns nothing
local player DR=Player(23)
call CreateUnit(DR,1211118391,-29689.5,29824.6,269.779)
call SetHeroLevel(CreateUnit(DR,1211118406,-29815.4,29434.4,269.898),15,false)
set DR=null
endfunction
function IR takes nothing returns nothing
local player UR=Player(19)
call CreateUnit(UR,1211118391,-29820.0,29950.4,269.903)
call SetHeroLevel(CreateUnit(UR,1211118406,-29707.1,29309.8,269.793),15,false)
set UR=null
endfunction
function Mf takes nothing returns nothing
local player Nf=Player(0)
call CreateUnit(Nf,1211118391,-30470.9,30602.5,270.516)
call SetHeroLevel(CreateUnit(Nf,1211118406,-30360.2,29312.6,270.421),15,false)
set Nf=null
endfunction
function OR takes nothing returns nothing
local player oR=Player(5)
call CreateUnit(oR,1211118391,-29950.2,30589.5,270.027)
call SetHeroLevel(CreateUnit(oR,1211118406,-30283.9,29308.8,270.348),15,false)
set oR=null
endfunction
function TR takes nothing returns nothing
local player RR=Player(11)
call CreateUnit(RR,1211118391,-29827.0,30210.1,269.911)
call SetHeroLevel(CreateUnit(RR,1211118406,-30125.9,29321.4,270.196),15,false)
set RR=null
endfunction
function WR takes nothing returns nothing
local player QR=Player(17)
call CreateUnit(QR,1211118391,-29951.6,30084.7,270.028)
call SetHeroLevel(CreateUnit(QR,1211118406,-29862.1,29302.2,269.942),15,false)
set QR=null
endfunction
function ZR takes nothing returns nothing
local player ER=Player(18)
call CreateUnit(ER,1211118391,-29691.7,30077.9,269.782)
call SetHeroLevel(CreateUnit(ER,1211118406,-29792.0,29571.7,269.875),15,false)
set ER=null
endfunction
function bR takes nothing returns nothing
local player lR=Player(6)
call CreateUnit(lR,1211118391,-29693.7,30597.0,269.786)
call SetHeroLevel(CreateUnit(lR,1211118406,-30199.8,29310.0,270.267),15,false)
set lR=null
endfunction
function cR takes nothing returns nothing
local player SR=Player(4)
call CreateUnit(SR,1211118391,-30204.6,30339.2,270.267)
call SetHeroLevel(CreateUnit(SR,1211118406,-30106.5,29439.8,270.177),15,false)
set SR=null
endfunction
function fR takes nothing returns nothing
local player dR=Player(10)
call CreateUnit(dR,1211118391,-30338.2,30210.1,270.394)
call SetHeroLevel(CreateUnit(dR,1211118406,-29904.6,29442.8,269.983),15,false)
set dR=null
endfunction
function hR takes nothing returns nothing
local player gR=Player(13)
call CreateUnit(gR,1211118391,-30204.3,30080.3,270.268)
call SetHeroLevel(CreateUnit(gR,1211118406,-30039.0,29306.5,270.112),15,false)
set gR=null
endfunction
function iR takes nothing returns nothing
local player tR=Player(3)
call CreateUnit(tR,1211118391,-30468.2,30345.3,270.516)
call SetHeroLevel(CreateUnit(tR,1211118406,-30252.3,29576.9,270.316),15,false)
set tR=null
endfunction
function kR takes nothing returns nothing
local player FR=Player(14)
call CreateUnit(FR,1211118391,-30339.8,29950.4,270.397)
call SetHeroLevel(CreateUnit(FR,1211118406,-29968.7,29556.2,270.045),15,false)
set FR=null
endfunction
function mR takes nothing returns nothing
local player vR=Player(16)
call CreateUnit(vR,1211118391,-30203.1,29826.8,270.268)
call SetHeroLevel(CreateUnit(vR,1211118406,-29780.4,29300.3,269.864),15,false)
set vR=null
endfunction
function nR takes nothing returns nothing
local player aR=Player(9)
call CreateUnit(aR,1211118391,-29693.5,30338.3,269.785)
call SetHeroLevel(CreateUnit(aR,1211118406,-30045.2,29554.8,270.118),15,false)
set aR=null
endfunction
function pR takes nothing returns nothing
local player yR=Player(7)
call CreateUnit(yR,1211118391,-29818.2,30468.8,269.903)
call SetHeroLevel(CreateUnit(yR,1211118406,-29998.9,29444.3,270.074),15,false)
set yR=null
endfunction
function qR takes nothing returns nothing
local player eR=Player(8)
call CreateUnit(eR,1211118391,-29946.0,30342.9,270.023)
call SetHeroLevel(CreateUnit(eR,1211118406,-30137.9,29561.1,270.206),15,false)
set eR=null
endfunction
function sR takes nothing returns nothing
local player rR=Player(2)
call CreateUnit(rR,1211118391,-30324.4,30466.1,270.380)
call SetHeroLevel(CreateUnit(rR,1211118406,-30346.6,29573.7,270.406),15,false)
set rR=null
endfunction
function uR takes nothing returns nothing
local player wR=Player(1)
call CreateUnit(wR,1211118391,-30205.9,30601.1,270.267)
call SetHeroLevel(CreateUnit(wR,1211118406,-30199.1,29448.7,270.266),15,false)
set wR=null
endfunction
function xR takes nothing returns nothing
local player jR=Player(15)
call CreateUnit(jR,1211118391,-30467.2,29834.7,270.519)
call SetHeroLevel(CreateUnit(jR,1211118406,-29874.4,29559.4,269.954),15,false)
set jR=null
endfunction
function LR takes nothing returns nothing
call Mf()
call uR()
call sR()
call iR()
call cR()
call OR()
call bR()
call pR()
call qR()
call nR()
call fR()
call TR()
call GR()
call hR()
call kR()
call xR()
call mR()
call WR()
call ZR()
call IR()
call AR()
call HR()
endfunction
function AQ takes nothing returns nothing
local trigger UQ
local playerunitevent IQ
local integer PQ
set vt=CreateTrigger()
set UQ=vt
set IQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set PQ=0
loop
call TriggerRegisterPlayerUnitEvent(UQ,Player(PQ),IQ,null)
set PQ=PQ+1
exitwhen PQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(vt,Condition(ge))
call TriggerAddAction(vt,he)
set UQ=null
set IQ=null
endfunction
function BP takes nothing returns nothing
local trigger XP
local playerunitevent CP
local integer VP
set Fi=CreateTrigger()
set XP=Fi
set CP=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set VP=0
loop
call TriggerRegisterPlayerUnitEvent(XP,Player(VP),CP,null)
set VP=VP+1
exitwhen VP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(Fi,aa)
set XP=null
set CP=null
endfunction
function BR takes nothing returns nothing
set Gs=CreateTrigger()
call TriggerRegisterTimerEvent(Gs,1.00,false)
call TriggerAddAction(Gs,yy)
endfunction
function CK takes nothing returns nothing
local trigger KK
local playerunitevent LK
local integer XK
set SS=CreateTrigger()
set KK=SS
set LK=EVENT_PLAYER_UNIT_ATTACKED
set XK=0
loop
call TriggerRegisterPlayerUnitEvent(KK,Player(XK),LK,null)
set XK=XK+1
exitwhen XK==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(SS,Condition(kn))
call TriggerAddAction(SS,jn)
set KK=null
set LK=null
endfunction
function CQ takes nothing returns nothing
local trigger KQ
local playerunitevent LQ
local integer XQ
set mt=CreateTrigger()
set KQ=mt
set LQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set XQ=0
loop
call TriggerRegisterPlayerUnitEvent(KQ,Player(XQ),LQ,null)
set XQ=XQ+1
exitwhen XQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(mt,Condition(Fe))
call TriggerAddAction(mt,ke)
set KQ=null
set LQ=null
endfunction
function DH takes nothing returns nothing
local trigger IH
local playerunitevent PH
local integer AH
set Ki=CreateTrigger()
set IH=Ki
set PH=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set AH=0
loop
call TriggerRegisterPlayerUnitEvent(IH,Player(AH),PH,null)
set AH=AH+1
exitwhen AH==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ki,Condition(Na))
call TriggerAddAction(Ki,Ma)
set IH=null
set PH=null
endfunction
function DP takes nothing returns nothing
local trigger IP
local playerunitevent PP
local integer AP
set gi=CreateTrigger()
set IP=gi
set PP=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set AP=0
loop
call TriggerRegisterPlayerUnitEvent(IP,Player(AP),PP,null)
set AP=AP+1
exitwhen AP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(gi,Condition(ya))
call TriggerAddAction(gi,pa)
set IP=null
set PP=null
endfunction
function Dv takes nothing returns nothing
local trigger Iv
local playerunitevent Pv
local integer Av
set qt=CreateTrigger()
set Iv=qt
set Pv=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Av=0
loop
call TriggerRegisterPlayerUnitEvent(Iv,Player(Av),Pv,null)
set Av=Av+1
exitwhen Av==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(qt,Condition(Xp))
call TriggerAddAction(qt,Cp)
set Iv=null
set Pv=null
endfunction
function EK takes nothing returns nothing
local trigger mK
local playerunitevent QK
local integer WK
set iS=CreateTrigger()
set mK=iS
set QK=EVENT_PLAYER_UNIT_ATTACKED
set WK=0
loop
call TriggerRegisterPlayerUnitEvent(mK,Player(WK),QK,null)
set WK=WK+1
exitwhen WK==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(iS,Condition(hn))
call TriggerAddAction(iS,Fn)
set mK=null
set QK=null
endfunction
function FH takes nothing returns nothing
local trigger GH
local playerunitevent gH
local integer hH
set Hi=CreateTrigger()
set GH=Hi
set gH=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set hH=0
loop
call TriggerRegisterPlayerUnitEvent(GH,Player(hH),gH,null)
set hH=hH+1
exitwhen hH==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Hi,Condition(Xa))
call TriggerAddAction(Hi,Ca)
set GH=null
set gH=null
endfunction
function FP takes nothing returns nothing
local trigger GP
local playerunitevent gP
local integer hP
set Yi=CreateTrigger()
set GP=Yi
set gP=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set hP=0
loop
call TriggerRegisterPlayerUnitEvent(GP,Player(hP),gP,null)
set hP=hP+1
exitwhen hP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Yi,Condition(oa))
call TriggerAddAction(Yi,Oa)
set GP=null
set gP=null
endfunction
function FT takes nothing returns nothing
local trigger GT
local playerunitevent gT
local integer hT
set hs=CreateTrigger()
set GT=hs
set gT=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set hT=0
loop
call TriggerRegisterPlayerUnitEvent(GT,Player(hT),gT,null)
set hT=hT+1
exitwhen hT==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(hs,Condition(qy))
call TriggerAddAction(hs,ay)
set GT=null
set gT=null
endfunction
function Fv takes nothing returns nothing
local trigger Gv
local playerunitevent gv
local integer hv
set pt=CreateTrigger()
set Gv=pt
set gv=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set hv=0
loop
call TriggerRegisterPlayerUnitEvent(Gv,Player(hv),gv,null)
set hv=hv+1
exitwhen hv==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(pt,Condition(Hp))
call TriggerAddAction(pt,Jp)
set Gv=null
set gv=null
endfunction
function GU takes nothing returns nothing
local trigger RU
local playerunitevent TU
local integer YU
set ci=CreateTrigger()
set RU=ci
set TU=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set YU=0
loop
call TriggerRegisterPlayerUnitEvent(RU,Player(YU),TU,null)
set YU=YU+1
exitwhen YU==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ci,Condition(xq))
call TriggerAddAction(ci,vq)
set RU=null
set TU=null
endfunction
function GW takes nothing returns nothing
local trigger RW
local playerunitevent TW
local integer YW
set Zt=CreateTrigger()
set RW=Zt
set TW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set YW=0
loop
call TriggerRegisterPlayerUnitEvent(RW,Player(YW),TW,null)
set YW=YW+1
exitwhen YW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Zt,Condition(Ee))
call TriggerAddAction(Zt,Ze)
set RW=null
set TW=null
endfunction
function Gj takes nothing returns nothing
local trigger Rj
local playerunitevent Tj
local integer Yj
set Ms=CreateTrigger()
set Rj=Ms
set Tj=EVENT_PLAYER_UNIT_SPELL_CAST
set Yj=0
loop
call TriggerRegisterPlayerUnitEvent(Rj,Player(Yj),Tj,null)
set Yj=Yj+1
exitwhen Yj==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ms,Condition(np))
call TriggerAddAction(Ms,dp)
set Rj=null
set Tj=null
endfunction
function HY takes nothing returns nothing
local trigger PY
local playerunitevent AY
local integer DY
set ms=CreateTrigger()
set PY=ms
set AY=EVENT_PLAYER_UNIT_ATTACKED
set DY=0
loop
call TriggerRegisterPlayerUnitEvent(PY,Player(DY),AY,null)
set DY=DY+1
exitwhen DY==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ms,Condition(ky))
call TriggerAddAction(ms,jy)
set PY=null
set AY=null
endfunction
function Hj takes nothing returns nothing
local trigger Pj
local playerunitevent Aj
local integer Dj
set ut=CreateTrigger()
set Pj=ut
set Aj=EVENT_PLAYER_UNIT_DEATH
set Dj=0
loop
call TriggerRegisterPlayerUnitEvent(Pj,Player(Dj),Aj,null)
set Dj=Dj+1
exitwhen Dj==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ut,Condition(fp))
call TriggerAddAction(ut,Rp)
set Pj=null
set Aj=null
endfunction
function IU takes nothing returns nothing
local trigger EU
local playerunitevent ZU
local integer UU
set Oi=CreateTrigger()
set EU=Oi
set ZU=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set UU=0
loop
call TriggerRegisterPlayerUnitEvent(EU,Player(UU),ZU,null)
set UU=UU+1
exitwhen UU==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Oi,Condition(Wq))
call TriggerAddAction(Oi,Eq)
set EU=null
set ZU=null
endfunction
function IW takes nothing returns nothing
local trigger EW
local playerunitevent ZW
local integer UW
set It=CreateTrigger()
set EW=It
set ZW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set UW=0
loop
call TriggerRegisterPlayerUnitEvent(EW,Player(UW),ZW,null)
set UW=UW+1
exitwhen UW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(It,Condition(Pe))
call TriggerAddAction(It,Ae)
set EW=null
set ZW=null
endfunction
function JD takes nothing returns nothing
local trigger AD
local playerunitevent DD
local integer HD
set Ui=CreateTrigger()
set AD=Ui
set DD=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set HD=0
loop
call TriggerRegisterPlayerUnitEvent(AD,Player(HD),DD,null)
set HD=HD+1
exitwhen HD==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ui,Condition(Za))
call TriggerAddAction(Ui,Ua)
set AD=null
set DD=null
endfunction
function JI takes nothing returns nothing
local trigger AI
local playerunitevent DI
local integer HI
set ni=CreateTrigger()
set AI=ni
set DI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set HI=0
loop
call TriggerRegisterPlayerUnitEvent(AI,Player(HI),DI,null)
set HI=HI+1
exitwhen HI==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ni,Condition(Nq))
call TriggerAddAction(ni,Mq)
set AI=null
set DI=null
endfunction
function Jx takes nothing returns nothing
local trigger Ax
local playerunitevent Dx
local integer Hx
set ot=CreateTrigger()
set Ax=ot
set Dx=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Hx=0
loop
call TriggerRegisterPlayerUnitEvent(Ax,Player(Hx),Dx,null)
set Hx=Hx+1
exitwhen Hx==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ot,Condition(mp))
call TriggerAddAction(ot,Qp)
set Ax=null
set Dx=null
endfunction
function KP takes nothing returns nothing
set hi=CreateTrigger()
call TriggerRegisterTimerEvent(hi,0.10,false)
call TriggerAddAction(hi,qa)
endfunction
function KZ takes nothing returns nothing
local trigger DZ
local playerunitevent HZ
local integer JZ
set ri=CreateTrigger()
set DZ=ri
set HZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set JZ=0
loop
call TriggerRegisterPlayerUnitEvent(DZ,Player(JZ),HZ,null)
set JZ=JZ+1
exitwhen JZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ri,Condition(fq))
call TriggerAddAction(ri,Rq)
set DZ=null
set HZ=null
endfunction
function Kg takes nothing returns nothing
set As=CreateTrigger()
call TriggerRegisterTimerEvent(As,5.00,true)
call TriggerAddAction(As,Vy)
endfunction
function LT takes nothing returns nothing
local trigger HT
local playerunitevent JT
local integer KT
set ks=CreateTrigger()
set HT=ks
set JT=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set KT=0
loop
call TriggerRegisterPlayerUnitEvent(HT,Player(KT),JT,null)
set KT=KT+1
exitwhen KT==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ks,Condition(fy))
call TriggerAddAction(ks,Ry)
set HT=null
set JT=null
endfunction
function LU takes nothing returns nothing
local trigger HU
local playerunitevent JU
local integer KU
set li=CreateTrigger()
set HU=li
set JU=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set KU=0
loop
call TriggerRegisterPlayerUnitEvent(HU,Player(KU),JU,null)
set KU=KU+1
exitwhen KU==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(li,Condition(Zq))
call TriggerAddAction(li,Uq)
set HU=null
set JU=null
endfunction
function LW takes nothing returns nothing
local trigger HW
local playerunitevent JW
local integer KW
set Pt=CreateTrigger()
set HW=Pt
set JW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set KW=0
loop
call TriggerRegisterPlayerUnitEvent(HW,Player(KW),JW,null)
set KW=KW+1
exitwhen KW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Pt,Condition(De))
call TriggerAddAction(Pt,He)
set HW=null
set JW=null
endfunction
function MY takes nothing returns nothing
local trigger VY
local playerunitevent BY
local integer NY
set Qs=CreateTrigger()
set VY=Qs
set BY=EVENT_PLAYER_UNIT_SPELL_CAST
set NY=0
loop
call TriggerRegisterPlayerUnitEvent(VY,Player(NY),BY,null)
set NY=NY+1
exitwhen NY==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Qs,Condition(xy))
call TriggerAddAction(Qs,vy)
set VY=null
set BY=null
endfunction
function MZ takes nothing returns nothing
local trigger VZ
local playerunitevent BZ
local integer NZ
set si=CreateTrigger()
set VZ=si
set BZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set NZ=0
loop
call TriggerRegisterPlayerUnitEvent(VZ,Player(NZ),BZ,null)
set NZ=NZ+1
exitwhen NZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(si,Condition(Tq))
call TriggerAddAction(si,Yq)
set VZ=null
set BZ=null
endfunction
function ND takes nothing returns nothing
local trigger CD
local playerunitevent VD
local integer BD
set Ii=CreateTrigger()
set CD=Ii
set VD=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set BD=0
loop
call TriggerRegisterPlayerUnitEvent(CD,Player(BD),VD,null)
set BD=BD+1
exitwhen BD==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ii,Condition(Ia))
call TriggerAddAction(Ii,Pa)
set CD=null
set VD=null
endfunction
function NI takes nothing returns nothing
local trigger CI
local playerunitevent VI
local integer BI
set di=CreateTrigger()
set CI=di
set VI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set BI=0
loop
call TriggerRegisterPlayerUnitEvent(CI,Player(BI),VI,null)
set BI=BI+1
exitwhen BI==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(di,Condition(wa))
call TriggerAddAction(di,ua)
set CI=null
set VI=null
endfunction
function Nx takes nothing returns nothing
local trigger Cx
local playerunitevent Vx
local integer Bx
set Ot=CreateTrigger()
set Cx=Ot
set Vx=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Bx=0
loop
call TriggerRegisterPlayerUnitEvent(Cx,Player(Bx),Vx,null)
set Bx=Bx+1
exitwhen Bx==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ot,Condition(Wp))
call TriggerAddAction(Ot,Ep)
set Cx=null
set Vx=null
endfunction
function OW takes nothing returns nothing
local trigger SW
local playerunitevent cW
local integer oW
set Wt=CreateTrigger()
set SW=Wt
set cW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set oW=0
loop
call TriggerRegisterPlayerUnitEvent(SW,Player(oW),cW,null)
set oW=oW+1
exitwhen oW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Wt,Condition(ve))
call TriggerAddAction(Wt,me)
set SW=null
set cW=null
endfunction
function PA takes nothing returns nothing
local trigger ZA
local playerunitevent UA
local integer IA
set xi=CreateTrigger()
set ZA=xi
set UA=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set IA=0
loop
call TriggerRegisterPlayerUnitEvent(ZA,Player(IA),UA,null)
set IA=IA+1
exitwhen IA==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(xi,Condition(Ta))
call TriggerAddAction(xi,Ya)
set ZA=null
set UA=null
endfunction
function PE takes nothing returns nothing
local trigger ZE
local playerunitevent UE
local integer IE
set Xt=CreateTrigger()
set ZE=Xt
set UE=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set IE=0
loop
call TriggerRegisterPlayerUnitEvent(ZE,Player(IE),UE,null)
set IE=IE+1
exitwhen IE==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Xt,Condition(sq))
call TriggerAddAction(Xt,tq)
set ZE=null
set UE=null
endfunction
function PF takes nothing returns nothing
local trigger ZF
local playerunitevent UF
local integer IF
set Xs=CreateTrigger()
set ZF=Xs
set UF=EVENT_PLAYER_UNIT_DEATH
set IF=0
loop
call TriggerRegisterPlayerUnitEvent(ZF,Player(IF),UF,null)
set IF=IF+1
exitwhen IF==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Xs,Condition(cp))
call TriggerAddAction(Xs,op)
set ZF=null
set UF=null
endfunction
function PJ takes nothing returns nothing
local trigger ZJ
local playerunitevent UJ
local integer IJ
set Mi=CreateTrigger()
set ZJ=Mi
set UJ=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set IJ=0
loop
call TriggerRegisterPlayerUnitEvent(ZJ,Player(IJ),UJ,null)
set IJ=IJ+1
exitwhen IJ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Mi,Condition(pn))
call TriggerAddAction(Mi,en)
set ZJ=null
set UJ=null
endfunction
function Pk takes nothing returns nothing
local trigger Zk
local playerunitevent Uk
local integer Ik
set Bs=CreateTrigger()
set Zk=Bs
set Uk=EVENT_PLAYER_UNIT_DEATH
set Ik=0
loop
call TriggerRegisterPlayerUnitEvent(Zk,Player(Ik),Uk,null)
set Ik=Ik+1
exitwhen Ik==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Bs,Condition(pp))
call TriggerAddAction(Bs,ep)
set Zk=null
set Uk=null
endfunction
function Pm takes nothing returns nothing
local trigger Zm
local playerunitevent Um
local integer Im
set Yt=CreateTrigger()
set Zm=Yt
set Um=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Im=0
loop
call TriggerRegisterPlayerUnitEvent(Zm,Player(Im),Um,null)
set Im=Im+1
exitwhen Im==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Yt,Condition(oe))
call TriggerAddAction(Yt,Oe)
set Zm=null
set Um=null
endfunction
function QQ takes nothing returns nothing
local trigger xQ
local playerunitevent vQ
local integer mQ
set xt=CreateTrigger()
set xQ=xt
set vQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set mQ=0
loop
call TriggerRegisterPlayerUnitEvent(xQ,Player(mQ),vQ,null)
set mQ=mQ+1
exitwhen mQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(xt,Condition(Ye))
call TriggerAddAction(xt,Ge)
set xQ=null
set vQ=null
endfunction
function SU takes nothing returns nothing
local trigger sU
local playerunitevent tU
local integer iU
set ti=CreateTrigger()
set sU=ti
set tU=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set iU=0
loop
call TriggerRegisterPlayerUnitEvent(sU,Player(iU),tU,null)
set iU=iU+1
exitwhen iU==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ti,Condition(Gq))
call TriggerAddAction(ti,gq)
set sU=null
set tU=null
endfunction
function TD takes nothing returns nothing
local trigger dD
local playerunitevent fD
local integer RD
set Wi=CreateTrigger()
set dD=Wi
set fD=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set RD=0
loop
call TriggerRegisterPlayerUnitEvent(dD,Player(RD),fD,null)
set RD=RD+1
exitwhen RD==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Wi,Condition(xa))
call TriggerAddAction(Wi,va)
set dD=null
set fD=null
endfunction
function TF takes nothing returns nothing
local trigger dF
local playerunitevent fF
local integer RF
set Ls=CreateTrigger()
set dF=Ls
set fF=EVENT_PLAYER_UNIT_SPELL_CAST
set RF=0
loop
call TriggerRegisterPlayerUnitEvent(dF,Player(RF),fF,null)
set RF=RF+1
exitwhen RF==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ls,Condition(ip))
call TriggerAddAction(Ls,Sp)
set dF=null
set fF=null
endfunction
function TI takes nothing returns nothing
local trigger dI
local playerunitevent fI
local integer RI
set ei=CreateTrigger()
set dI=ei
set fI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set RI=0
loop
call TriggerRegisterPlayerUnitEvent(dI,Player(RI),fI,null)
set RI=RI+1
exitwhen RI==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ei,Condition(Kq))
call TriggerAddAction(ei,Lq)
set dI=null
set fI=null
endfunction
function Tk takes nothing returns nothing
local trigger dk
local playerunitevent fk
local integer Rk
set Vs=CreateTrigger()
set dk=Vs
set fk=EVENT_PLAYER_UNIT_DEATH
set Rk=0
loop
call TriggerRegisterPlayerUnitEvent(dk,Player(Rk),fk,null)
set Rk=Rk+1
exitwhen Rk==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Vs,Condition(bp))
call TriggerAddAction(Vs,yp)
set dk=null
set fk=null
endfunction
function Tx takes nothing returns nothing
local trigger dx
local playerunitevent fx
local integer Rx
set tt=CreateTrigger()
set dx=tt
set fx=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Rx=0
loop
call TriggerRegisterPlayerUnitEvent(dx,Player(Rx),fx,null)
set Rx=Rx+1
exitwhen Rx==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(tt,Condition(hp))
call TriggerAddAction(tt,Fp)
set dx=null
set fx=null
endfunction
function UZ takes nothing returns nothing
local trigger WZ
local playerunitevent EZ
local integer ZZ
set ui=CreateTrigger()
set WZ=ui
set EZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set ZZ=0
loop
call TriggerRegisterPlayerUnitEvent(WZ,Player(ZZ),EZ,null)
set ZZ=ZZ+1
exitwhen ZZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ui,Condition(nq))
call TriggerAddAction(ui,dq)
set WZ=null
set EZ=null
endfunction
function Uh takes nothing returns nothing
local trigger Wh
local playerunitevent Eh
local integer Zh
set Js=CreateTrigger()
set Wh=Js
set Eh=EVENT_PLAYER_UNIT_SPELL_CAST
set Zh=0
loop
call TriggerRegisterPlayerUnitEvent(Wh,Player(Zh),Eh,null)
set Zh=Zh+1
exitwhen Zh==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Js,Condition(up))
call TriggerAddAction(Js,rp)
set Wh=null
set Eh=null
endfunction
function VH takes nothing returns nothing
local trigger LH
local playerunitevent XH
local integer CH
set Li=CreateTrigger()
set LH=Li
set XH=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set CH=0
loop
call TriggerRegisterPlayerUnitEvent(LH,Player(CH),XH,null)
set CH=CH+1
exitwhen CH==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Li,Condition(wn))
call TriggerAddAction(Li,un)
set LH=null
set XH=null
endfunction
function Vv takes nothing returns nothing
local trigger Lv
local playerunitevent Xv
local integer Cv
set at=CreateTrigger()
set Lv=at
set Xv=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Cv=0
loop
call TriggerRegisterPlayerUnitEvent(Lv,Player(Cv),Xv,null)
set Cv=Cv+1
exitwhen Cv==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(at,Condition(Vp))
call TriggerAddAction(at,Bp)
set Lv=null
set Xv=null
endfunction
function WH takes nothing returns nothing
local trigger vH
local playerunitevent mH
local integer QH
set Ji=CreateTrigger()
set vH=Ji
set mH=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set QH=0
loop
call TriggerRegisterPlayerUnitEvent(vH,Player(QH),mH,null)
set QH=QH+1
exitwhen QH==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ji,Condition(Va))
call TriggerAddAction(Ji,Ba)
set vH=null
set mH=null
endfunction
function WP takes nothing returns nothing
local trigger vP
local playerunitevent mP
local integer QP
set Gi=CreateTrigger()
set vP=Gi
set mP=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set QP=0
loop
call TriggerRegisterPlayerUnitEvent(vP,Player(QP),mP,null)
set QP=QP+1
exitwhen QP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Gi,Condition(la))
call TriggerAddAction(Gi,ba)
set vP=null
set mP=null
endfunction
function Wv takes nothing returns nothing
local trigger vv
local playerunitevent mv
local integer Qv
set et=CreateTrigger()
set vv=et
set mv=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Qv=0
loop
call TriggerRegisterPlayerUnitEvent(vv,Player(Qv),mv,null)
set Qv=Qv+1
exitwhen Qv==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(et,Condition(Kp))
call TriggerAddAction(et,Lp)
set vv=null
set mv=null
endfunction
function XE takes nothing returns nothing
local trigger JE
local playerunitevent KE
local integer LE
set Ct=CreateTrigger()
set JE=Ct
set KE=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set LE=0
loop
call TriggerRegisterPlayerUnitEvent(JE,Player(LE),KE,null)
set LE=LE+1
exitwhen LE==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ct,Condition(iq))
call TriggerAddAction(Ct,Sq)
set JE=null
set KE=null
endfunction
function XJ takes nothing returns nothing
local trigger JJ
local playerunitevent KJ
local integer LJ
set wS=CreateTrigger()
set JJ=wS
set KJ=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set LJ=0
loop
call TriggerRegisterPlayerUnitEvent(JJ,Player(LJ),KJ,null)
set LJ=LJ+1
exitwhen LJ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(wS,Condition(qn))
call TriggerAddAction(wS,an)
set JJ=null
set KJ=null
endfunction
function Xm takes nothing returns nothing
local trigger Jm
local playerunitevent Km
local integer Lm
set Gt=CreateTrigger()
set Jm=Gt
set Km=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Lm=0
loop
call TriggerRegisterPlayerUnitEvent(Jm,Player(Lm),Km,null)
set Lm=Lm+1
exitwhen Lm==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Gt,Condition(le))
call TriggerAddAction(Gt,be)
set Jm=null
set Km=null
endfunction
function YK takes nothing returns nothing
local trigger fK
local playerunitevent RK
local integer TK
set tS=CreateTrigger()
set fK=tS
set RK=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set TK=0
loop
call TriggerRegisterPlayerUnitEvent(fK,Player(TK),RK,null)
set TK=TK+1
exitwhen TK==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(tS,Condition(Gn))
call TriggerAddAction(tS,gn)
set fK=null
set RK=null
endfunction
function YZ takes nothing returns nothing
local trigger fZ
local playerunitevent RZ
local integer TZ
set Mt=CreateTrigger()
set fZ=Mt
set RZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set TZ=0
loop
call TriggerRegisterPlayerUnitEvent(fZ,Player(TZ),RZ,null)
set TZ=TZ+1
exitwhen TZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Mt,Condition(pq))
call TriggerAddAction(Mt,eq)
set fZ=null
set RZ=null
endfunction
function ZD takes nothing returns nothing
local trigger QD
local playerunitevent WD
local integer ED
set Zi=CreateTrigger()
set QD=Zi
set WD=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set ED=0
loop
call TriggerRegisterPlayerUnitEvent(QD,Player(ED),WD,null)
set ED=ED+1
exitwhen ED==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Zi,Condition(Wa))
call TriggerAddAction(Zi,Ea)
set QD=null
set WD=null
endfunction
function ZG takes nothing returns nothing
local trigger QG
local playerunitevent WG
local integer EG
set Zs=CreateTrigger()
set QG=Zs
set WG=EVENT_PLAYER_UNIT_SPELL_CAST
set EG=0
loop
call TriggerRegisterPlayerUnitEvent(QG,Player(EG),WG,null)
set EG=EG+1
exitwhen EG==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Zs,Condition(Zy))
call TriggerAddAction(Zs,Uy)
set QG=null
set WG=null
endfunction
function ZI takes nothing returns nothing
local trigger QI
local playerunitevent WI
local integer EI
set ai=CreateTrigger()
set QI=ai
set WI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set EI=0
loop
call TriggerRegisterPlayerUnitEvent(QI,Player(EI),WI,null)
set EI=EI+1
exitwhen EI==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ai,Condition(Vq))
call TriggerAddAction(ai,Bq)
set QI=null
set WI=null
endfunction
function ZT takes nothing returns nothing
local trigger QT
local playerunitevent WT
local integer ET
set Fs=CreateTrigger()
set QT=Fs
set WT=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set ET=0
loop
call TriggerRegisterPlayerUnitEvent(QT,Player(ET),WT,null)
set ET=ET+1
exitwhen ET==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Fs,Condition(ny))
call TriggerAddAction(Fs,dy)
set QT=null
set WT=null
endfunction
function Zg takes nothing returns nothing
local trigger Qg
local playerunitevent Wg
local integer Eg
set Ps=CreateTrigger()
set Qg=Ps
set Wg=EVENT_PLAYER_UNIT_SPELL_CAST
set Eg=0
loop
call TriggerRegisterPlayerUnitEvent(Qg,Player(Eg),Wg,null)
set Eg=Eg+1
exitwhen Eg==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ps,Condition(Ly))
call TriggerAddAction(Ps,Xy)
set Qg=null
set Wg=null
endfunction
function Zx takes nothing returns nothing
local trigger Qx
local playerunitevent Wx
local integer Ex
set ct=CreateTrigger()
set Qx=ct
set Wx=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Ex=0
loop
call TriggerRegisterPlayerUnitEvent(Qx,Player(Ex),Wx,null)
set Ex=Ex+1
exitwhen Ex==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ct,Condition(xp))
call TriggerAddAction(ct,vp)
set Qx=null
set Wx=null
endfunction
function aU takes nothing returns nothing
set Si=CreateTrigger()
call TriggerRegisterTimerEvent(Si,0.10,false)
call TriggerAddAction(Si,jq)
endfunction
function aW takes nothing returns nothing
local trigger pW
local playerunitevent eW
local integer qW
set Et=CreateTrigger()
set pW=Et
set eW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set qW=0
loop
call TriggerRegisterPlayerUnitEvent(pW,Player(qW),eW,null)
set qW=qW+1
exitwhen qW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Et,Condition(Qe))
call TriggerAddAction(Et,We)
set pW=null
set eW=null
endfunction
function bA takes nothing returns nothing
local trigger oA
local playerunitevent OA
local integer lA
set ki=CreateTrigger()
set oA=ki
set OA=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set lA=0
loop
call TriggerRegisterPlayerUnitEvent(oA,Player(lA),OA,null)
set lA=lA+1
exitwhen lA==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ki,Condition(na))
call TriggerAddAction(ki,da)
set oA=null
set OA=null
endfunction
function bQ takes nothing returns nothing
set Ft=CreateTrigger()
call TriggerRegisterTimerEvent(Ft,0.10,false)
call TriggerAddAction(Ft,ne)
endfunction
function cD takes nothing returns nothing
set mi=CreateTrigger()
call TriggerRegisterTimerEvent(mi,120.00,false)
call TriggerAddAction(mi,Fa)
endfunction
function cE takes nothing returns nothing
local trigger tE
local playerunitevent iE
local integer SE
set Dt=CreateTrigger()
set tE=Dt
set iE=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set SE=0
loop
call TriggerRegisterPlayerUnitEvent(tE,Player(SE),iE,null)
set SE=SE+1
exitwhen SE==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Dt,Condition(Le))
call TriggerAddAction(Dt,Xe)
set tE=null
set iE=null
endfunction
function cI takes nothing returns nothing
local trigger tI
local playerunitevent iI
local integer SI
set yi=CreateTrigger()
set tI=yi
set iI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set SI=0
loop
call TriggerRegisterPlayerUnitEvent(tI,Player(SI),iI,null)
set SI=SI+1
exitwhen SI==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(yi,Condition(Aq))
call TriggerAddAction(yi,Dq)
set tI=null
set iI=null
endfunction
function cL takes nothing returns nothing
local trigger tL
local playerunitevent iL
local integer SL
set cS=CreateTrigger()
set tL=cS
set iL=EVENT_PLAYER_UNIT_ATTACKED
set SL=0
loop
call TriggerRegisterPlayerUnitEvent(tL,Player(SL),iL,null)
set SL=SL+1
exitwhen SL==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(cS,Condition(xn))
call TriggerAddAction(cS,vn)
set tL=null
set iL=null
endfunction
function cx takes nothing returns nothing
local trigger tx
local playerunitevent ix
local integer Sx
set rt=CreateTrigger()
set tx=rt
set ix=EVENT_PLAYER_UNIT_DEATH
set Sx=0
loop
call TriggerRegisterPlayerUnitEvent(tx,Player(Sx),ix,null)
set Sx=Sx+1
exitwhen Sx==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(rt,Condition(Tp))
call TriggerAddAction(rt,Yp)
set tx=null
set ix=null
endfunction
function dG takes nothing returns nothing
local trigger qG
local playerunitevent aG
local integer nG
set Es=CreateTrigger()
set qG=Es
set aG=EVENT_PLAYER_UNIT_SPELL_CAST
set nG=0
loop
call TriggerRegisterPlayerUnitEvent(qG,Player(nG),aG,null)
set nG=nG+1
exitwhen nG==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(Es,Wy)
set qG=null
set aG=null
endfunction
function dQ takes nothing returns nothing
local trigger qQ
local playerunitevent aQ
local integer nQ
set kt=CreateTrigger()
set qQ=kt
set aQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set nQ=0
loop
call TriggerRegisterPlayerUnitEvent(qQ,Player(nQ),aQ,null)
set nQ=nQ+1
exitwhen nQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(kt,Condition(de))
call TriggerAddAction(kt,fe)
set qQ=null
set aQ=null
endfunction
function dg takes nothing returns nothing
local trigger qg
local playerunitevent ag
local integer ng
set Is=CreateTrigger()
set qg=Is
set ag=EVENT_PLAYER_UNIT_SPELL_CAST
set ng=0
loop
call TriggerRegisterPlayerUnitEvent(qg,Player(ng),ag,null)
set ng=ng+1
exitwhen ng==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Is,Condition(Hy))
call TriggerAddAction(Is,Jy)
set qg=null
set ag=null
endfunction
function dh takes nothing returns nothing
local trigger qh
local playerunitevent ah
local integer nh
set Hs=CreateTrigger()
set qh=Hs
set ah=EVENT_PLAYER_UNIT_SPELL_CAST
set nh=0
loop
call TriggerRegisterPlayerUnitEvent(qh,Player(nh),ah,null)
set nh=nh+1
exitwhen nh==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Hs,Condition(My))
call TriggerAddAction(Hs,wp)
set qh=null
set ah=null
endfunction
function eD takes nothing returns nothing
local trigger bD
local playerunitevent yD
local integer pD
set Qi=CreateTrigger()
set bD=Qi
set yD=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set pD=0
loop
call TriggerRegisterPlayerUnitEvent(bD,Player(pD),yD,null)
set pD=pD+1
exitwhen pD==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Qi,Condition(ka))
call TriggerAddAction(Qi,ja)
set bD=null
set yD=null
endfunction
function eE takes nothing returns nothing
local trigger bE
local playerunitevent yE
local integer pE
set Ht=CreateTrigger()
set bE=Ht
set yE=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set pE=0
loop
call TriggerRegisterPlayerUnitEvent(bE,Player(pE),yE,null)
set pE=pE+1
exitwhen pE==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ht,Condition(Ce))
call TriggerAddAction(Ht,Ve)
set bE=null
set yE=null
endfunction
function eI takes nothing returns nothing
local trigger bI
local playerunitevent yI
local integer pI
set pi=CreateTrigger()
set bI=pi
set yI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set pI=0
loop
call TriggerRegisterPlayerUnitEvent(bI,Player(pI),yI,null)
set pI=pI+1
exitwhen pI==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(pi,Condition(Hq))
call TriggerAddAction(pi,Jq)
set bI=null
set yI=null
endfunction
function ex takes nothing returns nothing
local trigger bx
local playerunitevent yx
local integer px
set st=CreateTrigger()
set bx=st
set yx=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set px=0
loop
call TriggerRegisterPlayerUnitEvent(bx,Player(px),yx,null)
set px=px+1
exitwhen px==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(st,Condition(Gp))
call TriggerAddAction(st,gp)
set bx=null
set yx=null
endfunction
function fH takes nothing returns nothing
local trigger aH
local playerunitevent nH
local integer dH
set Di=CreateTrigger()
set aH=Di
set nH=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set dH=0
loop
call TriggerRegisterPlayerUnitEvent(aH,Player(dH),nH,null)
set dH=dH+1
exitwhen dH==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Di,Condition(Ka))
call TriggerAddAction(Di,La)
set aH=null
set nH=null
endfunction
function fL takes nothing returns nothing
local trigger aL
local playerunitevent nL
local integer dL
set oS=CreateTrigger()
set aL=oS
set nL=EVENT_PLAYER_UNIT_ATTACKED
set dL=0
loop
call TriggerRegisterPlayerUnitEvent(aL,Player(dL),nL,null)
set dL=dL+1
exitwhen dL==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(oS,Condition(mn))
call TriggerAddAction(oS,Qn)
set aL=null
set nL=null
endfunction
function fP takes nothing returns nothing
local trigger aP
local playerunitevent nP
local integer dP
set Ti=CreateTrigger()
set aP=Ti
set nP=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set dP=0
loop
call TriggerRegisterPlayerUnitEvent(aP,Player(dP),nP,null)
set dP=dP+1
exitwhen dP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ti,Condition(Sa))
call TriggerAddAction(Ti,ca)
set aP=null
set nP=null
endfunction
function fv takes nothing returns nothing
local trigger av
local playerunitevent nv
local integer dv
set yt=CreateTrigger()
set av=yt
set nv=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set dv=0
loop
call TriggerRegisterPlayerUnitEvent(av,Player(dv),nv,null)
set dv=dv+1
exitwhen dv==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(yt,Condition(Ap))
call TriggerAddAction(yt,Dp)
set av=null
set nv=null
endfunction
function gA takes nothing returns nothing
local trigger TA
local playerunitevent YA
local integer GA
set ji=CreateTrigger()
set TA=ji
set YA=EVENT_PLAYER_UNIT_SPELL_CAST
set GA=0
loop
call TriggerRegisterPlayerUnitEvent(TA,Player(GA),YA,null)
set GA=GA+1
exitwhen GA==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ji,Condition(fa))
call TriggerAddAction(ji,Ra)
set TA=null
set YA=null
endfunction
function gE takes nothing returns nothing
local trigger TE
local playerunitevent YE
local integer GE
set Kt=CreateTrigger()
set TE=Kt
set YE=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set GE=0
loop
call TriggerRegisterPlayerUnitEvent(TE,Player(GE),YE,null)
set GE=GE+1
exitwhen GE==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Kt,Condition(Me))
call TriggerAddAction(Kt,wq)
set TE=null
set YE=null
endfunction
function gJ takes nothing returns nothing
local trigger TJ
local playerunitevent YJ
local integer GJ
set Bi=CreateTrigger()
set TJ=Bi
set YJ=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set GJ=0
loop
call TriggerRegisterPlayerUnitEvent(TJ,Player(GJ),YJ,null)
set GJ=GJ+1
exitwhen GJ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Bi,Condition(On))
call TriggerAddAction(Bi,ln)
set TJ=null
set YJ=null
endfunction
function gm takes nothing returns nothing
local trigger Tm
local playerunitevent Ym
local integer Gm
set Rt=CreateTrigger()
set Tm=Rt
set Ym=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Gm=0
loop
call TriggerRegisterPlayerUnitEvent(Tm,Player(Gm),Ym,null)
set Gm=Gm+1
exitwhen Gm==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Rt,Condition(te))
call TriggerAddAction(Rt,ie)
set Tm=null
set Ym=null
endfunction
function hQ takes nothing returns nothing
local trigger YQ
local playerunitevent GQ
local integer gQ
set jt=CreateTrigger()
set YQ=jt
set GQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set gQ=0
loop
call TriggerRegisterPlayerUnitEvent(YQ,Player(gQ),GQ,null)
set gQ=gQ+1
exitwhen gQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(jt,Condition(Re))
call TriggerAddAction(jt,Te)
set YQ=null
set GQ=null
endfunction
function iG takes nothing returns nothing
local trigger rG
local playerunitevent sG
local integer tG
set Ws=CreateTrigger()
set rG=Ws
set sG=EVENT_PLAYER_UNIT_SPELL_EFFECT
set tG=0
loop
call TriggerRegisterPlayerUnitEvent(rG,Player(tG),sG,null)
set tG=tG+1
exitwhen tG==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ws,Condition(my))
call TriggerAddAction(Ws,Qy)
set rG=null
set sG=null
endfunction
function iH takes nothing returns nothing
local trigger rH
local playerunitevent sH
local integer tH
set Pi=CreateTrigger()
set rH=Pi
set sH=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set tH=0
loop
call TriggerRegisterPlayerUnitEvent(rH,Player(tH),sH,null)
set tH=tH+1
exitwhen tH==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Pi,Condition(Aa))
call TriggerAddAction(Pi,Da)
set rH=null
set sH=null
endfunction
function iP takes nothing returns nothing
local trigger rP
local playerunitevent sP
local integer tP
set fi=CreateTrigger()
set rP=fi
set sP=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set tP=0
loop
call TriggerRegisterPlayerUnitEvent(rP,Player(tP),sP,null)
set tP=tP+1
exitwhen tP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(fi,Condition(ra))
call TriggerAddAction(fi,sa)
set rP=null
set sP=null
endfunction
function iY takes nothing returns nothing
local trigger rY
local playerunitevent sY
local integer tY
set js=CreateTrigger()
set rY=js
set sY=EVENT_PLAYER_UNIT_ATTACKED
set tY=0
loop
call TriggerRegisterPlayerUnitEvent(rY,Player(tY),sY,null)
set tY=tY+1
exitwhen tY==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(js,Condition(Ty))
call TriggerAddAction(js,Yy)
set rY=null
set sY=null
endfunction
function ij takes nothing returns nothing
local trigger rj
local playerunitevent sj
local integer tj
set Ns=CreateTrigger()
set rj=Ns
set sj=EVENT_PLAYER_UNIT_SPELL_CAST
set tj=0
loop
call TriggerRegisterPlayerUnitEvent(rj,Player(tj),sj,null)
set tj=tj+1
exitwhen tj==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ns,Condition(qp))
call TriggerAddAction(Ns,ap)
set rj=null
set sj=null
endfunction
function iv takes nothing returns nothing
local trigger rv
local playerunitevent sv
local integer tv
set lt=CreateTrigger()
set rv=lt
set sv=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set tv=0
loop
call TriggerRegisterPlayerUnitEvent(rv,Player(tv),sv,null)
set tv=tv+1
exitwhen tv==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(lt,Condition(Zp))
call TriggerAddAction(lt,Up)
set rv=null
set sv=null
endfunction
function jD takes nothing returns nothing
local trigger hD
local playerunitevent FD
local integer kD
set Ei=CreateTrigger()
set hD=Ei
set FD=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set kD=0
loop
call TriggerRegisterPlayerUnitEvent(hD,Player(kD),FD,null)
set kD=kD+1
exitwhen kD==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ei,Condition(ma))
call TriggerAddAction(Ei,Qa)
set hD=null
set FD=null
endfunction
function jI takes nothing returns nothing
local trigger hI
local playerunitevent FI
local integer kI
set qi=CreateTrigger()
set hI=qi
set FI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set kI=0
loop
call TriggerRegisterPlayerUnitEvent(hI,Player(kI),FI,null)
set kI=kI+1
exitwhen kI==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(qi,Condition(Xq))
call TriggerAddAction(qi,Cq)
set hI=null
set FI=null
endfunction
function jx takes nothing returns nothing
local trigger hx
local playerunitevent Fx
local integer kx
set St=CreateTrigger()
set hx=St
set Fx=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set kx=0
loop
call TriggerRegisterPlayerUnitEvent(hx,Player(kx),Fx,null)
set kx=kx+1
exitwhen kx==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(St,Condition(kp))
call TriggerAddAction(St,jp)
set hx=null
set Fx=null
endfunction
function lJ takes nothing returns nothing
local trigger cJ
local playerunitevent oJ
local integer OJ
set Ci=CreateTrigger()
set cJ=Ci
set oJ=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set OJ=0
loop
call TriggerRegisterPlayerUnitEvent(cJ,Player(OJ),oJ,null)
set OJ=OJ+1
exitwhen OJ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ci,Condition(tn))
call TriggerAddAction(Ci,Sn)
set cJ=null
set oJ=null
endfunction
function lm takes nothing returns nothing
local trigger cm
local playerunitevent om
local integer Om
set dt=CreateTrigger()
set cm=dt
set om=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Om=0
loop
call TriggerRegisterPlayerUnitEvent(cm,Player(Om),om,null)
set Om=Om+1
exitwhen Om==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(dt,Condition(we))
call TriggerAddAction(dt,ue)
set cm=null
set om=null
endfunction
function mE takes nothing returns nothing
local trigger jE
local playerunitevent xE
local integer vE
set Lt=CreateTrigger()
set jE=Lt
set xE=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set vE=0
loop
call TriggerRegisterPlayerUnitEvent(jE,Player(vE),xE,null)
set vE=vE+1
exitwhen vE==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Lt,Condition(uq))
call TriggerAddAction(Lt,rq)
set jE=null
set xE=null
endfunction
function mJ takes nothing returns nothing
local trigger jJ
local playerunitevent xJ
local integer vJ
set Ni=CreateTrigger()
set jJ=Ni
set xJ=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set vJ=0
loop
call TriggerRegisterPlayerUnitEvent(jJ,Player(vJ),xJ,null)
set vJ=vJ+1
exitwhen vJ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ni,Condition(bn))
call TriggerAddAction(Ni,yn)
set jJ=null
set xJ=null
endfunction
function mm takes nothing returns nothing
local trigger jm
local playerunitevent xm
local integer vm
set Tt=CreateTrigger()
set jm=Tt
set xm=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set vm=0
loop
call TriggerRegisterPlayerUnitEvent(jm,Player(vm),xm,null)
set vm=vm+1
exitwhen vm==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Tt,Condition(Se))
call TriggerAddAction(Tt,ce)
set jm=null
set xm=null
endfunction
function nE takes nothing returns nothing
set Jt=CreateTrigger()
call TriggerRegisterTimerEvent(Jt,0.10,false)
call TriggerAddAction(Jt,Ne)
endfunction
function nJ takes nothing returns nothing
local trigger eJ
local playerunitevent qJ
local integer aJ
set Vi=CreateTrigger()
set eJ=Vi
set qJ=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set aJ=0
loop
call TriggerRegisterPlayerUnitEvent(eJ,Player(aJ),qJ,null)
set aJ=aJ+1
exitwhen aJ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Vi,Condition(cn))
call TriggerAddAction(Vi,on)
set eJ=null
set qJ=null
endfunction
function nT takes nothing returns nothing
local trigger eT
local playerunitevent qT
local integer aT
set gs=CreateTrigger()
set eT=gs
set qT=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set aT=0
loop
call TriggerRegisterPlayerUnitEvent(eT,Player(aT),qT,null)
set aT=aT+1
exitwhen aT==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(gs,Condition(py))
call TriggerAddAction(gs,ey)
set eT=null
set qT=null
endfunction
function nY takes nothing returns nothing
local trigger eY
local playerunitevent qY
local integer aY
set xs=CreateTrigger()
set eY=xs
set qY=EVENT_PLAYER_UNIT_ATTACKED
set aY=0
loop
call TriggerRegisterPlayerUnitEvent(eY,Player(aY),qY,null)
set aY=aY+1
exitwhen aY==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(xs,Condition(Gy))
call TriggerAddAction(xs,gy)
set eY=null
set qY=null
endfunction
function nm takes nothing returns nothing
local trigger em
local playerunitevent qm
local integer am
set ft=CreateTrigger()
set em=ft
set qm=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set am=0
loop
call TriggerRegisterPlayerUnitEvent(em,Player(am),qm,null)
set am=am+1
exitwhen am==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ft,Condition(re))
call TriggerAddAction(ft,se)
set em=null
set qm=null
endfunction
function oK takes nothing returns nothing
local trigger iK
local playerunitevent SK
local integer cK
set rS=CreateTrigger()
set iK=rS
set SK=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set cK=0
loop
call TriggerRegisterPlayerUnitEvent(iK,Player(cK),SK,null)
set cK=cK+1
exitwhen cK==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(rS,Condition(fn))
call TriggerAddAction(rS,Rn)
set iK=null
set SK=null
endfunction
function oQ takes nothing returns nothing
local trigger iQ
local playerunitevent SQ
local integer cQ
set ht=CreateTrigger()
set iQ=ht
set SQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set cQ=0
loop
call TriggerRegisterPlayerUnitEvent(iQ,Player(cQ),SQ,null)
set cQ=cQ+1
exitwhen cQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ht,Condition(ee))
call TriggerAddAction(ht,qe)
set iQ=null
set SQ=null
endfunction
function oZ takes nothing returns nothing
local trigger iZ
local playerunitevent SZ
local integer cZ
set Bt=CreateTrigger()
set iZ=Bt
set SZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set cZ=0
loop
call TriggerRegisterPlayerUnitEvent(iZ,Player(cZ),SZ,null)
set cZ=cZ+1
exitwhen cZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Bt,Condition(Oq))
call TriggerAddAction(Bt,lq)
set iZ=null
set SZ=null
endfunction
function pU takes nothing returns nothing
local trigger lU
local playerunitevent bU
local integer yU
set ii=CreateTrigger()
set lU=ii
set bU=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set yU=0
loop
call TriggerRegisterPlayerUnitEvent(lU,Player(yU),bU,null)
set yU=yU+1
exitwhen yU==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ii,Condition(hq))
call TriggerAddAction(ii,Fq)
set lU=null
set bU=null
endfunction
function qK takes nothing returns nothing
local trigger yK
local playerunitevent pK
local integer eK
set sS=CreateTrigger()
set yK=sS
set pK=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set eK=0
loop
call TriggerRegisterPlayerUnitEvent(yK,Player(eK),pK,null)
set eK=eK+1
exitwhen eK==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(sS,Condition(Tn))
call TriggerAddAction(sS,Yn)
set yK=null
set pK=null
endfunction
function qZ takes nothing returns nothing
local trigger yZ
local playerunitevent pZ
local integer eZ
set Nt=CreateTrigger()
set yZ=Nt
set pZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set eZ=0
loop
call TriggerRegisterPlayerUnitEvent(yZ,Player(eZ),pZ,null)
set eZ=eZ+1
exitwhen eZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Nt,Condition(bq))
call TriggerAddAction(Nt,yq)
set yZ=null
set pZ=null
endfunction
function rW takes nothing returns nothing
local trigger MQ
local playerunitevent wW
local integer uW
set Qt=CreateTrigger()
set MQ=Qt
set wW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set uW=0
loop
call TriggerRegisterPlayerUnitEvent(MQ,Player(uW),wW,null)
set uW=uW+1
exitwhen uW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Qt,Condition(je))
call TriggerAddAction(Qt,xe)
set MQ=null
set wW=null
endfunction
function sF takes nothing returns nothing
local trigger wF
local playerunitevent uF
local integer rF
set Ks=CreateTrigger()
set wF=Ks
set uF=EVENT_PLAYER_UNIT_SPELL_CAST
set rF=0
loop
call TriggerRegisterPlayerUnitEvent(wF,Player(rF),uF,null)
set rF=rF+1
exitwhen rF==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ks,Condition(sp))
call TriggerAddAction(Ks,tp)
set wF=null
set uF=null
endfunction
function sJ takes nothing returns nothing
local trigger wJ
local playerunitevent uJ
local integer rJ
set Xi=CreateTrigger()
set wJ=Xi
set uJ=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set rJ=0
loop
call TriggerRegisterPlayerUnitEvent(wJ,Player(rJ),uJ,null)
set rJ=rJ+1
exitwhen rJ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Xi,Condition(rn))
call TriggerAddAction(Xi,sn)
set wJ=null
set uJ=null
endfunction
function sm takes nothing returns nothing
local trigger wm
local playerunitevent um
local integer rm
set nt=CreateTrigger()
set wm=nt
set um=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set rm=0
loop
call TriggerRegisterPlayerUnitEvent(wm,Player(rm),um,null)
set rm=rm+1
exitwhen rm==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(nt,Condition(Np))
call TriggerAddAction(nt,Mp)
set wm=null
set um=null
endfunction
function tk takes nothing returns nothing
local trigger uk
local playerunitevent rk
local integer sk
set Cs=CreateTrigger()
set uk=Cs
set rk=EVENT_PLAYER_UNIT_DEATH
set sk=0
loop
call TriggerRegisterPlayerUnitEvent(uk,Player(sk),rk,null)
set sk=sk+1
exitwhen sk==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Cs,Condition(Op))
call TriggerAddAction(Cs,lp)
set uk=null
set rk=null
endfunction
function uD takes nothing returns nothing
local trigger NA
local playerunitevent MA
local integer wD
set vi=CreateTrigger()
set NA=vi
set MA=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set wD=0
loop
call TriggerRegisterPlayerUnitEvent(NA,Player(wD),MA,null)
set wD=wD+1
exitwhen wD==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(vi,Condition(Ga))
call TriggerAddAction(vi,ga)
set NA=null
set MA=null
endfunction
function uK takes nothing returns nothing
local trigger NJ
local playerunitevent MJ
local integer wK
set uS=CreateTrigger()
set NJ=uS
set MJ=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set wK=0
loop
call TriggerRegisterPlayerUnitEvent(NJ,Player(wK),MJ,null)
set wK=wK+1
exitwhen wK==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(uS,Condition(nn))
call TriggerAddAction(uS,dn)
set NJ=null
set MJ=null
endfunction
function uQ takes nothing returns nothing
local trigger Nm
local playerunitevent Mm
local integer wQ
set gt=CreateTrigger()
set Nm=gt
set Mm=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set wQ=0
loop
call TriggerRegisterPlayerUnitEvent(Nm,Player(wQ),Mm,null)
set wQ=wQ+1
exitwhen wQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(gt,Condition(ye))
call TriggerAddAction(gt,pe)
set Nm=null
set Mm=null
endfunction
function uZ takes nothing returns nothing
local trigger NE
local playerunitevent ME
local integer wZ
set Vt=CreateTrigger()
set NE=Vt
set ME=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set wZ=0
loop
call TriggerRegisterPlayerUnitEvent(NE,Player(wZ),ME,null)
set wZ=wZ+1
exitwhen wZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Vt,Condition(cq))
call TriggerAddAction(Vt,oq)
set NE=null
set ME=null
endfunction
function ug takes nothing returns nothing
local trigger NG
local playerunitevent MG
local integer wg
set Us=CreateTrigger()
set NG=Us
set MG=EVENT_PLAYER_UNIT_SPELL_CAST
set wg=0
loop
call TriggerRegisterPlayerUnitEvent(NG,Player(wg),MG,null)
set wg=wg+1
exitwhen wg==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Us,Condition(Py))
call TriggerAddAction(Us,Ay)
set NG=null
set MG=null
endfunction
function vU takes nothing returns nothing
local trigger kU
local playerunitevent jU
local integer xU
set oi=CreateTrigger()
set kU=oi
set jU=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set xU=0
loop
call TriggerRegisterPlayerUnitEvent(kU,Player(xU),jU,null)
set xU=xU+1
exitwhen xU==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(oi,Condition(mq))
call TriggerAddAction(oi,Qq)
set kU=null
set jU=null
endfunction
function vW takes nothing returns nothing
local trigger kW
local playerunitevent jW
local integer xW
set Ut=CreateTrigger()
set kW=Ut
set jW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set xW=0
loop
call TriggerRegisterPlayerUnitEvent(kW,Player(xW),jW,null)
set xW=xW+1
exitwhen xW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ut,Condition(Ue))
call TriggerAddAction(Ut,Ie)
set kW=null
set jW=null
endfunction
function wE takes nothing returns nothing
local trigger BW
local playerunitevent NW
local integer MW
set At=CreateTrigger()
set BW=At
set NW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set MW=0
loop
call TriggerRegisterPlayerUnitEvent(BW,Player(MW),NW,null)
set MW=MW+1
exitwhen MW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(At,Condition(Je))
call TriggerAddAction(At,Ke)
set BW=null
set NW=null
endfunction
function wI takes nothing returns nothing
local trigger BU
local playerunitevent NU
local integer MU
set bi=CreateTrigger()
set BU=bi
set NU=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set MU=0
loop
call TriggerRegisterPlayerUnitEvent(BU,Player(MU),NU,null)
set MU=MU+1
exitwhen MU==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(bi,Condition(Iq))
call TriggerAddAction(bi,Pq)
set BU=null
set NU=null
endfunction
function wh takes nothing returns nothing
set Ds=CreateTrigger()
call TriggerRegisterTimerEvent(Ds,5.00,true)
call TriggerAddAction(Ds,Ny)
endfunction
function xY takes nothing returns nothing
local trigger FY
local playerunitevent kY
local integer jY
set vs=CreateTrigger()
set FY=vs
set kY=EVENT_PLAYER_UNIT_ATTACKED
set jY=0
loop
call TriggerRegisterPlayerUnitEvent(FY,Player(jY),kY,null)
set jY=jY+1
exitwhen jY==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(vs,Condition(hy))
call TriggerAddAction(vs,Fy)
set FY=null
set kY=null
endfunction
function xZ takes nothing returns nothing
local trigger FZ
local playerunitevent kZ
local integer jZ
set wi=CreateTrigger()
set FZ=wi
set kZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set jZ=0
loop
call TriggerRegisterPlayerUnitEvent(FZ,Player(jZ),kZ,null)
set jZ=jZ+1
exitwhen jZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(wi,Condition(qq))
call TriggerAddAction(wi,aq)
set FZ=null
set kZ=null
endfunction
function yH takes nothing returns nothing
local trigger OH
local playerunitevent lH
local integer bH
set Ai=CreateTrigger()
set OH=Ai
set lH=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set bH=0
loop
call TriggerRegisterPlayerUnitEvent(OH,Player(bH),lH,null)
set bH=bH+1
exitwhen bH==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ai,Condition(Ha))
call TriggerAddAction(Ai,Ja)
set OH=null
set lH=null
endfunction
function yP takes nothing returns nothing
local trigger OP
local playerunitevent lP
local integer bP
set Ri=CreateTrigger()
set OP=Ri
set lP=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set bP=0
loop
call TriggerRegisterPlayerUnitEvent(OP,Player(bP),lP,null)
set bP=bP+1
exitwhen bP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ri,Condition(ta))
call TriggerAddAction(Ri,ia)
set OP=null
set lP=null
endfunction
function yv takes nothing returns nothing
local trigger Ov
local playerunitevent lv
local integer bv
set bt=CreateTrigger()
set Ov=bt
set lv=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set bv=0
loop
call TriggerRegisterPlayerUnitEvent(Ov,Player(bv),lv,null)
set bv=bv+1
exitwhen bv==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(bt,Condition(Ip))
call TriggerAddAction(bt,Pp)
set Ov=null
set lv=null
endfunction
function RL takes nothing returns nothing
set Ts=CreateTrigger()
call TriggerAddAction(Ts,Wn)
set Ys=CreateTrigger()
call TriggerAddAction(Ys,En)
call BR()
call nT()
call FT()
call ZT()
call LT()
call iY()
call nY()
call xY()
call HY()
call MY()
call iG()
call dG()
call ZG()
call ug()
call dg()
call Zg()
call Kg()
call wh()
call dh()
call Uh()
call sF()
call TF()
call PF()
call tk()
call Tk()
call Pk()
call ij()
call Gj()
set wt=CreateTrigger()
call TriggerAddAction(wt,Zn)
call Hj()
call cx()
call ex()
call Tx()
call jx()
call Zx()
call Jx()
call Nx()
call iv()
call yv()
call fv()
call Fv()
call Wv()
call Dv()
call Vv()
call sm()
call lm()
call nm()
call gm()
call mm()
call Pm()
call Xm()
call uQ()
call oQ()
call bQ()
call dQ()
call hQ()
call QQ()
call AQ()
call CQ()
call rW()
call OW()
call aW()
call GW()
call vW()
call IW()
call LW()
call wE()
call cE()
call eE()
call nE()
call gE()
call mE()
call PE()
call XE()
call uZ()
call oZ()
call qZ()
call YZ()
call xZ()
call UZ()
call KZ()
call MZ()
call SU()
call pU()
call aU()
call GU()
call vU()
call IU()
call LU()
call wI()
call cI()
call eI()
call TI()
call jI()
call ZI()
call JI()
call NI()
call iP()
call yP()
call fP()
call FP()
call WP()
call DP()
call KP()
call BP()
call bA()
call gA()
call PA()
call uD()
call cD()
call eD()
call TD()
call jD()
call ZD()
call JD()
call ND()
call iH()
call yH()
call fH()
call FH()
call WH()
call DH()
call VH()
call sJ()
call lJ()
call nJ()
call gJ()
call mJ()
call PJ()
call XJ()
call uK()
call oK()
call qK()
call YK()
call EK()
call CK()
call cL()
call fL()
endfunction
function main takes nothing returns nothing
local trigger gL
local trigger hL
local trigger FL
call Cf()
call SetCameraBounds((-30720.0)+GetCameraMargin(CAMERA_MARGIN_LEFT),(-30720.0)+GetCameraMargin(CAMERA_MARGIN_BOTTOM),30720.0-GetCameraMargin(CAMERA_MARGIN_RIGHT),30720.0-GetCameraMargin(CAMERA_MARGIN_TOP),(-30720.0)+GetCameraMargin(CAMERA_MARGIN_LEFT),30720.0-GetCameraMargin(CAMERA_MARGIN_TOP),30720.0-GetCameraMargin(CAMERA_MARGIN_RIGHT),(-30720.0)+GetCameraMargin(CAMERA_MARGIN_BOTTOM))
call SetDayNightModels("Environment\\DNC\\DNCLordaeron\\DNCLordaeronTerrain\\DNCLordaeronTerrain.mdl","Environment\\DNC\\DNCLordaeron\\DNCLordaeronUnit\\DNCLordaeronUnit.mdl")
call NewSoundEnvironment("Default")
call SetAmbientDaySound("LordaeronSummerDay")
call SetAmbientNightSound("LordaeronSummerNight")
call SetMapMusic("Music",true,0)
set Rs=CreateSound("Sound\\Interface\\Warning.wav",false,false,false,10,10,"")
call SetSoundParamsFromLabel(Rs,"Warning")
call SetSoundDuration(Rs,1903)
set a=Rect(11872.0,-24096.0,13376.0,-18304.0)
set n=Rect(14080.0,-30720.0,16256.0,-25664.0)
set d=Rect(12096.0,-26240.0,14944.0,-23776.0)
set f=Rect(-17120.0,15936.0,-15520.0,17408.0)
call Rect(-29824.0,-30080.0,-29312.0,-28672.0)
call Rect(-29216.0,-30112.0,-28672.0,-28672.0)
call Rect(-25984.0,-29760.0,-24992.0,-29504.0)
call Rect(-25984.0,-30080.0,-25472.0,-29824.0)
call Rect(-25984.0,-30400.0,-25472.0,-30144.0)
call Rect(-26464.0,-30048.0,-26176.0,-29056.0)
call Rect(-25440.0,-30368.0,-25184.0,-29856.0)
call Rect(-25184.0,-30368.0,-24928.0,-29856.0)
call Rect(-24672.0,-29568.0,-24064.0,-28800.0)
call Rect(-24704.0,-30208.0,-24064.0,-29696.0)
set R=Rect(-17408.0,22016.0,-17056.0,22368.0)
set T=Rect(-19072.0,17728.0,-18688.0,18080.0)
set Y=Rect(-22464.0,22208.0,-22112.0,22560.0)
set G=Rect(-3776.0,4416.0,-3392.0,4768.0)
set g=Rect(-3872.0,1664.0,-3456.0,2016.0)
set h=Rect(-416.0,-2592.0,-128.0,-2272.0)
set F=Rect(4992.0,-2016.0,5344.0,-1696.0)
set k=Rect(2528.0,-3168.0,2848.0,-2880.0)
set j=Rect(7744.0,-2528.0,8096.0,-2208.0)
set x=Rect(-17504.0,18080.0,-17056.0,18496.0)
set v=Rect(1024.0,-1120.0,1376.0,-800.0)
set m=Rect(-3328.0,8096.0,-2848.0,8512.0)
set Q=Rect(-4704.0,11488.0,-4416.0,11776.0)
set W=Rect(-640.0,8288.0,-160.0,8704.0)
set E=Rect(-5184.0,17120.0,-4832.0,17440.0)
set Z=Rect(-96.0,12448.0,224.0,12768.0)
set U=Rect(-2272.0,13536.0,-1984.0,13856.0)
set I=Rect(7008.0,1984.0,7456.0,2432.0)
set P=Rect(4032.0,3744.0,4416.0,4064.0)
set A=Rect(4000.0,5216.0,4320.0,5536.0)
set D=Rect(-576.0,2880.0,-224.0,3232.0)
set H=Rect(-8288.0,19776.0,-7936.0,20160.0)
set J=Rect(-6464.0,21184.0,-6080.0,21568.0)
set K=Rect(-7904.0,22048.0,-7488.0,22464.0)
set L=Rect(-5344.0,14304.0,-4960.0,14720.0)
set X=Rect(2880.0,32.0,3264.0,352.0)
set C=Rect(608.0,15680.0,992.0,16096.0)
set V=Rect(-2496.0,15872.0,-2112.0,16224.0)
set B=Rect(1056.0,10848.0,1344.0,11136.0)
set N=Rect(1600.0,6784.0,1984.0,7136.0)
set M=Rect(160.0,19232.0,544.0,19648.0)
set ww=Rect(2784.0,22592.0,3200.0,22944.0)
set uw=Rect(-1984.0,19008.0,-1600.0,19360.0)
set rw=Rect(3008.0,18048.0,3392.0,18400.0)
call Rect(-28544.0,-30080.0,-28064.0,-29344.0)
call Rect(-27744.0,-30080.0,-27456.0,-29760.0)
set sw=Rect(4224.0,19488.0,4608.0,19776.0)
set tw=Rect(13056.0,4960.0,13408.0,5280.0)
set iw=Rect(5696.0,24768.0,6048.0,25088.0)
set Sw=Rect(3328.0,26816.0,3680.0,27168.0)
set cw=Rect(8608.0,26144.0,9024.0,26528.0)
set ow=Rect(6656.0,21248.0,7008.0,21600.0)
set Ow=Rect(-16640.0,10368.0,-13504.0,13056.0)
set lw=Rect(-18944.0,5312.0,-16864.0,7328.0)
set bw=Rect(-28032.0,-1120.0,-22464.0,640.0)
set yw=Rect(-27264.0,2784.0,-26208.0,3328.0)
set pw=Rect(-26912.0,-4320.0,-23872.0,-2976.0)
set ew=Rect(-19328.0,-288.0,-18592.0,1568.0)
set qw=Rect(-11936.0,7616.0,-448.0,11424.0)
set aw=Rect(-1664.0,1216.0,6848.0,7776.0)
set nw=Rect(-5472.0,24704.0,-3232.0,27616.0)
set dw=Rect(3744.0,10880.0,4064.0,11232.0)
set fw=Rect(-12064.0,11392.0,-8832.0,16576.0)
set Rw=Rect(-8832.0,10176.0,23520.0,17760.0)
set Tw=Rect(4384.0,17728.0,23424.0,27040.0)
set Yw=Rect(-10688.0,17536.0,-10304.0,17888.0)
set Gw=Rect(-10688.0,-9312.0,-10336.0,-9024.0)
set gw=Rect(17280.0,9280.0,17632.0,9632.0)
set hw=Rect(8352.0,12192.0,8672.0,12512.0)
set Fw=Rect(5952.0,18400.0,6304.0,18688.0)
set kw=Rect(9120.0,19872.0,9408.0,20192.0)
set jw=Rect(23328.0,-14080.0,30688.0,17792.0)
set xw=Rect(13984.0,-288.0,14336.0,0.0)
set vw=Rect(10624.0,-7552.0,11008.0,-7200.0)
set mw=Rect(15168.0,-5792.0,15552.0,-5408.0)
set Qw=Rect(15328.0,-7712.0,15648.0,-7424.0)
set Ww=Rect(12640.0,-7104.0,12992.0,-6752.0)
set Ew=Rect(17056.0,-8800.0,17376.0,-8512.0)
set Zw=Rect(18432.0,-608.0,18784.0,-320.0)
set Uw=Rect(13760.0,-11168.0,14112.0,-10752.0)
set Iw=Rect(16768.0,-16416.0,17120.0,-16032.0)
set Pw=Rect(18880.0,-7616.0,19232.0,-7296.0)
set Aw=Rect(6816.0,-6752.0,7136.0,-6464.0)
set Dw=Rect(12512.0,-4064.0,12832.0,-3712.0)
set Hw=Rect(9056.0,-4576.0,9344.0,-4288.0)
set Jw=Rect(-26464.0,-8896.0,-26144.0,-8544.0)
set Kw=Rect(-21632.0,-8544.0,-21248.0,-8224.0)
set Lw=Rect(-16928.0,-8224.0,-16608.0,-7904.0)
set Xw=Rect(-10112.0,-11424.0,-9760.0,-11136.0)
set Cw=Rect(-7680.0,-16416.0,-7328.0,-16128.0)
set Vw=Rect(288.0,-17760.0,608.0,-17472.0)
set Bw=Rect(9248.0,-21376.0,9984.0,-20640.0)
set Nw=Rect(24704.0,-27680.0,25088.0,-27264.0)
set Mw=Rect(10816.0,-18688.0,11168.0,-18304.0)
set wu=Rect(13056.0,-17984.0,13408.0,-17760.0)
set uu=Rect(12096.0,-21024.0,12448.0,-20768.0)
set ru=Rect(15680.0,5600.0,16032.0,5920.0)
set su=Rect(6944.0,7648.0,7264.0,7968.0)
set tu=Rect(5824.0,12256.0,6176.0,12576.0)
set iu=Rect(11200.0,7712.0,11552.0,8064.0)
set Su=Rect(12480.0,11136.0,12832.0,11456.0)
set cu=Rect(14880.0,22944.0,15200.0,23232.0)
set ou=Rect(11392.0,16768.0,11744.0,17088.0)
set Ou=Rect(23840.0,96.0,24128.0,384.0)
set lu=Rect(19488.0,11168.0,19808.0,11488.0)
set bu=Rect(20672.0,2528.0,21056.0,2848.0)
set yu=Rect(23776.0,2368.0,24160.0,2720.0)
set pu=Rect(18336.0,-13408.0,18624.0,-13120.0)
set eu=Rect(17056.0,-11648.0,17376.0,-11264.0)
set qu=Rect(15488.0,-17696.0,15840.0,-17376.0)
set au=Rect(24896.0,-8480.0,25248.0,-8128.0)
set nu=Rect(16480.0,-14368.0,16768.0,-14048.0)
set du=Rect(17088.0,-19744.0,17440.0,-19456.0)
set fu=Rect(22720.0,-10432.0,23072.0,-10048.0)
set Ru=Rect(20672.0,-23232.0,21056.0,-22848.0)
set Tu=Rect(19904.0,-5920.0,20256.0,-5632.0)
set Yu=Rect(18624.0,-3936.0,18976.0,-3616.0)
set Gu=Rect(-13632.0,-14816.0,-12192.0,-13376.0)
set gu=Rect(17760.0,-10400.0,23360.0,-1344.0)
set hu=Rect(12384.0,-5984.0,13824.0,-4352.0)
set Fu=Rect(-10944.0,3968.0,-7680.0,5120.0)
set ku=Rect(-6528.0,7808.0,-6176.0,8160.0)
set ju=Rect(-8864.0,6912.0,-8448.0,7264.0)
set xu=Rect(-11680.0,14304.0,-11264.0,14752.0)
set vu=Rect(-9760.0,12928.0,-9472.0,13280.0)
set mu=Rect(-7552.0,16928.0,-7232.0,17248.0)
set Qu=Rect(-17472.0,-3328.0,-17120.0,-2976.0)
call Rect(-24576.0,-1376.0,-24224.0,-1024.0)
set Wu=Rect(23392.0,10912.0,23712.0,11232.0)
set Eu=Rect(17280.0,19456.0,17632.0,19808.0)
set Zu=Rect(-16896.0,24032.0,-16544.0,24352.0)
set Uu=Rect(-15904.0,25952.0,-15520.0,26304.0)
set Iu=Rect(-17312.0,26624.0,-16896.0,27008.0)
set Pu=Rect(-16096.0,20352.0,-15712.0,20768.0)
set Au=Rect(-20448.0,21440.0,-20064.0,21792.0)
set Du=Rect(-22560.0,19808.0,-22272.0,20128.0)
set Hu=Rect(-18752.0,19520.0,-18400.0,19872.0)
set Ju=Rect(-16128.0,16896.0,-15808.0,17248.0)
set Ku=Rect(-17952.0,15904.0,-17632.0,16224.0)
set Lu=Rect(-19936.0,16352.0,-19648.0,16672.0)
set Xu=Rect(-17248.0,12448.0,-16928.0,12832.0)
set Cu=Rect(-13728.0,11968.0,-13408.0,12352.0)
set Vu=Rect(-15232.0,10624.0,-14880.0,10976.0)
set Bu=Rect(-13856.0,7872.0,-13568.0,8256.0)
set Nu=Rect(-16192.0,5824.0,-15840.0,6208.0)
set Mu=Rect(-16864.0,3392.0,-16576.0,3776.0)
set wr=Rect(-18880.0,5568.0,-18528.0,5920.0)
set ur=Rect(-20288.0,1216.0,-19936.0,1600.0)
set rr=Rect(-17216.0,352.0,-16896.0,736.0)
set sr=Rect(-24512.0,3744.0,-24128.0,4064.0)
set tr=Rect(-22720.0,2368.0,-22432.0,2752.0)
set ir=Rect(-23552.0,-256.0,-23200.0,128.0)
set Sr=Rect(-25376.0,1312.0,-25056.0,1632.0)
set cr=Rect(-28736.0,-192.0,-28352.0,160.0)
set lr=Rect(-21024.0,2944.0,-20704.0,3360.0)
set br=Rect(-13792.0,2144.0,-13440.0,2592.0)
set yr=Rect(-13568.0,14912.0,-13216.0,15296.0)
set pr=Rect(-12736.0,16128.0,-12352.0,16512.0)
set er=Rect(-10880.0,3360.0,-10528.0,3712.0)
set qr=Rect(-10048.0,5280.0,-9696.0,5600.0)
set ar=Rect(-6880.0,3936.0,-6560.0,4256.0)
set nr=Rect(-8224.0,3040.0,-7904.0,3392.0)
set dr=Rect(-8960.0,1760.0,-8608.0,2176.0)
set fr=Rect(-6624.0,1088.0,-6304.0,1472.0)
set Rr=Rect(-7296.0,-960.0,-6944.0,-544.0)
set Tr=Rect(-23712.0,-4704.0,-23392.0,-4416.0)
set Yr=Rect(-25184.0,-3168.0,-24864.0,-2848.0)
set Gr=Rect(-21888.0,-4416.0,-21536.0,-4032.0)
set gr=Rect(-20928.0,-2304.0,-20576.0,-1888.0)
set hr=Rect(-7776.0,11040.0,-7456.0,11392.0)
set Fr=Rect(-11648.0,7072.0,-11296.0,7360.0)
set kr=Rect(-13728.0,4928.0,-13376.0,5408.0)
set jr=Rect(-5152.0,21696.0,-4832.0,22080.0)
set xr=Rect(-5248.0,24416.0,-4960.0,24768.0)
set vr=Rect(-6688.0,28096.0,-6368.0,28480.0)
set mr=Rect(-9024.0,26496.0,-8736.0,26880.0)
set Qr=Rect(-10048.0,28224.0,-9696.0,28576.0)
set Wr=Rect(-1408.0,23776.0,-1152.0,24096.0)
set Er=Rect(-2720.0,26176.0,-2432.0,26560.0)
set Zr=Rect(-28032.0,-2944.0,-27680.0,-2560.0)
set Ur=Rect(-29760.0,-10016.0,-29408.0,-9632.0)
set Ir=Rect(15296.0,-26976.0,15648.0,-26624.0)
set Pr=Rect(-20544.0,12032.0,-20160.0,12416.0)
set Ar=Rect(-18368.0,10624.0,-18016.0,11008.0)
set Dr=Rect(-10880.0,-576.0,-10528.0,-224.0)
set Hr=Rect(-11104.0,-4768.0,-10816.0,-4448.0)
set Jr=Rect(-5728.0,-2912.0,-5440.0,-2560.0)
set Kr=Rect(-3904.0,-6720.0,-3552.0,-6336.0)
set Lr=Rect(-3616.0,-3040.0,-3328.0,-2688.0)
set Xr=Rect(-7200.0,-8000.0,-6880.0,-7616.0)
set Cr=Rect(-5504.0,-9344.0,-5248.0,-9056.0)
set Vr=Rect(-11616.0,10848.0,-11296.0,11168.0)
set Br=Rect(-1792.0,-320.0,-1440.0,64.0)
set Nr=Rect(3232.0,-7488.0,3552.0,-7136.0)
set Mr=Rect(8224.0,-10496.0,8512.0,-10208.0)
set ws=Rect(1344.0,29280.0,1696.0,29632.0)
set us=Rect(10848.0,-2144.0,11136.0,-1824.0)
set rs=Rect(-26496.0,-1568.0,-26144.0,-1248.0)
set ss=Rect(-27168.0,2528.0,-26880.0,2816.0)
set ts=Rect(-2016.0,27552.0,-1696.0,27936.0)
set is=Rect(-3488.0,23040.0,-3200.0,23392.0)
set Ss=Rect(2016.0,-7904.0,2336.0,-7584.0)
set cs=Rect(640.0,-5760.0,992.0,-5376.0)
set os=Rect(5216.0,-12384.0,5504.0,-12064.0)
set Os=Rect(18272.0,-17504.0,18656.0,-17056.0)
set ls=Rect(26848.0,-11680.0,27168.0,-11360.0)
set bs=Rect(6464.0,-4672.0,6816.0,-4288.0)
set ys=Rect(20672.0,21312.0,21024.0,21696.0)
set ps=Rect(-1824.0,5792.0,-1440.0,6144.0)
set es=Rect(-23264.0,-8992.0,-22944.0,-8704.0)
set qs=Rect(-13504.0,-8640.0,-13184.0,-8384.0)
set as=Rect(26048.0,-2848.0,26400.0,-2528.0)
set ns=Rect(28864.0,-3360.0,29152.0,-3040.0)
set ds=Rect(28064.0,2592.0,28352.0,2880.0)
set fs=Rect(27488.0,-5984.0,27808.0,-5664.0)
call KR()
call LR()
call InitBlizzard()
call Bf()
call RL()
set hL=Ts
if TriggerEvaluate(hL) then
call TriggerExecute(hL)
endif
set FL=wt
if TriggerEvaluate(FL) then
call TriggerExecute(FL)
endif
set gL=CreateTrigger()
call TriggerAddCondition(gL,Condition(Un))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Real.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(In))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Integer.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(Pn))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package String.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(An))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Angle.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(Dn))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Vectors.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(Hn))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Maths.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(Jn))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Player.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(Kn))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Printing.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(Ln))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Basics.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(Xn))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package GameTimer.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(Cn))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MagicFunctions.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(Vn))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package ErrorHandling.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(Bn))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Matrices.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(Nn))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Quaternion.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(Mn))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Table.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(wd))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Playercolor.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(ud))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Colors.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(rd))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Group.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(sd))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Lightning.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(td))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package WeatherEffects.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(id))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package TypeCasting.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(Sd))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package ClosureForGroups.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(cd))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package LinkedList.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(od))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Abilities.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(Od))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package AbilityIds.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(ld))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Buildings.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(bd))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package HashList.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(yd))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Units.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(pd))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package CityBaseTaxes.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(ed))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Forces.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(qd))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Revolts.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(ad))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package City.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(nd))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MutliboardTools.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(dd))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package EventHelper.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(fd))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package RegisterEvents.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(Rd))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package TimerUtils.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(Td))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package ClosureTimers.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(Yd))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package TargetsAllowed.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(Gd))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Doodads.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(gd))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Icons.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(hd))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Objects.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(Fd))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Sounds.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(kd))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Soundsets.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(jd))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Textures.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(xd))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package UI.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(vd))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package UnitIds.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(md))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MapBounds.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(Qd))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package DummyRecycler.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(Wd))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package StringUtils.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(Ed))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package ObjectIds.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(Zd))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Preloader.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(Ud))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package ObjectIdGenerator.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(Id))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package OnUnitEnterLeave.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(Pd))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package UnitIndexer.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(Ad))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package ClosureEvents.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(Dd))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MathTools.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(Hd))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Strings.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(Jd))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Multiboards.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(Kd))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package PlayerStats.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(Ld))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package CityModifiers.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(Xd))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Main.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(Cd))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package CityBuilded.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(Vd))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package CityManage.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(Bd))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Commands.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(Nd))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Credits.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(Md))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Economy.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(wf))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package DateTime.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(uf))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MultiboardCityUpdate.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(rf))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Diplomacy.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(sf))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package LimitEncampments.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(tf))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package LimitMercenaryCamps.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(Sf))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Logarithm.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(cf))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MainInit.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(of))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MassControl.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(Of))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package NoShipsNearRivers.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(lf))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package OnPlayerLeave.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(bf))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package RangeChecks.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(yf))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Taxation.")
endif
call TriggerClearConditions(gL)
call TriggerAddCondition(gL,Condition(pf))
if not TriggerEvaluate(gL) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Upkeep.")
endif
call TriggerClearConditions(gL)
call DestroyTrigger(gL)
set gL=null
set hL=null
set FL=null
endfunction
function GL takes nothing returns nothing
call SetStartLocPrioCount(0,19)
call SetStartLocPrio(0,0,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,1,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,2,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,3,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,4,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,9,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,10,11,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,11,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,12,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,13,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,14,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,15,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,16,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,17,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,18,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(1,9)
call SetStartLocPrio(1,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,1,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,2,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,3,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,4,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(2,9)
call SetStartLocPrio(2,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,2,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,3,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,4,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(3,9)
call SetStartLocPrio(3,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,3,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,4,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(4,9)
call SetStartLocPrio(4,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,4,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(5,9)
call SetStartLocPrio(5,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(6,9)
call SetStartLocPrio(6,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(7,9)
call SetStartLocPrio(7,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(8,9)
call SetStartLocPrio(8,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(9,9)
call SetStartLocPrio(9,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,8,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(10,16)
call SetStartLocPrio(10,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,8,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,9,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,10,12,MAP_LOC_PRIO_LOW)
call SetStartLocPrio(10,11,13,MAP_LOC_PRIO_LOW)
call SetStartLocPrio(10,12,14,MAP_LOC_PRIO_LOW)
call SetStartLocPrio(10,13,15,MAP_LOC_PRIO_LOW)
call SetStartLocPrio(10,14,16,MAP_LOC_PRIO_LOW)
call SetStartLocPrio(10,15,17,MAP_LOC_PRIO_LOW)
call SetStartLocPrioCount(11,19)
call SetStartLocPrio(11,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,8,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,9,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,10,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,11,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,12,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,13,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,14,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,15,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,16,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,17,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,18,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(12,5)
call SetStartLocPrio(12,0,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,1,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,2,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,3,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,4,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(13,5)
call SetStartLocPrio(13,0,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,1,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,2,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,3,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,4,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(14,5)
call SetStartLocPrio(14,0,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,1,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,2,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,3,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,4,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(15,5)
call SetStartLocPrio(15,0,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,1,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,2,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,3,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,4,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(16,5)
call SetStartLocPrio(16,0,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,1,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,2,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,3,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,4,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(17,5)
call SetStartLocPrio(17,0,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,1,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,2,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,3,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,4,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(18,1)
call SetStartLocPrio(18,0,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(19,1)
call SetStartLocPrio(19,0,18,MAP_LOC_PRIO_HIGH)
endfunction
function TL takes nothing returns nothing
call SetPlayerStartLocation(Player(0),0)
call ForcePlayerStartLocation(Player(0),0)
call SetPlayerColor(Player(0),ConvertPlayerColor(0))
call SetPlayerRacePreference(Player(0),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(0),false)
call SetPlayerController(Player(0),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(1),1)
call ForcePlayerStartLocation(Player(1),1)
call SetPlayerColor(Player(1),ConvertPlayerColor(1))
call SetPlayerRacePreference(Player(1),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(1),false)
call SetPlayerController(Player(1),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(2),2)
call ForcePlayerStartLocation(Player(2),2)
call SetPlayerColor(Player(2),ConvertPlayerColor(2))
call SetPlayerRacePreference(Player(2),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(2),false)
call SetPlayerController(Player(2),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(3),3)
call ForcePlayerStartLocation(Player(3),3)
call SetPlayerColor(Player(3),ConvertPlayerColor(3))
call SetPlayerRacePreference(Player(3),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(3),false)
call SetPlayerController(Player(3),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(4),4)
call ForcePlayerStartLocation(Player(4),4)
call SetPlayerColor(Player(4),ConvertPlayerColor(4))
call SetPlayerRacePreference(Player(4),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(4),false)
call SetPlayerController(Player(4),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(5),5)
call ForcePlayerStartLocation(Player(5),5)
call SetPlayerColor(Player(5),ConvertPlayerColor(5))
call SetPlayerRacePreference(Player(5),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(5),false)
call SetPlayerController(Player(5),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(6),6)
call ForcePlayerStartLocation(Player(6),6)
call SetPlayerColor(Player(6),ConvertPlayerColor(6))
call SetPlayerRacePreference(Player(6),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(6),false)
call SetPlayerController(Player(6),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(7),7)
call ForcePlayerStartLocation(Player(7),7)
call SetPlayerColor(Player(7),ConvertPlayerColor(7))
call SetPlayerRacePreference(Player(7),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(7),false)
call SetPlayerController(Player(7),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(8),8)
call ForcePlayerStartLocation(Player(8),8)
call SetPlayerColor(Player(8),ConvertPlayerColor(8))
call SetPlayerRacePreference(Player(8),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(8),false)
call SetPlayerController(Player(8),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(9),9)
call ForcePlayerStartLocation(Player(9),9)
call SetPlayerColor(Player(9),ConvertPlayerColor(9))
call SetPlayerRacePreference(Player(9),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(9),false)
call SetPlayerController(Player(9),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(10),10)
call ForcePlayerStartLocation(Player(10),10)
call SetPlayerColor(Player(10),ConvertPlayerColor(10))
call SetPlayerRacePreference(Player(10),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(10),false)
call SetPlayerController(Player(10),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(11),11)
call ForcePlayerStartLocation(Player(11),11)
call SetPlayerColor(Player(11),ConvertPlayerColor(11))
call SetPlayerRacePreference(Player(11),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(11),false)
call SetPlayerController(Player(11),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(12),12)
call ForcePlayerStartLocation(Player(12),12)
call SetPlayerColor(Player(12),ConvertPlayerColor(12))
call SetPlayerRacePreference(Player(12),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(12),false)
call SetPlayerController(Player(12),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(13),13)
call ForcePlayerStartLocation(Player(13),13)
call SetPlayerColor(Player(13),ConvertPlayerColor(13))
call SetPlayerRacePreference(Player(13),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(13),false)
call SetPlayerController(Player(13),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(14),14)
call ForcePlayerStartLocation(Player(14),14)
call SetPlayerColor(Player(14),ConvertPlayerColor(14))
call SetPlayerRacePreference(Player(14),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(14),false)
call SetPlayerController(Player(14),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(15),15)
call ForcePlayerStartLocation(Player(15),15)
call SetPlayerColor(Player(15),ConvertPlayerColor(15))
call SetPlayerRacePreference(Player(15),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(15),false)
call SetPlayerController(Player(15),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(16),16)
call ForcePlayerStartLocation(Player(16),16)
call SetPlayerColor(Player(16),ConvertPlayerColor(16))
call SetPlayerRacePreference(Player(16),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(16),false)
call SetPlayerController(Player(16),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(17),17)
call ForcePlayerStartLocation(Player(17),17)
call SetPlayerColor(Player(17),ConvertPlayerColor(17))
call SetPlayerRacePreference(Player(17),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(17),false)
call SetPlayerController(Player(17),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(18),18)
call ForcePlayerStartLocation(Player(18),18)
call SetPlayerColor(Player(18),ConvertPlayerColor(18))
call SetPlayerRacePreference(Player(18),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(18),false)
call SetPlayerController(Player(18),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(19),19)
call ForcePlayerStartLocation(Player(19),19)
call SetPlayerColor(Player(19),ConvertPlayerColor(19))
call SetPlayerRacePreference(Player(19),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(19),false)
call SetPlayerController(Player(19),MAP_CONTROL_USER)
endfunction
function YL takes nothing returns nothing
call SetPlayerTeam(Player(0),0)
call SetPlayerTeam(Player(1),0)
call SetPlayerTeam(Player(2),0)
call SetPlayerTeam(Player(3),0)
call SetPlayerTeam(Player(4),0)
call SetPlayerTeam(Player(5),0)
call SetPlayerTeam(Player(6),0)
call SetPlayerTeam(Player(7),0)
call SetPlayerTeam(Player(8),0)
call SetPlayerTeam(Player(9),0)
call SetPlayerTeam(Player(10),0)
call SetPlayerTeam(Player(11),0)
call SetPlayerTeam(Player(12),1)
call SetPlayerTeam(Player(13),1)
call SetPlayerTeam(Player(14),1)
call SetPlayerTeam(Player(15),1)
call SetPlayerTeam(Player(16),1)
call SetPlayerTeam(Player(17),1)
call SetPlayerTeam(Player(18),1)
call SetPlayerTeam(Player(19),1)
endfunction
function config takes nothing returns nothing
call SetMapName("TRIGSTR_001")
call SetMapDescription("TRIGSTR_003")
call SetPlayers(20)
call SetTeams(20)
call SetGamePlacement(MAP_PLACEMENT_TEAMS_TOGETHER)
call DefineStartLocation(0,320.0,5184.0)
call DefineStartLocation(1,320.0,5184.0)
call DefineStartLocation(2,320.0,5184.0)
call DefineStartLocation(3,320.0,5184.0)
call DefineStartLocation(4,320.0,5184.0)
call DefineStartLocation(5,320.0,5184.0)
call DefineStartLocation(6,320.0,5184.0)
call DefineStartLocation(7,320.0,5184.0)
call DefineStartLocation(8,320.0,5184.0)
call DefineStartLocation(9,320.0,5184.0)
call DefineStartLocation(10,320.0,5184.0)
call DefineStartLocation(11,320.0,5184.0)
call DefineStartLocation(12,320.0,5184.0)
call DefineStartLocation(13,320.0,5184.0)
call DefineStartLocation(14,320.0,5184.0)
call DefineStartLocation(15,320.0,5184.0)
call DefineStartLocation(16,320.0,5184.0)
call DefineStartLocation(17,320.0,5184.0)
call DefineStartLocation(18,320.0,5184.0)
call DefineStartLocation(19,320.0,5184.0)
call TL()
call YL()
call GL()
endfunction
