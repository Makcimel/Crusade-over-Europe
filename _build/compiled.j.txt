// this script was compiled with wurst 1.8.0.0-jenkins-Wurst-1091
globals
group w=null
location u=null
integer array r
force s=null
location t=null
location i=null
location S=null
location c=null
rect o=null
rect O=null
group l=null
group b=null
location y=null
boolean array p
boolean array e
rect q=null
rect a=null
rect n=null
rect d=null
rect f=null
rect R=null
rect T=null
rect Y=null
rect G=null
rect g=null
rect h=null
rect F=null
rect k=null
rect j=null
rect x=null
rect v=null
rect m=null
rect Q=null
rect W=null
rect E=null
rect Z=null
rect U=null
rect I=null
rect P=null
rect A=null
rect D=null
rect H=null
rect J=null
rect K=null
rect L=null
rect X=null
rect C=null
rect V=null
rect B=null
rect N=null
rect M=null
rect ww=null
rect uw=null
rect rw=null
rect sw=null
rect tw=null
rect iw=null
rect Sw=null
rect cw=null
rect ow=null
rect Ow=null
rect lw=null
rect bw=null
rect yw=null
rect pw=null
rect ew=null
rect qw=null
rect aw=null
rect nw=null
rect dw=null
rect fw=null
rect Rw=null
rect Tw=null
rect Yw=null
rect Gw=null
rect gw=null
rect hw=null
rect Fw=null
rect kw=null
rect jw=null
rect xw=null
rect vw=null
rect mw=null
rect Qw=null
rect Ww=null
rect Ew=null
rect Zw=null
rect Uw=null
rect Iw=null
rect Pw=null
rect Aw=null
rect Dw=null
rect Hw=null
rect Jw=null
rect Kw=null
rect Lw=null
rect Xw=null
rect Cw=null
rect Vw=null
rect Bw=null
rect Nw=null
rect Mw=null
rect wu=null
rect uu=null
rect ru=null
rect su=null
rect tu=null
rect iu=null
rect Su=null
rect cu=null
rect ou=null
rect Ou=null
rect lu=null
rect bu=null
rect yu=null
rect pu=null
rect eu=null
rect qu=null
rect au=null
rect nu=null
rect du=null
rect fu=null
rect Ru=null
rect Tu=null
rect Yu=null
rect Gu=null
rect gu=null
rect hu=null
rect Fu=null
rect ku=null
rect ju=null
rect xu=null
rect vu=null
rect mu=null
rect Qu=null
rect Wu=null
rect Eu=null
rect Zu=null
rect Uu=null
rect Iu=null
rect Pu=null
rect Au=null
rect Du=null
rect Hu=null
rect Ju=null
rect Ku=null
rect Lu=null
rect Xu=null
rect Cu=null
rect Vu=null
rect Bu=null
rect Nu=null
rect Mu=null
rect wr=null
rect ur=null
rect rr=null
rect sr=null
rect tr=null
rect ir=null
rect Sr=null
rect cr=null
rect lr=null
rect br=null
rect yr=null
rect pr=null
rect er=null
rect qr=null
rect ar=null
rect nr=null
rect dr=null
rect fr=null
rect Rr=null
rect Tr=null
rect Yr=null
rect Gr=null
rect gr=null
rect hr=null
rect Fr=null
rect kr=null
rect jr=null
rect xr=null
rect vr=null
rect mr=null
rect Qr=null
rect Wr=null
rect Er=null
rect Zr=null
rect Ur=null
rect Ir=null
rect Pr=null
rect Ar=null
rect Dr=null
rect Hr=null
rect Jr=null
rect Kr=null
rect Lr=null
rect Xr=null
rect Cr=null
rect Vr=null
rect Br=null
rect Nr=null
rect Mr=null
rect ws=null
rect us=null
rect rs=null
rect ss=null
rect ts=null
rect is=null
rect Ss=null
rect cs=null
rect os=null
rect Os=null
rect ls=null
rect bs=null
rect ys=null
rect ps=null
rect es=null
rect qs=null
rect as=null
rect ns=null
rect ds=null
sound fs=null
trigger Rs=null
trigger Ts=null
trigger Ys=null
trigger Gs=null
trigger gs=null
trigger hs=null
trigger Fs=null
trigger ks=null
trigger js=null
trigger xs=null
trigger vs=null
trigger ms=null
trigger Qs=null
trigger Ws=null
trigger Es=null
trigger Zs=null
trigger Us=null
trigger Is=null
trigger Ps=null
trigger As=null
trigger Ds=null
trigger Hs=null
trigger Js=null
trigger Ks=null
trigger Ls=null
trigger Xs=null
trigger Cs=null
trigger Vs=null
trigger Bs=null
trigger Ns=null
trigger Ms=null
trigger wt=null
trigger ut=null
trigger rt=null
trigger st=null
trigger tt=null
trigger St=null
trigger ct=null
trigger ot=null
trigger Ot=null
trigger lt=null
trigger bt=null
trigger yt=null
trigger pt=null
trigger et=null
trigger qt=null
trigger at=null
trigger nt=null
trigger dt=null
trigger ft=null
trigger Rt=null
trigger Tt=null
trigger Yt=null
trigger Gt=null
trigger gt=null
trigger ht=null
trigger Ft=null
trigger kt=null
trigger jt=null
trigger xt=null
trigger vt=null
trigger mt=null
trigger Qt=null
trigger Wt=null
trigger Et=null
trigger Zt=null
trigger Ut=null
trigger It=null
trigger Pt=null
trigger At=null
trigger Dt=null
trigger Ht=null
trigger Jt=null
trigger Kt=null
trigger Lt=null
trigger Xt=null
trigger Ct=null
trigger Vt=null
trigger Bt=null
trigger Nt=null
trigger Mt=null
trigger wi=null
trigger ui=null
trigger ri=null
trigger si=null
trigger ti=null
trigger ii=null
trigger Si=null
trigger ci=null
trigger oi=null
trigger Oi=null
trigger li=null
trigger bi=null
trigger yi=null
trigger pi=null
trigger ei=null
trigger qi=null
trigger ai=null
trigger ni=null
trigger di=null
trigger fi=null
trigger Ri=null
trigger Ti=null
trigger Yi=null
trigger Gi=null
trigger gi=null
trigger hi=null
trigger Fi=null
trigger ki=null
trigger ji=null
trigger xi=null
trigger vi=null
trigger mi=null
trigger Qi=null
trigger Wi=null
trigger Ei=null
trigger Zi=null
trigger Ui=null
trigger Ii=null
trigger Pi=null
trigger Ai=null
trigger Di=null
trigger Hi=null
trigger Ji=null
trigger Ki=null
trigger Li=null
trigger Xi=null
trigger Ci=null
trigger Vi=null
trigger Bi=null
trigger Ni=null
trigger Mi=null
trigger wS=null
trigger uS=null
trigger rS=null
trigger sS=null
trigger tS=null
trigger iS=null
trigger SS=null
integer cS=0
player oS=null
integer OS=0
integer array lS
integer bS=0
integer yS=0
integer pS=0
integer eS=0
integer qS=0
integer aS=0
integer nS=0
integer dS=0
integer fS=0
integer RS=0
integer TS=0
real YS=0.
real array GS
integer array gS
real array hS
real array FS
real array kS
real array jS
integer array xS
playerevent vS=null
trigger mS=null
trigger QS=null
trigger WS=null
integer array ES
integer ZS=0
integer US=0
integer IS=0
integer array PS
integer array AS
boolean DS=false
group HS=null
integer array JS
integer KS=0
integer LS=0
integer XS=0
filterfunc CS=null
integer VS=0
integer array BS
integer array NS
integer array MS
string array wc
integer uc=0
real rc=0.
integer array sc
integer array tc
integer array ic
integer Sc=0
hashtable cc=null
force oc=null
force Oc=null
force lc=null
force bc=null
force array yc
integer array pc
integer array ec
integer array qc
timer ac=null
real nc=0.
group dc=null
hashtable fc=null
hashtable Rc=null
hashtable Tc=null
integer array Yc
integer array Gc
integer gc=0
boolean hc=false
boolean Fc=false
boolean kc=false
timer jc=null
real xc=0.
rect vc=null
rect mc=null
region Qc=null
real Wc=0.
real Ec=0.
integer Zc=0
integer Uc=0
integer Ic=0
integer array Pc
integer array Ac
integer array Dc
integer array Hc
integer array Jc
integer array Kc
integer array Lc
integer array Xc
integer array Cc
multiboard array Vc
trigger Bc=null
group Nc=null
unit array Mc
integer wo=0
integer array uo
player array ro
player so=null
playercolor io=null
playercolor So=null
playercolor co=null
playercolor oo=null
playercolor array Oo
group lo=null
unit bo=null
integer yo=0
real po=0.
trigger array eo
integer qo=0
real array ao
integer no=0
string array do
string array fo
string array Ro
string array To
string array Yo
string array Go
string array go
string array ho
string array Fo
string array ko
string array jo
string array xo
string array vo
string array mo
string array Qo
string array Wo
string array Eo
hashtable Zo=null
timer array Uo
integer Io=0
integer Po=0
integer Ao=0
trigger Do=null
trigger Ho=null
unit array Jo
integer Ko=0
integer Lo=0
integer Xo=0
integer array Co
integer Vo=0
integer Bo=0
integer No=0
integer Mo=0
integer array wO
integer uO=0
integer array rO
integer array sO
integer tO=0
integer array iO
integer SO=0
integer cO=0
integer array oO
integer array OO
integer lO=0
integer bO=0
integer array yO
integer pO=0
integer eO=0
integer array qO
integer array aO
integer nO=0
integer dO=0
integer array fO
integer array RO
integer TO=0
integer YO=0
integer array GO
integer array gO
integer hO=0
integer FO=0
integer array kO
integer jO=0
integer array xO
integer array vO
integer mO=0
integer QO=0
integer array WO
integer array EO
integer ZO=0
integer UO=0
integer array IO
integer array PO
integer AO=0
integer DO=0
integer array HO
integer JO=0
integer KO=0
integer array LO
integer XO=0
integer CO=0
integer array VO
integer array BO
integer NO=0
integer MO=0
integer array wl
integer array ul
integer rl=0
integer sl=0
integer array tl
integer il=0
integer Sl=0
integer array cl
integer ol=0
integer Ol=0
integer array ll
integer array bl
integer yl=0
integer pl=0
integer array el
real array ql
real array al
boolean array nl
real array dl
integer array fl
real array Rl
real array Tl
string array Yl
string array Gl
unit array gl
string array hl
integer array Fl
integer array kl
integer array jl
real array xl
real array vl
integer array ml
integer array Ql
real array Wl
real array El
real array Zl
real array Ul
integer array Il
real array Pl
integer array Al
integer array Dl
integer array Hl
integer array Jl
integer array Kl
integer array Ll
integer array Xl
integer array Cl
integer array Vl
integer array Bl
integer array Nl
integer array Ml
integer array wb
unit array ub
timer array rb
real array sb
integer array tb
integer array ib
integer array Sb
integer array cb
integer array ob
integer array Ob
integer array lb
unit array bb
unit array yb
integer array pb
integer array eb
integer array qb
integer array ab
integer array nb
integer array db
integer array fb
boolean array Rb
integer array Tb
integer array Yb
player array Gb
unit array gb
integer array hb
unit array Fb
integer array kb
real array jb
real array xb
unit array vb
integer array mb
player array Qb
boolean array Wb
integer array Eb
integer array Zb
unit array Ub
unit array Ib
integer Pb=0
string array Ab
integer Db=0
integer Hb=0
integer Jb=0
integer array Kb
integer array Lb
integer array Xb
integer array Cb
integer array Vb
integer array Bb
integer array Nb
integer array Mb
integer array wy
integer array uy
integer array ry
integer array sy
integer array ty
integer array iy
integer array Sy
integer array cy
integer array oy
integer array Oy
integer array ly
integer array by
integer array yy
integer array py
integer array ey
integer array qy
code ay=null
code ny=null
code dy=null
code fy=null
code Ry=null
code Ty=null
code Yy=null
code Gy=null
code gy=null
code hy=null
code Fy=null
code ky=null
code jy=null
code xy=null
code vy=null
code my=null
code Qy=null
code Wy=null
code Ey=null
code Zy=null
code Uy=null
code Iy=null
code Py=null
code Ay=null
code Dy=null
code Hy=null
code Jy=null
code Ky=null
code Ly=null
code Xy=null
code Cy=null
code Vy=null
code By=null
code Ny=null
code My=null
code wp=null
code up=null
code rp=null
code sp=null
code tp=null
code ip=null
code Sp=null
code cp=null
code op=null
code Op=null
code lp=null
code bp=null
code yp=null
code pp=null
code ep=null
code qp=null
code ap=null
code np=null
code dp=null
code fp=null
code Rp=null
code Tp=null
code Yp=null
code Gp=null
code gp=null
code hp=null
code Fp=null
code kp=null
code jp=null
code xp=null
code vp=null
code mp=null
code Qp=null
code Wp=null
code Ep=null
code Zp=null
code Up=null
code Ip=null
code Pp=null
code Ap=null
code Dp=null
code Hp=null
code Jp=null
code Kp=null
code Lp=null
code Xp=null
code Cp=null
code Vp=null
code Bp=null
code Np=null
code Mp=null
code we=null
code ue=null
code re=null
code se=null
code te=null
code ie=null
code Se=null
code ce=null
code oe=null
code Oe=null
code le=null
code be=null
code ye=null
code pe=null
code ee=null
code qe=null
code ae=null
code ne=null
code de=null
code fe=null
code Re=null
code Te=null
code Ye=null
code Ge=null
code ge=null
code he=null
code Fe=null
code ke=null
code je=null
code xe=null
code ve=null
code me=null
code Qe=null
code We=null
code Ee=null
code Ze=null
code Ue=null
code Ie=null
code Pe=null
code Ae=null
code De=null
code He=null
code Je=null
code Ke=null
code Le=null
code Xe=null
code Ce=null
code Ve=null
code Be=null
code Ne=null
code Me=null
code wq=null
code uq=null
code rq=null
code sq=null
code tq=null
code iq=null
code Sq=null
code cq=null
code oq=null
code Oq=null
code lq=null
code bq=null
code yq=null
code pq=null
code eq=null
code qq=null
code aq=null
code nq=null
code dq=null
code fq=null
code Rq=null
code Tq=null
code Yq=null
code Gq=null
code gq=null
code hq=null
code Fq=null
code kq=null
code jq=null
code xq=null
code vq=null
code mq=null
code Qq=null
code Wq=null
code Eq=null
code Zq=null
code Uq=null
code Iq=null
code Pq=null
code Aq=null
code Dq=null
code Hq=null
code Jq=null
code Kq=null
code Lq=null
code Xq=null
code Cq=null
code Vq=null
code Bq=null
code Nq=null
code Mq=null
code wa=null
code ua=null
code ra=null
code sa=null
code ta=null
code ia=null
code Sa=null
code ca=null
code oa=null
code Oa=null
code la=null
code ba=null
code ya=null
code pa=null
code ea=null
code qa=null
code aa=null
code na=null
code da=null
code fa=null
code Ra=null
code Ta=null
code Ya=null
code Ga=null
code ga=null
code ha=null
code Fa=null
code ka=null
code ja=null
code xa=null
code va=null
code ma=null
code Qa=null
code Wa=null
code Ea=null
code Za=null
code Ua=null
code Ia=null
code Pa=null
code Aa=null
code Da=null
code Ha=null
code Ja=null
code Ka=null
code La=null
code Xa=null
code Ca=null
code Va=null
code Ba=null
code Na=null
code Ma=null
code wn=null
code un=null
code rn=null
code sn=null
code tn=null
code Sn=null
code cn=null
code on=null
code On=null
code ln=null
code bn=null
code yn=null
code pn=null
code en=null
code qn=null
code an=null
code nn=null
code dn=null
code fn=null
code Rn=null
code Tn=null
code Yn=null
code Gn=null
code gn=null
code hn=null
code Fn=null
code kn=null
code jn=null
code xn=null
code vn=null
code mn=null
code Qn=null
code Wn=null
code En=null
code Zn=null
code Un=null
code In=null
code Pn=null
code An=null
code Dn=null
code Hn=null
code Jn=null
code Kn=null
code Ln=null
code Xn=null
code Cn=null
code Vn=null
code Bn=null
code Nn=null
code Mn=null
code wd=null
code ud=null
code rd=null
code sd=null
code td=null
code id=null
code Sd=null
code cd=null
code od=null
code Od=null
code ld=null
code bd=null
code yd=null
code pd=null
code ed=null
code qd=null
code ad=null
code nd=null
code dd=null
code fd=null
code Rd=null
code Td=null
code Yd=null
code Gd=null
code gd=null
code hd=null
code Fd=null
code kd=null
code jd=null
code xd=null
code vd=null
code md=null
code Qd=null
code Wd=null
code Ed=null
code Zd=null
code Ud=null
code Id=null
code Pd=null
code Ad=null
code Dd=null
code Hd=null
code Jd=null
code Kd=null
code Ld=null
code Xd=null
code Cd=null
code Vd=null
code Bd=null
code Nd=null
code Md=null
code wf=null
code uf=null
code rf=null
code sf=null
code tf=null
code Sf=null
code cf=null
code of=null
code Of=null
code lf=null
code bf=null
code yf=null
code pf=null
code ef=null
code qf=null
code af=null
code nf=null
code df=null
code ff=null
code Rf=null
code Tf=null
code Yf=null
code Gf=null
code gf=null
code hf=null
code Ff=null
code kf=null
code jf=null
code xf=null
code vf=null
code mf=null
code Qf=null
code Wf=null
code Ef=null
code Zf=null
code Uf=null
code If=null
code Pf=null
code Af=null
code Df=null
code Hf=null
code Jf=null
code Kf=null
code Lf=null
code Xf=null
code Cf=null
code Vf=null
code Bf=null
code Nf=null
code Mf=null
code wR=null
code uR=null
unit rR=null
multiboard sR=null
timer tR=null
unit iR=null
trigger SR=null
rect cR=null
endglobals
function AP takes nothing returns nothing
local trigger UP
local playerunitevent IP
local integer PP
set Oi=CreateTrigger()
set UP=Oi
set IP=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set PP=0
loop
call TriggerRegisterPlayerUnitEvent(UP,Player(PP),IP,null)
set PP=PP+1
exitwhen PP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Oi,Condition(Lq))
call TriggerAddAction(Oi,Xq)
set UP=null
set IP=null
endfunction
function Ak takes nothing returns nothing
local trigger Uk
local playerunitevent Ik
local integer Pk
set Xs=CreateTrigger()
set Uk=Xs
set Ik=EVENT_PLAYER_UNIT_SPELL_CAST
set Pk=0
loop
call TriggerRegisterPlayerUnitEvent(Uk,Player(Pk),Ik,null)
set Pk=Pk+1
exitwhen Pk==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Xs,Condition(dp))
call TriggerAddAction(Xs,fp)
set Uk=null
set Ik=null
endfunction
function BI takes nothing returns nothing
local trigger XI
local playerunitevent CI
local integer VI
set si=CreateTrigger()
set XI=si
set CI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set VI=0
loop
call TriggerRegisterPlayerUnitEvent(XI,Player(VI),CI,null)
set VI=VI+1
exitwhen VI==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(si,Condition(Qq))
call TriggerAddAction(si,Wq)
set XI=null
set CI=null
endfunction
function BX takes nothing returns nothing
local trigger XX
local playerunitevent CX
local integer VX
set SS=CreateTrigger()
set XX=SS
set CX=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set VX=0
loop
call TriggerRegisterPlayerUnitEvent(XX,Player(VX),CX,null)
set VX=VX+1
exitwhen VX==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(SS,Condition(Dn))
call TriggerAddAction(SS,Hn)
set XX=null
set CX=null
endfunction
function CG takes nothing returns nothing
local trigger KG
local playerunitevent LG
local integer XG
set Qs=CreateTrigger()
set KG=Qs
set LG=EVENT_PLAYER_UNIT_SPELL_EFFECT
set XG=0
loop
call TriggerRegisterPlayerUnitEvent(KG,Player(XG),LG,null)
set XG=XG+1
exitwhen XG==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Qs,Condition(Iy))
call TriggerAddAction(Qs,Py)
set KG=null
set LG=null
endfunction
function CY takes nothing returns nothing
local trigger KY
local playerunitevent LY
local integer XY
set ks=CreateTrigger()
set KY=ks
set LY=EVENT_PLAYER_UNIT_ATTACKED
set XY=0
loop
call TriggerRegisterPlayerUnitEvent(KY,Player(XY),LY,null)
set XY=XY+1
exitwhen XY==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ks,Condition(ky))
call TriggerAddAction(ks,jy)
set KY=null
set LY=null
endfunction
function DA takes nothing returns nothing
local trigger IA
local playerunitevent PA
local integer AA
set ni=CreateTrigger()
set IA=ni
set PA=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set AA=0
loop
call TriggerRegisterPlayerUnitEvent(IA,Player(AA),PA,null)
set AA=AA+1
exitwhen AA==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ni,Condition(Oa))
call TriggerAddAction(ni,la)
set IA=null
set PA=null
endfunction
function DG takes nothing returns nothing
local trigger IG
local playerunitevent PG
local integer AG
set ms=CreateTrigger()
set IG=ms
set PG=EVENT_PLAYER_UNIT_SPELL_CAST
set AG=0
loop
call TriggerRegisterPlayerUnitEvent(IG,Player(AG),PG,null)
set AG=AG+1
exitwhen AG==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ms,Condition(Zy))
call TriggerAddAction(ms,Uy)
set IG=null
set PG=null
endfunction
function DJ takes nothing returns nothing
local trigger IJ
local playerunitevent PJ
local integer AJ
set Zi=CreateTrigger()
set IJ=Zi
set PJ=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set AJ=0
loop
call TriggerRegisterPlayerUnitEvent(IJ,Player(AJ),PJ,null)
set AJ=AJ+1
exitwhen AJ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Zi,Condition(Ca))
call TriggerAddAction(Zi,Va)
set IJ=null
set PJ=null
endfunction
function DU takes nothing returns nothing
local trigger IU
local playerunitevent PU
local integer AU
set Xt=CreateTrigger()
set IU=Xt
set PU=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set AU=0
loop
call TriggerRegisterPlayerUnitEvent(IU,Player(AU),PU,null)
set AU=AU+1
exitwhen AU==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Xt,Condition(eq))
call TriggerAddAction(Xt,qq)
set IU=null
set PU=null
endfunction
function Dm takes nothing returns nothing
local trigger Im
local playerunitevent Pm
local integer Am
set ot=CreateTrigger()
set Im=ot
set Pm=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Am=0
loop
call TriggerRegisterPlayerUnitEvent(Im,Player(Am),Pm,null)
set Am=Am+1
exitwhen Am==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ot,Condition(Jp))
call TriggerAddAction(ot,Kp)
set Im=null
set Pm=null
endfunction
function EE takes nothing returns nothing
local trigger mE
local playerunitevent QE
local integer WE
set xt=CreateTrigger()
set mE=xt
set QE=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set WE=0
loop
call TriggerRegisterPlayerUnitEvent(mE,Player(WE),QE,null)
set WE=WE+1
exitwhen WE==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(xt,Condition(We))
call TriggerAddAction(xt,Ee)
set mE=null
set QE=null
endfunction
function EI takes nothing returns nothing
local trigger mI
local playerunitevent QI
local integer WI
set ui=CreateTrigger()
set mI=ui
set QI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set WI=0
loop
call TriggerRegisterPlayerUnitEvent(mI,Player(WI),QI,null)
set WI=WI+1
exitwhen WI==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ui,Condition(jq))
call TriggerAddAction(ui,xq)
set mI=null
set QI=null
endfunction
function ET takes nothing returns nothing
set Rs=CreateTrigger()
call TriggerRegisterTimerEvent(Rs,70.00,false)
call TriggerAddAction(Rs,ny)
endfunction
function EX takes nothing returns nothing
local trigger mX
local playerunitevent QX
local integer WX
set tS=CreateTrigger()
set mX=tS
set QX=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set WX=0
loop
call TriggerRegisterPlayerUnitEvent(mX,Player(WX),QX,null)
set WX=WX+1
exitwhen WX==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(tS,Condition(Un))
call TriggerAddAction(tS,In)
set mX=null
set QX=null
endfunction
function EY takes nothing returns nothing
local trigger mY
local playerunitevent QY
local integer WY
set Fs=CreateTrigger()
set mY=Fs
set QY=EVENT_PLAYER_UNIT_ATTACKED
set WY=0
loop
call TriggerRegisterPlayerUnitEvent(mY,Player(WY),QY,null)
set WY=WY+1
exitwhen WY==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Fs,Condition(hy))
call TriggerAddAction(Fs,Fy)
set mY=null
set QY=null
endfunction
function FA takes nothing returns nothing
local trigger GA
local playerunitevent gA
local integer hA
set qi=CreateTrigger()
set GA=qi
set gA=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set hA=0
loop
call TriggerRegisterPlayerUnitEvent(GA,Player(hA),gA,null)
set hA=hA+1
exitwhen hA==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(qi,Condition(ia))
call TriggerAddAction(qi,Sa)
set GA=null
set gA=null
endfunction
function FJ takes nothing returns nothing
local trigger GJ
local playerunitevent gJ
local integer hJ
set Ei=CreateTrigger()
set GJ=Ei
set gJ=EVENT_PLAYER_UNIT_SPELL_CAST
set hJ=0
loop
call TriggerRegisterPlayerUnitEvent(GJ,Player(hJ),gJ,null)
set hJ=hJ+1
exitwhen hJ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ei,Condition(La))
call TriggerAddAction(Ei,Xa)
set GJ=null
set gJ=null
endfunction
function FU takes nothing returns nothing
local trigger GU
local playerunitevent gU
local integer hU
set Kt=CreateTrigger()
set GU=Kt
set gU=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set hU=0
loop
call TriggerRegisterPlayerUnitEvent(GU,Player(hU),gU,null)
set hU=hU+1
exitwhen hU==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Kt,Condition(lq))
call TriggerAddAction(Kt,bq)
set GU=null
set gU=null
endfunction
function Fj takes nothing returns nothing
local trigger Gj
local playerunitevent gj
local integer hj
set Vs=CreateTrigger()
set Gj=Vs
set gj=EVENT_PLAYER_UNIT_SPELL_CAST
set hj=0
loop
call TriggerRegisterPlayerUnitEvent(Gj,Player(hj),gj,null)
set hj=hj+1
exitwhen hj==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Vs,Condition(Yp))
call TriggerAddAction(Vs,Gp)
set Gj=null
set gj=null
endfunction
function HI takes nothing returns nothing
local trigger PI
local playerunitevent AI
local integer DI
set ri=CreateTrigger()
set PI=ri
set AI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set DI=0
loop
call TriggerRegisterPlayerUnitEvent(PI,Player(DI),AI,null)
set DI=DI+1
exitwhen DI==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ri,Condition(vq))
call TriggerAddAction(ri,mq)
set PI=null
set AI=null
endfunction
function HX takes nothing returns nothing
local trigger PX
local playerunitevent AX
local integer DX
set iS=CreateTrigger()
set PX=iS
set AX=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set DX=0
loop
call TriggerRegisterPlayerUnitEvent(PX,Player(DX),AX,null)
set DX=DX+1
exitwhen DX==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(iS,Condition(Pn))
call TriggerAddAction(iS,An)
set PX=null
set AX=null
endfunction
function IE takes nothing returns nothing
set vt=CreateTrigger()
call TriggerRegisterTimerEvent(vt,0.10,false)
call TriggerAddAction(vt,Ue)
endfunction
function IT takes nothing returns nothing
set Ys=CreateTrigger()
call TriggerRegisterTimerEvent(Ys,1.00,false)
call TriggerAddAction(Ys,dy)
endfunction
function JP takes nothing returns nothing
set li=CreateTrigger()
call TriggerRegisterTimerEvent(li,0.10,false)
call TriggerAddAction(li,Vq)
endfunction
function JZ takes nothing returns nothing
local trigger AZ
local playerunitevent DZ
local integer HZ
set Pt=CreateTrigger()
set AZ=Pt
set DZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set HZ=0
loop
call TriggerRegisterPlayerUnitEvent(AZ,Player(HZ),DZ,null)
set HZ=HZ+1
exitwhen HZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Pt,Condition(wq))
call TriggerAddAction(Pt,uq)
set AZ=null
set DZ=null
endfunction
function KL takes nothing returns nothing
local trigger DL
local playerunitevent HL
local integer JL
set Ni=CreateTrigger()
set DL=Ni
set HL=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set JL=0
loop
call TriggerRegisterPlayerUnitEvent(DL,Player(JL),HL,null)
set JL=JL+1
exitwhen JL==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ni,Condition(gn))
call TriggerAddAction(Ni,hn)
set DL=null
set HL=null
endfunction
function KU takes nothing returns nothing
set Ct=CreateTrigger()
call TriggerRegisterTimerEvent(Ct,0.10,false)
call TriggerAddAction(Ct,nq)
endfunction
function KW takes nothing returns nothing
local trigger DW
local playerunitevent HW
local integer JW
set Gt=CreateTrigger()
set DW=Gt
set HW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set JW=0
loop
call TriggerRegisterPlayerUnitEvent(DW,Player(JW),HW,null)
set JW=JW+1
exitwhen JW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Gt,Condition(Te))
call TriggerAddAction(Gt,Ye)
set DW=null
set HW=null
endfunction
function LE takes nothing returns nothing
local trigger HE
local playerunitevent JE
local integer KE
set mt=CreateTrigger()
set HE=mt
set JE=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set KE=0
loop
call TriggerRegisterPlayerUnitEvent(HE,Player(KE),JE,null)
set KE=KE+1
exitwhen KE==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(mt,Condition(Ie))
call TriggerAddAction(mt,Pe)
set HE=null
set JE=null
endfunction
function MH takes nothing returns nothing
local trigger VH
local playerunitevent BH
local integer NH
set Qi=CreateTrigger()
set VH=Qi
set BH=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set NH=0
loop
call TriggerRegisterPlayerUnitEvent(VH,Player(NH),BH,null)
set NH=NH+1
exitwhen NH==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Qi,Condition(Da))
call TriggerAddAction(Qi,Ha)
set VH=null
set BH=null
endfunction
function ML takes nothing returns nothing
local trigger VL
local playerunitevent BL
local integer NL
set Mi=CreateTrigger()
set VL=Mi
set BL=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set NL=0
loop
call TriggerRegisterPlayerUnitEvent(VL,Player(NL),BL,null)
set NL=NL+1
exitwhen NL==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Mi,Condition(Fn))
call TriggerAddAction(Mi,kn)
set VL=null
set BL=null
endfunction
function MU takes nothing returns nothing
local trigger VU
local playerunitevent BU
local integer NU
set Vt=CreateTrigger()
set VU=Vt
set BU=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set NU=0
loop
call TriggerRegisterPlayerUnitEvent(VU,Player(NU),BU,null)
set NU=NU+1
exitwhen NU==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Vt,Condition(dq))
call TriggerAddAction(Vt,fq)
set VU=null
set BU=null
endfunction
function MW takes nothing returns nothing
local trigger VW
local playerunitevent BW
local integer NW
set gt=CreateTrigger()
set VW=gt
set BW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set NW=0
loop
call TriggerRegisterPlayerUnitEvent(VW,Player(NW),BW,null)
set NW=NW+1
exitwhen NW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(gt,Condition(Ge))
call TriggerAddAction(gt,ge)
set VW=null
set BW=null
endfunction
function NP takes nothing returns nothing
local trigger CP
local playerunitevent VP
local integer BP
set bi=CreateTrigger()
set CP=bi
set VP=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set BP=0
loop
call TriggerRegisterPlayerUnitEvent(CP,Player(BP),VP,null)
set BP=BP+1
exitwhen BP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(bi,Condition(Bq))
call TriggerAddAction(bi,Nq)
set CP=null
set VP=null
endfunction
function NT takes nothing returns nothing
local trigger CT
local playerunitevent VT
local integer BT
set Gs=CreateTrigger()
set CT=Gs
set VT=EVENT_PLAYER_UNIT_ATTACKED
set BT=0
loop
call TriggerRegisterPlayerUnitEvent(CT,Player(BT),VT,null)
set BT=BT+1
exitwhen BT==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Gs,Condition(fy))
call TriggerAddAction(Gs,Ry)
set CT=null
set VT=null
endfunction
function NZ takes nothing returns nothing
local trigger CZ
local playerunitevent VZ
local integer BZ
set At=CreateTrigger()
set CZ=At
set VZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set BZ=0
loop
call TriggerRegisterPlayerUnitEvent(CZ,Player(BZ),VZ,null)
set BZ=BZ+1
exitwhen BZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(At,Condition(rq))
call TriggerAddAction(At,sq)
set CZ=null
set VZ=null
endfunction
function Nv takes nothing returns nothing
local trigger Cv
local playerunitevent Vv
local integer Bv
set st=CreateTrigger()
set Cv=st
set Vv=EVENT_PLAYER_UNIT_SPELL_CAST
set Bv=0
loop
call TriggerRegisterPlayerUnitEvent(Cv,Player(Bv),Vv,null)
set Bv=Bv+1
exitwhen Bv==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(st,Condition(Up))
call TriggerAddAction(st,Ip)
set Cv=null
set Vv=null
endfunction
function PD takes nothing returns nothing
local trigger ZD
local playerunitevent UD
local integer ID
set gi=CreateTrigger()
set ZD=gi
set UD=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set ID=0
loop
call TriggerRegisterPlayerUnitEvent(ZD,Player(ID),UD,null)
set ID=ID+1
exitwhen ID==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(gi,Condition(Ga))
call TriggerAddAction(gi,ga)
set ZD=null
set UD=null
endfunction
function PF takes nothing returns nothing
local trigger ZF
local playerunitevent UF
local integer IF
set Hs=CreateTrigger()
set ZF=Hs
set UF=EVENT_PLAYER_UNIT_SPELL_CAST
set IF=0
loop
call TriggerRegisterPlayerUnitEvent(ZF,Player(IF),UF,null)
set IF=IF+1
exitwhen IF==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Hs,Condition(Op))
call TriggerAddAction(Hs,lp)
set ZF=null
set UF=null
endfunction
function PK takes nothing returns nothing
local trigger ZK
local playerunitevent UK
local integer IK
set Hi=CreateTrigger()
set ZK=Hi
set UK=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set IK=0
loop
call TriggerRegisterPlayerUnitEvent(ZK,Player(IK),UK,null)
set IK=IK+1
exitwhen IK==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Hi,Condition(on))
call TriggerAddAction(Hi,On)
set ZK=null
set UK=null
endfunction
function PQ takes nothing returns nothing
local trigger ZQ
local playerunitevent UQ
local integer IQ
set qt=CreateTrigger()
set ZQ=qt
set UQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set IQ=0
loop
call TriggerRegisterPlayerUnitEvent(ZQ,Player(IQ),UQ,null)
set IQ=IQ+1
exitwhen IQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(qt,Condition(ie))
call TriggerAddAction(qt,Se)
set ZQ=null
set UQ=null
endfunction
function Pg takes nothing returns nothing
local trigger Zg
local playerunitevent Ug
local integer Ig
set Zs=CreateTrigger()
set Zg=Zs
set Ug=EVENT_PLAYER_UNIT_SPELL_CAST
set Ig=0
loop
call TriggerRegisterPlayerUnitEvent(Zg,Player(Ig),Ug,null)
set Ig=Ig+1
exitwhen Ig==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Zs,Condition(Jy))
call TriggerAddAction(Zs,Ky)
set Zg=null
set Ug=null
endfunction
function Ph takes nothing returns nothing
local trigger Zh
local playerunitevent Uh
local integer Ih
set Ps=CreateTrigger()
set Zh=Ps
set Uh=EVENT_PLAYER_UNIT_SPELL_CAST
set Ih=0
loop
call TriggerRegisterPlayerUnitEvent(Zh,Player(Ih),Uh,null)
set Ih=Ih+1
exitwhen Ih==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ps,Condition(wp))
call TriggerAddAction(Ps,up)
set Zh=null
set Uh=null
endfunction
function QP takes nothing returns nothing
local trigger xP
local playerunitevent vP
local integer mP
set oi=CreateTrigger()
set xP=oi
set vP=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set mP=0
loop
call TriggerRegisterPlayerUnitEvent(xP,Player(mP),vP,null)
set mP=mP+1
exitwhen mP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(oi,Condition(Jq))
call TriggerAddAction(oi,Kq)
set xP=null
set vP=null
endfunction
function RE takes nothing returns nothing
local trigger nE
local playerunitevent dE
local integer fE
set kt=CreateTrigger()
set nE=kt
set dE=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set fE=0
loop
call TriggerRegisterPlayerUnitEvent(nE,Player(fE),dE,null)
set fE=fE+1
exitwhen fE==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(kt,Condition(xe))
call TriggerAddAction(kt,ve)
set nE=null
set dE=null
endfunction
function RI takes nothing returns nothing
local trigger nI
local playerunitevent dI
local integer fI
set Mt=CreateTrigger()
set nI=Mt
set dI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set fI=0
loop
call TriggerRegisterPlayerUnitEvent(nI,Player(fI),dI,null)
set fI=fI+1
exitwhen fI==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Mt,Condition(gq))
call TriggerAddAction(Mt,hq)
set nI=null
set dI=null
endfunction
function RX takes nothing returns nothing
local trigger nX
local playerunitevent dX
local integer fX
set rS=CreateTrigger()
set nX=rS
set dX=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set fX=0
loop
call TriggerRegisterPlayerUnitEvent(nX,Player(fX),dX,null)
set fX=fX+1
exitwhen fX==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(rS,Condition(Qn))
call TriggerAddAction(rS,Wn)
set nX=null
set dX=null
endfunction
function Rk takes nothing returns nothing
set Ls=CreateTrigger()
call TriggerRegisterTimerEvent(Ls,5.00,true)
call TriggerAddAction(Ls,np)
endfunction
function SE takes nothing returns nothing
local trigger sE
local playerunitevent tE
local integer iE
set ht=CreateTrigger()
set sE=ht
set tE=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set iE=0
loop
call TriggerRegisterPlayerUnitEvent(sE,Player(iE),tE,null)
set iE=iE+1
exitwhen iE==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ht,Condition(he))
call TriggerAddAction(ht,Fe)
set sE=null
set tE=null
endfunction
function SI takes nothing returns nothing
local trigger sI
local playerunitevent tI
local integer iI
set Bt=CreateTrigger()
set sI=Bt
set tI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set iI=0
loop
call TriggerRegisterPlayerUnitEvent(sI,Player(iI),tI,null)
set iI=iI+1
exitwhen iI==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Bt,Condition(Rq))
call TriggerAddAction(Bt,Tq)
set sI=null
set tI=null
endfunction
function SX takes nothing returns nothing
local trigger sX
local playerunitevent tX
local integer iX
set wS=CreateTrigger()
set sX=wS
set tX=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set iX=0
loop
call TriggerRegisterPlayerUnitEvent(sX,Player(iX),tX,null)
set iX=iX+1
exitwhen iX==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(wS,Condition(jn))
call TriggerAddAction(wS,xn)
set sX=null
set tX=null
endfunction
function TF takes nothing returns nothing
local trigger dF
local playerunitevent fF
local integer RF
set Ds=CreateTrigger()
set dF=Ds
set fF=EVENT_PLAYER_UNIT_SPELL_CAST
set RF=0
loop
call TriggerRegisterPlayerUnitEvent(dF,Player(RF),fF,null)
set RF=RF+1
exitwhen RF==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ds,Condition(Sp))
call TriggerAddAction(Ds,cp)
set dF=null
set fF=null
endfunction
function TZ takes nothing returns nothing
local trigger dZ
local playerunitevent fZ
local integer RZ
set Zt=CreateTrigger()
set dZ=Zt
set fZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set RZ=0
loop
call TriggerRegisterPlayerUnitEvent(dZ,Player(RZ),fZ,null)
set RZ=RZ+1
exitwhen RZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Zt,Condition(Xe))
call TriggerAddAction(Zt,Ce)
set dZ=null
set fZ=null
endfunction
function Tg takes nothing returns nothing
local trigger dg
local playerunitevent fg
local integer Rg
set Es=CreateTrigger()
set dg=Es
set fg=EVENT_PLAYER_UNIT_SPELL_CAST
set Rg=0
loop
call TriggerRegisterPlayerUnitEvent(dg,Player(Rg),fg,null)
set Rg=Rg+1
exitwhen Rg==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(Es,Dy)
set dg=null
set fg=null
endfunction
function Th takes nothing returns nothing
local trigger dh
local playerunitevent fh
local integer Rh
set Is=CreateTrigger()
set dh=Is
set fh=EVENT_PLAYER_UNIT_SPELL_CAST
set Rh=0
loop
call TriggerRegisterPlayerUnitEvent(dh,Player(Rh),fh,null)
set Rh=Rh+1
exitwhen Rh==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Is,Condition(By))
call TriggerAddAction(Is,Ny)
set dh=null
set fh=null
endfunction
function UH takes nothing returns nothing
local trigger WH
local playerunitevent EH
local integer ZH
set mi=CreateTrigger()
set WH=mi
set EH=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set ZH=0
loop
call TriggerRegisterPlayerUnitEvent(WH,Player(ZH),EH,null)
set ZH=ZH+1
exitwhen ZH==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(mi,Aa)
set WH=null
set EH=null
endfunction
function UL takes nothing returns nothing
local trigger WL
local playerunitevent EL
local integer ZL
set Bi=CreateTrigger()
set WL=Bi
set EL=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set ZL=0
loop
call TriggerRegisterPlayerUnitEvent(WL,Player(ZL),EL,null)
set ZL=ZL+1
exitwhen ZL==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Bi,Condition(Yn))
call TriggerAddAction(Bi,Gn)
set WL=null
set EL=null
endfunction
function UW takes nothing returns nothing
local trigger WW
local playerunitevent EW
local integer ZW
set Yt=CreateTrigger()
set WW=Yt
set EW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set ZW=0
loop
call TriggerRegisterPlayerUnitEvent(WW,Player(ZW),EW,null)
set ZW=ZW+1
exitwhen ZW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Yt,Condition(fe))
call TriggerAddAction(Yt,Re)
set WW=null
set EW=null
endfunction
function VA takes nothing returns nothing
local trigger LA
local playerunitevent XA
local integer CA
set di=CreateTrigger()
set LA=di
set XA=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set CA=0
loop
call TriggerRegisterPlayerUnitEvent(LA,Player(CA),XA,null)
set CA=CA+1
exitwhen CA==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(di,Condition(ba))
call TriggerAddAction(di,ya)
set LA=null
set XA=null
endfunction
function Vm takes nothing returns nothing
local trigger Lm
local playerunitevent Xm
local integer Cm
set Ot=CreateTrigger()
set Lm=Ot
set Xm=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Cm=0
loop
call TriggerRegisterPlayerUnitEvent(Lm,Player(Cm),Xm,null)
set Cm=Cm+1
exitwhen Cm==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ot,Condition(Lp))
call TriggerAddAction(Ot,Xp)
set Lm=null
set Xm=null
endfunction
function WA takes nothing returns nothing
local trigger vA
local playerunitevent mA
local integer QA
set ai=CreateTrigger()
set vA=ai
set mA=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set QA=0
loop
call TriggerRegisterPlayerUnitEvent(vA,Player(QA),mA,null)
set QA=QA+1
exitwhen QA==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ai,Condition(ca))
call TriggerAddAction(ai,oa)
set vA=null
set mA=null
endfunction
function WU takes nothing returns nothing
local trigger vU
local playerunitevent mU
local integer QU
set Lt=CreateTrigger()
set vU=Lt
set mU=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set QU=0
loop
call TriggerRegisterPlayerUnitEvent(vU,Player(QU),mU,null)
set QU=QU+1
exitwhen QU==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Lt,Condition(yq))
call TriggerAddAction(Lt,pq)
set vU=null
set mU=null
endfunction
function Wm takes nothing returns nothing
local trigger vm
local playerunitevent mm
local integer Qm
set ct=CreateTrigger()
set vm=ct
set mm=EVENT_PLAYER_UNIT_DEATH
set Qm=0
loop
call TriggerRegisterPlayerUnitEvent(vm,Player(Qm),mm,null)
set Qm=Qm+1
exitwhen Qm==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ct,Condition(Dp))
call TriggerAddAction(ct,Hp)
set vm=null
set mm=null
endfunction
function XD takes nothing returns nothing
local trigger JD
local playerunitevent KD
local integer LD
set hi=CreateTrigger()
set JD=hi
set KD=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set LD=0
loop
call TriggerRegisterPlayerUnitEvent(JD,Player(LD),KD,null)
set LD=LD+1
exitwhen LD==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(hi,Condition(ha))
call TriggerAddAction(hi,Fa)
set JD=null
set KD=null
endfunction
function XK takes nothing returns nothing
local trigger JK
local playerunitevent KK
local integer LK
set Ji=CreateTrigger()
set JK=Ji
set KK=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set LK=0
loop
call TriggerRegisterPlayerUnitEvent(JK,Player(LK),KK,null)
set LK=LK+1
exitwhen LK==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ji,Condition(ln))
call TriggerAddAction(Ji,bn)
set JK=null
set KK=null
endfunction
function XQ takes nothing returns nothing
local trigger JQ
local playerunitevent KQ
local integer LQ
set at=CreateTrigger()
set JQ=at
set KQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set LQ=0
loop
call TriggerRegisterPlayerUnitEvent(JQ,Player(LQ),KQ,null)
set LQ=LQ+1
exitwhen LQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(at,Condition(ce))
call TriggerAddAction(at,oe)
set JQ=null
set KQ=null
endfunction
function Xj takes nothing returns nothing
local trigger Jj
local playerunitevent Kj
local integer Lj
set Bs=CreateTrigger()
set Jj=Bs
set Kj=EVENT_PLAYER_UNIT_SPELL_CAST
set Lj=0
loop
call TriggerRegisterPlayerUnitEvent(Jj,Player(Lj),Kj,null)
set Lj=Lj+1
exitwhen Lj==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Bs,Condition(gp))
call TriggerAddAction(Bs,hp)
set Jj=null
set Kj=null
endfunction
function Xx takes nothing returns nothing
local trigger Jx
local playerunitevent Kx
local integer Lx
set wt=CreateTrigger()
set Jx=wt
set Kx=EVENT_PLAYER_UNIT_DEATH
set Lx=0
loop
call TriggerRegisterPlayerUnitEvent(Jx,Player(Lx),Kx,null)
set Lx=Lx+1
exitwhen Lx==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(wt,Condition(vp))
call TriggerAddAction(wt,mp)
set Jx=null
set Kx=null
endfunction
function YL takes nothing returns nothing
local trigger fL
local playerunitevent RL
local integer TL
set Ci=CreateTrigger()
set fL=Ci
set RL=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set TL=0
loop
call TriggerRegisterPlayerUnitEvent(fL,Player(TL),RL,null)
set TL=TL+1
exitwhen TL==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ci,Condition(dn))
call TriggerAddAction(Ci,fn)
set fL=null
set RL=null
endfunction
function YW takes nothing returns nothing
local trigger fW
local playerunitevent RW
local integer TW
set Rt=CreateTrigger()
set fW=Rt
set RW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set TW=0
loop
call TriggerRegisterPlayerUnitEvent(fW,Player(TW),RW,null)
set TW=TW+1
exitwhen TW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Rt,Condition(qe))
call TriggerAddAction(Rt,ae)
set fW=null
set RW=null
endfunction
function YY takes nothing returns nothing
local trigger fY
local playerunitevent RY
local integer TY
set hs=CreateTrigger()
set fY=hs
set RY=EVENT_PLAYER_UNIT_ATTACKED
set TY=0
loop
call TriggerRegisterPlayerUnitEvent(fY,Player(TY),RY,null)
set TY=TY+1
exitwhen TY==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(hs,Condition(Gy))
call TriggerAddAction(hs,gy)
set fY=null
set RY=null
endfunction
function ZZ takes nothing returns nothing
local trigger QZ
local playerunitevent WZ
local integer EZ
set It=CreateTrigger()
set QZ=It
set WZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set EZ=0
loop
call TriggerRegisterPlayerUnitEvent(QZ,Player(EZ),WZ,null)
set EZ=EZ+1
exitwhen EZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(It,Condition(Ne))
call TriggerAddAction(It,Me)
set QZ=null
set WZ=null
endfunction
function am takes nothing returns nothing
local trigger pm
local playerunitevent em
local integer qm
set St=CreateTrigger()
set pm=St
set em=EVENT_PLAYER_UNIT_DEATH
set qm=0
loop
call TriggerRegisterPlayerUnitEvent(pm,Player(qm),em,null)
set qm=qm+1
exitwhen qm==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(St,Condition(Pp))
call TriggerAddAction(St,Ap)
set pm=null
set em=null
endfunction
function bP takes nothing returns nothing
local trigger oP
local playerunitevent OP
local integer lP
set ii=CreateTrigger()
set oP=ii
set OP=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set lP=0
loop
call TriggerRegisterPlayerUnitEvent(oP,Player(lP),OP,null)
set lP=lP+1
exitwhen lP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ii,Condition(Uq))
call TriggerAddAction(ii,Iq)
set oP=null
set OP=null
endfunction
function bv takes nothing returns nothing
local trigger ov
local playerunitevent Ov
local integer lv
set ut=CreateTrigger()
set ov=ut
set Ov=EVENT_PLAYER_UNIT_DEATH
set lv=0
loop
call TriggerRegisterPlayerUnitEvent(ov,Player(lv),Ov,null)
set lv=lv+1
exitwhen lv==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ut,Condition(Qp))
call TriggerAddAction(ut,Wp)
set ov=null
set Ov=null
endfunction
function bx takes nothing returns nothing
local trigger ox
local playerunitevent Ox
local integer lx
set Ns=CreateTrigger()
set ox=Ns
set Ox=EVENT_PLAYER_UNIT_DEATH
set lx=0
loop
call TriggerRegisterPlayerUnitEvent(ox,Player(lx),Ox,null)
set lx=lx+1
exitwhen lx==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ns,Condition(Fp))
call TriggerAddAction(Ns,kp)
set ox=null
set Ox=null
endfunction
function cG takes nothing returns nothing
local trigger tG
local playerunitevent iG
local integer SG
set js=CreateTrigger()
set tG=js
set iG=EVENT_PLAYER_UNIT_ATTACKED
set SG=0
loop
call TriggerRegisterPlayerUnitEvent(tG,Player(SG),iG,null)
set SG=SG+1
exitwhen SG==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(js,Condition(xy))
call TriggerAddAction(js,vy)
set tG=null
set iG=null
endfunction
function cZ takes nothing returns nothing
local trigger tZ
local playerunitevent iZ
local integer SZ
set Wt=CreateTrigger()
set tZ=Wt
set iZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set SZ=0
loop
call TriggerRegisterPlayerUnitEvent(tZ,Player(SZ),iZ,null)
set SZ=SZ+1
exitwhen SZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Wt,Condition(He))
call TriggerAddAction(Wt,Je)
set tZ=null
set iZ=null
endfunction
function cj takes nothing returns nothing
local trigger tj
local playerunitevent ij
local integer Sj
set Cs=CreateTrigger()
set tj=Cs
set ij=EVENT_PLAYER_UNIT_SPELL_CAST
set Sj=0
loop
call TriggerRegisterPlayerUnitEvent(tj,Player(Sj),ij,null)
set Sj=Sj+1
exitwhen Sj==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Cs,Condition(Rp))
call TriggerAddAction(Cs,Tp)
set tj=null
set ij=null
endfunction
function dH takes nothing returns nothing
set xi=CreateTrigger()
call TriggerRegisterTimerEvent(xi,0.10,false)
call TriggerAddAction(xi,Ea)
endfunction
function dP takes nothing returns nothing
local trigger qP
local playerunitevent aP
local integer nP
set Si=CreateTrigger()
set qP=Si
set aP=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set nP=0
loop
call TriggerRegisterPlayerUnitEvent(qP,Player(nP),aP,null)
set nP=nP+1
exitwhen nP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Si,Condition(Pq))
call TriggerAddAction(Si,Aq)
set qP=null
set aP=null
endfunction
function eZ takes nothing returns nothing
local trigger bZ
local playerunitevent yZ
local integer pZ
set Et=CreateTrigger()
set bZ=Et
set yZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set pZ=0
loop
call TriggerRegisterPlayerUnitEvent(bZ,Player(pZ),yZ,null)
set pZ=pZ+1
exitwhen pZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Et,Condition(Ke))
call TriggerAddAction(Et,Le)
set bZ=null
set yZ=null
endfunction
function fA takes nothing returns nothing
local trigger aA
local playerunitevent nA
local integer dA
set ei=CreateTrigger()
set aA=ei
set nA=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set dA=0
loop
call TriggerRegisterPlayerUnitEvent(aA,Player(dA),nA,null)
set dA=dA+1
exitwhen dA==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ei,Condition(sa))
call TriggerAddAction(ei,ta)
set aA=null
set nA=null
endfunction
function fG takes nothing returns nothing
local trigger aG
local playerunitevent nG
local integer dG
set xs=CreateTrigger()
set aG=xs
set nG=EVENT_PLAYER_UNIT_ATTACKED
set dG=0
loop
call TriggerRegisterPlayerUnitEvent(aG,Player(dG),nG,null)
set dG=dG+1
exitwhen dG==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(xs,Condition(my))
call TriggerAddAction(xs,Qy)
set aG=null
set nG=null
endfunction
function fU takes nothing returns nothing
local trigger aU
local playerunitevent nU
local integer dU
set Jt=CreateTrigger()
set aU=Jt
set nU=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set dU=0
loop
call TriggerRegisterPlayerUnitEvent(aU,Player(dU),nU,null)
set dU=dU+1
exitwhen dU==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Jt,Condition(oq))
call TriggerAddAction(Jt,Oq)
set aU=null
set nU=null
endfunction
function gD takes nothing returns nothing
local trigger TD
local playerunitevent YD
local integer GD
set Yi=CreateTrigger()
set TD=Yi
set YD=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set GD=0
loop
call TriggerRegisterPlayerUnitEvent(TD,Player(GD),YD,null)
set GD=GD+1
exitwhen GD==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Yi,Condition(fa))
call TriggerAddAction(Yi,Ra)
set TD=null
set YD=null
endfunction
function gK takes nothing returns nothing
local trigger TK
local playerunitevent YK
local integer GK
set Ai=CreateTrigger()
set TK=Ai
set YK=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set GK=0
loop
call TriggerRegisterPlayerUnitEvent(TK,Player(GK),YK,null)
set GK=GK+1
exitwhen GK==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ai,Condition(sn))
call TriggerAddAction(Ai,tn)
set TK=null
set YK=null
endfunction
function gQ takes nothing returns nothing
local trigger TQ
local playerunitevent YQ
local integer GQ
set pt=CreateTrigger()
set TQ=pt
set YQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set GQ=0
loop
call TriggerRegisterPlayerUnitEvent(TQ,Player(GQ),YQ,null)
set GQ=GQ+1
exitwhen GQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(pt,Condition(ue))
call TriggerAddAction(pt,re)
set TQ=null
set YQ=null
endfunction
function hP takes nothing returns nothing
local trigger YP
local playerunitevent GP
local integer gP
set ci=CreateTrigger()
set YP=ci
set GP=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set gP=0
loop
call TriggerRegisterPlayerUnitEvent(YP,Player(gP),GP,null)
set gP=gP+1
exitwhen gP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ci,Condition(Dq))
call TriggerAddAction(ci,Hq)
set YP=null
set GP=null
endfunction
function iA takes nothing returns nothing
local trigger rA
local playerunitevent sA
local integer tA
set yi=CreateTrigger()
set rA=yi
set sA=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set tA=0
loop
call TriggerRegisterPlayerUnitEvent(rA,Player(tA),sA,null)
set tA=tA+1
exitwhen tA==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(yi,Condition(Mq))
call TriggerAddAction(yi,wa)
set rA=null
set sA=null
endfunction
function iU takes nothing returns nothing
local trigger rU
local playerunitevent sU
local integer tU
set Dt=CreateTrigger()
set rU=Dt
set sU=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set tU=0
loop
call TriggerRegisterPlayerUnitEvent(rU,Player(tU),sU,null)
set tU=tU+1
exitwhen tU==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Dt,Condition(tq))
call TriggerAddAction(Dt,iq)
set rU=null
set sU=null
endfunction
function jZ takes nothing returns nothing
local trigger hZ
local playerunitevent FZ
local integer kZ
set Ut=CreateTrigger()
set hZ=Ut
set FZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set kZ=0
loop
call TriggerRegisterPlayerUnitEvent(hZ,Player(kZ),FZ,null)
set kZ=kZ+1
exitwhen kZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ut,Condition(Ve))
call TriggerAddAction(Ut,Be)
set hZ=null
set FZ=null
endfunction
function jx takes nothing returns nothing
local trigger hx
local playerunitevent Fx
local integer kx
set Ms=CreateTrigger()
set hx=Ms
set Fx=EVENT_PLAYER_UNIT_DEATH
set kx=0
loop
call TriggerRegisterPlayerUnitEvent(hx,Player(kx),Fx,null)
set kx=kx+1
exitwhen kx==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ms,Condition(jp))
call TriggerAddAction(Ms,xp)
set hx=null
set Fx=null
endfunction
function kE takes nothing returns nothing
local trigger gE
local playerunitevent hE
local integer FE
set jt=CreateTrigger()
set gE=jt
set hE=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set FE=0
loop
call TriggerRegisterPlayerUnitEvent(gE,Player(FE),hE,null)
set FE=FE+1
exitwhen FE==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(jt,Condition(me))
call TriggerAddAction(jt,Qe)
set gE=null
set hE=null
endfunction
function kI takes nothing returns nothing
local trigger gI
local playerunitevent hI
local integer FI
set wi=CreateTrigger()
set gI=wi
set hI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set FI=0
loop
call TriggerRegisterPlayerUnitEvent(gI,Player(FI),hI,null)
set FI=FI+1
exitwhen FI==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(wi,Condition(Fq))
call TriggerAddAction(wi,kq)
set gI=null
set hI=null
endfunction
function kX takes nothing returns nothing
local trigger gX
local playerunitevent hX
local integer FX
set sS=CreateTrigger()
set gX=sS
set hX=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set FX=0
loop
call TriggerRegisterPlayerUnitEvent(gX,Player(FX),hX,null)
set FX=FX+1
exitwhen FX==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(sS,Condition(En))
call TriggerAddAction(sS,Zn)
set gX=null
set hX=null
endfunction
function lD takes nothing returns nothing
local trigger cD
local playerunitevent oD
local integer OD
set Ri=CreateTrigger()
set cD=Ri
set oD=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set OD=0
loop
call TriggerRegisterPlayerUnitEvent(cD,Player(OD),oD,null)
set OD=OD+1
exitwhen OD==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ri,Condition(qa))
call TriggerAddAction(Ri,aa)
set cD=null
set oD=null
endfunction
function lK takes nothing returns nothing
local trigger cK
local playerunitevent oK
local integer OK
set Ii=CreateTrigger()
set cK=Ii
set oK=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set OK=0
loop
call TriggerRegisterPlayerUnitEvent(cK,Player(OK),oK,null)
set OK=OK+1
exitwhen OK==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ii,Condition(Ma))
call TriggerAddAction(Ii,wn)
set cK=null
set oK=null
endfunction
function lQ takes nothing returns nothing
local trigger cQ
local playerunitevent oQ
local integer OQ
set bt=CreateTrigger()
set cQ=bt
set oQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set OQ=0
loop
call TriggerRegisterPlayerUnitEvent(cQ,Player(OQ),oQ,null)
set OQ=OQ+1
exitwhen OQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(bt,Condition(Bp))
call TriggerAddAction(bt,Np)
set cQ=null
set oQ=null
endfunction
function lY takes nothing returns nothing
local trigger cY
local playerunitevent oY
local integer OY
set gs=CreateTrigger()
set cY=gs
set oY=EVENT_PLAYER_UNIT_ATTACKED
set OY=0
loop
call TriggerRegisterPlayerUnitEvent(cY,Player(OY),oY,null)
set OY=OY+1
exitwhen OY==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(gs,Condition(Ty))
call TriggerAddAction(gs,Yy)
set cY=null
set oY=null
endfunction
function mD takes nothing returns nothing
local trigger jD
local playerunitevent xD
local integer vD
set Gi=CreateTrigger()
set jD=Gi
set xD=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set vD=0
loop
call TriggerRegisterPlayerUnitEvent(jD,Player(vD),xD,null)
set vD=vD+1
exitwhen vD==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Gi,Condition(Ta))
call TriggerAddAction(Gi,Ya)
set jD=null
set xD=null
endfunction
function mG takes nothing returns nothing
local trigger jG
local playerunitevent xG
local integer vG
set vs=CreateTrigger()
set jG=vs
set xG=EVENT_PLAYER_UNIT_ATTACKED
set vG=0
loop
call TriggerRegisterPlayerUnitEvent(jG,Player(vG),xG,null)
set vG=vG+1
exitwhen vG==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(vs,Condition(Wy))
call TriggerAddAction(vs,Ey)
set jG=null
set xG=null
endfunction
function mH takes nothing returns nothing
local trigger jH
local playerunitevent xH
local integer vH
set vi=CreateTrigger()
set jH=vi
set xH=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set vH=0
loop
call TriggerRegisterPlayerUnitEvent(jH,Player(vH),xH,null)
set vH=vH+1
exitwhen vH==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(vi,Condition(Ia))
call TriggerAddAction(vi,Pa)
set jH=null
set xH=null
endfunction
function mK takes nothing returns nothing
local trigger jK
local playerunitevent xK
local integer vK
set Di=CreateTrigger()
set jK=Di
set xK=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set vK=0
loop
call TriggerRegisterPlayerUnitEvent(jK,Player(vK),xK,null)
set vK=vK+1
exitwhen vK==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Di,Condition(Sn))
call TriggerAddAction(Di,cn)
set jK=null
set xK=null
endfunction
function mQ takes nothing returns nothing
local trigger jQ
local playerunitevent xQ
local integer vQ
set et=CreateTrigger()
set jQ=et
set xQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set vQ=0
loop
call TriggerRegisterPlayerUnitEvent(jQ,Player(vQ),xQ,null)
set vQ=vQ+1
exitwhen vQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(et,Condition(se))
call TriggerAddAction(et,te)
set jQ=null
set xQ=null
endfunction
function nD takes nothing returns nothing
local trigger eD
local playerunitevent qD
local integer aD
set Ti=CreateTrigger()
set eD=Ti
set qD=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set aD=0
loop
call TriggerRegisterPlayerUnitEvent(eD,Player(aD),qD,null)
set aD=aD+1
exitwhen aD==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ti,Condition(na))
call TriggerAddAction(Ti,da)
set eD=null
set qD=null
endfunction
function nK takes nothing returns nothing
local trigger eK
local playerunitevent qK
local integer aK
set Pi=CreateTrigger()
set eK=Pi
set qK=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set aK=0
loop
call TriggerRegisterPlayerUnitEvent(eK,Player(aK),qK,null)
set aK=aK+1
exitwhen aK==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Pi,Condition(un))
call TriggerAddAction(Pi,rn)
set eK=null
set qK=null
endfunction
function nQ takes nothing returns nothing
local trigger eQ
local playerunitevent qQ
local integer aQ
set yt=CreateTrigger()
set eQ=yt
set qQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set aQ=0
loop
call TriggerRegisterPlayerUnitEvent(eQ,Player(aQ),qQ,null)
set aQ=aQ+1
exitwhen aQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(yt,Condition(Mp))
call TriggerAddAction(yt,we)
set eQ=null
set qQ=null
endfunction
function oH takes nothing returns nothing
local trigger iH
local playerunitevent SH
local integer cH
set ki=CreateTrigger()
set iH=ki
set SH=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set cH=0
loop
call TriggerRegisterPlayerUnitEvent(iH,Player(cH),SH,null)
set cH=cH+1
exitwhen cH==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ki,Condition(xa))
call TriggerAddAction(ki,va)
set iH=null
set SH=null
endfunction
function oL takes nothing returns nothing
local trigger iL
local playerunitevent SL
local integer cL
set Li=CreateTrigger()
set iL=Li
set SL=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set cL=0
loop
call TriggerRegisterPlayerUnitEvent(iL,Player(cL),SL,null)
set cL=cL+1
exitwhen cL==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Li,Condition(en))
call TriggerAddAction(Li,qn)
set iL=null
set SL=null
endfunction
function oW takes nothing returns nothing
local trigger iW
local playerunitevent SW
local integer cW
set dt=CreateTrigger()
set iW=dt
set SW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set cW=0
loop
call TriggerRegisterPlayerUnitEvent(iW,Player(cW),SW,null)
set cW=cW+1
exitwhen cW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(dt,Condition(be))
call TriggerAddAction(dt,ye)
set iW=null
set SW=null
endfunction
function og takes nothing returns nothing
local trigger ig
local playerunitevent Sg
local integer cg
set Ws=CreateTrigger()
set ig=Ws
set Sg=EVENT_PLAYER_UNIT_SPELL_CAST
set cg=0
loop
call TriggerRegisterPlayerUnitEvent(ig,Player(cg),Sg,null)
set cg=cg+1
exitwhen cg==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(Ws,Ay)
set ig=null
set Sg=null
endfunction
function pE takes nothing returns nothing
local trigger lE
local playerunitevent bE
local integer yE
set Ft=CreateTrigger()
set lE=Ft
set bE=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set yE=0
loop
call TriggerRegisterPlayerUnitEvent(lE,Player(yE),bE,null)
set yE=yE+1
exitwhen yE==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ft,Condition(ke))
call TriggerAddAction(Ft,je)
set lE=null
set bE=null
endfunction
function pI takes nothing returns nothing
local trigger lI
local playerunitevent bI
local integer yI
set Nt=CreateTrigger()
set lI=Nt
set bI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set yI=0
loop
call TriggerRegisterPlayerUnitEvent(lI,Player(yI),bI,null)
set yI=yI+1
exitwhen yI==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Nt,Condition(Yq))
call TriggerAddAction(Nt,Gq)
set lI=null
set bI=null
endfunction
function pJ takes nothing returns nothing
local trigger lJ
local playerunitevent bJ
local integer yJ
set Wi=CreateTrigger()
set lJ=Wi
set bJ=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set yJ=0
loop
call TriggerRegisterPlayerUnitEvent(lJ,Player(yJ),bJ,null)
set yJ=yJ+1
exitwhen yJ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Wi,Condition(Ja))
call TriggerAddAction(Wi,Ka)
set lJ=null
set bJ=null
endfunction
function pX takes nothing returns nothing
local trigger lX
local playerunitevent bX
local integer yX
set uS=CreateTrigger()
set lX=uS
set bX=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set yX=0
loop
call TriggerRegisterPlayerUnitEvent(lX,Player(yX),bX,null)
set yX=yX+1
exitwhen yX==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(uS,Condition(vn))
call TriggerAddAction(uS,mn)
set lX=null
set bX=null
endfunction
function qH takes nothing returns nothing
local trigger yH
local playerunitevent pH
local integer eH
set ji=CreateTrigger()
set yH=ji
set pH=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set eH=0
loop
call TriggerRegisterPlayerUnitEvent(yH,Player(eH),pH,null)
set eH=eH+1
exitwhen eH==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ji,Condition(ma))
call TriggerAddAction(ji,Qa)
set yH=null
set pH=null
endfunction
function qL takes nothing returns nothing
local trigger yL
local playerunitevent pL
local integer eL
set Xi=CreateTrigger()
set yL=Xi
set pL=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set eL=0
loop
call TriggerRegisterPlayerUnitEvent(yL,Player(eL),pL,null)
set eL=eL+1
exitwhen eL==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Xi,Condition(an))
call TriggerAddAction(Xi,nn)
set yL=null
set pL=null
endfunction
function qW takes nothing returns nothing
local trigger yW
local playerunitevent pW
local integer eW
set ft=CreateTrigger()
set yW=ft
set pW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set eW=0
loop
call TriggerRegisterPlayerUnitEvent(yW,Player(eW),pW,null)
set eW=eW+1
exitwhen eW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ft,Condition(pe))
call TriggerAddAction(ft,ee)
set yW=null
set pW=null
endfunction
function sD takes nothing returns nothing
local trigger wD
local playerunitevent uD
local integer rD
set fi=CreateTrigger()
set wD=fi
set uD=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set rD=0
loop
call TriggerRegisterPlayerUnitEvent(wD,Player(rD),uD,null)
set rD=rD+1
exitwhen rD==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(fi,Condition(pa))
call TriggerAddAction(fi,ea)
set wD=null
set uD=null
endfunction
function sK takes nothing returns nothing
local trigger wK
local playerunitevent uK
local integer rK
set Ui=CreateTrigger()
set wK=Ui
set uK=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set rK=0
loop
call TriggerRegisterPlayerUnitEvent(wK,Player(rK),uK,null)
set rK=rK+1
exitwhen rK==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ui,Condition(Ba))
call TriggerAddAction(Ui,Na)
set wK=null
set uK=null
endfunction
function sQ takes nothing returns nothing
local trigger wQ
local playerunitevent uQ
local integer rQ
set lt=CreateTrigger()
set wQ=lt
set uQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set rQ=0
loop
call TriggerRegisterPlayerUnitEvent(wQ,Player(rQ),uQ,null)
set rQ=rQ+1
exitwhen rQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(lt,Condition(Cp))
call TriggerAddAction(lt,Vp)
set wQ=null
set uQ=null
endfunction
function tF takes nothing returns nothing
local trigger uF
local playerunitevent rF
local integer sF
set As=CreateTrigger()
set uF=As
set rF=EVENT_PLAYER_UNIT_SPELL_CAST
set sF=0
loop
call TriggerRegisterPlayerUnitEvent(uF,Player(sF),rF,null)
set sF=sF+1
exitwhen sF==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(As,Condition(sp))
call TriggerAddAction(As,tp)
set uF=null
set rF=null
endfunction
function tP takes nothing returns nothing
local trigger uP
local playerunitevent rP
local integer sP
set ti=CreateTrigger()
set uP=ti
set rP=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set sP=0
loop
call TriggerRegisterPlayerUnitEvent(uP,Player(sP),rP,null)
set sP=sP+1
exitwhen sP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ti,Condition(Eq))
call TriggerAddAction(ti,Zq)
set uP=null
set rP=null
endfunction
function th takes nothing returns nothing
local trigger uh
local playerunitevent rh
local integer sh
set Us=CreateTrigger()
set uh=Us
set rh=EVENT_PLAYER_UNIT_SPELL_CAST
set sh=0
loop
call TriggerRegisterPlayerUnitEvent(uh,Player(sh),rh,null)
set sh=sh+1
exitwhen sh==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Us,Condition(Xy))
call TriggerAddAction(Us,Cy)
set uh=null
set rh=null
endfunction
function tk takes nothing returns nothing
local trigger uk
local playerunitevent rk
local integer sk
set Js=CreateTrigger()
set uk=Js
set rk=EVENT_PLAYER_UNIT_SPELL_CAST
set sk=0
loop
call TriggerRegisterPlayerUnitEvent(uk,Player(sk),rk,null)
set sk=sk+1
exitwhen sk==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Js,Condition(yp))
call TriggerAddAction(Js,pp)
set uk=null
set rk=null
endfunction
function uH takes nothing returns nothing
local trigger ND
local playerunitevent MD
local integer wH
set Fi=CreateTrigger()
set ND=Fi
set MD=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set wH=0
loop
call TriggerRegisterPlayerUnitEvent(ND,Player(wH),MD,null)
set wH=wH+1
exitwhen wH==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Fi,Condition(ka))
call TriggerAddAction(Fi,ja)
set ND=null
set MD=null
endfunction
function uL takes nothing returns nothing
local trigger NK
local playerunitevent MK
local integer wL
set Ki=CreateTrigger()
set NK=Ki
set MK=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set wL=0
loop
call TriggerRegisterPlayerUnitEvent(NK,Player(wL),MK,null)
set wL=wL+1
exitwhen wL==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ki,Condition(yn))
call TriggerAddAction(Ki,pn)
set NK=null
set MK=null
endfunction
function uW takes nothing returns nothing
local trigger NQ
local playerunitevent MQ
local integer wW
set nt=CreateTrigger()
set NQ=nt
set MQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set wW=0
loop
call TriggerRegisterPlayerUnitEvent(NQ,Player(wW),MQ,null)
set wW=wW+1
exitwhen wW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(nt,Condition(Oe))
call TriggerAddAction(nt,le)
set NQ=null
set MQ=null
endfunction
function vv takes nothing returns nothing
local trigger kv
local playerunitevent jv
local integer xv
set rt=CreateTrigger()
set kv=rt
set jv=EVENT_PLAYER_UNIT_SPELL_CAST
set xv=0
loop
call TriggerRegisterPlayerUnitEvent(kv,Player(xv),jv,null)
set xv=xv+1
exitwhen xv==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(rt,Condition(Ep))
call TriggerAddAction(rt,Zp)
set kv=null
set jv=null
endfunction
function wZ takes nothing returns nothing
local trigger BE
local playerunitevent NE
local integer ME
set Qt=CreateTrigger()
set BE=Qt
set NE=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set ME=0
loop
call TriggerRegisterPlayerUnitEvent(BE,Player(ME),NE,null)
set ME=ME+1
exitwhen ME==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Qt,Condition(Ae))
call TriggerAddAction(Qt,De)
set BE=null
set NE=null
endfunction
function xL takes nothing returns nothing
local trigger FL
local playerunitevent kL
local integer jL
set Vi=CreateTrigger()
set FL=Vi
set kL=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set jL=0
loop
call TriggerRegisterPlayerUnitEvent(FL,Player(jL),kL,null)
set jL=jL+1
exitwhen jL==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Vi,Condition(Rn))
call TriggerAddAction(Vi,Tn)
set FL=null
set kL=null
endfunction
function xW takes nothing returns nothing
local trigger FW
local playerunitevent kW
local integer jW
set Tt=CreateTrigger()
set FW=Tt
set kW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set jW=0
loop
call TriggerRegisterPlayerUnitEvent(FW,Player(jW),kW,null)
set jW=jW+1
exitwhen jW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Tt,Condition(ne))
call TriggerAddAction(Tt,de)
set FW=null
set kW=null
endfunction
function yA takes nothing returns nothing
local trigger OA
local playerunitevent lA
local integer bA
set pi=CreateTrigger()
set OA=pi
set lA=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set bA=0
loop
call TriggerRegisterPlayerUnitEvent(OA,Player(bA),lA,null)
set bA=bA+1
exitwhen bA==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(pi,Condition(ua))
call TriggerAddAction(pi,ra)
set OA=null
set lA=null
endfunction
function yU takes nothing returns nothing
local trigger OU
local playerunitevent lU
local integer bU
set Ht=CreateTrigger()
set OU=Ht
set lU=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set bU=0
loop
call TriggerRegisterPlayerUnitEvent(OU,Player(bU),lU,null)
set bU=bU+1
exitwhen bU==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ht,Condition(Sq))
call TriggerAddAction(Ht,cq)
set OU=null
set lU=null
endfunction
function yk takes nothing returns nothing
set Ks=CreateTrigger()
call TriggerRegisterTimerEvent(Ks,5.00,true)
call TriggerAddAction(Ks,qp)
endfunction
function NX takes nothing returns nothing
call ET()
set Ts=CreateTrigger()
call TriggerAddAction(Ts,Jn)
call IT()
call NT()
call lY()
call YY()
call EY()
call CY()
call cG()
call fG()
call mG()
call DG()
call CG()
call og()
call Tg()
call Pg()
call th()
call Th()
call Ph()
call tF()
call TF()
call PF()
call tk()
call yk()
call Rk()
call Ak()
call cj()
call Fj()
call Xj()
call bx()
call jx()
call Xx()
call bv()
call vv()
call Nv()
set tt=CreateTrigger()
call TriggerAddAction(tt,Kn)
call am()
call Wm()
call Dm()
call Vm()
call sQ()
call lQ()
call nQ()
call gQ()
call mQ()
call PQ()
call XQ()
call uW()
call oW()
call qW()
call YW()
call xW()
call UW()
call KW()
call MW()
call SE()
call pE()
call RE()
call kE()
call EE()
call IE()
call LE()
call wZ()
call cZ()
call eZ()
call TZ()
call jZ()
call ZZ()
call JZ()
call NZ()
call iU()
call yU()
call fU()
call FU()
call WU()
call DU()
call KU()
call MU()
call SI()
call pI()
call RI()
call kI()
call EI()
call HI()
call BI()
call tP()
call bP()
call dP()
call hP()
call QP()
call AP()
call JP()
call NP()
call iA()
call yA()
call fA()
call FA()
call WA()
call DA()
call VA()
call sD()
call lD()
call nD()
call gD()
call mD()
call PD()
call XD()
call uH()
call oH()
call qH()
call dH()
call mH()
call UH()
call MH()
call pJ()
call FJ()
call DJ()
call sK()
call lK()
call nK()
call gK()
call mK()
call PK()
call XK()
call uL()
call oL()
call qL()
call YL()
call xL()
call UL()
call KL()
call ML()
call SX()
call pX()
call RX()
call kX()
call EX()
call HX()
call BX()
endfunction
function CR takes nothing returns nothing
local player LR=Player(11)
local unit XR=CreateUnit(LR,1211118391,-29827.0,30210.1,269.911)
call SetHeroLevel(XR,15,false)
call SetUnitState(XR,UNIT_STATE_MANA,85.)
set XR=CreateUnit(LR,1211118406,-30125.9,29321.4,270.196)
call SetHeroLevel(XR,15,false)
set LR=null
set XR=null
endfunction
function DR takes nothing returns nothing
local player PR=Player(9)
local unit AR=CreateUnit(PR,1211118391,-29693.5,30338.3,269.785)
call SetHeroLevel(AR,15,false)
call SetUnitState(AR,UNIT_STATE_MANA,85.)
set AR=CreateUnit(PR,1211118406,-30045.2,29554.8,270.118)
call SetHeroLevel(AR,15,false)
set PR=null
set AR=null
endfunction
function ER takes nothing returns nothing
local player QR=Player(7)
local unit WR=CreateUnit(QR,1211118391,-29818.2,30468.8,269.903)
call SetHeroLevel(WR,15,false)
call SetUnitState(WR,UNIT_STATE_MANA,85.)
set WR=CreateUnit(QR,1211118406,-29998.9,29444.3,270.074)
call SetHeroLevel(WR,15,false)
set QR=null
set WR=null
endfunction
function IR takes nothing returns nothing
local player ZR=Player(8)
local unit UR=CreateUnit(ZR,1211118391,-29946.0,30342.9,270.023)
call SetHeroLevel(UR,15,false)
call SetUnitState(UR,UNIT_STATE_MANA,85.)
set UR=CreateUnit(ZR,1211118406,-30137.9,29561.1,270.206)
call SetHeroLevel(UR,15,false)
set ZR=null
set UR=null
endfunction
function KR takes nothing returns nothing
local player HR=Player(10)
local unit JR=CreateUnit(HR,1211118391,-30338.2,30210.1,270.394)
call SetHeroLevel(JR,15,false)
call SetUnitState(JR,UNIT_STATE_MANA,85.)
set JR=CreateUnit(HR,1211118406,-29904.6,29442.8,269.983)
call SetHeroLevel(JR,15,false)
set HR=null
set JR=null
endfunction
function NR takes nothing returns nothing
local player VR=Player(12)
local unit BR=CreateUnit(VR,1211118391,-30464.7,30089.7,270.515)
call SetHeroLevel(BR,15,false)
call SetUnitState(BR,UNIT_STATE_MANA,85.)
set BR=CreateUnit(VR,1211118406,-29962.2,29311.8,270.038)
call SetHeroLevel(BR,15,false)
set VR=null
set BR=null
endfunction
function YR takes nothing returns nothing
local player RR=Player(3)
local unit TR=CreateUnit(RR,1211118391,-30468.2,30345.3,270.516)
call SetHeroLevel(TR,15,false)
call SetUnitState(TR,UNIT_STATE_MANA,85.)
set TR=CreateUnit(RR,1211118406,-30252.3,29576.9,270.316)
call SetHeroLevel(TR,15,false)
set RR=null
set TR=null
endfunction
function YT takes nothing returns nothing
local player RT=Player(22)
local unit TT=CreateUnit(RT,1211118391,-29948.2,29831.1,270.025)
call SetHeroLevel(TT,15,false)
call SetUnitState(TT,UNIT_STATE_MANA,85.)
set TT=CreateUnit(RT,1211118406,-29699.3,29565.4,269.787)
call SetHeroLevel(TT,15,false)
set RT=null
set TT=null
endfunction
function aR takes nothing returns nothing
local player eR=Player(1)
local unit qR=CreateUnit(eR,1211118391,-30205.9,30601.1,270.267)
call SetHeroLevel(qR,15,false)
call SetUnitState(qR,UNIT_STATE_MANA,85.)
set qR=CreateUnit(eR,1211118406,-30199.1,29448.7,270.266)
call SetHeroLevel(qR,15,false)
set eR=null
set qR=null
endfunction
function aT takes nothing returns nothing
local player eT=Player(18)
local unit qT=CreateUnit(eT,1211118391,-29691.7,30077.9,269.782)
call SetHeroLevel(qT,15,false)
call SetUnitState(qT,UNIT_STATE_MANA,85.)
set qT=CreateUnit(eT,1211118406,-29792.0,29571.7,269.875)
call SetHeroLevel(qT,15,false)
set eT=null
set qT=null
endfunction
function cT takes nothing returns nothing
local player iT=Player(15)
local unit ST=CreateUnit(iT,1211118391,-30467.2,29834.7,270.519)
call SetHeroLevel(ST,15,false)
call SetUnitState(ST,UNIT_STATE_MANA,85.)
set ST=CreateUnit(iT,1211118406,-29874.4,29559.4,269.954)
call SetHeroLevel(ST,15,false)
set iT=null
set ST=null
endfunction
function fR takes nothing returns nothing
local player nR=Player(2)
local unit dR=CreateUnit(nR,1211118391,-30324.4,30466.1,270.380)
call SetHeroLevel(dR,15,false)
call SetUnitState(dR,UNIT_STATE_MANA,85.)
set dR=CreateUnit(nR,1211118406,-30346.6,29573.7,270.406)
call SetHeroLevel(dR,15,false)
set nR=null
set dR=null
endfunction
function fT takes nothing returns nothing
local player nT=Player(19)
local unit dT=CreateUnit(nT,1211118391,-29820.0,29950.4,269.903)
call SetHeroLevel(dT,15,false)
call SetUnitState(dT,UNIT_STATE_MANA,85.)
set dT=CreateUnit(nT,1211118406,-29707.1,29309.8,269.793)
call SetHeroLevel(dT,15,false)
set nT=null
set dT=null
endfunction
function hR takes nothing returns nothing
local player GR=Player(4)
local unit gR=CreateUnit(GR,1211118391,-30204.6,30339.2,270.267)
call SetHeroLevel(gR,15,false)
call SetUnitState(gR,UNIT_STATE_MANA,85.)
set gR=CreateUnit(GR,1211118406,-30106.5,29439.8,270.177)
call SetHeroLevel(gR,15,false)
set GR=null
set gR=null
endfunction
function hT takes nothing returns nothing
local player GT=Player(23)
local unit gT=CreateUnit(GT,1211118391,-29689.5,29824.6,269.779)
call SetHeroLevel(gT,15,false)
call SetUnitState(gT,UNIT_STATE_MANA,85.)
set gT=CreateUnit(GT,1211118406,-29815.4,29434.4,269.898)
call SetHeroLevel(gT,15,false)
set GT=null
set gT=null
endfunction
function jR takes nothing returns nothing
local player FR=Player(5)
local unit kR=CreateUnit(FR,1211118391,-29950.2,30589.5,270.027)
call SetHeroLevel(kR,15,false)
call SetUnitState(kR,UNIT_STATE_MANA,85.)
set kR=CreateUnit(FR,1211118406,-30283.9,29308.8,270.348)
call SetHeroLevel(kR,15,false)
set FR=null
set kR=null
endfunction
function lT takes nothing returns nothing
local player oT=Player(16)
local unit OT=CreateUnit(oT,1211118391,-30203.1,29826.8,270.268)
call SetHeroLevel(OT,15,false)
call SetUnitState(OT,UNIT_STATE_MANA,85.)
set OT=CreateUnit(oT,1211118406,-29780.4,29300.3,269.864)
call SetHeroLevel(OT,15,false)
set oT=null
set OT=null
endfunction
function mR takes nothing returns nothing
local player xR=Player(6)
local unit vR=CreateUnit(xR,1211118391,-29693.7,30597.0,269.786)
call SetHeroLevel(vR,15,false)
call SetUnitState(vR,UNIT_STATE_MANA,85.)
set vR=CreateUnit(xR,1211118406,-30199.8,29310.0,270.267)
call SetHeroLevel(vR,15,false)
set xR=null
set vR=null
endfunction
function pR takes nothing returns nothing
local player bR=Player(0)
local unit yR=CreateUnit(bR,1211118391,-30470.9,30602.5,270.516)
call SetHeroLevel(yR,15,false)
call SetUnitState(yR,UNIT_STATE_MANA,85.)
set yR=CreateUnit(bR,1211118406,-30360.2,29312.6,270.421)
call SetHeroLevel(yR,15,false)
set bR=null
set yR=null
endfunction
function pT takes nothing returns nothing
local player bT=Player(17)
local unit yT=CreateUnit(bT,1211118391,-29951.6,30084.7,270.028)
call SetHeroLevel(yT,15,false)
call SetUnitState(yT,UNIT_STATE_MANA,85.)
set yT=CreateUnit(bT,1211118406,-29862.1,29302.2,269.942)
call SetHeroLevel(yT,15,false)
set bT=null
set yT=null
endfunction
function tT takes nothing returns nothing
local player rT=Player(14)
local unit sT=CreateUnit(rT,1211118391,-30339.8,29950.4,270.397)
call SetHeroLevel(sT,15,false)
call SetUnitState(sT,UNIT_STATE_MANA,85.)
set sT=CreateUnit(rT,1211118406,-29968.7,29556.2,270.045)
call SetHeroLevel(sT,15,false)
set rT=null
set sT=null
endfunction
function uT takes nothing returns nothing
local player MR=Player(13)
local unit wT=CreateUnit(MR,1211118391,-30204.3,30080.3,270.268)
call SetHeroLevel(wT,15,false)
call SetUnitState(wT,UNIT_STATE_MANA,85.)
set wT=CreateUnit(MR,1211118406,-30039.0,29306.5,270.112)
call SetHeroLevel(wT,15,false)
set MR=null
set wT=null
endfunction
function jT takes nothing returns nothing
call pR()
call aR()
call fR()
call YR()
call hR()
call jR()
call mR()
call ER()
call IR()
call DR()
call KR()
call CR()
call NR()
call uT()
call tT()
call cT()
call lT()
call pT()
call aT()
call fT()
call YT()
call hT()
endfunction
function kT takes nothing returns nothing
local player FT=Player(PLAYER_NEUTRAL_AGGRESSIVE)
call CreateUnit(FT,1747989297,-1600.0,-128.0,270.000)
call CreateUnit(FT,1747989297,-15040.0,10816.0,270.000)
call CreateUnit(FT,1747989297,-256.0,-2432.0,270.000)
call CreateUnit(FT,1747989297,-24320.0,3904.0,270.000)
call CreateUnit(FT,1747989297,-23552.0,-4544.0,270.000)
call CreateUnit(FT,1747989297,-23360.0,-64.0,270.000)
call CreateUnit(FT,1747989297,2176.0,-7744.0,270.000)
call CreateUnit(FT,1747989297,-6336.0,8000.0,270.000)
call CreateUnit(FT,1747989297,832.0,-5568.0,270.000)
call CreateUnit(FT,1747989297,-3648.0,1856.0,270.000)
call CreateUnit(FT,1747989042,-768.0,24384.0,270.000)
call CreateUnit(FT,1747989297,-26304.0,-8704.0,270.000)
call CreateUnit(FT,1747989297,2688.0,-3008.0,270.000)
call CreateUnit(FT,1747989297,-5568.0,-2752.0,270.000)
call CreateUnit(FT,1747989297,-3456.0,-2880.0,270.000)
call CreateUnit(FT,1747989297,-6464.0,1280.0,270.000)
call CreateUnit(FT,1747989297,-8064.0,3200.0,270.000)
call CreateUnit(FT,1747989297,-8768.0,1984.0,270.000)
call CreateUnit(FT,1747989297,-7104.0,-768.0,270.000)
call CreateUnit(FT,1747989297,-28544.0,0.0,270.000)
call CreateUnit(FT,1747989297,-27840.0,-2752.0,270.000)
call CreateUnit(FT,1747989297,-27008.0,2688.0,270.000)
call CreateUnit(FT,1747989297,-17024.0,512.0,270.000)
call CreateUnit(FT,1747989297,-21696.0,-4224.0,270.000)
call CreateUnit(FT,1747989042,17536.0,-9024.0,270.000)
call CreateUnit(FT,1747989297,10816.0,-7360.0,270.000)
call CreateUnit(FT,1747989297,12800.0,-6912.0,270.000)
call CreateUnit(FT,1747989297,15488.0,-7552.0,270.000)
call CreateUnit(FT,1747989297,19072.0,-7424.0,270.000)
call CreateUnit(FT,1747989297,15360.0,-5568.0,270.000)
call CreateUnit(FT,1747989297,17216.0,-8640.0,270.000)
call CreateUnit(FT,1747989297,16960.0,-16192.0,270.000)
call CreateUnit(FT,1747989297,6976.0,-6592.0,270.000)
call CreateUnit(FT,1747989297,24000.0,256.0,270.000)
call CreateUnit(FT,1747989297,-10688.0,-384.0,270.000)
call CreateUnit(FT,1747989297,13952.0,-11008.0,270.000)
call CreateUnit(FT,1747989297,-10944.0,-4608.0,270.000)
call CreateUnit(FT,1747989297,-21440.0,-8384.0,270.000)
call CreateUnit(FT,1747989297,17472.0,9472.0,270.000)
call CreateUnit(FT,1747989297,-16768.0,-8064.0,270.000)
call CreateUnit(FT,1747989297,-9920.0,-11264.0,270.000)
call CreateUnit(FT,1747989297,-7488.0,-16256.0,270.000)
call CreateUnit(FT,1747989297,448.0,-17600.0,270.000)
call CreateUnit(FT,1747989297,11008.0,-18496.0,270.000)
call CreateUnit(FT,1747989297,13248.0,-17856.0,270.000)
call CreateUnit(FT,1747989297,12288.0,-20864.0,270.000)
call CreateUnit(FT,1747989297,-11456.0,11008.0,270.000)
call CreateUnit(FT,1747989297,-8640.0,7104.0,270.000)
call CreateUnit(FT,1747989297,-7360.0,17088.0,270.000)
call CreateUnit(FT,1747989297,-5120.0,14528.0,270.000)
call CreateUnit(FT,1747989297,15488.0,-26816.0,270.000)
call CreateUnit(FT,1747989297,-9600.0,13120.0,270.000)
call CreateUnit(FT,1747989297,-11456.0,14528.0,270.000)
call CreateUnit(FT,1747989297,-12544.0,16320.0,270.000)
call CreateUnit(FT,1747989297,-7680.0,22272.0,270.000)
call CreateUnit(FT,1747989297,-6272.0,21376.0,270.000)
call CreateUnit(FT,1747989297,-4992.0,21888.0,270.000)
call CreateUnit(FT,1747989297,-1280.0,23936.0,270.000)
call CreateUnit(FT,1747989297,-3328.0,23232.0,270.000)
call CreateUnit(FT,1747989297,-2560.0,26368.0,270.000)
call CreateUnit(FT,1747989297,-6528.0,28288.0,270.000)
call CreateUnit(FT,1747989297,-9856.0,28416.0,270.000)
call CreateUnit(FT,1747989297,-13376.0,15104.0,270.000)
call CreateUnit(FT,1747989297,-10688.0,3520.0,270.000)
call CreateUnit(FT,1747989297,-9856.0,5440.0,270.000)
call CreateUnit(FT,1747989297,-6720.0,4096.0,270.000)
call CreateUnit(FT,1747989297,-13632.0,2368.0,270.000)
call CreateUnit(FT,1747989297,-10496.0,17728.0,270.000)
call CreateUnit(FT,1747989297,-7616.0,11200.0,270.000)
call CreateUnit(FT,1747989297,-18688.0,5760.0,270.000)
call CreateUnit(FT,1747989297,-25024.0,-3008.0,270.000)
call CreateUnit(FT,1747989297,-20096.0,1408.0,270.000)
call CreateUnit(FT,1747989297,-7040.0,-7808.0,270.000)
call CreateUnit(FT,1747989297,-5376.0,-9216.0,270.000)
call CreateUnit(FT,1747989297,24896.0,-27456.0,270.000)
call CreateUnit(FT,1747989297,-20352.0,12224.0,270.000)
call CreateUnit(FT,1747989297,-13568.0,5184.0,270.000)
call CreateUnit(FT,1747989297,-5120.0,24576.0,270.000)
call CreateUnit(FT,1747989297,-1856.0,27776.0,270.000)
call CreateUnit(FT,1747989297,-16704.0,24192.0,270.000)
call CreateUnit(FT,1747989297,-15936.0,17088.0,270.000)
call CreateUnit(FT,1747989297,-17792.0,16064.0,270.000)
call CreateUnit(FT,1747989297,-20224.0,21632.0,270.000)
call CreateUnit(FT,1747989297,-22400.0,19968.0,270.000)
call CreateUnit(FT,1747989297,-15872.0,20544.0,270.000)
call CreateUnit(FT,1747989297,-19776.0,16512.0,270.000)
call CreateUnit(FT,1747989297,-17088.0,12672.0,270.000)
call CreateUnit(FT,1747989297,-18560.0,19712.0,270.000)
call CreateUnit(FT,1747989297,-15680.0,26112.0,270.000)
call CreateUnit(FT,1747989297,-17088.0,26816.0,270.000)
call CreateUnit(FT,1747989297,-16704.0,3584.0,270.000)
call CreateUnit(FT,1747989297,-11456.0,7232.0,270.000)
call CreateUnit(FT,1747989297,-18176.0,10816.0,270.000)
call CreateUnit(FT,1747989297,-16000.0,6016.0,270.000)
call CreateUnit(FT,1747989297,-8896.0,26688.0,270.000)
call CreateUnit(FT,1747989297,9216.0,-4416.0,270.000)
call CreateUnit(FT,1747989297,6656.0,-4480.0,270.000)
call CreateUnit(FT,1747989297,5184.0,-1856.0,270.000)
call CreateUnit(FT,1747989297,18624.0,-448.0,270.000)
call CreateUnit(FT,1747989297,11008.0,-1984.0,270.000)
call CreateUnit(FT,1747989297,14144.0,-128.0,270.000)
call CreateUnit(FT,1747989297,8384.0,-10368.0,270.000)
call CreateUnit(FT,1747989297,5376.0,-12224.0,270.000)
call CreateUnit(FT,1747989297,3392.0,-7296.0,270.000)
call CreateUnit(FT,1747989297,12672.0,-3904.0,270.000)
call CreateUnit(FT,1747989297,27008.0,-11520.0,270.000)
call CreateUnit(FT,1747989297,-25216.0,1472.0,270.000)
call CreateUnit(FT,1747989297,23552.0,11072.0,270.000)
call CreateUnit(FT,1747989297,-20736.0,-2112.0,270.000)
call CreateUnit(FT,1747989297,-22592.0,2560.0,270.000)
call CreateUnit(FT,1747989297,-20864.0,3136.0,270.000)
call CreateUnit(FT,1747989297,-17280.0,-3136.0,270.000)
call CreateUnit(FT,1747989297,-3584.0,4608.0,270.000)
call CreateUnit(FT,1747989297,1536.0,29440.0,270.000)
call CreateUnit(FT,1747989297,-23104.0,-8832.0,270.000)
call CreateUnit(FT,1747989297,1216.0,-960.0,270.000)
call CreateUnit(FT,1747989297,-13312.0,-8512.0,270.000)
call CreateUnit(FT,1747989297,26240.0,-2688.0,270.000)
call CreateUnit(FT,1747989043,-7872.0,17536.0,270.000)
call CreateUnit(FT,1747989297,-13568.0,12160.0,270.000)
call CreateUnit(FT,1747989297,-13696.0,8064.0,270.000)
call CreateUnit(FT,1747989297,27648.0,-5824.0,270.000)
call CreateUnit(FT,1747989297,-4544.0,11648.0,270.000)
call CreateUnit(FT,1747989297,28992.0,-3200.0,270.000)
call CreateUnit(FT,1747989297,-3072.0,8320.0,270.000)
call CreateUnit(FT,1747989297,-384.0,8512.0,270.000)
call CreateUnit(FT,1747989297,28224.0,2752.0,270.000)
call CreateUnit(FT,1747989297,-4992.0,17280.0,270.000)
call CreateUnit(FT,1747989297,64.0,12608.0,270.000)
call CreateUnit(FT,1747989297,-2112.0,13696.0,270.000)
call CreateUnit(FT,1747989297,4160.0,5376.0,270.000)
call CreateUnit(FT,1747989297,4224.0,3904.0,270.000)
call CreateUnit(FT,1747989297,7232.0,2240.0,270.000)
call CreateUnit(FT,1747989297,-384.0,3072.0,270.000)
call CreateUnit(FT,1747989297,-8128.0,19968.0,270.000)
call CreateUnit(FT,1747989297,3072.0,192.0,270.000)
call CreateUnit(FT,1747989297,832.0,15872.0,270.000)
call CreateUnit(FT,1747989297,-2304.0,16064.0,270.000)
call CreateUnit(FT,1747989297,4416.0,19648.0,270.000)
call CreateUnit(FT,1747989297,1792.0,6976.0,270.000)
call CreateUnit(FT,1747989297,5888.0,24960.0,270.000)
call CreateUnit(FT,1747989297,-1792.0,19200.0,270.000)
call CreateUnit(FT,1747989297,3008.0,22784.0,270.000)
call CreateUnit(FT,1747989297,3200.0,18240.0,270.000)
call CreateUnit(FT,1747989297,-3712.0,-6528.0,270.000)
call CreateUnit(FT,1747989297,-17216.0,22208.0,270.000)
call CreateUnit(FT,1747989297,-18880.0,17920.0,270.000)
call CreateUnit(FT,1747989297,-17280.0,18304.0,270.000)
call CreateUnit(FT,1747989297,-22272.0,22400.0,270.000)
call CreateUnit(FT,1747989297,-10496.0,-9152.0,270.000)
call CreateUnit(FT,1747989297,13248.0,5120.0,270.000)
call CreateUnit(FT,1747989297,7936.0,-2368.0,270.000)
call CreateUnit(FT,1747989297,3520.0,27008.0,270.000)
call CreateUnit(FT,1747989297,8832.0,26368.0,270.000)
call CreateUnit(FT,1747989297,6848.0,21440.0,270.000)
call CreateUnit(FT,1747989297,6144.0,18560.0,270.000)
call CreateUnit(FT,1747989297,3904.0,11072.0,270.000)
call CreateUnit(FT,1747989297,8512.0,12352.0,270.000)
call CreateUnit(FT,1747989297,9280.0,20032.0,270.000)
call CreateUnit(FT,1747989297,1216.0,11008.0,270.000)
call CreateUnit(FT,1747989044,-15680.0,11200.0,270.000)
call CreateUnit(FT,1747989044,-15104.0,17408.0,270.000)
call CreateUnit(FT,1747989045,-1728.0,28608.0,270.000)
call CreateUnit(FT,1747989043,-18304.0,18112.0,270.000)
call CreateUnit(FT,1747989044,-9600.0,13888.0,270.000)
call CreateUnit(FT,1747989297,384.0,19456.0,270.000)
call CreateUnit(FT,1747989044,4864.0,5952.0,270.000)
call CreateUnit(FT,1747989044,8000.0,-1664.0,270.000)
call CreateUnit(FT,1747989044,9280.0,-3008.0,270.000)
call CreateUnit(FT,1747989045,-21056.0,21056.0,270.000)
call CreateUnit(FT,1747989045,-19648.0,12224.0,270.000)
call CreateUnit(FT,1747989045,17984.0,-13120.0,270.000)
call CreateUnit(FT,1747989042,-28544.0,704.0,270.000)
call CreateUnit(FT,1747989045,-9344.0,7168.0,270.000)
call CreateUnit(FT,1747989043,-6336.0,8576.0,270.000)
call CreateUnit(FT,1747989045,-15616.0,21248.0,270.000)
call CreateUnit(FT,1747989045,-16640.0,1024.0,270.000)
call CreateUnit(FT,1747989045,13760.0,-11584.0,270.000)
call CreateUnit(FT,1747989042,-11328.0,3712.0,270.000)
call CreateUnit(FT,1747989042,-16768.0,25920.0,270.000)
call CreateUnit(FT,1747989045,-19200.0,28352.0,270.000)
call CreateUnit(FT,1747989043,3456.0,11584.0,270.000)
call CreateUnit(FT,1747989044,-24640.0,4352.0,270.000)
call CreateUnit(FT,1747989044,-23232.0,-5120.0,270.000)
call CreateUnit(FT,1747989042,-23424.0,768.0,270.000)
call CreateUnit(FT,1747989045,-15936.0,-2688.0,270.000)
call CreateUnit(FT,1747989045,-10752.0,-3456.0,270.000)
call CreateUnit(FT,1747989044,-7552.0,4416.0,270.000)
call CreateUnit(FT,1747989045,-20160.0,-1600.0,270.000)
call CreateUnit(FT,1747989045,-21824.0,2560.0,270.000)
call CreateUnit(FT,1747989045,11392.0,-7104.0,270.000)
call CreateUnit(FT,1747989042,4352.0,20224.0,270.000)
call CreateUnit(FT,1747989044,-15360.0,4992.0,270.000)
call CreateUnit(FT,1747989042,-896.0,3392.0,270.000)
call CreateUnit(FT,1747989045,-6528.0,-832.0,270.000)
call CreateUnit(FT,1747989043,-4928.0,-3264.0,270.000)
call CreateUnit(FT,1747989042,-6144.0,-8192.0,270.000)
call CreateUnit(FT,1747989043,23424.0,640.0,270.000)
call CreateUnit(FT,1747989043,-6976.0,1344.0,270.000)
call CreateUnit(FT,1747989043,4352.0,128.0,270.000)
call CreateUnit(FT,1747989297,17472.0,19648.0,270.000)
call CreateUnit(FT,1747989044,-7872.0,22784.0,270.000)
call CreateUnit(FT,1747989297,20864.0,21504.0,270.000)
call CreateUnit(FT,1747989044,-9152.0,28480.0,270.000)
call CreateUnit(FT,1747989042,-27712.0,-9536.0,270.000)
call CreateUnit(FT,1747989042,4800.0,-12480.0,270.000)
call CreateUnit(FT,1747989045,7232.0,-11328.0,270.000)
call CreateUnit(FT,1747989045,1792.0,-8064.0,270.000)
call CreateUnit(FT,1747989297,-1600.0,5952.0,270.000)
call CreateUnit(FT,1747989043,-128.0,-1792.0,270.000)
call CreateUnit(FT,1747989042,-3392.0,8640.0,270.000)
call CreateUnit(FT,1747989044,-1856.0,16576.0,270.000)
call CreateUnit(FT,1747989043,-13888.0,14784.0,270.000)
call CreateUnit(FT,1747989297,-29568.0,-9792.0,270.000)
call CreateUnit(FT,1747989043,-9088.0,26240.0,270.000)
call CreateUnit(FT,1747989045,-5440.0,23808.0,270.000)
call CreateUnit(FT,1747989045,2176.0,30080.0,270.000)
call CreateUnit(FT,1747989043,1984.0,6464.0,270.000)
call CreateUnit(FT,1747989297,-26304.0,-1408.0,270.000)
call CreateUnit(FT,1747989043,448.0,13056.0,270.000)
call CreateUnit(FT,1747989045,3072.0,26752.0,270.000)
call CreateUnit(FT,1747989043,6656.0,18880.0,270.000)
call CreateUnit(FT,1747989043,3264.0,-3712.0,270.000)
call CreateUnit(FT,1747989297,15872.0,5760.0,270.000)
call CreateUnit(FT,1747989043,6528.0,22080.0,270.000)
call CreateUnit(FT,1747989044,8896.0,27008.0,270.000)
call CreateUnit(FT,1747989297,18496.0,-17280.0,270.000)
call CreateUnit(FT,1747989297,11392.0,7872.0,270.000)
call CreateUnit(FT,1747989297,12672.0,11328.0,270.000)
call CreateUnit(FT,1747989297,6016.0,12416.0,270.000)
call CreateUnit(FT,1747989297,7104.0,7808.0,270.000)
call CreateUnit(FT,1747989297,20864.0,2688.0,270.000)
call CreateUnit(FT,1747989297,24000.0,2560.0,270.000)
call CreateUnit(FT,1747989297,19648.0,11328.0,270.000)
call CreateUnit(FT,1747989297,11584.0,16960.0,270.000)
call CreateUnit(FT,1747989297,18496.0,-13248.0,270.000)
call CreateUnit(FT,1747989297,17216.0,-11456.0,270.000)
call CreateUnit(FT,1747989297,25088.0,-8320.0,270.000)
call CreateUnit(FT,1747989297,15680.0,-17536.0,270.000)
call CreateUnit(FT,1747989297,16640.0,-14208.0,270.000)
call CreateUnit(FT,1747989297,17280.0,-19584.0,270.000)
call CreateUnit(FT,1747989297,22912.0,-10240.0,270.000)
call CreateUnit(FT,1747989297,20864.0,-23040.0,270.000)
call CreateUnit(FT,1747989044,13120.0,-21696.0,270.000)
call CreateUnit(FT,1747989297,20096.0,-5760.0,270.000)
call CreateUnit(FT,1747989297,18816.0,-3776.0,270.000)
call CreateUnit(FT,1747989042,14464.0,-26432.0,270.000)
call CreateUnit(FT,1747989044,23808.0,-27776.0,270.000)
call CreateUnit(FT,1747989042,11776.0,-18688.0,270.000)
call CreateUnit(FT,1747989043,256.0,-18048.0,270.000)
call CreateUnit(FT,1747989045,-16192.0,-8192.0,270.000)
call CreateUnit(FT,1747989045,-11520.0,-10944.0,270.000)
call CreateUnit(FT,1747989045,16512.0,-19968.0,270.000)
call CreateUnit(FT,1747989045,20416.0,-22272.0,270.000)
call CreateUnit(FT,1747989044,28800.0,-11904.0,270.000)
call CreateUnit(FT,1747989297,15040.0,23104.0,270.000)
call CreateUnit(FT,1747989044,8128.0,12928.0,270.000)
call CreateUnit(FT,1747989044,16896.0,-15744.0,270.000)
call CreateUnit(FT,1747989042,17984.0,-640.0,270.000)
call CreateUnit(FT,1747989045,20608.0,3136.0,270.000)
call CreateUnit(FT,1747989045,7232.0,-5120.0,270.000)
call CreateUnit(FT,1747989045,25984.0,-8128.0,270.000)
call CreateUnit(FT,1747989045,20544.0,-5440.0,270.000)
call CreateUnit(FT,1747989045,11968.0,17856.0,270.000)
call CreateUnit(FT,1747989045,10048.0,20032.0,270.000)
call CreateUnit(FT,1747989043,15296.0,-7232.0,270.000)
call CreateUnit(FT,1747989043,13056.0,11776.0,270.000)
call CreateUnit(FT,1747989043,15744.0,23488.0,270.000)
call CreateUnit(FT,1747989043,17984.0,9280.0,270.000)
set FT=null
endfunction
function lR takes nothing returns nothing
local integer OR=0
set OR=0
loop
exitwhen OR>8192
call CreateGroup()
set OR=OR+1
endloop
call CreateForce()
call CreateGroup()
call CreateForce()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateForce()
call CreateForce()
call CreateForce()
call CreateTimer()
call CreateForce()
call CreateGroup()
set w=CreateGroup()
call CreateGroup()
call CreateForce()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateTimer()
set OR=0
loop
exitwhen OR>24
set OR=OR+1
endloop
set OR=0
loop
exitwhen OR>24
set r[OR]=0
set OR=OR+1
endloop
set s=CreateForce()
set OR=0
loop
exitwhen OR>24
set OR=OR+1
endloop
call CreateGroup()
set OR=0
loop
exitwhen OR>24
set OR=OR+1
endloop
set OR=0
loop
exitwhen OR>24
set OR=OR+1
endloop
call CreateForce()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
set l=CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
set OR=0
loop
exitwhen OR>24
set OR=OR+1
endloop
set OR=0
loop
exitwhen OR>24
set OR=OR+1
endloop
call CreateGroup()
set OR=0
loop
exitwhen OR>24
set OR=OR+1
endloop
set OR=0
loop
exitwhen OR>24
set OR=OR+1
endloop
set OR=0
loop
exitwhen OR>24
set OR=OR+1
endloop
set OR=0
loop
exitwhen OR>24
set OR=OR+1
endloop
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateForce()
call CreateForce()
set OR=0
loop
exitwhen OR>1
set OR=OR+1
endloop
set OR=0
loop
exitwhen OR>1
set OR=OR+1
endloop
set OR=0
loop
exitwhen OR>1
set OR=OR+1
endloop
set b=CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
set OR=0
loop
exitwhen OR>24
set p[OR]=false
set OR=OR+1
endloop
set OR=0
loop
exitwhen OR>24
set e[OR]=false
set OR=OR+1
endloop
endfunction
function A1 takes nothing returns boolean
set fc=InitHashtable()
set Rc=InitHashtable()
return true
endfunction
function A3 takes nothing returns boolean
local integer Z3
local player U3
local boolean I3
local boolean P3
if GetOwningPlayer(GetSpellAbilityUnit())==GetOwningPlayer(GetSpellTargetUnit()) then
set P3=true
else
set U3=GetOwningPlayer(GetSpellTargetUnit())
if GetPlayerSlotState(U3)==PLAYER_SLOT_STATE_PLAYING then
set I3=GetPlayerController(U3)==MAP_CONTROL_USER
else
set I3=false
endif
set P3=not I3
endif
if P3 then
set U3=null
return false
endif
set Z3=GetSpellAbilityId()
set U3=null
return Z3==1093677396 or Z3==1093677397 or Z3==1093677398 or Z3==1093677400 or Z3==1093677399
endfunction
function PE takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function AE takes nothing returns boolean
if not PE() then
return false
endif
return true
endfunction
function AF takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747990071 then
return false
endif
return true
endfunction
function AL takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function PT takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989043 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function AT takes nothing returns boolean
if not PT() then
return false
endif
return true
endfunction
function AW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989072,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989073,0)
endfunction
function Ag takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747990091 then
return false
endif
return true
endfunction
function Ah takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989077 then
return false
endif
return true
endfunction
function BD takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990601,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990599,0)
endfunction
function BK takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function BQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651824,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651825,0)
endfunction
function D9 takes integer A9 returns string
if A9==0 then
return "|cffADADADtrace|r"
elseif A9==1 then
return "|cff2685DCdebug|r"
elseif A9==2 then
return "|cffFFCC00info|r"
elseif A9==3 then
return "|cffF47E3Ewarning|r"
elseif A9==4 then
return "|cffFB2700error|r"
endif
return "?"
endfunction
function W1 takes string G1,string g1 returns nothing
local integer h1
local integer F1
local integer k1
local string j1
local integer x1
local integer v1
local string m1
local string Q1
set Ab[Pb]=g1
set Pb=Pb+1
set h1=StringHash(G1)
if HaveSavedInteger(cc,-1,h1) then
if LoadInteger(cc,-1,h1)+60<nc then
set m1=G1
set g1=""
set F1=Pb
set k1=0
loop
set F1=F1-1
set k1=k1+1
exitwhen k1>20 or F1<0
set g1=g1+"\n   "+Ab[F1]
endloop
call DisplayTimedTextToPlayer(so,0.,0.,45.,D9(4)+" - "+m1+g1)
call SaveInteger(cc,-1,h1,R2I(nc))
call SaveBoolean(cc,-1,h1,false)
elseif HaveSavedBoolean(cc,-1,h1) then
if not LoadBoolean(cc,-1,h1) then
call DisplayTimedTextToPlayer(so,0.,0.,45.,D9(4)+" - "+"|cffFF3A29Excessive repeating errors are being omitted")
call SaveBoolean(cc,-1,h1,true)
endif
else
call DisplayTimedTextToPlayer(so,0.,0.,45.,D9(4)+" - "+"|cffFF3A29Excessive repeating errors are being omitted")
call SaveBoolean(cc,-1,h1,true)
endif
else
call SaveInteger(cc,-1,h1,R2I(nc))
set Q1="Message: "+G1
set j1=""
set x1=Pb
set v1=0
loop
set x1=x1-1
set v1=v1+1
exitwhen v1>20 or x1<0
set j1=j1+"\n   "+Ab[x1]
endloop
call DisplayTimedTextToPlayer(so,0.,0.,45.,D9(4)+" - "+Q1+j1)
endif
call I2S(1/0)
set Pb=Pb-1
endfunction
function Yww takes timer nww,integer dww,string fww returns nothing
local integer Rww
local integer Tww
set Ab[Pb]=fww
set Pb=Pb+1
set Rww=Po
set Tww=GetHandleId(nww)
set Ab[Pb]="when calling saveInt in TimerUtils, line 17"
set Pb=Pb+1
if HO[Rww]==0 then
if Rww==0 then
call W1("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call W1("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Zo,Rww,Tww,dww)
set Pb=Pb-1-1
endfunction
function Dqw takes integer Uqw,timer Iqw,real Pqw,string Aqw returns nothing
set Ab[Pb]=Aqw
set Pb=Pb+1
if kO[Uqw]==0 then
if Uqw==0 then
call W1("Nullpointer exception when calling CallbackPeriodic.start","when calling error in ClosureTimers, line 132")
else
call W1("Called CallbackPeriodic.start on invalid object.","when calling error in ClosureTimers, line 132")
endif
endif
set Ab[Pb]="when calling start in ClosureTimers, line 132"
set Pb=Pb+1
call Yww(Iqw,Uqw,"when calling setData in ClosureTimers, line 134")
call TimerStart(Iqw,Pqw,true,wR)
set Pb=Pb-1-1
endfunction
function mww takes string xww returns timer
local timer vww
set Ab[Pb]=xww
set Pb=Pb+1
if Io>0 then
set Io=Io-1
call Yww(Uo[Io],0,"when calling setData in TimerUtils, line 29")
set Pb=Pb-1
set vww=null
return Uo[Io]
else
set vww=CreateTimer()
call Yww(vww,0,"when calling setData in TimerUtils, line 32")
set Pb=Pb-1
set tR=vww
set vww=null
return tR
endif
endfunction
function fM takes string aM returns boolean
local integer nM
local timer dM
set Ab[Pb]=aM
set Pb=Pb+1
set Ab[Pb]="when calling alloc_Credits_CallbackPeriodic_line5 in Credits, line 5"
set Pb=Pb+1
if hO==0 then
if FO<32768 then
set FO=FO+1
set nM=FO
set kO[nM]=633
else
call W1("Out of memory: Could not create Credits_CallbackPeriodic_line5.","when calling error in Credits, line 5")
set nM=0
endif
else
set hO=hO-1
set nM=gO[hO]
set kO[nM]=633
endif
set Pb=Pb-1
set Ab[Pb]="when calling doPeriodically in Credits, line 5"
set Pb=Pb+1
set dM=mww("when calling getTimer in ClosureTimers, line 57")
set Ab[Pb]="when calling doPeriodically in ClosureTimers, line 57"
set Pb=Pb+1
call Dqw(nM,dM,600,"when calling start in ClosureTimers, line 45")
set Pb=Pb-1-1-1
set dM=null
return true
endfunction
function BRw takes nothing returns boolean
set Pb=0
return fM("Credits, line 1")
endfunction
function VY takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989315 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function BY takes nothing returns boolean
if not VY() then
return false
endif
return true
endfunction
function XE takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function CE takes nothing returns boolean
if not XE() then
return false
endif
return true
endfunction
function CH takes nothing returns nothing
local integer AH=1
local integer DH=1747988787
local player HH=GetOwningPlayer(GetConstructedStructure())
local rect XH=bj_mapInitialPlayableArea
local location LH=Location(GetRectCenterX(XH),GetRectCenterY(XH))
local location JH=Location(GetLocationX(LH)+100000000.00,GetLocationY(LH)+1000000000.00)
local real KH=bj_UNIT_FACING
call GroupClear(bj_lastCreatedGroup)
loop
set AH=AH-1
exitwhen AH<0
call CreateUnitAtLocSaveLast(HH,DH,JH,KH)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
call UnitRemoveAbility(bj_lastCreatedUnit,1093677905)
call ShowUnit(bj_lastCreatedUnit,false)
set e[GetPlayerId(GetOwningPlayer(GetConstructedStructure()))+1]=true
set HH=null
set JH=null
set LH=null
set XH=null
endfunction
function CL takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function q0w takes playerunitevent S0w,code c0w,code o0w,code O0w returns nothing
local integer l0w=GetHandleId(S0w)
local integer b0w
local filterfunc y0w
local trigger p0w
local player e0w
if eo[l0w]==null then
set eo[l0w]=CreateTrigger()
set b0w=bj_MAX_PLAYER_SLOTS-1
loop
exitwhen b0w<0
set p0w=eo[l0w]
set e0w=ro[b0w]
if c0w!=null then
set y0w=Filter(c0w)
else
set y0w=null
endif
call TriggerRegisterPlayerUnitEvent(p0w,e0w,S0w,y0w)
set b0w=b0w-1
endloop
endif
if o0w!=null then
call TriggerAddCondition(eo[l0w],Filter(o0w))
endif
if O0w!=null then
call TriggerAddAction(eo[l0w],O0w)
endif
set y0w=null
set p0w=null
set e0w=null
endfunction
function tB takes eventid KV,string LV returns integer
local integer XV
local integer CV
local integer VV
local trigger BV
local integer NV
local integer MV
local integer wB
local integer uB
local boolean rB
local boolean sB
set Ab[Pb]=LV
set Pb=Pb+1
set XV=GetHandleId(KV)
set ZS=ZS+1
set ES[XV]=ZS
set NV=GetHandleId(KV)
if (NV>=18 and NV<=51)or(NV>=269 and NV<=277) then
call q0w(ConvertPlayerUnitEvent(XV),null,vf,null)
else
if KV!=EVENT_UNIT_DAMAGED and KV!=EVENT_PLAYER_LEAVE and KV!=vS then
set MV=GetHandleId(KV)
set rB=MV<261 or MV>268 and MV!=17
else
set rB=false
endif
if rB then
set wB=GetHandleId(KV)
set sB=wB<305 or wB>307
else
set sB=false
endif
if sB then
call W1("registering handleid: "+I2S(XV)+" non-playerunitevent. Except EVENT_UNIT_DAMAGED and EVENT_PLAYER_LEAVE these are not supported right now.","when calling error in ClosureEvents, line 243")
endif
endif
set uB=GetHandleId(KV)
if uB>=305 and uB<=307 and(not DS) then
set DS=true
set CV=0
set VV=bj_MAX_PLAYERS-1
loop
exitwhen CV>VV
set BV=WS
call TriggerRegisterPlayerEvent(BV,ro[CV],EVENT_PLAYER_MOUSE_UP)
call TriggerRegisterPlayerEvent(BV,ro[CV],EVENT_PLAYER_MOUSE_DOWN)
call TriggerRegisterPlayerEvent(BV,ro[CV],EVENT_PLAYER_MOUSE_MOVE)
set CV=CV+1
endloop
endif
set Pb=Pb-1
set BV=null
return ZS
endfunction
function PC takes string YC returns boolean
local trigger GC
local playerunitevent gC
local playerunitevent hC
local integer FC
local integer kC
local player jC
local location xC
local real vC
local integer mC
local integer QC
local trigger WC
local playerunitevent EC
local integer ZC
local integer UC
local integer IC
set Ab[Pb]=YC
set Pb=Pb+1
if kc then
set FC=5
set kC=1747988553
set jC=ro[0]
set xC=Location(-3000.0,1700.0)
set vC=0.
call GroupClear(bj_lastCreatedGroup)
loop
set FC=FC-1
exitwhen FC<0
call CreateUnitAtLocSaveLast(jC,kC,xC,vC)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
endif
set gC=EVENT_PLAYER_UNIT_SELECTED
set Ab[Pb]="when calling alloc_CityManage_EventListener_line9 in CityManage, line 9"
set Pb=Pb+1
if SO==0 then
if cO<32768 then
set cO=cO+1
set mC=cO
set oO[mC]=665
else
call W1("Out of memory: Could not create CityManage_EventListener_line9.","when calling error in CityManage, line 9")
set mC=0
endif
else
set SO=SO-1
set mC=iO[SO]
set oO[mC]=665
endif
set Pb=Pb-1
set Cl[mC]=0
set Vl[mC]=0
set Bl[mC]=0
set Ab[Pb]="when calling add in CityManage, line 9"
set Pb=Pb+1
set Ab[Pb]="when calling toIntId in ClosureEvents, line 112"
set Pb=Pb+1
set QC=ES[GetHandleId(gC)]
if QC==0 then
set QC=tB(gC,"when calling registerEventId in ClosureEvents, line 229")
endif
set Pb=Pb-1
set Cl[mC]=QC
if PS[Cl[mC]]!=0 then
set Bl[PS[Cl[mC]]]=mC
set Vl[mC]=PS[Cl[mC]]
endif
set PS[Cl[mC]]=mC
set Pb=Pb-1
set GC=CreateTrigger()
call TriggerAddCondition(GC,Condition(Ff))
call TriggerAddAction(GC,kf)
set WC=GC
set EC=EVENT_PLAYER_UNIT_SPELL_CAST
set ZC=0
loop
call TriggerRegisterPlayerUnitEvent(WC,Player(ZC),EC,null)
set ZC=ZC+1
exitwhen ZC==bj_MAX_PLAYER_SLOTS
endloop
set hC=EVENT_PLAYER_UNIT_ATTACKED
set Ab[Pb]="when calling alloc_CityManage_EventListener_line33 in CityManage, line 33"
set Pb=Pb+1
if SO==0 then
if cO<32768 then
set cO=cO+1
set UC=cO
set oO[UC]=664
else
call W1("Out of memory: Could not create CityManage_EventListener_line33.","when calling error in CityManage, line 33")
set UC=0
endif
else
set SO=SO-1
set UC=iO[SO]
set oO[UC]=664
endif
set Pb=Pb-1
set Cl[UC]=0
set Vl[UC]=0
set Bl[UC]=0
set Ab[Pb]="when calling add in CityManage, line 33"
set Pb=Pb+1
set Ab[Pb]="when calling toIntId in ClosureEvents, line 112"
set Pb=Pb+1
set IC=ES[GetHandleId(hC)]
if IC==0 then
set IC=tB(hC,"when calling registerEventId in ClosureEvents, line 229")
endif
set Pb=Pb-1
set Cl[UC]=IC
if PS[Cl[UC]]!=0 then
set Bl[PS[Cl[UC]]]=UC
set Vl[UC]=PS[Cl[UC]]
endif
set PS[Cl[UC]]=UC
set Pb=Pb-1-1
set GC=null
set gC=null
set hC=null
set jC=null
set xC=null
set WC=null
set EC=null
return true
endfunction
function CRw takes nothing returns boolean
set Pb=0
return PC("CityManage, line 1")
endfunction
function CU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989825,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989817,0)
endfunction
function CW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989082,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989072,0)
endfunction
function Cj takes nothing returns boolean
if GetUnitTypeId(GetDyingUnit())!=1747988792 then
return false
endif
return true
endfunction
function Cx takes nothing returns boolean
if GetUnitTypeId(GetDyingUnit())!=1747988793 then
return false
endif
return true
endfunction
function D1 takes nothing returns boolean
set Tc=InitHashtable()
return true
endfunction
function D3 takes nothing returns boolean
return true
endfunction
function AD takes nothing returns boolean
if GetResearched()!=1378890052 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890052,true)!=1 then
return false
endif
return true
endfunction
function DD takes nothing returns boolean
if not AD() then
return false
endif
return true
endfunction
function DE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990097,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989594,0)
endfunction
function AK takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990352 then
return false
endif
return true
endfunction
function DK takes nothing returns boolean
if not AK() then
return false
endif
return true
endfunction
function DP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989815,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989816,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989825,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989814,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989830,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651844,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989833,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989832,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989835,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989836,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651848,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651846,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989828,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989826,0)
endfunction
function AQ takes nothing returns boolean
if GetResearched()!=1378889798 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889798,true)!=2 then
return false
endif
return true
endfunction
function DQ takes nothing returns boolean
if not AQ() then
return false
endif
return true
endfunction
function E1 takes nothing returns boolean
set oc=CreateForce()
set Oc=CreateForce()
set lc=CreateForce()
set bc=CreateForce()
set yc[0]=oc
set yc[1]=Oc
set yc[2]=lc
set yc[3]=bc
set pc[0]=62
set ec[0]=194
set qc[0]=255
set pc[1]=255
set ec[1]=238
set qc[1]=0
set pc[2]=0
set ec[2]=201
set qc[2]=10
set pc[3]=219
set ec[3]=0
set qc[3]=201
return true
endfunction
function ED takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990603,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990604,0)
endfunction
function EF takes nothing returns nothing
local location hF
local location FF
local real kF
local real jF
local rect xF
local group vF
local group mF
local code QF
local boolean WF
set u=GetUnitLoc(GetSpellAbilityUnit())
set hF=u
set S=Location(GetLocationX(hF)+0.00,GetLocationY(hF)+200.00)
set FF=u
set kF=GetLocationX(FF)
set jF=GetLocationY(FF)
set o=Rect(kF-140,jF-150,kF+140,jF+150)
set xF=o
set vF=CreateGroup()
call GroupEnumUnitsInRect(vF,xF,null)
call DestroyBoolExpr(null)
set l=vF
set mF=l
set QF=op
set WF=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(mF,QF)
if WF then
call DestroyGroup(mF)
endif
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747989079,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"stand")
call DestroyGroup(l)
call RemoveLocation(S)
call RemoveLocation(u)
set hF=null
set FF=null
set xF=null
set vF=null
set mF=null
endfunction
function EK takes nothing returns nothing
call UnitAddAbility(GetConstructedStructure(),1093677896)
endfunction
function WP takes nothing returns boolean
if GetResearched()!=1378890038 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890038,true)!=1 then
return false
endif
return true
endfunction
function EP takes nothing returns boolean
if not WP() then
return false
endif
return true
endfunction
function EQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988551,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989081,0)
endfunction
function hOw takes string GOw returns integer
local integer gOw
set Ab[Pb]=GOw
set Pb=Pb+1
set Ab[Pb]="when calling alloc_HashMap in HashMap, line 7"
set Pb=Pb+1
if AO==0 then
if DO<32768 then
set DO=DO+1
set gOw=DO
set HO[gOw]=726
else
call W1("Out of memory: Could not create HashMap.","when calling error in HashMap, line 8")
set gOw=0
endif
else
set AO=AO-1
set gOw=PO[AO]
set HO[gOw]=726
endif
set Pb=Pb-1
set Ob[gOw]=0
set Pb=Pb-1
return gOw
endfunction
function ncw takes integer pcw,timer ecw,real qcw,string acw returns nothing
set Ab[Pb]=acw
set Pb=Pb+1
call Yww(ecw,pcw,"when calling setData in ClosureTimers, line 113")
call TimerStart(ecw,qcw,false,Cf)
set rb[pcw]=ecw
set Pb=Pb-1
endfunction
function waw takes integer Vqw,timer Bqw,real Nqw,string Mqw returns nothing
set Ab[Pb]=Mqw
set Pb=Pb+1
if GO[Vqw]==0 then
if Vqw==0 then
call W1("Nullpointer exception when calling CallbackSingle.start","when calling error in ClosureTimers, line 111")
else
call W1("Called CallbackSingle.start on invalid object.","when calling error in ClosureTimers, line 111")
endif
endif
call ncw(Vqw,Bqw,Nqw,"when calling start in ClosureTimers, line 111")
set Pb=Pb-1
endfunction
function JV takes string AV returns boolean
local integer DV
local timer HV
set Ab[Pb]=AV
set Pb=Pb+1
set vS=ConvertPlayerEvent(96)
set US=hOw("when calling new_HashMap in ClosureEvents, line 99")
set IS=hOw("when calling new_HashMap in ClosureEvents, line 100")
set mS=CreateTrigger()
set QS=CreateTrigger()
set WS=CreateTrigger()
call TriggerAddCondition(Do,Condition(jf))
call TriggerAddCondition(Ho,Condition(xf))
set Ab[Pb]="when calling alloc_ClosureEvents_CallbackSingle_line290 in ClosureEvents, line 290"
set Pb=Pb+1
if TO==0 then
if YO<32768 then
set YO=YO+1
set DV=YO
set GO[DV]=640
else
call W1("Out of memory: Could not create ClosureEvents_CallbackSingle_line290.","when calling error in ClosureEvents, line 290")
set DV=0
endif
else
set TO=TO-1
set DV=RO[TO]
set GO[DV]=640
endif
set Pb=Pb-1
set Ab[Pb]="when calling nullTimer in ClosureEvents, line 290"
set Pb=Pb+1
set Ab[Pb]="when calling doAfter in ClosureTimers, line 33"
set Pb=Pb+1
set HV=mww("when calling getTimer in ClosureTimers, line 27")
set Ab[Pb]="when calling doAfter in ClosureTimers, line 27"
set Pb=Pb+1
call waw(DV,HV,0.,"when calling start in ClosureTimers, line 16")
set Pb=Pb-1
set Pb=Pb-1-1-1
set HV=null
return true
endfunction
function ERw takes nothing returns boolean
set Pb=0
return JV("ClosureEvents, line 1")
endfunction
function Eg takes nothing returns nothing
local location hg
local location Fg
local real kg
local real jg
local rect xg
local group vg
local group mg
local code Qg
local boolean Wg
set u=GetUnitLoc(GetSpellAbilityUnit())
set hg=u
set c=Location(GetLocationX(hg)+200.00,GetLocationY(hg)+0.00)
set Fg=u
set kg=GetLocationX(Fg)
set jg=GetLocationY(Fg)
set O=Rect(kg-150,jg-140,kg+150,jg+140)
set xg=O
set vg=CreateGroup()
call GroupEnumUnitsInRect(vg,xg,null)
call DestroyBoolExpr(null)
set l=vg
set mg=l
set Qg=Hy
set Wg=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(mg,Qg)
if Wg then
call DestroyGroup(mg)
endif
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747988825,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"stand")
call DestroyGroup(l)
call RemoveLocation(c)
call RemoveLocation(u)
set hg=null
set Fg=null
set xg=null
set vg=null
set mg=null
endfunction
function Eh takes nothing returns nothing
local location hh
local location Fh
local real kh
local real jh
local rect xh
local group vh
local group mh
local code Qh
local boolean Wh
set u=GetUnitLoc(GetSpellAbilityUnit())
set hh=u
set S=Location(GetLocationX(hh)+0.00,GetLocationY(hh)+200.00)
set Fh=u
set kh=GetLocationX(Fh)
set jh=GetLocationY(Fh)
set o=Rect(kh-140,jh-150,kh+140,jh+150)
set xh=o
set vh=CreateGroup()
call GroupEnumUnitsInRect(vh,xh,null)
call DestroyBoolExpr(null)
set l=vh
set mh=l
set Qh=My
set Wh=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(mh,Qh)
if Wh then
call DestroyGroup(mh)
endif
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747990090,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"stand")
call DestroyGroup(l)
call RemoveLocation(S)
call RemoveLocation(u)
set hh=null
set Fh=null
set xh=null
set vh=null
set mh=null
endfunction
function hD takes nothing returns boolean
if GetResearched()!=1378890054 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890054,true)!=1 then
return false
endif
return true
endfunction
function FD takes nothing returns boolean
if not hD() then
return false
endif
return true
endfunction
function hK takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990356 then
return false
endif
return true
endfunction
function FK takes nothing returns boolean
if not hK() then
return false
endif
return true
endfunction
function hQ takes nothing returns boolean
if GetResearched()!=1378889796 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889796,true)!=2 then
return false
endif
return true
endfunction
function FQ takes nothing returns boolean
if not hQ() then
return false
endif
return true
endfunction
function FRw takes nothing returns boolean
set Pb=0
set Ab[Pb]="RegisterEvents, line 1"
set Pb=Pb+1
set qo=hOw("when calling new_HashMap in RegisterEvents, line 55")
call q0w(EVENT_PLAYER_UNIT_SPELL_EFFECT,null,uR,null)
set Pb=Pb-1
return true
endfunction
function Faw takes integer Yaw,integer Gaw,string gaw returns boolean
local boolean haw
set Ab[Pb]=gaw
set Pb=Pb+1
if HO[Yaw]==0 then
if Yaw==0 then
call W1("Nullpointer exception when calling HashMap.has","when calling error in HashMap, line 13")
else
call W1("Called HashMap.has on invalid object.","when calling error in HashMap, line 13")
endif
endif
set Ab[Pb]="when calling has in HashMap, line 13"
set Pb=Pb+1
set Ab[Pb]="when calling hasInt in HashMap, line 14"
set Pb=Pb+1
if HO[Yaw]==0 then
if Yaw==0 then
call W1("Nullpointer exception when calling Table.hasInt","when calling error in Table, line 9")
else
call W1("Called Table.hasInt on invalid object.","when calling error in Table, line 9")
endif
endif
set haw=HaveSavedInteger(Zo,Yaw,Gaw)
set Pb=Pb-1-1-1
return haw
endfunction
function Gqw takes integer Rqw,unit Tqw,string Yqw returns nothing
set Ab[Pb]=Yqw
set Pb=Pb+1
if xO[Rqw]==0 then
if Rqw==0 then
call W1("Nullpointer exception when calling OnCastListener.fire","when calling error in ClosureEvents, line 56")
else
call W1("Called OnCastListener.fire on invalid object.","when calling error in ClosureEvents, line 56")
endif
endif
set Pb=Pb-1
endfunction
function Uaw takes integer Qaw,integer Waw,string Eaw returns integer
local integer Zaw
set Ab[Pb]=Eaw
set Pb=Pb+1
if HO[Qaw]==0 then
if Qaw==0 then
call W1("Nullpointer exception when calling HashMap.get","when calling error in HashMap, line 23")
else
call W1("Called HashMap.get on invalid object.","when calling error in HashMap, line 23")
endif
endif
set Ab[Pb]="when calling get in HashMap, line 23"
set Pb=Pb+1
set Ab[Pb]="when calling loadInt in HashMap, line 24"
set Pb=Pb+1
if HO[Qaw]==0 then
if Qaw==0 then
call W1("Nullpointer exception when calling Table.loadInt","when calling error in Table, line 39")
else
call W1("Called Table.loadInt on invalid object.","when calling error in Table, line 39")
endif
endif
set Zaw=LoadInteger(Zo,Qaw,Waw)
set Pb=Pb-1-1-1
return Zaw
endfunction
function QB takes string kB returns nothing
local unit jB
local integer xB
local integer vB
local integer mB
set Ab[Pb]=kB
set Pb=Pb+1
set jB=GetTriggerUnit()
set xB=GetSpellAbilityId()
if Faw(IS,GetHandleId(jB),"when calling has in ClosureEvents, line 189") then
set vB=Uaw(IS,GetHandleId(jB),"when calling get in ClosureEvents, line 190")
loop
exitwhen vB==0
if wb[vB]==-1 or wb[vB]==xB then
call Gqw(vB,GetSpellAbilityUnit(),"when calling fire in ClosureEvents, line 193")
endif
set vB=Nl[vB]
endloop
endif
if Faw(US,xB,"when calling has in ClosureEvents, line 195") then
set mB=Uaw(US,xB,"when calling get in ClosureEvents, line 196")
loop
exitwhen mB==0
if ub[mB]==null or ub[mB]==jB then
call Gqw(mB,GetSpellAbilityUnit(),"when calling fire in ClosureEvents, line 199")
endif
set mB=Nl[mB]
endloop
endif
set Pb=Pb-1
set jB=null
endfunction
function FTw takes nothing returns nothing
set Pb=0
set Ab[Pb]="ClosureEvents, line 308"
set Pb=Pb+1
call QB("when calling onSpellEffect in ClosureEvents, line 308")
set Pb=Pb-1
endfunction
function Fv takes nothing returns nothing
local player qv=GetOwningPlayer(GetSpellTargetUnit())
local playerstate av=PLAYER_STATE_RESOURCE_LUMBER
local playerstate nv
local playerstate dv
local player fv
local force Rv
local location Tv
local real Yv
local real Gv
local player gv
local force hv
if av==PLAYER_STATE_RESOURCE_GOLD then
set nv=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(qv,nv,GetPlayerState(qv,nv)+500)
elseif av==PLAYER_STATE_RESOURCE_LUMBER then
set dv=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(qv,dv,GetPlayerState(qv,dv)+500)
endif
call SetPlayerState(qv,av,GetPlayerState(qv,av)+500)
call RemoveUnit(GetSpellAbilityUnit())
set fv=GetOwningPlayer(GetSpellTargetUnit())
set Rv=CreateForce()
call ForceAddPlayer(Rv,fv)
if IsPlayerInForce(GetLocalPlayer(),Rv) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_1232")
endif
set y=GetUnitLoc(GetSpellTargetUnit())
set gv=GetOwningPlayer(GetSpellTargetUnit())
set hv=CreateForce()
call ForceAddPlayer(hv,gv)
set Tv=y
set Yv=GetLocationX(Tv)
set Gv=GetLocationY(Tv)
if IsPlayerInForce(GetLocalPlayer(),hv) then
call PingMinimap(Yv,Gv,2.00)
endif
call RemoveLocation(y)
set qv=null
set av=null
set nv=null
set dv=null
set fv=null
set Rv=null
set Tv=null
set gv=null
set hv=null
endfunction
function G9 takes nothing returns boolean
local integer T9
local integer Y9
set so=GetLocalPlayer()
set T9=0
set Y9=bj_MAX_PLAYER_SLOTS-1
loop
exitwhen T9>Y9
set ro[T9]=Player(T9)
set T9=T9+1
endloop
return true
endfunction
function GE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651843,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651842,0)
endfunction
function GI takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989815,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989838,0)
endfunction
function FV takes integer gV,integer hV returns integer
if gV==1 then
if hV==0 then
return 1747989059
elseif hV==1 then
return 1747990351
elseif hV==2 then
return 1747989331
elseif hV==3 then
return 1747990353
else
return 1747989059
endif
elseif gV==2 then
if hV==0 then
return 1747989060
elseif hV==1 then
return 1747990352
elseif hV==2 then
return 1747990350
elseif hV==3 then
return 1747990354
else
return 1747989060
endif
elseif gV==3 then
if hV==0 then
return 1747988844
elseif hV==1 then
return 1747990356
elseif hV==2 then
return 1747989809
elseif hV==3 then
return 1747990355
else
return 1747988844
endif
elseif hV==0 then
return 1747989059
elseif hV==1 then
return 1747990351
elseif hV==2 then
return 1747989331
elseif hV==3 then
return 1747990353
else
return 1747989059
endif
endfunction
function GV takes integer YV returns integer
if YV==1747989059 then
return 1
elseif YV==1747989060 then
return 2
elseif YV==1747988844 then
return 3
elseif YV==1747990351 then
return 1
elseif YV==1747990352 then
return 2
elseif YV==1747990356 then
return 3
elseif YV==1747989331 then
return 1
elseif YV==1747990350 then
return 2
elseif YV==1747989809 then
return 3
elseif YV==1747990353 then
return 1
elseif YV==1747990354 then
return 2
elseif YV==1747990355 then
return 3
else
return 1
endif
endfunction
function ubw takes integer Nlw,integer Mlw returns boolean
local integer wbw=ab[Tb[Nlw]]
loop
exitwhen wbw==Tb[Nlw]
if eb[wbw]==Mlw then
return true
endif
set wbw=ab[wbw]
endloop
return false
endfunction
function Arw takes integer Grw,string grw returns nothing
local unit hrw
local player Frw
local integer krw
local integer jrw
local boolean xrw
local unit vrw
local integer mrw
local boolean Qrw
local real Wrw
local boolean Erw
local integer Zrw
local real Urw
local real Irw
local real Prw
set Ab[Pb]=grw
set Pb=Pb+1
set hrw=GetTriggerUnit()
set krw=No
set jrw=GetUnitTypeId(hrw)
set Ab[Pb]="when calling has in CastleCapture, line 11"
set Pb=Pb+1
if tl[krw]==0 then
if krw==0 then
call W1("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call W1("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set xrw=ubw(krw,jrw)
set Pb=Pb-1
if xrw then
if GetUnitStatePercent(hrw,UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)<=50.0 then
set Qrw=GetOwningPlayer(hrw)!=GetOwningPlayer(GetAttacker())
else
set Qrw=false
endif
if Qrw then
set Wrw=GetUnitX(hrw)
set Urw=GetUnitY(hrw)
set vrw=GetAttacker()
set Irw=Wrw-GetUnitX(vrw)
set Prw=Urw-GetUnitY(vrw)
set Erw=SquareRoot(Irw*Irw+Prw*Prw)<=300.0
else
set Erw=false
endif
if Erw then
set Frw=GetOwningPlayer(GetAttacker())
call SetUnitOwner(hrw,Frw,true)
if GetPlayerId(Frw)!=PLAYER_NEUTRAL_AGGRESSIVE then
set Zrw=GV(GetUnitTypeId(hrw))
set Grw=uo[GetPlayerId(Frw)]
set Ab[Pb]="when calling getForceId in CastleCapture, line 17"
set Pb=Pb+1
if ll[Grw]==0 then
if Grw==0 then
call W1("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 94")
else
call W1("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 94")
endif
endif
set mrw=mb[Grw]
set Pb=Pb-1
call ReplaceUnitBJ(hrw,FV(Zrw,mrw),bj_UNIT_STATE_METHOD_RELATIVE)
endif
call SetUnitState(hrw,UNIT_STATE_LIFE,GetUnitState(hrw,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,60.0)*0.01)
call SetUnitState(hrw,UNIT_STATE_MANA,GetUnitState(hrw,UNIT_STATE_MAX_MANA)*RMaxBJ(0.,0.0)*0.01)
call UnitAddAbility(hrw,1093677896)
endif
endif
set Pb=Pb-1
set hrw=null
set Frw=null
set vrw=null
endfunction
function Alw takes integer Elw,integer Zlw,integer Ulw,string Ilw returns integer
local integer Plw
set Ab[Pb]=Ilw
set Pb=Pb+1
set Ab[Pb]="when calling alloc_LLEntry in LinkedList, line 401"
set Pb=Pb+1
if XO==0 then
if CO<32768 then
set CO=CO+1
set Plw=CO
set VO[Plw]=697
else
call W1("Out of memory: Could not create LLEntry.","when calling error in LinkedList, line 396")
set Plw=0
endif
else
set XO=XO-1
set Plw=LO[XO]
set VO[Plw]=697
endif
set Pb=Pb-1
set eb[Plw]=Elw
set qb[Plw]=Zlw
set ab[Plw]=Ulw
set Pb=Pb-1
return Plw
endfunction
function Obw takes string cbw returns integer
local integer obw
set Ab[Pb]=cbw
set Pb=Pb+1
set Ab[Pb]="when calling alloc_LinkedList in LinkedList, line 31"
set Pb=Pb+1
if rl==0 then
if sl<32768 then
set sl=sl+1
set obw=sl
set tl[obw]=701
else
call W1("Out of memory: Could not create LinkedList.","when calling error in LinkedList, line 17")
set obw=0
endif
else
set rl=rl-1
set obw=ul[rl]
set tl[obw]=701
endif
set Pb=Pb-1
set Ab[Pb]="when calling construct_LinkedList2 in LinkedList, line 31"
set Pb=Pb+1
set Tb[obw]=Alw(0,0,0,"when calling new_LLEntry in LinkedList, line 18")
set Yb[obw]=0
set ab[Tb[obw]]=Tb[obw]
set qb[Tb[obw]]=Tb[obw]
set Pb=Pb-1-1
return obw
endfunction
function onw takes integer unw,integer rnw,string snw returns integer
local integer tnw
local integer inw
local integer Snw
local integer cnw
set Ab[Pb]=snw
set Pb=Pb+1
if tl[unw]==0 then
if unw==0 then
call W1("Nullpointer exception when calling LinkedList.get","when calling error in LinkedList, line 50")
else
call W1("Called LinkedList.get on invalid object.","when calling error in LinkedList, line 50")
endif
endif
set Ab[Pb]="when calling get in LinkedList, line 50"
set Pb=Pb+1
set Ab[Pb]="when calling getEntry in LinkedList, line 51"
set Pb=Pb+1
if tl[unw]==0 then
if unw==0 then
call W1("Nullpointer exception when calling LinkedList.getEntry","when calling error in LinkedList, line 366")
else
call W1("Called LinkedList.getEntry on invalid object.","when calling error in LinkedList, line 366")
endif
endif
set inw=Tb[unw]
set Snw=0
set cnw=rnw
loop
exitwhen Snw>cnw
set inw=ab[inw]
set Snw=Snw+1
endloop
set Pb=Pb-1
set tnw=eb[inw]
set Pb=Pb-1-1
return tnw
endfunction
function g2 takes real G2 returns real
if G2>0. then
return 1.
elseif G2<0. then
return -1.
else
return 0.
endif
endfunction
function v2 takes real h2,real F2,real k2,real j2,real x2 returns real
set k2=GetRandomReal(k2,j2)
return (h2+F2)/2.+g2(k2)*Pow(2.718281828,-(Pow(k2,2.)/2.*x2))/SquareRoot(6.283185482*x2)*((F2-h2)/2.)
endfunction
function lSw takes integer Liw,unit Xiw,string Ciw,integer Viw,integer Biw,string Niw returns nothing
local real Miw
local real wSw
local unit uSw
local player rSw
local real sSw
local integer tSw
local timer iSw
local integer SSw
local timer cSw
local real oSw
local real OSw
set Ab[Pb]=Niw
set Pb=Pb+1
set Il[Liw]=0
set Pl[Liw]=0.
set Al[Liw]=Obw("when calling new_LinkedList in City, line 103")
set Ul[Liw]=1.0
set gl[Liw]=Xiw
set uSw=gl[Liw]
set oSw=GetUnitX(uSw)
set OSw=GetUnitY(uSw)
set xl[Liw]=oSw
set vl[Liw]=OSw
set hl[Liw]=Ciw
set kl[Liw]=Viw
set rSw=GetOwningPlayer(gl[Liw])
set jl[Liw]=GetPlayerId(rSw)
set hl[Liw]=SubString(Ciw,0,24)
set Fl[Liw]=TS
set TS=TS+1
set Wl[Liw]=v2(GS[0],GS[1],-5.0,5.0,0.15)
set sSw=v2(onw(gS[Biw],0,"when calling get in City, line 121")*1.,onw(gS[Biw],1,"when calling get in City, line 121")*1.,-5.0,5.0,0.15)
set ml[Liw]=R2I(sSw)
set Zl[Liw]=0.
set Miw=2.5+GetRandomReal(2.5,5.0)
set Ab[Pb]="when calling alloc_City_City_CallbackPeriodic_line126 in City, line 126"
set Pb=Pb+1
if hO==0 then
if FO<32768 then
set FO=FO+1
set tSw=FO
set kO[tSw]=631
else
call W1("Out of memory: Could not create City_City_CallbackPeriodic_line126.","when calling error in City, line 126")
set tSw=0
endif
else
set hO=hO-1
set tSw=gO[hO]
set kO[tSw]=631
endif
set Pb=Pb-1
set Ll[tSw]=Liw
set Ab[Pb]="when calling doPeriodically in City, line 126"
set Pb=Pb+1
set iSw=mww("when calling getTimer in ClosureTimers, line 57")
set Ab[Pb]="when calling doPeriodically in ClosureTimers, line 57"
set Pb=Pb+1
call Dqw(tSw,iSw,Miw,"when calling start in ClosureTimers, line 45")
set Pb=Pb-1-1
set wSw=60+GetRandomReal(60,120.0)
set Ab[Pb]="when calling alloc_City_City_CallbackPeriodic_line142 in City, line 142"
set Pb=Pb+1
if hO==0 then
if FO<32768 then
set FO=FO+1
set SSw=FO
set kO[SSw]=632
else
call W1("Out of memory: Could not create City_City_CallbackPeriodic_line142.","when calling error in City, line 142")
set SSw=0
endif
else
set hO=hO-1
set SSw=gO[hO]
set kO[SSw]=632
endif
set Pb=Pb-1
set Xl[SSw]=Liw
set Ab[Pb]="when calling doPeriodically in City, line 142"
set Pb=Pb+1
set cSw=mww("when calling getTimer in ClosureTimers, line 57")
set Ab[Pb]="when calling doPeriodically in ClosureTimers, line 57"
set Pb=Pb+1
call Dqw(SSw,cSw,wSw,"when calling start in ClosureTimers, line 45")
set Pb=Pb-1-1-1
set uSw=null
set rSw=null
set iSw=null
set cSw=null
endfunction
function Kiw takes unit Iiw,string Piw,integer Aiw,integer Diw,string Hiw returns integer
local integer Jiw
set Ab[Pb]=Hiw
set Pb=Pb+1
set Ab[Pb]="when calling alloc_City in City, line 100"
set Pb=Pb+1
if pO==0 then
if eO<32768 then
set eO=eO+1
set Jiw=eO
set qO[Jiw]=653
else
call W1("Out of memory: Could not create City.","when calling error in City, line 70")
set Jiw=0
endif
else
set pO=pO-1
set Jiw=yO[pO]
set qO[Jiw]=653
endif
set Pb=Pb-1
call lSw(Jiw,Iiw,Piw,Aiw,Diw,"when calling construct_City in City, line 100")
set Pb=Pb-1
return Jiw
endfunction
function Brw takes integer Drw,string Hrw returns nothing
local unit Jrw
local integer Krw
local integer Lrw
local boolean Xrw
local integer Crw
local unit Vrw
set Ab[Pb]=Hrw
set Pb=Pb+1
set Jrw=GetConstructedStructure()
set Ab[Pb]="when calling isCity in CityBuilded, line 10"
set Pb=Pb+1
set Ab[Pb]="when calling isCity in UnitTools, line 5"
set Pb=Pb+1
set Krw=Mo
set Lrw=GetUnitTypeId(Jrw)
set Ab[Pb]="when calling has in City, line 423"
set Pb=Pb+1
if tl[Krw]==0 then
if Krw==0 then
call W1("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call W1("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set Xrw=ubw(Krw,Lrw)
set Pb=Pb-1-1-1
if Xrw then
set Vrw=GetConstructedStructure()
set Crw=uo[GetPlayerId(GetOwningPlayer(GetConstructedStructure()))]
set Ab[Pb]="when calling getForceId in CityBuilded, line 11"
set Pb=Pb+1
if ll[Crw]==0 then
if Crw==0 then
call W1("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 94")
else
call W1("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 94")
endif
endif
set Drw=mb[Crw]
set Pb=Pb-1
set xS[TS]=Kiw(Vrw,"New",Drw,1,"when calling new_City in CityBuilded, line 11")
endif
set Pb=Pb-1
set Jrw=null
set Vrw=null
endfunction
function Caw takes integer Law,string Xaw returns nothing
set Ab[Pb]=Xaw
set Pb=Pb+1
if wl[Law]==0 then
if Law==0 then
call W1("Nullpointer exception when calling LLIterator.LLIterator","when calling error in LinkedList, line 406")
else
call W1("Called LLIterator.LLIterator on invalid object.","when calling error in LinkedList, line 406")
endif
endif
set Ab[Pb]="when calling destroyLLIterator in LinkedList, line 406"
set Pb=Pb+1
set Ab[Pb]="when calling dealloc_LLIterator in LinkedList, line 406"
set Pb=Pb+1
if wl[Law]==0 then
call W1("Double free: object of type LLIterator","when calling error in LinkedList, line 406")
else
set BO[NO]=Law
set NO=NO+1
set wl[Law]=0
endif
set Pb=Pb-1-1-1
endfunction
function Taw takes integer naw,integer daw,string faw returns boolean
local integer Raw
set Ab[Pb]=faw
set Pb=Pb+1
if IO[naw]==0 then
if naw==0 then
call W1("Nullpointer exception when calling HashList.has","when calling error in HashList, line 87")
else
call W1("Called HashList.has on invalid object.","when calling error in HashList, line 87")
endif
endif
set Ab[Pb]="when calling has in HashList, line 87"
set Pb=Pb+1
set Ab[Pb]="when calling count in HashList, line 88"
set Pb=Pb+1
if IO[naw]==0 then
if naw==0 then
call W1("Nullpointer exception when calling HashList.count","when calling error in HashList, line 15")
else
call W1("Called HashList.count on invalid object.","when calling error in HashList, line 15")
endif
endif
set Raw=LoadInteger(Rc,naw,daw)
set Pb=Pb-1
set Pb=Pb-1-1
return Raw>0
endfunction
function YOw takes integer fOw,integer ROw,string TOw returns nothing
set Ab[Pb]=TOw
set Pb=Pb+1
if Faw(fOw,ROw,"when calling has in HashMap, line 28") then
set Ob[fOw]=Ob[fOw]-1
endif
set Ab[Pb]="when calling removeInt in HashMap, line 30"
set Pb=Pb+1
if HO[fOw]==0 then
if fOw==0 then
call W1("Nullpointer exception when calling Table.removeInt","when calling error in Table, line 24")
else
call W1("Called Table.removeInt on invalid object.","when calling error in Table, line 24")
endif
endif
call RemoveSavedInteger(Zo,fOw,ROw)
set Pb=Pb-1-1
endfunction
function SOw takes integer uOw,integer rOw,string sOw returns nothing
local hashtable tOw
local integer iOw
set Ab[Pb]=sOw
set Pb=Pb+1
set tOw=Rc
set Ab[Pb]="when calling count in HashList, line 22"
set Pb=Pb+1
if IO[uOw]==0 then
if uOw==0 then
call W1("Nullpointer exception when calling HashList.count","when calling error in HashList, line 15")
else
call W1("Called HashList.count on invalid object.","when calling error in HashList, line 15")
endif
endif
set iOw=LoadInteger(Rc,uOw,rOw)
set Pb=Pb-1
call SaveInteger(tOw,uOw,rOw,iOw-1)
set Pb=Pb-1
set tOw=null
endfunction
function pOw takes integer cOw,integer oOw,string OOw returns nothing
local integer lOw
local integer bOw
local integer yOw
set Ab[Pb]=OOw
set Pb=Pb+1
set yOw=LoadInteger(fc,cOw,oOw)
set Ab[Pb]="when calling decrOccurences in HashList, line 54"
set Pb=Pb+1
if IO[cOw]==0 then
if cOw==0 then
call W1("Nullpointer exception when calling HashList.decrOccurences","when calling error in HashList, line 21")
else
call W1("Called HashList.decrOccurences on invalid object.","when calling error in HashList, line 21")
endif
endif
call SOw(cOw,yOw,"when calling decrOccurences in HashList, line 21")
set Pb=Pb-1
set lOw=oOw
set bOw=ob[cOw]
loop
exitwhen lOw>bOw
call SaveInteger(fc,cOw,lOw,LoadInteger(fc,cOw,lOw+1))
set lOw=lOw+1
endloop
set ob[cOw]=ob[cOw]-1
set Pb=Pb-1
endfunction
function NOw takes integer IOw,integer POw,string AOw returns nothing
local integer DOw
local integer HOw
local hashtable JOw
local integer KOw
local integer LOw
local hashtable XOw
local integer COw
local hashtable VOw
local integer BOw
set Ab[Pb]=AOw
set Pb=Pb+1
set JOw=Tc
set Ab[Pb]="when calling get in HashSet, line 22"
set Pb=Pb+1
if IO[IOw]==0 then
if IOw==0 then
call W1("Nullpointer exception when calling HashList.get","when calling error in HashList, line 79")
else
call W1("Called HashList.get on invalid object.","when calling error in HashList, line 79")
endif
endif
set KOw=LoadInteger(fc,IOw,POw)
set Pb=Pb-1
call RemoveSavedInteger(JOw,IOw,KOw)
set DOw=POw+1
set Ab[Pb]="when calling size in HashSet, line 23"
set Pb=Pb+1
if IO[IOw]==0 then
if IOw==0 then
call W1("Nullpointer exception when calling HashList.size","when calling error in HashList, line 67")
else
call W1("Called HashList.size on invalid object.","when calling error in HashList, line 67")
endif
endif
set LOw=ob[IOw]
set Pb=Pb-1
set HOw=LOw
loop
exitwhen DOw>HOw
set XOw=Tc
set AOw="when calling get in HashSet, line 24"
set Ab[Pb]="when calling get in HashSet, line 24"
set Pb=Pb+1
if IO[IOw]==0 then
if IOw==0 then
call W1("Nullpointer exception when calling HashList.get","when calling error in HashList, line 79")
else
call W1("Called HashList.get on invalid object.","when calling error in HashList, line 79")
endif
endif
set COw=LoadInteger(fc,IOw,DOw)
set Pb=Pb-1
set VOw=Tc
set Ab[Pb]="when calling get in HashSet, line 24"
set Pb=Pb+1
if IO[IOw]==0 then
if IOw==0 then
call W1("Nullpointer exception when calling HashList.get","when calling error in HashList, line 79")
else
call W1("Called HashList.get on invalid object.","when calling error in HashList, line 79")
endif
endif
set BOw=LoadInteger(fc,IOw,DOw)
set Pb=Pb-1
call SaveInteger(XOw,IOw,COw,LoadInteger(VOw,IOw,BOw)-1)
set DOw=DOw+1
endloop
call pOw(IOw,POw,"when calling removeAt in HashSet, line 25")
set Pb=Pb-1
set JOw=null
set XOw=null
set VOw=null
endfunction
function oaw takes integer iaw,integer Saw,string caw returns nothing
set Ab[Pb]=caw
set Pb=Pb+1
if IO[iaw]==0 then
if iaw==0 then
call W1("Nullpointer exception when calling HashList.removeAt","when calling error in HashList, line 53")
else
call W1("Called HashList.removeAt on invalid object.","when calling error in HashList, line 53")
endif
endif
if IO[iaw]<=690 then
call pOw(iaw,Saw,"when calling removeAt in HashList, line 53")
else
call NOw(iaw,Saw,"when calling removeAt in HashList, line 53")
endif
set Pb=Pb-1
endfunction
function tlw takes integer MOw,integer wlw,string ulw returns nothing
local integer rlw
local integer slw
set Ab[Pb]=ulw
set Pb=Pb+1
set Ab[Pb]="when calling count in HashSet, line 17"
set Pb=Pb+1
if IO[MOw]==0 then
if MOw==0 then
call W1("Nullpointer exception when calling HashList.count","when calling error in HashList, line 15")
else
call W1("Called HashList.count on invalid object.","when calling error in HashList, line 15")
endif
endif
set rlw=LoadInteger(Rc,MOw,wlw)
set Pb=Pb-1
if rlw>0 then
set slw=LoadInteger(Tc,MOw,wlw)
set Ab[Pb]="when calling removeAt in HashSet, line 18"
set Pb=Pb+1
if IO[MOw]==0 then
if MOw==0 then
call W1("Nullpointer exception when calling HashSet.removeAt","when calling error in HashSet, line 21")
else
call W1("Called HashSet.removeAt on invalid object.","when calling error in HashSet, line 21")
endif
endif
call NOw(MOw,slw,"when calling removeAt in HashSet, line 21")
set Pb=Pb-1
endif
set Pb=Pb-1
endfunction
function aaw takes integer Oaw,integer law,string baw returns nothing
local integer yaw
local integer paw
local integer eaw
local integer qaw
set Ab[Pb]=baw
set Pb=Pb+1
if IO[Oaw]==0 then
if Oaw==0 then
call W1("Nullpointer exception when calling HashList.remove","when calling error in HashList, line 60")
else
call W1("Called HashList.remove on invalid object.","when calling error in HashList, line 60")
endif
endif
if IO[Oaw]<=690 then
set yaw=Oaw
set paw=law
set Ab[Pb]="when calling remove in HashList, line 60"
set Pb=Pb+1
set eaw=0
set qaw=ob[Oaw]-1
loop
exitwhen eaw>qaw
if paw==LoadInteger(fc,yaw,eaw) then
call oaw(yaw,eaw,"when calling removeAt in HashList, line 63")
exitwhen true
endif
set eaw=eaw+1
endloop
set Pb=Pb-1
else
call tlw(Oaw,law,"when calling remove in HashList, line 60")
endif
set Pb=Pb-1
endfunction
function UOw takes integer QOw,integer WOw,string EOw returns nothing
local boolean ZOw
set Ab[Pb]=EOw
set Pb=Pb+1
call YOw(QOw,WOw,"when calling remove in HashMap, line 66")
set Ab[Pb]="when calling hasKey in HashMap, line 67"
set Pb=Pb+1
if HO[QOw]==0 then
if QOw==0 then
call W1("Nullpointer exception when calling IterableMap.hasKey","when calling error in HashMap, line 87")
else
call W1("Called IterableMap.hasKey on invalid object.","when calling error in HashMap, line 87")
endif
endif
set Ab[Pb]="when calling hasKey in HashMap, line 87"
set Pb=Pb+1
set ZOw=Taw(lb[QOw],WOw,"when calling has in HashMap, line 88")
set Pb=Pb-1-1
if ZOw then
call aaw(lb[QOw],WOw,"when calling remove in HashMap, line 68")
endif
set Pb=Pb-1
endfunction
function Daw takes integer Iaw,integer Paw,string Aaw returns nothing
set Ab[Pb]=Aaw
set Pb=Pb+1
if HO[Iaw]==0 then
if Iaw==0 then
call W1("Nullpointer exception when calling HashMap.remove","when calling error in HashMap, line 27")
else
call W1("Called HashMap.remove on invalid object.","when calling error in HashMap, line 27")
endif
endif
if HO[Iaw]<=726 then
call YOw(Iaw,Paw,"when calling remove in HashMap, line 27")
else
call UOw(Iaw,Paw,"when calling remove in HashMap, line 27")
endif
set Pb=Pb-1
endfunction
function wnw takes integer Vaw,string Baw returns nothing
local integer Naw
local integer Maw
set Ab[Pb]=Baw
set Pb=Pb+1
if wl[Vaw]==0 then
if Vaw==0 then
call W1("Nullpointer exception when calling LLIterator.reset","when calling error in LinkedList, line 421")
else
call W1("Called LLIterator.reset on invalid object.","when calling error in LinkedList, line 421")
endif
endif
set Ab[Pb]="when calling reset in LinkedList, line 421"
set Pb=Pb+1
set Naw=fb[Vaw]
set Ab[Pb]="when calling getDummy in LinkedList, line 422"
set Pb=Pb+1
if tl[Naw]==0 then
if Naw==0 then
call W1("Nullpointer exception when calling LinkedList.getDummy","when calling error in LinkedList, line 362")
else
call W1("Called LinkedList.getDummy on invalid object.","when calling error in LinkedList, line 362")
endif
endif
set Maw=Tb[Naw]
set Pb=Pb-1
set nb[Vaw]=Maw
set db[Vaw]=nb[Vaw]
set Pb=Pb-1-1
endfunction
function Klw takes integer Dlw,string Hlw returns integer
local integer Jlw
set Ab[Pb]=Hlw
set Pb=Pb+1
set Ab[Pb]="when calling alloc_LLIterator in LinkedList, line 412"
set Pb=Pb+1
if NO==0 then
if MO<32768 then
set MO=MO+1
set Jlw=MO
set wl[Jlw]=698
else
call W1("Out of memory: Could not create LLIterator.","when calling error in LinkedList, line 406")
set Jlw=0
endif
else
set NO=NO-1
set Jlw=BO[NO]
set wl[Jlw]=698
endif
set Pb=Pb-1
set Ab[Pb]="when calling construct_LLIterator in LinkedList, line 412"
set Pb=Pb+1
set Rb[Jlw]=true
set fb[Jlw]=Dlw
call wnw(Jlw,"when calling reset in LinkedList, line 414")
set Pb=Pb-1-1
return Jlw
endfunction
function uww takes integer Cww,string Vww returns unit
local integer Bww
local fogstate Nww
local integer Mww
local unit www
set Ab[Pb]=Vww
set Pb=Pb+1
set Bww=Ao
set Nww=ConvertFogState(Cww)
set Ab[Pb]="when calling saveFogState in TypeCasting, line 52"
set Pb=Pb+1
if HO[Bww]==0 then
if Bww==0 then
call W1("Nullpointer exception when calling Table.saveFogState","when calling error in Table, line 168")
else
call W1("Called Table.saveFogState on invalid object.","when calling error in Table, line 168")
endif
endif
call SaveFogStateHandle(Zo,Bww,0,Nww)
set Pb=Pb-1
set Mww=Ao
set Ab[Pb]="when calling loadUnit in TypeCasting, line 53"
set Pb=Pb+1
if HO[Mww]==0 then
if Mww==0 then
call W1("Nullpointer exception when calling Table.loadUnit","when calling error in Table, line 75")
else
call W1("Called Table.loadUnit on invalid object.","when calling error in Table, line 75")
endif
endif
set www=LoadUnitHandle(Zo,Mww,0)
set Pb=Pb-1-1
set iR=www
set Nww=null
set www=null
return iR
endfunction
function Dbw takes integer kbw,string jbw returns nothing
local integer xbw
local real vbw
local real mbw
local integer Qbw
local unit Wbw
local integer Ebw
local integer Zbw
local boolean Ubw
local integer Ibw
local integer Pbw
local timer Abw
set Ab[Pb]=jbw
set Pb=Pb+1
set Ebw=Ic
set Zbw=GetUnitTypeId(GetOrderedUnit())
set Ab[Pb]="when calling has in MassControl, line 33"
set Pb=Pb+1
if tl[Ebw]==0 then
if Ebw==0 then
call W1("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call W1("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set Ubw=ubw(Ebw,Zbw)
set Pb=Pb-1
if Ubw then
if Faw(Zc,GetHandleId(GetOrderedUnit()),"when calling has in MassControl, line 34") then
set xbw=Uaw(Zc,GetHandleId(GetOrderedUnit()),"when calling get in MassControl, line 35")
set kbw=GetIssuedOrderId()
set vbw=GetOrderPointX()
set mbw=GetOrderPointY()
set Ab[Pb]="when calling iterator in MassControl, line 38"
set Pb=Pb+1
set Ibw=Klw(xbw,"when calling new_LLIterator in LinkedList, line 165")
set Pb=Pb-1
set Qbw=Ibw
loop
exitwhen ab[db[Qbw]]==nb[Qbw]
set db[Qbw]=ab[db[Qbw]]
set Wbw=uww(eb[db[Qbw]],"when calling unitFromIndex in MassControl, line 38")
set Ab[Pb]="when calling alloc_MassControl_CallbackSingle_line39 in MassControl, line 39"
set Pb=Pb+1
if TO==0 then
if YO<32768 then
set YO=YO+1
set Pbw=YO
set GO[Pbw]=647
else
call W1("Out of memory: Could not create MassControl_CallbackSingle_line39.","when calling error in MassControl, line 39")
set Pbw=0
endif
else
set TO=TO-1
set Pbw=RO[TO]
set GO[Pbw]=647
endif
set Pb=Pb-1
set Fb[Pbw]=Wbw
set kb[Pbw]=kbw
set jb[Pbw]=vbw
set xb[Pbw]=mbw
set Ab[Pb]="when calling doAfter in MassControl, line 39"
set Pb=Pb+1
set Abw=mww("when calling getTimer in ClosureTimers, line 27")
set Ab[Pb]="when calling doAfter in ClosureTimers, line 27"
set Pb=Pb+1
call waw(Pbw,Abw,0.01,"when calling start in ClosureTimers, line 16")
set Pb=Pb-1-1
endloop
set Ab[Pb]="when calling close in MassControl, line 38"
set Pb=Pb+1
if Rb[Qbw]then
call Caw(Qbw,"when calling dispatch_LLIterator_destroyLLIterator in LinkedList, line 450")
endif
set Pb=Pb-1
call Daw(Zc,GetHandleId(GetOrderedUnit()),"when calling remove in MassControl, line 42")
endif
endif
set Pb=Pb-1
set Wbw=null
set Abw=null
endfunction
function Kew takes integer Uew,string Iew returns nothing
local unit Pew
local integer Aew
local player Dew
local integer Hew
local boolean Jew
set Ab[Pb]=Iew
set Pb=Pb+1
set Pew=GetDyingUnit()
set Aew=GetPlayerId(GetOwningPlayer(Pew))
set Dew=ro[Aew]
if GetPlayerSlotState(Dew)==PLAYER_SLOT_STATE_PLAYING then
set Jew=GetPlayerController(Dew)==MAP_CONTROL_USER
else
set Jew=false
endif
if Jew and(not IsUnitType(Pew,UNIT_TYPE_STRUCTURE)) then
set Hew=uo[Aew]
set Uew=GetUnitLevel(Pew)
set Ab[Pb]="when calling changeUpkeep in Upkeep, line 32"
set Pb=Pb+1
if ll[Hew]==0 then
if Hew==0 then
call W1("Nullpointer exception when calling PlayerStats.changeUpkeep","when calling error in PlayerStats, line 23")
else
call W1("Called PlayerStats.changeUpkeep on invalid object.","when calling error in PlayerStats, line 23")
endif
endif
set Zb[Hew]=Zb[Hew]+Uew
set Pb=Pb-1
endif
set Pb=Pb-1
set Pew=null
set Dew=null
endfunction
function i5 takes player w5,string u5 returns string
local integer r5
local integer s5
local integer t5
set Ab[Pb]=u5
set Pb=Pb+1
set s5=uo[GetPlayerId(w5)]
set Ab[Pb]="when calling getForceId in Messages, line 53"
set Pb=Pb+1
if ll[s5]==0 then
if s5==0 then
call W1("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 94")
else
call W1("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 94")
endif
endif
set t5=mb[s5]
set Pb=Pb-1
set r5=GetRandomInt(0,2)
if t5==0 then
set u5=vo[r5]
elseif t5==1 then
set u5=mo[r5]
elseif t5==2 then
set u5=Qo[r5]
elseif t5==3 then
set u5=Wo[r5]
else
set u5="Attention!"
endif
set Pb=Pb-1
return "|cffffa600"+u5+"|r"
endfunction
function Rlw takes integer plw,string elw returns nothing
local unit qlw
local player alw
local player nlw
local player dlw
local timer flw
set Ab[Pb]=elw
set Pb=Pb+1
set qlw=GetConstructingStructure()
if GetUnitTypeId(qlw)==1747988808 then
if Yc[GetPlayerId(GetOwningPlayer(qlw))]<3 then
set alw=GetOwningPlayer(qlw)
set nlw=GetOwningPlayer(qlw)
set Yc[GetPlayerId(alw)]=Yc[GetPlayerId(nlw)]+1
else
set dlw=GetOwningPlayer(qlw)
set Ab[Pb]="when calling attentionToPlayer in LimitEncampments, line 18"
set Pb=Pb+1
call DisplayTimedTextToPlayer(dlw,0.,0.,10.0,i5(dlw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(dlw,0.,0.,10.0,"You cannot build more than 3 encampments.")
set Pb=Pb-1
set Ab[Pb]="when calling alloc_LimitEncampments_CallbackSingle_line19 in LimitEncampments, line 19"
set Pb=Pb+1
if TO==0 then
if YO<32768 then
set YO=YO+1
set plw=YO
set GO[plw]=645
else
call W1("Out of memory: Could not create LimitEncampments_CallbackSingle_line19.","when calling error in LimitEncampments, line 19")
set plw=0
endif
else
set TO=TO-1
set plw=RO[TO]
set GO[plw]=645
endif
set Pb=Pb-1
set bb[plw]=qlw
set Ab[Pb]="when calling doAfter in LimitEncampments, line 19"
set Pb=Pb+1
set flw=mww("when calling getTimer in ClosureTimers, line 27")
set Ab[Pb]="when calling doAfter in ClosureTimers, line 27"
set Pb=Pb+1
call waw(plw,flw,0.01,"when calling start in ClosureTimers, line 16")
set Pb=Pb-1-1
endif
endif
set Pb=Pb-1
set qlw=null
set alw=null
set nlw=null
set dlw=null
set flw=null
endfunction
function Ryw takes integer nyw returns nothing
local boolean dyw
local boolean fyw
if GetIssuedOrderId()==852056 then
set dyw=GetUnitTypeId(GetOrderedUnit())!=1747988813
else
set dyw=false
endif
if dyw then
call UnitRemoveAbility(GetOrderedUnit(),1093677904)
endif
if GetIssuedOrderId()==851972 then
set fyw=GetUnitTypeId(GetOrderedUnit())!=1747988813
else
set fyw=false
endif
if fyw then
call UnitAddAbility(GetOrderedUnit(),1093677904)
endif
endfunction
function PV takes unit QV,string WV returns integer
local integer EV
local integer ZV
local integer UV
local unit IV
set Ab[Pb]=WV
set Pb=Pb+1
set EV=0
set ZV=TS-1
loop
exitwhen EV>ZV
set UV=xS[EV]
set WV="when calling getCityUnit in City, line 429"
set Ab[Pb]="when calling getCityUnit in City, line 429"
set Pb=Pb+1
if qO[UV]==0 then
if UV==0 then
call W1("Nullpointer exception when calling City.getCityUnit","when calling error in City, line 176")
else
call W1("Called City.getCityUnit on invalid object.","when calling error in City, line 176")
endif
endif
set IV=gl[UV]
set Pb=Pb-1
if IV==QV then
set Pb=Pb-1
set IV=null
return EV
endif
set EV=EV+1
endloop
set Pb=Pb-1
set IV=null
return -1
endfunction
function a5 takes string o5,force O5,string l5 returns nothing
local integer b5
local integer y5
local player p5
local player e5
local force q5
set Ab[Pb]=l5
set Pb=Pb+1
set b5=0
set y5=23
loop
exitwhen b5>y5
set e5=ro[b5]
set q5=CreateForce()
call ForceAddPlayer(q5,e5)
if q5==O5 then
set p5=ro[b5]
call DisplayTimedTextToPlayer(p5,0.,0.,10.0,i5(p5,"when calling getAttentionStringForPlayer in Messages, line 116"))
call DisplayTimedTextToPlayer(p5,0.,0.,10.0,o5)
endif
set b5=b5+1
endloop
set Pb=Pb-1
set p5=null
set e5=null
set q5=null
endfunction
function FN takes playercolor eN returns integer
local playercolor dN=eN
local integer fN=0
local integer RN=0
local integer TN=bj_MAX_PLAYER_SLOTS-1
local integer qN
local integer aN
local integer nN
local playercolor YN
local integer GN
local integer gN
local integer hN
loop
exitwhen RN>TN
if Oo[RN]==dN then
set fN=RN
exitwhen true
endif
set RN=RN+1
endloop
if fN<=23 then
set YN=eN
set GN=0
set gN=0
set hN=bj_MAX_PLAYER_SLOTS-1
loop
exitwhen gN>hN
if Oo[gN]==YN then
set GN=gN
exitwhen true
endif
set gN=gN+1
endloop
set qN=BS[GN]
set aN=NS[GN]
set nN=MS[GN]
else
set qN=0
set aN=0
set nN=0
endif
set Db=qN
set Hb=aN
set Jb=nN
set dN=null
set YN=null
return Db
endfunction
function pN takes player SN returns string
local integer lN=FN(GetPlayerColor(SN))
local integer bN=Hb
local integer yN=Jb
local integer cN=lN/16
local integer oN=bN/16
local integer ON=yN/16
return "|cff"+wc[cN]+wc[lN-cN*16]+wc[oN]+wc[bN-oN*16]+wc[ON]+wc[yN-ON*16]+GetPlayerName(SN)+"|r"
endfunction
function Oqw takes integer Sqw,integer cqw,string oqw returns nothing
set Ab[Pb]=oqw
set Pb=Pb+1
if qO[Sqw]==0 then
if Sqw==0 then
call W1("Nullpointer exception when calling City.getCityModifierOnAdd","when calling error in City, line 406")
else
call W1("Called City.getCityModifierOnAdd on invalid object.","when calling error in City, line 406")
endif
endif
set Ab[Pb]="when calling getCityModifierOnAdd in City, line 406"
set Pb=Pb+1
set Zl[Sqw]=Zl[Sqw]+al[Uaw(RS,cqw,"when calling get in City, line 407")]
set Ul[Sqw]=Ul[Sqw]+Tl[Uaw(RS,cqw,"when calling get in City, line 408")]
set Pb=Pb-1-1
endfunction
function gnw takes integer Rnw,integer Tnw,string Ynw returns nothing
local integer Gnw
set Ab[Pb]=Ynw
set Pb=Pb+1
if tl[Rnw]==0 then
if Rnw==0 then
call W1("Nullpointer exception when calling LinkedList.add","when calling error in LinkedList, line 37")
else
call W1("Called LinkedList.add on invalid object.","when calling error in LinkedList, line 37")
endif
endif
set Ab[Pb]="when calling add in LinkedList, line 37"
set Pb=Pb+1
set Gnw=Alw(Tnw,qb[Tb[Rnw]],Tb[Rnw],"when calling new_LLEntry in LinkedList, line 39")
set ab[qb[Tb[Rnw]]]=Gnw
set qb[Tb[Rnw]]=Gnw
set Yb[Rnw]=Yb[Rnw]+1
set Pb=Pb-1-1
endfunction
function btw takes integer stw,integer ttw,string itw returns boolean
local real Stw
local integer ctw
local boolean otw
local integer Otw
local timer ltw
set Ab[Pb]=itw
set Pb=Pb+1
set ctw=Al[stw]
set Ab[Pb]="when calling has in City, line 356"
set Pb=Pb+1
if tl[ctw]==0 then
if ctw==0 then
call W1("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call W1("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set otw=ubw(ctw,ttw)
set Pb=Pb-1
if otw then
set Pb=Pb-1
set ltw=null
return false
endif
call gnw(Al[stw],ttw,"when calling add in City, line 358")
call Oqw(stw,ttw,"when calling getCityModifierOnAdd in City, line 359")
set Stw=ql[Uaw(RS,ttw,"when calling get in City, line 361")]
set Ab[Pb]="when calling alloc_City_City_CallbackSingle_line361 in City, line 361"
set Pb=Pb+1
if TO==0 then
if YO<32768 then
set YO=YO+1
set Otw=YO
set GO[Otw]=639
else
call W1("Out of memory: Could not create City_City_CallbackSingle_line361.","when calling error in City, line 361")
set Otw=0
endif
else
set TO=TO-1
set Otw=RO[TO]
set GO[Otw]=639
endif
set Pb=Pb-1
set Jl[Otw]=stw
set Kl[Otw]=ttw
set Ab[Pb]="when calling doAfter in City, line 361"
set Pb=Pb+1
set ltw=mww("when calling getTimer in ClosureTimers, line 27")
set Ab[Pb]="when calling doAfter in ClosureTimers, line 27"
set Pb=Pb+1
call waw(Otw,ltw,Stw,"when calling start in ClosureTimers, line 16")
set Pb=Pb-1-1-1
set ltw=null
return true
endfunction
function htw takes integer Rtw,integer Ttw,string Ytw returns nothing
local integer Gtw
local boolean gtw
set Ab[Pb]=Ytw
set Pb=Pb+1
set Gtw=Mo
set Ab[Pb]="when calling has in City, line 183"
set Pb=Pb+1
if tl[Gtw]==0 then
if Gtw==0 then
call W1("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call W1("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set gtw=ubw(Gtw,Ttw)
set Pb=Pb-1
if not gtw then
set Pb=Pb-1
return
endif
set gl[Rtw]=ReplaceUnitBJ(gl[Rtw],Ttw,bj_UNIT_STATE_METHOD_RELATIVE)
set Pb=Pb-1
endfunction
function jV takes integer kV returns integer
if kV==1747988529 then
return 1
elseif kV==1747988530 then
return 2
elseif kV==1747988531 then
return 3
elseif kV==1747990326 then
return 1
elseif kV==1747990327 then
return 2
elseif kV==1747990328 then
return 3
elseif kV==1747990084 then
return 1
elseif kV==1747990087 then
return 2
elseif kV==1747990085 then
return 3
elseif kV==1747989590 then
return 1
elseif kV==1747989591 then
return 2
elseif kV==1747989592 then
return 3
else
return 1
endif
endfunction
function mV takes integer xV,integer vV returns integer
if xV==1 then
if vV==0 then
return 1747988529
elseif vV==1 then
return 1747990326
elseif vV==2 then
return 1747990084
elseif vV==3 then
return 1747989590
else
return 1747988529
endif
elseif xV==2 then
if vV==0 then
return 1747988530
elseif vV==1 then
return 1747990327
elseif vV==2 then
return 1747990087
elseif vV==3 then
return 1747989591
else
return 1747988530
endif
elseif xV==3 then
if vV==0 then
return 1747988531
elseif vV==1 then
return 1747990328
elseif vV==2 then
return 1747990085
elseif vV==3 then
return 1747989592
else
return 1747988531
endif
elseif vV==0 then
return 1747988529
elseif vV==1 then
return 1747990326
elseif vV==2 then
return 1747990084
elseif vV==3 then
return 1747989590
else
return 1747988529
endif
endfunction
function J8 takes multiboard W8,integer E8,integer Z8,string U8,real I8 returns nothing
local multiboarditem P8=MultiboardGetItem(W8,Z8,E8)
local string A8=U8
local string D8
local integer H8
set E8=R2I((R2I(I8/0.004)-StringLength(U8))*1./2)
set D8=""
set H8=0
set Z8=E8-1
loop
exitwhen H8>Z8
set D8=D8+" "
set H8=H8+1
endloop
if ModuloReal(E8,2)==1. then
set A8=" "+A8
endif
set A8=D8+A8
call MultiboardSetItemValue(P8,A8)
set P8=null
endfunction
function iqw takes integer Bew,string New returns string
local integer Mew
local integer wqw
local integer uqw
local integer rqw
local integer sqw
local integer tqw
set Ab[Pb]=New
set Pb=Pb+1
if qO[Bew]==0 then
if Bew==0 then
call W1("Nullpointer exception when calling City.getCityNameColored","when calling error in City, line 167")
else
call W1("Called City.getCityNameColored on invalid object.","when calling error in City, line 167")
endif
endif
set rqw=pc[kl[Bew]]
set sqw=ec[kl[Bew]]
set tqw=qc[kl[Bew]]
set Mew=rqw/16
set wqw=sqw/16
set uqw=tqw/16
set New="|cff"+wc[Mew]+wc[rqw-Mew*16]+wc[wqw]+wc[sqw-wqw*16]+wc[uqw]+wc[tqw-uqw*16]+hl[Bew]+"|r"
set Pb=Pb-1
return New
endfunction
function D0w takes integer R0w,string T0w returns nothing
local unit Y0w
local integer G0w
local integer g0w
local integer h0w
local integer F0w
local real k0w
local integer j0w
local unit x0w
local player v0w
local integer m0w
local player Q0w
local integer W0w
local integer E0w
local integer Z0w
local integer U0w
local integer I0w
local integer P0w
local boolean A0w
set Ab[Pb]=T0w
set Pb=Pb+1
if R0w<0 or R0w>=TS then
set Pb=Pb-1
set Y0w=null
set x0w=null
set v0w=null
set Q0w=null
return
endif
if xc-ao[R0w]<=60 then
set Pb=Pb-1
set Y0w=null
set x0w=null
set v0w=null
set Q0w=null
return
endif
set F0w=xS[R0w]
set Ab[Pb]="when calling getLastPublicOrder in Revolts, line 18"
set Pb=Pb+1
if qO[F0w]==0 then
if F0w==0 then
call W1("Nullpointer exception when calling City.getLastPublicOrder","when calling error in City, line 319")
else
call W1("Called City.getLastPublicOrder on invalid object.","when calling error in City, line 319")
endif
endif
set k0w=El[F0w]
set Pb=Pb-1
set j0w=xS[R0w]
set Ab[Pb]="when calling getCityUnit in Revolts, line 19"
set Pb=Pb+1
if qO[j0w]==0 then
if j0w==0 then
call W1("Nullpointer exception when calling City.getCityUnit","when calling error in City, line 176")
else
call W1("Called City.getCityUnit on invalid object.","when calling error in City, line 176")
endif
endif
set x0w=gl[j0w]
set Pb=Pb-1
set Y0w=x0w
set v0w=GetOwningPlayer(x0w)
if GetPlayerSlotState(v0w)==PLAYER_SLOT_STATE_PLAYING then
set A0w=GetPlayerController(v0w)==MAP_CONTROL_USER
else
set A0w=false
endif
if not A0w then
set Pb=Pb-1
set Y0w=null
set x0w=null
set v0w=null
set Q0w=null
return
endif
if k0w<50.0 then
set ao[R0w]=xc
set m0w=xS[R0w]
set Ab[Pb]="when calling addModifier in Revolts, line 24"
set Pb=Pb+1
if qO[m0w]==0 then
if m0w==0 then
call W1("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call W1("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call btw(m0w,1,"when calling addModifier in City, line 355")
set Pb=Pb-1
set T0w="A violent mob has appeared near the gates of "+iqw(xS[R0w],"when calling getCityNameColored in Revolts, line 25")+"!"
set Q0w=GetOwningPlayer(x0w)
set Ab[Pb]="when calling attentionToPlayer in Revolts, line 25"
set Pb=Pb+1
call DisplayTimedTextToPlayer(Q0w,0.,0.,10.0,i5(Q0w,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(Q0w,0.,0.,10.0,T0w)
set Pb=Pb-1
if k0w>=30.0 then
set W0w=wO[0]
set Ab[Pb]="when calling iterator in Revolts, line 28"
set Pb=Pb+1
set E0w=Klw(W0w,"when calling new_LLIterator in LinkedList, line 165")
set Pb=Pb-1
set G0w=E0w
loop
exitwhen ab[db[G0w]]==nb[G0w]
set db[G0w]=ab[db[G0w]]
call CreateUnit(ro[PLAYER_NEUTRAL_AGGRESSIVE],eb[db[G0w]],GetUnitX(Y0w),GetUnitY(Y0w),0.)
endloop
set Ab[Pb]="when calling close in Revolts, line 28"
set Pb=Pb+1
if Rb[G0w]then
call Caw(G0w,"when calling dispatch_LLIterator_destroyLLIterator in LinkedList, line 450")
endif
set Pb=Pb-1
elseif k0w>=15.0 then
set Z0w=wO[1]
set Ab[Pb]="when calling iterator in Revolts, line 32"
set Pb=Pb+1
set U0w=Klw(Z0w,"when calling new_LLIterator in LinkedList, line 165")
set Pb=Pb-1
set g0w=U0w
loop
exitwhen ab[db[g0w]]==nb[g0w]
set db[g0w]=ab[db[g0w]]
call CreateUnit(ro[PLAYER_NEUTRAL_AGGRESSIVE],eb[db[g0w]],GetUnitX(Y0w),GetUnitY(Y0w),0.)
endloop
set Ab[Pb]="when calling close in Revolts, line 32"
set Pb=Pb+1
if Rb[g0w]then
call Caw(g0w,"when calling dispatch_LLIterator_destroyLLIterator in LinkedList, line 450")
endif
set Pb=Pb-1
else
set I0w=wO[2]
set Ab[Pb]="when calling iterator in Revolts, line 36"
set Pb=Pb+1
set P0w=Klw(I0w,"when calling new_LLIterator in LinkedList, line 165")
set Pb=Pb-1
set h0w=P0w
loop
exitwhen ab[db[h0w]]==nb[h0w]
set db[h0w]=ab[db[h0w]]
call CreateUnit(ro[PLAYER_NEUTRAL_AGGRESSIVE],eb[db[h0w]],GetUnitX(Y0w),GetUnitY(Y0w),0.)
endloop
set Ab[Pb]="when calling close in Revolts, line 36"
set Pb=Pb+1
if Rb[h0w]then
call Caw(h0w,"when calling dispatch_LLIterator_destroyLLIterator in LinkedList, line 450")
endif
set Pb=Pb-1
endif
endif
set Pb=Pb-1
set Y0w=null
set x0w=null
set v0w=null
set Q0w=null
endfunction
function Fqw takes integer gqw,string hqw returns nothing
set Ab[Pb]=hqw
set Pb=Pb+1
if fO[gqw]==0 then
if gqw==0 then
call W1("Nullpointer exception when calling ForGroupCallback.ForGroupCallback","when calling error in ClosureForGroups, line 3")
else
call W1("Called ForGroupCallback.ForGroupCallback on invalid object.","when calling error in ClosureForGroups, line 3")
endif
endif
set Ab[Pb]="when calling destroyForGroupCallback in ClosureForGroups, line 3"
set Pb=Pb+1
set Ab[Pb]="when calling dealloc_ForGroupCallback in ClosureForGroups, line 3"
set Pb=Pb+1
if fO[gqw]==0 then
call W1("Double free: object of type ForGroupCallback","when calling error in ClosureForGroups, line 3")
else
set aO[nO]=gqw
set nO=nO+1
set fO[gqw]=0
endif
set Pb=Pb-1-1-1
endfunction
function MB takes real XB,real CB,real VB,integer BB,string NB returns nothing
set Ab[Pb]=NB
set Pb=Pb+1
set JS[KS]=BB
set KS=KS+1
set XS=0
set LS=2147483647
call GroupEnumUnitsInRange(HS,XB,CB,VB,CS)
set Ab[Pb]="when calling popCallback in ClosureForGroups, line 98"
set Pb=Pb+1
call GroupClear(HS)
set KS=KS-1
call Fqw(JS[KS],"when calling dispatch_ForGroupCallback_destroyForGroupCallback in ClosureForGroups, line 30")
set Pb=Pb-1-1
endfunction
function qiw takes integer Siw,string ciw returns real
local integer oiw
local integer Oiw
local boolean liw
local real biw
local real yiw
local real piw
local real eiw
set Ab[Pb]=ciw
set Pb=Pb+1
set El[Siw]=100.0-Wl[Siw]*1000.-SquareRoot(ml[Siw]*1.)/17.+Zl[Siw]-ml[Siw]*1./1000*kS[Il[Siw]]
set biw=xl[Siw]
set yiw=vl[Siw]
set Ab[Pb]="when calling alloc_City_City_ForGroupCallback_line300 in City, line 300"
set Pb=Pb+1
if nO==0 then
if dO<32768 then
set dO=dO+1
set oiw=dO
set fO[oiw]=682
else
call W1("Out of memory: Could not create City_City_ForGroupCallback_line300.","when calling error in City, line 300")
set oiw=0
endif
else
set nO=nO-1
set oiw=aO[nO]
set fO[oiw]=682
endif
set Pb=Pb-1
set Dl[oiw]=Siw
call MB(biw,yiw,500,oiw,"when calling forUnitsInRange in City, line 300")
set piw=xl[Siw]
set eiw=vl[Siw]
set Ab[Pb]="when calling alloc_City_City_ForGroupCallback_line304 in City, line 304"
set Pb=Pb+1
if nO==0 then
if dO<32768 then
set dO=dO+1
set Oiw=dO
set fO[Oiw]=683
else
call W1("Out of memory: Could not create City_City_ForGroupCallback_line304.","when calling error in City, line 304")
set Oiw=0
endif
else
set nO=nO-1
set Oiw=aO[nO]
set fO[Oiw]=683
endif
set Pb=Pb-1
set Hl[Oiw]=Siw
call MB(piw,eiw,1500.0,Oiw,"when calling forUnitsInRange in City, line 304")
if El[Siw]<0.0 then
set El[Siw]=0.0
endif
if El[Siw]>100.0 then
set El[Siw]=100.0
endif
if El[Siw]<50.0 then
set liw=GetRandomReal(0.0,1.0)<=0.01
else
set liw=false
endif
if liw then
call D0w(Fl[Siw],"when calling checkForRevolt in City, line 315")
endif
set Pb=Pb-1
return El[Siw]
endfunction
function Jsw takes integer Esw,string Zsw returns integer
local integer Usw
local real Isw
local real Psw
local real Asw
local real Dsw
local real Hsw
set Ab[Pb]=Zsw
set Pb=Pb+1
set Usw=0
set Usw=0+Uaw(OS,GetUnitTypeId(gl[Esw]),"when calling get in City, line 270")
set Hsw=ml[Esw]*1.
set Ab[Pb]="when calling countPublicOrder in City, line 282"
set Pb=Pb+1
if qO[Esw]==0 then
if Esw==0 then
call W1("Nullpointer exception when calling City.countPublicOrder","when calling error in City, line 295")
else
call W1("Called City.countPublicOrder on invalid object.","when calling error in City, line 295")
endif
endif
set Dsw=qiw(Esw,"when calling countPublicOrder in City, line 295")
set Pb=Pb-1
set Isw=Dsw/100.
set Psw=po
if 0.75>Psw then
set Asw=0.75
else
set Asw=Psw
endif
if Isw>Asw then
set Asw=Isw
endif
set Usw=Usw+R2I(SquareRoot(Hsw*Asw)/6.)
set Usw=R2I(Usw*Ul[Esw]*hS[Il[Esw]])
set Pb=Pb-1
return Usw
endfunction
function Msw takes integer Ksw,string Lsw returns string
local real Xsw
local integer Csw
local integer Vsw
local integer Bsw
local integer Nsw
set Ab[Pb]=Lsw
set Pb=Pb+1
set Ab[Pb]="when calling countPublicOrder in City, line 323"
set Pb=Pb+1
if qO[Ksw]==0 then
if Ksw==0 then
call W1("Nullpointer exception when calling City.countPublicOrder","when calling error in City, line 295")
else
call W1("Called City.countPublicOrder on invalid object.","when calling error in City, line 295")
endif
endif
set Xsw=qiw(Ksw,"when calling countPublicOrder in City, line 295")
set Pb=Pb-1
set Bsw=R2I(255.-Xsw/100.*255.)
set Nsw=R2I(Xsw/100.*255.)
set Csw=Bsw/16
set Vsw=Nsw/16
set Lsw=StringCase("|cff"+wc[Csw]+wc[Bsw-Csw*16]+wc[Vsw]+wc[Nsw-Vsw*16]+wc[0]+wc[0],false)+I2S(R2I(Xsw))+","+I2S(R2I(ModuloReal(R2I(Xsw*10.),10)))+"%|r"
set Pb=Pb-1
return Lsw
endfunction
function rtw takes integer wtw returns string
local string utw
if Fc then
return I2S(ml[wtw])
endif
if ml[wtw]<100000 then
set utw=I2S(R2I(ml[wtw]*1./1000))+","+I2S(R2I(ModuloReal(ml[wtw],1000)/100.))+"k"
else
set utw=I2S(R2I(ml[wtw]*1./1000))+"k"
endif
return utw
endfunction
function sww takes integer uww_2 returns string
local string rww="|cff15ff00+"
if g2(uww_2*1.)==-1. then
set rww="|cffff0000"
endif
return rww+I2S(uww_2)+"|r"
endfunction
function ypw takes integer Eyw,string Zyw returns nothing
local integer Uyw
local multiboard Iyw
local integer Pyw
local integer Ayw
local integer Dyw
local multiboard Hyw
local integer Jyw
local integer Kyw
local multiboard Lyw
local integer Xyw
local integer Cyw
local integer Vyw
local string Byw
local integer Nyw
local string Myw
local integer wpw
local string upw
local integer rpw
local string spw
local integer tpw
local integer ipw
local string Spw
local integer cpw
local integer opw
local integer Opw
local string lpw
local string bpw
set Ab[Pb]=Zyw
set Pb=Pb+1
if Eb[Eyw]==-1 then
set Pb=Pb-1
set Iyw=null
set Hyw=null
set Lyw=null
return
endif
set Uyw=GetPlayerId(Qb[Eyw])
call J8(Vc[Uyw],Xc[0],Xc[1],iqw(xS[Eb[Eyw]],"when calling getCityNameColored in PlayerStats, line 48"),0.40)
set Xyw=xS[Eb[Eyw]]
set Ab[Pb]="when calling countTax in PlayerStats, line 57"
set Pb=Pb+1
if qO[Xyw]==0 then
if Xyw==0 then
call W1("Nullpointer exception when calling City.countTax","when calling error in City, line 266")
else
call W1("Called City.countTax on invalid object.","when calling error in City, line 266")
endif
endif
set Cyw=Jsw(Xyw,"when calling countTax in City, line 266")
set Pb=Pb-1
set Vyw=xS[Eb[Eyw]]
set Ab[Pb]="when calling getTaxLevelString in PlayerStats, line 58"
set Pb=Pb+1
if qO[Vyw]==0 then
if Vyw==0 then
call W1("Nullpointer exception when calling City.getTaxLevelString","when calling error in City, line 164")
else
call W1("Called City.getTaxLevelString on invalid object.","when calling error in City, line 164")
endif
endif
set Byw=Eo[Il[Vyw]]
set Pb=Pb-1
set Nyw=xS[Eb[Eyw]]
set Ab[Pb]="when calling getPublicOrderStr in PlayerStats, line 59"
set Pb=Pb+1
if qO[Nyw]==0 then
if Nyw==0 then
call W1("Nullpointer exception when calling City.getPublicOrderStr","when calling error in City, line 322")
else
call W1("Called City.getPublicOrderStr on invalid object.","when calling error in City, line 322")
endif
endif
set Myw=Msw(Nyw,"when calling getPublicOrderStr in City, line 322")
set Pb=Pb-1
set wpw=xS[Eb[Eyw]]
set Ab[Pb]="when calling getPopulationStr in PlayerStats, line 60"
set Pb=Pb+1
if qO[wpw]==0 then
if wpw==0 then
call W1("Nullpointer exception when calling City.getPopulationStr","when calling error in City, line 343")
else
call W1("Called City.getPopulationStr on invalid object.","when calling error in City, line 343")
endif
endif
set upw=rtw(wpw)
set Pb=Pb-1
set rpw=xS[Eb[Eyw]]
set Ab[Pb]="when calling getPopulationGrowthStr in PlayerStats, line 61"
set Pb=Pb+1
if qO[rpw]==0 then
if rpw==0 then
call W1("Nullpointer exception when calling City.getPopulationGrowthStr","when calling error in City, line 340")
else
call W1("Called City.getPopulationGrowthStr on invalid object.","when calling error in City, line 340")
endif
endif
set spw=sww(Ql[rpw])
set Pb=Pb-1
set Iyw=Vc[Uyw]
set tpw=Hc[0]
set ipw=Hc[1]
set Spw=I2S(Cyw)
call MultiboardSetItemValue(MultiboardGetItem(Iyw,ipw,tpw),Spw)
call MultiboardSetItemValue(MultiboardGetItem(Iyw,Hc[1],Hc[0]+1),Byw)
call MultiboardSetItemValue(MultiboardGetItem(Iyw,Jc[1],Jc[0]),Myw)
call MultiboardSetItemValue(MultiboardGetItem(Iyw,Kc[1],Kc[0]),upw)
call MultiboardSetItemValue(MultiboardGetItem(Iyw,Lc[1],Lc[0]),spw)
set Pyw=0
set opw=xS[Eb[Eyw]]
set Ab[Pb]="when calling getModifiers in PlayerStats, line 71"
set Pb=Pb+1
if qO[opw]==0 then
if opw==0 then
call W1("Nullpointer exception when calling City.getModifiers","when calling error in City, line 378")
else
call W1("Called City.getModifiers on invalid object.","when calling error in City, line 378")
endif
endif
set Opw=Al[opw]
set Pb=Pb-1
set Ab[Pb]="when calling iterator in PlayerStats, line 71"
set Pb=Pb+1
set cpw=Klw(Opw,"when calling new_LLIterator in LinkedList, line 165")
set Pb=Pb-1
set Ayw=cpw
loop
exitwhen ab[db[Ayw]]==nb[Ayw]
set db[Ayw]=ab[db[Ayw]]
set Dyw=eb[db[Ayw]]
set Hyw=Vc[Uyw]
set lpw=Yl[Uaw(RS,Dyw,"when calling get in PlayerStats, line 73")]
call MultiboardSetItemValue(MultiboardGetItem(Hyw,4+Pyw,4),lpw)
set bpw="("+Gl[Uaw(RS,Dyw,"when calling get in PlayerStats, line 74")]+")"
call MultiboardSetItemValue(MultiboardGetItem(Hyw,4+Pyw,5),bpw)
set Pyw=Pyw+1
endloop
set Ab[Pb]="when calling close in PlayerStats, line 71"
set Pb=Pb+1
if Rb[Ayw]then
call Caw(Ayw,"when calling dispatch_LLIterator_destroyLLIterator in LinkedList, line 450")
endif
set Pb=Pb-1
set Jyw=Pyw
set Kyw=9
loop
exitwhen Jyw>Kyw
set Lyw=Vc[Uyw]
set Zyw=" "
call MultiboardSetItemValue(MultiboardGetItem(Lyw,4+Jyw,4)," ")
call MultiboardSetItemValue(MultiboardGetItem(Lyw,4+Jyw,5)," ")
set Jyw=Jyw+1
endloop
set Pb=Pb-1
set Iyw=null
set Hyw=null
set Lyw=null
endfunction
function ftw takes integer ytw,string ptw returns nothing
local integer etw
local integer qtw
local integer atw
local integer ntw
local integer dtw
set Ab[Pb]=ptw
set Pb=Pb+1
set etw=0
set qtw=23
loop
exitwhen etw>qtw
set atw=uo[etw]
set ptw="when calling getSelectedCityId in City, line 239"
set Ab[Pb]="when calling getSelectedCityId in City, line 239"
set Pb=Pb+1
if ll[atw]==0 then
if atw==0 then
call W1("Nullpointer exception when calling PlayerStats.getSelectedCityId","when calling error in PlayerStats, line 84")
else
call W1("Called PlayerStats.getSelectedCityId on invalid object.","when calling error in PlayerStats, line 84")
endif
endif
set ntw=Eb[atw]
set Pb=Pb-1
if ntw==Fl[ytw]then
set dtw=uo[etw]
set Ab[Pb]="when calling refreshMultiboardCity in City, line 240"
set Pb=Pb+1
if ll[dtw]==0 then
if dtw==0 then
call W1("Nullpointer exception when calling PlayerStats.refreshMultiboardCity","when calling error in PlayerStats, line 43")
else
call W1("Called PlayerStats.refreshMultiboardCity on invalid object.","when calling error in PlayerStats, line 43")
endif
endif
call ypw(dtw,"when calling refreshMultiboardCity in PlayerStats, line 43")
set Pb=Pb-1
endif
set etw=etw+1
endloop
set Pb=Pb-1
endfunction
function mtw takes integer Ftw,integer ktw,string jtw returns nothing
local integer xtw
local integer vtw
set Ab[Pb]=jtw
set Pb=Pb+1
if ktw==PLAYER_NEUTRAL_AGGRESSIVE then
call SetUnitOwner(gl[Ftw],Player(ktw),true)
set Ab[Pb]="when calling changeTaxLevelFORCED in City, line 192"
set Pb=Pb+1
if qO[Ftw]==0 then
if Ftw==0 then
call W1("Nullpointer exception when calling City.changeTaxLevelFORCED","when calling error in City, line 260")
else
call W1("Called City.changeTaxLevelFORCED on invalid object.","when calling error in City, line 260")
endif
endif
set Zl[Ftw]=Zl[Ftw]-FS[Il[Ftw]]
set Zl[Ftw]=Zl[Ftw]+FS[0]
set Il[Ftw]=0
set Pb=Pb-1
else
call SetUnitOwner(gl[Ftw],ro[ktw],true)
endif
set jl[Ftw]=ktw
if ktw>=0 and ktw<24 then
set xtw=uo[ktw]
set Ab[Pb]="when calling getForceId in City, line 199"
set Pb=Pb+1
if ll[xtw]==0 then
if xtw==0 then
call W1("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 94")
else
call W1("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 94")
endif
endif
set vtw=mb[xtw]
set Pb=Pb-1
set kl[Ftw]=vtw
endif
set Ab[Pb]="when calling refreshMultiboardIfPossible in City, line 201"
set Pb=Pb+1
if qO[Ftw]==0 then
if Ftw==0 then
call W1("Nullpointer exception when calling City.refreshMultiboardIfPossible","when calling error in City, line 237")
else
call W1("Called City.refreshMultiboardIfPossible on invalid object.","when calling error in City, line 237")
endif
endif
call ftw(Ftw,"when calling refreshMultiboardIfPossible in City, line 237")
set Pb=Pb-1-1
endfunction
function wiw takes integer Itw,player Ptw,string Atw returns nothing
local integer Dtw
local integer Htw
local unit Jtw
local unit Ktw
local real Ltw
local integer Xtw
local integer Ctw
local integer Vtw
local integer Btw
local boolean Ntw
local integer Mtw
set Ab[Pb]=Atw
set Pb=Pb+1
set Jtw=gl[Itw]
call SetUnitState(Jtw,UNIT_STATE_LIFE,GetUnitState(Jtw,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,60.0)*0.01)
set Ktw=gl[Itw]
call SetUnitState(Ktw,UNIT_STATE_MANA,GetUnitState(Ktw,UNIT_STATE_MAX_MANA)*RMaxBJ(0.,30.0)*0.01)
set Ab[Pb]="when calling addModifier in City, line 222"
set Pb=Pb+1
if qO[Itw]==0 then
if Itw==0 then
call W1("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call W1("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call btw(Itw,0,"when calling addModifier in City, line 355")
set Pb=Pb-1
set Ltw=dl[Uaw(RS,6,"when calling get in City, line 223")]
if GetRandomReal(0.0,1.0)<=Ltw then
set Ab[Pb]="when calling addModifier in City, line 224"
set Pb=Pb+1
if qO[Itw]==0 then
if Itw==0 then
call W1("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call W1("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call btw(Itw,6,"when calling addModifier in City, line 355")
set Pb=Pb-1
endif
set Dtw=kl[Itw]
set Htw=GetPlayerId(Ptw)
if Htw>=0 and Htw<24 then
set Xtw=uo[Htw]
set Ab[Pb]="when calling getForceId in City, line 229"
set Pb=Pb+1
if ll[Xtw]==0 then
if Xtw==0 then
call W1("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 94")
else
call W1("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 94")
endif
endif
set Ctw=mb[Xtw]
set Pb=Pb-1
set Dtw=Ctw
endif
set Vtw=Bo
set Btw=GetUnitTypeId(gl[Itw])
set Ab[Pb]="when calling has in City, line 231"
set Pb=Pb+1
if tl[Vtw]==0 then
if Vtw==0 then
call W1("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call W1("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set Ntw=ubw(Vtw,Btw)
set Pb=Pb-1
if Ntw then
set Mtw=mV(jV(GetUnitTypeId(gl[Itw])),Dtw)
set Ab[Pb]="when calling replaceCity in City, line 232"
set Pb=Pb+1
if qO[Itw]==0 then
if Itw==0 then
call W1("Nullpointer exception when calling City.replaceCity","when calling error in City, line 182")
else
call W1("Called City.replaceCity on invalid object.","when calling error in City, line 182")
endif
endif
call htw(Itw,Mtw,"when calling replaceCity in City, line 182")
set Pb=Pb-1
call UnitAddAbility(gl[Itw],1093677634)
endif
set Ab[Pb]="when calling changeOwner in City, line 235"
set Pb=Pb+1
if qO[Itw]==0 then
if Itw==0 then
call W1("Nullpointer exception when calling City.changeOwner","when calling error in City, line 187")
else
call W1("Called City.changeOwner on invalid object.","when calling error in City, line 187")
endif
endif
call mtw(Itw,Htw,"when calling changeOwner in City, line 187")
set Pb=Pb-1-1
set Jtw=null
set Ktw=null
endfunction
function Tsw takes integer tsw,string isw returns nothing
local unit Ssw
local integer csw
local integer osw
local integer Osw
local boolean lsw
local unit bsw
local integer ysw
local player psw
local integer esw
local boolean qsw
local boolean asw
local real nsw
local real dsw
local real fsw
local real Rsw
set Ab[Pb]=isw
set Pb=Pb+1
set Ssw=GetTriggerUnit()
set Ab[Pb]="when calling isCity in CityManage, line 36"
set Pb=Pb+1
set Ab[Pb]="when calling isCity in UnitTools, line 5"
set Pb=Pb+1
set osw=Mo
set Osw=GetUnitTypeId(Ssw)
set Ab[Pb]="when calling has in City, line 423"
set Pb=Pb+1
if tl[osw]==0 then
if osw==0 then
call W1("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call W1("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set lsw=ubw(osw,Osw)
set Pb=Pb-1-1-1
if lsw then
if GetUnitStatePercent(Ssw,UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)<=50.0 then
set asw=GetOwningPlayer(Ssw)!=GetOwningPlayer(GetAttacker())
else
set asw=false
endif
if asw then
set nsw=GetUnitX(Ssw)
set dsw=GetUnitY(Ssw)
set bsw=GetAttacker()
set fsw=nsw-GetUnitX(bsw)
set Rsw=dsw-GetUnitY(bsw)
if SquareRoot(fsw*fsw+Rsw*Rsw)>300.0 then
call SetUnitState(Ssw,UNIT_STATE_LIFE,GetUnitState(Ssw,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,50.0)*0.01)
else
set Ab[Pb]="when calling getCityId in CityManage, line 41"
set Pb=Pb+1
set tsw=PV(Ssw,"when calling getCityId in UnitTools, line 9")
set Pb=Pb-1
set ysw=xS[tsw]
set psw=GetOwningPlayer(GetAttacker())
set Ab[Pb]="when calling capture in CityManage, line 42"
set Pb=Pb+1
if qO[ysw]==0 then
if ysw==0 then
call W1("Nullpointer exception when calling City.capture","when calling error in City, line 218")
else
call W1("Called City.capture on invalid object.","when calling error in City, line 218")
endif
endif
call wiw(ysw,psw,"when calling capture in City, line 218")
set Pb=Pb-1
set csw=GetUnitTypeId(Ssw)
set esw=Bo
set Ab[Pb]="when calling has in CityManage, line 44"
set Pb=Pb+1
if tl[esw]==0 then
if esw==0 then
call W1("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call W1("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set qsw=ubw(esw,csw)
set Pb=Pb-1
if qsw then
call a5(pN(GetOwningPlayer(GetAttacker()))+" has just captured "+pN(GetOwningPlayer(GetTriggerUnit()))+" Capitol!",bj_FORCE_ALL_PLAYERS,"when calling attentionToForce in CityManage, line 45")
endif
endif
elseif GetUnitStatePercent(Ssw,UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)<=50.0 then
call SetUnitState(Ssw,UNIT_STATE_LIFE,GetUnitState(Ssw,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,50.0)*0.01)
endif
endif
set Pb=Pb-1
set Ssw=null
set bsw=null
set psw=null
endfunction
function Eww takes unit jww,unit xww returns real
local real vww=GetUnitX(jww)
local real mww_2=GetUnitY(jww)
local real Qww=vww-GetUnitX(xww)
local real Www=mww_2-GetUnitY(xww)
return SquareRoot(Qww*Qww+Www*Www)
endfunction
function Vpw takes integer kpw,string jpw returns nothing
local unit xpw
local integer vpw
local player mpw
local group Qpw
local integer Wpw
local boolean Epw
local location Zpw
local group Upw
local unit Ipw
local integer Ppw
local boolean Apw
local integer Dpw
local boolean Hpw
local integer Jpw
local timer Kpw
local boolean Lpw
local boolean Xpw
local boolean Cpw
set Ab[Pb]=jpw
set Pb=Pb+1
set xpw=GetTriggerUnit()
set vpw=GetUnitTypeId(xpw)
set Wpw=yo
set Ab[Pb]="when calling has in RangeChecks, line 14"
set Pb=Pb+1
if tl[Wpw]==0 then
if Wpw==0 then
call W1("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call W1("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set Epw=ubw(Wpw,vpw)
set Pb=Pb-1
if Epw then
set mpw=GetOwningPlayer(xpw)
set Zpw=GetUnitLoc(xpw)
set Upw=CreateGroup()
call GroupEnumUnitsInRangeOfLoc(Upw,Zpw,2000.0,null)
call DestroyBoolExpr(null)
set dc=CreateGroup()
call ForGroup(Upw,Mf)
set Qpw=dc
loop
exitwhen FirstOfGroup(Qpw)==null
set Ipw=FirstOfGroup(Qpw)
call GroupRemoveUnit(Qpw,Ipw)
if GetOwningPlayer(Ipw)==mpw and Ipw!=xpw then
if GetUnitTypeId(Ipw)==vpw and Eww(Ipw,xpw)<=1500 then
set Xpw=true
else
set Ppw=No
set Ab[Pb]="when calling has in RangeChecks, line 21"
set Pb=Pb+1
if tl[Ppw]==0 then
if Ppw==0 then
call W1("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call W1("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set Apw=ubw(Ppw,vpw)
set Pb=Pb-1
if Apw then
set Dpw=No
set kpw=GetUnitTypeId(Ipw)
set Ab[Pb]="when calling has in RangeChecks, line 21"
set Pb=Pb+1
if tl[Dpw]==0 then
if Dpw==0 then
call W1("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call W1("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set Hpw=ubw(Dpw,kpw)
set Pb=Pb-1
set Lpw=Hpw
else
set Lpw=false
endif
set Xpw=Lpw
endif
set Cpw=Xpw
else
set Cpw=false
endif
if Cpw then
set Ab[Pb]="when calling alloc_RangeChecks_CallbackSingle_line23 in RangeChecks, line 23"
set Pb=Pb+1
if TO==0 then
if YO<32768 then
set YO=YO+1
set Jpw=YO
set GO[Jpw]=652
else
call W1("Out of memory: Could not create RangeChecks_CallbackSingle_line23.","when calling error in RangeChecks, line 23")
set Jpw=0
endif
else
set TO=TO-1
set Jpw=RO[TO]
set GO[Jpw]=652
endif
set Pb=Pb-1
set Ub[Jpw]=xpw
set Ab[Pb]="when calling doAfter in RangeChecks, line 23"
set Pb=Pb+1
set Kpw=mww("when calling getTimer in ClosureTimers, line 27")
set Ab[Pb]="when calling doAfter in ClosureTimers, line 27"
set Pb=Pb+1
call waw(Jpw,Kpw,0.01,"when calling start in ClosureTimers, line 16")
set Pb=Pb-1-1
if vpw==1747988557 then
set Ab[Pb]="when calling attentionToPlayer in RangeChecks, line 27"
set Pb=Pb+1
call DisplayTimedTextToPlayer(mpw,0.,0.,10.0,i5(mpw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(mpw,0.,0.,10.0,"You cannot build settlements too close to each other.")
set Pb=Pb-1
elseif vpw==1747989075 then
set Ab[Pb]="when calling attentionToPlayer in RangeChecks, line 29"
set Pb=Pb+1
call DisplayTimedTextToPlayer(mpw,0.,0.,10.0,i5(mpw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(mpw,0.,0.,10.0,"You cannot build churches too close to each other.")
set Pb=Pb-1
elseif vpw==1747990102 then
set Ab[Pb]="when calling attentionToPlayer in RangeChecks, line 31"
set Pb=Pb+1
call DisplayTimedTextToPlayer(mpw,0.,0.,10.0,i5(mpw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(mpw,0.,0.,10.0,"You cannot build churches too close to each other.")
set Pb=Pb-1
elseif vpw==1747988785 then
set Ab[Pb]="when calling attentionToPlayer in RangeChecks, line 33"
set Pb=Pb+1
call DisplayTimedTextToPlayer(mpw,0.,0.,10.0,i5(mpw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(mpw,0.,0.,10.0,"You cannot build churches too close to each other.")
set Pb=Pb-1
elseif vpw==1747989839 then
set jpw="when calling attentionToPlayer in RangeChecks, line 35"
set Ab[Pb]="when calling attentionToPlayer in RangeChecks, line 35"
set Pb=Pb+1
call DisplayTimedTextToPlayer(mpw,0.,0.,10.0,i5(mpw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(mpw,0.,0.,10.0,"You cannot build mosques too close to each other.")
set Pb=Pb-1
elseif vpw==1747989059 then
set Ab[Pb]="when calling attentionToPlayer in RangeChecks, line 37"
set Pb=Pb+1
call DisplayTimedTextToPlayer(mpw,0.,0.,10.0,i5(mpw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(mpw,0.,0.,10.0,"You cannot build castles too close to each other.")
set Pb=Pb-1
elseif vpw==1747989331 then
set Ab[Pb]="when calling attentionToPlayer in RangeChecks, line 39"
set Pb=Pb+1
call DisplayTimedTextToPlayer(mpw,0.,0.,10.0,i5(mpw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(mpw,0.,0.,10.0,"You cannot build castles too close to each other.")
set Pb=Pb-1
elseif vpw==1747990351 then
set Ab[Pb]="when calling attentionToPlayer in RangeChecks, line 41"
set Pb=Pb+1
call DisplayTimedTextToPlayer(mpw,0.,0.,10.0,i5(mpw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(mpw,0.,0.,10.0,"You cannot build castles too close to each other.")
set Pb=Pb-1
elseif vpw==1747990353 then
set Ab[Pb]="when calling attentionToPlayer in RangeChecks, line 43"
set Pb=Pb+1
call DisplayTimedTextToPlayer(mpw,0.,0.,10.0,i5(mpw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(mpw,0.,0.,10.0,"You cannot build castles too close to each other.")
set Pb=Pb-1
elseif vpw==1747988568 then
set Ab[Pb]="when calling attentionToPlayer in RangeChecks, line 45"
set Pb=Pb+1
call DisplayTimedTextToPlayer(mpw,0.,0.,10.0,i5(mpw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(mpw,0.,0.,10.0,"You cannot build inns too close to each other.")
set Pb=Pb-1
elseif vpw==1747990341 then
set Ab[Pb]="when calling attentionToPlayer in RangeChecks, line 47"
set Pb=Pb+1
call DisplayTimedTextToPlayer(mpw,0.,0.,10.0,i5(mpw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(mpw,0.,0.,10.0,"You cannot build inns too close to each other.")
set Pb=Pb-1
endif
exitwhen true
endif
endloop
call GroupClear(Qpw)
call DestroyGroup(Qpw)
endif
set Pb=Pb-1
set xpw=null
set mpw=null
set Qpw=null
set Zpw=null
set Upw=null
set Ipw=null
set Kpw=null
endfunction
function Wlw takes integer Flw,string klw returns nothing
local unit jlw
local player xlw
local player vlw
local player mlw
local timer Qlw
set Ab[Pb]=klw
set Pb=Pb+1
set jlw=GetConstructingStructure()
if GetUnitTypeId(jlw)==1747990614 then
if Gc[GetPlayerId(GetOwningPlayer(jlw))]<3 then
set xlw=GetOwningPlayer(jlw)
set vlw=GetOwningPlayer(jlw)
set Gc[GetPlayerId(xlw)]=Gc[GetPlayerId(vlw)]+1
else
set mlw=GetOwningPlayer(jlw)
set Ab[Pb]="when calling attentionToPlayer in LimitMercenaryCamps, line 18"
set Pb=Pb+1
call DisplayTimedTextToPlayer(mlw,0.,0.,10.0,i5(mlw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(mlw,0.,0.,10.0,"You cannot build more than 3 mercenary camps.")
set Pb=Pb-1
set Ab[Pb]="when calling alloc_LimitMercenaryCamps_CallbackSingle_line19 in LimitMercenaryCamps, line 19"
set Pb=Pb+1
if TO==0 then
if YO<32768 then
set YO=YO+1
set Flw=YO
set GO[Flw]=646
else
call W1("Out of memory: Could not create LimitMercenaryCamps_CallbackSingle_line19.","when calling error in LimitMercenaryCamps, line 19")
set Flw=0
endif
else
set TO=TO-1
set Flw=RO[TO]
set GO[Flw]=646
endif
set Pb=Pb-1
set yb[Flw]=jlw
set Ab[Pb]="when calling doAfter in LimitMercenaryCamps, line 19"
set Pb=Pb+1
set Qlw=mww("when calling getTimer in ClosureTimers, line 27")
set Ab[Pb]="when calling doAfter in ClosureTimers, line 27"
set Pb=Pb+1
call waw(Flw,Qlw,0.01,"when calling start in ClosureTimers, line 16")
set Pb=Pb-1-1
endif
endif
set Pb=Pb-1
set jlw=null
set xlw=null
set vlw=null
set mlw=null
set Qlw=null
endfunction
function Zew takes integer Yew,string Gew returns nothing
local unit gew
local unit hew
local integer Few
local player kew
local integer jew
local integer xew
local player vew
local integer mew
local integer Qew
local boolean Wew
local boolean Eew
set Ab[Pb]=Gew
set Pb=Pb+1
if GetSpellAbilityId()==1093677620 then
set gew=GetSpellAbilityUnit()
set hew=GetSpellTargetUnit()
set Yew=GetPlayerId(GetOwningPlayer(gew))
set Few=GetPlayerId(GetOwningPlayer(hew))
set kew=ro[Yew]
if GetPlayerSlotState(kew)==PLAYER_SLOT_STATE_PLAYING then
set Wew=GetPlayerController(kew)==MAP_CONTROL_USER
else
set Wew=false
endif
if Wew then
set jew=uo[Yew]
set xew=-GetUnitLevel(hew)
set Ab[Pb]="when calling changeUpkeep in Upkeep, line 15"
set Pb=Pb+1
if ll[jew]==0 then
if jew==0 then
call W1("Nullpointer exception when calling PlayerStats.changeUpkeep","when calling error in PlayerStats, line 23")
else
call W1("Called PlayerStats.changeUpkeep on invalid object.","when calling error in PlayerStats, line 23")
endif
endif
set Zb[jew]=Zb[jew]+xew
set Pb=Pb-1
endif
set vew=ro[Few]
if GetPlayerSlotState(vew)==PLAYER_SLOT_STATE_PLAYING then
set Eew=GetPlayerController(vew)==MAP_CONTROL_USER
else
set Eew=false
endif
if Eew then
set mew=uo[Few]
set Qew=GetUnitLevel(hew)
set Ab[Pb]="when calling changeUpkeep in Upkeep, line 17"
set Pb=Pb+1
if ll[mew]==0 then
if mew==0 then
call W1("Nullpointer exception when calling PlayerStats.changeUpkeep","when calling error in PlayerStats, line 23")
else
call W1("Called PlayerStats.changeUpkeep on invalid object.","when calling error in PlayerStats, line 23")
endif
endif
set Zb[mew]=Zb[mew]+Qew
set Pb=Pb-1
endif
endif
set Pb=Pb-1
set gew=null
set hew=null
set kew=null
set vew=null
endfunction
function i0w takes rect M9,real w0w,real u0w returns boolean
local boolean r0w
local boolean s0w
local boolean t0w
if w0w>GetRectMinX(M9) then
set r0w=w0w<GetRectMaxX(M9)
else
set r0w=false
endif
if r0w then
set s0w=u0w>GetRectMinY(M9)
else
set s0w=false
endif
if s0w then
set t0w=u0w<GetRectMaxY(M9)
else
set t0w=false
endif
return t0w
endfunction
function qww takes integer Oww,string lww returns rect
local integer bww
local fogstate yww
local integer pww
local rect eww
set Ab[Pb]=lww
set Pb=Pb+1
set bww=Ao
set yww=ConvertFogState(Oww)
set Ab[Pb]="when calling saveFogState in TypeCasting, line 136"
set Pb=Pb+1
if HO[bww]==0 then
if bww==0 then
call W1("Nullpointer exception when calling Table.saveFogState","when calling error in Table, line 168")
else
call W1("Called Table.saveFogState on invalid object.","when calling error in Table, line 168")
endif
endif
call SaveFogStateHandle(Zo,bww,0,yww)
set Pb=Pb-1
set pww=Ao
set Ab[Pb]="when calling loadRect in TypeCasting, line 137"
set Pb=Pb+1
if HO[pww]==0 then
if pww==0 then
call W1("Nullpointer exception when calling Table.loadRect","when calling error in Table, line 147")
else
call W1("Called Table.loadRect on invalid object.","when calling error in Table, line 147")
endif
endif
set eww=LoadRectHandle(Zo,pww,0)
set Pb=Pb-1-1
set cR=eww
set yww=null
set eww=null
return cR
endfunction
function ayw takes integer Syw,string cyw returns nothing
local unit oyw
local real Oyw
local real lyw
local integer byw
local integer yyw
local integer pyw
local timer eyw
local player qyw
set Ab[Pb]=cyw
set Pb=Pb+1
set oyw=GetTriggerUnit()
if GetUnitTypeId(oyw)==1747988569 then
set Oyw=GetUnitX(oyw)
set lyw=GetUnitY(oyw)
set byw=uO
set Ab[Pb]="when calling iterator in NoShipsNearRivers, line 11"
set Pb=Pb+1
set yyw=Klw(byw,"when calling new_LLIterator in LinkedList, line 165")
set Pb=Pb-1
set Syw=yyw
loop
exitwhen ab[db[Syw]]==nb[Syw]
set db[Syw]=ab[db[Syw]]
if i0w(qww(eb[db[Syw]],"when calling rectFromIndex in NoShipsNearRivers, line 11"),Oyw,lyw) then
set Ab[Pb]="when calling alloc_NoShipsNearRivers_CallbackSingle_line14 in NoShipsNearRivers, line 14"
set Pb=Pb+1
if TO==0 then
if YO<32768 then
set YO=YO+1
set pyw=YO
set GO[pyw]=649
else
call W1("Out of memory: Could not create NoShipsNearRivers_CallbackSingle_line14.","when calling error in NoShipsNearRivers, line 14")
set pyw=0
endif
else
set TO=TO-1
set pyw=RO[TO]
set GO[pyw]=649
endif
set Pb=Pb-1
set vb[pyw]=oyw
set Ab[Pb]="when calling doAfter in NoShipsNearRivers, line 14"
set Pb=Pb+1
set eyw=mww("when calling getTimer in ClosureTimers, line 27")
set Ab[Pb]="when calling doAfter in ClosureTimers, line 27"
set Pb=Pb+1
call waw(pyw,eyw,0.01,"when calling start in ClosureTimers, line 16")
set Pb=Pb-1-1
set cyw="You cannot build shipyards near rivers"
set qyw=GetOwningPlayer(oyw)
set Ab[Pb]="when calling attentionToPlayer in NoShipsNearRivers, line 16"
set Pb=Pb+1
call DisplayTimedTextToPlayer(qyw,0.,0.,10.0,i5(qyw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(qyw,0.,0.,10.0,"You cannot build shipyards near rivers")
set Pb=Pb-1
endif
endloop
set Ab[Pb]="when calling close in NoShipsNearRivers, line 11"
set Pb=Pb+1
if Rb[Syw]then
call Caw(Syw,"when calling dispatch_LLIterator_destroyLLIterator in LinkedList, line 450")
endif
set Pb=Pb-1
endif
set Pb=Pb-1
set oyw=null
set eyw=null
set qyw=null
endfunction
function L2 takes player A2,string D2 returns string
local integer H2
local integer J2
local integer K2
set Ab[Pb]=D2
set Pb=Pb+1
set J2=uo[GetPlayerId(A2)]
set Ab[Pb]="when calling getForceId in Messages, line 21"
set Pb=Pb+1
if ll[J2]==0 then
if J2==0 then
call W1("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 94")
else
call W1("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 94")
endif
endif
set K2=mb[J2]
set Pb=Pb-1
set H2=GetRandomInt(0,2)
if K2==0 then
set D2=Yo[H2]
elseif K2==1 then
set D2=Go[H2]
elseif K2==2 then
set D2=go[H2]
elseif K2==3 then
set D2=ho[H2]
else
set D2="Note:"
endif
set Pb=Pb-1
return "|cff00ccff"+D2+"|r"
endfunction
function iiw takes integer uiw,integer riw,string siw returns nothing
local player tiw
set Ab[Pb]=siw
set Pb=Pb+1
if xc-Pl[uiw]>=YS then
set Pl[uiw]=xc
set Zl[uiw]=Zl[uiw]-FS[Il[uiw]]
set Zl[uiw]=Zl[uiw]+FS[riw]
set Il[uiw]=riw
else
set tiw=ro[jl[uiw]]
set Ab[Pb]="when calling noteToPlayer in City, line 258"
set Pb=Pb+1
call DisplayTimedTextToPlayer(tiw,0.,0.,10.0,L2(tiw,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(tiw,0.,0.,10.0,"Wait 1 turn to be able to change tax level.")
set Pb=Pb-1
endif
set Pb=Pb-1
set tiw=null
endfunction
function bew takes integer wew,string uew returns nothing
local integer rew
local integer sew
local integer tew
local boolean iew
local unit Sew
local integer cew
local integer oew
local boolean Oew
local integer lew
set Ab[Pb]=uew
set Pb=Pb+1
set sew=cS
set tew=GetSpellAbilityId()
set Ab[Pb]="when calling has in Taxation, line 7"
set Pb=Pb+1
if tl[sew]==0 then
if sew==0 then
call W1("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call W1("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set iew=ubw(sew,tew)
set Pb=Pb-1
if iew then
set Sew=GetSpellTargetUnit()
set Ab[Pb]="when calling isCity in Taxation, line 8"
set Pb=Pb+1
set cew=Mo
set oew=GetUnitTypeId(Sew)
set Ab[Pb]="when calling has in City, line 423"
set Pb=Pb+1
if tl[cew]==0 then
if cew==0 then
call W1("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call W1("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set Oew=ubw(cew,oew)
set Pb=Pb-1-1
if Oew then
if GetOwningPlayer(GetSpellTargetUnit())==GetOwningPlayer(GetSpellAbilityUnit()) then
set rew=0
set wew=GetSpellAbilityId()
if wew==1093677642 then
set rew=1
elseif wew==1093677641 then
set rew=0
elseif wew==1093677640 then
set rew=2
elseif wew==1093678155 then
set rew=3
endif
set lew=xS[PV(GetSpellTargetUnit(),"when calling getCityId in Taxation, line 20")]
set Ab[Pb]="when calling changeTaxLevel in Taxation, line 20"
set Pb=Pb+1
if qO[lew]==0 then
if lew==0 then
call W1("Nullpointer exception when calling City.changeTaxLevel","when calling error in City, line 249")
else
call W1("Called City.changeTaxLevel on invalid object.","when calling error in City, line 249")
endif
endif
call iiw(lew,rew,"when calling changeTaxLevel in City, line 249")
set Pb=Pb-1
endif
endif
endif
set Pb=Pb-1
set Sew=null
endfunction
function dOw takes integer eOw,integer qOw,integer aOw,string nOw returns nothing
set Ab[Pb]=nOw
set Pb=Pb+1
if not Faw(eOw,qOw,"when calling has in HashMap, line 18") then
set Ob[eOw]=Ob[eOw]+1
endif
set Ab[Pb]="when calling saveInt in HashMap, line 20"
set Pb=Pb+1
if HO[eOw]==0 then
if eOw==0 then
call W1("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call W1("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Zo,eOw,qOw,aOw)
set Pb=Pb-1-1
endfunction
function wOw takes integer Cow,integer Vow,string Bow returns nothing
local hashtable Now
local integer Mow
set Ab[Pb]=Bow
set Pb=Pb+1
set Now=Rc
set Ab[Pb]="when calling count in HashList, line 19"
set Pb=Pb+1
if IO[Cow]==0 then
if Cow==0 then
call W1("Nullpointer exception when calling HashList.count","when calling error in HashList, line 15")
else
call W1("Called HashList.count on invalid object.","when calling error in HashList, line 15")
endif
endif
set Mow=LoadInteger(Rc,Cow,Vow)
set Pb=Pb-1
call SaveInteger(Now,Cow,Vow,Mow+1)
set Pb=Pb-1
set Now=null
endfunction
function oRw takes integer iRw,integer SRw,string cRw returns nothing
set Ab[Pb]=cRw
set Pb=Pb+1
call SaveInteger(fc,iRw,ob[iRw],SRw)
set Ab[Pb]="when calling incrOccurences in HashList, line 28"
set Pb=Pb+1
if IO[iRw]==0 then
if iRw==0 then
call W1("Nullpointer exception when calling HashList.incrOccurences","when calling error in HashList, line 18")
else
call W1("Called HashList.incrOccurences on invalid object.","when calling error in HashList, line 18")
endif
endif
call wOw(iRw,SRw,"when calling incrOccurences in HashList, line 18")
set Pb=Pb-1
set ob[iRw]=ob[iRw]+1
set Pb=Pb-1
endfunction
function qRw takes integer ORw,integer lRw,string bRw returns nothing
local integer yRw
local hashtable pRw
local integer eRw
set Ab[Pb]=bRw
set Pb=Pb+1
set Ab[Pb]="when calling count in HashSet, line 11"
set Pb=Pb+1
if IO[ORw]==0 then
if ORw==0 then
call W1("Nullpointer exception when calling HashList.count","when calling error in HashList, line 15")
else
call W1("Called HashList.count on invalid object.","when calling error in HashList, line 15")
endif
endif
set yRw=LoadInteger(Rc,ORw,lRw)
set Pb=Pb-1
if yRw<=0 then
set pRw=Tc
set Ab[Pb]="when calling size in HashSet, line 12"
set Pb=Pb+1
if IO[ORw]==0 then
if ORw==0 then
call W1("Nullpointer exception when calling HashList.size","when calling error in HashList, line 67")
else
call W1("Called HashList.size on invalid object.","when calling error in HashList, line 67")
endif
endif
set eRw=ob[ORw]
set Pb=Pb-1
call SaveInteger(pRw,ORw,lRw,eRw)
call oRw(ORw,lRw,"when calling add in HashSet, line 13")
endif
set Pb=Pb-1
set pRw=null
endfunction
function fRw takes integer aRw,integer nRw,string dRw returns nothing
set Ab[Pb]=dRw
set Pb=Pb+1
if IO[aRw]==0 then
if aRw==0 then
call W1("Nullpointer exception when calling HashList.add","when calling error in HashList, line 25")
else
call W1("Called HashList.add on invalid object.","when calling error in HashList, line 25")
endif
endif
if IO[aRw]<=690 then
call oRw(aRw,nRw,"when calling add in HashList, line 25")
else
call qRw(aRw,nRw,"when calling add in HashList, line 25")
endif
set Pb=Pb-1
endfunction
function mOw takes integer FOw,integer kOw,integer jOw,string xOw returns nothing
local boolean vOw
set Ab[Pb]=xOw
set Pb=Pb+1
call dOw(FOw,kOw,jOw,"when calling put in HashMap, line 60")
set Ab[Pb]="when calling hasKey in HashMap, line 61"
set Pb=Pb+1
if HO[FOw]==0 then
if FOw==0 then
call W1("Nullpointer exception when calling IterableMap.hasKey","when calling error in HashMap, line 87")
else
call W1("Called IterableMap.hasKey on invalid object.","when calling error in HashMap, line 87")
endif
endif
set Ab[Pb]="when calling hasKey in HashMap, line 87"
set Pb=Pb+1
set vOw=Taw(lb[FOw],kOw,"when calling has in HashMap, line 88")
set Pb=Pb-1-1
if not vOw then
call fRw(lb[FOw],kOw,"when calling add in HashMap, line 62")
endif
set Pb=Pb-1
endfunction
function maw takes integer kaw,integer jaw,integer xaw,string vaw returns nothing
set Ab[Pb]=vaw
set Pb=Pb+1
if HO[kaw]==0 then
if kaw==0 then
call W1("Nullpointer exception when calling HashMap.put","when calling error in HashMap, line 17")
else
call W1("Called HashMap.put on invalid object.","when calling error in HashMap, line 17")
endif
endif
if HO[kaw]<=726 then
call dOw(kaw,jaw,xaw,"when calling put in HashMap, line 17")
else
call mOw(kaw,jaw,xaw,"when calling put in HashMap, line 17")
endif
set Pb=Pb-1
endfunction
function dbw takes integer lbw,string bbw returns nothing
local integer ybw
local unit pbw
local player ebw
local real qbw
local real abw
local real nbw
set Ab[Pb]=bbw
set Pb=Pb+1
if GetSpellAbilityId()==1093678154 then
set ybw=Obw("when calling new_LinkedList in MassControl, line 24")
set pbw=GetSpellAbilityUnit()
set ebw=GetOwningPlayer(pbw)
set abw=GetSpellTargetX()
set nbw=GetSpellTargetY()
set qbw=onw(Uc,GetLearnedSkillLevel(),"when calling get in MassControl, line 27")/1000.
set Ab[Pb]="when calling alloc_MassControl_ForGroupCallback_line27 in MassControl, line 27"
set Pb=Pb+1
if nO==0 then
if dO<32768 then
set dO=dO+1
set lbw=dO
set fO[lbw]=686
else
call W1("Out of memory: Could not create MassControl_ForGroupCallback_line27.","when calling error in MassControl, line 27")
set lbw=0
endif
else
set nO=nO-1
set lbw=aO[nO]
set fO[lbw]=686
endif
set Pb=Pb-1
set Gb[lbw]=ebw
set gb[lbw]=pbw
set hb[lbw]=ybw
call MB(abw,nbw,qbw,lbw,"when calling forUnitsInRange in MassControl, line 27")
call maw(Zc,GetHandleId(pbw),ybw,"when calling put in MassControl, line 30")
endif
set Pb=Pb-1
set pbw=null
set ebw=null
endfunction
function gyw takes integer Tyw,string Yyw returns nothing
local force Gyw
set Ab[Pb]=Yyw
set Pb=Pb+1
set Yyw=pN(GetTriggerPlayer())+" has left the game!"
set Gyw=bj_FORCE_ALL_PLAYERS
if IsPlayerInForce(GetLocalPlayer(),Gyw) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,5.0,Yyw)
endif
set Tyw=uo[GetPlayerId(GetTriggerPlayer())]
set Ab[Pb]="when calling setInGame in OnPlayerLeave, line 8"
set Pb=Pb+1
if ll[Tyw]==0 then
if Tyw==0 then
call W1("Nullpointer exception when calling PlayerStats.setInGame","when calling error in PlayerStats, line 17")
else
call W1("Called PlayerStats.setInGame on invalid object.","when calling error in PlayerStats, line 17")
endif
endif
set Wb[Tyw]=false
set Pb=Pb-1
call SetPlayerName(GetTriggerPlayer(),GetPlayerName(GetTriggerPlayer())+" [LEFT]")
set Pb=Pb-1
set Gyw=null
endfunction
function hlw takes integer Tlw returns nothing
local unit Ylw=GetConstructingStructure()
local player Glw
local player glw
if GetUnitTypeId(Ylw)==1747990614 then
set Glw=GetOwningPlayer(Ylw)
set glw=GetOwningPlayer(Ylw)
set Gc[GetPlayerId(Glw)]=Gc[GetPlayerId(glw)]-1
endif
set Ylw=null
set Glw=null
set glw=null
endfunction
function anw takes integer pnw,integer enw,string qnw returns nothing
set Ab[Pb]=qnw
set Pb=Pb+1
if ll[pnw]==0 then
if pnw==0 then
call W1("Nullpointer exception when calling PlayerStats.setSelectedCityId","when calling error in PlayerStats, line 88")
else
call W1("Called PlayerStats.setSelectedCityId on invalid object.","when calling error in PlayerStats, line 88")
endif
endif
set Ab[Pb]="when calling setSelectedCityId in PlayerStats, line 88"
set Pb=Pb+1
if enw>=0 and enw<TS then
set Eb[pnw]=enw
set Ab[Pb]="when calling refreshMultiboardCity in PlayerStats, line 91"
set Pb=Pb+1
if ll[pnw]==0 then
if pnw==0 then
call W1("Nullpointer exception when calling PlayerStats.refreshMultiboardCity","when calling error in PlayerStats, line 43")
else
call W1("Called PlayerStats.refreshMultiboardCity on invalid object.","when calling error in PlayerStats, line 43")
endif
endif
call ypw(pnw,"when calling refreshMultiboardCity in PlayerStats, line 43")
set Pb=Pb-1
endif
set Pb=Pb-1-1
endfunction
function ssw takes integer Nrw,string Mrw returns nothing
local unit wsw
local integer usw
local boolean rsw
set Ab[Pb]=Mrw
set Pb=Pb+1
set wsw=GetTriggerUnit()
set Ab[Pb]="when calling isCity in CityManage, line 10"
set Pb=Pb+1
set Ab[Pb]="when calling isCity in UnitTools, line 5"
set Pb=Pb+1
set usw=Mo
set Nrw=GetUnitTypeId(wsw)
set Ab[Pb]="when calling has in City, line 423"
set Pb=Pb+1
if tl[usw]==0 then
if usw==0 then
call W1("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call W1("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set rsw=ubw(usw,Nrw)
set Pb=Pb-1-1-1
if rsw then
call anw(uo[GetPlayerId(GetTriggerPlayer())],PV(GetTriggerUnit(),"when calling getCityId in CityManage, line 11"),"when calling setSelectedCityId in CityManage, line 11")
endif
set Pb=Pb-1
set wsw=null
endfunction
function ylw takes integer olw returns nothing
local unit Olw=GetConstructingStructure()
local player llw
local player blw
if GetUnitTypeId(Olw)==1747988808 then
set llw=GetOwningPlayer(Olw)
set blw=GetOwningPlayer(Olw)
set Yc[GetPlayerId(llw)]=Yc[GetPlayerId(blw)]-1
endif
set Olw=null
set llw=null
set blw=null
endfunction
function aqw takes integer eqw,string qqw returns nothing
set Ab[Pb]=qqw
set Pb=Pb+1
if oO[eqw]==0 then
if eqw==0 then
call W1("Nullpointer exception when calling EventListener.onEvent","when calling error in ClosureEvents, line 109")
else
call W1("Called EventListener.onEvent on invalid object.","when calling error in ClosureEvents, line 109")
endif
endif
if oO[eqw]<=670 then
if oO[eqw]<=666 then
if oO[eqw]<=664 then
if oO[eqw]<=663 then
if oO[eqw]<=662 then
call Arw(eqw,"when calling CastleCapture_onEvent_line8 in ClosureEvents, line 109")
else
call Brw(eqw,"when calling CityBuilded_onEvent_line9 in ClosureEvents, line 109")
endif
else
call Tsw(eqw,"when calling CityManage_onEvent_line33 in ClosureEvents, line 109")
endif
elseif oO[eqw]<=665 then
call ssw(eqw,"when calling CityManage_onEvent_line9 in ClosureEvents, line 109")
else
call Rlw(eqw,"when calling LimitEncampments_onEvent_line12 in ClosureEvents, line 109")
endif
elseif oO[eqw]<=668 then
if oO[eqw]<=667 then
call ylw(eqw)
else
call Wlw(eqw,"when calling LimitMercenaryCamps_onEvent_line12 in ClosureEvents, line 109")
endif
elseif oO[eqw]<=669 then
call hlw(eqw)
else
call dbw(eqw,"when calling MassControl_onEvent_line22 in ClosureEvents, line 109")
endif
elseif oO[eqw]<=674 then
if oO[eqw]<=672 then
if oO[eqw]<=671 then
call Dbw(eqw,"when calling MassControl_onEvent_line32 in ClosureEvents, line 109")
else
call ayw(eqw,"when calling NoShipsNearRivers_onEvent_line7 in ClosureEvents, line 109")
endif
elseif oO[eqw]<=673 then
call Ryw(eqw)
else
call gyw(eqw,"when calling OnPlayerLeave_onEvent_line6 in ClosureEvents, line 109")
endif
elseif oO[eqw]<=676 then
if oO[eqw]<=675 then
call Vpw(eqw,"when calling RangeChecks_onEvent_line11 in ClosureEvents, line 109")
else
call bew(eqw,"when calling Taxation_onEvent_line6 in ClosureEvents, line 109")
endif
elseif oO[eqw]<=677 then
call Kew(eqw,"when calling Upkeep_onEvent_line28 in ClosureEvents, line 109")
else
call Zew(eqw,"when calling Upkeep_onEvent_line6 in ClosureEvents, line 109")
endif
set Pb=Pb-1
endfunction
function FB takes string dB returns nothing
local unit fB
local integer RB
local integer TB
local integer YB
local eventid GB
local integer gB
local boolean hB
set Ab[Pb]=dB
set Pb=Pb+1
set fB=GetTriggerUnit()
set GB=GetTriggerEventId()
set Ab[Pb]="when calling toIntId in ClosureEvents, line 170"
set Pb=Pb+1
set gB=ES[GetHandleId(GB)]
if gB==0 then
set gB=tB(GB,"when calling registerEventId in ClosureEvents, line 229")
endif
set Pb=Pb-1
set RB=gB
if fB!=null then
set hB=GetUnitUserData(fB)>0
else
set hB=false
endif
if hB then
if AS[GetUnitUserData(fB)]!=0 then
set TB=AS[GetUnitUserData(fB)]
loop
exitwhen TB==0
if Cl[TB]==RB then
call aqw(TB,"when calling onEvent in ClosureEvents, line 177")
endif
set TB=Vl[TB]
endloop
endif
endif
if PS[RB]!=0 then
set YB=PS[RB]
loop
exitwhen YB==0
call aqw(YB,"when calling onEvent in ClosureEvents, line 183")
set YB=Vl[YB]
endloop
endif
set Pb=Pb-1
set fB=null
set GB=null
endfunction
function GTw takes nothing returns nothing
set Pb=0
set Ab[Pb]="ClosureEvents, line 291"
set Pb=Pb+1
call FB("when calling generalEventCallback in ClosureEvents, line 291")
set Pb=Pb-1
endfunction
function GX takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function YZ takes nothing returns boolean
if GetResearched()!=1378889807 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889807,true)!=2 then
return false
endif
return true
endfunction
function GZ takes nothing returns boolean
if not YZ() then
return false
endif
return true
endfunction
function Tk takes nothing returns boolean
if GetUnitTypeId(GetSpellTargetUnit())==1747988787 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747990361 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747989831 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747989040 then
return true
endif
return false
endfunction
function Yk takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988792 then
return false
endif
if not Tk() then
return false
endif
return true
endfunction
function Gk takes nothing returns boolean
if not Yk() then
return false
endif
return true
endfunction
function H1 takes nothing returns boolean
return true
endfunction
function HC takes nothing returns boolean
local boolean AC
local boolean DC
if GetUnitTypeId(GetSpellAbilityUnit())==1747988553 then
set AC=GetUnitTypeId(GetSpellTargetUnit())==1747989297
else
set AC=false
endif
if AC then
set DC=GetPlayerId(GetOwningPlayer(GetSpellTargetUnit()))==PLAYER_NEUTRAL_AGGRESSIVE
else
set DC=false
endif
return DC
endfunction
function HD takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990599,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990600,0)
endfunction
function DF takes nothing returns boolean
if IsUnitType(GetEnumUnit(),UNIT_TYPE_STRUCTURE)!=false then
return false
endif
return true
endfunction
function HF takes nothing returns nothing
if DF() then
call SetUnitPositionLoc(GetEnumUnit(),S)
endif
endfunction
function HG takes nothing returns boolean
if GetSpellAbilityId()!=1093677620 then
return false
endif
return true
endfunction
function HK takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function HP takes nothing returns nothing
set s=bj_FORCE_ALL_PLAYERS
call ForForce(s,Cq)
endfunction
function HQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989066,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988551,0)
endfunction
function HRw takes nothing returns boolean
local integer URw
local integer IRw
local integer PRw
local integer ARw
local integer DRw
set Pb=0
set Ab[Pb]="City, line 1"
set Pb=Pb+1
set YS=120.0
set GS[0]=0.0020
set GS[1]=0.0025
set Ab[Pb]="when calling asList in City, line 36"
set Pb=Pb+1
set URw=Obw("when calling new_LinkedList in LinkedList, line 391")
call gnw(URw,10000,"when calling add in LinkedList, line 393")
call gnw(URw,20000,"when calling add in LinkedList, line 393")
set Pb=Pb-1
set gS[0]=URw
set Ab[Pb]="when calling asList in City, line 37"
set Pb=Pb+1
set IRw=Obw("when calling new_LinkedList in LinkedList, line 391")
call gnw(IRw,30000,"when calling add in LinkedList, line 393")
call gnw(IRw,40000,"when calling add in LinkedList, line 393")
set Pb=Pb-1
set gS[1]=IRw
set Ab[Pb]="when calling asList in City, line 38"
set Pb=Pb+1
set PRw=Obw("when calling new_LinkedList in LinkedList, line 391")
call gnw(PRw,60000,"when calling add in LinkedList, line 393")
call gnw(PRw,90000,"when calling add in LinkedList, line 393")
set Pb=Pb-1
set gS[2]=PRw
set Ab[Pb]="when calling asList in City, line 39"
set Pb=Pb+1
set ARw=Obw("when calling new_LinkedList in LinkedList, line 391")
call gnw(ARw,120000,"when calling add in LinkedList, line 393")
call gnw(ARw,160000,"when calling add in LinkedList, line 393")
set Pb=Pb-1
set gS[3]=ARw
set Ab[Pb]="when calling asList in City, line 40"
set Pb=Pb+1
set DRw=Obw("when calling new_LinkedList in LinkedList, line 391")
call gnw(DRw,180000,"when calling add in LinkedList, line 393")
call gnw(DRw,220000,"when calling add in LinkedList, line 393")
set Pb=Pb-1
set gS[4]=DRw
set hS[0]=1.0
set hS[1]=0.5
set hS[2]=1.6
set hS[3]=2.0
set FS[0]=0.0
set FS[1]=20.0
set FS[2]=-25.0
set FS[3]=-60.0
set kS[0]=0.05
set kS[1]=0.0
set kS[2]=0.15
set kS[3]=0.30
set jS[0]=1.0
set jS[1]=1.1
set jS[2]=0.85
set jS[3]=0.7
set Pb=Pb-1
return true
endfunction
function HU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989570,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989556,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989559,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989557,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989560,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989573,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989574,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651841,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651833,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651832,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989582,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990097,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989812,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990098,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990099,0)
endfunction
function Dg takes nothing returns boolean
if IsUnitType(GetEnumUnit(),UNIT_TYPE_STRUCTURE)!=false then
return false
endif
return true
endfunction
function Hg takes nothing returns nothing
if Dg() then
call SetUnitPositionLoc(GetEnumUnit(),c)
endif
endfunction
function Dh takes nothing returns boolean
if IsUnitType(GetEnumUnit(),UNIT_TYPE_STRUCTURE)!=false then
return false
endif
return true
endfunction
function Hh takes nothing returns nothing
if Dh() then
call SetUnitPositionLoc(GetEnumUnit(),c)
endif
endfunction
function Hj takes nothing returns nothing
local player vj=GetOwningPlayer(GetSpellTargetUnit())
local playerstate mj=PLAYER_STATE_RESOURCE_GOLD
local playerstate Qj
local playerstate Wj
local player Ej
local force Zj
local location Uj
local real Ij
local real Pj
local player Aj
local force Dj
if mj==PLAYER_STATE_RESOURCE_GOLD then
set Qj=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(vj,Qj,GetPlayerState(vj,Qj)+500)
elseif mj==PLAYER_STATE_RESOURCE_LUMBER then
set Wj=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(vj,Wj,GetPlayerState(vj,Wj)+500)
endif
call SetPlayerState(vj,mj,GetPlayerState(vj,mj)+500)
call RemoveUnit(GetSpellAbilityUnit())
set Ej=GetOwningPlayer(GetSpellTargetUnit())
set Zj=CreateForce()
call ForceAddPlayer(Zj,Ej)
if IsPlayerInForce(GetLocalPlayer(),Zj) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_1231")
endif
set y=GetUnitLoc(GetSpellTargetUnit())
set Aj=GetOwningPlayer(GetSpellTargetUnit())
set Dj=CreateForce()
call ForceAddPlayer(Dj,Aj)
set Uj=y
set Ij=GetLocationX(Uj)
set Pj=GetLocationY(Uj)
if IsPlayerInForce(GetLocalPlayer(),Dj) then
call PingMinimap(Ij,Pj,2.00)
endif
call RemoveLocation(y)
set vj=null
set mj=null
set Qj=null
set Wj=null
set Ej=null
set Zj=null
set Uj=null
set Aj=null
set Dj=null
endfunction
function Hx takes nothing returns nothing
local player vx=GetOwningPlayer(GetKillingUnit())
local playerstate mx=PLAYER_STATE_RESOURCE_GOLD
local playerstate Qx
local playerstate Wx
local player Ex
local force Zx
local location Ux
local real Ix
local real Px
local player Ax
local force Dx
if mx==PLAYER_STATE_RESOURCE_GOLD then
set Qx=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(vx,Qx,GetPlayerState(vx,Qx)+125)
elseif mx==PLAYER_STATE_RESOURCE_LUMBER then
set Wx=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(vx,Wx,GetPlayerState(vx,Wx)+125)
endif
call SetPlayerState(vx,mx,GetPlayerState(vx,mx)+125)
set Ex=GetOwningPlayer(GetKillingUnit())
set Zx=CreateForce()
call ForceAddPlayer(Zx,Ex)
if IsPlayerInForce(GetLocalPlayer(),Zx) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_091")
endif
set y=GetUnitLoc(GetDyingUnit())
set Ax=GetOwningPlayer(GetDyingUnit())
set Dx=CreateForce()
call ForceAddPlayer(Dx,Ax)
set Ux=y
set Ix=GetLocationX(Ux)
set Px=GetLocationY(Ux)
if IsPlayerInForce(GetLocalPlayer(),Dx) then
call PingMinimap(Ix,Px,2.00)
endif
call RemoveLocation(y)
set vx=null
set mx=null
set Qx=null
set Wx=null
set Ex=null
set Zx=null
set Ux=null
set Ax=null
set Dx=null
endfunction
function I1 takes nothing returns boolean
call CreateGroup()
return true
endfunction
function II takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989828,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989827,0)
endfunction
function IX takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function UZ takes nothing returns boolean
if GetResearched()!=1378889806 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889806,true)!=2 then
return false
endif
return true
endfunction
function IZ takes nothing returns boolean
if not UZ() then
return false
endif
return true
endfunction
function J1 takes nothing returns boolean
return true
endfunction
function HA takes nothing returns boolean
if GetResearched()!=1378890051 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890051,true)!=2 then
return false
endif
return true
endfunction
function JA takes nothing returns boolean
if not HA() then
return false
endif
return true
endfunction
function JG takes nothing returns nothing
set t=GetUnitLoc(GetSpellTargetUnit())
set bj_lastCreatedEffect=AddSpecialEffectLoc("Abilities\\Spells\\Orc\\Voodoo\\VoodooAuraTarget.mdl",t)
call DestroyEffect(bj_lastCreatedEffect)
set i=GetUnitLoc(GetSpellAbilityUnit())
set bj_lastCreatedEffect=AddSpecialEffectLoc("Abilities\\Spells\\Orc\\Voodoo\\VoodooAura.mdl",i)
call DestroyEffect(bj_lastCreatedEffect)
call RemoveLocation(t)
call RemoveLocation(i)
endfunction
function HJ takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())==1747988531 then
return true
endif
if GetUnitTypeId(GetTriggerUnit())==1747990328 then
return true
endif
if GetUnitTypeId(GetTriggerUnit())==1747989592 then
return true
endif
if GetUnitTypeId(GetTriggerUnit())==1747990086 then
return true
endif
return false
endfunction
function JJ takes nothing returns boolean
if not HJ() then
return false
endif
return true
endfunction
function Xww takes string Pww,string Aww returns integer
local integer Dww
local integer Hww
local boolean Jww
local integer Kww
local integer Lww
set Ab[Pb]=Aww
set Pb=Pb+1
set Dww=StringHash(Pww)
loop
set Hww=Ao
set Ab[Pb]="when calling hasString in TypeCasting, line 25"
set Pb=Pb+1
if HO[Hww]==0 then
if Hww==0 then
call W1("Nullpointer exception when calling Table.hasString","when calling error in Table, line 18")
else
call W1("Called Table.hasString on invalid object.","when calling error in Table, line 18")
endif
endif
set Jww=HaveSavedString(Zo,Hww,Dww)
set Pb=Pb-1
if Jww then
set Kww=Ao
set Ab[Pb]="when calling loadString in TypeCasting, line 26"
set Pb=Pb+1
if HO[Kww]==0 then
if Kww==0 then
call W1("Nullpointer exception when calling Table.loadString","when calling error in Table, line 57")
else
call W1("Called Table.loadString on invalid object.","when calling error in Table, line 57")
endif
endif
set Aww=LoadStr(Zo,Kww,Dww)
set Pb=Pb-1
exitwhen Aww==Pww
else
set Lww=Ao
set Ab[Pb]="when calling saveString in TypeCasting, line 29"
set Pb=Pb+1
if HO[Lww]==0 then
if Lww==0 then
call W1("Nullpointer exception when calling Table.saveString","when calling error in Table, line 60")
else
call W1("Called Table.saveString on invalid object.","when calling error in Table, line 60")
endif
endif
call SaveStr(Zo,Lww,Dww,Pww)
set Pb=Pb-1
exitwhen true
endif
set Dww=Dww+1
endloop
set Pb=Pb-1
return Dww
endfunction
function g8 takes string U5 returns boolean
local integer I5
local integer P5
local integer A5
local integer D5
local integer H5
local integer J5
local integer K5
local integer L5
local integer X5
local integer C5
local integer V5
local integer B5
local integer N5
local integer M5
local integer w6
local integer u6
local integer r6
local integer s6
local integer t6
local integer i6
local integer S6
local integer c6
local integer o6
local integer O6
local integer l6
local integer b6
local integer y6
local integer p6
local integer e6
local integer q6
local integer a6
local integer n6
local integer d6
local integer f6
local integer R6
local integer T6
local integer Y6
local integer G6
local integer g6
local integer h6
local integer F6
local integer k6
local integer j6
local integer x6
local integer v6
local integer m6
local integer Q6
local integer W6
local integer E6
local integer Z6
local integer U6
local integer I6
local integer P6
local integer A6
local integer D6
local integer H6
local integer J6
local integer K6
local integer L6
local integer X6
local integer C6
local integer V6
local integer B6
local integer N6
local integer M6
local integer w7
local integer u7
local integer r7
local integer s7
local integer t7
local integer i7
local integer S7
local integer c7
local integer o7
local integer O7
local integer l7
local integer b7
local integer y7
local integer p7
local integer e7
local integer q7
local integer a7
local integer n7
local integer d7
local integer f7
local integer R7
local integer T7
local integer Y7
local integer G7
local integer g7
local integer h7
local integer F7
local integer k7
local integer j7
local integer x7
local integer v7
local integer m7
local integer Q7
local integer W7
local integer E7
local integer Z7
local integer U7
local integer I7
local integer P7
local integer A7
local integer D7
local integer H7
local integer J7
local integer K7
local integer L7
local integer X7
local integer C7
local integer V7
local integer B7
local integer N7
local integer M7
local integer w8
local integer u8
local integer r8
local integer s8
local integer t8
local integer i8
local integer S8
local integer c8
local integer o8
local integer O8
local integer l8
local integer b8
local integer y8
local integer p8
local integer e8
local integer q8
local integer a8
local integer n8
local integer d8
local integer f8
local integer R8
local integer T8
local integer Y8
local integer G8
set Ab[Pb]=U5
set Pb=Pb+1
set I5=R2I(70)
set P5=R2I(30)
set A5=R2I(10)
set D5=R2I(70)
set H5=R2I(30)
set J5=R2I(140)
set Ab[Pb]="when calling asList in Multiboards, line 23"
set Pb=Pb+1
set K5=Obw("when calling new_LinkedList in LinkedList, line 391")
call gnw(K5,I5,"when calling add in LinkedList, line 393")
call gnw(K5,P5,"when calling add in LinkedList, line 393")
call gnw(K5,A5,"when calling add in LinkedList, line 393")
call gnw(K5,D5,"when calling add in LinkedList, line 393")
call gnw(K5,H5,"when calling add in LinkedList, line 393")
call gnw(K5,J5,"when calling add in LinkedList, line 393")
set Pb=Pb-1
set Pc[0]=K5
set L5=R2I(70)
set X5=R2I(30)
set C5=R2I(10)
set V5=R2I(70)
set B5=R2I(30)
set N5=R2I(140)
set Ab[Pb]="when calling asList in Multiboards, line 24"
set Pb=Pb+1
set M5=Obw("when calling new_LinkedList in LinkedList, line 391")
call gnw(M5,L5,"when calling add in LinkedList, line 393")
call gnw(M5,X5,"when calling add in LinkedList, line 393")
call gnw(M5,C5,"when calling add in LinkedList, line 393")
call gnw(M5,V5,"when calling add in LinkedList, line 393")
call gnw(M5,B5,"when calling add in LinkedList, line 393")
call gnw(M5,N5,"when calling add in LinkedList, line 393")
set Pb=Pb-1
set Pc[1]=M5
set w6=R2I(70)
set u6=R2I(30)
set r6=R2I(10)
set s6=R2I(70)
set t6=R2I(30)
set i6=R2I(140)
set Ab[Pb]="when calling asList in Multiboards, line 25"
set Pb=Pb+1
set S6=Obw("when calling new_LinkedList in LinkedList, line 391")
call gnw(S6,w6,"when calling add in LinkedList, line 393")
call gnw(S6,u6,"when calling add in LinkedList, line 393")
call gnw(S6,r6,"when calling add in LinkedList, line 393")
call gnw(S6,s6,"when calling add in LinkedList, line 393")
call gnw(S6,t6,"when calling add in LinkedList, line 393")
call gnw(S6,i6,"when calling add in LinkedList, line 393")
set Pb=Pb-1
set Pc[2]=S6
set c6=R2I(2.5)
set o6=R2I(2.5)
set O6=R2I(400)
set l6=R2I(2.5)
set b6=R2I(2.5)
set y6=R2I(2.5)
set Ab[Pb]="when calling asList in Multiboards, line 27"
set Pb=Pb+1
set p6=Obw("when calling new_LinkedList in LinkedList, line 391")
call gnw(p6,c6,"when calling add in LinkedList, line 393")
call gnw(p6,o6,"when calling add in LinkedList, line 393")
call gnw(p6,O6,"when calling add in LinkedList, line 393")
call gnw(p6,l6,"when calling add in LinkedList, line 393")
call gnw(p6,b6,"when calling add in LinkedList, line 393")
call gnw(p6,y6,"when calling add in LinkedList, line 393")
set Pb=Pb-1
set Pc[3]=p6
set e6=R2I(70)
set q6=R2I(30)
set a6=R2I(30)
set n6=R2I(10)
set d6=R2I(126)
set f6=R2I(84.000007629)
set Ab[Pb]="when calling asList in Multiboards, line 28"
set Pb=Pb+1
set R6=Obw("when calling new_LinkedList in LinkedList, line 391")
call gnw(R6,e6,"when calling add in LinkedList, line 393")
call gnw(R6,q6,"when calling add in LinkedList, line 393")
call gnw(R6,a6,"when calling add in LinkedList, line 393")
call gnw(R6,n6,"when calling add in LinkedList, line 393")
call gnw(R6,d6,"when calling add in LinkedList, line 393")
call gnw(R6,f6,"when calling add in LinkedList, line 393")
set Pb=Pb-1
set Pc[4]=R6
set T6=R2I(70)
set Y6=R2I(30)
set G6=R2I(30)
set g6=R2I(10)
set h6=R2I(126)
set F6=R2I(84.000007629)
set Ab[Pb]="when calling asList in Multiboards, line 29"
set Pb=Pb+1
set k6=Obw("when calling new_LinkedList in LinkedList, line 391")
call gnw(k6,T6,"when calling add in LinkedList, line 393")
call gnw(k6,Y6,"when calling add in LinkedList, line 393")
call gnw(k6,G6,"when calling add in LinkedList, line 393")
call gnw(k6,g6,"when calling add in LinkedList, line 393")
call gnw(k6,h6,"when calling add in LinkedList, line 393")
call gnw(k6,F6,"when calling add in LinkedList, line 393")
set Pb=Pb-1
set Pc[5]=k6
set j6=R2I(70)
set x6=R2I(30)
set v6=R2I(30)
set m6=R2I(10)
set Q6=R2I(126)
set W6=R2I(84.000007629)
set Ab[Pb]="when calling asList in Multiboards, line 30"
set Pb=Pb+1
set E6=Obw("when calling new_LinkedList in LinkedList, line 391")
call gnw(E6,j6,"when calling add in LinkedList, line 393")
call gnw(E6,x6,"when calling add in LinkedList, line 393")
call gnw(E6,v6,"when calling add in LinkedList, line 393")
call gnw(E6,m6,"when calling add in LinkedList, line 393")
call gnw(E6,Q6,"when calling add in LinkedList, line 393")
call gnw(E6,W6,"when calling add in LinkedList, line 393")
set Pb=Pb-1
set Pc[6]=E6
set Z6=R2I(70)
set U6=R2I(30)
set I6=R2I(30)
set P6=R2I(10)
set A6=R2I(126)
set D6=R2I(84.000007629)
set Ab[Pb]="when calling asList in Multiboards, line 31"
set Pb=Pb+1
set H6=Obw("when calling new_LinkedList in LinkedList, line 391")
call gnw(H6,Z6,"when calling add in LinkedList, line 393")
call gnw(H6,U6,"when calling add in LinkedList, line 393")
call gnw(H6,I6,"when calling add in LinkedList, line 393")
call gnw(H6,P6,"when calling add in LinkedList, line 393")
call gnw(H6,A6,"when calling add in LinkedList, line 393")
call gnw(H6,D6,"when calling add in LinkedList, line 393")
set Pb=Pb-1
set Pc[7]=H6
set J6=R2I(70)
set K6=R2I(30)
set L6=R2I(30)
set X6=R2I(10)
set C6=R2I(126)
set V6=R2I(84.000007629)
set Ab[Pb]="when calling asList in Multiboards, line 32"
set Pb=Pb+1
set B6=Obw("when calling new_LinkedList in LinkedList, line 391")
call gnw(B6,J6,"when calling add in LinkedList, line 393")
call gnw(B6,K6,"when calling add in LinkedList, line 393")
call gnw(B6,L6,"when calling add in LinkedList, line 393")
call gnw(B6,X6,"when calling add in LinkedList, line 393")
call gnw(B6,C6,"when calling add in LinkedList, line 393")
call gnw(B6,V6,"when calling add in LinkedList, line 393")
set Pb=Pb-1
set Pc[8]=B6
set N6=R2I(70)
set M6=R2I(30)
set w7=R2I(30)
set u7=R2I(10)
set r7=R2I(126)
set s7=R2I(84.000007629)
set Ab[Pb]="when calling asList in Multiboards, line 33"
set Pb=Pb+1
set t7=Obw("when calling new_LinkedList in LinkedList, line 391")
call gnw(t7,N6,"when calling add in LinkedList, line 393")
call gnw(t7,M6,"when calling add in LinkedList, line 393")
call gnw(t7,w7,"when calling add in LinkedList, line 393")
call gnw(t7,u7,"when calling add in LinkedList, line 393")
call gnw(t7,r7,"when calling add in LinkedList, line 393")
call gnw(t7,s7,"when calling add in LinkedList, line 393")
set Pb=Pb-1
set Pc[9]=t7
set Ac[0]=4
set Ac[1]=0
set Dc[0]=4
set Dc[1]=1
set Hc[0]=1
set Hc[1]=4
set Jc[0]=1
set Jc[1]=5
set Kc[0]=1
set Kc[1]=6
set Lc[0]=2
set Lc[1]=6
set Xc[0]=2
set Xc[1]=3
set i7=Xww("Food","when calling stringToIndex in Multiboards, line 56")
set S7=Xww("0","when calling stringToIndex in Multiboards, line 56")
set c7=Xww("|","when calling stringToIndex in Multiboards, line 56")
set o7=Xww("Income","when calling stringToIndex in Multiboards, line 56")
set O7=Xww("0","when calling stringToIndex in Multiboards, line 56")
set l7=Xww(" ","when calling stringToIndex in Multiboards, line 56")
set Ab[Pb]="when calling asList in Multiboards, line 56"
set Pb=Pb+1
set b7=Obw("when calling new_LinkedList in LinkedList, line 391")
call gnw(b7,i7,"when calling add in LinkedList, line 393")
call gnw(b7,S7,"when calling add in LinkedList, line 393")
call gnw(b7,c7,"when calling add in LinkedList, line 393")
call gnw(b7,o7,"when calling add in LinkedList, line 393")
call gnw(b7,O7,"when calling add in LinkedList, line 393")
call gnw(b7,l7,"when calling add in LinkedList, line 393")
set Pb=Pb-1
set Cc[0]=b7
set y7=Xww("Iron","when calling stringToIndex in Multiboards, line 57")
set p7=Xww("0","when calling stringToIndex in Multiboards, line 57")
set e7=Xww("|","when calling stringToIndex in Multiboards, line 57")
set q7=Xww("Upkeep","when calling stringToIndex in Multiboards, line 57")
set a7=Xww("0","when calling stringToIndex in Multiboards, line 57")
set n7=Xww(" ","when calling stringToIndex in Multiboards, line 57")
set Ab[Pb]="when calling asList in Multiboards, line 57"
set Pb=Pb+1
set d7=Obw("when calling new_LinkedList in LinkedList, line 391")
call gnw(d7,y7,"when calling add in LinkedList, line 393")
call gnw(d7,p7,"when calling add in LinkedList, line 393")
call gnw(d7,e7,"when calling add in LinkedList, line 393")
call gnw(d7,q7,"when calling add in LinkedList, line 393")
call gnw(d7,a7,"when calling add in LinkedList, line 393")
call gnw(d7,n7,"when calling add in LinkedList, line 393")
set Pb=Pb-1
set Cc[1]=d7
set f7=Xww("Stone","when calling stringToIndex in Multiboards, line 58")
set R7=Xww("0","when calling stringToIndex in Multiboards, line 58")
set T7=Xww("|","when calling stringToIndex in Multiboards, line 58")
set Y7=Xww(" ","when calling stringToIndex in Multiboards, line 58")
set G7=Xww(" ","when calling stringToIndex in Multiboards, line 58")
set g7=Xww(" ","when calling stringToIndex in Multiboards, line 58")
set Ab[Pb]="when calling asList in Multiboards, line 58"
set Pb=Pb+1
set h7=Obw("when calling new_LinkedList in LinkedList, line 391")
call gnw(h7,f7,"when calling add in LinkedList, line 393")
call gnw(h7,R7,"when calling add in LinkedList, line 393")
call gnw(h7,T7,"when calling add in LinkedList, line 393")
call gnw(h7,Y7,"when calling add in LinkedList, line 393")
call gnw(h7,G7,"when calling add in LinkedList, line 393")
call gnw(h7,g7,"when calling add in LinkedList, line 393")
set Pb=Pb-1
set Cc[2]=h7
set F7=Xww(" ","when calling stringToIndex in Multiboards, line 60")
set k7=Xww(" ","when calling stringToIndex in Multiboards, line 60")
set j7=Xww("                           City info","when calling stringToIndex in Multiboards, line 60")
set x7=Xww(" ","when calling stringToIndex in Multiboards, line 60")
set v7=Xww(" ","when calling stringToIndex in Multiboards, line 60")
set m7=Xww(" ","when calling stringToIndex in Multiboards, line 60")
set Ab[Pb]="when calling asList in Multiboards, line 60"
set Pb=Pb+1
set Q7=Obw("when calling new_LinkedList in LinkedList, line 391")
call gnw(Q7,F7,"when calling add in LinkedList, line 393")
call gnw(Q7,k7,"when calling add in LinkedList, line 393")
call gnw(Q7,j7,"when calling add in LinkedList, line 393")
call gnw(Q7,x7,"when calling add in LinkedList, line 393")
call gnw(Q7,v7,"when calling add in LinkedList, line 393")
call gnw(Q7,m7,"when calling add in LinkedList, line 393")
set Pb=Pb-1
set Cc[3]=Q7
set W7=Xww("Tax","when calling stringToIndex in Multiboards, line 61")
set E7=Xww("0","when calling stringToIndex in Multiboards, line 61")
set Z7=Xww(" ","when calling stringToIndex in Multiboards, line 61")
set U7=Xww("|","when calling stringToIndex in Multiboards, line 61")
set I7=Xww(" ","when calling stringToIndex in Multiboards, line 61")
set P7=Xww(" ","when calling stringToIndex in Multiboards, line 61")
set Ab[Pb]="when calling asList in Multiboards, line 61"
set Pb=Pb+1
set A7=Obw("when calling new_LinkedList in LinkedList, line 391")
call gnw(A7,W7,"when calling add in LinkedList, line 393")
call gnw(A7,E7,"when calling add in LinkedList, line 393")
call gnw(A7,Z7,"when calling add in LinkedList, line 393")
call gnw(A7,U7,"when calling add in LinkedList, line 393")
call gnw(A7,I7,"when calling add in LinkedList, line 393")
call gnw(A7,P7,"when calling add in LinkedList, line 393")
set Pb=Pb-1
set Cc[4]=A7
set D7=Xww("Public order","when calling stringToIndex in Multiboards, line 62")
set H7=Xww("0","when calling stringToIndex in Multiboards, line 62")
set J7=Xww(" ","when calling stringToIndex in Multiboards, line 62")
set K7=Xww("|","when calling stringToIndex in Multiboards, line 62")
set L7=Xww(" ","when calling stringToIndex in Multiboards, line 62")
set X7=Xww(" ","when calling stringToIndex in Multiboards, line 62")
set Ab[Pb]="when calling asList in Multiboards, line 62"
set Pb=Pb+1
set C7=Obw("when calling new_LinkedList in LinkedList, line 391")
call gnw(C7,D7,"when calling add in LinkedList, line 393")
call gnw(C7,H7,"when calling add in LinkedList, line 393")
call gnw(C7,J7,"when calling add in LinkedList, line 393")
call gnw(C7,K7,"when calling add in LinkedList, line 393")
call gnw(C7,L7,"when calling add in LinkedList, line 393")
call gnw(C7,X7,"when calling add in LinkedList, line 393")
set Pb=Pb-1
set Cc[5]=C7
set V7=Xww("Population","when calling stringToIndex in Multiboards, line 63")
set B7=Xww("0","when calling stringToIndex in Multiboards, line 63")
set N7=Xww(" ","when calling stringToIndex in Multiboards, line 63")
set M7=Xww("|","when calling stringToIndex in Multiboards, line 63")
set w8=Xww(" ","when calling stringToIndex in Multiboards, line 63")
set u8=Xww(" ","when calling stringToIndex in Multiboards, line 63")
set Ab[Pb]="when calling asList in Multiboards, line 63"
set Pb=Pb+1
set r8=Obw("when calling new_LinkedList in LinkedList, line 391")
call gnw(r8,V7,"when calling add in LinkedList, line 393")
call gnw(r8,B7,"when calling add in LinkedList, line 393")
call gnw(r8,N7,"when calling add in LinkedList, line 393")
call gnw(r8,M7,"when calling add in LinkedList, line 393")
call gnw(r8,w8,"when calling add in LinkedList, line 393")
call gnw(r8,u8,"when calling add in LinkedList, line 393")
set Pb=Pb-1
set Cc[6]=r8
set s8=Xww(" ","when calling stringToIndex in Multiboards, line 64")
set t8=Xww(" ","when calling stringToIndex in Multiboards, line 64")
set i8=Xww(" ","when calling stringToIndex in Multiboards, line 64")
set S8=Xww("|","when calling stringToIndex in Multiboards, line 64")
set c8=Xww(" ","when calling stringToIndex in Multiboards, line 64")
set o8=Xww(" ","when calling stringToIndex in Multiboards, line 64")
set Ab[Pb]="when calling asList in Multiboards, line 64"
set Pb=Pb+1
set O8=Obw("when calling new_LinkedList in LinkedList, line 391")
call gnw(O8,s8,"when calling add in LinkedList, line 393")
call gnw(O8,t8,"when calling add in LinkedList, line 393")
call gnw(O8,i8,"when calling add in LinkedList, line 393")
call gnw(O8,S8,"when calling add in LinkedList, line 393")
call gnw(O8,c8,"when calling add in LinkedList, line 393")
call gnw(O8,o8,"when calling add in LinkedList, line 393")
set Pb=Pb-1
set Cc[7]=O8
set l8=Xww(" ","when calling stringToIndex in Multiboards, line 65")
set b8=Xww(" ","when calling stringToIndex in Multiboards, line 65")
set y8=Xww(" ","when calling stringToIndex in Multiboards, line 65")
set p8=Xww("|","when calling stringToIndex in Multiboards, line 65")
set e8=Xww(" ","when calling stringToIndex in Multiboards, line 65")
set q8=Xww(" ","when calling stringToIndex in Multiboards, line 65")
set Ab[Pb]="when calling asList in Multiboards, line 65"
set Pb=Pb+1
set a8=Obw("when calling new_LinkedList in LinkedList, line 391")
call gnw(a8,l8,"when calling add in LinkedList, line 393")
call gnw(a8,b8,"when calling add in LinkedList, line 393")
call gnw(a8,y8,"when calling add in LinkedList, line 393")
call gnw(a8,p8,"when calling add in LinkedList, line 393")
call gnw(a8,e8,"when calling add in LinkedList, line 393")
call gnw(a8,q8,"when calling add in LinkedList, line 393")
set Pb=Pb-1
set Cc[8]=a8
set n8=Xww(" ","when calling stringToIndex in Multiboards, line 66")
set d8=Xww(" ","when calling stringToIndex in Multiboards, line 66")
set f8=Xww(" ","when calling stringToIndex in Multiboards, line 66")
set R8=Xww("|","when calling stringToIndex in Multiboards, line 66")
set T8=Xww(" ","when calling stringToIndex in Multiboards, line 66")
set Y8=Xww(" ","when calling stringToIndex in Multiboards, line 66")
set Ab[Pb]="when calling asList in Multiboards, line 66"
set Pb=Pb+1
set G8=Obw("when calling new_LinkedList in LinkedList, line 391")
call gnw(G8,n8,"when calling add in LinkedList, line 393")
call gnw(G8,d8,"when calling add in LinkedList, line 393")
call gnw(G8,f8,"when calling add in LinkedList, line 393")
call gnw(G8,R8,"when calling add in LinkedList, line 393")
call gnw(G8,T8,"when calling add in LinkedList, line 393")
call gnw(G8,Y8,"when calling add in LinkedList, line 393")
set Pb=Pb-1
set Cc[9]=G8
set Pb=Pb-1
return true
endfunction
function JRw takes nothing returns boolean
set Pb=0
return g8("Multiboards, line 1")
endfunction
function JU takes nothing returns nothing
set s=bj_FORCE_ALL_PLAYERS
call ForForce(s,aq)
endfunction
function JY takes nothing returns nothing
local player IY=GetOwningPlayer(GetAttacker())
local player PY=GetOwningPlayer(GetAttacker())
local player AY
local player DY
local unit HY
set r[GetPlayerId(IY)+1]=r[GetPlayerId(PY)+1]+1
set AY=GetOwningPlayer(GetTriggerUnit())
set DY=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(AY)+1]=r[GetPlayerId(DY)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set HY=GetTriggerUnit()
call SetUnitState(HY,UNIT_STATE_LIFE,GetUnitState(HY,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set IY=null
set PY=null
set AY=null
set DY=null
set HY=null
endfunction
function Dk takes nothing returns boolean
if GetUnitTypeId(GetSpellTargetUnit())==1747988787 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747990361 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747989831 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747989040 then
return true
endif
return false
endfunction
function Hk takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988801 then
return false
endif
if not Dk() then
return false
endif
return true
endfunction
function Jk takes nothing returns boolean
if not Hk() then
return false
endif
return true
endfunction
function Hm takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function Jm takes nothing returns boolean
if not Hm() then
return false
endif
return true
endfunction
function K1 takes nothing returns boolean
return true
endfunction
function K9 takes nothing returns boolean
return true
endfunction
function KA takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990607,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990583,0)
endfunction
function JI takes nothing returns boolean
if GetResearched()!=1378890033 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890033,true)!=2 then
return false
endif
return true
endfunction
function KI takes nothing returns boolean
if not JI() then
return false
endif
return true
endfunction
function Wsw takes string Ysw,string Gsw,real gsw,real hsw,real Fsw,integer ksw,real jsw,real xsw,boolean vsw,string msw returns integer
local integer Qsw
set Ab[Pb]=msw
set Pb=Pb+1
set Ab[Pb]="when calling alloc_CityModifierClass in CityModifiers, line 39"
set Pb=Pb+1
if lO==0 then
if bO<32768 then
set bO=bO+1
set Qsw=bO
else
call W1("Out of memory: Could not create CityModifierClass.","when calling error in CityModifiers, line 28")
set Qsw=0
endif
else
set lO=lO-1
set Qsw=OO[lO]
endif
set Pb=Pb-1
set ql[Qsw]=gsw
set al[Qsw]=xsw
set nl[Qsw]=vsw
set dl[Qsw]=hsw
set fl[Qsw]=ksw
set Rl[Qsw]=jsw
set Tl[Qsw]=Fsw
set Yl[Qsw]=Ysw
set Gl[Qsw]=Gsw
set Pb=Pb-1
return Qsw
endfunction
function TV takes string cV returns boolean
local integer oV
local integer OV
local integer lV
local integer bV
local integer yV
local integer pV
local integer eV
local integer qV
local integer aV
local integer nV
local integer dV
local integer fV
local integer RV
set Ab[Pb]=cV
set Pb=Pb+1
set OV=R2I(0.5)
set lV=R2I(1)
set Ab[Pb]="when calling asList in CityModifiers, line 9"
set Pb=Pb+1
set bV=Obw("when calling new_LinkedList in LinkedList, line 391")
call gnw(bV,OV,"when calling add in LinkedList, line 393")
call gnw(bV,lV,"when calling add in LinkedList, line 393")
set Pb=Pb-1
set lS[0]=bV
set yV=R2I(1)
set pV=R2I(3)
set Ab[Pb]="when calling asList in CityModifiers, line 10"
set Pb=Pb+1
set eV=Obw("when calling new_LinkedList in LinkedList, line 391")
call gnw(eV,yV,"when calling add in LinkedList, line 393")
call gnw(eV,pV,"when calling add in LinkedList, line 393")
set Pb=Pb-1
set lS[1]=eV
set qV=R2I(3)
set aV=R2I(10)
set Ab[Pb]="when calling asList in CityModifiers, line 11"
set Pb=Pb+1
set nV=Obw("when calling new_LinkedList in LinkedList, line 391")
call gnw(nV,qV,"when calling add in LinkedList, line 393")
call gnw(nV,aV,"when calling add in LinkedList, line 393")
set Pb=Pb-1
set lS[2]=nV
set dV=R2I(10)
set fV=R2I(20)
set Ab[Pb]="when calling asList in CityModifiers, line 12"
set Pb=Pb+1
set RV=Obw("when calling new_LinkedList in LinkedList, line 391")
call gnw(RV,dV,"when calling add in LinkedList, line 393")
call gnw(RV,fV,"when calling add in LinkedList, line 393")
set Pb=Pb-1
set lS[3]=RV
set bS=Wsw("|cffff0000Just conquered|r","|cffc00000-PO -pop|r",240,1.0,0.0,1,-1.0,-30.0,false,"when calling new_CityModifierClass in CityModifiers, line 70")
set yS=Wsw("|cfffffb00Just revolted|r","|cff00af00+PO|r|cffc00000 -pop|r",120.0,1.0,0.0,0,0.,30.0,false,"when calling new_CityModifierClass in CityModifiers, line 78")
set pS=Wsw("|cff33ff00Population Boom|r","|cff33ff00++pop|r",120.0,0.01,0.,0,0.,0.,true,"when calling new_CityModifierClass in CityModifiers, line 86")
set eS=Wsw("|cffff0000Plague outburst|r","|cffff0000--pop|r",240,0.03,0.,2,-1.,0.,true,"when calling new_CityModifierClass in CityModifiers, line 94")
set qS=Wsw("|cffaf0000Big Fire|r","|cffc00000-pop|r",30,0.01,0.,2,-1.,0.,true,"when calling new_CityModifierClass in CityModifiers, line 102")
set aS=Wsw("|cff15ff00More trade estabilished|r","|cff00af00+tax +pop|r",240,0.01,0.15,0,1.,0.,true,"when calling new_CityModifierClass in CityModifiers, line 110")
set nS=Wsw("|cffff0000Massacred population|r","|cff00af00+PO |r|cffff0000--pop|r",30,0.05,0.,3,-1.,10.,true,"when calling new_CityModifierClass in CityModifiers, line 118")
set dS=Wsw("|cff00ff00Prospering|r","|cff00af00+PO +pop +tax|r",240,0.01,0.10,1,1.,20.0,true,"when calling new_CityModifierClass in CityModifiers, line 126")
set fS=Wsw("|cffff0000Sieged|r","|cffc00000-PO -pop|r",5,1.0,0.,0,-1.,-10.0,true,"when calling new_CityModifierClass in CityModifiers, line 134")
set RS=hOw("when calling new_HashMap in CityModifiers, line 144")
set oV=RS
call maw(oV,0,bS,"when calling put in CityModifiers, line 151")
call maw(oV,1,yS,"when calling put in CityModifiers, line 152")
call maw(oV,2,pS,"when calling put in CityModifiers, line 153")
call maw(oV,3,eS,"when calling put in CityModifiers, line 154")
call maw(oV,4,qS,"when calling put in CityModifiers, line 155")
call maw(oV,5,aS,"when calling put in CityModifiers, line 156")
call maw(oV,6,nS,"when calling put in CityModifiers, line 157")
call maw(oV,7,dS,"when calling put in CityModifiers, line 158")
call maw(oV,8,fS,"when calling put in CityModifiers, line 159")
set Pb=Pb-1
return true
endfunction
function KRw takes nothing returns boolean
set Pb=0
return TV("CityModifiers, line 1")
endfunction
function JX takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747988531 then
return false
endif
return true
endfunction
function KX takes nothing returns boolean
if not JX() then
return false
endif
return true
endfunction
function Km takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988561,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988784,0)
endfunction
function LI takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989826,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989828,0)
endfunction
function KP takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function LP takes nothing returns boolean
if not KP() then
return false
endif
return true
endfunction
function pC takes string OC returns boolean
local playerunitevent lC
local integer bC
local integer yC
set Ab[Pb]=OC
set Pb=Pb+1
set lC=EVENT_PLAYER_UNIT_ATTACKED
set Ab[Pb]="when calling alloc_CastleCapture_EventListener_line8 in CastleCapture, line 8"
set Pb=Pb+1
if SO==0 then
if cO<32768 then
set cO=cO+1
set bC=cO
set oO[bC]=662
else
call W1("Out of memory: Could not create CastleCapture_EventListener_line8.","when calling error in CastleCapture, line 8")
set bC=0
endif
else
set SO=SO-1
set bC=iO[SO]
set oO[bC]=662
endif
set Pb=Pb-1
set Cl[bC]=0
set Vl[bC]=0
set Bl[bC]=0
set Ab[Pb]="when calling add in CastleCapture, line 8"
set Pb=Pb+1
set Ab[Pb]="when calling toIntId in ClosureEvents, line 112"
set Pb=Pb+1
set yC=ES[GetHandleId(lC)]
if yC==0 then
set yC=tB(lC,"when calling registerEventId in ClosureEvents, line 229")
endif
set Pb=Pb-1
set Cl[bC]=yC
if PS[Cl[bC]]!=0 then
set Bl[PS[Cl[bC]]]=bC
set Vl[bC]=PS[Cl[bC]]
endif
set PS[Cl[bC]]=bC
set Pb=Pb-1-1
set lC=null
return true
endfunction
function LRw takes nothing returns boolean
set Pb=0
return pC("CastleCapture, line 1")
endfunction
function LX takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function KZ takes nothing returns boolean
if GetResearched()!=1378889809 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889809,true)!=1 then
return false
endif
return true
endfunction
function LZ takes nothing returns boolean
if not KZ() then
return false
endif
return true
endfunction
function M0w takes nothing returns boolean
return true
endfunction
function MA takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651855,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651851,0)
endfunction
function NI takes nothing returns boolean
if GetResearched()!=1378889797 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889797,true)!=1 then
return false
endif
return true
endfunction
function MI takes nothing returns boolean
if not NI() then
return false
endif
return true
endfunction
function MJ takes nothing returns nothing
local integer KJ=1
local integer LJ=1751343475
local player XJ=GetOwningPlayer(GetTriggerUnit())
local rect NJ=bj_mapInitialPlayableArea
local location BJ=Location(GetRectCenterX(NJ),GetRectCenterY(NJ))
local location CJ=Location(GetLocationX(BJ)+100000000.00,GetLocationY(BJ)+100000000.00)
local real VJ=bj_UNIT_FACING
call GroupClear(bj_lastCreatedGroup)
loop
set KJ=KJ-1
exitwhen KJ<0
call CreateUnitAtLocSaveLast(XJ,LJ,CJ,VJ)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
call ShowUnit(bj_lastCreatedUnit,false)
set XJ=null
set CJ=null
set BJ=null
set NJ=null
endfunction
function GM takes string RM returns boolean
local integer TM
local timer YM
set Ab[Pb]=RM
set Pb=Pb+1
set Ab[Pb]="when calling alloc_DateTime_CallbackPeriodic_line31 in DateTime, line 31"
set Pb=Pb+1
if hO==0 then
if FO<32768 then
set FO=FO+1
set TM=FO
set kO[TM]=634
else
call W1("Out of memory: Could not create DateTime_CallbackPeriodic_line31.","when calling error in DateTime, line 31")
set TM=0
endif
else
set hO=hO-1
set TM=gO[hO]
set kO[TM]=634
endif
set Pb=Pb-1
set sb[TM]=120.0
set Ab[Pb]="when calling doPeriodically in DateTime, line 31"
set Pb=Pb+1
set YM=mww("when calling getTimer in ClosureTimers, line 57")
set Ab[Pb]="when calling doPeriodically in ClosureTimers, line 57"
set Pb=Pb+1
call Dqw(TM,YM,1.0,"when calling start in ClosureTimers, line 45")
set Pb=Pb-1-1-1
set YM=null
return true
endfunction
function MRw takes nothing returns boolean
set Pb=0
return GM("DateTime, line 1")
endfunction
function Mm takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988565,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988563,0)
endfunction
function Mv takes nothing returns nothing
call SetMapFlag(MAP_LOCK_RESOURCE_TRADING,false)
endfunction
function N0w takes nothing returns boolean
return true
endfunction
function N9 takes nothing returns boolean
set po=-340282366920938000000000000000000000000.
return true
endfunction
function BA takes nothing returns boolean
if GetResearched()!=1378890053 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890053,true)!=1 then
return false
endif
return true
endfunction
function NA takes nothing returns boolean
if not BA() then
return false
endif
return true
endfunction
function c1 takes string r1 returns boolean
local integer s1
local timer t1
local integer i1
local timer S1
set Ab[Pb]=r1
set Pb=Pb+1
set Ab[Pb]="when calling alloc_Economy_CallbackPeriodic_line43 in Economy, line 43"
set Pb=Pb+1
if hO==0 then
if FO<32768 then
set FO=FO+1
set s1=FO
set kO[s1]=635
else
call W1("Out of memory: Could not create Economy_CallbackPeriodic_line43.","when calling error in Economy, line 43")
set s1=0
endif
else
set hO=hO-1
set s1=gO[hO]
set kO[s1]=635
endif
set Pb=Pb-1
set Ab[Pb]="when calling doPeriodically in Economy, line 43"
set Pb=Pb+1
set t1=mww("when calling getTimer in ClosureTimers, line 57")
set Ab[Pb]="when calling doPeriodically in ClosureTimers, line 57"
set Pb=Pb+1
call Dqw(s1,t1,0.333333343,"when calling start in ClosureTimers, line 45")
set Pb=Pb-1-1
set Ab[Pb]="when calling alloc_Economy_CallbackPeriodic_line50 in Economy, line 50"
set Pb=Pb+1
if hO==0 then
if FO<32768 then
set FO=FO+1
set i1=FO
set kO[i1]=636
else
call W1("Out of memory: Could not create Economy_CallbackPeriodic_line50.","when calling error in Economy, line 50")
set i1=0
endif
else
set hO=hO-1
set i1=gO[hO]
set kO[i1]=636
endif
set Pb=Pb-1
set Ab[Pb]="when calling doPeriodically in Economy, line 50"
set Pb=Pb+1
set S1=mww("when calling getTimer in ClosureTimers, line 57")
set Ab[Pb]="when calling doPeriodically in ClosureTimers, line 57"
set Pb=Pb+1
call Dqw(i1,S1,10.0,"when calling start in ClosureTimers, line 45")
set Pb=Pb-1-1-1
set t1=null
set S1=null
return true
endfunction
function NRw takes nothing returns boolean
set Pb=0
return c1("Economy, line 1")
endfunction
function Bm takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function Nm takes nothing returns boolean
if not Bm() then
return false
endif
return true
endfunction
function OE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989080,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988818,0)
endfunction
function oG takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989044 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function OG takes nothing returns boolean
if not oG() then
return false
endif
return true
endfunction
function OI takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651846,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651847,0)
endfunction
function OJ takes nothing returns nothing
local integer rJ=1
local integer sJ=1751277938
local player tJ=GetOwningPlayer(GetConstructedStructure())
local rect oJ=bj_mapInitialPlayableArea
local location cJ=Location(GetRectCenterX(oJ),GetRectCenterY(oJ))
local location iJ=Location(GetLocationX(cJ)+100000000.00,GetLocationY(cJ)+1000000000.00)
local real SJ=bj_UNIT_FACING
call GroupClear(bj_lastCreatedGroup)
loop
set rJ=rJ-1
exitwhen rJ<0
call CreateUnitAtLocSaveLast(tJ,sJ,iJ,SJ)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
call ShowUnit(bj_lastCreatedUnit,false)
set p[GetPlayerId(GetOwningPlayer(GetConstructedStructure()))+1]=true
set tJ=null
set iJ=null
set cJ=null
set oJ=null
endfunction
function qww_2 takes string bww returns boolean
local playerunitevent yww
local integer pww
local integer eww
set Ab[Pb]=bww
set Pb=Pb+1
set yww=EVENT_PLAYER_UNIT_SPELL_CAST
set Ab[Pb]="when calling alloc_Taxation_EventListener_line6 in Taxation, line 6"
set Pb=Pb+1
if SO==0 then
if cO<32768 then
set cO=cO+1
set pww=cO
set oO[pww]=676
else
call W1("Out of memory: Could not create Taxation_EventListener_line6.","when calling error in Taxation, line 6")
set pww=0
endif
else
set SO=SO-1
set pww=iO[SO]
set oO[pww]=676
endif
set Pb=Pb-1
set Cl[pww]=0
set Vl[pww]=0
set Bl[pww]=0
set Ab[Pb]="when calling add in Taxation, line 6"
set Pb=Pb+1
set Ab[Pb]="when calling toIntId in ClosureEvents, line 112"
set Pb=Pb+1
set eww=ES[GetHandleId(yww)]
if eww==0 then
set eww=tB(yww,"when calling registerEventId in ClosureEvents, line 229")
endif
set Pb=Pb-1
set Cl[pww]=eww
if PS[Cl[pww]]!=0 then
set Bl[PS[Cl[pww]]]=pww
set Vl[pww]=PS[Cl[pww]]
endif
set PS[Cl[pww]]=pww
set Pb=Pb-1-1
set yww=null
return true
endfunction
function OTw takes nothing returns boolean
set Pb=0
return qww_2("Taxation, line 1")
endfunction
function OX takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function oZ takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function OZ takes nothing returns boolean
if not oZ() then
return false
endif
return true
endfunction
function Oww takes nothing returns boolean
set Zo=InitHashtable()
return true
endfunction
function P1 takes nothing returns nothing
call GroupAddUnit(dc,GetEnumUnit())
endfunction
function P9 takes nothing returns boolean
return true
endfunction
function IH takes nothing returns boolean
if GetUnitTypeId(GetConstructedStructure())==1747989040 then
return true
endif
if GetUnitTypeId(GetConstructedStructure())==1747990361 then
return true
endif
if GetUnitTypeId(GetConstructedStructure())==1747989831 then
return true
endif
return false
endfunction
function PH takes nothing returns boolean
if e[GetPlayerId(GetOwningPlayer(GetConstructedStructure()))+1]!=false then
return false
endif
if not IH() then
return false
endif
return true
endfunction
function IL takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989060 then
return false
endif
return true
endfunction
function PL takes nothing returns boolean
if not IL() then
return false
endif
return true
endfunction
function IW takes nothing returns boolean
if GetResearched()!=1378889801 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889801,true)!=1 then
return false
endif
return true
endfunction
function PW takes nothing returns boolean
if not IW() then
return false
endif
return true
endfunction
function PZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989557,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989559,0)
endfunction
function Q2 takes nothing returns boolean
return true
endfunction
function QH takes nothing returns nothing
call UnitRemoveAbility(GetTriggerUnit(),1093677402)
endfunction
function QL takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function QRw takes nothing returns boolean
set Pb=0
set Ab[Pb]="ObjectIdGenerator, line 1"
set Pb=Pb+1
set Ab[Pb]="when calling new_IdGenerator in ObjectIdGenerator, line 7"
set Pb=Pb+1
set Ab[Pb]="when calling alloc_IdGenerator in ObjectIdGenerator, line 20"
set Pb=Pb+1
if il==0 then
if Sl<32768 then
set Sl=Sl+1
else
call W1("Out of memory: Could not create IdGenerator.","when calling error in ObjectIdGenerator, line 14")
endif
else
set il=il-1
endif
set Pb=Pb-1-1
set Ab[Pb]="when calling new_IdGenerator in ObjectIdGenerator, line 8"
set Pb=Pb+1
set Ab[Pb]="when calling alloc_IdGenerator in ObjectIdGenerator, line 20"
set Pb=Pb+1
if il==0 then
if Sl<32768 then
set Sl=Sl+1
else
call W1("Out of memory: Could not create IdGenerator.","when calling error in ObjectIdGenerator, line 14")
endif
else
set il=il-1
endif
set Pb=Pb-1-1
set Ab[Pb]="when calling new_IdGenerator in ObjectIdGenerator, line 9"
set Pb=Pb+1
set Ab[Pb]="when calling alloc_IdGenerator in ObjectIdGenerator, line 20"
set Pb=Pb+1
if il==0 then
if Sl<32768 then
set Sl=Sl+1
else
call W1("Out of memory: Could not create IdGenerator.","when calling error in ObjectIdGenerator, line 14")
endif
else
set il=il-1
endif
set Pb=Pb-1-1
set Ab[Pb]="when calling new_IdGenerator in ObjectIdGenerator, line 10"
set Pb=Pb+1
set Ab[Pb]="when calling alloc_IdGenerator in ObjectIdGenerator, line 20"
set Pb=Pb+1
if il==0 then
if Sl<32768 then
set Sl=Sl+1
else
call W1("Out of memory: Could not create IdGenerator.","when calling error in ObjectIdGenerator, line 14")
endif
else
set il=il-1
endif
set Pb=Pb-1-1
set Ab[Pb]="when calling new_IdGenerator in ObjectIdGenerator, line 11"
set Pb=Pb+1
set Ab[Pb]="when calling alloc_IdGenerator in ObjectIdGenerator, line 20"
set Pb=Pb+1
if il==0 then
if Sl<32768 then
set Sl=Sl+1
else
call W1("Out of memory: Could not create IdGenerator.","when calling error in ObjectIdGenerator, line 14")
endif
else
set il=il-1
endif
set Pb=Pb-1-1
set Ab[Pb]="when calling new_IdGenerator in ObjectIdGenerator, line 12"
set Pb=Pb+1
set Ab[Pb]="when calling alloc_IdGenerator in ObjectIdGenerator, line 20"
set Pb=Pb+1
if il==0 then
if Sl<32768 then
set Sl=Sl+1
else
call W1("Out of memory: Could not create IdGenerator.","when calling error in ObjectIdGenerator, line 14")
endif
else
set il=il-1
endif
set Pb=Pb-1-1-1
return true
endfunction
function QW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988812,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988559,0)
endfunction
function a9 takes unit q9 returns nothing
call UnitAddAbility(q9,1095577649)
call UnitMakeAbilityPermanent(q9,true,1095577649)
set Mc[wo]=q9
set wo=wo+1
call TriggerEvaluate(Bc)
set wo=wo-1
endfunction
function R9 takes nothing returns nothing
call a9(GetEnumUnit())
endfunction
function RD takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990596,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990595,0)
endfunction
function RH takes nothing returns boolean
return IsUnitType(GetTriggerUnit(),UNIT_TYPE_STRUCTURE)==true
endfunction
function RK takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function fP takes nothing returns boolean
if GetResearched()!=1378890036 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890036,true)!=2 then
return false
endif
return true
endfunction
function RP takes nothing returns boolean
if not fP() then
return false
endif
return true
endfunction
function RQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989057,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989058,0)
endfunction
function Mpw takes string Bpw returns integer
local integer Npw
set Ab[Pb]=Bpw
set Pb=Pb+1
set Ab[Pb]="when calling alloc_Table in Table, line 5"
set Pb=Pb+1
if AO==0 then
if DO<32768 then
set DO=DO+1
set Npw=DO
set HO[Npw]=725
else
call W1("Out of memory: Could not create Table.","when calling error in Table, line 6")
set Npw=0
endif
else
set AO=AO-1
set Npw=PO[AO]
set HO[Npw]=725
endif
set Pb=Pb-1-1
return Npw
endfunction
function initializeTable takes string stackPos returns nothing
local integer i_2
local integer this
local integer parentKey
set Ab[Pb]=stackPos
set Pb=Pb+1
set i_2=0
loop
exitwhen i_2>15
set this=uc
set parentKey=StringHash(wc[i_2])
set stackPos="when calling saveInt in Colors, line 206"
set Ab[Pb]="when calling saveInt in Colors, line 206"
set Pb=Pb+1
if HO[this]==0 then
if this==0 then
call W1("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call W1("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Zo,this,parentKey,i_2)
set Pb=Pb-1
set i_2=i_2+1
endloop
set Pb=Pb-1
endfunction
function iN takes string tN returns boolean
set Ab[Pb]=tN
set Pb=Pb+1
set BS[0]=255
set NS[0]=2
set MS[0]=2
set BS[1]=0
set NS[1]=65
set MS[1]=255
set BS[2]=27
set NS[2]=229
set MS[2]=184
set BS[3]=83
set NS[3]=0
set MS[3]=128
set BS[4]=255
set NS[4]=252
set MS[4]=0
set BS[5]=254
set NS[5]=137
set MS[5]=13
set BS[6]=31
set NS[6]=191
set MS[6]=0
set BS[7]=228
set NS[7]=90
set MS[7]=175
set BS[8]=148
set NS[8]=149
set MS[8]=150
set BS[9]=125
set NS[9]=190
set MS[9]=241
set BS[10]=15
set NS[10]=97
set MS[10]=69
set BS[11]=77
set NS[11]=41
set MS[11]=3
set BS[12]=155
set NS[12]=0
set MS[12]=0
set BS[13]=0
set NS[13]=0
set MS[13]=195
set BS[14]=0
set NS[14]=234
set MS[14]=255
set BS[15]=190
set NS[15]=0
set MS[15]=254
set BS[16]=235
set NS[16]=205
set MS[16]=135
set BS[17]=248
set NS[17]=164
set MS[17]=139
set BS[18]=191
set NS[18]=255
set MS[18]=128
set BS[19]=220
set NS[19]=185
set MS[19]=235
set BS[20]=40
set NS[20]=40
set MS[20]=40
set BS[21]=235
set NS[21]=240
set MS[21]=255
set BS[22]=0
set NS[22]=120
set MS[22]=30
set BS[23]=164
set NS[23]=11
set MS[23]=51
set wc[0]="0"
set wc[1]="1"
set wc[2]="2"
set wc[3]="3"
set wc[4]="4"
set wc[5]="5"
set wc[6]="6"
set wc[7]="7"
set wc[8]="8"
set wc[9]="9"
set wc[10]="A"
set wc[11]="B"
set wc[12]="C"
set wc[13]="D"
set wc[14]="E"
set wc[15]="F"
set uc=Mpw("when calling new_Table in Colors, line 154")
call initializeTable("when calling initializeTable in Colors, line 209")
set Pb=Pb-1
return true
endfunction
function RRw takes nothing returns boolean
set Pb=0
return iN("Colors, line 1")
endfunction
function few takes integer aew,unit dew returns nothing
set Ib[aew]=dew
call SetUnitUserData(Ib[aew],aew)
set Jo[Ko]=dew
set Ko=Ko+1
call TriggerEvaluate(Do)
set Ko=Ko-1
endfunction
function qew takes unit yew,string pew returns integer
local integer eew
set Ab[Pb]=pew
set Pb=Pb+1
set Ab[Pb]="when calling alloc_UnitIndex in UnitIndexer, line 181"
set Pb=Pb+1
if yl==0 then
if pl<32768 then
set pl=pl+1
set eew=pl
set el[eew]=735
else
call W1("Out of memory: Could not create UnitIndex.","when calling error in UnitIndexer, line 172")
set eew=0
endif
else
set yl=yl-1
set eew=bl[yl]
set el[eew]=735
endif
set Pb=Pb-1
call few(eew,yew)
set Pb=Pb-1
return eew
endfunction
function hww takes string Gww returns nothing
local unit gww
set Ab[Pb]=Gww
set Pb=Pb+1
set gww=Mc[wo-1]
set Ab[Pb]="when calling toUnitIndex in UnitIndexer, line 196"
set Pb=Pb+1
if GetUnitUserData(gww)==0 then
call qew(gww,"when calling new_UnitIndex in UnitIndexer, line 135")
endif
set Pb=Pb-1-1
set gww=null
endfunction
function RTw takes nothing returns nothing
set Pb=0
call hww("UnitIndexer, line 196")
endfunction
function Rrw takes nothing returns boolean
return true
endfunction
function SC takes nothing returns boolean
return true
endfunction
function SD takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651852,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651855,0)
endfunction
function SK takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function iP takes nothing returns boolean
if GetResearched()!=1378889797 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889797,true)!=2 then
return false
endif
return true
endfunction
function SP takes nothing returns boolean
if not iP() then
return false
endif
return true
endfunction
function SQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988566,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988562,0)
endfunction
function u9 takes string B8 returns boolean
local playerunitevent N8
local integer M8
local integer w9
set Ab[Pb]=B8
set Pb=Pb+1
set N8=EVENT_PLAYER_UNIT_ISSUED_ORDER
set Ab[Pb]="when calling alloc_NoStarvationOnBoat_EventListener_line6 in NoStarvationOnBoat, line 6"
set Pb=Pb+1
if SO==0 then
if cO<32768 then
set cO=cO+1
set M8=cO
set oO[M8]=673
else
call W1("Out of memory: Could not create NoStarvationOnBoat_EventListener_line6.","when calling error in NoStarvationOnBoat, line 6")
set M8=0
endif
else
set SO=SO-1
set M8=iO[SO]
set oO[M8]=673
endif
set Pb=Pb-1
set Cl[M8]=0
set Vl[M8]=0
set Bl[M8]=0
set Ab[Pb]="when calling add in NoStarvationOnBoat, line 6"
set Pb=Pb+1
set Ab[Pb]="when calling toIntId in ClosureEvents, line 112"
set Pb=Pb+1
set w9=ES[GetHandleId(N8)]
if w9==0 then
set w9=tB(N8,"when calling registerEventId in ClosureEvents, line 229")
endif
set Pb=Pb-1
set Cl[M8]=w9
if PS[Cl[M8]]!=0 then
set Bl[PS[Cl[M8]]]=M8
set Vl[M8]=PS[Cl[M8]]
endif
set PS[Cl[M8]]=M8
set Pb=Pb-1-1
set N8=null
return true
endfunction
function STw takes nothing returns boolean
set Pb=0
return u9("NoStarvationOnBoat, line 1")
endfunction
function SY takes nothing returns nothing
local player uY=GetOwningPlayer(GetAttacker())
local player rY=GetOwningPlayer(GetAttacker())
local player sY
local player tY
local unit iY
set r[GetPlayerId(uY)+1]=r[GetPlayerId(rY)+1]+1
set sY=GetOwningPlayer(GetTriggerUnit())
set tY=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(sY)+1]=r[GetPlayerId(tY)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set iY=GetTriggerUnit()
call SetUnitState(iY,UNIT_STATE_LIFE,GetUnitState(iY,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set uY=null
set rY=null
set sY=null
set tY=null
set iY=null
endfunction
function RA takes nothing returns boolean
if GetResearched()!=1378890049 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890049,true)!=1 then
return false
endif
return true
endfunction
function TA takes nothing returns boolean
if not RA() then
return false
endif
return true
endfunction
function RG takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989305 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function TG takes nothing returns boolean
if not RG() then
return false
endif
return true
endfunction
function TH takes nothing returns nothing
if GetUnitTypeId(GetEnumUnit())==1747988535 then
call ReplaceUnitBJ(GetEnumUnit(),1747988788,bj_UNIT_STATE_METHOD_RELATIVE)
endif
if GetUnitTypeId(GetEnumUnit())==1747990325 then
call ReplaceUnitBJ(GetEnumUnit(),1747990324,bj_UNIT_STATE_METHOD_RELATIVE)
endif
if GetUnitTypeId(GetEnumUnit())==1747989594 then
call ReplaceUnitBJ(GetEnumUnit(),1747990097,bj_UNIT_STATE_METHOD_RELATIVE)
endif
if GetUnitTypeId(GetEnumUnit())==1747988784 then
call ReplaceUnitBJ(GetEnumUnit(),1747988561,bj_UNIT_STATE_METHOD_RELATIVE)
endif
if GetUnitTypeId(GetEnumUnit())==1747988563 then
call ReplaceUnitBJ(GetEnumUnit(),1747988565,bj_UNIT_STATE_METHOD_RELATIVE)
endif
if GetUnitTypeId(GetEnumUnit())==1747988562 then
call ReplaceUnitBJ(GetEnumUnit(),1747988566,bj_UNIT_STATE_METHOD_RELATIVE)
endif
if GetUnitTypeId(GetEnumUnit())==1747988564 then
call ReplaceUnitBJ(GetEnumUnit(),1747988567,bj_UNIT_STATE_METHOD_RELATIVE)
endif
if GetUnitTypeId(GetEnumUnit())==1747990104 then
call ReplaceUnitBJ(GetEnumUnit(),1747990321,bj_UNIT_STATE_METHOD_RELATIVE)
endif
if GetUnitTypeId(GetEnumUnit())==1747990105 then
call ReplaceUnitBJ(GetEnumUnit(),1747990322,bj_UNIT_STATE_METHOD_RELATIVE)
endif
if GetUnitTypeId(GetEnumUnit())==1747990106 then
call ReplaceUnitBJ(GetEnumUnit(),1747990323,bj_UNIT_STATE_METHOD_RELATIVE)
endif
if GetUnitTypeId(GetEnumUnit())==1747989811 then
call ReplaceUnitBJ(GetEnumUnit(),1747989812,bj_UNIT_STATE_METHOD_RELATIVE)
endif
if GetUnitTypeId(GetEnumUnit())==1747990095 then
call ReplaceUnitBJ(GetEnumUnit(),1747990098,bj_UNIT_STATE_METHOD_RELATIVE)
endif
if GetUnitTypeId(GetEnumUnit())==1747990096 then
call ReplaceUnitBJ(GetEnumUnit(),1747990099,bj_UNIT_STATE_METHOD_RELATIVE)
endif
endfunction
function TP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989835,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989836,0)
endfunction
function Iww takes string Zww returns boolean
local integer Uww
set Ab[Pb]=Zww
set Pb=Pb+1
set Ao=Mpw("when calling new_Table in TypeCasting, line 6")
set Ab[Pb]="when calling initTypecastData in TypeCasting, line 14"
set Pb=Pb+1
set Uww=Ao
set Ab[Pb]="when calling saveString in TypeCasting, line 11"
set Pb=Pb+1
if HO[Uww]==0 then
if Uww==0 then
call W1("Nullpointer exception when calling Table.saveString","when calling error in Table, line 60")
else
call W1("Called Table.saveString on invalid object.","when calling error in Table, line 60")
endif
endif
call SaveStr(Zo,Uww,0,"")
set Pb=Pb-1-1-1
return true
endfunction
function TRw takes nothing returns boolean
set Pb=0
return Iww("TypeCasting, line 1")
endfunction
function Tew takes integer Rew returns nothing
set Jo[Ko]=Ib[Rew]
set Ko=Ko+1
call TriggerEvaluate(Ho)
set Ko=Ko-1
call SetUnitUserData(Ib[Rew],0)
endfunction
function fnw takes integer nnw,string dnw returns nothing
set Ab[Pb]=dnw
set Pb=Pb+1
if el[nnw]==0 then
if nnw==0 then
call W1("Nullpointer exception when calling UnitIndex.UnitIndex","when calling error in UnitIndexer, line 172")
else
call W1("Called UnitIndex.UnitIndex on invalid object.","when calling error in UnitIndexer, line 172")
endif
endif
set Ab[Pb]="when calling destroyUnitIndex in UnitIndexer, line 172"
set Pb=Pb+1
call Tew(nnw)
set Ab[Pb]="when calling dealloc_UnitIndex in UnitIndexer, line 188"
set Pb=Pb+1
if el[nnw]==0 then
call W1("Double free: object of type UnitIndex","when calling error in UnitIndexer, line 172")
else
set bl[yl]=nnw
set yl=yl+1
set el[nnw]=0
endif
set Pb=Pb-1-1-1
endfunction
function Yww_2 takes unit fww,string Rww returns boolean
local integer Tww
set Ab[Pb]=Rww
set Pb=Pb+1
if GetUnitUserData(fww)==0 then
set Pb=Pb-1
return false
else
set Ab[Pb]="when calling toUnitIndex in UnitIndexer, line 169"
set Pb=Pb+1
set Tww=GetUnitUserData(fww)
if Tww==0 then
set Tww=qew(fww,"when calling new_UnitIndex in UnitIndexer, line 135")
endif
set Pb=Pb-1
call fnw(Tww,"when calling dispatch_UnitIndex_destroyUnitIndex in UnitIndexer, line 169")
set Pb=Pb-1
return true
endif
endfunction
function kww takes string Fww returns nothing
set Ab[Pb]=Fww
set Pb=Pb+1
call Yww_2(Mc[wo-1],"when calling deindex in UnitIndexer, line 197")
set Pb=Pb-1
endfunction
function TTw takes nothing returns nothing
set Pb=0
call kww("UnitIndexer, line 197")
endfunction
function RU takes nothing returns boolean
if GetResearched()!=1378889810 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889810,true)!=2 then
return false
endif
return true
endfunction
function TU takes nothing returns boolean
if not RU() then
return false
endif
return true
endfunction
function U1 takes nothing returns nothing
set nc=nc+0.030
endfunction
function UA takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989825,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989817,0)
endfunction
function UE takes nothing returns nothing
set s=bj_FORCE_ALL_PLAYERS
call ForForce(s,Ze)
endfunction
function UG takes nothing returns nothing
local unit EG=GetSpellTargetUnit()
local unitstate ZG=UNIT_STATE_MANA
call SetUnitState(EG,UNIT_STATE_MANA,RMaxBJ(0.,GetUnitState(GetSpellTargetUnit(),ZG)-600.00))
set EG=null
set ZG=null
endfunction
function ZI takes nothing returns boolean
if GetResearched()!=1378890033 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890033,true)!=1 then
return false
endif
return true
endfunction
function UI takes nothing returns boolean
if not ZI() then
return false
endif
return true
endfunction
function UJ takes nothing returns nothing
local integer xJ=1
local integer vJ=1751868773
local player mJ=GetOwningPlayer(GetTriggerUnit())
local rect ZJ=bj_mapInitialPlayableArea
local location EJ=Location(GetRectCenterX(ZJ),GetRectCenterY(ZJ))
local location QJ=Location(GetLocationX(EJ)+100000000.00,GetLocationY(EJ)+100000000.00)
local real WJ=bj_UNIT_FACING
call GroupClear(bj_lastCreatedGroup)
loop
set xJ=xJ-1
exitwhen xJ<0
call CreateUnitAtLocSaveLast(mJ,vJ,QJ,WJ)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
call ShowUnit(bj_lastCreatedUnit,false)
set mJ=null
set QJ=null
set EJ=null
set ZJ=null
endfunction
function UT takes nothing returns nothing
call CreateQuestBJ(bj_QUESTTYPE_OPT_DISCOVERED,"TRIGSTR_097","TRIGSTR_098","ReplaceableTextures\\CommandButtons\\BTNSteelMelee.blp")
call CreateQuestBJ(bj_QUESTTYPE_OPT_DISCOVERED,"TRIGSTR_103","TRIGSTR_104","ReplaceableTextures\\WorldEditUI\\Doodad-Cinematic.blp")
call CreateQuestBJ(bj_QUESTTYPE_OPT_DISCOVERED,"TRIGSTR_2667","TRIGSTR_2668","ReplaceableTextures\\WorldEditUI\\Editor-MultipleUnits.blp")
endfunction
function UU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989582,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989583,0)
endfunction
function ZX takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990328 then
return false
endif
return true
endfunction
function UX takes nothing returns boolean
if not ZX() then
return false
endif
return true
endfunction
function ZY takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989042 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function UY takes nothing returns boolean
if not ZY() then
return false
endif
return true
endfunction
function Um takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988788,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988535,0)
endfunction
function CD takes nothing returns boolean
if GetResearched()!=1378890052 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890052,true)!=2 then
return false
endif
return true
endfunction
function VD takes nothing returns boolean
if not CD() then
return false
endif
return true
endfunction
function VE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989812,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989811,0)
endfunction
function CK takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990356 then
return false
endif
return true
endfunction
function VK takes nothing returns boolean
if not CK() then
return false
endif
return true
endfunction
function CQ takes nothing returns boolean
if GetResearched()!=1378889802 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889802,true)!=1 then
return false
endif
return true
endfunction
function VQ takes nothing returns boolean
if not CQ() then
return false
endif
return true
endfunction
function clw takes string ilw returns integer
local integer Slw
set Ab[Pb]=ilw
set Pb=Pb+1
set Ab[Pb]="when calling alloc_HashSet in HashSet, line 4"
set Pb=Pb+1
if ZO==0 then
if UO<32768 then
set UO=UO+1
set Slw=UO
set IO[Slw]=691
else
call W1("Out of memory: Could not create HashSet.","when calling error in HashSet, line 5")
set Slw=0
endif
else
set ZO=ZO-1
set Slw=EO[ZO]
set IO[Slw]=691
endif
set Pb=Pb-1
set ob[Slw]=0
set Pb=Pb-1
return Slw
endfunction
function tRw takes integer xfw,integer vfw,integer mfw,integer Qfw,integer Wfw,integer Efw,integer Zfw,integer Ufw,integer Ifw,integer Pfw,integer Afw,integer Dfw,integer Hfw,integer Jfw,integer Kfw,integer Lfw,integer Xfw,integer Cfw,integer Vfw,integer Bfw,integer Nfw,integer Mfw,integer wRw,integer uRw,string rRw returns integer
local integer sRw
set Ab[Pb]=rRw
set Pb=Pb+1
set sRw=Obw("when calling new_LinkedList in LinkedList, line 391")
call gnw(sRw,xfw,"when calling add in LinkedList, line 393")
call gnw(sRw,vfw,"when calling add in LinkedList, line 393")
call gnw(sRw,mfw,"when calling add in LinkedList, line 393")
call gnw(sRw,Qfw,"when calling add in LinkedList, line 393")
call gnw(sRw,Wfw,"when calling add in LinkedList, line 393")
call gnw(sRw,Efw,"when calling add in LinkedList, line 393")
call gnw(sRw,Zfw,"when calling add in LinkedList, line 393")
call gnw(sRw,Ufw,"when calling add in LinkedList, line 393")
call gnw(sRw,Ifw,"when calling add in LinkedList, line 393")
call gnw(sRw,Pfw,"when calling add in LinkedList, line 393")
call gnw(sRw,Afw,"when calling add in LinkedList, line 393")
call gnw(sRw,Dfw,"when calling add in LinkedList, line 393")
call gnw(sRw,Hfw,"when calling add in LinkedList, line 393")
call gnw(sRw,Jfw,"when calling add in LinkedList, line 393")
call gnw(sRw,Kfw,"when calling add in LinkedList, line 393")
call gnw(sRw,Lfw,"when calling add in LinkedList, line 393")
call gnw(sRw,Xfw,"when calling add in LinkedList, line 393")
call gnw(sRw,Cfw,"when calling add in LinkedList, line 393")
call gnw(sRw,Vfw,"when calling add in LinkedList, line 393")
call gnw(sRw,Bfw,"when calling add in LinkedList, line 393")
call gnw(sRw,Nfw,"when calling add in LinkedList, line 393")
call gnw(sRw,Mfw,"when calling add in LinkedList, line 393")
call gnw(sRw,wRw,"when calling add in LinkedList, line 393")
call gnw(sRw,uRw,"when calling add in LinkedList, line 393")
set Pb=Pb-1
return sRw
endfunction
function Iuw takes string Euw returns boolean
local integer Zuw
local integer Uuw
set Ab[Pb]=Euw
set Pb=Pb+1
set Zuw=0
set Uuw=23
loop
exitwhen Zuw>Uuw
set sO[Zuw]=clw("when calling new_HashSet in VoteKick, line 10")
set Zuw=Zuw+1
endloop
set tO=tRw(Xww("red","when calling stringToIndex in VoteKick, line 13"),Xww("blue","when calling stringToIndex in VoteKick, line 14"),Xww("teal","when calling stringToIndex in VoteKick, line 15"),Xww("purple","when calling stringToIndex in VoteKick, line 16"),Xww("yellow","when calling stringToIndex in VoteKick, line 17"),Xww("orange","when calling stringToIndex in VoteKick, line 18"),Xww("green","when calling stringToIndex in VoteKick, line 19"),Xww("pink","when calling stringToIndex in VoteKick, line 20"),Xww("grey","when calling stringToIndex in VoteKick, line 21"),Xww("light blue","when calling stringToIndex in VoteKick, line 22"),Xww("dark green","when calling stringToIndex in VoteKick, line 23"),Xww("brown","when calling stringToIndex in VoteKick, line 24"),Xww("maroon","when calling stringToIndex in VoteKick, line 25"),Xww("navy","when calling stringToIndex in VoteKick, line 26"),Xww("turquoise","when calling stringToIndex in VoteKick, line 27"),Xww("violet","when calling stringToIndex in VoteKick, line 28"),Xww("wheat","when calling stringToIndex in VoteKick, line 29"),Xww("peach","when calling stringToIndex in VoteKick, line 30"),Xww("mint","when calling stringToIndex in VoteKick, line 31"),Xww("lavender","when calling stringToIndex in VoteKick, line 32"),Xww("coal","when calling stringToIndex in VoteKick, line 33"),Xww("snow","when calling stringToIndex in VoteKick, line 34"),Xww("emerald","when calling stringToIndex in VoteKick, line 35"),Xww("peanut","when calling stringToIndex in VoteKick, line 36"),"when calling asList in VoteKick, line 12")
set Pb=Pb-1
return true
endfunction
function VRw takes nothing returns boolean
set Pb=0
return Iuw("VoteKick, line 1")
endfunction
function WB takes nothing returns boolean
set HS=CreateGroup()
set LS=2147483647
set CS=Filter(mf)
return true
endfunction
function QD takes nothing returns boolean
if GetResearched()!=1378890054 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890054,true)!=2 then
return false
endif
return true
endfunction
function WD takes nothing returns boolean
if not QD() then
return false
endif
return true
endfunction
function QG takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1966092336 then
return false
endif
if GetSpellAbilityId()!=1093677906 then
return false
endif
if GetOwningPlayer(GetSpellTargetUnit())==Player(PLAYER_NEUTRAL_AGGRESSIVE) then
return false
endif
if IsUnitType(GetSpellTargetUnit(),UNIT_TYPE_STRUCTURE)!=true then
return false
endif
return true
endfunction
function WG takes nothing returns boolean
if not QG() then
return false
endif
return true
endfunction
function QK takes nothing returns boolean
if GetUnitTypeId(GetConstructedStructure())!=1747990351 then
return false
endif
return true
endfunction
function WK takes nothing returns boolean
if not QK() then
return false
endif
return true
endfunction
function QQ takes nothing returns boolean
if GetResearched()!=1378889798 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889798,true)!=1 then
return false
endif
return true
endfunction
function WQ takes nothing returns boolean
if not QQ() then
return false
endif
return true
endfunction
function e9 takes string O9 returns boolean
local integer l9
local integer b9
local integer y9
local timer p9
set Ab[Pb]=O9
set Pb=Pb+1
set Bc=CreateTrigger()
set Nc=CreateGroup()
set l9=0
set b9=bj_MAX_PLAYER_SLOTS-1
loop
exitwhen l9>b9
call SetPlayerAbilityAvailable(ro[l9],1095577649,false)
set l9=l9+1
endloop
set Ab[Pb]="when calling alloc_OnUnitEnterLeave_CallbackSingle_line62 in OnUnitEnterLeave, line 62"
set Pb=Pb+1
if TO==0 then
if YO<32768 then
set YO=YO+1
set y9=YO
set GO[y9]=650
else
call W1("Out of memory: Could not create OnUnitEnterLeave_CallbackSingle_line62.","when calling error in OnUnitEnterLeave, line 62")
set y9=0
endif
else
set TO=TO-1
set y9=RO[TO]
set GO[y9]=650
endif
set Pb=Pb-1
set Ab[Pb]="when calling nullTimer in OnUnitEnterLeave, line 62"
set Pb=Pb+1
set Ab[Pb]="when calling doAfter in ClosureTimers, line 33"
set Pb=Pb+1
set p9=mww("when calling getTimer in ClosureTimers, line 27")
set Ab[Pb]="when calling doAfter in ClosureTimers, line 27"
set Pb=Pb+1
call waw(y9,p9,0.,"when calling start in ClosureTimers, line 16")
set Pb=Pb-1
set Pb=Pb-1-1-1
set p9=null
return true
endfunction
function WRw takes nothing returns boolean
set Pb=0
return e9("OnUnitEnterLeave, line 1")
endfunction
function WT takes nothing returns nothing
local group vT=GetUnitsOfTypeIdAll(1747988554)
local code mT=ay
local boolean QT=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(vT,mT)
if QT then
call DestroyGroup(vT)
endif
set vT=null
endfunction
function Wuw takes nothing returns boolean
call Location(0.,0.)
return true
endfunction
function mv takes nothing returns boolean
if GetUnitTypeId(GetSpellTargetUnit())==1747990581 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747990580 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747989813 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747988569 then
return true
endif
return false
endfunction
function Qv takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989049 then
return false
endif
if not mv() then
return false
endif
return true
endfunction
function Wv takes nothing returns boolean
if not Qv() then
return false
endif
return true
endfunction
function LL takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747988530 then
return false
endif
return true
endfunction
function XL takes nothing returns boolean
if not LL() then
return false
endif
return true
endfunction
function XP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990324,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990325,0)
endfunction
function TC takes string nC returns boolean
local playerunitevent dC
local integer fC
local integer RC
set Ab[Pb]=nC
set Pb=Pb+1
set dC=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set Ab[Pb]="when calling alloc_CityBuilded_EventListener_line9 in CityBuilded, line 9"
set Pb=Pb+1
if SO==0 then
if cO<32768 then
set cO=cO+1
set fC=cO
set oO[fC]=663
else
call W1("Out of memory: Could not create CityBuilded_EventListener_line9.","when calling error in CityBuilded, line 9")
set fC=0
endif
else
set SO=SO-1
set fC=iO[SO]
set oO[fC]=663
endif
set Pb=Pb-1
set Cl[fC]=0
set Vl[fC]=0
set Bl[fC]=0
set Ab[Pb]="when calling add in CityBuilded, line 9"
set Pb=Pb+1
set Ab[Pb]="when calling toIntId in ClosureEvents, line 112"
set Pb=Pb+1
set RC=ES[GetHandleId(dC)]
if RC==0 then
set RC=tB(dC,"when calling registerEventId in ClosureEvents, line 229")
endif
set Pb=Pb-1
set Cl[fC]=RC
if PS[Cl[fC]]!=0 then
set Bl[PS[Cl[fC]]]=fC
set Vl[fC]=PS[Cl[fC]]
endif
set PS[Cl[fC]]=fC
set Pb=Pb-1-1
set dC=null
return true
endfunction
function XRw takes nothing returns boolean
set Pb=0
return TC("CityBuilded, line 1")
endfunction
function XT takes nothing returns nothing
local player DT=GetOwningPlayer(GetAttacker())
local player HT=GetOwningPlayer(GetAttacker())
local player JT
local player KT
local unit LT
set r[GetPlayerId(DT)+1]=r[GetPlayerId(HT)+1]+1
set JT=GetOwningPlayer(GetTriggerUnit())
set KT=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(JT)+1]=r[GetPlayerId(KT)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set LT=GetTriggerUnit()
call SetUnitState(LT,UNIT_STATE_LIFE,GetUnitState(LT,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set DT=null
set HT=null
set JT=null
set KT=null
set LT=null
endfunction
function LU takes nothing returns boolean
if GetResearched()!=1378889818 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889818,true)!=1 then
return false
endif
return true
endfunction
function XU takes nothing returns boolean
if not LU() then
return false
endif
return true
endfunction
function LW takes nothing returns boolean
if GetResearched()!=1378889801 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889801,true)!=2 then
return false
endif
return true
endfunction
function XW takes nothing returns boolean
if not LW() then
return false
endif
return true
endfunction
function XZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651841,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651831,0)
endfunction
function Xv takes nothing returns nothing
local player Ev=GetOwningPlayer(GetSpellTargetUnit())
local playerstate Zv=PLAYER_STATE_RESOURCE_GOLD
local playerstate Uv
local playerstate Iv
local player Pv
local force Av
local location Dv
local real Hv
local real Jv
local player Kv
local force Lv
if Zv==PLAYER_STATE_RESOURCE_GOLD then
set Uv=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(Ev,Uv,GetPlayerState(Ev,Uv)+500)
elseif Zv==PLAYER_STATE_RESOURCE_LUMBER then
set Iv=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(Ev,Iv,GetPlayerState(Ev,Iv)+500)
endif
call SetPlayerState(Ev,Zv,GetPlayerState(Ev,Zv)+500)
call RemoveUnit(GetSpellAbilityUnit())
set Pv=GetOwningPlayer(GetSpellTargetUnit())
set Av=CreateForce()
call ForceAddPlayer(Av,Pv)
if IsPlayerInForce(GetLocalPlayer(),Av) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_1234")
endif
set y=GetUnitLoc(GetSpellTargetUnit())
set Kv=GetOwningPlayer(GetSpellTargetUnit())
set Lv=CreateForce()
call ForceAddPlayer(Lv,Kv)
set Dv=y
set Hv=GetLocationX(Dv)
set Jv=GetLocationY(Dv)
if IsPlayerInForce(GetLocalPlayer(),Lv) then
call PingMinimap(Hv,Jv,2.00)
endif
call RemoveLocation(y)
set Ev=null
set Zv=null
set Uv=null
set Iv=null
set Pv=null
set Av=null
set Dv=null
set Kv=null
set Lv=null
endfunction
function Y1 takes nothing returns boolean
set cc=InitHashtable()
return true
endfunction
function Y2 takes nothing returns boolean
return true
endfunction
function YA takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990584,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990593,0)
endfunction
function TE takes nothing returns boolean
if GetResearched()!=1378889812 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889812,true)!=1 then
return false
endif
return true
endfunction
function YE takes nothing returns boolean
if not TE() then
return false
endif
return true
endfunction
function YF takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989078 then
return false
endif
return true
endfunction
function TI takes nothing returns boolean
if GetResearched()!=1378890034 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890034,true)!=1 then
return false
endif
return true
endfunction
function YI takes nothing returns boolean
if not TI() then
return false
endif
return true
endfunction
function YJ takes nothing returns nothing
local integer qJ=1
local integer aJ=1752461175
local player nJ=GetOwningPlayer(GetTriggerUnit())
local rect TJ=bj_mapInitialPlayableArea
local location RJ=Location(GetRectCenterX(TJ),GetRectCenterY(TJ))
local location dJ=Location(GetLocationX(RJ)+100000000.00,GetLocationY(RJ)+100000000.00)
local real fJ=bj_UNIT_FACING
call GroupClear(bj_lastCreatedGroup)
loop
set qJ=qJ-1
exitwhen qJ<0
call CreateUnitAtLocSaveLast(nJ,aJ,dJ,fJ)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
call ShowUnit(bj_lastCreatedUnit,false)
set nJ=null
set dJ=null
set RJ=null
set TJ=null
endfunction
function l4 takes string O4 returns boolean
set Ab[Pb]=O4
set Pb=Pb+1
set Ab[Pb]="when calling alloc_LinkedList_Comparator_line504 in LinkedList, line 504"
set Pb=Pb+1
if JO==0 then
if KO<32768 then
set KO=KO+1
else
call W1("Out of memory: Could not create LinkedList_Comparator_line504.","when calling error in LinkedList, line 504")
endif
else
set JO=JO-1
endif
set Pb=Pb-1
set Ab[Pb]="when calling alloc_LinkedList_Comparator_line508 in LinkedList, line 508"
set Pb=Pb+1
if JO==0 then
if KO<32768 then
set KO=KO+1
else
call W1("Out of memory: Could not create LinkedList_Comparator_line508.","when calling error in LinkedList, line 508")
endif
else
set JO=JO-1
endif
set Pb=Pb-1-1
return true
endfunction
function YRw takes nothing returns boolean
set Pb=0
return l4("LinkedList, line 1")
endfunction
function Quw takes string huw returns nothing
local unit Fuw
local integer kuw
local player juw
local integer xuw
local integer vuw
local boolean muw
set Ab[Pb]=huw
set Pb=Pb+1
set Fuw=GetEnteringUnit()
set kuw=GetPlayerId(GetOwningPlayer(Fuw))
set juw=ro[kuw]
if GetPlayerSlotState(juw)==PLAYER_SLOT_STATE_PLAYING then
set muw=GetPlayerController(juw)==MAP_CONTROL_USER
else
set muw=false
endif
if muw and(not IsUnitType(Fuw,UNIT_TYPE_STRUCTURE)) then
set xuw=uo[kuw]
set vuw=-GetUnitLevel(Fuw)
set Ab[Pb]="when calling changeUpkeep in Upkeep, line 25"
set Pb=Pb+1
if ll[xuw]==0 then
if xuw==0 then
call W1("Nullpointer exception when calling PlayerStats.changeUpkeep","when calling error in PlayerStats, line 23")
else
call W1("Called PlayerStats.changeUpkeep on invalid object.","when calling error in PlayerStats, line 23")
endif
endif
set Zb[xuw]=Zb[xuw]+vuw
set Pb=Pb-1
endif
set Pb=Pb-1
set Fuw=null
set juw=null
endfunction
function YTw takes nothing returns nothing
set Pb=0
call Quw("Upkeep, line 21")
endfunction
function YU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989574,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989573,0)
endfunction
function TX takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989592 then
return false
endif
return true
endfunction
function YX takes nothing returns boolean
if not TX() then
return false
endif
return true
endfunction
function Yg takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989047 then
return false
endif
return true
endfunction
function Yh takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747990089 then
return false
endif
return true
endfunction
function Yj takes nothing returns nothing
local player bj=GetOwningPlayer(GetSpellTargetUnit())
local playerstate yj=PLAYER_STATE_RESOURCE_GOLD
local playerstate pj
local playerstate ej
local player qj
local force aj
local location nj
local real dj
local real fj
local player Rj
local force Tj
if yj==PLAYER_STATE_RESOURCE_GOLD then
set pj=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(bj,pj,GetPlayerState(bj,pj)+250)
elseif yj==PLAYER_STATE_RESOURCE_LUMBER then
set ej=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(bj,ej,GetPlayerState(bj,ej)+250)
endif
call SetPlayerState(bj,yj,GetPlayerState(bj,yj)+250)
call RemoveUnit(GetSpellAbilityUnit())
set qj=GetOwningPlayer(GetSpellTargetUnit())
set aj=CreateForce()
call ForceAddPlayer(aj,qj)
if IsPlayerInForce(GetLocalPlayer(),aj) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_1230")
endif
set y=GetUnitLoc(GetSpellTargetUnit())
set Rj=GetOwningPlayer(GetSpellTargetUnit())
set Tj=CreateForce()
call ForceAddPlayer(Tj,Rj)
set nj=y
set dj=GetLocationX(nj)
set fj=GetLocationY(nj)
if IsPlayerInForce(GetLocalPlayer(),Tj) then
call PingMinimap(dj,fj,2.00)
endif
call RemoveLocation(y)
set bj=null
set yj=null
set pj=null
set ej=null
set qj=null
set aj=null
set nj=null
set Rj=null
set Tj=null
endfunction
function Z1 takes nothing returns boolean
set ac=CreateTimer()
call TimerStart(ac,100000.,false,null)
call TimerStart(CreateTimer(),0.030,true,Uf)
return true
endfunction
function EA takes nothing returns boolean
if GetResearched()!=1378890051 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890051,true)!=1 then
return false
endif
return true
endfunction
function ZA takes nothing returns boolean
if not EA() then
return false
endif
return true
endfunction
function ZE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989057,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988558,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988551,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989066,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651824,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651826,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988818,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989080,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989072,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989082,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988559,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988812,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651828,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989065,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989067,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989301,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651843,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988561,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988788,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988565,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988566,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988567,0)
endfunction
function ZP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989830,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989829,0)
endfunction
function aC takes string eC returns boolean
local integer qC
set Ab[Pb]=eC
set Pb=Pb+1
set OS=hOw("when calling new_HashMap in CityBaseTaxes, line 5")
set qC=OS
set Ab[Pb]="when calling saveInt in CityBaseTaxes, line 9"
set Pb=Pb+1
if HO[qC]==0 then
if qC==0 then
call W1("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call W1("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Zo,qC,1747988529,20)
set Pb=Pb-1
set Ab[Pb]="when calling saveInt in CityBaseTaxes, line 10"
set Pb=Pb+1
if HO[qC]==0 then
if qC==0 then
call W1("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call W1("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Zo,qC,1747988530,50)
set Pb=Pb-1
set Ab[Pb]="when calling saveInt in CityBaseTaxes, line 11"
set Pb=Pb+1
if HO[qC]==0 then
if qC==0 then
call W1("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call W1("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Zo,qC,1747988531,120)
set Pb=Pb-1
set Ab[Pb]="when calling saveInt in CityBaseTaxes, line 12"
set Pb=Pb+1
if HO[qC]==0 then
if qC==0 then
call W1("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call W1("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Zo,qC,1747990326,20)
set Pb=Pb-1
set Ab[Pb]="when calling saveInt in CityBaseTaxes, line 13"
set Pb=Pb+1
if HO[qC]==0 then
if qC==0 then
call W1("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call W1("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Zo,qC,1747990327,50)
set Pb=Pb-1
set Ab[Pb]="when calling saveInt in CityBaseTaxes, line 14"
set Pb=Pb+1
if HO[qC]==0 then
if qC==0 then
call W1("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call W1("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Zo,qC,1747990328,120)
set Pb=Pb-1
set Ab[Pb]="when calling saveInt in CityBaseTaxes, line 15"
set Pb=Pb+1
if HO[qC]==0 then
if qC==0 then
call W1("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call W1("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Zo,qC,1747990084,20)
set Pb=Pb-1
set Ab[Pb]="when calling saveInt in CityBaseTaxes, line 16"
set Pb=Pb+1
if HO[qC]==0 then
if qC==0 then
call W1("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call W1("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Zo,qC,1747990087,50)
set Pb=Pb-1
set Ab[Pb]="when calling saveInt in CityBaseTaxes, line 17"
set Pb=Pb+1
if HO[qC]==0 then
if qC==0 then
call W1("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call W1("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Zo,qC,1747990085,120)
set Pb=Pb-1
set Ab[Pb]="when calling saveInt in CityBaseTaxes, line 18"
set Pb=Pb+1
if HO[qC]==0 then
if qC==0 then
call W1("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call W1("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Zo,qC,1747989590,20)
set Pb=Pb-1
set Ab[Pb]="when calling saveInt in CityBaseTaxes, line 19"
set Pb=Pb+1
if HO[qC]==0 then
if qC==0 then
call W1("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call W1("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Zo,qC,1747989591,50)
set Pb=Pb-1
set Ab[Pb]="when calling saveInt in CityBaseTaxes, line 20"
set Pb=Pb+1
if HO[qC]==0 then
if qC==0 then
call W1("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call W1("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Zo,qC,1747989592,120)
set Pb=Pb-1
set Ab[Pb]="when calling saveInt in CityBaseTaxes, line 22"
set Pb=Pb+1
if HO[qC]==0 then
if qC==0 then
call W1("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call W1("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Zo,qC,1747989555,5)
set Pb=Pb-1
set Ab[Pb]="when calling saveInt in CityBaseTaxes, line 23"
set Pb=Pb+1
if HO[qC]==0 then
if qC==0 then
call W1("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call W1("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Zo,qC,1747989297,10)
set Pb=Pb-1
set Ab[Pb]="when calling saveInt in CityBaseTaxes, line 24"
set Pb=Pb+1
if HO[qC]==0 then
if qC==0 then
call W1("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call W1("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(Zo,qC,1747989325,30)
set Pb=Pb-1-1
return true
endfunction
function ZRw takes nothing returns boolean
set Pb=0
return aC("CityBaseTaxes, line 1")
endfunction
function ZT takes nothing returns nothing
call SetFloatGameState(GAME_STATE_TIME_OF_DAY,bj_MELEE_STARTING_TOD)
call MeleeStartingHeroLimit()
endfunction
function EU takes nothing returns boolean
if GetResearched()!=1378890035 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890035,true)!=1 then
return false
endif
return true
endfunction
function ZU takes nothing returns boolean
if not EU() then
return false
endif
return true
endfunction
function Zk takes nothing returns nothing
local player gk=GetOwningPlayer(GetSpellTargetUnit())
local playerstate hk=PLAYER_STATE_RESOURCE_LUMBER
local playerstate Fk
local playerstate kk
local player jk
local force xk
local location vk
local real mk
local real Qk
local player Wk
local force Ek
if hk==PLAYER_STATE_RESOURCE_GOLD then
set Fk=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(gk,Fk,GetPlayerState(gk,Fk)+250)
elseif hk==PLAYER_STATE_RESOURCE_LUMBER then
set kk=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(gk,kk,GetPlayerState(gk,kk)+250)
endif
call SetPlayerState(gk,hk,GetPlayerState(gk,hk)+250)
call RemoveUnit(GetSpellAbilityUnit())
set jk=GetOwningPlayer(GetSpellTargetUnit())
set xk=CreateForce()
call ForceAddPlayer(xk,jk)
if IsPlayerInForce(GetLocalPlayer(),xk) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_1229")
endif
set y=GetUnitLoc(GetSpellTargetUnit())
set Wk=GetOwningPlayer(GetSpellTargetUnit())
set Ek=CreateForce()
call ForceAddPlayer(Ek,Wk)
set vk=y
set mk=GetLocationX(vk)
set Qk=GetLocationY(vk)
if IsPlayerInForce(GetLocalPlayer(),Ek) then
call PingMinimap(mk,Qk,2.00)
endif
call RemoveLocation(y)
set gk=null
set hk=null
set Fk=null
set kk=null
set jk=null
set xk=null
set vk=null
set Wk=null
set Ek=null
endfunction
function Em takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function Zm takes nothing returns boolean
if not Em() then
return false
endif
return true
endfunction
function aE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651828,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651827,0)
endfunction
function aH takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990584,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990594,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990583,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990607,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990598,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990606,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990599,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990601,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651855,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651852,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651850,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990595,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990596,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990604,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990603,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990322,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990323,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990321,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990324,0)
endfunction
function aI takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651848,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651846,0)
endfunction
function S2 takes player r2 returns nothing
local fogstate s2
local location t2
local rect i2
call SetPlayerState(r2,PLAYER_STATE_RESOURCE_GOLD,99999999)
call SetPlayerState(r2,PLAYER_STATE_RESOURCE_LUMBER,99999999)
set s2=FOG_OF_WAR_VISIBLE
set i2=bj_mapInitialPlayableArea
set t2=Location(GetRectCenterX(i2),GetRectCenterY(i2))
set bj_lastCreatedFogModifier=CreateFogModifierRadiusLoc(r2,s2,t2,999999.00,true,false)
call FogModifierStart(bj_lastCreatedFogModifier)
set s2=null
set t2=null
set i2=null
endfunction
function Vew takes integer Lew,string Xew,string Cew returns nothing
set Ab[Pb]=Cew
set Pb=Pb+1
if qO[Lew]==0 then
if Lew==0 then
call W1("Nullpointer exception when calling City.changeCityName","when calling error in City, line 159")
else
call W1("Called City.changeCityName on invalid object.","when calling error in City, line 159")
endif
endif
set Ab[Pb]="when calling changeCityName in City, line 159"
set Pb=Pb+1
set hl[Lew]=SubString(Xew,0,24)
set Ab[Pb]="when calling refreshMultiboardIfPossible in City, line 162"
set Pb=Pb+1
if qO[Lew]==0 then
if Lew==0 then
call W1("Nullpointer exception when calling City.refreshMultiboardIfPossible","when calling error in City, line 237")
else
call W1("Called City.refreshMultiboardIfPossible on invalid object.","when calling error in City, line 237")
endif
endif
call ftw(Lew,"when calling refreshMultiboardIfPossible in City, line 237")
set Pb=Pb-1-1-1
endfunction
function Blw takes integer Llw,integer Xlw returns integer
local integer Clw=ab[Tb[Llw]]
local integer Vlw=0
loop
exitwhen Clw==Tb[Llw]
if eb[Clw]==Xlw then
return Vlw
endif
set Clw=ab[Clw]
set Vlw=Vlw+1
endloop
return -1
endfunction
function Kuw takes nothing returns integer
local integer Puw=0
local integer Auw=0
local integer Duw=23
local player Huw
local boolean Juw
loop
exitwhen Auw>Duw
set Huw=ro[Auw]
if GetPlayerSlotState(Huw)==PLAYER_SLOT_STATE_PLAYING then
set Juw=GetPlayerController(Huw)==MAP_CONTROL_USER
else
set Juw=false
endif
if Juw then
set Puw=Puw+1
endif
set Auw=Auw+1
endloop
set Huw=null
return R2I((Puw-1)*1./2)+1
endfunction
function Nuw takes integer Luw returns nothing
local string Xuw
local force Cuw
local string Vuw
local force Buw
if Luw<0 then
set Cuw=null
set Buw=null
return
endif
if rO[Luw]>=Kuw() then
call CustomDefeatBJ(ro[Luw],"You've been kicked from the game!")
set Xuw="The player "+pN(ro[Luw])+" has been kicked with the power of democracy!"
set Cuw=bj_FORCE_ALL_PLAYERS
if IsPlayerInForce(GetLocalPlayer(),Cuw) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,10.0,Xuw)
endif
else
set Vuw=I2S(rO[Luw])+" |cffff0000out of|r "+I2S(Kuw())+" |cffff0000voted to kick the player|r "+pN(ro[Luw])+"! |cff00ffdd(player number is "+I2S(Luw)+")|r"
set Buw=bj_FORCE_ALL_PLAYERS
if IsPlayerInForce(GetLocalPlayer(),Buw) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,10.0,Vuw)
endif
endif
set Cuw=null
set Buw=null
endfunction
function Srw takes integer srw,player trw,string irw returns nothing
set Ab[Pb]=irw
set Pb=Pb+1
if srw<0 then
set Pb=Pb-1
return
endif
if not Taw(sO[srw],GetPlayerId(trw),"when calling has in VoteKick, line 68") then
set rO[srw]=rO[srw]+1
endif
set Pb=Pb-1
endfunction
function rrw takes string Muw returns integer
local integer wrw=0
local integer urw=23
loop
exitwhen wrw>urw
if GetPlayerName(ro[wrw])==Muw then
return wrw
endif
set wrw=wrw+1
endloop
return -1
endfunction
function frw takes player crw,string orw,string Orw returns nothing
local integer lrw
local integer brw
local integer yrw
local boolean prw
local integer erw
local integer qrw
local integer arw
local boolean nrw
local boolean drw
set Ab[Pb]=Orw
set Pb=Pb+1
set lrw=24
if StringLength(orw)<=2 then
set nrw=S2I(orw)>=0
else
set nrw=false
endif
if nrw then
set drw=S2I(orw)<24
else
set drw=false
endif
if drw then
set lrw=S2I(orw)
else
set brw=tO
set yrw=Xww(orw,"when calling stringToIndex in VoteKick, line 77")
set Ab[Pb]="when calling has in VoteKick, line 77"
set Pb=Pb+1
if tl[brw]==0 then
if brw==0 then
call W1("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call W1("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set prw=ubw(brw,yrw)
set Pb=Pb-1
if prw then
set erw=tO
set qrw=Xww(orw,"when calling stringToIndex in VoteKick, line 78")
set Ab[Pb]="when calling indexOf in VoteKick, line 78"
set Pb=Pb+1
if tl[erw]==0 then
if erw==0 then
call W1("Nullpointer exception when calling LinkedList.indexOf","when calling error in LinkedList, line 54")
else
call W1("Called LinkedList.indexOf on invalid object.","when calling error in LinkedList, line 54")
endif
endif
set arw=Blw(erw,qrw)
set Pb=Pb-1
set lrw=arw
elseif rrw(orw)!=-1 then
set lrw=rrw(orw)
endif
endif
call Srw(lrw,crw,"when calling addVote in VoteKick, line 82")
call Nuw(lrw)
set Pb=Pb-1
endfunction
function eM takes string QN returns nothing
local string array WN
local string EN
local player ZN
local integer UN
local integer IN
local integer PN
local string AN
local string DN
local integer HN
local player JN
local camerafield KN
local player LN
local camerafield XN
local integer CN
local integer VN
local integer BN
local unit NN
local integer MN
local integer wM
local integer uM
local integer rM
local integer sM
local integer tM
local integer iM
local integer SM
local integer cM
local integer oM
local integer OM
local player lM
local camerafield bM
local real yM
local boolean pM
set Ab[Pb]=QN
set Pb=Pb+1
set QN=GetEventPlayerChatString()
set EN=""
set ZN=GetTriggerPlayer()
set UN=0
set IN=1
set PN=StringLength(QN)
loop
exitwhen IN>PN
set AN=SubString(QN,IN,IN+1)
if UN>0 then
set pM=IN>StringLength(WN[0])+1
else
set pM=false
endif
if pM then
set EN=EN+AN
endif
if AN!=" " then
set WN[UN]=WN[UN]+AN
else
set UN=UN+1
endif
set IN=IN+1
endloop
if WN[0]=="far" then
set JN=GetTriggerPlayer()
set KN=CAMERA_FIELD_TARGET_DISTANCE
if GetLocalPlayer()==JN then
call SetCameraField(KN,3000.0,0.)
endif
elseif WN[0]=="med" then
set LN=GetTriggerPlayer()
set XN=CAMERA_FIELD_TARGET_DISTANCE
if GetLocalPlayer()==LN then
call SetCameraField(XN,2300.0,0.)
endif
elseif WN[0]=="name" then
call SetPlayerName(GetTriggerPlayer(),SubString(EN,0,40))
elseif WN[0]=="rename" then
set CN=uo[GetPlayerId(ZN)]
set Ab[Pb]="when calling getSelectedCityId in Commands, line 50"
set Pb=Pb+1
if ll[CN]==0 then
if CN==0 then
call W1("Nullpointer exception when calling PlayerStats.getSelectedCityId","when calling error in PlayerStats, line 84")
else
call W1("Called PlayerStats.getSelectedCityId on invalid object.","when calling error in PlayerStats, line 84")
endif
endif
set VN=Eb[CN]
set Pb=Pb-1
if VN>=0 and VN<TS then
set BN=xS[VN]
set Ab[Pb]="when calling getCityUnit in Commands, line 52"
set Pb=Pb+1
if qO[BN]==0 then
if BN==0 then
call W1("Nullpointer exception when calling City.getCityUnit","when calling error in City, line 176")
else
call W1("Called City.getCityUnit on invalid object.","when calling error in City, line 176")
endif
endif
set NN=gl[BN]
set Pb=Pb-1
if GetOwningPlayer(NN)!=ZN then
set Ab[Pb]="when calling noteToPlayer in Commands, line 53"
set Pb=Pb+1
call DisplayTimedTextToPlayer(ZN,0.,0.,10.0,L2(ZN,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(ZN,0.,0.,10.0,"The city you wanted to rename so eagerly doesn't belong to you!")
set Pb=Pb-1
else
call Vew(xS[VN],EN,"when calling changeCityName in Commands, line 55")
endif
endif
elseif WN[0]=="add_mod" then
set MN=uo[GetPlayerId(ZN)]
set Ab[Pb]="when calling getSelectedCityId in Commands, line 57"
set Pb=Pb+1
if ll[MN]==0 then
if MN==0 then
call W1("Nullpointer exception when calling PlayerStats.getSelectedCityId","when calling error in PlayerStats, line 84")
else
call W1("Called PlayerStats.getSelectedCityId on invalid object.","when calling error in PlayerStats, line 84")
endif
endif
set wM=Eb[MN]
set Pb=Pb-1
if not kc then
set Pb=Pb-1
set ZN=null
set JN=null
set KN=null
set LN=null
set XN=null
set NN=null
set lM=null
set bM=null
return
endif
if wM>=0 and wM<TS then
set DN=WN[1]
if DN=="massacred_pop" then
set uM=xS[wM]
set Ab[Pb]="when calling addModifier in Commands, line 63"
set Pb=Pb+1
if qO[uM]==0 then
if uM==0 then
call W1("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call W1("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call btw(uM,6,"when calling addModifier in City, line 355")
set Pb=Pb-1
elseif DN=="recently_conquered" then
set rM=xS[wM]
set Ab[Pb]="when calling addModifier in Commands, line 65"
set Pb=Pb+1
if qO[rM]==0 then
if rM==0 then
call W1("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call W1("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call btw(rM,0,"when calling addModifier in City, line 355")
set Pb=Pb-1
elseif DN=="recently_revolted" then
set sM=xS[wM]
set Ab[Pb]="when calling addModifier in Commands, line 67"
set Pb=Pb+1
if qO[sM]==0 then
if sM==0 then
call W1("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call W1("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call btw(sM,1,"when calling addModifier in City, line 355")
set Pb=Pb-1
elseif DN=="more_trade_estabilished" then
set tM=xS[wM]
set Ab[Pb]="when calling addModifier in Commands, line 69"
set Pb=Pb+1
if qO[tM]==0 then
if tM==0 then
call W1("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call W1("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call btw(tM,5,"when calling addModifier in City, line 355")
set Pb=Pb-1
elseif DN=="on_fire" then
set iM=xS[wM]
set Ab[Pb]="when calling addModifier in Commands, line 71"
set Pb=Pb+1
if qO[iM]==0 then
if iM==0 then
call W1("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call W1("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call btw(iM,4,"when calling addModifier in City, line 355")
set Pb=Pb-1
elseif DN=="plague_outburst" then
set SM=xS[wM]
set Ab[Pb]="when calling addModifier in Commands, line 73"
set Pb=Pb+1
if qO[SM]==0 then
if SM==0 then
call W1("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call W1("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call btw(SM,3,"when calling addModifier in City, line 355")
set Pb=Pb-1
elseif DN=="population_boom" then
set cM=xS[wM]
set Ab[Pb]="when calling addModifier in Commands, line 75"
set Pb=Pb+1
if qO[cM]==0 then
if cM==0 then
call W1("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call W1("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call btw(cM,2,"when calling addModifier in City, line 355")
set Pb=Pb-1
elseif DN=="prospering" then
set oM=xS[wM]
set Ab[Pb]="when calling addModifier in Commands, line 77"
set Pb=Pb+1
if qO[oM]==0 then
if oM==0 then
call W1("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call W1("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call btw(oM,7,"when calling addModifier in City, line 355")
set Pb=Pb-1
elseif DN=="sieged" then
set OM=xS[wM]
set Ab[Pb]="when calling addModifier in Commands, line 79"
set Pb=Pb+1
if qO[OM]==0 then
if OM==0 then
call W1("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call W1("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call btw(OM,8,"when calling addModifier in City, line 355")
set Pb=Pb-1
endif
endif
elseif WN[0]=="непереводимоесочетаниебукв" then
set kc=not kc
set Fc=not Fc
call S2(ZN)
elseif WN[0]=="votekick" then
call frw(ZN,EN,"when calling voteKick in Commands, line 85")
elseif WN[0]=="zoom" then
set HN=S2I(WN[1])
set lM=GetTriggerPlayer()
set bM=CAMERA_FIELD_TARGET_DISTANCE
set yM=HN*1.
if GetLocalPlayer()==lM then
call SetCameraField(bM,yM,0.)
endif
endif
set Pb=Pb-1
set ZN=null
set JN=null
set KN=null
set LN=null
set XN=null
set NN=null
set lM=null
set bM=null
endfunction
function aTw takes nothing returns nothing
set Pb=0
call eM("Commands, line 97")
endfunction
function aX takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function qZ takes nothing returns boolean
if GetResearched()!=1378889807 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889807,true)!=1 then
return false
endif
return true
endfunction
function aZ takes nothing returns boolean
if not qZ() then
return false
endif
return true
endfunction
function aww takes nothing returns boolean
return true
endfunction
function aww_2 takes nothing returns boolean
return true
endfunction
function b4 takes nothing returns boolean
return true
endfunction
function bH takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651850,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651849,0)
endfunction
function bL takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function Utw takes integer Qtw,integer Wtw,string Etw returns nothing
local integer Ztw
set Ab[Pb]=Etw
set Pb=Pb+1
set Ztw=kl[Qtw]
if Ztw==0 then
set Ab[Pb]="when calling replaceCity in City, line 206"
set Pb=Pb+1
if qO[Qtw]==0 then
if Qtw==0 then
call W1("Nullpointer exception when calling City.replaceCity","when calling error in City, line 182")
else
call W1("Called City.replaceCity on invalid object.","when calling error in City, line 182")
endif
endif
call htw(Qtw,1747988529,"when calling replaceCity in City, line 182")
set Pb=Pb-1
elseif Ztw==3 then
set Ab[Pb]="when calling replaceCity in City, line 208"
set Pb=Pb+1
if qO[Qtw]==0 then
if Qtw==0 then
call W1("Nullpointer exception when calling City.replaceCity","when calling error in City, line 182")
else
call W1("Called City.replaceCity on invalid object.","when calling error in City, line 182")
endif
endif
call htw(Qtw,1747989590,"when calling replaceCity in City, line 182")
set Pb=Pb-1
elseif Ztw==1 then
set Ab[Pb]="when calling replaceCity in City, line 210"
set Pb=Pb+1
if qO[Qtw]==0 then
if Qtw==0 then
call W1("Nullpointer exception when calling City.replaceCity","when calling error in City, line 182")
else
call W1("Called City.replaceCity on invalid object.","when calling error in City, line 182")
endif
endif
call htw(Qtw,1747990326,"when calling replaceCity in City, line 182")
set Pb=Pb-1
elseif Ztw==2 then
set Ab[Pb]="when calling replaceCity in City, line 212"
set Pb=Pb+1
if qO[Qtw]==0 then
if Qtw==0 then
call W1("Nullpointer exception when calling City.replaceCity","when calling error in City, line 182")
else
call W1("Called City.replaceCity on invalid object.","when calling error in City, line 182")
endif
endif
call htw(Qtw,1747990084,"when calling replaceCity in City, line 182")
set Pb=Pb-1
endif
set Ab[Pb]="when calling changeOwner in City, line 213"
set Pb=Pb+1
if qO[Qtw]==0 then
if Qtw==0 then
call W1("Nullpointer exception when calling City.changeOwner","when calling error in City, line 187")
else
call W1("Called City.changeOwner on invalid object.","when calling error in City, line 187")
endif
endif
call mtw(Qtw,Wtw,"when calling changeOwner in City, line 187")
set Pb=Pb-1-1
endfunction
function apw takes integer ppw,integer epw returns nothing
local integer qpw
if mb[ppw]!=-1 then
call ForceRemovePlayer(yc[mb[ppw]],Qb[ppw])
endif
set mb[ppw]=epw
call ForceAddPlayer(yc[mb[ppw]],Qb[ppw])
call SetPlayerTechMaxAllowed(Qb[ppw],1747990087,0)
call SetPlayerTechMaxAllowed(Qb[ppw],1747990088,0)
call SetPlayerTechMaxAllowed(Qb[ppw],1747989558,0)
call SetPlayerTechMaxAllowed(Qb[ppw],1747989575,0)
call SetPlayerTechMaxAllowed(Qb[ppw],1747990339,0)
call SetPlayerTechMaxAllowed(Qb[ppw],1747990340,0)
call SetPlayerTechMaxAllowed(Qb[ppw],1747988528,0)
call SetPlayerTechMaxAllowed(Qb[ppw],1747988532,0)
set qpw=mb[ppw]
if qpw==0 then
call SetPlayerTechMaxAllowed(Qb[ppw],1747988528,-1)
call SetPlayerTechMaxAllowed(Qb[ppw],1747988532,-1)
elseif qpw==1 then
call SetPlayerTechMaxAllowed(Qb[ppw],1747990339,-1)
call SetPlayerTechMaxAllowed(Qb[ppw],1747990340,-1)
elseif qpw==2 then
call SetPlayerTechMaxAllowed(Qb[ppw],1747990087,-1)
call SetPlayerTechMaxAllowed(Qb[ppw],1747990088,-1)
elseif qpw==3 then
call SetPlayerTechMaxAllowed(Qb[ppw],1747989558,-1)
call SetPlayerTechMaxAllowed(Qb[ppw],1747989575,-1)
endif
endfunction
function SV takes string JC returns nothing
local integer KC
local integer LC
local integer XC
local integer CC
local integer VC
local integer BC
local integer NC
local integer MC
local integer wV
local integer uV
local player rV
local location sV
local real tV
local integer iV
set Ab[Pb]=JC
set Pb=Pb+1
set KC=PV(GetSpellTargetUnit(),"when calling getCityId in CityManage, line 18")
set CC=xS[KC]
set Ab[Pb]="when calling getCityForceId in CityManage, line 19"
set Pb=Pb+1
if qO[CC]==0 then
if CC==0 then
call W1("Nullpointer exception when calling City.getCityForceId","when calling error in City, line 179")
else
call W1("Called City.getCityForceId on invalid object.","when calling error in City, line 179")
endif
endif
set VC=kl[CC]
set Pb=Pb-1
set LC=GetPlayerId(GetOwningPlayer(GetSpellAbilityUnit()))
set BC=uo[LC]
set Ab[Pb]="when calling changeForce in CityManage, line 21"
set Pb=Pb+1
if ll[BC]==0 then
if BC==0 then
call W1("Nullpointer exception when calling PlayerStats.changeForce","when calling error in PlayerStats, line 97")
else
call W1("Called PlayerStats.changeForce on invalid object.","when calling error in PlayerStats, line 97")
endif
endif
call apw(BC,VC)
set Pb=Pb-1
set NC=Co[VC]
set Ab[Pb]="when calling iterator in CityManage, line 24"
set Pb=Pb+1
set MC=Klw(NC,"when calling new_LLIterator in LinkedList, line 165")
set Pb=Pb-1
set XC=MC
loop
exitwhen ab[db[XC]]==nb[XC]
set db[XC]=ab[db[XC]]
set wV=1
set uV=eb[db[XC]]
set rV=ro[LC]
set sV=GetSpellTargetLoc()
set tV=0.
call GroupClear(bj_lastCreatedGroup)
loop
set wV=wV-1
exitwhen wV<0
call CreateUnitAtLocSaveLast(rV,uV,sV,tV)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
endloop
set Ab[Pb]="when calling close in CityManage, line 24"
set Pb=Pb+1
if Rb[XC]then
call Caw(XC,"when calling dispatch_LLIterator_destroyLLIterator in LinkedList, line 450")
endif
set Pb=Pb-1
set iV=xS[KC]
set Ab[Pb]="when calling settleCity in CityManage, line 27"
set Pb=Pb+1
if qO[iV]==0 then
if iV==0 then
call W1("Nullpointer exception when calling City.settleCity","when calling error in City, line 203")
else
call W1("Called City.settleCity on invalid object.","when calling error in City, line 203")
endif
endif
call Utw(iV,LC,"when calling settleCity in City, line 203")
set Pb=Pb-1
call KillUnit(GetSpellAbilityUnit())
set Pb=Pb-1
set rV=null
set sV=null
endfunction
function bTw takes nothing returns nothing
set Pb=0
call SV("CityManage, line 16")
endfunction
function bW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989065,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989296,0)
endfunction
function bk takes nothing returns nothing
local group ok
local code Ok
local boolean lk
set w=GetUnitsOfTypeIdAll(1747988790)
set ok=w
set Ok=ep
set lk=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(ok,Ok)
if lk then
call DestroyGroup(ok)
endif
call DestroyGroup(w)
set ok=null
endfunction
function c2 takes nothing returns nothing
set xc=xc+0.01
endfunction
function SA takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function cA takes nothing returns boolean
if not SA() then
return false
endif
return true
endfunction
function cC takes nothing returns boolean
set oS=ro[PLAYER_NEUTRAL_PASSIVE]
return true
endfunction
function SF takes nothing returns boolean
if IsUnitType(GetEnumUnit(),UNIT_TYPE_STRUCTURE)!=false then
return false
endif
return true
endfunction
function cF takes nothing returns nothing
if SF() then
call SetUnitPositionLoc(GetEnumUnit(),c)
endif
endfunction
function cP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989832,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989833,0)
endfunction
function o9 takes string t9 returns boolean
local playerevent i9
local integer S9
local integer c9
set Ab[Pb]=t9
set Pb=Pb+1
set i9=EVENT_PLAYER_LEAVE
set Ab[Pb]="when calling alloc_OnPlayerLeave_EventListener_line6 in OnPlayerLeave, line 6"
set Pb=Pb+1
if SO==0 then
if cO<32768 then
set cO=cO+1
set S9=cO
set oO[S9]=674
else
call W1("Out of memory: Could not create OnPlayerLeave_EventListener_line6.","when calling error in OnPlayerLeave, line 6")
set S9=0
endif
else
set SO=SO-1
set S9=iO[SO]
set oO[S9]=674
endif
set Pb=Pb-1
set Cl[S9]=0
set Vl[S9]=0
set Bl[S9]=0
set Ab[Pb]="when calling add in OnPlayerLeave, line 6"
set Pb=Pb+1
set Ab[Pb]="when calling toIntId in ClosureEvents, line 112"
set Pb=Pb+1
set c9=ES[GetHandleId(i9)]
if c9==0 then
set c9=tB(i9,"when calling registerEventId in ClosureEvents, line 229")
endif
set Pb=Pb-1
set Cl[S9]=c9
if PS[Cl[S9]]!=0 then
set Bl[PS[Cl[S9]]]=S9
set Vl[S9]=PS[Cl[S9]]
endif
set PS[Cl[S9]]=S9
set Pb=Pb-1-1
set i9=null
return true
endfunction
function cTw takes nothing returns boolean
set Pb=0
return o9("OnPlayerLeave, line 1")
endfunction
function SU takes nothing returns boolean
if GetResearched()!=1378889811 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889811,true)!=1 then
return false
endif
return true
endfunction
function cU takes nothing returns boolean
if not SU() then
return false
endif
return true
endfunction
function Sh takes nothing returns boolean
if IsUnitType(GetEnumUnit(),UNIT_TYPE_STRUCTURE)!=false then
return false
endif
return true
endfunction
function ch takes nothing returns nothing
if Sh() then
call SetUnitPositionLoc(GetEnumUnit(),S)
endif
endfunction
function Sk takes nothing returns boolean
local unitstate ik=UNIT_STATE_MANA
if GetUnitState(GetEnumUnit(),ik)>0.00 then
set ik=null
return false
endif
set ik=null
return true
endfunction
function ck takes nothing returns nothing
if Sk() then
call KillUnit(GetEnumUnit())
endif
endfunction
function cv takes nothing returns nothing
local player Vx=GetOwningPlayer(GetKillingUnit())
local playerstate Bx=PLAYER_STATE_RESOURCE_GOLD
local playerstate Nx
local playerstate Mx
local player wv
local force uv
local location rv
local real sv
local real tv
local player iv
local force Sv
if Bx==PLAYER_STATE_RESOURCE_GOLD then
set Nx=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(Vx,Nx,GetPlayerState(Vx,Nx)+250)
elseif Bx==PLAYER_STATE_RESOURCE_LUMBER then
set Mx=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(Vx,Mx,GetPlayerState(Vx,Mx)+250)
endif
call SetPlayerState(Vx,Bx,GetPlayerState(Vx,Bx)+250)
set wv=GetOwningPlayer(GetKillingUnit())
set uv=CreateForce()
call ForceAddPlayer(uv,wv)
if IsPlayerInForce(GetLocalPlayer(),uv) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_092")
endif
set y=GetUnitLoc(GetDyingUnit())
set iv=GetOwningPlayer(GetDyingUnit())
set Sv=CreateForce()
call ForceAddPlayer(Sv,iv)
set rv=y
set sv=GetLocationX(rv)
set tv=GetLocationY(rv)
if IsPlayerInForce(GetLocalPlayer(),Sv) then
call PingMinimap(sv,tv,2.00)
endif
call RemoveLocation(y)
set Vx=null
set Bx=null
set Nx=null
set Mx=null
set wv=null
set uv=null
set rv=null
set iv=null
set Sv=null
endfunction
function cx takes nothing returns nothing
local player Vj=GetOwningPlayer(GetKillingUnit())
local playerstate Bj=PLAYER_STATE_RESOURCE_LUMBER
local playerstate Nj
local playerstate Mj
local player wx
local force ux
local location rx
local real sx
local real tx
local player ix
local force Sx
if Bj==PLAYER_STATE_RESOURCE_GOLD then
set Nj=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(Vj,Nj,GetPlayerState(Vj,Nj)+125)
elseif Bj==PLAYER_STATE_RESOURCE_LUMBER then
set Mj=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(Vj,Mj,GetPlayerState(Vj,Mj)+125)
endif
call SetPlayerState(Vj,Bj,GetPlayerState(Vj,Bj)+125)
set wx=GetOwningPlayer(GetKillingUnit())
set ux=CreateForce()
call ForceAddPlayer(ux,wx)
if IsPlayerInForce(GetLocalPlayer(),ux) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_089")
endif
set y=GetUnitLoc(GetDyingUnit())
set ix=GetOwningPlayer(GetDyingUnit())
set Sx=CreateForce()
call ForceAddPlayer(Sx,ix)
set rx=y
set sx=GetLocationX(rx)
set tx=GetLocationY(rx)
if IsPlayerInForce(GetLocalPlayer(),Sx) then
call PingMinimap(sx,tx,2.00)
endif
call RemoveLocation(y)
set Vj=null
set Bj=null
set Nj=null
set Mj=null
set wx=null
set ux=null
set rx=null
set ix=null
set Sx=null
endfunction
function dL takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function u2 takes string L4 returns nothing
local integer X4
local force C4
local integer V4
local integer B4
local integer N4
local integer M4
local force w2
set Ab[Pb]=L4
set Pb=Pb+1
if kc then
set Pb=Pb-1
set C4=null
set w2=null
return
endif
set C4=bj_FORCE_ALL_PLAYERS
if IsPlayerInForce(GetLocalPlayer(),C4) then
call ShowInterface(false,0.50)
endif
set V4=gc
set Ab[Pb]="when calling iterator in MainInit, line 84"
set Pb=Pb+1
set B4=Klw(V4,"when calling new_LLIterator in LinkedList, line 165")
set Pb=Pb-1
set X4=B4
loop
exitwhen ab[db[X4]]==nb[X4]
set db[X4]=ab[db[X4]]
set N4=eb[db[X4]]
set Ab[Pb]="when calling stringFromIndex in MainInit, line 84"
set Pb=Pb+1
set M4=Ao
set Ab[Pb]="when calling loadString in TypeCasting, line 35"
set Pb=Pb+1
if HO[M4]==0 then
if M4==0 then
call W1("Nullpointer exception when calling Table.loadString","when calling error in Table, line 57")
else
call W1("Called Table.loadString on invalid object.","when calling error in Table, line 57")
endif
endif
set L4=LoadStr(Zo,M4,N4)
set Pb=Pb-1-1
if not hc then
set w2=bj_FORCE_ALL_PLAYERS
if IsPlayerInForce(GetLocalPlayer(),w2) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,10.0,L4)
endif
call TriggerSleepAction(12.5)
endif
endloop
set Ab[Pb]="when calling close in MainInit, line 84"
set Pb=Pb+1
if Rb[X4]then
call Caw(X4,"when calling dispatch_LLIterator_destroyLLIterator in LinkedList, line 450")
endif
set Pb=Pb-1
call CinematicModeExBJ(false,bj_FORCE_ALL_PLAYERS,bj_CINEMODE_INTERFACEFADE)
set hc=true
set Pb=Pb-1
set C4=null
set w2=null
endfunction
function dTw takes nothing returns nothing
set Pb=0
call u2("MainInit, line 130")
endfunction
function dW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989067,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989065,0)
endfunction
function dY takes nothing returns nothing
local player pY=GetOwningPlayer(GetAttacker())
local player eY=GetOwningPlayer(GetAttacker())
local player qY
local player aY
local unit nY
set r[GetPlayerId(pY)+1]=r[GetPlayerId(eY)+1]+1
set qY=GetOwningPlayer(GetTriggerUnit())
set aY=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(qY)+1]=r[GetPlayerId(aY)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set nY=GetTriggerUnit()
call SetUnitState(nY,UNIT_STATE_LIFE,GetUnitState(nY,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set pY=null
set eY=null
set qY=null
set aY=null
set nY=null
endfunction
function dww takes nothing returns boolean
set Do=CreateTrigger()
set Ho=CreateTrigger()
call TriggerAddCondition(Bc,Filter(Af))
call TriggerAddAction(Bc,Df)
return true
endfunction
function pA takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function eA takes nothing returns boolean
if not pA() then
return false
endif
return true
endfunction
function eJ takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747988553 then
return false
endif
return true
endfunction
function eP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989836,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989837,0)
endfunction
function pU takes nothing returns boolean
if GetResearched()!=1378889810 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889810,true)!=1 then
return false
endif
return true
endfunction
function eU takes nothing returns boolean
if not pU() then
return false
endif
return true
endfunction
function yv takes nothing returns boolean
if GetUnitTypeId(GetSpellTargetUnit())==1747990581 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747990580 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747989813 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747988569 then
return true
endif
return false
endfunction
function pv takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989048 then
return false
endif
if not yv() then
return false
endif
return true
endfunction
function ev takes nothing returns boolean
if not pv() then
return false
endif
return true
endfunction
function f0w takes nothing returns boolean
return true
endfunction
function f9 takes nothing returns nothing
local unit d9=GetTriggerUnit()
if GetUnitAbilityLevel(d9,1095577649)==0 then
set Mc[wo]=d9
set wo=wo+1
call TriggerExecute(Bc)
set wo=wo-1
endif
set d9=null
endfunction
function dD takes nothing returns boolean
if GetResearched()!=1378890040 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890040,true)!=2 then
return false
endif
return true
endfunction
function fD takes nothing returns boolean
if not dD() then
return false
endif
return true
endfunction
function fH takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
return true
endfunction
function dK takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990354 then
return false
endif
return true
endfunction
function fK takes nothing returns boolean
if not dK() then
return false
endif
return true
endfunction
function dQ takes nothing returns boolean
if GetResearched()!=1378889796 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889796,true)!=1 then
return false
endif
return true
endfunction
function fQ takes nothing returns boolean
if not dQ() then
return false
endif
return true
endfunction
function oww takes integer rww,string sww_2 returns trigger
local integer tww
local fogstate iww
local integer Sww
local trigger cww
set Ab[Pb]=sww_2
set Pb=Pb+1
set tww=Ao
set iww=ConvertFogState(rww)
set Ab[Pb]="when calling saveFogState in TypeCasting, line 94"
set Pb=Pb+1
if HO[tww]==0 then
if tww==0 then
call W1("Nullpointer exception when calling Table.saveFogState","when calling error in Table, line 168")
else
call W1("Called Table.saveFogState on invalid object.","when calling error in Table, line 168")
endif
endif
call SaveFogStateHandle(Zo,tww,0,iww)
set Pb=Pb-1
set Sww=Ao
set Ab[Pb]="when calling loadTrigger in TypeCasting, line 95"
set Pb=Pb+1
if HO[Sww]==0 then
if Sww==0 then
call W1("Nullpointer exception when calling Table.loadTrigger","when calling error in Table, line 111")
else
call W1("Called Table.loadTrigger on invalid object.","when calling error in Table, line 111")
endif
endif
set cww=LoadTriggerHandle(Zo,Sww,0)
set Pb=Pb-1-1
set SR=cww
set iww=null
set cww=null
return SR
endfunction
function d0w takes string a0w returns boolean
local boolean n0w
set Ab[Pb]=a0w
set Pb=Pb+1
set n0w=TriggerEvaluate(oww(Uaw(qo,GetSpellAbilityId(),"when calling get in RegisterEvents, line 58"),"when calling triggerFromIndex in RegisterEvents, line 58"))
set Pb=Pb-1
return n0w
endfunction
function fTw takes nothing returns boolean
set Pb=0
return d0w("RegisterEvents, line 58")
endfunction
function fk takes nothing returns nothing
local group ak
local code nk
local boolean dk
set b=GetUnitsOfTypeIdAll(1747989301)
set ak=w
set nk=ap
set dk=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(ak,nk)
if dk then
call DestroyGroup(ak)
endif
call DestroyGroup(b)
set ak=null
endfunction
function g9 takes nothing returns boolean
return true
endfunction
function GF takes nothing returns boolean
if IsUnitType(GetEnumUnit(),UNIT_TYPE_STRUCTURE)!=false then
return false
endif
return true
endfunction
function gF takes nothing returns nothing
if GF() then
call SetUnitPositionLoc(GetEnumUnit(),S)
endif
endfunction
function GL takes nothing returns boolean
if GetUnitTypeId(GetConstructedStructure())!=1747989059 then
return false
endif
return true
endfunction
function gL takes nothing returns boolean
if not GL() then
return false
endif
return true
endfunction
function gRw takes nothing returns boolean
local integer GRw
set Pb=0
set Ab[Pb]="Abilities, line 1"
set Pb=Pb+1
set Ab[Pb]="when calling asList in Abilities, line 17"
set Pb=Pb+1
set GRw=Obw("when calling new_LinkedList in LinkedList, line 391")
call gnw(GRw,1093677642,"when calling add in LinkedList, line 393")
call gnw(GRw,1093677641,"when calling add in LinkedList, line 393")
call gnw(GRw,1093677640,"when calling add in LinkedList, line 393")
call gnw(GRw,1093678155,"when calling add in LinkedList, line 393")
set Pb=Pb-1
set cS=GRw
set Pb=Pb-1
return true
endfunction
function gTw takes nothing returns nothing
set Pb=0
set Ab[Pb]="ClosureEvents, line 292"
set Pb=Pb+1
call FB("when calling generalEventCallback in ClosureEvents, line 292")
set Pb=Pb-1
endfunction
function GW takes nothing returns boolean
if GetResearched()!=1378889799 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889799,true)!=1 then
return false
endif
return true
endfunction
function gW takes nothing returns boolean
if not GW() then
return false
endif
return true
endfunction
function GY takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989316 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function gY takes nothing returns boolean
if not GY() then
return false
endif
return true
endfunction
function gZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989556,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989570,0)
endfunction
function Gg takes nothing returns boolean
if IsUnitType(GetEnumUnit(),UNIT_TYPE_STRUCTURE)!=false then
return false
endif
return true
endfunction
function gg takes nothing returns nothing
if Gg() then
call SetUnitPositionLoc(GetEnumUnit(),c)
endif
endfunction
function Gh takes nothing returns boolean
if IsUnitType(GetEnumUnit(),UNIT_TYPE_STRUCTURE)!=false then
return false
endif
return true
endfunction
function gh takes nothing returns nothing
if Gh() then
call SetUnitPositionLoc(GetEnumUnit(),S)
endif
endfunction
function gx takes nothing returns nothing
local player px=GetOwningPlayer(GetKillingUnit())
local playerstate ex=PLAYER_STATE_RESOURCE_LUMBER
local playerstate qx
local playerstate ax
local player nx
local force dx
local location fx
local real Rx
local real Tx
local player Yx
local force Gx
if ex==PLAYER_STATE_RESOURCE_GOLD then
set qx=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(px,qx,GetPlayerState(px,qx)+250)
elseif ex==PLAYER_STATE_RESOURCE_LUMBER then
set ax=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(px,ax,GetPlayerState(px,ax)+250)
endif
call SetPlayerState(px,ex,GetPlayerState(px,ex)+250)
set nx=GetOwningPlayer(GetKillingUnit())
set dx=CreateForce()
call ForceAddPlayer(dx,nx)
if IsPlayerInForce(GetLocalPlayer(),dx) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_090")
endif
set y=GetUnitLoc(GetDyingUnit())
set Yx=GetOwningPlayer(GetDyingUnit())
set Gx=CreateForce()
call ForceAddPlayer(Gx,Yx)
set fx=y
set Rx=GetLocationX(fx)
set Tx=GetLocationY(fx)
if IsPlayerInForce(GetLocalPlayer(),Gx) then
call PingMinimap(Rx,Tx,2.00)
endif
call RemoveLocation(y)
set px=null
set ex=null
set qx=null
set ax=null
set nx=null
set dx=null
set fx=null
set Yx=null
set Gx=null
endfunction
function h8 takes nothing returns boolean
return true
endfunction
function h9 takes nothing returns boolean
set io=ConvertPlayerColor(24)
set So=ConvertPlayerColor(25)
set co=ConvertPlayerColor(26)
set oo=ConvertPlayerColor(27)
set Oo[0]=PLAYER_COLOR_RED
set Oo[1]=PLAYER_COLOR_BLUE
set Oo[2]=PLAYER_COLOR_CYAN
set Oo[3]=PLAYER_COLOR_PURPLE
set Oo[4]=PLAYER_COLOR_YELLOW
set Oo[5]=PLAYER_COLOR_ORANGE
set Oo[6]=PLAYER_COLOR_GREEN
set Oo[7]=PLAYER_COLOR_PINK
set Oo[8]=PLAYER_COLOR_LIGHT_GRAY
set Oo[9]=PLAYER_COLOR_LIGHT_BLUE
set Oo[10]=PLAYER_COLOR_AQUA
set Oo[11]=PLAYER_COLOR_BROWN
set Oo[12]=PLAYER_COLOR_MAROON
set Oo[13]=PLAYER_COLOR_NAVY
set Oo[14]=PLAYER_COLOR_TURQUOISE
set Oo[15]=PLAYER_COLOR_VIOLET
set Oo[16]=PLAYER_COLOR_WHEAT
set Oo[17]=PLAYER_COLOR_PEACH
set Oo[18]=PLAYER_COLOR_MINT
set Oo[19]=PLAYER_COLOR_LAVENDER
set Oo[20]=PLAYER_COLOR_COAL
set Oo[21]=PLAYER_COLOR_SNOW
set Oo[22]=PLAYER_COLOR_EMERALD
set Oo[23]=PLAYER_COLOR_PEANUT
set Oo[24]=io
set Oo[25]=So
set Oo[26]=co
set Oo[27]=oo
return true
endfunction
function hL takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function hRw takes nothing returns boolean
set Pb=0
set Ab[Pb]="EventHelper, line 1"
set Pb=Pb+1
call hOw("when calling new_HashMap in EventHelper, line 6")
call hOw("when calling new_HashMap in EventHelper, line 7")
call Mpw("when calling new_Table in EventHelper, line 8")
set Pb=Pb-1
return true
endfunction
function hTw takes nothing returns nothing
set Pb=0
set Ab[Pb]="ClosureEvents, line 293"
set Pb=Pb+1
call FB("when calling generalEventCallback in ClosureEvents, line 293")
set Pb=Pb-1
endfunction
function hW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988559,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989064,0)
endfunction
function iC takes nothing returns boolean
return true
endfunction
function tD takes nothing returns boolean
if GetResearched()!=1378890053 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890053,true)!=2 then
return false
endif
return true
endfunction
function iD takes nothing returns boolean
if not tD() then
return false
endif
return true
endfunction
function iF takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747990073 then
return false
endif
return true
endfunction
function tK takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989325 then
return false
endif
return true
endfunction
function iK takes nothing returns boolean
if not tK() then
return false
endif
return true
endfunction
function tQ takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function iQ takes nothing returns boolean
if not tQ() then
return false
endif
return true
endfunction
function V8 takes string K8 returns boolean
local playerunitevent L8
local integer X8
local integer C8
set Ab[Pb]=K8
set Pb=Pb+1
set L8=EVENT_PLAYER_UNIT_CONSTRUCT_START
set Ab[Pb]="when calling alloc_NoShipsNearRivers_EventListener_line7 in NoShipsNearRivers, line 7"
set Pb=Pb+1
if SO==0 then
if cO<32768 then
set cO=cO+1
set X8=cO
set oO[X8]=672
else
call W1("Out of memory: Could not create NoShipsNearRivers_EventListener_line7.","when calling error in NoShipsNearRivers, line 7")
set X8=0
endif
else
set SO=SO-1
set X8=iO[SO]
set oO[X8]=672
endif
set Pb=Pb-1
set Cl[X8]=0
set Vl[X8]=0
set Bl[X8]=0
set Ab[Pb]="when calling add in NoShipsNearRivers, line 7"
set Pb=Pb+1
set Ab[Pb]="when calling toIntId in ClosureEvents, line 112"
set Pb=Pb+1
set C8=ES[GetHandleId(L8)]
if C8==0 then
set C8=tB(L8,"when calling registerEventId in ClosureEvents, line 229")
endif
set Pb=Pb-1
set Cl[X8]=C8
if PS[Cl[X8]]!=0 then
set Bl[PS[Cl[X8]]]=X8
set Vl[X8]=PS[Cl[X8]]
endif
set PS[Cl[X8]]=X8
set Pb=Pb-1-1
set L8=null
return true
endfunction
function iTw takes nothing returns boolean
set Pb=0
return V8("NoShipsNearRivers, line 1")
endfunction
function ih takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989046 then
return false
endif
return true
endfunction
function kA takes nothing returns boolean
if GetResearched()!=1378890049 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890049,true)!=2 then
return false
endif
return true
endfunction
function jA takes nothing returns boolean
if not kA() then
return false
endif
return true
endfunction
function kJ takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())==1747988530 then
return true
endif
if GetUnitTypeId(GetTriggerUnit())==1747990327 then
return true
endif
if GetUnitTypeId(GetTriggerUnit())==1747989591 then
return true
endif
if GetUnitTypeId(GetTriggerUnit())==1747990085 then
return true
endif
return false
endfunction
function jJ takes nothing returns boolean
if not kJ() then
return false
endif
return true
endfunction
function jM takes nothing returns boolean
local trigger gM=CreateTrigger()
local trigger hM=gM
local playerunitevent FM=EVENT_PLAYER_UNIT_SPELL_EFFECT
local integer kM=0
loop
call TriggerRegisterPlayerUnitEvent(hM,Player(kM),FM,null)
set kM=kM+1
exitwhen kM==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(gM,Condition(Ef))
call TriggerAddAction(gM,Zf)
set gM=null
set hM=null
set FM=null
return true
endfunction
function jP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651844,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651845,0)
endfunction
function Pdw takes integer Tdw,integer Ydw,integer Gdw,integer gdw,integer hdw,integer Fdw,integer kdw,integer jdw,integer xdw,integer vdw,integer mdw,integer Qdw,integer Wdw,integer Edw,integer Zdw,string Udw returns integer
local integer Idw
set Ab[Pb]=Udw
set Pb=Pb+1
set Idw=Obw("when calling new_LinkedList in LinkedList, line 391")
call gnw(Idw,Tdw,"when calling add in LinkedList, line 393")
call gnw(Idw,Ydw,"when calling add in LinkedList, line 393")
call gnw(Idw,Gdw,"when calling add in LinkedList, line 393")
call gnw(Idw,gdw,"when calling add in LinkedList, line 393")
call gnw(Idw,hdw,"when calling add in LinkedList, line 393")
call gnw(Idw,Fdw,"when calling add in LinkedList, line 393")
call gnw(Idw,kdw,"when calling add in LinkedList, line 393")
call gnw(Idw,jdw,"when calling add in LinkedList, line 393")
call gnw(Idw,xdw,"when calling add in LinkedList, line 393")
call gnw(Idw,vdw,"when calling add in LinkedList, line 393")
call gnw(Idw,mdw,"when calling add in LinkedList, line 393")
call gnw(Idw,Qdw,"when calling add in LinkedList, line 393")
call gnw(Idw,Wdw,"when calling add in LinkedList, line 393")
call gnw(Idw,Edw,"when calling add in LinkedList, line 393")
call gnw(Idw,Zdw,"when calling add in LinkedList, line 393")
set Pb=Pb-1
return Idw
endfunction
function Rdw takes integer wdw,integer udw,integer rdw,integer sdw,integer tdw,integer idw,integer Sdw,integer cdw,integer odw,integer Odw,integer ldw,integer bdw,integer ydw,integer pdw,integer edw,integer qdw,integer adw,integer ndw,string ddw returns integer
local integer fdw
set Ab[Pb]=ddw
set Pb=Pb+1
set fdw=Obw("when calling new_LinkedList in LinkedList, line 391")
call gnw(fdw,wdw,"when calling add in LinkedList, line 393")
call gnw(fdw,udw,"when calling add in LinkedList, line 393")
call gnw(fdw,rdw,"when calling add in LinkedList, line 393")
call gnw(fdw,sdw,"when calling add in LinkedList, line 393")
call gnw(fdw,tdw,"when calling add in LinkedList, line 393")
call gnw(fdw,idw,"when calling add in LinkedList, line 393")
call gnw(fdw,Sdw,"when calling add in LinkedList, line 393")
call gnw(fdw,cdw,"when calling add in LinkedList, line 393")
call gnw(fdw,odw,"when calling add in LinkedList, line 393")
call gnw(fdw,Odw,"when calling add in LinkedList, line 393")
call gnw(fdw,ldw,"when calling add in LinkedList, line 393")
call gnw(fdw,bdw,"when calling add in LinkedList, line 393")
call gnw(fdw,ydw,"when calling add in LinkedList, line 393")
call gnw(fdw,pdw,"when calling add in LinkedList, line 393")
call gnw(fdw,edw,"when calling add in LinkedList, line 393")
call gnw(fdw,qdw,"when calling add in LinkedList, line 393")
call gnw(fdw,adw,"when calling add in LinkedList, line 393")
call gnw(fdw,ndw,"when calling add in LinkedList, line 393")
set Pb=Pb-1
return fdw
endfunction
function jfw takes integer tfw,integer ifw,integer Sfw,integer cfw,integer ofw,integer Ofw,integer lfw,integer bfw,integer yfw,integer pfw,integer efw,integer qfw,integer afw,integer nfw,integer dfw,integer ffw,integer Rfw,integer Tfw,integer Yfw,integer Gfw,integer gfw,integer hfw,string Ffw returns integer
local integer kfw
set Ab[Pb]=Ffw
set Pb=Pb+1
set kfw=Obw("when calling new_LinkedList in LinkedList, line 391")
call gnw(kfw,tfw,"when calling add in LinkedList, line 393")
call gnw(kfw,ifw,"when calling add in LinkedList, line 393")
call gnw(kfw,Sfw,"when calling add in LinkedList, line 393")
call gnw(kfw,cfw,"when calling add in LinkedList, line 393")
call gnw(kfw,ofw,"when calling add in LinkedList, line 393")
call gnw(kfw,Ofw,"when calling add in LinkedList, line 393")
call gnw(kfw,lfw,"when calling add in LinkedList, line 393")
call gnw(kfw,bfw,"when calling add in LinkedList, line 393")
call gnw(kfw,yfw,"when calling add in LinkedList, line 393")
call gnw(kfw,pfw,"when calling add in LinkedList, line 393")
call gnw(kfw,efw,"when calling add in LinkedList, line 393")
call gnw(kfw,qfw,"when calling add in LinkedList, line 393")
call gnw(kfw,afw,"when calling add in LinkedList, line 393")
call gnw(kfw,nfw,"when calling add in LinkedList, line 393")
call gnw(kfw,dfw,"when calling add in LinkedList, line 393")
call gnw(kfw,ffw,"when calling add in LinkedList, line 393")
call gnw(kfw,Rfw,"when calling add in LinkedList, line 393")
call gnw(kfw,Tfw,"when calling add in LinkedList, line 393")
call gnw(kfw,Yfw,"when calling add in LinkedList, line 393")
call gnw(kfw,Gfw,"when calling add in LinkedList, line 393")
call gnw(kfw,gfw,"when calling add in LinkedList, line 393")
call gnw(kfw,hfw,"when calling add in LinkedList, line 393")
set Pb=Pb-1
return kfw
endfunction
function sfw takes integer Adw,integer Ddw,integer Hdw,integer Jdw,integer Kdw,integer Ldw,integer Xdw,integer Cdw,integer Vdw,integer Bdw,integer Ndw,integer Mdw,integer wfw,string ufw returns integer
local integer rfw
set Ab[Pb]=ufw
set Pb=Pb+1
set rfw=Obw("when calling new_LinkedList in LinkedList, line 391")
call gnw(rfw,Adw,"when calling add in LinkedList, line 393")
call gnw(rfw,Ddw,"when calling add in LinkedList, line 393")
call gnw(rfw,Hdw,"when calling add in LinkedList, line 393")
call gnw(rfw,Jdw,"when calling add in LinkedList, line 393")
call gnw(rfw,Kdw,"when calling add in LinkedList, line 393")
call gnw(rfw,Ldw,"when calling add in LinkedList, line 393")
call gnw(rfw,Xdw,"when calling add in LinkedList, line 393")
call gnw(rfw,Cdw,"when calling add in LinkedList, line 393")
call gnw(rfw,Vdw,"when calling add in LinkedList, line 393")
call gnw(rfw,Bdw,"when calling add in LinkedList, line 393")
call gnw(rfw,Ndw,"when calling add in LinkedList, line 393")
call gnw(rfw,Mdw,"when calling add in LinkedList, line 393")
call gnw(rfw,wfw,"when calling add in LinkedList, line 393")
set Pb=Pb-1
return rfw
endfunction
function puw takes string Zww returns boolean
local integer Uww
local integer Iww_2
local integer Pww
local integer Aww
local integer Dww
local integer Hww
local integer Jww
local integer Kww
local integer Lww
local integer Xww_2
local integer Cww
local integer Vww
local integer Bww
local integer Nww
local integer Mww
local integer wuw
local integer uuw
local integer ruw
local integer suw
local integer tuw
local integer iuw
local integer Suw
local integer cuw
local integer ouw
local integer Ouw
local integer luw
local integer buw
local integer yuw
set Ab[Pb]=Zww
set Pb=Pb+1
set Ab[Pb]="when calling asList in Units, line 118"
set Pb=Pb+1
set Iww_2=Obw("when calling new_LinkedList in LinkedList, line 391")
call gnw(Iww_2,1747989317,"when calling add in LinkedList, line 393")
call gnw(Iww_2,1747989305,"when calling add in LinkedList, line 393")
call gnw(Iww_2,1747989316,"when calling add in LinkedList, line 393")
call gnw(Iww_2,1747989315,"when calling add in LinkedList, line 393")
set Pb=Pb-1
set Lo=Iww_2
set Xo=hOw("when calling new_HashMap in Units, line 119")
set Co[0]=Rdw(1747988528,1747988528,1747988528,1747988528,1747988528,1747988528,1747988532,1747988532,1747988532,1747988532,1211118401,1747989058,1747989058,1747989058,1747989058,1747989058,1747989058,1747988790,"when calling asList in Units, line 126")
set Co[1]=Rdw(1747990339,1747990339,1747990339,1747990339,1747990339,1747990339,1747990340,1747990340,1747990340,1747990340,1211119699,1747990593,1747990593,1747990593,1747990593,1747990593,1747990593,1747988790,"when calling asList in Units, line 132")
set Co[2]=Rdw(1747990087,1747990087,1747990087,1747990087,1747990087,1747990087,1747990088,1747990088,1747990088,1747990088,1211119701,1747989817,1747989817,1747989817,1747989817,1747989817,1747989817,1747988790,"when calling asList in Units, line 139")
set Co[3]=Rdw(1747989558,1747989558,1747989558,1747989558,1747989558,1747989558,1747989575,1747989575,1747989575,1747989575,1211119700,1747989571,1747989571,1747989571,1747989571,1747989571,1747989571,1747988790,"when calling asList in Units, line 146")
set Ab[Pb]="when calling asList in Units, line 155"
set Pb=Pb+1
set Pww=Obw("when calling new_LinkedList in LinkedList, line 391")
call gnw(Pww,1747989558,"when calling add in LinkedList, line 393")
call gnw(Pww,1747990339,"when calling add in LinkedList, line 393")
call gnw(Pww,1747990087,"when calling add in LinkedList, line 393")
call gnw(Pww,1747988528,"when calling add in LinkedList, line 393")
call gnw(Pww,1747989575,"when calling add in LinkedList, line 393")
call gnw(Pww,1747990340,"when calling add in LinkedList, line 393")
call gnw(Pww,1747990088,"when calling add in LinkedList, line 393")
call gnw(Pww,1747988532,"when calling add in LinkedList, line 393")
set Pb=Pb-1
set Vo=Pww
set Ab[Pb]="when calling asList in Units, line 167"
set Pb=Pb+1
set Aww=Obw("when calling new_LinkedList in LinkedList, line 391")
call gnw(Aww,1747988529,"when calling add in LinkedList, line 393")
call gnw(Aww,1747988530,"when calling add in LinkedList, line 393")
call gnw(Aww,1747988531,"when calling add in LinkedList, line 393")
call gnw(Aww,1747990326,"when calling add in LinkedList, line 393")
call gnw(Aww,1747990327,"when calling add in LinkedList, line 393")
call gnw(Aww,1747990328,"when calling add in LinkedList, line 393")
call gnw(Aww,1747990084,"when calling add in LinkedList, line 393")
call gnw(Aww,1747990087,"when calling add in LinkedList, line 393")
call gnw(Aww,1747990085,"when calling add in LinkedList, line 393")
call gnw(Aww,1747989590,"when calling add in LinkedList, line 393")
call gnw(Aww,1747989591,"when calling add in LinkedList, line 393")
call gnw(Aww,1747989592,"when calling add in LinkedList, line 393")
set Pb=Pb-1
set Bo=Aww
set Ab[Pb]="when calling asList in Units, line 182"
set Pb=Pb+1
set Dww=Obw("when calling new_LinkedList in LinkedList, line 391")
call gnw(Dww,1747989059,"when calling add in LinkedList, line 393")
call gnw(Dww,1747989060,"when calling add in LinkedList, line 393")
call gnw(Dww,1747988844,"when calling add in LinkedList, line 393")
call gnw(Dww,1747990351,"when calling add in LinkedList, line 393")
call gnw(Dww,1747990352,"when calling add in LinkedList, line 393")
call gnw(Dww,1747990356,"when calling add in LinkedList, line 393")
call gnw(Dww,1747989331,"when calling add in LinkedList, line 393")
call gnw(Dww,1747990350,"when calling add in LinkedList, line 393")
call gnw(Dww,1747989809,"when calling add in LinkedList, line 393")
call gnw(Dww,1747990353,"when calling add in LinkedList, line 393")
call gnw(Dww,1747990354,"when calling add in LinkedList, line 393")
call gnw(Dww,1747990355,"when calling add in LinkedList, line 393")
set Pb=Pb-1
set No=Dww
set Mo=Pdw(1747988529,1747988530,1747988531,1747990326,1747990327,1747990328,1747990084,1747990087,1747990085,1747989590,1747989591,1747989592,1747989555,1747989297,1747989325,"when calling asList in Units, line 197")
set Ab[Pb]="when calling asList in Units, line 206"
set Pb=Pb+1
set Hww=Obw("when calling new_LinkedList in LinkedList, line 391")
call gnw(Hww,1747989321,"when calling add in LinkedList, line 393")
call gnw(Hww,1747989321,"when calling add in LinkedList, line 393")
call gnw(Hww,1747989321,"when calling add in LinkedList, line 393")
call gnw(Hww,1747989321,"when calling add in LinkedList, line 393")
call gnw(Hww,1747989321,"when calling add in LinkedList, line 393")
call gnw(Hww,1747989321,"when calling add in LinkedList, line 393")
call gnw(Hww,1747989321,"when calling add in LinkedList, line 393")
call gnw(Hww,1747989321,"when calling add in LinkedList, line 393")
call gnw(Hww,1747988790,"when calling add in LinkedList, line 393")
set Pb=Pb-1
set wO[0]=Hww
set Ab[Pb]="when calling asList in Units, line 207"
set Pb=Pb+1
set Jww=Obw("when calling new_LinkedList in LinkedList, line 391")
call gnw(Jww,1747989321,"when calling add in LinkedList, line 393")
call gnw(Jww,1747989321,"when calling add in LinkedList, line 393")
call gnw(Jww,1747989321,"when calling add in LinkedList, line 393")
call gnw(Jww,1747989321,"when calling add in LinkedList, line 393")
call gnw(Jww,1747989326,"when calling add in LinkedList, line 393")
call gnw(Jww,1747989326,"when calling add in LinkedList, line 393")
call gnw(Jww,1747989321,"when calling add in LinkedList, line 393")
call gnw(Jww,1747989321,"when calling add in LinkedList, line 393")
call gnw(Jww,1747989321,"when calling add in LinkedList, line 393")
call gnw(Jww,1747989321,"when calling add in LinkedList, line 393")
call gnw(Jww,1747988790,"when calling add in LinkedList, line 393")
set Pb=Pb-1
set wO[1]=Jww
set wO[2]=sfw(1747989321,1747989321,1747989321,1747989321,1747989326,1747989326,1747989326,1747989326,1747989326,1747989326,1747989337,1747989337,1747988790,"when calling asList in Units, line 208")
set Kww=GetHandleId(gu)
set Lww=GetHandleId(kw)
set Xww_2=GetHandleId(ew)
set Cww=GetHandleId(qw)
set Vww=GetHandleId(Ow)
set Bww=GetHandleId(hu)
set Nww=GetHandleId(Yu)
set Mww=GetHandleId(Vw)
set wuw=GetHandleId(q)
set uuw=GetHandleId(Gu)
set ruw=GetHandleId(a)
set suw=GetHandleId(fw)
set tuw=GetHandleId(dw)
set iuw=GetHandleId(Rw)
set Suw=GetHandleId(ow)
set cuw=GetHandleId(lw)
set ouw=GetHandleId(bw)
set Ouw=GetHandleId(yw)
set luw=GetHandleId(pw)
set buw=GetHandleId(aw)
set yuw=GetHandleId(d)
set uO=jfw(Kww,Lww,Xww_2,Cww,Vww,Bww,Nww,Mww,wuw,uuw,ruw,suw,tuw,iuw,Suw,cuw,ouw,Ouw,luw,buw,yuw,GetHandleId(n),"when calling asList in Units, line 211")
set Uww=Xo
call maw(Uww,1747989317,15,"when calling put in Units, line 238")
call maw(Uww,1747989305,50,"when calling put in Units, line 239")
call maw(Uww,1747989316,25,"when calling put in Units, line 240")
call maw(Uww,1747989315,40,"when calling put in Units, line 241")
set Pb=Pb-1
return true
endfunction
function jRw takes nothing returns boolean
set Pb=0
return puw("Units, line 1")
endfunction
function LB takes integer DB,string HB returns nothing
local integer JB
local integer KB
set Ab[Pb]=HB
set Pb=Pb+1
set JB=0
set KB=bj_MAX_PLAYER_SLOTS-1
loop
exitwhen JB>KB
set JS[KS]=DB
set KS=KS+1
set XS=0
set LS=2147483647
call GroupEnumUnitsOfPlayer(HS,ro[JB],CS)
call GroupClear(HS)
set KS=KS-1
set JB=JB+1
endloop
call Fqw(DB,"when calling dispatch_ForGroupCallback_destroyForGroupCallback in ClosureForGroups, line 78")
set Pb=Pb-1
endfunction
function T1 takes string o1 returns nothing
local integer O1
local integer l1
local integer b1
local integer y1
local integer p1
local real e1
local integer q1
local timer a1
local integer n1
local integer d1
local integer f1
local integer R1
set Ab[Pb]=o1
set Pb=Pb+1
set O1=0
set l1=23
loop
exitwhen O1>l1
set tc[O1]=0
set ic[O1]=0
set O1=O1+1
endloop
set b1=R2I(TS*0.5/10.0)+1
set y1=0
set p1=R2I(20)-1
loop
exitwhen y1>p1
set e1=y1*0.5
set Ab[Pb]="when calling alloc_Economy_CallbackSingle_line29 in Economy, line 29"
set Pb=Pb+1
if TO==0 then
if YO<32768 then
set YO=YO+1
set q1=YO
set GO[q1]=644
else
call W1("Out of memory: Could not create Economy_CallbackSingle_line29.","when calling error in Economy, line 29")
set q1=0
endif
else
set TO=TO-1
set q1=RO[TO]
set GO[q1]=644
endif
set Pb=Pb-1
set Sb[q1]=y1
set cb[q1]=b1
set Ab[Pb]="when calling doAfter in Economy, line 29"
set Pb=Pb+1
set a1=mww("when calling getTimer in ClosureTimers, line 27")
set Ab[Pb]="when calling doAfter in ClosureTimers, line 27"
set Pb=Pb+1
call waw(q1,a1,e1,"when calling start in ClosureTimers, line 16")
set Pb=Pb-1-1
set n1=TS-1
set d1=(y1+1)*b1-1
if n1<2147483647 then
set f1=n1
else
set f1=2147483647
endif
if d1<f1 then
set f1=d1
endif
exitwhen f1==TS-1
set y1=y1+1
endloop
set Ab[Pb]="when calling alloc_Economy_ForGroupCallback_line38 in Economy, line 38"
set Pb=Pb+1
if nO==0 then
if dO<32768 then
set dO=dO+1
set R1=dO
set fO[R1]=684
else
call W1("Out of memory: Could not create Economy_ForGroupCallback_line38.","when calling error in Economy, line 38")
set R1=0
endif
else
set nO=nO-1
set R1=aO[nO]
set fO[R1]=684
endif
set Pb=Pb-1
call LB(R1,"when calling forUnitsAll in Economy, line 38")
set Pb=Pb-1
set a1=null
endfunction
function Xow takes integer fow,integer Row,string Tow returns nothing
local integer Yow
local integer Gow
local multiboard gow
local integer how
local integer Fow
local integer kow
local integer jow
local boolean xow
local integer vow
local integer mow
local string Qow
local integer Wow
local integer Eow
local string Zow
local integer Uow
local integer Iow
local boolean Aow
local integer Dow
local integer How
local integer Jow
local player Kow
local playerstate Low
set Ab[Pb]=Tow
set Pb=Pb+1
set Sc=Sc+1
set Yow=0
set Gow=23
loop
exitwhen Yow>Gow
set jow=uo[Yow]
set Ab[Pb]="when calling isInGame in Economy, line 53"
set Pb=Pb+1
if ll[jow]==0 then
if jow==0 then
call W1("Nullpointer exception when calling PlayerStats.isInGame","when calling error in PlayerStats, line 14")
else
call W1("Called PlayerStats.isInGame on invalid object.","when calling error in PlayerStats, line 14")
endif
endif
set xow=Wb[jow]
set Pb=Pb-1
if xow then
set gow=Vc[Yow]
set vow=Ac[0]
set mow=Ac[1]
set Qow=sww(tc[Yow])
call MultiboardSetItemValue(MultiboardGetItem(gow,mow,vow),Qow)
set Wow=Dc[0]
set Eow=Dc[1]
set Uow=uo[Yow]
set Ab[Pb]="when calling getUpkeep in Economy, line 56"
set Pb=Pb+1
if ll[Uow]==0 then
if Uow==0 then
call W1("Nullpointer exception when calling PlayerStats.getUpkeep","when calling error in PlayerStats, line 20")
else
call W1("Called PlayerStats.getUpkeep on invalid object.","when calling error in PlayerStats, line 20")
endif
endif
set Iow=Zb[Uow]
set Pb=Pb-1
set Zow=sww(Iow)
call MultiboardSetItemValue(MultiboardGetItem(gow,Eow,Wow),Zow)
endif
set Yow=Yow+1
endloop
if Sc==R2I(12) then
set Sc=0
set how=0
set Row=23
loop
exitwhen how>Row
set fow=uo[how]
set Ab[Pb]="when calling isInGame in Economy, line 61"
set Pb=Pb+1
if ll[fow]==0 then
if fow==0 then
call W1("Nullpointer exception when calling PlayerStats.isInGame","when calling error in PlayerStats, line 14")
else
call W1("Called PlayerStats.isInGame on invalid object.","when calling error in PlayerStats, line 14")
endif
endif
set Aow=Wb[fow]
set Pb=Pb-1
if Aow then
set Fow=GetPlayerState(ro[how],PLAYER_STATE_RESOURCE_GOLD)
set kow=GetPlayerState(ro[how],PLAYER_STATE_RESOURCE_LUMBER)
set Kow=ro[how]
set Low=PLAYER_STATE_RESOURCE_GOLD
set Jow=Fow+tc[how]
set Dow=uo[how]
set Tow="when calling getUpkeep in Economy, line 64"
set Ab[Pb]="when calling getUpkeep in Economy, line 64"
set Pb=Pb+1
if ll[Dow]==0 then
if Dow==0 then
call W1("Nullpointer exception when calling PlayerStats.getUpkeep","when calling error in PlayerStats, line 20")
else
call W1("Called PlayerStats.getUpkeep on invalid object.","when calling error in PlayerStats, line 20")
endif
endif
set How=Zb[Dow]
set Pb=Pb-1
call SetPlayerState(Kow,Low,Jow+How)
call SetPlayerState(ro[how],PLAYER_STATE_RESOURCE_LUMBER,kow+ic[how])
endif
set how=how+1
endloop
endif
call T1("when calling countIncomeForAll in Economy, line 68")
set Pb=Pb-1
set gow=null
set Kow=null
set Low=null
endfunction
function viw takes integer Giw,integer giw,real hiw,string Fiw returns nothing
local integer kiw
local real jiw
local integer xiw
set Ab[Pb]=Fiw
set Pb=Pb+1
set kiw=ml[Giw]
set xiw=ml[Giw]
set jiw=hiw*GetRandomReal(onw(lS[giw],0,"when calling get in City, line 389")/1000.,onw(lS[giw],1,"when calling get in City, line 389")/1000.)*ml[Giw]
set ml[Giw]=xiw+R2I(jiw)
set Ql[Giw]=Ql[Giw]+(ml[Giw]-kiw)
set Pb=Pb-1
endfunction
function Uiw takes integer miw,integer Qiw,string Wiw returns nothing
local integer Eiw
local real Ziw
set Ab[Pb]=Wiw
set Pb=Pb+1
set Eiw=fl[Uaw(RS,Qiw,"when calling get in City, line 394")]
set Ziw=Rl[Uaw(RS,Qiw,"when calling get in City, line 395")]
set Ab[Pb]="when calling addPopulation in City, line 396"
set Pb=Pb+1
if qO[miw]==0 then
if miw==0 then
call W1("Nullpointer exception when calling City.addPopulation","when calling error in City, line 387")
else
call W1("Called City.addPopulation on invalid object.","when calling error in City, line 387")
endif
endif
call viw(miw,Eiw,Ziw,"when calling addPopulation in City, line 387")
set Pb=Pb-1
if nl[Uaw(RS,Qiw,"when calling get in City, line 398")]==false then
set Zl[miw]=Zl[miw]-al[Uaw(RS,Qiw,"when calling get in City, line 399")]*5.0/ql[Uaw(RS,Qiw,"when calling get in City, line 399")]
endif
set Pb=Pb-1
endfunction
function ZSw takes integer GSw,integer gSw,string hSw returns nothing
local integer FSw
local integer kSw
local integer jSw
local integer xSw
local real vSw
local integer mSw
local integer QSw
local integer WSw
local integer ESw
set Ab[Pb]=hSw
set Pb=Pb+1
set Wl[Ll[GSw]]=Wl[Ll[GSw]]+GetRandomReal(-0.0001,0.00015)*Wl[Ll[GSw]]
set FSw=ml[Ll[GSw]]
set ESw=ml[Ll[GSw]]
set vSw=Pow(ml[Ll[GSw]]*Wl[Ll[GSw]],0.8)*jS[Il[Ll[GSw]]]
set ml[Ll[GSw]]=ESw+R2I(vSw)
set kSw=ml[Ll[GSw]]-FSw
set gSw=GetRandomInt(R2I(-(0.25*kSw)),R2I(0.25*kSw))
set ml[Ll[GSw]]=ml[Ll[GSw]]+gSw
set Ql[Ll[GSw]]=ml[Ll[GSw]]-FSw
set mSw=Al[Ll[GSw]]
set Ab[Pb]="when calling iterator in City, line 137"
set Pb=Pb+1
set QSw=Klw(mSw,"when calling new_LLIterator in LinkedList, line 165")
set Pb=Pb-1
set jSw=QSw
loop
exitwhen ab[db[jSw]]==nb[jSw]
set db[jSw]=ab[db[jSw]]
set xSw=eb[db[jSw]]
set WSw=Ll[GSw]
set hSw="when calling getCityModifierOnFastCount in City, line 138"
set Ab[Pb]="when calling getCityModifierOnFastCount in City, line 138"
set Pb=Pb+1
if qO[WSw]==0 then
if WSw==0 then
call W1("Nullpointer exception when calling City.getCityModifierOnFastCount","when calling error in City, line 393")
else
call W1("Called City.getCityModifierOnFastCount on invalid object.","when calling error in City, line 393")
endif
endif
call Uiw(WSw,xSw,"when calling getCityModifierOnFastCount in City, line 393")
set Pb=Pb-1
endloop
set Ab[Pb]="when calling close in City, line 137"
set Pb=Pb+1
if Rb[jSw]then
call Caw(jSw,"when calling dispatch_LLIterator_destroyLLIterator in LinkedList, line 450")
endif
set Pb=Pb-1-1
endfunction
function dow takes integer cow,integer oow,string Oow returns nothing
local integer low
local integer bow
local multiboard yow
local integer pow
local boolean eow
local integer qow
local string aow
local integer now
set Ab[Pb]=Oow
set Pb=Pb+1
set low=0
set bow=23
loop
exitwhen low>bow
set pow=uo[low]
set Oow="when calling isInGame in Economy, line 45"
set Ab[Pb]="when calling isInGame in Economy, line 45"
set Pb=Pb+1
if ll[pow]==0 then
if pow==0 then
call W1("Nullpointer exception when calling PlayerStats.isInGame","when calling error in PlayerStats, line 14")
else
call W1("Called PlayerStats.isInGame on invalid object.","when calling error in PlayerStats, line 14")
endif
endif
set eow=Wb[pow]
set Pb=Pb-1
if eow then
set yow=Vc[low]
set qow=Dc[0]
set oow=Dc[1]
set now=uo[low]
set Ab[Pb]="when calling getUpkeep in Economy, line 47"
set Pb=Pb+1
if ll[now]==0 then
if now==0 then
call W1("Nullpointer exception when calling PlayerStats.getUpkeep","when calling error in PlayerStats, line 20")
else
call W1("Called PlayerStats.getUpkeep on invalid object.","when calling error in PlayerStats, line 20")
endif
endif
set cow=Zb[now]
set Pb=Pb-1
set aow=sww(cow)
call MultiboardSetItemValue(MultiboardGetItem(yow,oow,qow),aow)
endif
set low=low+1
endloop
set Pb=Pb-1
set yow=null
endfunction
function gcw takes integer Tcw,integer Ycw returns nothing
local integer Gcw
set sb[Tcw]=sb[Tcw]-1.
set Ycw=0
set Gcw=23
loop
exitwhen Ycw>Gcw
call MultiboardSetTitleText(Vc[Ycw],"Income: "+I2S(R2I(sb[Tcw]/60.))+":"+I2S(R2I(ModuloReal(sb[Tcw],60.)/10.))+I2S(R2I(ModuloReal(ModuloReal(sb[Tcw],60.),10.))))
set Ycw=Ycw+1
endloop
if sb[Tcw]<=0. then
set sb[Tcw]=120.0
endif
endfunction
function iyw takes integer Mbw,integer wyw,string uyw returns nothing
local integer ryw
local integer syw
local boolean tyw
set Ab[Pb]=uyw
set Pb=Pb+1
set ryw=0
set wyw=23
loop
exitwhen ryw>wyw
set syw=uo[ryw]
set Ab[Pb]="when calling isInGame in MultiboardCityUpdate, line 27"
set Pb=Pb+1
if ll[syw]==0 then
if syw==0 then
call W1("Nullpointer exception when calling PlayerStats.isInGame","when calling error in PlayerStats, line 14")
else
call W1("Called PlayerStats.isInGame on invalid object.","when calling error in PlayerStats, line 14")
endif
endif
set tyw=Wb[syw]
set Pb=Pb-1
if tyw then
set Mbw=uo[ryw]
set uyw="when calling refreshMultiboardCity in MultiboardCityUpdate, line 28"
set Ab[Pb]="when calling refreshMultiboardCity in MultiboardCityUpdate, line 28"
set Pb=Pb+1
if ll[Mbw]==0 then
if Mbw==0 then
call W1("Nullpointer exception when calling PlayerStats.refreshMultiboardCity","when calling error in PlayerStats, line 43")
else
call W1("Called PlayerStats.refreshMultiboardCity on invalid object.","when calling error in PlayerStats, line 43")
endif
endif
call ypw(Mbw,"when calling refreshMultiboardCity in PlayerStats, line 43")
set Pb=Pb-1
endif
set ryw=ryw+1
endloop
set Pb=Pb-1
endfunction
function ucw takes integer USw,integer ISw,string PSw returns nothing
local integer ASw
local real DSw
local integer HSw
local real JSw
local integer KSw
local real LSw
local integer XSw
local real CSw
local integer VSw
local real BSw
local integer NSw
local integer MSw
local integer wcw
set Ab[Pb]=PSw
set Pb=Pb+1
set DSw=dl[Uaw(RS,2,"when calling get in City, line 143")]
if GetRandomReal(0.0,1.0)<=DSw then
set HSw=Xl[USw]
set Ab[Pb]="when calling addModifier in City, line 144"
set Pb=Pb+1
if qO[HSw]==0 then
if HSw==0 then
call W1("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call W1("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call btw(HSw,2,"when calling addModifier in City, line 355")
set Pb=Pb-1
endif
set JSw=dl[Uaw(RS,5,"when calling get in City, line 145")]
if GetRandomReal(0.0,1.0)<=JSw then
set KSw=Xl[USw]
set Ab[Pb]="when calling addModifier in City, line 146"
set Pb=Pb+1
if qO[KSw]==0 then
if KSw==0 then
call W1("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call W1("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call btw(KSw,5,"when calling addModifier in City, line 355")
set Pb=Pb-1
endif
set LSw=dl[Uaw(RS,7,"when calling get in City, line 147")]
if GetRandomReal(0.0,1.0)<=LSw then
set XSw=Xl[USw]
set Ab[Pb]="when calling addModifier in City, line 148"
set Pb=Pb+1
if qO[XSw]==0 then
if XSw==0 then
call W1("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call W1("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call btw(XSw,7,"when calling addModifier in City, line 355")
set Pb=Pb-1
endif
set CSw=dl[Uaw(RS,3,"when calling get in City, line 149")]
if GetRandomReal(0.0,1.0)<=CSw then
set VSw=Xl[USw]
set Ab[Pb]="when calling addModifier in City, line 150"
set Pb=Pb+1
if qO[VSw]==0 then
if VSw==0 then
call W1("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call W1("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call btw(VSw,3,"when calling addModifier in City, line 355")
set Pb=Pb-1
endif
set BSw=dl[Uaw(RS,4,"when calling get in City, line 151")]
if GetRandomReal(0.0,1.0)<=BSw then
set NSw=Xl[USw]
set Ab[Pb]="when calling addModifier in City, line 152"
set Pb=Pb+1
if qO[NSw]==0 then
if NSw==0 then
call W1("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call W1("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call btw(NSw,4,"when calling addModifier in City, line 355")
set Pb=Pb-1
endif
set ISw=Al[Xl[USw]]
set Ab[Pb]="when calling iterator in City, line 154"
set Pb=Pb+1
set MSw=Klw(ISw,"when calling new_LLIterator in LinkedList, line 165")
set Pb=Pb-1
set ASw=MSw
loop
exitwhen ab[db[ASw]]==nb[ASw]
set db[ASw]=ab[db[ASw]]
set wcw=Xl[USw]
set Ab[Pb]="when calling getCityModifierOnLongCount in City, line 155"
set Pb=Pb+1
if qO[wcw]==0 then
if wcw==0 then
call W1("Nullpointer exception when calling City.getCityModifierOnLongCount","when calling error in City, line 402")
else
call W1("Called City.getCityModifierOnLongCount on invalid object.","when calling error in City, line 402")
endif
endif
set Pb=Pb-1
endloop
set Ab[Pb]="when calling close in City, line 154"
set Pb=Pb+1
if Rb[ASw]then
call Caw(ASw,"when calling dispatch_LLIterator_destroyLLIterator in LinkedList, line 450")
endif
set Pb=Pb-1-1
endfunction
function Zqw takes integer mqw,integer Qqw,string Wqw returns nothing
local force Eqw
set Ab[Pb]=Wqw
set Pb=Pb+1
if kO[mqw]==0 then
if mqw==0 then
call W1("Nullpointer exception when calling CallbackPeriodic.call","when calling error in ClosureTimers, line 130")
else
call W1("Called CallbackPeriodic.call on invalid object.","when calling error in ClosureTimers, line 130")
endif
endif
if kO[mqw]<=634 then
if kO[mqw]<=632 then
if kO[mqw]<=631 then
call ZSw(mqw,Qqw,"when calling City_City_call_line126 in ClosureTimers, line 130")
else
call ucw(mqw,Qqw,"when calling City_City_call_line142 in ClosureTimers, line 130")
endif
elseif kO[mqw]<=633 then
set Eqw=bj_FORCE_ALL_PLAYERS
if IsPlayerInForce(GetLocalPlayer(),Eqw) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,20.0,"Enjoying the map? Join the |cffe100ffofficial CoE discord channel|r! Link: |cffffff00discord.gg/V6kmxsy|r")
endif
else
call gcw(mqw,Qqw)
endif
elseif kO[mqw]<=636 then
if kO[mqw]<=635 then
call dow(mqw,Qqw,"when calling Economy_call_line43 in ClosureTimers, line 130")
else
call Xow(mqw,Qqw,"when calling Economy_call_line50 in ClosureTimers, line 130")
endif
else
call iyw(mqw,Qqw,"when calling MultiboardCityUpdate_call_line25 in ClosureTimers, line 130")
endif
set Pb=Pb-1
set Eqw=null
endfunction
function jww takes timer Gww,string gww returns integer
local integer hww_2
local integer Fww
local integer kww_2
set Ab[Pb]=gww
set Pb=Pb+1
set hww_2=Po
set Fww=GetHandleId(Gww)
set Ab[Pb]="when calling loadInt in TimerUtils, line 21"
set Pb=Pb+1
if HO[hww_2]==0 then
if hww_2==0 then
call W1("Nullpointer exception when calling Table.loadInt","when calling error in Table, line 39")
else
call W1("Called Table.loadInt on invalid object.","when calling error in Table, line 39")
endif
endif
set kww_2=LoadInteger(Zo,hww_2,Fww)
set Pb=Pb-1-1
return kww_2
endfunction
function jTw takes nothing returns nothing
local integer kTw
set Pb=0
set Ab[Pb]="ClosureTimers, line 135"
set Pb=Pb+1
set kTw=jww(GetExpiredTimer(),"when calling getData in ClosureTimers, line 138")
call Zqw(kTw,kTw,"when calling call in ClosureTimers, line 139")
set Pb=Pb-1
endfunction
function kU takes nothing returns boolean
if GetResearched()!=1378889808 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889808,true)!=1 then
return false
endif
return true
endfunction
function jU takes nothing returns boolean
if not kU() then
return false
endif
return true
endfunction
function kD takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990604,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990602,0)
endfunction
function kG takes nothing returns nothing
local player YG=GetOwningPlayer(GetAttacker())
local player GG=GetOwningPlayer(GetAttacker())
local player gG
local player hG
local unit FG
set r[GetPlayerId(YG)+1]=r[GetPlayerId(GG)+1]+1
set gG=GetOwningPlayer(GetTriggerUnit())
set hG=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(gG)+1]=r[GetPlayerId(hG)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set FG=GetTriggerUnit()
call SetUnitState(FG,UNIT_STATE_LIFE,GetUnitState(FG,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set YG=null
set GG=null
set gG=null
set hG=null
set FG=null
endfunction
function kH takes nothing returns nothing
local player gH=GetOwningPlayer(GetTriggerUnit())
local boolexpr hH=Condition(Za)
local group FH=CreateGroup()
local code YH
local boolean GH
call GroupEnumUnitsOfPlayer(FH,gH,hH)
call DestroyBoolExpr(hH)
set YH=Ua
set GH=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(FH,YH)
if GH then
call DestroyGroup(FH)
endif
set gH=null
set hH=null
set FH=null
endfunction
function kK takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function FP takes nothing returns boolean
if GetResearched()!=1378890032 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890032,true)!=1 then
return false
endif
return true
endfunction
function kP takes nothing returns boolean
if not FP() then
return false
endif
return true
endfunction
function kQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988558,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989057,0)
endfunction
function kRw takes nothing returns boolean
set Pb=0
set Ab[Pb]="TimerUtils, line 1"
set Pb=Pb+1
set Po=Mpw("when calling new_Table in TimerUtils, line 12")
call CreateTimer()
call CreateTrigger()
set Pb=Pb-1
return true
endfunction
function OH takes nothing returns boolean
if GetResearched()!=1378890041 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890041,true)!=1 then
return false
endif
return true
endfunction
function lH takes nothing returns boolean
if not OH() then
return false
endif
return true
endfunction
function OL takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990350 then
return false
endif
return true
endfunction
function lL takes nothing returns boolean
if not OL() then
return false
endif
return true
endfunction
function guw takes string euw returns boolean
local trigger quw
local playerunitevent auw
local playerunitevent nuw
local integer duw
local integer fuw
local rect Ruw
local region Tuw
local integer Yuw
local integer Guw
set Ab[Pb]=euw
set Pb=Pb+1
set auw=EVENT_PLAYER_UNIT_SPELL_FINISH
set Ab[Pb]="when calling alloc_Upkeep_EventListener_line6 in Upkeep, line 6"
set Pb=Pb+1
if SO==0 then
if cO<32768 then
set cO=cO+1
set duw=cO
set oO[duw]=678
else
call W1("Out of memory: Could not create Upkeep_EventListener_line6.","when calling error in Upkeep, line 6")
set duw=0
endif
else
set SO=SO-1
set duw=iO[SO]
set oO[duw]=678
endif
set Pb=Pb-1
set Cl[duw]=0
set Vl[duw]=0
set Bl[duw]=0
set Ab[Pb]="when calling add in Upkeep, line 6"
set Pb=Pb+1
set Ab[Pb]="when calling toIntId in ClosureEvents, line 112"
set Pb=Pb+1
set fuw=ES[GetHandleId(auw)]
if fuw==0 then
set fuw=tB(auw,"when calling registerEventId in ClosureEvents, line 229")
endif
set Pb=Pb-1
set Cl[duw]=fuw
if PS[Cl[duw]]!=0 then
set Bl[PS[Cl[duw]]]=duw
set Vl[duw]=PS[Cl[duw]]
endif
set PS[Cl[duw]]=duw
set Pb=Pb-1
set quw=CreateTrigger()
set Ruw=GetWorldBounds()
set Tuw=CreateRegion()
call RegionAddRect(Tuw,Ruw)
call TriggerRegisterEnterRegion(quw,Tuw,null)
call TriggerAddAction(quw,Hf)
set nuw=EVENT_PLAYER_UNIT_DEATH
set Ab[Pb]="when calling alloc_Upkeep_EventListener_line28 in Upkeep, line 28"
set Pb=Pb+1
if SO==0 then
if cO<32768 then
set cO=cO+1
set Yuw=cO
set oO[Yuw]=677
else
call W1("Out of memory: Could not create Upkeep_EventListener_line28.","when calling error in Upkeep, line 28")
set Yuw=0
endif
else
set SO=SO-1
set Yuw=iO[SO]
set oO[Yuw]=677
endif
set Pb=Pb-1
set Cl[Yuw]=0
set Vl[Yuw]=0
set Bl[Yuw]=0
set Ab[Pb]="when calling add in Upkeep, line 28"
set Pb=Pb+1
set Ab[Pb]="when calling toIntId in ClosureEvents, line 112"
set Pb=Pb+1
set Guw=ES[GetHandleId(nuw)]
if Guw==0 then
set Guw=tB(nuw,"when calling registerEventId in ClosureEvents, line 229")
endif
set Pb=Pb-1
set Cl[Yuw]=Guw
if PS[Cl[Yuw]]!=0 then
set Bl[PS[Cl[Yuw]]]=Yuw
set Vl[Yuw]=PS[Cl[Yuw]]
endif
set PS[Cl[Yuw]]=Yuw
set Pb=Pb-1-1
set quw=null
set auw=null
set nuw=null
set Ruw=null
set Tuw=null
return true
endfunction
function lTw takes nothing returns boolean
set Pb=0
return guw("Upkeep, line 1")
endfunction
function OW takes nothing returns boolean
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889797,true)!=1 then
return false
endif
return true
endfunction
function lW takes nothing returns boolean
if not OW() then
return false
endif
return true
endfunction
function lZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990099,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990096,0)
endfunction
function oj takes nothing returns boolean
if GetUnitTypeId(GetSpellTargetUnit())==1747988787 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747990361 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747989831 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747989040 then
return true
endif
return false
endfunction
function Oj takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988791 then
return false
endif
if not oj() then
return false
endif
return true
endfunction
function lj takes nothing returns boolean
if not Oj() then
return false
endif
return true
endfunction
function lww takes nothing returns boolean
return true
endfunction
function m2 takes nothing returns boolean
return true
endfunction
function vL takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747988809 then
return false
endif
return true
endfunction
function mL takes nothing returns boolean
if not vL() then
return false
endif
return true
endfunction
function mN takes nothing returns boolean
local trigger jN=CreateTrigger()
local trigger kN
local integer xN
local integer vN
call TriggerAddCondition(jN,Condition(Qf))
call TriggerAddAction(jN,Wf)
set kN=jN
set xN=0
set vN=23
loop
exitwhen xN>vN
call TriggerRegisterPlayerChatEvent(kN,ro[xN],"-",false)
set xN=xN+1
endloop
set kN=null
set jN=null
return true
endfunction
function W9 takes string F9 returns boolean
local string k9
local integer j9
local integer x9
local integer v9
local integer m9
local timer Q9
set Ab[Pb]=F9
set Pb=Pb+1
set lo=CreateGroup()
set bo=CreateUnit(oS,2019849581,0.,0.,0)
if bo==null then
set k9=""
set j9=2019849581
set x9=0
loop
exitwhen x9>3
set v9=ModuloInteger(j9,256)
set j9=j9/256
set F9=".................................!.#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[.]^_`abcdefghijklmnopqrstuvwxyz{|}~................................................................................................................................."
set k9=SubString(".................................!.#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[.]^_`abcdefghijklmnopqrstuvwxyz{|}~.................................................................................................................................",v9,v9+1)+k9
set x9=x9+1
endloop
call W1("DUMMY_UNITID ("+k9+") not added correctly to the map.","when calling error in Preloader, line 52")
endif
set Ab[Pb]="when calling alloc_Preloader_CallbackSingle_line54 in Preloader, line 54"
set Pb=Pb+1
if TO==0 then
if YO<32768 then
set YO=YO+1
set m9=YO
set GO[m9]=651
else
call W1("Out of memory: Could not create Preloader_CallbackSingle_line54.","when calling error in Preloader, line 54")
set m9=0
endif
else
set TO=TO-1
set m9=RO[TO]
set GO[m9]=651
endif
set Pb=Pb-1
set Ab[Pb]="when calling nullTimer in Preloader, line 54"
set Pb=Pb+1
set Ab[Pb]="when calling doAfter in ClosureTimers, line 33"
set Pb=Pb+1
set Q9=mww("when calling getTimer in ClosureTimers, line 27")
set Ab[Pb]="when calling doAfter in ClosureTimers, line 27"
set Pb=Pb+1
call waw(m9,Q9,0.,"when calling start in ClosureTimers, line 16")
set Pb=Pb-1
set Pb=Pb-1-1-1
set Q9=null
return true
endfunction
function mRw takes nothing returns boolean
set Pb=0
return W9("Preloader, line 1")
endfunction
function vW takes nothing returns boolean
if GetResearched()!=1378889799 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889799,true)!=2 then
return false
endif
return true
endfunction
function mW takes nothing returns boolean
if not vW() then
return false
endif
return true
endfunction
function mZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989559,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989569,0)
endfunction
function n9 takes nothing returns nothing
call a9(GetFilterUnit())
endfunction
function nB takes nothing returns nothing
call TriggerRegisterUnitEvent(mS,Jo[Ko-1],EVENT_UNIT_DAMAGED)
endfunction
function nF takes nothing returns nothing
local location oF
local location OF
local real lF
local real bF
local rect yF
local group pF
local group eF
local code qF
local boolean aF
set u=GetUnitLoc(GetSpellAbilityUnit())
set oF=u
set c=Location(GetLocationX(oF)+200.00,GetLocationY(oF)+0.00)
set OF=u
set lF=GetLocationX(OF)
set bF=GetLocationY(OF)
set O=Rect(lF-150,bF-140,lF+150,bF+140)
set yF=O
set pF=CreateGroup()
call GroupEnumUnitsInRect(pF,yF,null)
call DestroyBoolExpr(null)
set l=pF
set eF=l
set qF=ip
set aF=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(eF,qF)
if aF then
call DestroyGroup(eF)
endif
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747990081,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"stand")
call DestroyGroup(l)
call RemoveLocation(c)
call RemoveLocation(u)
set oF=null
set OF=null
set yF=null
set pF=null
set eF=null
endfunction
function nH takes nothing returns nothing
set s=bj_FORCE_ALL_PLAYERS
call ForForce(s,Wa)
endfunction
function aL takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989809 then
return false
endif
return true
endfunction
function nL takes nothing returns boolean
if not aL() then
return false
endif
return true
endfunction
function ATw takes integer ZTw,integer UTw,string ITw returns integer
local integer PTw
if UTw<0 or UTw>=24 then
call W1("Index out of Bounds",ITw)
elseif UTw<=11 then
if UTw<=5 then
if UTw<=2 then
if UTw<=1 then
if UTw<=0 then
set PTw=Kb[ZTw]
else
set PTw=Lb[ZTw]
endif
else
set PTw=Xb[ZTw]
endif
elseif UTw<=4 then
if UTw<=3 then
set PTw=Cb[ZTw]
else
set PTw=Vb[ZTw]
endif
else
set PTw=Bb[ZTw]
endif
elseif UTw<=8 then
if UTw<=7 then
if UTw<=6 then
set PTw=Nb[ZTw]
else
set PTw=Mb[ZTw]
endif
else
set PTw=wy[ZTw]
endif
elseif UTw<=10 then
if UTw<=9 then
set PTw=uy[ZTw]
else
set PTw=ry[ZTw]
endif
else
set PTw=sy[ZTw]
endif
elseif UTw<=17 then
if UTw<=14 then
if UTw<=13 then
if UTw<=12 then
set PTw=ty[ZTw]
else
set PTw=iy[ZTw]
endif
else
set PTw=Sy[ZTw]
endif
elseif UTw<=16 then
if UTw<=15 then
set PTw=cy[ZTw]
else
set PTw=oy[ZTw]
endif
else
set PTw=Oy[ZTw]
endif
elseif UTw<=20 then
if UTw<=19 then
if UTw<=18 then
set PTw=ly[ZTw]
else
set PTw=by[ZTw]
endif
else
set PTw=yy[ZTw]
endif
elseif UTw<=22 then
if UTw<=21 then
set PTw=py[ZTw]
else
set PTw=ey[ZTw]
endif
else
set PTw=qy[ZTw]
endif
return PTw
endfunction
function M2 takes player X2,string C2 returns string
local integer V2
local integer B2
local integer N2
set Ab[Pb]=C2
set Pb=Pb+1
set B2=uo[GetPlayerId(X2)]
set Ab[Pb]="when calling getForceId in Messages, line 37"
set Pb=Pb+1
if ll[B2]==0 then
if B2==0 then
call W1("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 94")
else
call W1("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 94")
endif
endif
set N2=mb[B2]
set Pb=Pb-1
set V2=GetRandomInt(0,2)
if N2==0 then
set C2=Fo[V2]
elseif N2==1 then
set C2=ko[V2]
elseif N2==2 then
set C2=jo[V2]
elseif N2==3 then
set C2=xo[V2]
else
set C2="Good news!"
endif
set Pb=Pb-1
return "|cff00ff00"+C2+"|r"
endfunction
function P2 takes player W2,string E2 returns string
local integer Z2
local integer U2
local integer I2
set Ab[Pb]=E2
set Pb=Pb+1
set U2=uo[GetPlayerId(W2)]
set Ab[Pb]="when calling getForceId in Messages, line 5"
set Pb=Pb+1
if ll[U2]==0 then
if U2==0 then
call W1("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 94")
else
call W1("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 94")
endif
endif
set I2=mb[U2]
set Pb=Pb-1
set Z2=GetRandomInt(0,2)
if I2==0 then
set E2=do[Z2]
elseif I2==1 then
set E2=fo[Z2]
elseif I2==2 then
set E2=Ro[Z2]
elseif I2==3 then
set E2=To[Z2]
else
set E2="Warning!"
endif
set Pb=Pb-1
return "|cffff0000"+E2+"|r"
endfunction
function ETw takes integer vTw,integer mTw,integer QTw,string WTw returns nothing
if mTw<0 or mTw>=24 then
call W1("Index out of Bounds",WTw)
elseif mTw<=11 then
if mTw<=5 then
if mTw<=2 then
if mTw<=1 then
if mTw<=0 then
set Kb[vTw]=QTw
else
set Lb[vTw]=QTw
endif
else
set Xb[vTw]=QTw
endif
elseif mTw<=4 then
if mTw<=3 then
set Cb[vTw]=QTw
else
set Vb[vTw]=QTw
endif
else
set Bb[vTw]=QTw
endif
elseif mTw<=8 then
if mTw<=7 then
if mTw<=6 then
set Nb[vTw]=QTw
else
set Mb[vTw]=QTw
endif
else
set wy[vTw]=QTw
endif
elseif mTw<=10 then
if mTw<=9 then
set uy[vTw]=QTw
else
set ry[vTw]=QTw
endif
else
set sy[vTw]=QTw
endif
elseif mTw<=17 then
if mTw<=14 then
if mTw<=13 then
if mTw<=12 then
set ty[vTw]=QTw
else
set iy[vTw]=QTw
endif
else
set Sy[vTw]=QTw
endif
elseif mTw<=16 then
if mTw<=15 then
set cy[vTw]=QTw
else
set oy[vTw]=QTw
endif
else
set Oy[vTw]=QTw
endif
elseif mTw<=20 then
if mTw<=19 then
if mTw<=18 then
set ly[vTw]=QTw
else
set by[vTw]=QTw
endif
else
set yy[vTw]=QTw
endif
elseif mTw<=22 then
if mTw<=21 then
set py[vTw]=QTw
else
set ey[vTw]=QTw
endif
else
set qy[vTw]=QTw
endif
endfunction
function Wyw takes integer jyw,player xyw,integer vyw,string myw returns nothing
local integer Qyw
set Ab[Pb]=myw
set Pb=Pb+1
set Qyw=GetPlayerId(xyw)
if not Wb[jyw]then
set Pb=Pb-1
return
endif
if Qyw>=24 then
set Pb=Pb-1
return
endif
if ATw(jyw,Qyw,"when reading array PlayerStats_alliance_states in  in PlayerStats, line 33")==vyw or xyw==Qb[jyw]then
set Pb=Pb-1
return
endif
call ETw(jyw,Qyw,vyw,"when writing array PlayerStats_alliance_states in PlayerStats, line 35")
call SetPlayerAllianceStateBJ(Qb[jyw],xyw,vyw)
set Pb=Pb-1
endfunction
function E3 takes string xM returns nothing
local player vM
local player mM
local string QM
local integer WM
local force EM
local force ZM
local integer UM
local integer IM
local integer PM
local integer AM
local integer DM
local integer HM
local integer JM
local integer KM
local integer LM
local force XM
local force CM
local integer VM
local integer BM
local integer NM
local integer MM
local integer w3
local integer u3
local player r3
local force s3
local player t3
local player i3
local player S3
local integer c3
local integer o3
local integer O3
local integer l3
local player b3
local force y3
local player p3
local player e3
local player q3
local integer a3
local integer n3
local integer d3
local integer f3
local player R3
local force T3
local player Y3
local player G3
local player g3
local integer h3
local integer F3
local integer k3
local integer j3
local player x3
local force v3
local player m3
local player Q3
local player W3
set Ab[Pb]=xM
set Pb=Pb+1
set vM=GetOwningPlayer(GetSpellAbilityUnit())
set mM=GetOwningPlayer(GetSpellTargetUnit())
set QM=pN(vM)
set xM=pN(mM)
set WM=GetPlayerId(vM)
set XM=CreateForce()
call ForceAddPlayer(XM,vM)
set EM=XM
set CM=CreateForce()
call ForceAddPlayer(CM,vM)
set ZM=CM
set UM=GetSpellAbilityId()
if UM==1093677396 then
set VM=uo[WM]
set Ab[Pb]="when calling getAllianceState in Diplomacy, line 17"
set Pb=Pb+1
if ll[VM]==0 then
if VM==0 then
call W1("Nullpointer exception when calling PlayerStats.getAllianceState","when calling error in PlayerStats, line 38")
else
call W1("Called PlayerStats.getAllianceState on invalid object.","when calling error in PlayerStats, line 38")
endif
endif
set Ab[Pb]="when calling getAllianceState in PlayerStats, line 38"
set Pb=Pb+1
set BM=ATw(VM,GetPlayerId(mM),"when reading array PlayerStats_alliance_states in  in PlayerStats, line 39")
set Pb=Pb-1-1
if BM==bj_ALLIANCE_UNALLIED then
set Pb=Pb-1
set vM=null
set mM=null
set EM=null
set ZM=null
set XM=null
set CM=null
set r3=null
set s3=null
set t3=null
set i3=null
set S3=null
set b3=null
set y3=null
set p3=null
set e3=null
set q3=null
set R3=null
set T3=null
set Y3=null
set G3=null
set g3=null
set x3=null
set v3=null
set m3=null
set Q3=null
set W3=null
return
endif
set NM=uo[WM]
set MM=bj_ALLIANCE_UNALLIED
set Ab[Pb]="when calling setAlliance in Diplomacy, line 19"
set Pb=Pb+1
if ll[NM]==0 then
if NM==0 then
call W1("Nullpointer exception when calling PlayerStats.setAlliance","when calling error in PlayerStats, line 27")
else
call W1("Called PlayerStats.setAlliance on invalid object.","when calling error in PlayerStats, line 27")
endif
endif
call Wyw(NM,mM,MM,"when calling setAlliance in PlayerStats, line 27")
set Pb=Pb-1
set w3=uo[GetPlayerId(mM)]
set u3=bj_ALLIANCE_UNALLIED
set Ab[Pb]="when calling setAlliance in Diplomacy, line 20"
set Pb=Pb+1
if ll[w3]==0 then
if w3==0 then
call W1("Nullpointer exception when calling PlayerStats.setAlliance","when calling error in PlayerStats, line 27")
else
call W1("Called PlayerStats.setAlliance on invalid object.","when calling error in PlayerStats, line 27")
endif
endif
call Wyw(w3,vM,u3,"when calling setAlliance in PlayerStats, line 27")
set Pb=Pb-1
set IM=0
set PM=23
loop
exitwhen IM>PM
set r3=ro[IM]
set s3=CreateForce()
call ForceAddPlayer(s3,r3)
if ro[IM]==mM then
set t3=ro[IM]
set Ab[Pb]="when calling warningToPlayer in Diplomacy, line 25"
set Pb=Pb+1
call DisplayTimedTextToPlayer(t3,0.,0.,10.0,P2(t3,"when calling getWarningStringForPlayer in Messages, line 79"))
call DisplayTimedTextToPlayer(t3,0.,0.,10.0,QM+" has declared war on you!")
set Pb=Pb-1
elseif s3==EM or s3==ZM then
set i3=ro[IM]
set Ab[Pb]="when calling attentionToPlayer in Diplomacy, line 27"
set Pb=Pb+1
call DisplayTimedTextToPlayer(i3,0.,0.,10.0,i5(i3,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(i3,0.,0.,10.0,QM+" has declared war on your brother-in-arms, "+xM+"!")
set Pb=Pb-1
else
set S3=ro[IM]
set Ab[Pb]="when calling noteToPlayer in Diplomacy, line 29"
set Pb=Pb+1
call DisplayTimedTextToPlayer(S3,0.,0.,10.0,L2(S3,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(S3,0.,0.,10.0,QM+" has declared war on "+xM)
set Pb=Pb-1
endif
set IM=IM+1
endloop
elseif UM==1093677397 then
set c3=uo[WM]
set Ab[Pb]="when calling getAllianceState in Diplomacy, line 32"
set Pb=Pb+1
if ll[c3]==0 then
if c3==0 then
call W1("Nullpointer exception when calling PlayerStats.getAllianceState","when calling error in PlayerStats, line 38")
else
call W1("Called PlayerStats.getAllianceState on invalid object.","when calling error in PlayerStats, line 38")
endif
endif
set Ab[Pb]="when calling getAllianceState in PlayerStats, line 38"
set Pb=Pb+1
set o3=ATw(c3,GetPlayerId(mM),"when reading array PlayerStats_alliance_states in  in PlayerStats, line 39")
set Pb=Pb-1-1
if o3==bj_ALLIANCE_ALLIED_VISION then
set Pb=Pb-1
set vM=null
set mM=null
set EM=null
set ZM=null
set XM=null
set CM=null
set r3=null
set s3=null
set t3=null
set i3=null
set S3=null
set b3=null
set y3=null
set p3=null
set e3=null
set q3=null
set R3=null
set T3=null
set Y3=null
set G3=null
set g3=null
set x3=null
set v3=null
set m3=null
set Q3=null
set W3=null
return
endif
set O3=uo[WM]
set l3=bj_ALLIANCE_ALLIED_VISION
set Ab[Pb]="when calling setAlliance in Diplomacy, line 34"
set Pb=Pb+1
if ll[O3]==0 then
if O3==0 then
call W1("Nullpointer exception when calling PlayerStats.setAlliance","when calling error in PlayerStats, line 27")
else
call W1("Called PlayerStats.setAlliance on invalid object.","when calling error in PlayerStats, line 27")
endif
endif
call Wyw(O3,mM,l3,"when calling setAlliance in PlayerStats, line 27")
set Pb=Pb-1
set AM=0
set DM=23
loop
exitwhen AM>DM
set b3=ro[AM]
set y3=CreateForce()
call ForceAddPlayer(y3,b3)
if ro[AM]==mM then
set p3=ro[AM]
set Ab[Pb]="when calling goodNewsToPlayer in Diplomacy, line 39"
set Pb=Pb+1
call DisplayTimedTextToPlayer(p3,0.,0.,10.0,M2(p3,"when calling getGoodNewsStringForPlayer in Messages, line 85"))
call DisplayTimedTextToPlayer(p3,0.,0.,10.0,QM+" wants to ally you")
set Pb=Pb-1
elseif y3==EM or y3==ZM then
set e3=ro[AM]
set Ab[Pb]="when calling noteToPlayer in Diplomacy, line 41"
set Pb=Pb+1
call DisplayTimedTextToPlayer(e3,0.,0.,10.0,L2(e3,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(e3,0.,0.,10.0,QM+" allied "+xM)
set Pb=Pb-1
else
set q3=ro[AM]
set Ab[Pb]="when calling noteToPlayer in Diplomacy, line 43"
set Pb=Pb+1
call DisplayTimedTextToPlayer(q3,0.,0.,10.0,L2(q3,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(q3,0.,0.,10.0,QM+" allied "+xM)
set Pb=Pb-1
endif
set AM=AM+1
endloop
elseif UM==1093677398 then
set a3=uo[WM]
set Ab[Pb]="when calling getAllianceState in Diplomacy, line 46"
set Pb=Pb+1
if ll[a3]==0 then
if a3==0 then
call W1("Nullpointer exception when calling PlayerStats.getAllianceState","when calling error in PlayerStats, line 38")
else
call W1("Called PlayerStats.getAllianceState on invalid object.","when calling error in PlayerStats, line 38")
endif
endif
set Ab[Pb]="when calling getAllianceState in PlayerStats, line 38"
set Pb=Pb+1
set n3=ATw(a3,GetPlayerId(mM),"when reading array PlayerStats_alliance_states in  in PlayerStats, line 39")
set Pb=Pb-1-1
if n3==bj_ALLIANCE_NEUTRAL then
set Pb=Pb-1
set vM=null
set mM=null
set EM=null
set ZM=null
set XM=null
set CM=null
set r3=null
set s3=null
set t3=null
set i3=null
set S3=null
set b3=null
set y3=null
set p3=null
set e3=null
set q3=null
set R3=null
set T3=null
set Y3=null
set G3=null
set g3=null
set x3=null
set v3=null
set m3=null
set Q3=null
set W3=null
return
endif
set d3=uo[WM]
set f3=bj_ALLIANCE_NEUTRAL
set Ab[Pb]="when calling setAlliance in Diplomacy, line 48"
set Pb=Pb+1
if ll[d3]==0 then
if d3==0 then
call W1("Nullpointer exception when calling PlayerStats.setAlliance","when calling error in PlayerStats, line 27")
else
call W1("Called PlayerStats.setAlliance on invalid object.","when calling error in PlayerStats, line 27")
endif
endif
call Wyw(d3,mM,f3,"when calling setAlliance in PlayerStats, line 27")
set Pb=Pb-1
set HM=0
set JM=23
loop
exitwhen HM>JM
set R3=ro[HM]
set T3=CreateForce()
call ForceAddPlayer(T3,R3)
if ro[HM]==mM then
set Y3=ro[HM]
set Ab[Pb]="when calling noteToPlayer in Diplomacy, line 53"
set Pb=Pb+1
call DisplayTimedTextToPlayer(Y3,0.,0.,10.0,L2(Y3,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(Y3,0.,0.,10.0,QM+" is now neutral towards you")
set Pb=Pb-1
elseif T3==EM or T3==ZM then
set G3=ro[HM]
set Ab[Pb]="when calling noteToPlayer in Diplomacy, line 55"
set Pb=Pb+1
call DisplayTimedTextToPlayer(G3,0.,0.,10.0,L2(G3,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(G3,0.,0.,10.0,QM+" shows "+xM+" neutrality")
set Pb=Pb-1
else
set g3=ro[HM]
set Ab[Pb]="when calling noteToPlayer in Diplomacy, line 57"
set Pb=Pb+1
call DisplayTimedTextToPlayer(g3,0.,0.,10.0,L2(g3,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(g3,0.,0.,10.0,QM+" shows "+xM+" neutrality")
set Pb=Pb-1
endif
set HM=HM+1
endloop
elseif UM==1093677400 then
set h3=uo[WM]
set Ab[Pb]="when calling getAllianceState in Diplomacy, line 60"
set Pb=Pb+1
if ll[h3]==0 then
if h3==0 then
call W1("Nullpointer exception when calling PlayerStats.getAllianceState","when calling error in PlayerStats, line 38")
else
call W1("Called PlayerStats.getAllianceState on invalid object.","when calling error in PlayerStats, line 38")
endif
endif
set Ab[Pb]="when calling getAllianceState in PlayerStats, line 38"
set Pb=Pb+1
set F3=ATw(h3,GetPlayerId(mM),"when reading array PlayerStats_alliance_states in  in PlayerStats, line 39")
set Pb=Pb-1-1
if F3==bj_ALLIANCE_NEUTRAL then
set Pb=Pb-1
set vM=null
set mM=null
set EM=null
set ZM=null
set XM=null
set CM=null
set r3=null
set s3=null
set t3=null
set i3=null
set S3=null
set b3=null
set y3=null
set p3=null
set e3=null
set q3=null
set R3=null
set T3=null
set Y3=null
set G3=null
set g3=null
set x3=null
set v3=null
set m3=null
set Q3=null
set W3=null
return
endif
set k3=uo[WM]
set j3=bj_ALLIANCE_NEUTRAL
set Ab[Pb]="when calling setAlliance in Diplomacy, line 62"
set Pb=Pb+1
if ll[k3]==0 then
if k3==0 then
call W1("Nullpointer exception when calling PlayerStats.setAlliance","when calling error in PlayerStats, line 27")
else
call W1("Called PlayerStats.setAlliance on invalid object.","when calling error in PlayerStats, line 27")
endif
endif
call Wyw(k3,mM,j3,"when calling setAlliance in PlayerStats, line 27")
set Pb=Pb-1
set KM=0
set LM=23
loop
exitwhen KM>LM
set x3=ro[KM]
set v3=CreateForce()
call ForceAddPlayer(v3,x3)
if ro[KM]==mM then
set m3=ro[KM]
set Ab[Pb]="when calling noteToPlayer in Diplomacy, line 67"
set Pb=Pb+1
call DisplayTimedTextToPlayer(m3,0.,0.,10.0,L2(m3,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(m3,0.,0.,10.0,QM+" unallies you!")
set Pb=Pb-1
elseif v3==EM or v3==ZM then
set Q3=ro[KM]
set Ab[Pb]="when calling noteToPlayer in Diplomacy, line 69"
set Pb=Pb+1
call DisplayTimedTextToPlayer(Q3,0.,0.,10.0,L2(Q3,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(Q3,0.,0.,10.0,QM+" unallied "+xM)
set Pb=Pb-1
else
set W3=ro[KM]
set Ab[Pb]="when calling noteToPlayer in Diplomacy, line 71"
set Pb=Pb+1
call DisplayTimedTextToPlayer(W3,0.,0.,10.0,L2(W3,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(W3,0.,0.,10.0,QM+" unallied "+xM)
set Pb=Pb-1
endif
set KM=KM+1
endloop
endif
set Pb=Pb-1
set vM=null
set mM=null
set EM=null
set ZM=null
set XM=null
set CM=null
set r3=null
set s3=null
set t3=null
set i3=null
set S3=null
set b3=null
set y3=null
set p3=null
set e3=null
set q3=null
set R3=null
set T3=null
set Y3=null
set G3=null
set g3=null
set x3=null
set v3=null
set m3=null
set Q3=null
set W3=null
endfunction
function nTw takes nothing returns nothing
set Pb=0
call E3("Diplomacy, line 119")
endfunction
function aW takes nothing returns boolean
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889797,true)!=2 then
return false
endif
return true
endfunction
function nW takes nothing returns boolean
if not aW() then
return false
endif
return true
endfunction
function nZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989570,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989571,0)
endfunction
function qg takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747990072 then
return false
endif
return true
endfunction
function ag takes nothing returns boolean
if not qg() then
return false
endif
return true
endfunction
function pg takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747990081 then
return false
endif
return true
endfunction
function eg takes nothing returns boolean
if not pg() then
return false
endif
return true
endfunction
function Og takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747990092 then
return false
endif
return true
endfunction
function lg takes nothing returns boolean
if not Og() then
return false
endif
return true
endfunction
function bg takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747990090 then
return false
endif
return true
endfunction
function yg takes nothing returns boolean
if not bg() then
return false
endif
return true
endfunction
function ng takes nothing returns nothing
if lg() then
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747990091,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"Death Alternate")
endif
if yg() then
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747990089,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"Death Alternate")
endif
if eg() then
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747990073,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"Death Alternate")
endif
if ag() then
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747990071,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"Death Alternate")
endif
endfunction
function nh takes nothing returns nothing
local location oh
local location Oh
local real lh
local real bh
local rect yh
local group ph
local group eh
local code qh
local boolean ah
set u=GetUnitLoc(GetSpellAbilityUnit())
set oh=u
set S=Location(GetLocationX(oh)+0.00,GetLocationY(oh)+200.00)
set Oh=u
set lh=GetLocationX(Oh)
set bh=GetLocationY(Oh)
set o=Rect(lh-140,bh-150,lh+140,bh+150)
set yh=o
set ph=CreateGroup()
call GroupEnumUnitsInRect(ph,yh,null)
call DestroyBoolExpr(null)
set l=ph
set eh=l
set qh=Vy
set ah=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(eh,qh)
if ah then
call DestroyGroup(eh)
endif
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747988824,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"stand")
call DestroyGroup(l)
call RemoveLocation(S)
call RemoveLocation(u)
set oh=null
set Oh=null
set yh=null
set ph=null
set eh=null
endfunction
function nm takes nothing returns boolean
if GetUnitTypeId(GetDyingUnit())!=1747989048 then
return false
endif
return true
endfunction
function nww takes nothing returns boolean
return true
endfunction
function initMapBounds takes nothing returns nothing
local rect cond_result
local region receiver
local real temp
local real tuple_temp
set vc=bj_mapInitialPlayableArea
call RegionAddRect(CreateRegion(),vc)
set cond_result=GetWorldBounds()
set mc=cond_result
set receiver=CreateRegion()
call RegionAddRect(receiver,mc)
set Qc=receiver
set temp=GetRectMaxX(mc)
set tuple_temp=GetRectMaxY(mc)
set Wc=temp
set Ec=tuple_temp
endfunction
function o2 takes nothing returns boolean
call initMapBounds()
return true
endfunction
function oA takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990322,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990105,0)
endfunction
function oC takes nothing returns boolean
return true
endfunction
function cE takes nothing returns boolean
if GetResearched()!=1378889800 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889800,true)!=2 then
return false
endif
return true
endfunction
function oE takes nothing returns boolean
if not cE() then
return false
endif
return true
endfunction
function cI takes nothing returns boolean
if GetResearched()!=1378890037 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890037,true)!=1 then
return false
endif
return true
endfunction
function oI takes nothing returns boolean
if not cI() then
return false
endif
return true
endfunction
function Mnw takes integer hnw,integer Fnw,integer knw,integer jnw,integer xnw,integer vnw,integer mnw,integer Qnw,integer Wnw,integer Enw,integer Znw,integer Unw,integer Inw,integer Pnw,integer Anw,integer Dnw,integer Hnw,integer Jnw,integer Knw,integer Lnw,integer Xnw,integer Cnw,integer Vnw,string Bnw returns integer
local integer Nnw
set Ab[Pb]=Bnw
set Pb=Pb+1
set Nnw=Obw("when calling new_LinkedList in LinkedList, line 391")
call gnw(Nnw,hnw,"when calling add in LinkedList, line 393")
call gnw(Nnw,Fnw,"when calling add in LinkedList, line 393")
call gnw(Nnw,knw,"when calling add in LinkedList, line 393")
call gnw(Nnw,jnw,"when calling add in LinkedList, line 393")
call gnw(Nnw,xnw,"when calling add in LinkedList, line 393")
call gnw(Nnw,vnw,"when calling add in LinkedList, line 393")
call gnw(Nnw,mnw,"when calling add in LinkedList, line 393")
call gnw(Nnw,Qnw,"when calling add in LinkedList, line 393")
call gnw(Nnw,Wnw,"when calling add in LinkedList, line 393")
call gnw(Nnw,Enw,"when calling add in LinkedList, line 393")
call gnw(Nnw,Znw,"when calling add in LinkedList, line 393")
call gnw(Nnw,Unw,"when calling add in LinkedList, line 393")
call gnw(Nnw,Inw,"when calling add in LinkedList, line 393")
call gnw(Nnw,Pnw,"when calling add in LinkedList, line 393")
call gnw(Nnw,Anw,"when calling add in LinkedList, line 393")
call gnw(Nnw,Dnw,"when calling add in LinkedList, line 393")
call gnw(Nnw,Hnw,"when calling add in LinkedList, line 393")
call gnw(Nnw,Jnw,"when calling add in LinkedList, line 393")
call gnw(Nnw,Knw,"when calling add in LinkedList, line 393")
call gnw(Nnw,Lnw,"when calling add in LinkedList, line 393")
call gnw(Nnw,Xnw,"when calling add in LinkedList, line 393")
call gnw(Nnw,Cnw,"when calling add in LinkedList, line 393")
call gnw(Nnw,Vnw,"when calling add in LinkedList, line 393")
set Pb=Pb-1
return Nnw
endfunction
function B9 takes string L9 returns boolean
local playerunitevent X9
local integer C9
local integer V9
set Ab[Pb]=L9
set Pb=Pb+1
set yo=Mnw(1747988557,1747989075,1747990102,1747988785,1747989839,1747990101,1747989554,1747989041,1747990344,1747989059,1747989060,1747988844,1747990351,1747990352,1747990356,1747989331,1747990350,1747989809,1747990353,1747990354,1747990355,1747988568,1747990341,"when calling asList in RangeChecks, line 5")
set X9=EVENT_PLAYER_UNIT_CONSTRUCT_START
set Ab[Pb]="when calling alloc_RangeChecks_EventListener_line11 in RangeChecks, line 11"
set Pb=Pb+1
if SO==0 then
if cO<32768 then
set cO=cO+1
set C9=cO
set oO[C9]=675
else
call W1("Out of memory: Could not create RangeChecks_EventListener_line11.","when calling error in RangeChecks, line 11")
set C9=0
endif
else
set SO=SO-1
set C9=iO[SO]
set oO[C9]=675
endif
set Pb=Pb-1
set Cl[C9]=0
set Vl[C9]=0
set Bl[C9]=0
set Ab[Pb]="when calling add in RangeChecks, line 11"
set Pb=Pb+1
set Ab[Pb]="when calling toIntId in ClosureEvents, line 112"
set Pb=Pb+1
set V9=ES[GetHandleId(X9)]
if V9==0 then
set V9=tB(X9,"when calling registerEventId in ClosureEvents, line 229")
endif
set Pb=Pb-1
set Cl[C9]=V9
if PS[Cl[C9]]!=0 then
set Bl[PS[Cl[C9]]]=C9
set Vl[C9]=PS[Cl[C9]]
endif
set PS[Cl[C9]]=C9
set Pb=Pb-1-1
set X9=null
return true
endfunction
function oTw takes nothing returns boolean
set Pb=0
return B9("RangeChecks, line 1")
endfunction
function oU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989560,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989579,0)
endfunction
function cX takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990327 then
return false
endif
return true
endfunction
function oX takes nothing returns boolean
if not cX() then
return false
endif
return true
endfunction
function oww_2 takes nothing returns boolean
set do[0]="Terrible! Terrible news, my lord!"
set do[1]="The messenger came to us with horrific news! May we execute him?"
set do[2]="A mere nightmare, Your Mightiness!"
set fo[0]="Holy Mother of God, we have horrific news!"
set fo[1]="Lord Preserve us, Great Prince!"
set fo[2]="Great Prince, we have horrific news!"
set Ro[0]="Allah be merciful! I bring terrible news"
set Ro[1]="Oh, Great Sultan! We have terrible news"
set Ro[2]="Oh, Great one! I bring ill news"
set To[0]="Saints save us, we have some most horrific news!"
set To[1]="My Basileus! We have horrific news!"
set To[2]="My Basileus, by the grace of our lord. We have horrific news!"
set Yo[0]="My King, we have received news concerning our realm"
set Yo[1]="The messenger arrived with news. No matter, could I execute him?"
set Yo[2]="My liege I bring news about the realm"
set Go[0]="Great Prince, a messenger came with news"
set Go[1]="May the God bless you, Great Prince, we have some news"
set Go[2]="There is something you should know, Great Prince"
set go[0]="My Sultan! We have news"
set go[1]="Praise be to Allah, Sultan! We bring news"
set go[2]="Great Sultan! We have some news"
set ho[0]="My Basileus, we have some news"
set ho[1]="My Basileus, we have some news"
set ho[2]="My Basileus, we have some news"
set Fo[0]="Milord! Good news!"
set Fo[1]="Praise the Holy Lord! We have good news"
set Fo[2]="My King, we bring great news for you!"
set ko[0]="By the grace of our Lord, we bring good news!"
set ko[1]="We received great news my Lord! Still the Messenger deserves to be pusnished"
set ko[2]="My Lord, we have received delightful news!"
set jo[0]="Praise be to Allah, Sultan! We have great news"
set jo[1]="Good tidings Sultan! I bring good news"
set jo[2]="Allah is glorious, Sultan! We have great news"
set xo[0]="Good news, my Basileus!"
set xo[1]="Praise the Holy Lord, we bring great news, my Basileus!"
set xo[2]="We received good news my Basileus! We shouldn’t blind this messenger"
set vo[0]="Your Majesty, important news!"
set vo[1]="May the God bless you, my lord. There is something you must know!"
set vo[2]="There is something that needs your attention, my lord!"
set mo[0]="By the Saints! Great Prince, you must hear to this"
set mo[1]="You should hear this, Great Prince!"
set mo[2]="You need to see this, Great Prince!"
set Qo[0]="Great one, urgent news must be brought to your attention!"
set Qo[1]="My Sultan, there is something you need to know!"
set Qo[2]="My Great Sultan, there is something you must know!"
set Wo[0]="My Basileus, there is something you need to know!"
set Wo[1]="My Basileus, we can not delay this news!"
set Wo[2]="My Basileus, you should be aware of this!"
set Eo[0]="|cffffd900Med."
set Eo[1]="|cff00ff00Low"
set Eo[2]="|cffff0000High"
set Eo[3]="|cff940000Harsh"
return true
endfunction
function p4 takes nothing returns boolean
set Fc=false
set kc=false
set jc=CreateTimer()
call TimerStart(jc,0.01,true,If)
return true
endfunction
function pD takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990595,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990608,0)
endfunction
function pK takes nothing returns nothing
call UnitAddAbility(GetConstructedStructure(),1093677896)
endfunction
function yP takes nothing returns boolean
if GetResearched()!=1378890036 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890036,true)!=1 then
return false
endif
return true
endfunction
function pP takes nothing returns boolean
if not yP() then
return false
endif
return true
endfunction
function pQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988567,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988564,0)
endfunction
function pTw takes nothing returns nothing
set Pb=0
call FB("ClosureEvents, line 241")
endfunction
function qA takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990323,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990106,0)
endfunction
function eE takes nothing returns boolean
if GetResearched()!=1378889803 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889803,true)!=1 then
return false
endif
return true
endfunction
function qE takes nothing returns boolean
if not eE() then
return false
endif
return true
endfunction
function qG takes nothing returns nothing
local player lG=GetOwningPlayer(GetAttacker())
local player bG=GetOwningPlayer(GetAttacker())
local player yG
local player pG
local unit eG
set r[GetPlayerId(lG)+1]=r[GetPlayerId(bG)+1]+1
set yG=GetOwningPlayer(GetTriggerUnit())
set pG=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(yG)+1]=r[GetPlayerId(pG)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set eG=GetTriggerUnit()
call SetUnitState(eG,UNIT_STATE_LIFE,GetUnitState(eG,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set lG=null
set bG=null
set yG=null
set pG=null
set eG=null
endfunction
function eI takes nothing returns boolean
if GetResearched()!=1378890037 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890037,true)!=2 then
return false
endif
return true
endfunction
function qI takes nothing returns boolean
if not eI() then
return false
endif
return true
endfunction
function cww takes string tww,string iww returns boolean
local integer Sww=StringLength(tww)
if StringLength(iww)>Sww then
return false
endif
return SubString(tww,0,StringLength(iww))==iww
endfunction
function qM takes nothing returns boolean
return cww(GetEventPlayerChatString(),"-")
endfunction
function Fbw takes integer fbw,unit Rbw,string Tbw returns nothing
local integer Ybw
local integer Gbw
local boolean gbw
local boolean hbw
set Ab[Pb]=Tbw
set Pb=Pb+1
if GetOwningPlayer(Rbw)==Gb[fbw]then
set Ybw=Vo
set Gbw=GetUnitTypeId(Rbw)
set Ab[Pb]="when calling has in MassControl, line 28"
set Pb=Pb+1
if tl[Ybw]==0 then
if Ybw==0 then
call W1("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call W1("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set gbw=ubw(Ybw,Gbw)
set Pb=Pb-1
set hbw=not gbw
else
set hbw=false
endif
if hbw and Rbw!=gb[fbw] and(not IsUnitType(Rbw,UNIT_TYPE_STRUCTURE)) then
call gnw(hb[fbw],GetHandleId(Rbw),"when calling add in MassControl, line 29")
endif
set Pb=Pb-1
endfunction
function Sow takes integer Ccw,unit Vcw,string Bcw returns nothing
local integer Ncw
local integer Mcw
local boolean wow
local player uow
local player row
local boolean sow
local boolean tow
local integer iow
set Ab[Pb]=Bcw
set Pb=Pb+1
set Ncw=Lo
set Mcw=GetUnitTypeId(Vcw)
set Ab[Pb]="when calling has in Economy, line 39"
set Pb=Pb+1
if tl[Ncw]==0 then
if Ncw==0 then
call W1("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call W1("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set wow=ubw(Ncw,Mcw)
set Pb=Pb-1
if wow then
set uow=ro[GetPlayerId(GetOwningPlayer(Vcw))]
if GetPlayerSlotState(uow)==PLAYER_SLOT_STATE_PLAYING then
set sow=GetPlayerController(uow)==MAP_CONTROL_USER
else
set sow=false
endif
set tow=sow
else
set tow=false
endif
if tow then
set row=GetOwningPlayer(Vcw)
set iow=tc[GetPlayerId(GetOwningPlayer(Vcw))]
set Ccw=Xo
set tc[GetPlayerId(row)]=iow+Uaw(Ccw,GetUnitTypeId(Vcw),"when calling get in Economy, line 40")
endif
set Pb=Pb-1
set uow=null
set row=null
endfunction
function J9 takes integer H9 returns real
if H9==1747988785 then
return 10.0
elseif H9==1747989075 then
return 10.0
elseif H9==1747990102 then
return 10.0
elseif H9==1747989839 then
return 10.0
elseif H9==1747988568 then
return 5.0
elseif H9==1747990341 then
return 5.0
elseif H9==1747988789 then
return 15.0
elseif H9==1747990103 then
return 15.0
elseif H9==1747990064 then
return 15.0
elseif H9==1747989846 then
return 15.0
else
return 0.0
endif
endfunction
function YSw takes integer fSw,unit RSw returns nothing
local boolean TSw
if IsUnitType(RSw,UNIT_TYPE_STRUCTURE) then
set TSw=GetOwningPlayer(RSw)==ro[jl[Hl[fSw]]]
else
set TSw=false
endif
if TSw then
set El[Hl[fSw]]=El[Hl[fSw]]+J9(GetUnitTypeId(RSw))
endif
endfunction
function dSw takes integer bSw,unit ySw,string pSw returns nothing
local integer eSw
local integer qSw
local boolean aSw
local boolean nSw
set Ab[Pb]=pSw
set Pb=Pb+1
set eSw=Vo
set qSw=GetUnitTypeId(ySw)
set Ab[Pb]="when calling has in City, line 301"
set Pb=Pb+1
if tl[eSw]==0 then
if eSw==0 then
call W1("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call W1("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set aSw=ubw(eSw,qSw)
set Pb=Pb-1
if not aSw then
set nSw=GetOwningPlayer(ySw)==ro[jl[Dl[bSw]]]
else
set nSw=false
endif
if nSw then
set El[Dl[bSw]]=El[Dl[bSw]]+0.5
endif
set Pb=Pb-1
endfunction
function vqw takes integer kqw,unit jqw,string xqw returns nothing
set Ab[Pb]=xqw
set Pb=Pb+1
if fO[kqw]==0 then
if kqw==0 then
call W1("Nullpointer exception when calling ForGroupCallback.callback","when calling error in ClosureForGroups, line 4")
else
call W1("Called ForGroupCallback.callback on invalid object.","when calling error in ClosureForGroups, line 4")
endif
endif
if fO[kqw]<=684 then
if fO[kqw]<=683 then
if fO[kqw]<=682 then
call dSw(kqw,jqw,"when calling City_City_callback_line300 in ClosureForGroups, line 4")
else
call YSw(kqw,jqw)
endif
else
call Sow(kqw,jqw,"when calling Economy_callback_line38 in ClosureForGroups, line 4")
endif
elseif fO[kqw]<=686 then
if fO[kqw]<=685 then
set Ab[Pb]="when calling LinkedList_callback_line514 in ClosureForGroups, line 4"
set Pb=Pb+1
call gnw(pb[kqw],GetHandleId(jqw),"when calling add in LinkedList, line 515")
set Pb=Pb-1
else
call Fbw(kqw,jqw,"when calling MassControl_callback_line27 in ClosureForGroups, line 4")
endif
else
call RemoveUnit(jqw)
endif
set Pb=Pb-1
endfunction
function qTw takes nothing returns nothing
local unit eTw
set Pb=0
set Ab[Pb]="ClosureForGroups, line 14"
set Pb=Pb+1
set eTw=GetFilterUnit()
set Ab[Pb]="when calling filterCallback in ClosureForGroups, line 14"
set Pb=Pb+1
if XS<LS then
call vqw(JS[KS-1],eTw,"when calling callback in ClosureForGroups, line 18")
endif
set XS=XS+1
set Pb=Pb-1-1
set eTw=null
endfunction
function qU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989573,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989572,0)
endfunction
function eX takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990085 then
return false
endif
return true
endfunction
function qX takes nothing returns boolean
if not eX() then
return false
endif
return true
endfunction
function ek takes nothing returns boolean
local unitstate pk=UNIT_STATE_MANA
if GetUnitState(GetEnumUnit(),pk)>0.00 then
set pk=null
return false
endif
set pk=null
return true
endfunction
function qk takes nothing returns nothing
if ek() then
call KillUnit(GetEnumUnit())
endif
endfunction
function r9 takes nothing returns boolean
return true
endfunction
function rE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988818,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988552,0)
endfunction
function rI takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989814,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989825,0)
endfunction
function o4 takes string u4 returns boolean
local playerunitevent r4
local playerunitevent s4
local integer t4
local integer i4
local integer S4
local integer c4
set Ab[Pb]=u4
set Pb=Pb+1
set r4=EVENT_PLAYER_UNIT_DEATH
set Ab[Pb]="when calling alloc_LimitMercenaryCamps_EventListener_line8 in LimitMercenaryCamps, line 8"
set Pb=Pb+1
if SO==0 then
if cO<32768 then
set cO=cO+1
set t4=cO
set oO[t4]=669
else
call W1("Out of memory: Could not create LimitMercenaryCamps_EventListener_line8.","when calling error in LimitMercenaryCamps, line 8")
set t4=0
endif
else
set SO=SO-1
set t4=iO[SO]
set oO[t4]=669
endif
set Pb=Pb-1
set Cl[t4]=0
set Vl[t4]=0
set Bl[t4]=0
set Ab[Pb]="when calling add in LimitMercenaryCamps, line 8"
set Pb=Pb+1
set Ab[Pb]="when calling toIntId in ClosureEvents, line 112"
set Pb=Pb+1
set i4=ES[GetHandleId(r4)]
if i4==0 then
set i4=tB(r4,"when calling registerEventId in ClosureEvents, line 229")
endif
set Pb=Pb-1
set Cl[t4]=i4
if PS[Cl[t4]]!=0 then
set Bl[PS[Cl[t4]]]=t4
set Vl[t4]=PS[Cl[t4]]
endif
set PS[Cl[t4]]=t4
set Pb=Pb-1
set s4=EVENT_PLAYER_UNIT_CONSTRUCT_START
set Ab[Pb]="when calling alloc_LimitMercenaryCamps_EventListener_line12 in LimitMercenaryCamps, line 12"
set Pb=Pb+1
if SO==0 then
if cO<32768 then
set cO=cO+1
set S4=cO
set oO[S4]=668
else
call W1("Out of memory: Could not create LimitMercenaryCamps_EventListener_line12.","when calling error in LimitMercenaryCamps, line 12")
set S4=0
endif
else
set SO=SO-1
set S4=iO[SO]
set oO[S4]=668
endif
set Pb=Pb-1
set Cl[S4]=0
set Vl[S4]=0
set Bl[S4]=0
set Ab[Pb]="when calling add in LimitMercenaryCamps, line 12"
set Pb=Pb+1
set Ab[Pb]="when calling toIntId in ClosureEvents, line 112"
set Pb=Pb+1
set c4=ES[GetHandleId(s4)]
if c4==0 then
set c4=tB(s4,"when calling registerEventId in ClosureEvents, line 229")
endif
set Pb=Pb-1
set Cl[S4]=c4
if PS[Cl[S4]]!=0 then
set Bl[PS[Cl[S4]]]=S4
set Vl[S4]=PS[Cl[S4]]
endif
set PS[Cl[S4]]=S4
set Pb=Pb-1-1
set r4=null
set s4=null
return true
endfunction
function rTw takes nothing returns boolean
set Pb=0
return o4("LimitMercenaryCamps, line 1")
endfunction
function rX takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function uZ takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function rZ takes nothing returns boolean
if not uZ() then
return false
endif
return true
endfunction
function s9 takes nothing returns boolean
return true
endfunction
function sG takes nothing returns nothing
local player NY=GetOwningPlayer(GetAttacker())
local player MY=GetOwningPlayer(GetAttacker())
local player wG
local player uG
local unit rG
set r[GetPlayerId(NY)+1]=r[GetPlayerId(MY)+1]+1
set wG=GetOwningPlayer(GetTriggerUnit())
set uG=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(wG)+1]=r[GetPlayerId(uG)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set rG=GetTriggerUnit()
call SetUnitState(rG,UNIT_STATE_LIFE,GetUnitState(rG,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set NY=null
set MY=null
set wG=null
set uG=null
set rG=null
endfunction
function rH takes nothing returns boolean
if GetResearched()!=1378889818 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889818,true)!=1 then
return false
endif
return true
endfunction
function sH takes nothing returns boolean
if not rH() then
return false
endif
return true
endfunction
function rL takes nothing returns boolean
if GetUnitTypeId(GetConstructedStructure())!=1747989331 then
return false
endif
return true
endfunction
function sL takes nothing returns boolean
if not rL() then
return false
endif
return true
endfunction
function B0w takes rect H0w,string J0w,integer K0w,integer L0w,string X0w returns nothing
local group C0w
local unit V0w
set Ab[Pb]=X0w
set Pb=Pb+1
set C0w=CreateGroup()
call GroupEnumUnitsInRect(C0w,H0w,null)
call DestroyBoolExpr(null)
set V0w=FirstOfGroup(C0w)
call GroupRemoveUnit(C0w,V0w)
set xS[TS]=Kiw(V0w,J0w,K0w,L0w,"when calling new_City in SettingCities, line 7")
set Pb=Pb-1
set C0w=null
set V0w=null
endfunction
function Fpw takes player npw,string dpw returns integer
local integer fpw
local integer Rpw
local integer Tpw
local player Ypw
local integer Gpw
local integer gpw
local boolean hpw
set Ab[Pb]=dpw
set Pb=Pb+1
set Ab[Pb]="when calling alloc_PlayerStats in PlayerStats, line 129"
set Pb=Pb+1
if ol==0 then
if Ol<32768 then
set Ol=Ol+1
set Rpw=Ol
set ll[Rpw]=712
else
call W1("Out of memory: Could not create PlayerStats.","when calling error in PlayerStats, line 6")
set Rpw=0
endif
else
set ol=ol-1
set Rpw=cl[ol]
set ll[Rpw]=712
endif
set Pb=Pb-1
set fpw=Rpw
set Tpw=Rpw
set Ypw=npw
set Ab[Pb]="when calling construct_PlayerStats in PlayerStats, line 129"
set Pb=Pb+1
set Wb[Rpw]=false
set Zb[Rpw]=0
set mb[Rpw]=-1
set Eb[Rpw]=-1
set Qb[Rpw]=npw
if GetPlayerSlotState(npw)==PLAYER_SLOT_STATE_PLAYING then
set hpw=GetPlayerController(npw)==MAP_CONTROL_USER
else
set hpw=false
endif
set Wb[Rpw]=hpw
set Gpw=0
set gpw=23
loop
exitwhen Gpw>gpw
if ro[Gpw]==Ypw then
call ETw(Tpw,Gpw,-1,"when writing array PlayerStats_alliance_states in PlayerStats, line 137")
else
call ETw(Tpw,Gpw,bj_ALLIANCE_UNALLIED,"when writing array PlayerStats_alliance_states in PlayerStats, line 139")
endif
set Gpw=Gpw+1
endloop
set Pb=Pb-1-1
set Ypw=null
return fpw
endfunction
function K4 takes string x4 returns nothing
local integer v4
local integer m4
local real Q4
local player W4
local integer E4
local integer Z4
local integer U4
local boolean I4
local location P4
local integer A4
local real D4
local real H4
local real J4
set Ab[Pb]=x4
set Pb=Pb+1
set v4=24
set m4=6
set Q4=100.0
loop
exitwhen v4<=0
set E4=1
set Z4=m4
loop
exitwhen E4>Z4
set D4=E4*6.28318/m4
set H4=311.2+Q4*Cos(D4)
set J4=5166.7+Q4*Sin(D4)
set W4=ro[24-v4+E4-1]
set U4=uo[GetPlayerId(W4)]
set x4="when calling isInGame in MainInit, line 54"
set Ab[Pb]="when calling isInGame in MainInit, line 54"
set Pb=Pb+1
if ll[U4]==0 then
if U4==0 then
call W1("Nullpointer exception when calling PlayerStats.isInGame","when calling error in PlayerStats, line 14")
else
call W1("Called PlayerStats.isInGame on invalid object.","when calling error in PlayerStats, line 14")
endif
endif
set I4=Wb[U4]
set Pb=Pb-1
if I4 then
set P4=Location(H4,J4)
call CreateNUnitsAtLoc(1,1747988554,W4,P4,AngleBetweenPoints(P4,Location(311.2,5166.7)))
endif
set E4=E4+1
endloop
set Q4=Q4+50.0
set v4=v4-m4
set m4=m4+2
if v4<2147483647 then
set A4=v4
else
set A4=2147483647
endif
if m4<A4 then
set A4=m4
endif
set m4=A4
endloop
set Pb=Pb-1
set W4=null
set P4=null
endfunction
function c5 takes string S5 returns nothing
if (not Fc)and(not kc) then
return
endif
call DisplayTimedTextToPlayer(ro[0],0.,0.,60.,S5)
endfunction
function j4 takes string e4 returns boolean
local integer q4
local integer a4
local trigger n4
local integer d4
local integer f4
local integer R4
local integer T4
local integer Y4
local player G4
local integer g4
local player h4
local boolean F4
local boolean k4
set Ab[Pb]=e4
set Pb=Pb+1
set d4=Xww("You're playing |cffffff65Crusade over Europe|r.\n\nUse your |cff0011ffsettler|r to choose the foundation of your new kingdom.\nThe location you choose will |cffff0000determine the faction you will get|r.\nUse the |cff00ffffF1|r menu to create alliances.\nExpand quickly, Capture cities and ores to |cffff0000increase your income|r.\nUse the |cff00fff2F2|r menu to set the taxes of your newly acquired |cff0026ffcities|r.\nFor more information, please, go to |cff00d3f8F9 menu|r.","when calling stringToIndex in MainInit, line 21")
set Ab[Pb]="when calling asList in MainInit, line 20"
set Pb=Pb+1
set f4=Obw("when calling new_LinkedList in LinkedList, line 391")
call gnw(f4,d4,"when calling add in LinkedList, line 393")
set Pb=Pb-1
set gc=f4
set R4=0
set T4=0
set Y4=23
loop
exitwhen T4>Y4
set G4=ro[T4]
if GetPlayerSlotState(G4)==PLAYER_SLOT_STATE_PLAYING then
set F4=GetPlayerController(G4)==MAP_CONTROL_USER
else
set F4=false
endif
if F4 then
set R4=R4+1
endif
set T4=T4+1
endloop
if Fc then
call c5("Debug info is enabled. Only for Red.")
endif
if kc then
call DisplayTimedTextToPlayer(so,0.,0.,45.,"Debug mode is on.")
endif
set Ab[Pb]="when calling setupCities in MainInit, line 98"
set Pb=Pb+1
call B0w(h,"Adrianopolis",3,1,"when calling newCity in SettingCities, line 26")
call B0w(Ss,"Arta",3,0,"when calling newCity in SettingCities, line 27")
call B0w(Br,"Athens",3,1,"when calling newCity in SettingCities, line 28")
call B0w(Vr,"Ragusa",3,0,"when calling newCity in SettingCities, line 29")
call B0w(ls,"Canakkale",3,0,"when calling newCity in SettingCities, line 30")
call B0w(cs,"Candia",3,0,"when calling newCity in SettingCities, line 31")
call B0w(k,"Constantinople",3,4,"when calling newCity in SettingCities, line 32")
call B0w(is,"Corinth",3,0,"when calling newCity in SettingCities, line 33")
call B0w(g,"Durazzo",3,0,"when calling newCity in SettingCities, line 34")
call B0w(ws,"Nikomedeia",3,0,"when calling newCity in SettingCities, line 35")
call B0w(lu,"Kutaisi",3,0,"when calling newCity in SettingCities, line 36")
call B0w(Dw,"Nicae",3,2,"when calling newCity in SettingCities, line 37")
call B0w(Zw,"Nicosia",3,0,"when calling newCity in SettingCities, line 38")
call B0w(Nr,"Rhodes",3,0,"when calling newCity in SettingCities, line 39")
call B0w(x,"Scopia",3,0,"when calling newCity in SettingCities, line 40")
call B0w(Pw,"Smyrna",3,0,"when calling newCity in SettingCities, line 41")
call B0w(bu,"Tbilisi",3,0,"when calling newCity in SettingCities, line 42")
call B0w(Ew,"Trebizond",3,1,"when calling newCity in SettingCities, line 43")
call B0w(F,"Thessalonika",3,3,"when calling newCity in SettingCities, line 44")
call B0w(Qu,"Astrakhan'",1,2,"when calling newCity in SettingCities, line 48")
call B0w(Gw,"Azaq",1,0,"when calling newCity in SettingCities, line 49")
call B0w(ru,"Baia",1,0,"when calling newCity in SettingCities, line 50")
call B0w(cu,"Bryansk",1,0,"when calling newCity in SettingCities, line 51")
call B0w(sw,"Caffa",1,0,"when calling newCity in SettingCities, line 52")
call B0w(U,"Constanta",1,0,"when calling newCity in SettingCities, line 53")
call B0w(iu,"Dnipro",1,0,"when calling newCity in SettingCities, line 54")
call B0w(nw,"Halych",1,0,"when calling newCity in SettingCities, line 55")
call B0w(gw,"Kiev",1,2,"when calling newCity in SettingCities, line 56")
call B0w(N,"Konigsberg",1,0,"when calling newCity in SettingCities, line 57")
call B0w(uw,"Hrodna",1,0,"when calling newCity in SettingCities, line 58")
call B0w(hw,"Minsk",1,1,"when calling newCity in SettingCities, line 59")
call B0w(Su,"Moscow",1,0,"when calling newCity in SettingCities, line 60")
call B0w(Sw,"Novgorod",1,0,"when calling newCity in SettingCities, line 61")
call B0w(tu,"Olesh'e",1,0,"when calling newCity in SettingCities, line 62")
call B0w(cw,"Polotsk",1,0,"when calling newCity in SettingCities, line 63")
call B0w(tw,"Pskov",1,0,"when calling newCity in SettingCities, line 64")
call B0w(iw,"Reval",1,0,"when calling newCity in SettingCities, line 65")
call B0w(M,"Riga",1,1,"when calling newCity in SettingCities, line 66")
call B0w(bs,"Bulgar",1,0,"when calling newCity in SettingCities, line 67")
call B0w(Wu,"Ryazan'",1,0,"when calling newCity in SettingCities, line 68")
call B0w(Ou,"Sarkel",1,0,"when calling newCity in SettingCities, line 69")
call B0w(Fw,"Smolensk",1,1,"when calling newCity in SettingCities, line 70")
call B0w(L,"Sofia",1,0,"when calling newCity in SettingCities, line 71")
call B0w(I,"Targovitse",1,1,"when calling newCity in SettingCities, line 72")
call B0w(uu,"Tmutarakan'",1,0,"when calling newCity in SettingCities, line 73")
call B0w(Mr,"Turku",1,0,"when calling newCity in SettingCities, line 74")
call B0w(rw,"Vilnius",1,1,"when calling newCity in SettingCities, line 75")
call B0w(su,"Zhytomir",1,0,"when calling newCity in SettingCities, line 76")
call B0w(au,"Acre",2,2,"when calling newCity in SettingCities, line 80")
call B0w(mw,"Adana",2,0,"when calling newCity in SettingCities, line 81")
call B0w(as,"Alamut",2,0,"when calling newCity in SettingCities, line 82")
call B0w(nu,"Al-Aqaba",2,0,"when calling newCity in SettingCities, line 83")
call B0w(Nw,"Alexandria",2,2,"when calling newCity in SettingCities, line 84")
call B0w(Kw,"Algiers",2,0,"when calling newCity in SettingCities, line 85")
call B0w(Aw,"Ankara",2,1,"when calling newCity in SettingCities, line 86")
call B0w(Ww,"Antioch",2,2,"when calling newCity in SettingCities, line 87")
call B0w(us,"Badajoz",2,0,"when calling newCity in SettingCities, line 88")
call B0w(Os,"Baghdad",2,4,"when calling newCity in SettingCities, line 89")
call B0w(ns,"Baku",2,0,"when calling newCity in SettingCities, line 90")
call B0w(Cw,"Benghazi",2,1,"when calling newCity in SettingCities, line 91")
call B0w(es,"Beleb-el-Anab",2,0,"when calling newCity in SettingCities, line 92")
call B0w(wu,"Cairo",2,3,"when calling newCity in SettingCities, line 93")
call B0w(Tr,"Cordoba",2,4,"when calling newCity in SettingCities, line 94")
call B0w(yu,"Damascus",2,2,"when calling newCity in SettingCities, line 95")
call B0w(Mw,"Damietta",2,1,"when calling newCity in SettingCities, line 96")
call B0w(Ru,"Diyarbakir",2,0,"when calling newCity in SettingCities, line 97")
call B0w(Iw,"Edessa",2,1,"when calling newCity in SettingCities, line 98")
call B0w(Tu,"Erez",2,1,"when calling newCity in SettingCities, line 99")
call B0w(Hw,"Fes",2,3,"when calling newCity in SettingCities, line 100")
call B0w(eu,"Gaza",2,0,"when calling newCity in SettingCities, line 101")
call B0w(Rr,"Granada",2,2,"when calling newCity in SettingCities, line 102")
call B0w(xw,"Isparta",2,0,"when calling newCity in SettingCities, line 103")
call B0w(Uw,"Jerusalem",2,3,"when calling newCity in SettingCities, line 104")
call B0w(vw,"Kayseri",2,1,"when calling newCity in SettingCities, line 105")
call B0w(os,"Kerak",2,0,"when calling newCity in SettingCities, line 106")
call B0w(ds,"Kermanshah",2,0,"when calling newCity in SettingCities, line 107")
call B0w(Qw,"Konya",2,0,"when calling newCity in SettingCities, line 108")
call B0w(Sr,"Lisbon",2,0,"when calling newCity in SettingCities, line 109")
call B0w(Ur,"Luxor",2,0,"when calling newCity in SettingCities, line 110")
call B0w(tr,"Madrid",2,0,"when calling newCity in SettingCities, line 111")
call B0w(Lw,"Mahdya",2,0,"when calling newCity in SettingCities, line 112")
call B0w(Zr,"Marrakesh",2,3,"when calling newCity in SettingCities, line 113")
call B0w(Bw,"Medina",2,2,"when calling newCity in SettingCities, line 114")
call B0w(ps,"Melilla",2,0,"when calling newCity in SettingCities, line 115")
call B0w(qu,"Mosul",2,1,"when calling newCity in SettingCities, line 116")
call B0w(Yr,"Murcia",2,1,"when calling newCity in SettingCities, line 117")
call B0w(Jw,"Oran",2,0,"when calling newCity in SettingCities, line 118")
call B0w(mu,"Palma",2,1,"when calling newCity in SettingCities, line 119")
call B0w(du,"Quarisiya",2,1,"when calling newCity in SettingCities, line 120")
call B0w(Er,"Silves",2,0,"when calling newCity in SettingCities, line 121")
call B0w(jw,"Sinop",2,0,"when calling newCity in SettingCities, line 122")
call B0w(fu,"Tamiya",2,0,"when calling newCity in SettingCities, line 123")
call B0w(pu,"Tartus",2,0,"when calling newCity in SettingCities, line 124")
call B0w(qs,"Tabriz",2,0,"when calling newCity in SettingCities, line 125")
call B0w(Xw,"Tripoli",2,1,"when calling newCity in SettingCities, line 126")
call B0w(Yw,"Tunis",2,1,"when calling newCity in SettingCities, line 127")
call B0w(Gr,"Valencia",2,0,"when calling newCity in SettingCities, line 128")
call B0w(ou,"Yerevan",2,0,"when calling newCity in SettingCities, line 129")
call B0w(J,"Aarhus",0,1,"when calling newCity in SettingCities, line 133")
call B0w(Zu,"Aberdeen",0,1,"when calling newCity in SettingCities, line 134")
call B0w(Ar,"Ajaccio",0,0,"when calling newCity in SettingCities, line 135")
call B0w(dr,"Ancona",0,1,"when calling newCity in SettingCities, line 136")
call B0w(Pr,"Angers",0,0,"when calling newCity in SettingCities, line 137")
call B0w(yr,"Antwerp",0,0,"when calling newCity in SettingCities, line 138")
call B0w(ur,"Barcelona",0,1,"when calling newCity in SettingCities, line 139")
call B0w(Kr,"Bari",0,0,"when calling newCity in SettingCities, line 140")
call B0w(A,"Belgrade",0,1,"when calling newCity in SettingCities, line 141")
call B0w(mr,"Bergen",0,1,"when calling newCity in SettingCities, line 142")
call B0w(hr,"Bern",0,0,"when calling newCity in SettingCities, line 143")
call B0w(ar,"Bologna",0,1,"when calling newCity in SettingCities, line 144")
call B0w(Mu,"Bordeaux",0,1,"when calling newCity in SettingCities, line 145")
call B0w(P,"Brasov",0,0,"when calling newCity in SettingCities, line 146")
call B0w(br,"Bruges",0,0,"when calling newCity in SettingCities, line 147")
call B0w(f,"Burgh",0,0,"when calling newCity in SettingCities, line 148")
call B0w(sr,"Burgos",0,1,"when calling newCity in SettingCities, line 149")
call B0w(Lu,"Caen",0,0,"when calling newCity in SettingCities, line 150")
call B0w(Du,"Caenarfon",0,0,"when calling newCity in SettingCities, line 151")
call B0w(Dr,"Cagliari",0,0,"when calling newCity in SettingCities, line 152")
call B0w(R,"Cardiff",0,0,"when calling newCity in SettingCities, line 153")
call B0w(Bu,"Clermont",0,1,"when calling newCity in SettingCities, line 154")
call B0w(ju,"Cologne",0,1,"when calling newCity in SettingCities, line 155")
call B0w(Vu,"Dijon",0,0,"when calling newCity in SettingCities, line 156")
call B0w(Pu,"Dublin",0,0,"when calling newCity in SettingCities, line 157")
call B0w(Eu,"Edinburgh",0,0,"when calling newCity in SettingCities, line 158")
call B0w(vr,"Eikundarsund",0,0,"when calling newCity in SettingCities, line 159")
call B0w(Q,"Esztergom",0,1,"when calling newCity in SettingCities, line 160")
call B0w(Ku,"Exeter",0,0,"when calling newCity in SettingCities, line 161")
call B0w(ww,"Gdansk",0,0,"when calling newCity in SettingCities, line 162")
call B0w(D,"Flensburg",0,0,"when calling newCity in SettingCities, line 163")
call B0w(xu,"Frankfurt",0,1,"when calling newCity in SettingCities, line 164")
call B0w(T,"Galway",0,0,"when calling newCity in SettingCities, line 165")
call B0w(pr,"Genoa",0,2,"when calling newCity in SettingCities, line 166")
call B0w(Tw,"Groningen",0,0,"when calling newCity in SettingCities, line 167")
call B0w(ku,"Innsbruck",0,0,"when calling newCity in SettingCities, line 168")
call B0w(Uu,"Inverness",0,0,"when calling newCity in SettingCities, line 169")
call B0w(Au,"Desmond",0,0,"when calling newCity in SettingCities, line 170")
call B0w(Jr,"Reggio",0,0,"when calling newCity in SettingCities, line 172")
call B0w(ts,"Kalmar",0,0,"when calling newCity in SettingCities, line 173")
call B0w(V,"Kassa",0,0,"when calling newCity in SettingCities, line 174")
call B0w(E,"Krakow",0,2,"when calling newCity in SettingCities, line 175")
call B0w(rr,"Leon",0,1,"when calling newCity in SettingCities, line 176")
call B0w(Hu,"London",0,0,"when calling newCity in SettingCities, line 177")
call B0w(kr,"Lund",0,0,"when calling newCity in SettingCities, line 178")
call B0w(Fr,"Lyon",0,0,"when calling newCity in SettingCities, line 179")
call B0w(K,"Madgeburg",0,0,"when calling newCity in SettingCities, line 180")
call B0w(lr,"Marsellie",0,1,"when calling newCity in SettingCities, line 181")
call B0w(Cr,"Metz",0,0,"when calling newCity in SettingCities, line 182")
call B0w(er,"Milan",0,1,"when calling newCity in SettingCities, line 183")
call B0w(Hr,"Naples",0,1,"when calling newCity in SettingCities, line 184")
call B0w(gr,"Nuremburg",0,0,"when calling newCity in SettingCities, line 185")
call B0w(Wr,"Nykoping",0,0,"when calling newCity in SettingCities, line 186")
call B0w(rs,"Oporto",0,0,"when calling newCity in SettingCities, line 187")
call B0w(xr,"Oslo",0,1,"when calling newCity in SettingCities, line 188")
call B0w(ys,"Buda",0,1,"when calling newCity in SettingCities, line 189")
call B0w(Lr,"Palermo",0,3,"when calling newCity in SettingCities, line 190")
call B0w(cr,"Pamplona",0,0,"when calling newCity in SettingCities, line 191")
call B0w(Cu,"Paris",0,1,"when calling newCity in SettingCities, line 192")
call B0w(nr,"Pisa",0,0,"when calling newCity in SettingCities, line 193")
call B0w(X,"Plock",0,0,"when calling newCity in SettingCities, line 194")
call B0w(C,"Poznan",0,1,"when calling newCity in SettingCities, line 195")
call B0w(m,"Prague",0,0,"when calling newCity in SettingCities, line 196")
call B0w(G,"Zadar",0,0,"when calling newCity in SettingCities, line 197")
call B0w(Ir,"Rennes",0,0,"when calling newCity in SettingCities, line 198")
call B0w(Xu,"Rheims",0,0,"when calling newCity in SettingCities, line 199")
call B0w(fr,"Rome",0,1,"when calling newCity in SettingCities, line 200")
call B0w(H,"Roskilde",0,0,"when calling newCity in SettingCities, line 201")
call B0w(ir,"Salamanca",0,0,"when calling newCity in SettingCities, line 202")
call B0w(Fu,"Salzburg",0,0,"when calling newCity in SettingCities, line 203")
call B0w(jr,"Skara",0,0,"when calling newCity in SettingCities, line 204")
call B0w(W,"Stettin",0,0,"when calling newCity in SettingCities, line 205")
call B0w(ss,"Stockholm",0,1,"when calling newCity in SettingCities, line 206")
call B0w(Xr,"Syracuse",0,0,"when calling newCity in SettingCities, line 207")
call B0w(Nu,"Toulouse",0,0,"when calling newCity in SettingCities, line 208")
call B0w(B,"Varad",0,0,"when calling newCity in SettingCities, line 209")
call B0w(qr,"Venice",0,2,"when calling newCity in SettingCities, line 210")
call B0w(v,"Vienna",0,0,"when calling newCity in SettingCities, line 211")
call B0w(Qr,"Visby",0,0,"when calling newCity in SettingCities, line 212")
call B0w(j,"Warwick",0,0,"when calling newCity in SettingCities, line 213")
call B0w(Ju,"Winchester",0,1,"when calling newCity in SettingCities, line 214")
call B0w(Z,"Wroclaw",0,0,"when calling newCity in SettingCities, line 215")
call B0w(Iu,"York",0,1,"when calling newCity in SettingCities, line 216")
call B0w(Y,"Zagreb",0,0,"when calling newCity in SettingCities, line 217")
call B0w(wr,"Zaragoza",0,0,"when calling newCity in SettingCities, line 218")
call B0w(vu,"Hamburg",0,1,"when calling newCity in SettingCities, line 219")
set Pb=Pb-1
call SetForceAllianceStateBJ(bj_FORCE_ALL_PLAYERS,bj_FORCE_PLAYER[PLAYER_NEUTRAL_PASSIVE],bj_ALLIANCE_NEUTRAL)
call SetForceAllianceStateBJ(bj_FORCE_ALL_PLAYERS,bj_FORCE_ALL_PLAYERS,bj_ALLIANCE_UNALLIED)
call SetForceAllianceStateBJ(oc,oc,bj_ALLIANCE_NEUTRAL)
call SetForceAllianceStateBJ(Oc,Oc,bj_ALLIANCE_NEUTRAL)
call SetForceAllianceStateBJ(lc,lc,bj_ALLIANCE_NEUTRAL)
call SetForceAllianceStateBJ(bc,bc,bj_ALLIANCE_NEUTRAL)
set q4=0
set a4=23
loop
exitwhen q4>a4
call SetPlayerState(ro[q4],PLAYER_STATE_RESOURCE_GOLD,200)
call SetPlayerState(ro[q4],PLAYER_STATE_RESOURCE_LUMBER,200)
if kc then
call S2(ro[q4])
endif
call SetPlayerTechMaxAllowed(ro[q4],1747988789,1)
set uo[q4]=Fpw(ro[q4],"when calling new_PlayerStats in MainInit, line 121")
set g4=uo[q4]
set h4=ro[q4]
if GetPlayerSlotState(h4)==PLAYER_SLOT_STATE_PLAYING then
set k4=GetPlayerController(h4)==MAP_CONTROL_USER
else
set k4=false
endif
set Ab[Pb]="when calling setInGame in MainInit, line 122"
set Pb=Pb+1
if ll[g4]==0 then
if g4==0 then
call W1("Nullpointer exception when calling PlayerStats.setInGame","when calling error in PlayerStats, line 17")
else
call W1("Called PlayerStats.setInGame on invalid object.","when calling error in PlayerStats, line 17")
endif
endif
set Wb[g4]=k4
set Pb=Pb-1
set q4=q4+1
endloop
call K4("when calling setPlayersAtStart in MainInit, line 124")
set n4=CreateTrigger()
call TriggerRegisterTimerEvent(n4,0.01,false)
call TriggerAddAction(n4,Pf)
set Pb=Pb-1
set n4=null
set G4=null
set h4=null
return true
endfunction
function sTw takes nothing returns boolean
set Pb=0
return j4("MainInit, line 1")
endfunction
function rW takes nothing returns boolean
if GetResearched()!=1378889802 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889802,true)!=2 then
return false
endif
return true
endfunction
function sW takes nothing returns boolean
if not rW() then
return false
endif
return true
endfunction
function sZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990098,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990095,0)
endfunction
function sj takes nothing returns nothing
local player Kk=GetOwningPlayer(GetSpellTargetUnit())
local playerstate Lk=PLAYER_STATE_RESOURCE_LUMBER
local playerstate Xk
local playerstate Ck
local player Vk
local force Bk
local location Nk
local real Mk
local real wj
local player uj
local force rj
if Lk==PLAYER_STATE_RESOURCE_GOLD then
set Xk=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(Kk,Xk,GetPlayerState(Kk,Xk)+500)
elseif Lk==PLAYER_STATE_RESOURCE_LUMBER then
set Ck=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(Kk,Ck,GetPlayerState(Kk,Ck)+500)
endif
call SetPlayerState(Kk,Lk,GetPlayerState(Kk,Lk)+500)
call RemoveUnit(GetSpellAbilityUnit())
set Vk=GetOwningPlayer(GetSpellTargetUnit())
set Bk=CreateForce()
call ForceAddPlayer(Bk,Vk)
if IsPlayerInForce(GetLocalPlayer(),Bk) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_1228")
endif
set y=GetUnitLoc(GetSpellTargetUnit())
set uj=GetOwningPlayer(GetSpellTargetUnit())
set rj=CreateForce()
call ForceAddPlayer(rj,uj)
set Nk=y
set Mk=GetLocationX(Nk)
set wj=GetLocationY(Nk)
if IsPlayerInForce(GetLocalPlayer(),rj) then
call PingMinimap(Mk,wj,2.00)
endif
call RemoveLocation(y)
set Kk=null
set Lk=null
set Xk=null
set Ck=null
set Vk=null
set Bk=null
set Nk=null
set uj=null
set rj=null
endfunction
function tH takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990598,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990597,0)
endfunction
function tL takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function T2 takes string O2 returns boolean
local playerunitevent l2
local playerunitevent b2
local integer y2
local integer p2
local integer e2
local integer q2
local integer a2
local integer n2
local integer d2
local integer f2
local integer R2
set Ab[Pb]=O2
set Pb=Pb+1
set Zc=hOw("when calling new_HashMap in MassControl, line 7")
set y2=R2I(500000)
set p2=R2I(700000)
set e2=R2I(1000000)
set Ab[Pb]="when calling asList in MassControl, line 8"
set Pb=Pb+1
set q2=Obw("when calling new_LinkedList in LinkedList, line 391")
call gnw(q2,y2,"when calling add in LinkedList, line 393")
call gnw(q2,p2,"when calling add in LinkedList, line 393")
call gnw(q2,e2,"when calling add in LinkedList, line 393")
set Pb=Pb-1
set Uc=q2
set Ab[Pb]="when calling asList in MassControl, line 14"
set Pb=Pb+1
set a2=Obw("when calling new_LinkedList in LinkedList, line 391")
call gnw(a2,1211118401,"when calling add in LinkedList, line 393")
call gnw(a2,1211119699,"when calling add in LinkedList, line 393")
call gnw(a2,1211119701,"when calling add in LinkedList, line 393")
call gnw(a2,1211119700,"when calling add in LinkedList, line 393")
set Pb=Pb-1
set Ic=a2
set l2=EVENT_PLAYER_UNIT_SPELL_CAST
set Ab[Pb]="when calling alloc_MassControl_EventListener_line22 in MassControl, line 22"
set Pb=Pb+1
if SO==0 then
if cO<32768 then
set cO=cO+1
set n2=cO
set oO[n2]=670
else
call W1("Out of memory: Could not create MassControl_EventListener_line22.","when calling error in MassControl, line 22")
set n2=0
endif
else
set SO=SO-1
set n2=iO[SO]
set oO[n2]=670
endif
set Pb=Pb-1
set Cl[n2]=0
set Vl[n2]=0
set Bl[n2]=0
set Ab[Pb]="when calling add in MassControl, line 22"
set Pb=Pb+1
set Ab[Pb]="when calling toIntId in ClosureEvents, line 112"
set Pb=Pb+1
set d2=ES[GetHandleId(l2)]
if d2==0 then
set d2=tB(l2,"when calling registerEventId in ClosureEvents, line 229")
endif
set Pb=Pb-1
set Cl[n2]=d2
if PS[Cl[n2]]!=0 then
set Bl[PS[Cl[n2]]]=n2
set Vl[n2]=PS[Cl[n2]]
endif
set PS[Cl[n2]]=n2
set Pb=Pb-1
set b2=EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER
set Ab[Pb]="when calling alloc_MassControl_EventListener_line32 in MassControl, line 32"
set Pb=Pb+1
if SO==0 then
if cO<32768 then
set cO=cO+1
set f2=cO
set oO[f2]=671
else
call W1("Out of memory: Could not create MassControl_EventListener_line32.","when calling error in MassControl, line 32")
set f2=0
endif
else
set SO=SO-1
set f2=iO[SO]
set oO[f2]=671
endif
set Pb=Pb-1
set Cl[f2]=0
set Vl[f2]=0
set Bl[f2]=0
set Ab[Pb]="when calling add in MassControl, line 32"
set Pb=Pb+1
set Ab[Pb]="when calling toIntId in ClosureEvents, line 112"
set Pb=Pb+1
set R2=ES[GetHandleId(b2)]
if R2==0 then
set R2=tB(b2,"when calling registerEventId in ClosureEvents, line 229")
endif
set Pb=Pb-1
set Cl[f2]=R2
if PS[Cl[f2]]!=0 then
set Bl[PS[Cl[f2]]]=f2
set Vl[f2]=PS[Cl[f2]]
endif
set PS[Cl[f2]]=f2
set Pb=Pb-1-1
set l2=null
set b2=null
return true
endfunction
function tTw takes nothing returns boolean
set Pb=0
return T2("MassControl, line 1")
endfunction
function tW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651826,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651824,0)
endfunction
function VG takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988825 then
return false
endif
return true
endfunction
function BG takes nothing returns boolean
if not VG() then
return false
endif
return true
endfunction
function NG takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988824 then
return false
endif
return true
endfunction
function MG takes nothing returns boolean
if not NG() then
return false
endif
return true
endfunction
function rg takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989079 then
return false
endif
return true
endfunction
function sg takes nothing returns boolean
if not rg() then
return false
endif
return true
endfunction
function wg takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988826 then
return false
endif
return true
endfunction
function ug takes nothing returns boolean
if not wg() then
return false
endif
return true
endfunction
function tg takes nothing returns nothing
if BG() then
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747989047,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"Death Alternate")
endif
if MG() then
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747989046,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"Death Alternate")
endif
if ug() then
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747989077,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"Death Alternate")
endif
if sg() then
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747989078,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"Death Alternate")
endif
endfunction
function uA takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990321,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990104,0)
endfunction
function wE takes nothing returns boolean
if GetResearched()!=1378889800 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889800,true)!=1 then
return false
endif
return true
endfunction
function uE takes nothing returns boolean
if not wE() then
return false
endif
return true
endfunction
function wI takes nothing returns boolean
if GetResearched()!=1378889818 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889818,true)!=2 then
return false
endif
return true
endfunction
function uI takes nothing returns boolean
if not wI() then
return false
endif
return true
endfunction
function wJ takes nothing returns boolean
if GetUnitTypeId(GetConstructedStructure())==1747988545 then
return true
endif
if GetUnitTypeId(GetConstructedStructure())==1747989577 then
return true
endif
if GetUnitTypeId(GetConstructedStructure())==1747990320 then
return true
endif
if GetUnitTypeId(GetConstructedStructure())==1747989845 then
return true
endif
return false
endfunction
function uJ takes nothing returns boolean
if p[GetPlayerId(GetOwningPlayer(GetConstructedStructure()))+1]!=false then
return false
endif
if not wJ() then
return false
endif
return true
endfunction
function w4 takes string L1 returns boolean
local playerunitevent X1
local playerunitevent C1
local integer V1
local integer B1
local integer N1
local integer M1
set Ab[Pb]=L1
set Pb=Pb+1
set X1=EVENT_PLAYER_UNIT_DEATH
set Ab[Pb]="when calling alloc_LimitEncampments_EventListener_line8 in LimitEncampments, line 8"
set Pb=Pb+1
if SO==0 then
if cO<32768 then
set cO=cO+1
set V1=cO
set oO[V1]=667
else
call W1("Out of memory: Could not create LimitEncampments_EventListener_line8.","when calling error in LimitEncampments, line 8")
set V1=0
endif
else
set SO=SO-1
set V1=iO[SO]
set oO[V1]=667
endif
set Pb=Pb-1
set Cl[V1]=0
set Vl[V1]=0
set Bl[V1]=0
set Ab[Pb]="when calling add in LimitEncampments, line 8"
set Pb=Pb+1
set Ab[Pb]="when calling toIntId in ClosureEvents, line 112"
set Pb=Pb+1
set B1=ES[GetHandleId(X1)]
if B1==0 then
set B1=tB(X1,"when calling registerEventId in ClosureEvents, line 229")
endif
set Pb=Pb-1
set Cl[V1]=B1
if PS[Cl[V1]]!=0 then
set Bl[PS[Cl[V1]]]=V1
set Vl[V1]=PS[Cl[V1]]
endif
set PS[Cl[V1]]=V1
set Pb=Pb-1
set C1=EVENT_PLAYER_UNIT_CONSTRUCT_START
set Ab[Pb]="when calling alloc_LimitEncampments_EventListener_line12 in LimitEncampments, line 12"
set Pb=Pb+1
if SO==0 then
if cO<32768 then
set cO=cO+1
set N1=cO
set oO[N1]=666
else
call W1("Out of memory: Could not create LimitEncampments_EventListener_line12.","when calling error in LimitEncampments, line 12")
set N1=0
endif
else
set SO=SO-1
set N1=iO[SO]
set oO[N1]=666
endif
set Pb=Pb-1
set Cl[N1]=0
set Vl[N1]=0
set Bl[N1]=0
set Ab[Pb]="when calling add in LimitEncampments, line 12"
set Pb=Pb+1
set Ab[Pb]="when calling toIntId in ClosureEvents, line 112"
set Pb=Pb+1
set M1=ES[GetHandleId(C1)]
if M1==0 then
set M1=tB(C1,"when calling registerEventId in ClosureEvents, line 229")
endif
set Pb=Pb-1
set Cl[N1]=M1
if PS[Cl[N1]]!=0 then
set Bl[PS[Cl[N1]]]=N1
set Vl[N1]=PS[Cl[N1]]
endif
set PS[Cl[N1]]=N1
set Pb=Pb-1-1
set X1=null
set C1=null
return true
endfunction
function uTw takes nothing returns boolean
set Pb=0
return w4("LimitEncampments, line 1")
endfunction
function uU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651833,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651841,0)
endfunction
function wX takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989591 then
return false
endif
return true
endfunction
function uX takes nothing returns boolean
if not wX() then
return false
endif
return true
endfunction
function vE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989301,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988790,0)
endfunction
function vI takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989816,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989815,0)
endfunction
function initialize takes nothing returns nothing
local integer i_2=0
local integer temp=no
loop
exitwhen i_2>temp
set i_2=i_2+1
endloop
endfunction
function vRw takes nothing returns boolean
set Pb=0
set Ab[Pb]="StringUtils, line 1"
set Pb=Pb+1
set no=127
call initialize()
call Xww("","when calling stringToIndex in StringUtils, line 167")
set Pb=Pb-1
return true
endfunction
function vX takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function vY takes nothing returns nothing
local player hY=GetOwningPlayer(GetAttacker())
local player FY=GetOwningPlayer(GetAttacker())
local player kY
local player jY
local unit xY
set r[GetPlayerId(hY)+1]=r[GetPlayerId(FY)+1]+1
set kY=GetOwningPlayer(GetTriggerUnit())
set jY=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(kY)+1]=r[GetPlayerId(jY)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set xY=GetTriggerUnit()
call SetUnitState(xY,UNIT_STATE_LIFE,GetUnitState(xY,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set hY=null
set FY=null
set kY=null
set jY=null
set xY=null
endfunction
function xZ takes nothing returns boolean
if GetResearched()!=1378889806 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889806,true)!=1 then
return false
endif
return true
endfunction
function vZ takes nothing returns boolean
if not xZ() then
return false
endif
return true
endfunction
function MP takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function wA takes nothing returns boolean
if not MP() then
return false
endif
return true
endfunction
function wF takes nothing returns nothing
local location Jh
local location Kh
local real Lh
local real Xh
local rect Ch
local group Vh
local group Bh
local code Nh
local boolean Mh
set u=GetUnitLoc(GetSpellAbilityUnit())
set Jh=u
set c=Location(GetLocationX(Jh)+200.00,GetLocationY(Jh)+0.00)
set Kh=u
set Lh=GetLocationX(Kh)
set Xh=GetLocationY(Kh)
set O=Rect(Lh-150,Xh-140,Lh+150,Xh+140)
set Ch=O
set Vh=CreateGroup()
call GroupEnumUnitsInRect(Vh,Ch,null)
call DestroyBoolExpr(null)
set l=Vh
set Bh=l
set Nh=rp
set Mh=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(Bh,Nh)
if Mh then
call DestroyGroup(Bh)
endif
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747988826,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"stand")
call DestroyGroup(l)
call RemoveLocation(c)
call RemoveLocation(u)
set Jh=null
set Kh=null
set Ch=null
set Vh=null
set Bh=null
endfunction
function wN takes nothing returns boolean
set VS=200
return true
endfunction
function wP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989833,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989834,0)
endfunction
function Y5 takes string n5 returns boolean
local integer d5
local timer f5
local integer R5
local timer T5
set Ab[Pb]=n5
set Pb=Pb+1
set Ab[Pb]="when calling alloc_MultiboardCityUpdate_CallbackSingle_line18 in MultiboardCityUpdate, line 18"
set Pb=Pb+1
if TO==0 then
if YO<32768 then
set YO=YO+1
set d5=YO
set GO[d5]=648
else
call W1("Out of memory: Could not create MultiboardCityUpdate_CallbackSingle_line18.","when calling error in MultiboardCityUpdate, line 18")
set d5=0
endif
else
set TO=TO-1
set d5=RO[TO]
set GO[d5]=648
endif
set Pb=Pb-1
set Ab[Pb]="when calling doAfter in MultiboardCityUpdate, line 18"
set Pb=Pb+1
set f5=mww("when calling getTimer in ClosureTimers, line 27")
set Ab[Pb]="when calling doAfter in ClosureTimers, line 27"
set Pb=Pb+1
call waw(d5,f5,0.01,"when calling start in ClosureTimers, line 16")
set Pb=Pb-1-1
set Ab[Pb]="when calling alloc_MultiboardCityUpdate_CallbackPeriodic_line25 in MultiboardCityUpdate, line 25"
set Pb=Pb+1
if hO==0 then
if FO<32768 then
set FO=FO+1
set R5=FO
set kO[R5]=637
else
call W1("Out of memory: Could not create MultiboardCityUpdate_CallbackPeriodic_line25.","when calling error in MultiboardCityUpdate, line 25")
set R5=0
endif
else
set hO=hO-1
set R5=gO[hO]
set kO[R5]=637
endif
set Pb=Pb-1
set Ab[Pb]="when calling doPeriodically in MultiboardCityUpdate, line 25"
set Pb=Pb+1
set T5=mww("when calling getTimer in ClosureTimers, line 57")
set Ab[Pb]="when calling doPeriodically in ClosureTimers, line 57"
set Pb=Pb+1
call Dqw(R5,T5,1.0,"when calling start in ClosureTimers, line 45")
set Pb=Pb-1-1-1
set f5=null
set T5=null
return true
endfunction
function wTw takes nothing returns boolean
set Pb=0
return Y5("MultiboardCityUpdate, line 1")
endfunction
function MZ takes nothing returns boolean
if GetResearched()!=1378889809 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889809,true)!=2 then
return false
endif
return true
endfunction
function wU takes nothing returns boolean
if not MZ() then
return false
endif
return true
endfunction
function MT takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989317 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function wY takes nothing returns boolean
if not MT() then
return false
endif
return true
endfunction
function wh takes nothing returns nothing
local location Jg
local location Kg
local real Lg
local real Xg
local rect Cg
local group Vg
local group Bg
local code Ng
local boolean Mg
set u=GetUnitLoc(GetSpellAbilityUnit())
set Jg=u
set c=Location(GetLocationX(Jg)+200.00,GetLocationY(Jg)+0.00)
set Kg=u
set Lg=GetLocationX(Kg)
set Xg=GetLocationY(Kg)
set O=Rect(Lg-150,Xg-140,Lg+150,Xg+140)
set Cg=O
set Vg=CreateGroup()
call GroupEnumUnitsInRect(Vg,Cg,null)
call DestroyBoolExpr(null)
set l=Vg
set Bg=l
set Ng=Ly
set Mg=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(Bg,Ng)
if Mg then
call DestroyGroup(Bg)
endif
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747990092,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"stand")
call DestroyGroup(l)
call RemoveLocation(c)
call RemoveLocation(u)
set Jg=null
set Kg=null
set Cg=null
set Vg=null
set Bg=null
endfunction
function wk takes nothing returns nothing
local location JF
local location KF
local real LF
local real XF
local rect CF
local group VF
local group BF
local code NF
local boolean MF
set u=GetUnitLoc(GetSpellAbilityUnit())
set JF=u
set S=Location(GetLocationX(JF)+0.00,GetLocationY(JF)+200.00)
set KF=u
set LF=GetLocationX(KF)
set XF=GetLocationY(KF)
set o=Rect(LF-140,XF-150,LF+140,XF+150)
set CF=o
set VF=CreateGroup()
call GroupEnumUnitsInRect(VF,CF,null)
call DestroyBoolExpr(null)
set l=VF
set BF=l
set NF=bp
set MF=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(BF,NF)
if MF then
call DestroyGroup(BF)
endif
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747990072,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"stand")
call DestroyGroup(l)
call RemoveLocation(S)
call RemoveLocation(u)
set JF=null
set KF=null
set CF=null
set VF=null
set BF=null
endfunction
function wm takes nothing returns boolean
if GetUnitTypeId(GetDyingUnit())!=1747989049 then
return false
endif
return true
endfunction
function www takes nothing returns boolean
return true
endfunction
function xA takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990594,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990584,0)
endfunction
function jE takes nothing returns boolean
if GetResearched()!=1378889783 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889783,true)!=2 then
return false
endif
return true
endfunction
function xE takes nothing returns boolean
if not jE() then
return false
endif
return true
endfunction
function jI takes nothing returns boolean
if GetResearched()!=1378890034 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890034,true)!=2 then
return false
endif
return true
endfunction
function xI takes nothing returns boolean
if not jI() then
return false
endif
return true
endfunction
function kcw takes string hcw returns integer
local integer Fcw
set Ab[Pb]=hcw
set Pb=Pb+1
set Ab[Pb]="when calling alloc_ArrayQueue in DummyRecycler, line 49"
set Pb=Pb+1
if mO==0 then
if QO<32768 then
set QO=QO+1
set Fcw=QO
set WO[Fcw]=626
else
call W1("Out of memory: Could not create ArrayQueue.","when calling error in DummyRecycler, line 49")
set Fcw=0
endif
else
set mO=mO-1
set Fcw=vO[mO]
set WO[Fcw]=626
endif
set Pb=Pb-1
set tb[Fcw]=0
set ib[Fcw]=0
set Pb=Pb-1
return Fcw
endfunction
function taw takes integer uaw,unit raw,string saw returns nothing
set Ab[Pb]=saw
set Pb=Pb+1
if WO[uaw]==0 then
if uaw==0 then
call W1("Nullpointer exception when calling ArrayQueue.enqueue","when calling error in DummyRecycler, line 55")
else
call W1("Called ArrayQueue.enqueue on invalid object.","when calling error in DummyRecycler, line 55")
endif
endif
set Ab[Pb]="when calling enqueue in DummyRecycler, line 55"
set Pb=Pb+1
if ib[uaw]<6 then
set ib[uaw]=ib[uaw]+1
set tb[uaw]=ModuloInteger(tb[uaw]+1,6)
else
call W1("Queue Overflow","when calling error in DummyRecycler, line 61")
endif
set Pb=Pb-1-1
endfunction
function u1 takes real V3,real B3,player N3,real M3 returns unit
local unit w1=CreateUnit(N3,2019849581,V3,B3,M3*57.295779513)
call SetUnitX(w1,V3)
call SetUnitY(w1,B3)
call UnitAddAbility(w1,1097691750)
call UnitRemoveAbility(w1,1097691750)
call UnitAddAbility(w1,1097625443)
set rR=w1
set w1=null
return rR
endfunction
function C3 takes string H3 returns boolean
local integer J3
local integer K3
local integer L3
local integer X3
set Ab[Pb]=H3
set Pb=Pb+1
set rc=360*1./8
call CreateTimer()
set J3=0
set K3=7
loop
exitwhen J3>K3
set sc[J3]=kcw("when calling new_ArrayQueue in DummyRecycler, line 140")
set L3=0
set X3=5
loop
exitwhen L3>X3
call taw(sc[J3],u1(Wc,Ec,oS,J3*rc*0.017453293),"when calling enqueue in DummyRecycler, line 142")
set L3=L3+1
endloop
set J3=J3+1
endloop
set Pb=Pb-1
return true
endfunction
function xRw takes nothing returns boolean
set Pb=0
return C3("DummyRecycler, line 1")
endfunction
function xT takes nothing returns nothing
call ReplaceUnitBJ(GetEnumUnit(),1747988553,bj_UNIT_STATE_METHOD_RELATIVE)
endfunction
function AB takes group EB,integer ZB,string UB returns nothing
local group IB
local unit PB
set Ab[Pb]=UB
set Pb=Pb+1
set IB=EB
loop
exitwhen FirstOfGroup(IB)==null
set PB=FirstOfGroup(IB)
call GroupRemoveUnit(IB,PB)
call vqw(ZB,PB,"when calling callback in ClosureForGroups, line 40")
endloop
call Fqw(ZB,"when calling dispatch_ForGroupCallback_destroyForGroupCallback in ClosureForGroups, line 41")
set Pb=Pb-1
set IB=null
set PB=null
endfunction
function I9 takes string E9 returns nothing
local group Z9
local integer U9
set Ab[Pb]=E9
set Pb=Pb+1
call RemoveUnit(bo)
set Z9=lo
set Ab[Pb]="when calling alloc_Preloader_ForGroupCallback_line45 in Preloader, line 45"
set Pb=Pb+1
if nO==0 then
if dO<32768 then
set dO=dO+1
set U9=dO
set fO[U9]=687
else
call W1("Out of memory: Could not create Preloader_ForGroupCallback_line45.","when calling error in Preloader, line 45")
set U9=0
endif
else
set nO=nO-1
set U9=aO[nO]
set fO[U9]=687
endif
set Pb=Pb-1
call AB(Z9,U9,"when calling forEachFrom in Preloader, line 45")
call DestroyGroup(lo)
set lo=null
set Pb=Pb-1
set Z9=null
endfunction
function Q8 takes multiboard F8,integer k8,integer j8,real x8,string v8 returns nothing
local multiboarditem m8=MultiboardGetItem(F8,j8,k8)
call MultiboardSetItemWidth(m8,x8)
call MultiboardSetItemValue(m8,v8)
set m8=null
endfunction
function Z5 takes string G5 returns multiboard
local multiboard g5
local integer h5
local integer F5
local integer k5
local integer j5
local integer x5
local integer v5
local integer m5
local integer Q5
local string W5
local real E5
set Ab[Pb]=G5
set Pb=Pb+1
set g5=CreateMultiboardBJ(6,10,"Income: 2:00")
call MultiboardMinimize(g5,true)
call MultiboardSetItemsStyle(g5,true,false)
set h5=0
set F5=23
loop
exitwhen h5>F5
if so==ro[h5]then
call MultiboardDisplay(g5,false)
endif
set h5=h5+1
endloop
set k5=0
set j5=9
loop
exitwhen k5>j5
set x5=0
set v5=5
loop
exitwhen x5>v5
set E5=onw(Pc[k5],x5,"when calling get in MultiboardCityUpdate, line 14")/1000.
set m5=onw(Cc[k5],x5,"when calling get in MultiboardCityUpdate, line 14")
set Ab[Pb]="when calling stringFromIndex in MultiboardCityUpdate, line 14"
set Pb=Pb+1
set Q5=Ao
set Ab[Pb]="when calling loadString in TypeCasting, line 35"
set Pb=Pb+1
if HO[Q5]==0 then
if Q5==0 then
call W1("Nullpointer exception when calling Table.loadString","when calling error in Table, line 57")
else
call W1("Called Table.loadString on invalid object.","when calling error in Table, line 57")
endif
endif
set W5=LoadStr(Zo,Q5,m5)
set Pb=Pb-1
set G5=W5
set Pb=Pb-1
call Q8(g5,x5,k5,E5,W5)
set x5=x5+1
endloop
set k5=k5+1
endloop
set Pb=Pb-1
set sR=g5
set g5=null
return sR
endfunction
function Nbw takes integer Hbw,string Jbw returns nothing
local integer Kbw
local integer Lbw
local integer Xbw
local integer Cbw
local boolean Vbw
local multiboard Bbw
set Ab[Pb]=Jbw
set Pb=Pb+1
set Kbw=0
set Lbw=23
loop
exitwhen Kbw>Lbw
set Cbw=uo[Kbw]
set Jbw="when calling isInGame in MultiboardCityUpdate, line 20"
set Ab[Pb]="when calling isInGame in MultiboardCityUpdate, line 20"
set Pb=Pb+1
if ll[Cbw]==0 then
if Cbw==0 then
call W1("Nullpointer exception when calling PlayerStats.isInGame","when calling error in PlayerStats, line 14")
else
call W1("Called PlayerStats.isInGame on invalid object.","when calling error in PlayerStats, line 14")
endif
endif
set Vbw=Wb[Cbw]
set Pb=Pb-1
if Vbw then
set Vc[Kbw]=Z5("when calling createCoEMultiboard in MultiboardCityUpdate, line 21")
endif
set Kbw=Kbw+1
endloop
set Xbw=0
set Hbw=23
loop
exitwhen Xbw>Hbw
set Bbw=Vc[Xbw]
if so==ro[Xbw]then
call MultiboardDisplay(Bbw,true)
endif
set Xbw=Xbw+1
endloop
set Pb=Pb-1
set Bbw=null
endfunction
function Xcw takes integer jcw,string xcw returns nothing
local integer vcw
local integer mcw
local integer Qcw
local integer Wcw
local integer Ecw
local integer Zcw
local integer Ucw
local unit Icw
local player Pcw
local integer Acw
local unit Dcw
local integer Hcw
local integer Jcw
local boolean Kcw
local integer Lcw
set Ab[Pb]=xcw
set Pb=Pb+1
set vcw=Sb[jcw]*cb[jcw]
set Wcw=TS-1
set Ecw=(Sb[jcw]+1)*cb[jcw]-1
if Wcw<2147483647 then
set Zcw=Wcw
else
set Zcw=2147483647
endif
if Ecw<Zcw then
set Zcw=Ecw
endif
set mcw=Zcw
loop
exitwhen vcw>mcw
set Ucw=xS[vcw]
set xcw="when calling getCityUnit in Economy, line 31"
set Ab[Pb]="when calling getCityUnit in Economy, line 31"
set Pb=Pb+1
if qO[Ucw]==0 then
if Ucw==0 then
call W1("Nullpointer exception when calling City.getCityUnit","when calling error in City, line 176")
else
call W1("Called City.getCityUnit on invalid object.","when calling error in City, line 176")
endif
endif
set Icw=gl[Ucw]
set Pb=Pb-1
set Qcw=GetPlayerId(GetOwningPlayer(Icw))
set Acw=xS[vcw]
set Ab[Pb]="when calling getCityUnit in Economy, line 32"
set Pb=Pb+1
if qO[Acw]==0 then
if Acw==0 then
call W1("Nullpointer exception when calling City.getCityUnit","when calling error in City, line 176")
else
call W1("Called City.getCityUnit on invalid object.","when calling error in City, line 176")
endif
endif
set Dcw=gl[Acw]
set Pb=Pb-1
set Pcw=GetOwningPlayer(Dcw)
if GetPlayerSlotState(Pcw)==PLAYER_SLOT_STATE_PLAYING then
set Kcw=GetPlayerController(Pcw)==MAP_CONTROL_USER
else
set Kcw=false
endif
if Kcw then
set Lcw=tc[Qcw]
set Hcw=xS[vcw]
set Ab[Pb]="when calling countTax in Economy, line 33"
set Pb=Pb+1
if qO[Hcw]==0 then
if Hcw==0 then
call W1("Nullpointer exception when calling City.countTax","when calling error in City, line 266")
else
call W1("Called City.countTax on invalid object.","when calling error in City, line 266")
endif
endif
set Jcw=Jsw(Hcw,"when calling countTax in City, line 266")
set Pb=Pb-1
set tc[Qcw]=Lcw+Jcw
endif
set vcw=vcw+1
endloop
set Pb=Pb-1
set Icw=null
set Pcw=null
set Dcw=null
endfunction
function Kaw takes integer Haw,string Jaw returns nothing
set Ab[Pb]=Jaw
set Pb=Pb+1
if VO[Haw]==0 then
if Haw==0 then
call W1("Nullpointer exception when calling LLEntry.LLEntry","when calling error in LinkedList, line 396")
else
call W1("Called LLEntry.LLEntry on invalid object.","when calling error in LinkedList, line 396")
endif
endif
set Ab[Pb]="when calling destroyLLEntry in LinkedList, line 396"
set Pb=Pb+1
set Ab[Pb]="when calling dealloc_LLEntry in LinkedList, line 396"
set Pb=Pb+1
if VO[Haw]==0 then
call W1("Double free: object of type LLEntry","when calling error in LinkedList, line 396")
else
set LO[XO]=Haw
set XO=XO+1
set VO[Haw]=0
endif
set Pb=Pb-1-1-1
endfunction
function ynw takes integer Onw,integer lnw,string bnw returns nothing
set Ab[Pb]=bnw
set Pb=Pb+1
if tl[Onw]==0 then
if Onw==0 then
call W1("Nullpointer exception when calling LinkedList.removeEntry","when calling error in LinkedList, line 373")
else
call W1("Called LinkedList.removeEntry on invalid object.","when calling error in LinkedList, line 373")
endif
endif
set Ab[Pb]="when calling removeEntry in LinkedList, line 373"
set Pb=Pb+1
set ab[qb[lnw]]=ab[lnw]
set qb[ab[lnw]]=qb[lnw]
call Kaw(lnw,"when calling dispatch_LLEntry_destroyLLEntry in LinkedList, line 376")
set Yb[Onw]=Yb[Onw]-1
set Pb=Pb-1-1
endfunction
function Sbw takes integer rbw,integer sbw,string tbw returns nothing
local integer ibw
set Ab[Pb]=tbw
set Pb=Pb+1
set ibw=ab[Tb[rbw]]
loop
exitwhen ibw==Tb[rbw]
if eb[ibw]==sbw then
call ynw(rbw,ibw,"when calling removeEntry in LinkedList, line 126")
set Pb=Pb-1
return
endif
set ibw=ab[ibw]
endloop
set Pb=Pb-1
endfunction
function pqw takes integer lqw,integer bqw,string yqw returns nothing
set Ab[Pb]=yqw
set Pb=Pb+1
if qO[lqw]==0 then
if lqw==0 then
call W1("Nullpointer exception when calling City.getCityModifierOnRemove","when calling error in City, line 411")
else
call W1("Called City.getCityModifierOnRemove on invalid object.","when calling error in City, line 411")
endif
endif
set Ab[Pb]="when calling getCityModifierOnRemove in City, line 411"
set Pb=Pb+1
if nl[Uaw(RS,bqw,"when calling get in City, line 412")]then
set Zl[lqw]=Zl[lqw]-al[Uaw(RS,bqw,"when calling get in City, line 413")]
endif
set Ul[lqw]=Ul[lqw]-Tl[Uaw(RS,bqw,"when calling get in City, line 414")]
set Pb=Pb-1-1
endfunction
function Yiw takes integer aiw,integer niw,string diw returns boolean
local integer fiw
local boolean Riw
local integer Tiw
set Ab[Pb]=diw
set Pb=Pb+1
set fiw=Al[aiw]
set Ab[Pb]="when calling has in City, line 366"
set Pb=Pb+1
if tl[fiw]==0 then
if fiw==0 then
call W1("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call W1("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set Riw=ubw(fiw,niw)
set Pb=Pb-1
if not Riw then
set Pb=Pb-1
return false
endif
set Tiw=Al[aiw]
set Ab[Pb]="when calling remove in City, line 368"
set Pb=Pb+1
if tl[Tiw]==0 then
if Tiw==0 then
call W1("Nullpointer exception when calling LinkedList.remove","when calling error in LinkedList, line 122")
else
call W1("Called LinkedList.remove on invalid object.","when calling error in LinkedList, line 122")
endif
endif
call Sbw(Tiw,niw,"when calling remove in LinkedList, line 122")
set Pb=Pb-1
call pqw(aiw,niw,"when calling getCityModifierOnRemove in City, line 370")
set Pb=Pb-1
return true
endfunction
function Yrw takes string Trw returns nothing
endfunction
function icw takes integer rcw returns nothing
local integer scw
local trigger tcw
call TriggerAddAction(mS,Jf)
call TriggerAddAction(QS,Kf)
call TriggerAddAction(WS,Lf)
set scw=0
set rcw=bj_MAX_PLAYERS-1
loop
exitwhen scw>rcw
call TriggerRegisterPlayerEvent(QS,ro[scw],EVENT_PLAYER_LEAVE)
set tcw=WS
call TriggerRegisterPlayerEvent(tcw,ro[scw],EVENT_PLAYER_ARROW_DOWN_DOWN)
call TriggerRegisterPlayerEvent(tcw,ro[scw],EVENT_PLAYER_ARROW_DOWN_UP)
call TriggerRegisterPlayerEvent(tcw,ro[scw],EVENT_PLAYER_ARROW_UP_DOWN)
call TriggerRegisterPlayerEvent(tcw,ro[scw],EVENT_PLAYER_ARROW_UP_UP)
call TriggerRegisterPlayerEvent(tcw,ro[scw],EVENT_PLAYER_ARROW_LEFT_DOWN)
call TriggerRegisterPlayerEvent(tcw,ro[scw],EVENT_PLAYER_ARROW_LEFT_UP)
call TriggerRegisterPlayerEvent(tcw,ro[scw],EVENT_PLAYER_ARROW_RIGHT_DOWN)
call TriggerRegisterPlayerEvent(tcw,ro[scw],EVENT_PLAYER_ARROW_RIGHT_UP)
call TriggerRegisterPlayerEvent(tcw,ro[scw],EVENT_PLAYER_END_CINEMATIC)
call TriggerRegisterPlayerChatEvent(tcw,ro[scw],"",false)
set scw=scw+1
endloop
call q0w(EVENT_PLAYER_UNIT_SPELL_EFFECT,null,Xf,null)
set tcw=null
endfunction
function kyw takes integer hyw returns nothing
local group Fyw
call TriggerRegisterEnterRegion(CreateTrigger(),Qc,Filter(Vf))
call q0w(EVENT_PLAYER_UNIT_ISSUED_ORDER,null,Bf,null)
call GroupEnumUnitsInRect(Nc,mc,null)
call ForGroup(Nc,Nf)
set Fyw=Nc
call GroupClear(Fyw)
call DestroyGroup(Fyw)
set Fyw=null
endfunction
function Cqw takes integer Hqw,string Jqw returns nothing
local integer Kqw
local integer Lqw
local integer Xqw
set Ab[Pb]=Jqw
set Pb=Pb+1
if GO[Hqw]==0 then
if Hqw==0 then
call W1("Nullpointer exception when calling CallbackSingle.call","when calling error in ClosureTimers, line 109")
else
call W1("Called CallbackSingle.call on invalid object.","when calling error in ClosureTimers, line 109")
endif
endif
if GO[Hqw]<=645 then
if GO[Hqw]<=642 then
if GO[Hqw]<=640 then
if GO[Hqw]<=639 then
set Ab[Pb]="when calling City_City_call_line361 in ClosureTimers, line 109"
set Pb=Pb+1
set Kqw=Jl[Hqw]
set Lqw=Kl[Hqw]
set Ab[Pb]="when calling removeModifier in City, line 362"
set Pb=Pb+1
if qO[Kqw]==0 then
if Kqw==0 then
call W1("Nullpointer exception when calling City.removeModifier","when calling error in City, line 365")
else
call W1("Called City.removeModifier on invalid object.","when calling error in City, line 365")
endif
endif
call Yiw(Kqw,Lqw,"when calling removeModifier in City, line 365")
set Pb=Pb-1-1
else
call icw(Hqw)
endif
elseif GO[Hqw]<=641 then
set VS=VS+50
else
set VS=VS*2
endif
elseif GO[Hqw]<=644 then
if GO[Hqw]<=643 then
set VS=VS/2
set Xqw=VS
if Xqw!=250 then
call Yrw("Expected <"+I2S(250)+">, Actual <"+I2S(Xqw)+">")
endif
else
call Xcw(Hqw,"when calling Economy_call_line29 in ClosureTimers, line 109")
endif
else
call IssueImmediateOrderById(bb[Hqw],851976)
endif
elseif GO[Hqw]<=649 then
if GO[Hqw]<=647 then
if GO[Hqw]<=646 then
call IssueImmediateOrderById(yb[Hqw],851976)
else
call IssuePointOrderById(Fb[Hqw],kb[Hqw],jb[Hqw],xb[Hqw])
endif
elseif GO[Hqw]<=648 then
call Nbw(Hqw,"when calling MultiboardCityUpdate_call_line18 in ClosureTimers, line 109")
else
call IssueImmediateOrderById(vb[Hqw],851976)
endif
elseif GO[Hqw]<=651 then
if GO[Hqw]<=650 then
call kyw(Hqw)
else
set Ab[Pb]="when calling Preloader_call_line54 in ClosureTimers, line 109"
set Pb=Pb+1
call I9("when calling finishPreload in Preloader, line 54")
set Pb=Pb-1
endif
else
call IssueImmediateOrderById(Ub[Hqw],851976)
endif
set Pb=Pb-1
endfunction
function Eww_2 takes timer Qww,string Www returns nothing
set Ab[Pb]=Www
set Pb=Pb+1
if Qww==null then
call W1("Trying to release a null timer","when calling error in TimerUtils, line 37")
set Pb=Pb-1
return
endif
if jww(Qww,"when calling getData in TimerUtils, line 39")==679645218 then
call W1("ReleaseTimer: Double free!","when calling error in TimerUtils, line 40")
set Pb=Pb-1
return
endif
call Yww(Qww,679645218,"when calling setData in TimerUtils, line 42")
call PauseTimer(Qww)
set Uo[Io]=Qww
set Io=Io+1
set Pb=Pb-1
endfunction
function Rcw takes integer dcw,string fcw returns nothing
set Ab[Pb]=fcw
set Pb=Pb+1
set Ab[Pb]="when calling CallbackSingle_onDestroy in ClosureTimers, line 123"
set Pb=Pb+1
call Eww_2(rb[dcw],"when calling release in ClosureTimers, line 124")
set Pb=Pb-1
set Ab[Pb]="when calling dealloc_CallbackSingle in ClosureTimers, line 123"
set Pb=Pb+1
if GO[dcw]==0 then
call W1("Double free: object of type CallbackSingle","when calling error in ClosureTimers, line 107")
else
set RO[TO]=dcw
set TO=TO+1
set GO[dcw]=0
endif
set Pb=Pb-1-1
endfunction
function sN takes string uN returns nothing
local integer rN
set Ab[Pb]=uN
set Pb=Pb+1
set rN=jww(GetExpiredTimer(),"when calling getData in ClosureTimers, line 119")
call Cqw(rN,"when calling call in ClosureTimers, line 120")
set Ab[Pb]="when calling dispatch_CallbackSingle_destroyCallbackSingle in ClosureTimers, line 121"
set Pb=Pb+1
if GO[rN]==0 then
if rN==0 then
call W1("Nullpointer exception when calling CallbackSingle.CallbackSingle","when calling error in ClosureTimers, line 107")
else
call W1("Called CallbackSingle.CallbackSingle on invalid object.","when calling error in ClosureTimers, line 107")
endif
endif
call Rcw(rN,"when calling destroyCallbackSingle in ClosureTimers, line 107")
set Pb=Pb-1-1
endfunction
function xTw takes nothing returns nothing
set Pb=0
set Ab[Pb]="ClosureTimers, line 114"
set Pb=Pb+1
call sN("when calling staticCallback in ClosureTimers, line 114")
set Pb=Pb-1
endfunction
function xU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651832,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651830,0)
endfunction
function jX takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990086 then
return false
endif
return true
endfunction
function xX takes nothing returns boolean
if not jX() then
return false
endif
return true
endfunction
function kj takes nothing returns boolean
if GetUnitTypeId(GetSpellTargetUnit())==1747988787 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747990361 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747989831 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747989040 then
return true
endif
return false
endfunction
function jj takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988793 then
return false
endif
if not kj() then
return false
endif
return true
endfunction
function xj takes nothing returns boolean
if not jj() then
return false
endif
return true
endfunction
function xm takes nothing returns nothing
local player dm=GetOwningPlayer(GetKillingUnit())
local playerstate fm=PLAYER_STATE_RESOURCE_LUMBER
local playerstate Rm
local playerstate Tm
local player Ym
local force Gm
local location gm
local real hm
local real Fm
local player km
local force jm
if fm==PLAYER_STATE_RESOURCE_GOLD then
set Rm=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(dm,Rm,GetPlayerState(dm,Rm)+500)
elseif fm==PLAYER_STATE_RESOURCE_LUMBER then
set Tm=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(dm,Tm,GetPlayerState(dm,Tm)+500)
endif
call SetPlayerState(dm,fm,GetPlayerState(dm,fm)+500)
set Ym=GetOwningPlayer(GetKillingUnit())
set Gm=CreateForce()
call ForceAddPlayer(Gm,Ym)
if IsPlayerInForce(GetLocalPlayer(),Gm) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_084")
endif
set y=GetUnitLoc(GetDyingUnit())
set km=GetOwningPlayer(GetDyingUnit())
set jm=CreateForce()
call ForceAddPlayer(jm,km)
set gm=y
set hm=GetLocationX(gm)
set Fm=GetLocationY(gm)
if IsPlayerInForce(GetLocalPlayer(),jm) then
call PingMinimap(hm,Fm,2.00)
endif
call RemoveLocation(y)
set dm=null
set fm=null
set Rm=null
set Tm=null
set Ym=null
set Gm=null
set gm=null
set km=null
set jm=null
endfunction
function xx takes nothing returns boolean
if GetUnitTypeId(GetDyingUnit())!=1747988791 then
return false
endif
return true
endfunction
function y4 takes nothing returns boolean
return true
endfunction
function bD takes nothing returns boolean
if GetResearched()!=1378890040 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890040,true)!=1 then
return false
endif
return true
endfunction
function yD takes nothing returns boolean
if not bD() then
return false
endif
return true
endfunction
function bK takes nothing returns boolean
if GetUnitTypeId(GetConstructedStructure())!=1747990353 then
return false
endif
return true
endfunction
function yK takes nothing returns boolean
if not bK() then
return false
endif
return true
endfunction
function bQ takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function yQ takes nothing returns boolean
if not bQ() then
return false
endif
return true
endfunction
function Ocw takes integer Scw,string ccw returns nothing
local integer ocw
set Ab[Pb]=ccw
set Pb=Pb+1
set ocw=PS[Cl[Scw]]
if ocw==Scw then
set PS[Cl[Scw]]=Vl[Scw]
elseif Bl[Scw]!=0 then
set Vl[Bl[Scw]]=Vl[Scw]
endif
set Bl[Vl[Scw]]=Bl[Scw]
set ocw=AS[Cl[Scw]]
if ocw==Scw then
set AS[Cl[Scw]]=Vl[Scw]
elseif Bl[Scw]!=0 then
set Vl[Bl[Scw]]=Vl[Scw]
endif
set Bl[Vl[Scw]]=Bl[Scw]
set Vl[Scw]=0
set Bl[Scw]=0
set Ab[Pb]="when calling dealloc_EventListener in ClosureEvents, line 202"
set Pb=Pb+1
if oO[Scw]==0 then
call W1("Double free: object of type EventListener","when calling error in ClosureEvents, line 98")
else
set iO[SO]=Scw
set SO=SO+1
set oO[Scw]=0
endif
set Pb=Pb-1-1
endfunction
function aB takes integer yB,string pB returns nothing
local integer eB
local integer qB
set Ab[Pb]=pB
set Pb=Pb+1
if yB>0 then
if AS[yB]!=0 then
set eB=AS[yB]
set AS[yB]=0
loop
exitwhen eB==0
set qB=eB
set eB=Vl[eB]
set Ab[Pb]="when calling dispatch_EventListener_destroyEventListener in ClosureEvents, line 282"
set Pb=Pb+1
if oO[qB]==0 then
if qB==0 then
call W1("Nullpointer exception when calling EventListener.EventListener","when calling error in ClosureEvents, line 98")
else
call W1("Called EventListener.EventListener on invalid object.","when calling error in ClosureEvents, line 98")
endif
endif
call Ocw(qB,"when calling destroyEventListener in ClosureEvents, line 98")
set Pb=Pb-1
endloop
endif
endif
set Pb=Pb-1
endfunction
function ycw takes integer lcw,string bcw returns nothing
set Ab[Pb]=bcw
set Pb=Pb+1
if ub[lcw]!=null then
if Uaw(IS,GetHandleId(ub[lcw]),"when calling get in ClosureEvents, line 60")==lcw then
call maw(IS,GetHandleId(ub[lcw]),Nl[lcw],"when calling put in ClosureEvents, line 62")
elseif Ml[lcw]!=0 then
set Nl[Ml[lcw]]=Nl[lcw]
endif
elseif Uaw(US,wb[lcw],"when calling get in ClosureEvents, line 66")==lcw then
call maw(US,wb[lcw],Nl[lcw],"when calling put in ClosureEvents, line 68")
elseif Ml[lcw]!=0 then
set Nl[Ml[lcw]]=Nl[lcw]
endif
set Ml[Nl[lcw]]=Ml[lcw]
set Nl[lcw]=0
set Ml[lcw]=0
set Pb=Pb-1
endfunction
function fqw takes integer nqw,string dqw returns nothing
set Ab[Pb]=dqw
set Pb=Pb+1
if xO[nqw]==0 then
if nqw==0 then
call W1("Nullpointer exception when calling OnCastListener.OnCastListener","when calling error in ClosureEvents, line 50")
else
call W1("Called OnCastListener.OnCastListener on invalid object.","when calling error in ClosureEvents, line 50")
endif
endif
set Ab[Pb]="when calling destroyOnCastListener in ClosureEvents, line 50"
set Pb=Pb+1
call ycw(nqw,"when calling OnCastListener_onDestroy in ClosureEvents, line 58")
set Ab[Pb]="when calling dealloc_OnCastListener in ClosureEvents, line 58"
set Pb=Pb+1
if xO[nqw]==0 then
call W1("Double free: object of type OnCastListener","when calling error in ClosureEvents, line 50")
else
set jO=jO+1
set xO[nqw]=0
endif
set Pb=Pb-1-1-1
endfunction
function bB takes unit iB,string SB returns nothing
local integer cB
local integer oB
local integer OB
local integer lB
set Ab[Pb]=SB
set Pb=Pb+1
call aB(GetUnitUserData(iB),"when calling unregisterEvents in ClosureEvents, line 258")
if Faw(IS,GetHandleId(iB),"when calling has in ClosureEvents, line 259") then
set cB=Uaw(IS,GetHandleId(iB),"when calling get in ClosureEvents, line 260")
call Daw(IS,GetHandleId(iB),"when calling remove in ClosureEvents, line 261")
loop
exitwhen cB==0
set oB=cB
set cB=Nl[cB]
call fqw(oB,"when calling dispatch_OnCastListener_destroyOnCastListener in ClosureEvents, line 265")
endloop
endif
if Faw(IS,GetHandleId(iB),"when calling has in ClosureEvents, line 266") then
set OB=Uaw(IS,GetHandleId(iB),"when calling get in ClosureEvents, line 267")
loop
exitwhen OB==0
set lB=OB
set OB=Nl[OB]
call fqw(lB,"when calling dispatch_OnCastListener_destroyOnCastListener in ClosureEvents, line 271")
endloop
endif
set Pb=Pb-1
endfunction
function yTw takes nothing returns nothing
set Pb=0
set Ab[Pb]="ClosureEvents, line 288"
set Pb=Pb+1
call bB(Jo[Ko-1],"when calling unregisterEventsForUnit in ClosureEvents, line 288")
set Pb=Pb-1
endfunction
function bY takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989045 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function yY takes nothing returns boolean
if not bY() then
return false
endif
return true
endfunction
function ym takes nothing returns nothing
local player um=GetOwningPlayer(GetKillingUnit())
local playerstate rm=PLAYER_STATE_RESOURCE_GOLD
local playerstate sm
local playerstate tm
local player im
local force Sm
local location cm
local real om
local real Om
local player lm
local force bm
if rm==PLAYER_STATE_RESOURCE_GOLD then
set sm=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(um,sm,GetPlayerState(um,sm)+500)
elseif rm==PLAYER_STATE_RESOURCE_LUMBER then
set tm=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(um,tm,GetPlayerState(um,tm)+500)
endif
call SetPlayerState(um,rm,GetPlayerState(um,rm)+500)
set im=GetOwningPlayer(GetKillingUnit())
set Sm=CreateForce()
call ForceAddPlayer(Sm,im)
if IsPlayerInForce(GetLocalPlayer(),Sm) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_083")
endif
set y=GetUnitLoc(GetDyingUnit())
set lm=GetOwningPlayer(GetDyingUnit())
set bm=CreateForce()
call ForceAddPlayer(bm,lm)
set cm=y
set om=GetLocationX(cm)
set Om=GetLocationY(cm)
if IsPlayerInForce(GetLocalPlayer(),bm) then
call PingMinimap(om,Om,2.00)
endif
call RemoveLocation(y)
set um=null
set rm=null
set sm=null
set tm=null
set im=null
set Sm=null
set cm=null
set lm=null
set bm=null
endfunction
function yx takes nothing returns boolean
if GetUnitTypeId(GetDyingUnit())!=1747988801 then
return false
endif
return true
endfunction
function oR takes nothing returns nothing
set w=null
set u=null
set s=null
set t=null
set i=null
set S=null
set c=null
set o=null
set O=null
set l=null
set b=null
set y=null
set q=null
set a=null
set n=null
set d=null
set f=null
set R=null
set T=null
set Y=null
set G=null
set g=null
set h=null
set F=null
set k=null
set j=null
set x=null
set v=null
set m=null
set Q=null
set W=null
set E=null
set Z=null
set U=null
set I=null
set P=null
set A=null
set D=null
set H=null
set J=null
set K=null
set L=null
set X=null
set C=null
set V=null
set B=null
set N=null
set M=null
set ww=null
set uw=null
set rw=null
set sw=null
set tw=null
set iw=null
set Sw=null
set cw=null
set ow=null
set Ow=null
set lw=null
set bw=null
set yw=null
set pw=null
set ew=null
set qw=null
set aw=null
set nw=null
set dw=null
set fw=null
set Rw=null
set Tw=null
set Yw=null
set Gw=null
set gw=null
set hw=null
set Fw=null
set kw=null
set jw=null
set xw=null
set vw=null
set mw=null
set Qw=null
set Ww=null
set Ew=null
set Zw=null
set Uw=null
set Iw=null
set Pw=null
set Aw=null
set Dw=null
set Hw=null
set Jw=null
set Kw=null
set Lw=null
set Xw=null
set Cw=null
set Vw=null
set Bw=null
set Nw=null
set Mw=null
set wu=null
set uu=null
set ru=null
set su=null
set tu=null
set iu=null
set Su=null
set cu=null
set ou=null
set Ou=null
set lu=null
set bu=null
set yu=null
set pu=null
set eu=null
set qu=null
set au=null
set nu=null
set du=null
set fu=null
set Ru=null
set Tu=null
set Yu=null
set Gu=null
set gu=null
set hu=null
set Fu=null
set ku=null
set ju=null
set xu=null
set vu=null
set mu=null
set Qu=null
set Wu=null
set Eu=null
set Zu=null
set Uu=null
set Iu=null
set Pu=null
set Au=null
set Du=null
set Hu=null
set Ju=null
set Ku=null
set Lu=null
set Xu=null
set Cu=null
set Vu=null
set Bu=null
set Nu=null
set Mu=null
set wr=null
set ur=null
set rr=null
set sr=null
set tr=null
set ir=null
set Sr=null
set cr=null
set lr=null
set br=null
set yr=null
set pr=null
set er=null
set qr=null
set ar=null
set nr=null
set dr=null
set fr=null
set Rr=null
set Tr=null
set Yr=null
set Gr=null
set gr=null
set hr=null
set Fr=null
set kr=null
set jr=null
set xr=null
set vr=null
set mr=null
set Qr=null
set Wr=null
set Er=null
set Zr=null
set Ur=null
set Ir=null
set Pr=null
set Ar=null
set Dr=null
set Hr=null
set Jr=null
set Kr=null
set Lr=null
set Xr=null
set Cr=null
set Vr=null
set Br=null
set Nr=null
set Mr=null
set ws=null
set us=null
set rs=null
set ss=null
set ts=null
set is=null
set Ss=null
set cs=null
set os=null
set Os=null
set ls=null
set bs=null
set ys=null
set ps=null
set es=null
set qs=null
set as=null
set ns=null
set ds=null
set fs=null
set Rs=null
set Ts=null
set Ys=null
set Gs=null
set gs=null
set hs=null
set Fs=null
set ks=null
set js=null
set xs=null
set vs=null
set ms=null
set Qs=null
set Ws=null
set Es=null
set Zs=null
set Us=null
set Is=null
set Ps=null
set As=null
set Ds=null
set Hs=null
set Js=null
set Ks=null
set Ls=null
set Xs=null
set Cs=null
set Vs=null
set Bs=null
set Ns=null
set Ms=null
set wt=null
set ut=null
set rt=null
set st=null
set tt=null
set St=null
set ct=null
set ot=null
set Ot=null
set lt=null
set bt=null
set yt=null
set pt=null
set et=null
set qt=null
set at=null
set nt=null
set dt=null
set ft=null
set Rt=null
set Tt=null
set Yt=null
set Gt=null
set gt=null
set ht=null
set Ft=null
set kt=null
set jt=null
set xt=null
set vt=null
set mt=null
set Qt=null
set Wt=null
set Et=null
set Zt=null
set Ut=null
set It=null
set Pt=null
set At=null
set Dt=null
set Ht=null
set Jt=null
set Kt=null
set Lt=null
set Xt=null
set Ct=null
set Vt=null
set Bt=null
set Nt=null
set Mt=null
set wi=null
set ui=null
set ri=null
set si=null
set ti=null
set ii=null
set Si=null
set ci=null
set oi=null
set Oi=null
set li=null
set bi=null
set yi=null
set pi=null
set ei=null
set qi=null
set ai=null
set ni=null
set di=null
set fi=null
set Ri=null
set Ti=null
set Yi=null
set Gi=null
set gi=null
set hi=null
set Fi=null
set ki=null
set ji=null
set xi=null
set vi=null
set mi=null
set Qi=null
set Wi=null
set Ei=null
set Zi=null
set Ui=null
set Ii=null
set Pi=null
set Ai=null
set Di=null
set Hi=null
set Ji=null
set Ki=null
set Li=null
set Xi=null
set Ci=null
set Vi=null
set Bi=null
set Ni=null
set Mi=null
set wS=null
set uS=null
set rS=null
set sS=null
set tS=null
set iS=null
set SS=null
set ay=function xT
set ny=function WT
set dy=function UT
set fy=function AT
set Ry=function XT
set Ty=function wY
set Yy=function SY
set Gy=function yY
set gy=function dY
set hy=function gY
set Fy=function vY
set ky=function UY
set jy=function JY
set xy=function BY
set vy=function sG
set my=function OG
set Qy=function qG
set Wy=function TG
set Ey=function kG
set Zy=function WG
set Uy=function UG
set Iy=function HG
set Py=function JG
set Ay=function tg
set Dy=function ng
set Hy=function gg
set Jy=function Yg
set Ky=function Eg
set Ly=function Hg
set Xy=function Ag
set Cy=function wh
set Vy=function ch
set By=function ih
set Ny=function nh
set My=function gh
set wp=function Yh
set up=function Eh
set rp=function Hh
set sp=function Ah
set tp=function wF
set ip=function cF
set Sp=function iF
set cp=function nF
set op=function gF
set Op=function YF
set lp=function EF
set bp=function HF
set yp=function AF
set pp=function wk
set ep=function ck
set qp=function bk
set ap=function qk
set np=function fk
set dp=function Gk
set fp=function Zk
set Rp=function Jk
set Tp=function sj
set Yp=function lj
set Gp=function Yj
set gp=function xj
set hp=function Hj
set Fp=function Cj
set kp=function cx
set jp=function yx
set xp=function gx
set vp=function xx
set mp=function Hx
set Qp=function Cx
set Wp=function cv
set Ep=function ev
set Zp=function Fv
set Up=function Wv
set Ip=function Xv
set Pp=function wm
set Ap=function ym
set Dp=function nm
set Hp=function xm
set Jp=function Zm
set Kp=function Um
set Lp=function Jm
set Xp=function Km
set Cp=function Nm
set Vp=function Mm
set Bp=function iQ
set Np=function SQ
set Mp=function yQ
set we=function pQ
set ue=function fQ
set re=function RQ
set se=function FQ
set te=function kQ
set ie=function WQ
set Se=function EQ
set ce=function DQ
set oe=function HQ
set Oe=function VQ
set le=function BQ
set be=function sW
set ye=function tW
set pe=function lW
set ee=function bW
set qe=function nW
set ae=function dW
set ne=function gW
set de=function hW
set fe=function mW
set Re=function QW
set Te=function PW
set Ye=function AW
set Ge=function XW
set ge=function CW
set he=function uE
set Fe=function rE
set ke=function oE
set je=function OE
set xe=function qE
set ve=function aE
set me=function YE
set Qe=function GE
set We=function xE
set Ee=function vE
set Ze=function ZE
set Ue=function UE
set Ie=function AE
set Pe=function DE
set Ae=function CE
set De=function VE
set He=function rZ
set Je=function sZ
set Ke=function OZ
set Le=function lZ
set Xe=function aZ
set Ce=function nZ
set Ve=function GZ
set Be=function gZ
set Ne=function vZ
set Me=function mZ
set wq=function IZ
set uq=function PZ
set rq=function LZ
set sq=function XZ
set tq=function wU
set iq=function uU
set Sq=function cU
set cq=function oU
set oq=function eU
set Oq=function qU
set lq=function TU
set bq=function YU
set yq=function jU
set pq=function xU
set eq=function ZU
set qq=function UU
set aq=function HU
set nq=function JU
set dq=function XU
set fq=function CU
set Rq=function uI
set Tq=function rI
set Yq=function oI
set Gq=function OI
set gq=function qI
set hq=function aI
set Fq=function YI
set kq=function GI
set jq=function xI
set xq=function vI
set vq=function UI
set mq=function II
set Qq=function KI
set Wq=function LI
set Eq=function MI
set Zq=function wP
set Uq=function SP
set Iq=function cP
set Pq=function pP
set Aq=function eP
set Dq=function RP
set Hq=function TP
set Jq=function kP
set Kq=function jP
set Lq=function EP
set Xq=function ZP
set Cq=function DP
set Vq=function HP
set Bq=function LP
set Nq=function XP
set Mq=function wA
set wa=function uA
set ua=function cA
set ra=function oA
set sa=function eA
set ta=function qA
set ia=function TA
set Sa=function YA
set ca=function jA
set oa=function xA
set Oa=function ZA
set la=function UA
set ba=function JA
set ya=function KA
set pa=function NA
set ea=function MA
set qa=function iD
set aa=function SD
set na=function yD
set da=function pD
set fa=function fD
set Ra=function RD
set Ta=function FD
set Ya=function kD
set Ga=function WD
set ga=function ED
set ha=function DD
set Fa=function HD
set ka=function VD
set ja=function BD
set xa=function sH
set va=function tH
set ma=function lH
set Qa=function bH
set Wa=function aH
set Ea=function nH
set Za=function RH
set Ua=function TH
set Ia=function fH
set Pa=function kH
set Aa=function QH
set Da=function PH
set Ha=function CH
set Ja=function uJ
set Ka=function OJ
set La=function eJ
set Xa=function YJ
set Ca=function jJ
set Va=function UJ
set Ba=function JJ
set Na=function MJ
set Ma=function iK
set wn=function SK
set un=function yK
set rn=function pK
set sn=function fK
set tn=function RK
set Sn=function FK
set cn=function kK
set on=function WK
set On=function EK
set ln=function DK
set bn=function HK
set yn=function VK
set pn=function BK
set en=function sL
set qn=function tL
set an=function lL
set nn=function bL
set dn=function nL
set fn=function dL
set Rn=function gL
set Tn=function hL
set Yn=function mL
set Gn=function QL
set gn=function PL
set hn=function AL
set Fn=function XL
set kn=function CL
set jn=function uX
set xn=function rX
set vn=function oX
set mn=function OX
set Qn=function qX
set Wn=function aX
set En=function YX
set Zn=function GX
set Un=function xX
set In=function vX
set Pn=function UX
set An=function IX
set Dn=function KX
set Hn=function LX
set Jn=function ZT
set Kn=function Mv
set Ln=function N9
set Xn=function J1
set Cn=function www
set Vn=function SC
set Bn=function Wuw
set Nn=function m2
set Mn=function G9
set wd=function P9
set ud=function cC
set rd=function Z1
set sd=function y4
set td=function Y1
set id=function Q2
set Sd=function K9
set cd=function Oww
set od=function h9
set Od=function RRw
set ld=function I1
set bd=function K1
set yd=function Rrw
set pd=function TRw
set ed=function WB
set qd=function YRw
set ad=function gRw
set nd=function iC
set dd=function oC
set fd=function h8
set Rd=function A1
set Td=function hRw
set Yd=function FRw
set Gd=function kRw
set gd=function wN
set hd=function lww
set Fd=function D3
set kd=function H1
set jd=function s9
set xd=function N0w
set vd=function M0w
set md=function aww
set Qd=function aww_2
set Wd=function jRw
set Ed=function nww
set Zd=function o2
set Ud=function xRw
set Id=function vRw
set Pd=function r9
set Ad=function mRw
set Dd=function QRw
set Hd=function WRw
set Jd=function dww
set Kd=function ERw
set Ld=function Y2
set Xd=function E1
set Cd=function oww_2
set Vd=function ZRw
set Bd=function f0w
set Nd=function HRw
set Md=function JRw
set wf=function g9
set uf=function KRw
set rf=function p4
set sf=function LRw
set tf=function XRw
set Sf=function CRw
set cf=function D1
set of=function VRw
set Of=function mN
set lf=function BRw
set bf=function NRw
set yf=function MRw
set pf=function wTw
set ef=function jM
set qf=function uTw
set af=function rTw
set nf=function b4
set df=function sTw
set ff=function tTw
set Rf=function iTw
set Tf=function STw
set Yf=function cTw
set Gf=function oTw
set gf=function OTw
set hf=function lTw
set Ff=function HC
set kf=function bTw
set jf=function nB
set xf=function yTw
set vf=function pTw
set mf=function qTw
set Qf=function qM
set Wf=function aTw
set Ef=function A3
set Zf=function nTw
set Uf=function U1
set If=function c2
set Pf=function dTw
set Af=function RTw
set Df=function TTw
set Hf=function YTw
set Jf=function GTw
set Kf=function gTw
set Lf=function hTw
set Xf=function FTw
set Cf=function xTw
set Vf=function n9
set Bf=function f9
set Nf=function R9
set Mf=function P1
set wR=function jTw
set uR=function fTw
endfunction
function main takes nothing returns nothing
local trigger rC
local trigger sC
local trigger tC
call oR()
call SetCameraBounds((-30720.0)+GetCameraMargin(CAMERA_MARGIN_LEFT),(-30720.0)+GetCameraMargin(CAMERA_MARGIN_BOTTOM),30720.0-GetCameraMargin(CAMERA_MARGIN_RIGHT),30720.0-GetCameraMargin(CAMERA_MARGIN_TOP),(-30720.0)+GetCameraMargin(CAMERA_MARGIN_LEFT),30720.0-GetCameraMargin(CAMERA_MARGIN_TOP),30720.0-GetCameraMargin(CAMERA_MARGIN_RIGHT),(-30720.0)+GetCameraMargin(CAMERA_MARGIN_BOTTOM))
call SetDayNightModels("Environment\\DNC\\DNCLordaeron\\DNCLordaeronTerrain\\DNCLordaeronTerrain.mdl","Environment\\DNC\\DNCLordaeron\\DNCLordaeronUnit\\DNCLordaeronUnit.mdl")
call NewSoundEnvironment("Default")
call SetAmbientDaySound("LordaeronSummerDay")
call SetAmbientNightSound("LordaeronSummerNight")
call SetMapMusic("Music",true,0)
set fs=CreateSound("Sound\\Interface\\Warning.wav",false,false,false,10,10,"")
call SetSoundParamsFromLabel(fs,"Warning")
call SetSoundDuration(fs,1903)
set q=Rect(11872.0,-24096.0,13376.0,-18304.0)
set a=Rect(14080.0,-30720.0,16256.0,-25664.0)
set n=Rect(12096.0,-26240.0,14944.0,-23776.0)
set d=Rect(-17120.0,15936.0,-15520.0,17408.0)
call Rect(-29824.0,-30080.0,-29312.0,-28672.0)
call Rect(-29216.0,-30112.0,-28672.0,-28672.0)
call Rect(-25984.0,-29760.0,-24992.0,-29504.0)
call Rect(-25984.0,-30080.0,-25472.0,-29824.0)
call Rect(-25984.0,-30400.0,-25472.0,-30144.0)
call Rect(-26464.0,-30048.0,-26176.0,-29056.0)
call Rect(-25440.0,-30368.0,-25184.0,-29856.0)
call Rect(-25184.0,-30368.0,-24928.0,-29856.0)
call Rect(-24672.0,-29568.0,-24064.0,-28800.0)
call Rect(-24704.0,-30208.0,-24064.0,-29696.0)
set f=Rect(-17408.0,22016.0,-17056.0,22368.0)
set R=Rect(-19072.0,17728.0,-18688.0,18080.0)
set T=Rect(-22464.0,22208.0,-22112.0,22560.0)
set Y=Rect(-3776.0,4416.0,-3392.0,4768.0)
set G=Rect(-3872.0,1664.0,-3456.0,2016.0)
set g=Rect(-416.0,-2592.0,-128.0,-2272.0)
set h=Rect(4992.0,-2016.0,5344.0,-1696.0)
set F=Rect(2528.0,-3168.0,2848.0,-2880.0)
set k=Rect(7744.0,-2528.0,8096.0,-2208.0)
set j=Rect(-17504.0,18080.0,-17056.0,18496.0)
set x=Rect(1024.0,-1120.0,1376.0,-800.0)
set v=Rect(-3328.0,8096.0,-2848.0,8512.0)
set m=Rect(-4704.0,11488.0,-4416.0,11776.0)
set Q=Rect(-640.0,8288.0,-160.0,8704.0)
set W=Rect(-5184.0,17120.0,-4832.0,17440.0)
set E=Rect(-96.0,12448.0,224.0,12768.0)
set Z=Rect(-2272.0,13536.0,-1984.0,13856.0)
set U=Rect(7008.0,1984.0,7456.0,2432.0)
set I=Rect(4032.0,3744.0,4416.0,4064.0)
set P=Rect(4000.0,5216.0,4320.0,5536.0)
set A=Rect(-576.0,2880.0,-224.0,3232.0)
set D=Rect(-8288.0,19776.0,-7936.0,20160.0)
set H=Rect(-6464.0,21184.0,-6080.0,21568.0)
set J=Rect(-7904.0,22048.0,-7488.0,22464.0)
set K=Rect(-5344.0,14304.0,-4960.0,14720.0)
set L=Rect(2880.0,32.0,3264.0,352.0)
set X=Rect(608.0,15680.0,992.0,16096.0)
set C=Rect(-2496.0,15872.0,-2112.0,16224.0)
set V=Rect(1056.0,10848.0,1344.0,11136.0)
set B=Rect(1600.0,6784.0,1984.0,7136.0)
set N=Rect(224.0,19296.0,544.0,19648.0)
set M=Rect(2784.0,22592.0,3200.0,22944.0)
set ww=Rect(-1984.0,19008.0,-1600.0,19360.0)
set uw=Rect(3008.0,18048.0,3392.0,18400.0)
call Rect(-28544.0,-30080.0,-28064.0,-29344.0)
call Rect(-27744.0,-30080.0,-27456.0,-29760.0)
set rw=Rect(4224.0,19488.0,4608.0,19776.0)
set sw=Rect(13056.0,4960.0,13408.0,5280.0)
set tw=Rect(5696.0,24768.0,6048.0,25088.0)
set iw=Rect(3328.0,26816.0,3680.0,27168.0)
set Sw=Rect(8608.0,26144.0,9024.0,26528.0)
set cw=Rect(6656.0,21248.0,7008.0,21600.0)
set ow=Rect(-16640.0,10368.0,-13504.0,13056.0)
set Ow=Rect(-18944.0,5312.0,-16864.0,7328.0)
set lw=Rect(-28032.0,-1120.0,-22464.0,640.0)
set bw=Rect(-27264.0,2784.0,-26208.0,3328.0)
set yw=Rect(-26912.0,-4320.0,-23872.0,-2976.0)
set pw=Rect(-19328.0,-288.0,-18592.0,1568.0)
set ew=Rect(-11936.0,7616.0,-448.0,11424.0)
set qw=Rect(-1664.0,1216.0,6848.0,7776.0)
set aw=Rect(-5472.0,24704.0,-3232.0,27616.0)
set nw=Rect(3744.0,10880.0,4064.0,11232.0)
set dw=Rect(-12064.0,11392.0,-8832.0,16576.0)
set fw=Rect(-8832.0,10176.0,23520.0,17760.0)
set Rw=Rect(4384.0,17728.0,23424.0,27040.0)
set Tw=Rect(-10688.0,17536.0,-10304.0,17888.0)
set Yw=Rect(-10688.0,-9312.0,-10336.0,-9024.0)
set Gw=Rect(17280.0,9280.0,17632.0,9632.0)
set gw=Rect(8352.0,12192.0,8672.0,12512.0)
set hw=Rect(5952.0,18400.0,6304.0,18688.0)
set Fw=Rect(9120.0,19872.0,9408.0,20192.0)
set kw=Rect(23328.0,-14080.0,30688.0,17792.0)
set jw=Rect(13984.0,-288.0,14336.0,0.0)
set xw=Rect(10624.0,-7552.0,11008.0,-7200.0)
set vw=Rect(15168.0,-5792.0,15552.0,-5408.0)
set mw=Rect(15328.0,-7712.0,15648.0,-7424.0)
set Qw=Rect(12640.0,-7104.0,12992.0,-6752.0)
set Ww=Rect(17056.0,-8800.0,17376.0,-8512.0)
set Ew=Rect(18432.0,-608.0,18784.0,-320.0)
set Zw=Rect(13760.0,-11168.0,14112.0,-10752.0)
set Uw=Rect(16768.0,-16416.0,17120.0,-16032.0)
set Iw=Rect(18880.0,-7616.0,19232.0,-7296.0)
set Pw=Rect(6816.0,-6752.0,7136.0,-6464.0)
set Aw=Rect(12512.0,-4064.0,12832.0,-3712.0)
set Dw=Rect(9056.0,-4576.0,9344.0,-4288.0)
set Hw=Rect(-26464.0,-8896.0,-26144.0,-8544.0)
set Jw=Rect(-21632.0,-8544.0,-21248.0,-8224.0)
set Kw=Rect(-16928.0,-8224.0,-16608.0,-7904.0)
set Lw=Rect(-10112.0,-11424.0,-9760.0,-11136.0)
set Xw=Rect(-7680.0,-16416.0,-7328.0,-16128.0)
set Cw=Rect(288.0,-17760.0,608.0,-17472.0)
set Vw=Rect(9248.0,-21376.0,9984.0,-20640.0)
set Bw=Rect(24704.0,-27648.0,25088.0,-27264.0)
set Nw=Rect(10816.0,-18688.0,11168.0,-18304.0)
set Mw=Rect(13056.0,-18016.0,13408.0,-17760.0)
set wu=Rect(12096.0,-21024.0,12448.0,-20704.0)
set uu=Rect(15680.0,5600.0,16032.0,5920.0)
set ru=Rect(6944.0,7648.0,7264.0,7968.0)
set su=Rect(5824.0,12256.0,6176.0,12576.0)
set tu=Rect(11200.0,7712.0,11552.0,8064.0)
set iu=Rect(12480.0,11136.0,12832.0,11456.0)
set Su=Rect(14880.0,22944.0,15200.0,23232.0)
set cu=Rect(11392.0,16768.0,11744.0,17088.0)
set ou=Rect(23840.0,96.0,24128.0,384.0)
set Ou=Rect(19488.0,11168.0,19808.0,11488.0)
set lu=Rect(20672.0,2528.0,21056.0,2848.0)
set bu=Rect(23776.0,2368.0,24160.0,2720.0)
set yu=Rect(18336.0,-13408.0,18624.0,-13120.0)
set pu=Rect(17056.0,-11648.0,17376.0,-11264.0)
set eu=Rect(15488.0,-17696.0,15840.0,-17376.0)
set qu=Rect(24896.0,-8480.0,25248.0,-8128.0)
set au=Rect(16480.0,-14368.0,16768.0,-14048.0)
set nu=Rect(17088.0,-19744.0,17440.0,-19456.0)
set du=Rect(22720.0,-10432.0,23072.0,-10048.0)
set fu=Rect(20672.0,-23232.0,21056.0,-22848.0)
set Ru=Rect(19904.0,-5920.0,20256.0,-5632.0)
set Tu=Rect(18624.0,-3936.0,18976.0,-3616.0)
set Yu=Rect(-13632.0,-14816.0,-12192.0,-13376.0)
set Gu=Rect(17760.0,-10400.0,23360.0,-1344.0)
set gu=Rect(12384.0,-5984.0,13824.0,-4352.0)
set hu=Rect(-10944.0,3968.0,-7680.0,5120.0)
set Fu=Rect(-6528.0,7808.0,-6176.0,8160.0)
set ku=Rect(-8864.0,6912.0,-8448.0,7264.0)
set ju=Rect(-11680.0,14304.0,-11264.0,14752.0)
set xu=Rect(-9760.0,12928.0,-9472.0,13280.0)
set vu=Rect(-7552.0,16928.0,-7232.0,17248.0)
set mu=Rect(-17472.0,-3328.0,-17120.0,-2976.0)
call Rect(-24576.0,-1376.0,-24224.0,-1024.0)
set Qu=Rect(23392.0,10912.0,23712.0,11232.0)
set Wu=Rect(17280.0,19456.0,17632.0,19808.0)
set Eu=Rect(-16896.0,24032.0,-16544.0,24352.0)
set Zu=Rect(-15904.0,25952.0,-15520.0,26304.0)
set Uu=Rect(-17312.0,26624.0,-16896.0,27008.0)
set Iu=Rect(-16096.0,20352.0,-15712.0,20768.0)
set Pu=Rect(-20448.0,21440.0,-20064.0,21792.0)
set Au=Rect(-22560.0,19808.0,-22272.0,20128.0)
set Du=Rect(-18752.0,19520.0,-18400.0,19872.0)
set Hu=Rect(-16128.0,16896.0,-15808.0,17248.0)
set Ju=Rect(-17952.0,15904.0,-17632.0,16224.0)
set Ku=Rect(-19936.0,16352.0,-19648.0,16672.0)
set Lu=Rect(-17248.0,12448.0,-16928.0,12832.0)
set Xu=Rect(-13728.0,11968.0,-13408.0,12352.0)
set Cu=Rect(-15232.0,10624.0,-14880.0,10976.0)
set Vu=Rect(-13856.0,7872.0,-13568.0,8256.0)
set Bu=Rect(-16192.0,5824.0,-15840.0,6208.0)
set Nu=Rect(-16864.0,3392.0,-16576.0,3776.0)
set Mu=Rect(-18880.0,5568.0,-18528.0,5920.0)
set wr=Rect(-20288.0,1216.0,-19936.0,1600.0)
set ur=Rect(-17216.0,352.0,-16896.0,736.0)
set rr=Rect(-24512.0,3744.0,-24128.0,4064.0)
set sr=Rect(-22720.0,2368.0,-22432.0,2752.0)
set tr=Rect(-23552.0,-256.0,-23200.0,128.0)
set ir=Rect(-25376.0,1312.0,-25056.0,1632.0)
set Sr=Rect(-28736.0,-192.0,-28352.0,160.0)
set cr=Rect(-21024.0,2944.0,-20704.0,3360.0)
set lr=Rect(-13792.0,2144.0,-13440.0,2592.0)
set br=Rect(-13568.0,14912.0,-13216.0,15296.0)
set yr=Rect(-12736.0,16128.0,-12352.0,16512.0)
set pr=Rect(-10880.0,3360.0,-10528.0,3712.0)
set er=Rect(-10048.0,5280.0,-9696.0,5600.0)
set qr=Rect(-6880.0,3936.0,-6560.0,4256.0)
set ar=Rect(-8224.0,3040.0,-7904.0,3392.0)
set nr=Rect(-8960.0,1760.0,-8608.0,2176.0)
set dr=Rect(-6624.0,1088.0,-6304.0,1472.0)
set fr=Rect(-7296.0,-960.0,-6944.0,-544.0)
set Rr=Rect(-23712.0,-4704.0,-23392.0,-4416.0)
set Tr=Rect(-25184.0,-3168.0,-24864.0,-2848.0)
set Yr=Rect(-21888.0,-4416.0,-21536.0,-4032.0)
set Gr=Rect(-20928.0,-2304.0,-20576.0,-1888.0)
set gr=Rect(-7776.0,11040.0,-7456.0,11392.0)
set hr=Rect(-11648.0,7072.0,-11296.0,7360.0)
set Fr=Rect(-13728.0,4992.0,-13408.0,5376.0)
set kr=Rect(-5152.0,21696.0,-4832.0,22080.0)
set jr=Rect(-5248.0,24416.0,-4960.0,24768.0)
set xr=Rect(-6688.0,28096.0,-6368.0,28480.0)
set vr=Rect(-9024.0,26496.0,-8736.0,26880.0)
set mr=Rect(-10048.0,28224.0,-9696.0,28576.0)
set Qr=Rect(-1408.0,23776.0,-1152.0,24096.0)
set Wr=Rect(-2720.0,26176.0,-2432.0,26560.0)
set Er=Rect(-28032.0,-2944.0,-27680.0,-2560.0)
set Zr=Rect(-29760.0,-10016.0,-29408.0,-9632.0)
set Ur=Rect(15296.0,-26976.0,15648.0,-26624.0)
set Ir=Rect(-20544.0,12032.0,-20160.0,12416.0)
set Pr=Rect(-18368.0,10624.0,-18016.0,11008.0)
set Ar=Rect(-10880.0,-576.0,-10528.0,-224.0)
set Dr=Rect(-11104.0,-4768.0,-10816.0,-4448.0)
set Hr=Rect(-5728.0,-2912.0,-5440.0,-2560.0)
set Jr=Rect(-3904.0,-6720.0,-3552.0,-6336.0)
set Kr=Rect(-3616.0,-3040.0,-3328.0,-2688.0)
set Lr=Rect(-7200.0,-8000.0,-6880.0,-7616.0)
set Xr=Rect(-5504.0,-9344.0,-5248.0,-9056.0)
set Cr=Rect(-11616.0,10848.0,-11296.0,11168.0)
set Vr=Rect(-1792.0,-320.0,-1440.0,64.0)
set Br=Rect(3232.0,-7488.0,3552.0,-7136.0)
set Nr=Rect(8224.0,-10496.0,8512.0,-10208.0)
set Mr=Rect(1344.0,29280.0,1696.0,29632.0)
set ws=Rect(10848.0,-2144.0,11136.0,-1824.0)
set us=Rect(-26496.0,-1568.0,-26144.0,-1248.0)
set rs=Rect(-27168.0,2528.0,-26880.0,2816.0)
set ss=Rect(-2016.0,27552.0,-1696.0,27936.0)
set ts=Rect(-3488.0,23040.0,-3200.0,23392.0)
set is=Rect(2016.0,-7904.0,2336.0,-7584.0)
set Ss=Rect(640.0,-5760.0,992.0,-5376.0)
set cs=Rect(5216.0,-12384.0,5504.0,-12064.0)
set os=Rect(18272.0,-17504.0,18656.0,-17056.0)
set Os=Rect(26848.0,-11680.0,27168.0,-11360.0)
set ls=Rect(6464.0,-4672.0,6816.0,-4288.0)
set bs=Rect(20672.0,21312.0,21024.0,21696.0)
set ys=Rect(-1824.0,5792.0,-1440.0,6144.0)
set ps=Rect(-23264.0,-8992.0,-22944.0,-8704.0)
set es=Rect(-13504.0,-8640.0,-13184.0,-8384.0)
set qs=Rect(26048.0,-2848.0,26400.0,-2528.0)
set as=Rect(28864.0,-3360.0,29152.0,-3040.0)
set ns=Rect(28064.0,2592.0,28352.0,2880.0)
set ds=Rect(27488.0,-5984.0,27808.0,-5664.0)
call kT()
call jT()
call InitBlizzard()
call lR()
call NX()
set sC=Ts
if TriggerEvaluate(sC) then
call TriggerExecute(sC)
endif
set tC=tt
if TriggerEvaluate(tC) then
call TriggerExecute(tC)
endif
set rC=CreateTrigger()
call TriggerAddCondition(rC,Condition(Ln))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Real.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(Xn))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Integer.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(Cn))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package String.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(Vn))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Angle.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(Bn))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Vectors.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(Nn))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Maths.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(Mn))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Player.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(wd))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Printing.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(ud))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Basics.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(rd))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package GameTimer.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(sd))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MagicFunctions.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(td))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package ErrorHandling.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(id))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Matrices.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(Sd))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Quaternion.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(cd))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Table.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(od))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Playercolor.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(Od))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Colors.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(ld))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Group.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(bd))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Lightning.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(yd))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package WeatherEffects.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(pd))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package TypeCasting.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(ed))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package ClosureForGroups.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(qd))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package LinkedList.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(ad))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Abilities.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(nd))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package AbilityIds.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(dd))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Buildings.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(fd))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MutliboardTools.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(Rd))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package HashList.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(Td))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package EventHelper.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(Yd))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package RegisterEvents.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(Gd))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package TimerUtils.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(gd))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package ClosureTimers.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(hd))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package TargetsAllowed.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(Fd))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Doodads.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(kd))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Icons.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(jd))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Objects.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(xd))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Sounds.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(vd))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Soundsets.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(md))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Textures.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(Qd))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package UI.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(Wd))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Units.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(Ed))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package UnitIds.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(Zd))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MapBounds.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(Ud))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package DummyRecycler.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(Id))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package StringUtils.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(Pd))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package ObjectIds.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(Ad))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Preloader.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(Dd))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package ObjectIdGenerator.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(Hd))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package OnUnitEnterLeave.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(Jd))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package UnitIndexer.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(Kd))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package ClosureEvents.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(Ld))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MathTools.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(Xd))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Forces.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(Cd))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Strings.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(Vd))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package CityBaseTaxes.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(Bd))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Revolts.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(Nd))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package City.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(Md))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Multiboards.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(wf))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package PlayerStats.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(uf))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package CityModifiers.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(rf))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Main.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(sf))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package CastleCapture.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(tf))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package CityBuilded.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(Sf))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package CityManage.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(cf))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package HashSet.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(of))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package VoteKick.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(Of))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Commands.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(lf))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Credits.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(bf))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Economy.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(yf))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package DateTime.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(pf))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MultiboardCityUpdate.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(ef))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Diplomacy.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(qf))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package LimitEncampments.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(af))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package LimitMercenaryCamps.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(nf))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Logarithm.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(df))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MainInit.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(ff))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MassControl.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(Rf))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package NoShipsNearRivers.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(Tf))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package NoStarvationOnBoat.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(Yf))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package OnPlayerLeave.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(Gf))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package RangeChecks.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(gf))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Taxation.")
endif
call TriggerClearConditions(rC)
call TriggerAddCondition(rC,Condition(hf))
if not TriggerEvaluate(rC) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Upkeep.")
endif
call TriggerClearConditions(rC)
call DestroyTrigger(rC)
set rC=null
set sC=null
set tC=null
endfunction
function MX takes nothing returns nothing
call SetPlayerStartLocation(Player(0),0)
call ForcePlayerStartLocation(Player(0),0)
call SetPlayerColor(Player(0),ConvertPlayerColor(0))
call SetPlayerRacePreference(Player(0),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(0),false)
call SetPlayerController(Player(0),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(1),1)
call ForcePlayerStartLocation(Player(1),1)
call SetPlayerColor(Player(1),ConvertPlayerColor(1))
call SetPlayerRacePreference(Player(1),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(1),false)
call SetPlayerController(Player(1),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(2),2)
call ForcePlayerStartLocation(Player(2),2)
call SetPlayerColor(Player(2),ConvertPlayerColor(2))
call SetPlayerRacePreference(Player(2),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(2),false)
call SetPlayerController(Player(2),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(3),3)
call ForcePlayerStartLocation(Player(3),3)
call SetPlayerColor(Player(3),ConvertPlayerColor(3))
call SetPlayerRacePreference(Player(3),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(3),false)
call SetPlayerController(Player(3),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(4),4)
call ForcePlayerStartLocation(Player(4),4)
call SetPlayerColor(Player(4),ConvertPlayerColor(4))
call SetPlayerRacePreference(Player(4),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(4),false)
call SetPlayerController(Player(4),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(5),5)
call ForcePlayerStartLocation(Player(5),5)
call SetPlayerColor(Player(5),ConvertPlayerColor(5))
call SetPlayerRacePreference(Player(5),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(5),false)
call SetPlayerController(Player(5),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(6),6)
call ForcePlayerStartLocation(Player(6),6)
call SetPlayerColor(Player(6),ConvertPlayerColor(6))
call SetPlayerRacePreference(Player(6),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(6),false)
call SetPlayerController(Player(6),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(7),7)
call ForcePlayerStartLocation(Player(7),7)
call SetPlayerColor(Player(7),ConvertPlayerColor(7))
call SetPlayerRacePreference(Player(7),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(7),false)
call SetPlayerController(Player(7),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(8),8)
call ForcePlayerStartLocation(Player(8),8)
call SetPlayerColor(Player(8),ConvertPlayerColor(8))
call SetPlayerRacePreference(Player(8),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(8),false)
call SetPlayerController(Player(8),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(9),9)
call ForcePlayerStartLocation(Player(9),9)
call SetPlayerColor(Player(9),ConvertPlayerColor(9))
call SetPlayerRacePreference(Player(9),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(9),false)
call SetPlayerController(Player(9),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(10),10)
call ForcePlayerStartLocation(Player(10),10)
call SetPlayerColor(Player(10),ConvertPlayerColor(10))
call SetPlayerRacePreference(Player(10),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(10),false)
call SetPlayerController(Player(10),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(11),11)
call ForcePlayerStartLocation(Player(11),11)
call SetPlayerColor(Player(11),ConvertPlayerColor(11))
call SetPlayerRacePreference(Player(11),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(11),false)
call SetPlayerController(Player(11),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(12),12)
call ForcePlayerStartLocation(Player(12),12)
call SetPlayerColor(Player(12),ConvertPlayerColor(12))
call SetPlayerRacePreference(Player(12),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(12),false)
call SetPlayerController(Player(12),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(13),13)
call ForcePlayerStartLocation(Player(13),13)
call SetPlayerColor(Player(13),ConvertPlayerColor(13))
call SetPlayerRacePreference(Player(13),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(13),false)
call SetPlayerController(Player(13),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(14),14)
call ForcePlayerStartLocation(Player(14),14)
call SetPlayerColor(Player(14),ConvertPlayerColor(14))
call SetPlayerRacePreference(Player(14),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(14),false)
call SetPlayerController(Player(14),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(15),15)
call ForcePlayerStartLocation(Player(15),15)
call SetPlayerColor(Player(15),ConvertPlayerColor(15))
call SetPlayerRacePreference(Player(15),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(15),false)
call SetPlayerController(Player(15),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(16),16)
call ForcePlayerStartLocation(Player(16),16)
call SetPlayerColor(Player(16),ConvertPlayerColor(16))
call SetPlayerRacePreference(Player(16),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(16),false)
call SetPlayerController(Player(16),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(17),17)
call ForcePlayerStartLocation(Player(17),17)
call SetPlayerColor(Player(17),ConvertPlayerColor(17))
call SetPlayerRacePreference(Player(17),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(17),false)
call SetPlayerController(Player(17),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(18),18)
call ForcePlayerStartLocation(Player(18),18)
call SetPlayerColor(Player(18),ConvertPlayerColor(18))
call SetPlayerRacePreference(Player(18),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(18),false)
call SetPlayerController(Player(18),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(19),19)
call ForcePlayerStartLocation(Player(19),19)
call SetPlayerColor(Player(19),ConvertPlayerColor(19))
call SetPlayerRacePreference(Player(19),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(19),false)
call SetPlayerController(Player(19),MAP_CONTROL_USER)
endfunction
function uC takes nothing returns nothing
call SetStartLocPrioCount(0,19)
call SetStartLocPrio(0,0,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,1,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,2,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,3,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,4,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,9,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,10,11,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,11,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,12,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,13,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,14,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,15,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,16,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,17,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,18,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(1,9)
call SetStartLocPrio(1,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,1,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,2,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,3,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,4,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(2,9)
call SetStartLocPrio(2,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,2,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,3,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,4,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(3,9)
call SetStartLocPrio(3,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,3,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,4,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(4,9)
call SetStartLocPrio(4,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,4,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(5,9)
call SetStartLocPrio(5,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(6,9)
call SetStartLocPrio(6,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(7,9)
call SetStartLocPrio(7,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(8,9)
call SetStartLocPrio(8,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(9,9)
call SetStartLocPrio(9,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,8,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(10,16)
call SetStartLocPrio(10,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,8,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,9,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,10,12,MAP_LOC_PRIO_LOW)
call SetStartLocPrio(10,11,13,MAP_LOC_PRIO_LOW)
call SetStartLocPrio(10,12,14,MAP_LOC_PRIO_LOW)
call SetStartLocPrio(10,13,15,MAP_LOC_PRIO_LOW)
call SetStartLocPrio(10,14,16,MAP_LOC_PRIO_LOW)
call SetStartLocPrio(10,15,17,MAP_LOC_PRIO_LOW)
call SetStartLocPrioCount(11,19)
call SetStartLocPrio(11,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,8,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,9,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,10,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,11,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,12,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,13,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,14,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,15,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,16,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,17,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,18,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(12,5)
call SetStartLocPrio(12,0,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,1,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,2,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,3,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,4,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(13,5)
call SetStartLocPrio(13,0,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,1,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,2,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,3,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,4,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(14,5)
call SetStartLocPrio(14,0,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,1,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,2,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,3,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,4,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(15,5)
call SetStartLocPrio(15,0,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,1,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,2,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,3,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,4,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(16,5)
call SetStartLocPrio(16,0,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,1,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,2,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,3,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,4,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(17,5)
call SetStartLocPrio(17,0,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,1,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,2,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,3,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,4,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(18,1)
call SetStartLocPrio(18,0,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(19,1)
call SetStartLocPrio(19,0,18,MAP_LOC_PRIO_HIGH)
endfunction
function wC takes nothing returns nothing
call SetPlayerTeam(Player(0),0)
call SetPlayerTeam(Player(1),0)
call SetPlayerTeam(Player(2),0)
call SetPlayerTeam(Player(3),0)
call SetPlayerTeam(Player(4),0)
call SetPlayerTeam(Player(5),0)
call SetPlayerTeam(Player(6),0)
call SetPlayerTeam(Player(7),0)
call SetPlayerTeam(Player(8),0)
call SetPlayerTeam(Player(9),0)
call SetPlayerTeam(Player(10),0)
call SetPlayerTeam(Player(11),0)
call SetPlayerTeam(Player(12),1)
call SetPlayerTeam(Player(13),1)
call SetPlayerTeam(Player(14),1)
call SetPlayerTeam(Player(15),1)
call SetPlayerTeam(Player(16),1)
call SetPlayerTeam(Player(17),1)
call SetPlayerTeam(Player(18),1)
call SetPlayerTeam(Player(19),1)
endfunction
function config takes nothing returns nothing
call SetMapName("TRIGSTR_001")
call SetMapDescription("TRIGSTR_003")
call SetPlayers(20)
call SetTeams(20)
call SetGamePlacement(MAP_PLACEMENT_TEAMS_TOGETHER)
call DefineStartLocation(0,320.0,5184.0)
call DefineStartLocation(1,320.0,5184.0)
call DefineStartLocation(2,320.0,5184.0)
call DefineStartLocation(3,320.0,5184.0)
call DefineStartLocation(4,320.0,5184.0)
call DefineStartLocation(5,320.0,5184.0)
call DefineStartLocation(6,320.0,5184.0)
call DefineStartLocation(7,320.0,5184.0)
call DefineStartLocation(8,320.0,5184.0)
call DefineStartLocation(9,320.0,5184.0)
call DefineStartLocation(10,320.0,5184.0)
call DefineStartLocation(11,320.0,5184.0)
call DefineStartLocation(12,320.0,5184.0)
call DefineStartLocation(13,320.0,5184.0)
call DefineStartLocation(14,320.0,5184.0)
call DefineStartLocation(15,320.0,5184.0)
call DefineStartLocation(16,320.0,5184.0)
call DefineStartLocation(17,320.0,5184.0)
call DefineStartLocation(18,320.0,5184.0)
call DefineStartLocation(19,320.0,5184.0)
call MX()
call wC()
call uC()
endfunction
