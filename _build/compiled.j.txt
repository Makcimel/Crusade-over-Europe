// this script was compiled with wurst 1.8.0.0-jenkins-Wurst-1057
globals
// real bj_RADTODEG=0.
// real bj_GAME_STARTED_THRESHOLD=0.
// integer bj_MAX_INVENTORY=0
// integer bj_MAX_PLAYERS=0
// integer bj_PLAYER_NEUTRAL_VICTIM=0
// integer bj_MAX_PLAYER_SLOTS=0
// integer bj_MAX_SKELETONS=0
// integer bj_MAX_STOCK_ITEM_SLOTS=0
// integer bj_MAX_STOCK_UNIT_SLOTS=0
// integer bj_MAX_ITEM_LEVEL=0
// real bj_TOD_DAWN=0.
// real bj_TOD_DUSK=0.
// real bj_MELEE_STARTING_TOD=0.
// integer bj_MELEE_HERO_LIMIT=0
// integer bj_MELEE_HERO_TYPE_LIMIT=0
// real bj_STOCK_RESTOCK_INITIAL_DELAY=0.
// real bj_STOCK_RESTOCK_INTERVAL=0.
// integer bj_STOCK_MAX_ITERATIONS=0
// real bj_RESCUE_PING_TIME=0.
// real bj_CINEMODE_INTERFACEFADE=0.
// gamespeed bj_CINEMODE_GAMESPEED=null
// real bj_CINEMODE_VOLUME_UNITMOVEMENT=0.
// real bj_CINEMODE_VOLUME_UNITSOUNDS=0.
// real bj_CINEMODE_VOLUME_COMBAT=0.
// real bj_CINEMODE_VOLUME_SPELLS=0.
// real bj_CINEMODE_VOLUME_UI=0.
// real bj_CINEMODE_VOLUME_MUSIC=0.
// real bj_CINEMODE_VOLUME_AMBIENTSOUNDS=0.
// real bj_CINEMODE_VOLUME_FIRE=0.
// integer bj_MAX_QUEUED_TRIGGERS=0
// real bj_QUEUED_TRIGGER_TIMEOUT=0.
// integer bj_ALLIANCE_UNALLIED=0
// integer bj_ALLIANCE_UNALLIED_VISION=0
// integer bj_ALLIANCE_ALLIED=0
// integer bj_ALLIANCE_ALLIED_VISION=0
// integer bj_ALLIANCE_ALLIED_UNITS=0
// integer bj_ALLIANCE_ALLIED_ADVUNITS=0
// integer bj_ALLIANCE_NEUTRAL=0
// integer bj_ALLIANCE_NEUTRAL_VISION=0
// integer bj_QUESTTYPE_REQ_DISCOVERED=0
// integer bj_QUESTTYPE_REQ_UNDISCOVERED=0
// integer bj_QUESTTYPE_OPT_DISCOVERED=0
// integer bj_UNIT_STATE_METHOD_ABSOLUTE=0
// integer bj_UNIT_STATE_METHOD_RELATIVE=0
// integer bj_UNIT_STATE_METHOD_DEFAULTS=0
// integer bj_UNIT_STATE_METHOD_MAXIMUM=0
// real bj_CORPSE_MAX_DEATH_TIME=0.
// force bj_FORCE_ALL_PLAYERS=null
// rect bj_mapInitialPlayableArea=null
// timer bj_gameStartedTimer=null
// boolean bj_gameStarted=false
// timer bj_volumeGroupsTimer=null
// trigger bj_dncSoundsDay=null
// trigger bj_dncSoundsNight=null
// sound bj_dayAmbientSound=null
// sound bj_nightAmbientSound=null
// trigger bj_dncSoundsDawn=null
// trigger bj_dncSoundsDusk=null
// sound bj_dawnSound=null
// sound bj_duskSound=null
// boolean bj_useDawnDuskSounds=false
// boolean bj_dncIsDaytime=false
// sound bj_rescueSound=null
// trigger bj_stockItemPurchased=null
// timer bj_stockUpdateTimer=null
// integer bj_stockPickedItemLevel=0
// itemtype bj_stockPickedItemType=null
// trigger bj_rescueUnitBehavior=null
// boolean bj_rescueChangeColorUnit=false
// boolean bj_rescueChangeColorBldg=false
// gamespeed bj_cineModePriorSpeed=null
// boolean bj_cineModePriorFogSetting=false
// boolean bj_cineModePriorMaskSetting=false
// boolean bj_cineModeAlreadyIn=false
// boolean bj_cineModePriorDawnDusk=false
// integer bj_cineModeSavedSeed=0
// integer bj_queuedExecTotal=0
// timer bj_queuedExecTimeoutTimer=null
// trigger bj_queuedExecTimeout=null
// integer bj_groupEnumTypeId=0
// player bj_groupEnumOwningPlayer=null
// group bj_groupAddGroupDest=null
// location bj_enumDestructableCenter=null
// real bj_enumDestructableRadius=0.
// group bj_suspendDecayFleshGroup=null
// group bj_suspendDecayBoneGroup=null
// timer bj_delayedSuspendDecayTimer=null
// trigger bj_delayedSuspendDecayTrig=null
// integer bj_livingPlayerUnitsTypeId=0
// unit bj_lastCreatedUnit=null
// group bj_lastCreatedGroup=null
// quest bj_lastCreatedQuest=null
// unit bj_lastReplacedUnit=null
// boolexpr filterGetUnitsOfTypeIdAll=null
// boolean bj_wantDestroyGroup=false
// integer PLAYER_NEUTRAL_PASSIVE=0
// integer PLAYER_NEUTRAL_AGGRESSIVE=0
// playercolor PLAYER_COLOR_RED=null
// playercolor PLAYER_COLOR_BLUE=null
// playercolor PLAYER_COLOR_CYAN=null
// playercolor PLAYER_COLOR_PURPLE=null
// playercolor PLAYER_COLOR_YELLOW=null
// playercolor PLAYER_COLOR_ORANGE=null
// playercolor PLAYER_COLOR_GREEN=null
// playercolor PLAYER_COLOR_PINK=null
// playercolor PLAYER_COLOR_LIGHT_GRAY=null
// playercolor PLAYER_COLOR_LIGHT_BLUE=null
// playercolor PLAYER_COLOR_AQUA=null
// playercolor PLAYER_COLOR_BROWN=null
// playercolor PLAYER_COLOR_MAROON=null
// playercolor PLAYER_COLOR_NAVY=null
// playercolor PLAYER_COLOR_TURQUOISE=null
// playercolor PLAYER_COLOR_VIOLET=null
// playercolor PLAYER_COLOR_WHEAT=null
// playercolor PLAYER_COLOR_PEACH=null
// playercolor PLAYER_COLOR_MINT=null
// playercolor PLAYER_COLOR_LAVENDER=null
// playercolor PLAYER_COLOR_COAL=null
// playercolor PLAYER_COLOR_SNOW=null
// playercolor PLAYER_COLOR_EMERALD=null
// playercolor PLAYER_COLOR_PEANUT=null
// alliancetype ALLIANCE_PASSIVE=null
// alliancetype ALLIANCE_HELP_REQUEST=null
// alliancetype ALLIANCE_HELP_RESPONSE=null
// alliancetype ALLIANCE_SHARED_XP=null
// alliancetype ALLIANCE_SHARED_SPELLS=null
// alliancetype ALLIANCE_SHARED_VISION=null
// alliancetype ALLIANCE_SHARED_CONTROL=null
// alliancetype ALLIANCE_SHARED_ADVANCED_CONTROL=null
// version VERSION_REIGN_OF_CHAOS=null
// racepreference RACE_PREF_HUMAN=null
// mapcontrol MAP_CONTROL_USER=null
// mapcontrol MAP_CONTROL_RESCUABLE=null
// mapflag MAP_LOCK_SPEED=null
// placement MAP_PLACEMENT_TEAMS_TOGETHER=null
// startlocprio MAP_LOC_PRIO_LOW=null
// startlocprio MAP_LOC_PRIO_HIGH=null
// playerslotstate PLAYER_SLOT_STATE_PLAYING=null
// volumegroup SOUND_VOLUMEGROUP_UNITMOVEMENT=null
// volumegroup SOUND_VOLUMEGROUP_UNITSOUNDS=null
// volumegroup SOUND_VOLUMEGROUP_COMBAT=null
// volumegroup SOUND_VOLUMEGROUP_SPELLS=null
// volumegroup SOUND_VOLUMEGROUP_UI=null
// volumegroup SOUND_VOLUMEGROUP_MUSIC=null
// volumegroup SOUND_VOLUMEGROUP_AMBIENTSOUNDS=null
// volumegroup SOUND_VOLUMEGROUP_FIRE=null
// fgamestate GAME_STATE_TIME_OF_DAY=null
// playerstate PLAYER_STATE_RESOURCE_GOLD=null
// playerstate PLAYER_STATE_RESOURCE_LUMBER=null
// playerstate PLAYER_STATE_GIVES_BOUNTY=null
// playerstate PLAYER_STATE_GOLD_GATHERED=null
// playerstate PLAYER_STATE_LUMBER_GATHERED=null
// unitstate UNIT_STATE_LIFE=null
// unitstate UNIT_STATE_MAX_LIFE=null
// unitstate UNIT_STATE_MANA=null
// unitstate UNIT_STATE_MAX_MANA=null
// playerevent EVENT_PLAYER_LEAVE=null
// playerevent EVENT_PLAYER_END_CINEMATIC=null
// playerunitevent EVENT_PLAYER_UNIT_ATTACKED=null
// playerunitevent EVENT_PLAYER_UNIT_RESCUED=null
// playerunitevent EVENT_PLAYER_UNIT_SELECTED=null
// playerunitevent EVENT_PLAYER_UNIT_CONSTRUCT_START=null
// playerunitevent EVENT_PLAYER_UNIT_CONSTRUCT_FINISH=null
// playerunitevent EVENT_PLAYER_UNIT_UPGRADE_FINISH=null
// playerunitevent EVENT_PLAYER_UNIT_RESEARCH_FINISH=null
// playerunitevent EVENT_PLAYER_UNIT_ISSUED_ORDER=null
// unitevent EVENT_UNIT_DAMAGED=null
// playerevent EVENT_PLAYER_ARROW_LEFT_DOWN=null
// playerevent EVENT_PLAYER_ARROW_LEFT_UP=null
// playerevent EVENT_PLAYER_ARROW_RIGHT_DOWN=null
// playerevent EVENT_PLAYER_ARROW_RIGHT_UP=null
// playerevent EVENT_PLAYER_ARROW_DOWN_DOWN=null
// playerevent EVENT_PLAYER_ARROW_DOWN_UP=null
// playerevent EVENT_PLAYER_ARROW_UP_DOWN=null
// playerevent EVENT_PLAYER_ARROW_UP_UP=null
// playerevent EVENT_PLAYER_MOUSE_DOWN=null
// playerevent EVENT_PLAYER_MOUSE_UP=null
// playerevent EVENT_PLAYER_MOUSE_MOVE=null
// playerunitevent EVENT_PLAYER_UNIT_SELL_ITEM=null
// playerunitevent EVENT_PLAYER_UNIT_SPELL_CAST=null
// playerunitevent EVENT_PLAYER_UNIT_SPELL_EFFECT=null
// limitop LESS_THAN=null
// limitop EQUAL=null
// limitop GREATER_THAN_OR_EQUAL=null
// unittype UNIT_TYPE_HERO=null
// unittype UNIT_TYPE_STRUCTURE=null
// itemtype ITEM_TYPE_PERMANENT=null
// itemtype ITEM_TYPE_CHARGED=null
// itemtype ITEM_TYPE_ARTIFACT=null
// camerafield CAMERA_FIELD_TARGET_DISTANCE=null
// integer CAMERA_MARGIN_LEFT=0
// integer CAMERA_MARGIN_RIGHT=0
// integer CAMERA_MARGIN_TOP=0
// integer CAMERA_MARGIN_BOTTOM=0
group udg_Supplyhorses=null
location udg_Temp_Point=null
force udg_AllPlayerUnits=null
integer array udg_Unhappiness
location udg_GHoriTP=null
location udg_GVertRP=null
rect udg_GHoriDetectCenter=null
rect udg_GVertDetectCenter=null
group udg_GateMovingUnits1=null
group udg_BuildingRangeCheck=null
location udg_BuildingRangeCheckPoint=null
group udg_Supplyhorses2=null
rect gg_rct_CITY_WE_Burgh=null
rect gg_rct_CITY_WE_Cardiff=null
rect gg_rct_CITY_WE_Galway=null
rect gg_rct_CITY_WE_Zagreb=null
rect gg_rct_CITY_WE_Ragusa=null
rect gg_rct_CITY_BYZ_Durrazo=null
rect gg_rct_CITY_BYZ_Adrianopolis=null
rect gg_rct_CITY_Byz_Thessalonika=null
rect gg_rct_CITY_BYZ_Constantinople=null
rect gg_rct_CITY_WE_Warwick=null
rect gg_rct_CITY_BYZ_Scopia=null
rect gg_rct_CITY_WE_Vienna=null
rect gg_rct_CITY_WE_Prague=null
rect gg_rct_CITY_WE_Esztergom=null
rect gg_rct_CITY_WE_Stettin=null
rect gg_rct_CITY_WE_Krakow=null
rect gg_rct_CITY_WE_Wroclaw=null
rect gg_rct_CITY_EE_Constanta=null
rect gg_rct_CITY_EE_Targoviste=null
rect gg_rct_CITY_WE_Brasov=null
rect gg_rct_CITY_WE_Belgrade=null
rect gg_rct_CITY_WE_Flensburg=null
rect gg_rct_CITY_WE_Roskilde=null
rect gg_rct_CITY_WE_Aarhus=null
rect gg_rct_CITY_WE_Madgeburg=null
rect gg_rct_CITY_EE_Sofia=null
rect gg_rct_CITY_WE_Plock=null
rect gg_rct_CITY_WE_Poznan=null
rect gg_rct_CITY_WE_Kassa=null
rect gg_rct_CITY_WE_Varad=null
rect gg_rct_CITY_EE_Konigsberg=null
rect gg_rct_CITY_EE_Riga=null
rect gg_rct_CITY_WE_Fictional_2=null
rect gg_rct_CITY_EE_Hrodna=null
rect gg_rct_CITY_EE_Vilnius=null
rect gg_rct_CITY_EE_Caffa=null
rect gg_rct_CITY_EE_Pskov=null
rect gg_rct_CITY_EE_Reval=null
rect gg_rct_CITY_EE_Novgorod=null
rect gg_rct_CITY_EE_Polotsk=null
rect gg_rct_CITY_EE_Halych=null
rect gg_rct_CITY_WE_Groningen=null
rect gg_rct_CITY_ME_Tunis=null
rect gg_rct_CITY_EE_Azaq=null
rect gg_rct_CITY_EE_Kiev=null
rect gg_rct_CITY_EE_Minsk=null
rect gg_rct_CITY_EE_Smolensk=null
rect gg_rct_CITY_ME_Sinop=null
rect gg_rct_CITY_ME_Isparta=null
rect gg_rct_CITY_ME_Kayseri=null
rect gg_rct_CITY_ME_Adana=null
rect gg_rct_CITY_ME_Konya=null
rect gg_rct_CITY_ME_Antioch=null
rect gg_rct_CITY_BYZ_Trebizond=null
rect gg_rct_CITY_BYZ_Nicosia=null
rect gg_rct_CITY_ME_JERUSALEM=null
rect gg_rct_CITY_ME_Edessa=null
rect gg_rct_CITY_BYZ_Smyrna=null
rect gg_rct_CITY_ME_Ankara=null
rect gg_rct_CITY_BYZ_Nicae=null
rect gg_rct_CITY_ME_Fes=null
rect gg_rct_CITY_ME_Oran=null
rect gg_rct_CITY_ME_Algiers=null
rect gg_rct_CITY_ME_Mahdya=null
rect gg_rct_CITY_ME_Tripoli=null
rect gg_rct_CITY_ME_Benghazi=null
rect gg_rct_CITY_ME_Medina=null
rect gg_rct_CITY_ME_Alexandria=null
rect gg_rct_CITY_ME_Damietta=null
rect gg_rct_CITY_ME_Cairo=null
rect gg_rct_CITY_EE_Timutarakan=null
rect gg_rct_CITY_EE_Baia=null
rect gg_rct_CITY_EE_Zhytomyr=null
rect gg_rct_CITY_EE_Oleshe=null
rect gg_rct_CITY_EE_Dnipro=null
rect gg_rct_CITY_EE_Moscow=null
rect gg_rct_CITY_EE_Bryansk=null
rect gg_rct_CITY_ME_Yerevan=null
rect gg_rct_CITY_EE_Sarkel=null
rect gg_rct_CITY_BYZ_Kutaisi=null
rect gg_rct_CITY_BYZ_Tbilisi=null
rect gg_rct_CITY_ME_Damascus=null
rect gg_rct_CITY_ME_Tartus=null
rect gg_rct_CITY_ME_Gaza=null
rect gg_rct_CITY_ME_Mosul=null
rect gg_rct_CITY_ME_Acre=null
rect gg_rct_CITY_ME_Al_Aqaba=null
rect gg_rct_CITY_ME_Quarisiya=null
rect gg_rct_CITY_ME_Tamiya=null
rect gg_rct_CITY_ME_Diyarbakir=null
rect gg_rct_CITY_ME_Erez=null
rect gg_rct_CITY_WE_Salzburg=null
rect gg_rct_CITY_WE_Innsbruck=null
rect gg_rct_CITY_WE_Cologne=null
rect gg_rct_CITY_WE_Frankfurt=null
rect gg_rct_Hamburg_CITY=null
rect gg_rct_CITY_ME_Palma=null
rect gg_rct_CITY_EE_Astrakhan=null
rect gg_rct_CITY_EE_Ryazan=null
rect gg_rct_CITY_WE_Edinburgh=null
rect gg_rct_CITY_WE_Aberdeen=null
rect gg_rct_CITY_WE_Inverness=null
rect gg_rct_CITY_WE_York=null
rect gg_rct_CITY_WE_Dublin=null
rect gg_rct_CITY_WE_Ireland=null
rect gg_rct_CITY_WE_Caernarfon=null
rect gg_rct_CITY_WE_London=null
rect gg_rct_CITY_WE_Winchester=null
rect gg_rct_CITY_WE_Exeter=null
rect gg_rct_CITY_WE_Caen=null
rect gg_rct_CITY_WE_Rheims=null
rect gg_rct_CITY_WE_Paris=null
rect gg_rct_CITY_WE_Dijon=null
rect gg_rct_CITY_WE_Clermont=null
rect gg_rct_CITY_WE_Toulouse=null
rect gg_rct_CITY_WE_Bordeaux=null
rect gg_rct_CITY_WE_Zaragoza=null
rect gg_rct_CITY_WE_Barcelona=null
rect gg_rct_CITY_WE_Leon=null
rect gg_rct_CITY_WE_Burgos=null
rect gg_rct_CITY_ME_Madrid=null
rect gg_rct_CITY_WE_Salamanca=null
rect gg_rct_CITY_ME_Lisbon=null
rect gg_rct_CITY_WE_Pamplona=null
rect gg_rct_CITY_WE_Marseille=null
rect gg_rct_CITY_WE_Bruges=null
rect gg_rct_CITY_WE_Antwerp=null
rect gg_rct_CITY_WE_Genoa=null
rect gg_rct_CITY_WE_Milan=null
rect gg_rct_CITY_WE_Venice=null
rect gg_rct_CITY_WE_Bologna=null
rect gg_rct_CITY_WE_Pisa=null
rect gg_rct_CITY_WE_Ancona=null
rect gg_rct_CITY_WE_Rome=null
rect gg_rct_CITY_ME_Granada=null
rect gg_rct_CITY_ME_Cordoba=null
rect gg_rct_CITY_ME_Murcia=null
rect gg_rct_CITY_ME_Valencia=null
rect gg_rct_CITY_WE_Nuremburg=null
rect gg_rct_CITY_WE_Bern=null
rect gg_rct_CITY_WE_Lyon=null
rect gg_rct_CITY_WE_Lund=null
rect gg_rct_CITY_WE_Skara=null
rect gg_rct_CITY_WE_Oslo=null
rect gg_rct_CITY_WE_Eikundarsund=null
rect gg_rct_CITY_WE_Bergen=null
rect gg_rct_CITY_WE_Visby=null
rect gg_rct_CITY_WE_Nykoping=null
rect gg_rct_CITY_ME_Silves=null
rect gg_rct_CITY_ME_Marakesh=null
rect gg_rct_CITY_ME_Luxor=null
rect gg_rct_CITY_WE_Rennes=null
rect gg_rct_CITY_WE_Angers=null
rect gg_rct_CITY_WE_Ajaccio=null
rect gg_rct_CITY_WE_Cagliari=null
rect gg_rct_CITY_WE_Naples=null
rect gg_rct_CITY_WE_Italy=null
rect gg_rct_CITY_WE_Bari=null
rect gg_rct_CITY_WE_Palermo=null
rect gg_rct_CITY_WE_Syracuse=null
rect gg_rct_CITY_WE_Metz=null
rect gg_rct_CITY_BYZ_Balkan=null
rect gg_rct_CITY_BYZ_Athens=null
rect gg_rct_CITY_BYZ_Rhodes=null
rect gg_rct_CITY_EE_Turku=null
rect gg_rct_CITY_BYZ_Fictional=null
rect gg_rct_CITY_ME_Badajoz=null
rect gg_rct_CITY_WE_Oporto=null
rect gg_rct_CITY_WE_Stockholm=null
rect gg_rct_CITY_WE_Kalmar=null
rect gg_rct_CITY_BYZ_Corinth=null
rect gg_rct_CITY_BYZ_Arta=null
rect gg_rct_CITY_BYZ_Candia=null
rect gg_rct_CITY_ME_Kerak=null
rect gg_rct_CITY_ME_Baghdad=null
rect gg_rct_CITY_BYZ_Canakkale=null
rect gg_rct_CITY_EE_Russia=null
rect gg_rct_CITY_WE_Budapest=null
sound gg_snd_Warning=null
trigger gg_trg_Melee_Initialization=null
trigger gg_trg_F9=null
trigger gg_trg_Gate_Opening=null
trigger gg_trg_Gate_Closing_WoodGate_V=null
trigger gg_trg_Gate_Closing_WoodGate_H=null
trigger gg_trg_Gate_Closing_IronGate_V=null
trigger gg_trg_Gate_Closing_IronGate_H=null
trigger gg_trg_Supply_Horses=null
trigger gg_trg_Supply_Horse_2=null
trigger gg_trg_FarmHouse=null
trigger gg_trg_Thatched_Cottage_1=null
trigger gg_trg_Thatched_Cottage_2=null
trigger gg_trg_Thatched_Cottage_3=null
trigger gg_trg_Thatched_Cottage_4=null
trigger gg_trg_Spearmen_1=null
trigger gg_trg_Spearmen_2=null
trigger gg_trg_Heavy_Infantry_1=null
trigger gg_trg_Heavy_Infantry_2=null
trigger gg_trg_Archer_1=null
trigger gg_trg_Archer_2=null
trigger gg_trg_Light_Infantry_1=null
trigger gg_trg_Light_Infantry_2=null
trigger gg_trg_Pikemen_1=null
trigger gg_trg_Pikemen_2=null
trigger gg_trg_Light_Cavalry_1=null
trigger gg_trg_Light_Cavalry_2=null
trigger gg_trg_Heavy_Cavalry_1=null
trigger gg_trg_Heavy_Cavalry_2=null
trigger gg_trg_Skirmisher=null
trigger gg_trg_Arquebusers=null
trigger gg_trg_Supply_Horse=null
trigger gg_trg_Disabled_units_at_beginning=null
trigger gg_trg_Spearmen_1_Byzantine=null
trigger gg_trg_Spearmen_2_Byzantine=null
trigger gg_trg_Heavy_Infantry_1_Byzantine=null
trigger gg_trg_Heavy_Infantry_2_Byzantine=null
trigger gg_trg_Archer_1_Byzantine=null
trigger gg_trg_Archer_2_Byzantine=null
trigger gg_trg_Light_Cavalry_1_Byzantine=null
trigger gg_trg_Heavy_Cavalry_1_Byzantine=null
trigger gg_trg_Heavy_Cavalry_2_Byzantine=null
trigger gg_trg_Skirmisher_Byzantine=null
trigger gg_trg_Missile_Cavalry_Byzantine=null
trigger gg_trg_Disabled_units_Byzantine=null
trigger gg_trg_ME_Spearmen_1=null
trigger gg_trg_ME_Spearmen_2=null
trigger gg_trg_ME_Archer_1=null
trigger gg_trg_ME_Archer_2=null
trigger gg_trg_ME_Light_Infantry_1=null
trigger gg_trg_ME_Light_Infantry_2=null
trigger gg_trg_ME_Light_Cavalry_1=null
trigger gg_trg_ME_Light_Cavalry_2=null
trigger gg_trg_ME_Heavy_Cavalry_1=null
trigger gg_trg_ME_Heavy_Cavalry_2=null
trigger gg_trg_ME_Skirmisher=null
trigger gg_trg_ME_Missile_Cavalry=null
trigger gg_trg_Disabled_units_ME=null
trigger gg_trg_Settle=null
trigger gg_trg_Settlement_Range_Check=null
trigger gg_trg_Church_Range_Check=null
trigger gg_trg_Settlement_Aura=null
trigger gg_trg_Capitol_City_Hall_Up_Copy=null
trigger gg_trg_Capitol_Castle_T3=null
player Basics_DUMMY_PLAYER=null
real array City_lastClickTime
unit array City_lastClickUnit
playerevent ClosureEvents_EVENT_PLAYER_CHAT_FILTER=null
trigger ClosureEvents_unitTrig=null
trigger ClosureEvents_leaveTrig=null
trigger ClosureEvents_keyTrig=null
integer array ClosureEvents_eventidToIndex
integer ClosureEvents_eventTypeCounter=0
integer EventListener_castMap=0
integer EventListener_castMapCasters=0
integer array EventListener_generalListenersFirsts
integer array EventListener_unitListenersFirsts
integer array EventListener_eventId
integer array EventListener_next
integer array EventListener_prev
integer array OnCastListener_next
integer array OnCastListener_prev
integer array OnCastListener_abilId
unit array OnCastListener_eventUnit
integer array ClosureForGroups_tempCallbacks
integer ClosureTimers_x=0
timer array CallbackSingle_t
integer Colors_COLOR_BLACK_red=0
integer Colors_COLOR_BLACK_green=0
integer Colors_COLOR_BLACK_blue=0
integer Colors_COLOR_BLACK_alpha=0
integer array Colors_PLAYER_COLORS_red
integer array Colors_PLAYER_COLORS_green
integer array Colors_PLAYER_COLORS_blue
string array Colors_hexs
integer Colors_decs=0
real DummyRecycler_ANGLE_DEGREE=0.
integer array ArrayQueue_rp
integer array ArrayQueue_size
integer array DummyRecycler_angleQueues
hashtable ErrorHandling_HT=null
timer GameTimer_gameTimer=null
real GameTimer_currentTime=0.
group Group_iterGroup=null
hashtable HashList_ht=null
hashtable HashList_occurences=null
integer array HashList_size
integer array IterableMap_keys
integer array result
integer array LLEntry_elem
integer array LLEntry_prev
integer array LLEntry_next
integer array LLIterator_dummy
integer array LLIterator_current
integer array LLIterator_parent
boolean array LLIterator_destroyOnClose
integer array LinkedList_dummy
integer array LinkedList_size
real MainInit_SPAWN_POINT_x=0.
real MainInit_SPAWN_POINT_y=0.
string array MainInit_ksCT
force Main_fWE=null
force Main_fEE=null
force Main_fME=null
force Main_fBZ=null
force array Main_forces
integer array Main_forces_colors_red
integer array Main_forces_colors_green
integer array Main_forces_colors_blue
string array Main_ksFactionAdjColored
integer array Main_kStartingUnits
real Main_INF_REAL=0.
string array Main_ksWarningWE
string array Main_ksWarningEE
string array Main_ksWarningME
string array Main_ksWarningBZ
string array Main_ksNoteWE
string array Main_ksNoteEE
string array Main_ksNoteME
string array Main_ksNoteBZ
string array Main_ksGoodNewsWE
string array Main_ksGoodNewsEE
string array Main_ksGoodNewsME
string array Main_ksGoodNewsBZ
string array Main_ksAttentionWE
string array Main_ksAttentionEE
string array Main_ksAttentionME
string array Main_ksAttentionBZ
integer Main_kCityTypes=0
integer Main_cityCount=0
integer array Main_cities
integer array Main_player_stats
timer Main_global_timer=null
real Main_elapsed_time=0.
unit array City_city_unit
string array City_city_name
integer array City_force_id
real array City_city_pos_x
real array City_city_pos_y
integer array this
integer array PlayerStats_unhappiness
integer array PlayerStats_force_id
player array PlayerStats_pl
boolean array PlayerStats_is_in_game
rect MapBounds_playableMapRect=null
rect MapBounds_boundRect=null
region MapBounds_boundRegion=null
real MapBounds_playableMin_x=0.
real MapBounds_playableMin_y=0.
real MapBounds_playableMax_x=0.
real MapBounds_playableMax_y=0.
real MapBounds_boundMin_x=0.
real MapBounds_boundMin_y=0.
real MapBounds_boundMax_x=0.
real MapBounds_boundMax_y=0.
trigger OnUnitEnterLeave_eventTrigger=null
group OnUnitEnterLeave_preplacedUnits=null
unit array OnUnitEnterLeave_tempUnits
integer OnUnitEnterLeave_tempUnitsCount=0
player array Player_players
player Player_localPlayer=null
playercolor Playercolor_PLAYER_COLOR_BLACK_AGGRESSIVE=null
playercolor Playercolor_PLAYER_COLOR_UNKNOWN1=null
playercolor Playercolor_PLAYER_COLOR_UNKNOWN2=null
playercolor Playercolor_PLAYER_COLOR_BLACK_PASSIVE=null
playercolor array Playercolor_LOOKUP
group Preloader_dumg=null
unit Preloader_dum=null
trigger array RegisterEvents_t
integer RegisterEvents_onCastMap=0
string array StringUtils_c2s
integer StringUtils_MAX_INDEX=0
hashtable Table_ht=null
timer array TimerUtils_freeTimers
integer TimerUtils_freeTimersCount=0
integer TimerUtils_timerData=0
integer TypeCasting_typecastdata=0
trigger UnitIndexer_onIndexTrigger=null
trigger UnitIndexer_onDeindexTrigger=null
unit UnitIndexer_indexedUnit=null
unit UnitIndexer_deindexedUnit=null
unit array UnitIndex__unit
integer array EventListener_nextFree
integer EventListener_firstFree=0
integer EventListener_maxIndex=0
integer array EventListener_typeId
integer array CallbackSingle_nextFree
integer CallbackSingle_firstFree=0
integer CallbackSingle_maxIndex=0
integer array CallbackSingle_typeId
integer OnCastListener_firstFree=0
integer array OnCastListener_typeId
integer array ForGroupCallback_nextFree
integer ForGroupCallback_firstFree=0
integer ForGroupCallback_maxIndex=0
integer array ForGroupCallback_typeId
integer array ArrayQueue_nextFree
integer ArrayQueue_firstFree=0
integer ArrayQueue_maxIndex=0
integer array ArrayQueue_typeId
integer array HashList_typeId
integer array Table_nextFree
integer Table_firstFree=0
integer Table_maxIndex=0
integer array Table_typeId
integer array Comparator_nextFree
integer Comparator_firstFree=0
integer Comparator_maxIndex=0
integer array LLEntry_nextFree
integer LLEntry_firstFree=0
integer LLEntry_maxIndex=0
integer array LLIterator_nextFree
integer LLIterator_firstFree=0
integer LLIterator_maxIndex=0
integer array LLIterator_typeId
integer array LinkedList_nextFree
integer LinkedList_firstFree=0
integer LinkedList_maxIndex=0
integer array LinkedList_typeId
integer array City_nextFree
integer City_firstFree=0
integer City_maxIndex=0
integer array City_typeId
integer array PlayerStats_nextFree
integer PlayerStats_firstFree=0
integer PlayerStats_maxIndex=0
integer array PlayerStats_typeId
integer array IdGenerator_nextFree
integer IdGenerator_firstFree=0
integer IdGenerator_maxIndex=0
integer array UnitIndex_nextFree
integer UnitIndex_firstFree=0
integer UnitIndex_maxIndex=0
integer array UnitIndex_typeId
integer wurst_stack_depth=0
string array wurst_stack
integer playercolor_toColor_return_red=0
integer playercolor_toColor_return_green=0
integer playercolor_toColor_return_blue=0
integer array PlayerStats_alliance_states_0
integer array PlayerStats_alliance_states_1
integer array PlayerStats_alliance_states_2
integer array PlayerStats_alliance_states_3
integer array PlayerStats_alliance_states_4
integer array PlayerStats_alliance_states_5
integer array PlayerStats_alliance_states_6
integer array PlayerStats_alliance_states_7
integer array PlayerStats_alliance_states_8
integer array PlayerStats_alliance_states_9
integer array PlayerStats_alliance_states_10
integer array PlayerStats_alliance_states_11
integer array PlayerStats_alliance_states_12
integer array PlayerStats_alliance_states_13
integer array PlayerStats_alliance_states_14
integer array PlayerStats_alliance_states_15
integer array PlayerStats_alliance_states_16
integer array PlayerStats_alliance_states_17
integer array PlayerStats_alliance_states_18
integer array PlayerStats_alliance_states_19
integer array PlayerStats_alliance_states_20
integer array PlayerStats_alliance_states_21
integer array PlayerStats_alliance_states_22
integer array PlayerStats_alliance_states_23
code ref_function_Trig_F9_Actions=null
code ref_function_Trig_Gate_Opening_Actions=null
code ref_function_Trig_Gate_Closing_WoodGate_V_Func005A=null
code ref_function_Trig_Gate_Closing_WoodGate_V_Conditions=null
code ref_function_Trig_Gate_Closing_WoodGate_V_Actions=null
code ref_function_Trig_Gate_Closing_WoodGate_H_Func005A=null
code ref_function_Trig_Gate_Closing_WoodGate_H_Conditions=null
code ref_function_Trig_Gate_Closing_WoodGate_H_Actions=null
code ref_function_Trig_Gate_Closing_IronGate_V_Func005A=null
code ref_function_Trig_Gate_Closing_IronGate_V_Conditions=null
code ref_function_Trig_Gate_Closing_IronGate_V_Actions=null
code ref_function_Trig_Gate_Closing_IronGate_H_Func005A=null
code ref_function_Trig_Gate_Closing_IronGate_H_Conditions=null
code ref_function_Trig_Gate_Closing_IronGate_H_Actions=null
code ref_function_Trig_Supply_Horses_Func002A=null
code ref_function_Trig_Supply_Horses_Actions=null
code ref_function_Trig_Supply_Horse_2_Func002A=null
code ref_function_Trig_Supply_Horse_2_Actions=null
code ref_function_Trig_FarmHouse_Conditions=null
code ref_function_Trig_FarmHouse_Actions=null
code ref_function_Trig_Thatched_Cottage_1_Conditions=null
code ref_function_Trig_Thatched_Cottage_1_Actions=null
code ref_function_Trig_Thatched_Cottage_2_Conditions=null
code ref_function_Trig_Thatched_Cottage_2_Actions=null
code ref_function_Trig_Thatched_Cottage_3_Conditions=null
code ref_function_Trig_Thatched_Cottage_3_Actions=null
code ref_function_Trig_Thatched_Cottage_4_Conditions=null
code ref_function_Trig_Thatched_Cottage_4_Actions=null
code ref_function_Trig_Spearmen_1_Conditions=null
code ref_function_Trig_Spearmen_1_Actions=null
code ref_function_Trig_Spearmen_2_Conditions=null
code ref_function_Trig_Spearmen_2_Actions=null
code ref_function_Trig_Heavy_Infantry_1_Conditions=null
code ref_function_Trig_Heavy_Infantry_1_Actions=null
code ref_function_Trig_Heavy_Infantry_2_Conditions=null
code ref_function_Trig_Heavy_Infantry_2_Actions=null
code ref_function_Trig_Archer_1_Conditions=null
code ref_function_Trig_Archer_1_Actions=null
code ref_function_Trig_Archer_2_Conditions=null
code ref_function_Trig_Archer_2_Actions=null
code ref_function_Trig_Light_Infantry_1_Conditions=null
code ref_function_Trig_Light_Infantry_1_Actions=null
code ref_function_Trig_Light_Infantry_2_Conditions=null
code ref_function_Trig_Light_Infantry_2_Actions=null
code ref_function_Trig_Pikemen_1_Conditions=null
code ref_function_Trig_Pikemen_1_Actions=null
code ref_function_Trig_Pikemen_2_Conditions=null
code ref_function_Trig_Pikemen_2_Actions=null
code ref_function_Trig_Light_Cavalry_1_Conditions=null
code ref_function_Trig_Light_Cavalry_1_Actions=null
code ref_function_Trig_Light_Cavalry_2_Conditions=null
code ref_function_Trig_Light_Cavalry_2_Actions=null
code ref_function_Trig_Heavy_Cavalry_1_Conditions=null
code ref_function_Trig_Heavy_Cavalry_1_Actions=null
code ref_function_Trig_Heavy_Cavalry_2_Conditions=null
code ref_function_Trig_Heavy_Cavalry_2_Actions=null
code ref_function_Trig_Skirmisher_Conditions=null
code ref_function_Trig_Skirmisher_Actions=null
code ref_function_Trig_Arquebusers_Conditions=null
code ref_function_Trig_Arquebusers_Actions=null
code ref_function_Trig_Supply_Horse_Conditions=null
code ref_function_Trig_Supply_Horse_Actions=null
code ref_function_Trig_Disabled_units_at_beginning_Func002A=null
code ref_function_Trig_Disabled_units_at_beginning_Actions=null
code ref_function_Trig_Spearmen_1_Byzantine_Conditions=null
code ref_function_Trig_Spearmen_1_Byzantine_Actions=null
code ref_function_Trig_Spearmen_2_Byzantine_Conditions=null
code ref_function_Trig_Spearmen_2_Byzantine_Actions=null
code ref_function_Trig_Heavy_Infantry_1_Byzantine_Conditions=null
code ref_function_Trig_Heavy_Infantry_1_Byzantine_Actions=null
code ref_function_Trig_Heavy_Infantry_2_Byzantine_Conditions=null
code ref_function_Trig_Heavy_Infantry_2_Byzantine_Actions=null
code ref_function_Trig_Archer_1_Byzantine_Conditions=null
code ref_function_Trig_Archer_1_Byzantine_Actions=null
code ref_function_Trig_Archer_2_Byzantine_Conditions=null
code ref_function_Trig_Archer_2_Byzantine_Actions=null
code ref_function_Trig_Light_Cavalry_1_Byzantine_Conditions=null
code ref_function_Trig_Light_Cavalry_1_Byzantine_Actions=null
code ref_function_Trig_Heavy_Cavalry_1_Byzantine_Conditions=null
code ref_function_Trig_Heavy_Cavalry_1_Byzantine_Actions=null
code ref_function_Trig_Heavy_Cavalry_2_Byzantine_Conditions=null
code ref_function_Trig_Heavy_Cavalry_2_Byzantine_Actions=null
code ref_function_Trig_Skirmisher_Byzantine_Conditions=null
code ref_function_Trig_Skirmisher_Byzantine_Actions=null
code ref_function_Trig_Missile_Cavalry_Byzantine_Conditions=null
code ref_function_Trig_Missile_Cavalry_Byzantine_Actions=null
code ref_function_Trig_Disabled_units_Byzantine_Func002A=null
code ref_function_Trig_Disabled_units_Byzantine_Actions=null
code ref_function_Trig_ME_Spearmen_1_Conditions=null
code ref_function_Trig_ME_Spearmen_1_Actions=null
code ref_function_Trig_ME_Spearmen_2_Conditions=null
code ref_function_Trig_ME_Spearmen_2_Actions=null
code ref_function_Trig_ME_Archer_1_Conditions=null
code ref_function_Trig_ME_Archer_1_Actions=null
code ref_function_Trig_ME_Archer_2_Conditions=null
code ref_function_Trig_ME_Archer_2_Actions=null
code ref_function_Trig_ME_Light_Infantry_1_Conditions=null
code ref_function_Trig_ME_Light_Infantry_1_Actions=null
code ref_function_Trig_ME_Light_Infantry_2_Conditions=null
code ref_function_Trig_ME_Light_Infantry_2_Actions=null
code ref_function_Trig_ME_Light_Cavalry_1_Conditions=null
code ref_function_Trig_ME_Light_Cavalry_1_Actions=null
code ref_function_Trig_ME_Light_Cavalry_2_Conditions=null
code ref_function_Trig_ME_Light_Cavalry_2_Actions=null
code ref_function_Trig_ME_Heavy_Cavalry_1_Conditions=null
code ref_function_Trig_ME_Heavy_Cavalry_1_Actions=null
code ref_function_Trig_ME_Heavy_Cavalry_2_Conditions=null
code ref_function_Trig_ME_Heavy_Cavalry_2_Actions=null
code ref_function_Trig_ME_Skirmisher_Conditions=null
code ref_function_Trig_ME_Skirmisher_Actions=null
code ref_function_Trig_ME_Missile_Cavalry_Conditions=null
code ref_function_Trig_ME_Missile_Cavalry_Actions=null
code ref_function_Trig_Disabled_units_ME_Func002A=null
code ref_function_Trig_Disabled_units_ME_Actions=null
code ref_function_Trig_Settle_Func001002=null
code ref_function_Trig_Settle_Actions=null
code ref_function_Trig_Settlement_Range_Check_Func003A=null
code ref_function_Trig_Settlement_Range_Check_Conditions=null
code ref_function_Trig_Settlement_Range_Check_Actions=null
code ref_function_Trig_Church_Range_Check_Func003A=null
code ref_function_Trig_Church_Range_Check_Conditions=null
code ref_function_Trig_Church_Range_Check_Actions=null
code ref_function_Trig_Settlement_Aura_Conditions=null
code ref_function_Trig_Settlement_Aura_Actions=null
code ref_function_Trig_Capitol_City_Hall_Up_Copy_Conditions=null
code ref_function_Trig_Capitol_City_Hall_Up_Copy_Actions=null
code ref_function_Trig_Capitol_Castle_T3_Conditions=null
code ref_function_Trig_Capitol_Castle_T3_Actions=null
code ref_function_Trig_Melee_Initialization_Actions=null
code ref_function_init_Abilities=null
code ref_function_init_AbilityIds=null
code ref_function_init_Real=null
code ref_function_init_Integer=null
code ref_function_init_Angle=null
code ref_function_init_String=null
code ref_function_init_Vectors=null
code ref_function_init_Player=null
code ref_function_init_Basics=null
code ref_function_init_Buildings=null
code ref_function_init_Maths=null
code ref_function_init_Printing=null
code ref_function_init_GameTimer=null
code ref_function_init_MagicFunctions=null
code ref_function_init_ErrorHandling=null
code ref_function_init_Matrices=null
code ref_function_init_Quaternion=null
code ref_function_init_Table=null
code ref_function_init_Playercolor=null
code ref_function_bridge_init_Colors=null
code ref_function_init_Group=null
code ref_function_init_Lightning=null
code ref_function_init_WeatherEffects=null
code ref_function_bridge_init_TypeCasting=null
code ref_function_init_ClosureForGroups=null
code ref_function_bridge_init_LinkedList=null
code ref_function_init_HashList=null
code ref_function_bridge_init_EventHelper=null
code ref_function_bridge_init_RegisterEvents=null
code ref_function_bridge_init_TimerUtils=null
code ref_function_init_ClosureTimers=null
code ref_function_init_TargetsAllowed=null
code ref_function_init_Doodads=null
code ref_function_init_Icons=null
code ref_function_init_Objects=null
code ref_function_init_Sounds=null
code ref_function_init_Soundsets=null
code ref_function_init_Textures=null
code ref_function_init_UI=null
code ref_function_init_Units=null
code ref_function_init_UnitIds=null
code ref_function_init_MapBounds=null
code ref_function_bridge_init_DummyRecycler=null
code ref_function_bridge_init_StringUtils=null
code ref_function_init_ObjectIds=null
code ref_function_bridge_init_Preloader=null
code ref_function_bridge_init_ObjectIdGenerator=null
code ref_function_bridge_init_OnUnitEnterLeave=null
code ref_function_init_UnitIndexer=null
code ref_function_bridge_init_ClosureEvents=null
code ref_function_bridge_init_Main=null
code ref_function_init_Calendar=null
code ref_function_bridge_init_City=null
code ref_function_init_Commands=null
code ref_function_init_Diplomacy=null
code ref_function_init_Economy=null
code ref_function_bridge_init_MainInit=null
code ref_function_init_OnPlayerLeave=null
code ref_function_City_closure_impl=null
code ref_function_bridge_onClick=null
code ref_function_bridge_City_closure_impl=null
code ref_function_City_closure_impl_2=null
code ref_function_bridge_Settle=null
code ref_function_City_closure_impl_3=null
code ref_function_bridge_City_closure_impl_2=null
code ref_function_bridge_City_closure_impl_3=null
code ref_function_bridge_City_closure_impl_4=null
code ref_function_City_closure_impl_4=null
code ref_function_bridge_City_closure_impl_5=null
code ref_function_bridge_EventListener_generalEventCallback=null
code ref_function_ClosureEvents_closure_impl=null
code ref_function_bridge_ClosureEvents_closure_impl=null
code ref_function_bridge_ClosureEvents_closure_impl_2=null
code ref_function_bridge_ClosureEvents_closure_impl_3=null
code ref_function_bridge_ClosureEvents_closure_impl_4=null
code ref_function_bridge_ClosureEvents_closure_impl_5=null
code ref_function_bridge_ClosureForGroups_closure_impl=null
code ref_function_bridge_CallbackSingle_closure_impl=null
code ref_function_cond=null
code ref_function_action=null
code ref_function_cond_2=null
code ref_function_bridge_action=null
code ref_function_GameTimer_closure_impl=null
code ref_function_Main_closure_impl=null
code ref_function_CinematicTutorial=null
code ref_function_Group_closure_impl=null
code ref_function_bridge_action_2=null
code ref_function_OnUnitEnterLeave_closure_impl=null
code ref_function_OnUnitEnterLeave_closure_impl_2=null
code ref_function_OnUnitEnterLeave_closure_impl_3=null
code ref_function_bridge_UnitIndexer_closure_impl=null
code ref_function_bridge_UnitIndexer_closure_impl_2=null
code ref_function_bridge_RegisterEvents_closure_impl=null
unit createDummytempReturn=null
timer getTimertempReturn=null
trigger triggerFromIndextempReturn=null
endglobals
function CreateNeutralHostileBuildings takes nothing returns nothing
	local player p = Player(PLAYER_NEUTRAL_AGGRESSIVE)
	call CreateUnit(p, 1747989297,  - 1600.0,  - 128.0, 270.000)
	call CreateUnit(p, 1747989297,  - 15040.0, 10816.0, 270.000)
	call CreateUnit(p, 1747989297,  - 256.0,  - 2432.0, 270.000)
	call CreateUnit(p, 1747989297,  - 24320.0, 3904.0, 270.000)
	call CreateUnit(p, 1747989297,  - 23552.0,  - 4544.0, 270.000)
	call CreateUnit(p, 1747989297,  - 23360.0,  - 64.0, 270.000)
	call CreateUnit(p, 1747989297, 2176.0,  - 7744.0, 270.000)
	call CreateUnit(p, 1747989297,  - 6336.0, 8000.0, 270.000)
	call CreateUnit(p, 1747989297, 832.0,  - 5568.0, 270.000)
	call CreateUnit(p, 1747989297,  - 3648.0, 1856.0, 270.000)
	call CreateUnit(p, 1747989042,  - 768.0, 24384.0, 270.000)
	call CreateUnit(p, 1747989297,  - 26304.0,  - 8704.0, 270.000)
	call CreateUnit(p, 1747989297, 2688.0,  - 3008.0, 270.000)
	call CreateUnit(p, 1747989297,  - 5568.0,  - 2752.0, 270.000)
	call CreateUnit(p, 1747989297,  - 3456.0,  - 2880.0, 270.000)
	call CreateUnit(p, 1747989297,  - 6464.0, 1280.0, 270.000)
	call CreateUnit(p, 1747989297,  - 8064.0, 3200.0, 270.000)
	call CreateUnit(p, 1747989297,  - 8768.0, 1984.0, 270.000)
	call CreateUnit(p, 1747989297,  - 7104.0,  - 768.0, 270.000)
	call CreateUnit(p, 1747989297,  - 28544.0, 0.0, 270.000)
	call CreateUnit(p, 1747989297,  - 27840.0,  - 2752.0, 270.000)
	call CreateUnit(p, 1747989297,  - 27008.0, 2688.0, 270.000)
	call CreateUnit(p, 1747989297,  - 17024.0, 512.0, 270.000)
	call CreateUnit(p, 1747989297,  - 21696.0,  - 4224.0, 270.000)
	call CreateUnit(p, 1747989042, 17536.0,  - 9024.0, 270.000)
	call CreateUnit(p, 1747989297, 10816.0,  - 7360.0, 270.000)
	call CreateUnit(p, 1747989297, 12800.0,  - 6912.0, 270.000)
	call CreateUnit(p, 1747989297, 15488.0,  - 7552.0, 270.000)
	call CreateUnit(p, 1747989297, 19072.0,  - 7424.0, 270.000)
	call CreateUnit(p, 1747989297, 15360.0,  - 5568.0, 270.000)
	call CreateUnit(p, 1747989297, 17216.0,  - 8640.0, 270.000)
	call CreateUnit(p, 1747989297, 16960.0,  - 16192.0, 270.000)
	call CreateUnit(p, 1747989297, 6976.0,  - 6592.0, 270.000)
	call CreateUnit(p, 1747989297, 24000.0, 256.0, 270.000)
	call CreateUnit(p, 1747989297,  - 10688.0,  - 384.0, 270.000)
	call CreateUnit(p, 1747989297, 13952.0,  - 11008.0, 270.000)
	call CreateUnit(p, 1747989297,  - 10944.0,  - 4608.0, 270.000)
	call CreateUnit(p, 1747989297,  - 21440.0,  - 8384.0, 270.000)
	call CreateUnit(p, 1747989297, 17472.0, 9472.0, 270.000)
	call CreateUnit(p, 1747989297,  - 16768.0,  - 8064.0, 270.000)
	call CreateUnit(p, 1747989297,  - 9920.0,  - 11264.0, 270.000)
	call CreateUnit(p, 1747989297,  - 7488.0,  - 16256.0, 270.000)
	call CreateUnit(p, 1747989297, 448.0,  - 17600.0, 270.000)
	call CreateUnit(p, 1747989297, 11008.0,  - 18496.0, 270.000)
	call CreateUnit(p, 1747989297, 13248.0,  - 17856.0, 270.000)
	call CreateUnit(p, 1747989297, 12288.0,  - 20864.0, 270.000)
	call CreateUnit(p, 1747989297,  - 11456.0, 11008.0, 270.000)
	call CreateUnit(p, 1747989297,  - 8640.0, 7104.0, 270.000)
	call CreateUnit(p, 1747989297,  - 7360.0, 17088.0, 270.000)
	call CreateUnit(p, 1747989297,  - 5120.0, 14528.0, 270.000)
	call CreateUnit(p, 1747989297, 15488.0,  - 26816.0, 270.000)
	call CreateUnit(p, 1747989297,  - 9600.0, 13120.0, 270.000)
	call CreateUnit(p, 1747989297,  - 11456.0, 14528.0, 270.000)
	call CreateUnit(p, 1747989297,  - 12544.0, 16320.0, 270.000)
	call CreateUnit(p, 1747989297,  - 7680.0, 22272.0, 270.000)
	call CreateUnit(p, 1747989297,  - 6272.0, 21376.0, 270.000)
	call CreateUnit(p, 1747989297,  - 4992.0, 21888.0, 270.000)
	call CreateUnit(p, 1747989297,  - 1280.0, 23936.0, 270.000)
	call CreateUnit(p, 1747989297,  - 3328.0, 23232.0, 270.000)
	call CreateUnit(p, 1747989297,  - 2560.0, 26368.0, 270.000)
	call CreateUnit(p, 1747989297,  - 6528.0, 28288.0, 270.000)
	call CreateUnit(p, 1747989297,  - 9856.0, 28416.0, 270.000)
	call CreateUnit(p, 1747989297,  - 13376.0, 15104.0, 270.000)
	call CreateUnit(p, 1747989297,  - 10688.0, 3520.0, 270.000)
	call CreateUnit(p, 1747989297,  - 9856.0, 5440.0, 270.000)
	call CreateUnit(p, 1747989297,  - 6720.0, 4096.0, 270.000)
	call CreateUnit(p, 1747989297,  - 13632.0, 2368.0, 270.000)
	call CreateUnit(p, 1747989297,  - 10496.0, 17728.0, 270.000)
	call CreateUnit(p, 1747989297,  - 7616.0, 11200.0, 270.000)
	call CreateUnit(p, 1747989297,  - 18688.0, 5760.0, 270.000)
	call CreateUnit(p, 1747989297,  - 25024.0,  - 3008.0, 270.000)
	call CreateUnit(p, 1747989297,  - 20096.0, 1408.0, 270.000)
	call CreateUnit(p, 1747989297,  - 7040.0,  - 7808.0, 270.000)
	call CreateUnit(p, 1747989297,  - 5376.0,  - 9216.0, 270.000)
	call CreateUnit(p, 1747989297, 24896.0,  - 27456.0, 270.000)
	call CreateUnit(p, 1747989297,  - 20352.0, 12224.0, 270.000)
	call CreateUnit(p, 1747989297,  - 13568.0, 5184.0, 270.000)
	call CreateUnit(p, 1747989297,  - 5120.0, 24576.0, 270.000)
	call CreateUnit(p, 1747989297,  - 1856.0, 27776.0, 270.000)
	call CreateUnit(p, 1747989297,  - 16704.0, 24192.0, 270.000)
	call CreateUnit(p, 1747989297,  - 15936.0, 17088.0, 270.000)
	call CreateUnit(p, 1747989297,  - 17792.0, 16064.0, 270.000)
	call CreateUnit(p, 1747989297,  - 20224.0, 21632.0, 270.000)
	call CreateUnit(p, 1747989297,  - 22400.0, 19968.0, 270.000)
	call CreateUnit(p, 1747989297,  - 15872.0, 20544.0, 270.000)
	call CreateUnit(p, 1747989297,  - 19776.0, 16512.0, 270.000)
	call CreateUnit(p, 1747989297,  - 17088.0, 12672.0, 270.000)
	call CreateUnit(p, 1747989297,  - 18560.0, 19712.0, 270.000)
	call CreateUnit(p, 1747989297,  - 15680.0, 26112.0, 270.000)
	call CreateUnit(p, 1747989297,  - 17088.0, 26816.0, 270.000)
	call CreateUnit(p, 1747989297,  - 16704.0, 3584.0, 270.000)
	call CreateUnit(p, 1747989297,  - 11456.0, 7232.0, 270.000)
	call CreateUnit(p, 1747989297,  - 18176.0, 10816.0, 270.000)
	call CreateUnit(p, 1747989297,  - 16000.0, 6016.0, 270.000)
	call CreateUnit(p, 1747989297,  - 8896.0, 26688.0, 270.000)
	call CreateUnit(p, 1747989297, 9216.0,  - 4416.0, 270.000)
	call CreateUnit(p, 1747989297, 6656.0,  - 4480.0, 270.000)
	call CreateUnit(p, 1747989297, 5184.0,  - 1856.0, 270.000)
	call CreateUnit(p, 1747989297, 18624.0,  - 448.0, 270.000)
	call CreateUnit(p, 1747989297, 11008.0,  - 1984.0, 270.000)
	call CreateUnit(p, 1747989297, 14144.0,  - 128.0, 270.000)
	call CreateUnit(p, 1747989297, 8384.0,  - 10368.0, 270.000)
	call CreateUnit(p, 1747989297, 5376.0,  - 12224.0, 270.000)
	call CreateUnit(p, 1747989297, 3392.0,  - 7296.0, 270.000)
	call CreateUnit(p, 1747989297, 12672.0,  - 3904.0, 270.000)
	call CreateUnit(p, 1747989297, 27008.0,  - 11520.0, 270.000)
	call CreateUnit(p, 1747989297,  - 25216.0, 1472.0, 270.000)
	call CreateUnit(p, 1747989297, 23552.0, 11072.0, 270.000)
	call CreateUnit(p, 1747989297,  - 20736.0,  - 2112.0, 270.000)
	call CreateUnit(p, 1747989297,  - 22592.0, 2560.0, 270.000)
	call CreateUnit(p, 1747989297,  - 20864.0, 3136.0, 270.000)
	call CreateUnit(p, 1747989297,  - 17280.0,  - 3136.0, 270.000)
	call CreateUnit(p, 1747989297,  - 3584.0, 4608.0, 270.000)
	call CreateUnit(p, 1747989297, 1536.0, 29440.0, 270.000)
	call CreateUnit(p, 1747989297, 1216.0,  - 960.0, 270.000)
	call CreateUnit(p, 1747989043,  - 7872.0, 17536.0, 270.000)
	call CreateUnit(p, 1747989297,  - 13568.0, 12160.0, 270.000)
	call CreateUnit(p, 1747989297,  - 13696.0, 8064.0, 270.000)
	call CreateUnit(p, 1747989297,  - 4544.0, 11648.0, 270.000)
	call CreateUnit(p, 1747989297,  - 3072.0, 8320.0, 270.000)
	call CreateUnit(p, 1747989297,  - 384.0, 8512.0, 270.000)
	call CreateUnit(p, 1747989297,  - 4992.0, 17280.0, 270.000)
	call CreateUnit(p, 1747989297, 64.0, 12608.0, 270.000)
	call CreateUnit(p, 1747989297,  - 2112.0, 13696.0, 270.000)
	call CreateUnit(p, 1747989297, 4160.0, 5376.0, 270.000)
	call CreateUnit(p, 1747989297, 4224.0, 3904.0, 270.000)
	call CreateUnit(p, 1747989297, 7232.0, 2240.0, 270.000)
	call CreateUnit(p, 1747989297,  - 384.0, 3072.0, 270.000)
	call CreateUnit(p, 1747989297,  - 8128.0, 19968.0, 270.000)
	call CreateUnit(p, 1747989297, 3072.0, 192.0, 270.000)
	call CreateUnit(p, 1747989297, 832.0, 15872.0, 270.000)
	call CreateUnit(p, 1747989297,  - 2304.0, 16064.0, 270.000)
	call CreateUnit(p, 1747989297, 4416.0, 19648.0, 270.000)
	call CreateUnit(p, 1747989297, 1792.0, 6976.0, 270.000)
	call CreateUnit(p, 1747989297, 5888.0, 24960.0, 270.000)
	call CreateUnit(p, 1747989297,  - 1792.0, 19200.0, 270.000)
	call CreateUnit(p, 1747989297, 3008.0, 22784.0, 270.000)
	call CreateUnit(p, 1747989297, 3200.0, 18240.0, 270.000)
	call CreateUnit(p, 1747989297,  - 3712.0,  - 6528.0, 270.000)
	call CreateUnit(p, 1747989297,  - 17216.0, 22208.0, 270.000)
	call CreateUnit(p, 1747989297,  - 18880.0, 17920.0, 270.000)
	call CreateUnit(p, 1747989297,  - 17280.0, 18304.0, 270.000)
	call CreateUnit(p, 1747989297,  - 22272.0, 22400.0, 270.000)
	call CreateUnit(p, 1747989297,  - 10496.0,  - 9152.0, 270.000)
	call CreateUnit(p, 1747989297, 13248.0, 5120.0, 270.000)
	call CreateUnit(p, 1747989297, 7936.0,  - 2368.0, 270.000)
	call CreateUnit(p, 1747989297, 3520.0, 27008.0, 270.000)
	call CreateUnit(p, 1747989297, 8832.0, 26368.0, 270.000)
	call CreateUnit(p, 1747989297, 6848.0, 21440.0, 270.000)
	call CreateUnit(p, 1747989297, 6144.0, 18560.0, 270.000)
	call CreateUnit(p, 1747989297, 3904.0, 11072.0, 270.000)
	call CreateUnit(p, 1747989297, 8512.0, 12352.0, 270.000)
	call CreateUnit(p, 1747989297, 9280.0, 20032.0, 270.000)
	call CreateUnit(p, 1747989297, 1216.0, 11008.0, 270.000)
	call CreateUnit(p, 1747989044,  - 15680.0, 11200.0, 270.000)
	call CreateUnit(p, 1747989044,  - 15104.0, 17408.0, 270.000)
	call CreateUnit(p, 1747989045,  - 1728.0, 28608.0, 270.000)
	call CreateUnit(p, 1747989043,  - 18304.0, 18112.0, 270.000)
	call CreateUnit(p, 1747989044,  - 9600.0, 13888.0, 270.000)
	call CreateUnit(p, 1747989297, 384.0, 19456.0, 270.000)
	call CreateUnit(p, 1747989044, 4864.0, 5952.0, 270.000)
	call CreateUnit(p, 1747989044, 8000.0,  - 1664.0, 270.000)
	call CreateUnit(p, 1747989044, 9280.0,  - 3008.0, 270.000)
	call CreateUnit(p, 1747989045,  - 21056.0, 21056.0, 270.000)
	call CreateUnit(p, 1747989045,  - 19648.0, 12224.0, 270.000)
	call CreateUnit(p, 1747989045, 17984.0,  - 13120.0, 270.000)
	call CreateUnit(p, 1747989042,  - 28544.0, 704.0, 270.000)
	call CreateUnit(p, 1747989045,  - 9344.0, 7168.0, 270.000)
	call CreateUnit(p, 1747989043,  - 6336.0, 8576.0, 270.000)
	call CreateUnit(p, 1747989045,  - 15616.0, 21248.0, 270.000)
	call CreateUnit(p, 1747989045,  - 16640.0, 1024.0, 270.000)
	call CreateUnit(p, 1747989045, 13760.0,  - 11584.0, 270.000)
	call CreateUnit(p, 1747989042,  - 11328.0, 3712.0, 270.000)
	call CreateUnit(p, 1747989042,  - 16768.0, 25920.0, 270.000)
	call CreateUnit(p, 1747989045,  - 19200.0, 28352.0, 270.000)
	call CreateUnit(p, 1747989043, 3456.0, 11584.0, 270.000)
	call CreateUnit(p, 1747989044,  - 24640.0, 4352.0, 270.000)
	call CreateUnit(p, 1747989044,  - 23232.0,  - 5120.0, 270.000)
	call CreateUnit(p, 1747989042,  - 23424.0, 768.0, 270.000)
	call CreateUnit(p, 1747989045,  - 15936.0,  - 2688.0, 270.000)
	call CreateUnit(p, 1747989045,  - 10752.0,  - 3456.0, 270.000)
	call CreateUnit(p, 1747989044,  - 7552.0, 4416.0, 270.000)
	call CreateUnit(p, 1747989045,  - 20160.0,  - 1600.0, 270.000)
	call CreateUnit(p, 1747989045,  - 21824.0, 2560.0, 270.000)
	call CreateUnit(p, 1747989045, 11392.0,  - 7104.0, 270.000)
	call CreateUnit(p, 1747989042, 4352.0, 20224.0, 270.000)
	call CreateUnit(p, 1747989044,  - 15360.0, 4992.0, 270.000)
	call CreateUnit(p, 1747989042,  - 896.0, 3392.0, 270.000)
	call CreateUnit(p, 1747989045,  - 6528.0,  - 832.0, 270.000)
	call CreateUnit(p, 1747989043,  - 4928.0,  - 3264.0, 270.000)
	call CreateUnit(p, 1747989042,  - 6144.0,  - 8192.0, 270.000)
	call CreateUnit(p, 1747989043, 23424.0, 640.0, 270.000)
	call CreateUnit(p, 1747989043,  - 6976.0, 1344.0, 270.000)
	call CreateUnit(p, 1747989043, 4352.0, 128.0, 270.000)
	call CreateUnit(p, 1747989297, 17472.0, 19648.0, 270.000)
	call CreateUnit(p, 1747989044,  - 7872.0, 22784.0, 270.000)
	call CreateUnit(p, 1747989297, 20864.0, 21504.0, 270.000)
	call CreateUnit(p, 1747989044,  - 9152.0, 28480.0, 270.000)
	call CreateUnit(p, 1747989042,  - 27712.0,  - 9536.0, 270.000)
	call CreateUnit(p, 1747989042, 4800.0,  - 12480.0, 270.000)
	call CreateUnit(p, 1747989045, 7232.0,  - 11328.0, 270.000)
	call CreateUnit(p, 1747989045, 1792.0,  - 8064.0, 270.000)
	call CreateUnit(p, 1747989297,  - 1600.0, 5952.0, 270.000)
	call CreateUnit(p, 1747989043,  - 128.0,  - 1792.0, 270.000)
	call CreateUnit(p, 1747989042,  - 3392.0, 8640.0, 270.000)
	call CreateUnit(p, 1747989044,  - 1856.0, 16576.0, 270.000)
	call CreateUnit(p, 1747989043,  - 13888.0, 14784.0, 270.000)
	call CreateUnit(p, 1747989297,  - 29568.0,  - 9792.0, 270.000)
	call CreateUnit(p, 1747989043,  - 9088.0, 26240.0, 270.000)
	call CreateUnit(p, 1747989045,  - 5440.0, 23808.0, 270.000)
	call CreateUnit(p, 1747989045, 2176.0, 30080.0, 270.000)
	call CreateUnit(p, 1747989043, 1984.0, 6464.0, 270.000)
	call CreateUnit(p, 1747989297,  - 26304.0,  - 1408.0, 270.000)
	call CreateUnit(p, 1747989043, 448.0, 13056.0, 270.000)
	call CreateUnit(p, 1747989045, 3072.0, 26752.0, 270.000)
	call CreateUnit(p, 1747989043, 6656.0, 18880.0, 270.000)
	call CreateUnit(p, 1747989043, 3264.0,  - 3712.0, 270.000)
	call CreateUnit(p, 1747989297, 15872.0, 5760.0, 270.000)
	call CreateUnit(p, 1747989043, 6528.0, 22080.0, 270.000)
	call CreateUnit(p, 1747989044, 8896.0, 27008.0, 270.000)
	call CreateUnit(p, 1747989297, 18496.0,  - 17280.0, 270.000)
	call CreateUnit(p, 1747989297, 11392.0, 7872.0, 270.000)
	call CreateUnit(p, 1747989297, 12672.0, 11328.0, 270.000)
	call CreateUnit(p, 1747989297, 6016.0, 12416.0, 270.000)
	call CreateUnit(p, 1747989297, 7104.0, 7808.0, 270.000)
	call CreateUnit(p, 1747989297, 20864.0, 2688.0, 270.000)
	call CreateUnit(p, 1747989297, 24000.0, 2560.0, 270.000)
	call CreateUnit(p, 1747989297, 19648.0, 11328.0, 270.000)
	call CreateUnit(p, 1747989297, 11584.0, 16960.0, 270.000)
	call CreateUnit(p, 1747989297, 18496.0,  - 13248.0, 270.000)
	call CreateUnit(p, 1747989297, 17216.0,  - 11456.0, 270.000)
	call CreateUnit(p, 1747989297, 25088.0,  - 8320.0, 270.000)
	call CreateUnit(p, 1747989297, 15680.0,  - 17536.0, 270.000)
	call CreateUnit(p, 1747989297, 16640.0,  - 14208.0, 270.000)
	call CreateUnit(p, 1747989297, 17280.0,  - 19584.0, 270.000)
	call CreateUnit(p, 1747989297, 22912.0,  - 10240.0, 270.000)
	call CreateUnit(p, 1747989297, 20864.0,  - 23040.0, 270.000)
	call CreateUnit(p, 1747989044, 13120.0,  - 21696.0, 270.000)
	call CreateUnit(p, 1747989297, 20096.0,  - 5760.0, 270.000)
	call CreateUnit(p, 1747989297, 18816.0,  - 3776.0, 270.000)
	call CreateUnit(p, 1747989042, 14464.0,  - 26432.0, 270.000)
	call CreateUnit(p, 1747989044, 23808.0,  - 27776.0, 270.000)
	call CreateUnit(p, 1747989042, 11776.0,  - 18688.0, 270.000)
	call CreateUnit(p, 1747989043, 256.0,  - 18048.0, 270.000)
	call CreateUnit(p, 1747989045,  - 16192.0,  - 8192.0, 270.000)
	call CreateUnit(p, 1747989045,  - 11520.0,  - 10944.0, 270.000)
	call CreateUnit(p, 1747989045, 16512.0,  - 19968.0, 270.000)
	call CreateUnit(p, 1747989045, 20416.0,  - 22272.0, 270.000)
	call CreateUnit(p, 1747989044, 28800.0,  - 11904.0, 270.000)
	call CreateUnit(p, 1747989297, 15040.0, 23104.0, 270.000)
	call CreateUnit(p, 1747989044, 8128.0, 12928.0, 270.000)
	call CreateUnit(p, 1747989044, 16896.0,  - 15744.0, 270.000)
	call CreateUnit(p, 1747989042, 17984.0,  - 640.0, 270.000)
	call CreateUnit(p, 1747989045, 20608.0, 3136.0, 270.000)
	call CreateUnit(p, 1747989045, 7232.0,  - 5120.0, 270.000)
	call CreateUnit(p, 1747989045, 25984.0,  - 8128.0, 270.000)
	call CreateUnit(p, 1747989045, 20544.0,  - 5440.0, 270.000)
	call CreateUnit(p, 1747989045, 11968.0, 17856.0, 270.000)
	call CreateUnit(p, 1747989045, 10048.0, 20032.0, 270.000)
	call CreateUnit(p, 1747989043, 15296.0,  - 7232.0, 270.000)
	call CreateUnit(p, 1747989043, 13056.0, 11776.0, 270.000)
	call CreateUnit(p, 1747989043, 15744.0, 23488.0, 270.000)
	call CreateUnit(p, 1747989043, 17984.0, 9280.0, 270.000)
	set p = null
endfunction

function CreateUnitsForPlayer0 takes nothing returns nothing
	local player p = Player(0)
	local unit u = CreateUnit(p, 1211118391,  - 30470.9, 30602.5, 270.516)
	set u = CreateUnit(p, 1211118406,  - 30360.2, 29312.6, 270.421)
	call SetHeroLevel(u, 20, false)
	set p = null
	set u = null
endfunction

function CreateUnitsForPlayer1 takes nothing returns nothing
	local player p = Player(1)
	local unit u = CreateUnit(p, 1211118391,  - 30205.9, 30601.1, 270.267)
	set u = CreateUnit(p, 1211118406,  - 30199.1, 29448.7, 270.266)
	call SetHeroLevel(u, 20, false)
	set p = null
	set u = null
endfunction

function CreateUnitsForPlayer10 takes nothing returns nothing
	local player p = Player(10)
	local unit u = CreateUnit(p, 1211118391,  - 30338.2, 30210.1, 270.394)
	set u = CreateUnit(p, 1211118406,  - 29904.6, 29442.8, 269.983)
	call SetHeroLevel(u, 20, false)
	set p = null
	set u = null
endfunction

function CreateUnitsForPlayer11 takes nothing returns nothing
	local player p = Player(11)
	local unit u = CreateUnit(p, 1211118391,  - 29827.0, 30210.1, 269.911)
	set u = CreateUnit(p, 1211118406,  - 30125.9, 29321.4, 270.196)
	call SetHeroLevel(u, 20, false)
	set p = null
	set u = null
endfunction

function CreateUnitsForPlayer12 takes nothing returns nothing
	local player p = Player(12)
	local unit u = CreateUnit(p, 1211118391,  - 30464.7, 30089.7, 270.515)
	set u = CreateUnit(p, 1211118406,  - 29962.2, 29311.8, 270.038)
	call SetHeroLevel(u, 20, false)
	set p = null
	set u = null
endfunction

function CreateUnitsForPlayer13 takes nothing returns nothing
	local player p = Player(13)
	local unit u = CreateUnit(p, 1211118391,  - 30204.3, 30080.3, 270.268)
	set u = CreateUnit(p, 1211118406,  - 30039.0, 29306.5, 270.112)
	call SetHeroLevel(u, 20, false)
	set p = null
	set u = null
endfunction

function CreateUnitsForPlayer14 takes nothing returns nothing
	local player p = Player(14)
	local unit u = CreateUnit(p, 1211118391,  - 30339.8, 29950.4, 270.397)
	set u = CreateUnit(p, 1211118406,  - 29968.7, 29556.2, 270.045)
	call SetHeroLevel(u, 20, false)
	set p = null
	set u = null
endfunction

function CreateUnitsForPlayer15 takes nothing returns nothing
	local player p = Player(15)
	local unit u = CreateUnit(p, 1211118391,  - 30467.2, 29834.7, 270.519)
	set u = CreateUnit(p, 1211118406,  - 29874.4, 29559.4, 269.954)
	call SetHeroLevel(u, 20, false)
	set p = null
	set u = null
endfunction

function CreateUnitsForPlayer16 takes nothing returns nothing
	local player p = Player(16)
	local unit u = CreateUnit(p, 1211118391,  - 30203.1, 29826.8, 270.268)
	set u = CreateUnit(p, 1211118406,  - 29780.4, 29300.3, 269.864)
	call SetHeroLevel(u, 20, false)
	set p = null
	set u = null
endfunction

function CreateUnitsForPlayer17 takes nothing returns nothing
	local player p = Player(17)
	local unit u = CreateUnit(p, 1211118391,  - 29951.6, 30084.7, 270.028)
	set u = CreateUnit(p, 1211118406,  - 29862.1, 29302.2, 269.942)
	call SetHeroLevel(u, 20, false)
	set p = null
	set u = null
endfunction

function CreateUnitsForPlayer18 takes nothing returns nothing
	local player p = Player(18)
	local unit u = CreateUnit(p, 1211118391,  - 29691.7, 30077.9, 269.782)
	set u = CreateUnit(p, 1211118406,  - 29792.0, 29571.7, 269.875)
	call SetHeroLevel(u, 20, false)
	set p = null
	set u = null
endfunction

function CreateUnitsForPlayer19 takes nothing returns nothing
	local player p = Player(19)
	local unit u = CreateUnit(p, 1211118391,  - 29820.0, 29950.4, 269.903)
	set u = CreateUnit(p, 1211118406,  - 29707.1, 29309.8, 269.793)
	call SetHeroLevel(u, 20, false)
	set p = null
	set u = null
endfunction

function CreateUnitsForPlayer2 takes nothing returns nothing
	local player p = Player(2)
	local unit u = CreateUnit(p, 1211118391,  - 30324.4, 30466.1, 270.380)
	set u = CreateUnit(p, 1211118406,  - 30346.6, 29573.7, 270.406)
	call SetHeroLevel(u, 20, false)
	set p = null
	set u = null
endfunction

function CreateUnitsForPlayer22 takes nothing returns nothing
	local player p = Player(22)
	local unit u = CreateUnit(p, 1211118391,  - 29948.2, 29831.1, 270.025)
	set u = CreateUnit(p, 1211118406,  - 29699.3, 29565.4, 269.787)
	call SetHeroLevel(u, 20, false)
	set p = null
	set u = null
endfunction

function CreateUnitsForPlayer23 takes nothing returns nothing
	local player p = Player(23)
	local unit u = CreateUnit(p, 1211118391,  - 29689.5, 29824.6, 269.779)
	set u = CreateUnit(p, 1211118406,  - 29815.4, 29434.4, 269.898)
	call SetHeroLevel(u, 20, false)
	set p = null
	set u = null
endfunction

function CreateUnitsForPlayer3 takes nothing returns nothing
	local player p = Player(3)
	local unit u = CreateUnit(p, 1211118391,  - 30468.2, 30345.3, 270.516)
	set u = CreateUnit(p, 1211118406,  - 30252.3, 29576.9, 270.316)
	call SetHeroLevel(u, 20, false)
	set p = null
	set u = null
endfunction

function CreateUnitsForPlayer4 takes nothing returns nothing
	local player p = Player(4)
	local unit u = CreateUnit(p, 1211118391,  - 30204.6, 30339.2, 270.267)
	set u = CreateUnit(p, 1211118406,  - 30106.5, 29439.8, 270.177)
	call SetHeroLevel(u, 20, false)
	set p = null
	set u = null
endfunction

function CreateUnitsForPlayer5 takes nothing returns nothing
	local player p = Player(5)
	local unit u = CreateUnit(p, 1211118391,  - 29950.2, 30589.5, 270.027)
	set u = CreateUnit(p, 1211118406,  - 30283.9, 29308.8, 270.348)
	call SetHeroLevel(u, 20, false)
	set p = null
	set u = null
endfunction

function CreateUnitsForPlayer6 takes nothing returns nothing
	local player p = Player(6)
	local unit u = CreateUnit(p, 1211118391,  - 29693.7, 30597.0, 269.786)
	set u = CreateUnit(p, 1211118406,  - 30199.8, 29310.0, 270.267)
	call SetHeroLevel(u, 20, false)
	set p = null
	set u = null
endfunction

function CreateUnitsForPlayer7 takes nothing returns nothing
	local player p = Player(7)
	local unit u = CreateUnit(p, 1211118391,  - 29818.2, 30468.8, 269.903)
	set u = CreateUnit(p, 1211118406,  - 29998.9, 29444.3, 270.074)
	call SetHeroLevel(u, 20, false)
	set p = null
	set u = null
endfunction

function CreateUnitsForPlayer8 takes nothing returns nothing
	local player p = Player(8)
	local unit u = CreateUnit(p, 1211118391,  - 29946.0, 30342.9, 270.023)
	set u = CreateUnit(p, 1211118406,  - 30137.9, 29561.1, 270.206)
	call SetHeroLevel(u, 20, false)
	set p = null
	set u = null
endfunction

function CreateUnitsForPlayer9 takes nothing returns nothing
	local player p = Player(9)
	local unit u = CreateUnit(p, 1211118391,  - 29693.5, 30338.3, 269.785)
	set u = CreateUnit(p, 1211118406,  - 30045.2, 29554.8, 270.118)
	call SetHeroLevel(u, 20, false)
	set p = null
	set u = null
endfunction

function CreatePlayerUnits takes nothing returns nothing
	call CreateUnitsForPlayer0()
	call CreateUnitsForPlayer1()
	call CreateUnitsForPlayer2()
	call CreateUnitsForPlayer3()
	call CreateUnitsForPlayer4()
	call CreateUnitsForPlayer5()
	call CreateUnitsForPlayer6()
	call CreateUnitsForPlayer7()
	call CreateUnitsForPlayer8()
	call CreateUnitsForPlayer9()
	call CreateUnitsForPlayer10()
	call CreateUnitsForPlayer11()
	call CreateUnitsForPlayer12()
	call CreateUnitsForPlayer13()
	call CreateUnitsForPlayer14()
	call CreateUnitsForPlayer15()
	call CreateUnitsForPlayer16()
	call CreateUnitsForPlayer17()
	call CreateUnitsForPlayer18()
	call CreateUnitsForPlayer19()
	call CreateUnitsForPlayer22()
	call CreateUnitsForPlayer23()
endfunction

function InitTrig_Archer_1 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Archer_1 = CreateTrigger()
	set trig = gg_trg_Archer_1
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Archer_1, Condition(ref_function_Trig_Archer_1_Conditions))
	call TriggerAddAction(gg_trg_Archer_1, ref_function_Trig_Archer_1_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Archer_1_Byzantine takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Archer_1_Byzantine = CreateTrigger()
	set trig = gg_trg_Archer_1_Byzantine
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Archer_1_Byzantine, Condition(ref_function_Trig_Archer_1_Byzantine_Conditions))
	call TriggerAddAction(gg_trg_Archer_1_Byzantine, ref_function_Trig_Archer_1_Byzantine_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Archer_2 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Archer_2 = CreateTrigger()
	set trig = gg_trg_Archer_2
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Archer_2, Condition(ref_function_Trig_Archer_2_Conditions))
	call TriggerAddAction(gg_trg_Archer_2, ref_function_Trig_Archer_2_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Archer_2_Byzantine takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Archer_2_Byzantine = CreateTrigger()
	set trig = gg_trg_Archer_2_Byzantine
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Archer_2_Byzantine, Condition(ref_function_Trig_Archer_2_Byzantine_Conditions))
	call TriggerAddAction(gg_trg_Archer_2_Byzantine, ref_function_Trig_Archer_2_Byzantine_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Arquebusers takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Arquebusers = CreateTrigger()
	set trig = gg_trg_Arquebusers
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Arquebusers, Condition(ref_function_Trig_Arquebusers_Conditions))
	call TriggerAddAction(gg_trg_Arquebusers, ref_function_Trig_Arquebusers_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Capitol_Castle_T3 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Capitol_Castle_T3 = CreateTrigger()
	set trig = gg_trg_Capitol_Castle_T3
	set whichEvent = EVENT_PLAYER_UNIT_UPGRADE_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Capitol_Castle_T3, Condition(ref_function_Trig_Capitol_Castle_T3_Conditions))
	call TriggerAddAction(gg_trg_Capitol_Castle_T3, ref_function_Trig_Capitol_Castle_T3_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Capitol_City_Hall_Up_Copy takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Capitol_City_Hall_Up_Copy = CreateTrigger()
	set trig = gg_trg_Capitol_City_Hall_Up_Copy
	set whichEvent = EVENT_PLAYER_UNIT_UPGRADE_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Capitol_City_Hall_Up_Copy, Condition(ref_function_Trig_Capitol_City_Hall_Up_Copy_Conditions))
	call TriggerAddAction(gg_trg_Capitol_City_Hall_Up_Copy, ref_function_Trig_Capitol_City_Hall_Up_Copy_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Church_Range_Check takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Church_Range_Check = CreateTrigger()
	set trig = gg_trg_Church_Range_Check
	set whichEvent = EVENT_PLAYER_UNIT_CONSTRUCT_START
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Church_Range_Check, Condition(ref_function_Trig_Church_Range_Check_Conditions))
	call TriggerAddAction(gg_trg_Church_Range_Check, ref_function_Trig_Church_Range_Check_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Disabled_units_Byzantine takes nothing returns nothing
	local trigger trig
	local real timeout
	set gg_trg_Disabled_units_Byzantine = CreateTrigger()
	set trig = gg_trg_Disabled_units_Byzantine
	set timeout = 0.10
	call TriggerRegisterTimerEvent(trig, timeout, false)
	call TriggerAddAction(gg_trg_Disabled_units_Byzantine, ref_function_Trig_Disabled_units_Byzantine_Actions)
	set trig = null
endfunction

function InitTrig_Disabled_units_ME takes nothing returns nothing
	local trigger trig
	local real timeout
	set gg_trg_Disabled_units_ME = CreateTrigger()
	set trig = gg_trg_Disabled_units_ME
	set timeout = 0.10
	call TriggerRegisterTimerEvent(trig, timeout, false)
	call TriggerAddAction(gg_trg_Disabled_units_ME, ref_function_Trig_Disabled_units_ME_Actions)
	set trig = null
endfunction

function InitTrig_Disabled_units_at_beginning takes nothing returns nothing
	local trigger trig
	local real timeout
	set gg_trg_Disabled_units_at_beginning = CreateTrigger()
	set trig = gg_trg_Disabled_units_at_beginning
	set timeout = 0.10
	call TriggerRegisterTimerEvent(trig, timeout, false)
	call TriggerAddAction(gg_trg_Disabled_units_at_beginning, ref_function_Trig_Disabled_units_at_beginning_Actions)
	set trig = null
endfunction

function InitTrig_F9 takes nothing returns nothing
	local trigger trig
	local real timeout
	set gg_trg_F9 = CreateTrigger()
	set trig = gg_trg_F9
	set timeout = 1.00
	call TriggerRegisterTimerEvent(trig, timeout, false)
	call TriggerAddAction(gg_trg_F9, ref_function_Trig_F9_Actions)
	set trig = null
endfunction

function InitTrig_FarmHouse takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_FarmHouse = CreateTrigger()
	set trig = gg_trg_FarmHouse
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_FarmHouse, Condition(ref_function_Trig_FarmHouse_Conditions))
	call TriggerAddAction(gg_trg_FarmHouse, ref_function_Trig_FarmHouse_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Gate_Closing_IronGate_H takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Gate_Closing_IronGate_H = CreateTrigger()
	set trig = gg_trg_Gate_Closing_IronGate_H
	set whichEvent = EVENT_PLAYER_UNIT_SPELL_CAST
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Gate_Closing_IronGate_H, Condition(ref_function_Trig_Gate_Closing_IronGate_H_Conditions))
	call TriggerAddAction(gg_trg_Gate_Closing_IronGate_H, ref_function_Trig_Gate_Closing_IronGate_H_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Gate_Closing_IronGate_V takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Gate_Closing_IronGate_V = CreateTrigger()
	set trig = gg_trg_Gate_Closing_IronGate_V
	set whichEvent = EVENT_PLAYER_UNIT_SPELL_CAST
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Gate_Closing_IronGate_V, Condition(ref_function_Trig_Gate_Closing_IronGate_V_Conditions))
	call TriggerAddAction(gg_trg_Gate_Closing_IronGate_V, ref_function_Trig_Gate_Closing_IronGate_V_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Gate_Closing_WoodGate_H takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Gate_Closing_WoodGate_H = CreateTrigger()
	set trig = gg_trg_Gate_Closing_WoodGate_H
	set whichEvent = EVENT_PLAYER_UNIT_SPELL_CAST
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Gate_Closing_WoodGate_H, Condition(ref_function_Trig_Gate_Closing_WoodGate_H_Conditions))
	call TriggerAddAction(gg_trg_Gate_Closing_WoodGate_H, ref_function_Trig_Gate_Closing_WoodGate_H_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Gate_Closing_WoodGate_V takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Gate_Closing_WoodGate_V = CreateTrigger()
	set trig = gg_trg_Gate_Closing_WoodGate_V
	set whichEvent = EVENT_PLAYER_UNIT_SPELL_CAST
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Gate_Closing_WoodGate_V, Condition(ref_function_Trig_Gate_Closing_WoodGate_V_Conditions))
	call TriggerAddAction(gg_trg_Gate_Closing_WoodGate_V, ref_function_Trig_Gate_Closing_WoodGate_V_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Gate_Opening takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Gate_Opening = CreateTrigger()
	set trig = gg_trg_Gate_Opening
	set whichEvent = EVENT_PLAYER_UNIT_SPELL_CAST
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddAction(gg_trg_Gate_Opening, ref_function_Trig_Gate_Opening_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Heavy_Cavalry_1 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Heavy_Cavalry_1 = CreateTrigger()
	set trig = gg_trg_Heavy_Cavalry_1
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Heavy_Cavalry_1, Condition(ref_function_Trig_Heavy_Cavalry_1_Conditions))
	call TriggerAddAction(gg_trg_Heavy_Cavalry_1, ref_function_Trig_Heavy_Cavalry_1_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Heavy_Cavalry_1_Byzantine takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Heavy_Cavalry_1_Byzantine = CreateTrigger()
	set trig = gg_trg_Heavy_Cavalry_1_Byzantine
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Heavy_Cavalry_1_Byzantine, Condition(ref_function_Trig_Heavy_Cavalry_1_Byzantine_Conditions))
	call TriggerAddAction(gg_trg_Heavy_Cavalry_1_Byzantine, ref_function_Trig_Heavy_Cavalry_1_Byzantine_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Heavy_Cavalry_2 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Heavy_Cavalry_2 = CreateTrigger()
	set trig = gg_trg_Heavy_Cavalry_2
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Heavy_Cavalry_2, Condition(ref_function_Trig_Heavy_Cavalry_2_Conditions))
	call TriggerAddAction(gg_trg_Heavy_Cavalry_2, ref_function_Trig_Heavy_Cavalry_2_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Heavy_Cavalry_2_Byzantine takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Heavy_Cavalry_2_Byzantine = CreateTrigger()
	set trig = gg_trg_Heavy_Cavalry_2_Byzantine
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Heavy_Cavalry_2_Byzantine, Condition(ref_function_Trig_Heavy_Cavalry_2_Byzantine_Conditions))
	call TriggerAddAction(gg_trg_Heavy_Cavalry_2_Byzantine, ref_function_Trig_Heavy_Cavalry_2_Byzantine_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Heavy_Infantry_1 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Heavy_Infantry_1 = CreateTrigger()
	set trig = gg_trg_Heavy_Infantry_1
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Heavy_Infantry_1, Condition(ref_function_Trig_Heavy_Infantry_1_Conditions))
	call TriggerAddAction(gg_trg_Heavy_Infantry_1, ref_function_Trig_Heavy_Infantry_1_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Heavy_Infantry_1_Byzantine takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Heavy_Infantry_1_Byzantine = CreateTrigger()
	set trig = gg_trg_Heavy_Infantry_1_Byzantine
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Heavy_Infantry_1_Byzantine, Condition(ref_function_Trig_Heavy_Infantry_1_Byzantine_Conditions))
	call TriggerAddAction(gg_trg_Heavy_Infantry_1_Byzantine, ref_function_Trig_Heavy_Infantry_1_Byzantine_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Heavy_Infantry_2 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Heavy_Infantry_2 = CreateTrigger()
	set trig = gg_trg_Heavy_Infantry_2
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Heavy_Infantry_2, Condition(ref_function_Trig_Heavy_Infantry_2_Conditions))
	call TriggerAddAction(gg_trg_Heavy_Infantry_2, ref_function_Trig_Heavy_Infantry_2_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Heavy_Infantry_2_Byzantine takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Heavy_Infantry_2_Byzantine = CreateTrigger()
	set trig = gg_trg_Heavy_Infantry_2_Byzantine
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Heavy_Infantry_2_Byzantine, Condition(ref_function_Trig_Heavy_Infantry_2_Byzantine_Conditions))
	call TriggerAddAction(gg_trg_Heavy_Infantry_2_Byzantine, ref_function_Trig_Heavy_Infantry_2_Byzantine_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Light_Cavalry_1 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Light_Cavalry_1 = CreateTrigger()
	set trig = gg_trg_Light_Cavalry_1
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Light_Cavalry_1, Condition(ref_function_Trig_Light_Cavalry_1_Conditions))
	call TriggerAddAction(gg_trg_Light_Cavalry_1, ref_function_Trig_Light_Cavalry_1_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Light_Cavalry_1_Byzantine takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Light_Cavalry_1_Byzantine = CreateTrigger()
	set trig = gg_trg_Light_Cavalry_1_Byzantine
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Light_Cavalry_1_Byzantine, Condition(ref_function_Trig_Light_Cavalry_1_Byzantine_Conditions))
	call TriggerAddAction(gg_trg_Light_Cavalry_1_Byzantine, ref_function_Trig_Light_Cavalry_1_Byzantine_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Light_Cavalry_2 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Light_Cavalry_2 = CreateTrigger()
	set trig = gg_trg_Light_Cavalry_2
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Light_Cavalry_2, Condition(ref_function_Trig_Light_Cavalry_2_Conditions))
	call TriggerAddAction(gg_trg_Light_Cavalry_2, ref_function_Trig_Light_Cavalry_2_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Light_Infantry_1 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Light_Infantry_1 = CreateTrigger()
	set trig = gg_trg_Light_Infantry_1
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Light_Infantry_1, Condition(ref_function_Trig_Light_Infantry_1_Conditions))
	call TriggerAddAction(gg_trg_Light_Infantry_1, ref_function_Trig_Light_Infantry_1_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Light_Infantry_2 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Light_Infantry_2 = CreateTrigger()
	set trig = gg_trg_Light_Infantry_2
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Light_Infantry_2, Condition(ref_function_Trig_Light_Infantry_2_Conditions))
	call TriggerAddAction(gg_trg_Light_Infantry_2, ref_function_Trig_Light_Infantry_2_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_ME_Archer_1 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_ME_Archer_1 = CreateTrigger()
	set trig = gg_trg_ME_Archer_1
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_ME_Archer_1, Condition(ref_function_Trig_ME_Archer_1_Conditions))
	call TriggerAddAction(gg_trg_ME_Archer_1, ref_function_Trig_ME_Archer_1_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_ME_Archer_2 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_ME_Archer_2 = CreateTrigger()
	set trig = gg_trg_ME_Archer_2
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_ME_Archer_2, Condition(ref_function_Trig_ME_Archer_2_Conditions))
	call TriggerAddAction(gg_trg_ME_Archer_2, ref_function_Trig_ME_Archer_2_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_ME_Heavy_Cavalry_1 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_ME_Heavy_Cavalry_1 = CreateTrigger()
	set trig = gg_trg_ME_Heavy_Cavalry_1
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_ME_Heavy_Cavalry_1, Condition(ref_function_Trig_ME_Heavy_Cavalry_1_Conditions))
	call TriggerAddAction(gg_trg_ME_Heavy_Cavalry_1, ref_function_Trig_ME_Heavy_Cavalry_1_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_ME_Heavy_Cavalry_2 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_ME_Heavy_Cavalry_2 = CreateTrigger()
	set trig = gg_trg_ME_Heavy_Cavalry_2
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_ME_Heavy_Cavalry_2, Condition(ref_function_Trig_ME_Heavy_Cavalry_2_Conditions))
	call TriggerAddAction(gg_trg_ME_Heavy_Cavalry_2, ref_function_Trig_ME_Heavy_Cavalry_2_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_ME_Light_Cavalry_1 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_ME_Light_Cavalry_1 = CreateTrigger()
	set trig = gg_trg_ME_Light_Cavalry_1
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_ME_Light_Cavalry_1, Condition(ref_function_Trig_ME_Light_Cavalry_1_Conditions))
	call TriggerAddAction(gg_trg_ME_Light_Cavalry_1, ref_function_Trig_ME_Light_Cavalry_1_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_ME_Light_Cavalry_2 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_ME_Light_Cavalry_2 = CreateTrigger()
	set trig = gg_trg_ME_Light_Cavalry_2
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_ME_Light_Cavalry_2, Condition(ref_function_Trig_ME_Light_Cavalry_2_Conditions))
	call TriggerAddAction(gg_trg_ME_Light_Cavalry_2, ref_function_Trig_ME_Light_Cavalry_2_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_ME_Light_Infantry_1 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_ME_Light_Infantry_1 = CreateTrigger()
	set trig = gg_trg_ME_Light_Infantry_1
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_ME_Light_Infantry_1, Condition(ref_function_Trig_ME_Light_Infantry_1_Conditions))
	call TriggerAddAction(gg_trg_ME_Light_Infantry_1, ref_function_Trig_ME_Light_Infantry_1_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_ME_Light_Infantry_2 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_ME_Light_Infantry_2 = CreateTrigger()
	set trig = gg_trg_ME_Light_Infantry_2
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_ME_Light_Infantry_2, Condition(ref_function_Trig_ME_Light_Infantry_2_Conditions))
	call TriggerAddAction(gg_trg_ME_Light_Infantry_2, ref_function_Trig_ME_Light_Infantry_2_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_ME_Missile_Cavalry takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_ME_Missile_Cavalry = CreateTrigger()
	set trig = gg_trg_ME_Missile_Cavalry
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_ME_Missile_Cavalry, Condition(ref_function_Trig_ME_Missile_Cavalry_Conditions))
	call TriggerAddAction(gg_trg_ME_Missile_Cavalry, ref_function_Trig_ME_Missile_Cavalry_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_ME_Skirmisher takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_ME_Skirmisher = CreateTrigger()
	set trig = gg_trg_ME_Skirmisher
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_ME_Skirmisher, Condition(ref_function_Trig_ME_Skirmisher_Conditions))
	call TriggerAddAction(gg_trg_ME_Skirmisher, ref_function_Trig_ME_Skirmisher_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_ME_Spearmen_1 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_ME_Spearmen_1 = CreateTrigger()
	set trig = gg_trg_ME_Spearmen_1
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_ME_Spearmen_1, Condition(ref_function_Trig_ME_Spearmen_1_Conditions))
	call TriggerAddAction(gg_trg_ME_Spearmen_1, ref_function_Trig_ME_Spearmen_1_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_ME_Spearmen_2 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_ME_Spearmen_2 = CreateTrigger()
	set trig = gg_trg_ME_Spearmen_2
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_ME_Spearmen_2, Condition(ref_function_Trig_ME_Spearmen_2_Conditions))
	call TriggerAddAction(gg_trg_ME_Spearmen_2, ref_function_Trig_ME_Spearmen_2_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Missile_Cavalry_Byzantine takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Missile_Cavalry_Byzantine = CreateTrigger()
	set trig = gg_trg_Missile_Cavalry_Byzantine
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Missile_Cavalry_Byzantine, Condition(ref_function_Trig_Missile_Cavalry_Byzantine_Conditions))
	call TriggerAddAction(gg_trg_Missile_Cavalry_Byzantine, ref_function_Trig_Missile_Cavalry_Byzantine_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Pikemen_1 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Pikemen_1 = CreateTrigger()
	set trig = gg_trg_Pikemen_1
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Pikemen_1, Condition(ref_function_Trig_Pikemen_1_Conditions))
	call TriggerAddAction(gg_trg_Pikemen_1, ref_function_Trig_Pikemen_1_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Pikemen_2 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Pikemen_2 = CreateTrigger()
	set trig = gg_trg_Pikemen_2
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Pikemen_2, Condition(ref_function_Trig_Pikemen_2_Conditions))
	call TriggerAddAction(gg_trg_Pikemen_2, ref_function_Trig_Pikemen_2_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Settle takes nothing returns nothing
	local trigger trig
	local real timeout
	set gg_trg_Settle = CreateTrigger()
	set trig = gg_trg_Settle
	set timeout = 120.00
	call TriggerRegisterTimerEvent(trig, timeout, false)
	call TriggerAddAction(gg_trg_Settle, ref_function_Trig_Settle_Actions)
	set trig = null
endfunction

function InitTrig_Settlement_Aura takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Settlement_Aura = CreateTrigger()
	set trig = gg_trg_Settlement_Aura
	set whichEvent = EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Settlement_Aura, Condition(ref_function_Trig_Settlement_Aura_Conditions))
	call TriggerAddAction(gg_trg_Settlement_Aura, ref_function_Trig_Settlement_Aura_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Settlement_Range_Check takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Settlement_Range_Check = CreateTrigger()
	set trig = gg_trg_Settlement_Range_Check
	set whichEvent = EVENT_PLAYER_UNIT_CONSTRUCT_START
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Settlement_Range_Check, Condition(ref_function_Trig_Settlement_Range_Check_Conditions))
	call TriggerAddAction(gg_trg_Settlement_Range_Check, ref_function_Trig_Settlement_Range_Check_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Skirmisher takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Skirmisher = CreateTrigger()
	set trig = gg_trg_Skirmisher
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Skirmisher, Condition(ref_function_Trig_Skirmisher_Conditions))
	call TriggerAddAction(gg_trg_Skirmisher, ref_function_Trig_Skirmisher_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Skirmisher_Byzantine takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Skirmisher_Byzantine = CreateTrigger()
	set trig = gg_trg_Skirmisher_Byzantine
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Skirmisher_Byzantine, Condition(ref_function_Trig_Skirmisher_Byzantine_Conditions))
	call TriggerAddAction(gg_trg_Skirmisher_Byzantine, ref_function_Trig_Skirmisher_Byzantine_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Spearmen_1 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Spearmen_1 = CreateTrigger()
	set trig = gg_trg_Spearmen_1
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Spearmen_1, Condition(ref_function_Trig_Spearmen_1_Conditions))
	call TriggerAddAction(gg_trg_Spearmen_1, ref_function_Trig_Spearmen_1_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Spearmen_1_Byzantine takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Spearmen_1_Byzantine = CreateTrigger()
	set trig = gg_trg_Spearmen_1_Byzantine
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Spearmen_1_Byzantine, Condition(ref_function_Trig_Spearmen_1_Byzantine_Conditions))
	call TriggerAddAction(gg_trg_Spearmen_1_Byzantine, ref_function_Trig_Spearmen_1_Byzantine_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Spearmen_2 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Spearmen_2 = CreateTrigger()
	set trig = gg_trg_Spearmen_2
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Spearmen_2, Condition(ref_function_Trig_Spearmen_2_Conditions))
	call TriggerAddAction(gg_trg_Spearmen_2, ref_function_Trig_Spearmen_2_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Spearmen_2_Byzantine takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Spearmen_2_Byzantine = CreateTrigger()
	set trig = gg_trg_Spearmen_2_Byzantine
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Spearmen_2_Byzantine, Condition(ref_function_Trig_Spearmen_2_Byzantine_Conditions))
	call TriggerAddAction(gg_trg_Spearmen_2_Byzantine, ref_function_Trig_Spearmen_2_Byzantine_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Supply_Horse takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Supply_Horse = CreateTrigger()
	set trig = gg_trg_Supply_Horse
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Supply_Horse, Condition(ref_function_Trig_Supply_Horse_Conditions))
	call TriggerAddAction(gg_trg_Supply_Horse, ref_function_Trig_Supply_Horse_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Supply_Horse_2 takes nothing returns nothing
	local trigger trig
	local real timeout
	set gg_trg_Supply_Horse_2 = CreateTrigger()
	set trig = gg_trg_Supply_Horse_2
	set timeout = 5.00
	call TriggerRegisterTimerEvent(trig, timeout, true)
	call TriggerAddAction(gg_trg_Supply_Horse_2, ref_function_Trig_Supply_Horse_2_Actions)
	set trig = null
endfunction

function InitTrig_Supply_Horses takes nothing returns nothing
	local trigger trig
	local real timeout
	set gg_trg_Supply_Horses = CreateTrigger()
	set trig = gg_trg_Supply_Horses
	set timeout = 5.00
	call TriggerRegisterTimerEvent(trig, timeout, true)
	call TriggerAddAction(gg_trg_Supply_Horses, ref_function_Trig_Supply_Horses_Actions)
	set trig = null
endfunction

function InitTrig_Thatched_Cottage_1 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Thatched_Cottage_1 = CreateTrigger()
	set trig = gg_trg_Thatched_Cottage_1
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Thatched_Cottage_1, Condition(ref_function_Trig_Thatched_Cottage_1_Conditions))
	call TriggerAddAction(gg_trg_Thatched_Cottage_1, ref_function_Trig_Thatched_Cottage_1_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Thatched_Cottage_2 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Thatched_Cottage_2 = CreateTrigger()
	set trig = gg_trg_Thatched_Cottage_2
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Thatched_Cottage_2, Condition(ref_function_Trig_Thatched_Cottage_2_Conditions))
	call TriggerAddAction(gg_trg_Thatched_Cottage_2, ref_function_Trig_Thatched_Cottage_2_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Thatched_Cottage_3 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Thatched_Cottage_3 = CreateTrigger()
	set trig = gg_trg_Thatched_Cottage_3
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Thatched_Cottage_3, Condition(ref_function_Trig_Thatched_Cottage_3_Conditions))
	call TriggerAddAction(gg_trg_Thatched_Cottage_3, ref_function_Trig_Thatched_Cottage_3_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitTrig_Thatched_Cottage_4 takes nothing returns nothing
	local trigger trig
	local playerunitevent whichEvent
	local integer index
	set gg_trg_Thatched_Cottage_4 = CreateTrigger()
	set trig = gg_trg_Thatched_Cottage_4
	set whichEvent = EVENT_PLAYER_UNIT_RESEARCH_FINISH
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	call TriggerAddCondition(gg_trg_Thatched_Cottage_4, Condition(ref_function_Trig_Thatched_Cottage_4_Conditions))
	call TriggerAddAction(gg_trg_Thatched_Cottage_4, ref_function_Trig_Thatched_Cottage_4_Actions)
	set trig = null
	set whichEvent = null
endfunction

function InitCustomTriggers takes nothing returns nothing
	set gg_trg_Melee_Initialization = CreateTrigger()
	call TriggerAddAction(gg_trg_Melee_Initialization, ref_function_Trig_Melee_Initialization_Actions)
	call InitTrig_F9()
	call InitTrig_Gate_Opening()
	call InitTrig_Gate_Closing_WoodGate_V()
	call InitTrig_Gate_Closing_WoodGate_H()
	call InitTrig_Gate_Closing_IronGate_V()
	call InitTrig_Gate_Closing_IronGate_H()
	call InitTrig_Supply_Horses()
	call InitTrig_Supply_Horse_2()
	call InitTrig_FarmHouse()
	call InitTrig_Thatched_Cottage_1()
	call InitTrig_Thatched_Cottage_2()
	call InitTrig_Thatched_Cottage_3()
	call InitTrig_Thatched_Cottage_4()
	call InitTrig_Spearmen_1()
	call InitTrig_Spearmen_2()
	call InitTrig_Heavy_Infantry_1()
	call InitTrig_Heavy_Infantry_2()
	call InitTrig_Archer_1()
	call InitTrig_Archer_2()
	call InitTrig_Light_Infantry_1()
	call InitTrig_Light_Infantry_2()
	call InitTrig_Pikemen_1()
	call InitTrig_Pikemen_2()
	call InitTrig_Light_Cavalry_1()
	call InitTrig_Light_Cavalry_2()
	call InitTrig_Heavy_Cavalry_1()
	call InitTrig_Heavy_Cavalry_2()
	call InitTrig_Skirmisher()
	call InitTrig_Arquebusers()
	call InitTrig_Supply_Horse()
	call InitTrig_Disabled_units_at_beginning()
	call InitTrig_Spearmen_1_Byzantine()
	call InitTrig_Spearmen_2_Byzantine()
	call InitTrig_Heavy_Infantry_1_Byzantine()
	call InitTrig_Heavy_Infantry_2_Byzantine()
	call InitTrig_Archer_1_Byzantine()
	call InitTrig_Archer_2_Byzantine()
	call InitTrig_Light_Cavalry_1_Byzantine()
	call InitTrig_Heavy_Cavalry_1_Byzantine()
	call InitTrig_Heavy_Cavalry_2_Byzantine()
	call InitTrig_Skirmisher_Byzantine()
	call InitTrig_Missile_Cavalry_Byzantine()
	call InitTrig_Disabled_units_Byzantine()
	call InitTrig_ME_Spearmen_1()
	call InitTrig_ME_Spearmen_2()
	call InitTrig_ME_Archer_1()
	call InitTrig_ME_Archer_2()
	call InitTrig_ME_Light_Infantry_1()
	call InitTrig_ME_Light_Infantry_2()
	call InitTrig_ME_Light_Cavalry_1()
	call InitTrig_ME_Light_Cavalry_2()
	call InitTrig_ME_Heavy_Cavalry_1()
	call InitTrig_ME_Heavy_Cavalry_2()
	call InitTrig_ME_Skirmisher()
	call InitTrig_ME_Missile_Cavalry()
	call InitTrig_Disabled_units_ME()
	call InitTrig_Settle()
	call InitTrig_Settlement_Range_Check()
	call InitTrig_Church_Range_Check()
	call InitTrig_Settlement_Aura()
	call InitTrig_Capitol_City_Hall_Up_Copy()
	call InitTrig_Capitol_Castle_T3()
endfunction

function InitGlobals takes nothing returns nothing
	local integer i = 0
	set i = 0
	loop
		exitwhen i > 8192
		call CreateGroup()
		set i = i + 1
	endloop
	call CreateForce()
	call CreateGroup()
	call CreateForce()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateForce()
	call CreateForce()
	call CreateForce()
	call CreateTimer()
	call CreateForce()
	call CreateGroup()
	set udg_Supplyhorses = CreateGroup()
	call CreateGroup()
	call CreateForce()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateTimer()
	set i = 0
	loop
		exitwhen i > 24
		set i = i + 1
	endloop
	set i = 0
	loop
		exitwhen i > 24
		set i = i + 1
	endloop
	set udg_AllPlayerUnits = CreateForce()
	set i = 0
	loop
		exitwhen i > 24
		set i = i + 1
	endloop
	call CreateGroup()
	set i = 0
	loop
		exitwhen i > 24
		set i = i + 1
	endloop
	set i = 0
	loop
		exitwhen i > 24
		set udg_Unhappiness[i] = 0
		set i = i + 1
	endloop
	call CreateForce()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	set udg_GateMovingUnits1 = CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	set i = 0
	loop
		exitwhen i > 24
		set i = i + 1
	endloop
	set i = 0
	loop
		exitwhen i > 24
		set i = i + 1
	endloop
	set udg_BuildingRangeCheck = CreateGroup()
	set i = 0
	loop
		exitwhen i > 24
		set i = i + 1
	endloop
	set i = 0
	loop
		exitwhen i > 24
		set i = i + 1
	endloop
	set i = 0
	loop
		exitwhen i > 24
		set i = i + 1
	endloop
	set i = 0
	loop
		exitwhen i > 24
		set i = i + 1
	endloop
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateForce()
	call CreateForce()
	set i = 0
	loop
		exitwhen i > 1
		set i = i + 1
	endloop
	set i = 0
	loop
		exitwhen i > 1
		set i = i + 1
	endloop
	set i = 0
	loop
		exitwhen i > 1
		set i = i + 1
	endloop
	set udg_Supplyhorses2 = CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
endfunction

function CinematicTutorial takes nothing returns nothing
	local integer i
	local integer temp
	local force whichForce
	local real fadeDuration
	local force toForce
	local real duration
	local string message
	local boolean cineMode
	local force forForce
	if true then
		set whichForce = null
		set toForce = null
		set forForce = null
		return
	endif
	set whichForce = bj_FORCE_ALL_PLAYERS
	set fadeDuration = 0.50
	if IsPlayerInForce(GetLocalPlayer(), whichForce) then
		call ShowInterface(false, fadeDuration)
	endif
	set i = 0
	set temp = 5 - 1
	loop
		exitwhen i > temp
		set toForce = bj_FORCE_ALL_PLAYERS
		set duration = 10.0
		set message = MainInit_ksCT[i]
		if IsPlayerInForce(GetLocalPlayer(), toForce) then
			call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., duration, message)
		endif
		call TriggerSleepAction(12.5)
		set i = i + 1
	endloop
	set cineMode = false
	set forForce = bj_FORCE_ALL_PLAYERS
	call CinematicModeExBJ(cineMode, forForce, bj_CINEMODE_INTERFACEFADE)
	set whichForce = null
	set toForce = null
	set forForce = null
endfunction

function City_closure_impl takes nothing returns boolean
	local unit this_2 = GetSpellAbilityUnit()
	local unit this_3
	local player this_4
	local unit this_5
	local boolean andLeft
	local boolean andLeft_2
	if GetUnitTypeId(this_2) == 1747988553 then
		set this_3 = GetSpellTargetUnit()
		set andLeft = GetUnitTypeId(this_3) == 1747989297
	else
		set andLeft = false
	endif
	if andLeft then
		set this_5 = GetSpellTargetUnit()
		set this_4 = GetOwningPlayer(this_5)
		set andLeft_2 = GetPlayerId(this_4) == PLAYER_NEUTRAL_AGGRESSIVE
	else
		set andLeft_2 = false
	endif
	set this_2 = null
	set this_3 = null
	set this_4 = null
	set this_5 = null
	return andLeft_2
endfunction

function City_closure_impl_2 takes nothing returns boolean
	local player this_2 = GetTriggerPlayer()
	local player this_3
	local real temp
	local boolean andLeft
	if City_lastClickUnit[GetPlayerId(this_2)] != GetTriggerUnit() then
		set andLeft = true
	else
		set temp = Main_elapsed_time
		set this_3 = GetTriggerPlayer()
		set andLeft = temp - City_lastClickTime[GetPlayerId(this_3)] > 4.0
	endif
	set this_2 = null
	set this_3 = null
	return andLeft
endfunction

function City_closure_impl_3 takes nothing returns boolean
	local unit this_2 = GetTriggerUnit()
	local integer u = GetUnitTypeId(this_2)
	local unit whichUnit = GetTriggerUnit()
	local boolean City_closure_impltempReturn = GetUnitStatePercent(whichUnit, UNIT_STATE_LIFE, UNIT_STATE_MAX_LIFE) > 50.0 and u == 1747988529 or u == 1747988530 or u == 1747988531
	set this_2 = null
	set whichUnit = null
	return City_closure_impltempReturn
endfunction

function City_closure_impl_4 takes nothing returns boolean
	local unit this_2 = GetTriggerUnit()
	local boolean City_closure_impltempReturn = GetUnitTypeId(this_2) == 1747989555
	set this_2 = null
	return City_closure_impltempReturn
endfunction

function ClosureEvents_closure_impl takes nothing returns nothing
	local unit u = UnitIndexer_indexedUnit
	local trigger this_2
	local unit whichUnit
	local unitevent whichEvent
	if true then
		set this_2 = ClosureEvents_unitTrig
		set whichUnit = u
		set whichEvent = EVENT_UNIT_DAMAGED
		call TriggerRegisterUnitEvent(this_2, whichUnit, whichEvent)
	endif
	set u = null
	set this_2 = null
	set whichUnit = null
	set whichEvent = null
endfunction

function GameTimer_closure_impl takes nothing returns nothing
	set GameTimer_currentTime = GameTimer_currentTime + 0.030
endfunction

function Group_closure_impl takes nothing returns nothing
	local group this_2 = Group_iterGroup
	local unit units_0 = GetEnumUnit()
	call GroupAddUnit(this_2, units_0)
	set this_2 = null
	set units_0 = null
endfunction

function Main_closure_impl takes nothing returns nothing
	set Main_elapsed_time = Main_elapsed_time + 0.01
endfunction

function OnUnitEnterLeave_closure_impl takes nothing returns nothing
	local unit leavingUnit = GetTriggerUnit()
	local unit this_2 = leavingUnit
	local integer id = 1095577649
	local unit u
	local trigger this_3
	if GetUnitAbilityLevel(this_2, id) == 0 then
		set u = leavingUnit
		set OnUnitEnterLeave_tempUnits[OnUnitEnterLeave_tempUnitsCount] = u
		set OnUnitEnterLeave_tempUnitsCount = OnUnitEnterLeave_tempUnitsCount + 1
		set this_3 = OnUnitEnterLeave_eventTrigger
		call TriggerExecute(this_3)
		set OnUnitEnterLeave_tempUnitsCount = OnUnitEnterLeave_tempUnitsCount - 1
	endif
	set leavingUnit = null
	set this_2 = null
	set u = null
	set this_3 = null
endfunction

function prepareUnit takes unit u returns nothing
	local unit receiver = u
	local unit this_2 = receiver
	local integer abil = 1095577649
	local unit receiver_2
	local unit this_3
	local integer abil_2
	local boolean flag
	local unit u_2
	local trigger this_4
	call UnitAddAbility(this_2, abil)
	set receiver_2 = receiver
	set this_3 = receiver_2
	set abil_2 = 1095577649
	set flag = true
	call UnitMakeAbilityPermanent(this_3, flag, abil_2)
	set u_2 = u
	set OnUnitEnterLeave_tempUnits[OnUnitEnterLeave_tempUnitsCount] = u_2
	set OnUnitEnterLeave_tempUnitsCount = OnUnitEnterLeave_tempUnitsCount + 1
	set this_4 = OnUnitEnterLeave_eventTrigger
	call TriggerEvaluate(this_4)
	set OnUnitEnterLeave_tempUnitsCount = OnUnitEnterLeave_tempUnitsCount - 1
	set receiver = null
	set receiver_2 = null
	set this_2 = null
	set this_3 = null
	set u_2 = null
	set this_4 = null
endfunction

function OnUnitEnterLeave_closure_impl_2 takes nothing returns nothing
	call prepareUnit(GetFilterUnit())
endfunction

function OnUnitEnterLeave_closure_impl_3 takes nothing returns nothing
	call prepareUnit(GetEnumUnit())
endfunction

function Trig_Archer_1_Actions takes nothing returns nothing
	local integer unitId = 1848651824
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1848651825
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Archer_1_Byzantine_Actions takes nothing returns nothing
	local integer unitId = 1848651841
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1848651831
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Archer_1_Byzantine_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889809) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889809
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 1) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Archer_1_Byzantine_Conditions takes nothing returns boolean
	if  not Trig_Archer_1_Byzantine_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Archer_1_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889802) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889802
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 1) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Archer_1_Conditions takes nothing returns boolean
	if  not Trig_Archer_1_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Archer_2_Actions takes nothing returns nothing
	local integer unitId = 1848651826
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1848651824
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Archer_2_Byzantine_Actions takes nothing returns nothing
	local integer unitId = 1848651833
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1848651841
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Archer_2_Byzantine_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889809) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889809
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 2) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Archer_2_Byzantine_Conditions takes nothing returns boolean
	if  not Trig_Archer_2_Byzantine_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Archer_2_Func004C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889802) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889802
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 2) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Archer_2_Conditions takes nothing returns boolean
	if  not Trig_Archer_2_Func004C() then
		return false
	endif
	return true
endfunction

function Trig_Arquebusers_Actions takes nothing returns nothing
	local integer unitId = 1848651843
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1848651842
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Arquebusers_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889812) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889812
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 1) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Arquebusers_Conditions takes nothing returns boolean
	if  not Trig_Arquebusers_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Capitol_Castle_T3_Actions takes nothing returns nothing
	local integer abilityId = 1093677634
	local unit whichUnit = GetTriggerUnit()
	call UnitAddAbility(whichUnit, abilityId)
	set whichUnit = null
endfunction

function Trig_Capitol_Castle_T3_Func002C takes nothing returns boolean
	if  not (GetUnitTypeId(GetTriggerUnit()) == 1747988531) then
		return false
	endif
	return true
endfunction

function Trig_Capitol_Castle_T3_Conditions takes nothing returns boolean
	if  not Trig_Capitol_Castle_T3_Func002C() then
		return false
	endif
	return true
endfunction

function Trig_Capitol_City_Hall_Up_Copy_Actions takes nothing returns nothing
	local integer abilityId = 1093677634
	local unit whichUnit = GetTriggerUnit()
	call UnitAddAbility(whichUnit, abilityId)
	set whichUnit = null
endfunction

function Trig_Capitol_City_Hall_Up_Copy_Func002C takes nothing returns boolean
	if  not (GetUnitTypeId(GetTriggerUnit()) == 1747988530) then
		return false
	endif
	return true
endfunction

function Trig_Capitol_City_Hall_Up_Copy_Conditions takes nothing returns boolean
	if  not Trig_Capitol_City_Hall_Up_Copy_Func002C() then
		return false
	endif
	return true
endfunction

function Trig_Church_Range_Check_Actions takes nothing returns nothing
	local real radius
	local location whichLocation
	local real radius_2
	local location whichLocation_2
	local boolexpr filter
	local group g
	local group whichGroup
	local code callback
	local boolean wantDestroy
	set udg_BuildingRangeCheckPoint = GetUnitLoc(GetTriggerUnit())
	set radius = 1500.00
	set whichLocation = udg_BuildingRangeCheckPoint
	set radius_2 = radius
	set whichLocation_2 = whichLocation
	set filter = null
	set g = CreateGroup()
	call GroupEnumUnitsInRangeOfLoc(g, whichLocation_2, radius_2, filter)
	call DestroyBoolExpr(filter)
	set udg_BuildingRangeCheck = g
	set whichGroup = udg_BuildingRangeCheck
	set callback = ref_function_Trig_Church_Range_Check_Func003A
	set wantDestroy = bj_wantDestroyGroup
	set bj_wantDestroyGroup = false
	call ForGroup(whichGroup, callback)
	if wantDestroy then
		call DestroyGroup(whichGroup)
	endif
	call DestroyGroup(udg_BuildingRangeCheck)
	call RemoveLocation(udg_BuildingRangeCheckPoint)
	set whichLocation = null
	set whichLocation_2 = null
	set filter = null
	set g = null
	set whichGroup = null
endfunction

function Trig_Church_Range_Check_Func006C takes nothing returns boolean
	if  not (GetUnitTypeId(GetTriggerUnit()) == 1747988785) then
		return false
	endif
	return true
endfunction

function Trig_Church_Range_Check_Conditions takes nothing returns boolean
	if  not Trig_Church_Range_Check_Func006C() then
		return false
	endif
	return true
endfunction

function Trig_Church_Range_Check_Func003Func001Func001C takes nothing returns boolean
	if  not (GetOwningPlayer(GetEnumUnit()) == GetOwningPlayer(GetTriggerUnit())) then
		return false
	endif
	if  not (GetEnumUnit() != GetTriggerUnit()) then
		return false
	endif
	if  not (GetUnitTypeId(GetEnumUnit()) == 1747988785) then
		return false
	endif
	return true
endfunction

function Trig_Church_Range_Check_Func003Func001C takes nothing returns boolean
	if  not Trig_Church_Range_Check_Func003Func001Func001C() then
		return false
	endif
	return true
endfunction

function Trig_Church_Range_Check_Func003A takes nothing returns nothing
	local force toForce
	local string message
	local player whichPlayer
	local force f
	local integer delta
	local player whichPlayer_2
	local playerstate whichPlayerState
	local player whichPlayer_3
	local playerstate whichPlayerState_2
	local integer delta_2
	local player whichPlayer_4
	local playerstate whichPlayerState_3
	local integer delta_3
	local player whichPlayer_5
	local playerstate whichPlayerState_4
	local integer delta_4
	local integer delta_5
	local player whichPlayer_6
	local playerstate whichPlayerState_5
	local player whichPlayer_7
	local playerstate whichPlayerState_6
	local integer delta_6
	local player whichPlayer_8
	local playerstate whichPlayerState_7
	local integer delta_7
	local player whichPlayer_9
	local playerstate whichPlayerState_8
	local integer delta_8
	if Trig_Church_Range_Check_Func003Func001C() then
		call KillUnit(GetTriggerUnit())
		set whichPlayer = GetOwningPlayer(GetTriggerUnit())
		set f = CreateForce()
		call ForceAddPlayer(f, whichPlayer)
		set toForce = f
		set message = "TRIGSTR_1681"
		if IsPlayerInForce(GetLocalPlayer(), toForce) then
			call DisplayTextToPlayer(GetLocalPlayer(), 0., 0., message)
		endif
		set delta = 100
		set whichPlayer_2 = GetOwningPlayer(GetTriggerUnit())
		set whichPlayerState = PLAYER_STATE_RESOURCE_GOLD
		if delta > 0 then
			if whichPlayerState == PLAYER_STATE_RESOURCE_GOLD then
				set whichPlayer_3 = whichPlayer_2
				set whichPlayerState_2 = PLAYER_STATE_GOLD_GATHERED
				set delta_2 = delta
				call SetPlayerState(whichPlayer_3, whichPlayerState_2, GetPlayerState(whichPlayer_3, whichPlayerState_2) + delta_2)
			elseif whichPlayerState == PLAYER_STATE_RESOURCE_LUMBER then
				set whichPlayer_4 = whichPlayer_2
				set whichPlayerState_3 = PLAYER_STATE_LUMBER_GATHERED
				set delta_3 = delta
				call SetPlayerState(whichPlayer_4, whichPlayerState_3, GetPlayerState(whichPlayer_4, whichPlayerState_3) + delta_3)
			endif
		endif
		set whichPlayer_5 = whichPlayer_2
		set whichPlayerState_4 = whichPlayerState
		set delta_4 = delta
		call SetPlayerState(whichPlayer_5, whichPlayerState_4, GetPlayerState(whichPlayer_5, whichPlayerState_4) + delta_4)
		set delta_5 = 175
		set whichPlayer_6 = GetOwningPlayer(GetTriggerUnit())
		set whichPlayerState_5 = PLAYER_STATE_RESOURCE_LUMBER
		if delta_5 > 0 then
			if whichPlayerState_5 == PLAYER_STATE_RESOURCE_GOLD then
				set whichPlayer_7 = whichPlayer_6
				set whichPlayerState_6 = PLAYER_STATE_GOLD_GATHERED
				set delta_6 = delta_5
				call SetPlayerState(whichPlayer_7, whichPlayerState_6, GetPlayerState(whichPlayer_7, whichPlayerState_6) + delta_6)
			elseif whichPlayerState_5 == PLAYER_STATE_RESOURCE_LUMBER then
				set whichPlayer_8 = whichPlayer_6
				set whichPlayerState_7 = PLAYER_STATE_LUMBER_GATHERED
				set delta_7 = delta_5
				call SetPlayerState(whichPlayer_8, whichPlayerState_7, GetPlayerState(whichPlayer_8, whichPlayerState_7) + delta_7)
			endif
		endif
		set whichPlayer_9 = whichPlayer_6
		set whichPlayerState_8 = whichPlayerState_5
		set delta_8 = delta_5
		call SetPlayerState(whichPlayer_9, whichPlayerState_8, GetPlayerState(whichPlayer_9, whichPlayerState_8) + delta_8)
	endif
	set toForce = null
	set whichPlayer = null
	set f = null
	set whichPlayer_2 = null
	set whichPlayerState = null
	set whichPlayer_3 = null
	set whichPlayerState_2 = null
	set whichPlayer_4 = null
	set whichPlayerState_3 = null
	set whichPlayer_5 = null
	set whichPlayerState_4 = null
	set whichPlayer_6 = null
	set whichPlayerState_5 = null
	set whichPlayer_7 = null
	set whichPlayerState_6 = null
	set whichPlayer_8 = null
	set whichPlayerState_7 = null
	set whichPlayer_9 = null
	set whichPlayerState_8 = null
endfunction

function Trig_Disabled_units_Byzantine_Actions takes nothing returns nothing
	set udg_AllPlayerUnits = bj_FORCE_ALL_PLAYERS
	call ForForce(udg_AllPlayerUnits, ref_function_Trig_Disabled_units_Byzantine_Func002A)
endfunction

function Trig_Disabled_units_Byzantine_Func002A takes nothing returns nothing
	local integer unitId = 1747989570
	local boolean allowed = false
	local player whichPlayer = GetEnumPlayer()
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	local integer unitId_3
	local boolean allowed_3
	local player whichPlayer_3
	local integer unitId_4
	local boolean allowed_4
	local player whichPlayer_4
	local integer unitId_5
	local boolean allowed_5
	local player whichPlayer_5
	local integer unitId_6
	local boolean allowed_6
	local player whichPlayer_6
	local integer unitId_7
	local boolean allowed_7
	local player whichPlayer_7
	local integer unitId_8
	local boolean allowed_8
	local player whichPlayer_8
	local integer unitId_9
	local boolean allowed_9
	local player whichPlayer_9
	local integer unitId_10
	local boolean allowed_10
	local player whichPlayer_10
	local integer unitId_11
	local boolean allowed_11
	local player whichPlayer_11
	local integer unitId_12
	local boolean allowed_12
	local player whichPlayer_12
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747989556
	set allowed_2 = false
	set whichPlayer_2 = GetEnumPlayer()
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set unitId_3 = 1747989559
	set allowed_3 = false
	set whichPlayer_3 = GetEnumPlayer()
	if allowed_3 then
		call SetPlayerTechMaxAllowed(whichPlayer_3, unitId_3, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_3, unitId_3, 0)
	endif
	set unitId_4 = 1747989557
	set allowed_4 = false
	set whichPlayer_4 = GetEnumPlayer()
	if allowed_4 then
		call SetPlayerTechMaxAllowed(whichPlayer_4, unitId_4, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_4, unitId_4, 0)
	endif
	set unitId_5 = 1747989560
	set allowed_5 = false
	set whichPlayer_5 = GetEnumPlayer()
	if allowed_5 then
		call SetPlayerTechMaxAllowed(whichPlayer_5, unitId_5, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_5, unitId_5, 0)
	endif
	set unitId_6 = 1747989573
	set allowed_6 = false
	set whichPlayer_6 = GetEnumPlayer()
	if allowed_6 then
		call SetPlayerTechMaxAllowed(whichPlayer_6, unitId_6, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_6, unitId_6, 0)
	endif
	set unitId_7 = 1747989574
	set allowed_7 = false
	set whichPlayer_7 = GetEnumPlayer()
	if allowed_7 then
		call SetPlayerTechMaxAllowed(whichPlayer_7, unitId_7, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_7, unitId_7, 0)
	endif
	set unitId_8 = 1848651841
	set allowed_8 = false
	set whichPlayer_8 = GetEnumPlayer()
	if allowed_8 then
		call SetPlayerTechMaxAllowed(whichPlayer_8, unitId_8, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_8, unitId_8, 0)
	endif
	set unitId_9 = 1848651833
	set allowed_9 = false
	set whichPlayer_9 = GetEnumPlayer()
	if allowed_9 then
		call SetPlayerTechMaxAllowed(whichPlayer_9, unitId_9, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_9, unitId_9, 0)
	endif
	set unitId_10 = 1848651832
	set allowed_10 = false
	set whichPlayer_10 = GetEnumPlayer()
	if allowed_10 then
		call SetPlayerTechMaxAllowed(whichPlayer_10, unitId_10, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_10, unitId_10, 0)
	endif
	set unitId_11 = 1747989582
	set allowed_11 = false
	set whichPlayer_11 = GetEnumPlayer()
	if allowed_11 then
		call SetPlayerTechMaxAllowed(whichPlayer_11, unitId_11, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_11, unitId_11, 0)
	endif
	set unitId_12 = 1848651844
	set allowed_12 = false
	set whichPlayer_12 = GetEnumPlayer()
	if allowed_12 then
		call SetPlayerTechMaxAllowed(whichPlayer_12, unitId_12, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_12, unitId_12, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
	set whichPlayer_3 = null
	set whichPlayer_4 = null
	set whichPlayer_5 = null
	set whichPlayer_6 = null
	set whichPlayer_7 = null
	set whichPlayer_8 = null
	set whichPlayer_9 = null
	set whichPlayer_10 = null
	set whichPlayer_11 = null
	set whichPlayer_12 = null
endfunction

function Trig_Disabled_units_ME_Actions takes nothing returns nothing
	set udg_AllPlayerUnits = bj_FORCE_ALL_PLAYERS
	call ForForce(udg_AllPlayerUnits, ref_function_Trig_Disabled_units_ME_Func002A)
endfunction

function Trig_Disabled_units_ME_Func002A takes nothing returns nothing
	local integer unitId = 1747989815
	local boolean allowed = false
	local player whichPlayer = GetEnumPlayer()
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	local integer unitId_3
	local boolean allowed_3
	local player whichPlayer_3
	local integer unitId_4
	local boolean allowed_4
	local player whichPlayer_4
	local integer unitId_5
	local boolean allowed_5
	local player whichPlayer_5
	local integer unitId_6
	local boolean allowed_6
	local player whichPlayer_6
	local integer unitId_7
	local boolean allowed_7
	local player whichPlayer_7
	local integer unitId_8
	local boolean allowed_8
	local player whichPlayer_8
	local integer unitId_9
	local boolean allowed_9
	local player whichPlayer_9
	local integer unitId_10
	local boolean allowed_10
	local player whichPlayer_10
	local integer unitId_11
	local boolean allowed_11
	local player whichPlayer_11
	local integer unitId_12
	local boolean allowed_12
	local player whichPlayer_12
	local integer unitId_13
	local boolean allowed_13
	local player whichPlayer_13
	local integer unitId_14
	local boolean allowed_14
	local player whichPlayer_14
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747989816
	set allowed_2 = false
	set whichPlayer_2 = GetEnumPlayer()
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set unitId_3 = 1747989825
	set allowed_3 = false
	set whichPlayer_3 = GetEnumPlayer()
	if allowed_3 then
		call SetPlayerTechMaxAllowed(whichPlayer_3, unitId_3, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_3, unitId_3, 0)
	endif
	set unitId_4 = 1747989814
	set allowed_4 = false
	set whichPlayer_4 = GetEnumPlayer()
	if allowed_4 then
		call SetPlayerTechMaxAllowed(whichPlayer_4, unitId_4, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_4, unitId_4, 0)
	endif
	set unitId_5 = 1747989830
	set allowed_5 = false
	set whichPlayer_5 = GetEnumPlayer()
	if allowed_5 then
		call SetPlayerTechMaxAllowed(whichPlayer_5, unitId_5, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_5, unitId_5, 0)
	endif
	set unitId_6 = 1848651844
	set allowed_6 = false
	set whichPlayer_6 = GetEnumPlayer()
	if allowed_6 then
		call SetPlayerTechMaxAllowed(whichPlayer_6, unitId_6, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_6, unitId_6, 0)
	endif
	set unitId_7 = 1747989833
	set allowed_7 = false
	set whichPlayer_7 = GetEnumPlayer()
	if allowed_7 then
		call SetPlayerTechMaxAllowed(whichPlayer_7, unitId_7, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_7, unitId_7, 0)
	endif
	set unitId_8 = 1747989832
	set allowed_8 = false
	set whichPlayer_8 = GetEnumPlayer()
	if allowed_8 then
		call SetPlayerTechMaxAllowed(whichPlayer_8, unitId_8, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_8, unitId_8, 0)
	endif
	set unitId_9 = 1747989835
	set allowed_9 = false
	set whichPlayer_9 = GetEnumPlayer()
	if allowed_9 then
		call SetPlayerTechMaxAllowed(whichPlayer_9, unitId_9, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_9, unitId_9, 0)
	endif
	set unitId_10 = 1747989836
	set allowed_10 = false
	set whichPlayer_10 = GetEnumPlayer()
	if allowed_10 then
		call SetPlayerTechMaxAllowed(whichPlayer_10, unitId_10, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_10, unitId_10, 0)
	endif
	set unitId_11 = 1848651848
	set allowed_11 = false
	set whichPlayer_11 = GetEnumPlayer()
	if allowed_11 then
		call SetPlayerTechMaxAllowed(whichPlayer_11, unitId_11, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_11, unitId_11, 0)
	endif
	set unitId_12 = 1848651846
	set allowed_12 = false
	set whichPlayer_12 = GetEnumPlayer()
	if allowed_12 then
		call SetPlayerTechMaxAllowed(whichPlayer_12, unitId_12, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_12, unitId_12, 0)
	endif
	set unitId_13 = 1747989828
	set allowed_13 = false
	set whichPlayer_13 = GetEnumPlayer()
	if allowed_13 then
		call SetPlayerTechMaxAllowed(whichPlayer_13, unitId_13, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_13, unitId_13, 0)
	endif
	set unitId_14 = 1747989826
	set allowed_14 = false
	set whichPlayer_14 = GetEnumPlayer()
	if allowed_14 then
		call SetPlayerTechMaxAllowed(whichPlayer_14, unitId_14, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_14, unitId_14, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
	set whichPlayer_3 = null
	set whichPlayer_4 = null
	set whichPlayer_5 = null
	set whichPlayer_6 = null
	set whichPlayer_7 = null
	set whichPlayer_8 = null
	set whichPlayer_9 = null
	set whichPlayer_10 = null
	set whichPlayer_11 = null
	set whichPlayer_12 = null
	set whichPlayer_13 = null
	set whichPlayer_14 = null
endfunction

function Trig_Disabled_units_at_beginning_Actions takes nothing returns nothing
	set udg_AllPlayerUnits = bj_FORCE_ALL_PLAYERS
	call ForForce(udg_AllPlayerUnits, ref_function_Trig_Disabled_units_at_beginning_Func002A)
endfunction

function Trig_Disabled_units_at_beginning_Func002A takes nothing returns nothing
	local integer unitId = 1747989057
	local boolean allowed = false
	local player whichPlayer = GetEnumPlayer()
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	local integer unitId_3
	local boolean allowed_3
	local player whichPlayer_3
	local integer unitId_4
	local boolean allowed_4
	local player whichPlayer_4
	local integer unitId_5
	local boolean allowed_5
	local player whichPlayer_5
	local integer unitId_6
	local boolean allowed_6
	local player whichPlayer_6
	local integer unitId_7
	local boolean allowed_7
	local player whichPlayer_7
	local integer unitId_8
	local boolean allowed_8
	local player whichPlayer_8
	local integer unitId_9
	local boolean allowed_9
	local player whichPlayer_9
	local integer unitId_10
	local boolean allowed_10
	local player whichPlayer_10
	local integer unitId_11
	local boolean allowed_11
	local player whichPlayer_11
	local integer unitId_12
	local boolean allowed_12
	local player whichPlayer_12
	local integer unitId_13
	local boolean allowed_13
	local player whichPlayer_13
	local integer unitId_14
	local boolean allowed_14
	local player whichPlayer_14
	local integer unitId_15
	local boolean allowed_15
	local player whichPlayer_15
	local integer unitId_16
	local boolean allowed_16
	local player whichPlayer_16
	local integer unitId_17
	local boolean allowed_17
	local player whichPlayer_17
	local integer unitId_18
	local boolean allowed_18
	local player whichPlayer_18
	local integer unitId_19
	local boolean allowed_19
	local player whichPlayer_19
	local integer unitId_20
	local boolean allowed_20
	local player whichPlayer_20
	local integer unitId_21
	local boolean allowed_21
	local player whichPlayer_21
	local integer unitId_22
	local boolean allowed_22
	local player whichPlayer_22
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747988558
	set allowed_2 = false
	set whichPlayer_2 = GetEnumPlayer()
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set unitId_3 = 1747988551
	set allowed_3 = false
	set whichPlayer_3 = GetEnumPlayer()
	if allowed_3 then
		call SetPlayerTechMaxAllowed(whichPlayer_3, unitId_3, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_3, unitId_3, 0)
	endif
	set unitId_4 = 1747989066
	set allowed_4 = false
	set whichPlayer_4 = GetEnumPlayer()
	if allowed_4 then
		call SetPlayerTechMaxAllowed(whichPlayer_4, unitId_4, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_4, unitId_4, 0)
	endif
	set unitId_5 = 1848651824
	set allowed_5 = false
	set whichPlayer_5 = GetEnumPlayer()
	if allowed_5 then
		call SetPlayerTechMaxAllowed(whichPlayer_5, unitId_5, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_5, unitId_5, 0)
	endif
	set unitId_6 = 1848651826
	set allowed_6 = false
	set whichPlayer_6 = GetEnumPlayer()
	if allowed_6 then
		call SetPlayerTechMaxAllowed(whichPlayer_6, unitId_6, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_6, unitId_6, 0)
	endif
	set unitId_7 = 1747988818
	set allowed_7 = false
	set whichPlayer_7 = GetEnumPlayer()
	if allowed_7 then
		call SetPlayerTechMaxAllowed(whichPlayer_7, unitId_7, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_7, unitId_7, 0)
	endif
	set unitId_8 = 1747989080
	set allowed_8 = false
	set whichPlayer_8 = GetEnumPlayer()
	if allowed_8 then
		call SetPlayerTechMaxAllowed(whichPlayer_8, unitId_8, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_8, unitId_8, 0)
	endif
	set unitId_9 = 1747989072
	set allowed_9 = false
	set whichPlayer_9 = GetEnumPlayer()
	if allowed_9 then
		call SetPlayerTechMaxAllowed(whichPlayer_9, unitId_9, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_9, unitId_9, 0)
	endif
	set unitId_10 = 1747989082
	set allowed_10 = false
	set whichPlayer_10 = GetEnumPlayer()
	if allowed_10 then
		call SetPlayerTechMaxAllowed(whichPlayer_10, unitId_10, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_10, unitId_10, 0)
	endif
	set unitId_11 = 1747988559
	set allowed_11 = false
	set whichPlayer_11 = GetEnumPlayer()
	if allowed_11 then
		call SetPlayerTechMaxAllowed(whichPlayer_11, unitId_11, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_11, unitId_11, 0)
	endif
	set unitId_12 = 1747988812
	set allowed_12 = false
	set whichPlayer_12 = GetEnumPlayer()
	if allowed_12 then
		call SetPlayerTechMaxAllowed(whichPlayer_12, unitId_12, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_12, unitId_12, 0)
	endif
	set unitId_13 = 1848651828
	set allowed_13 = false
	set whichPlayer_13 = GetEnumPlayer()
	if allowed_13 then
		call SetPlayerTechMaxAllowed(whichPlayer_13, unitId_13, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_13, unitId_13, 0)
	endif
	set unitId_14 = 1747989065
	set allowed_14 = false
	set whichPlayer_14 = GetEnumPlayer()
	if allowed_14 then
		call SetPlayerTechMaxAllowed(whichPlayer_14, unitId_14, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_14, unitId_14, 0)
	endif
	set unitId_15 = 1747989067
	set allowed_15 = false
	set whichPlayer_15 = GetEnumPlayer()
	if allowed_15 then
		call SetPlayerTechMaxAllowed(whichPlayer_15, unitId_15, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_15, unitId_15, 0)
	endif
	set unitId_16 = 1747989301
	set allowed_16 = false
	set whichPlayer_16 = GetEnumPlayer()
	if allowed_16 then
		call SetPlayerTechMaxAllowed(whichPlayer_16, unitId_16, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_16, unitId_16, 0)
	endif
	set unitId_17 = 1848651843
	set allowed_17 = false
	set whichPlayer_17 = GetEnumPlayer()
	if allowed_17 then
		call SetPlayerTechMaxAllowed(whichPlayer_17, unitId_17, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_17, unitId_17, 0)
	endif
	set unitId_18 = 1747988561
	set allowed_18 = false
	set whichPlayer_18 = GetEnumPlayer()
	if allowed_18 then
		call SetPlayerTechMaxAllowed(whichPlayer_18, unitId_18, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_18, unitId_18, 0)
	endif
	set unitId_19 = 1747988788
	set allowed_19 = false
	set whichPlayer_19 = GetEnumPlayer()
	if allowed_19 then
		call SetPlayerTechMaxAllowed(whichPlayer_19, unitId_19, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_19, unitId_19, 0)
	endif
	set unitId_20 = 1747988565
	set allowed_20 = false
	set whichPlayer_20 = GetEnumPlayer()
	if allowed_20 then
		call SetPlayerTechMaxAllowed(whichPlayer_20, unitId_20, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_20, unitId_20, 0)
	endif
	set unitId_21 = 1747988566
	set allowed_21 = false
	set whichPlayer_21 = GetEnumPlayer()
	if allowed_21 then
		call SetPlayerTechMaxAllowed(whichPlayer_21, unitId_21, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_21, unitId_21, 0)
	endif
	set unitId_22 = 1747988567
	set allowed_22 = false
	set whichPlayer_22 = GetEnumPlayer()
	if allowed_22 then
		call SetPlayerTechMaxAllowed(whichPlayer_22, unitId_22, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_22, unitId_22, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
	set whichPlayer_3 = null
	set whichPlayer_4 = null
	set whichPlayer_5 = null
	set whichPlayer_6 = null
	set whichPlayer_7 = null
	set whichPlayer_8 = null
	set whichPlayer_9 = null
	set whichPlayer_10 = null
	set whichPlayer_11 = null
	set whichPlayer_12 = null
	set whichPlayer_13 = null
	set whichPlayer_14 = null
	set whichPlayer_15 = null
	set whichPlayer_16 = null
	set whichPlayer_17 = null
	set whichPlayer_18 = null
	set whichPlayer_19 = null
	set whichPlayer_20 = null
	set whichPlayer_21 = null
	set whichPlayer_22 = null
endfunction

function Trig_F9_Actions takes nothing returns nothing
	call CreateQuestBJ(bj_QUESTTYPE_OPT_DISCOVERED, "TRIGSTR_097", "TRIGSTR_098", "ReplaceableTextures\\CommandButtons\\BTNSteelMelee.blp")
	call CreateQuestBJ(bj_QUESTTYPE_OPT_DISCOVERED, "TRIGSTR_103", "TRIGSTR_104", "ReplaceableTextures\\WorldEditUI\\Doodad-Cinematic.blp")
	call CreateQuestBJ(bj_QUESTTYPE_OPT_DISCOVERED, "TRIGSTR_2667", "TRIGSTR_2668", "ReplaceableTextures\\WorldEditUI\\Editor-MultipleUnits.blp")
endfunction

function Trig_FarmHouse_Actions takes nothing returns nothing
	local integer unitId = 1747988788
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747988535
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_FarmHouse_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889780) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889780
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 1) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_FarmHouse_Conditions takes nothing returns boolean
	if  not Trig_FarmHouse_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Gate_Closing_IronGate_H_Actions takes nothing returns nothing
	local location loc
	local real dx
	local real dy
	local location center
	local real width
	local real height
	local real x
	local real y
	local rect r
	local rect r_2
	local boolexpr filter
	local group g
	local group whichGroup
	local code callback
	local boolean wantDestroy
	local unit whichUnit
	set udg_Temp_Point = GetUnitLoc(GetSpellAbilityUnit())
	set loc = udg_Temp_Point
	set dx = 0.00
	set dy = 200.00
	set udg_GHoriTP = Location(GetLocationX(loc) + dx, GetLocationY(loc) + dy)
	set center = udg_Temp_Point
	set width = 280.00
	set height = 300.00
	set x = GetLocationX(center)
	set y = GetLocationY(center)
	set udg_GHoriDetectCenter = Rect(x - width * 0.5, y - height * 0.5, x + width * 0.5, y + height * 0.5)
	set r = udg_GHoriDetectCenter
	set r_2 = r
	set filter = null
	set g = CreateGroup()
	call GroupEnumUnitsInRect(g, r_2, filter)
	call DestroyBoolExpr(filter)
	set udg_GateMovingUnits1 = g
	set whichGroup = udg_GateMovingUnits1
	set callback = ref_function_Trig_Gate_Closing_IronGate_H_Func005A
	set wantDestroy = bj_wantDestroyGroup
	set bj_wantDestroyGroup = false
	call ForGroup(whichGroup, callback)
	if wantDestroy then
		call DestroyGroup(whichGroup)
	endif
	call ReplaceUnitBJ(GetSpellAbilityUnit(), 1747989079, bj_UNIT_STATE_METHOD_RELATIVE)
	set whichUnit = bj_lastReplacedUnit
	call SetUnitAnimation(whichUnit, "stand")
	call DestroyGroup(udg_GateMovingUnits1)
	call RemoveLocation(udg_GHoriTP)
	call RemoveLocation(udg_Temp_Point)
	set loc = null
	set center = null
	set r = null
	set r_2 = null
	set filter = null
	set g = null
	set whichGroup = null
	set whichUnit = null
endfunction

function Trig_Gate_Closing_IronGate_H_Conditions takes nothing returns boolean
	if  not (GetSpellAbilityId() == 1093677624) then
		return false
	endif
	if  not (GetUnitTypeId(GetSpellAbilityUnit()) == 1747989078) then
		return false
	endif
	return true
endfunction

function Trig_Gate_Closing_IronGate_H_Func005Func001C takes nothing returns boolean
	if  not (IsUnitType(GetEnumUnit(), UNIT_TYPE_STRUCTURE) == false) then
		return false
	endif
	return true
endfunction

function Trig_Gate_Closing_IronGate_H_Func005A takes nothing returns nothing
	if Trig_Gate_Closing_IronGate_H_Func005Func001C() then
		call SetUnitPositionLoc(GetEnumUnit(), udg_GHoriTP)
	endif
endfunction

function Trig_Gate_Closing_IronGate_V_Actions takes nothing returns nothing
	local location loc
	local real dx
	local real dy
	local location center
	local real width
	local real height
	local real x
	local real y
	local rect r
	local rect r_2
	local boolexpr filter
	local group g
	local group whichGroup
	local code callback
	local boolean wantDestroy
	local unit whichUnit
	set udg_Temp_Point = GetUnitLoc(GetSpellAbilityUnit())
	set loc = udg_Temp_Point
	set dx = 200.00
	set dy = 0.00
	set udg_GVertRP = Location(GetLocationX(loc) + dx, GetLocationY(loc) + dy)
	set center = udg_Temp_Point
	set width = 300.00
	set height = 280.00
	set x = GetLocationX(center)
	set y = GetLocationY(center)
	set udg_GVertDetectCenter = Rect(x - width * 0.5, y - height * 0.5, x + width * 0.5, y + height * 0.5)
	set r = udg_GVertDetectCenter
	set r_2 = r
	set filter = null
	set g = CreateGroup()
	call GroupEnumUnitsInRect(g, r_2, filter)
	call DestroyBoolExpr(filter)
	set udg_GateMovingUnits1 = g
	set whichGroup = udg_GateMovingUnits1
	set callback = ref_function_Trig_Gate_Closing_IronGate_V_Func005A
	set wantDestroy = bj_wantDestroyGroup
	set bj_wantDestroyGroup = false
	call ForGroup(whichGroup, callback)
	if wantDestroy then
		call DestroyGroup(whichGroup)
	endif
	call ReplaceUnitBJ(GetSpellAbilityUnit(), 1747988826, bj_UNIT_STATE_METHOD_RELATIVE)
	set whichUnit = bj_lastReplacedUnit
	call SetUnitAnimation(whichUnit, "stand")
	call DestroyGroup(udg_GateMovingUnits1)
	call RemoveLocation(udg_GVertRP)
	call RemoveLocation(udg_Temp_Point)
	set loc = null
	set center = null
	set r = null
	set r_2 = null
	set filter = null
	set g = null
	set whichGroup = null
	set whichUnit = null
endfunction

function Trig_Gate_Closing_IronGate_V_Conditions takes nothing returns boolean
	if  not (GetSpellAbilityId() == 1093677624) then
		return false
	endif
	if  not (GetUnitTypeId(GetSpellAbilityUnit()) == 1747989077) then
		return false
	endif
	return true
endfunction

function Trig_Gate_Closing_IronGate_V_Func005Func001C takes nothing returns boolean
	if  not (IsUnitType(GetEnumUnit(), UNIT_TYPE_STRUCTURE) == false) then
		return false
	endif
	return true
endfunction

function Trig_Gate_Closing_IronGate_V_Func005A takes nothing returns nothing
	if Trig_Gate_Closing_IronGate_V_Func005Func001C() then
		call SetUnitPositionLoc(GetEnumUnit(), udg_GVertRP)
	endif
endfunction

function Trig_Gate_Closing_WoodGate_H_Actions takes nothing returns nothing
	local location loc
	local real dx
	local real dy
	local location center
	local real width
	local real height
	local real x
	local real y
	local rect r
	local rect r_2
	local boolexpr filter
	local group g
	local group whichGroup
	local code callback
	local boolean wantDestroy
	local unit whichUnit
	set udg_Temp_Point = GetUnitLoc(GetSpellAbilityUnit())
	set loc = udg_Temp_Point
	set dx = 0.00
	set dy = 200.00
	set udg_GHoriTP = Location(GetLocationX(loc) + dx, GetLocationY(loc) + dy)
	set center = udg_Temp_Point
	set width = 280.00
	set height = 300.00
	set x = GetLocationX(center)
	set y = GetLocationY(center)
	set udg_GHoriDetectCenter = Rect(x - width * 0.5, y - height * 0.5, x + width * 0.5, y + height * 0.5)
	set r = udg_GHoriDetectCenter
	set r_2 = r
	set filter = null
	set g = CreateGroup()
	call GroupEnumUnitsInRect(g, r_2, filter)
	call DestroyBoolExpr(filter)
	set udg_GateMovingUnits1 = g
	set whichGroup = udg_GateMovingUnits1
	set callback = ref_function_Trig_Gate_Closing_WoodGate_H_Func005A
	set wantDestroy = bj_wantDestroyGroup
	set bj_wantDestroyGroup = false
	call ForGroup(whichGroup, callback)
	if wantDestroy then
		call DestroyGroup(whichGroup)
	endif
	call ReplaceUnitBJ(GetSpellAbilityUnit(), 1747988824, bj_UNIT_STATE_METHOD_RELATIVE)
	set whichUnit = bj_lastReplacedUnit
	call SetUnitAnimation(whichUnit, "stand")
	call DestroyGroup(udg_GateMovingUnits1)
	call RemoveLocation(udg_GHoriTP)
	call RemoveLocation(udg_Temp_Point)
	set loc = null
	set center = null
	set r = null
	set r_2 = null
	set filter = null
	set g = null
	set whichGroup = null
	set whichUnit = null
endfunction

function Trig_Gate_Closing_WoodGate_H_Conditions takes nothing returns boolean
	if  not (GetSpellAbilityId() == 1093677624) then
		return false
	endif
	if  not (GetUnitTypeId(GetSpellAbilityUnit()) == 1747989046) then
		return false
	endif
	return true
endfunction

function Trig_Gate_Closing_WoodGate_H_Func005Func001C takes nothing returns boolean
	if  not (IsUnitType(GetEnumUnit(), UNIT_TYPE_STRUCTURE) == false) then
		return false
	endif
	return true
endfunction

function Trig_Gate_Closing_WoodGate_H_Func005A takes nothing returns nothing
	if Trig_Gate_Closing_WoodGate_H_Func005Func001C() then
		call SetUnitPositionLoc(GetEnumUnit(), udg_GHoriTP)
	endif
endfunction

function Trig_Gate_Closing_WoodGate_V_Actions takes nothing returns nothing
	local location loc
	local real dx
	local real dy
	local location center
	local real width
	local real height
	local real x
	local real y
	local rect r
	local rect r_2
	local boolexpr filter
	local group g
	local group whichGroup
	local code callback
	local boolean wantDestroy
	local unit whichUnit
	set udg_Temp_Point = GetUnitLoc(GetSpellAbilityUnit())
	set loc = udg_Temp_Point
	set dx = 200.00
	set dy = 0.00
	set udg_GVertRP = Location(GetLocationX(loc) + dx, GetLocationY(loc) + dy)
	set center = udg_Temp_Point
	set width = 300.00
	set height = 280.00
	set x = GetLocationX(center)
	set y = GetLocationY(center)
	set udg_GVertDetectCenter = Rect(x - width * 0.5, y - height * 0.5, x + width * 0.5, y + height * 0.5)
	set r = udg_GVertDetectCenter
	set r_2 = r
	set filter = null
	set g = CreateGroup()
	call GroupEnumUnitsInRect(g, r_2, filter)
	call DestroyBoolExpr(filter)
	set udg_GateMovingUnits1 = g
	set whichGroup = udg_GateMovingUnits1
	set callback = ref_function_Trig_Gate_Closing_WoodGate_V_Func005A
	set wantDestroy = bj_wantDestroyGroup
	set bj_wantDestroyGroup = false
	call ForGroup(whichGroup, callback)
	if wantDestroy then
		call DestroyGroup(whichGroup)
	endif
	call ReplaceUnitBJ(GetSpellAbilityUnit(), 1747988825, bj_UNIT_STATE_METHOD_RELATIVE)
	set whichUnit = bj_lastReplacedUnit
	call SetUnitAnimation(whichUnit, "stand")
	call DestroyGroup(udg_GateMovingUnits1)
	call RemoveLocation(udg_GVertRP)
	call RemoveLocation(udg_Temp_Point)
	set loc = null
	set center = null
	set r = null
	set r_2 = null
	set filter = null
	set g = null
	set whichGroup = null
	set whichUnit = null
endfunction

function Trig_Gate_Closing_WoodGate_V_Conditions takes nothing returns boolean
	if  not (GetSpellAbilityId() == 1093677624) then
		return false
	endif
	if  not (GetUnitTypeId(GetSpellAbilityUnit()) == 1747989047) then
		return false
	endif
	return true
endfunction

function Trig_Gate_Closing_WoodGate_V_Func005Func001C takes nothing returns boolean
	if  not (IsUnitType(GetEnumUnit(), UNIT_TYPE_STRUCTURE) == false) then
		return false
	endif
	return true
endfunction

function Trig_Gate_Closing_WoodGate_V_Func005A takes nothing returns nothing
	if Trig_Gate_Closing_WoodGate_V_Func005Func001C() then
		call SetUnitPositionLoc(GetEnumUnit(), udg_GVertRP)
	endif
endfunction

function Trig_Gate_Opening_Func001Func001C takes nothing returns boolean
	if  not (GetSpellAbilityId() == 1093677624) then
		return false
	endif
	if  not (GetUnitTypeId(GetSpellAbilityUnit()) == 1747988825) then
		return false
	endif
	return true
endfunction

function Trig_Gate_Opening_Func001C takes nothing returns boolean
	if  not Trig_Gate_Opening_Func001Func001C() then
		return false
	endif
	return true
endfunction

function Trig_Gate_Opening_Func002Func001C takes nothing returns boolean
	if  not (GetSpellAbilityId() == 1093677624) then
		return false
	endif
	if  not (GetUnitTypeId(GetSpellAbilityUnit()) == 1747988824) then
		return false
	endif
	return true
endfunction

function Trig_Gate_Opening_Func002C takes nothing returns boolean
	if  not Trig_Gate_Opening_Func002Func001C() then
		return false
	endif
	return true
endfunction

function Trig_Gate_Opening_Func003Func001C takes nothing returns boolean
	if  not (GetSpellAbilityId() == 1093677624) then
		return false
	endif
	if  not (GetUnitTypeId(GetSpellAbilityUnit()) == 1747988826) then
		return false
	endif
	return true
endfunction

function Trig_Gate_Opening_Func003C takes nothing returns boolean
	if  not Trig_Gate_Opening_Func003Func001C() then
		return false
	endif
	return true
endfunction

function Trig_Gate_Opening_Func004Func001C takes nothing returns boolean
	if  not (GetSpellAbilityId() == 1093677624) then
		return false
	endif
	if  not (GetUnitTypeId(GetSpellAbilityUnit()) == 1747989079) then
		return false
	endif
	return true
endfunction

function Trig_Gate_Opening_Func004C takes nothing returns boolean
	if  not Trig_Gate_Opening_Func004Func001C() then
		return false
	endif
	return true
endfunction

function Trig_Gate_Opening_Actions takes nothing returns nothing
	if Trig_Gate_Opening_Func001C() then
		call ReplaceUnitBJ(GetSpellAbilityUnit(), 1747989047, bj_UNIT_STATE_METHOD_RELATIVE)
		call SetUnitAnimation(bj_lastReplacedUnit, "Death Alternate")
	endif
	if Trig_Gate_Opening_Func002C() then
		call ReplaceUnitBJ(GetSpellAbilityUnit(), 1747989046, bj_UNIT_STATE_METHOD_RELATIVE)
		call SetUnitAnimation(bj_lastReplacedUnit, "Death Alternate")
	endif
	if Trig_Gate_Opening_Func003C() then
		call ReplaceUnitBJ(GetSpellAbilityUnit(), 1747989077, bj_UNIT_STATE_METHOD_RELATIVE)
		call SetUnitAnimation(bj_lastReplacedUnit, "Death Alternate")
	endif
	if Trig_Gate_Opening_Func004C() then
		call ReplaceUnitBJ(GetSpellAbilityUnit(), 1747989078, bj_UNIT_STATE_METHOD_RELATIVE)
		call SetUnitAnimation(bj_lastReplacedUnit, "Death Alternate")
	endif
endfunction

function Trig_Heavy_Cavalry_1_Actions takes nothing returns nothing
	local integer unitId = 1747988818
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747988552
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Heavy_Cavalry_1_Byzantine_Actions takes nothing returns nothing
	local integer unitId = 1747989573
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747989572
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Heavy_Cavalry_1_Byzantine_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889810) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889810
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 1) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Heavy_Cavalry_1_Byzantine_Conditions takes nothing returns boolean
	if  not Trig_Heavy_Cavalry_1_Byzantine_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Heavy_Cavalry_1_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889800) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889800
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 1) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Heavy_Cavalry_1_Conditions takes nothing returns boolean
	if  not Trig_Heavy_Cavalry_1_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Heavy_Cavalry_2_Actions takes nothing returns nothing
	local integer unitId = 1747989080
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747988818
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Heavy_Cavalry_2_Byzantine_Actions takes nothing returns nothing
	local integer unitId = 1747989574
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747989573
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Heavy_Cavalry_2_Byzantine_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889810) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889810
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 2) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Heavy_Cavalry_2_Byzantine_Conditions takes nothing returns boolean
	if  not Trig_Heavy_Cavalry_2_Byzantine_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Heavy_Cavalry_2_Func004C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889800) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889800
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 2) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Heavy_Cavalry_2_Conditions takes nothing returns boolean
	if  not Trig_Heavy_Cavalry_2_Func004C() then
		return false
	endif
	return true
endfunction

function Trig_Heavy_Infantry_1_Actions takes nothing returns nothing
	local integer unitId = 1747988551
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747989081
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Heavy_Infantry_1_Byzantine_Actions takes nothing returns nothing
	local integer unitId = 1747989559
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747989569
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Heavy_Infantry_1_Byzantine_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889806) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889806
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 1) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Heavy_Infantry_1_Byzantine_Conditions takes nothing returns boolean
	if  not Trig_Heavy_Infantry_1_Byzantine_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Heavy_Infantry_1_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889798) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889798
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 1) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Heavy_Infantry_1_Conditions takes nothing returns boolean
	if  not Trig_Heavy_Infantry_1_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Heavy_Infantry_2_Actions takes nothing returns nothing
	local integer unitId = 1747989066
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747988551
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Heavy_Infantry_2_Byzantine_Actions takes nothing returns nothing
	local integer unitId = 1747989557
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747989559
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Heavy_Infantry_2_Byzantine_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889806) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889806
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 2) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Heavy_Infantry_2_Byzantine_Conditions takes nothing returns boolean
	if  not Trig_Heavy_Infantry_2_Byzantine_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Heavy_Infantry_2_Func004C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889798) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889798
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 2) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Heavy_Infantry_2_Conditions takes nothing returns boolean
	if  not Trig_Heavy_Infantry_2_Func004C() then
		return false
	endif
	return true
endfunction

function Trig_Light_Cavalry_1_Actions takes nothing returns nothing
	local integer unitId = 1747989072
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747989073
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Light_Cavalry_1_Byzantine_Actions takes nothing returns nothing
	local integer unitId = 1747989560
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747989579
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Light_Cavalry_1_Byzantine_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889811) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889801
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 1) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Light_Cavalry_1_Byzantine_Conditions takes nothing returns boolean
	if  not Trig_Light_Cavalry_1_Byzantine_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Light_Cavalry_1_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889801) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889801
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 1) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Light_Cavalry_1_Conditions takes nothing returns boolean
	if  not Trig_Light_Cavalry_1_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Light_Cavalry_2_Actions takes nothing returns nothing
	local integer unitId = 1747989082
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747989072
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Light_Cavalry_2_Func004C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889801) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889801
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 2) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Light_Cavalry_2_Conditions takes nothing returns boolean
	if  not Trig_Light_Cavalry_2_Func004C() then
		return false
	endif
	return true
endfunction

function Trig_Light_Infantry_1_Actions takes nothing returns nothing
	local integer unitId = 1747989065
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747989296
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Light_Infantry_1_Func003C takes nothing returns boolean
	local integer techid = 1378889797
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 1) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Light_Infantry_1_Conditions takes nothing returns boolean
	if  not Trig_Light_Infantry_1_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Light_Infantry_2_Actions takes nothing returns nothing
	local integer unitId = 1747989067
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747989065
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Light_Infantry_2_Func004C takes nothing returns boolean
	local integer techid = 1378889797
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 2) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Light_Infantry_2_Conditions takes nothing returns boolean
	if  not Trig_Light_Infantry_2_Func004C() then
		return false
	endif
	return true
endfunction

function Trig_ME_Archer_1_Actions takes nothing returns nothing
	local integer unitId = 1848651846
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1848651847
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_ME_Archer_1_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378890037) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378890037
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 1) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_ME_Archer_1_Conditions takes nothing returns boolean
	if  not Trig_ME_Archer_1_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_ME_Archer_2_Actions takes nothing returns nothing
	local integer unitId = 1848651848
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1848651846
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_ME_Archer_2_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378890037) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378890037
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 2) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_ME_Archer_2_Conditions takes nothing returns boolean
	if  not Trig_ME_Archer_2_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_ME_Heavy_Cavalry_1_Actions takes nothing returns nothing
	local integer unitId = 1747989836
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747989837
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_ME_Heavy_Cavalry_1_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378890036) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378890036
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 1) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_ME_Heavy_Cavalry_1_Conditions takes nothing returns boolean
	if  not Trig_ME_Heavy_Cavalry_1_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_ME_Heavy_Cavalry_2_Actions takes nothing returns nothing
	local integer unitId = 1747989835
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747989836
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_ME_Heavy_Cavalry_2_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378890036) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378890036
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 2) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_ME_Heavy_Cavalry_2_Conditions takes nothing returns boolean
	if  not Trig_ME_Heavy_Cavalry_2_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_ME_Light_Cavalry_1_Actions takes nothing returns nothing
	local integer unitId = 1747989833
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747989834
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_ME_Light_Cavalry_1_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889797) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889797
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 1) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_ME_Light_Cavalry_1_Conditions takes nothing returns boolean
	if  not Trig_ME_Light_Cavalry_1_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_ME_Light_Cavalry_2_Actions takes nothing returns nothing
	local integer unitId = 1747989832
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747989833
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_ME_Light_Cavalry_2_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889797) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889797
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 2) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_ME_Light_Cavalry_2_Conditions takes nothing returns boolean
	if  not Trig_ME_Light_Cavalry_2_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_ME_Light_Infantry_1_Actions takes nothing returns nothing
	local integer unitId = 1747989815
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747989838
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_ME_Light_Infantry_1_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378890034) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378890034
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 1) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_ME_Light_Infantry_1_Conditions takes nothing returns boolean
	if  not Trig_ME_Light_Infantry_1_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_ME_Light_Infantry_2_Actions takes nothing returns nothing
	local integer unitId = 1747989816
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747989815
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_ME_Light_Infantry_2_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378890034) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378890034
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 2) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_ME_Light_Infantry_2_Conditions takes nothing returns boolean
	if  not Trig_ME_Light_Infantry_2_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_ME_Missile_Cavalry_Actions takes nothing returns nothing
	local integer unitId = 1747989830
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747989829
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_ME_Missile_Cavalry_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378890038) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378890038
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 1) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_ME_Missile_Cavalry_Conditions takes nothing returns boolean
	if  not Trig_ME_Missile_Cavalry_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_ME_Skirmisher_Actions takes nothing returns nothing
	local integer unitId = 1848651844
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1848651845
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_ME_Skirmisher_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378890032) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378890032
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 1) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_ME_Skirmisher_Conditions takes nothing returns boolean
	if  not Trig_ME_Skirmisher_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_ME_Spearmen_1_Actions takes nothing returns nothing
	local integer unitId = 1747989825
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747989817
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_ME_Spearmen_1_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889818) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889818
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 1) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_ME_Spearmen_1_Conditions takes nothing returns boolean
	if  not Trig_ME_Spearmen_1_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_ME_Spearmen_2_Actions takes nothing returns nothing
	local integer unitId = 1747989814
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747989825
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_ME_Spearmen_2_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889818) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889818
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 2) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_ME_Spearmen_2_Conditions takes nothing returns boolean
	if  not Trig_ME_Spearmen_2_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Melee_Initialization_Actions takes nothing returns nothing
	call SetFloatGameState(GAME_STATE_TIME_OF_DAY, bj_MELEE_STARTING_TOD)
	call MeleeStartingHeroLimit()
endfunction

function Trig_Missile_Cavalry_Byzantine_Actions takes nothing returns nothing
	local integer unitId = 1747989582
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747989583
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Missile_Cavalry_Byzantine_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378890035) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378890035
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 1) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Missile_Cavalry_Byzantine_Conditions takes nothing returns boolean
	if  not Trig_Missile_Cavalry_Byzantine_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Pikemen_1_Actions takes nothing returns nothing
	local integer unitId = 1747988559
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747989064
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Pikemen_1_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889799) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889799
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 1) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Pikemen_1_Conditions takes nothing returns boolean
	if  not Trig_Pikemen_1_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Pikemen_2_Actions takes nothing returns nothing
	local integer unitId = 1747988812
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747988559
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Pikemen_2_Func004C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889799) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889799
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 2) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Pikemen_2_Conditions takes nothing returns boolean
	if  not Trig_Pikemen_2_Func004C() then
		return false
	endif
	return true
endfunction

function Trig_Settle_Actions takes nothing returns nothing
	local group whichGroup = GetUnitsOfTypeIdAll(1747988554)
	local code callback = ref_function_Trig_Settle_Func001002
	local boolean wantDestroy = bj_wantDestroyGroup
	set bj_wantDestroyGroup = false
	call ForGroup(whichGroup, callback)
	if wantDestroy then
		call DestroyGroup(whichGroup)
	endif
	set whichGroup = null
endfunction

function Trig_Settle_Func001002 takes nothing returns nothing
	call ReplaceUnitBJ(GetEnumUnit(), 1747988553, bj_UNIT_STATE_METHOD_RELATIVE)
endfunction

function Trig_Settlement_Aura_Actions takes nothing returns nothing
	local integer abilityId
	local unit whichUnit
	call ReplaceUnitBJ(GetTriggerUnit(), 1747989554, bj_UNIT_STATE_METHOD_RELATIVE)
	set abilityId = 1093677635
	set whichUnit = bj_lastReplacedUnit
	call UnitAddAbility(whichUnit, abilityId)
	set whichUnit = null
endfunction

function Trig_Settlement_Aura_Func003C takes nothing returns boolean
	if  not (GetUnitTypeId(GetTriggerUnit()) == 1747988557) then
		return false
	endif
	return true
endfunction

function Trig_Settlement_Aura_Conditions takes nothing returns boolean
	if  not Trig_Settlement_Aura_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Settlement_Range_Check_Actions takes nothing returns nothing
	local real radius
	local location whichLocation
	local real radius_2
	local location whichLocation_2
	local boolexpr filter
	local group g
	local group whichGroup
	local code callback
	local boolean wantDestroy
	set udg_BuildingRangeCheckPoint = GetUnitLoc(GetTriggerUnit())
	set radius = 1500.00
	set whichLocation = udg_BuildingRangeCheckPoint
	set radius_2 = radius
	set whichLocation_2 = whichLocation
	set filter = null
	set g = CreateGroup()
	call GroupEnumUnitsInRangeOfLoc(g, whichLocation_2, radius_2, filter)
	call DestroyBoolExpr(filter)
	set udg_BuildingRangeCheck = g
	set whichGroup = udg_BuildingRangeCheck
	set callback = ref_function_Trig_Settlement_Range_Check_Func003A
	set wantDestroy = bj_wantDestroyGroup
	set bj_wantDestroyGroup = false
	call ForGroup(whichGroup, callback)
	if wantDestroy then
		call DestroyGroup(whichGroup)
	endif
	call DestroyGroup(udg_BuildingRangeCheck)
	call RemoveLocation(udg_BuildingRangeCheckPoint)
	set whichLocation = null
	set whichLocation_2 = null
	set filter = null
	set g = null
	set whichGroup = null
endfunction

function Trig_Settlement_Range_Check_Func006C takes nothing returns boolean
	if  not (GetUnitTypeId(GetTriggerUnit()) == 1747988557) then
		return false
	endif
	return true
endfunction

function Trig_Settlement_Range_Check_Conditions takes nothing returns boolean
	if  not Trig_Settlement_Range_Check_Func006C() then
		return false
	endif
	return true
endfunction

function Trig_Settlement_Range_Check_Func003Func001Func001C takes nothing returns boolean
	if  not (GetOwningPlayer(GetEnumUnit()) == GetOwningPlayer(GetTriggerUnit())) then
		return false
	endif
	if  not (GetEnumUnit() != GetTriggerUnit()) then
		return false
	endif
	return true
endfunction

function Trig_Settlement_Range_Check_Func003Func001C takes nothing returns boolean
	if  not Trig_Settlement_Range_Check_Func003Func001Func001C() then
		return false
	endif
	if  not false then
		return false
	endif
	if  not (GetUnitTypeId(GetEnumUnit()) == 1747988557) then
		return false
	endif
	if  not (GetUnitTypeId(GetEnumUnit()) == 1747989554) then
		return false
	endif
	return true
endfunction

function Trig_Settlement_Range_Check_Func003A takes nothing returns nothing
	local force toForce
	local string message
	local player whichPlayer
	local force f
	local integer delta
	local player whichPlayer_2
	local playerstate whichPlayerState
	local player whichPlayer_3
	local playerstate whichPlayerState_2
	local integer delta_2
	local player whichPlayer_4
	local playerstate whichPlayerState_3
	local integer delta_3
	local player whichPlayer_5
	local playerstate whichPlayerState_4
	local integer delta_4
	local integer delta_5
	local player whichPlayer_6
	local playerstate whichPlayerState_5
	local player whichPlayer_7
	local playerstate whichPlayerState_6
	local integer delta_6
	local player whichPlayer_8
	local playerstate whichPlayerState_7
	local integer delta_7
	local player whichPlayer_9
	local playerstate whichPlayerState_8
	local integer delta_8
	if Trig_Settlement_Range_Check_Func003Func001C() then
		call KillUnit(GetTriggerUnit())
		set whichPlayer = GetOwningPlayer(GetTriggerUnit())
		set f = CreateForce()
		call ForceAddPlayer(f, whichPlayer)
		set toForce = f
		set message = "TRIGSTR_1669"
		if IsPlayerInForce(GetLocalPlayer(), toForce) then
			call DisplayTextToPlayer(GetLocalPlayer(), 0., 0., message)
		endif
		set delta = 100
		set whichPlayer_2 = GetOwningPlayer(GetTriggerUnit())
		set whichPlayerState = PLAYER_STATE_RESOURCE_GOLD
		if delta > 0 then
			if whichPlayerState == PLAYER_STATE_RESOURCE_GOLD then
				set whichPlayer_3 = whichPlayer_2
				set whichPlayerState_2 = PLAYER_STATE_GOLD_GATHERED
				set delta_2 = delta
				call SetPlayerState(whichPlayer_3, whichPlayerState_2, GetPlayerState(whichPlayer_3, whichPlayerState_2) + delta_2)
			elseif whichPlayerState == PLAYER_STATE_RESOURCE_LUMBER then
				set whichPlayer_4 = whichPlayer_2
				set whichPlayerState_3 = PLAYER_STATE_LUMBER_GATHERED
				set delta_3 = delta
				call SetPlayerState(whichPlayer_4, whichPlayerState_3, GetPlayerState(whichPlayer_4, whichPlayerState_3) + delta_3)
			endif
		endif
		set whichPlayer_5 = whichPlayer_2
		set whichPlayerState_4 = whichPlayerState
		set delta_4 = delta
		call SetPlayerState(whichPlayer_5, whichPlayerState_4, GetPlayerState(whichPlayer_5, whichPlayerState_4) + delta_4)
		set delta_5 = 275
		set whichPlayer_6 = GetOwningPlayer(GetTriggerUnit())
		set whichPlayerState_5 = PLAYER_STATE_RESOURCE_LUMBER
		if delta_5 > 0 then
			if whichPlayerState_5 == PLAYER_STATE_RESOURCE_GOLD then
				set whichPlayer_7 = whichPlayer_6
				set whichPlayerState_6 = PLAYER_STATE_GOLD_GATHERED
				set delta_6 = delta_5
				call SetPlayerState(whichPlayer_7, whichPlayerState_6, GetPlayerState(whichPlayer_7, whichPlayerState_6) + delta_6)
			elseif whichPlayerState_5 == PLAYER_STATE_RESOURCE_LUMBER then
				set whichPlayer_8 = whichPlayer_6
				set whichPlayerState_7 = PLAYER_STATE_LUMBER_GATHERED
				set delta_7 = delta_5
				call SetPlayerState(whichPlayer_8, whichPlayerState_7, GetPlayerState(whichPlayer_8, whichPlayerState_7) + delta_7)
			endif
		endif
		set whichPlayer_9 = whichPlayer_6
		set whichPlayerState_8 = whichPlayerState_5
		set delta_8 = delta_5
		call SetPlayerState(whichPlayer_9, whichPlayerState_8, GetPlayerState(whichPlayer_9, whichPlayerState_8) + delta_8)
	endif
	set toForce = null
	set whichPlayer = null
	set f = null
	set whichPlayer_2 = null
	set whichPlayerState = null
	set whichPlayer_3 = null
	set whichPlayerState_2 = null
	set whichPlayer_4 = null
	set whichPlayerState_3 = null
	set whichPlayer_5 = null
	set whichPlayerState_4 = null
	set whichPlayer_6 = null
	set whichPlayerState_5 = null
	set whichPlayer_7 = null
	set whichPlayerState_6 = null
	set whichPlayer_8 = null
	set whichPlayerState_7 = null
	set whichPlayer_9 = null
	set whichPlayerState_8 = null
endfunction

function Trig_Skirmisher_Actions takes nothing returns nothing
	local integer unitId = 1848651828
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1848651827
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Skirmisher_Byzantine_Actions takes nothing returns nothing
	local integer unitId = 1848651832
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1848651830
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Skirmisher_Byzantine_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889808) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889808
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 1) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Skirmisher_Byzantine_Conditions takes nothing returns boolean
	if  not Trig_Skirmisher_Byzantine_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Skirmisher_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889803) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889803
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 1) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Skirmisher_Conditions takes nothing returns boolean
	if  not Trig_Skirmisher_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Spearmen_1_Actions takes nothing returns nothing
	local integer unitId = 1747989057
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747989058
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Spearmen_1_Byzantine_Actions takes nothing returns nothing
	local integer unitId = 1747989570
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747989571
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Spearmen_1_Byzantine_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889807) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889807
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 1) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Spearmen_1_Byzantine_Conditions takes nothing returns boolean
	if  not Trig_Spearmen_1_Byzantine_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Spearmen_1_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889796) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889796
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 1) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Spearmen_1_Conditions takes nothing returns boolean
	if  not Trig_Spearmen_1_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Spearmen_2_Actions takes nothing returns nothing
	local integer unitId = 1747988558
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747989057
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Spearmen_2_Byzantine_Actions takes nothing returns nothing
	local integer unitId = 1747989556
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747989570
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Spearmen_2_Byzantine_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889807) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889807
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 2) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Spearmen_2_Byzantine_Conditions takes nothing returns boolean
	if  not Trig_Spearmen_2_Byzantine_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Spearmen_2_Func004C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889796) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889796
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 2) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Spearmen_2_Conditions takes nothing returns boolean
	if  not Trig_Spearmen_2_Func004C() then
		return false
	endif
	return true
endfunction

function Trig_Supply_Horse_2_Actions takes nothing returns nothing
	local group whichGroup
	local code callback
	local boolean wantDestroy
	set udg_Supplyhorses2 = GetUnitsOfTypeIdAll(1747989301)
	set whichGroup = udg_Supplyhorses
	set callback = ref_function_Trig_Supply_Horse_2_Func002A
	set wantDestroy = bj_wantDestroyGroup
	set bj_wantDestroyGroup = false
	call ForGroup(whichGroup, callback)
	if wantDestroy then
		call DestroyGroup(whichGroup)
	endif
	call DestroyGroup(udg_Supplyhorses2)
	set whichGroup = null
endfunction

function Trig_Supply_Horse_2_Func002Func001C takes nothing returns boolean
	local unitstate whichState = UNIT_STATE_MANA
	local unit whichUnit = GetEnumUnit()
	if  not (GetUnitState(whichUnit, whichState) <= 0.00) then
		set whichState = null
		set whichUnit = null
		return false
	endif
	set whichState = null
	set whichUnit = null
	return true
endfunction

function Trig_Supply_Horse_2_Func002A takes nothing returns nothing
	if Trig_Supply_Horse_2_Func002Func001C() then
		call KillUnit(GetEnumUnit())
	endif
endfunction

function Trig_Supply_Horse_Actions takes nothing returns nothing
	local integer unitId = 1747989301
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747988790
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Supply_Horse_Func004C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889783) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889783
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 2) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Supply_Horse_Conditions takes nothing returns boolean
	if  not Trig_Supply_Horse_Func004C() then
		return false
	endif
	return true
endfunction

function Trig_Supply_Horses_Actions takes nothing returns nothing
	local group whichGroup
	local code callback
	local boolean wantDestroy
	set udg_Supplyhorses = GetUnitsOfTypeIdAll(1747988790)
	set whichGroup = udg_Supplyhorses
	set callback = ref_function_Trig_Supply_Horses_Func002A
	set wantDestroy = bj_wantDestroyGroup
	set bj_wantDestroyGroup = false
	call ForGroup(whichGroup, callback)
	if wantDestroy then
		call DestroyGroup(whichGroup)
	endif
	call DestroyGroup(udg_Supplyhorses)
	set whichGroup = null
endfunction

function Trig_Supply_Horses_Func002Func001C takes nothing returns boolean
	local unitstate whichState = UNIT_STATE_MANA
	local unit whichUnit = GetEnumUnit()
	if  not (GetUnitState(whichUnit, whichState) <= 0.00) then
		set whichState = null
		set whichUnit = null
		return false
	endif
	set whichState = null
	set whichUnit = null
	return true
endfunction

function Trig_Supply_Horses_Func002A takes nothing returns nothing
	if Trig_Supply_Horses_Func002Func001C() then
		call KillUnit(GetEnumUnit())
	endif
endfunction

function Trig_Thatched_Cottage_1_Actions takes nothing returns nothing
	local integer unitId = 1747988561
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747988784
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Thatched_Cottage_1_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889780) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889780
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 1) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Thatched_Cottage_1_Conditions takes nothing returns boolean
	if  not Trig_Thatched_Cottage_1_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Thatched_Cottage_2_Actions takes nothing returns nothing
	local integer unitId = 1747988565
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747988563
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Thatched_Cottage_2_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889780) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889780
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 1) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Thatched_Cottage_2_Conditions takes nothing returns boolean
	if  not Trig_Thatched_Cottage_2_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Thatched_Cottage_3_Actions takes nothing returns nothing
	local integer unitId = 1747988566
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747988562
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Thatched_Cottage_3_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889780) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889780
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 1) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Thatched_Cottage_3_Conditions takes nothing returns boolean
	if  not Trig_Thatched_Cottage_3_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Thatched_Cottage_4_Actions takes nothing returns nothing
	local integer unitId = 1747988567
	local boolean allowed = true
	local player whichPlayer = GetOwningPlayer(GetResearchingUnit())
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_2
	if allowed then
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer, unitId, 0)
	endif
	set unitId_2 = 1747988564
	set allowed_2 = false
	set whichPlayer_2 = GetOwningPlayer(GetResearchingUnit())
	if allowed_2 then
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, -1)
	else
		call SetPlayerTechMaxAllowed(whichPlayer_2, unitId_2, 0)
	endif
	set whichPlayer = null
	set whichPlayer_2 = null
endfunction

function Trig_Thatched_Cottage_4_Func003C takes nothing returns boolean
	local integer techid
	local player whichPlayer
	if  not (GetResearched() == 1378889780) then
		set whichPlayer = null
		return false
	endif
	set techid = 1378889780
	set whichPlayer = GetOwningPlayer(GetResearchingUnit())
	if  not (GetPlayerTechCount(whichPlayer, techid, true) == 1) then
		set whichPlayer = null
		return false
	endif
	set whichPlayer = null
	return true
endfunction

function Trig_Thatched_Cottage_4_Conditions takes nothing returns boolean
	if  not Trig_Thatched_Cottage_4_Func003C() then
		return false
	endif
	return true
endfunction

function playercolor_toColor takes playercolor this_2 returns integer
	local playercolor this_3 = this_2
	local integer value = 0
	local integer i = 0
	local integer temp = bj_MAX_PLAYER_SLOTS - 1
	local integer cond_result_red
	local integer cond_result_green
	local integer cond_result_blue
	local playercolor this_4
	local integer value_2
	local integer i_2
	local integer temp_2
	local integer this_red
	local integer this_green
	local integer this_blue
	local integer tuple_temp
	local integer tuple_temp_2
	local integer tuple_temp_3
	local integer tuple_temp_4
	local integer tuple_temp_5
	local integer tuple_temp_6
	local integer tuple_temp_7
	local integer tuple_temp_8
	local integer tuple_temp_9
	local integer tuple_temp_10
	loop
		exitwhen i > temp
		if Playercolor_LOOKUP[i] == this_3 then
			set value = i
			exitwhen true
		endif
		set i = i + 1
	endloop
	if value <= 23 then
		set this_4 = this_2
		set value_2 = 0
		set i_2 = 0
		set temp_2 = bj_MAX_PLAYER_SLOTS - 1
		loop
			exitwhen i_2 > temp_2
			if Playercolor_LOOKUP[i_2] == this_4 then
				set value_2 = i_2
				exitwhen true
			endif
			set i_2 = i_2 + 1
		endloop
		set tuple_temp = Colors_PLAYER_COLORS_red[value_2]
		set tuple_temp_2 = Colors_PLAYER_COLORS_green[value_2]
		set tuple_temp_3 = Colors_PLAYER_COLORS_blue[value_2]
		set cond_result_red = tuple_temp
		set cond_result_green = tuple_temp_2
		set cond_result_blue = tuple_temp_3
	else
		set tuple_temp_4 = Colors_COLOR_BLACK_red
		set tuple_temp_5 = Colors_COLOR_BLACK_green
		set tuple_temp_6 = Colors_COLOR_BLACK_blue
		set tuple_temp_7 = Colors_COLOR_BLACK_alpha
		set this_red = tuple_temp_4
		set this_green = tuple_temp_5
		set this_blue = tuple_temp_6
		set tuple_temp_8 = this_red
		set tuple_temp_9 = this_green
		set tuple_temp_10 = this_blue
		set cond_result_red = tuple_temp_8
		set cond_result_green = tuple_temp_9
		set cond_result_blue = tuple_temp_10
	endif
	set playercolor_toColor_return_red = cond_result_red
	set playercolor_toColor_return_green = cond_result_green
	set playercolor_toColor_return_blue = cond_result_blue
	set this_3 = null
	set this_4 = null
	return playercolor_toColor_return_red
endfunction

function player_getNameColored takes player this_2 returns string
	local player this_3 = this_2
	local integer tuple_temp = playercolor_toColor(GetPlayerColor(this_3))
	local integer tuple_temp_2 = playercolor_toColor_return_green
	local integer tuple_temp_3 = playercolor_toColor_return_blue
	local integer this_red = tuple_temp
	local integer this_green = tuple_temp_2
	local integer this_blue = tuple_temp_3
	local integer number = this_red
	local integer firstpart = number / 16
	local integer secondpart = number - firstpart * 16
	local string temp = "|cff" + Colors_hexs[firstpart] + Colors_hexs[secondpart]
	local integer number_2 = this_green
	local integer firstpart_2 = number_2 / 16
	local integer secondpart_2 = number_2 - firstpart_2 * 16
	local string temp_2 = temp + Colors_hexs[firstpart_2] + Colors_hexs[secondpart_2]
	local integer number_3 = this_blue
	local integer firstpart_3 = number_3 / 16
	local integer secondpart_3 = number_3 - firstpart_3 * 16
	set this_3 = null
	return temp_2 + Colors_hexs[firstpart_3] + Colors_hexs[secondpart_3] + GetPlayerName(this_2) + "|r"
endfunction

function action takes nothing returns nothing
	local string input = GetEventPlayerChatString()
	local string arg = ""
	local player pl = GetTriggerPlayer()
	local string array args
	local integer j
	local integer i
	local integer temp
	local string char
	local string msg
	local string this_2
	local string this_3
	local integer start
	local integer stop
	local string this_4
	local player whichPlayer
	local camerafield whichField
	local real value
	local real duration
	local player whichPlayer_2
	local camerafield whichField_2
	local real value_2
	local real duration_2
	local integer temp_2
	local boolean andLeft
	if true then
		set msg = "A command has been typed = " + input + "; By: " + player_getNameColored(pl)
		call DisplayTimedTextToPlayer(Player_players[0], 0., 0., 60., msg)
	endif
	set j = 0
	set i = 1
	set this_2 = input
	set temp = StringLength(this_2)
	loop
		exitwhen i > temp
		set this_3 = input
		set start = i
		set stop = i + 1
		set char = SubString(this_3, start, stop)
		if j > 0 then
			set temp_2 = i
			set this_4 = args[0]
			set andLeft = temp_2 > StringLength(this_4) + 1
		else
			set andLeft = false
		endif
		if andLeft then
			set arg = arg + char
		endif
		if char != " " then
			set args[j] = args[j] + char
		else
			set j = j + 1
		endif
		set i = i + 1
	endloop
	if args[0] == "far" then
		set whichPlayer = GetTriggerPlayer()
		set whichField = CAMERA_FIELD_TARGET_DISTANCE
		set value = 3000.0
		set duration = 0.
		if GetLocalPlayer() == whichPlayer then
			call SetCameraField(whichField, value, duration)
		endif
	elseif args[0] == "med" then
		set whichPlayer_2 = GetTriggerPlayer()
		set whichField_2 = CAMERA_FIELD_TARGET_DISTANCE
		set value_2 = 2300.0
		set duration_2 = 0.
		if GetLocalPlayer() == whichPlayer_2 then
			call SetCameraField(whichField_2, value_2, duration_2)
		endif
	elseif args[0] == "name" then
		call SetPlayerName(GetTriggerPlayer(), arg)
	endif
	set pl = null
	set whichPlayer = null
	set whichField = null
	set whichPlayer_2 = null
	set whichField_2 = null
endfunction

function Loglevel_getTag takes integer this_2 returns string
	local integer temp = this_2
	if temp == 0 then
		return "|cffADADADtrace|r"
	elseif temp == 1 then
		return "|cff2685DCdebug|r"
	elseif temp == 2 then
		return "|cffFFCC00info|r"
	elseif temp == 3 then
		return "|cffF47E3Ewarning|r"
	elseif temp == 4 then
		return "|cffFB2700error|r"
	endif
	return "?"
endfunction

function compileError takes string message returns nothing
endfunction

function error takes string msg, string stackPos returns nothing
	local integer hash
	local string stacktraceStr
	local integer stacktraceIndex
	local integer stacktraceLimit
	local string stacktraceStr_2
	local integer stacktraceIndex_2
	local integer stacktraceLimit_2
	local string temp
	local string temp_2
	local string this_2
	local hashtable this_3
	local integer parentKey
	local integer childKey
	local hashtable this_4
	local integer parentKey_2
	local integer childKey_2
	local string msg_2
	local player showTo
	local integer loglvl
	local string msg_3
	local string compositeMsg
	local hashtable this_5
	local integer parentKey_3
	local integer childKey_3
	local integer value
	local real this_6
	local hashtable this_7
	local integer parentKey_4
	local integer childKey_4
	local boolean value_2
	local hashtable this_8
	local integer parentKey_5
	local integer childKey_5
	local hashtable this_9
	local integer parentKey_6
	local integer childKey_6
	local string msg_4
	local player showTo_2
	local integer loglvl_2
	local string msg_5
	local string compositeMsg_2
	local hashtable this_10
	local integer parentKey_7
	local integer childKey_7
	local boolean value_3
	local string msg_6
	local player showTo_3
	local integer loglvl_3
	local string msg_7
	local string compositeMsg_3
	local hashtable this_11
	local integer parentKey_8
	local integer childKey_8
	local boolean value_4
	local hashtable this_12
	local integer parentKey_9
	local integer childKey_9
	local integer value_5
	local real this_13
	local string msg_8
	local player showTo_4
	local integer loglvl_4
	local string msg_9
	local string compositeMsg_4
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if false then
		call compileError("ERROR: " + msg)
	else
		if  not false then
			set this_2 = msg
			set hash = StringHash(this_2)
			set this_3 = ErrorHandling_HT
			set parentKey = -1
			set childKey = hash
			if HaveSavedInteger(this_3, parentKey, childKey) then
				set this_4 = ErrorHandling_HT
				set parentKey_2 = -1
				set childKey_2 = hash
				if LoadInteger(this_4, parentKey_2, childKey_2) + 60 < GameTimer_currentTime then
					set temp = msg
					set stacktraceStr = ""
					set stacktraceIndex = wurst_stack_depth
					set stacktraceLimit = 0
					loop
						set stacktraceIndex = stacktraceIndex - 1
						set stacktraceLimit = stacktraceLimit + 1
						exitwhen stacktraceLimit > 20
						exitwhen stacktraceIndex < 0
						set stacktraceStr = stacktraceStr + "\n   " + wurst_stack[stacktraceIndex]
					endloop
					set msg_2 = temp + stacktraceStr
					set showTo = Player_localPlayer
					set loglvl = 4
					set msg_3 = msg_2
					if 2 <= loglvl then
						set compositeMsg = Loglevel_getTag(loglvl) + " - " + msg_3
						call DisplayTimedTextToPlayer(showTo, 0., 0., 45., compositeMsg)
					endif
					set this_5 = ErrorHandling_HT
					set parentKey_3 = -1
					set childKey_3 = hash
					set this_6 = GameTimer_currentTime
					set value = R2I(this_6)
					call SaveInteger(this_5, parentKey_3, childKey_3, value)
					set this_7 = ErrorHandling_HT
					set parentKey_4 = -1
					set childKey_4 = hash
					set value_2 = false
					call SaveBoolean(this_7, parentKey_4, childKey_4, value_2)
				else
					set this_8 = ErrorHandling_HT
					set parentKey_5 = -1
					set childKey_5 = hash
					if HaveSavedBoolean(this_8, parentKey_5, childKey_5) then
						set this_9 = ErrorHandling_HT
						set parentKey_6 = -1
						set childKey_6 = hash
						if  not LoadBoolean(this_9, parentKey_6, childKey_6) then
							set msg_4 = "|cffFF3A29Excessive repeating errors are being omitted"
							set showTo_2 = Player_localPlayer
							set loglvl_2 = 4
							set msg_5 = msg_4
							if 2 <= loglvl_2 then
								set compositeMsg_2 = Loglevel_getTag(loglvl_2) + " - " + msg_5
								call DisplayTimedTextToPlayer(showTo_2, 0., 0., 45., compositeMsg_2)
							endif
							set this_10 = ErrorHandling_HT
							set parentKey_7 = -1
							set childKey_7 = hash
							set value_3 = true
							call SaveBoolean(this_10, parentKey_7, childKey_7, value_3)
						endif
					else
						set msg_6 = "|cffFF3A29Excessive repeating errors are being omitted"
						set showTo_3 = Player_localPlayer
						set loglvl_3 = 4
						set msg_7 = msg_6
						if 2 <= loglvl_3 then
							set compositeMsg_3 = Loglevel_getTag(loglvl_3) + " - " + msg_7
							call DisplayTimedTextToPlayer(showTo_3, 0., 0., 45., compositeMsg_3)
						endif
						set this_11 = ErrorHandling_HT
						set parentKey_8 = -1
						set childKey_8 = hash
						set value_4 = true
						call SaveBoolean(this_11, parentKey_8, childKey_8, value_4)
					endif
				endif
			else
				set this_12 = ErrorHandling_HT
				set parentKey_9 = -1
				set childKey_9 = hash
				set this_13 = GameTimer_currentTime
				set value_5 = R2I(this_13)
				call SaveInteger(this_12, parentKey_9, childKey_9, value_5)
				set temp_2 = "Message: " + msg
				set stacktraceStr_2 = ""
				set stacktraceIndex_2 = wurst_stack_depth
				set stacktraceLimit_2 = 0
				loop
					set stacktraceIndex_2 = stacktraceIndex_2 - 1
					set stacktraceLimit_2 = stacktraceLimit_2 + 1
					exitwhen stacktraceLimit_2 > 20
					exitwhen stacktraceIndex_2 < 0
					set stacktraceStr_2 = stacktraceStr_2 + "\n   " + wurst_stack[stacktraceIndex_2]
				endloop
				set msg_8 = temp_2 + stacktraceStr_2
				set showTo_4 = Player_localPlayer
				set loglvl_4 = 4
				set msg_9 = msg_8
				if 2 <= loglvl_4 then
					set compositeMsg_4 = Loglevel_getTag(loglvl_4) + " - " + msg_9
					call DisplayTimedTextToPlayer(showTo_4, 0., 0., 45., compositeMsg_4)
				endif
			endif
		endif
		call I2S(1 / 0)
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_3 = null
	set this_4 = null
	set showTo = null
	set this_5 = null
	set this_7 = null
	set this_8 = null
	set this_9 = null
	set showTo_2 = null
	set this_10 = null
	set showTo_3 = null
	set this_11 = null
	set this_12 = null
	set showTo_4 = null
endfunction

function timer_getData takes timer this_2, string stackPos returns integer
	local integer stackTrace_tempReturn
	local integer this_3
	local integer parentKey
	local string stackPos_2
	local integer Table_Table_loadInt_result
	local integer this_4
	local integer parentKey_2
	local hashtable this_5
	local integer parentKey_3
	local integer childKey
	local timer this_6
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_3 = TimerUtils_timerData
	set this_6 = this_2
	set parentKey = GetHandleId(this_6)
	set stackPos_2 = "when calling loadInt in TimerUtils, line 21"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if Table_typeId[this_3] == 0 then
		if this_3 == 0 then
			call error("Nullpointer exception when calling Table.loadInt", "when calling error in Table, line 39")
		else
			call error("Called Table.loadInt on invalid object.", "when calling error in Table, line 39")
		endif
	endif
	set this_4 = this_3
	set parentKey_2 = parentKey
	set this_5 = Table_ht
	set parentKey_3 = this_4
	set childKey = parentKey_2
	set Table_Table_loadInt_result = LoadInteger(this_5, parentKey_3, childKey)
	set wurst_stack_depth = wurst_stack_depth - 1
	set stackTrace_tempReturn = Table_Table_loadInt_result
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_5 = null
	set this_6 = null
	return stackTrace_tempReturn
endfunction

function timer_setData takes timer this_2, integer data, string stackPos returns nothing
	local integer this_3
	local integer parentKey
	local integer value
	local string stackPos_2
	local integer this_4
	local integer parentKey_2
	local integer value_2
	local hashtable this_5
	local integer parentKey_3
	local integer childKey
	local integer value_3
	local timer this_6
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_3 = TimerUtils_timerData
	set this_6 = this_2
	set parentKey = GetHandleId(this_6)
	set value = data
	set stackPos_2 = "when calling saveInt in TimerUtils, line 17"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if Table_typeId[this_3] == 0 then
		if this_3 == 0 then
			call error("Nullpointer exception when calling Table.saveInt", "when calling error in Table, line 42")
		else
			call error("Called Table.saveInt on invalid object.", "when calling error in Table, line 42")
		endif
	endif
	set this_4 = this_3
	set parentKey_2 = parentKey
	set value_2 = value
	set this_5 = Table_ht
	set parentKey_3 = this_4
	set childKey = parentKey_2
	set value_3 = value_2
	call SaveInteger(this_5, parentKey_3, childKey, value_3)
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_5 = null
	set this_6 = null
endfunction

function timer_release takes timer this_2, string stackPos returns nothing
	local timer this_3
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if this_2 == null then
		call error("Trying to release a null timer", "when calling error in TimerUtils, line 37")
		set wurst_stack_depth = wurst_stack_depth - 1
		set this_3 = null
		return
	endif
	if timer_getData(this_2, "when calling getData in TimerUtils, line 39") == 679645218 then
		call error("ReleaseTimer: Double free!", "when calling error in TimerUtils, line 40")
		set wurst_stack_depth = wurst_stack_depth - 1
		set this_3 = null
		return
	endif
	call timer_setData(this_2, 679645218, "when calling setData in TimerUtils, line 42")
	set this_3 = this_2
	call PauseTimer(this_3)
	set TimerUtils_freeTimers[TimerUtils_freeTimersCount] = this_2
	set TimerUtils_freeTimersCount = TimerUtils_freeTimersCount + 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_3 = null
endfunction

function destroyCallbackSingle takes integer this_2, string stackPos returns nothing
	local integer this_3
	local string stackPos_2
	local integer obj
	local string stackPos_3
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_3 = this_2
	set stackPos_2 = "when calling CallbackSingle_onDestroy in ClosureTimers, line 79"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	call timer_release(CallbackSingle_t[this_3], "when calling release in ClosureTimers, line 80")
	set wurst_stack_depth = wurst_stack_depth - 1
	set obj = this_2
	set stackPos_3 = "when calling CallbackSingle in ClosureTimers, line 79"
	set wurst_stack[wurst_stack_depth] = stackPos_3
	set wurst_stack_depth = wurst_stack_depth + 1
	if CallbackSingle_typeId[obj] == 0 then
		call error("Double free: object of type CallbackSingle", "when calling error in ClosureTimers, line 63")
	else
		set CallbackSingle_nextFree[CallbackSingle_firstFree] = obj
		set CallbackSingle_firstFree = CallbackSingle_firstFree + 1
		set CallbackSingle_typeId[obj] = 0
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function registerPlayerUnitEvent takes playerunitevent p, code filter, code condition, code action_2 returns nothing
	local handle this_2 = p
	local integer hid = GetHandleId(this_2)
	local integer k
	local filterfunc cond_result
	local trigger temp
	local player temp_2
	local playerunitevent temp_3
	local trigger this_3
	local player whichPlayer
	local playerunitevent whichPlayerUnitEvent
	local boolexpr filter_2
	local trigger this_4
	local boolexpr condition_2
	local trigger this_5
	local code actionFunc
	if RegisterEvents_t[hid] == null then
		set RegisterEvents_t[hid] = CreateTrigger()
		set k = bj_MAX_PLAYER_SLOTS - 1
		loop
			exitwhen k < 0
			set temp = RegisterEvents_t[hid]
			set temp_2 = Player_players[k]
			set temp_3 = p
			if filter != null then
				set cond_result = Filter(filter)
			else
				set cond_result = null
			endif
			set this_3 = temp
			set whichPlayer = temp_2
			set whichPlayerUnitEvent = temp_3
			set filter_2 = cond_result
			call TriggerRegisterPlayerUnitEvent(this_3, whichPlayer, whichPlayerUnitEvent, filter_2)
			set k = k - 1
		endloop
	endif
	if condition != null then
		set this_4 = RegisterEvents_t[hid]
		set condition_2 = Filter(condition)
		call TriggerAddCondition(this_4, condition_2)
	endif
	if action_2 != null then
		set this_5 = RegisterEvents_t[hid]
		set actionFunc = action_2
		call TriggerAddAction(this_5, actionFunc)
	endif
	set cond_result = null
	set temp = null
	set temp_2 = null
	set temp_3 = null
	set this_2 = null
	set this_3 = null
	set whichPlayer = null
	set whichPlayerUnitEvent = null
	set filter_2 = null
	set this_4 = null
	set condition_2 = null
	set this_5 = null
endfunction

function ClosureEvents_closure_impl_2 takes integer this_2 returns nothing
	local code func = ref_function_ClosureEvents_closure_impl
	local trigger this_3 = UnitIndexer_onIndexTrigger
	local boolexpr condition = Condition(func)
	local integer i
	local integer temp
	local trigger receiver
	local trigger receiver_2
	local trigger receiver_3
	local trigger receiver_4
	local trigger receiver_5
	local trigger receiver_6
	local trigger receiver_7
	local trigger receiver_8
	local trigger receiver_9
	local trigger receiver_10
	local trigger receiver_11
	local trigger receiver_12
	local trigger receiver_13
	local code func_2
	local trigger this_4
	local boolexpr condition_2
	local trigger this_5
	local code actionFunc
	local trigger this_6
	local code actionFunc_2
	local trigger this_7
	local code actionFunc_3
	local trigger this_8
	local player whichPlayer
	local playerevent whichPlayerEvent
	local trigger this_9
	local player whichPlayer_2
	local playerevent whichPlayerEvent_2
	local trigger this_10
	local player whichPlayer_3
	local playerevent whichPlayerEvent_3
	local trigger this_11
	local player whichPlayer_4
	local playerevent whichPlayerEvent_4
	local trigger this_12
	local player whichPlayer_5
	local playerevent whichPlayerEvent_5
	local trigger this_13
	local player whichPlayer_6
	local playerevent whichPlayerEvent_6
	local trigger this_14
	local player whichPlayer_7
	local playerevent whichPlayerEvent_7
	local trigger this_15
	local player whichPlayer_8
	local playerevent whichPlayerEvent_8
	local trigger this_16
	local player whichPlayer_9
	local playerevent whichPlayerEvent_9
	local trigger this_17
	local player whichPlayer_10
	local playerevent whichPlayerEvent_10
	local trigger this_18
	local player whichPlayer_11
	local playerevent whichPlayerEvent_11
	local trigger this_19
	local player whichPlayer_12
	local playerevent whichPlayerEvent_12
	local trigger this_20
	local player whichPlayer_13
	local playerevent whichPlayerEvent_13
	local trigger this_21
	local player whichPlayer_14
	local string chatMessageToDetect
	local boolean exactMatchOnly
	call TriggerAddCondition(this_3, condition)
	set func_2 = ref_function_bridge_ClosureEvents_closure_impl
	set this_4 = UnitIndexer_onDeindexTrigger
	set condition_2 = Condition(func_2)
	call TriggerAddCondition(this_4, condition_2)
	set this_5 = ClosureEvents_unitTrig
	set actionFunc = ref_function_bridge_ClosureEvents_closure_impl_2
	call TriggerAddAction(this_5, actionFunc)
	set this_6 = ClosureEvents_leaveTrig
	set actionFunc_2 = ref_function_bridge_ClosureEvents_closure_impl_3
	call TriggerAddAction(this_6, actionFunc_2)
	set this_7 = ClosureEvents_keyTrig
	set actionFunc_3 = ref_function_bridge_ClosureEvents_closure_impl_4
	call TriggerAddAction(this_7, actionFunc_3)
	set i = 0
	set temp = bj_MAX_PLAYERS - 1
	loop
		exitwhen i > temp
		set this_8 = ClosureEvents_leaveTrig
		set whichPlayer = Player_players[i]
		set whichPlayerEvent = EVENT_PLAYER_LEAVE
		call TriggerRegisterPlayerEvent(this_8, whichPlayer, whichPlayerEvent)
		set receiver = ClosureEvents_keyTrig
		set this_9 = receiver
		set whichPlayer_2 = Player_players[i]
		set whichPlayerEvent_2 = EVENT_PLAYER_ARROW_DOWN_DOWN
		call TriggerRegisterPlayerEvent(this_9, whichPlayer_2, whichPlayerEvent_2)
		set receiver_2 = receiver
		set this_10 = receiver_2
		set whichPlayer_3 = Player_players[i]
		set whichPlayerEvent_3 = EVENT_PLAYER_ARROW_DOWN_UP
		call TriggerRegisterPlayerEvent(this_10, whichPlayer_3, whichPlayerEvent_3)
		set receiver_3 = receiver_2
		set this_11 = receiver_3
		set whichPlayer_4 = Player_players[i]
		set whichPlayerEvent_4 = EVENT_PLAYER_ARROW_UP_DOWN
		call TriggerRegisterPlayerEvent(this_11, whichPlayer_4, whichPlayerEvent_4)
		set receiver_4 = receiver_3
		set this_12 = receiver_4
		set whichPlayer_5 = Player_players[i]
		set whichPlayerEvent_5 = EVENT_PLAYER_ARROW_UP_UP
		call TriggerRegisterPlayerEvent(this_12, whichPlayer_5, whichPlayerEvent_5)
		set receiver_5 = receiver_4
		set this_13 = receiver_5
		set whichPlayer_6 = Player_players[i]
		set whichPlayerEvent_6 = EVENT_PLAYER_ARROW_LEFT_DOWN
		call TriggerRegisterPlayerEvent(this_13, whichPlayer_6, whichPlayerEvent_6)
		set receiver_6 = receiver_5
		set this_14 = receiver_6
		set whichPlayer_7 = Player_players[i]
		set whichPlayerEvent_7 = EVENT_PLAYER_ARROW_LEFT_UP
		call TriggerRegisterPlayerEvent(this_14, whichPlayer_7, whichPlayerEvent_7)
		set receiver_7 = receiver_6
		set this_15 = receiver_7
		set whichPlayer_8 = Player_players[i]
		set whichPlayerEvent_8 = EVENT_PLAYER_ARROW_RIGHT_DOWN
		call TriggerRegisterPlayerEvent(this_15, whichPlayer_8, whichPlayerEvent_8)
		set receiver_8 = receiver_7
		set this_16 = receiver_8
		set whichPlayer_9 = Player_players[i]
		set whichPlayerEvent_9 = EVENT_PLAYER_ARROW_RIGHT_UP
		call TriggerRegisterPlayerEvent(this_16, whichPlayer_9, whichPlayerEvent_9)
		set receiver_9 = receiver_8
		set this_17 = receiver_9
		set whichPlayer_10 = Player_players[i]
		set whichPlayerEvent_10 = EVENT_PLAYER_END_CINEMATIC
		call TriggerRegisterPlayerEvent(this_17, whichPlayer_10, whichPlayerEvent_10)
		set receiver_10 = receiver_9
		set this_18 = receiver_10
		set whichPlayer_11 = Player_players[i]
		set whichPlayerEvent_11 = EVENT_PLAYER_MOUSE_UP
		call TriggerRegisterPlayerEvent(this_18, whichPlayer_11, whichPlayerEvent_11)
		set receiver_11 = receiver_10
		set this_19 = receiver_11
		set whichPlayer_12 = Player_players[i]
		set whichPlayerEvent_12 = EVENT_PLAYER_MOUSE_DOWN
		call TriggerRegisterPlayerEvent(this_19, whichPlayer_12, whichPlayerEvent_12)
		set receiver_12 = receiver_11
		set this_20 = receiver_12
		set whichPlayer_13 = Player_players[i]
		set whichPlayerEvent_13 = EVENT_PLAYER_MOUSE_MOVE
		call TriggerRegisterPlayerEvent(this_20, whichPlayer_13, whichPlayerEvent_13)
		set receiver_13 = receiver_12
		set this_21 = receiver_13
		set whichPlayer_14 = Player_players[i]
		set chatMessageToDetect = ""
		set exactMatchOnly = false
		call TriggerRegisterPlayerChatEvent(this_21, whichPlayer_14, chatMessageToDetect, exactMatchOnly)
		set i = i + 1
	endloop
	call registerPlayerUnitEvent(EVENT_PLAYER_UNIT_SPELL_EFFECT, null, ref_function_bridge_ClosureEvents_closure_impl_5, null)
	set receiver = null
	set receiver_2 = null
	set receiver_3 = null
	set receiver_4 = null
	set receiver_5 = null
	set receiver_6 = null
	set receiver_7 = null
	set receiver_8 = null
	set receiver_9 = null
	set receiver_10 = null
	set receiver_11 = null
	set receiver_12 = null
	set receiver_13 = null
	set this_3 = null
	set condition = null
	set this_4 = null
	set condition_2 = null
	set this_5 = null
	set this_6 = null
	set this_7 = null
	set this_8 = null
	set whichPlayer = null
	set whichPlayerEvent = null
	set this_9 = null
	set whichPlayer_2 = null
	set whichPlayerEvent_2 = null
	set this_10 = null
	set whichPlayer_3 = null
	set whichPlayerEvent_3 = null
	set this_11 = null
	set whichPlayer_4 = null
	set whichPlayerEvent_4 = null
	set this_12 = null
	set whichPlayer_5 = null
	set whichPlayerEvent_5 = null
	set this_13 = null
	set whichPlayer_6 = null
	set whichPlayerEvent_6 = null
	set this_14 = null
	set whichPlayer_7 = null
	set whichPlayerEvent_7 = null
	set this_15 = null
	set whichPlayer_8 = null
	set whichPlayerEvent_8 = null
	set this_16 = null
	set whichPlayer_9 = null
	set whichPlayerEvent_9 = null
	set this_17 = null
	set whichPlayer_10 = null
	set whichPlayerEvent_10 = null
	set this_18 = null
	set whichPlayer_11 = null
	set whichPlayerEvent_11 = null
	set this_19 = null
	set whichPlayer_12 = null
	set whichPlayerEvent_12 = null
	set this_20 = null
	set whichPlayer_13 = null
	set whichPlayerEvent_13 = null
	set this_21 = null
	set whichPlayer_14 = null
endfunction

function OnUnitEnterLeave_closure_impl_4 takes integer this_2 returns nothing
	local trigger receiver = CreateTrigger()
	local trigger this_3 = receiver
	local region whichRegion = MapBounds_boundRegion
	local boolexpr filter = Filter(ref_function_OnUnitEnterLeave_closure_impl)
	local group receiver_2
	local group receiver_3
	local playerunitevent p
	local code c
	local group this_4
	local rect rec
	local group this_5
	local rect rec_2
	local boolexpr filter_2
	local group this_6
	local group this_7
	call TriggerRegisterEnterRegion(this_3, whichRegion, filter)
	set p = EVENT_PLAYER_UNIT_ISSUED_ORDER
	set c = ref_function_OnUnitEnterLeave_closure_impl_2
	call registerPlayerUnitEvent(p, null, c, null)
	set this_4 = OnUnitEnterLeave_preplacedUnits
	set rec = MapBounds_boundRect
	set this_5 = this_4
	set rec_2 = rec
	set filter_2 = null
	call GroupEnumUnitsInRect(this_5, rec_2, filter_2)
	call ForGroup(OnUnitEnterLeave_preplacedUnits, ref_function_OnUnitEnterLeave_closure_impl_3)
	set receiver_2 = OnUnitEnterLeave_preplacedUnits
	set this_6 = receiver_2
	call GroupClear(this_6)
	set receiver_3 = receiver_2
	set this_7 = receiver_3
	call DestroyGroup(this_7)
	set receiver = null
	set receiver_2 = null
	set receiver_3 = null
	set this_3 = null
	set whichRegion = null
	set filter = null
	set p = null
	set this_4 = null
	set rec = null
	set this_5 = null
	set rec_2 = null
	set filter_2 = null
	set this_6 = null
	set this_7 = null
endfunction

function new_LLEntry takes integer elem, integer prev, integer next, string stackPos returns integer
	local integer this_2
	local string stackPos_2
	local integer this_3
	local integer this_4
	local integer elem_2
	local integer prev_2
	local integer next_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackPos_2 = "when calling LLEntry in LinkedList, line 401"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if LLEntry_firstFree == 0 then
		if LLEntry_maxIndex < 32768 then
			set LLEntry_maxIndex = LLEntry_maxIndex + 1
			set this_3 = LLEntry_maxIndex
		else
			call error("Out of memory: Could not create LLEntry.", "when calling error in LinkedList, line 396")
			set this_3 = 0
		endif
	else
		set LLEntry_firstFree = LLEntry_firstFree - 1
		set this_3 = LLEntry_nextFree[LLEntry_firstFree]
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_2 = this_3
	set this_4 = this_2
	set elem_2 = elem
	set prev_2 = prev
	set next_2 = next
	set LLEntry_elem[this_4] = elem_2
	set LLEntry_prev[this_4] = prev_2
	set LLEntry_next[this_4] = next_2
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_2
endfunction

function dispatch_LinkedList_LinkedList_LinkedList_add_1 takes integer this_2, integer elems_0, string stackPos returns nothing
	local integer this_3
	local integer elems_0_2
	local string stackPos_2
	local integer entry
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if LinkedList_typeId[this_2] == 0 then
		if this_2 == 0 then
			call error("Nullpointer exception when calling LinkedList.add", "when calling error in LinkedList, line 37")
		else
			call error("Called LinkedList.add on invalid object.", "when calling error in LinkedList, line 37")
		endif
	endif
	set this_3 = this_2
	set elems_0_2 = elems_0
	set stackPos_2 = "when calling add in LinkedList, line 37"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	set entry = new_LLEntry(elems_0_2, LLEntry_prev[LinkedList_dummy[this_3]], LinkedList_dummy[this_3], "when calling new_LLEntry in LinkedList, line 39")
	set LLEntry_next[LLEntry_prev[LinkedList_dummy[this_3]]] = entry
	set LLEntry_prev[LinkedList_dummy[this_3]] = entry
	set LinkedList_size[this_3] = LinkedList_size[this_3] + 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function dispatch_ForGroupCallback_ClosureForGroups_ForGroupCallback_callback takes integer this_2, unit u, string stackPos returns nothing
	local integer this_3
	local unit u_2
	local string stackPos_2
	local unit object
	local handle this_4
	local unit u_3
	local unit this_5
	local integer temp
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if ForGroupCallback_typeId[this_2] == 0 then
		if this_2 == 0 then
			call error("Nullpointer exception when calling ForGroupCallback.callback", "when calling error in ClosureForGroups, line 4")
		else
			call error("Called ForGroupCallback.callback on invalid object.", "when calling error in ClosureForGroups, line 4")
		endif
	endif
	if ForGroupCallback_typeId[this_2] <= 652 then
		set this_3 = this_2
		set u_2 = u
		set stackPos_2 = "when calling LinkedList_closure_impl in ClosureForGroups, line 4"
		set wurst_stack[wurst_stack_depth] = stackPos_2
		set wurst_stack_depth = wurst_stack_depth + 1
		set temp = result[this_3]
		set object = u_2
		set this_4 = object
		call dispatch_LinkedList_LinkedList_LinkedList_add_1(temp, GetHandleId(this_4), "when calling add in LinkedList, line 515")
		set wurst_stack_depth = wurst_stack_depth - 1
	else
		set u_3 = u
		set this_5 = u_3
		call RemoveUnit(this_5)
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set u_2 = null
	set object = null
	set this_4 = null
	set u_3 = null
	set this_5 = null
endfunction

function group_forEachFrom takes group this_2, integer cb, string stackPos returns nothing
	local unit u
	local group from
	local group this_3
	local group this_4
	local unit iterUnit
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set from = this_2
	loop
		set this_3 = from
		exitwhen  not (FirstOfGroup(this_3) != null)
		set this_4 = from
		set iterUnit = FirstOfGroup(this_4)
		call GroupRemoveUnit(this_4, iterUnit)
		set u = iterUnit
		call dispatch_ForGroupCallback_ClosureForGroups_ForGroupCallback_callback(cb, u, "when calling callback in ClosureForGroups, line 31")
	endloop
	set wurst_stack_depth = wurst_stack_depth - 1
	set u = null
	set from = null
	set this_3 = null
	set this_4 = null
	set iterUnit = null
endfunction

function finishPreload takes string stackPos returns nothing
	local integer clVar
	local group temp
	local unit this_2
	local string stackPos_2
	local integer this_3
	local group this_4
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_2 = Preloader_dum
	call RemoveUnit(this_2)
	set temp = Preloader_dumg
	set stackPos_2 = "when calling alloc_Closure in Preloader, line 45"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if ForGroupCallback_firstFree == 0 then
		if ForGroupCallback_maxIndex < 32768 then
			set ForGroupCallback_maxIndex = ForGroupCallback_maxIndex + 1
			set this_3 = ForGroupCallback_maxIndex
			set ForGroupCallback_typeId[this_3] = 653
		else
			call error("Out of memory: Could not create Closure.", "when calling error in Preloader, line 45")
			set this_3 = 0
		endif
	else
		set ForGroupCallback_firstFree = ForGroupCallback_firstFree - 1
		set this_3 = ForGroupCallback_nextFree[ForGroupCallback_firstFree]
		set ForGroupCallback_typeId[this_3] = 653
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set clVar = this_3
	call group_forEachFrom(temp, clVar, "when calling forEachFrom in Preloader, line 45")
	set this_4 = Preloader_dumg
	call DestroyGroup(this_4)
	set Preloader_dumg = null
	set wurst_stack_depth = wurst_stack_depth - 1
	set temp = null
	set this_2 = null
	set this_4 = null
endfunction

function testFail takes string msg returns nothing
endfunction

function dispatch_CallbackSingle_ClosureTimers_CallbackSingle_call takes integer this_2, string stackPos returns nothing
	local integer this_3
	local integer expected
	local integer this_4
	local integer this_5
	local string stackPos_2
	local string temp
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if CallbackSingle_typeId[this_2] == 0 then
		if this_2 == 0 then
			call error("Nullpointer exception when calling CallbackSingle.call", "when calling error in ClosureTimers, line 65")
		else
			call error("Called CallbackSingle.call on invalid object.", "when calling error in ClosureTimers, line 65")
		endif
	endif
	if CallbackSingle_typeId[this_2] <= 635 then
		if CallbackSingle_typeId[this_2] <= 634 then
			if CallbackSingle_typeId[this_2] <= 633 then
				call ClosureEvents_closure_impl_2(this_2)
			else
				set ClosureTimers_x = ClosureTimers_x + 50
			endif
		else
			set ClosureTimers_x = ClosureTimers_x * 2
		endif
	elseif CallbackSingle_typeId[this_2] <= 637 then
		if CallbackSingle_typeId[this_2] <= 636 then
			set ClosureTimers_x = ClosureTimers_x / 2
			set this_3 = ClosureTimers_x
			set expected = 250
			if this_3 != expected then
				set this_4 = expected
				set temp = "Expected <" + I2S(this_4) + ">, Actual <"
				set this_5 = this_3
				call testFail(temp + I2S(this_5) + ">")
			endif
		else
			call OnUnitEnterLeave_closure_impl_4(this_2)
		endif
	else
		set stackPos_2 = "when calling Preloader_closure_impl in ClosureTimers, line 65"
		set wurst_stack[wurst_stack_depth] = stackPos_2
		set wurst_stack_depth = wurst_stack_depth + 1
		call finishPreload("when calling finishPreload in Preloader, line 54")
		set wurst_stack_depth = wurst_stack_depth - 1
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function CallbackSingle_staticCallback takes string stackPos returns nothing
	local timer t
	local integer cb
	local integer this_2
	local string stackPos_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set t = GetExpiredTimer()
	set cb = timer_getData(t, "when calling getData in ClosureTimers, line 75")
	call dispatch_CallbackSingle_ClosureTimers_CallbackSingle_call(cb, "when calling call in ClosureTimers, line 76")
	set this_2 = cb
	set stackPos_2 = "when calling CallbackSingle in ClosureTimers, line 77"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if CallbackSingle_typeId[this_2] == 0 then
		if this_2 == 0 then
			call error("Nullpointer exception when calling CallbackSingle.CallbackSingle", "when calling error in ClosureTimers, line 63")
		else
			call error("Called CallbackSingle.CallbackSingle on invalid object.", "when calling error in ClosureTimers, line 63")
		endif
	endif
	call destroyCallbackSingle(this_2, "when calling destroyCallbackSingle in ClosureTimers, line 63")
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set t = null
endfunction

function bridge_CallbackSingle_closure_impl takes nothing returns nothing
	local string stackPos
	set wurst_stack_depth = 0
	set stackPos = "ClosureTimers, line 68"
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call CallbackSingle_staticCallback("when calling staticCallback in ClosureTimers, line 70")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function GetCityId takes unit u, string stackPos returns integer
	local integer i
	local integer temp
	local integer this_2
	local string stackPos_2
	local unit Main_City_GetCityUnit_result
	local integer this_3
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set i = 0
	set temp = Main_cityCount - 1
	loop
		exitwhen i > temp
		set this_2 = Main_cities[i]
		set stackPos_2 = "when calling GetCityUnit in Main, line 299"
		set wurst_stack[wurst_stack_depth] = stackPos_2
		set wurst_stack_depth = wurst_stack_depth + 1
		if City_typeId[this_2] == 0 then
			if this_2 == 0 then
				call error("Nullpointer exception when calling City.GetCityUnit", "when calling error in Main, line 223")
			else
				call error("Called City.GetCityUnit on invalid object.", "when calling error in Main, line 223")
			endif
		endif
		set this_3 = this_2
		set Main_City_GetCityUnit_result = City_city_unit[this_3]
		set wurst_stack_depth = wurst_stack_depth - 1
		if Main_City_GetCityUnit_result == u then
			set wurst_stack_depth = wurst_stack_depth - 1
			set Main_City_GetCityUnit_result = null
			return i
		endif
		set i = i + 1
	endloop
	set wurst_stack_depth = wurst_stack_depth - 1
	set Main_City_GetCityUnit_result = null
	return -1
endfunction

function GetAttentionStringForPlayer takes player pl, string stackPos returns string
	local integer f
	local integer r
	local string s
	local integer this_2
	local string stackPos_2
	local integer Main_PlayerStats_GetForceId_result
	local integer this_3
	local player this_4
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_4 = pl
	set this_2 = Main_player_stats[GetPlayerId(this_4)]
	set stackPos_2 = "when calling GetForceId in Main, line 479"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if PlayerStats_typeId[this_2] == 0 then
		if this_2 == 0 then
			call error("Nullpointer exception when calling PlayerStats.GetForceId", "when calling error in Main, line 350")
		else
			call error("Called PlayerStats.GetForceId on invalid object.", "when calling error in Main, line 350")
		endif
	endif
	set this_3 = this_2
	set Main_PlayerStats_GetForceId_result = PlayerStats_force_id[this_3]
	set wurst_stack_depth = wurst_stack_depth - 1
	set f = Main_PlayerStats_GetForceId_result
	set r = GetRandomInt(0, 3 - 1)
	set s = ""
	if f == 0 then
		set s = Main_ksAttentionWE[r]
	elseif f == 1 then
		set s = Main_ksAttentionEE[r]
	elseif f == 2 then
		set s = Main_ksAttentionME[r]
	elseif f == 3 then
		set s = Main_ksAttentionBZ[r]
	else
		set s = "Attention!"
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_4 = null
	return "|cffffa600" + s + "|r"
endfunction

function dispatch_City_Main_City_ReplaceCity takes integer this_2, integer unit_id, string stackPos returns nothing
	local integer this_3
	local integer unit_id_2
	local string stackPos_2
	local string msg
	local player pl
	local string stackPos_3
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if City_typeId[this_2] == 0 then
		if this_2 == 0 then
			call error("Nullpointer exception when calling City.ReplaceCity", "when calling error in Main, line 229")
		else
			call error("Called City.ReplaceCity on invalid object.", "when calling error in Main, line 229")
		endif
	endif
	set this_3 = this_2
	set unit_id_2 = unit_id
	set stackPos_2 = "when calling ReplaceCity in Main, line 229"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	set City_city_unit[this_3] = ReplaceUnitBJ(City_city_unit[this_3], unit_id_2, bj_UNIT_STATE_METHOD_RELATIVE)
	if true then
		set msg = "Replaced city"
		set pl = Player_players[0]
		set stackPos_3 = "when calling AttentionToPlayer in Main, line 232"
		set wurst_stack[wurst_stack_depth] = stackPos_3
		set wurst_stack_depth = wurst_stack_depth + 1
		call DisplayTimedTextToPlayer(pl, 0., 0., 15.0, GetAttentionStringForPlayer(pl, "when calling GetAttentionStringForPlayer in Main, line 510"))
		call DisplayTimedTextToPlayer(pl, 0., 0., 15.0, msg)
		set wurst_stack_depth = wurst_stack_depth - 1
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set pl = null
endfunction

function bridge_City_closure_impl takes nothing returns nothing
	local string stackPos
	local integer city_id
	set wurst_stack_depth = 0
	set stackPos = "City, line 79"
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set city_id = GetCityId(GetSpellAbilityUnit(), "when calling GetCityId in City, line 80")
	call dispatch_City_Main_City_ReplaceCity(Main_cities[city_id], 1747989297, "when calling ReplaceCity in City, line 81")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function bridge_City_closure_impl_2 takes nothing returns nothing
	local string stackPos
	local integer city_id
	set wurst_stack_depth = 0
	set stackPos = "City, line 75"
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set city_id = GetCityId(GetSpellAbilityUnit(), "when calling GetCityId in City, line 76")
	call dispatch_City_Main_City_ReplaceCity(Main_cities[city_id], 1747989555, "when calling ReplaceCity in City, line 77")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function dispatch_LLIterator_destroyLLIterator takes integer this_2, string stackPos returns nothing
	local integer this_3
	local string stackPos_2
	local integer obj
	local string stackPos_3
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if LLIterator_typeId[this_2] == 0 then
		if this_2 == 0 then
			call error("Nullpointer exception when calling LLIterator.LLIterator", "when calling error in LinkedList, line 406")
		else
			call error("Called LLIterator.LLIterator on invalid object.", "when calling error in LinkedList, line 406")
		endif
	endif
	set this_3 = this_2
	set stackPos_2 = "when calling destroyLLIterator in LinkedList, line 406"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	set obj = this_3
	set stackPos_3 = "when calling LLIterator in LinkedList, line 406"
	set wurst_stack[wurst_stack_depth] = stackPos_3
	set wurst_stack_depth = wurst_stack_depth + 1
	if LLIterator_typeId[obj] == 0 then
		call error("Double free: object of type LLIterator", "when calling error in LinkedList, line 406")
	else
		set LLIterator_nextFree[LLIterator_firstFree] = obj
		set LLIterator_firstFree = LLIterator_firstFree + 1
		set LLIterator_typeId[obj] = 0
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function dispatch_LLIterator_LinkedList_LLIterator_reset takes integer this_2, string stackPos returns nothing
	local integer this_3
	local string stackPos_2
	local integer this_4
	local string stackPos_3
	local integer LinkedList_LinkedList_getDummy_result
	local integer this_5
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if LLIterator_typeId[this_2] == 0 then
		if this_2 == 0 then
			call error("Nullpointer exception when calling LLIterator.reset", "when calling error in LinkedList, line 421")
		else
			call error("Called LLIterator.reset on invalid object.", "when calling error in LinkedList, line 421")
		endif
	endif
	set this_3 = this_2
	set stackPos_2 = "when calling reset in LinkedList, line 421"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_4 = LLIterator_parent[this_3]
	set stackPos_3 = "when calling getDummy in LinkedList, line 422"
	set wurst_stack[wurst_stack_depth] = stackPos_3
	set wurst_stack_depth = wurst_stack_depth + 1
	if LinkedList_typeId[this_4] == 0 then
		if this_4 == 0 then
			call error("Nullpointer exception when calling LinkedList.getDummy", "when calling error in LinkedList, line 362")
		else
			call error("Called LinkedList.getDummy on invalid object.", "when calling error in LinkedList, line 362")
		endif
	endif
	set this_5 = this_4
	set LinkedList_LinkedList_getDummy_result = LinkedList_dummy[this_5]
	set wurst_stack_depth = wurst_stack_depth - 1
	set LLIterator_dummy[this_3] = LinkedList_LinkedList_getDummy_result
	set LLIterator_current[this_3] = LLIterator_dummy[this_3]
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function new_LLIterator takes integer parent, string stackPos returns integer
	local integer this_2
	local string stackPos_2
	local integer this_3
	local integer this_4
	local integer parent_2
	local string stackPos_3
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackPos_2 = "when calling LLIterator in LinkedList, line 412"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if LLIterator_firstFree == 0 then
		if LLIterator_maxIndex < 32768 then
			set LLIterator_maxIndex = LLIterator_maxIndex + 1
			set this_3 = LLIterator_maxIndex
			set LLIterator_typeId[this_3] = 663
		else
			call error("Out of memory: Could not create LLIterator.", "when calling error in LinkedList, line 406")
			set this_3 = 0
		endif
	else
		set LLIterator_firstFree = LLIterator_firstFree - 1
		set this_3 = LLIterator_nextFree[LLIterator_firstFree]
		set LLIterator_typeId[this_3] = 663
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_2 = this_3
	set this_4 = this_2
	set parent_2 = parent
	set stackPos_3 = "when calling construct_LLIterator in LinkedList, line 412"
	set wurst_stack[wurst_stack_depth] = stackPos_3
	set wurst_stack_depth = wurst_stack_depth + 1
	set LLIterator_destroyOnClose[this_4] = true
	set LLIterator_parent[this_4] = parent_2
	call dispatch_LLIterator_LinkedList_LLIterator_reset(this_4, "when calling reset in LinkedList, line 414")
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_2
endfunction

function isCity takes unit u, string stackPos returns boolean
	local integer id
	local integer iterator
	local integer city_type_id
	local unit this_2
	local integer this_3
	local string stackPos_2
	local integer stackTrace_tempReturn
	local integer this_4
	local integer this_5
	local integer this_6
	local string stackPos_3
	local integer this_7
	local string stackPos_4
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_2 = u
	set id = GetUnitTypeId(this_2)
	set this_3 = Main_kCityTypes
	set stackPos_2 = "when calling iterator in Main, line 290"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackTrace_tempReturn = new_LLIterator(this_3, "when calling new_LLIterator in LinkedList, line 165")
	set wurst_stack_depth = wurst_stack_depth - 1
	set iterator = stackTrace_tempReturn
	loop
		set this_4 = iterator
		exitwhen  not (LLEntry_next[LLIterator_current[this_4]] != LLIterator_dummy[this_4])
		set this_5 = iterator
		set LLIterator_current[this_5] = LLEntry_next[LLIterator_current[this_5]]
		set city_type_id = LLEntry_elem[LLIterator_current[this_5]]
		if id == city_type_id then
			set this_6 = iterator
			set stackPos_3 = "when calling close in Main, line 290"
			set wurst_stack[wurst_stack_depth] = stackPos_3
			set wurst_stack_depth = wurst_stack_depth + 1
			if LLIterator_destroyOnClose[this_6] then
				call dispatch_LLIterator_destroyLLIterator(this_6, "when calling LLIterator in LinkedList, line 450")
			endif
			set wurst_stack_depth = wurst_stack_depth - 1
			set wurst_stack_depth = wurst_stack_depth - 1
			set this_2 = null
			return true
		endif
	endloop
	set this_7 = iterator
	set stackPos_4 = "when calling close in Main, line 290"
	set wurst_stack[wurst_stack_depth] = stackPos_4
	set wurst_stack_depth = wurst_stack_depth + 1
	if LLIterator_destroyOnClose[this_7] then
		call dispatch_LLIterator_destroyLLIterator(this_7, "when calling LLIterator in LinkedList, line 450")
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_2 = null
	return false
endfunction

function bridge_City_closure_impl_3 takes nothing returns boolean
	local string stackPos
	local boolean stackTrace_tempReturn
	set wurst_stack_depth = 0
	set stackPos = "City, line 48"
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackTrace_tempReturn = isCity(GetFilterUnit(), "when calling isCity in City, line 48")
	set wurst_stack_depth = wurst_stack_depth - 1
	return stackTrace_tempReturn
endfunction

function GetForceId takes integer player_id returns integer
	local integer i = 0
	local integer temp = 4 - 1
	local force this_2
	local player whichPlayer
	loop
		exitwhen i > temp
		set this_2 = Main_forces[i]
		set whichPlayer = Player_players[player_id]
		if IsPlayerInForce(whichPlayer, this_2) then
			set this_2 = null
			set whichPlayer = null
			return i
		endif
		set i = i + 1
	endloop
	set this_2 = null
	set whichPlayer = null
	return -1
endfunction

function City_closure_impl_5 takes string stackPos returns nothing
	local integer this_2
	local integer pl_id
	local string stackPos_2
	local integer this_3
	local integer pl_id_2
	local unit this_4
	local player p
	local boolean changeColor
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_2 = Main_cities[GetCityId(GetTriggerUnit(), "when calling GetCityId in City, line 87")]
	set pl_id = PLAYER_NEUTRAL_AGGRESSIVE
	set stackPos_2 = "when calling ChangeOwner in City, line 87"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if City_typeId[this_2] == 0 then
		if this_2 == 0 then
			call error("Nullpointer exception when calling City.ChangeOwner", "when calling error in Main, line 234")
		else
			call error("Called City.ChangeOwner on invalid object.", "when calling error in Main, line 234")
		endif
	endif
	set this_3 = this_2
	set pl_id_2 = pl_id
	set this_4 = City_city_unit[this_3]
	set p = Player_players[pl_id_2]
	set changeColor = true
	call SetUnitOwner(this_4, p, changeColor)
	set City_force_id[this_3] = GetForceId(pl_id_2)
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_4 = null
	set p = null
endfunction

function bridge_City_closure_impl_4 takes nothing returns nothing
	set wurst_stack_depth = 0
	call City_closure_impl_5("City, line 84")
endfunction

function AttentionToForce takes string msg, force f, string stackPos returns nothing
	local integer i
	local integer temp
	local player pl
	local player whichPlayer
	local force f_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set i = 0
	set temp = 24 - 1
	loop
		exitwhen i > temp
		set whichPlayer = Player_players[i]
		set f_2 = CreateForce()
		call ForceAddPlayer(f_2, whichPlayer)
		if f_2 == f then
			set pl = Player_players[i]
			call DisplayTimedTextToPlayer(pl, 0., 0., 15.0, GetAttentionStringForPlayer(pl, "when calling GetAttentionStringForPlayer in Main, line 538"))
			call DisplayTimedTextToPlayer(pl, 0., 0., 15.0, msg)
		endif
		set i = i + 1
	endloop
	set wurst_stack_depth = wurst_stack_depth - 1
	set pl = null
	set whichPlayer = null
	set f_2 = null
endfunction

function City_closure_impl_6 takes string stackPos returns nothing
	local integer city_id
	local integer this_2
	local integer pl_id
	local string stackPos_2
	local integer this_3
	local integer pl_id_2
	local unit this_4
	local player p
	local boolean changeColor
	local player this_5
	local unit this_6
	local unit whichUnit
	local real percent
	local unit this_7
	local unit this_8
	local string temp
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set city_id = GetCityId(GetTriggerUnit(), "when calling GetCityId in City, line 67")
	set this_2 = Main_cities[city_id]
	set this_6 = GetAttacker()
	set this_5 = GetOwningPlayer(this_6)
	set pl_id = GetPlayerId(this_5)
	set stackPos_2 = "when calling ChangeOwner in City, line 68"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if City_typeId[this_2] == 0 then
		if this_2 == 0 then
			call error("Nullpointer exception when calling City.ChangeOwner", "when calling error in Main, line 234")
		else
			call error("Called City.ChangeOwner on invalid object.", "when calling error in Main, line 234")
		endif
	endif
	set this_3 = this_2
	set pl_id_2 = pl_id
	set this_4 = City_city_unit[this_3]
	set p = Player_players[pl_id_2]
	set changeColor = true
	call SetUnitOwner(this_4, p, changeColor)
	set City_force_id[this_3] = GetForceId(pl_id_2)
	set wurst_stack_depth = wurst_stack_depth - 1
	set whichUnit = GetTriggerUnit()
	set percent = 60.0
	call SetUnitState(whichUnit, UNIT_STATE_LIFE, GetUnitState(whichUnit, UNIT_STATE_MAX_LIFE) * RMaxBJ(0., percent) * 0.01)
	set this_7 = GetAttacker()
	set temp = player_getNameColored(GetOwningPlayer(this_7)) + " has just captured "
	set this_8 = GetTriggerUnit()
	call AttentionToForce(temp + player_getNameColored(GetOwningPlayer(this_8)) + " Capitol!", bj_FORCE_ALL_PLAYERS, "when calling AttentionToForce in City, line 71")
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_4 = null
	set p = null
	set this_5 = null
	set this_6 = null
	set whichUnit = null
	set this_7 = null
	set this_8 = null
endfunction

function bridge_City_closure_impl_5 takes nothing returns nothing
	set wurst_stack_depth = 0
	call City_closure_impl_6("City, line 58")
endfunction

function dispatch_HashMap_HashMap_HashMap_get takes integer this_2, integer key, string stackPos returns integer
	local integer HashMap_HashMap_get_result
	local integer this_3
	local integer key_2
	local string stackPos_2
	local integer stackTrace_tempReturn
	local integer this_4
	local integer parentKey
	local string stackPos_3
	local integer Table_Table_loadInt_result
	local integer this_5
	local integer parentKey_2
	local hashtable this_6
	local integer parentKey_3
	local integer childKey
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if Table_typeId[this_2] == 0 then
		if this_2 == 0 then
			call error("Nullpointer exception when calling HashMap.get", "when calling error in HashMap, line 19")
		else
			call error("Called HashMap.get on invalid object.", "when calling error in HashMap, line 19")
		endif
	endif
	set this_3 = this_2
	set key_2 = key
	set stackPos_2 = "when calling get in HashMap, line 19"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_4 = this_3
	set parentKey = key_2
	set stackPos_3 = "when calling loadInt in HashMap, line 20"
	set wurst_stack[wurst_stack_depth] = stackPos_3
	set wurst_stack_depth = wurst_stack_depth + 1
	if Table_typeId[this_4] == 0 then
		if this_4 == 0 then
			call error("Nullpointer exception when calling Table.loadInt", "when calling error in Table, line 39")
		else
			call error("Called Table.loadInt on invalid object.", "when calling error in Table, line 39")
		endif
	endif
	set this_5 = this_4
	set parentKey_2 = parentKey
	set this_6 = Table_ht
	set parentKey_3 = this_5
	set childKey = parentKey_2
	set Table_Table_loadInt_result = LoadInteger(this_6, parentKey_3, childKey)
	set wurst_stack_depth = wurst_stack_depth - 1
	set stackTrace_tempReturn = Table_Table_loadInt_result
	set wurst_stack_depth = wurst_stack_depth - 1
	set HashMap_HashMap_get_result = stackTrace_tempReturn
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_6 = null
	return HashMap_HashMap_get_result
endfunction

function dispatch_HashMap_HashMap_HashMap_has takes integer this_2, integer key, string stackPos returns boolean
	local boolean HashMap_HashMap_has_result
	local integer this_3
	local integer key_2
	local string stackPos_2
	local boolean stackTrace_tempReturn
	local integer this_4
	local integer parentKey
	local string stackPos_3
	local boolean Table_Table_hasInt_result
	local integer this_5
	local integer parentKey_2
	local hashtable this_6
	local integer parentKey_3
	local integer childKey
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if Table_typeId[this_2] == 0 then
		if this_2 == 0 then
			call error("Nullpointer exception when calling HashMap.has", "when calling error in HashMap, line 11")
		else
			call error("Called HashMap.has on invalid object.", "when calling error in HashMap, line 11")
		endif
	endif
	set this_3 = this_2
	set key_2 = key
	set stackPos_2 = "when calling has in HashMap, line 11"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_4 = this_3
	set parentKey = key_2
	set stackPos_3 = "when calling hasInt in HashMap, line 12"
	set wurst_stack[wurst_stack_depth] = stackPos_3
	set wurst_stack_depth = wurst_stack_depth + 1
	if Table_typeId[this_4] == 0 then
		if this_4 == 0 then
			call error("Nullpointer exception when calling Table.hasInt", "when calling error in Table, line 9")
		else
			call error("Called Table.hasInt on invalid object.", "when calling error in Table, line 9")
		endif
	endif
	set this_5 = this_4
	set parentKey_2 = parentKey
	set this_6 = Table_ht
	set parentKey_3 = this_5
	set childKey = parentKey_2
	set Table_Table_hasInt_result = HaveSavedInteger(this_6, parentKey_3, childKey)
	set wurst_stack_depth = wurst_stack_depth - 1
	set stackTrace_tempReturn = Table_Table_hasInt_result
	set wurst_stack_depth = wurst_stack_depth - 1
	set HashMap_HashMap_has_result = stackTrace_tempReturn
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_6 = null
	return HashMap_HashMap_has_result
endfunction

function HashList_decrOccurences takes integer this_2, integer elem, string stackPos returns nothing
	local hashtable this_3
	local integer parentKey
	local integer childKey
	local integer value
	local integer this_4
	local integer elem_2
	local string stackPos_2
	local integer HashList_HashList_count_result
	local integer this_5
	local integer elem_3
	local hashtable this_6
	local integer parentKey_2
	local integer childKey_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_3 = HashList_occurences
	set parentKey = this_2
	set childKey = elem
	set this_4 = this_2
	set elem_2 = elem
	set stackPos_2 = "when calling count in HashList, line 22"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if HashList_typeId[this_4] == 0 then
		if this_4 == 0 then
			call error("Nullpointer exception when calling HashList.count", "when calling error in HashList, line 15")
		else
			call error("Called HashList.count on invalid object.", "when calling error in HashList, line 15")
		endif
	endif
	set this_5 = this_4
	set elem_3 = elem_2
	set this_6 = HashList_occurences
	set parentKey_2 = this_5
	set childKey_2 = elem_3
	set HashList_HashList_count_result = LoadInteger(this_6, parentKey_2, childKey_2)
	set wurst_stack_depth = wurst_stack_depth - 1
	set value = HashList_HashList_count_result - 1
	call SaveInteger(this_3, parentKey, childKey, value)
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_3 = null
	set this_6 = null
endfunction

function HashList_removeAt takes integer this_2, integer index, string stackPos returns nothing
	local integer i
	local integer temp
	local integer this_3
	local integer elem
	local string stackPos_2
	local hashtable this_4
	local integer parentKey
	local integer childKey
	local hashtable this_5
	local integer parentKey_2
	local integer childKey_2
	local integer value
	local hashtable this_6
	local integer parentKey_3
	local integer childKey_3
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_3 = this_2
	set this_4 = HashList_ht
	set parentKey = this_2
	set childKey = index
	set elem = LoadInteger(this_4, parentKey, childKey)
	set stackPos_2 = "when calling decrOccurences in HashList, line 54"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if HashList_typeId[this_3] == 0 then
		if this_3 == 0 then
			call error("Nullpointer exception when calling HashList.decrOccurences", "when calling error in HashList, line 21")
		else
			call error("Called HashList.decrOccurences on invalid object.", "when calling error in HashList, line 21")
		endif
	endif
	call HashList_decrOccurences(this_3, elem, "when calling decrOccurences in HashList, line 21")
	set wurst_stack_depth = wurst_stack_depth - 1
	set i = index
	set temp = HashList_size[this_2]
	loop
		exitwhen i > temp
		set this_5 = HashList_ht
		set parentKey_2 = this_2
		set childKey_2 = i
		set this_6 = HashList_ht
		set parentKey_3 = this_2
		set childKey_3 = i + 1
		set value = LoadInteger(this_6, parentKey_3, childKey_3)
		call SaveInteger(this_5, parentKey_2, childKey_2, value)
		set i = i + 1
	endloop
	set HashList_size[this_2] = HashList_size[this_2] - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_4 = null
	set this_5 = null
	set this_6 = null
endfunction

function HashList_remove takes integer this_2, integer t, string stackPos returns nothing
	local integer i
	local integer temp
	local hashtable this_3
	local integer parentKey
	local integer childKey
	local integer this_4
	local integer index
	local string stackPos_2
	local integer temp_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set i = 0
	set temp = HashList_size[this_2] - 1
	loop
		exitwhen i > temp
		set temp_2 = t
		set this_3 = HashList_ht
		set parentKey = this_2
		set childKey = i
		if temp_2 == LoadInteger(this_3, parentKey, childKey) then
			set this_4 = this_2
			set index = i
			set stackPos_2 = "when calling removeAt in HashList, line 63"
			set wurst_stack[wurst_stack_depth] = stackPos_2
			set wurst_stack_depth = wurst_stack_depth + 1
			if HashList_typeId[this_4] == 0 then
				if this_4 == 0 then
					call error("Nullpointer exception when calling HashList.removeAt", "when calling error in HashList, line 53")
				else
					call error("Called HashList.removeAt on invalid object.", "when calling error in HashList, line 53")
				endif
			endif
			call HashList_removeAt(this_4, index, "when calling removeAt in HashList, line 53")
			set wurst_stack_depth = wurst_stack_depth - 1
			exitwhen true
		endif
		set i = i + 1
	endloop
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_3 = null
endfunction

function dispatch_HashList_HashList_HashList_has takes integer this_2, integer elem, string stackPos returns boolean
	local boolean HashList_HashList_has_result
	local integer this_3
	local integer elem_2
	local string stackPos_2
	local boolean stackTrace_tempReturn
	local integer this_4
	local integer elem_3
	local string stackPos_3
	local integer HashList_HashList_count_result
	local integer this_5
	local integer elem_4
	local hashtable this_6
	local integer parentKey
	local integer childKey
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if HashList_typeId[this_2] == 0 then
		if this_2 == 0 then
			call error("Nullpointer exception when calling HashList.has", "when calling error in HashList, line 87")
		else
			call error("Called HashList.has on invalid object.", "when calling error in HashList, line 87")
		endif
	endif
	set this_3 = this_2
	set elem_2 = elem
	set stackPos_2 = "when calling has in HashList, line 87"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_4 = this_3
	set elem_3 = elem_2
	set stackPos_3 = "when calling count in HashList, line 88"
	set wurst_stack[wurst_stack_depth] = stackPos_3
	set wurst_stack_depth = wurst_stack_depth + 1
	if HashList_typeId[this_4] == 0 then
		if this_4 == 0 then
			call error("Nullpointer exception when calling HashList.count", "when calling error in HashList, line 15")
		else
			call error("Called HashList.count on invalid object.", "when calling error in HashList, line 15")
		endif
	endif
	set this_5 = this_4
	set elem_4 = elem_3
	set this_6 = HashList_occurences
	set parentKey = this_5
	set childKey = elem_4
	set HashList_HashList_count_result = LoadInteger(this_6, parentKey, childKey)
	set wurst_stack_depth = wurst_stack_depth - 1
	set stackTrace_tempReturn = HashList_HashList_count_result > 0
	set wurst_stack_depth = wurst_stack_depth - 1
	set HashList_HashList_has_result = stackTrace_tempReturn
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_6 = null
	return HashList_HashList_has_result
endfunction

function IterableMap_remove takes integer this_2, integer key, string stackPos returns nothing
	local integer this_3
	local integer key_2
	local string stackPos_2
	local integer this_4
	local integer parentKey
	local string stackPos_3
	local integer this_5
	local integer parentKey_2
	local integer this_6
	local integer key_3
	local string stackPos_4
	local boolean HashMap_IterableMap_hasKey_result
	local integer this_7
	local integer key_4
	local string stackPos_5
	local boolean stackTrace_tempReturn
	local integer this_8
	local integer t
	local string stackPos_6
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_3 = this_2
	set key_2 = key
	set stackPos_2 = "when calling remove in HashMap, line 54"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_4 = this_3
	set parentKey = key_2
	set stackPos_3 = "when calling removeInt in HashMap, line 24"
	set wurst_stack[wurst_stack_depth] = stackPos_3
	set wurst_stack_depth = wurst_stack_depth + 1
	if Table_typeId[this_4] == 0 then
		if this_4 == 0 then
			call error("Nullpointer exception when calling Table.removeInt", "when calling error in Table, line 24")
		else
			call error("Called Table.removeInt on invalid object.", "when calling error in Table, line 24")
		endif
	endif
	set this_5 = this_4
	set parentKey_2 = parentKey
	call RemoveSavedInteger(Table_ht, this_5, parentKey_2)
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_6 = this_2
	set key_3 = key
	set stackPos_4 = "when calling hasKey in HashMap, line 55"
	set wurst_stack[wurst_stack_depth] = stackPos_4
	set wurst_stack_depth = wurst_stack_depth + 1
	if Table_typeId[this_6] == 0 then
		if this_6 == 0 then
			call error("Nullpointer exception when calling IterableMap.hasKey", "when calling error in HashMap, line 75")
		else
			call error("Called IterableMap.hasKey on invalid object.", "when calling error in HashMap, line 75")
		endif
	endif
	set this_7 = this_6
	set key_4 = key_3
	set stackPos_5 = "when calling hasKey in HashMap, line 75"
	set wurst_stack[wurst_stack_depth] = stackPos_5
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackTrace_tempReturn = dispatch_HashList_HashList_HashList_has(IterableMap_keys[this_7], key_4, "when calling has in HashMap, line 76")
	set wurst_stack_depth = wurst_stack_depth - 1
	set HashMap_IterableMap_hasKey_result = stackTrace_tempReturn
	set wurst_stack_depth = wurst_stack_depth - 1
	if HashMap_IterableMap_hasKey_result then
		set this_8 = IterableMap_keys[this_2]
		set t = key
		set stackPos_6 = "when calling remove in HashMap, line 56"
		set wurst_stack[wurst_stack_depth] = stackPos_6
		set wurst_stack_depth = wurst_stack_depth + 1
		if HashList_typeId[this_8] == 0 then
			if this_8 == 0 then
				call error("Nullpointer exception when calling HashList.remove", "when calling error in HashList, line 60")
			else
				call error("Called HashList.remove on invalid object.", "when calling error in HashList, line 60")
			endif
		endif
		call HashList_remove(this_8, t, "when calling remove in HashList, line 60")
		set wurst_stack_depth = wurst_stack_depth - 1
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function dispatch_HashMap_HashMap_HashMap_remove takes integer this_2, integer key, string stackPos returns nothing
	local integer this_3
	local integer key_2
	local string stackPos_2
	local integer this_4
	local integer parentKey
	local string stackPos_3
	local integer this_5
	local integer parentKey_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if Table_typeId[this_2] == 0 then
		if this_2 == 0 then
			call error("Nullpointer exception when calling HashMap.remove", "when calling error in HashMap, line 23")
		else
			call error("Called HashMap.remove on invalid object.", "when calling error in HashMap, line 23")
		endif
	endif
	if Table_typeId[this_2] <= 691 then
		set this_3 = this_2
		set key_2 = key
		set stackPos_2 = "when calling remove in HashMap, line 23"
		set wurst_stack[wurst_stack_depth] = stackPos_2
		set wurst_stack_depth = wurst_stack_depth + 1
		set this_4 = this_3
		set parentKey = key_2
		set stackPos_3 = "when calling removeInt in HashMap, line 24"
		set wurst_stack[wurst_stack_depth] = stackPos_3
		set wurst_stack_depth = wurst_stack_depth + 1
		if Table_typeId[this_4] == 0 then
			if this_4 == 0 then
				call error("Nullpointer exception when calling Table.removeInt", "when calling error in Table, line 24")
			else
				call error("Called Table.removeInt on invalid object.", "when calling error in Table, line 24")
			endif
		endif
		set this_5 = this_4
		set parentKey_2 = parentKey
		call RemoveSavedInteger(Table_ht, this_5, parentKey_2)
		set wurst_stack_depth = wurst_stack_depth - 1
		set wurst_stack_depth = wurst_stack_depth - 1
	else
		call IterableMap_remove(this_2, key, "when calling remove in HashMap, line 23")
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function HashList_incrOccurences takes integer this_2, integer elem, string stackPos returns nothing
	local hashtable this_3
	local integer parentKey
	local integer childKey
	local integer value
	local integer this_4
	local integer elem_2
	local string stackPos_2
	local integer HashList_HashList_count_result
	local integer this_5
	local integer elem_3
	local hashtable this_6
	local integer parentKey_2
	local integer childKey_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_3 = HashList_occurences
	set parentKey = this_2
	set childKey = elem
	set this_4 = this_2
	set elem_2 = elem
	set stackPos_2 = "when calling count in HashList, line 19"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if HashList_typeId[this_4] == 0 then
		if this_4 == 0 then
			call error("Nullpointer exception when calling HashList.count", "when calling error in HashList, line 15")
		else
			call error("Called HashList.count on invalid object.", "when calling error in HashList, line 15")
		endif
	endif
	set this_5 = this_4
	set elem_3 = elem_2
	set this_6 = HashList_occurences
	set parentKey_2 = this_5
	set childKey_2 = elem_3
	set HashList_HashList_count_result = LoadInteger(this_6, parentKey_2, childKey_2)
	set wurst_stack_depth = wurst_stack_depth - 1
	set value = HashList_HashList_count_result + 1
	call SaveInteger(this_3, parentKey, childKey, value)
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_3 = null
	set this_6 = null
endfunction

function HashList_add_1 takes integer this_2, integer elems_0, string stackPos returns nothing
	local hashtable this_3
	local integer parentKey
	local integer childKey
	local integer value
	local integer this_4
	local integer elem
	local string stackPos_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_3 = HashList_ht
	set parentKey = this_2
	set childKey = HashList_size[this_2]
	set value = elems_0
	call SaveInteger(this_3, parentKey, childKey, value)
	set this_4 = this_2
	set elem = elems_0
	set stackPos_2 = "when calling incrOccurences in HashList, line 28"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if HashList_typeId[this_4] == 0 then
		if this_4 == 0 then
			call error("Nullpointer exception when calling HashList.incrOccurences", "when calling error in HashList, line 18")
		else
			call error("Called HashList.incrOccurences on invalid object.", "when calling error in HashList, line 18")
		endif
	endif
	call HashList_incrOccurences(this_4, elem, "when calling incrOccurences in HashList, line 18")
	set wurst_stack_depth = wurst_stack_depth - 1
	set HashList_size[this_2] = HashList_size[this_2] + 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_3 = null
endfunction

function IterableMap_put takes integer this_2, integer key, integer value, string stackPos returns nothing
	local integer this_3
	local integer key_2
	local integer value_2
	local string stackPos_2
	local integer this_4
	local integer parentKey
	local integer value_3
	local string stackPos_3
	local integer this_5
	local integer parentKey_2
	local integer value_4
	local hashtable this_6
	local integer parentKey_3
	local integer childKey
	local integer value_5
	local integer this_7
	local integer key_3
	local string stackPos_4
	local boolean HashMap_IterableMap_hasKey_result
	local integer this_8
	local integer key_4
	local string stackPos_5
	local boolean stackTrace_tempReturn
	local integer this_9
	local integer elems_0
	local string stackPos_6
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_3 = this_2
	set key_2 = key
	set value_2 = value
	set stackPos_2 = "when calling put in HashMap, line 48"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_4 = this_3
	set parentKey = key_2
	set value_3 = value_2
	set stackPos_3 = "when calling saveInt in HashMap, line 16"
	set wurst_stack[wurst_stack_depth] = stackPos_3
	set wurst_stack_depth = wurst_stack_depth + 1
	if Table_typeId[this_4] == 0 then
		if this_4 == 0 then
			call error("Nullpointer exception when calling Table.saveInt", "when calling error in Table, line 42")
		else
			call error("Called Table.saveInt on invalid object.", "when calling error in Table, line 42")
		endif
	endif
	set this_5 = this_4
	set parentKey_2 = parentKey
	set value_4 = value_3
	set this_6 = Table_ht
	set parentKey_3 = this_5
	set childKey = parentKey_2
	set value_5 = value_4
	call SaveInteger(this_6, parentKey_3, childKey, value_5)
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_7 = this_2
	set key_3 = key
	set stackPos_4 = "when calling hasKey in HashMap, line 49"
	set wurst_stack[wurst_stack_depth] = stackPos_4
	set wurst_stack_depth = wurst_stack_depth + 1
	if Table_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling IterableMap.hasKey", "when calling error in HashMap, line 75")
		else
			call error("Called IterableMap.hasKey on invalid object.", "when calling error in HashMap, line 75")
		endif
	endif
	set this_8 = this_7
	set key_4 = key_3
	set stackPos_5 = "when calling hasKey in HashMap, line 75"
	set wurst_stack[wurst_stack_depth] = stackPos_5
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackTrace_tempReturn = dispatch_HashList_HashList_HashList_has(IterableMap_keys[this_8], key_4, "when calling has in HashMap, line 76")
	set wurst_stack_depth = wurst_stack_depth - 1
	set HashMap_IterableMap_hasKey_result = stackTrace_tempReturn
	set wurst_stack_depth = wurst_stack_depth - 1
	if  not HashMap_IterableMap_hasKey_result then
		set this_9 = IterableMap_keys[this_2]
		set elems_0 = key
		set stackPos_6 = "when calling add in HashMap, line 50"
		set wurst_stack[wurst_stack_depth] = stackPos_6
		set wurst_stack_depth = wurst_stack_depth + 1
		if HashList_typeId[this_9] == 0 then
			if this_9 == 0 then
				call error("Nullpointer exception when calling HashList.add", "when calling error in HashList, line 25")
			else
				call error("Called HashList.add on invalid object.", "when calling error in HashList, line 25")
			endif
		endif
		call HashList_add_1(this_9, elems_0, "when calling add in HashList, line 25")
		set wurst_stack_depth = wurst_stack_depth - 1
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_6 = null
endfunction

function dispatch_HashMap_HashMap_HashMap_put takes integer this_2, integer key, integer value, string stackPos returns nothing
	local integer this_3
	local integer key_2
	local integer value_2
	local string stackPos_2
	local integer this_4
	local integer parentKey
	local integer value_3
	local string stackPos_3
	local integer this_5
	local integer parentKey_2
	local integer value_4
	local hashtable this_6
	local integer parentKey_3
	local integer childKey
	local integer value_5
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if Table_typeId[this_2] == 0 then
		if this_2 == 0 then
			call error("Nullpointer exception when calling HashMap.put", "when calling error in HashMap, line 15")
		else
			call error("Called HashMap.put on invalid object.", "when calling error in HashMap, line 15")
		endif
	endif
	if Table_typeId[this_2] <= 691 then
		set this_3 = this_2
		set key_2 = key
		set value_2 = value
		set stackPos_2 = "when calling put in HashMap, line 15"
		set wurst_stack[wurst_stack_depth] = stackPos_2
		set wurst_stack_depth = wurst_stack_depth + 1
		set this_4 = this_3
		set parentKey = key_2
		set value_3 = value_2
		set stackPos_3 = "when calling saveInt in HashMap, line 16"
		set wurst_stack[wurst_stack_depth] = stackPos_3
		set wurst_stack_depth = wurst_stack_depth + 1
		if Table_typeId[this_4] == 0 then
			if this_4 == 0 then
				call error("Nullpointer exception when calling Table.saveInt", "when calling error in Table, line 42")
			else
				call error("Called Table.saveInt on invalid object.", "when calling error in Table, line 42")
			endif
		endif
		set this_5 = this_4
		set parentKey_2 = parentKey
		set value_4 = value_3
		set this_6 = Table_ht
		set parentKey_3 = this_5
		set childKey = parentKey_2
		set value_5 = value_4
		call SaveInteger(this_6, parentKey_3, childKey, value_5)
		set wurst_stack_depth = wurst_stack_depth - 1
		set wurst_stack_depth = wurst_stack_depth - 1
	else
		call IterableMap_put(this_2, key, value, "when calling put in HashMap, line 15")
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_6 = null
endfunction

function OnCastListener_onDestroy takes integer this_2, string stackPos returns nothing
	local integer listener
	local integer listener_2
	local unit object
	local handle this_3
	local unit object_2
	local handle this_4
	local integer temp
	local integer temp_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if OnCastListener_eventUnit[this_2] != null then
		set temp = EventListener_castMapCasters
		set object = OnCastListener_eventUnit[this_2]
		set this_3 = object
		set listener = dispatch_HashMap_HashMap_HashMap_get(temp, GetHandleId(this_3), "when calling get in ClosureEvents, line 60")
		if listener == this_2 then
			set temp_2 = EventListener_castMapCasters
			set object_2 = OnCastListener_eventUnit[this_2]
			set this_4 = object_2
			call dispatch_HashMap_HashMap_HashMap_put(temp_2, GetHandleId(this_4), OnCastListener_next[this_2], "when calling put in ClosureEvents, line 62")
		elseif OnCastListener_prev[this_2] != 0 then
			set OnCastListener_next[OnCastListener_prev[this_2]] = OnCastListener_next[this_2]
		endif
	else
		set listener_2 = dispatch_HashMap_HashMap_HashMap_get(EventListener_castMap, OnCastListener_abilId[this_2], "when calling get in ClosureEvents, line 66")
		if listener_2 == this_2 then
			call dispatch_HashMap_HashMap_HashMap_put(EventListener_castMap, OnCastListener_abilId[this_2], OnCastListener_next[this_2], "when calling put in ClosureEvents, line 68")
		elseif OnCastListener_prev[this_2] != 0 then
			set OnCastListener_next[OnCastListener_prev[this_2]] = OnCastListener_next[this_2]
		endif
	endif
	set OnCastListener_prev[OnCastListener_next[this_2]] = OnCastListener_prev[this_2]
	set OnCastListener_next[this_2] = 0
	set OnCastListener_prev[this_2] = 0
	set wurst_stack_depth = wurst_stack_depth - 1
	set object = null
	set this_3 = null
	set object_2 = null
	set this_4 = null
endfunction

function dispatch_OnCastListener_destroyOnCastListener takes integer this_2, string stackPos returns nothing
	local integer this_3
	local string stackPos_2
	local integer obj
	local string stackPos_3
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if OnCastListener_typeId[this_2] == 0 then
		if this_2 == 0 then
			call error("Nullpointer exception when calling OnCastListener.OnCastListener", "when calling error in ClosureEvents, line 50")
		else
			call error("Called OnCastListener.OnCastListener on invalid object.", "when calling error in ClosureEvents, line 50")
		endif
	endif
	set this_3 = this_2
	set stackPos_2 = "when calling destroyOnCastListener in ClosureEvents, line 50"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	call OnCastListener_onDestroy(this_3, "when calling OnCastListener_onDestroy in ClosureEvents, line 58")
	set obj = this_3
	set stackPos_3 = "when calling OnCastListener in ClosureEvents, line 58"
	set wurst_stack[wurst_stack_depth] = stackPos_3
	set wurst_stack_depth = wurst_stack_depth + 1
	if OnCastListener_typeId[obj] == 0 then
		call error("Double free: object of type OnCastListener", "when calling error in ClosureEvents, line 50")
	else
		set OnCastListener_firstFree = OnCastListener_firstFree + 1
		set OnCastListener_typeId[obj] = 0
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function destroyEventListener takes integer this_2, string stackPos returns nothing
	local integer this_3
	local integer listener
	local integer obj
	local string stackPos_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_3 = this_2
	set listener = EventListener_generalListenersFirsts[EventListener_eventId[this_3]]
	if listener == this_3 then
		set EventListener_generalListenersFirsts[EventListener_eventId[this_3]] = EventListener_next[this_3]
	elseif EventListener_prev[this_3] != 0 then
		set EventListener_next[EventListener_prev[this_3]] = EventListener_next[this_3]
	endif
	set EventListener_prev[EventListener_next[this_3]] = EventListener_prev[this_3]
	set listener = EventListener_unitListenersFirsts[EventListener_eventId[this_3]]
	if listener == this_3 then
		set EventListener_unitListenersFirsts[EventListener_eventId[this_3]] = EventListener_next[this_3]
	elseif EventListener_prev[this_3] != 0 then
		set EventListener_next[EventListener_prev[this_3]] = EventListener_next[this_3]
	endif
	set EventListener_prev[EventListener_next[this_3]] = EventListener_prev[this_3]
	set EventListener_next[this_3] = 0
	set EventListener_prev[this_3] = 0
	set obj = this_2
	set stackPos_2 = "when calling EventListener in ClosureEvents, line 201"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if EventListener_typeId[obj] == 0 then
		call error("Double free: object of type EventListener", "when calling error in ClosureEvents, line 98")
	else
		set EventListener_nextFree[EventListener_firstFree] = obj
		set EventListener_firstFree = EventListener_firstFree + 1
		set EventListener_typeId[obj] = 0
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function unregisterEvents takes integer id, string stackPos returns nothing
	local integer listener
	local integer t
	local string msg
	local player showTo
	local integer loglvl
	local string msg_2
	local string compositeMsg
	local integer this_2
	local integer this_3
	local string stackPos_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if id > 0 then
		if EventListener_unitListenersFirsts[id] != 0 then
			set this_2 = id
			set msg = "unregister unit has listeners. startid: " + I2S(this_2)
			set showTo = Player_localPlayer
			set loglvl = 0
			set msg_2 = msg
			if 2 <= loglvl then
				set compositeMsg = Loglevel_getTag(loglvl) + " - " + msg_2
				call DisplayTimedTextToPlayer(showTo, 0., 0., 45., compositeMsg)
			endif
			set listener = EventListener_unitListenersFirsts[id]
			set EventListener_unitListenersFirsts[id] = 0
			loop
				exitwhen  not (listener != 0)
				set t = listener
				set listener = EventListener_next[listener]
				set this_3 = t
				set stackPos_2 = "when calling EventListener in ClosureEvents, line 275"
				set wurst_stack[wurst_stack_depth] = stackPos_2
				set wurst_stack_depth = wurst_stack_depth + 1
				if EventListener_typeId[this_3] == 0 then
					if this_3 == 0 then
						call error("Nullpointer exception when calling EventListener.EventListener", "when calling error in ClosureEvents, line 98")
					else
						call error("Called EventListener.EventListener on invalid object.", "when calling error in ClosureEvents, line 98")
					endif
				endif
				call destroyEventListener(this_3, "when calling destroyEventListener in ClosureEvents, line 98")
				set wurst_stack_depth = wurst_stack_depth - 1
			endloop
		endif
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set showTo = null
endfunction

function unregisterEventsForUnit takes unit u, string stackPos returns nothing
	local integer listener
	local integer t
	local integer listener_2
	local integer t_2
	local unit this_2
	local unit this_3
	local unit object
	local handle this_4
	local unit object_2
	local handle this_5
	local unit object_3
	local handle this_6
	local unit object_4
	local handle this_7
	local unit object_5
	local handle this_8
	local integer temp
	local integer temp_2
	local integer temp_3
	local integer temp_4
	local integer temp_5
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if true then
		set this_2 = u
		set this_3 = this_2
		call unregisterEvents(GetUnitUserData(this_3), "when calling unregisterEvents in ClosureEvents, line 251")
		set temp = EventListener_castMapCasters
		set object = u
		set this_4 = object
		if dispatch_HashMap_HashMap_HashMap_has(temp, GetHandleId(this_4), "when calling has in ClosureEvents, line 252") then
			set temp_2 = EventListener_castMapCasters
			set object_2 = u
			set this_5 = object_2
			set listener = dispatch_HashMap_HashMap_HashMap_get(temp_2, GetHandleId(this_5), "when calling get in ClosureEvents, line 253")
			set temp_3 = EventListener_castMapCasters
			set object_3 = u
			set this_6 = object_3
			call dispatch_HashMap_HashMap_HashMap_remove(temp_3, GetHandleId(this_6), "when calling remove in ClosureEvents, line 254")
			loop
				exitwhen  not (listener != 0)
				set t = listener
				set listener = OnCastListener_next[listener]
				call dispatch_OnCastListener_destroyOnCastListener(t, "when calling OnCastListener in ClosureEvents, line 258")
			endloop
		endif
		set temp_4 = EventListener_castMapCasters
		set object_4 = u
		set this_7 = object_4
		if dispatch_HashMap_HashMap_HashMap_has(temp_4, GetHandleId(this_7), "when calling has in ClosureEvents, line 259") then
			set temp_5 = EventListener_castMapCasters
			set object_5 = u
			set this_8 = object_5
			set listener_2 = dispatch_HashMap_HashMap_HashMap_get(temp_5, GetHandleId(this_8), "when calling get in ClosureEvents, line 260")
			loop
				exitwhen  not (listener_2 != 0)
				set t_2 = listener_2
				set listener_2 = OnCastListener_next[listener_2]
				call dispatch_OnCastListener_destroyOnCastListener(t_2, "when calling OnCastListener in ClosureEvents, line 264")
			endloop
		endif
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_2 = null
	set this_3 = null
	set object = null
	set this_4 = null
	set object_2 = null
	set this_5 = null
	set object_3 = null
	set this_6 = null
	set object_4 = null
	set this_7 = null
	set object_5 = null
	set this_8 = null
endfunction

function bridge_ClosureEvents_closure_impl takes nothing returns nothing
	local string stackPos
	set wurst_stack_depth = 0
	set stackPos = "ClosureEvents, line 283"
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call unregisterEventsForUnit(UnitIndexer_deindexedUnit, "when calling unregisterEventsForUnit in ClosureEvents, line 283")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function dispatch_OnCastListener_ClosureEvents_OnCastListener_fire takes integer this_2, unit caster, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if OnCastListener_typeId[this_2] == 0 then
		if this_2 == 0 then
			call error("Nullpointer exception when calling OnCastListener.fire", "when calling error in ClosureEvents, line 56")
		else
			call error("Called OnCastListener.fire on invalid object.", "when calling error in ClosureEvents, line 56")
		endif
	endif
	if OnCastListener_typeId[this_2] <= 675 then
		if OnCastListener_typeId[this_2] <= 674 then
			call GetSpellAbilityId()
		else
			call GetSpellTargetX()
			call GetSpellTargetY()
		endif
	else
		call GetSpellTargetUnit()
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function EventListener_onSpellEffect takes string stackPos returns nothing
	local unit trigUnit
	local integer abilId
	local integer listener
	local integer listener_2
	local unit object
	local handle this_2
	local unit object_2
	local handle this_3
	local integer temp
	local integer temp_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set trigUnit = GetTriggerUnit()
	set abilId = GetSpellAbilityId()
	set temp = EventListener_castMapCasters
	set object = trigUnit
	set this_2 = object
	if dispatch_HashMap_HashMap_HashMap_has(temp, GetHandleId(this_2), "when calling has in ClosureEvents, line 188") then
		set temp_2 = EventListener_castMapCasters
		set object_2 = trigUnit
		set this_3 = object_2
		set listener = dispatch_HashMap_HashMap_HashMap_get(temp_2, GetHandleId(this_3), "when calling get in ClosureEvents, line 189")
		loop
			exitwhen  not (listener != 0)
			if OnCastListener_abilId[listener] == -1 or OnCastListener_abilId[listener] == abilId then
				call dispatch_OnCastListener_ClosureEvents_OnCastListener_fire(listener, GetSpellAbilityUnit(), "when calling fire in ClosureEvents, line 192")
			endif
			set listener = OnCastListener_next[listener]
		endloop
	endif
	if dispatch_HashMap_HashMap_HashMap_has(EventListener_castMap, abilId, "when calling has in ClosureEvents, line 194") then
		set listener_2 = dispatch_HashMap_HashMap_HashMap_get(EventListener_castMap, abilId, "when calling get in ClosureEvents, line 195")
		loop
			exitwhen  not (listener_2 != 0)
			if OnCastListener_eventUnit[listener_2] == null or OnCastListener_eventUnit[listener_2] == trigUnit then
				call dispatch_OnCastListener_ClosureEvents_OnCastListener_fire(listener_2, GetSpellAbilityUnit(), "when calling fire in ClosureEvents, line 198")
			endif
			set listener_2 = OnCastListener_next[listener_2]
		endloop
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set trigUnit = null
	set object = null
	set this_2 = null
	set object_2 = null
	set this_3 = null
endfunction

function bridge_ClosureEvents_closure_impl_2 takes nothing returns nothing
	local string stackPos
	set wurst_stack_depth = 0
	set stackPos = "ClosureEvents, line 306"
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call EventListener_onSpellEffect("when calling onSpellEffect in ClosureEvents, line 306")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function City_Capture takes integer this_2, player whoCaptures, string stackPos returns nothing
	local integer this_3
	local integer pl_id
	local string stackPos_2
	local integer this_4
	local integer pl_id_2
	local unit this_5
	local player p
	local boolean changeColor
	local player this_6
	local unit whichUnit
	local real percent
	local unit whichUnit_2
	local real percent_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_3 = this_2
	set this_6 = whoCaptures
	set pl_id = GetPlayerId(this_6)
	set stackPos_2 = "when calling ChangeOwner in Main, line 247"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if City_typeId[this_3] == 0 then
		if this_3 == 0 then
			call error("Nullpointer exception when calling City.ChangeOwner", "when calling error in Main, line 234")
		else
			call error("Called City.ChangeOwner on invalid object.", "when calling error in Main, line 234")
		endif
	endif
	set this_4 = this_3
	set pl_id_2 = pl_id
	set this_5 = City_city_unit[this_4]
	set p = Player_players[pl_id_2]
	set changeColor = true
	call SetUnitOwner(this_5, p, changeColor)
	set City_force_id[this_4] = GetForceId(pl_id_2)
	set wurst_stack_depth = wurst_stack_depth - 1
	set whichUnit = City_city_unit[this_2]
	set percent = 60.0
	call SetUnitState(whichUnit, UNIT_STATE_LIFE, GetUnitState(whichUnit, UNIT_STATE_MAX_LIFE) * RMaxBJ(0., percent) * 0.01)
	set whichUnit_2 = City_city_unit[this_2]
	set percent_2 = 30.0
	call SetUnitState(whichUnit_2, UNIT_STATE_MANA, GetUnitState(whichUnit_2, UNIT_STATE_MAX_MANA) * RMaxBJ(0., percent_2) * 0.01)
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_5 = null
	set p = null
	set this_6 = null
	set whichUnit = null
	set whichUnit_2 = null
endfunction

function City_closure_impl_7 takes integer this_2, string stackPos returns nothing
	local unit u
	local integer city_id
	local unit this_3
	local string stackPos_2
	local boolean stackTrace_tempReturn
	local unit this_4
	local unit whichUnit
	local unit this_5
	local string stackPos_3
	local integer stackTrace_tempReturn_2
	local integer this_6
	local player whoCaptures
	local string stackPos_4
	local unit this_7
	local boolean andLeft
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set u = GetTriggerUnit()
	set this_3 = u
	set stackPos_2 = "when calling isCity in City, line 92"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackTrace_tempReturn = isCity(this_3, "when calling isCity in UnitTools, line 5")
	set wurst_stack_depth = wurst_stack_depth - 1
	if stackTrace_tempReturn then
		set this_4 = u
		set whichUnit = this_4
		set andLeft = GetUnitStatePercent(whichUnit, UNIT_STATE_LIFE, UNIT_STATE_MAX_LIFE) <= 60.0
	else
		set andLeft = false
	endif
	if andLeft then
		set this_5 = u
		set stackPos_3 = "when calling getCityId in City, line 93"
		set wurst_stack[wurst_stack_depth] = stackPos_3
		set wurst_stack_depth = wurst_stack_depth + 1
		set stackTrace_tempReturn_2 = GetCityId(this_5, "when calling GetCityId in UnitTools, line 9")
		set wurst_stack_depth = wurst_stack_depth - 1
		set city_id = stackTrace_tempReturn_2
		set this_6 = Main_cities[city_id]
		set this_7 = GetAttacker()
		set whoCaptures = GetOwningPlayer(this_7)
		set stackPos_4 = "when calling Capture in City, line 94"
		set wurst_stack[wurst_stack_depth] = stackPos_4
		set wurst_stack_depth = wurst_stack_depth + 1
		if City_typeId[this_6] == 0 then
			if this_6 == 0 then
				call error("Nullpointer exception when calling City.Capture", "when calling error in Main, line 246")
			else
				call error("Called City.Capture on invalid object.", "when calling error in Main, line 246")
			endif
		endif
		call City_Capture(this_6, whoCaptures, "when calling Capture in Main, line 246")
		set wurst_stack_depth = wurst_stack_depth - 1
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set u = null
	set this_3 = null
	set this_4 = null
	set whichUnit = null
	set this_5 = null
	set whoCaptures = null
	set this_7 = null
endfunction

function City_closure_impl_8 takes integer this_2, string stackPos returns nothing
	local unit un
	local real this_x
	local real this_y
	local real v2_x
	local real v2_y
	local real radius
	local real this_3
	local real this_4
	local real this_5
	local unit this_6
	local unit this_7
	local unit this_8
	local unit this_9
	local unit this_10
	local unit this_11
	local unit this_12
	local string msg
	local player pl
	local string stackPos_2
	local real temp
	local real temp_2
	local real temp_3
	local boolean andLeft
	local real tuple_temp
	local real tuple_temp_2
	local real tuple_temp_3
	local real tuple_temp_4
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set un = GetTriggerUnit()
	if isCity(un, "when calling isCity in Main, line 269") then
		set this_6 = un
		set this_7 = this_6
		set temp = GetUnitX(this_7)
		set this_8 = this_6
		set tuple_temp = temp
		set tuple_temp_2 = GetUnitY(this_8)
		set this_x = tuple_temp
		set this_y = tuple_temp_2
		set tuple_temp_3 = City_city_pos_x[this[this_2]]
		set tuple_temp_4 = City_city_pos_y[this[this_2]]
		set v2_x = tuple_temp_3
		set v2_y = tuple_temp_4
		set radius = 300.0
		set this_3 = this_x - v2_x
		set temp_2 = this_3 * this_3
		set this_4 = this_y - v2_y
		set temp_3 = temp_2 + this_4 * this_4
		set this_5 = radius
		set andLeft = temp_3 <= this_5 * this_5
	else
		set andLeft = false
	endif
	if andLeft then
		set this_9 = un
		if GetUnitTypeId(this_9) == 1747989589 then
			call ReplaceUnitBJ(un, 1747989325, bj_UNIT_STATE_METHOD_RELATIVE)
		endif
		set this_10 = un
		if GetUnitTypeId(this_10) == 1747988556 then
			call ReplaceUnitBJ(un, 1747989297, bj_UNIT_STATE_METHOD_RELATIVE)
		endif
		set this_11 = un
		if GetUnitTypeId(this_11) == 1747988555 then
			call ReplaceUnitBJ(un, 1747989060, bj_UNIT_STATE_METHOD_RELATIVE)
		endif
		set this_12 = un
		if GetUnitTypeId(this_12) == 1747989809 then
			call ReplaceUnitBJ(un, 1747989059, bj_UNIT_STATE_METHOD_RELATIVE)
		endif
		set City_city_unit[this[this_2]] = un
		if true then
			set msg = "city unit changed"
			set pl = Player_players[0]
			set stackPos_2 = "when calling AttentionToPlayer in Main, line 280"
			set wurst_stack[wurst_stack_depth] = stackPos_2
			set wurst_stack_depth = wurst_stack_depth + 1
			call DisplayTimedTextToPlayer(pl, 0., 0., 15.0, GetAttentionStringForPlayer(pl, "when calling GetAttentionStringForPlayer in Main, line 510"))
			call DisplayTimedTextToPlayer(pl, 0., 0., 15.0, msg)
			set wurst_stack_depth = wurst_stack_depth - 1
		endif
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set un = null
	set this_6 = null
	set this_7 = null
	set this_8 = null
	set this_9 = null
	set this_10 = null
	set this_11 = null
	set this_12 = null
	set pl = null
endfunction

function dispatch_EventListener_ClosureEvents_EventListener_onEvent takes integer this_2, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if EventListener_typeId[this_2] == 0 then
		if this_2 == 0 then
			call error("Nullpointer exception when calling EventListener.onEvent", "when calling error in ClosureEvents, line 108")
		else
			call error("Called EventListener.onEvent on invalid object.", "when calling error in ClosureEvents, line 108")
		endif
	endif
	if EventListener_typeId[this_2] <= 647 then
		call City_closure_impl_7(this_2, "when calling City_closure_impl in ClosureEvents, line 108")
	else
		call City_closure_impl_8(this_2, "when calling City_closure_impl in ClosureEvents, line 108")
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function registerEventId takes eventid evnt, string stackPos returns integer
	local integer eventId
	local handle this_2
	local eventid this_3
	local integer eventId_2
	local handle this_4
	local string msg
	local player showTo
	local integer loglvl
	local string msg_2
	local string compositeMsg
	local integer this_5
	local integer this_6
	local playerunitevent p
	local code c
	local eventid this_7
	local integer eventId_3
	local handle this_8
	local eventid this_9
	local integer eventId_4
	local handle this_10
	local integer this_11
	local string temp
	local boolean andLeft
	local boolean andLeft_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_2 = evnt
	set eventId = GetHandleId(this_2)
	set ClosureEvents_eventTypeCounter = ClosureEvents_eventTypeCounter + 1
	set ClosureEvents_eventidToIndex[eventId] = ClosureEvents_eventTypeCounter
	set this_3 = evnt
	set this_4 = this_3
	set eventId_2 = GetHandleId(this_4)
	if (eventId_2 >= 18 and eventId_2 <= 51) or (eventId_2 >= 269 and eventId_2 <= 277) then
		set this_5 = eventId
		set temp = "reg handleid: " + I2S(this_5) + " -> eventId: "
		set this_6 = ClosureEvents_eventTypeCounter
		set msg = temp + I2S(this_6)
		set showTo = Player_localPlayer
		set loglvl = 1
		set msg_2 = msg
		if 2 <= loglvl then
			set compositeMsg = Loglevel_getTag(loglvl) + " - " + msg_2
			call DisplayTimedTextToPlayer(showTo, 0., 0., 45., compositeMsg)
		endif
		set p = ConvertPlayerUnitEvent(eventId)
		set c = ref_function_bridge_EventListener_generalEventCallback
		call registerPlayerUnitEvent(p, null, c, null)
	else
		if evnt != EVENT_UNIT_DAMAGED and evnt != EVENT_PLAYER_LEAVE and evnt != ClosureEvents_EVENT_PLAYER_CHAT_FILTER then
			set this_7 = evnt
			set this_8 = this_7
			set eventId_3 = GetHandleId(this_8)
			set andLeft =  not ((eventId_3 >= 261 and eventId_3 <= 268) or eventId_3 == 17)
		else
			set andLeft = false
		endif
		if andLeft then
			set this_9 = evnt
			set this_10 = this_9
			set eventId_4 = GetHandleId(this_10)
			set andLeft_2 =  not (eventId_4 >= 305 and eventId_4 <= 307)
		else
			set andLeft_2 = false
		endif
		if andLeft_2 then
			set this_11 = eventId
			call error("registering handleid: " + I2S(this_11) + " non-playerunitevent. Except EVENT_UNIT_DAMAGED and EVENT_PLAYER_LEAVE these are not supported right now.", "when calling error in ClosureEvents, line 242")
		endif
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_2 = null
	set this_3 = null
	set this_4 = null
	set showTo = null
	set p = null
	set this_7 = null
	set this_8 = null
	set this_9 = null
	set this_10 = null
	return ClosureEvents_eventTypeCounter
endfunction

function EventListener_generalEventCallback takes string stackPos returns nothing
	local unit trigUnit
	local integer id
	local integer listener
	local integer listener_2
	local eventid this_2
	local string stackPos_2
	local integer id_2
	local handle this_3
	local unit this_4
	local unit this_5
	local unit this_6
	local unit this_7
	local unit this_8
	local unit this_9
	local boolean andLeft
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set trigUnit = GetTriggerUnit()
	set this_2 = GetTriggerEventId()
	set stackPos_2 = "when calling toIntId in ClosureEvents, line 169"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_3 = this_2
	set id_2 = ClosureEvents_eventidToIndex[GetHandleId(this_3)]
	if id_2 == 0 then
		set id_2 = registerEventId(this_2, "when calling registerEventId in ClosureEvents, line 228")
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set id = id_2
	if trigUnit != null and true then
		set this_4 = trigUnit
		set this_5 = this_4
		set andLeft = GetUnitUserData(this_5) > 0
	else
		set andLeft = false
	endif
	if andLeft then
		set this_6 = trigUnit
		set this_7 = this_6
		if EventListener_unitListenersFirsts[GetUnitUserData(this_7)] != 0 then
			set this_8 = trigUnit
			set this_9 = this_8
			set listener = EventListener_unitListenersFirsts[GetUnitUserData(this_9)]
			loop
				exitwhen  not (listener != 0)
				if EventListener_eventId[listener] == id then
					call dispatch_EventListener_ClosureEvents_EventListener_onEvent(listener, "when calling onEvent in ClosureEvents, line 176")
				endif
				set listener = EventListener_next[listener]
			endloop
		endif
	endif
	if EventListener_generalListenersFirsts[id] != 0 then
		set listener_2 = EventListener_generalListenersFirsts[id]
		loop
			exitwhen  not (listener_2 != 0)
			call dispatch_EventListener_ClosureEvents_EventListener_onEvent(listener_2, "when calling onEvent in ClosureEvents, line 182")
			set listener_2 = EventListener_next[listener_2]
		endloop
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set trigUnit = null
	set this_2 = null
	set this_3 = null
	set this_4 = null
	set this_5 = null
	set this_6 = null
	set this_7 = null
	set this_8 = null
	set this_9 = null
endfunction

function bridge_ClosureEvents_closure_impl_3 takes nothing returns nothing
	local string stackPos
	set wurst_stack_depth = 0
	set stackPos = "ClosureEvents, line 287"
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call EventListener_generalEventCallback("when calling generalEventCallback in ClosureEvents, line 287")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function bridge_ClosureEvents_closure_impl_4 takes nothing returns nothing
	local string stackPos
	set wurst_stack_depth = 0
	set stackPos = "ClosureEvents, line 288"
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call EventListener_generalEventCallback("when calling generalEventCallback in ClosureEvents, line 288")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function bridge_ClosureEvents_closure_impl_5 takes nothing returns nothing
	local string stackPos
	set wurst_stack_depth = 0
	set stackPos = "ClosureEvents, line 286"
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call EventListener_generalEventCallback("when calling generalEventCallback in ClosureEvents, line 286")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function bridge_ClosureForGroups_closure_impl takes nothing returns nothing
	local string stackPos
	set wurst_stack_depth = 0
	set stackPos = "ClosureForGroups, line 12"
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call dispatch_ForGroupCallback_ClosureForGroups_ForGroupCallback_callback(ClosureForGroups_tempCallbacks[0 - 1], GetFilterUnit(), "when calling callback in ClosureForGroups, line 12")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function bridge_EventListener_generalEventCallback takes nothing returns nothing
	set wurst_stack_depth = 0
	call EventListener_generalEventCallback("ClosureEvents, line 240")
endfunction

function triggerFromIndex takes integer index, string stackPos returns trigger
	local trigger stackTrace_tempReturn
	local integer this_2
	local integer parentKey
	local fogstate value
	local string stackPos_2
	local integer this_3
	local integer parentKey_2
	local fogstate value_2
	local hashtable this_4
	local integer parentKey_3
	local integer childKey
	local fogstate value_3
	local integer this_5
	local integer parentKey_4
	local string stackPos_3
	local trigger Table_Table_loadTrigger_result
	local integer this_6
	local integer parentKey_5
	local hashtable this_7
	local integer parentKey_6
	local integer childKey_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_2 = TypeCasting_typecastdata
	set parentKey = 0
	set value = ConvertFogState(index)
	set stackPos_2 = "when calling saveFogState in TypeCasting, line 88"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if Table_typeId[this_2] == 0 then
		if this_2 == 0 then
			call error("Nullpointer exception when calling Table.saveFogState", "when calling error in Table, line 168")
		else
			call error("Called Table.saveFogState on invalid object.", "when calling error in Table, line 168")
		endif
	endif
	set this_3 = this_2
	set parentKey_2 = parentKey
	set value_2 = value
	set this_4 = Table_ht
	set parentKey_3 = this_3
	set childKey = parentKey_2
	set value_3 = value_2
	call SaveFogStateHandle(this_4, parentKey_3, childKey, value_3)
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_5 = TypeCasting_typecastdata
	set parentKey_4 = 0
	set stackPos_3 = "when calling loadTrigger in TypeCasting, line 89"
	set wurst_stack[wurst_stack_depth] = stackPos_3
	set wurst_stack_depth = wurst_stack_depth + 1
	if Table_typeId[this_5] == 0 then
		if this_5 == 0 then
			call error("Nullpointer exception when calling Table.loadTrigger", "when calling error in Table, line 111")
		else
			call error("Called Table.loadTrigger on invalid object.", "when calling error in Table, line 111")
		endif
	endif
	set this_6 = this_5
	set parentKey_5 = parentKey_4
	set this_7 = Table_ht
	set parentKey_6 = this_6
	set childKey_2 = parentKey_5
	set Table_Table_loadTrigger_result = LoadTriggerHandle(this_7, parentKey_6, childKey_2)
	set wurst_stack_depth = wurst_stack_depth - 1
	set stackTrace_tempReturn = Table_Table_loadTrigger_result
	set wurst_stack_depth = wurst_stack_depth - 1
	set triggerFromIndextempReturn = stackTrace_tempReturn
	set stackTrace_tempReturn = null
	set value = null
	set value_2 = null
	set this_4 = null
	set value_3 = null
	set Table_Table_loadTrigger_result = null
	set this_7 = null
	return triggerFromIndextempReturn
endfunction

function RegisterEvents_closure_impl takes string stackPos returns boolean
	local boolean stackTrace_tempReturn
	local trigger this_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_2 = triggerFromIndex(dispatch_HashMap_HashMap_HashMap_get(RegisterEvents_onCastMap, GetSpellAbilityId(), "when calling get in RegisterEvents, line 58"), "when calling triggerFromIndex in RegisterEvents, line 58")
	set stackTrace_tempReturn = TriggerEvaluate(this_2)
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_2 = null
	return stackTrace_tempReturn
endfunction

function bridge_RegisterEvents_closure_impl takes nothing returns boolean
	set wurst_stack_depth = 0
	return RegisterEvents_closure_impl("RegisterEvents, line 58")
endfunction

function City_SettleCity takes integer this_2, integer pl_id, string stackPos returns nothing
	local integer this_3
	local integer pl_id_2
	local string stackPos_2
	local integer this_4
	local integer pl_id_3
	local unit this_5
	local player p
	local boolean changeColor
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call dispatch_City_Main_City_ReplaceCity(this_2, 1747988529, "when calling ReplaceCity in Main, line 240")
	set this_3 = this_2
	set pl_id_2 = pl_id
	set stackPos_2 = "when calling ChangeOwner in Main, line 241"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if City_typeId[this_3] == 0 then
		if this_3 == 0 then
			call error("Nullpointer exception when calling City.ChangeOwner", "when calling error in Main, line 234")
		else
			call error("Called City.ChangeOwner on invalid object.", "when calling error in Main, line 234")
		endif
	endif
	set this_4 = this_3
	set pl_id_3 = pl_id_2
	set this_5 = City_city_unit[this_4]
	set p = Player_players[pl_id_3]
	set changeColor = true
	call SetUnitOwner(this_5, p, changeColor)
	set City_force_id[this_4] = GetForceId(pl_id_3)
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_5 = null
	set p = null
endfunction

function PlayerStats_ChangeForce takes integer this_2, integer f_id, string stackPos returns nothing
	local integer temp
	local force this_3
	local player whichPlayer
	local force this_4
	local player whichPlayer_2
	local integer unitId
	local boolean allowed
	local player whichPlayer_3
	local integer unitId_2
	local boolean allowed_2
	local player whichPlayer_4
	local integer unitId_3
	local boolean allowed_3
	local player whichPlayer_5
	local integer unitId_4
	local boolean allowed_4
	local player whichPlayer_6
	local integer unitId_5
	local boolean allowed_5
	local player whichPlayer_7
	local integer unitId_6
	local boolean allowed_6
	local player whichPlayer_8
	local integer unitId_7
	local boolean allowed_7
	local player whichPlayer_9
	local integer unitId_8
	local boolean allowed_8
	local player whichPlayer_10
	local integer unitId_9
	local boolean allowed_9
	local player whichPlayer_11
	local integer unitId_10
	local boolean allowed_10
	local player whichPlayer_12
	local integer unitId_11
	local boolean allowed_11
	local player whichPlayer_13
	local integer unitId_12
	local boolean allowed_12
	local player whichPlayer_14
	local integer unitId_13
	local boolean allowed_13
	local player whichPlayer_15
	local integer unitId_14
	local boolean allowed_14
	local player whichPlayer_16
	local integer unitId_15
	local boolean allowed_15
	local player whichPlayer_17
	local integer unitId_16
	local boolean allowed_16
	local player whichPlayer_18
	local integer unitId_17
	local boolean allowed_17
	local player whichPlayer_19
	local integer unitId_18
	local boolean allowed_18
	local player whichPlayer_20
	local integer unitId_19
	local boolean allowed_19
	local player whichPlayer_21
	local integer unitId_20
	local boolean allowed_20
	local player whichPlayer_22
	local string msg
	local player pl
	local string stackPos_2
	local integer unitId_21
	local boolean allowed_21
	local player whichPlayer_23
	local integer unitId_22
	local boolean allowed_22
	local player whichPlayer_24
	local integer unitId_23
	local boolean allowed_23
	local player whichPlayer_25
	local integer unitId_24
	local boolean allowed_24
	local player whichPlayer_26
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if PlayerStats_force_id[this_2] != -1 then
		set this_3 = Main_forces[PlayerStats_force_id[this_2]]
		set whichPlayer = PlayerStats_pl[this_2]
		call ForceRemovePlayer(this_3, whichPlayer)
	endif
	set PlayerStats_force_id[this_2] = f_id
	set this_4 = Main_forces[PlayerStats_force_id[this_2]]
	set whichPlayer_2 = PlayerStats_pl[this_2]
	call ForceAddPlayer(this_4, whichPlayer_2)
	set temp = PlayerStats_force_id[this_2]
	if temp == 0 then
		set unitId = 1747988528
		set allowed = true
		set whichPlayer_3 = PlayerStats_pl[this_2]
		if allowed then
			call SetPlayerTechMaxAllowed(whichPlayer_3, unitId, -1)
		else
			call SetPlayerTechMaxAllowed(whichPlayer_3, unitId, 0)
		endif
		set unitId_2 = 1747988532
		set allowed_2 = true
		set whichPlayer_4 = PlayerStats_pl[this_2]
		if allowed_2 then
			call SetPlayerTechMaxAllowed(whichPlayer_4, unitId_2, -1)
		else
			call SetPlayerTechMaxAllowed(whichPlayer_4, unitId_2, 0)
		endif
		set unitId_3 = 1747990087
		set allowed_3 = false
		set whichPlayer_5 = PlayerStats_pl[this_2]
		if allowed_3 then
			call SetPlayerTechMaxAllowed(whichPlayer_5, unitId_3, -1)
		else
			call SetPlayerTechMaxAllowed(whichPlayer_5, unitId_3, 0)
		endif
		set unitId_4 = 1747990088
		set allowed_4 = false
		set whichPlayer_6 = PlayerStats_pl[this_2]
		if allowed_4 then
			call SetPlayerTechMaxAllowed(whichPlayer_6, unitId_4, -1)
		else
			call SetPlayerTechMaxAllowed(whichPlayer_6, unitId_4, 0)
		endif
		set unitId_5 = 1747989558
		set allowed_5 = false
		set whichPlayer_7 = PlayerStats_pl[this_2]
		if allowed_5 then
			call SetPlayerTechMaxAllowed(whichPlayer_7, unitId_5, -1)
		else
			call SetPlayerTechMaxAllowed(whichPlayer_7, unitId_5, 0)
		endif
		set unitId_6 = 1747989575
		set allowed_6 = false
		set whichPlayer_8 = PlayerStats_pl[this_2]
		if allowed_6 then
			call SetPlayerTechMaxAllowed(whichPlayer_8, unitId_6, -1)
		else
			call SetPlayerTechMaxAllowed(whichPlayer_8, unitId_6, 0)
		endif
	elseif temp == 1 then
		set unitId_7 = 1747988528
		set allowed_7 = true
		set whichPlayer_9 = PlayerStats_pl[this_2]
		if allowed_7 then
			call SetPlayerTechMaxAllowed(whichPlayer_9, unitId_7, -1)
		else
			call SetPlayerTechMaxAllowed(whichPlayer_9, unitId_7, 0)
		endif
		set unitId_8 = 1747988532
		set allowed_8 = true
		set whichPlayer_10 = PlayerStats_pl[this_2]
		if allowed_8 then
			call SetPlayerTechMaxAllowed(whichPlayer_10, unitId_8, -1)
		else
			call SetPlayerTechMaxAllowed(whichPlayer_10, unitId_8, 0)
		endif
		set unitId_9 = 1747990087
		set allowed_9 = false
		set whichPlayer_11 = PlayerStats_pl[this_2]
		if allowed_9 then
			call SetPlayerTechMaxAllowed(whichPlayer_11, unitId_9, -1)
		else
			call SetPlayerTechMaxAllowed(whichPlayer_11, unitId_9, 0)
		endif
		set unitId_10 = 1747990088
		set allowed_10 = false
		set whichPlayer_12 = PlayerStats_pl[this_2]
		if allowed_10 then
			call SetPlayerTechMaxAllowed(whichPlayer_12, unitId_10, -1)
		else
			call SetPlayerTechMaxAllowed(whichPlayer_12, unitId_10, 0)
		endif
		set unitId_11 = 1747989558
		set allowed_11 = false
		set whichPlayer_13 = PlayerStats_pl[this_2]
		if allowed_11 then
			call SetPlayerTechMaxAllowed(whichPlayer_13, unitId_11, -1)
		else
			call SetPlayerTechMaxAllowed(whichPlayer_13, unitId_11, 0)
		endif
		set unitId_12 = 1747989575
		set allowed_12 = false
		set whichPlayer_14 = PlayerStats_pl[this_2]
		if allowed_12 then
			call SetPlayerTechMaxAllowed(whichPlayer_14, unitId_12, -1)
		else
			call SetPlayerTechMaxAllowed(whichPlayer_14, unitId_12, 0)
		endif
	elseif temp == 2 then
		set unitId_13 = 1747990087
		set allowed_13 = true
		set whichPlayer_15 = PlayerStats_pl[this_2]
		if allowed_13 then
			call SetPlayerTechMaxAllowed(whichPlayer_15, unitId_13, -1)
		else
			call SetPlayerTechMaxAllowed(whichPlayer_15, unitId_13, 0)
		endif
		set unitId_14 = 1747990088
		set allowed_14 = true
		set whichPlayer_16 = PlayerStats_pl[this_2]
		if allowed_14 then
			call SetPlayerTechMaxAllowed(whichPlayer_16, unitId_14, -1)
		else
			call SetPlayerTechMaxAllowed(whichPlayer_16, unitId_14, 0)
		endif
		set unitId_15 = 1747988528
		set allowed_15 = false
		set whichPlayer_17 = PlayerStats_pl[this_2]
		if allowed_15 then
			call SetPlayerTechMaxAllowed(whichPlayer_17, unitId_15, -1)
		else
			call SetPlayerTechMaxAllowed(whichPlayer_17, unitId_15, 0)
		endif
		set unitId_16 = 1747988532
		set allowed_16 = false
		set whichPlayer_18 = PlayerStats_pl[this_2]
		if allowed_16 then
			call SetPlayerTechMaxAllowed(whichPlayer_18, unitId_16, -1)
		else
			call SetPlayerTechMaxAllowed(whichPlayer_18, unitId_16, 0)
		endif
		set unitId_17 = 1747989558
		set allowed_17 = false
		set whichPlayer_19 = PlayerStats_pl[this_2]
		if allowed_17 then
			call SetPlayerTechMaxAllowed(whichPlayer_19, unitId_17, -1)
		else
			call SetPlayerTechMaxAllowed(whichPlayer_19, unitId_17, 0)
		endif
		set unitId_18 = 1747989575
		set allowed_18 = false
		set whichPlayer_20 = PlayerStats_pl[this_2]
		if allowed_18 then
			call SetPlayerTechMaxAllowed(whichPlayer_20, unitId_18, -1)
		else
			call SetPlayerTechMaxAllowed(whichPlayer_20, unitId_18, 0)
		endif
	elseif temp == 3 then
		set unitId_19 = 1747989558
		set allowed_19 = true
		set whichPlayer_21 = PlayerStats_pl[this_2]
		if allowed_19 then
			call SetPlayerTechMaxAllowed(whichPlayer_21, unitId_19, -1)
		else
			call SetPlayerTechMaxAllowed(whichPlayer_21, unitId_19, 0)
		endif
		set unitId_20 = 1747989575
		set allowed_20 = true
		set whichPlayer_22 = PlayerStats_pl[this_2]
		if allowed_20 then
			call SetPlayerTechMaxAllowed(whichPlayer_22, unitId_20, -1)
		else
			call SetPlayerTechMaxAllowed(whichPlayer_22, unitId_20, 0)
		endif
		if true then
			set msg = "BZ settled"
			set pl = Player_players[0]
			set stackPos_2 = "when calling AttentionToPlayer in Main, line 392"
			set wurst_stack[wurst_stack_depth] = stackPos_2
			set wurst_stack_depth = wurst_stack_depth + 1
			call DisplayTimedTextToPlayer(pl, 0., 0., 15.0, GetAttentionStringForPlayer(pl, "when calling GetAttentionStringForPlayer in Main, line 510"))
			call DisplayTimedTextToPlayer(pl, 0., 0., 15.0, msg)
			set wurst_stack_depth = wurst_stack_depth - 1
		endif
		set unitId_21 = 1747990087
		set allowed_21 = false
		set whichPlayer_23 = PlayerStats_pl[this_2]
		if allowed_21 then
			call SetPlayerTechMaxAllowed(whichPlayer_23, unitId_21, -1)
		else
			call SetPlayerTechMaxAllowed(whichPlayer_23, unitId_21, 0)
		endif
		set unitId_22 = 1747990088
		set allowed_22 = false
		set whichPlayer_24 = PlayerStats_pl[this_2]
		if allowed_22 then
			call SetPlayerTechMaxAllowed(whichPlayer_24, unitId_22, -1)
		else
			call SetPlayerTechMaxAllowed(whichPlayer_24, unitId_22, 0)
		endif
		set unitId_23 = 1747988528
		set allowed_23 = false
		set whichPlayer_25 = PlayerStats_pl[this_2]
		if allowed_23 then
			call SetPlayerTechMaxAllowed(whichPlayer_25, unitId_23, -1)
		else
			call SetPlayerTechMaxAllowed(whichPlayer_25, unitId_23, 0)
		endif
		set unitId_24 = 1747988532
		set allowed_24 = false
		set whichPlayer_26 = PlayerStats_pl[this_2]
		if allowed_24 then
			call SetPlayerTechMaxAllowed(whichPlayer_26, unitId_24, -1)
		else
			call SetPlayerTechMaxAllowed(whichPlayer_26, unitId_24, 0)
		endif
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_3 = null
	set whichPlayer = null
	set this_4 = null
	set whichPlayer_2 = null
	set whichPlayer_3 = null
	set whichPlayer_4 = null
	set whichPlayer_5 = null
	set whichPlayer_6 = null
	set whichPlayer_7 = null
	set whichPlayer_8 = null
	set whichPlayer_9 = null
	set whichPlayer_10 = null
	set whichPlayer_11 = null
	set whichPlayer_12 = null
	set whichPlayer_13 = null
	set whichPlayer_14 = null
	set whichPlayer_15 = null
	set whichPlayer_16 = null
	set whichPlayer_17 = null
	set whichPlayer_18 = null
	set whichPlayer_19 = null
	set whichPlayer_20 = null
	set whichPlayer_21 = null
	set whichPlayer_22 = null
	set pl = null
	set whichPlayer_23 = null
	set whichPlayer_24 = null
	set whichPlayer_25 = null
	set whichPlayer_26 = null
endfunction

function Settle takes string stackPos returns nothing
	local integer city_id
	local integer force_id
	local integer player_id
	local integer iterator
	local integer u
	local integer this_2
	local string stackPos_2
	local integer Main_City_GetCityForceId_result
	local integer this_3
	local player this_4
	local unit this_5
	local integer this_6
	local integer f_id
	local string stackPos_3
	local string msg
	local player pl
	local string stackPos_4
	local integer this_7
	local integer this_8
	local string stackPos_5
	local integer stackTrace_tempReturn
	local integer this_9
	local integer this_10
	local integer count
	local integer unitId
	local player whichPlayer
	local location loc
	local real face
	local integer this_11
	local string stackPos_6
	local integer this_12
	local integer pl_id
	local string stackPos_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set city_id = GetCityId(GetSpellTargetUnit(), "when calling GetCityId in City, line 22")
	set this_2 = Main_cities[city_id]
	set stackPos_2 = "when calling GetCityForceId in City, line 23"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if City_typeId[this_2] == 0 then
		if this_2 == 0 then
			call error("Nullpointer exception when calling City.GetCityForceId", "when calling error in Main, line 226")
		else
			call error("Called City.GetCityForceId on invalid object.", "when calling error in Main, line 226")
		endif
	endif
	set this_3 = this_2
	set Main_City_GetCityForceId_result = City_force_id[this_3]
	set wurst_stack_depth = wurst_stack_depth - 1
	set force_id = Main_City_GetCityForceId_result
	set this_5 = GetSpellAbilityUnit()
	set this_4 = GetOwningPlayer(this_5)
	set player_id = GetPlayerId(this_4)
	set this_6 = Main_player_stats[player_id]
	set f_id = force_id
	set stackPos_3 = "when calling ChangeForce in City, line 25"
	set wurst_stack[wurst_stack_depth] = stackPos_3
	set wurst_stack_depth = wurst_stack_depth + 1
	if PlayerStats_typeId[this_6] == 0 then
		if this_6 == 0 then
			call error("Nullpointer exception when calling PlayerStats.ChangeForce", "when calling error in Main, line 353")
		else
			call error("Called PlayerStats.ChangeForce on invalid object.", "when calling error in Main, line 353")
		endif
	endif
	call PlayerStats_ChangeForce(this_6, f_id, "when calling ChangeForce in Main, line 353")
	set wurst_stack_depth = wurst_stack_depth - 1
	if true then
		set this_7 = force_id
		set msg = "force of city = " + I2S(this_7) + "; "
		set pl = Player_players[0]
		set stackPos_4 = "when calling AttentionToPlayer in City, line 28"
		set wurst_stack[wurst_stack_depth] = stackPos_4
		set wurst_stack_depth = wurst_stack_depth + 1
		call DisplayTimedTextToPlayer(pl, 0., 0., 15.0, GetAttentionStringForPlayer(pl, "when calling GetAttentionStringForPlayer in Main, line 510"))
		call DisplayTimedTextToPlayer(pl, 0., 0., 15.0, msg)
		set wurst_stack_depth = wurst_stack_depth - 1
	endif
	set this_8 = Main_kStartingUnits[force_id]
	set stackPos_5 = "when calling iterator in City, line 31"
	set wurst_stack[wurst_stack_depth] = stackPos_5
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackTrace_tempReturn = new_LLIterator(this_8, "when calling new_LLIterator in LinkedList, line 165")
	set wurst_stack_depth = wurst_stack_depth - 1
	set iterator = stackTrace_tempReturn
	loop
		set this_9 = iterator
		exitwhen  not (LLEntry_next[LLIterator_current[this_9]] != LLIterator_dummy[this_9])
		set this_10 = iterator
		set LLIterator_current[this_10] = LLEntry_next[LLIterator_current[this_10]]
		set u = LLEntry_elem[LLIterator_current[this_10]]
		set count = 1
		set unitId = u
		set whichPlayer = Player_players[player_id]
		set loc = GetSpellTargetLoc()
		set face = 0.
		call GroupClear(bj_lastCreatedGroup)
		loop
			set count = count - 1
			exitwhen count < 0
			call CreateUnitAtLocSaveLast(whichPlayer, unitId, loc, face)
			call GroupAddUnit(bj_lastCreatedGroup, bj_lastCreatedUnit)
		endloop
	endloop
	set this_11 = iterator
	set stackPos_6 = "when calling close in City, line 31"
	set wurst_stack[wurst_stack_depth] = stackPos_6
	set wurst_stack_depth = wurst_stack_depth + 1
	if LLIterator_destroyOnClose[this_11] then
		call dispatch_LLIterator_destroyLLIterator(this_11, "when calling LLIterator in LinkedList, line 450")
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_12 = Main_cities[city_id]
	set pl_id = player_id
	set stackPos_7 = "when calling SettleCity in City, line 34"
	set wurst_stack[wurst_stack_depth] = stackPos_7
	set wurst_stack_depth = wurst_stack_depth + 1
	if City_typeId[this_12] == 0 then
		if this_12 == 0 then
			call error("Nullpointer exception when calling City.SettleCity", "when calling error in Main, line 239")
		else
			call error("Called City.SettleCity on invalid object.", "when calling error in Main, line 239")
		endif
	endif
	call City_SettleCity(this_12, pl_id, "when calling SettleCity in Main, line 239")
	set wurst_stack_depth = wurst_stack_depth - 1
	call KillUnit(GetSpellAbilityUnit())
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_4 = null
	set this_5 = null
	set pl = null
	set whichPlayer = null
	set loc = null
endfunction

function bridge_Settle takes nothing returns nothing
	set wurst_stack_depth = 0
	call Settle("City, line 50")
endfunction

function new_UnitIndex takes unit whichUnit, string stackPos returns integer
	local integer this_2
	local string stackPos_2
	local integer this_3
	local integer this_4
	local unit whichUnit_2
	local unit this_5
	local integer data
	local trigger this_6
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackPos_2 = "when calling UnitIndex in UnitIndexer, line 166"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if UnitIndex_firstFree == 0 then
		if UnitIndex_maxIndex < 32768 then
			set UnitIndex_maxIndex = UnitIndex_maxIndex + 1
			set this_3 = UnitIndex_maxIndex
			set UnitIndex_typeId[this_3] = 700
		else
			call error("Out of memory: Could not create UnitIndex.", "when calling error in UnitIndexer, line 157")
			set this_3 = 0
		endif
	else
		set UnitIndex_firstFree = UnitIndex_firstFree - 1
		set this_3 = UnitIndex_nextFree[UnitIndex_firstFree]
		set UnitIndex_typeId[this_3] = 700
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_2 = this_3
	set this_4 = this_2
	set whichUnit_2 = whichUnit
	set UnitIndex__unit[this_4] = whichUnit_2
	set this_5 = UnitIndex__unit[this_4]
	set data = this_4
	call SetUnitUserData(this_5, data)
	set UnitIndexer_indexedUnit = UnitIndex__unit[this_4]
	set this_6 = UnitIndexer_onIndexTrigger
	call TriggerEvaluate(this_6)
	set wurst_stack_depth = wurst_stack_depth - 1
	set whichUnit_2 = null
	set this_5 = null
	set this_6 = null
	return this_2
endfunction

function UnitIndexer_closure_impl takes string stackPos returns nothing
	local unit this_2
	local string stackPos_2
	local integer instance
	local unit this_3
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if true then
		set this_2 = OnUnitEnterLeave_tempUnits[OnUnitEnterLeave_tempUnitsCount - 1]
		set stackPos_2 = "when calling toUnitIndex in UnitIndexer, line 179"
		set wurst_stack[wurst_stack_depth] = stackPos_2
		set wurst_stack_depth = wurst_stack_depth + 1
		set this_3 = this_2
		set instance = GetUnitUserData(this_3)
		if instance == 0 then
			set instance = new_UnitIndex(this_2, "when calling new_UnitIndex in UnitIndexer, line 125")
		endif
		set wurst_stack_depth = wurst_stack_depth - 1
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_2 = null
	set this_3 = null
endfunction

function bridge_UnitIndexer_closure_impl takes nothing returns nothing
	set wurst_stack_depth = 0
	call UnitIndexer_closure_impl("UnitIndexer, line 179")
endfunction

function destroyUnitIndex takes integer this_2, string stackPos returns nothing
	local integer this_3
	local trigger this_4
	local unit this_5
	local integer data
	local integer obj
	local string stackPos_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_3 = this_2
	set UnitIndexer_deindexedUnit = UnitIndex__unit[this_3]
	set this_4 = UnitIndexer_onDeindexTrigger
	call TriggerEvaluate(this_4)
	set this_5 = UnitIndex__unit[this_3]
	set data = 0
	call SetUnitUserData(this_5, data)
	set obj = this_2
	set stackPos_2 = "when calling UnitIndex in UnitIndexer, line 172"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if UnitIndex_typeId[obj] == 0 then
		call error("Double free: object of type UnitIndex", "when calling error in UnitIndexer, line 157")
	else
		set UnitIndex_nextFree[UnitIndex_firstFree] = obj
		set UnitIndex_firstFree = UnitIndex_firstFree + 1
		set UnitIndex_typeId[obj] = 0
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_4 = null
	set this_5 = null
endfunction

function unit_deindex takes unit this_2, string stackPos returns boolean
	local unit this_3
	local integer this_4
	local string stackPos_2
	local unit this_5
	local string stackPos_3
	local integer instance
	local unit this_6
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_3 = this_2
	if GetUnitUserData(this_3) == 0 then
		set wurst_stack_depth = wurst_stack_depth - 1
		set this_3 = null
		set this_5 = null
		set this_6 = null
		return false
	else
		set this_5 = this_2
		set stackPos_3 = "when calling toUnitIndex in UnitIndexer, line 154"
		set wurst_stack[wurst_stack_depth] = stackPos_3
		set wurst_stack_depth = wurst_stack_depth + 1
		set this_6 = this_5
		set instance = GetUnitUserData(this_6)
		if instance == 0 then
			set instance = new_UnitIndex(this_5, "when calling new_UnitIndex in UnitIndexer, line 125")
		endif
		set wurst_stack_depth = wurst_stack_depth - 1
		set this_4 = instance
		set stackPos_2 = "when calling UnitIndex in UnitIndexer, line 154"
		set wurst_stack[wurst_stack_depth] = stackPos_2
		set wurst_stack_depth = wurst_stack_depth + 1
		if UnitIndex_typeId[this_4] == 0 then
			if this_4 == 0 then
				call error("Nullpointer exception when calling UnitIndex.UnitIndex", "when calling error in UnitIndexer, line 157")
			else
				call error("Called UnitIndex.UnitIndex on invalid object.", "when calling error in UnitIndexer, line 157")
			endif
		endif
		call destroyUnitIndex(this_4, "when calling destroyUnitIndex in UnitIndexer, line 157")
		set wurst_stack_depth = wurst_stack_depth - 1
		set wurst_stack_depth = wurst_stack_depth - 1
		set this_3 = null
		set this_5 = null
		set this_6 = null
		return true
	endif
endfunction

function bridge_UnitIndexer_closure_impl_2 takes nothing returns nothing
	local string stackPos
	set wurst_stack_depth = 0
	set stackPos = "UnitIndexer, line 180"
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if true then
		call unit_deindex(OnUnitEnterLeave_tempUnits[OnUnitEnterLeave_tempUnitsCount - 1], "when calling deindex in UnitIndexer, line 180")
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function GetWarningStringForPlayer takes player pl, string stackPos returns string
	local integer f
	local integer r
	local string s
	local integer this_2
	local string stackPos_2
	local integer Main_PlayerStats_GetForceId_result
	local integer this_3
	local player this_4
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_4 = pl
	set this_2 = Main_player_stats[GetPlayerId(this_4)]
	set stackPos_2 = "when calling GetForceId in Main, line 431"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if PlayerStats_typeId[this_2] == 0 then
		if this_2 == 0 then
			call error("Nullpointer exception when calling PlayerStats.GetForceId", "when calling error in Main, line 350")
		else
			call error("Called PlayerStats.GetForceId on invalid object.", "when calling error in Main, line 350")
		endif
	endif
	set this_3 = this_2
	set Main_PlayerStats_GetForceId_result = PlayerStats_force_id[this_3]
	set wurst_stack_depth = wurst_stack_depth - 1
	set f = Main_PlayerStats_GetForceId_result
	set r = GetRandomInt(0, 3 - 1)
	set s = ""
	if f == 0 then
		set s = Main_ksWarningWE[r]
	elseif f == 1 then
		set s = Main_ksWarningEE[r]
	elseif f == 2 then
		set s = Main_ksWarningME[r]
	elseif f == 3 then
		set s = Main_ksWarningBZ[r]
	else
		set s = "Warning!"
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_4 = null
	return "|cffff0000" + s + "|r"
endfunction

function WarningToForce takes string msg, force f, string stackPos returns nothing
	local integer i
	local integer temp
	local player pl
	local player whichPlayer
	local force f_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set i = 0
	set temp = 24 - 1
	loop
		exitwhen i > temp
		set whichPlayer = Player_players[i]
		set f_2 = CreateForce()
		call ForceAddPlayer(f_2, whichPlayer)
		if f_2 == f then
			set pl = Player_players[i]
			call DisplayTimedTextToPlayer(pl, 0., 0., 30.0, GetWarningStringForPlayer(pl, "when calling GetWarningStringForPlayer in Main, line 520"))
			call DisplayTimedTextToPlayer(pl, 0., 0., 30.0, msg)
		endif
		set i = i + 1
	endloop
	set wurst_stack_depth = wurst_stack_depth - 1
	set pl = null
	set whichPlayer = null
	set f_2 = null
endfunction

function action_2 takes string stackPos returns nothing
	local integer this_2
	local boolean flag
	local string stackPos_2
	local integer this_3
	local boolean flag_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call WarningToForce(player_getNameColored(GetTriggerPlayer()) + " has left the game!", bj_FORCE_ALL_PLAYERS, "when calling WarningToForce in OnPlayerLeave, line 5")
	set this_2 = Main_player_stats[GetPlayerId(GetTriggerPlayer())]
	set flag = false
	set stackPos_2 = "when calling SetInGame in OnPlayerLeave, line 7"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if PlayerStats_typeId[this_2] == 0 then
		if this_2 == 0 then
			call error("Nullpointer exception when calling PlayerStats.SetInGame", "when calling error in Main, line 331")
		else
			call error("Called PlayerStats.SetInGame on invalid object.", "when calling error in Main, line 331")
		endif
	endif
	set this_3 = this_2
	set flag_2 = flag
	set PlayerStats_is_in_game[this_3] = flag_2
	set wurst_stack_depth = wurst_stack_depth - 1
	call SetPlayerUnitsOwner(GetTriggerPlayer(), PLAYER_NEUTRAL_AGGRESSIVE)
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function bridge_action takes nothing returns nothing
	set wurst_stack_depth = 0
	call action_2("OnPlayerLeave, line 12")
endfunction

function GetGoodNewsStringForPlayer takes player pl, string stackPos returns string
	local integer f
	local integer r
	local string s
	local integer this_2
	local string stackPos_2
	local integer Main_PlayerStats_GetForceId_result
	local integer this_3
	local player this_4
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_4 = pl
	set this_2 = Main_player_stats[GetPlayerId(this_4)]
	set stackPos_2 = "when calling GetForceId in Main, line 463"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if PlayerStats_typeId[this_2] == 0 then
		if this_2 == 0 then
			call error("Nullpointer exception when calling PlayerStats.GetForceId", "when calling error in Main, line 350")
		else
			call error("Called PlayerStats.GetForceId on invalid object.", "when calling error in Main, line 350")
		endif
	endif
	set this_3 = this_2
	set Main_PlayerStats_GetForceId_result = PlayerStats_force_id[this_3]
	set wurst_stack_depth = wurst_stack_depth - 1
	set f = Main_PlayerStats_GetForceId_result
	set r = GetRandomInt(0, 3 - 1)
	set s = ""
	if f == 0 then
		set s = Main_ksGoodNewsWE[r]
	elseif f == 1 then
		set s = Main_ksGoodNewsEE[r]
	elseif f == 2 then
		set s = Main_ksGoodNewsME[r]
	elseif f == 3 then
		set s = Main_ksGoodNewsBZ[r]
	else
		set s = "Good news!"
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_4 = null
	return "|cff00ff00" + s + "|r"
endfunction

function GetNoteStringForPlayer takes player pl, string stackPos returns string
	local integer f
	local integer r
	local string s
	local integer this_2
	local string stackPos_2
	local integer Main_PlayerStats_GetForceId_result
	local integer this_3
	local player this_4
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_4 = pl
	set this_2 = Main_player_stats[GetPlayerId(this_4)]
	set stackPos_2 = "when calling GetForceId in Main, line 447"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if PlayerStats_typeId[this_2] == 0 then
		if this_2 == 0 then
			call error("Nullpointer exception when calling PlayerStats.GetForceId", "when calling error in Main, line 350")
		else
			call error("Called PlayerStats.GetForceId on invalid object.", "when calling error in Main, line 350")
		endif
	endif
	set this_3 = this_2
	set Main_PlayerStats_GetForceId_result = PlayerStats_force_id[this_3]
	set wurst_stack_depth = wurst_stack_depth - 1
	set f = Main_PlayerStats_GetForceId_result
	set r = GetRandomInt(0, 3 - 1)
	set s = ""
	if f == 0 then
		set s = Main_ksNoteWE[r]
	elseif f == 1 then
		set s = Main_ksNoteEE[r]
	elseif f == 2 then
		set s = Main_ksNoteME[r]
	elseif f == 3 then
		set s = Main_ksNoteBZ[r]
	else
		set s = "Note:"
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_4 = null
	return "|cff00ccff" + s + "|r"
endfunction

function PlayerStats_ChangeUnhapiness takes integer this_2, integer change, string stackPos returns nothing
	local player this_3
	local player this_4
	local string msg
	local player pl
	local string stackPos_2
	local integer this_5
	local integer this_6
	local string msg_2
	local player pl_2
	local string stackPos_3
	local integer this_7
	local integer this_8
	local string temp
	local string temp_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if  not PlayerStats_is_in_game[this_2] then
		set wurst_stack_depth = wurst_stack_depth - 1
		set this_3 = null
		set this_4 = null
		set pl = null
		set pl_2 = null
		return
	endif
	set this_3 = PlayerStats_pl[this_2]
	set this_4 = PlayerStats_pl[this_2]
	set udg_Unhappiness[GetPlayerId(this_3)] = udg_Unhappiness[GetPlayerId(this_4)] + change
	set PlayerStats_unhappiness[this_2] = PlayerStats_unhappiness[this_2] + change
	if change > 0 then
		set this_5 = change
		set temp = "Unhappiness of your people has risen by " + I2S(this_5) + " points!\nNow you have "
		set this_6 = PlayerStats_unhappiness[this_2]
		set msg = temp + I2S(this_6)
		set pl = PlayerStats_pl[this_2]
		set stackPos_2 = "when calling AttentionToPlayer in Main, line 320"
		set wurst_stack[wurst_stack_depth] = stackPos_2
		set wurst_stack_depth = wurst_stack_depth + 1
		call DisplayTimedTextToPlayer(pl, 0., 0., 15.0, GetAttentionStringForPlayer(pl, "when calling GetAttentionStringForPlayer in Main, line 510"))
		call DisplayTimedTextToPlayer(pl, 0., 0., 15.0, msg)
		set wurst_stack_depth = wurst_stack_depth - 1
	elseif change < 0 then
		set this_7 =  - change
		set temp_2 = "Unhappiness of your people has dropped down by " + I2S(this_7) + " points!\nNow you have "
		set this_8 = PlayerStats_unhappiness[this_2]
		set msg_2 = temp_2 + I2S(this_8)
		set pl_2 = PlayerStats_pl[this_2]
		set stackPos_3 = "when calling GoodNewsToPlayer in Main, line 322"
		set wurst_stack[wurst_stack_depth] = stackPos_3
		set wurst_stack_depth = wurst_stack_depth + 1
		call DisplayTimedTextToPlayer(pl_2, 0., 0., 15.0, GetGoodNewsStringForPlayer(pl_2, "when calling GetGoodNewsStringForPlayer in Main, line 507"))
		call DisplayTimedTextToPlayer(pl_2, 0., 0., 15.0, msg_2)
		set wurst_stack_depth = wurst_stack_depth - 1
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_3 = null
	set this_4 = null
	set pl = null
	set pl_2 = null
endfunction

function PlayerStats_alliance_states_get takes integer index1, integer index2, string stackPos returns integer
	local integer returnVal
	if index2 < 0 or index2 >= 24 then
		call error("Index out of Bounds", stackPos)
	elseif index2 <= 11 then
		if index2 <= 5 then
			if index2 <= 2 then
				if index2 <= 1 then
					if index2 <= 0 then
						set returnVal = PlayerStats_alliance_states_0[index1]
					else
						set returnVal = PlayerStats_alliance_states_1[index1]
					endif
				else
					set returnVal = PlayerStats_alliance_states_2[index1]
				endif
			elseif index2 <= 4 then
				if index2 <= 3 then
					set returnVal = PlayerStats_alliance_states_3[index1]
				else
					set returnVal = PlayerStats_alliance_states_4[index1]
				endif
			else
				set returnVal = PlayerStats_alliance_states_5[index1]
			endif
		elseif index2 <= 8 then
			if index2 <= 7 then
				if index2 <= 6 then
					set returnVal = PlayerStats_alliance_states_6[index1]
				else
					set returnVal = PlayerStats_alliance_states_7[index1]
				endif
			else
				set returnVal = PlayerStats_alliance_states_8[index1]
			endif
		elseif index2 <= 10 then
			if index2 <= 9 then
				set returnVal = PlayerStats_alliance_states_9[index1]
			else
				set returnVal = PlayerStats_alliance_states_10[index1]
			endif
		else
			set returnVal = PlayerStats_alliance_states_11[index1]
		endif
	elseif index2 <= 17 then
		if index2 <= 14 then
			if index2 <= 13 then
				if index2 <= 12 then
					set returnVal = PlayerStats_alliance_states_12[index1]
				else
					set returnVal = PlayerStats_alliance_states_13[index1]
				endif
			else
				set returnVal = PlayerStats_alliance_states_14[index1]
			endif
		elseif index2 <= 16 then
			if index2 <= 15 then
				set returnVal = PlayerStats_alliance_states_15[index1]
			else
				set returnVal = PlayerStats_alliance_states_16[index1]
			endif
		else
			set returnVal = PlayerStats_alliance_states_17[index1]
		endif
	elseif index2 <= 20 then
		if index2 <= 19 then
			if index2 <= 18 then
				set returnVal = PlayerStats_alliance_states_18[index1]
			else
				set returnVal = PlayerStats_alliance_states_19[index1]
			endif
		else
			set returnVal = PlayerStats_alliance_states_20[index1]
		endif
	elseif index2 <= 22 then
		if index2 <= 21 then
			set returnVal = PlayerStats_alliance_states_21[index1]
		else
			set returnVal = PlayerStats_alliance_states_22[index1]
		endif
	else
		set returnVal = PlayerStats_alliance_states_23[index1]
	endif
	return returnVal
endfunction

function PlayerStats_alliance_states_set takes integer instanceId, integer arrayIndex, integer value, string stackPos returns nothing
	if arrayIndex < 0 or arrayIndex >= 24 then
		call error("Index out of Bounds", stackPos)
	elseif arrayIndex <= 11 then
		if arrayIndex <= 5 then
			if arrayIndex <= 2 then
				if arrayIndex <= 1 then
					if arrayIndex <= 0 then
						set PlayerStats_alliance_states_0[instanceId] = value
					else
						set PlayerStats_alliance_states_1[instanceId] = value
					endif
				else
					set PlayerStats_alliance_states_2[instanceId] = value
				endif
			elseif arrayIndex <= 4 then
				if arrayIndex <= 3 then
					set PlayerStats_alliance_states_3[instanceId] = value
				else
					set PlayerStats_alliance_states_4[instanceId] = value
				endif
			else
				set PlayerStats_alliance_states_5[instanceId] = value
			endif
		elseif arrayIndex <= 8 then
			if arrayIndex <= 7 then
				if arrayIndex <= 6 then
					set PlayerStats_alliance_states_6[instanceId] = value
				else
					set PlayerStats_alliance_states_7[instanceId] = value
				endif
			else
				set PlayerStats_alliance_states_8[instanceId] = value
			endif
		elseif arrayIndex <= 10 then
			if arrayIndex <= 9 then
				set PlayerStats_alliance_states_9[instanceId] = value
			else
				set PlayerStats_alliance_states_10[instanceId] = value
			endif
		else
			set PlayerStats_alliance_states_11[instanceId] = value
		endif
	elseif arrayIndex <= 17 then
		if arrayIndex <= 14 then
			if arrayIndex <= 13 then
				if arrayIndex <= 12 then
					set PlayerStats_alliance_states_12[instanceId] = value
				else
					set PlayerStats_alliance_states_13[instanceId] = value
				endif
			else
				set PlayerStats_alliance_states_14[instanceId] = value
			endif
		elseif arrayIndex <= 16 then
			if arrayIndex <= 15 then
				set PlayerStats_alliance_states_15[instanceId] = value
			else
				set PlayerStats_alliance_states_16[instanceId] = value
			endif
		else
			set PlayerStats_alliance_states_17[instanceId] = value
		endif
	elseif arrayIndex <= 20 then
		if arrayIndex <= 19 then
			if arrayIndex <= 18 then
				set PlayerStats_alliance_states_18[instanceId] = value
			else
				set PlayerStats_alliance_states_19[instanceId] = value
			endif
		else
			set PlayerStats_alliance_states_20[instanceId] = value
		endif
	elseif arrayIndex <= 22 then
		if arrayIndex <= 21 then
			set PlayerStats_alliance_states_21[instanceId] = value
		else
			set PlayerStats_alliance_states_22[instanceId] = value
		endif
	else
		set PlayerStats_alliance_states_23[instanceId] = value
	endif
endfunction

function PlayerStats_SetAlliance takes integer this_2, player which_player, integer alliance_state, string stackPos returns nothing
	local integer id
	local player this_3
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_3 = which_player
	set id = GetPlayerId(this_3)
	if  not PlayerStats_is_in_game[this_2] then
		set wurst_stack_depth = wurst_stack_depth - 1
		set this_3 = null
		return
	endif
	if id >= 24 then
		set wurst_stack_depth = wurst_stack_depth - 1
		set this_3 = null
		return
	endif
	if PlayerStats_alliance_states_get(this_2, id, "when reading array PlayerStats_alliance_states in Main, line 341") == alliance_state or which_player == PlayerStats_pl[this_2] then
		set wurst_stack_depth = wurst_stack_depth - 1
		set this_3 = null
		return
	endif
	call PlayerStats_alliance_states_set(this_2, id, alliance_state, "when writing array PlayerStats_alliance_states in Main, line 343")
	call SetPlayerAllianceStateBJ(PlayerStats_pl[this_2], which_player, alliance_state)
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_3 = null
endfunction

function action_3 takes string stackPos returns nothing
	local player source
	local player target
	local string source_s
	local string target_s
	local integer source_id
	local force f1
	local force f2
	local integer temp
	local integer i
	local integer temp_2
	local force current_f
	local integer i_2
	local integer temp_3
	local force current_f_2
	local integer i_3
	local integer temp_4
	local force current_f_3
	local integer i_4
	local integer temp_5
	local force current_f_4
	local integer i_5
	local integer temp_6
	local force current_f_5
	local unit this_2
	local unit this_3
	local player whichPlayer
	local force f
	local player whichPlayer_2
	local force f_2
	local integer this_4
	local player which_player
	local string stackPos_2
	local integer Main_PlayerStats_GetAllianceState_result
	local integer this_5
	local player which_player_2
	local string stackPos_3
	local integer stackTrace_tempReturn
	local player this_6
	local integer this_7
	local player which_player_3
	local integer alliance_state
	local string stackPos_4
	local player whichPlayer_3
	local force f_3
	local string msg
	local player pl
	local string stackPos_5
	local string msg_2
	local player pl_2
	local string stackPos_6
	local string msg_3
	local player pl_3
	local string stackPos_7
	local integer this_8
	local integer change
	local string stackPos_8
	local integer this_9
	local player which_player_4
	local string stackPos_9
	local integer Main_PlayerStats_GetAllianceState_result_2
	local integer this_10
	local player which_player_5
	local string stackPos_10
	local integer stackTrace_tempReturn_2
	local player this_11
	local integer this_12
	local player which_player_6
	local integer alliance_state_2
	local string stackPos_11
	local player whichPlayer_4
	local force f_4
	local string msg_4
	local player pl_4
	local string stackPos_12
	local string msg_5
	local player pl_5
	local string stackPos_13
	local string msg_6
	local player pl_6
	local string stackPos_14
	local integer this_13
	local player which_player_7
	local string stackPos_15
	local integer Main_PlayerStats_GetAllianceState_result_3
	local integer this_14
	local player which_player_8
	local string stackPos_16
	local integer stackTrace_tempReturn_3
	local player this_15
	local integer this_16
	local player which_player_9
	local integer alliance_state_3
	local string stackPos_17
	local player whichPlayer_5
	local force f_5
	local string msg_7
	local player pl_7
	local string stackPos_18
	local string msg_8
	local player pl_8
	local string stackPos_19
	local string msg_9
	local player pl_9
	local string stackPos_20
	local integer this_17
	local player which_player_10
	local string stackPos_21
	local integer Main_PlayerStats_GetAllianceState_result_4
	local integer this_18
	local player which_player_11
	local string stackPos_22
	local integer stackTrace_tempReturn_4
	local player this_19
	local integer this_20
	local player which_player_12
	local integer alliance_state_4
	local string stackPos_23
	local player whichPlayer_6
	local force f_6
	local string msg_10
	local player pl_10
	local string stackPos_24
	local string msg_11
	local player pl_11
	local string stackPos_25
	local string msg_12
	local player pl_12
	local string stackPos_26
	local integer this_21
	local player which_player_13
	local string stackPos_27
	local integer Main_PlayerStats_GetAllianceState_result_5
	local integer this_22
	local player which_player_14
	local string stackPos_28
	local integer stackTrace_tempReturn_5
	local player this_23
	local integer this_24
	local player which_player_15
	local integer alliance_state_5
	local string stackPos_29
	local player whichPlayer_7
	local force f_7
	local string msg_13
	local player pl_13
	local string stackPos_30
	local string msg_14
	local player pl_14
	local string stackPos_31
	local string msg_15
	local player pl_15
	local string stackPos_32
	local integer temp_7
	local integer temp_8
	local integer temp_9
	local integer temp_10
	local integer temp_11
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_2 = GetSpellAbilityUnit()
	set source = GetOwningPlayer(this_2)
	set this_3 = GetSpellTargetUnit()
	set target = GetOwningPlayer(this_3)
	set source_s = player_getNameColored(source)
	set target_s = player_getNameColored(target)
	set source_id = GetPlayerId(source)
	call GetPlayerId(target)
	set whichPlayer = source
	set f = CreateForce()
	call ForceAddPlayer(f, whichPlayer)
	set f1 = f
	set whichPlayer_2 = source
	set f_2 = CreateForce()
	call ForceAddPlayer(f_2, whichPlayer_2)
	set f2 = f_2
	set temp = GetSpellAbilityId()
	if temp == 1093677396 then
		set this_4 = Main_player_stats[source_id]
		set which_player = target
		set stackPos_2 = "when calling GetAllianceState in Diplomacy, line 17"
		set wurst_stack[wurst_stack_depth] = stackPos_2
		set wurst_stack_depth = wurst_stack_depth + 1
		if PlayerStats_typeId[this_4] == 0 then
			if this_4 == 0 then
				call error("Nullpointer exception when calling PlayerStats.GetAllianceState", "when calling error in Main, line 346")
			else
				call error("Called PlayerStats.GetAllianceState on invalid object.", "when calling error in Main, line 346")
			endif
		endif
		set this_5 = this_4
		set which_player_2 = which_player
		set stackPos_3 = "when calling GetAllianceState in Main, line 346"
		set wurst_stack[wurst_stack_depth] = stackPos_3
		set wurst_stack_depth = wurst_stack_depth + 1
		set temp_7 = this_5
		set this_6 = which_player_2
		set stackTrace_tempReturn = PlayerStats_alliance_states_get(temp_7, GetPlayerId(this_6), "when reading array PlayerStats_alliance_states in Main, line 347")
		set wurst_stack_depth = wurst_stack_depth - 1
		set Main_PlayerStats_GetAllianceState_result = stackTrace_tempReturn
		set wurst_stack_depth = wurst_stack_depth - 1
		if Main_PlayerStats_GetAllianceState_result == bj_ALLIANCE_UNALLIED then
			set wurst_stack_depth = wurst_stack_depth - 1
			set source = null
			set target = null
			set f1 = null
			set f2 = null
			set current_f = null
			set current_f_2 = null
			set current_f_3 = null
			set current_f_4 = null
			set current_f_5 = null
			set this_2 = null
			set this_3 = null
			set whichPlayer = null
			set f = null
			set whichPlayer_2 = null
			set f_2 = null
			set which_player = null
			set which_player_2 = null
			set this_6 = null
			set which_player_3 = null
			set whichPlayer_3 = null
			set f_3 = null
			set pl = null
			set pl_2 = null
			set pl_3 = null
			set which_player_4 = null
			set which_player_5 = null
			set this_11 = null
			set which_player_6 = null
			set whichPlayer_4 = null
			set f_4 = null
			set pl_4 = null
			set pl_5 = null
			set pl_6 = null
			set which_player_7 = null
			set which_player_8 = null
			set this_15 = null
			set which_player_9 = null
			set whichPlayer_5 = null
			set f_5 = null
			set pl_7 = null
			set pl_8 = null
			set pl_9 = null
			set which_player_10 = null
			set which_player_11 = null
			set this_19 = null
			set which_player_12 = null
			set whichPlayer_6 = null
			set f_6 = null
			set pl_10 = null
			set pl_11 = null
			set pl_12 = null
			set which_player_13 = null
			set which_player_14 = null
			set this_23 = null
			set which_player_15 = null
			set whichPlayer_7 = null
			set f_7 = null
			set pl_13 = null
			set pl_14 = null
			set pl_15 = null
			return
		endif
		set this_7 = Main_player_stats[source_id]
		set which_player_3 = target
		set alliance_state = bj_ALLIANCE_UNALLIED
		set stackPos_4 = "when calling SetAlliance in Diplomacy, line 19"
		set wurst_stack[wurst_stack_depth] = stackPos_4
		set wurst_stack_depth = wurst_stack_depth + 1
		if PlayerStats_typeId[this_7] == 0 then
			if this_7 == 0 then
				call error("Nullpointer exception when calling PlayerStats.SetAlliance", "when calling error in Main, line 335")
			else
				call error("Called PlayerStats.SetAlliance on invalid object.", "when calling error in Main, line 335")
			endif
		endif
		call PlayerStats_SetAlliance(this_7, which_player_3, alliance_state, "when calling SetAlliance in Main, line 335")
		set wurst_stack_depth = wurst_stack_depth - 1
		set i = 0
		set temp_2 = 24 - 1
		loop
			exitwhen i > temp_2
			set whichPlayer_3 = Player_players[i]
			set f_3 = CreateForce()
			call ForceAddPlayer(f_3, whichPlayer_3)
			set current_f = f_3
			if Player_players[i] == target then
				set msg = source_s + " has declared war on you!"
				set pl = Player_players[i]
				set stackPos_5 = "when calling WarningToPlayer in Diplomacy, line 24"
				set wurst_stack[wurst_stack_depth] = stackPos_5
				set wurst_stack_depth = wurst_stack_depth + 1
				call DisplayTimedTextToPlayer(pl, 0., 0., 30.0, GetWarningStringForPlayer(pl, "when calling GetWarningStringForPlayer in Main, line 501"))
				call DisplayTimedTextToPlayer(pl, 0., 0., 30.0, msg)
				set wurst_stack_depth = wurst_stack_depth - 1
			elseif current_f == f1 or current_f == f2 then
				set msg_2 = source_s + " has declared war on your brother-in-arms, " + target_s + "!"
				set pl_2 = Player_players[i]
				set stackPos_6 = "when calling AttentionToPlayer in Diplomacy, line 26"
				set wurst_stack[wurst_stack_depth] = stackPos_6
				set wurst_stack_depth = wurst_stack_depth + 1
				call DisplayTimedTextToPlayer(pl_2, 0., 0., 15.0, GetAttentionStringForPlayer(pl_2, "when calling GetAttentionStringForPlayer in Main, line 510"))
				call DisplayTimedTextToPlayer(pl_2, 0., 0., 15.0, msg_2)
				set wurst_stack_depth = wurst_stack_depth - 1
			else
				set msg_3 = source_s + " has declared war on " + target_s
				set pl_3 = Player_players[i]
				set stackPos_7 = "when calling NoteToPlayer in Diplomacy, line 28"
				set wurst_stack[wurst_stack_depth] = stackPos_7
				set wurst_stack_depth = wurst_stack_depth + 1
				call DisplayTimedTextToPlayer(pl_3, 0., 0., 15.0, GetNoteStringForPlayer(pl_3, "when calling GetNoteStringForPlayer in Main, line 504"))
				call DisplayTimedTextToPlayer(pl_3, 0., 0., 15.0, msg_3)
				set wurst_stack_depth = wurst_stack_depth - 1
			endif
			set i = i + 1
		endloop
		set this_8 = Main_player_stats[source_id]
		set change = 600
		set stackPos_8 = "when calling ChangeUnhapiness in Diplomacy, line 30"
		set wurst_stack[wurst_stack_depth] = stackPos_8
		set wurst_stack_depth = wurst_stack_depth + 1
		if PlayerStats_typeId[this_8] == 0 then
			if this_8 == 0 then
				call error("Nullpointer exception when calling PlayerStats.ChangeUnhapiness", "when calling error in Main, line 313")
			else
				call error("Called PlayerStats.ChangeUnhapiness on invalid object.", "when calling error in Main, line 313")
			endif
		endif
		call PlayerStats_ChangeUnhapiness(this_8, change, "when calling ChangeUnhapiness in Main, line 313")
		set wurst_stack_depth = wurst_stack_depth - 1
	elseif temp == 1093677397 then
		set this_9 = Main_player_stats[source_id]
		set which_player_4 = target
		set stackPos_9 = "when calling GetAllianceState in Diplomacy, line 33"
		set wurst_stack[wurst_stack_depth] = stackPos_9
		set wurst_stack_depth = wurst_stack_depth + 1
		if PlayerStats_typeId[this_9] == 0 then
			if this_9 == 0 then
				call error("Nullpointer exception when calling PlayerStats.GetAllianceState", "when calling error in Main, line 346")
			else
				call error("Called PlayerStats.GetAllianceState on invalid object.", "when calling error in Main, line 346")
			endif
		endif
		set this_10 = this_9
		set which_player_5 = which_player_4
		set stackPos_10 = "when calling GetAllianceState in Main, line 346"
		set wurst_stack[wurst_stack_depth] = stackPos_10
		set wurst_stack_depth = wurst_stack_depth + 1
		set temp_8 = this_10
		set this_11 = which_player_5
		set stackTrace_tempReturn_2 = PlayerStats_alliance_states_get(temp_8, GetPlayerId(this_11), "when reading array PlayerStats_alliance_states in Main, line 347")
		set wurst_stack_depth = wurst_stack_depth - 1
		set Main_PlayerStats_GetAllianceState_result_2 = stackTrace_tempReturn_2
		set wurst_stack_depth = wurst_stack_depth - 1
		if Main_PlayerStats_GetAllianceState_result_2 == bj_ALLIANCE_ALLIED_VISION then
			set wurst_stack_depth = wurst_stack_depth - 1
			set source = null
			set target = null
			set f1 = null
			set f2 = null
			set current_f = null
			set current_f_2 = null
			set current_f_3 = null
			set current_f_4 = null
			set current_f_5 = null
			set this_2 = null
			set this_3 = null
			set whichPlayer = null
			set f = null
			set whichPlayer_2 = null
			set f_2 = null
			set which_player = null
			set which_player_2 = null
			set this_6 = null
			set which_player_3 = null
			set whichPlayer_3 = null
			set f_3 = null
			set pl = null
			set pl_2 = null
			set pl_3 = null
			set which_player_4 = null
			set which_player_5 = null
			set this_11 = null
			set which_player_6 = null
			set whichPlayer_4 = null
			set f_4 = null
			set pl_4 = null
			set pl_5 = null
			set pl_6 = null
			set which_player_7 = null
			set which_player_8 = null
			set this_15 = null
			set which_player_9 = null
			set whichPlayer_5 = null
			set f_5 = null
			set pl_7 = null
			set pl_8 = null
			set pl_9 = null
			set which_player_10 = null
			set which_player_11 = null
			set this_19 = null
			set which_player_12 = null
			set whichPlayer_6 = null
			set f_6 = null
			set pl_10 = null
			set pl_11 = null
			set pl_12 = null
			set which_player_13 = null
			set which_player_14 = null
			set this_23 = null
			set which_player_15 = null
			set whichPlayer_7 = null
			set f_7 = null
			set pl_13 = null
			set pl_14 = null
			set pl_15 = null
			return
		endif
		set this_12 = Main_player_stats[source_id]
		set which_player_6 = target
		set alliance_state_2 = bj_ALLIANCE_ALLIED_VISION
		set stackPos_11 = "when calling SetAlliance in Diplomacy, line 35"
		set wurst_stack[wurst_stack_depth] = stackPos_11
		set wurst_stack_depth = wurst_stack_depth + 1
		if PlayerStats_typeId[this_12] == 0 then
			if this_12 == 0 then
				call error("Nullpointer exception when calling PlayerStats.SetAlliance", "when calling error in Main, line 335")
			else
				call error("Called PlayerStats.SetAlliance on invalid object.", "when calling error in Main, line 335")
			endif
		endif
		call PlayerStats_SetAlliance(this_12, which_player_6, alliance_state_2, "when calling SetAlliance in Main, line 335")
		set wurst_stack_depth = wurst_stack_depth - 1
		set i_2 = 0
		set temp_3 = 24 - 1
		loop
			exitwhen i_2 > temp_3
			set whichPlayer_4 = Player_players[i_2]
			set f_4 = CreateForce()
			call ForceAddPlayer(f_4, whichPlayer_4)
			set current_f_2 = f_4
			if Player_players[i_2] == target then
				set msg_4 = source_s + " wants to ally you"
				set pl_4 = Player_players[i_2]
				set stackPos_12 = "when calling GoodNewsToPlayer in Diplomacy, line 40"
				set wurst_stack[wurst_stack_depth] = stackPos_12
				set wurst_stack_depth = wurst_stack_depth + 1
				call DisplayTimedTextToPlayer(pl_4, 0., 0., 15.0, GetGoodNewsStringForPlayer(pl_4, "when calling GetGoodNewsStringForPlayer in Main, line 507"))
				call DisplayTimedTextToPlayer(pl_4, 0., 0., 15.0, msg_4)
				set wurst_stack_depth = wurst_stack_depth - 1
			elseif current_f_2 == f1 or current_f_2 == f2 then
				set msg_5 = source_s + " allied " + target_s
				set pl_5 = Player_players[i_2]
				set stackPos_13 = "when calling NoteToPlayer in Diplomacy, line 42"
				set wurst_stack[wurst_stack_depth] = stackPos_13
				set wurst_stack_depth = wurst_stack_depth + 1
				call DisplayTimedTextToPlayer(pl_5, 0., 0., 15.0, GetNoteStringForPlayer(pl_5, "when calling GetNoteStringForPlayer in Main, line 504"))
				call DisplayTimedTextToPlayer(pl_5, 0., 0., 15.0, msg_5)
				set wurst_stack_depth = wurst_stack_depth - 1
			else
				set msg_6 = source_s + " allied " + target_s
				set pl_6 = Player_players[i_2]
				set stackPos_14 = "when calling NoteToPlayer in Diplomacy, line 44"
				set wurst_stack[wurst_stack_depth] = stackPos_14
				set wurst_stack_depth = wurst_stack_depth + 1
				call DisplayTimedTextToPlayer(pl_6, 0., 0., 15.0, GetNoteStringForPlayer(pl_6, "when calling GetNoteStringForPlayer in Main, line 504"))
				call DisplayTimedTextToPlayer(pl_6, 0., 0., 15.0, msg_6)
				set wurst_stack_depth = wurst_stack_depth - 1
			endif
			set i_2 = i_2 + 1
		endloop
	elseif temp == 1093677398 then
		set this_13 = Main_player_stats[source_id]
		set which_player_7 = target
		set stackPos_15 = "when calling GetAllianceState in Diplomacy, line 47"
		set wurst_stack[wurst_stack_depth] = stackPos_15
		set wurst_stack_depth = wurst_stack_depth + 1
		if PlayerStats_typeId[this_13] == 0 then
			if this_13 == 0 then
				call error("Nullpointer exception when calling PlayerStats.GetAllianceState", "when calling error in Main, line 346")
			else
				call error("Called PlayerStats.GetAllianceState on invalid object.", "when calling error in Main, line 346")
			endif
		endif
		set this_14 = this_13
		set which_player_8 = which_player_7
		set stackPos_16 = "when calling GetAllianceState in Main, line 346"
		set wurst_stack[wurst_stack_depth] = stackPos_16
		set wurst_stack_depth = wurst_stack_depth + 1
		set temp_9 = this_14
		set this_15 = which_player_8
		set stackTrace_tempReturn_3 = PlayerStats_alliance_states_get(temp_9, GetPlayerId(this_15), "when reading array PlayerStats_alliance_states in Main, line 347")
		set wurst_stack_depth = wurst_stack_depth - 1
		set Main_PlayerStats_GetAllianceState_result_3 = stackTrace_tempReturn_3
		set wurst_stack_depth = wurst_stack_depth - 1
		if Main_PlayerStats_GetAllianceState_result_3 == bj_ALLIANCE_NEUTRAL then
			set wurst_stack_depth = wurst_stack_depth - 1
			set source = null
			set target = null
			set f1 = null
			set f2 = null
			set current_f = null
			set current_f_2 = null
			set current_f_3 = null
			set current_f_4 = null
			set current_f_5 = null
			set this_2 = null
			set this_3 = null
			set whichPlayer = null
			set f = null
			set whichPlayer_2 = null
			set f_2 = null
			set which_player = null
			set which_player_2 = null
			set this_6 = null
			set which_player_3 = null
			set whichPlayer_3 = null
			set f_3 = null
			set pl = null
			set pl_2 = null
			set pl_3 = null
			set which_player_4 = null
			set which_player_5 = null
			set this_11 = null
			set which_player_6 = null
			set whichPlayer_4 = null
			set f_4 = null
			set pl_4 = null
			set pl_5 = null
			set pl_6 = null
			set which_player_7 = null
			set which_player_8 = null
			set this_15 = null
			set which_player_9 = null
			set whichPlayer_5 = null
			set f_5 = null
			set pl_7 = null
			set pl_8 = null
			set pl_9 = null
			set which_player_10 = null
			set which_player_11 = null
			set this_19 = null
			set which_player_12 = null
			set whichPlayer_6 = null
			set f_6 = null
			set pl_10 = null
			set pl_11 = null
			set pl_12 = null
			set which_player_13 = null
			set which_player_14 = null
			set this_23 = null
			set which_player_15 = null
			set whichPlayer_7 = null
			set f_7 = null
			set pl_13 = null
			set pl_14 = null
			set pl_15 = null
			return
		endif
		set this_16 = Main_player_stats[source_id]
		set which_player_9 = target
		set alliance_state_3 = bj_ALLIANCE_NEUTRAL
		set stackPos_17 = "when calling SetAlliance in Diplomacy, line 49"
		set wurst_stack[wurst_stack_depth] = stackPos_17
		set wurst_stack_depth = wurst_stack_depth + 1
		if PlayerStats_typeId[this_16] == 0 then
			if this_16 == 0 then
				call error("Nullpointer exception when calling PlayerStats.SetAlliance", "when calling error in Main, line 335")
			else
				call error("Called PlayerStats.SetAlliance on invalid object.", "when calling error in Main, line 335")
			endif
		endif
		call PlayerStats_SetAlliance(this_16, which_player_9, alliance_state_3, "when calling SetAlliance in Main, line 335")
		set wurst_stack_depth = wurst_stack_depth - 1
		set i_3 = 0
		set temp_4 = 24 - 1
		loop
			exitwhen i_3 > temp_4
			set whichPlayer_5 = Player_players[i_3]
			set f_5 = CreateForce()
			call ForceAddPlayer(f_5, whichPlayer_5)
			set current_f_3 = f_5
			if Player_players[i_3] == target then
				set msg_7 = source_s + " is now neutral towards you"
				set pl_7 = Player_players[i_3]
				set stackPos_18 = "when calling NoteToPlayer in Diplomacy, line 54"
				set wurst_stack[wurst_stack_depth] = stackPos_18
				set wurst_stack_depth = wurst_stack_depth + 1
				call DisplayTimedTextToPlayer(pl_7, 0., 0., 15.0, GetNoteStringForPlayer(pl_7, "when calling GetNoteStringForPlayer in Main, line 504"))
				call DisplayTimedTextToPlayer(pl_7, 0., 0., 15.0, msg_7)
				set wurst_stack_depth = wurst_stack_depth - 1
			elseif current_f_3 == f1 or current_f_3 == f2 then
				set msg_8 = source_s + " shows " + target_s + " neutrality"
				set pl_8 = Player_players[i_3]
				set stackPos_19 = "when calling NoteToPlayer in Diplomacy, line 56"
				set wurst_stack[wurst_stack_depth] = stackPos_19
				set wurst_stack_depth = wurst_stack_depth + 1
				call DisplayTimedTextToPlayer(pl_8, 0., 0., 15.0, GetNoteStringForPlayer(pl_8, "when calling GetNoteStringForPlayer in Main, line 504"))
				call DisplayTimedTextToPlayer(pl_8, 0., 0., 15.0, msg_8)
				set wurst_stack_depth = wurst_stack_depth - 1
			else
				set msg_9 = source_s + " shows " + target_s + " neutrality"
				set pl_9 = Player_players[i_3]
				set stackPos_20 = "when calling NoteToPlayer in Diplomacy, line 58"
				set wurst_stack[wurst_stack_depth] = stackPos_20
				set wurst_stack_depth = wurst_stack_depth + 1
				call DisplayTimedTextToPlayer(pl_9, 0., 0., 15.0, GetNoteStringForPlayer(pl_9, "when calling GetNoteStringForPlayer in Main, line 504"))
				call DisplayTimedTextToPlayer(pl_9, 0., 0., 15.0, msg_9)
				set wurst_stack_depth = wurst_stack_depth - 1
			endif
			set i_3 = i_3 + 1
		endloop
	elseif temp == 1093677400 then
		set this_17 = Main_player_stats[source_id]
		set which_player_10 = target
		set stackPos_21 = "when calling GetAllianceState in Diplomacy, line 61"
		set wurst_stack[wurst_stack_depth] = stackPos_21
		set wurst_stack_depth = wurst_stack_depth + 1
		if PlayerStats_typeId[this_17] == 0 then
			if this_17 == 0 then
				call error("Nullpointer exception when calling PlayerStats.GetAllianceState", "when calling error in Main, line 346")
			else
				call error("Called PlayerStats.GetAllianceState on invalid object.", "when calling error in Main, line 346")
			endif
		endif
		set this_18 = this_17
		set which_player_11 = which_player_10
		set stackPos_22 = "when calling GetAllianceState in Main, line 346"
		set wurst_stack[wurst_stack_depth] = stackPos_22
		set wurst_stack_depth = wurst_stack_depth + 1
		set temp_10 = this_18
		set this_19 = which_player_11
		set stackTrace_tempReturn_4 = PlayerStats_alliance_states_get(temp_10, GetPlayerId(this_19), "when reading array PlayerStats_alliance_states in Main, line 347")
		set wurst_stack_depth = wurst_stack_depth - 1
		set Main_PlayerStats_GetAllianceState_result_4 = stackTrace_tempReturn_4
		set wurst_stack_depth = wurst_stack_depth - 1
		if Main_PlayerStats_GetAllianceState_result_4 == bj_ALLIANCE_NEUTRAL then
			set wurst_stack_depth = wurst_stack_depth - 1
			set source = null
			set target = null
			set f1 = null
			set f2 = null
			set current_f = null
			set current_f_2 = null
			set current_f_3 = null
			set current_f_4 = null
			set current_f_5 = null
			set this_2 = null
			set this_3 = null
			set whichPlayer = null
			set f = null
			set whichPlayer_2 = null
			set f_2 = null
			set which_player = null
			set which_player_2 = null
			set this_6 = null
			set which_player_3 = null
			set whichPlayer_3 = null
			set f_3 = null
			set pl = null
			set pl_2 = null
			set pl_3 = null
			set which_player_4 = null
			set which_player_5 = null
			set this_11 = null
			set which_player_6 = null
			set whichPlayer_4 = null
			set f_4 = null
			set pl_4 = null
			set pl_5 = null
			set pl_6 = null
			set which_player_7 = null
			set which_player_8 = null
			set this_15 = null
			set which_player_9 = null
			set whichPlayer_5 = null
			set f_5 = null
			set pl_7 = null
			set pl_8 = null
			set pl_9 = null
			set which_player_10 = null
			set which_player_11 = null
			set this_19 = null
			set which_player_12 = null
			set whichPlayer_6 = null
			set f_6 = null
			set pl_10 = null
			set pl_11 = null
			set pl_12 = null
			set which_player_13 = null
			set which_player_14 = null
			set this_23 = null
			set which_player_15 = null
			set whichPlayer_7 = null
			set f_7 = null
			set pl_13 = null
			set pl_14 = null
			set pl_15 = null
			return
		endif
		set this_20 = Main_player_stats[source_id]
		set which_player_12 = target
		set alliance_state_4 = bj_ALLIANCE_NEUTRAL
		set stackPos_23 = "when calling SetAlliance in Diplomacy, line 63"
		set wurst_stack[wurst_stack_depth] = stackPos_23
		set wurst_stack_depth = wurst_stack_depth + 1
		if PlayerStats_typeId[this_20] == 0 then
			if this_20 == 0 then
				call error("Nullpointer exception when calling PlayerStats.SetAlliance", "when calling error in Main, line 335")
			else
				call error("Called PlayerStats.SetAlliance on invalid object.", "when calling error in Main, line 335")
			endif
		endif
		call PlayerStats_SetAlliance(this_20, which_player_12, alliance_state_4, "when calling SetAlliance in Main, line 335")
		set wurst_stack_depth = wurst_stack_depth - 1
		set i_4 = 0
		set temp_5 = 24 - 1
		loop
			exitwhen i_4 > temp_5
			set whichPlayer_6 = Player_players[i_4]
			set f_6 = CreateForce()
			call ForceAddPlayer(f_6, whichPlayer_6)
			set current_f_4 = f_6
			if Player_players[i_4] == target then
				set msg_10 = source_s + " unallies you!"
				set pl_10 = Player_players[i_4]
				set stackPos_24 = "when calling NoteToPlayer in Diplomacy, line 68"
				set wurst_stack[wurst_stack_depth] = stackPos_24
				set wurst_stack_depth = wurst_stack_depth + 1
				call DisplayTimedTextToPlayer(pl_10, 0., 0., 15.0, GetNoteStringForPlayer(pl_10, "when calling GetNoteStringForPlayer in Main, line 504"))
				call DisplayTimedTextToPlayer(pl_10, 0., 0., 15.0, msg_10)
				set wurst_stack_depth = wurst_stack_depth - 1
			elseif current_f_4 == f1 or current_f_4 == f2 then
				set msg_11 = source_s + " unallied " + target_s
				set pl_11 = Player_players[i_4]
				set stackPos_25 = "when calling NoteToPlayer in Diplomacy, line 70"
				set wurst_stack[wurst_stack_depth] = stackPos_25
				set wurst_stack_depth = wurst_stack_depth + 1
				call DisplayTimedTextToPlayer(pl_11, 0., 0., 15.0, GetNoteStringForPlayer(pl_11, "when calling GetNoteStringForPlayer in Main, line 504"))
				call DisplayTimedTextToPlayer(pl_11, 0., 0., 15.0, msg_11)
				set wurst_stack_depth = wurst_stack_depth - 1
			else
				set msg_12 = source_s + " unallied " + target_s
				set pl_12 = Player_players[i_4]
				set stackPos_26 = "when calling NoteToPlayer in Diplomacy, line 72"
				set wurst_stack[wurst_stack_depth] = stackPos_26
				set wurst_stack_depth = wurst_stack_depth + 1
				call DisplayTimedTextToPlayer(pl_12, 0., 0., 15.0, GetNoteStringForPlayer(pl_12, "when calling GetNoteStringForPlayer in Main, line 504"))
				call DisplayTimedTextToPlayer(pl_12, 0., 0., 15.0, msg_12)
				set wurst_stack_depth = wurst_stack_depth - 1
			endif
			set i_4 = i_4 + 1
		endloop
	elseif temp == 1093677399 then
		set this_21 = Main_player_stats[source_id]
		set which_player_13 = target
		set stackPos_27 = "when calling GetAllianceState in Diplomacy, line 75"
		set wurst_stack[wurst_stack_depth] = stackPos_27
		set wurst_stack_depth = wurst_stack_depth + 1
		if PlayerStats_typeId[this_21] == 0 then
			if this_21 == 0 then
				call error("Nullpointer exception when calling PlayerStats.GetAllianceState", "when calling error in Main, line 346")
			else
				call error("Called PlayerStats.GetAllianceState on invalid object.", "when calling error in Main, line 346")
			endif
		endif
		set this_22 = this_21
		set which_player_14 = which_player_13
		set stackPos_28 = "when calling GetAllianceState in Main, line 346"
		set wurst_stack[wurst_stack_depth] = stackPos_28
		set wurst_stack_depth = wurst_stack_depth + 1
		set temp_11 = this_22
		set this_23 = which_player_14
		set stackTrace_tempReturn_5 = PlayerStats_alliance_states_get(temp_11, GetPlayerId(this_23), "when reading array PlayerStats_alliance_states in Main, line 347")
		set wurst_stack_depth = wurst_stack_depth - 1
		set Main_PlayerStats_GetAllianceState_result_5 = stackTrace_tempReturn_5
		set wurst_stack_depth = wurst_stack_depth - 1
		if Main_PlayerStats_GetAllianceState_result_5 == bj_ALLIANCE_ALLIED_ADVUNITS then
			set wurst_stack_depth = wurst_stack_depth - 1
			set source = null
			set target = null
			set f1 = null
			set f2 = null
			set current_f = null
			set current_f_2 = null
			set current_f_3 = null
			set current_f_4 = null
			set current_f_5 = null
			set this_2 = null
			set this_3 = null
			set whichPlayer = null
			set f = null
			set whichPlayer_2 = null
			set f_2 = null
			set which_player = null
			set which_player_2 = null
			set this_6 = null
			set which_player_3 = null
			set whichPlayer_3 = null
			set f_3 = null
			set pl = null
			set pl_2 = null
			set pl_3 = null
			set which_player_4 = null
			set which_player_5 = null
			set this_11 = null
			set which_player_6 = null
			set whichPlayer_4 = null
			set f_4 = null
			set pl_4 = null
			set pl_5 = null
			set pl_6 = null
			set which_player_7 = null
			set which_player_8 = null
			set this_15 = null
			set which_player_9 = null
			set whichPlayer_5 = null
			set f_5 = null
			set pl_7 = null
			set pl_8 = null
			set pl_9 = null
			set which_player_10 = null
			set which_player_11 = null
			set this_19 = null
			set which_player_12 = null
			set whichPlayer_6 = null
			set f_6 = null
			set pl_10 = null
			set pl_11 = null
			set pl_12 = null
			set which_player_13 = null
			set which_player_14 = null
			set this_23 = null
			set which_player_15 = null
			set whichPlayer_7 = null
			set f_7 = null
			set pl_13 = null
			set pl_14 = null
			set pl_15 = null
			return
		endif
		set this_24 = Main_player_stats[source_id]
		set which_player_15 = target
		set alliance_state_5 = bj_ALLIANCE_ALLIED_ADVUNITS
		set stackPos_29 = "when calling SetAlliance in Diplomacy, line 77"
		set wurst_stack[wurst_stack_depth] = stackPos_29
		set wurst_stack_depth = wurst_stack_depth + 1
		if PlayerStats_typeId[this_24] == 0 then
			if this_24 == 0 then
				call error("Nullpointer exception when calling PlayerStats.SetAlliance", "when calling error in Main, line 335")
			else
				call error("Called PlayerStats.SetAlliance on invalid object.", "when calling error in Main, line 335")
			endif
		endif
		call PlayerStats_SetAlliance(this_24, which_player_15, alliance_state_5, "when calling SetAlliance in Main, line 335")
		set wurst_stack_depth = wurst_stack_depth - 1
		set i_5 = 0
		set temp_6 = 24 - 1
		loop
			exitwhen i_5 > temp_6
			set whichPlayer_7 = Player_players[i_5]
			set f_7 = CreateForce()
			call ForceAddPlayer(f_7, whichPlayer_7)
			set current_f_5 = f_7
			if Player_players[i_5] == target then
				set msg_13 = source_s + " wants to share his rule with you!"
				set pl_13 = Player_players[i_5]
				set stackPos_30 = "when calling GoodNewsToPlayer in Diplomacy, line 82"
				set wurst_stack[wurst_stack_depth] = stackPos_30
				set wurst_stack_depth = wurst_stack_depth + 1
				call DisplayTimedTextToPlayer(pl_13, 0., 0., 15.0, GetGoodNewsStringForPlayer(pl_13, "when calling GetGoodNewsStringForPlayer in Main, line 507"))
				call DisplayTimedTextToPlayer(pl_13, 0., 0., 15.0, msg_13)
				set wurst_stack_depth = wurst_stack_depth - 1
			elseif current_f_5 == f1 or current_f_5 == f2 then
				set msg_14 = source_s + " now shares rule with " + target_s
				set pl_14 = Player_players[i_5]
				set stackPos_31 = "when calling NoteToPlayer in Diplomacy, line 84"
				set wurst_stack[wurst_stack_depth] = stackPos_31
				set wurst_stack_depth = wurst_stack_depth + 1
				call DisplayTimedTextToPlayer(pl_14, 0., 0., 15.0, GetNoteStringForPlayer(pl_14, "when calling GetNoteStringForPlayer in Main, line 504"))
				call DisplayTimedTextToPlayer(pl_14, 0., 0., 15.0, msg_14)
				set wurst_stack_depth = wurst_stack_depth - 1
			else
				set msg_15 = source_s + " now shares rule with " + target_s
				set pl_15 = Player_players[i_5]
				set stackPos_32 = "when calling NoteToPlayer in Diplomacy, line 86"
				set wurst_stack[wurst_stack_depth] = stackPos_32
				set wurst_stack_depth = wurst_stack_depth + 1
				call DisplayTimedTextToPlayer(pl_15, 0., 0., 15.0, GetNoteStringForPlayer(pl_15, "when calling GetNoteStringForPlayer in Main, line 504"))
				call DisplayTimedTextToPlayer(pl_15, 0., 0., 15.0, msg_15)
				set wurst_stack_depth = wurst_stack_depth - 1
			endif
			set i_5 = i_5 + 1
		endloop
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set source = null
	set target = null
	set f1 = null
	set f2 = null
	set current_f = null
	set current_f_2 = null
	set current_f_3 = null
	set current_f_4 = null
	set current_f_5 = null
	set this_2 = null
	set this_3 = null
	set whichPlayer = null
	set f = null
	set whichPlayer_2 = null
	set f_2 = null
	set which_player = null
	set which_player_2 = null
	set this_6 = null
	set which_player_3 = null
	set whichPlayer_3 = null
	set f_3 = null
	set pl = null
	set pl_2 = null
	set pl_3 = null
	set which_player_4 = null
	set which_player_5 = null
	set this_11 = null
	set which_player_6 = null
	set whichPlayer_4 = null
	set f_4 = null
	set pl_4 = null
	set pl_5 = null
	set pl_6 = null
	set which_player_7 = null
	set which_player_8 = null
	set this_15 = null
	set which_player_9 = null
	set whichPlayer_5 = null
	set f_5 = null
	set pl_7 = null
	set pl_8 = null
	set pl_9 = null
	set which_player_10 = null
	set which_player_11 = null
	set this_19 = null
	set which_player_12 = null
	set whichPlayer_6 = null
	set f_6 = null
	set pl_10 = null
	set pl_11 = null
	set pl_12 = null
	set which_player_13 = null
	set which_player_14 = null
	set this_23 = null
	set which_player_15 = null
	set whichPlayer_7 = null
	set f_7 = null
	set pl_13 = null
	set pl_14 = null
	set pl_15 = null
endfunction

function bridge_action_2 takes nothing returns nothing
	set wurst_stack_depth = 0
	call action_3("Diplomacy, line 101")
endfunction

function registerSpellEffectEvent takes integer abil, code onCast, string stackPos returns nothing
	local trigger object
	local handle this_2
	local trigger this_3
	local boolexpr condition
	local integer temp
	local integer temp_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if  not dispatch_HashMap_HashMap_HashMap_has(RegisterEvents_onCastMap, abil, "when calling has in RegisterEvents, line 61") then
		set temp = RegisterEvents_onCastMap
		set temp_2 = abil
		set object = CreateTrigger()
		set this_2 = object
		call dispatch_HashMap_HashMap_HashMap_put(temp, temp_2, GetHandleId(this_2), "when calling put in RegisterEvents, line 62")
	endif
	set this_3 = triggerFromIndex(dispatch_HashMap_HashMap_HashMap_get(RegisterEvents_onCastMap, abil, "when calling get in RegisterEvents, line 63"), "when calling triggerFromIndex in RegisterEvents, line 63")
	set condition = Filter(onCast)
	call TriggerAddCondition(this_3, condition)
	set wurst_stack_depth = wurst_stack_depth - 1
	set object = null
	set this_2 = null
	set this_3 = null
	set condition = null
endfunction

function init_City takes string stackPos returns boolean
	local trigger t_click
	local trigger receiver
	local trigger receiver_2
	local integer i
	local integer temp
	local trigger receiver_3
	local trigger receiver_4
	local trigger receiver_5
	local trigger receiver_6
	local trigger receiver_7
	local trigger receiver_8
	local trigger receiver_9
	local trigger receiver_10
	local trigger receiver_11
	local integer clVar
	local playerunitevent temp_2
	local integer count
	local integer unitId
	local player whichPlayer
	local location loc
	local real face
	local trigger this_2
	local boolexpr condition
	local trigger this_3
	local code actionFunc
	local trigger this_4
	local player whichPlayer_2
	local playerunitevent whichPlayerUnitEvent
	local boolexpr filter
	local trigger this_5
	local boolexpr condition_2
	local trigger this_6
	local code actionFunc_2
	local trigger this_7
	local playerunitevent whichEvent
	local trigger trig
	local playerunitevent whichEvent_2
	local integer index
	local trigger this_8
	local playerunitevent whichEvent_3
	local trigger trig_2
	local playerunitevent whichEvent_4
	local integer index_2
	local trigger this_9
	local boolexpr condition_3
	local trigger this_10
	local code actionFunc_3
	local trigger this_11
	local playerunitevent whichEvent_5
	local trigger trig_3
	local playerunitevent whichEvent_6
	local integer index_3
	local trigger this_12
	local boolexpr condition_4
	local trigger this_13
	local code actionFunc_4
	local string stackPos_2
	local integer this_14
	local integer this_15
	local eventid eventId
	local integer listener
	local string stackPos_3
	local eventid this_16
	local string stackPos_4
	local integer id
	local handle this_17
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if true then
		set count = 5
		set unitId = 1747988553
		set whichPlayer = Player_players[0]
		set loc = Location( - 3000.0, 1700.0)
		set face = 0.
		call GroupClear(bj_lastCreatedGroup)
		loop
			set count = count - 1
			exitwhen count < 0
			call CreateUnitAtLocSaveLast(whichPlayer, unitId, loc, face)
			call GroupAddUnit(bj_lastCreatedGroup, bj_lastCreatedUnit)
		endloop
	endif
	set receiver = CreateTrigger()
	set this_2 = receiver
	set condition = Condition(ref_function_City_closure_impl)
	call TriggerAddCondition(this_2, condition)
	set receiver_2 = receiver
	set this_3 = receiver_2
	set actionFunc = ref_function_bridge_onClick
	call TriggerAddAction(this_3, actionFunc)
	set t_click = receiver_2
	set i = 0
	set temp = 24
	loop
		exitwhen i > temp
		set this_4 = t_click
		set whichPlayer_2 = Player_players[i]
		set whichPlayerUnitEvent = EVENT_PLAYER_UNIT_SELECTED
		set filter = Filter(ref_function_bridge_City_closure_impl)
		call TriggerRegisterPlayerUnitEvent(this_4, whichPlayer_2, whichPlayerUnitEvent, filter)
		set i = i + 1
	endloop
	set receiver_3 = CreateTrigger()
	set this_5 = receiver_3
	set condition_2 = Condition(ref_function_City_closure_impl_2)
	call TriggerAddCondition(this_5, condition_2)
	set receiver_4 = receiver_3
	set this_6 = receiver_4
	set actionFunc_2 = ref_function_bridge_Settle
	call TriggerAddAction(this_6, actionFunc_2)
	set receiver_5 = receiver_4
	set this_7 = receiver_5
	set whichEvent = EVENT_PLAYER_UNIT_SPELL_CAST
	set trig = this_7
	set whichEvent_2 = whichEvent
	set index = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent_2, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	set receiver_6 = CreateTrigger()
	set this_8 = receiver_6
	set whichEvent_3 = EVENT_PLAYER_UNIT_ATTACKED
	set trig_2 = this_8
	set whichEvent_4 = whichEvent_3
	set index_2 = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig_2, Player(index_2), whichEvent_4, null)
		set index_2 = index_2 + 1
		exitwhen index_2 == bj_MAX_PLAYER_SLOTS
	endloop
	set receiver_7 = receiver_6
	set this_9 = receiver_7
	set condition_3 = Condition(ref_function_City_closure_impl_3)
	call TriggerAddCondition(this_9, condition_3)
	set receiver_8 = receiver_7
	set this_10 = receiver_8
	set actionFunc_3 = ref_function_bridge_City_closure_impl_2
	call TriggerAddAction(this_10, actionFunc_3)
	call registerSpellEffectEvent(1093677658, ref_function_bridge_City_closure_impl_3, "when calling registerSpellEffectEvent in City, line 75")
	call registerSpellEffectEvent(1093677872, ref_function_bridge_City_closure_impl_4, "when calling registerSpellEffectEvent in City, line 79")
	set receiver_9 = CreateTrigger()
	set this_11 = receiver_9
	set whichEvent_5 = EVENT_PLAYER_UNIT_ATTACKED
	set trig_3 = this_11
	set whichEvent_6 = whichEvent_5
	set index_3 = 0
	loop
		call TriggerRegisterPlayerUnitEvent(trig_3, Player(index_3), whichEvent_6, null)
		set index_3 = index_3 + 1
		exitwhen index_3 == bj_MAX_PLAYER_SLOTS
	endloop
	set receiver_10 = receiver_9
	set this_12 = receiver_10
	set condition_4 = Condition(ref_function_City_closure_impl_4)
	call TriggerAddCondition(this_12, condition_4)
	set receiver_11 = receiver_10
	set this_13 = receiver_11
	set actionFunc_4 = ref_function_bridge_City_closure_impl_5
	call TriggerAddAction(this_13, actionFunc_4)
	set temp_2 = EVENT_PLAYER_UNIT_ATTACKED
	set stackPos_2 = "when calling alloc_Closure in City, line 90"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_14 = EventListener_maxIndex
			set EventListener_typeId[this_14] = 647
		else
			call error("Out of memory: Could not create Closure.", "when calling error in City, line 90")
			set this_14 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_14 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_14] = 647
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set clVar = this_14
	set this_15 = clVar
	set EventListener_eventId[this_15] = 0
	set EventListener_next[this_15] = 0
	set EventListener_prev[this_15] = 0
	set eventId = temp_2
	set listener = clVar
	set stackPos_3 = "when calling add in City, line 90"
	set wurst_stack[wurst_stack_depth] = stackPos_3
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_16 = eventId
	set stackPos_4 = "when calling toIntId in ClosureEvents, line 111"
	set wurst_stack[wurst_stack_depth] = stackPos_4
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_17 = this_16
	set id = ClosureEvents_eventidToIndex[GetHandleId(this_17)]
	if id == 0 then
		set id = registerEventId(this_16, "when calling registerEventId in ClosureEvents, line 228")
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set EventListener_eventId[listener] = id
	if EventListener_generalListenersFirsts[EventListener_eventId[listener]] != 0 then
		set EventListener_prev[EventListener_generalListenersFirsts[EventListener_eventId[listener]]] = listener
		set EventListener_next[listener] = EventListener_generalListenersFirsts[EventListener_eventId[listener]]
	endif
	set EventListener_generalListenersFirsts[EventListener_eventId[listener]] = listener
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set t_click = null
	set receiver = null
	set receiver_2 = null
	set receiver_3 = null
	set receiver_4 = null
	set receiver_5 = null
	set receiver_6 = null
	set receiver_7 = null
	set receiver_8 = null
	set receiver_9 = null
	set receiver_10 = null
	set receiver_11 = null
	set temp_2 = null
	set whichPlayer = null
	set loc = null
	set this_2 = null
	set condition = null
	set this_3 = null
	set this_4 = null
	set whichPlayer_2 = null
	set whichPlayerUnitEvent = null
	set filter = null
	set this_5 = null
	set condition_2 = null
	set this_6 = null
	set this_7 = null
	set whichEvent = null
	set trig = null
	set whichEvent_2 = null
	set this_8 = null
	set whichEvent_3 = null
	set trig_2 = null
	set whichEvent_4 = null
	set this_9 = null
	set condition_3 = null
	set this_10 = null
	set this_11 = null
	set whichEvent_5 = null
	set trig_3 = null
	set whichEvent_6 = null
	set this_12 = null
	set condition_4 = null
	set this_13 = null
	set eventId = null
	set this_16 = null
	set this_17 = null
	return true
endfunction

function bridge_init_City takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_City("City, line 1")
endfunction

function getTimer takes string stackPos returns timer
	local timer receiver
	local timer stackTrace_tempReturn
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if TimerUtils_freeTimersCount > 0 then
		set TimerUtils_freeTimersCount = TimerUtils_freeTimersCount - 1
		call timer_setData(TimerUtils_freeTimers[TimerUtils_freeTimersCount], 0, "when calling setData in TimerUtils, line 29")
		set wurst_stack_depth = wurst_stack_depth - 1
		set receiver = null
		set stackTrace_tempReturn = null
		return TimerUtils_freeTimers[TimerUtils_freeTimersCount]
	else
		set receiver = CreateTimer()
		call timer_setData(receiver, 0, "when calling setData in TimerUtils, line 32")
		set stackTrace_tempReturn = receiver
		set wurst_stack_depth = wurst_stack_depth - 1
		set getTimertempReturn = stackTrace_tempReturn
		set receiver = null
		set stackTrace_tempReturn = null
		return getTimertempReturn
	endif
endfunction

function CallbackSingle_start takes integer this_2, real time, string stackPos returns nothing
	local timer receiver
	local timer receiver_2
	local timer this_3
	local real time_2
	local code timerCallBack
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set receiver = getTimer("when calling getTimer in ClosureTimers, line 68")
	call timer_setData(receiver, this_2, "when calling setData in ClosureTimers, line 69")
	set receiver_2 = receiver
	set this_3 = receiver_2
	set time_2 = time
	set timerCallBack = ref_function_bridge_CallbackSingle_closure_impl
	call TimerStart(this_3, time_2, false, timerCallBack)
	set CallbackSingle_t[this_2] = receiver_2
	set wurst_stack_depth = wurst_stack_depth - 1
	set receiver = null
	set receiver_2 = null
	set this_3 = null
endfunction

function new_HashMap takes string stackPos returns integer
	local integer this_2
	local string stackPos_2
	local integer this_3
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackPos_2 = "when calling HashMap in HashMap, line 7"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if Table_firstFree == 0 then
		if Table_maxIndex < 32768 then
			set Table_maxIndex = Table_maxIndex + 1
			set this_3 = Table_maxIndex
			set Table_typeId[this_3] = 691
		else
			call error("Out of memory: Could not create HashMap.", "when calling error in HashMap, line 8")
			set this_3 = 0
		endif
	else
		set Table_firstFree = Table_firstFree - 1
		set this_3 = Table_nextFree[Table_firstFree]
		set Table_typeId[this_3] = 691
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_2 = this_3
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_2
endfunction

function init_ClosureEvents takes string stackPos returns boolean
	local integer clVar
	local string stackPos_2
	local integer this_2
	local integer cb
	local string stackPos_3
	local real timeToWait
	local integer cb_2
	local string stackPos_4
	local integer this_3
	local real time
	local string stackPos_5
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set ClosureEvents_EVENT_PLAYER_CHAT_FILTER = ConvertPlayerEvent(96)
	set EventListener_castMap = new_HashMap("when calling new_HashMap in ClosureEvents, line 99")
	set EventListener_castMapCasters = new_HashMap("when calling new_HashMap in ClosureEvents, line 100")
	set ClosureEvents_unitTrig = CreateTrigger()
	set ClosureEvents_leaveTrig = CreateTrigger()
	set ClosureEvents_keyTrig = CreateTrigger()
	set stackPos_2 = "when calling alloc_Closure in ClosureEvents, line 279"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if CallbackSingle_firstFree == 0 then
		if CallbackSingle_maxIndex < 32768 then
			set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
			set this_2 = CallbackSingle_maxIndex
			set CallbackSingle_typeId[this_2] = 633
		else
			call error("Out of memory: Could not create Closure.", "when calling error in ClosureEvents, line 279")
			set this_2 = 0
		endif
	else
		set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
		set this_2 = CallbackSingle_nextFree[CallbackSingle_firstFree]
		set CallbackSingle_typeId[this_2] = 633
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set clVar = this_2
	set cb = clVar
	set stackPos_3 = "when calling nullTimer in ClosureEvents, line 279"
	set wurst_stack[wurst_stack_depth] = stackPos_3
	set wurst_stack_depth = wurst_stack_depth + 1
	set timeToWait = 0.
	set cb_2 = cb
	set stackPos_4 = "when calling doAfter in ClosureTimers, line 22"
	set wurst_stack[wurst_stack_depth] = stackPos_4
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_3 = cb_2
	set time = timeToWait
	set stackPos_5 = "when calling start in ClosureTimers, line 15"
	set wurst_stack[wurst_stack_depth] = stackPos_5
	set wurst_stack_depth = wurst_stack_depth + 1
	if CallbackSingle_typeId[this_3] == 0 then
		if this_3 == 0 then
			call error("Nullpointer exception when calling CallbackSingle.start", "when calling error in ClosureTimers, line 67")
		else
			call error("Called CallbackSingle.start on invalid object.", "when calling error in ClosureTimers, line 67")
		endif
	endif
	call CallbackSingle_start(this_3, time, "when calling start in ClosureTimers, line 67")
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	return true
endfunction

function bridge_init_ClosureEvents takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_ClosureEvents("ClosureEvents, line 1")
endfunction

function initializeTable takes string stackPos returns nothing
	local integer i
	local integer this_2
	local integer parentKey
	local integer value
	local string stackPos_2
	local integer this_3
	local integer parentKey_2
	local integer value_2
	local hashtable this_4
	local integer parentKey_3
	local integer childKey
	local integer value_3
	local string this_5
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set i = 0
	loop
		exitwhen i > 15
		set this_2 = Colors_decs
		set this_5 = Colors_hexs[i]
		set parentKey = StringHash(this_5)
		set value = i
		set stackPos_2 = "when calling saveInt in Colors, line 206"
		set wurst_stack[wurst_stack_depth] = stackPos_2
		set wurst_stack_depth = wurst_stack_depth + 1
		if Table_typeId[this_2] == 0 then
			if this_2 == 0 then
				call error("Nullpointer exception when calling Table.saveInt", "when calling error in Table, line 42")
			else
				call error("Called Table.saveInt on invalid object.", "when calling error in Table, line 42")
			endif
		endif
		set this_3 = this_2
		set parentKey_2 = parentKey
		set value_2 = value
		set this_4 = Table_ht
		set parentKey_3 = this_3
		set childKey = parentKey_2
		set value_3 = value_2
		call SaveInteger(this_4, parentKey_3, childKey, value_3)
		set wurst_stack_depth = wurst_stack_depth - 1
		set i = i + 1
	endloop
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function new_Table takes string stackPos returns integer
	local integer this_2
	local string stackPos_2
	local integer this_3
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackPos_2 = "when calling Table in Table, line 5"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if Table_firstFree == 0 then
		if Table_maxIndex < 32768 then
			set Table_maxIndex = Table_maxIndex + 1
			set this_3 = Table_maxIndex
			set Table_typeId[this_3] = 690
		else
			call error("Out of memory: Could not create Table.", "when calling error in Table, line 6")
			set this_3 = 0
		endif
	else
		set Table_firstFree = Table_firstFree - 1
		set this_3 = Table_nextFree[Table_firstFree]
		set Table_typeId[this_3] = 690
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_2 = this_3
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_2
endfunction

function init_Colors takes string stackPos returns boolean
	local integer tuple_temp
	local integer tuple_temp_2
	local integer tuple_temp_3
	local integer tuple_temp_4
	local integer tuple_temp_5
	local integer tuple_temp_6
	local integer tuple_temp_7
	local integer tuple_temp_8
	local integer tuple_temp_9
	local integer tuple_temp_10
	local integer tuple_temp_11
	local integer tuple_temp_12
	local integer tuple_temp_13
	local integer tuple_temp_14
	local integer tuple_temp_15
	local integer tuple_temp_16
	local integer tuple_temp_17
	local integer tuple_temp_18
	local integer tuple_temp_19
	local integer tuple_temp_20
	local integer tuple_temp_21
	local integer tuple_temp_22
	local integer tuple_temp_23
	local integer tuple_temp_24
	local integer tuple_temp_25
	local integer tuple_temp_26
	local integer tuple_temp_27
	local integer tuple_temp_28
	local integer tuple_temp_29
	local integer tuple_temp_30
	local integer tuple_temp_31
	local integer tuple_temp_32
	local integer tuple_temp_33
	local integer tuple_temp_34
	local integer tuple_temp_35
	local integer tuple_temp_36
	local integer tuple_temp_37
	local integer tuple_temp_38
	local integer tuple_temp_39
	local integer tuple_temp_40
	local integer tuple_temp_41
	local integer tuple_temp_42
	local integer tuple_temp_43
	local integer tuple_temp_44
	local integer tuple_temp_45
	local integer tuple_temp_46
	local integer tuple_temp_47
	local integer tuple_temp_48
	local integer tuple_temp_49
	local integer tuple_temp_50
	local integer tuple_temp_51
	local integer tuple_temp_52
	local integer tuple_temp_53
	local integer tuple_temp_54
	local integer tuple_temp_55
	local integer tuple_temp_56
	local integer tuple_temp_57
	local integer tuple_temp_58
	local integer tuple_temp_59
	local integer tuple_temp_60
	local integer tuple_temp_61
	local integer tuple_temp_62
	local integer tuple_temp_63
	local integer tuple_temp_64
	local integer tuple_temp_65
	local integer tuple_temp_66
	local integer tuple_temp_67
	local integer tuple_temp_68
	local integer tuple_temp_69
	local integer tuple_temp_70
	local integer tuple_temp_71
	local integer tuple_temp_72
	local integer tuple_temp_73
	local integer tuple_temp_74
	local integer tuple_temp_75
	local integer tuple_temp_76
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set tuple_temp = 0
	set tuple_temp_2 = 0
	set tuple_temp_3 = 0
	set tuple_temp_4 = 0
	set Colors_COLOR_BLACK_red = tuple_temp
	set Colors_COLOR_BLACK_green = tuple_temp_2
	set Colors_COLOR_BLACK_blue = tuple_temp_3
	set Colors_COLOR_BLACK_alpha = tuple_temp_4
	set tuple_temp_5 = 255
	set tuple_temp_6 = 2
	set tuple_temp_7 = 2
	set Colors_PLAYER_COLORS_red[0] = tuple_temp_5
	set Colors_PLAYER_COLORS_green[0] = tuple_temp_6
	set Colors_PLAYER_COLORS_blue[0] = tuple_temp_7
	set tuple_temp_8 = 0
	set tuple_temp_9 = 65
	set tuple_temp_10 = 255
	set Colors_PLAYER_COLORS_red[1] = tuple_temp_8
	set Colors_PLAYER_COLORS_green[1] = tuple_temp_9
	set Colors_PLAYER_COLORS_blue[1] = tuple_temp_10
	set tuple_temp_11 = 27
	set tuple_temp_12 = 229
	set tuple_temp_13 = 184
	set Colors_PLAYER_COLORS_red[2] = tuple_temp_11
	set Colors_PLAYER_COLORS_green[2] = tuple_temp_12
	set Colors_PLAYER_COLORS_blue[2] = tuple_temp_13
	set tuple_temp_14 = 83
	set tuple_temp_15 = 0
	set tuple_temp_16 = 128
	set Colors_PLAYER_COLORS_red[3] = tuple_temp_14
	set Colors_PLAYER_COLORS_green[3] = tuple_temp_15
	set Colors_PLAYER_COLORS_blue[3] = tuple_temp_16
	set tuple_temp_17 = 255
	set tuple_temp_18 = 252
	set tuple_temp_19 = 0
	set Colors_PLAYER_COLORS_red[4] = tuple_temp_17
	set Colors_PLAYER_COLORS_green[4] = tuple_temp_18
	set Colors_PLAYER_COLORS_blue[4] = tuple_temp_19
	set tuple_temp_20 = 254
	set tuple_temp_21 = 137
	set tuple_temp_22 = 13
	set Colors_PLAYER_COLORS_red[5] = tuple_temp_20
	set Colors_PLAYER_COLORS_green[5] = tuple_temp_21
	set Colors_PLAYER_COLORS_blue[5] = tuple_temp_22
	set tuple_temp_23 = 31
	set tuple_temp_24 = 191
	set tuple_temp_25 = 0
	set Colors_PLAYER_COLORS_red[6] = tuple_temp_23
	set Colors_PLAYER_COLORS_green[6] = tuple_temp_24
	set Colors_PLAYER_COLORS_blue[6] = tuple_temp_25
	set tuple_temp_26 = 228
	set tuple_temp_27 = 90
	set tuple_temp_28 = 175
	set Colors_PLAYER_COLORS_red[7] = tuple_temp_26
	set Colors_PLAYER_COLORS_green[7] = tuple_temp_27
	set Colors_PLAYER_COLORS_blue[7] = tuple_temp_28
	set tuple_temp_29 = 148
	set tuple_temp_30 = 149
	set tuple_temp_31 = 150
	set Colors_PLAYER_COLORS_red[8] = tuple_temp_29
	set Colors_PLAYER_COLORS_green[8] = tuple_temp_30
	set Colors_PLAYER_COLORS_blue[8] = tuple_temp_31
	set tuple_temp_32 = 125
	set tuple_temp_33 = 190
	set tuple_temp_34 = 241
	set Colors_PLAYER_COLORS_red[9] = tuple_temp_32
	set Colors_PLAYER_COLORS_green[9] = tuple_temp_33
	set Colors_PLAYER_COLORS_blue[9] = tuple_temp_34
	set tuple_temp_35 = 15
	set tuple_temp_36 = 97
	set tuple_temp_37 = 69
	set Colors_PLAYER_COLORS_red[10] = tuple_temp_35
	set Colors_PLAYER_COLORS_green[10] = tuple_temp_36
	set Colors_PLAYER_COLORS_blue[10] = tuple_temp_37
	set tuple_temp_38 = 77
	set tuple_temp_39 = 41
	set tuple_temp_40 = 3
	set Colors_PLAYER_COLORS_red[11] = tuple_temp_38
	set Colors_PLAYER_COLORS_green[11] = tuple_temp_39
	set Colors_PLAYER_COLORS_blue[11] = tuple_temp_40
	set tuple_temp_41 = 155
	set tuple_temp_42 = 0
	set tuple_temp_43 = 0
	set Colors_PLAYER_COLORS_red[12] = tuple_temp_41
	set Colors_PLAYER_COLORS_green[12] = tuple_temp_42
	set Colors_PLAYER_COLORS_blue[12] = tuple_temp_43
	set tuple_temp_44 = 0
	set tuple_temp_45 = 0
	set tuple_temp_46 = 195
	set Colors_PLAYER_COLORS_red[13] = tuple_temp_44
	set Colors_PLAYER_COLORS_green[13] = tuple_temp_45
	set Colors_PLAYER_COLORS_blue[13] = tuple_temp_46
	set tuple_temp_47 = 0
	set tuple_temp_48 = 234
	set tuple_temp_49 = 255
	set Colors_PLAYER_COLORS_red[14] = tuple_temp_47
	set Colors_PLAYER_COLORS_green[14] = tuple_temp_48
	set Colors_PLAYER_COLORS_blue[14] = tuple_temp_49
	set tuple_temp_50 = 190
	set tuple_temp_51 = 0
	set tuple_temp_52 = 254
	set Colors_PLAYER_COLORS_red[15] = tuple_temp_50
	set Colors_PLAYER_COLORS_green[15] = tuple_temp_51
	set Colors_PLAYER_COLORS_blue[15] = tuple_temp_52
	set tuple_temp_53 = 235
	set tuple_temp_54 = 205
	set tuple_temp_55 = 135
	set Colors_PLAYER_COLORS_red[16] = tuple_temp_53
	set Colors_PLAYER_COLORS_green[16] = tuple_temp_54
	set Colors_PLAYER_COLORS_blue[16] = tuple_temp_55
	set tuple_temp_56 = 248
	set tuple_temp_57 = 164
	set tuple_temp_58 = 139
	set Colors_PLAYER_COLORS_red[17] = tuple_temp_56
	set Colors_PLAYER_COLORS_green[17] = tuple_temp_57
	set Colors_PLAYER_COLORS_blue[17] = tuple_temp_58
	set tuple_temp_59 = 191
	set tuple_temp_60 = 255
	set tuple_temp_61 = 128
	set Colors_PLAYER_COLORS_red[18] = tuple_temp_59
	set Colors_PLAYER_COLORS_green[18] = tuple_temp_60
	set Colors_PLAYER_COLORS_blue[18] = tuple_temp_61
	set tuple_temp_62 = 220
	set tuple_temp_63 = 185
	set tuple_temp_64 = 235
	set Colors_PLAYER_COLORS_red[19] = tuple_temp_62
	set Colors_PLAYER_COLORS_green[19] = tuple_temp_63
	set Colors_PLAYER_COLORS_blue[19] = tuple_temp_64
	set tuple_temp_65 = 40
	set tuple_temp_66 = 40
	set tuple_temp_67 = 40
	set Colors_PLAYER_COLORS_red[20] = tuple_temp_65
	set Colors_PLAYER_COLORS_green[20] = tuple_temp_66
	set Colors_PLAYER_COLORS_blue[20] = tuple_temp_67
	set tuple_temp_68 = 235
	set tuple_temp_69 = 240
	set tuple_temp_70 = 255
	set Colors_PLAYER_COLORS_red[21] = tuple_temp_68
	set Colors_PLAYER_COLORS_green[21] = tuple_temp_69
	set Colors_PLAYER_COLORS_blue[21] = tuple_temp_70
	set tuple_temp_71 = 0
	set tuple_temp_72 = 120
	set tuple_temp_73 = 30
	set Colors_PLAYER_COLORS_red[22] = tuple_temp_71
	set Colors_PLAYER_COLORS_green[22] = tuple_temp_72
	set Colors_PLAYER_COLORS_blue[22] = tuple_temp_73
	set tuple_temp_74 = 164
	set tuple_temp_75 = 11
	set tuple_temp_76 = 51
	set Colors_PLAYER_COLORS_red[23] = tuple_temp_74
	set Colors_PLAYER_COLORS_green[23] = tuple_temp_75
	set Colors_PLAYER_COLORS_blue[23] = tuple_temp_76
	set Colors_hexs[0] = "0"
	set Colors_hexs[1] = "1"
	set Colors_hexs[2] = "2"
	set Colors_hexs[3] = "3"
	set Colors_hexs[4] = "4"
	set Colors_hexs[5] = "5"
	set Colors_hexs[6] = "6"
	set Colors_hexs[7] = "7"
	set Colors_hexs[8] = "8"
	set Colors_hexs[9] = "9"
	set Colors_hexs[10] = "A"
	set Colors_hexs[11] = "B"
	set Colors_hexs[12] = "C"
	set Colors_hexs[13] = "D"
	set Colors_hexs[14] = "E"
	set Colors_hexs[15] = "F"
	set Colors_decs = new_Table("when calling new_Table in Colors, line 154")
	call initializeTable("when calling initializeTable in Colors, line 209")
	set wurst_stack_depth = wurst_stack_depth - 1
	return true
endfunction

function bridge_init_Colors takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_Colors("Colors, line 1")
endfunction

function createDummy takes real pos_x, real pos_y, player owner, real facing_radians returns unit
	local player p = owner
	local integer unitId = 2019849581
	local real tuple_temp = pos_x
	local real tuple_temp_2 = pos_y
	local real pos_x_2 = tuple_temp
	local real pos_y_2 = tuple_temp_2
	local real tuple_temp_3 = facing_radians
	local real facing_radians_2 = tuple_temp_3
	local player temp = p
	local integer temp_2 = unitId
	local real temp_3 = pos_x_2
	local real temp_4 = pos_y_2
	local real tuple_temp_4 = facing_radians_2
	local real this_radians = tuple_temp_4
	local unit u = CreateUnit(temp, temp_2, temp_3, temp_4, this_radians * 57.295779513)
	local unit receiver = u
	local unit this_2 = receiver
	local real tuple_temp_5 = pos_x
	local real tuple_temp_6 = pos_y
	local real pos_x_3 = tuple_temp_5
	local real pos_y_3 = tuple_temp_6
	local unit receiver_5 = this_2
	local unit this_3 = receiver_5
	local real x = pos_x_3
	local unit receiver_2
	local unit receiver_3
	local unit receiver_4
	local unit receiver_6
	local unit this_4
	local real y
	local unit this_5
	local integer abil
	local unit this_6
	local integer abil_2
	local unit this_7
	local integer abil_3
	call SetUnitX(this_3, x)
	set receiver_6 = receiver_5
	set this_4 = receiver_6
	set y = pos_y_3
	call SetUnitY(this_4, y)
	set receiver_2 = receiver
	set this_5 = receiver_2
	set abil = 1097691750
	call UnitAddAbility(this_5, abil)
	set receiver_3 = receiver_2
	set this_6 = receiver_3
	set abil_2 = 1097691750
	call UnitRemoveAbility(this_6, abil_2)
	set receiver_4 = receiver_3
	set this_7 = receiver_4
	set abil_3 = 1097625443
	call UnitAddAbility(this_7, abil_3)
	set createDummytempReturn = u
	set u = null
	set receiver = null
	set receiver_2 = null
	set receiver_3 = null
	set receiver_4 = null
	set p = null
	set this_2 = null
	set receiver_5 = null
	set receiver_6 = null
	set this_3 = null
	set this_4 = null
	set this_5 = null
	set this_6 = null
	set this_7 = null
	set temp = null
	return createDummytempReturn
endfunction

function dispatch_ArrayQueue_DummyRecycler_ArrayQueue_enqueue takes integer this_2, unit u, string stackPos returns nothing
	local integer this_3
	local string stackPos_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if ArrayQueue_typeId[this_2] == 0 then
		if this_2 == 0 then
			call error("Nullpointer exception when calling ArrayQueue.enqueue", "when calling error in DummyRecycler, line 54")
		else
			call error("Called ArrayQueue.enqueue on invalid object.", "when calling error in DummyRecycler, line 54")
		endif
	endif
	set this_3 = this_2
	set stackPos_2 = "when calling enqueue in DummyRecycler, line 54"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if ArrayQueue_size[this_3] < 6 then
		set ArrayQueue_size[this_3] = ArrayQueue_size[this_3] + 1
		set ArrayQueue_rp[this_3] = ModuloInteger(ArrayQueue_rp[this_3] + 1, 6)
	else
		call error("Queue Overflow", "when calling error in DummyRecycler, line 60")
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function new_ArrayQueue takes string stackPos returns integer
	local integer this_2
	local string stackPos_2
	local integer this_3
	local integer this_4
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackPos_2 = "when calling ArrayQueue in DummyRecycler, line 48"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if ArrayQueue_firstFree == 0 then
		if ArrayQueue_maxIndex < 32768 then
			set ArrayQueue_maxIndex = ArrayQueue_maxIndex + 1
			set this_3 = ArrayQueue_maxIndex
			set ArrayQueue_typeId[this_3] = 627
		else
			call error("Out of memory: Could not create ArrayQueue.", "when calling error in DummyRecycler, line 48")
			set this_3 = 0
		endif
	else
		set ArrayQueue_firstFree = ArrayQueue_firstFree - 1
		set this_3 = ArrayQueue_nextFree[ArrayQueue_firstFree]
		set ArrayQueue_typeId[this_3] = 627
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_2 = this_3
	set this_4 = this_2
	set ArrayQueue_rp[this_4] = 0
	set ArrayQueue_size[this_4] = 0
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_2
endfunction

function init_DummyRecycler takes string stackPos returns boolean
	local integer i
	local integer temp
	local integer j
	local integer temp_2
	local real this_2
	local real temp_x
	local real temp_y
	local player temp_3
	local integer temp_4
	local real tuple_temp
	local real tuple_temp_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set DummyRecycler_ANGLE_DEGREE = 360 * 1. / 8
	call CreateTimer()
	set i = 0
	set temp = 8 - 1
	loop
		exitwhen i > temp
		set DummyRecycler_angleQueues[i] = new_ArrayQueue("when calling new_ArrayQueue in DummyRecycler, line 139")
		set j = 0
		set temp_2 = 6 - 1
		loop
			exitwhen j > temp_2
			set temp_4 = DummyRecycler_angleQueues[i]
			set tuple_temp = MapBounds_boundMax_x
			set tuple_temp_2 = MapBounds_boundMax_y
			set temp_x = tuple_temp
			set temp_y = tuple_temp_2
			set temp_3 = Basics_DUMMY_PLAYER
			set this_2 = i * DummyRecycler_ANGLE_DEGREE
			call dispatch_ArrayQueue_DummyRecycler_ArrayQueue_enqueue(temp_4, createDummy(temp_x, temp_y, temp_3, this_2 * 0.017453293), "when calling enqueue in DummyRecycler, line 141")
			set j = j + 1
		endloop
		set i = i + 1
	endloop
	set wurst_stack_depth = wurst_stack_depth - 1
	set temp_3 = null
	return true
endfunction

function bridge_init_DummyRecycler takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_DummyRecycler("DummyRecycler, line 1")
endfunction

function bridge_init_EventHelper takes nothing returns boolean
	local string stackPos
	set wurst_stack_depth = 0
	set stackPos = "EventHelper, line 1"
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call new_HashMap("when calling new_HashMap in EventHelper, line 6")
	call new_HashMap("when calling new_HashMap in EventHelper, line 7")
	call new_Table("when calling new_Table in EventHelper, line 8")
	set wurst_stack_depth = wurst_stack_depth - 1
	return true
endfunction

function init_LinkedList takes string stackPos returns boolean
	local string stackPos_2
	local string stackPos_3
	local real r
	local real this_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackPos_2 = "when calling alloc_Closure in LinkedList, line 504"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if Comparator_firstFree == 0 then
		if Comparator_maxIndex < 32768 then
			set Comparator_maxIndex = Comparator_maxIndex + 1
		else
			call error("Out of memory: Could not create Closure.", "when calling error in LinkedList, line 504")
		endif
	else
		set Comparator_firstFree = Comparator_firstFree - 1
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set stackPos_3 = "when calling alloc_Closure in LinkedList, line 508"
	set wurst_stack[wurst_stack_depth] = stackPos_3
	set wurst_stack_depth = wurst_stack_depth + 1
	if Comparator_firstFree == 0 then
		if Comparator_maxIndex < 32768 then
			set Comparator_maxIndex = Comparator_maxIndex + 1
		else
			call error("Out of memory: Could not create Closure.", "when calling error in LinkedList, line 508")
		endif
	else
		set Comparator_firstFree = Comparator_firstFree - 1
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set r = 0.
	set this_2 = r * 1000.
	call R2I(this_2)
	set wurst_stack_depth = wurst_stack_depth - 1
	return true
endfunction

function bridge_init_LinkedList takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_LinkedList("LinkedList, line 1")
endfunction

function new_LinkedList takes string stackPos returns integer
	local integer this_2
	local string stackPos_2
	local integer this_3
	local integer this_4
	local string stackPos_3
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackPos_2 = "when calling LinkedList in LinkedList, line 31"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if LinkedList_firstFree == 0 then
		if LinkedList_maxIndex < 32768 then
			set LinkedList_maxIndex = LinkedList_maxIndex + 1
			set this_3 = LinkedList_maxIndex
			set LinkedList_typeId[this_3] = 666
		else
			call error("Out of memory: Could not create LinkedList.", "when calling error in LinkedList, line 17")
			set this_3 = 0
		endif
	else
		set LinkedList_firstFree = LinkedList_firstFree - 1
		set this_3 = LinkedList_nextFree[LinkedList_firstFree]
		set LinkedList_typeId[this_3] = 666
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_2 = this_3
	set this_4 = this_2
	set stackPos_3 = "when calling construct_LinkedList2 in LinkedList, line 31"
	set wurst_stack[wurst_stack_depth] = stackPos_3
	set wurst_stack_depth = wurst_stack_depth + 1
	set LinkedList_dummy[this_4] = new_LLEntry(0, 0, 0, "when calling new_LLEntry in LinkedList, line 18")
	set LinkedList_size[this_4] = 0
	set LLEntry_next[LinkedList_dummy[this_4]] = LinkedList_dummy[this_4]
	set LLEntry_prev[LinkedList_dummy[this_4]] = LinkedList_dummy[this_4]
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_2
endfunction

function asList_17 takes integer ts_0, integer ts_1, integer ts_2, integer ts_3, integer ts_4, integer ts_5, integer ts_6, integer ts_7, integer ts_8, integer ts_9, integer ts_10, integer ts_11, integer ts_12, integer ts_13, integer ts_14, integer ts_15, integer ts_16, string stackPos returns integer
	local integer ll
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set ll = new_LinkedList("when calling new_LinkedList in LinkedList, line 391")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_0, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_1, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_2, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_3, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_4, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_5, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_6, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_7, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_8, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_9, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_10, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_11, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_12, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_13, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_14, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_15, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_16, "when calling add in LinkedList, line 393")
	set wurst_stack_depth = wurst_stack_depth - 1
	return ll
endfunction

function init_Main takes string stackPos returns boolean
	local integer this_red
	local integer this_green
	local integer this_blue
	local integer number
	local integer firstpart
	local integer secondpart
	local integer number_2
	local integer firstpart_2
	local integer secondpart_2
	local integer number_3
	local integer firstpart_3
	local integer secondpart_3
	local integer this_red_2
	local integer this_green_2
	local integer this_blue_2
	local integer number_4
	local integer firstpart_4
	local integer secondpart_4
	local integer number_5
	local integer firstpart_5
	local integer secondpart_5
	local integer number_6
	local integer firstpart_6
	local integer secondpart_6
	local integer this_red_3
	local integer this_green_3
	local integer this_blue_3
	local integer number_7
	local integer firstpart_7
	local integer secondpart_7
	local integer number_8
	local integer firstpart_8
	local integer secondpart_8
	local integer number_9
	local integer firstpart_9
	local integer secondpart_9
	local integer this_red_4
	local integer this_green_4
	local integer this_blue_4
	local integer number_10
	local integer firstpart_10
	local integer secondpart_10
	local integer number_11
	local integer firstpart_11
	local integer secondpart_11
	local integer number_12
	local integer firstpart_12
	local integer secondpart_12
	local integer ts_0
	local integer ts_1
	local integer ts_2
	local integer ts_3
	local integer ts_4
	local integer ts_5
	local integer ts_6
	local integer ts_7
	local integer ts_8
	local integer ts_9
	local integer ts_10
	local string stackPos_2
	local integer ll
	local timer this_2
	local real time
	local code timerCallBack
	local string temp
	local string temp_2
	local string temp_3
	local string temp_4
	local string temp_5
	local string temp_6
	local string temp_7
	local string temp_8
	local integer tuple_temp
	local integer tuple_temp_2
	local integer tuple_temp_3
	local integer tuple_temp_4
	local integer tuple_temp_5
	local integer tuple_temp_6
	local integer tuple_temp_7
	local integer tuple_temp_8
	local integer tuple_temp_9
	local integer tuple_temp_10
	local integer tuple_temp_11
	local integer tuple_temp_12
	local integer tuple_temp_13
	local integer tuple_temp_14
	local integer tuple_temp_15
	local integer tuple_temp_16
	local integer tuple_temp_17
	local integer tuple_temp_18
	local integer tuple_temp_19
	local integer tuple_temp_20
	local integer tuple_temp_21
	local integer tuple_temp_22
	local integer tuple_temp_23
	local integer tuple_temp_24
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set Main_fWE = CreateForce()
	set Main_fEE = CreateForce()
	set Main_fME = CreateForce()
	set Main_fBZ = CreateForce()
	set Main_forces[0] = Main_fWE
	set Main_forces[1] = Main_fEE
	set Main_forces[2] = Main_fME
	set Main_forces[3] = Main_fBZ
	set tuple_temp = 62
	set tuple_temp_2 = 194
	set tuple_temp_3 = 255
	set Main_forces_colors_red[0] = tuple_temp
	set Main_forces_colors_green[0] = tuple_temp_2
	set Main_forces_colors_blue[0] = tuple_temp_3
	set tuple_temp_4 = 255
	set tuple_temp_5 = 238
	set tuple_temp_6 = 0
	set Main_forces_colors_red[1] = tuple_temp_4
	set Main_forces_colors_green[1] = tuple_temp_5
	set Main_forces_colors_blue[1] = tuple_temp_6
	set tuple_temp_7 = 0
	set tuple_temp_8 = 201
	set tuple_temp_9 = 10
	set Main_forces_colors_red[2] = tuple_temp_7
	set Main_forces_colors_green[2] = tuple_temp_8
	set Main_forces_colors_blue[2] = tuple_temp_9
	set tuple_temp_10 = 184
	set tuple_temp_11 = 0
	set tuple_temp_12 = 107
	set Main_forces_colors_red[3] = tuple_temp_10
	set Main_forces_colors_green[3] = tuple_temp_11
	set Main_forces_colors_blue[3] = tuple_temp_12
	set tuple_temp_13 = Main_forces_colors_red[0]
	set tuple_temp_14 = Main_forces_colors_green[0]
	set tuple_temp_15 = Main_forces_colors_blue[0]
	set this_red = tuple_temp_13
	set this_green = tuple_temp_14
	set this_blue = tuple_temp_15
	set number = this_red
	set firstpart = number / 16
	set secondpart = number - firstpart * 16
	set temp = "|cff" + Colors_hexs[firstpart] + Colors_hexs[secondpart]
	set number_2 = this_green
	set firstpart_2 = number_2 / 16
	set secondpart_2 = number_2 - firstpart_2 * 16
	set temp_2 = temp + Colors_hexs[firstpart_2] + Colors_hexs[secondpart_2]
	set number_3 = this_blue
	set firstpart_3 = number_3 / 16
	set secondpart_3 = number_3 - firstpart_3 * 16
	set Main_ksFactionAdjColored[0] = temp_2 + Colors_hexs[firstpart_3] + Colors_hexs[secondpart_3] + "Western European|r "
	set tuple_temp_16 = Main_forces_colors_red[1]
	set tuple_temp_17 = Main_forces_colors_green[1]
	set tuple_temp_18 = Main_forces_colors_blue[1]
	set this_red_2 = tuple_temp_16
	set this_green_2 = tuple_temp_17
	set this_blue_2 = tuple_temp_18
	set number_4 = this_red_2
	set firstpart_4 = number_4 / 16
	set secondpart_4 = number_4 - firstpart_4 * 16
	set temp_3 = "|cff" + Colors_hexs[firstpart_4] + Colors_hexs[secondpart_4]
	set number_5 = this_green_2
	set firstpart_5 = number_5 / 16
	set secondpart_5 = number_5 - firstpart_5 * 16
	set temp_4 = temp_3 + Colors_hexs[firstpart_5] + Colors_hexs[secondpart_5]
	set number_6 = this_blue_2
	set firstpart_6 = number_6 / 16
	set secondpart_6 = number_6 - firstpart_6 * 16
	set Main_ksFactionAdjColored[1] = temp_4 + Colors_hexs[firstpart_6] + Colors_hexs[secondpart_6] + "Eastern European|r "
	set tuple_temp_19 = Main_forces_colors_red[2]
	set tuple_temp_20 = Main_forces_colors_green[2]
	set tuple_temp_21 = Main_forces_colors_blue[2]
	set this_red_3 = tuple_temp_19
	set this_green_3 = tuple_temp_20
	set this_blue_3 = tuple_temp_21
	set number_7 = this_red_3
	set firstpart_7 = number_7 / 16
	set secondpart_7 = number_7 - firstpart_7 * 16
	set temp_5 = "|cff" + Colors_hexs[firstpart_7] + Colors_hexs[secondpart_7]
	set number_8 = this_green_3
	set firstpart_8 = number_8 / 16
	set secondpart_8 = number_8 - firstpart_8 * 16
	set temp_6 = temp_5 + Colors_hexs[firstpart_8] + Colors_hexs[secondpart_8]
	set number_9 = this_blue_3
	set firstpart_9 = number_9 / 16
	set secondpart_9 = number_9 - firstpart_9 * 16
	set Main_ksFactionAdjColored[2] = temp_6 + Colors_hexs[firstpart_9] + Colors_hexs[secondpart_9] + "Middle Eastern|r "
	set tuple_temp_22 = Main_forces_colors_red[3]
	set tuple_temp_23 = Main_forces_colors_green[3]
	set tuple_temp_24 = Main_forces_colors_blue[3]
	set this_red_4 = tuple_temp_22
	set this_green_4 = tuple_temp_23
	set this_blue_4 = tuple_temp_24
	set number_10 = this_red_4
	set firstpart_10 = number_10 / 16
	set secondpart_10 = number_10 - firstpart_10 * 16
	set temp_7 = "|cff" + Colors_hexs[firstpart_10] + Colors_hexs[secondpart_10]
	set number_11 = this_green_4
	set firstpart_11 = number_11 / 16
	set secondpart_11 = number_11 - firstpart_11 * 16
	set temp_8 = temp_7 + Colors_hexs[firstpart_11] + Colors_hexs[secondpart_11]
	set number_12 = this_blue_4
	set firstpart_12 = number_12 / 16
	set secondpart_12 = number_12 - firstpart_12 * 16
	set Main_ksFactionAdjColored[3] = temp_8 + Colors_hexs[firstpart_12] + Colors_hexs[secondpart_12] + "Byzantine|r "
	set Main_kStartingUnits[0] = asList_17(1747988528, 1747988528, 1747988528, 1747988528, 1747988528, 1747988528, 1747988532, 1747988532, 1747988532, 1747988532, 1211118401, 1747989058, 1747989058, 1747989058, 1747989058, 1747989058, 1747989058, "when calling asList in Main, line 44")
	set Main_kStartingUnits[1] = asList_17(1747988528, 1747988528, 1747988528, 1747988528, 1747988528, 1747988528, 1747988532, 1747988532, 1747988532, 1747988532, 1211118401, 1747989058, 1747989058, 1747989058, 1747989058, 1747989058, 1747989058, "when calling asList in Main, line 49")
	set Main_kStartingUnits[2] = asList_17(1747990087, 1747990087, 1747990087, 1747990087, 1747990087, 1747990087, 1747990088, 1747990088, 1747990088, 1747990088, 1211118401, 1747989058, 1747989058, 1747989058, 1747989058, 1747989058, 1747989058, "when calling asList in Main, line 55")
	set Main_kStartingUnits[3] = asList_17(1747989558, 1747989558, 1747989558, 1747989558, 1747989558, 1747989558, 1747989575, 1747989575, 1747989575, 1747989575, 1211118401, 1747989058, 1747989058, 1747989058, 1747989058, 1747989058, 1747989058, "when calling asList in Main, line 61")
	set Main_INF_REAL = 340282366920938000000000000000000000000.
	set Main_ksWarningWE[0] = "God save us! Terrible news, my lord!"
	set Main_ksWarningWE[1] = "The messenger came to us with horrific news! May we execute him?"
	set Main_ksWarningWE[2] = "A mere nightmare, Your Mightiness!"
	set Main_ksWarningEE[0] = "Great Prince, we have horrific news!"
	set Main_ksWarningEE[1] = "The God is angry, Great Prince!"
	set Main_ksWarningEE[2] = "Great Prince, we have horrific news!"
	set Main_ksWarningME[0] = "Oh, Great Caliph! We have terrible news"
	set Main_ksWarningME[1] = "Oh, Great Caliph! We have terrible news"
	set Main_ksWarningME[2] = "Oh, Great Caliph! We have terrible news"
	set Main_ksWarningBZ[0] = "My Basileus, may the God bless you. We have horrific news!"
	set Main_ksWarningBZ[1] = "My Basileus, may the God bless you. We have horrific news!"
	set Main_ksWarningBZ[2] = "My Basileus, may the God bless you. We have horrific news!"
	set Main_ksNoteWE[0] = "Your Majesty, there is something you need to know"
	set Main_ksNoteWE[1] = "The messenger came to us with news. No matter, could I execute him?"
	set Main_ksNoteWE[2] = "Fresh news from the messenger, milord!"
	set Main_ksNoteEE[0] = "Great Prince, a messenger came with news"
	set Main_ksNoteEE[1] = "May the God bless you, Great Prince, we have some news"
	set Main_ksNoteEE[2] = "There is something you should know, Great Prince"
	set Main_ksNoteME[0] = "May Allah bless you, Caliph! We have some news"
	set Main_ksNoteME[1] = "May Allah bless you, Caliph! We have some news"
	set Main_ksNoteME[2] = "May Allah bless you, Caliph! We have some news"
	set Main_ksNoteBZ[0] = "My Basileus, we have some news"
	set Main_ksNoteBZ[1] = "My Basileus, we have some news"
	set Main_ksNoteBZ[2] = "My Basileus, we have some news"
	set Main_ksGoodNewsWE[0] = "Good news indeed, my lord!"
	set Main_ksGoodNewsWE[1] = "The God has blessed us, Your Majesty! We have good news"
	set Main_ksGoodNewsWE[2] = "The messenger with good news came to us. May I torture him a little?"
	set Main_ksGoodNewsEE[0] = "Great news, Prince!"
	set Main_ksGoodNewsEE[1] = "Great news, Prince!"
	set Main_ksGoodNewsEE[2] = "Great news, Prince!"
	set Main_ksGoodNewsME[0] = "The Allah loves us, Caliph! We have great news"
	set Main_ksGoodNewsME[1] = "The Allah loves us, Caliph! We have great news"
	set Main_ksGoodNewsME[2] = "The Allah loves us, Caliph! We have great news"
	set Main_ksGoodNewsBZ[0] = "Good news, my Basileus!"
	set Main_ksGoodNewsBZ[1] = "Good news, my Basileus!"
	set Main_ksGoodNewsBZ[2] = "Good news, my Basileus!"
	set Main_ksAttentionWE[0] = "Your Majesty, important news!"
	set Main_ksAttentionWE[1] = "May the God bless you, my lord. There is somthing you must know!"
	set Main_ksAttentionWE[2] = "There is something that needs your attention, my lord!"
	set Main_ksAttentionEE[0] = "You need to see this, Great Prince!"
	set Main_ksAttentionEE[1] = "You need to see this, Great Prince!"
	set Main_ksAttentionEE[2] = "You need to see this, Great Prince!"
	set Main_ksAttentionME[0] = "My Caliph, there is something you need to know!"
	set Main_ksAttentionME[1] = "My Caliph, there is something you need to know!"
	set Main_ksAttentionME[2] = "My Caliph, there is something you need to know!"
	set Main_ksAttentionBZ[0] = "My Basileus, there is something you need to know!"
	set Main_ksAttentionBZ[1] = "My Basileus, there is something you need to know!"
	set Main_ksAttentionBZ[2] = "My Basileus, there is something you need to know!"
	set ts_0 = 1747988529
	set ts_1 = 1747988530
	set ts_2 = 1747988531
	set ts_3 = 1747989555
	set ts_4 = 1747989297
	set ts_5 = 1747989325
	set ts_6 = 1747989059
	set ts_7 = 1747989060
	set ts_8 = 1747988844
	set ts_9 = 1747989809
	set ts_10 = 1747989589
	set stackPos_2 = "when calling asList in Main, line 157"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	set ll = new_LinkedList("when calling new_LinkedList in LinkedList, line 391")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_0, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_1, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_2, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_3, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_4, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_5, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_6, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_7, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_8, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_9, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_10, "when calling add in LinkedList, line 393")
	set wurst_stack_depth = wurst_stack_depth - 1
	set Main_kCityTypes = ll
	set Main_global_timer = CreateTimer()
	set this_2 = Main_global_timer
	set time = 0.01
	set timerCallBack = ref_function_Main_closure_impl
	call TimerStart(this_2, time, true, timerCallBack)
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_2 = null
	return true
endfunction

function bridge_init_Main takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_Main("Main, line 1")
endfunction

function SetDiploEconomyRangeMax takes nothing returns nothing
	local rect r = bj_mapInitialPlayableArea
	local rect r_2 = r
	local boolexpr filter = null
	local group g_2 = CreateGroup()
	local group g
	local group iterator
	local unit u
	local group this_2
	local group this_3
	local group this_4
	local unit iterUnit
	local unit this_5
	local unit this_6
	local unit whichUnit
	local real acquireRange
	local group this_7
	local group this_8
	local group this_9
	local boolean andLeft
	call GroupEnumUnitsInRect(g_2, r_2, filter)
	call DestroyBoolExpr(filter)
	set g = g_2
	set this_2 = g
	set Group_iterGroup = CreateGroup()
	call ForGroup(this_2, ref_function_Group_closure_impl)
	set iterator = Group_iterGroup
	loop
		set this_3 = iterator
		exitwhen  not (FirstOfGroup(this_3) != null)
		set this_4 = iterator
		set iterUnit = FirstOfGroup(this_4)
		call GroupRemoveUnit(this_4, iterUnit)
		set u = iterUnit
		set this_5 = u
		if GetUnitTypeId(this_5) == 1211118391 then
			set andLeft = true
		else
			set this_6 = u
			set andLeft = GetUnitTypeId(this_6) == 1211118406
		endif
		if andLeft then
			set whichUnit = u
			set acquireRange = Main_INF_REAL
			call SetUnitAcquireRange(whichUnit, acquireRange)
		endif
	endloop
	set this_7 = iterator
	set this_8 = this_7
	call GroupClear(this_8)
	set this_9 = this_7
	call DestroyGroup(this_9)
	set g = null
	set iterator = null
	set u = null
	set r = null
	set r_2 = null
	set filter = null
	set g_2 = null
	set this_2 = null
	set this_3 = null
	set this_4 = null
	set iterUnit = null
	set this_5 = null
	set this_6 = null
	set whichUnit = null
	set this_7 = null
	set this_8 = null
	set this_9 = null
endfunction

function SetPlayersAtStart takes string stackPos returns nothing
	local integer pl_left
	local integer pl_in_ring
	local real rad
	local real pos_x
	local real pos_y
	local player curpl
	local real ang_radians
	local integer i
	local integer temp
	local real this_x
	local real this_y
	local real v_x
	local real v_y
	local real this_radians
	local real this_radians_2
	local integer this_2
	local string stackPos_2
	local boolean Main_PlayerStats_isInGame_result
	local integer this_3
	local integer count
	local integer unitId
	local player whichPlayer
	local location loc
	local location lookAt
	local location locA
	local location locB
	local integer numbers_0
	local integer numbers_1
	local integer minNumber
	local integer cond_result
	local real temp_2
	local real temp_3
	local real temp_4
	local integer temp_5
	local integer temp_6
	local player temp_7
	local location temp_8
	local real tuple_temp
	local real tuple_temp_2
	local real tuple_temp_3
	local real tuple_temp_4
	local real tuple_temp_5
	local real tuple_temp_6
	local real tuple_temp_7
	local real tuple_temp_8
	local real tuple_temp_9
	local real tuple_temp_10
	local real tuple_temp_11
	local real tuple_temp_12
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set pl_left = 24
	set pl_in_ring = 6
	set rad = 100.0
	set tuple_temp = MainInit_SPAWN_POINT_x
	set tuple_temp_2 = MainInit_SPAWN_POINT_y
	set pos_x = tuple_temp
	set pos_y = tuple_temp_2
	set tuple_temp_3 = 0.0
	set ang_radians = tuple_temp_3
	loop
		exitwhen  not (pl_left > 0)
		set i = 1
		set temp = pl_in_ring
		loop
			exitwhen i > temp
			set tuple_temp_4 = i * 6.28318 / pl_in_ring
			set ang_radians = tuple_temp_4
			set tuple_temp_5 = MainInit_SPAWN_POINT_x
			set tuple_temp_6 = MainInit_SPAWN_POINT_y
			set this_x = tuple_temp_5
			set this_y = tuple_temp_6
			set temp_2 = rad
			set tuple_temp_7 = ang_radians
			set this_radians = tuple_temp_7
			set temp_4 = temp_2 * Cos(this_radians)
			set temp_3 = rad
			set tuple_temp_8 = ang_radians
			set this_radians_2 = tuple_temp_8
			set tuple_temp_9 = temp_4
			set tuple_temp_10 = temp_3 * Sin(this_radians_2)
			set v_x = tuple_temp_9
			set v_y = tuple_temp_10
			set tuple_temp_11 = this_x + v_x
			set tuple_temp_12 = this_y + v_y
			set pos_x = tuple_temp_11
			set pos_y = tuple_temp_12
			set curpl = Player_players[24 - pl_left + i - 1]
			set this_2 = Main_player_stats[GetPlayerId(curpl)]
			set stackPos_2 = "when calling isInGame in MainInit, line 47"
			set wurst_stack[wurst_stack_depth] = stackPos_2
			set wurst_stack_depth = wurst_stack_depth + 1
			if PlayerStats_typeId[this_2] == 0 then
				if this_2 == 0 then
					call error("Nullpointer exception when calling PlayerStats.isInGame", "when calling error in Main, line 328")
				else
					call error("Called PlayerStats.isInGame on invalid object.", "when calling error in Main, line 328")
				endif
			endif
			set this_3 = this_2
			set Main_PlayerStats_isInGame_result = PlayerStats_is_in_game[this_3]
			set wurst_stack_depth = wurst_stack_depth - 1
			if Main_PlayerStats_isInGame_result then
				set count = 1
				set unitId = 1747988554
				set whichPlayer = curpl
				set loc = Location(pos_x, pos_y)
				set lookAt = Location(MainInit_SPAWN_POINT_x, MainInit_SPAWN_POINT_y)
				set temp_5 = count
				set temp_6 = unitId
				set temp_7 = whichPlayer
				set temp_8 = loc
				set locA = loc
				set locB = lookAt
				call CreateNUnitsAtLoc(temp_5, temp_6, temp_7, temp_8, bj_RADTODEG * Atan2(GetLocationY(locB) - GetLocationY(locA), GetLocationX(locB) - GetLocationX(locA)))
			endif
			set i = i + 1
		endloop
		set rad = rad + 50.0
		set pl_left = pl_left - pl_in_ring
		set pl_in_ring = pl_in_ring + 2
		set numbers_0 = pl_left
		set numbers_1 = pl_in_ring
		set minNumber = 2147483647
		if numbers_0 < minNumber then
			set cond_result = numbers_0
		else
			set cond_result = minNumber
		endif
		set minNumber = cond_result
		if numbers_1 < minNumber then
			set cond_result = numbers_1
		else
			set cond_result = minNumber
		endif
		set minNumber = cond_result
		set pl_in_ring = minNumber
	endloop
	set wurst_stack_depth = wurst_stack_depth - 1
	set curpl = null
	set whichPlayer = null
	set loc = null
	set lookAt = null
	set locA = null
	set locB = null
	set temp_7 = null
	set temp_8 = null
endfunction

function construct_City takes integer this_2, unit u, string n, integer f_id, string stackPos returns nothing
	local integer clVar
	local playerunitevent temp
	local unit this_3
	local unit this_4
	local unit this_5
	local player this_6
	local unit this_7
	local integer this_8
	local string new_name
	local string stackPos_2
	local integer this_9
	local string new_name_2
	local string this_10
	local integer start
	local integer stop
	local string stackPos_3
	local integer this_11
	local integer this_12
	local eventid eventId
	local integer listener
	local string stackPos_4
	local eventid this_13
	local string stackPos_5
	local integer id
	local handle this_14
	local real temp_2
	local real tuple_temp
	local real tuple_temp_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set City_city_unit[this_2] = u
	set this_3 = City_city_unit[this_2]
	set this_4 = this_3
	set temp_2 = GetUnitX(this_4)
	set this_5 = this_3
	set tuple_temp = temp_2
	set tuple_temp_2 = GetUnitY(this_5)
	set City_city_pos_x[this_2] = tuple_temp
	set City_city_pos_y[this_2] = tuple_temp_2
	set City_city_name[this_2] = n
	set City_force_id[this_2] = f_id
	set this_7 = City_city_unit[this_2]
	set this_6 = GetOwningPlayer(this_7)
	call GetPlayerId(this_6)
	set this_8 = this_2
	set new_name = n
	set stackPos_2 = "when calling ChangeCityName in Main, line 261"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if City_typeId[this_8] == 0 then
		if this_8 == 0 then
			call error("Nullpointer exception when calling City.ChangeCityName", "when calling error in Main, line 205")
		else
			call error("Called City.ChangeCityName on invalid object.", "when calling error in Main, line 205")
		endif
	endif
	set this_9 = this_8
	set new_name_2 = new_name
	set this_10 = new_name_2
	set start = 0
	set stop = 24
	set City_city_name[this_9] = SubString(this_10, start, stop)
	set wurst_stack_depth = wurst_stack_depth - 1
	set Main_cityCount = Main_cityCount + 1
	set temp = EVENT_PLAYER_UNIT_UPGRADE_FINISH
	set stackPos_3 = "when calling alloc_Closure in Main, line 267"
	set wurst_stack[wurst_stack_depth] = stackPos_3
	set wurst_stack_depth = wurst_stack_depth + 1
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_11 = EventListener_maxIndex
			set EventListener_typeId[this_11] = 648
		else
			call error("Out of memory: Could not create Closure.", "when calling error in Main, line 267")
			set this_11 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_11 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_11] = 648
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set clVar = this_11
	set this_12 = clVar
	set EventListener_eventId[this_12] = 0
	set EventListener_next[this_12] = 0
	set EventListener_prev[this_12] = 0
	set this[clVar] = this_2
	set eventId = temp
	set listener = clVar
	set stackPos_4 = "when calling add in Main, line 267"
	set wurst_stack[wurst_stack_depth] = stackPos_4
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_13 = eventId
	set stackPos_5 = "when calling toIntId in ClosureEvents, line 111"
	set wurst_stack[wurst_stack_depth] = stackPos_5
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_14 = this_13
	set id = ClosureEvents_eventidToIndex[GetHandleId(this_14)]
	if id == 0 then
		set id = registerEventId(this_13, "when calling registerEventId in ClosureEvents, line 228")
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set EventListener_eventId[listener] = id
	if EventListener_generalListenersFirsts[EventListener_eventId[listener]] != 0 then
		set EventListener_prev[EventListener_generalListenersFirsts[EventListener_eventId[listener]]] = listener
		set EventListener_next[listener] = EventListener_generalListenersFirsts[EventListener_eventId[listener]]
	endif
	set EventListener_generalListenersFirsts[EventListener_eventId[listener]] = listener
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set temp = null
	set this_3 = null
	set this_4 = null
	set this_5 = null
	set this_6 = null
	set this_7 = null
	set eventId = null
	set this_13 = null
	set this_14 = null
endfunction

function new_City takes unit u, string n, integer f_id, string stackPos returns integer
	local integer this_2
	local string stackPos_2
	local integer this_3
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackPos_2 = "when calling City in Main, line 252"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if City_firstFree == 0 then
		if City_maxIndex < 32768 then
			set City_maxIndex = City_maxIndex + 1
			set this_3 = City_maxIndex
			set City_typeId[this_3] = 639
		else
			call error("Out of memory: Could not create City.", "when calling error in Main, line 191")
			set this_3 = 0
		endif
	else
		set City_firstFree = City_firstFree - 1
		set this_3 = City_nextFree[City_firstFree]
		set City_typeId[this_3] = 639
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_2 = this_3
	call construct_City(this_2, u, n, f_id, "when calling construct_City in Main, line 252")
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_2
endfunction

function SetupCities takes string stackPos returns nothing
	local group g
	local unit u
	local rect r
	local rect r_2
	local boolexpr filter
	local group g_2
	local group this_2
	local unit iterUnit
	local rect r_3
	local rect r_4
	local boolexpr filter_2
	local group g_3
	local group this_3
	local unit iterUnit_2
	local rect r_5
	local rect r_6
	local boolexpr filter_3
	local group g_4
	local group this_4
	local unit iterUnit_3
	local rect r_7
	local rect r_8
	local boolexpr filter_4
	local group g_5
	local group this_5
	local unit iterUnit_4
	local rect r_9
	local rect r_10
	local boolexpr filter_5
	local group g_6
	local group this_6
	local unit iterUnit_5
	local rect r_11
	local rect r_12
	local boolexpr filter_6
	local group g_7
	local group this_7
	local unit iterUnit_6
	local rect r_13
	local rect r_14
	local boolexpr filter_7
	local group g_8
	local group this_8
	local unit iterUnit_7
	local rect r_15
	local rect r_16
	local boolexpr filter_8
	local group g_9
	local group this_9
	local unit iterUnit_8
	local rect r_17
	local rect r_18
	local boolexpr filter_9
	local group g_10
	local group this_10
	local unit iterUnit_9
	local rect r_19
	local rect r_20
	local boolexpr filter_10
	local group g_11
	local group this_11
	local unit iterUnit_10
	local rect r_21
	local rect r_22
	local boolexpr filter_11
	local group g_12
	local group this_12
	local unit iterUnit_11
	local rect r_23
	local rect r_24
	local boolexpr filter_12
	local group g_13
	local group this_13
	local unit iterUnit_12
	local rect r_25
	local rect r_26
	local boolexpr filter_13
	local group g_14
	local group this_14
	local unit iterUnit_13
	local rect r_27
	local rect r_28
	local boolexpr filter_14
	local group g_15
	local group this_15
	local unit iterUnit_14
	local rect r_29
	local rect r_30
	local boolexpr filter_15
	local group g_16
	local group this_16
	local unit iterUnit_15
	local rect r_31
	local rect r_32
	local boolexpr filter_16
	local group g_17
	local group this_17
	local unit iterUnit_16
	local rect r_33
	local rect r_34
	local boolexpr filter_17
	local group g_18
	local group this_18
	local unit iterUnit_17
	local rect r_35
	local rect r_36
	local boolexpr filter_18
	local group g_19
	local group this_19
	local unit iterUnit_18
	local rect r_37
	local rect r_38
	local boolexpr filter_19
	local group g_20
	local group this_20
	local unit iterUnit_19
	local rect r_39
	local rect r_40
	local boolexpr filter_20
	local group g_21
	local group this_21
	local unit iterUnit_20
	local rect r_41
	local rect r_42
	local boolexpr filter_21
	local group g_22
	local group this_22
	local unit iterUnit_21
	local rect r_43
	local rect r_44
	local boolexpr filter_22
	local group g_23
	local group this_23
	local unit iterUnit_22
	local rect r_45
	local rect r_46
	local boolexpr filter_23
	local group g_24
	local group this_24
	local unit iterUnit_23
	local rect r_47
	local rect r_48
	local boolexpr filter_24
	local group g_25
	local group this_25
	local unit iterUnit_24
	local rect r_49
	local rect r_50
	local boolexpr filter_25
	local group g_26
	local group this_26
	local unit iterUnit_25
	local rect r_51
	local rect r_52
	local boolexpr filter_26
	local group g_27
	local group this_27
	local unit iterUnit_26
	local rect r_53
	local rect r_54
	local boolexpr filter_27
	local group g_28
	local group this_28
	local unit iterUnit_27
	local rect r_55
	local rect r_56
	local boolexpr filter_28
	local group g_29
	local group this_29
	local unit iterUnit_28
	local rect r_57
	local rect r_58
	local boolexpr filter_29
	local group g_30
	local group this_30
	local unit iterUnit_29
	local rect r_59
	local rect r_60
	local boolexpr filter_30
	local group g_31
	local group this_31
	local unit iterUnit_30
	local rect r_61
	local rect r_62
	local boolexpr filter_31
	local group g_32
	local group this_32
	local unit iterUnit_31
	local rect r_63
	local rect r_64
	local boolexpr filter_32
	local group g_33
	local group this_33
	local unit iterUnit_32
	local rect r_65
	local rect r_66
	local boolexpr filter_33
	local group g_34
	local group this_34
	local unit iterUnit_33
	local rect r_67
	local rect r_68
	local boolexpr filter_34
	local group g_35
	local group this_35
	local unit iterUnit_34
	local rect r_69
	local rect r_70
	local boolexpr filter_35
	local group g_36
	local group this_36
	local unit iterUnit_35
	local rect r_71
	local rect r_72
	local boolexpr filter_36
	local group g_37
	local group this_37
	local unit iterUnit_36
	local rect r_73
	local rect r_74
	local boolexpr filter_37
	local group g_38
	local group this_38
	local unit iterUnit_37
	local rect r_75
	local rect r_76
	local boolexpr filter_38
	local group g_39
	local group this_39
	local unit iterUnit_38
	local rect r_77
	local rect r_78
	local boolexpr filter_39
	local group g_40
	local group this_40
	local unit iterUnit_39
	local rect r_79
	local rect r_80
	local boolexpr filter_40
	local group g_41
	local group this_41
	local unit iterUnit_40
	local rect r_81
	local rect r_82
	local boolexpr filter_41
	local group g_42
	local group this_42
	local unit iterUnit_41
	local rect r_83
	local rect r_84
	local boolexpr filter_42
	local group g_43
	local group this_43
	local unit iterUnit_42
	local rect r_85
	local rect r_86
	local boolexpr filter_43
	local group g_44
	local group this_44
	local unit iterUnit_43
	local rect r_87
	local rect r_88
	local boolexpr filter_44
	local group g_45
	local group this_45
	local unit iterUnit_44
	local rect r_89
	local rect r_90
	local boolexpr filter_45
	local group g_46
	local group this_46
	local unit iterUnit_45
	local rect r_91
	local rect r_92
	local boolexpr filter_46
	local group g_47
	local group this_47
	local unit iterUnit_46
	local rect r_93
	local rect r_94
	local boolexpr filter_47
	local group g_48
	local group this_48
	local unit iterUnit_47
	local rect r_95
	local rect r_96
	local boolexpr filter_48
	local group g_49
	local group this_49
	local unit iterUnit_48
	local rect r_97
	local rect r_98
	local boolexpr filter_49
	local group g_50
	local group this_50
	local unit iterUnit_49
	local rect r_99
	local rect r_100
	local boolexpr filter_50
	local group g_51
	local group this_51
	local unit iterUnit_50
	local rect r_101
	local rect r_102
	local boolexpr filter_51
	local group g_52
	local group this_52
	local unit iterUnit_51
	local rect r_103
	local rect r_104
	local boolexpr filter_52
	local group g_53
	local group this_53
	local unit iterUnit_52
	local rect r_105
	local rect r_106
	local boolexpr filter_53
	local group g_54
	local group this_54
	local unit iterUnit_53
	local rect r_107
	local rect r_108
	local boolexpr filter_54
	local group g_55
	local group this_55
	local unit iterUnit_54
	local rect r_109
	local rect r_110
	local boolexpr filter_55
	local group g_56
	local group this_56
	local unit iterUnit_55
	local rect r_111
	local rect r_112
	local boolexpr filter_56
	local group g_57
	local group this_57
	local unit iterUnit_56
	local rect r_113
	local rect r_114
	local boolexpr filter_57
	local group g_58
	local group this_58
	local unit iterUnit_57
	local rect r_115
	local rect r_116
	local boolexpr filter_58
	local group g_59
	local group this_59
	local unit iterUnit_58
	local rect r_117
	local rect r_118
	local boolexpr filter_59
	local group g_60
	local group this_60
	local unit iterUnit_59
	local rect r_119
	local rect r_120
	local boolexpr filter_60
	local group g_61
	local group this_61
	local unit iterUnit_60
	local rect r_121
	local rect r_122
	local boolexpr filter_61
	local group g_62
	local group this_62
	local unit iterUnit_61
	local rect r_123
	local rect r_124
	local boolexpr filter_62
	local group g_63
	local group this_63
	local unit iterUnit_62
	local rect r_125
	local rect r_126
	local boolexpr filter_63
	local group g_64
	local group this_64
	local unit iterUnit_63
	local rect r_127
	local rect r_128
	local boolexpr filter_64
	local group g_65
	local group this_65
	local unit iterUnit_64
	local rect r_129
	local rect r_130
	local boolexpr filter_65
	local group g_66
	local group this_66
	local unit iterUnit_65
	local rect r_131
	local rect r_132
	local boolexpr filter_66
	local group g_67
	local group this_67
	local unit iterUnit_66
	local rect r_133
	local rect r_134
	local boolexpr filter_67
	local group g_68
	local group this_68
	local unit iterUnit_67
	local rect r_135
	local rect r_136
	local boolexpr filter_68
	local group g_69
	local group this_69
	local unit iterUnit_68
	local rect r_137
	local rect r_138
	local boolexpr filter_69
	local group g_70
	local group this_70
	local unit iterUnit_69
	local rect r_139
	local rect r_140
	local boolexpr filter_70
	local group g_71
	local group this_71
	local unit iterUnit_70
	local rect r_141
	local rect r_142
	local boolexpr filter_71
	local group g_72
	local group this_72
	local unit iterUnit_71
	local rect r_143
	local rect r_144
	local boolexpr filter_72
	local group g_73
	local group this_73
	local unit iterUnit_72
	local rect r_145
	local rect r_146
	local boolexpr filter_73
	local group g_74
	local group this_74
	local unit iterUnit_73
	local rect r_147
	local rect r_148
	local boolexpr filter_74
	local group g_75
	local group this_75
	local unit iterUnit_74
	local rect r_149
	local rect r_150
	local boolexpr filter_75
	local group g_76
	local group this_76
	local unit iterUnit_75
	local rect r_151
	local rect r_152
	local boolexpr filter_76
	local group g_77
	local group this_77
	local unit iterUnit_76
	local rect r_153
	local rect r_154
	local boolexpr filter_77
	local group g_78
	local group this_78
	local unit iterUnit_77
	local rect r_155
	local rect r_156
	local boolexpr filter_78
	local group g_79
	local group this_79
	local unit iterUnit_78
	local rect r_157
	local rect r_158
	local boolexpr filter_79
	local group g_80
	local group this_80
	local unit iterUnit_79
	local rect r_159
	local rect r_160
	local boolexpr filter_80
	local group g_81
	local group this_81
	local unit iterUnit_80
	local rect r_161
	local rect r_162
	local boolexpr filter_81
	local group g_82
	local group this_82
	local unit iterUnit_81
	local rect r_163
	local rect r_164
	local boolexpr filter_82
	local group g_83
	local group this_83
	local unit iterUnit_82
	local rect r_165
	local rect r_166
	local boolexpr filter_83
	local group g_84
	local group this_84
	local unit iterUnit_83
	local rect r_167
	local rect r_168
	local boolexpr filter_84
	local group g_85
	local group this_85
	local unit iterUnit_84
	local rect r_169
	local rect r_170
	local boolexpr filter_85
	local group g_86
	local group this_86
	local unit iterUnit_85
	local rect r_171
	local rect r_172
	local boolexpr filter_86
	local group g_87
	local group this_87
	local unit iterUnit_86
	local rect r_173
	local rect r_174
	local boolexpr filter_87
	local group g_88
	local group this_88
	local unit iterUnit_87
	local rect r_175
	local rect r_176
	local boolexpr filter_88
	local group g_89
	local group this_89
	local unit iterUnit_88
	local rect r_177
	local rect r_178
	local boolexpr filter_89
	local group g_90
	local group this_90
	local unit iterUnit_89
	local rect r_179
	local rect r_180
	local boolexpr filter_90
	local group g_91
	local group this_91
	local unit iterUnit_90
	local rect r_181
	local rect r_182
	local boolexpr filter_91
	local group g_92
	local group this_92
	local unit iterUnit_91
	local rect r_183
	local rect r_184
	local boolexpr filter_92
	local group g_93
	local group this_93
	local unit iterUnit_92
	local rect r_185
	local rect r_186
	local boolexpr filter_93
	local group g_94
	local group this_94
	local unit iterUnit_93
	local rect r_187
	local rect r_188
	local boolexpr filter_94
	local group g_95
	local group this_95
	local unit iterUnit_94
	local rect r_189
	local rect r_190
	local boolexpr filter_95
	local group g_96
	local group this_96
	local unit iterUnit_95
	local rect r_191
	local rect r_192
	local boolexpr filter_96
	local group g_97
	local group this_97
	local unit iterUnit_96
	local rect r_193
	local rect r_194
	local boolexpr filter_97
	local group g_98
	local group this_98
	local unit iterUnit_97
	local rect r_195
	local rect r_196
	local boolexpr filter_98
	local group g_99
	local group this_99
	local unit iterUnit_98
	local rect r_197
	local rect r_198
	local boolexpr filter_99
	local group g_100
	local group this_100
	local unit iterUnit_99
	local rect r_199
	local rect r_200
	local boolexpr filter_100
	local group g_101
	local group this_101
	local unit iterUnit_100
	local rect r_201
	local rect r_202
	local boolexpr filter_101
	local group g_102
	local group this_102
	local unit iterUnit_101
	local rect r_203
	local rect r_204
	local boolexpr filter_102
	local group g_103
	local group this_103
	local unit iterUnit_102
	local rect r_205
	local rect r_206
	local boolexpr filter_103
	local group g_104
	local group this_104
	local unit iterUnit_103
	local rect r_207
	local rect r_208
	local boolexpr filter_104
	local group g_105
	local group this_105
	local unit iterUnit_104
	local rect r_209
	local rect r_210
	local boolexpr filter_105
	local group g_106
	local group this_106
	local unit iterUnit_105
	local rect r_211
	local rect r_212
	local boolexpr filter_106
	local group g_107
	local group this_107
	local unit iterUnit_106
	local rect r_213
	local rect r_214
	local boolexpr filter_107
	local group g_108
	local group this_108
	local unit iterUnit_107
	local rect r_215
	local rect r_216
	local boolexpr filter_108
	local group g_109
	local group this_109
	local unit iterUnit_108
	local rect r_217
	local rect r_218
	local boolexpr filter_109
	local group g_110
	local group this_110
	local unit iterUnit_109
	local rect r_219
	local rect r_220
	local boolexpr filter_110
	local group g_111
	local group this_111
	local unit iterUnit_110
	local rect r_221
	local rect r_222
	local boolexpr filter_111
	local group g_112
	local group this_112
	local unit iterUnit_111
	local rect r_223
	local rect r_224
	local boolexpr filter_112
	local group g_113
	local group this_113
	local unit iterUnit_112
	local rect r_225
	local rect r_226
	local boolexpr filter_113
	local group g_114
	local group this_114
	local unit iterUnit_113
	local rect r_227
	local rect r_228
	local boolexpr filter_114
	local group g_115
	local group this_115
	local unit iterUnit_114
	local rect r_229
	local rect r_230
	local boolexpr filter_115
	local group g_116
	local group this_116
	local unit iterUnit_115
	local rect r_231
	local rect r_232
	local boolexpr filter_116
	local group g_117
	local group this_117
	local unit iterUnit_116
	local rect r_233
	local rect r_234
	local boolexpr filter_117
	local group g_118
	local group this_118
	local unit iterUnit_117
	local rect r_235
	local rect r_236
	local boolexpr filter_118
	local group g_119
	local group this_119
	local unit iterUnit_118
	local rect r_237
	local rect r_238
	local boolexpr filter_119
	local group g_120
	local group this_120
	local unit iterUnit_119
	local rect r_239
	local rect r_240
	local boolexpr filter_120
	local group g_121
	local group this_121
	local unit iterUnit_120
	local rect r_241
	local rect r_242
	local boolexpr filter_121
	local group g_122
	local group this_122
	local unit iterUnit_121
	local rect r_243
	local rect r_244
	local boolexpr filter_122
	local group g_123
	local group this_123
	local unit iterUnit_122
	local rect r_245
	local rect r_246
	local boolexpr filter_123
	local group g_124
	local group this_124
	local unit iterUnit_123
	local rect r_247
	local rect r_248
	local boolexpr filter_124
	local group g_125
	local group this_125
	local unit iterUnit_124
	local rect r_249
	local rect r_250
	local boolexpr filter_125
	local group g_126
	local group this_126
	local unit iterUnit_125
	local rect r_251
	local rect r_252
	local boolexpr filter_126
	local group g_127
	local group this_127
	local unit iterUnit_126
	local rect r_253
	local rect r_254
	local boolexpr filter_127
	local group g_128
	local group this_128
	local unit iterUnit_127
	local rect r_255
	local rect r_256
	local boolexpr filter_128
	local group g_129
	local group this_129
	local unit iterUnit_128
	local rect r_257
	local rect r_258
	local boolexpr filter_129
	local group g_130
	local group this_130
	local unit iterUnit_129
	local rect r_259
	local rect r_260
	local boolexpr filter_130
	local group g_131
	local group this_131
	local unit iterUnit_130
	local rect r_261
	local rect r_262
	local boolexpr filter_131
	local group g_132
	local group this_132
	local unit iterUnit_131
	local rect r_263
	local rect r_264
	local boolexpr filter_132
	local group g_133
	local group this_133
	local unit iterUnit_132
	local rect r_265
	local rect r_266
	local boolexpr filter_133
	local group g_134
	local group this_134
	local unit iterUnit_133
	local rect r_267
	local rect r_268
	local boolexpr filter_134
	local group g_135
	local group this_135
	local unit iterUnit_134
	local rect r_269
	local rect r_270
	local boolexpr filter_135
	local group g_136
	local group this_136
	local unit iterUnit_135
	local rect r_271
	local rect r_272
	local boolexpr filter_136
	local group g_137
	local group this_137
	local unit iterUnit_136
	local rect r_273
	local rect r_274
	local boolexpr filter_137
	local group g_138
	local group this_138
	local unit iterUnit_137
	local rect r_275
	local rect r_276
	local boolexpr filter_138
	local group g_139
	local group this_139
	local unit iterUnit_138
	local rect r_277
	local rect r_278
	local boolexpr filter_139
	local group g_140
	local group this_140
	local unit iterUnit_139
	local rect r_279
	local rect r_280
	local boolexpr filter_140
	local group g_141
	local group this_141
	local unit iterUnit_140
	local rect r_281
	local rect r_282
	local boolexpr filter_141
	local group g_142
	local group this_142
	local unit iterUnit_141
	local rect r_283
	local rect r_284
	local boolexpr filter_142
	local group g_143
	local group this_143
	local unit iterUnit_142
	local rect r_285
	local rect r_286
	local boolexpr filter_143
	local group g_144
	local group this_144
	local unit iterUnit_143
	local rect r_287
	local rect r_288
	local boolexpr filter_144
	local group g_145
	local group this_145
	local unit iterUnit_144
	local rect r_289
	local rect r_290
	local boolexpr filter_145
	local group g_146
	local group this_146
	local unit iterUnit_145
	local rect r_291
	local rect r_292
	local boolexpr filter_146
	local group g_147
	local group this_147
	local unit iterUnit_146
	local rect r_293
	local rect r_294
	local boolexpr filter_147
	local group g_148
	local group this_148
	local unit iterUnit_147
	local rect r_295
	local rect r_296
	local boolexpr filter_148
	local group g_149
	local group this_149
	local unit iterUnit_148
	local rect r_297
	local rect r_298
	local boolexpr filter_149
	local group g_150
	local group this_150
	local unit iterUnit_149
	local rect r_299
	local rect r_300
	local boolexpr filter_150
	local group g_151
	local group this_151
	local unit iterUnit_150
	local rect r_301
	local rect r_302
	local boolexpr filter_151
	local group g_152
	local group this_152
	local unit iterUnit_151
	local rect r_303
	local rect r_304
	local boolexpr filter_152
	local group g_153
	local group this_153
	local unit iterUnit_152
	local rect r_305
	local rect r_306
	local boolexpr filter_153
	local group g_154
	local group this_154
	local unit iterUnit_153
	local rect r_307
	local rect r_308
	local boolexpr filter_154
	local group g_155
	local group this_155
	local unit iterUnit_154
	local rect r_309
	local rect r_310
	local boolexpr filter_155
	local group g_156
	local group this_156
	local unit iterUnit_155
	local rect r_311
	local rect r_312
	local boolexpr filter_156
	local group g_157
	local group this_157
	local unit iterUnit_156
	local rect r_313
	local rect r_314
	local boolexpr filter_157
	local group g_158
	local group this_158
	local unit iterUnit_157
	local rect r_315
	local rect r_316
	local boolexpr filter_158
	local group g_159
	local group this_159
	local unit iterUnit_158
	local rect r_317
	local rect r_318
	local boolexpr filter_159
	local group g_160
	local group this_160
	local unit iterUnit_159
	local rect r_319
	local rect r_320
	local boolexpr filter_160
	local group g_161
	local group this_161
	local unit iterUnit_160
	local rect r_321
	local rect r_322
	local boolexpr filter_161
	local group g_162
	local group this_162
	local unit iterUnit_161
	local rect r_323
	local rect r_324
	local boolexpr filter_162
	local group g_163
	local group this_163
	local unit iterUnit_162
	local rect r_325
	local rect r_326
	local boolexpr filter_163
	local group g_164
	local group this_164
	local unit iterUnit_163
	local rect r_327
	local rect r_328
	local boolexpr filter_164
	local group g_165
	local group this_165
	local unit iterUnit_164
	local rect r_329
	local rect r_330
	local boolexpr filter_165
	local group g_166
	local group this_166
	local unit iterUnit_165
	local rect r_331
	local rect r_332
	local boolexpr filter_166
	local group g_167
	local group this_167
	local unit iterUnit_166
	local rect r_333
	local rect r_334
	local boolexpr filter_167
	local group g_168
	local group this_168
	local unit iterUnit_167
	local rect r_335
	local rect r_336
	local boolexpr filter_168
	local group g_169
	local group this_169
	local unit iterUnit_168
	local rect r_337
	local rect r_338
	local boolexpr filter_169
	local group g_170
	local group this_170
	local unit iterUnit_169
	local rect r_339
	local rect r_340
	local boolexpr filter_170
	local group g_171
	local group this_171
	local unit iterUnit_170
	local rect r_341
	local rect r_342
	local boolexpr filter_171
	local group g_172
	local group this_172
	local unit iterUnit_171
	local rect r_343
	local rect r_344
	local boolexpr filter_172
	local group g_173
	local group this_173
	local unit iterUnit_172
	local rect r_345
	local rect r_346
	local boolexpr filter_173
	local group g_174
	local group this_174
	local unit iterUnit_173
	local rect r_347
	local rect r_348
	local boolexpr filter_174
	local group g_175
	local group this_175
	local unit iterUnit_174
	local rect r_349
	local rect r_350
	local boolexpr filter_175
	local group g_176
	local group this_176
	local unit iterUnit_175
	local rect r_351
	local rect r_352
	local boolexpr filter_176
	local group g_177
	local group this_177
	local unit iterUnit_176
	local rect r_353
	local rect r_354
	local boolexpr filter_177
	local group g_178
	local group this_178
	local unit iterUnit_177
	local rect r_355
	local rect r_356
	local boolexpr filter_178
	local group g_179
	local group this_179
	local unit iterUnit_178
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set r = gg_rct_CITY_BYZ_Adrianopolis
	set r_2 = r
	set filter = null
	set g_2 = CreateGroup()
	call GroupEnumUnitsInRect(g_2, r_2, filter)
	call DestroyBoolExpr(filter)
	set g = g_2
	set this_2 = g
	set iterUnit = FirstOfGroup(this_2)
	call GroupRemoveUnit(this_2, iterUnit)
	set u = iterUnit
	set Main_cities[Main_cityCount] = new_City(u, "Adrianopolis", 3, "when calling new_City in MainInit, line 72")
	set r_3 = gg_rct_CITY_BYZ_Arta
	set r_4 = r_3
	set filter_2 = null
	set g_3 = CreateGroup()
	call GroupEnumUnitsInRect(g_3, r_4, filter_2)
	call DestroyBoolExpr(filter_2)
	set g = g_3
	set this_3 = g
	set iterUnit_2 = FirstOfGroup(this_3)
	call GroupRemoveUnit(this_3, iterUnit_2)
	set u = iterUnit_2
	set Main_cities[Main_cityCount] = new_City(u, "Arta", 3, "when calling new_City in MainInit, line 75")
	set r_5 = gg_rct_CITY_BYZ_Athens
	set r_6 = r_5
	set filter_3 = null
	set g_4 = CreateGroup()
	call GroupEnumUnitsInRect(g_4, r_6, filter_3)
	call DestroyBoolExpr(filter_3)
	set g = g_4
	set this_4 = g
	set iterUnit_3 = FirstOfGroup(this_4)
	call GroupRemoveUnit(this_4, iterUnit_3)
	set u = iterUnit_3
	set Main_cities[Main_cityCount] = new_City(u, "Athens", 3, "when calling new_City in MainInit, line 78")
	set r_7 = gg_rct_CITY_BYZ_Balkan
	set r_8 = r_7
	set filter_4 = null
	set g_5 = CreateGroup()
	call GroupEnumUnitsInRect(g_5, r_8, filter_4)
	call DestroyBoolExpr(filter_4)
	set g = g_5
	set this_5 = g
	set iterUnit_4 = FirstOfGroup(this_5)
	call GroupRemoveUnit(this_5, iterUnit_4)
	set u = iterUnit_4
	set Main_cities[Main_cityCount] = new_City(u, "Ragusa", 3, "when calling new_City in MainInit, line 81")
	set r_9 = gg_rct_CITY_BYZ_Canakkale
	set r_10 = r_9
	set filter_5 = null
	set g_6 = CreateGroup()
	call GroupEnumUnitsInRect(g_6, r_10, filter_5)
	call DestroyBoolExpr(filter_5)
	set g = g_6
	set this_6 = g
	set iterUnit_5 = FirstOfGroup(this_6)
	call GroupRemoveUnit(this_6, iterUnit_5)
	set u = iterUnit_5
	set Main_cities[Main_cityCount] = new_City(u, "Canakkale", 3, "when calling new_City in MainInit, line 84")
	set r_11 = gg_rct_CITY_BYZ_Candia
	set r_12 = r_11
	set filter_6 = null
	set g_7 = CreateGroup()
	call GroupEnumUnitsInRect(g_7, r_12, filter_6)
	call DestroyBoolExpr(filter_6)
	set g = g_7
	set this_7 = g
	set iterUnit_6 = FirstOfGroup(this_7)
	call GroupRemoveUnit(this_7, iterUnit_6)
	set u = iterUnit_6
	set Main_cities[Main_cityCount] = new_City(u, "Candia", 3, "when calling new_City in MainInit, line 87")
	set r_13 = gg_rct_CITY_BYZ_Constantinople
	set r_14 = r_13
	set filter_7 = null
	set g_8 = CreateGroup()
	call GroupEnumUnitsInRect(g_8, r_14, filter_7)
	call DestroyBoolExpr(filter_7)
	set g = g_8
	set this_8 = g
	set iterUnit_7 = FirstOfGroup(this_8)
	call GroupRemoveUnit(this_8, iterUnit_7)
	set u = iterUnit_7
	set Main_cities[Main_cityCount] = new_City(u, "Constantinople", 3, "when calling new_City in MainInit, line 90")
	set r_15 = gg_rct_CITY_BYZ_Corinth
	set r_16 = r_15
	set filter_8 = null
	set g_9 = CreateGroup()
	call GroupEnumUnitsInRect(g_9, r_16, filter_8)
	call DestroyBoolExpr(filter_8)
	set g = g_9
	set this_9 = g
	set iterUnit_8 = FirstOfGroup(this_9)
	call GroupRemoveUnit(this_9, iterUnit_8)
	set u = iterUnit_8
	set Main_cities[Main_cityCount] = new_City(u, "Corinth", 3, "when calling new_City in MainInit, line 93")
	set r_17 = gg_rct_CITY_BYZ_Durrazo
	set r_18 = r_17
	set filter_9 = null
	set g_10 = CreateGroup()
	call GroupEnumUnitsInRect(g_10, r_18, filter_9)
	call DestroyBoolExpr(filter_9)
	set g = g_10
	set this_10 = g
	set iterUnit_9 = FirstOfGroup(this_10)
	call GroupRemoveUnit(this_10, iterUnit_9)
	set u = iterUnit_9
	set Main_cities[Main_cityCount] = new_City(u, "Durazzo", 3, "when calling new_City in MainInit, line 96")
	set r_19 = gg_rct_CITY_BYZ_Fictional
	set r_20 = r_19
	set filter_10 = null
	set g_11 = CreateGroup()
	call GroupEnumUnitsInRect(g_11, r_20, filter_10)
	call DestroyBoolExpr(filter_10)
	set g = g_11
	set this_11 = g
	set iterUnit_10 = FirstOfGroup(this_11)
	call GroupRemoveUnit(this_11, iterUnit_10)
	set u = iterUnit_10
	set Main_cities[Main_cityCount] = new_City(u, "Nikomedeia", 3, "when calling new_City in MainInit, line 99")
	set r_21 = gg_rct_CITY_BYZ_Kutaisi
	set r_22 = r_21
	set filter_11 = null
	set g_12 = CreateGroup()
	call GroupEnumUnitsInRect(g_12, r_22, filter_11)
	call DestroyBoolExpr(filter_11)
	set g = g_12
	set this_12 = g
	set iterUnit_11 = FirstOfGroup(this_12)
	call GroupRemoveUnit(this_12, iterUnit_11)
	set u = iterUnit_11
	set Main_cities[Main_cityCount] = new_City(u, "Kutaisi", 3, "when calling new_City in MainInit, line 102")
	set r_23 = gg_rct_CITY_BYZ_Nicae
	set r_24 = r_23
	set filter_12 = null
	set g_13 = CreateGroup()
	call GroupEnumUnitsInRect(g_13, r_24, filter_12)
	call DestroyBoolExpr(filter_12)
	set g = g_13
	set this_13 = g
	set iterUnit_12 = FirstOfGroup(this_13)
	call GroupRemoveUnit(this_13, iterUnit_12)
	set u = iterUnit_12
	set Main_cities[Main_cityCount] = new_City(u, "Nicae", 3, "when calling new_City in MainInit, line 105")
	set r_25 = gg_rct_CITY_BYZ_Nicosia
	set r_26 = r_25
	set filter_13 = null
	set g_14 = CreateGroup()
	call GroupEnumUnitsInRect(g_14, r_26, filter_13)
	call DestroyBoolExpr(filter_13)
	set g = g_14
	set this_14 = g
	set iterUnit_13 = FirstOfGroup(this_14)
	call GroupRemoveUnit(this_14, iterUnit_13)
	set u = iterUnit_13
	set Main_cities[Main_cityCount] = new_City(u, "Nicosia", 3, "when calling new_City in MainInit, line 108")
	set r_27 = gg_rct_CITY_BYZ_Rhodes
	set r_28 = r_27
	set filter_14 = null
	set g_15 = CreateGroup()
	call GroupEnumUnitsInRect(g_15, r_28, filter_14)
	call DestroyBoolExpr(filter_14)
	set g = g_15
	set this_15 = g
	set iterUnit_14 = FirstOfGroup(this_15)
	call GroupRemoveUnit(this_15, iterUnit_14)
	set u = iterUnit_14
	set Main_cities[Main_cityCount] = new_City(u, "Rhodes", 3, "when calling new_City in MainInit, line 111")
	set r_29 = gg_rct_CITY_BYZ_Scopia
	set r_30 = r_29
	set filter_15 = null
	set g_16 = CreateGroup()
	call GroupEnumUnitsInRect(g_16, r_30, filter_15)
	call DestroyBoolExpr(filter_15)
	set g = g_16
	set this_16 = g
	set iterUnit_15 = FirstOfGroup(this_16)
	call GroupRemoveUnit(this_16, iterUnit_15)
	set u = iterUnit_15
	set Main_cities[Main_cityCount] = new_City(u, "Scopia", 3, "when calling new_City in MainInit, line 114")
	set r_31 = gg_rct_CITY_BYZ_Smyrna
	set r_32 = r_31
	set filter_16 = null
	set g_17 = CreateGroup()
	call GroupEnumUnitsInRect(g_17, r_32, filter_16)
	call DestroyBoolExpr(filter_16)
	set g = g_17
	set this_17 = g
	set iterUnit_16 = FirstOfGroup(this_17)
	call GroupRemoveUnit(this_17, iterUnit_16)
	set u = iterUnit_16
	set Main_cities[Main_cityCount] = new_City(u, "Smyrna", 3, "when calling new_City in MainInit, line 117")
	set r_33 = gg_rct_CITY_BYZ_Tbilisi
	set r_34 = r_33
	set filter_17 = null
	set g_18 = CreateGroup()
	call GroupEnumUnitsInRect(g_18, r_34, filter_17)
	call DestroyBoolExpr(filter_17)
	set g = g_18
	set this_18 = g
	set iterUnit_17 = FirstOfGroup(this_18)
	call GroupRemoveUnit(this_18, iterUnit_17)
	set u = iterUnit_17
	set Main_cities[Main_cityCount] = new_City(u, "Tbilisi", 3, "when calling new_City in MainInit, line 120")
	set r_35 = gg_rct_CITY_BYZ_Trebizond
	set r_36 = r_35
	set filter_18 = null
	set g_19 = CreateGroup()
	call GroupEnumUnitsInRect(g_19, r_36, filter_18)
	call DestroyBoolExpr(filter_18)
	set g = g_19
	set this_19 = g
	set iterUnit_18 = FirstOfGroup(this_19)
	call GroupRemoveUnit(this_19, iterUnit_18)
	set u = iterUnit_18
	set Main_cities[Main_cityCount] = new_City(u, "Trebizond", 3, "when calling new_City in MainInit, line 123")
	set r_37 = gg_rct_CITY_Byz_Thessalonika
	set r_38 = r_37
	set filter_19 = null
	set g_20 = CreateGroup()
	call GroupEnumUnitsInRect(g_20, r_38, filter_19)
	call DestroyBoolExpr(filter_19)
	set g = g_20
	set this_20 = g
	set iterUnit_19 = FirstOfGroup(this_20)
	call GroupRemoveUnit(this_20, iterUnit_19)
	set u = iterUnit_19
	set Main_cities[Main_cityCount] = new_City(u, "Thessalonika", 3, "when calling new_City in MainInit, line 126")
	set r_39 = gg_rct_CITY_EE_Astrakhan
	set r_40 = r_39
	set filter_20 = null
	set g_21 = CreateGroup()
	call GroupEnumUnitsInRect(g_21, r_40, filter_20)
	call DestroyBoolExpr(filter_20)
	set g = g_21
	set this_21 = g
	set iterUnit_20 = FirstOfGroup(this_21)
	call GroupRemoveUnit(this_21, iterUnit_20)
	set u = iterUnit_20
	set Main_cities[Main_cityCount] = new_City(u, "Astrakhan'", 1, "when calling new_City in MainInit, line 132")
	set r_41 = gg_rct_CITY_EE_Azaq
	set r_42 = r_41
	set filter_21 = null
	set g_22 = CreateGroup()
	call GroupEnumUnitsInRect(g_22, r_42, filter_21)
	call DestroyBoolExpr(filter_21)
	set g = g_22
	set this_22 = g
	set iterUnit_21 = FirstOfGroup(this_22)
	call GroupRemoveUnit(this_22, iterUnit_21)
	set u = iterUnit_21
	set Main_cities[Main_cityCount] = new_City(u, "Azaq", 1, "when calling new_City in MainInit, line 135")
	set r_43 = gg_rct_CITY_EE_Baia
	set r_44 = r_43
	set filter_22 = null
	set g_23 = CreateGroup()
	call GroupEnumUnitsInRect(g_23, r_44, filter_22)
	call DestroyBoolExpr(filter_22)
	set g = g_23
	set this_23 = g
	set iterUnit_22 = FirstOfGroup(this_23)
	call GroupRemoveUnit(this_23, iterUnit_22)
	set u = iterUnit_22
	set Main_cities[Main_cityCount] = new_City(u, "Baia", 1, "when calling new_City in MainInit, line 138")
	set r_45 = gg_rct_CITY_EE_Bryansk
	set r_46 = r_45
	set filter_23 = null
	set g_24 = CreateGroup()
	call GroupEnumUnitsInRect(g_24, r_46, filter_23)
	call DestroyBoolExpr(filter_23)
	set g = g_24
	set this_24 = g
	set iterUnit_23 = FirstOfGroup(this_24)
	call GroupRemoveUnit(this_24, iterUnit_23)
	set u = iterUnit_23
	set Main_cities[Main_cityCount] = new_City(u, "Bryansk", 1, "when calling new_City in MainInit, line 141")
	set r_47 = gg_rct_CITY_EE_Caffa
	set r_48 = r_47
	set filter_24 = null
	set g_25 = CreateGroup()
	call GroupEnumUnitsInRect(g_25, r_48, filter_24)
	call DestroyBoolExpr(filter_24)
	set g = g_25
	set this_25 = g
	set iterUnit_24 = FirstOfGroup(this_25)
	call GroupRemoveUnit(this_25, iterUnit_24)
	set u = iterUnit_24
	set Main_cities[Main_cityCount] = new_City(u, "Caffa", 1, "when calling new_City in MainInit, line 144")
	set r_49 = gg_rct_CITY_EE_Constanta
	set r_50 = r_49
	set filter_25 = null
	set g_26 = CreateGroup()
	call GroupEnumUnitsInRect(g_26, r_50, filter_25)
	call DestroyBoolExpr(filter_25)
	set g = g_26
	set this_26 = g
	set iterUnit_25 = FirstOfGroup(this_26)
	call GroupRemoveUnit(this_26, iterUnit_25)
	set u = iterUnit_25
	set Main_cities[Main_cityCount] = new_City(u, "Constanta", 1, "when calling new_City in MainInit, line 147")
	set r_51 = gg_rct_CITY_EE_Dnipro
	set r_52 = r_51
	set filter_26 = null
	set g_27 = CreateGroup()
	call GroupEnumUnitsInRect(g_27, r_52, filter_26)
	call DestroyBoolExpr(filter_26)
	set g = g_27
	set this_27 = g
	set iterUnit_26 = FirstOfGroup(this_27)
	call GroupRemoveUnit(this_27, iterUnit_26)
	set u = iterUnit_26
	set Main_cities[Main_cityCount] = new_City(u, "Dnipro", 1, "when calling new_City in MainInit, line 150")
	set r_53 = gg_rct_CITY_EE_Halych
	set r_54 = r_53
	set filter_27 = null
	set g_28 = CreateGroup()
	call GroupEnumUnitsInRect(g_28, r_54, filter_27)
	call DestroyBoolExpr(filter_27)
	set g = g_28
	set this_28 = g
	set iterUnit_27 = FirstOfGroup(this_28)
	call GroupRemoveUnit(this_28, iterUnit_27)
	set u = iterUnit_27
	set Main_cities[Main_cityCount] = new_City(u, "Galych", 1, "when calling new_City in MainInit, line 153")
	set r_55 = gg_rct_CITY_EE_Kiev
	set r_56 = r_55
	set filter_28 = null
	set g_29 = CreateGroup()
	call GroupEnumUnitsInRect(g_29, r_56, filter_28)
	call DestroyBoolExpr(filter_28)
	set g = g_29
	set this_29 = g
	set iterUnit_28 = FirstOfGroup(this_29)
	call GroupRemoveUnit(this_29, iterUnit_28)
	set u = iterUnit_28
	set Main_cities[Main_cityCount] = new_City(u, "Kiev", 1, "when calling new_City in MainInit, line 156")
	set r_57 = gg_rct_CITY_EE_Konigsberg
	set r_58 = r_57
	set filter_29 = null
	set g_30 = CreateGroup()
	call GroupEnumUnitsInRect(g_30, r_58, filter_29)
	call DestroyBoolExpr(filter_29)
	set g = g_30
	set this_30 = g
	set iterUnit_29 = FirstOfGroup(this_30)
	call GroupRemoveUnit(this_30, iterUnit_29)
	set u = iterUnit_29
	set Main_cities[Main_cityCount] = new_City(u, "Sambia", 1, "when calling new_City in MainInit, line 159")
	set r_59 = gg_rct_CITY_EE_Hrodna
	set r_60 = r_59
	set filter_30 = null
	set g_31 = CreateGroup()
	call GroupEnumUnitsInRect(g_31, r_60, filter_30)
	call DestroyBoolExpr(filter_30)
	set g = g_31
	set this_31 = g
	set iterUnit_30 = FirstOfGroup(this_31)
	call GroupRemoveUnit(this_31, iterUnit_30)
	set u = iterUnit_30
	set Main_cities[Main_cityCount] = new_City(u, "Grodno", 1, "when calling new_City in MainInit, line 162")
	set r_61 = gg_rct_CITY_EE_Minsk
	set r_62 = r_61
	set filter_31 = null
	set g_32 = CreateGroup()
	call GroupEnumUnitsInRect(g_32, r_62, filter_31)
	call DestroyBoolExpr(filter_31)
	set g = g_32
	set this_32 = g
	set iterUnit_31 = FirstOfGroup(this_32)
	call GroupRemoveUnit(this_32, iterUnit_31)
	set u = iterUnit_31
	set Main_cities[Main_cityCount] = new_City(u, "Minsk", 1, "when calling new_City in MainInit, line 165")
	set r_63 = gg_rct_CITY_EE_Moscow
	set r_64 = r_63
	set filter_32 = null
	set g_33 = CreateGroup()
	call GroupEnumUnitsInRect(g_33, r_64, filter_32)
	call DestroyBoolExpr(filter_32)
	set g = g_33
	set this_33 = g
	set iterUnit_32 = FirstOfGroup(this_33)
	call GroupRemoveUnit(this_33, iterUnit_32)
	set u = iterUnit_32
	set Main_cities[Main_cityCount] = new_City(u, "Moscow", 1, "when calling new_City in MainInit, line 168")
	set r_65 = gg_rct_CITY_EE_Novgorod
	set r_66 = r_65
	set filter_33 = null
	set g_34 = CreateGroup()
	call GroupEnumUnitsInRect(g_34, r_66, filter_33)
	call DestroyBoolExpr(filter_33)
	set g = g_34
	set this_34 = g
	set iterUnit_33 = FirstOfGroup(this_34)
	call GroupRemoveUnit(this_34, iterUnit_33)
	set u = iterUnit_33
	set Main_cities[Main_cityCount] = new_City(u, "Novgorod", 1, "when calling new_City in MainInit, line 171")
	set r_67 = gg_rct_CITY_EE_Oleshe
	set r_68 = r_67
	set filter_34 = null
	set g_35 = CreateGroup()
	call GroupEnumUnitsInRect(g_35, r_68, filter_34)
	call DestroyBoolExpr(filter_34)
	set g = g_35
	set this_35 = g
	set iterUnit_34 = FirstOfGroup(this_35)
	call GroupRemoveUnit(this_35, iterUnit_34)
	set u = iterUnit_34
	set Main_cities[Main_cityCount] = new_City(u, "Oleshye", 1, "when calling new_City in MainInit, line 174")
	set r_69 = gg_rct_CITY_EE_Polotsk
	set r_70 = r_69
	set filter_35 = null
	set g_36 = CreateGroup()
	call GroupEnumUnitsInRect(g_36, r_70, filter_35)
	call DestroyBoolExpr(filter_35)
	set g = g_36
	set this_36 = g
	set iterUnit_35 = FirstOfGroup(this_36)
	call GroupRemoveUnit(this_36, iterUnit_35)
	set u = iterUnit_35
	set Main_cities[Main_cityCount] = new_City(u, "Polotsk", 1, "when calling new_City in MainInit, line 177")
	set r_71 = gg_rct_CITY_EE_Pskov
	set r_72 = r_71
	set filter_36 = null
	set g_37 = CreateGroup()
	call GroupEnumUnitsInRect(g_37, r_72, filter_36)
	call DestroyBoolExpr(filter_36)
	set g = g_37
	set this_37 = g
	set iterUnit_36 = FirstOfGroup(this_37)
	call GroupRemoveUnit(this_37, iterUnit_36)
	set u = iterUnit_36
	set Main_cities[Main_cityCount] = new_City(u, "Pskov", 1, "when calling new_City in MainInit, line 180")
	set r_73 = gg_rct_CITY_EE_Reval
	set r_74 = r_73
	set filter_37 = null
	set g_38 = CreateGroup()
	call GroupEnumUnitsInRect(g_38, r_74, filter_37)
	call DestroyBoolExpr(filter_37)
	set g = g_38
	set this_38 = g
	set iterUnit_37 = FirstOfGroup(this_38)
	call GroupRemoveUnit(this_38, iterUnit_37)
	set u = iterUnit_37
	set Main_cities[Main_cityCount] = new_City(u, "Reval", 1, "when calling new_City in MainInit, line 183")
	set r_75 = gg_rct_CITY_EE_Riga
	set r_76 = r_75
	set filter_38 = null
	set g_39 = CreateGroup()
	call GroupEnumUnitsInRect(g_39, r_76, filter_38)
	call DestroyBoolExpr(filter_38)
	set g = g_39
	set this_39 = g
	set iterUnit_38 = FirstOfGroup(this_39)
	call GroupRemoveUnit(this_39, iterUnit_38)
	set u = iterUnit_38
	set Main_cities[Main_cityCount] = new_City(u, "Riga", 1, "when calling new_City in MainInit, line 186")
	set r_77 = gg_rct_CITY_EE_Russia
	set r_78 = r_77
	set filter_39 = null
	set g_40 = CreateGroup()
	call GroupEnumUnitsInRect(g_40, r_78, filter_39)
	call DestroyBoolExpr(filter_39)
	set g = g_40
	set this_40 = g
	set iterUnit_39 = FirstOfGroup(this_40)
	call GroupRemoveUnit(this_40, iterUnit_39)
	set u = iterUnit_39
	set Main_cities[Main_cityCount] = new_City(u, "Syrt", 1, "when calling new_City in MainInit, line 189")
	set r_79 = gg_rct_CITY_EE_Ryazan
	set r_80 = r_79
	set filter_40 = null
	set g_41 = CreateGroup()
	call GroupEnumUnitsInRect(g_41, r_80, filter_40)
	call DestroyBoolExpr(filter_40)
	set g = g_41
	set this_41 = g
	set iterUnit_40 = FirstOfGroup(this_41)
	call GroupRemoveUnit(this_41, iterUnit_40)
	set u = iterUnit_40
	set Main_cities[Main_cityCount] = new_City(u, "Ryazan'", 1, "when calling new_City in MainInit, line 192")
	set r_81 = gg_rct_CITY_EE_Sarkel
	set r_82 = r_81
	set filter_41 = null
	set g_42 = CreateGroup()
	call GroupEnumUnitsInRect(g_42, r_82, filter_41)
	call DestroyBoolExpr(filter_41)
	set g = g_42
	set this_42 = g
	set iterUnit_41 = FirstOfGroup(this_42)
	call GroupRemoveUnit(this_42, iterUnit_41)
	set u = iterUnit_41
	set Main_cities[Main_cityCount] = new_City(u, "Sarkel", 1, "when calling new_City in MainInit, line 195")
	set r_83 = gg_rct_CITY_EE_Smolensk
	set r_84 = r_83
	set filter_42 = null
	set g_43 = CreateGroup()
	call GroupEnumUnitsInRect(g_43, r_84, filter_42)
	call DestroyBoolExpr(filter_42)
	set g = g_43
	set this_43 = g
	set iterUnit_42 = FirstOfGroup(this_43)
	call GroupRemoveUnit(this_43, iterUnit_42)
	set u = iterUnit_42
	set Main_cities[Main_cityCount] = new_City(u, "Smolensk", 1, "when calling new_City in MainInit, line 198")
	set r_85 = gg_rct_CITY_EE_Sofia
	set r_86 = r_85
	set filter_43 = null
	set g_44 = CreateGroup()
	call GroupEnumUnitsInRect(g_44, r_86, filter_43)
	call DestroyBoolExpr(filter_43)
	set g = g_44
	set this_44 = g
	set iterUnit_43 = FirstOfGroup(this_44)
	call GroupRemoveUnit(this_44, iterUnit_43)
	set u = iterUnit_43
	set Main_cities[Main_cityCount] = new_City(u, "Sofia", 1, "when calling new_City in MainInit, line 201")
	set r_87 = gg_rct_CITY_EE_Targoviste
	set r_88 = r_87
	set filter_44 = null
	set g_45 = CreateGroup()
	call GroupEnumUnitsInRect(g_45, r_88, filter_44)
	call DestroyBoolExpr(filter_44)
	set g = g_45
	set this_45 = g
	set iterUnit_44 = FirstOfGroup(this_45)
	call GroupRemoveUnit(this_45, iterUnit_44)
	set u = iterUnit_44
	set Main_cities[Main_cityCount] = new_City(u, "Targovitse", 1, "when calling new_City in MainInit, line 204")
	set r_89 = gg_rct_CITY_EE_Timutarakan
	set r_90 = r_89
	set filter_45 = null
	set g_46 = CreateGroup()
	call GroupEnumUnitsInRect(g_46, r_90, filter_45)
	call DestroyBoolExpr(filter_45)
	set g = g_46
	set this_46 = g
	set iterUnit_45 = FirstOfGroup(this_46)
	call GroupRemoveUnit(this_46, iterUnit_45)
	set u = iterUnit_45
	set Main_cities[Main_cityCount] = new_City(u, "Tmutarakan'", 1, "when calling new_City in MainInit, line 207")
	set r_91 = gg_rct_CITY_EE_Turku
	set r_92 = r_91
	set filter_46 = null
	set g_47 = CreateGroup()
	call GroupEnumUnitsInRect(g_47, r_92, filter_46)
	call DestroyBoolExpr(filter_46)
	set g = g_47
	set this_47 = g
	set iterUnit_46 = FirstOfGroup(this_47)
	call GroupRemoveUnit(this_47, iterUnit_46)
	set u = iterUnit_46
	set Main_cities[Main_cityCount] = new_City(u, "Turku", 1, "when calling new_City in MainInit, line 210")
	set r_93 = gg_rct_CITY_EE_Vilnius
	set r_94 = r_93
	set filter_47 = null
	set g_48 = CreateGroup()
	call GroupEnumUnitsInRect(g_48, r_94, filter_47)
	call DestroyBoolExpr(filter_47)
	set g = g_48
	set this_48 = g
	set iterUnit_47 = FirstOfGroup(this_48)
	call GroupRemoveUnit(this_48, iterUnit_47)
	set u = iterUnit_47
	set Main_cities[Main_cityCount] = new_City(u, "Vilnius", 1, "when calling new_City in MainInit, line 213")
	set r_95 = gg_rct_CITY_EE_Zhytomyr
	set r_96 = r_95
	set filter_48 = null
	set g_49 = CreateGroup()
	call GroupEnumUnitsInRect(g_49, r_96, filter_48)
	call DestroyBoolExpr(filter_48)
	set g = g_49
	set this_49 = g
	set iterUnit_48 = FirstOfGroup(this_49)
	call GroupRemoveUnit(this_49, iterUnit_48)
	set u = iterUnit_48
	set Main_cities[Main_cityCount] = new_City(u, "Zhytomir", 1, "when calling new_City in MainInit, line 216")
	set r_97 = gg_rct_CITY_ME_Acre
	set r_98 = r_97
	set filter_49 = null
	set g_50 = CreateGroup()
	call GroupEnumUnitsInRect(g_50, r_98, filter_49)
	call DestroyBoolExpr(filter_49)
	set g = g_50
	set this_50 = g
	set iterUnit_49 = FirstOfGroup(this_50)
	call GroupRemoveUnit(this_50, iterUnit_49)
	set u = iterUnit_49
	set Main_cities[Main_cityCount] = new_City(u, "Acre", 2, "when calling new_City in MainInit, line 222")
	set r_99 = gg_rct_CITY_ME_Adana
	set r_100 = r_99
	set filter_50 = null
	set g_51 = CreateGroup()
	call GroupEnumUnitsInRect(g_51, r_100, filter_50)
	call DestroyBoolExpr(filter_50)
	set g = g_51
	set this_51 = g
	set iterUnit_50 = FirstOfGroup(this_51)
	call GroupRemoveUnit(this_51, iterUnit_50)
	set u = iterUnit_50
	set Main_cities[Main_cityCount] = new_City(u, "Adana", 2, "when calling new_City in MainInit, line 225")
	set r_101 = gg_rct_CITY_ME_Al_Aqaba
	set r_102 = r_101
	set filter_51 = null
	set g_52 = CreateGroup()
	call GroupEnumUnitsInRect(g_52, r_102, filter_51)
	call DestroyBoolExpr(filter_51)
	set g = g_52
	set this_52 = g
	set iterUnit_51 = FirstOfGroup(this_52)
	call GroupRemoveUnit(this_52, iterUnit_51)
	set u = iterUnit_51
	set Main_cities[Main_cityCount] = new_City(u, "Al Aqaba", 2, "when calling new_City in MainInit, line 228")
	set r_103 = gg_rct_CITY_ME_Alexandria
	set r_104 = r_103
	set filter_52 = null
	set g_53 = CreateGroup()
	call GroupEnumUnitsInRect(g_53, r_104, filter_52)
	call DestroyBoolExpr(filter_52)
	set g = g_53
	set this_53 = g
	set iterUnit_52 = FirstOfGroup(this_53)
	call GroupRemoveUnit(this_53, iterUnit_52)
	set u = iterUnit_52
	set Main_cities[Main_cityCount] = new_City(u, "Alexandria", 2, "when calling new_City in MainInit, line 231")
	set r_105 = gg_rct_CITY_ME_Algiers
	set r_106 = r_105
	set filter_53 = null
	set g_54 = CreateGroup()
	call GroupEnumUnitsInRect(g_54, r_106, filter_53)
	call DestroyBoolExpr(filter_53)
	set g = g_54
	set this_54 = g
	set iterUnit_53 = FirstOfGroup(this_54)
	call GroupRemoveUnit(this_54, iterUnit_53)
	set u = iterUnit_53
	set Main_cities[Main_cityCount] = new_City(u, "Algiers", 2, "when calling new_City in MainInit, line 234")
	set r_107 = gg_rct_CITY_ME_Ankara
	set r_108 = r_107
	set filter_54 = null
	set g_55 = CreateGroup()
	call GroupEnumUnitsInRect(g_55, r_108, filter_54)
	call DestroyBoolExpr(filter_54)
	set g = g_55
	set this_55 = g
	set iterUnit_54 = FirstOfGroup(this_55)
	call GroupRemoveUnit(this_55, iterUnit_54)
	set u = iterUnit_54
	set Main_cities[Main_cityCount] = new_City(u, "Ankara", 2, "when calling new_City in MainInit, line 237")
	set r_109 = gg_rct_CITY_ME_Antioch
	set r_110 = r_109
	set filter_55 = null
	set g_56 = CreateGroup()
	call GroupEnumUnitsInRect(g_56, r_110, filter_55)
	call DestroyBoolExpr(filter_55)
	set g = g_56
	set this_56 = g
	set iterUnit_55 = FirstOfGroup(this_56)
	call GroupRemoveUnit(this_56, iterUnit_55)
	set u = iterUnit_55
	set Main_cities[Main_cityCount] = new_City(u, "Antioch", 2, "when calling new_City in MainInit, line 240")
	set r_111 = gg_rct_CITY_ME_Badajoz
	set r_112 = r_111
	set filter_56 = null
	set g_57 = CreateGroup()
	call GroupEnumUnitsInRect(g_57, r_112, filter_56)
	call DestroyBoolExpr(filter_56)
	set g = g_57
	set this_57 = g
	set iterUnit_56 = FirstOfGroup(this_57)
	call GroupRemoveUnit(this_57, iterUnit_56)
	set u = iterUnit_56
	set Main_cities[Main_cityCount] = new_City(u, "Badajoz", 2, "when calling new_City in MainInit, line 243")
	set r_113 = gg_rct_CITY_ME_Baghdad
	set r_114 = r_113
	set filter_57 = null
	set g_58 = CreateGroup()
	call GroupEnumUnitsInRect(g_58, r_114, filter_57)
	call DestroyBoolExpr(filter_57)
	set g = g_58
	set this_58 = g
	set iterUnit_57 = FirstOfGroup(this_58)
	call GroupRemoveUnit(this_58, iterUnit_57)
	set u = iterUnit_57
	set Main_cities[Main_cityCount] = new_City(u, "Baghdad", 2, "when calling new_City in MainInit, line 246")
	set r_115 = gg_rct_CITY_ME_Benghazi
	set r_116 = r_115
	set filter_58 = null
	set g_59 = CreateGroup()
	call GroupEnumUnitsInRect(g_59, r_116, filter_58)
	call DestroyBoolExpr(filter_58)
	set g = g_59
	set this_59 = g
	set iterUnit_58 = FirstOfGroup(this_59)
	call GroupRemoveUnit(this_59, iterUnit_58)
	set u = iterUnit_58
	set Main_cities[Main_cityCount] = new_City(u, "Benghazi", 2, "when calling new_City in MainInit, line 249")
	set r_117 = gg_rct_CITY_ME_Cairo
	set r_118 = r_117
	set filter_59 = null
	set g_60 = CreateGroup()
	call GroupEnumUnitsInRect(g_60, r_118, filter_59)
	call DestroyBoolExpr(filter_59)
	set g = g_60
	set this_60 = g
	set iterUnit_59 = FirstOfGroup(this_60)
	call GroupRemoveUnit(this_60, iterUnit_59)
	set u = iterUnit_59
	set Main_cities[Main_cityCount] = new_City(u, "Cairo", 2, "when calling new_City in MainInit, line 252")
	set r_119 = gg_rct_CITY_ME_Cordoba
	set r_120 = r_119
	set filter_60 = null
	set g_61 = CreateGroup()
	call GroupEnumUnitsInRect(g_61, r_120, filter_60)
	call DestroyBoolExpr(filter_60)
	set g = g_61
	set this_61 = g
	set iterUnit_60 = FirstOfGroup(this_61)
	call GroupRemoveUnit(this_61, iterUnit_60)
	set u = iterUnit_60
	set Main_cities[Main_cityCount] = new_City(u, "Cordoba", 2, "when calling new_City in MainInit, line 255")
	set r_121 = gg_rct_CITY_ME_Damascus
	set r_122 = r_121
	set filter_61 = null
	set g_62 = CreateGroup()
	call GroupEnumUnitsInRect(g_62, r_122, filter_61)
	call DestroyBoolExpr(filter_61)
	set g = g_62
	set this_62 = g
	set iterUnit_61 = FirstOfGroup(this_62)
	call GroupRemoveUnit(this_62, iterUnit_61)
	set u = iterUnit_61
	set Main_cities[Main_cityCount] = new_City(u, "Damascus", 2, "when calling new_City in MainInit, line 258")
	set r_123 = gg_rct_CITY_ME_Damietta
	set r_124 = r_123
	set filter_62 = null
	set g_63 = CreateGroup()
	call GroupEnumUnitsInRect(g_63, r_124, filter_62)
	call DestroyBoolExpr(filter_62)
	set g = g_63
	set this_63 = g
	set iterUnit_62 = FirstOfGroup(this_63)
	call GroupRemoveUnit(this_63, iterUnit_62)
	set u = iterUnit_62
	set Main_cities[Main_cityCount] = new_City(u, "Damietta", 2, "when calling new_City in MainInit, line 261")
	set r_125 = gg_rct_CITY_ME_Diyarbakir
	set r_126 = r_125
	set filter_63 = null
	set g_64 = CreateGroup()
	call GroupEnumUnitsInRect(g_64, r_126, filter_63)
	call DestroyBoolExpr(filter_63)
	set g = g_64
	set this_64 = g
	set iterUnit_63 = FirstOfGroup(this_64)
	call GroupRemoveUnit(this_64, iterUnit_63)
	set u = iterUnit_63
	set Main_cities[Main_cityCount] = new_City(u, "Diyarbakir", 2, "when calling new_City in MainInit, line 264")
	set r_127 = gg_rct_CITY_ME_Edessa
	set r_128 = r_127
	set filter_64 = null
	set g_65 = CreateGroup()
	call GroupEnumUnitsInRect(g_65, r_128, filter_64)
	call DestroyBoolExpr(filter_64)
	set g = g_65
	set this_65 = g
	set iterUnit_64 = FirstOfGroup(this_65)
	call GroupRemoveUnit(this_65, iterUnit_64)
	set u = iterUnit_64
	set Main_cities[Main_cityCount] = new_City(u, "Edessa", 2, "when calling new_City in MainInit, line 267")
	set r_129 = gg_rct_CITY_ME_Erez
	set r_130 = r_129
	set filter_65 = null
	set g_66 = CreateGroup()
	call GroupEnumUnitsInRect(g_66, r_130, filter_65)
	call DestroyBoolExpr(filter_65)
	set g = g_66
	set this_66 = g
	set iterUnit_65 = FirstOfGroup(this_66)
	call GroupRemoveUnit(this_66, iterUnit_65)
	set u = iterUnit_65
	set Main_cities[Main_cityCount] = new_City(u, "Erez", 2, "when calling new_City in MainInit, line 270")
	set r_131 = gg_rct_CITY_ME_Fes
	set r_132 = r_131
	set filter_66 = null
	set g_67 = CreateGroup()
	call GroupEnumUnitsInRect(g_67, r_132, filter_66)
	call DestroyBoolExpr(filter_66)
	set g = g_67
	set this_67 = g
	set iterUnit_66 = FirstOfGroup(this_67)
	call GroupRemoveUnit(this_67, iterUnit_66)
	set u = iterUnit_66
	set Main_cities[Main_cityCount] = new_City(u, "Fes", 2, "when calling new_City in MainInit, line 273")
	set r_133 = gg_rct_CITY_ME_Gaza
	set r_134 = r_133
	set filter_67 = null
	set g_68 = CreateGroup()
	call GroupEnumUnitsInRect(g_68, r_134, filter_67)
	call DestroyBoolExpr(filter_67)
	set g = g_68
	set this_68 = g
	set iterUnit_67 = FirstOfGroup(this_68)
	call GroupRemoveUnit(this_68, iterUnit_67)
	set u = iterUnit_67
	set Main_cities[Main_cityCount] = new_City(u, "Gaza", 2, "when calling new_City in MainInit, line 276")
	set r_135 = gg_rct_CITY_ME_Granada
	set r_136 = r_135
	set filter_68 = null
	set g_69 = CreateGroup()
	call GroupEnumUnitsInRect(g_69, r_136, filter_68)
	call DestroyBoolExpr(filter_68)
	set g = g_69
	set this_69 = g
	set iterUnit_68 = FirstOfGroup(this_69)
	call GroupRemoveUnit(this_69, iterUnit_68)
	set u = iterUnit_68
	set Main_cities[Main_cityCount] = new_City(u, "Granada", 2, "when calling new_City in MainInit, line 279")
	set r_137 = gg_rct_CITY_ME_Isparta
	set r_138 = r_137
	set filter_69 = null
	set g_70 = CreateGroup()
	call GroupEnumUnitsInRect(g_70, r_138, filter_69)
	call DestroyBoolExpr(filter_69)
	set g = g_70
	set this_70 = g
	set iterUnit_69 = FirstOfGroup(this_70)
	call GroupRemoveUnit(this_70, iterUnit_69)
	set u = iterUnit_69
	set Main_cities[Main_cityCount] = new_City(u, "Isparta", 2, "when calling new_City in MainInit, line 282")
	set r_139 = gg_rct_CITY_ME_JERUSALEM
	set r_140 = r_139
	set filter_70 = null
	set g_71 = CreateGroup()
	call GroupEnumUnitsInRect(g_71, r_140, filter_70)
	call DestroyBoolExpr(filter_70)
	set g = g_71
	set this_71 = g
	set iterUnit_70 = FirstOfGroup(this_71)
	call GroupRemoveUnit(this_71, iterUnit_70)
	set u = iterUnit_70
	set Main_cities[Main_cityCount] = new_City(u, "Jerusalem", 2, "when calling new_City in MainInit, line 285")
	set r_141 = gg_rct_CITY_ME_Kayseri
	set r_142 = r_141
	set filter_71 = null
	set g_72 = CreateGroup()
	call GroupEnumUnitsInRect(g_72, r_142, filter_71)
	call DestroyBoolExpr(filter_71)
	set g = g_72
	set this_72 = g
	set iterUnit_71 = FirstOfGroup(this_72)
	call GroupRemoveUnit(this_72, iterUnit_71)
	set u = iterUnit_71
	set Main_cities[Main_cityCount] = new_City(u, "Kayseri", 2, "when calling new_City in MainInit, line 288")
	set r_143 = gg_rct_CITY_ME_Kerak
	set r_144 = r_143
	set filter_72 = null
	set g_73 = CreateGroup()
	call GroupEnumUnitsInRect(g_73, r_144, filter_72)
	call DestroyBoolExpr(filter_72)
	set g = g_73
	set this_73 = g
	set iterUnit_72 = FirstOfGroup(this_73)
	call GroupRemoveUnit(this_73, iterUnit_72)
	set u = iterUnit_72
	set Main_cities[Main_cityCount] = new_City(u, "Kerak", 2, "when calling new_City in MainInit, line 291")
	set r_145 = gg_rct_CITY_ME_Konya
	set r_146 = r_145
	set filter_73 = null
	set g_74 = CreateGroup()
	call GroupEnumUnitsInRect(g_74, r_146, filter_73)
	call DestroyBoolExpr(filter_73)
	set g = g_74
	set this_74 = g
	set iterUnit_73 = FirstOfGroup(this_74)
	call GroupRemoveUnit(this_74, iterUnit_73)
	set u = iterUnit_73
	set Main_cities[Main_cityCount] = new_City(u, "Konya", 2, "when calling new_City in MainInit, line 294")
	set r_147 = gg_rct_CITY_ME_Lisbon
	set r_148 = r_147
	set filter_74 = null
	set g_75 = CreateGroup()
	call GroupEnumUnitsInRect(g_75, r_148, filter_74)
	call DestroyBoolExpr(filter_74)
	set g = g_75
	set this_75 = g
	set iterUnit_74 = FirstOfGroup(this_75)
	call GroupRemoveUnit(this_75, iterUnit_74)
	set u = iterUnit_74
	set Main_cities[Main_cityCount] = new_City(u, "Lisbon", 2, "when calling new_City in MainInit, line 297")
	set r_149 = gg_rct_CITY_ME_Luxor
	set r_150 = r_149
	set filter_75 = null
	set g_76 = CreateGroup()
	call GroupEnumUnitsInRect(g_76, r_150, filter_75)
	call DestroyBoolExpr(filter_75)
	set g = g_76
	set this_76 = g
	set iterUnit_75 = FirstOfGroup(this_76)
	call GroupRemoveUnit(this_76, iterUnit_75)
	set u = iterUnit_75
	set Main_cities[Main_cityCount] = new_City(u, "Luxor", 2, "when calling new_City in MainInit, line 300")
	set r_151 = gg_rct_CITY_ME_Madrid
	set r_152 = r_151
	set filter_76 = null
	set g_77 = CreateGroup()
	call GroupEnumUnitsInRect(g_77, r_152, filter_76)
	call DestroyBoolExpr(filter_76)
	set g = g_77
	set this_77 = g
	set iterUnit_76 = FirstOfGroup(this_77)
	call GroupRemoveUnit(this_77, iterUnit_76)
	set u = iterUnit_76
	set Main_cities[Main_cityCount] = new_City(u, "Madrid", 2, "when calling new_City in MainInit, line 303")
	set r_153 = gg_rct_CITY_ME_Mahdya
	set r_154 = r_153
	set filter_77 = null
	set g_78 = CreateGroup()
	call GroupEnumUnitsInRect(g_78, r_154, filter_77)
	call DestroyBoolExpr(filter_77)
	set g = g_78
	set this_78 = g
	set iterUnit_77 = FirstOfGroup(this_78)
	call GroupRemoveUnit(this_78, iterUnit_77)
	set u = iterUnit_77
	set Main_cities[Main_cityCount] = new_City(u, "Mahdya", 2, "when calling new_City in MainInit, line 306")
	set r_155 = gg_rct_CITY_ME_Marakesh
	set r_156 = r_155
	set filter_78 = null
	set g_79 = CreateGroup()
	call GroupEnumUnitsInRect(g_79, r_156, filter_78)
	call DestroyBoolExpr(filter_78)
	set g = g_79
	set this_79 = g
	set iterUnit_78 = FirstOfGroup(this_79)
	call GroupRemoveUnit(this_79, iterUnit_78)
	set u = iterUnit_78
	set Main_cities[Main_cityCount] = new_City(u, "Marrakesh", 2, "when calling new_City in MainInit, line 309")
	set r_157 = gg_rct_CITY_ME_Medina
	set r_158 = r_157
	set filter_79 = null
	set g_80 = CreateGroup()
	call GroupEnumUnitsInRect(g_80, r_158, filter_79)
	call DestroyBoolExpr(filter_79)
	set g = g_80
	set this_80 = g
	set iterUnit_79 = FirstOfGroup(this_80)
	call GroupRemoveUnit(this_80, iterUnit_79)
	set u = iterUnit_79
	set Main_cities[Main_cityCount] = new_City(u, "Medina", 2, "when calling new_City in MainInit, line 312")
	set r_159 = gg_rct_CITY_ME_Mosul
	set r_160 = r_159
	set filter_80 = null
	set g_81 = CreateGroup()
	call GroupEnumUnitsInRect(g_81, r_160, filter_80)
	call DestroyBoolExpr(filter_80)
	set g = g_81
	set this_81 = g
	set iterUnit_80 = FirstOfGroup(this_81)
	call GroupRemoveUnit(this_81, iterUnit_80)
	set u = iterUnit_80
	set Main_cities[Main_cityCount] = new_City(u, "Mosul", 2, "when calling new_City in MainInit, line 315")
	set r_161 = gg_rct_CITY_ME_Murcia
	set r_162 = r_161
	set filter_81 = null
	set g_82 = CreateGroup()
	call GroupEnumUnitsInRect(g_82, r_162, filter_81)
	call DestroyBoolExpr(filter_81)
	set g = g_82
	set this_82 = g
	set iterUnit_81 = FirstOfGroup(this_82)
	call GroupRemoveUnit(this_82, iterUnit_81)
	set u = iterUnit_81
	set Main_cities[Main_cityCount] = new_City(u, "Murcia", 2, "when calling new_City in MainInit, line 318")
	set r_163 = gg_rct_CITY_ME_Oran
	set r_164 = r_163
	set filter_82 = null
	set g_83 = CreateGroup()
	call GroupEnumUnitsInRect(g_83, r_164, filter_82)
	call DestroyBoolExpr(filter_82)
	set g = g_83
	set this_83 = g
	set iterUnit_82 = FirstOfGroup(this_83)
	call GroupRemoveUnit(this_83, iterUnit_82)
	set u = iterUnit_82
	set Main_cities[Main_cityCount] = new_City(u, "Oran", 2, "when calling new_City in MainInit, line 321")
	set r_165 = gg_rct_CITY_ME_Palma
	set r_166 = r_165
	set filter_83 = null
	set g_84 = CreateGroup()
	call GroupEnumUnitsInRect(g_84, r_166, filter_83)
	call DestroyBoolExpr(filter_83)
	set g = g_84
	set this_84 = g
	set iterUnit_83 = FirstOfGroup(this_84)
	call GroupRemoveUnit(this_84, iterUnit_83)
	set u = iterUnit_83
	set Main_cities[Main_cityCount] = new_City(u, "Palma", 2, "when calling new_City in MainInit, line 324")
	set r_167 = gg_rct_CITY_ME_Quarisiya
	set r_168 = r_167
	set filter_84 = null
	set g_85 = CreateGroup()
	call GroupEnumUnitsInRect(g_85, r_168, filter_84)
	call DestroyBoolExpr(filter_84)
	set g = g_85
	set this_85 = g
	set iterUnit_84 = FirstOfGroup(this_85)
	call GroupRemoveUnit(this_85, iterUnit_84)
	set u = iterUnit_84
	set Main_cities[Main_cityCount] = new_City(u, "Quarisiya", 2, "when calling new_City in MainInit, line 327")
	set r_169 = gg_rct_CITY_ME_Silves
	set r_170 = r_169
	set filter_85 = null
	set g_86 = CreateGroup()
	call GroupEnumUnitsInRect(g_86, r_170, filter_85)
	call DestroyBoolExpr(filter_85)
	set g = g_86
	set this_86 = g
	set iterUnit_85 = FirstOfGroup(this_86)
	call GroupRemoveUnit(this_86, iterUnit_85)
	set u = iterUnit_85
	set Main_cities[Main_cityCount] = new_City(u, "Silves", 2, "when calling new_City in MainInit, line 330")
	set r_171 = gg_rct_CITY_ME_Sinop
	set r_172 = r_171
	set filter_86 = null
	set g_87 = CreateGroup()
	call GroupEnumUnitsInRect(g_87, r_172, filter_86)
	call DestroyBoolExpr(filter_86)
	set g = g_87
	set this_87 = g
	set iterUnit_86 = FirstOfGroup(this_87)
	call GroupRemoveUnit(this_87, iterUnit_86)
	set u = iterUnit_86
	set Main_cities[Main_cityCount] = new_City(u, "Sinop", 2, "when calling new_City in MainInit, line 333")
	set r_173 = gg_rct_CITY_ME_Tamiya
	set r_174 = r_173
	set filter_87 = null
	set g_88 = CreateGroup()
	call GroupEnumUnitsInRect(g_88, r_174, filter_87)
	call DestroyBoolExpr(filter_87)
	set g = g_88
	set this_88 = g
	set iterUnit_87 = FirstOfGroup(this_88)
	call GroupRemoveUnit(this_88, iterUnit_87)
	set u = iterUnit_87
	set Main_cities[Main_cityCount] = new_City(u, "Tamiya", 2, "when calling new_City in MainInit, line 336")
	set r_175 = gg_rct_CITY_ME_Tartus
	set r_176 = r_175
	set filter_88 = null
	set g_89 = CreateGroup()
	call GroupEnumUnitsInRect(g_89, r_176, filter_88)
	call DestroyBoolExpr(filter_88)
	set g = g_89
	set this_89 = g
	set iterUnit_88 = FirstOfGroup(this_89)
	call GroupRemoveUnit(this_89, iterUnit_88)
	set u = iterUnit_88
	set Main_cities[Main_cityCount] = new_City(u, "Tartus", 2, "when calling new_City in MainInit, line 339")
	set r_177 = gg_rct_CITY_ME_Tripoli
	set r_178 = r_177
	set filter_89 = null
	set g_90 = CreateGroup()
	call GroupEnumUnitsInRect(g_90, r_178, filter_89)
	call DestroyBoolExpr(filter_89)
	set g = g_90
	set this_90 = g
	set iterUnit_89 = FirstOfGroup(this_90)
	call GroupRemoveUnit(this_90, iterUnit_89)
	set u = iterUnit_89
	set Main_cities[Main_cityCount] = new_City(u, "Tripoli", 2, "when calling new_City in MainInit, line 342")
	set r_179 = gg_rct_CITY_ME_Tunis
	set r_180 = r_179
	set filter_90 = null
	set g_91 = CreateGroup()
	call GroupEnumUnitsInRect(g_91, r_180, filter_90)
	call DestroyBoolExpr(filter_90)
	set g = g_91
	set this_91 = g
	set iterUnit_90 = FirstOfGroup(this_91)
	call GroupRemoveUnit(this_91, iterUnit_90)
	set u = iterUnit_90
	set Main_cities[Main_cityCount] = new_City(u, "Tunis", 2, "when calling new_City in MainInit, line 345")
	set r_181 = gg_rct_CITY_ME_Valencia
	set r_182 = r_181
	set filter_91 = null
	set g_92 = CreateGroup()
	call GroupEnumUnitsInRect(g_92, r_182, filter_91)
	call DestroyBoolExpr(filter_91)
	set g = g_92
	set this_92 = g
	set iterUnit_91 = FirstOfGroup(this_92)
	call GroupRemoveUnit(this_92, iterUnit_91)
	set u = iterUnit_91
	set Main_cities[Main_cityCount] = new_City(u, "Valencia", 2, "when calling new_City in MainInit, line 348")
	set r_183 = gg_rct_CITY_ME_Yerevan
	set r_184 = r_183
	set filter_92 = null
	set g_93 = CreateGroup()
	call GroupEnumUnitsInRect(g_93, r_184, filter_92)
	call DestroyBoolExpr(filter_92)
	set g = g_93
	set this_93 = g
	set iterUnit_92 = FirstOfGroup(this_93)
	call GroupRemoveUnit(this_93, iterUnit_92)
	set u = iterUnit_92
	set Main_cities[Main_cityCount] = new_City(u, "Yerevan", 2, "when calling new_City in MainInit, line 351")
	set r_185 = gg_rct_CITY_WE_Aarhus
	set r_186 = r_185
	set filter_93 = null
	set g_94 = CreateGroup()
	call GroupEnumUnitsInRect(g_94, r_186, filter_93)
	call DestroyBoolExpr(filter_93)
	set g = g_94
	set this_94 = g
	set iterUnit_93 = FirstOfGroup(this_94)
	call GroupRemoveUnit(this_94, iterUnit_93)
	set u = iterUnit_93
	set Main_cities[Main_cityCount] = new_City(u, "Aarhus", 0, "when calling new_City in MainInit, line 357")
	set r_187 = gg_rct_CITY_WE_Aberdeen
	set r_188 = r_187
	set filter_94 = null
	set g_95 = CreateGroup()
	call GroupEnumUnitsInRect(g_95, r_188, filter_94)
	call DestroyBoolExpr(filter_94)
	set g = g_95
	set this_95 = g
	set iterUnit_94 = FirstOfGroup(this_95)
	call GroupRemoveUnit(this_95, iterUnit_94)
	set u = iterUnit_94
	set Main_cities[Main_cityCount] = new_City(u, "Aberdeen", 0, "when calling new_City in MainInit, line 360")
	set r_189 = gg_rct_CITY_WE_Ajaccio
	set r_190 = r_189
	set filter_95 = null
	set g_96 = CreateGroup()
	call GroupEnumUnitsInRect(g_96, r_190, filter_95)
	call DestroyBoolExpr(filter_95)
	set g = g_96
	set this_96 = g
	set iterUnit_95 = FirstOfGroup(this_96)
	call GroupRemoveUnit(this_96, iterUnit_95)
	set u = iterUnit_95
	set Main_cities[Main_cityCount] = new_City(u, "Ajaccio", 0, "when calling new_City in MainInit, line 363")
	set r_191 = gg_rct_CITY_WE_Ancona
	set r_192 = r_191
	set filter_96 = null
	set g_97 = CreateGroup()
	call GroupEnumUnitsInRect(g_97, r_192, filter_96)
	call DestroyBoolExpr(filter_96)
	set g = g_97
	set this_97 = g
	set iterUnit_96 = FirstOfGroup(this_97)
	call GroupRemoveUnit(this_97, iterUnit_96)
	set u = iterUnit_96
	set Main_cities[Main_cityCount] = new_City(u, "Ancona", 0, "when calling new_City in MainInit, line 366")
	set r_193 = gg_rct_CITY_WE_Angers
	set r_194 = r_193
	set filter_97 = null
	set g_98 = CreateGroup()
	call GroupEnumUnitsInRect(g_98, r_194, filter_97)
	call DestroyBoolExpr(filter_97)
	set g = g_98
	set this_98 = g
	set iterUnit_97 = FirstOfGroup(this_98)
	call GroupRemoveUnit(this_98, iterUnit_97)
	set u = iterUnit_97
	set Main_cities[Main_cityCount] = new_City(u, "Angers", 0, "when calling new_City in MainInit, line 369")
	set r_195 = gg_rct_CITY_WE_Antwerp
	set r_196 = r_195
	set filter_98 = null
	set g_99 = CreateGroup()
	call GroupEnumUnitsInRect(g_99, r_196, filter_98)
	call DestroyBoolExpr(filter_98)
	set g = g_99
	set this_99 = g
	set iterUnit_98 = FirstOfGroup(this_99)
	call GroupRemoveUnit(this_99, iterUnit_98)
	set u = iterUnit_98
	set Main_cities[Main_cityCount] = new_City(u, "Antwerp", 0, "when calling new_City in MainInit, line 372")
	set r_197 = gg_rct_CITY_WE_Barcelona
	set r_198 = r_197
	set filter_99 = null
	set g_100 = CreateGroup()
	call GroupEnumUnitsInRect(g_100, r_198, filter_99)
	call DestroyBoolExpr(filter_99)
	set g = g_100
	set this_100 = g
	set iterUnit_99 = FirstOfGroup(this_100)
	call GroupRemoveUnit(this_100, iterUnit_99)
	set u = iterUnit_99
	set Main_cities[Main_cityCount] = new_City(u, "Barcelona", 0, "when calling new_City in MainInit, line 375")
	set r_199 = gg_rct_CITY_WE_Bari
	set r_200 = r_199
	set filter_100 = null
	set g_101 = CreateGroup()
	call GroupEnumUnitsInRect(g_101, r_200, filter_100)
	call DestroyBoolExpr(filter_100)
	set g = g_101
	set this_101 = g
	set iterUnit_100 = FirstOfGroup(this_101)
	call GroupRemoveUnit(this_101, iterUnit_100)
	set u = iterUnit_100
	set Main_cities[Main_cityCount] = new_City(u, "Bari", 0, "when calling new_City in MainInit, line 378")
	set r_201 = gg_rct_CITY_WE_Belgrade
	set r_202 = r_201
	set filter_101 = null
	set g_102 = CreateGroup()
	call GroupEnumUnitsInRect(g_102, r_202, filter_101)
	call DestroyBoolExpr(filter_101)
	set g = g_102
	set this_102 = g
	set iterUnit_101 = FirstOfGroup(this_102)
	call GroupRemoveUnit(this_102, iterUnit_101)
	set u = iterUnit_101
	set Main_cities[Main_cityCount] = new_City(u, "Belgrade", 0, "when calling new_City in MainInit, line 381")
	set r_203 = gg_rct_CITY_WE_Bergen
	set r_204 = r_203
	set filter_102 = null
	set g_103 = CreateGroup()
	call GroupEnumUnitsInRect(g_103, r_204, filter_102)
	call DestroyBoolExpr(filter_102)
	set g = g_103
	set this_103 = g
	set iterUnit_102 = FirstOfGroup(this_103)
	call GroupRemoveUnit(this_103, iterUnit_102)
	set u = iterUnit_102
	set Main_cities[Main_cityCount] = new_City(u, "Bergen", 0, "when calling new_City in MainInit, line 384")
	set r_205 = gg_rct_CITY_WE_Bern
	set r_206 = r_205
	set filter_103 = null
	set g_104 = CreateGroup()
	call GroupEnumUnitsInRect(g_104, r_206, filter_103)
	call DestroyBoolExpr(filter_103)
	set g = g_104
	set this_104 = g
	set iterUnit_103 = FirstOfGroup(this_104)
	call GroupRemoveUnit(this_104, iterUnit_103)
	set u = iterUnit_103
	set Main_cities[Main_cityCount] = new_City(u, "Bern", 0, "when calling new_City in MainInit, line 387")
	set r_207 = gg_rct_CITY_WE_Bologna
	set r_208 = r_207
	set filter_104 = null
	set g_105 = CreateGroup()
	call GroupEnumUnitsInRect(g_105, r_208, filter_104)
	call DestroyBoolExpr(filter_104)
	set g = g_105
	set this_105 = g
	set iterUnit_104 = FirstOfGroup(this_105)
	call GroupRemoveUnit(this_105, iterUnit_104)
	set u = iterUnit_104
	set Main_cities[Main_cityCount] = new_City(u, "Bologna", 0, "when calling new_City in MainInit, line 390")
	set r_209 = gg_rct_CITY_WE_Bordeaux
	set r_210 = r_209
	set filter_105 = null
	set g_106 = CreateGroup()
	call GroupEnumUnitsInRect(g_106, r_210, filter_105)
	call DestroyBoolExpr(filter_105)
	set g = g_106
	set this_106 = g
	set iterUnit_105 = FirstOfGroup(this_106)
	call GroupRemoveUnit(this_106, iterUnit_105)
	set u = iterUnit_105
	set Main_cities[Main_cityCount] = new_City(u, "Bordeaux", 0, "when calling new_City in MainInit, line 393")
	set r_211 = gg_rct_CITY_WE_Brasov
	set r_212 = r_211
	set filter_106 = null
	set g_107 = CreateGroup()
	call GroupEnumUnitsInRect(g_107, r_212, filter_106)
	call DestroyBoolExpr(filter_106)
	set g = g_107
	set this_107 = g
	set iterUnit_106 = FirstOfGroup(this_107)
	call GroupRemoveUnit(this_107, iterUnit_106)
	set u = iterUnit_106
	set Main_cities[Main_cityCount] = new_City(u, "Brasov", 0, "when calling new_City in MainInit, line 396")
	set r_213 = gg_rct_CITY_WE_Bruges
	set r_214 = r_213
	set filter_107 = null
	set g_108 = CreateGroup()
	call GroupEnumUnitsInRect(g_108, r_214, filter_107)
	call DestroyBoolExpr(filter_107)
	set g = g_108
	set this_108 = g
	set iterUnit_107 = FirstOfGroup(this_108)
	call GroupRemoveUnit(this_108, iterUnit_107)
	set u = iterUnit_107
	set Main_cities[Main_cityCount] = new_City(u, "Bruges", 0, "when calling new_City in MainInit, line 399")
	set r_215 = gg_rct_CITY_WE_Burgh
	set r_216 = r_215
	set filter_108 = null
	set g_109 = CreateGroup()
	call GroupEnumUnitsInRect(g_109, r_216, filter_108)
	call DestroyBoolExpr(filter_108)
	set g = g_109
	set this_109 = g
	set iterUnit_108 = FirstOfGroup(this_109)
	call GroupRemoveUnit(this_109, iterUnit_108)
	set u = iterUnit_108
	set Main_cities[Main_cityCount] = new_City(u, "Burgh", 0, "when calling new_City in MainInit, line 402")
	set r_217 = gg_rct_CITY_WE_Burgos
	set r_218 = r_217
	set filter_109 = null
	set g_110 = CreateGroup()
	call GroupEnumUnitsInRect(g_110, r_218, filter_109)
	call DestroyBoolExpr(filter_109)
	set g = g_110
	set this_110 = g
	set iterUnit_109 = FirstOfGroup(this_110)
	call GroupRemoveUnit(this_110, iterUnit_109)
	set u = iterUnit_109
	set Main_cities[Main_cityCount] = new_City(u, "Burgos", 0, "when calling new_City in MainInit, line 405")
	set r_219 = gg_rct_CITY_WE_Caen
	set r_220 = r_219
	set filter_110 = null
	set g_111 = CreateGroup()
	call GroupEnumUnitsInRect(g_111, r_220, filter_110)
	call DestroyBoolExpr(filter_110)
	set g = g_111
	set this_111 = g
	set iterUnit_110 = FirstOfGroup(this_111)
	call GroupRemoveUnit(this_111, iterUnit_110)
	set u = iterUnit_110
	set Main_cities[Main_cityCount] = new_City(u, "Caen", 0, "when calling new_City in MainInit, line 408")
	set r_221 = gg_rct_CITY_WE_Caernarfon
	set r_222 = r_221
	set filter_111 = null
	set g_112 = CreateGroup()
	call GroupEnumUnitsInRect(g_112, r_222, filter_111)
	call DestroyBoolExpr(filter_111)
	set g = g_112
	set this_112 = g
	set iterUnit_111 = FirstOfGroup(this_112)
	call GroupRemoveUnit(this_112, iterUnit_111)
	set u = iterUnit_111
	set Main_cities[Main_cityCount] = new_City(u, "Caenarfon", 0, "when calling new_City in MainInit, line 411")
	set r_223 = gg_rct_CITY_WE_Cagliari
	set r_224 = r_223
	set filter_112 = null
	set g_113 = CreateGroup()
	call GroupEnumUnitsInRect(g_113, r_224, filter_112)
	call DestroyBoolExpr(filter_112)
	set g = g_113
	set this_113 = g
	set iterUnit_112 = FirstOfGroup(this_113)
	call GroupRemoveUnit(this_113, iterUnit_112)
	set u = iterUnit_112
	set Main_cities[Main_cityCount] = new_City(u, "Cagliari", 0, "when calling new_City in MainInit, line 414")
	set r_225 = gg_rct_CITY_WE_Cardiff
	set r_226 = r_225
	set filter_113 = null
	set g_114 = CreateGroup()
	call GroupEnumUnitsInRect(g_114, r_226, filter_113)
	call DestroyBoolExpr(filter_113)
	set g = g_114
	set this_114 = g
	set iterUnit_113 = FirstOfGroup(this_114)
	call GroupRemoveUnit(this_114, iterUnit_113)
	set u = iterUnit_113
	set Main_cities[Main_cityCount] = new_City(u, "Cardiff", 0, "when calling new_City in MainInit, line 417")
	set r_227 = gg_rct_CITY_WE_Clermont
	set r_228 = r_227
	set filter_114 = null
	set g_115 = CreateGroup()
	call GroupEnumUnitsInRect(g_115, r_228, filter_114)
	call DestroyBoolExpr(filter_114)
	set g = g_115
	set this_115 = g
	set iterUnit_114 = FirstOfGroup(this_115)
	call GroupRemoveUnit(this_115, iterUnit_114)
	set u = iterUnit_114
	set Main_cities[Main_cityCount] = new_City(u, "Clermont", 0, "when calling new_City in MainInit, line 420")
	set r_229 = gg_rct_CITY_WE_Cologne
	set r_230 = r_229
	set filter_115 = null
	set g_116 = CreateGroup()
	call GroupEnumUnitsInRect(g_116, r_230, filter_115)
	call DestroyBoolExpr(filter_115)
	set g = g_116
	set this_116 = g
	set iterUnit_115 = FirstOfGroup(this_116)
	call GroupRemoveUnit(this_116, iterUnit_115)
	set u = iterUnit_115
	set Main_cities[Main_cityCount] = new_City(u, "Cologne", 0, "when calling new_City in MainInit, line 423")
	set r_231 = gg_rct_CITY_WE_Dijon
	set r_232 = r_231
	set filter_116 = null
	set g_117 = CreateGroup()
	call GroupEnumUnitsInRect(g_117, r_232, filter_116)
	call DestroyBoolExpr(filter_116)
	set g = g_117
	set this_117 = g
	set iterUnit_116 = FirstOfGroup(this_117)
	call GroupRemoveUnit(this_117, iterUnit_116)
	set u = iterUnit_116
	set Main_cities[Main_cityCount] = new_City(u, "Dijon", 0, "when calling new_City in MainInit, line 426")
	set r_233 = gg_rct_CITY_WE_Dublin
	set r_234 = r_233
	set filter_117 = null
	set g_118 = CreateGroup()
	call GroupEnumUnitsInRect(g_118, r_234, filter_117)
	call DestroyBoolExpr(filter_117)
	set g = g_118
	set this_118 = g
	set iterUnit_117 = FirstOfGroup(this_118)
	call GroupRemoveUnit(this_118, iterUnit_117)
	set u = iterUnit_117
	set Main_cities[Main_cityCount] = new_City(u, "Dublin", 0, "when calling new_City in MainInit, line 429")
	set r_235 = gg_rct_CITY_WE_Edinburgh
	set r_236 = r_235
	set filter_118 = null
	set g_119 = CreateGroup()
	call GroupEnumUnitsInRect(g_119, r_236, filter_118)
	call DestroyBoolExpr(filter_118)
	set g = g_119
	set this_119 = g
	set iterUnit_118 = FirstOfGroup(this_119)
	call GroupRemoveUnit(this_119, iterUnit_118)
	set u = iterUnit_118
	set Main_cities[Main_cityCount] = new_City(u, "Edinburgh", 0, "when calling new_City in MainInit, line 432")
	set r_237 = gg_rct_CITY_WE_Eikundarsund
	set r_238 = r_237
	set filter_119 = null
	set g_120 = CreateGroup()
	call GroupEnumUnitsInRect(g_120, r_238, filter_119)
	call DestroyBoolExpr(filter_119)
	set g = g_120
	set this_120 = g
	set iterUnit_119 = FirstOfGroup(this_120)
	call GroupRemoveUnit(this_120, iterUnit_119)
	set u = iterUnit_119
	set Main_cities[Main_cityCount] = new_City(u, "Ekundarsund", 0, "when calling new_City in MainInit, line 435")
	set r_239 = gg_rct_CITY_WE_Esztergom
	set r_240 = r_239
	set filter_120 = null
	set g_121 = CreateGroup()
	call GroupEnumUnitsInRect(g_121, r_240, filter_120)
	call DestroyBoolExpr(filter_120)
	set g = g_121
	set this_121 = g
	set iterUnit_120 = FirstOfGroup(this_121)
	call GroupRemoveUnit(this_121, iterUnit_120)
	set u = iterUnit_120
	set Main_cities[Main_cityCount] = new_City(u, "Esztergom", 0, "when calling new_City in MainInit, line 438")
	set r_241 = gg_rct_CITY_WE_Exeter
	set r_242 = r_241
	set filter_121 = null
	set g_122 = CreateGroup()
	call GroupEnumUnitsInRect(g_122, r_242, filter_121)
	call DestroyBoolExpr(filter_121)
	set g = g_122
	set this_122 = g
	set iterUnit_121 = FirstOfGroup(this_122)
	call GroupRemoveUnit(this_122, iterUnit_121)
	set u = iterUnit_121
	set Main_cities[Main_cityCount] = new_City(u, "Exeter", 0, "when calling new_City in MainInit, line 441")
	set r_243 = gg_rct_CITY_WE_Fictional_2
	set r_244 = r_243
	set filter_122 = null
	set g_123 = CreateGroup()
	call GroupEnumUnitsInRect(g_123, r_244, filter_122)
	call DestroyBoolExpr(filter_122)
	set g = g_123
	set this_123 = g
	set iterUnit_122 = FirstOfGroup(this_123)
	call GroupRemoveUnit(this_123, iterUnit_122)
	set u = iterUnit_122
	set Main_cities[Main_cityCount] = new_City(u, "Gdansk", 0, "when calling new_City in MainInit, line 444")
	set r_245 = gg_rct_CITY_WE_Flensburg
	set r_246 = r_245
	set filter_123 = null
	set g_124 = CreateGroup()
	call GroupEnumUnitsInRect(g_124, r_246, filter_123)
	call DestroyBoolExpr(filter_123)
	set g = g_124
	set this_124 = g
	set iterUnit_123 = FirstOfGroup(this_124)
	call GroupRemoveUnit(this_124, iterUnit_123)
	set u = iterUnit_123
	set Main_cities[Main_cityCount] = new_City(u, "Flensburg", 0, "when calling new_City in MainInit, line 447")
	set r_247 = gg_rct_CITY_WE_Frankfurt
	set r_248 = r_247
	set filter_124 = null
	set g_125 = CreateGroup()
	call GroupEnumUnitsInRect(g_125, r_248, filter_124)
	call DestroyBoolExpr(filter_124)
	set g = g_125
	set this_125 = g
	set iterUnit_124 = FirstOfGroup(this_125)
	call GroupRemoveUnit(this_125, iterUnit_124)
	set u = iterUnit_124
	set Main_cities[Main_cityCount] = new_City(u, "Frankfurt", 0, "when calling new_City in MainInit, line 450")
	set r_249 = gg_rct_CITY_WE_Galway
	set r_250 = r_249
	set filter_125 = null
	set g_126 = CreateGroup()
	call GroupEnumUnitsInRect(g_126, r_250, filter_125)
	call DestroyBoolExpr(filter_125)
	set g = g_126
	set this_126 = g
	set iterUnit_125 = FirstOfGroup(this_126)
	call GroupRemoveUnit(this_126, iterUnit_125)
	set u = iterUnit_125
	set Main_cities[Main_cityCount] = new_City(u, "Galway", 0, "when calling new_City in MainInit, line 453")
	set r_251 = gg_rct_CITY_WE_Genoa
	set r_252 = r_251
	set filter_126 = null
	set g_127 = CreateGroup()
	call GroupEnumUnitsInRect(g_127, r_252, filter_126)
	call DestroyBoolExpr(filter_126)
	set g = g_127
	set this_127 = g
	set iterUnit_126 = FirstOfGroup(this_127)
	call GroupRemoveUnit(this_127, iterUnit_126)
	set u = iterUnit_126
	set Main_cities[Main_cityCount] = new_City(u, "Genoa", 0, "when calling new_City in MainInit, line 456")
	set r_253 = gg_rct_CITY_WE_Groningen
	set r_254 = r_253
	set filter_127 = null
	set g_128 = CreateGroup()
	call GroupEnumUnitsInRect(g_128, r_254, filter_127)
	call DestroyBoolExpr(filter_127)
	set g = g_128
	set this_128 = g
	set iterUnit_127 = FirstOfGroup(this_128)
	call GroupRemoveUnit(this_128, iterUnit_127)
	set u = iterUnit_127
	set Main_cities[Main_cityCount] = new_City(u, "Groningen", 0, "when calling new_City in MainInit, line 459")
	set r_255 = gg_rct_CITY_WE_Innsbruck
	set r_256 = r_255
	set filter_128 = null
	set g_129 = CreateGroup()
	call GroupEnumUnitsInRect(g_129, r_256, filter_128)
	call DestroyBoolExpr(filter_128)
	set g = g_129
	set this_129 = g
	set iterUnit_128 = FirstOfGroup(this_129)
	call GroupRemoveUnit(this_129, iterUnit_128)
	set u = iterUnit_128
	set Main_cities[Main_cityCount] = new_City(u, "Innsbruck", 0, "when calling new_City in MainInit, line 462")
	set r_257 = gg_rct_CITY_WE_Inverness
	set r_258 = r_257
	set filter_129 = null
	set g_130 = CreateGroup()
	call GroupEnumUnitsInRect(g_130, r_258, filter_129)
	call DestroyBoolExpr(filter_129)
	set g = g_130
	set this_130 = g
	set iterUnit_129 = FirstOfGroup(this_130)
	call GroupRemoveUnit(this_130, iterUnit_129)
	set u = iterUnit_129
	set Main_cities[Main_cityCount] = new_City(u, "Inverness", 0, "when calling new_City in MainInit, line 465")
	set r_259 = gg_rct_CITY_WE_Ireland
	set r_260 = r_259
	set filter_130 = null
	set g_131 = CreateGroup()
	call GroupEnumUnitsInRect(g_131, r_260, filter_130)
	call DestroyBoolExpr(filter_130)
	set g = g_131
	set this_131 = g
	set iterUnit_130 = FirstOfGroup(this_131)
	call GroupRemoveUnit(this_131, iterUnit_130)
	set u = iterUnit_130
	set Main_cities[Main_cityCount] = new_City(u, "Desmond", 0, "when calling new_City in MainInit, line 468")
	set r_261 = gg_rct_CITY_WE_Italy
	set r_262 = r_261
	set filter_131 = null
	set g_132 = CreateGroup()
	call GroupEnumUnitsInRect(g_132, r_262, filter_131)
	call DestroyBoolExpr(filter_131)
	set g = g_132
	set this_132 = g
	set iterUnit_131 = FirstOfGroup(this_132)
	call GroupRemoveUnit(this_132, iterUnit_131)
	set u = iterUnit_131
	set Main_cities[Main_cityCount] = new_City(u, "Reggio", 0, "when calling new_City in MainInit, line 471")
	set r_263 = gg_rct_CITY_WE_Kalmar
	set r_264 = r_263
	set filter_132 = null
	set g_133 = CreateGroup()
	call GroupEnumUnitsInRect(g_133, r_264, filter_132)
	call DestroyBoolExpr(filter_132)
	set g = g_133
	set this_133 = g
	set iterUnit_132 = FirstOfGroup(this_133)
	call GroupRemoveUnit(this_133, iterUnit_132)
	set u = iterUnit_132
	set Main_cities[Main_cityCount] = new_City(u, "Kalmar", 0, "when calling new_City in MainInit, line 474")
	set r_265 = gg_rct_CITY_WE_Kassa
	set r_266 = r_265
	set filter_133 = null
	set g_134 = CreateGroup()
	call GroupEnumUnitsInRect(g_134, r_266, filter_133)
	call DestroyBoolExpr(filter_133)
	set g = g_134
	set this_134 = g
	set iterUnit_133 = FirstOfGroup(this_134)
	call GroupRemoveUnit(this_134, iterUnit_133)
	set u = iterUnit_133
	set Main_cities[Main_cityCount] = new_City(u, "Kassa", 0, "when calling new_City in MainInit, line 477")
	set r_267 = gg_rct_CITY_WE_Krakow
	set r_268 = r_267
	set filter_134 = null
	set g_135 = CreateGroup()
	call GroupEnumUnitsInRect(g_135, r_268, filter_134)
	call DestroyBoolExpr(filter_134)
	set g = g_135
	set this_135 = g
	set iterUnit_134 = FirstOfGroup(this_135)
	call GroupRemoveUnit(this_135, iterUnit_134)
	set u = iterUnit_134
	set Main_cities[Main_cityCount] = new_City(u, "Krakow", 0, "when calling new_City in MainInit, line 480")
	set r_269 = gg_rct_CITY_WE_Leon
	set r_270 = r_269
	set filter_135 = null
	set g_136 = CreateGroup()
	call GroupEnumUnitsInRect(g_136, r_270, filter_135)
	call DestroyBoolExpr(filter_135)
	set g = g_136
	set this_136 = g
	set iterUnit_135 = FirstOfGroup(this_136)
	call GroupRemoveUnit(this_136, iterUnit_135)
	set u = iterUnit_135
	set Main_cities[Main_cityCount] = new_City(u, "Leon", 0, "when calling new_City in MainInit, line 483")
	set r_271 = gg_rct_CITY_WE_London
	set r_272 = r_271
	set filter_136 = null
	set g_137 = CreateGroup()
	call GroupEnumUnitsInRect(g_137, r_272, filter_136)
	call DestroyBoolExpr(filter_136)
	set g = g_137
	set this_137 = g
	set iterUnit_136 = FirstOfGroup(this_137)
	call GroupRemoveUnit(this_137, iterUnit_136)
	set u = iterUnit_136
	set Main_cities[Main_cityCount] = new_City(u, "London", 0, "when calling new_City in MainInit, line 486")
	set r_273 = gg_rct_CITY_WE_Lund
	set r_274 = r_273
	set filter_137 = null
	set g_138 = CreateGroup()
	call GroupEnumUnitsInRect(g_138, r_274, filter_137)
	call DestroyBoolExpr(filter_137)
	set g = g_138
	set this_138 = g
	set iterUnit_137 = FirstOfGroup(this_138)
	call GroupRemoveUnit(this_138, iterUnit_137)
	set u = iterUnit_137
	set Main_cities[Main_cityCount] = new_City(u, "Lund", 0, "when calling new_City in MainInit, line 489")
	set r_275 = gg_rct_CITY_WE_Lyon
	set r_276 = r_275
	set filter_138 = null
	set g_139 = CreateGroup()
	call GroupEnumUnitsInRect(g_139, r_276, filter_138)
	call DestroyBoolExpr(filter_138)
	set g = g_139
	set this_139 = g
	set iterUnit_138 = FirstOfGroup(this_139)
	call GroupRemoveUnit(this_139, iterUnit_138)
	set u = iterUnit_138
	set Main_cities[Main_cityCount] = new_City(u, "Lyon", 0, "when calling new_City in MainInit, line 492")
	set r_277 = gg_rct_CITY_WE_Madgeburg
	set r_278 = r_277
	set filter_139 = null
	set g_140 = CreateGroup()
	call GroupEnumUnitsInRect(g_140, r_278, filter_139)
	call DestroyBoolExpr(filter_139)
	set g = g_140
	set this_140 = g
	set iterUnit_139 = FirstOfGroup(this_140)
	call GroupRemoveUnit(this_140, iterUnit_139)
	set u = iterUnit_139
	set Main_cities[Main_cityCount] = new_City(u, "Madgeburg", 0, "when calling new_City in MainInit, line 495")
	set r_279 = gg_rct_CITY_WE_Marseille
	set r_280 = r_279
	set filter_140 = null
	set g_141 = CreateGroup()
	call GroupEnumUnitsInRect(g_141, r_280, filter_140)
	call DestroyBoolExpr(filter_140)
	set g = g_141
	set this_141 = g
	set iterUnit_140 = FirstOfGroup(this_141)
	call GroupRemoveUnit(this_141, iterUnit_140)
	set u = iterUnit_140
	set Main_cities[Main_cityCount] = new_City(u, "Marsellie", 0, "when calling new_City in MainInit, line 498")
	set r_281 = gg_rct_CITY_WE_Metz
	set r_282 = r_281
	set filter_141 = null
	set g_142 = CreateGroup()
	call GroupEnumUnitsInRect(g_142, r_282, filter_141)
	call DestroyBoolExpr(filter_141)
	set g = g_142
	set this_142 = g
	set iterUnit_141 = FirstOfGroup(this_142)
	call GroupRemoveUnit(this_142, iterUnit_141)
	set u = iterUnit_141
	set Main_cities[Main_cityCount] = new_City(u, "Metz", 0, "when calling new_City in MainInit, line 501")
	set r_283 = gg_rct_CITY_WE_Milan
	set r_284 = r_283
	set filter_142 = null
	set g_143 = CreateGroup()
	call GroupEnumUnitsInRect(g_143, r_284, filter_142)
	call DestroyBoolExpr(filter_142)
	set g = g_143
	set this_143 = g
	set iterUnit_142 = FirstOfGroup(this_143)
	call GroupRemoveUnit(this_143, iterUnit_142)
	set u = iterUnit_142
	set Main_cities[Main_cityCount] = new_City(u, "Milan", 0, "when calling new_City in MainInit, line 504")
	set r_285 = gg_rct_CITY_WE_Naples
	set r_286 = r_285
	set filter_143 = null
	set g_144 = CreateGroup()
	call GroupEnumUnitsInRect(g_144, r_286, filter_143)
	call DestroyBoolExpr(filter_143)
	set g = g_144
	set this_144 = g
	set iterUnit_143 = FirstOfGroup(this_144)
	call GroupRemoveUnit(this_144, iterUnit_143)
	set u = iterUnit_143
	set Main_cities[Main_cityCount] = new_City(u, "Naples", 0, "when calling new_City in MainInit, line 507")
	set r_287 = gg_rct_CITY_WE_Nuremburg
	set r_288 = r_287
	set filter_144 = null
	set g_145 = CreateGroup()
	call GroupEnumUnitsInRect(g_145, r_288, filter_144)
	call DestroyBoolExpr(filter_144)
	set g = g_145
	set this_145 = g
	set iterUnit_144 = FirstOfGroup(this_145)
	call GroupRemoveUnit(this_145, iterUnit_144)
	set u = iterUnit_144
	set Main_cities[Main_cityCount] = new_City(u, "Nuremburg", 0, "when calling new_City in MainInit, line 510")
	set r_289 = gg_rct_CITY_WE_Nykoping
	set r_290 = r_289
	set filter_145 = null
	set g_146 = CreateGroup()
	call GroupEnumUnitsInRect(g_146, r_290, filter_145)
	call DestroyBoolExpr(filter_145)
	set g = g_146
	set this_146 = g
	set iterUnit_145 = FirstOfGroup(this_146)
	call GroupRemoveUnit(this_146, iterUnit_145)
	set u = iterUnit_145
	set Main_cities[Main_cityCount] = new_City(u, "Nykoping", 0, "when calling new_City in MainInit, line 513")
	set r_291 = gg_rct_CITY_WE_Oporto
	set r_292 = r_291
	set filter_146 = null
	set g_147 = CreateGroup()
	call GroupEnumUnitsInRect(g_147, r_292, filter_146)
	call DestroyBoolExpr(filter_146)
	set g = g_147
	set this_147 = g
	set iterUnit_146 = FirstOfGroup(this_147)
	call GroupRemoveUnit(this_147, iterUnit_146)
	set u = iterUnit_146
	set Main_cities[Main_cityCount] = new_City(u, "Oporto", 0, "when calling new_City in MainInit, line 516")
	set r_293 = gg_rct_CITY_WE_Oslo
	set r_294 = r_293
	set filter_147 = null
	set g_148 = CreateGroup()
	call GroupEnumUnitsInRect(g_148, r_294, filter_147)
	call DestroyBoolExpr(filter_147)
	set g = g_148
	set this_148 = g
	set iterUnit_147 = FirstOfGroup(this_148)
	call GroupRemoveUnit(this_148, iterUnit_147)
	set u = iterUnit_147
	set Main_cities[Main_cityCount] = new_City(u, "Oslo", 0, "when calling new_City in MainInit, line 519")
	set r_295 = gg_rct_CITY_WE_Budapest
	set r_296 = r_295
	set filter_148 = null
	set g_149 = CreateGroup()
	call GroupEnumUnitsInRect(g_149, r_296, filter_148)
	call DestroyBoolExpr(filter_148)
	set g = g_149
	set this_149 = g
	set iterUnit_148 = FirstOfGroup(this_149)
	call GroupRemoveUnit(this_149, iterUnit_148)
	set u = iterUnit_148
	set Main_cities[Main_cityCount] = new_City(u, "Buda", 0, "when calling new_City in MainInit, line 522")
	set r_297 = gg_rct_CITY_WE_Palermo
	set r_298 = r_297
	set filter_149 = null
	set g_150 = CreateGroup()
	call GroupEnumUnitsInRect(g_150, r_298, filter_149)
	call DestroyBoolExpr(filter_149)
	set g = g_150
	set this_150 = g
	set iterUnit_149 = FirstOfGroup(this_150)
	call GroupRemoveUnit(this_150, iterUnit_149)
	set u = iterUnit_149
	set Main_cities[Main_cityCount] = new_City(u, "Palermo", 0, "when calling new_City in MainInit, line 525")
	set r_299 = gg_rct_CITY_WE_Pamplona
	set r_300 = r_299
	set filter_150 = null
	set g_151 = CreateGroup()
	call GroupEnumUnitsInRect(g_151, r_300, filter_150)
	call DestroyBoolExpr(filter_150)
	set g = g_151
	set this_151 = g
	set iterUnit_150 = FirstOfGroup(this_151)
	call GroupRemoveUnit(this_151, iterUnit_150)
	set u = iterUnit_150
	set Main_cities[Main_cityCount] = new_City(u, "Pamplona", 0, "when calling new_City in MainInit, line 528")
	set r_301 = gg_rct_CITY_WE_Paris
	set r_302 = r_301
	set filter_151 = null
	set g_152 = CreateGroup()
	call GroupEnumUnitsInRect(g_152, r_302, filter_151)
	call DestroyBoolExpr(filter_151)
	set g = g_152
	set this_152 = g
	set iterUnit_151 = FirstOfGroup(this_152)
	call GroupRemoveUnit(this_152, iterUnit_151)
	set u = iterUnit_151
	set Main_cities[Main_cityCount] = new_City(u, "Paris", 0, "when calling new_City in MainInit, line 531")
	set r_303 = gg_rct_CITY_WE_Pisa
	set r_304 = r_303
	set filter_152 = null
	set g_153 = CreateGroup()
	call GroupEnumUnitsInRect(g_153, r_304, filter_152)
	call DestroyBoolExpr(filter_152)
	set g = g_153
	set this_153 = g
	set iterUnit_152 = FirstOfGroup(this_153)
	call GroupRemoveUnit(this_153, iterUnit_152)
	set u = iterUnit_152
	set Main_cities[Main_cityCount] = new_City(u, "Pisa", 0, "when calling new_City in MainInit, line 534")
	set r_305 = gg_rct_CITY_WE_Plock
	set r_306 = r_305
	set filter_153 = null
	set g_154 = CreateGroup()
	call GroupEnumUnitsInRect(g_154, r_306, filter_153)
	call DestroyBoolExpr(filter_153)
	set g = g_154
	set this_154 = g
	set iterUnit_153 = FirstOfGroup(this_154)
	call GroupRemoveUnit(this_154, iterUnit_153)
	set u = iterUnit_153
	set Main_cities[Main_cityCount] = new_City(u, "Plock", 0, "when calling new_City in MainInit, line 537")
	set r_307 = gg_rct_CITY_WE_Poznan
	set r_308 = r_307
	set filter_154 = null
	set g_155 = CreateGroup()
	call GroupEnumUnitsInRect(g_155, r_308, filter_154)
	call DestroyBoolExpr(filter_154)
	set g = g_155
	set this_155 = g
	set iterUnit_154 = FirstOfGroup(this_155)
	call GroupRemoveUnit(this_155, iterUnit_154)
	set u = iterUnit_154
	set Main_cities[Main_cityCount] = new_City(u, "Poznan", 0, "when calling new_City in MainInit, line 540")
	set r_309 = gg_rct_CITY_WE_Prague
	set r_310 = r_309
	set filter_155 = null
	set g_156 = CreateGroup()
	call GroupEnumUnitsInRect(g_156, r_310, filter_155)
	call DestroyBoolExpr(filter_155)
	set g = g_156
	set this_156 = g
	set iterUnit_155 = FirstOfGroup(this_156)
	call GroupRemoveUnit(this_156, iterUnit_155)
	set u = iterUnit_155
	set Main_cities[Main_cityCount] = new_City(u, "Prague", 0, "when calling new_City in MainInit, line 543")
	set r_311 = gg_rct_CITY_WE_Ragusa
	set r_312 = r_311
	set filter_156 = null
	set g_157 = CreateGroup()
	call GroupEnumUnitsInRect(g_157, r_312, filter_156)
	call DestroyBoolExpr(filter_156)
	set g = g_157
	set this_157 = g
	set iterUnit_156 = FirstOfGroup(this_157)
	call GroupRemoveUnit(this_157, iterUnit_156)
	set u = iterUnit_156
	set Main_cities[Main_cityCount] = new_City(u, "Split", 0, "when calling new_City in MainInit, line 546")
	set r_313 = gg_rct_CITY_WE_Rennes
	set r_314 = r_313
	set filter_157 = null
	set g_158 = CreateGroup()
	call GroupEnumUnitsInRect(g_158, r_314, filter_157)
	call DestroyBoolExpr(filter_157)
	set g = g_158
	set this_158 = g
	set iterUnit_157 = FirstOfGroup(this_158)
	call GroupRemoveUnit(this_158, iterUnit_157)
	set u = iterUnit_157
	set Main_cities[Main_cityCount] = new_City(u, "Rennes", 0, "when calling new_City in MainInit, line 549")
	set r_315 = gg_rct_CITY_WE_Rheims
	set r_316 = r_315
	set filter_158 = null
	set g_159 = CreateGroup()
	call GroupEnumUnitsInRect(g_159, r_316, filter_158)
	call DestroyBoolExpr(filter_158)
	set g = g_159
	set this_159 = g
	set iterUnit_158 = FirstOfGroup(this_159)
	call GroupRemoveUnit(this_159, iterUnit_158)
	set u = iterUnit_158
	set Main_cities[Main_cityCount] = new_City(u, "Rheims", 0, "when calling new_City in MainInit, line 552")
	set r_317 = gg_rct_CITY_WE_Rome
	set r_318 = r_317
	set filter_159 = null
	set g_160 = CreateGroup()
	call GroupEnumUnitsInRect(g_160, r_318, filter_159)
	call DestroyBoolExpr(filter_159)
	set g = g_160
	set this_160 = g
	set iterUnit_159 = FirstOfGroup(this_160)
	call GroupRemoveUnit(this_160, iterUnit_159)
	set u = iterUnit_159
	set Main_cities[Main_cityCount] = new_City(u, "Rome", 0, "when calling new_City in MainInit, line 555")
	set r_319 = gg_rct_CITY_WE_Roskilde
	set r_320 = r_319
	set filter_160 = null
	set g_161 = CreateGroup()
	call GroupEnumUnitsInRect(g_161, r_320, filter_160)
	call DestroyBoolExpr(filter_160)
	set g = g_161
	set this_161 = g
	set iterUnit_160 = FirstOfGroup(this_161)
	call GroupRemoveUnit(this_161, iterUnit_160)
	set u = iterUnit_160
	set Main_cities[Main_cityCount] = new_City(u, "Roskilde", 0, "when calling new_City in MainInit, line 558")
	set r_321 = gg_rct_CITY_WE_Salamanca
	set r_322 = r_321
	set filter_161 = null
	set g_162 = CreateGroup()
	call GroupEnumUnitsInRect(g_162, r_322, filter_161)
	call DestroyBoolExpr(filter_161)
	set g = g_162
	set this_162 = g
	set iterUnit_161 = FirstOfGroup(this_162)
	call GroupRemoveUnit(this_162, iterUnit_161)
	set u = iterUnit_161
	set Main_cities[Main_cityCount] = new_City(u, "Salamanca", 0, "when calling new_City in MainInit, line 561")
	set r_323 = gg_rct_CITY_WE_Salzburg
	set r_324 = r_323
	set filter_162 = null
	set g_163 = CreateGroup()
	call GroupEnumUnitsInRect(g_163, r_324, filter_162)
	call DestroyBoolExpr(filter_162)
	set g = g_163
	set this_163 = g
	set iterUnit_162 = FirstOfGroup(this_163)
	call GroupRemoveUnit(this_163, iterUnit_162)
	set u = iterUnit_162
	set Main_cities[Main_cityCount] = new_City(u, "Salzburg", 0, "when calling new_City in MainInit, line 564")
	set r_325 = gg_rct_CITY_WE_Skara
	set r_326 = r_325
	set filter_163 = null
	set g_164 = CreateGroup()
	call GroupEnumUnitsInRect(g_164, r_326, filter_163)
	call DestroyBoolExpr(filter_163)
	set g = g_164
	set this_164 = g
	set iterUnit_163 = FirstOfGroup(this_164)
	call GroupRemoveUnit(this_164, iterUnit_163)
	set u = iterUnit_163
	set Main_cities[Main_cityCount] = new_City(u, "Skara", 0, "when calling new_City in MainInit, line 567")
	set r_327 = gg_rct_CITY_WE_Stettin
	set r_328 = r_327
	set filter_164 = null
	set g_165 = CreateGroup()
	call GroupEnumUnitsInRect(g_165, r_328, filter_164)
	call DestroyBoolExpr(filter_164)
	set g = g_165
	set this_165 = g
	set iterUnit_164 = FirstOfGroup(this_165)
	call GroupRemoveUnit(this_165, iterUnit_164)
	set u = iterUnit_164
	set Main_cities[Main_cityCount] = new_City(u, "Stettin", 0, "when calling new_City in MainInit, line 570")
	set r_329 = gg_rct_CITY_WE_Stockholm
	set r_330 = r_329
	set filter_165 = null
	set g_166 = CreateGroup()
	call GroupEnumUnitsInRect(g_166, r_330, filter_165)
	call DestroyBoolExpr(filter_165)
	set g = g_166
	set this_166 = g
	set iterUnit_165 = FirstOfGroup(this_166)
	call GroupRemoveUnit(this_166, iterUnit_165)
	set u = iterUnit_165
	set Main_cities[Main_cityCount] = new_City(u, "Stockholm", 0, "when calling new_City in MainInit, line 573")
	set r_331 = gg_rct_CITY_WE_Syracuse
	set r_332 = r_331
	set filter_166 = null
	set g_167 = CreateGroup()
	call GroupEnumUnitsInRect(g_167, r_332, filter_166)
	call DestroyBoolExpr(filter_166)
	set g = g_167
	set this_167 = g
	set iterUnit_166 = FirstOfGroup(this_167)
	call GroupRemoveUnit(this_167, iterUnit_166)
	set u = iterUnit_166
	set Main_cities[Main_cityCount] = new_City(u, "Syracuse", 0, "when calling new_City in MainInit, line 576")
	set r_333 = gg_rct_CITY_WE_Toulouse
	set r_334 = r_333
	set filter_167 = null
	set g_168 = CreateGroup()
	call GroupEnumUnitsInRect(g_168, r_334, filter_167)
	call DestroyBoolExpr(filter_167)
	set g = g_168
	set this_168 = g
	set iterUnit_167 = FirstOfGroup(this_168)
	call GroupRemoveUnit(this_168, iterUnit_167)
	set u = iterUnit_167
	set Main_cities[Main_cityCount] = new_City(u, "Toulouse", 0, "when calling new_City in MainInit, line 579")
	set r_335 = gg_rct_CITY_WE_Varad
	set r_336 = r_335
	set filter_168 = null
	set g_169 = CreateGroup()
	call GroupEnumUnitsInRect(g_169, r_336, filter_168)
	call DestroyBoolExpr(filter_168)
	set g = g_169
	set this_169 = g
	set iterUnit_168 = FirstOfGroup(this_169)
	call GroupRemoveUnit(this_169, iterUnit_168)
	set u = iterUnit_168
	set Main_cities[Main_cityCount] = new_City(u, "Varad", 0, "when calling new_City in MainInit, line 582")
	set r_337 = gg_rct_CITY_WE_Venice
	set r_338 = r_337
	set filter_169 = null
	set g_170 = CreateGroup()
	call GroupEnumUnitsInRect(g_170, r_338, filter_169)
	call DestroyBoolExpr(filter_169)
	set g = g_170
	set this_170 = g
	set iterUnit_169 = FirstOfGroup(this_170)
	call GroupRemoveUnit(this_170, iterUnit_169)
	set u = iterUnit_169
	set Main_cities[Main_cityCount] = new_City(u, "Venice", 0, "when calling new_City in MainInit, line 585")
	set r_339 = gg_rct_CITY_WE_Vienna
	set r_340 = r_339
	set filter_170 = null
	set g_171 = CreateGroup()
	call GroupEnumUnitsInRect(g_171, r_340, filter_170)
	call DestroyBoolExpr(filter_170)
	set g = g_171
	set this_171 = g
	set iterUnit_170 = FirstOfGroup(this_171)
	call GroupRemoveUnit(this_171, iterUnit_170)
	set u = iterUnit_170
	set Main_cities[Main_cityCount] = new_City(u, "Vienna", 0, "when calling new_City in MainInit, line 588")
	set r_341 = gg_rct_CITY_WE_Visby
	set r_342 = r_341
	set filter_171 = null
	set g_172 = CreateGroup()
	call GroupEnumUnitsInRect(g_172, r_342, filter_171)
	call DestroyBoolExpr(filter_171)
	set g = g_172
	set this_172 = g
	set iterUnit_171 = FirstOfGroup(this_172)
	call GroupRemoveUnit(this_172, iterUnit_171)
	set u = iterUnit_171
	set Main_cities[Main_cityCount] = new_City(u, "Visby", 0, "when calling new_City in MainInit, line 591")
	set r_343 = gg_rct_CITY_WE_Warwick
	set r_344 = r_343
	set filter_172 = null
	set g_173 = CreateGroup()
	call GroupEnumUnitsInRect(g_173, r_344, filter_172)
	call DestroyBoolExpr(filter_172)
	set g = g_173
	set this_173 = g
	set iterUnit_172 = FirstOfGroup(this_173)
	call GroupRemoveUnit(this_173, iterUnit_172)
	set u = iterUnit_172
	set Main_cities[Main_cityCount] = new_City(u, "Warwick", 0, "when calling new_City in MainInit, line 594")
	set r_345 = gg_rct_CITY_WE_Winchester
	set r_346 = r_345
	set filter_173 = null
	set g_174 = CreateGroup()
	call GroupEnumUnitsInRect(g_174, r_346, filter_173)
	call DestroyBoolExpr(filter_173)
	set g = g_174
	set this_174 = g
	set iterUnit_173 = FirstOfGroup(this_174)
	call GroupRemoveUnit(this_174, iterUnit_173)
	set u = iterUnit_173
	set Main_cities[Main_cityCount] = new_City(u, "Winchester", 0, "when calling new_City in MainInit, line 597")
	set r_347 = gg_rct_CITY_WE_Wroclaw
	set r_348 = r_347
	set filter_174 = null
	set g_175 = CreateGroup()
	call GroupEnumUnitsInRect(g_175, r_348, filter_174)
	call DestroyBoolExpr(filter_174)
	set g = g_175
	set this_175 = g
	set iterUnit_174 = FirstOfGroup(this_175)
	call GroupRemoveUnit(this_175, iterUnit_174)
	set u = iterUnit_174
	set Main_cities[Main_cityCount] = new_City(u, "Wroclaw", 0, "when calling new_City in MainInit, line 600")
	set r_349 = gg_rct_CITY_WE_York
	set r_350 = r_349
	set filter_175 = null
	set g_176 = CreateGroup()
	call GroupEnumUnitsInRect(g_176, r_350, filter_175)
	call DestroyBoolExpr(filter_175)
	set g = g_176
	set this_176 = g
	set iterUnit_175 = FirstOfGroup(this_176)
	call GroupRemoveUnit(this_176, iterUnit_175)
	set u = iterUnit_175
	set Main_cities[Main_cityCount] = new_City(u, "York", 0, "when calling new_City in MainInit, line 603")
	set r_351 = gg_rct_CITY_WE_Zagreb
	set r_352 = r_351
	set filter_176 = null
	set g_177 = CreateGroup()
	call GroupEnumUnitsInRect(g_177, r_352, filter_176)
	call DestroyBoolExpr(filter_176)
	set g = g_177
	set this_177 = g
	set iterUnit_176 = FirstOfGroup(this_177)
	call GroupRemoveUnit(this_177, iterUnit_176)
	set u = iterUnit_176
	set Main_cities[Main_cityCount] = new_City(u, "Zagreb", 0, "when calling new_City in MainInit, line 606")
	set r_353 = gg_rct_CITY_WE_Zaragoza
	set r_354 = r_353
	set filter_177 = null
	set g_178 = CreateGroup()
	call GroupEnumUnitsInRect(g_178, r_354, filter_177)
	call DestroyBoolExpr(filter_177)
	set g = g_178
	set this_178 = g
	set iterUnit_177 = FirstOfGroup(this_178)
	call GroupRemoveUnit(this_178, iterUnit_177)
	set u = iterUnit_177
	set Main_cities[Main_cityCount] = new_City(u, "Zaragoza", 0, "when calling new_City in MainInit, line 609")
	set r_355 = gg_rct_Hamburg_CITY
	set r_356 = r_355
	set filter_178 = null
	set g_179 = CreateGroup()
	call GroupEnumUnitsInRect(g_179, r_356, filter_178)
	call DestroyBoolExpr(filter_178)
	set g = g_179
	set this_179 = g
	set iterUnit_178 = FirstOfGroup(this_179)
	call GroupRemoveUnit(this_179, iterUnit_178)
	set u = iterUnit_178
	set Main_cities[Main_cityCount] = new_City(u, "Hamburg", 0, "when calling new_City in MainInit, line 612")
	set wurst_stack_depth = wurst_stack_depth - 1
	set g = null
	set u = null
	set r = null
	set r_2 = null
	set filter = null
	set g_2 = null
	set this_2 = null
	set iterUnit = null
	set r_3 = null
	set r_4 = null
	set filter_2 = null
	set g_3 = null
	set this_3 = null
	set iterUnit_2 = null
	set r_5 = null
	set r_6 = null
	set filter_3 = null
	set g_4 = null
	set this_4 = null
	set iterUnit_3 = null
	set r_7 = null
	set r_8 = null
	set filter_4 = null
	set g_5 = null
	set this_5 = null
	set iterUnit_4 = null
	set r_9 = null
	set r_10 = null
	set filter_5 = null
	set g_6 = null
	set this_6 = null
	set iterUnit_5 = null
	set r_11 = null
	set r_12 = null
	set filter_6 = null
	set g_7 = null
	set this_7 = null
	set iterUnit_6 = null
	set r_13 = null
	set r_14 = null
	set filter_7 = null
	set g_8 = null
	set this_8 = null
	set iterUnit_7 = null
	set r_15 = null
	set r_16 = null
	set filter_8 = null
	set g_9 = null
	set this_9 = null
	set iterUnit_8 = null
	set r_17 = null
	set r_18 = null
	set filter_9 = null
	set g_10 = null
	set this_10 = null
	set iterUnit_9 = null
	set r_19 = null
	set r_20 = null
	set filter_10 = null
	set g_11 = null
	set this_11 = null
	set iterUnit_10 = null
	set r_21 = null
	set r_22 = null
	set filter_11 = null
	set g_12 = null
	set this_12 = null
	set iterUnit_11 = null
	set r_23 = null
	set r_24 = null
	set filter_12 = null
	set g_13 = null
	set this_13 = null
	set iterUnit_12 = null
	set r_25 = null
	set r_26 = null
	set filter_13 = null
	set g_14 = null
	set this_14 = null
	set iterUnit_13 = null
	set r_27 = null
	set r_28 = null
	set filter_14 = null
	set g_15 = null
	set this_15 = null
	set iterUnit_14 = null
	set r_29 = null
	set r_30 = null
	set filter_15 = null
	set g_16 = null
	set this_16 = null
	set iterUnit_15 = null
	set r_31 = null
	set r_32 = null
	set filter_16 = null
	set g_17 = null
	set this_17 = null
	set iterUnit_16 = null
	set r_33 = null
	set r_34 = null
	set filter_17 = null
	set g_18 = null
	set this_18 = null
	set iterUnit_17 = null
	set r_35 = null
	set r_36 = null
	set filter_18 = null
	set g_19 = null
	set this_19 = null
	set iterUnit_18 = null
	set r_37 = null
	set r_38 = null
	set filter_19 = null
	set g_20 = null
	set this_20 = null
	set iterUnit_19 = null
	set r_39 = null
	set r_40 = null
	set filter_20 = null
	set g_21 = null
	set this_21 = null
	set iterUnit_20 = null
	set r_41 = null
	set r_42 = null
	set filter_21 = null
	set g_22 = null
	set this_22 = null
	set iterUnit_21 = null
	set r_43 = null
	set r_44 = null
	set filter_22 = null
	set g_23 = null
	set this_23 = null
	set iterUnit_22 = null
	set r_45 = null
	set r_46 = null
	set filter_23 = null
	set g_24 = null
	set this_24 = null
	set iterUnit_23 = null
	set r_47 = null
	set r_48 = null
	set filter_24 = null
	set g_25 = null
	set this_25 = null
	set iterUnit_24 = null
	set r_49 = null
	set r_50 = null
	set filter_25 = null
	set g_26 = null
	set this_26 = null
	set iterUnit_25 = null
	set r_51 = null
	set r_52 = null
	set filter_26 = null
	set g_27 = null
	set this_27 = null
	set iterUnit_26 = null
	set r_53 = null
	set r_54 = null
	set filter_27 = null
	set g_28 = null
	set this_28 = null
	set iterUnit_27 = null
	set r_55 = null
	set r_56 = null
	set filter_28 = null
	set g_29 = null
	set this_29 = null
	set iterUnit_28 = null
	set r_57 = null
	set r_58 = null
	set filter_29 = null
	set g_30 = null
	set this_30 = null
	set iterUnit_29 = null
	set r_59 = null
	set r_60 = null
	set filter_30 = null
	set g_31 = null
	set this_31 = null
	set iterUnit_30 = null
	set r_61 = null
	set r_62 = null
	set filter_31 = null
	set g_32 = null
	set this_32 = null
	set iterUnit_31 = null
	set r_63 = null
	set r_64 = null
	set filter_32 = null
	set g_33 = null
	set this_33 = null
	set iterUnit_32 = null
	set r_65 = null
	set r_66 = null
	set filter_33 = null
	set g_34 = null
	set this_34 = null
	set iterUnit_33 = null
	set r_67 = null
	set r_68 = null
	set filter_34 = null
	set g_35 = null
	set this_35 = null
	set iterUnit_34 = null
	set r_69 = null
	set r_70 = null
	set filter_35 = null
	set g_36 = null
	set this_36 = null
	set iterUnit_35 = null
	set r_71 = null
	set r_72 = null
	set filter_36 = null
	set g_37 = null
	set this_37 = null
	set iterUnit_36 = null
	set r_73 = null
	set r_74 = null
	set filter_37 = null
	set g_38 = null
	set this_38 = null
	set iterUnit_37 = null
	set r_75 = null
	set r_76 = null
	set filter_38 = null
	set g_39 = null
	set this_39 = null
	set iterUnit_38 = null
	set r_77 = null
	set r_78 = null
	set filter_39 = null
	set g_40 = null
	set this_40 = null
	set iterUnit_39 = null
	set r_79 = null
	set r_80 = null
	set filter_40 = null
	set g_41 = null
	set this_41 = null
	set iterUnit_40 = null
	set r_81 = null
	set r_82 = null
	set filter_41 = null
	set g_42 = null
	set this_42 = null
	set iterUnit_41 = null
	set r_83 = null
	set r_84 = null
	set filter_42 = null
	set g_43 = null
	set this_43 = null
	set iterUnit_42 = null
	set r_85 = null
	set r_86 = null
	set filter_43 = null
	set g_44 = null
	set this_44 = null
	set iterUnit_43 = null
	set r_87 = null
	set r_88 = null
	set filter_44 = null
	set g_45 = null
	set this_45 = null
	set iterUnit_44 = null
	set r_89 = null
	set r_90 = null
	set filter_45 = null
	set g_46 = null
	set this_46 = null
	set iterUnit_45 = null
	set r_91 = null
	set r_92 = null
	set filter_46 = null
	set g_47 = null
	set this_47 = null
	set iterUnit_46 = null
	set r_93 = null
	set r_94 = null
	set filter_47 = null
	set g_48 = null
	set this_48 = null
	set iterUnit_47 = null
	set r_95 = null
	set r_96 = null
	set filter_48 = null
	set g_49 = null
	set this_49 = null
	set iterUnit_48 = null
	set r_97 = null
	set r_98 = null
	set filter_49 = null
	set g_50 = null
	set this_50 = null
	set iterUnit_49 = null
	set r_99 = null
	set r_100 = null
	set filter_50 = null
	set g_51 = null
	set this_51 = null
	set iterUnit_50 = null
	set r_101 = null
	set r_102 = null
	set filter_51 = null
	set g_52 = null
	set this_52 = null
	set iterUnit_51 = null
	set r_103 = null
	set r_104 = null
	set filter_52 = null
	set g_53 = null
	set this_53 = null
	set iterUnit_52 = null
	set r_105 = null
	set r_106 = null
	set filter_53 = null
	set g_54 = null
	set this_54 = null
	set iterUnit_53 = null
	set r_107 = null
	set r_108 = null
	set filter_54 = null
	set g_55 = null
	set this_55 = null
	set iterUnit_54 = null
	set r_109 = null
	set r_110 = null
	set filter_55 = null
	set g_56 = null
	set this_56 = null
	set iterUnit_55 = null
	set r_111 = null
	set r_112 = null
	set filter_56 = null
	set g_57 = null
	set this_57 = null
	set iterUnit_56 = null
	set r_113 = null
	set r_114 = null
	set filter_57 = null
	set g_58 = null
	set this_58 = null
	set iterUnit_57 = null
	set r_115 = null
	set r_116 = null
	set filter_58 = null
	set g_59 = null
	set this_59 = null
	set iterUnit_58 = null
	set r_117 = null
	set r_118 = null
	set filter_59 = null
	set g_60 = null
	set this_60 = null
	set iterUnit_59 = null
	set r_119 = null
	set r_120 = null
	set filter_60 = null
	set g_61 = null
	set this_61 = null
	set iterUnit_60 = null
	set r_121 = null
	set r_122 = null
	set filter_61 = null
	set g_62 = null
	set this_62 = null
	set iterUnit_61 = null
	set r_123 = null
	set r_124 = null
	set filter_62 = null
	set g_63 = null
	set this_63 = null
	set iterUnit_62 = null
	set r_125 = null
	set r_126 = null
	set filter_63 = null
	set g_64 = null
	set this_64 = null
	set iterUnit_63 = null
	set r_127 = null
	set r_128 = null
	set filter_64 = null
	set g_65 = null
	set this_65 = null
	set iterUnit_64 = null
	set r_129 = null
	set r_130 = null
	set filter_65 = null
	set g_66 = null
	set this_66 = null
	set iterUnit_65 = null
	set r_131 = null
	set r_132 = null
	set filter_66 = null
	set g_67 = null
	set this_67 = null
	set iterUnit_66 = null
	set r_133 = null
	set r_134 = null
	set filter_67 = null
	set g_68 = null
	set this_68 = null
	set iterUnit_67 = null
	set r_135 = null
	set r_136 = null
	set filter_68 = null
	set g_69 = null
	set this_69 = null
	set iterUnit_68 = null
	set r_137 = null
	set r_138 = null
	set filter_69 = null
	set g_70 = null
	set this_70 = null
	set iterUnit_69 = null
	set r_139 = null
	set r_140 = null
	set filter_70 = null
	set g_71 = null
	set this_71 = null
	set iterUnit_70 = null
	set r_141 = null
	set r_142 = null
	set filter_71 = null
	set g_72 = null
	set this_72 = null
	set iterUnit_71 = null
	set r_143 = null
	set r_144 = null
	set filter_72 = null
	set g_73 = null
	set this_73 = null
	set iterUnit_72 = null
	set r_145 = null
	set r_146 = null
	set filter_73 = null
	set g_74 = null
	set this_74 = null
	set iterUnit_73 = null
	set r_147 = null
	set r_148 = null
	set filter_74 = null
	set g_75 = null
	set this_75 = null
	set iterUnit_74 = null
	set r_149 = null
	set r_150 = null
	set filter_75 = null
	set g_76 = null
	set this_76 = null
	set iterUnit_75 = null
	set r_151 = null
	set r_152 = null
	set filter_76 = null
	set g_77 = null
	set this_77 = null
	set iterUnit_76 = null
	set r_153 = null
	set r_154 = null
	set filter_77 = null
	set g_78 = null
	set this_78 = null
	set iterUnit_77 = null
	set r_155 = null
	set r_156 = null
	set filter_78 = null
	set g_79 = null
	set this_79 = null
	set iterUnit_78 = null
	set r_157 = null
	set r_158 = null
	set filter_79 = null
	set g_80 = null
	set this_80 = null
	set iterUnit_79 = null
	set r_159 = null
	set r_160 = null
	set filter_80 = null
	set g_81 = null
	set this_81 = null
	set iterUnit_80 = null
	set r_161 = null
	set r_162 = null
	set filter_81 = null
	set g_82 = null
	set this_82 = null
	set iterUnit_81 = null
	set r_163 = null
	set r_164 = null
	set filter_82 = null
	set g_83 = null
	set this_83 = null
	set iterUnit_82 = null
	set r_165 = null
	set r_166 = null
	set filter_83 = null
	set g_84 = null
	set this_84 = null
	set iterUnit_83 = null
	set r_167 = null
	set r_168 = null
	set filter_84 = null
	set g_85 = null
	set this_85 = null
	set iterUnit_84 = null
	set r_169 = null
	set r_170 = null
	set filter_85 = null
	set g_86 = null
	set this_86 = null
	set iterUnit_85 = null
	set r_171 = null
	set r_172 = null
	set filter_86 = null
	set g_87 = null
	set this_87 = null
	set iterUnit_86 = null
	set r_173 = null
	set r_174 = null
	set filter_87 = null
	set g_88 = null
	set this_88 = null
	set iterUnit_87 = null
	set r_175 = null
	set r_176 = null
	set filter_88 = null
	set g_89 = null
	set this_89 = null
	set iterUnit_88 = null
	set r_177 = null
	set r_178 = null
	set filter_89 = null
	set g_90 = null
	set this_90 = null
	set iterUnit_89 = null
	set r_179 = null
	set r_180 = null
	set filter_90 = null
	set g_91 = null
	set this_91 = null
	set iterUnit_90 = null
	set r_181 = null
	set r_182 = null
	set filter_91 = null
	set g_92 = null
	set this_92 = null
	set iterUnit_91 = null
	set r_183 = null
	set r_184 = null
	set filter_92 = null
	set g_93 = null
	set this_93 = null
	set iterUnit_92 = null
	set r_185 = null
	set r_186 = null
	set filter_93 = null
	set g_94 = null
	set this_94 = null
	set iterUnit_93 = null
	set r_187 = null
	set r_188 = null
	set filter_94 = null
	set g_95 = null
	set this_95 = null
	set iterUnit_94 = null
	set r_189 = null
	set r_190 = null
	set filter_95 = null
	set g_96 = null
	set this_96 = null
	set iterUnit_95 = null
	set r_191 = null
	set r_192 = null
	set filter_96 = null
	set g_97 = null
	set this_97 = null
	set iterUnit_96 = null
	set r_193 = null
	set r_194 = null
	set filter_97 = null
	set g_98 = null
	set this_98 = null
	set iterUnit_97 = null
	set r_195 = null
	set r_196 = null
	set filter_98 = null
	set g_99 = null
	set this_99 = null
	set iterUnit_98 = null
	set r_197 = null
	set r_198 = null
	set filter_99 = null
	set g_100 = null
	set this_100 = null
	set iterUnit_99 = null
	set r_199 = null
	set r_200 = null
	set filter_100 = null
	set g_101 = null
	set this_101 = null
	set iterUnit_100 = null
	set r_201 = null
	set r_202 = null
	set filter_101 = null
	set g_102 = null
	set this_102 = null
	set iterUnit_101 = null
	set r_203 = null
	set r_204 = null
	set filter_102 = null
	set g_103 = null
	set this_103 = null
	set iterUnit_102 = null
	set r_205 = null
	set r_206 = null
	set filter_103 = null
	set g_104 = null
	set this_104 = null
	set iterUnit_103 = null
	set r_207 = null
	set r_208 = null
	set filter_104 = null
	set g_105 = null
	set this_105 = null
	set iterUnit_104 = null
	set r_209 = null
	set r_210 = null
	set filter_105 = null
	set g_106 = null
	set this_106 = null
	set iterUnit_105 = null
	set r_211 = null
	set r_212 = null
	set filter_106 = null
	set g_107 = null
	set this_107 = null
	set iterUnit_106 = null
	set r_213 = null
	set r_214 = null
	set filter_107 = null
	set g_108 = null
	set this_108 = null
	set iterUnit_107 = null
	set r_215 = null
	set r_216 = null
	set filter_108 = null
	set g_109 = null
	set this_109 = null
	set iterUnit_108 = null
	set r_217 = null
	set r_218 = null
	set filter_109 = null
	set g_110 = null
	set this_110 = null
	set iterUnit_109 = null
	set r_219 = null
	set r_220 = null
	set filter_110 = null
	set g_111 = null
	set this_111 = null
	set iterUnit_110 = null
	set r_221 = null
	set r_222 = null
	set filter_111 = null
	set g_112 = null
	set this_112 = null
	set iterUnit_111 = null
	set r_223 = null
	set r_224 = null
	set filter_112 = null
	set g_113 = null
	set this_113 = null
	set iterUnit_112 = null
	set r_225 = null
	set r_226 = null
	set filter_113 = null
	set g_114 = null
	set this_114 = null
	set iterUnit_113 = null
	set r_227 = null
	set r_228 = null
	set filter_114 = null
	set g_115 = null
	set this_115 = null
	set iterUnit_114 = null
	set r_229 = null
	set r_230 = null
	set filter_115 = null
	set g_116 = null
	set this_116 = null
	set iterUnit_115 = null
	set r_231 = null
	set r_232 = null
	set filter_116 = null
	set g_117 = null
	set this_117 = null
	set iterUnit_116 = null
	set r_233 = null
	set r_234 = null
	set filter_117 = null
	set g_118 = null
	set this_118 = null
	set iterUnit_117 = null
	set r_235 = null
	set r_236 = null
	set filter_118 = null
	set g_119 = null
	set this_119 = null
	set iterUnit_118 = null
	set r_237 = null
	set r_238 = null
	set filter_119 = null
	set g_120 = null
	set this_120 = null
	set iterUnit_119 = null
	set r_239 = null
	set r_240 = null
	set filter_120 = null
	set g_121 = null
	set this_121 = null
	set iterUnit_120 = null
	set r_241 = null
	set r_242 = null
	set filter_121 = null
	set g_122 = null
	set this_122 = null
	set iterUnit_121 = null
	set r_243 = null
	set r_244 = null
	set filter_122 = null
	set g_123 = null
	set this_123 = null
	set iterUnit_122 = null
	set r_245 = null
	set r_246 = null
	set filter_123 = null
	set g_124 = null
	set this_124 = null
	set iterUnit_123 = null
	set r_247 = null
	set r_248 = null
	set filter_124 = null
	set g_125 = null
	set this_125 = null
	set iterUnit_124 = null
	set r_249 = null
	set r_250 = null
	set filter_125 = null
	set g_126 = null
	set this_126 = null
	set iterUnit_125 = null
	set r_251 = null
	set r_252 = null
	set filter_126 = null
	set g_127 = null
	set this_127 = null
	set iterUnit_126 = null
	set r_253 = null
	set r_254 = null
	set filter_127 = null
	set g_128 = null
	set this_128 = null
	set iterUnit_127 = null
	set r_255 = null
	set r_256 = null
	set filter_128 = null
	set g_129 = null
	set this_129 = null
	set iterUnit_128 = null
	set r_257 = null
	set r_258 = null
	set filter_129 = null
	set g_130 = null
	set this_130 = null
	set iterUnit_129 = null
	set r_259 = null
	set r_260 = null
	set filter_130 = null
	set g_131 = null
	set this_131 = null
	set iterUnit_130 = null
	set r_261 = null
	set r_262 = null
	set filter_131 = null
	set g_132 = null
	set this_132 = null
	set iterUnit_131 = null
	set r_263 = null
	set r_264 = null
	set filter_132 = null
	set g_133 = null
	set this_133 = null
	set iterUnit_132 = null
	set r_265 = null
	set r_266 = null
	set filter_133 = null
	set g_134 = null
	set this_134 = null
	set iterUnit_133 = null
	set r_267 = null
	set r_268 = null
	set filter_134 = null
	set g_135 = null
	set this_135 = null
	set iterUnit_134 = null
	set r_269 = null
	set r_270 = null
	set filter_135 = null
	set g_136 = null
	set this_136 = null
	set iterUnit_135 = null
	set r_271 = null
	set r_272 = null
	set filter_136 = null
	set g_137 = null
	set this_137 = null
	set iterUnit_136 = null
	set r_273 = null
	set r_274 = null
	set filter_137 = null
	set g_138 = null
	set this_138 = null
	set iterUnit_137 = null
	set r_275 = null
	set r_276 = null
	set filter_138 = null
	set g_139 = null
	set this_139 = null
	set iterUnit_138 = null
	set r_277 = null
	set r_278 = null
	set filter_139 = null
	set g_140 = null
	set this_140 = null
	set iterUnit_139 = null
	set r_279 = null
	set r_280 = null
	set filter_140 = null
	set g_141 = null
	set this_141 = null
	set iterUnit_140 = null
	set r_281 = null
	set r_282 = null
	set filter_141 = null
	set g_142 = null
	set this_142 = null
	set iterUnit_141 = null
	set r_283 = null
	set r_284 = null
	set filter_142 = null
	set g_143 = null
	set this_143 = null
	set iterUnit_142 = null
	set r_285 = null
	set r_286 = null
	set filter_143 = null
	set g_144 = null
	set this_144 = null
	set iterUnit_143 = null
	set r_287 = null
	set r_288 = null
	set filter_144 = null
	set g_145 = null
	set this_145 = null
	set iterUnit_144 = null
	set r_289 = null
	set r_290 = null
	set filter_145 = null
	set g_146 = null
	set this_146 = null
	set iterUnit_145 = null
	set r_291 = null
	set r_292 = null
	set filter_146 = null
	set g_147 = null
	set this_147 = null
	set iterUnit_146 = null
	set r_293 = null
	set r_294 = null
	set filter_147 = null
	set g_148 = null
	set this_148 = null
	set iterUnit_147 = null
	set r_295 = null
	set r_296 = null
	set filter_148 = null
	set g_149 = null
	set this_149 = null
	set iterUnit_148 = null
	set r_297 = null
	set r_298 = null
	set filter_149 = null
	set g_150 = null
	set this_150 = null
	set iterUnit_149 = null
	set r_299 = null
	set r_300 = null
	set filter_150 = null
	set g_151 = null
	set this_151 = null
	set iterUnit_150 = null
	set r_301 = null
	set r_302 = null
	set filter_151 = null
	set g_152 = null
	set this_152 = null
	set iterUnit_151 = null
	set r_303 = null
	set r_304 = null
	set filter_152 = null
	set g_153 = null
	set this_153 = null
	set iterUnit_152 = null
	set r_305 = null
	set r_306 = null
	set filter_153 = null
	set g_154 = null
	set this_154 = null
	set iterUnit_153 = null
	set r_307 = null
	set r_308 = null
	set filter_154 = null
	set g_155 = null
	set this_155 = null
	set iterUnit_154 = null
	set r_309 = null
	set r_310 = null
	set filter_155 = null
	set g_156 = null
	set this_156 = null
	set iterUnit_155 = null
	set r_311 = null
	set r_312 = null
	set filter_156 = null
	set g_157 = null
	set this_157 = null
	set iterUnit_156 = null
	set r_313 = null
	set r_314 = null
	set filter_157 = null
	set g_158 = null
	set this_158 = null
	set iterUnit_157 = null
	set r_315 = null
	set r_316 = null
	set filter_158 = null
	set g_159 = null
	set this_159 = null
	set iterUnit_158 = null
	set r_317 = null
	set r_318 = null
	set filter_159 = null
	set g_160 = null
	set this_160 = null
	set iterUnit_159 = null
	set r_319 = null
	set r_320 = null
	set filter_160 = null
	set g_161 = null
	set this_161 = null
	set iterUnit_160 = null
	set r_321 = null
	set r_322 = null
	set filter_161 = null
	set g_162 = null
	set this_162 = null
	set iterUnit_161 = null
	set r_323 = null
	set r_324 = null
	set filter_162 = null
	set g_163 = null
	set this_163 = null
	set iterUnit_162 = null
	set r_325 = null
	set r_326 = null
	set filter_163 = null
	set g_164 = null
	set this_164 = null
	set iterUnit_163 = null
	set r_327 = null
	set r_328 = null
	set filter_164 = null
	set g_165 = null
	set this_165 = null
	set iterUnit_164 = null
	set r_329 = null
	set r_330 = null
	set filter_165 = null
	set g_166 = null
	set this_166 = null
	set iterUnit_165 = null
	set r_331 = null
	set r_332 = null
	set filter_166 = null
	set g_167 = null
	set this_167 = null
	set iterUnit_166 = null
	set r_333 = null
	set r_334 = null
	set filter_167 = null
	set g_168 = null
	set this_168 = null
	set iterUnit_167 = null
	set r_335 = null
	set r_336 = null
	set filter_168 = null
	set g_169 = null
	set this_169 = null
	set iterUnit_168 = null
	set r_337 = null
	set r_338 = null
	set filter_169 = null
	set g_170 = null
	set this_170 = null
	set iterUnit_169 = null
	set r_339 = null
	set r_340 = null
	set filter_170 = null
	set g_171 = null
	set this_171 = null
	set iterUnit_170 = null
	set r_341 = null
	set r_342 = null
	set filter_171 = null
	set g_172 = null
	set this_172 = null
	set iterUnit_171 = null
	set r_343 = null
	set r_344 = null
	set filter_172 = null
	set g_173 = null
	set this_173 = null
	set iterUnit_172 = null
	set r_345 = null
	set r_346 = null
	set filter_173 = null
	set g_174 = null
	set this_174 = null
	set iterUnit_173 = null
	set r_347 = null
	set r_348 = null
	set filter_174 = null
	set g_175 = null
	set this_175 = null
	set iterUnit_174 = null
	set r_349 = null
	set r_350 = null
	set filter_175 = null
	set g_176 = null
	set this_176 = null
	set iterUnit_175 = null
	set r_351 = null
	set r_352 = null
	set filter_176 = null
	set g_177 = null
	set this_177 = null
	set iterUnit_176 = null
	set r_353 = null
	set r_354 = null
	set filter_177 = null
	set g_178 = null
	set this_178 = null
	set iterUnit_177 = null
	set r_355 = null
	set r_356 = null
	set filter_178 = null
	set g_179 = null
	set this_179 = null
	set iterUnit_178 = null
endfunction

function new_PlayerStats takes player which_player, string stackPos returns integer
	local integer this_2
	local string stackPos_2
	local integer this_3
	local integer this_4
	local player which_player_2
	local string stackPos_3
	local integer i
	local integer temp
	local player this_5
	local player this_6
	local player this_7
	local boolean andLeft
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackPos_2 = "when calling PlayerStats in Main, line 399"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if PlayerStats_firstFree == 0 then
		if PlayerStats_maxIndex < 32768 then
			set PlayerStats_maxIndex = PlayerStats_maxIndex + 1
			set this_3 = PlayerStats_maxIndex
			set PlayerStats_typeId[this_3] = 677
		else
			call error("Out of memory: Could not create PlayerStats.", "when calling error in Main, line 306")
			set this_3 = 0
		endif
	else
		set PlayerStats_firstFree = PlayerStats_firstFree - 1
		set this_3 = PlayerStats_nextFree[PlayerStats_firstFree]
		set PlayerStats_typeId[this_3] = 677
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_2 = this_3
	set this_4 = this_2
	set which_player_2 = which_player
	set stackPos_3 = "when calling construct_PlayerStats in Main, line 399"
	set wurst_stack[wurst_stack_depth] = stackPos_3
	set wurst_stack_depth = wurst_stack_depth + 1
	set PlayerStats_is_in_game[this_4] = false
	set PlayerStats_unhappiness[this_4] = 0
	set PlayerStats_force_id[this_4] = -1
	set PlayerStats_pl[this_4] = which_player_2
	set this_5 = which_player_2
	set this_6 = this_5
	if GetPlayerSlotState(this_6) == PLAYER_SLOT_STATE_PLAYING then
		set this_7 = this_5
		set andLeft = GetPlayerController(this_7) == MAP_CONTROL_USER
	else
		set andLeft = false
	endif
	set PlayerStats_is_in_game[this_4] = andLeft
	set i = 0
	set temp = 24 - 1
	loop
		exitwhen i > temp
		if Player_players[i] == which_player_2 then
			call PlayerStats_alliance_states_set(this_4, i, -1, "when writing array PlayerStats_alliance_states in Main, line 406")
		else
			call PlayerStats_alliance_states_set(this_4, i, bj_ALLIANCE_UNALLIED, "when writing array PlayerStats_alliance_states in Main, line 408")
		endif
		set i = i + 1
	endloop
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set which_player_2 = null
	set this_5 = null
	set this_6 = null
	set this_7 = null
	return this_2
endfunction

function init_MainInit takes string stackPos returns boolean
	local integer i
	local integer temp
	local trigger receiver
	local trigger receiver_2
	local string msg
	local string msg_2
	local integer techid
	local integer maximum
	local player whichPlayer
	local integer this_2
	local boolean flag
	local string stackPos_2
	local integer this_3
	local boolean flag_2
	local player this_4
	local player this_5
	local player this_6
	local trigger this_7
	local real timeout
	local boolean periodic
	local trigger this_8
	local code actionFunc
	local boolean andLeft
	local real tuple_temp
	local real tuple_temp_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set tuple_temp = 311.2
	set tuple_temp_2 = 5166.7
	set MainInit_SPAWN_POINT_x = tuple_temp
	set MainInit_SPAWN_POINT_y = tuple_temp_2
	set MainInit_ksCT[0] = "You're playing |cffffff65Crusade over Europe|r.\nA grand strategy medieval game inspired by many games and genres.\nCreate alliances and dissolve them just as easily, declare war on your neighbours and |cfff5da16Conquer Europe|r."
	set MainInit_ksCT[1] = "Use your |cffff8040Settler|r to choose the location of your Kingdom, use the ability |cffffff80Create Capitol|r on any Town Hall to build your Capitol.\nChoose your postion carefully and be mindful of the other players positions."
	set MainInit_ksCT[2] = "|cfff5da16Mechanics|r\n\n|cff80ff00Supply & Nutrition:|r All units and building will continuously lose Hit Points if not supplied by Cities or Supply Horses.\n|cffff0000Unrest:|r Is dynamic and can be checked in the Economy Tab (F2). High Unrest will cause revolts to appear in your Kingdom."
	set MainInit_ksCT[3] = "|cfff5da16Combat & Diplomacy|r\n\nBuild your army but keep in mind that every army will have it's weaknesses, you must have a flexible strategy that will allow you to change your army composition quickly.\nUse |cffffff80Diplomacy|r (F1) menu to create Alliances and Declare War."
	set MainInit_ksCT[4] = "|cfff5da16Economy|r\n\n|cffffff80Florins|r (Gold) are given each Turn (1 minute), you can increase the amount generated by capturing |cffffff80Cities|r or precious |cffffff80Ores|r and upgrading them in to |cffffff80Mines|r.\nLumber is harvested from Trees.\nYou can check your current income and unrest in Economy (F2) - Statistics (A)"
	if true then
		set msg = "Debug info is enabled. Only for Red."
		call DisplayTimedTextToPlayer(Player_players[0], 0., 0., 60., msg)
	endif
	if true then
		set msg_2 = "Debug mode is on."
		call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., 45., msg_2)
	endif
	call SetupCities("when calling SetupCities in MainInit, line 630")
	call SetDiploEconomyRangeMax()
	call SetForceAllianceStateBJ(bj_FORCE_ALL_PLAYERS, bj_FORCE_PLAYER[PLAYER_NEUTRAL_PASSIVE], bj_ALLIANCE_NEUTRAL)
	call SetForceAllianceStateBJ(bj_FORCE_ALL_PLAYERS, bj_FORCE_ALL_PLAYERS, bj_ALLIANCE_UNALLIED)
	call SetForceAllianceStateBJ(Main_fWE, Main_fWE, bj_ALLIANCE_NEUTRAL)
	call SetForceAllianceStateBJ(Main_fEE, Main_fEE, bj_ALLIANCE_NEUTRAL)
	call SetForceAllianceStateBJ(Main_fME, Main_fME, bj_ALLIANCE_NEUTRAL)
	call SetForceAllianceStateBJ(Main_fBZ, Main_fBZ, bj_ALLIANCE_NEUTRAL)
	set i = 0
	set temp = 24 - 1
	loop
		exitwhen i > temp
		call SetPlayerState(Player_players[i], PLAYER_STATE_RESOURCE_GOLD, 260)
		call SetPlayerState(Player_players[i], PLAYER_STATE_RESOURCE_LUMBER, 250)
		if true then
			call SetPlayerState(Player_players[i], PLAYER_STATE_RESOURCE_GOLD, 99999999)
			call SetPlayerState(Player_players[i], PLAYER_STATE_RESOURCE_LUMBER, 99999999)
		endif
		set techid = 1747988789
		set maximum = 1
		set whichPlayer = Player_players[i]
		call SetPlayerTechMaxAllowed(whichPlayer, techid, maximum)
		set Main_player_stats[i] = new_PlayerStats(Player_players[i], "when calling new_PlayerStats in MainInit, line 656")
		set this_2 = Main_player_stats[i]
		set this_4 = Player_players[i]
		set this_5 = this_4
		if GetPlayerSlotState(this_5) == PLAYER_SLOT_STATE_PLAYING then
			set this_6 = this_4
			set andLeft = GetPlayerController(this_6) == MAP_CONTROL_USER
		else
			set andLeft = false
		endif
		set flag = andLeft
		set stackPos_2 = "when calling SetInGame in MainInit, line 657"
		set wurst_stack[wurst_stack_depth] = stackPos_2
		set wurst_stack_depth = wurst_stack_depth + 1
		if PlayerStats_typeId[this_2] == 0 then
			if this_2 == 0 then
				call error("Nullpointer exception when calling PlayerStats.SetInGame", "when calling error in Main, line 331")
			else
				call error("Called PlayerStats.SetInGame on invalid object.", "when calling error in Main, line 331")
			endif
		endif
		set this_3 = this_2
		set flag_2 = flag
		set PlayerStats_is_in_game[this_3] = flag_2
		set wurst_stack_depth = wurst_stack_depth - 1
		set i = i + 1
	endloop
	call SetPlayersAtStart("when calling SetPlayersAtStart in MainInit, line 659")
	set receiver = CreateTrigger()
	set this_7 = receiver
	set timeout = 0.01
	set periodic = false
	call TriggerRegisterTimerEvent(this_7, timeout, periodic)
	set receiver_2 = receiver
	set this_8 = receiver_2
	set actionFunc = ref_function_CinematicTutorial
	call TriggerAddAction(this_8, actionFunc)
	set wurst_stack_depth = wurst_stack_depth - 1
	set receiver = null
	set receiver_2 = null
	set whichPlayer = null
	set this_4 = null
	set this_5 = null
	set this_6 = null
	set this_7 = null
	set this_8 = null
	return true
endfunction

function bridge_init_MainInit takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_MainInit("MainInit, line 1")
endfunction

function bridge_init_ObjectIdGenerator takes nothing returns boolean
	local string stackPos
	local string stackPos_2
	local string stackPos_3
	local integer this_2
	local string stackPos_4
	local string stackPos_5
	local integer this_3
	local string stackPos_6
	local string stackPos_7
	local integer this_4
	local string stackPos_8
	local string stackPos_9
	local integer this_5
	local string stackPos_10
	local string stackPos_11
	local integer this_6
	local string stackPos_12
	local string stackPos_13
	local integer this_7
	set wurst_stack_depth = 0
	set stackPos = "ObjectIdGenerator, line 1"
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackPos_2 = "when calling new_IdGenerator in ObjectIdGenerator, line 7"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackPos_3 = "when calling IdGenerator in ObjectIdGenerator, line 20"
	set wurst_stack[wurst_stack_depth] = stackPos_3
	set wurst_stack_depth = wurst_stack_depth + 1
	if IdGenerator_firstFree == 0 then
		if IdGenerator_maxIndex < 32768 then
			set IdGenerator_maxIndex = IdGenerator_maxIndex + 1
			set this_2 = IdGenerator_maxIndex
		else
			call error("Out of memory: Could not create IdGenerator.", "when calling error in ObjectIdGenerator, line 14")
			set this_2 = 0
		endif
	else
		set IdGenerator_firstFree = IdGenerator_firstFree - 1
		set this_2 = IdGenerator_nextFree[IdGenerator_firstFree]
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set stackPos_4 = "when calling new_IdGenerator in ObjectIdGenerator, line 8"
	set wurst_stack[wurst_stack_depth] = stackPos_4
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackPos_5 = "when calling IdGenerator in ObjectIdGenerator, line 20"
	set wurst_stack[wurst_stack_depth] = stackPos_5
	set wurst_stack_depth = wurst_stack_depth + 1
	if IdGenerator_firstFree == 0 then
		if IdGenerator_maxIndex < 32768 then
			set IdGenerator_maxIndex = IdGenerator_maxIndex + 1
			set this_3 = IdGenerator_maxIndex
		else
			call error("Out of memory: Could not create IdGenerator.", "when calling error in ObjectIdGenerator, line 14")
			set this_3 = 0
		endif
	else
		set IdGenerator_firstFree = IdGenerator_firstFree - 1
		set this_3 = IdGenerator_nextFree[IdGenerator_firstFree]
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set stackPos_6 = "when calling new_IdGenerator in ObjectIdGenerator, line 9"
	set wurst_stack[wurst_stack_depth] = stackPos_6
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackPos_7 = "when calling IdGenerator in ObjectIdGenerator, line 20"
	set wurst_stack[wurst_stack_depth] = stackPos_7
	set wurst_stack_depth = wurst_stack_depth + 1
	if IdGenerator_firstFree == 0 then
		if IdGenerator_maxIndex < 32768 then
			set IdGenerator_maxIndex = IdGenerator_maxIndex + 1
			set this_4 = IdGenerator_maxIndex
		else
			call error("Out of memory: Could not create IdGenerator.", "when calling error in ObjectIdGenerator, line 14")
			set this_4 = 0
		endif
	else
		set IdGenerator_firstFree = IdGenerator_firstFree - 1
		set this_4 = IdGenerator_nextFree[IdGenerator_firstFree]
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set stackPos_8 = "when calling new_IdGenerator in ObjectIdGenerator, line 10"
	set wurst_stack[wurst_stack_depth] = stackPos_8
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackPos_9 = "when calling IdGenerator in ObjectIdGenerator, line 20"
	set wurst_stack[wurst_stack_depth] = stackPos_9
	set wurst_stack_depth = wurst_stack_depth + 1
	if IdGenerator_firstFree == 0 then
		if IdGenerator_maxIndex < 32768 then
			set IdGenerator_maxIndex = IdGenerator_maxIndex + 1
			set this_5 = IdGenerator_maxIndex
		else
			call error("Out of memory: Could not create IdGenerator.", "when calling error in ObjectIdGenerator, line 14")
			set this_5 = 0
		endif
	else
		set IdGenerator_firstFree = IdGenerator_firstFree - 1
		set this_5 = IdGenerator_nextFree[IdGenerator_firstFree]
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set stackPos_10 = "when calling new_IdGenerator in ObjectIdGenerator, line 11"
	set wurst_stack[wurst_stack_depth] = stackPos_10
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackPos_11 = "when calling IdGenerator in ObjectIdGenerator, line 20"
	set wurst_stack[wurst_stack_depth] = stackPos_11
	set wurst_stack_depth = wurst_stack_depth + 1
	if IdGenerator_firstFree == 0 then
		if IdGenerator_maxIndex < 32768 then
			set IdGenerator_maxIndex = IdGenerator_maxIndex + 1
			set this_6 = IdGenerator_maxIndex
		else
			call error("Out of memory: Could not create IdGenerator.", "when calling error in ObjectIdGenerator, line 14")
			set this_6 = 0
		endif
	else
		set IdGenerator_firstFree = IdGenerator_firstFree - 1
		set this_6 = IdGenerator_nextFree[IdGenerator_firstFree]
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set stackPos_12 = "when calling new_IdGenerator in ObjectIdGenerator, line 12"
	set wurst_stack[wurst_stack_depth] = stackPos_12
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackPos_13 = "when calling IdGenerator in ObjectIdGenerator, line 20"
	set wurst_stack[wurst_stack_depth] = stackPos_13
	set wurst_stack_depth = wurst_stack_depth + 1
	if IdGenerator_firstFree == 0 then
		if IdGenerator_maxIndex < 32768 then
			set IdGenerator_maxIndex = IdGenerator_maxIndex + 1
			set this_7 = IdGenerator_maxIndex
		else
			call error("Out of memory: Could not create IdGenerator.", "when calling error in ObjectIdGenerator, line 14")
			set this_7 = 0
		endif
	else
		set IdGenerator_firstFree = IdGenerator_firstFree - 1
		set this_7 = IdGenerator_nextFree[IdGenerator_firstFree]
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	return true
endfunction

function init_OnUnitEnterLeave takes string stackPos returns boolean
	local integer i
	local integer temp
	local integer clVar
	local player this_2
	local integer abilityId
	local boolean avail
	local string stackPos_2
	local integer this_3
	local integer cb
	local string stackPos_3
	local real timeToWait
	local integer cb_2
	local string stackPos_4
	local integer this_4
	local real time
	local string stackPos_5
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set OnUnitEnterLeave_eventTrigger = CreateTrigger()
	set OnUnitEnterLeave_preplacedUnits = CreateGroup()
	set i = 0
	set temp = bj_MAX_PLAYER_SLOTS - 1
	loop
		exitwhen i > temp
		set this_2 = Player_players[i]
		set abilityId = 1095577649
		set avail = false
		call SetPlayerAbilityAvailable(this_2, abilityId, avail)
		set i = i + 1
	endloop
	set stackPos_2 = "when calling alloc_Closure in OnUnitEnterLeave, line 59"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if CallbackSingle_firstFree == 0 then
		if CallbackSingle_maxIndex < 32768 then
			set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
			set this_3 = CallbackSingle_maxIndex
			set CallbackSingle_typeId[this_3] = 637
		else
			call error("Out of memory: Could not create Closure.", "when calling error in OnUnitEnterLeave, line 59")
			set this_3 = 0
		endif
	else
		set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
		set this_3 = CallbackSingle_nextFree[CallbackSingle_firstFree]
		set CallbackSingle_typeId[this_3] = 637
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set clVar = this_3
	set cb = clVar
	set stackPos_3 = "when calling nullTimer in OnUnitEnterLeave, line 59"
	set wurst_stack[wurst_stack_depth] = stackPos_3
	set wurst_stack_depth = wurst_stack_depth + 1
	set timeToWait = 0.
	set cb_2 = cb
	set stackPos_4 = "when calling doAfter in ClosureTimers, line 22"
	set wurst_stack[wurst_stack_depth] = stackPos_4
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_4 = cb_2
	set time = timeToWait
	set stackPos_5 = "when calling start in ClosureTimers, line 15"
	set wurst_stack[wurst_stack_depth] = stackPos_5
	set wurst_stack_depth = wurst_stack_depth + 1
	if CallbackSingle_typeId[this_4] == 0 then
		if this_4 == 0 then
			call error("Nullpointer exception when calling CallbackSingle.start", "when calling error in ClosureTimers, line 67")
		else
			call error("Called CallbackSingle.start on invalid object.", "when calling error in ClosureTimers, line 67")
		endif
	endif
	call CallbackSingle_start(this_4, time, "when calling start in ClosureTimers, line 67")
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_2 = null
	return true
endfunction

function bridge_init_OnUnitEnterLeave takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_OnUnitEnterLeave("OnUnitEnterLeave, line 1")
endfunction

function init_Preloader takes string stackPos returns boolean
	local integer clVar
	local player p
	local integer unitId
	local real pos_x
	local real pos_y
	local real facing_radians
	local real this_radians
	local integer this_2
	local integer value
	local string result_2
	local integer remainingValue
	local integer byteno
	local integer charValue
	local string this_3
	local integer index
	local string stackPos_2
	local integer this_4
	local integer cb
	local string stackPos_3
	local real timeToWait
	local integer cb_2
	local string stackPos_4
	local integer this_5
	local real time
	local string stackPos_5
	local player temp
	local integer temp_2
	local real temp_3
	local real temp_4
	local real tuple_temp
	local real tuple_temp_2
	local real tuple_temp_3
	local real tuple_temp_4
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set Preloader_dumg = CreateGroup()
	set p = Basics_DUMMY_PLAYER
	set unitId = 2019849581
	set tuple_temp = 0.
	set tuple_temp_2 = 0.
	set pos_x = tuple_temp
	set pos_y = tuple_temp_2
	set tuple_temp_3 = 0.
	set facing_radians = tuple_temp_3
	set temp = p
	set temp_2 = unitId
	set temp_3 = pos_x
	set temp_4 = pos_y
	set tuple_temp_4 = facing_radians
	set this_radians = tuple_temp_4
	set Preloader_dum = CreateUnit(temp, temp_2, temp_3, temp_4, this_radians * 57.295779513)
	if Preloader_dum == null then
		set this_2 = 2019849581
		set value = this_2
		set result_2 = ""
		set remainingValue = value
		set byteno = 0
		loop
			exitwhen byteno > 3
			set charValue = ModuloInteger(remainingValue, 256)
			set remainingValue = remainingValue / 256
			set this_3 = ".................................!.#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[.]^_`abcdefghijklmnopqrstuvwxyz{|}~................................................................................................................................."
			set index = charValue
			set result_2 = SubString(this_3, index, index + 1) + result_2
			set byteno = byteno + 1
		endloop
		call error("DUMMY_UNITID (" + result_2 + ") not added correctly to the map.", "when calling error in Preloader, line 52")
	endif
	if true then
		set stackPos_2 = "when calling alloc_Closure in Preloader, line 54"
		set wurst_stack[wurst_stack_depth] = stackPos_2
		set wurst_stack_depth = wurst_stack_depth + 1
		if CallbackSingle_firstFree == 0 then
			if CallbackSingle_maxIndex < 32768 then
				set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
				set this_4 = CallbackSingle_maxIndex
				set CallbackSingle_typeId[this_4] = 638
			else
				call error("Out of memory: Could not create Closure.", "when calling error in Preloader, line 54")
				set this_4 = 0
			endif
		else
			set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
			set this_4 = CallbackSingle_nextFree[CallbackSingle_firstFree]
			set CallbackSingle_typeId[this_4] = 638
		endif
		set wurst_stack_depth = wurst_stack_depth - 1
		set clVar = this_4
		set cb = clVar
		set stackPos_3 = "when calling nullTimer in Preloader, line 54"
		set wurst_stack[wurst_stack_depth] = stackPos_3
		set wurst_stack_depth = wurst_stack_depth + 1
		set timeToWait = 0.
		set cb_2 = cb
		set stackPos_4 = "when calling doAfter in ClosureTimers, line 22"
		set wurst_stack[wurst_stack_depth] = stackPos_4
		set wurst_stack_depth = wurst_stack_depth + 1
		set this_5 = cb_2
		set time = timeToWait
		set stackPos_5 = "when calling start in ClosureTimers, line 15"
		set wurst_stack[wurst_stack_depth] = stackPos_5
		set wurst_stack_depth = wurst_stack_depth + 1
		if CallbackSingle_typeId[this_5] == 0 then
			if this_5 == 0 then
				call error("Nullpointer exception when calling CallbackSingle.start", "when calling error in ClosureTimers, line 67")
			else
				call error("Called CallbackSingle.start on invalid object.", "when calling error in ClosureTimers, line 67")
			endif
		endif
		call CallbackSingle_start(this_5, time, "when calling start in ClosureTimers, line 67")
		set wurst_stack_depth = wurst_stack_depth - 1
		set wurst_stack_depth = wurst_stack_depth - 1
		set wurst_stack_depth = wurst_stack_depth - 1
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set p = null
	set temp = null
	return true
endfunction

function bridge_init_Preloader takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_Preloader("Preloader, line 1")
endfunction

function bridge_init_RegisterEvents takes nothing returns boolean
	local string stackPos
	local playerunitevent p
	local code c
	set wurst_stack_depth = 0
	set stackPos = "RegisterEvents, line 1"
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set RegisterEvents_onCastMap = new_HashMap("when calling new_HashMap in RegisterEvents, line 55")
	set p = EVENT_PLAYER_UNIT_SPELL_EFFECT
	set c = ref_function_bridge_RegisterEvents_closure_impl
	call registerPlayerUnitEvent(p, null, c, null)
	set wurst_stack_depth = wurst_stack_depth - 1
	set p = null
	return true
endfunction

function initialize takes nothing returns nothing
	local integer i
	local integer temp
	local string this_2
	set StringUtils_c2s[0] = ""
	set StringUtils_c2s[1] = ""
	set StringUtils_c2s[2] = ""
	set StringUtils_c2s[3] = ""
	set StringUtils_c2s[4] = ""
	set StringUtils_c2s[5] = ""
	set StringUtils_c2s[6] = ""
	set StringUtils_c2s[7] = ""
	set StringUtils_c2s[8] = ""
	set StringUtils_c2s[9] = "\t"
	set StringUtils_c2s[10] = "\n"
	set StringUtils_c2s[11] = ""
	set StringUtils_c2s[12] = ""
	set StringUtils_c2s[13] = "\r"
	set StringUtils_c2s[14] = ""
	set StringUtils_c2s[15] = ""
	set StringUtils_c2s[16] = ""
	set StringUtils_c2s[17] = ""
	set StringUtils_c2s[18] = ""
	set StringUtils_c2s[19] = ""
	set StringUtils_c2s[20] = ""
	set StringUtils_c2s[21] = ""
	set StringUtils_c2s[22] = ""
	set StringUtils_c2s[23] = ""
	set StringUtils_c2s[24] = ""
	set StringUtils_c2s[25] = ""
	set StringUtils_c2s[26] = ""
	set StringUtils_c2s[27] = ""
	set StringUtils_c2s[28] = ""
	set StringUtils_c2s[29] = ""
	set StringUtils_c2s[30] = ""
	set StringUtils_c2s[31] = ""
	set StringUtils_c2s[32] = " "
	set StringUtils_c2s[33] = "!"
	set StringUtils_c2s[34] = "\""
	set StringUtils_c2s[35] = "#"
	set StringUtils_c2s[36] = "$"
	set StringUtils_c2s[37] = "%"
	set StringUtils_c2s[38] = "&"
	set StringUtils_c2s[39] = "'"
	set StringUtils_c2s[40] = "("
	set StringUtils_c2s[41] = ")"
	set StringUtils_c2s[42] = "*"
	set StringUtils_c2s[43] = "+"
	set StringUtils_c2s[44] = ","
	set StringUtils_c2s[45] = "-"
	set StringUtils_c2s[46] = "."
	set StringUtils_c2s[47] = "/"
	set StringUtils_c2s[48] = "0"
	set StringUtils_c2s[49] = "1"
	set StringUtils_c2s[50] = "2"
	set StringUtils_c2s[51] = "3"
	set StringUtils_c2s[52] = "4"
	set StringUtils_c2s[53] = "5"
	set StringUtils_c2s[54] = "6"
	set StringUtils_c2s[55] = "7"
	set StringUtils_c2s[56] = "8"
	set StringUtils_c2s[57] = "9"
	set StringUtils_c2s[58] = ":"
	set StringUtils_c2s[59] = ";"
	set StringUtils_c2s[60] = "<"
	set StringUtils_c2s[61] = "="
	set StringUtils_c2s[62] = ">"
	set StringUtils_c2s[63] = "?"
	set StringUtils_c2s[64] = "@"
	set StringUtils_c2s[65] = "A"
	set StringUtils_c2s[66] = "B"
	set StringUtils_c2s[67] = "C"
	set StringUtils_c2s[68] = "D"
	set StringUtils_c2s[69] = "E"
	set StringUtils_c2s[70] = "F"
	set StringUtils_c2s[71] = "G"
	set StringUtils_c2s[72] = "H"
	set StringUtils_c2s[73] = "I"
	set StringUtils_c2s[74] = "J"
	set StringUtils_c2s[75] = "K"
	set StringUtils_c2s[76] = "L"
	set StringUtils_c2s[77] = "M"
	set StringUtils_c2s[78] = "N"
	set StringUtils_c2s[79] = "O"
	set StringUtils_c2s[80] = "P"
	set StringUtils_c2s[81] = "Q"
	set StringUtils_c2s[82] = "R"
	set StringUtils_c2s[83] = "S"
	set StringUtils_c2s[84] = "T"
	set StringUtils_c2s[85] = "U"
	set StringUtils_c2s[86] = "V"
	set StringUtils_c2s[87] = "W"
	set StringUtils_c2s[88] = "X"
	set StringUtils_c2s[89] = "Y"
	set StringUtils_c2s[90] = "Z"
	set StringUtils_c2s[91] = "["
	set StringUtils_c2s[92] = "\\"
	set StringUtils_c2s[93] = "]"
	set StringUtils_c2s[94] = "^"
	set StringUtils_c2s[95] = "_"
	set StringUtils_c2s[96] = "`"
	set StringUtils_c2s[97] = "a"
	set StringUtils_c2s[98] = "b"
	set StringUtils_c2s[99] = "c"
	set StringUtils_c2s[100] = "d"
	set StringUtils_c2s[101] = "e"
	set StringUtils_c2s[102] = "f"
	set StringUtils_c2s[103] = "g"
	set StringUtils_c2s[104] = "h"
	set StringUtils_c2s[105] = "i"
	set StringUtils_c2s[106] = "j"
	set StringUtils_c2s[107] = "k"
	set StringUtils_c2s[108] = "l"
	set StringUtils_c2s[109] = "m"
	set StringUtils_c2s[110] = "n"
	set StringUtils_c2s[111] = "o"
	set StringUtils_c2s[112] = "p"
	set StringUtils_c2s[113] = "q"
	set StringUtils_c2s[114] = "r"
	set StringUtils_c2s[115] = "s"
	set StringUtils_c2s[116] = "t"
	set StringUtils_c2s[117] = "u"
	set StringUtils_c2s[118] = "v"
	set StringUtils_c2s[119] = "w"
	set StringUtils_c2s[120] = "x"
	set StringUtils_c2s[121] = "y"
	set StringUtils_c2s[122] = "z"
	set StringUtils_c2s[123] = "{"
	set StringUtils_c2s[124] = "|"
	set StringUtils_c2s[125] = "}"
	set StringUtils_c2s[126] = "~"
	set StringUtils_c2s[127] = ""
	set i = 0
	set temp = StringUtils_MAX_INDEX
	loop
		exitwhen i > temp
		set this_2 = StringUtils_c2s[i]
		if StringCase(this_2, true) == StringUtils_c2s[i] then
			call StringHash(StringUtils_c2s[i])
		endif
		set i = i + 1
	endloop
endfunction

function stringToIndex takes string s, string stackPos returns integer
	local integer hash
	local string this_2
	local integer this_3
	local integer parentKey
	local string stackPos_2
	local boolean Table_Table_hasString_result
	local integer this_4
	local integer parentKey_2
	local hashtable this_5
	local integer parentKey_3
	local integer childKey
	local integer this_6
	local integer parentKey_4
	local string value
	local string stackPos_3
	local integer this_7
	local integer parentKey_5
	local string value_2
	local hashtable this_8
	local integer parentKey_6
	local integer childKey_2
	local string value_3
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_2 = s
	set hash = StringHash(this_2)
	set this_3 = TypeCasting_typecastdata
	set parentKey = hash
	set stackPos_2 = "when calling hasString in TypeCasting, line 24"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if Table_typeId[this_3] == 0 then
		if this_3 == 0 then
			call error("Nullpointer exception when calling Table.hasString", "when calling error in Table, line 18")
		else
			call error("Called Table.hasString on invalid object.", "when calling error in Table, line 18")
		endif
	endif
	set this_4 = this_3
	set parentKey_2 = parentKey
	set this_5 = Table_ht
	set parentKey_3 = this_4
	set childKey = parentKey_2
	set Table_Table_hasString_result = HaveSavedString(this_5, parentKey_3, childKey)
	set wurst_stack_depth = wurst_stack_depth - 1
	if  not Table_Table_hasString_result then
		set this_6 = TypeCasting_typecastdata
		set parentKey_4 = hash
		set value = s
		set stackPos_3 = "when calling saveString in TypeCasting, line 25"
		set wurst_stack[wurst_stack_depth] = stackPos_3
		set wurst_stack_depth = wurst_stack_depth + 1
		if Table_typeId[this_6] == 0 then
			if this_6 == 0 then
				call error("Nullpointer exception when calling Table.saveString", "when calling error in Table, line 60")
			else
				call error("Called Table.saveString on invalid object.", "when calling error in Table, line 60")
			endif
		endif
		set this_7 = this_6
		set parentKey_5 = parentKey_4
		set value_2 = value
		set this_8 = Table_ht
		set parentKey_6 = this_7
		set childKey_2 = parentKey_5
		set value_3 = value_2
		call SaveStr(this_8, parentKey_6, childKey_2, value_3)
		set wurst_stack_depth = wurst_stack_depth - 1
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_5 = null
	set this_8 = null
	return hash
endfunction

function bridge_init_StringUtils takes nothing returns boolean
	local string stackPos
	set wurst_stack_depth = 0
	set stackPos = "StringUtils, line 1"
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set StringUtils_MAX_INDEX = 126 + 1
	call initialize()
	call stringToIndex("", "when calling stringToIndex in StringUtils, line 167")
	set wurst_stack_depth = wurst_stack_depth - 1
	return true
endfunction

function bridge_init_TimerUtils takes nothing returns boolean
	local string stackPos
	set wurst_stack_depth = 0
	set stackPos = "TimerUtils, line 1"
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set TimerUtils_timerData = new_Table("when calling new_Table in TimerUtils, line 12")
	call CreateTimer()
	call CreateTrigger()
	set wurst_stack_depth = wurst_stack_depth - 1
	return true
endfunction

function init_TypeCasting takes string stackPos returns boolean
	local string stackPos_2
	local integer this_2
	local integer parentKey
	local string value
	local string stackPos_3
	local integer this_3
	local integer parentKey_2
	local string value_2
	local hashtable this_4
	local integer parentKey_3
	local integer childKey
	local string value_3
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set TypeCasting_typecastdata = new_Table("when calling new_Table in TypeCasting, line 6")
	set stackPos_2 = "when calling initTypecastData in TypeCasting, line 14"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_2 = TypeCasting_typecastdata
	set parentKey = 0
	set value = ""
	set stackPos_3 = "when calling saveString in TypeCasting, line 11"
	set wurst_stack[wurst_stack_depth] = stackPos_3
	set wurst_stack_depth = wurst_stack_depth + 1
	if Table_typeId[this_2] == 0 then
		if this_2 == 0 then
			call error("Nullpointer exception when calling Table.saveString", "when calling error in Table, line 60")
		else
			call error("Called Table.saveString on invalid object.", "when calling error in Table, line 60")
		endif
	endif
	set this_3 = this_2
	set parentKey_2 = parentKey
	set value_2 = value
	set this_4 = Table_ht
	set parentKey_3 = this_3
	set childKey = parentKey_2
	set value_3 = value_2
	call SaveStr(this_4, parentKey_3, childKey, value_3)
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_4 = null
	return true
endfunction

function bridge_init_TypeCasting takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_TypeCasting("TypeCasting, line 1")
endfunction

function onClick takes string stackPos returns nothing
	local integer city_id
	local player this_2
	local player this_3
	local integer this_4
	local player pl
	local string stackPos_2
	local integer this_5
	local player pl_2
	local string msg1
	local string msg2
	local player pl_3
	local real dur
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_2 = GetTriggerPlayer()
	set City_lastClickTime[GetPlayerId(this_2)] = Main_elapsed_time
	set this_3 = GetTriggerPlayer()
	set City_lastClickUnit[GetPlayerId(this_3)] = GetTriggerUnit()
	set city_id = GetCityId(GetTriggerUnit(), "when calling GetCityId in City, line 16")
	set this_4 = Main_cities[city_id]
	set pl = GetTriggerPlayer()
	set stackPos_2 = "when calling OnCityClick in City, line 17"
	set wurst_stack[wurst_stack_depth] = stackPos_2
	set wurst_stack_depth = wurst_stack_depth + 1
	if City_typeId[this_4] == 0 then
		if this_4 == 0 then
			call error("Nullpointer exception when calling City.OnCityClick", "when calling error in Main, line 219")
		else
			call error("Called City.OnCityClick on invalid object.", "when calling error in Main, line 219")
		endif
	endif
	set this_5 = this_4
	set pl_2 = pl
	set msg1 = "- - - - - - " + Main_ksFactionAdjColored[City_force_id[this_5]] + " city of " + City_city_name[this_5] + " - - - - - -"
	set msg2 = " "
	set pl_3 = pl_2
	set dur = 15.0
	call DisplayTimedTextToPlayer(pl_3, 0., 0., dur, msg1)
	call DisplayTimedTextToPlayer(pl_3, 0., 0., dur, msg2)
	set wurst_stack_depth = wurst_stack_depth - 1
	set wurst_stack_depth = wurst_stack_depth - 1
	set this_2 = null
	set this_3 = null
	set pl = null
	set pl_2 = null
	set pl_3 = null
endfunction

function bridge_onClick takes nothing returns nothing
	set wurst_stack_depth = 0
	call onClick("City, line 43")
endfunction

function cond takes nothing returns boolean
	local unit this_2 = GetSpellAbilityUnit()
	local player temp = GetOwningPlayer(this_2)
	local unit this_3 = GetSpellTargetUnit()
	local integer id
	local player this_4
	local player this_5
	local player this_6
	local unit this_7
	local boolean andLeft
	local boolean andLeft_2
	if temp == GetOwningPlayer(this_3) then
		set andLeft_2 = true
	else
		set this_7 = GetSpellTargetUnit()
		set this_4 = GetOwningPlayer(this_7)
		set this_5 = this_4
		if GetPlayerSlotState(this_5) == PLAYER_SLOT_STATE_PLAYING then
			set this_6 = this_4
			set andLeft = GetPlayerController(this_6) == MAP_CONTROL_USER
		else
			set andLeft = false
		endif
		set andLeft_2 =  not andLeft
	endif
	if andLeft_2 then
		set this_2 = null
		set this_3 = null
		set this_4 = null
		set this_5 = null
		set this_6 = null
		set this_7 = null
		set temp = null
		return false
	endif
	set id = GetSpellAbilityId()
	set this_2 = null
	set this_3 = null
	set this_4 = null
	set this_5 = null
	set this_6 = null
	set this_7 = null
	set temp = null
	return id == 1093677396 or id == 1093677397 or id == 1093677398 or id == 1093677400 or id == 1093677399
endfunction

function string_startsWith takes string this_2, string s returns boolean
	local string this_3 = this_2
	local integer len = StringLength(this_3)
	local string this_4 = s
	local string this_5
	local integer start
	local integer stop
	local string this_6
	if StringLength(this_4) > len then
		return false
	endif
	set this_5 = this_2
	set start = 0
	set this_6 = s
	set stop = StringLength(this_6)
	return SubString(this_5, start, stop) == s
endfunction

function cond_2 takes nothing returns boolean
	return string_startsWith(GetEventPlayerChatString(), "-")
endfunction

function init_Abilities takes nothing returns boolean
	return true
endfunction

function init_AbilityIds takes nothing returns boolean
	return true
endfunction

function init_Angle takes nothing returns boolean
	return true
endfunction

function init_Basics takes nothing returns boolean
	set Basics_DUMMY_PLAYER = Player_players[PLAYER_NEUTRAL_PASSIVE]
	return true
endfunction

function init_Buildings takes nothing returns boolean
	return true
endfunction

function init_Calendar takes nothing returns boolean
	return true
endfunction

function init_ClosureForGroups takes nothing returns boolean
	call CreateGroup()
	call Filter(ref_function_bridge_ClosureForGroups_closure_impl)
	return true
endfunction

function init_ClosureTimers takes nothing returns boolean
	set ClosureTimers_x = 200
	return true
endfunction

function init_Commands takes nothing returns boolean
	local trigger receiver = CreateTrigger()
	local trigger this_2 = receiver
	local boolexpr condition = Condition(ref_function_cond)
	local trigger t
	local trigger receiver_2
	local integer i
	local integer temp
	local trigger this_3
	local code actionFunc
	local trigger this_4
	local player whichPlayer
	local string chatMessageToDetect
	local boolean exactMatchOnly
	call TriggerAddCondition(this_2, condition)
	set receiver_2 = receiver
	set this_3 = receiver_2
	set actionFunc = ref_function_action
	call TriggerAddAction(this_3, actionFunc)
	set t = receiver_2
	set i = 0
	set temp = 24 - 1
	loop
		exitwhen i > temp
		set this_4 = t
		set whichPlayer = Player_players[i]
		set chatMessageToDetect = "-"
		set exactMatchOnly = false
		call TriggerRegisterPlayerChatEvent(this_4, whichPlayer, chatMessageToDetect, exactMatchOnly)
		set i = i + 1
	endloop
	set t = null
	set receiver = null
	set receiver_2 = null
	set this_2 = null
	set condition = null
	set this_3 = null
	set this_4 = null
	set whichPlayer = null
	return true
endfunction

function init_Diplomacy takes nothing returns boolean
	local trigger receiver = CreateTrigger()
	local trigger this_2 = receiver
	local playerunitevent whichEvent = EVENT_PLAYER_UNIT_SPELL_EFFECT
	local trigger trig = this_2
	local playerunitevent whichEvent_2 = whichEvent
	local integer index = 0
	local trigger receiver_2
	local trigger receiver_3
	local trigger this_3
	local boolexpr condition
	local trigger this_4
	local code actionFunc
	loop
		call TriggerRegisterPlayerUnitEvent(trig, Player(index), whichEvent_2, null)
		set index = index + 1
		exitwhen index == bj_MAX_PLAYER_SLOTS
	endloop
	set receiver_2 = receiver
	set this_3 = receiver_2
	set condition = Condition(ref_function_cond_2)
	call TriggerAddCondition(this_3, condition)
	set receiver_3 = receiver_2
	set this_4 = receiver_3
	set actionFunc = ref_function_bridge_action
	call TriggerAddAction(this_4, actionFunc)
	set receiver = null
	set receiver_2 = null
	set receiver_3 = null
	set this_2 = null
	set whichEvent = null
	set trig = null
	set whichEvent_2 = null
	set this_3 = null
	set condition = null
	set this_4 = null
	return true
endfunction

function init_Doodads takes nothing returns boolean
	return true
endfunction

function init_Economy takes nothing returns boolean
	return true
endfunction

function init_ErrorHandling takes nothing returns boolean
	set ErrorHandling_HT = InitHashtable()
	return true
endfunction

function init_GameTimer takes nothing returns boolean
	local timer this_2
	local real time
	local code timerCallBack
	local timer this_3
	local real time_2
	local code timerCallBack_2
	set GameTimer_gameTimer = CreateTimer()
	set this_2 = GameTimer_gameTimer
	set time = 100000.
	set timerCallBack = null
	call TimerStart(this_2, time, false, timerCallBack)
	set this_3 = CreateTimer()
	set time_2 = 0.030
	set timerCallBack_2 = ref_function_GameTimer_closure_impl
	call TimerStart(this_3, time_2, true, timerCallBack_2)
	set this_2 = null
	set this_3 = null
	return true
endfunction

function init_Group takes nothing returns boolean
	call CreateGroup()
	return true
endfunction

function init_HashList takes nothing returns boolean
	set HashList_ht = InitHashtable()
	set HashList_occurences = InitHashtable()
	return true
endfunction

function init_Icons takes nothing returns boolean
	return true
endfunction

function init_Integer takes nothing returns boolean
	return true
endfunction

function init_Lightning takes nothing returns boolean
	return true
endfunction

function init_MagicFunctions takes nothing returns boolean
	return true
endfunction

function initMapBounds takes nothing returns nothing
	local rect cond_result
	local region receiver
	local rect cond_result_2
	local region receiver_2
	local region this_2
	local rect rct
	local region this_3
	local rect rct_2
	local rect this_4
	local rect this_5
	local rect this_6
	local rect this_7
	local rect this_8
	local rect this_9
	local rect this_10
	local rect this_11
	local real this_x
	local real this_y
	local real v_x
	local real v_y
	local real this_x_2
	local real this_y_2
	local real v_x_2
	local real v_y_2
	local real temp
	local real temp_2
	local real temp_3
	local real temp_4
	local real tuple_temp
	local real tuple_temp_2
	local real tuple_temp_3
	local real tuple_temp_4
	local real tuple_temp_5
	local real tuple_temp_6
	local real tuple_temp_7
	local real tuple_temp_8
	local real tuple_temp_9
	local real tuple_temp_10
	local real tuple_temp_11
	local real tuple_temp_12
	local real tuple_temp_13
	local real tuple_temp_14
	local real tuple_temp_15
	local real tuple_temp_16
	local real tuple_temp_17
	local real tuple_temp_18
	local real tuple_temp_19
	local real tuple_temp_20
	if false then
		set cond_result = Rect(-1024., -1024., 1024., 1024.)
	else
		set cond_result = bj_mapInitialPlayableArea
	endif
	set MapBounds_playableMapRect = cond_result
	set receiver = CreateRegion()
	set this_2 = receiver
	set rct = MapBounds_playableMapRect
	call RegionAddRect(this_2, rct)
	if false then
		set cond_result_2 = Rect(-1536., -1536., 1536., 1536.)
	else
		set cond_result_2 = GetWorldBounds()
	endif
	set MapBounds_boundRect = cond_result_2
	set receiver_2 = CreateRegion()
	set this_3 = receiver_2
	set rct_2 = MapBounds_boundRect
	call RegionAddRect(this_3, rct_2)
	set MapBounds_boundRegion = receiver_2
	set this_4 = MapBounds_playableMapRect
	set temp = GetRectMinX(this_4)
	set this_5 = MapBounds_playableMapRect
	set tuple_temp = temp
	set tuple_temp_2 = GetRectMinY(this_5)
	set MapBounds_playableMin_x = tuple_temp
	set MapBounds_playableMin_y = tuple_temp_2
	set this_6 = MapBounds_playableMapRect
	set temp_2 = GetRectMaxX(this_6)
	set this_7 = MapBounds_playableMapRect
	set tuple_temp_3 = temp_2
	set tuple_temp_4 = GetRectMaxY(this_7)
	set MapBounds_playableMax_x = tuple_temp_3
	set MapBounds_playableMax_y = tuple_temp_4
	set this_8 = MapBounds_boundRect
	set temp_3 = GetRectMinX(this_8)
	set this_9 = MapBounds_boundRect
	set tuple_temp_5 = temp_3
	set tuple_temp_6 = GetRectMinY(this_9)
	set MapBounds_boundMin_x = tuple_temp_5
	set MapBounds_boundMin_y = tuple_temp_6
	set this_10 = MapBounds_boundRect
	set temp_4 = GetRectMaxX(this_10)
	set this_11 = MapBounds_boundRect
	set tuple_temp_7 = temp_4
	set tuple_temp_8 = GetRectMaxY(this_11)
	set MapBounds_boundMax_x = tuple_temp_7
	set MapBounds_boundMax_y = tuple_temp_8
	set tuple_temp_9 = MapBounds_playableMin_x
	set tuple_temp_10 = MapBounds_playableMin_y
	set this_x = tuple_temp_9
	set this_y = tuple_temp_10
	set tuple_temp_11 = MapBounds_playableMax_x
	set tuple_temp_12 = MapBounds_playableMax_y
	set v_x = tuple_temp_11
	set v_y = tuple_temp_12
	set tuple_temp_13 = this_x + v_x
	set tuple_temp_14 = this_y + v_y
	set tuple_temp_15 = MapBounds_boundMin_x
	set tuple_temp_16 = MapBounds_boundMin_y
	set this_x_2 = tuple_temp_15
	set this_y_2 = tuple_temp_16
	set tuple_temp_17 = MapBounds_boundMax_x
	set tuple_temp_18 = MapBounds_boundMax_y
	set v_x_2 = tuple_temp_17
	set v_y_2 = tuple_temp_18
	set tuple_temp_19 = this_x_2 + v_x_2
	set tuple_temp_20 = this_y_2 + v_y_2
endfunction

function init_MapBounds takes nothing returns boolean
	call initMapBounds()
	return true
endfunction

function init_Maths takes nothing returns boolean
	return true
endfunction

function init_Matrices takes nothing returns boolean
	return true
endfunction

function init_ObjectIds takes nothing returns boolean
	return true
endfunction

function init_Objects takes nothing returns boolean
	return true
endfunction

function init_OnPlayerLeave takes nothing returns boolean
	local trigger receiver = CreateTrigger()
	local trigger this_2 = receiver
	local code actionFunc = ref_function_bridge_action_2
	local trigger t
	local integer i
	local integer temp
	local trigger this_3
	local player whichPlayer
	local playerevent whichPlayerEvent
	call TriggerAddAction(this_2, actionFunc)
	set t = receiver
	set i = 0
	set temp = 24 - 1
	loop
		exitwhen i > temp
		set this_3 = t
		set whichPlayer = Player_players[i]
		set whichPlayerEvent = EVENT_PLAYER_LEAVE
		call TriggerRegisterPlayerEvent(this_3, whichPlayer, whichPlayerEvent)
		set i = i + 1
	endloop
	set t = null
	set receiver = null
	set this_2 = null
	set this_3 = null
	set whichPlayer = null
	set whichPlayerEvent = null
	return true
endfunction

function init_Player takes nothing returns boolean
	local integer i
	local integer temp
	set Player_localPlayer = GetLocalPlayer()
	set i = 0
	set temp = bj_MAX_PLAYER_SLOTS - 1
	loop
		exitwhen i > temp
		set Player_players[i] = Player(i)
		set i = i + 1
	endloop
	return true
endfunction

function init_Playercolor takes nothing returns boolean
	set Playercolor_PLAYER_COLOR_BLACK_AGGRESSIVE = ConvertPlayerColor(24)
	set Playercolor_PLAYER_COLOR_UNKNOWN1 = ConvertPlayerColor(25)
	set Playercolor_PLAYER_COLOR_UNKNOWN2 = ConvertPlayerColor(26)
	set Playercolor_PLAYER_COLOR_BLACK_PASSIVE = ConvertPlayerColor(27)
	set Playercolor_LOOKUP[0] = PLAYER_COLOR_RED
	set Playercolor_LOOKUP[1] = PLAYER_COLOR_BLUE
	set Playercolor_LOOKUP[2] = PLAYER_COLOR_CYAN
	set Playercolor_LOOKUP[3] = PLAYER_COLOR_PURPLE
	set Playercolor_LOOKUP[4] = PLAYER_COLOR_YELLOW
	set Playercolor_LOOKUP[5] = PLAYER_COLOR_ORANGE
	set Playercolor_LOOKUP[6] = PLAYER_COLOR_GREEN
	set Playercolor_LOOKUP[7] = PLAYER_COLOR_PINK
	set Playercolor_LOOKUP[8] = PLAYER_COLOR_LIGHT_GRAY
	set Playercolor_LOOKUP[9] = PLAYER_COLOR_LIGHT_BLUE
	set Playercolor_LOOKUP[10] = PLAYER_COLOR_AQUA
	set Playercolor_LOOKUP[11] = PLAYER_COLOR_BROWN
	set Playercolor_LOOKUP[12] = PLAYER_COLOR_MAROON
	set Playercolor_LOOKUP[13] = PLAYER_COLOR_NAVY
	set Playercolor_LOOKUP[14] = PLAYER_COLOR_TURQUOISE
	set Playercolor_LOOKUP[15] = PLAYER_COLOR_VIOLET
	set Playercolor_LOOKUP[16] = PLAYER_COLOR_WHEAT
	set Playercolor_LOOKUP[17] = PLAYER_COLOR_PEACH
	set Playercolor_LOOKUP[18] = PLAYER_COLOR_MINT
	set Playercolor_LOOKUP[19] = PLAYER_COLOR_LAVENDER
	set Playercolor_LOOKUP[20] = PLAYER_COLOR_COAL
	set Playercolor_LOOKUP[21] = PLAYER_COLOR_SNOW
	set Playercolor_LOOKUP[22] = PLAYER_COLOR_EMERALD
	set Playercolor_LOOKUP[23] = PLAYER_COLOR_PEANUT
	set Playercolor_LOOKUP[24] = Playercolor_PLAYER_COLOR_BLACK_AGGRESSIVE
	set Playercolor_LOOKUP[25] = Playercolor_PLAYER_COLOR_UNKNOWN1
	set Playercolor_LOOKUP[26] = Playercolor_PLAYER_COLOR_UNKNOWN2
	set Playercolor_LOOKUP[27] = Playercolor_PLAYER_COLOR_BLACK_PASSIVE
	return true
endfunction

function init_Printing takes nothing returns boolean
	return true
endfunction

function init_Quaternion takes nothing returns boolean
	return true
endfunction

function init_Real takes nothing returns boolean
	return true
endfunction

function init_Sounds takes nothing returns boolean
	return true
endfunction

function init_Soundsets takes nothing returns boolean
	return true
endfunction

function init_String takes nothing returns boolean
	local string this_2 = "0123456789"
	local string this_3
	call StringLength(this_2)
	set this_3 = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
	call StringLength(this_3)
	return true
endfunction

function init_Table takes nothing returns boolean
	set Table_ht = InitHashtable()
	return true
endfunction

function init_TargetsAllowed takes nothing returns boolean
	return true
endfunction

function init_Textures takes nothing returns boolean
	return true
endfunction

function init_UI takes nothing returns boolean
	return true
endfunction

function init_UnitIds takes nothing returns boolean
	return true
endfunction

function init_UnitIndexer takes nothing returns boolean
	local code c
	local trigger this_2
	local boolexpr condition
	local code c_2
	local trigger this_3
	local code actionFunc
	set UnitIndexer_onIndexTrigger = CreateTrigger()
	set UnitIndexer_onDeindexTrigger = CreateTrigger()
	set UnitIndexer_indexedUnit = null
	set UnitIndexer_deindexedUnit = null
	set c = ref_function_bridge_UnitIndexer_closure_impl
	set this_2 = OnUnitEnterLeave_eventTrigger
	set condition = Filter(c)
	call TriggerAddCondition(this_2, condition)
	set c_2 = ref_function_bridge_UnitIndexer_closure_impl_2
	set this_3 = OnUnitEnterLeave_eventTrigger
	set actionFunc = c_2
	call TriggerAddAction(this_3, actionFunc)
	set this_2 = null
	set condition = null
	set this_3 = null
	return true
endfunction

function init_Units takes nothing returns boolean
	return true
endfunction

function init_Vectors takes nothing returns boolean
	call Location(0., 0.)
	return true
endfunction

function init_WeatherEffects takes nothing returns boolean
	return true
endfunction

function initGlobals takes nothing returns nothing
	set udg_Supplyhorses = null
	set udg_Temp_Point = null
	set udg_AllPlayerUnits = null
	set udg_GHoriTP = null
	set udg_GVertRP = null
	set udg_GHoriDetectCenter = null
	set udg_GVertDetectCenter = null
	set udg_GateMovingUnits1 = null
	set udg_BuildingRangeCheck = null
	set udg_BuildingRangeCheckPoint = null
	set udg_Supplyhorses2 = null
	set gg_rct_CITY_WE_Burgh = null
	set gg_rct_CITY_WE_Cardiff = null
	set gg_rct_CITY_WE_Galway = null
	set gg_rct_CITY_WE_Zagreb = null
	set gg_rct_CITY_WE_Ragusa = null
	set gg_rct_CITY_BYZ_Durrazo = null
	set gg_rct_CITY_BYZ_Adrianopolis = null
	set gg_rct_CITY_Byz_Thessalonika = null
	set gg_rct_CITY_BYZ_Constantinople = null
	set gg_rct_CITY_WE_Warwick = null
	set gg_rct_CITY_BYZ_Scopia = null
	set gg_rct_CITY_WE_Vienna = null
	set gg_rct_CITY_WE_Prague = null
	set gg_rct_CITY_WE_Esztergom = null
	set gg_rct_CITY_WE_Stettin = null
	set gg_rct_CITY_WE_Krakow = null
	set gg_rct_CITY_WE_Wroclaw = null
	set gg_rct_CITY_EE_Constanta = null
	set gg_rct_CITY_EE_Targoviste = null
	set gg_rct_CITY_WE_Brasov = null
	set gg_rct_CITY_WE_Belgrade = null
	set gg_rct_CITY_WE_Flensburg = null
	set gg_rct_CITY_WE_Roskilde = null
	set gg_rct_CITY_WE_Aarhus = null
	set gg_rct_CITY_WE_Madgeburg = null
	set gg_rct_CITY_EE_Sofia = null
	set gg_rct_CITY_WE_Plock = null
	set gg_rct_CITY_WE_Poznan = null
	set gg_rct_CITY_WE_Kassa = null
	set gg_rct_CITY_WE_Varad = null
	set gg_rct_CITY_EE_Konigsberg = null
	set gg_rct_CITY_EE_Riga = null
	set gg_rct_CITY_WE_Fictional_2 = null
	set gg_rct_CITY_EE_Hrodna = null
	set gg_rct_CITY_EE_Vilnius = null
	set gg_rct_CITY_EE_Caffa = null
	set gg_rct_CITY_EE_Pskov = null
	set gg_rct_CITY_EE_Reval = null
	set gg_rct_CITY_EE_Novgorod = null
	set gg_rct_CITY_EE_Polotsk = null
	set gg_rct_CITY_EE_Halych = null
	set gg_rct_CITY_WE_Groningen = null
	set gg_rct_CITY_ME_Tunis = null
	set gg_rct_CITY_EE_Azaq = null
	set gg_rct_CITY_EE_Kiev = null
	set gg_rct_CITY_EE_Minsk = null
	set gg_rct_CITY_EE_Smolensk = null
	set gg_rct_CITY_ME_Sinop = null
	set gg_rct_CITY_ME_Isparta = null
	set gg_rct_CITY_ME_Kayseri = null
	set gg_rct_CITY_ME_Adana = null
	set gg_rct_CITY_ME_Konya = null
	set gg_rct_CITY_ME_Antioch = null
	set gg_rct_CITY_BYZ_Trebizond = null
	set gg_rct_CITY_BYZ_Nicosia = null
	set gg_rct_CITY_ME_JERUSALEM = null
	set gg_rct_CITY_ME_Edessa = null
	set gg_rct_CITY_BYZ_Smyrna = null
	set gg_rct_CITY_ME_Ankara = null
	set gg_rct_CITY_BYZ_Nicae = null
	set gg_rct_CITY_ME_Fes = null
	set gg_rct_CITY_ME_Oran = null
	set gg_rct_CITY_ME_Algiers = null
	set gg_rct_CITY_ME_Mahdya = null
	set gg_rct_CITY_ME_Tripoli = null
	set gg_rct_CITY_ME_Benghazi = null
	set gg_rct_CITY_ME_Medina = null
	set gg_rct_CITY_ME_Alexandria = null
	set gg_rct_CITY_ME_Damietta = null
	set gg_rct_CITY_ME_Cairo = null
	set gg_rct_CITY_EE_Timutarakan = null
	set gg_rct_CITY_EE_Baia = null
	set gg_rct_CITY_EE_Zhytomyr = null
	set gg_rct_CITY_EE_Oleshe = null
	set gg_rct_CITY_EE_Dnipro = null
	set gg_rct_CITY_EE_Moscow = null
	set gg_rct_CITY_EE_Bryansk = null
	set gg_rct_CITY_ME_Yerevan = null
	set gg_rct_CITY_EE_Sarkel = null
	set gg_rct_CITY_BYZ_Kutaisi = null
	set gg_rct_CITY_BYZ_Tbilisi = null
	set gg_rct_CITY_ME_Damascus = null
	set gg_rct_CITY_ME_Tartus = null
	set gg_rct_CITY_ME_Gaza = null
	set gg_rct_CITY_ME_Mosul = null
	set gg_rct_CITY_ME_Acre = null
	set gg_rct_CITY_ME_Al_Aqaba = null
	set gg_rct_CITY_ME_Quarisiya = null
	set gg_rct_CITY_ME_Tamiya = null
	set gg_rct_CITY_ME_Diyarbakir = null
	set gg_rct_CITY_ME_Erez = null
	set gg_rct_CITY_WE_Salzburg = null
	set gg_rct_CITY_WE_Innsbruck = null
	set gg_rct_CITY_WE_Cologne = null
	set gg_rct_CITY_WE_Frankfurt = null
	set gg_rct_Hamburg_CITY = null
	set gg_rct_CITY_ME_Palma = null
	set gg_rct_CITY_EE_Astrakhan = null
	set gg_rct_CITY_EE_Ryazan = null
	set gg_rct_CITY_WE_Edinburgh = null
	set gg_rct_CITY_WE_Aberdeen = null
	set gg_rct_CITY_WE_Inverness = null
	set gg_rct_CITY_WE_York = null
	set gg_rct_CITY_WE_Dublin = null
	set gg_rct_CITY_WE_Ireland = null
	set gg_rct_CITY_WE_Caernarfon = null
	set gg_rct_CITY_WE_London = null
	set gg_rct_CITY_WE_Winchester = null
	set gg_rct_CITY_WE_Exeter = null
	set gg_rct_CITY_WE_Caen = null
	set gg_rct_CITY_WE_Rheims = null
	set gg_rct_CITY_WE_Paris = null
	set gg_rct_CITY_WE_Dijon = null
	set gg_rct_CITY_WE_Clermont = null
	set gg_rct_CITY_WE_Toulouse = null
	set gg_rct_CITY_WE_Bordeaux = null
	set gg_rct_CITY_WE_Zaragoza = null
	set gg_rct_CITY_WE_Barcelona = null
	set gg_rct_CITY_WE_Leon = null
	set gg_rct_CITY_WE_Burgos = null
	set gg_rct_CITY_ME_Madrid = null
	set gg_rct_CITY_WE_Salamanca = null
	set gg_rct_CITY_ME_Lisbon = null
	set gg_rct_CITY_WE_Pamplona = null
	set gg_rct_CITY_WE_Marseille = null
	set gg_rct_CITY_WE_Bruges = null
	set gg_rct_CITY_WE_Antwerp = null
	set gg_rct_CITY_WE_Genoa = null
	set gg_rct_CITY_WE_Milan = null
	set gg_rct_CITY_WE_Venice = null
	set gg_rct_CITY_WE_Bologna = null
	set gg_rct_CITY_WE_Pisa = null
	set gg_rct_CITY_WE_Ancona = null
	set gg_rct_CITY_WE_Rome = null
	set gg_rct_CITY_ME_Granada = null
	set gg_rct_CITY_ME_Cordoba = null
	set gg_rct_CITY_ME_Murcia = null
	set gg_rct_CITY_ME_Valencia = null
	set gg_rct_CITY_WE_Nuremburg = null
	set gg_rct_CITY_WE_Bern = null
	set gg_rct_CITY_WE_Lyon = null
	set gg_rct_CITY_WE_Lund = null
	set gg_rct_CITY_WE_Skara = null
	set gg_rct_CITY_WE_Oslo = null
	set gg_rct_CITY_WE_Eikundarsund = null
	set gg_rct_CITY_WE_Bergen = null
	set gg_rct_CITY_WE_Visby = null
	set gg_rct_CITY_WE_Nykoping = null
	set gg_rct_CITY_ME_Silves = null
	set gg_rct_CITY_ME_Marakesh = null
	set gg_rct_CITY_ME_Luxor = null
	set gg_rct_CITY_WE_Rennes = null
	set gg_rct_CITY_WE_Angers = null
	set gg_rct_CITY_WE_Ajaccio = null
	set gg_rct_CITY_WE_Cagliari = null
	set gg_rct_CITY_WE_Naples = null
	set gg_rct_CITY_WE_Italy = null
	set gg_rct_CITY_WE_Bari = null
	set gg_rct_CITY_WE_Palermo = null
	set gg_rct_CITY_WE_Syracuse = null
	set gg_rct_CITY_WE_Metz = null
	set gg_rct_CITY_BYZ_Balkan = null
	set gg_rct_CITY_BYZ_Athens = null
	set gg_rct_CITY_BYZ_Rhodes = null
	set gg_rct_CITY_EE_Turku = null
	set gg_rct_CITY_BYZ_Fictional = null
	set gg_rct_CITY_ME_Badajoz = null
	set gg_rct_CITY_WE_Oporto = null
	set gg_rct_CITY_WE_Stockholm = null
	set gg_rct_CITY_WE_Kalmar = null
	set gg_rct_CITY_BYZ_Corinth = null
	set gg_rct_CITY_BYZ_Arta = null
	set gg_rct_CITY_BYZ_Candia = null
	set gg_rct_CITY_ME_Kerak = null
	set gg_rct_CITY_ME_Baghdad = null
	set gg_rct_CITY_BYZ_Canakkale = null
	set gg_rct_CITY_EE_Russia = null
	set gg_rct_CITY_WE_Budapest = null
	set gg_snd_Warning = null
	set gg_trg_Melee_Initialization = null
	set gg_trg_F9 = null
	set gg_trg_Gate_Opening = null
	set gg_trg_Gate_Closing_WoodGate_V = null
	set gg_trg_Gate_Closing_WoodGate_H = null
	set gg_trg_Gate_Closing_IronGate_V = null
	set gg_trg_Gate_Closing_IronGate_H = null
	set gg_trg_Supply_Horses = null
	set gg_trg_Supply_Horse_2 = null
	set gg_trg_FarmHouse = null
	set gg_trg_Thatched_Cottage_1 = null
	set gg_trg_Thatched_Cottage_2 = null
	set gg_trg_Thatched_Cottage_3 = null
	set gg_trg_Thatched_Cottage_4 = null
	set gg_trg_Spearmen_1 = null
	set gg_trg_Spearmen_2 = null
	set gg_trg_Heavy_Infantry_1 = null
	set gg_trg_Heavy_Infantry_2 = null
	set gg_trg_Archer_1 = null
	set gg_trg_Archer_2 = null
	set gg_trg_Light_Infantry_1 = null
	set gg_trg_Light_Infantry_2 = null
	set gg_trg_Pikemen_1 = null
	set gg_trg_Pikemen_2 = null
	set gg_trg_Light_Cavalry_1 = null
	set gg_trg_Light_Cavalry_2 = null
	set gg_trg_Heavy_Cavalry_1 = null
	set gg_trg_Heavy_Cavalry_2 = null
	set gg_trg_Skirmisher = null
	set gg_trg_Arquebusers = null
	set gg_trg_Supply_Horse = null
	set gg_trg_Disabled_units_at_beginning = null
	set gg_trg_Spearmen_1_Byzantine = null
	set gg_trg_Spearmen_2_Byzantine = null
	set gg_trg_Heavy_Infantry_1_Byzantine = null
	set gg_trg_Heavy_Infantry_2_Byzantine = null
	set gg_trg_Archer_1_Byzantine = null
	set gg_trg_Archer_2_Byzantine = null
	set gg_trg_Light_Cavalry_1_Byzantine = null
	set gg_trg_Heavy_Cavalry_1_Byzantine = null
	set gg_trg_Heavy_Cavalry_2_Byzantine = null
	set gg_trg_Skirmisher_Byzantine = null
	set gg_trg_Missile_Cavalry_Byzantine = null
	set gg_trg_Disabled_units_Byzantine = null
	set gg_trg_ME_Spearmen_1 = null
	set gg_trg_ME_Spearmen_2 = null
	set gg_trg_ME_Archer_1 = null
	set gg_trg_ME_Archer_2 = null
	set gg_trg_ME_Light_Infantry_1 = null
	set gg_trg_ME_Light_Infantry_2 = null
	set gg_trg_ME_Light_Cavalry_1 = null
	set gg_trg_ME_Light_Cavalry_2 = null
	set gg_trg_ME_Heavy_Cavalry_1 = null
	set gg_trg_ME_Heavy_Cavalry_2 = null
	set gg_trg_ME_Skirmisher = null
	set gg_trg_ME_Missile_Cavalry = null
	set gg_trg_Disabled_units_ME = null
	set gg_trg_Settle = null
	set gg_trg_Settlement_Range_Check = null
	set gg_trg_Church_Range_Check = null
	set gg_trg_Settlement_Aura = null
	set gg_trg_Capitol_City_Hall_Up_Copy = null
	set gg_trg_Capitol_Castle_T3 = null
	set ref_function_Trig_F9_Actions = function Trig_F9_Actions
	set ref_function_Trig_Gate_Opening_Actions = function Trig_Gate_Opening_Actions
	set ref_function_Trig_Gate_Closing_WoodGate_V_Func005A = function Trig_Gate_Closing_WoodGate_V_Func005A
	set ref_function_Trig_Gate_Closing_WoodGate_V_Conditions = function Trig_Gate_Closing_WoodGate_V_Conditions
	set ref_function_Trig_Gate_Closing_WoodGate_V_Actions = function Trig_Gate_Closing_WoodGate_V_Actions
	set ref_function_Trig_Gate_Closing_WoodGate_H_Func005A = function Trig_Gate_Closing_WoodGate_H_Func005A
	set ref_function_Trig_Gate_Closing_WoodGate_H_Conditions = function Trig_Gate_Closing_WoodGate_H_Conditions
	set ref_function_Trig_Gate_Closing_WoodGate_H_Actions = function Trig_Gate_Closing_WoodGate_H_Actions
	set ref_function_Trig_Gate_Closing_IronGate_V_Func005A = function Trig_Gate_Closing_IronGate_V_Func005A
	set ref_function_Trig_Gate_Closing_IronGate_V_Conditions = function Trig_Gate_Closing_IronGate_V_Conditions
	set ref_function_Trig_Gate_Closing_IronGate_V_Actions = function Trig_Gate_Closing_IronGate_V_Actions
	set ref_function_Trig_Gate_Closing_IronGate_H_Func005A = function Trig_Gate_Closing_IronGate_H_Func005A
	set ref_function_Trig_Gate_Closing_IronGate_H_Conditions = function Trig_Gate_Closing_IronGate_H_Conditions
	set ref_function_Trig_Gate_Closing_IronGate_H_Actions = function Trig_Gate_Closing_IronGate_H_Actions
	set ref_function_Trig_Supply_Horses_Func002A = function Trig_Supply_Horses_Func002A
	set ref_function_Trig_Supply_Horses_Actions = function Trig_Supply_Horses_Actions
	set ref_function_Trig_Supply_Horse_2_Func002A = function Trig_Supply_Horse_2_Func002A
	set ref_function_Trig_Supply_Horse_2_Actions = function Trig_Supply_Horse_2_Actions
	set ref_function_Trig_FarmHouse_Conditions = function Trig_FarmHouse_Conditions
	set ref_function_Trig_FarmHouse_Actions = function Trig_FarmHouse_Actions
	set ref_function_Trig_Thatched_Cottage_1_Conditions = function Trig_Thatched_Cottage_1_Conditions
	set ref_function_Trig_Thatched_Cottage_1_Actions = function Trig_Thatched_Cottage_1_Actions
	set ref_function_Trig_Thatched_Cottage_2_Conditions = function Trig_Thatched_Cottage_2_Conditions
	set ref_function_Trig_Thatched_Cottage_2_Actions = function Trig_Thatched_Cottage_2_Actions
	set ref_function_Trig_Thatched_Cottage_3_Conditions = function Trig_Thatched_Cottage_3_Conditions
	set ref_function_Trig_Thatched_Cottage_3_Actions = function Trig_Thatched_Cottage_3_Actions
	set ref_function_Trig_Thatched_Cottage_4_Conditions = function Trig_Thatched_Cottage_4_Conditions
	set ref_function_Trig_Thatched_Cottage_4_Actions = function Trig_Thatched_Cottage_4_Actions
	set ref_function_Trig_Spearmen_1_Conditions = function Trig_Spearmen_1_Conditions
	set ref_function_Trig_Spearmen_1_Actions = function Trig_Spearmen_1_Actions
	set ref_function_Trig_Spearmen_2_Conditions = function Trig_Spearmen_2_Conditions
	set ref_function_Trig_Spearmen_2_Actions = function Trig_Spearmen_2_Actions
	set ref_function_Trig_Heavy_Infantry_1_Conditions = function Trig_Heavy_Infantry_1_Conditions
	set ref_function_Trig_Heavy_Infantry_1_Actions = function Trig_Heavy_Infantry_1_Actions
	set ref_function_Trig_Heavy_Infantry_2_Conditions = function Trig_Heavy_Infantry_2_Conditions
	set ref_function_Trig_Heavy_Infantry_2_Actions = function Trig_Heavy_Infantry_2_Actions
	set ref_function_Trig_Archer_1_Conditions = function Trig_Archer_1_Conditions
	set ref_function_Trig_Archer_1_Actions = function Trig_Archer_1_Actions
	set ref_function_Trig_Archer_2_Conditions = function Trig_Archer_2_Conditions
	set ref_function_Trig_Archer_2_Actions = function Trig_Archer_2_Actions
	set ref_function_Trig_Light_Infantry_1_Conditions = function Trig_Light_Infantry_1_Conditions
	set ref_function_Trig_Light_Infantry_1_Actions = function Trig_Light_Infantry_1_Actions
	set ref_function_Trig_Light_Infantry_2_Conditions = function Trig_Light_Infantry_2_Conditions
	set ref_function_Trig_Light_Infantry_2_Actions = function Trig_Light_Infantry_2_Actions
	set ref_function_Trig_Pikemen_1_Conditions = function Trig_Pikemen_1_Conditions
	set ref_function_Trig_Pikemen_1_Actions = function Trig_Pikemen_1_Actions
	set ref_function_Trig_Pikemen_2_Conditions = function Trig_Pikemen_2_Conditions
	set ref_function_Trig_Pikemen_2_Actions = function Trig_Pikemen_2_Actions
	set ref_function_Trig_Light_Cavalry_1_Conditions = function Trig_Light_Cavalry_1_Conditions
	set ref_function_Trig_Light_Cavalry_1_Actions = function Trig_Light_Cavalry_1_Actions
	set ref_function_Trig_Light_Cavalry_2_Conditions = function Trig_Light_Cavalry_2_Conditions
	set ref_function_Trig_Light_Cavalry_2_Actions = function Trig_Light_Cavalry_2_Actions
	set ref_function_Trig_Heavy_Cavalry_1_Conditions = function Trig_Heavy_Cavalry_1_Conditions
	set ref_function_Trig_Heavy_Cavalry_1_Actions = function Trig_Heavy_Cavalry_1_Actions
	set ref_function_Trig_Heavy_Cavalry_2_Conditions = function Trig_Heavy_Cavalry_2_Conditions
	set ref_function_Trig_Heavy_Cavalry_2_Actions = function Trig_Heavy_Cavalry_2_Actions
	set ref_function_Trig_Skirmisher_Conditions = function Trig_Skirmisher_Conditions
	set ref_function_Trig_Skirmisher_Actions = function Trig_Skirmisher_Actions
	set ref_function_Trig_Arquebusers_Conditions = function Trig_Arquebusers_Conditions
	set ref_function_Trig_Arquebusers_Actions = function Trig_Arquebusers_Actions
	set ref_function_Trig_Supply_Horse_Conditions = function Trig_Supply_Horse_Conditions
	set ref_function_Trig_Supply_Horse_Actions = function Trig_Supply_Horse_Actions
	set ref_function_Trig_Disabled_units_at_beginning_Func002A = function Trig_Disabled_units_at_beginning_Func002A
	set ref_function_Trig_Disabled_units_at_beginning_Actions = function Trig_Disabled_units_at_beginning_Actions
	set ref_function_Trig_Spearmen_1_Byzantine_Conditions = function Trig_Spearmen_1_Byzantine_Conditions
	set ref_function_Trig_Spearmen_1_Byzantine_Actions = function Trig_Spearmen_1_Byzantine_Actions
	set ref_function_Trig_Spearmen_2_Byzantine_Conditions = function Trig_Spearmen_2_Byzantine_Conditions
	set ref_function_Trig_Spearmen_2_Byzantine_Actions = function Trig_Spearmen_2_Byzantine_Actions
	set ref_function_Trig_Heavy_Infantry_1_Byzantine_Conditions = function Trig_Heavy_Infantry_1_Byzantine_Conditions
	set ref_function_Trig_Heavy_Infantry_1_Byzantine_Actions = function Trig_Heavy_Infantry_1_Byzantine_Actions
	set ref_function_Trig_Heavy_Infantry_2_Byzantine_Conditions = function Trig_Heavy_Infantry_2_Byzantine_Conditions
	set ref_function_Trig_Heavy_Infantry_2_Byzantine_Actions = function Trig_Heavy_Infantry_2_Byzantine_Actions
	set ref_function_Trig_Archer_1_Byzantine_Conditions = function Trig_Archer_1_Byzantine_Conditions
	set ref_function_Trig_Archer_1_Byzantine_Actions = function Trig_Archer_1_Byzantine_Actions
	set ref_function_Trig_Archer_2_Byzantine_Conditions = function Trig_Archer_2_Byzantine_Conditions
	set ref_function_Trig_Archer_2_Byzantine_Actions = function Trig_Archer_2_Byzantine_Actions
	set ref_function_Trig_Light_Cavalry_1_Byzantine_Conditions = function Trig_Light_Cavalry_1_Byzantine_Conditions
	set ref_function_Trig_Light_Cavalry_1_Byzantine_Actions = function Trig_Light_Cavalry_1_Byzantine_Actions
	set ref_function_Trig_Heavy_Cavalry_1_Byzantine_Conditions = function Trig_Heavy_Cavalry_1_Byzantine_Conditions
	set ref_function_Trig_Heavy_Cavalry_1_Byzantine_Actions = function Trig_Heavy_Cavalry_1_Byzantine_Actions
	set ref_function_Trig_Heavy_Cavalry_2_Byzantine_Conditions = function Trig_Heavy_Cavalry_2_Byzantine_Conditions
	set ref_function_Trig_Heavy_Cavalry_2_Byzantine_Actions = function Trig_Heavy_Cavalry_2_Byzantine_Actions
	set ref_function_Trig_Skirmisher_Byzantine_Conditions = function Trig_Skirmisher_Byzantine_Conditions
	set ref_function_Trig_Skirmisher_Byzantine_Actions = function Trig_Skirmisher_Byzantine_Actions
	set ref_function_Trig_Missile_Cavalry_Byzantine_Conditions = function Trig_Missile_Cavalry_Byzantine_Conditions
	set ref_function_Trig_Missile_Cavalry_Byzantine_Actions = function Trig_Missile_Cavalry_Byzantine_Actions
	set ref_function_Trig_Disabled_units_Byzantine_Func002A = function Trig_Disabled_units_Byzantine_Func002A
	set ref_function_Trig_Disabled_units_Byzantine_Actions = function Trig_Disabled_units_Byzantine_Actions
	set ref_function_Trig_ME_Spearmen_1_Conditions = function Trig_ME_Spearmen_1_Conditions
	set ref_function_Trig_ME_Spearmen_1_Actions = function Trig_ME_Spearmen_1_Actions
	set ref_function_Trig_ME_Spearmen_2_Conditions = function Trig_ME_Spearmen_2_Conditions
	set ref_function_Trig_ME_Spearmen_2_Actions = function Trig_ME_Spearmen_2_Actions
	set ref_function_Trig_ME_Archer_1_Conditions = function Trig_ME_Archer_1_Conditions
	set ref_function_Trig_ME_Archer_1_Actions = function Trig_ME_Archer_1_Actions
	set ref_function_Trig_ME_Archer_2_Conditions = function Trig_ME_Archer_2_Conditions
	set ref_function_Trig_ME_Archer_2_Actions = function Trig_ME_Archer_2_Actions
	set ref_function_Trig_ME_Light_Infantry_1_Conditions = function Trig_ME_Light_Infantry_1_Conditions
	set ref_function_Trig_ME_Light_Infantry_1_Actions = function Trig_ME_Light_Infantry_1_Actions
	set ref_function_Trig_ME_Light_Infantry_2_Conditions = function Trig_ME_Light_Infantry_2_Conditions
	set ref_function_Trig_ME_Light_Infantry_2_Actions = function Trig_ME_Light_Infantry_2_Actions
	set ref_function_Trig_ME_Light_Cavalry_1_Conditions = function Trig_ME_Light_Cavalry_1_Conditions
	set ref_function_Trig_ME_Light_Cavalry_1_Actions = function Trig_ME_Light_Cavalry_1_Actions
	set ref_function_Trig_ME_Light_Cavalry_2_Conditions = function Trig_ME_Light_Cavalry_2_Conditions
	set ref_function_Trig_ME_Light_Cavalry_2_Actions = function Trig_ME_Light_Cavalry_2_Actions
	set ref_function_Trig_ME_Heavy_Cavalry_1_Conditions = function Trig_ME_Heavy_Cavalry_1_Conditions
	set ref_function_Trig_ME_Heavy_Cavalry_1_Actions = function Trig_ME_Heavy_Cavalry_1_Actions
	set ref_function_Trig_ME_Heavy_Cavalry_2_Conditions = function Trig_ME_Heavy_Cavalry_2_Conditions
	set ref_function_Trig_ME_Heavy_Cavalry_2_Actions = function Trig_ME_Heavy_Cavalry_2_Actions
	set ref_function_Trig_ME_Skirmisher_Conditions = function Trig_ME_Skirmisher_Conditions
	set ref_function_Trig_ME_Skirmisher_Actions = function Trig_ME_Skirmisher_Actions
	set ref_function_Trig_ME_Missile_Cavalry_Conditions = function Trig_ME_Missile_Cavalry_Conditions
	set ref_function_Trig_ME_Missile_Cavalry_Actions = function Trig_ME_Missile_Cavalry_Actions
	set ref_function_Trig_Disabled_units_ME_Func002A = function Trig_Disabled_units_ME_Func002A
	set ref_function_Trig_Disabled_units_ME_Actions = function Trig_Disabled_units_ME_Actions
	set ref_function_Trig_Settle_Func001002 = function Trig_Settle_Func001002
	set ref_function_Trig_Settle_Actions = function Trig_Settle_Actions
	set ref_function_Trig_Settlement_Range_Check_Func003A = function Trig_Settlement_Range_Check_Func003A
	set ref_function_Trig_Settlement_Range_Check_Conditions = function Trig_Settlement_Range_Check_Conditions
	set ref_function_Trig_Settlement_Range_Check_Actions = function Trig_Settlement_Range_Check_Actions
	set ref_function_Trig_Church_Range_Check_Func003A = function Trig_Church_Range_Check_Func003A
	set ref_function_Trig_Church_Range_Check_Conditions = function Trig_Church_Range_Check_Conditions
	set ref_function_Trig_Church_Range_Check_Actions = function Trig_Church_Range_Check_Actions
	set ref_function_Trig_Settlement_Aura_Conditions = function Trig_Settlement_Aura_Conditions
	set ref_function_Trig_Settlement_Aura_Actions = function Trig_Settlement_Aura_Actions
	set ref_function_Trig_Capitol_City_Hall_Up_Copy_Conditions = function Trig_Capitol_City_Hall_Up_Copy_Conditions
	set ref_function_Trig_Capitol_City_Hall_Up_Copy_Actions = function Trig_Capitol_City_Hall_Up_Copy_Actions
	set ref_function_Trig_Capitol_Castle_T3_Conditions = function Trig_Capitol_Castle_T3_Conditions
	set ref_function_Trig_Capitol_Castle_T3_Actions = function Trig_Capitol_Castle_T3_Actions
	set ref_function_Trig_Melee_Initialization_Actions = function Trig_Melee_Initialization_Actions
	set ref_function_init_Abilities = function init_Abilities
	set ref_function_init_AbilityIds = function init_AbilityIds
	set ref_function_init_Real = function init_Real
	set ref_function_init_Integer = function init_Integer
	set ref_function_init_Angle = function init_Angle
	set ref_function_init_String = function init_String
	set ref_function_init_Vectors = function init_Vectors
	set ref_function_init_Player = function init_Player
	set ref_function_init_Basics = function init_Basics
	set ref_function_init_Buildings = function init_Buildings
	set ref_function_init_Maths = function init_Maths
	set ref_function_init_Printing = function init_Printing
	set ref_function_init_GameTimer = function init_GameTimer
	set ref_function_init_MagicFunctions = function init_MagicFunctions
	set ref_function_init_ErrorHandling = function init_ErrorHandling
	set ref_function_init_Matrices = function init_Matrices
	set ref_function_init_Quaternion = function init_Quaternion
	set ref_function_init_Table = function init_Table
	set ref_function_init_Playercolor = function init_Playercolor
	set ref_function_bridge_init_Colors = function bridge_init_Colors
	set ref_function_init_Group = function init_Group
	set ref_function_init_Lightning = function init_Lightning
	set ref_function_init_WeatherEffects = function init_WeatherEffects
	set ref_function_bridge_init_TypeCasting = function bridge_init_TypeCasting
	set ref_function_init_ClosureForGroups = function init_ClosureForGroups
	set ref_function_bridge_init_LinkedList = function bridge_init_LinkedList
	set ref_function_init_HashList = function init_HashList
	set ref_function_bridge_init_EventHelper = function bridge_init_EventHelper
	set ref_function_bridge_init_RegisterEvents = function bridge_init_RegisterEvents
	set ref_function_bridge_init_TimerUtils = function bridge_init_TimerUtils
	set ref_function_init_ClosureTimers = function init_ClosureTimers
	set ref_function_init_TargetsAllowed = function init_TargetsAllowed
	set ref_function_init_Doodads = function init_Doodads
	set ref_function_init_Icons = function init_Icons
	set ref_function_init_Objects = function init_Objects
	set ref_function_init_Sounds = function init_Sounds
	set ref_function_init_Soundsets = function init_Soundsets
	set ref_function_init_Textures = function init_Textures
	set ref_function_init_UI = function init_UI
	set ref_function_init_Units = function init_Units
	set ref_function_init_UnitIds = function init_UnitIds
	set ref_function_init_MapBounds = function init_MapBounds
	set ref_function_bridge_init_DummyRecycler = function bridge_init_DummyRecycler
	set ref_function_bridge_init_StringUtils = function bridge_init_StringUtils
	set ref_function_init_ObjectIds = function init_ObjectIds
	set ref_function_bridge_init_Preloader = function bridge_init_Preloader
	set ref_function_bridge_init_ObjectIdGenerator = function bridge_init_ObjectIdGenerator
	set ref_function_bridge_init_OnUnitEnterLeave = function bridge_init_OnUnitEnterLeave
	set ref_function_init_UnitIndexer = function init_UnitIndexer
	set ref_function_bridge_init_ClosureEvents = function bridge_init_ClosureEvents
	set ref_function_bridge_init_Main = function bridge_init_Main
	set ref_function_init_Calendar = function init_Calendar
	set ref_function_bridge_init_City = function bridge_init_City
	set ref_function_init_Commands = function init_Commands
	set ref_function_init_Diplomacy = function init_Diplomacy
	set ref_function_init_Economy = function init_Economy
	set ref_function_bridge_init_MainInit = function bridge_init_MainInit
	set ref_function_init_OnPlayerLeave = function init_OnPlayerLeave
	set ref_function_City_closure_impl = function City_closure_impl_2
	set ref_function_bridge_onClick = function bridge_onClick
	set ref_function_bridge_City_closure_impl = function bridge_City_closure_impl_3
	set ref_function_City_closure_impl_2 = function City_closure_impl
	set ref_function_bridge_Settle = function bridge_Settle
	set ref_function_City_closure_impl_3 = function City_closure_impl_3
	set ref_function_bridge_City_closure_impl_2 = function bridge_City_closure_impl_5
	set ref_function_bridge_City_closure_impl_3 = function bridge_City_closure_impl_2
	set ref_function_bridge_City_closure_impl_4 = function bridge_City_closure_impl
	set ref_function_City_closure_impl_4 = function City_closure_impl_4
	set ref_function_bridge_City_closure_impl_5 = function bridge_City_closure_impl_4
	set ref_function_bridge_EventListener_generalEventCallback = function bridge_EventListener_generalEventCallback
	set ref_function_ClosureEvents_closure_impl = function ClosureEvents_closure_impl
	set ref_function_bridge_ClosureEvents_closure_impl = function bridge_ClosureEvents_closure_impl
	set ref_function_bridge_ClosureEvents_closure_impl_2 = function bridge_ClosureEvents_closure_impl_5
	set ref_function_bridge_ClosureEvents_closure_impl_3 = function bridge_ClosureEvents_closure_impl_3
	set ref_function_bridge_ClosureEvents_closure_impl_4 = function bridge_ClosureEvents_closure_impl_4
	set ref_function_bridge_ClosureEvents_closure_impl_5 = function bridge_ClosureEvents_closure_impl_2
	set ref_function_bridge_ClosureForGroups_closure_impl = function bridge_ClosureForGroups_closure_impl
	set ref_function_bridge_CallbackSingle_closure_impl = function bridge_CallbackSingle_closure_impl
	set ref_function_cond = function cond_2
	set ref_function_action = function action
	set ref_function_cond_2 = function cond
	set ref_function_bridge_action = function bridge_action_2
	set ref_function_GameTimer_closure_impl = function GameTimer_closure_impl
	set ref_function_Main_closure_impl = function Main_closure_impl
	set ref_function_CinematicTutorial = function CinematicTutorial
	set ref_function_Group_closure_impl = function Group_closure_impl
	set ref_function_bridge_action_2 = function bridge_action
	set ref_function_OnUnitEnterLeave_closure_impl = function OnUnitEnterLeave_closure_impl_2
	set ref_function_OnUnitEnterLeave_closure_impl_2 = function OnUnitEnterLeave_closure_impl
	set ref_function_OnUnitEnterLeave_closure_impl_3 = function OnUnitEnterLeave_closure_impl_3
	set ref_function_bridge_UnitIndexer_closure_impl = function bridge_UnitIndexer_closure_impl
	set ref_function_bridge_UnitIndexer_closure_impl_2 = function bridge_UnitIndexer_closure_impl_2
	set ref_function_bridge_RegisterEvents_closure_impl = function bridge_RegisterEvents_closure_impl
endfunction

function main takes nothing returns nothing
	local trigger initTrig
	local trigger trig
	call initGlobals()
	call SetCameraBounds(( - 30720.0) + GetCameraMargin(CAMERA_MARGIN_LEFT), ( - 30720.0) + GetCameraMargin(CAMERA_MARGIN_BOTTOM), 30720.0 - GetCameraMargin(CAMERA_MARGIN_RIGHT), 30720.0 - GetCameraMargin(CAMERA_MARGIN_TOP), ( - 30720.0) + GetCameraMargin(CAMERA_MARGIN_LEFT), 30720.0 - GetCameraMargin(CAMERA_MARGIN_TOP), 30720.0 - GetCameraMargin(CAMERA_MARGIN_RIGHT), ( - 30720.0) + GetCameraMargin(CAMERA_MARGIN_BOTTOM))
	call SetDayNightModels("Environment\\DNC\\DNCLordaeron\\DNCLordaeronTerrain\\DNCLordaeronTerrain.mdl", "Environment\\DNC\\DNCLordaeron\\DNCLordaeronUnit\\DNCLordaeronUnit.mdl")
	call NewSoundEnvironment("Default")
	call SetAmbientDaySound("LordaeronSummerDay")
	call SetAmbientNightSound("LordaeronSummerNight")
	call SetMapMusic("Music", true, 0)
	set gg_snd_Warning = CreateSound("Sound\\Interface\\Warning.wav", false, false, false, 10, 10, "")
	call SetSoundParamsFromLabel(gg_snd_Warning, "Warning")
	call SetSoundDuration(gg_snd_Warning, 1903)
	call Rect(11872.0,  - 24096.0, 13376.0,  - 18304.0)
	call Rect(14080.0,  - 30720.0, 16256.0,  - 25664.0)
	call Rect(12096.0,  - 26240.0, 14944.0,  - 23776.0)
	call Rect( - 17120.0, 15936.0,  - 15520.0, 17408.0)
	call Rect( - 25984.0,  - 29760.0,  - 24992.0,  - 29504.0)
	call Rect( - 25984.0,  - 30080.0,  - 25472.0,  - 29824.0)
	call Rect( - 25984.0,  - 30400.0,  - 25472.0,  - 30144.0)
	call Rect( - 26464.0,  - 30048.0,  - 26176.0,  - 29056.0)
	call Rect( - 25440.0,  - 30368.0,  - 25184.0,  - 29856.0)
	call Rect( - 25184.0,  - 30368.0,  - 24928.0,  - 29856.0)
	call Rect( - 24672.0,  - 29568.0,  - 24064.0,  - 28800.0)
	call Rect( - 24704.0,  - 30208.0,  - 24064.0,  - 29696.0)
	set gg_rct_CITY_WE_Burgh = Rect( - 17408.0, 22016.0,  - 17024.0, 22432.0)
	set gg_rct_CITY_WE_Cardiff = Rect( - 19072.0, 17728.0,  - 18688.0, 18080.0)
	set gg_rct_CITY_WE_Galway = Rect( - 22464.0, 22208.0,  - 22112.0, 22560.0)
	set gg_rct_CITY_WE_Zagreb = Rect( - 3776.0, 4416.0,  - 3392.0, 4768.0)
	set gg_rct_CITY_WE_Ragusa = Rect( - 3872.0, 1664.0,  - 3456.0, 2016.0)
	set gg_rct_CITY_BYZ_Durrazo = Rect( - 416.0,  - 2592.0,  - 128.0,  - 2272.0)
	set gg_rct_CITY_BYZ_Adrianopolis = Rect(4992.0,  - 2048.0, 5376.0,  - 1696.0)
	set gg_rct_CITY_Byz_Thessalonika = Rect(2528.0,  - 3168.0, 2848.0,  - 2880.0)
	set gg_rct_CITY_BYZ_Constantinople = Rect(7744.0,  - 2528.0, 8096.0,  - 2208.0)
	set gg_rct_CITY_WE_Warwick = Rect( - 17504.0, 18080.0,  - 17056.0, 18496.0)
	set gg_rct_CITY_BYZ_Scopia = Rect(1024.0,  - 1120.0, 1376.0,  - 800.0)
	set gg_rct_CITY_WE_Vienna = Rect( - 3328.0, 8096.0,  - 2848.0, 8512.0)
	set gg_rct_CITY_WE_Prague = Rect( - 4704.0, 11488.0,  - 4416.0, 11776.0)
	set gg_rct_CITY_WE_Esztergom = Rect( - 640.0, 8288.0,  - 160.0, 8704.0)
	set gg_rct_CITY_WE_Stettin = Rect( - 5184.0, 17120.0,  - 4832.0, 17440.0)
	set gg_rct_CITY_WE_Krakow = Rect( - 96.0, 12448.0, 224.0, 12768.0)
	set gg_rct_CITY_WE_Wroclaw = Rect( - 2272.0, 13536.0,  - 1984.0, 13856.0)
	set gg_rct_CITY_EE_Constanta = Rect(7008.0, 1984.0, 7456.0, 2432.0)
	set gg_rct_CITY_EE_Targoviste = Rect(4032.0, 3744.0, 4416.0, 4064.0)
	set gg_rct_CITY_WE_Brasov = Rect(4000.0, 5216.0, 4320.0, 5536.0)
	set gg_rct_CITY_WE_Belgrade = Rect( - 576.0, 2880.0,  - 224.0, 3232.0)
	set gg_rct_CITY_WE_Flensburg = Rect( - 8288.0, 19776.0,  - 7936.0, 20160.0)
	set gg_rct_CITY_WE_Roskilde = Rect( - 6464.0, 21184.0,  - 6080.0, 21568.0)
	set gg_rct_CITY_WE_Aarhus = Rect( - 7904.0, 22048.0,  - 7488.0, 22464.0)
	set gg_rct_CITY_WE_Madgeburg = Rect( - 5344.0, 14304.0,  - 4960.0, 14720.0)
	set gg_rct_CITY_EE_Sofia = Rect(2880.0, 32.0, 3264.0, 352.0)
	set gg_rct_CITY_WE_Plock = Rect(608.0, 15680.0, 992.0, 16096.0)
	set gg_rct_CITY_WE_Poznan = Rect( - 2496.0, 15872.0,  - 2112.0, 16224.0)
	set gg_rct_CITY_WE_Kassa = Rect(1056.0, 10848.0, 1344.0, 11136.0)
	set gg_rct_CITY_WE_Varad = Rect(1600.0, 6784.0, 1984.0, 7136.0)
	set gg_rct_CITY_EE_Konigsberg = Rect(160.0, 19232.0, 544.0, 19648.0)
	set gg_rct_CITY_EE_Riga = Rect(2784.0, 22592.0, 3200.0, 22944.0)
	set gg_rct_CITY_WE_Fictional_2 = Rect( - 1984.0, 19008.0,  - 1600.0, 19360.0)
	set gg_rct_CITY_EE_Hrodna = Rect(3008.0, 18048.0, 3392.0, 18400.0)
	call Rect( - 27744.0,  - 30080.0,  - 27456.0,  - 29760.0)
	set gg_rct_CITY_EE_Vilnius = Rect(4224.0, 19488.0, 4608.0, 19776.0)
	set gg_rct_CITY_EE_Caffa = Rect(13056.0, 4960.0, 13408.0, 5280.0)
	set gg_rct_CITY_EE_Pskov = Rect(5696.0, 24768.0, 6048.0, 25088.0)
	set gg_rct_CITY_EE_Reval = Rect(3328.0, 26816.0, 3680.0, 27168.0)
	set gg_rct_CITY_EE_Novgorod = Rect(8608.0, 26144.0, 9024.0, 26528.0)
	set gg_rct_CITY_EE_Polotsk = Rect(6656.0, 21248.0, 7008.0, 21600.0)
	call Rect( - 16640.0, 10368.0,  - 13504.0, 13056.0)
	call Rect( - 18944.0, 5312.0,  - 16864.0, 7328.0)
	call Rect( - 28032.0,  - 1120.0,  - 22464.0, 640.0)
	call Rect( - 27264.0, 2784.0,  - 26208.0, 3328.0)
	call Rect( - 26912.0,  - 4320.0,  - 23872.0,  - 2976.0)
	call Rect( - 19328.0,  - 288.0,  - 18592.0, 1568.0)
	call Rect( - 11936.0, 7616.0,  - 448.0, 11424.0)
	call Rect( - 1664.0, 1216.0, 6848.0, 7776.0)
	call Rect( - 5472.0, 24704.0,  - 3232.0, 27616.0)
	set gg_rct_CITY_EE_Halych = Rect(3744.0, 10880.0, 4064.0, 11232.0)
	call Rect( - 12064.0, 11392.0,  - 8832.0, 16576.0)
	call Rect( - 8832.0, 10176.0, 23520.0, 17760.0)
	call Rect(4384.0, 17728.0, 23424.0, 27040.0)
	set gg_rct_CITY_WE_Groningen = Rect( - 10688.0, 17536.0,  - 10304.0, 17888.0)
	set gg_rct_CITY_ME_Tunis = Rect( - 10688.0,  - 9312.0,  - 10336.0,  - 9024.0)
	set gg_rct_CITY_EE_Azaq = Rect(17280.0, 9280.0, 17632.0, 9632.0)
	set gg_rct_CITY_EE_Kiev = Rect(8352.0, 12192.0, 8672.0, 12512.0)
	set gg_rct_CITY_EE_Minsk = Rect(5952.0, 18400.0, 6304.0, 18688.0)
	set gg_rct_CITY_EE_Smolensk = Rect(9120.0, 19872.0, 9408.0, 20192.0)
	call Rect(23328.0,  - 14080.0, 30688.0, 17792.0)
	set gg_rct_CITY_ME_Sinop = Rect(13984.0,  - 288.0, 14336.0, 0.0)
	set gg_rct_CITY_ME_Isparta = Rect(10624.0,  - 7552.0, 11008.0,  - 7200.0)
	set gg_rct_CITY_ME_Kayseri = Rect(15168.0,  - 5792.0, 15552.0,  - 5408.0)
	set gg_rct_CITY_ME_Adana = Rect(15328.0,  - 7712.0, 15648.0,  - 7424.0)
	set gg_rct_CITY_ME_Konya = Rect(12640.0,  - 7104.0, 12992.0,  - 6752.0)
	set gg_rct_CITY_ME_Antioch = Rect(17056.0,  - 8800.0, 17376.0,  - 8512.0)
	set gg_rct_CITY_BYZ_Trebizond = Rect(18432.0,  - 608.0, 18784.0,  - 320.0)
	set gg_rct_CITY_BYZ_Nicosia = Rect(13760.0,  - 11168.0, 14112.0,  - 10752.0)
	set gg_rct_CITY_ME_JERUSALEM = Rect(16768.0,  - 16416.0, 17120.0,  - 16032.0)
	set gg_rct_CITY_ME_Edessa = Rect(18880.0,  - 7616.0, 19232.0,  - 7296.0)
	set gg_rct_CITY_BYZ_Smyrna = Rect(6816.0,  - 6752.0, 7136.0,  - 6464.0)
	set gg_rct_CITY_ME_Ankara = Rect(12512.0,  - 4064.0, 12832.0,  - 3712.0)
	set gg_rct_CITY_BYZ_Nicae = Rect(9056.0,  - 4576.0, 9408.0,  - 4224.0)
	set gg_rct_CITY_ME_Fes = Rect( - 26464.0,  - 8896.0,  - 26144.0,  - 8544.0)
	set gg_rct_CITY_ME_Oran = Rect( - 21632.0,  - 8544.0,  - 21248.0,  - 8224.0)
	set gg_rct_CITY_ME_Algiers = Rect( - 16928.0,  - 8224.0,  - 16608.0,  - 7904.0)
	set gg_rct_CITY_ME_Mahdya = Rect( - 10112.0,  - 11424.0,  - 9760.0,  - 11136.0)
	set gg_rct_CITY_ME_Tripoli = Rect( - 7680.0,  - 16416.0,  - 7328.0,  - 16128.0)
	set gg_rct_CITY_ME_Benghazi = Rect(288.0,  - 17760.0, 608.0,  - 17472.0)
	call Rect(9248.0,  - 21376.0, 9984.0,  - 20640.0)
	set gg_rct_CITY_ME_Medina = Rect(24704.0,  - 27680.0, 25088.0,  - 27264.0)
	set gg_rct_CITY_ME_Alexandria = Rect(10816.0,  - 18688.0, 11168.0,  - 18304.0)
	set gg_rct_CITY_ME_Damietta = Rect(13056.0,  - 17984.0, 13408.0,  - 17760.0)
	set gg_rct_CITY_ME_Cairo = Rect(12096.0,  - 21024.0, 12448.0,  - 20768.0)
	set gg_rct_CITY_EE_Timutarakan = Rect(15680.0, 5600.0, 16032.0, 5920.0)
	set gg_rct_CITY_EE_Baia = Rect(6944.0, 7648.0, 7264.0, 7968.0)
	set gg_rct_CITY_EE_Zhytomyr = Rect(5824.0, 12256.0, 6176.0, 12576.0)
	set gg_rct_CITY_EE_Oleshe = Rect(11200.0, 7712.0, 11552.0, 8064.0)
	set gg_rct_CITY_EE_Dnipro = Rect(12480.0, 11136.0, 12832.0, 11456.0)
	set gg_rct_CITY_EE_Moscow = Rect(14880.0, 22944.0, 15200.0, 23232.0)
	set gg_rct_CITY_EE_Bryansk = Rect(11392.0, 16768.0, 11744.0, 17088.0)
	set gg_rct_CITY_ME_Yerevan = Rect(23840.0, 96.0, 24128.0, 384.0)
	set gg_rct_CITY_EE_Sarkel = Rect(19488.0, 11168.0, 19808.0, 11488.0)
	set gg_rct_CITY_BYZ_Kutaisi = Rect(20672.0, 2528.0, 21056.0, 2848.0)
	set gg_rct_CITY_BYZ_Tbilisi = Rect(23776.0, 2368.0, 24160.0, 2720.0)
	set gg_rct_CITY_ME_Damascus = Rect(18336.0,  - 13408.0, 18624.0,  - 13120.0)
	set gg_rct_CITY_ME_Tartus = Rect(17056.0,  - 11648.0, 17376.0,  - 11264.0)
	set gg_rct_CITY_ME_Gaza = Rect(15488.0,  - 17696.0, 15840.0,  - 17376.0)
	set gg_rct_CITY_ME_Mosul = Rect(24896.0,  - 8480.0, 25248.0,  - 8128.0)
	set gg_rct_CITY_ME_Acre = Rect(16480.0,  - 14368.0, 16768.0,  - 14048.0)
	set gg_rct_CITY_ME_Al_Aqaba = Rect(17088.0,  - 19744.0, 17440.0,  - 19456.0)
	set gg_rct_CITY_ME_Quarisiya = Rect(22720.0,  - 10432.0, 23072.0,  - 10048.0)
	set gg_rct_CITY_ME_Tamiya = Rect(20672.0,  - 23232.0, 21056.0,  - 22848.0)
	set gg_rct_CITY_ME_Diyarbakir = Rect(19904.0,  - 5920.0, 20256.0,  - 5632.0)
	set gg_rct_CITY_ME_Erez = Rect(18624.0,  - 3936.0, 18976.0,  - 3616.0)
	call Rect( - 13632.0,  - 14816.0,  - 12192.0,  - 13376.0)
	call Rect(17760.0,  - 10400.0, 23360.0,  - 1344.0)
	call Rect(12384.0,  - 5984.0, 13824.0,  - 4352.0)
	call Rect( - 10944.0, 3968.0,  - 7680.0, 5120.0)
	set gg_rct_CITY_WE_Salzburg = Rect( - 6528.0, 7808.0,  - 6176.0, 8160.0)
	set gg_rct_CITY_WE_Innsbruck = Rect( - 8864.0, 6912.0,  - 8448.0, 7264.0)
	set gg_rct_CITY_WE_Cologne = Rect( - 11680.0, 14304.0,  - 11264.0, 14752.0)
	set gg_rct_CITY_WE_Frankfurt = Rect( - 9760.0, 12928.0,  - 9472.0, 13280.0)
	set gg_rct_Hamburg_CITY = Rect( - 7552.0, 16928.0,  - 7232.0, 17248.0)
	set gg_rct_CITY_ME_Palma = Rect( - 17472.0,  - 3328.0,  - 17120.0,  - 2976.0)
	call Rect( - 24576.0,  - 1376.0,  - 24224.0,  - 1024.0)
	set gg_rct_CITY_EE_Astrakhan = Rect(23392.0, 10912.0, 23712.0, 11232.0)
	set gg_rct_CITY_EE_Ryazan = Rect(17280.0, 19456.0, 17632.0, 19808.0)
	set gg_rct_CITY_WE_Edinburgh = Rect( - 16928.0, 24000.0,  - 16544.0, 24352.0)
	set gg_rct_CITY_WE_Aberdeen = Rect( - 15904.0, 25952.0,  - 15520.0, 26304.0)
	set gg_rct_CITY_WE_Inverness = Rect( - 17312.0, 26624.0,  - 16896.0, 27008.0)
	set gg_rct_CITY_WE_York = Rect( - 16096.0, 20352.0,  - 15712.0, 20768.0)
	set gg_rct_CITY_WE_Dublin = Rect( - 20448.0, 21440.0,  - 20064.0, 21792.0)
	set gg_rct_CITY_WE_Ireland = Rect( - 22560.0, 19808.0,  - 22240.0, 20160.0)
	set gg_rct_CITY_WE_Caernarfon = Rect( - 18752.0, 19520.0,  - 18400.0, 19872.0)
	set gg_rct_CITY_WE_London = Rect( - 16128.0, 16896.0,  - 15808.0, 17248.0)
	set gg_rct_CITY_WE_Winchester = Rect( - 17952.0, 15904.0,  - 17632.0, 16224.0)
	set gg_rct_CITY_WE_Exeter = Rect( - 19936.0, 16352.0,  - 19648.0, 16672.0)
	set gg_rct_CITY_WE_Caen = Rect( - 17248.0, 12448.0,  - 16928.0, 12832.0)
	set gg_rct_CITY_WE_Rheims = Rect( - 13728.0, 11968.0,  - 13408.0, 12352.0)
	set gg_rct_CITY_WE_Paris = Rect( - 15232.0, 10624.0,  - 14880.0, 10976.0)
	set gg_rct_CITY_WE_Dijon = Rect( - 13856.0, 7872.0,  - 13568.0, 8256.0)
	set gg_rct_CITY_WE_Clermont = Rect( - 16192.0, 5824.0,  - 15840.0, 6208.0)
	set gg_rct_CITY_WE_Toulouse = Rect( - 16864.0, 3392.0,  - 16576.0, 3776.0)
	set gg_rct_CITY_WE_Bordeaux = Rect( - 18880.0, 5568.0,  - 18528.0, 5920.0)
	set gg_rct_CITY_WE_Zaragoza = Rect( - 20288.0, 1216.0,  - 19936.0, 1600.0)
	set gg_rct_CITY_WE_Barcelona = Rect( - 17216.0, 352.0,  - 16896.0, 736.0)
	set gg_rct_CITY_WE_Leon = Rect( - 24512.0, 3744.0,  - 24128.0, 4064.0)
	set gg_rct_CITY_WE_Burgos = Rect( - 22720.0, 2368.0,  - 22432.0, 2752.0)
	set gg_rct_CITY_ME_Madrid = Rect( - 23552.0,  - 256.0,  - 23200.0, 128.0)
	set gg_rct_CITY_WE_Salamanca = Rect( - 25376.0, 1312.0,  - 25056.0, 1632.0)
	set gg_rct_CITY_ME_Lisbon = Rect( - 28736.0,  - 192.0,  - 28352.0, 160.0)
	set gg_rct_CITY_WE_Pamplona = Rect( - 21024.0, 2944.0,  - 20704.0, 3360.0)
	set gg_rct_CITY_WE_Marseille = Rect( - 13792.0, 2144.0,  - 13440.0, 2592.0)
	set gg_rct_CITY_WE_Bruges = Rect( - 13568.0, 14912.0,  - 13216.0, 15296.0)
	set gg_rct_CITY_WE_Antwerp = Rect( - 12736.0, 16128.0,  - 12352.0, 16512.0)
	set gg_rct_CITY_WE_Genoa = Rect( - 10880.0, 3360.0,  - 10528.0, 3712.0)
	set gg_rct_CITY_WE_Milan = Rect( - 10048.0, 5280.0,  - 9696.0, 5600.0)
	set gg_rct_CITY_WE_Venice = Rect( - 6880.0, 3936.0,  - 6560.0, 4256.0)
	set gg_rct_CITY_WE_Bologna = Rect( - 8224.0, 3040.0,  - 7904.0, 3392.0)
	set gg_rct_CITY_WE_Pisa = Rect( - 8960.0, 1760.0,  - 8608.0, 2176.0)
	set gg_rct_CITY_WE_Ancona = Rect( - 6624.0, 1088.0,  - 6304.0, 1472.0)
	set gg_rct_CITY_WE_Rome = Rect( - 7296.0,  - 960.0,  - 6944.0,  - 544.0)
	set gg_rct_CITY_ME_Granada = Rect( - 23712.0,  - 4704.0,  - 23392.0,  - 4416.0)
	set gg_rct_CITY_ME_Cordoba = Rect( - 25184.0,  - 3168.0,  - 24864.0,  - 2848.0)
	set gg_rct_CITY_ME_Murcia = Rect( - 21888.0,  - 4416.0,  - 21536.0,  - 4032.0)
	set gg_rct_CITY_ME_Valencia = Rect( - 20928.0,  - 2304.0,  - 20576.0,  - 1888.0)
	set gg_rct_CITY_WE_Nuremburg = Rect( - 7776.0, 11040.0,  - 7456.0, 11392.0)
	set gg_rct_CITY_WE_Bern = Rect( - 11648.0, 7072.0,  - 11296.0, 7360.0)
	set gg_rct_CITY_WE_Lyon = Rect( - 13728.0, 4928.0,  - 13376.0, 5408.0)
	set gg_rct_CITY_WE_Lund = Rect( - 5152.0, 21696.0,  - 4832.0, 22080.0)
	set gg_rct_CITY_WE_Skara = Rect( - 5248.0, 24416.0,  - 4960.0, 24768.0)
	set gg_rct_CITY_WE_Oslo = Rect( - 6688.0, 28096.0,  - 6368.0, 28480.0)
	set gg_rct_CITY_WE_Eikundarsund = Rect( - 9024.0, 26496.0,  - 8736.0, 26880.0)
	set gg_rct_CITY_WE_Bergen = Rect( - 10048.0, 28224.0,  - 9696.0, 28576.0)
	set gg_rct_CITY_WE_Visby = Rect( - 1408.0, 23776.0,  - 1152.0, 24096.0)
	set gg_rct_CITY_WE_Nykoping = Rect( - 2720.0, 26176.0,  - 2432.0, 26560.0)
	set gg_rct_CITY_ME_Silves = Rect( - 28032.0,  - 2944.0,  - 27680.0,  - 2560.0)
	set gg_rct_CITY_ME_Marakesh = Rect( - 29760.0,  - 10016.0,  - 29408.0,  - 9632.0)
	set gg_rct_CITY_ME_Luxor = Rect(15296.0,  - 26976.0, 15648.0,  - 26624.0)
	set gg_rct_CITY_WE_Rennes = Rect( - 20544.0, 12032.0,  - 20160.0, 12416.0)
	set gg_rct_CITY_WE_Angers = Rect( - 18368.0, 10624.0,  - 18016.0, 11008.0)
	set gg_rct_CITY_WE_Ajaccio = Rect( - 10880.0,  - 576.0,  - 10528.0,  - 224.0)
	set gg_rct_CITY_WE_Cagliari = Rect( - 11104.0,  - 4768.0,  - 10816.0,  - 4448.0)
	set gg_rct_CITY_WE_Naples = Rect( - 5728.0,  - 2912.0,  - 5440.0,  - 2560.0)
	set gg_rct_CITY_WE_Italy = Rect( - 3904.0,  - 6720.0,  - 3552.0,  - 6336.0)
	set gg_rct_CITY_WE_Bari = Rect( - 3616.0,  - 3040.0,  - 3328.0,  - 2688.0)
	set gg_rct_CITY_WE_Palermo = Rect( - 7200.0,  - 8000.0,  - 6880.0,  - 7616.0)
	set gg_rct_CITY_WE_Syracuse = Rect( - 5504.0,  - 9344.0,  - 5248.0,  - 9056.0)
	set gg_rct_CITY_WE_Metz = Rect( - 11616.0, 10848.0,  - 11296.0, 11168.0)
	set gg_rct_CITY_BYZ_Balkan = Rect( - 1792.0,  - 320.0,  - 1440.0, 64.0)
	set gg_rct_CITY_BYZ_Athens = Rect(3232.0,  - 7488.0, 3552.0,  - 7136.0)
	set gg_rct_CITY_BYZ_Rhodes = Rect(8224.0,  - 10496.0, 8512.0,  - 10208.0)
	set gg_rct_CITY_EE_Turku = Rect(1344.0, 29280.0, 1696.0, 29632.0)
	set gg_rct_CITY_BYZ_Fictional = Rect(10848.0,  - 2144.0, 11136.0,  - 1824.0)
	set gg_rct_CITY_ME_Badajoz = Rect( - 26496.0,  - 1568.0,  - 26144.0,  - 1248.0)
	set gg_rct_CITY_WE_Oporto = Rect( - 27168.0, 2528.0,  - 26880.0, 2816.0)
	set gg_rct_CITY_WE_Stockholm = Rect( - 2016.0, 27552.0,  - 1696.0, 27936.0)
	set gg_rct_CITY_WE_Kalmar = Rect( - 3488.0, 23040.0,  - 3200.0, 23392.0)
	set gg_rct_CITY_BYZ_Corinth = Rect(2016.0,  - 7904.0, 2336.0,  - 7584.0)
	set gg_rct_CITY_BYZ_Arta = Rect(640.0,  - 5760.0, 992.0,  - 5376.0)
	set gg_rct_CITY_BYZ_Candia = Rect(5216.0,  - 12384.0, 5504.0,  - 12064.0)
	set gg_rct_CITY_ME_Kerak = Rect(18272.0,  - 17504.0, 18656.0,  - 17056.0)
	set gg_rct_CITY_ME_Baghdad = Rect(26848.0,  - 11680.0, 27168.0,  - 11360.0)
	set gg_rct_CITY_BYZ_Canakkale = Rect(6464.0,  - 4672.0, 6816.0,  - 4288.0)
	set gg_rct_CITY_EE_Russia = Rect(20672.0, 21312.0, 21024.0, 21696.0)
	set gg_rct_CITY_WE_Budapest = Rect( - 1824.0, 5792.0,  - 1440.0, 6144.0)
	call CreateNeutralHostileBuildings()
	call CreatePlayerUnits()
	call InitBlizzard()
	call InitGlobals()
	call InitCustomTriggers()
	set trig = gg_trg_Melee_Initialization
	if TriggerEvaluate(trig) then
		call TriggerExecute(trig)
	endif
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Abilities))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Abilities.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_AbilityIds))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package AbilityIds.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Real))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Real.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Integer))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Integer.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Angle))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Angle.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_String))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package String.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Vectors))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Vectors.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Player))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Player.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Basics))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Basics.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Buildings))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Buildings.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Maths))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Maths.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Printing))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Printing.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_GameTimer))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package GameTimer.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_MagicFunctions))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package MagicFunctions.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_ErrorHandling))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package ErrorHandling.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Matrices))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Matrices.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Quaternion))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Quaternion.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Table))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Table.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Playercolor))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Playercolor.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_Colors))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Colors.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Group))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Group.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Lightning))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Lightning.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_WeatherEffects))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package WeatherEffects.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_TypeCasting))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package TypeCasting.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_ClosureForGroups))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package ClosureForGroups.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_LinkedList))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package LinkedList.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_HashList))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package HashList.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_EventHelper))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package EventHelper.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_RegisterEvents))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package RegisterEvents.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_TimerUtils))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package TimerUtils.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_ClosureTimers))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package ClosureTimers.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_TargetsAllowed))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package TargetsAllowed.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Doodads))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Doodads.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Icons))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Icons.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Objects))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Objects.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Sounds))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Sounds.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Soundsets))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Soundsets.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Textures))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Textures.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_UI))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package UI.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Units))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Units.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_UnitIds))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package UnitIds.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_MapBounds))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package MapBounds.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_DummyRecycler))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package DummyRecycler.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_StringUtils))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package StringUtils.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_ObjectIds))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package ObjectIds.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_Preloader))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Preloader.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_ObjectIdGenerator))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package ObjectIdGenerator.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_OnUnitEnterLeave))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package OnUnitEnterLeave.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_UnitIndexer))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package UnitIndexer.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_ClosureEvents))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package ClosureEvents.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_Main))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Main.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Calendar))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Calendar.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_City))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package City.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Commands))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Commands.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Diplomacy))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Diplomacy.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Economy))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Economy.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_MainInit))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package MainInit.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_OnPlayerLeave))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package OnPlayerLeave.")
	endif
	call TriggerClearConditions(initTrig)
	call DestroyTrigger(initTrig)
	set initTrig = null
	set trig = null
endfunction

function InitAllyPriorities takes nothing returns nothing
	call SetStartLocPrioCount(0, 19)
	call SetStartLocPrio(0, 0, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 1, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 2, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 3, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 4, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 5, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 6, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 7, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 8, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 9, 10, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 10, 11, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 11, 12, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 12, 13, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 13, 14, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 14, 15, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 15, 16, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 16, 17, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 17, 18, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 18, 19, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(1, 9)
	call SetStartLocPrio(1, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(1, 1, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(1, 2, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(1, 3, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(1, 4, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(1, 5, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(1, 6, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(1, 7, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(1, 8, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(2, 9)
	call SetStartLocPrio(2, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(2, 1, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(2, 2, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(2, 3, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(2, 4, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(2, 5, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(2, 6, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(2, 7, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(2, 8, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(3, 9)
	call SetStartLocPrio(3, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(3, 1, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(3, 2, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(3, 3, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(3, 4, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(3, 5, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(3, 6, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(3, 7, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(3, 8, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(4, 9)
	call SetStartLocPrio(4, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(4, 1, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(4, 2, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(4, 3, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(4, 4, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(4, 5, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(4, 6, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(4, 7, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(4, 8, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(5, 9)
	call SetStartLocPrio(5, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(5, 1, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(5, 2, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(5, 3, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(5, 4, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(5, 5, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(5, 6, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(5, 7, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(5, 8, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(6, 9)
	call SetStartLocPrio(6, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(6, 1, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(6, 2, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(6, 3, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(6, 4, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(6, 5, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(6, 6, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(6, 7, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(6, 8, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(7, 9)
	call SetStartLocPrio(7, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(7, 1, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(7, 2, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(7, 3, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(7, 4, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(7, 5, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(7, 6, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(7, 7, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(7, 8, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(8, 9)
	call SetStartLocPrio(8, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(8, 1, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(8, 2, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(8, 3, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(8, 4, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(8, 5, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(8, 6, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(8, 7, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(8, 8, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(9, 9)
	call SetStartLocPrio(9, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(9, 1, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(9, 2, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(9, 3, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(9, 4, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(9, 5, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(9, 6, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(9, 7, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(9, 8, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(10, 16)
	call SetStartLocPrio(10, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 1, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 2, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 3, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 4, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 5, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 6, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 7, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 8, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 9, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 10, 12, MAP_LOC_PRIO_LOW)
	call SetStartLocPrio(10, 11, 13, MAP_LOC_PRIO_LOW)
	call SetStartLocPrio(10, 12, 14, MAP_LOC_PRIO_LOW)
	call SetStartLocPrio(10, 13, 15, MAP_LOC_PRIO_LOW)
	call SetStartLocPrio(10, 14, 16, MAP_LOC_PRIO_LOW)
	call SetStartLocPrio(10, 15, 17, MAP_LOC_PRIO_LOW)
	call SetStartLocPrioCount(11, 19)
	call SetStartLocPrio(11, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 1, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 2, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 3, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 4, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 5, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 6, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 7, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 8, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 9, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 10, 10, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 11, 12, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 12, 13, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 13, 14, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 14, 15, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 15, 16, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 16, 17, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 17, 18, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 18, 19, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(12, 5)
	call SetStartLocPrio(12, 0, 13, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(12, 1, 14, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(12, 2, 15, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(12, 3, 16, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(12, 4, 17, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(13, 5)
	call SetStartLocPrio(13, 0, 12, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(13, 1, 14, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(13, 2, 15, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(13, 3, 16, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(13, 4, 17, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(14, 5)
	call SetStartLocPrio(14, 0, 12, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(14, 1, 13, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(14, 2, 15, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(14, 3, 16, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(14, 4, 17, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(15, 5)
	call SetStartLocPrio(15, 0, 12, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(15, 1, 13, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(15, 2, 14, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(15, 3, 16, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(15, 4, 17, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(16, 5)
	call SetStartLocPrio(16, 0, 12, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(16, 1, 13, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(16, 2, 14, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(16, 3, 15, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(16, 4, 17, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(17, 5)
	call SetStartLocPrio(17, 0, 12, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(17, 1, 13, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(17, 2, 14, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(17, 3, 15, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(17, 4, 16, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(18, 1)
	call SetStartLocPrio(18, 0, 19, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(19, 1)
	call SetStartLocPrio(19, 0, 18, MAP_LOC_PRIO_HIGH)
endfunction

function InitCustomPlayerSlots takes nothing returns nothing
	call SetPlayerStartLocation(Player(0), 0)
	call ForcePlayerStartLocation(Player(0), 0)
	call SetPlayerColor(Player(0), ConvertPlayerColor(0))
	call SetPlayerRacePreference(Player(0), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(0), false)
	call SetPlayerController(Player(0), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(1), 1)
	call ForcePlayerStartLocation(Player(1), 1)
	call SetPlayerColor(Player(1), ConvertPlayerColor(1))
	call SetPlayerRacePreference(Player(1), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(1), false)
	call SetPlayerController(Player(1), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(2), 2)
	call ForcePlayerStartLocation(Player(2), 2)
	call SetPlayerColor(Player(2), ConvertPlayerColor(2))
	call SetPlayerRacePreference(Player(2), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(2), false)
	call SetPlayerController(Player(2), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(3), 3)
	call ForcePlayerStartLocation(Player(3), 3)
	call SetPlayerColor(Player(3), ConvertPlayerColor(3))
	call SetPlayerRacePreference(Player(3), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(3), false)
	call SetPlayerController(Player(3), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(4), 4)
	call ForcePlayerStartLocation(Player(4), 4)
	call SetPlayerColor(Player(4), ConvertPlayerColor(4))
	call SetPlayerRacePreference(Player(4), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(4), false)
	call SetPlayerController(Player(4), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(5), 5)
	call ForcePlayerStartLocation(Player(5), 5)
	call SetPlayerColor(Player(5), ConvertPlayerColor(5))
	call SetPlayerRacePreference(Player(5), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(5), false)
	call SetPlayerController(Player(5), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(6), 6)
	call ForcePlayerStartLocation(Player(6), 6)
	call SetPlayerColor(Player(6), ConvertPlayerColor(6))
	call SetPlayerRacePreference(Player(6), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(6), false)
	call SetPlayerController(Player(6), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(7), 7)
	call ForcePlayerStartLocation(Player(7), 7)
	call SetPlayerColor(Player(7), ConvertPlayerColor(7))
	call SetPlayerRacePreference(Player(7), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(7), false)
	call SetPlayerController(Player(7), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(8), 8)
	call ForcePlayerStartLocation(Player(8), 8)
	call SetPlayerColor(Player(8), ConvertPlayerColor(8))
	call SetPlayerRacePreference(Player(8), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(8), false)
	call SetPlayerController(Player(8), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(9), 9)
	call ForcePlayerStartLocation(Player(9), 9)
	call SetPlayerColor(Player(9), ConvertPlayerColor(9))
	call SetPlayerRacePreference(Player(9), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(9), false)
	call SetPlayerController(Player(9), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(10), 10)
	call ForcePlayerStartLocation(Player(10), 10)
	call SetPlayerColor(Player(10), ConvertPlayerColor(10))
	call SetPlayerRacePreference(Player(10), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(10), false)
	call SetPlayerController(Player(10), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(11), 11)
	call ForcePlayerStartLocation(Player(11), 11)
	call SetPlayerColor(Player(11), ConvertPlayerColor(11))
	call SetPlayerRacePreference(Player(11), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(11), false)
	call SetPlayerController(Player(11), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(12), 12)
	call ForcePlayerStartLocation(Player(12), 12)
	call SetPlayerColor(Player(12), ConvertPlayerColor(12))
	call SetPlayerRacePreference(Player(12), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(12), false)
	call SetPlayerController(Player(12), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(13), 13)
	call ForcePlayerStartLocation(Player(13), 13)
	call SetPlayerColor(Player(13), ConvertPlayerColor(13))
	call SetPlayerRacePreference(Player(13), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(13), false)
	call SetPlayerController(Player(13), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(14), 14)
	call ForcePlayerStartLocation(Player(14), 14)
	call SetPlayerColor(Player(14), ConvertPlayerColor(14))
	call SetPlayerRacePreference(Player(14), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(14), false)
	call SetPlayerController(Player(14), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(15), 15)
	call ForcePlayerStartLocation(Player(15), 15)
	call SetPlayerColor(Player(15), ConvertPlayerColor(15))
	call SetPlayerRacePreference(Player(15), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(15), false)
	call SetPlayerController(Player(15), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(16), 16)
	call ForcePlayerStartLocation(Player(16), 16)
	call SetPlayerColor(Player(16), ConvertPlayerColor(16))
	call SetPlayerRacePreference(Player(16), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(16), false)
	call SetPlayerController(Player(16), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(17), 17)
	call ForcePlayerStartLocation(Player(17), 17)
	call SetPlayerColor(Player(17), ConvertPlayerColor(17))
	call SetPlayerRacePreference(Player(17), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(17), false)
	call SetPlayerController(Player(17), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(18), 18)
	call ForcePlayerStartLocation(Player(18), 18)
	call SetPlayerColor(Player(18), ConvertPlayerColor(18))
	call SetPlayerRacePreference(Player(18), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(18), false)
	call SetPlayerController(Player(18), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(19), 19)
	call ForcePlayerStartLocation(Player(19), 19)
	call SetPlayerColor(Player(19), ConvertPlayerColor(19))
	call SetPlayerRacePreference(Player(19), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(19), false)
	call SetPlayerController(Player(19), MAP_CONTROL_USER)
endfunction

function InitCustomTeams takes nothing returns nothing
	call SetPlayerTeam(Player(0), 0)
	call SetPlayerTeam(Player(1), 0)
	call SetPlayerTeam(Player(2), 0)
	call SetPlayerTeam(Player(3), 0)
	call SetPlayerTeam(Player(4), 0)
	call SetPlayerTeam(Player(5), 0)
	call SetPlayerTeam(Player(6), 0)
	call SetPlayerTeam(Player(7), 0)
	call SetPlayerTeam(Player(8), 0)
	call SetPlayerTeam(Player(9), 0)
	call SetPlayerTeam(Player(10), 0)
	call SetPlayerTeam(Player(11), 0)
	call SetPlayerTeam(Player(12), 1)
	call SetPlayerTeam(Player(13), 1)
	call SetPlayerTeam(Player(14), 1)
	call SetPlayerTeam(Player(15), 1)
	call SetPlayerTeam(Player(16), 1)
	call SetPlayerTeam(Player(17), 1)
	call SetPlayerTeam(Player(18), 1)
	call SetPlayerTeam(Player(19), 1)
endfunction

function config takes nothing returns nothing
	call SetMapName("TRIGSTR_001")
	call SetMapDescription("TRIGSTR_003")
	call SetPlayers(20)
	call SetTeams(20)
	call SetGamePlacement(MAP_PLACEMENT_TEAMS_TOGETHER)
	call DefineStartLocation(0, 320.0, 5184.0)
	call DefineStartLocation(1, 320.0, 5184.0)
	call DefineStartLocation(2, 320.0, 5184.0)
	call DefineStartLocation(3, 320.0, 5184.0)
	call DefineStartLocation(4, 320.0, 5184.0)
	call DefineStartLocation(5, 320.0, 5184.0)
	call DefineStartLocation(6, 320.0, 5184.0)
	call DefineStartLocation(7, 320.0, 5184.0)
	call DefineStartLocation(8, 320.0, 5184.0)
	call DefineStartLocation(9, 320.0, 5184.0)
	call DefineStartLocation(10, 320.0, 5184.0)
	call DefineStartLocation(11, 320.0, 5184.0)
	call DefineStartLocation(12, 320.0, 5184.0)
	call DefineStartLocation(13, 320.0, 5184.0)
	call DefineStartLocation(14, 320.0, 5184.0)
	call DefineStartLocation(15, 320.0, 5184.0)
	call DefineStartLocation(16, 320.0, 5184.0)
	call DefineStartLocation(17, 320.0, 5184.0)
	call DefineStartLocation(18, 320.0, 5184.0)
	call DefineStartLocation(19, 320.0, 5184.0)
	call InitCustomPlayerSlots()
	call InitCustomTeams()
	call InitAllyPriorities()
endfunction

