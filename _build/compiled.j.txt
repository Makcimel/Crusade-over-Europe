// this script was compiled with wurst 1.8.0.0-jenkins-Wurst-1072
globals
group w=null
location u=null
integer array r
force s=null
location t=null
location i=null
location S=null
location c=null
rect o=null
rect O=null
group l=null
group b=null
location y=null
boolean array p
boolean array e
rect q=null
rect a=null
rect n=null
rect d=null
rect f=null
rect R=null
rect T=null
rect Y=null
rect G=null
rect g=null
rect h=null
rect F=null
rect k=null
rect j=null
rect x=null
rect v=null
rect m=null
rect Q=null
rect W=null
rect E=null
rect Z=null
rect U=null
rect I=null
rect P=null
rect A=null
rect D=null
rect H=null
rect J=null
rect K=null
rect L=null
rect X=null
rect C=null
rect V=null
rect B=null
rect N=null
rect M=null
rect ww=null
rect uw=null
rect rw=null
rect sw=null
rect tw=null
rect iw=null
rect Sw=null
rect cw=null
rect ow=null
rect Ow=null
rect lw=null
rect bw=null
rect yw=null
rect pw=null
rect ew=null
rect qw=null
rect aw=null
rect nw=null
rect dw=null
rect fw=null
rect Rw=null
rect Tw=null
rect Yw=null
rect Gw=null
rect gw=null
rect hw=null
rect Fw=null
rect kw=null
rect jw=null
rect xw=null
rect vw=null
rect mw=null
rect Qw=null
rect Ww=null
rect Ew=null
rect Zw=null
rect Uw=null
rect Iw=null
rect Pw=null
rect Aw=null
rect Dw=null
rect Hw=null
rect Jw=null
rect Kw=null
rect Lw=null
rect Xw=null
rect Cw=null
rect Vw=null
rect Bw=null
rect Nw=null
rect Mw=null
rect wu=null
rect uu=null
rect ru=null
rect su=null
rect tu=null
rect iu=null
rect Su=null
rect cu=null
rect ou=null
rect Ou=null
rect lu=null
rect bu=null
rect yu=null
rect pu=null
rect eu=null
rect qu=null
rect au=null
rect nu=null
rect du=null
rect fu=null
rect Ru=null
rect Tu=null
rect Yu=null
rect Gu=null
rect gu=null
rect hu=null
rect Fu=null
rect ku=null
rect ju=null
rect xu=null
rect vu=null
rect mu=null
rect Qu=null
rect Wu=null
rect Eu=null
rect Zu=null
rect Uu=null
rect Iu=null
rect Pu=null
rect Au=null
rect Du=null
rect Hu=null
rect Ju=null
rect Ku=null
rect Lu=null
rect Xu=null
rect Cu=null
rect Vu=null
rect Bu=null
rect Nu=null
rect Mu=null
rect wr=null
rect ur=null
rect rr=null
rect sr=null
rect tr=null
rect ir=null
rect Sr=null
rect cr=null
rect lr=null
rect br=null
rect yr=null
rect pr=null
rect er=null
rect qr=null
rect ar=null
rect nr=null
rect dr=null
rect fr=null
rect Rr=null
rect Tr=null
rect Yr=null
rect Gr=null
rect gr=null
rect hr=null
rect Fr=null
rect kr=null
rect jr=null
rect xr=null
rect vr=null
rect mr=null
rect Qr=null
rect Wr=null
rect Er=null
rect Zr=null
rect Ur=null
rect Ir=null
rect Pr=null
rect Ar=null
rect Dr=null
rect Hr=null
rect Jr=null
rect Kr=null
rect Lr=null
rect Xr=null
rect Cr=null
rect Vr=null
rect Br=null
rect Nr=null
rect Mr=null
rect ws=null
rect us=null
rect rs=null
rect ss=null
rect ts=null
rect is=null
rect Ss=null
rect cs=null
rect os=null
rect Os=null
rect ls=null
rect bs=null
rect ys=null
rect ps=null
rect es=null
rect qs=null
rect as=null
rect ns=null
rect ds=null
sound fs=null
trigger Rs=null
trigger Ts=null
trigger Ys=null
trigger Gs=null
trigger gs=null
trigger hs=null
trigger Fs=null
trigger ks=null
trigger js=null
trigger xs=null
trigger vs=null
trigger ms=null
trigger Qs=null
trigger Ws=null
trigger Es=null
trigger Zs=null
trigger Us=null
trigger Is=null
trigger Ps=null
trigger As=null
trigger Ds=null
trigger Hs=null
trigger Js=null
trigger Ks=null
trigger Ls=null
trigger Xs=null
trigger Cs=null
trigger Vs=null
trigger Bs=null
trigger Ns=null
trigger Ms=null
trigger wt=null
trigger ut=null
trigger rt=null
trigger st=null
trigger tt=null
trigger St=null
trigger ct=null
trigger ot=null
trigger Ot=null
trigger lt=null
trigger bt=null
trigger yt=null
trigger pt=null
trigger et=null
trigger qt=null
trigger at=null
trigger nt=null
trigger dt=null
trigger ft=null
trigger Rt=null
trigger Tt=null
trigger Yt=null
trigger Gt=null
trigger gt=null
trigger ht=null
trigger Ft=null
trigger kt=null
trigger jt=null
trigger xt=null
trigger vt=null
trigger mt=null
trigger Qt=null
trigger Wt=null
trigger Et=null
trigger Zt=null
trigger Ut=null
trigger It=null
trigger Pt=null
trigger At=null
trigger Dt=null
trigger Ht=null
trigger Jt=null
trigger Kt=null
trigger Lt=null
trigger Xt=null
trigger Ct=null
trigger Vt=null
trigger Bt=null
trigger Nt=null
trigger Mt=null
trigger wi=null
trigger ui=null
trigger ri=null
trigger si=null
trigger ti=null
trigger ii=null
trigger Si=null
trigger ci=null
trigger oi=null
trigger Oi=null
trigger li=null
trigger bi=null
trigger yi=null
trigger pi=null
trigger ei=null
trigger qi=null
trigger ai=null
trigger ni=null
trigger di=null
trigger fi=null
trigger Ri=null
trigger Ti=null
trigger Yi=null
trigger Gi=null
trigger gi=null
trigger hi=null
trigger Fi=null
trigger ki=null
trigger ji=null
trigger xi=null
trigger vi=null
trigger mi=null
trigger Qi=null
trigger Wi=null
trigger Ei=null
trigger Zi=null
trigger Ui=null
trigger Ii=null
trigger Pi=null
trigger Ai=null
trigger Di=null
trigger Hi=null
trigger Ji=null
trigger Ki=null
trigger Li=null
trigger Xi=null
trigger Ci=null
trigger Vi=null
trigger Bi=null
trigger Ni=null
trigger Mi=null
trigger wS=null
integer uS=0
player rS=null
integer sS=0
integer array tS
integer iS=0
integer SS=0
integer cS=0
integer oS=0
integer OS=0
integer lS=0
integer bS=0
integer yS=0
integer pS=0
integer eS=0
real array qS
real array aS
boolean array nS
real array dS
integer array fS
real array RS
real array TS
string array YS
string array GS
integer gS=0
real hS=0.
real array FS
integer array kS
real array jS
real array xS
real array vS
real array mS
integer array QS
integer array WS
integer array ES
integer array ZS
integer array US
unit array IS
string array PS
integer array AS
integer array DS
integer array HS
real array JS
real array KS
integer array LS
integer array XS
real array CS
real array VS
real array BS
real array NS
integer array MS
real array wc
integer array uc
integer array rc
integer array sc
playerevent tc=null
trigger ic=null
trigger Sc=null
trigger cc=null
integer array oc
integer Oc=0
integer lc=0
integer bc=0
integer array yc
integer array pc
integer array ec
integer array qc
integer array ac
integer array nc
integer array dc
integer array fc
unit array Rc
group Tc=null
integer array Yc
integer Gc=0
filterfunc gc=null
integer hc=0
timer array Fc
timer array kc
integer array jc
integer array xc
integer array vc
string array mc
integer Qc=0
real array Wc
real Ec=0.
integer array Zc
integer array Uc
integer array Ic
integer array Pc
integer array Ac
integer Dc=0
integer array Hc
integer array Jc
hashtable Kc=null
force Lc=null
force Xc=null
force Cc=null
force Vc=null
force array Bc
integer array Nc
integer array Mc
integer array wo
timer uo=null
real ro=0.
group so=null
hashtable io=null
hashtable So=null
integer array co
integer array oo
hashtable Oo=null
integer array lo
unit array bo
integer array yo
unit array po
integer array eo
integer array qo
integer array ao
integer array no
integer array do
integer array fo
integer array Ro
boolean array To
integer array Yo
integer array Go
string array go
boolean array ho
integer Fo=0
integer ko=0
boolean jo=false
boolean xo=false
boolean vo=false
timer mo=null
real Qo=0.
rect Wo=null
rect Eo=null
region Zo=null
real Uo=0.
real Io=0.
integer Po=0
integer Ao=0
integer Do=0
player array Ho
unit array Jo
integer array Ko
unit array Lo
integer array Xo
real array Co
real array Vo
integer array Bo
integer array No
integer array Mo
integer array wO
integer array uO
integer array rO
integer array sO
integer array tO
integer array iO
multiboard array SO
unit array cO
trigger oO=null
group OO=null
unit array lO
integer bO=0
integer array yO
integer array pO
player array eO
boolean array qO
integer array aO
integer array nO
player array dO
player fO=null
playercolor RO=null
playercolor TO=null
playercolor YO=null
playercolor GO=null
playercolor array gO
group hO=null
unit FO=null
integer kO=0
unit array jO
real xO=0.
trigger array vO
integer mO=0
real array QO
integer WO=0
string array EO
string array ZO
string array UO
string array IO
string array PO
string array AO
string array DO
string array HO
string array JO
string array KO
string array LO
string array XO
string array CO
string array VO
string array BO
string array NO
string array MO
hashtable wl=null
timer array ul
integer rl=0
integer sl=0
integer tl=0
trigger il=null
trigger Sl=null
unit cl=null
unit ol=null
unit array Ol
integer ll=0
integer bl=0
integer array yl
integer pl=0
integer el=0
integer ql=0
integer al=0
integer array nl
integer dl=0
integer array fl
integer array Rl
integer Tl=0
integer array Yl
integer Gl=0
integer gl=0
integer array hl
integer array Fl
integer kl=0
integer jl=0
integer array xl
integer vl=0
integer ml=0
integer array Ql
integer array Wl
integer El=0
integer Zl=0
integer array Ul
integer array Il
integer Pl=0
integer Al=0
integer array Dl
integer array Hl
integer Jl=0
integer Kl=0
integer array Ll
integer Xl=0
integer array Cl
integer array Vl
integer Bl=0
integer Nl=0
integer array Ml
integer array wb
integer ub=0
integer rb=0
integer array sb
integer array tb
integer ib=0
integer Sb=0
integer array cb
integer ob=0
integer Ob=0
integer array lb
integer bb=0
integer yb=0
integer array pb
integer array eb
integer qb=0
integer ab=0
integer array nb
integer array db
integer fb=0
integer Rb=0
integer array Tb
integer Yb=0
integer Gb=0
integer array gb
integer hb=0
integer Fb=0
integer array kb
integer array jb
integer xb=0
integer vb=0
integer array mb
integer Qb=0
string array Wb
integer Eb=0
integer Zb=0
integer Ub=0
integer array Ib
integer array Pb
integer array Ab
integer array Db
integer array Hb
integer array Jb
integer array Kb
integer array Lb
integer array Xb
integer array Cb
integer array Vb
integer array Bb
integer array Nb
integer array Mb
integer array wy
integer array uy
integer array ry
integer array sy
integer array ty
integer array iy
integer array Sy
integer array cy
integer array oy
integer array Oy
code ly=null
code by=null
code yy=null
code py=null
code ey=null
code qy=null
code ay=null
code ny=null
code dy=null
code fy=null
code Ry=null
code Ty=null
code Yy=null
code Gy=null
code gy=null
code hy=null
code Fy=null
code ky=null
code jy=null
code xy=null
code vy=null
code my=null
code Qy=null
code Wy=null
code Ey=null
code Zy=null
code Uy=null
code Iy=null
code Py=null
code Ay=null
code Dy=null
code Hy=null
code Jy=null
code Ky=null
code Ly=null
code Xy=null
code Cy=null
code Vy=null
code By=null
code Ny=null
code My=null
code wp=null
code up=null
code rp=null
code sp=null
code tp=null
code ip=null
code Sp=null
code cp=null
code op=null
code Op=null
code lp=null
code bp=null
code yp=null
code pp=null
code ep=null
code qp=null
code ap=null
code np=null
code dp=null
code fp=null
code Rp=null
code Tp=null
code Yp=null
code Gp=null
code gp=null
code hp=null
code Fp=null
code kp=null
code jp=null
code xp=null
code vp=null
code mp=null
code Qp=null
code Wp=null
code Ep=null
code Zp=null
code Up=null
code Ip=null
code Pp=null
code Ap=null
code Dp=null
code Hp=null
code Jp=null
code Kp=null
code Lp=null
code Xp=null
code Cp=null
code Vp=null
code Bp=null
code Np=null
code Mp=null
code we=null
code ue=null
code re=null
code se=null
code te=null
code ie=null
code Se=null
code ce=null
code oe=null
code Oe=null
code le=null
code be=null
code ye=null
code pe=null
code ee=null
code qe=null
code ae=null
code ne=null
code de=null
code fe=null
code Re=null
code Te=null
code Ye=null
code Ge=null
code ge=null
code he=null
code Fe=null
code ke=null
code je=null
code xe=null
code ve=null
code me=null
code Qe=null
code We=null
code Ee=null
code Ze=null
code Ue=null
code Ie=null
code Pe=null
code Ae=null
code De=null
code He=null
code Je=null
code Ke=null
code Le=null
code Xe=null
code Ce=null
code Ve=null
code Be=null
code Ne=null
code Me=null
code wq=null
code uq=null
code rq=null
code sq=null
code tq=null
code iq=null
code Sq=null
code cq=null
code oq=null
code Oq=null
code lq=null
code bq=null
code yq=null
code pq=null
code eq=null
code qq=null
code aq=null
code nq=null
code dq=null
code fq=null
code Rq=null
code Tq=null
code Yq=null
code Gq=null
code gq=null
code hq=null
code Fq=null
code kq=null
code jq=null
code xq=null
code vq=null
code mq=null
code Qq=null
code Wq=null
code Eq=null
code Zq=null
code Uq=null
code Iq=null
code Pq=null
code Aq=null
code Dq=null
code Hq=null
code Jq=null
code Kq=null
code Lq=null
code Xq=null
code Cq=null
code Vq=null
code Bq=null
code Nq=null
code Mq=null
code wa=null
code ua=null
code ra=null
code sa=null
code ta=null
code ia=null
code Sa=null
code ca=null
code oa=null
code Oa=null
code la=null
code ba=null
code ya=null
code pa=null
code ea=null
code qa=null
code aa=null
code na=null
code da=null
code fa=null
code Ra=null
code Ta=null
code Ya=null
code Ga=null
code ga=null
code ha=null
code Fa=null
code ka=null
code ja=null
code xa=null
code va=null
code ma=null
code Qa=null
code Wa=null
code Ea=null
code Za=null
code Ua=null
code Ia=null
code Pa=null
code Aa=null
code Da=null
code Ha=null
code Ja=null
code Ka=null
code La=null
code Xa=null
code Ca=null
code Va=null
code Ba=null
code Na=null
code Ma=null
code wn=null
code un=null
code rn=null
code sn=null
code tn=null
code Sn=null
code cn=null
code on=null
code On=null
code ln=null
code bn=null
code yn=null
code pn=null
code en=null
code qn=null
code an=null
code nn=null
code dn=null
code fn=null
code Rn=null
code Tn=null
code Yn=null
code Gn=null
code gn=null
code hn=null
code Fn=null
code kn=null
code jn=null
code xn=null
code vn=null
code mn=null
code Qn=null
code Wn=null
code En=null
code Zn=null
code Un=null
code In=null
code Pn=null
code An=null
code Dn=null
code Hn=null
code Jn=null
code Kn=null
code Ln=null
code Xn=null
code Cn=null
code Vn=null
code Bn=null
code Nn=null
code Mn=null
code wd=null
code ud=null
code rd=null
code sd=null
code td=null
code id=null
code Sd=null
code cd=null
code od=null
code Od=null
code ld=null
code bd=null
code yd=null
code pd=null
code ed=null
code qd=null
code ad=null
code nd=null
code dd=null
code fd=null
code Rd=null
code Td=null
code Yd=null
code Gd=null
code gd=null
code hd=null
code Fd=null
code kd=null
code jd=null
code xd=null
code vd=null
code md=null
code Qd=null
code Wd=null
code Ed=null
code Zd=null
code Ud=null
code Id=null
code Pd=null
code Ad=null
code Dd=null
code Hd=null
code Jd=null
code Kd=null
code Ld=null
code Xd=null
code Cd=null
code Vd=null
code Bd=null
code Nd=null
code Md=null
code wf=null
code uf=null
code rf=null
code sf=null
code tf=null
code Sf=null
code cf=null
code of=null
code Of=null
code lf=null
code bf=null
code yf=null
code pf=null
code ef=null
code qf=null
code af=null
code nf=null
code df=null
code ff=null
code Rf=null
code Tf=null
code Yf=null
code Gf=null
code gf=null
code hf=null
code Ff=null
code kf=null
code jf=null
unit xf=null
multiboard vf=null
timer mf=null
unit Qf=null
trigger Wf=null
rect Ef=null
endglobals
function If takes nothing returns nothing
local integer Uf=0
set Uf=0
loop
exitwhen Uf>8192
call CreateGroup()
set Uf=Uf+1
endloop
call CreateForce()
call CreateGroup()
call CreateForce()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateForce()
call CreateForce()
call CreateForce()
call CreateTimer()
call CreateForce()
call CreateGroup()
set w=CreateGroup()
call CreateGroup()
call CreateForce()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateTimer()
set Uf=0
loop
exitwhen Uf>24
set Uf=Uf+1
endloop
set Uf=0
loop
exitwhen Uf>24
set r[Uf]=0
set Uf=Uf+1
endloop
set s=CreateForce()
set Uf=0
loop
exitwhen Uf>24
set Uf=Uf+1
endloop
call CreateGroup()
set Uf=0
loop
exitwhen Uf>24
set Uf=Uf+1
endloop
set Uf=0
loop
exitwhen Uf>24
set Uf=Uf+1
endloop
call CreateForce()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
set l=CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
set Uf=0
loop
exitwhen Uf>24
set Uf=Uf+1
endloop
set Uf=0
loop
exitwhen Uf>24
set Uf=Uf+1
endloop
call CreateGroup()
set Uf=0
loop
exitwhen Uf>24
set Uf=Uf+1
endloop
set Uf=0
loop
exitwhen Uf>24
set Uf=Uf+1
endloop
set Uf=0
loop
exitwhen Uf>24
set Uf=Uf+1
endloop
set Uf=0
loop
exitwhen Uf>24
set Uf=Uf+1
endloop
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateForce()
call CreateForce()
set Uf=0
loop
exitwhen Uf>1
set Uf=Uf+1
endloop
set Uf=0
loop
exitwhen Uf>1
set Uf=Uf+1
endloop
set Uf=0
loop
exitwhen Uf>1
set Uf=Uf+1
endloop
set b=CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
set Uf=0
loop
exitwhen Uf>24
set p[Uf]=false
set Uf=Uf+1
endloop
set Uf=0
loop
exitwhen Uf>24
set e[Uf]=false
set Uf=Uf+1
endloop
endfunction
function AU takes nothing returns nothing
set ii=CreateTrigger()
call TriggerRegisterTimerEvent(ii,0.10,false)
call TriggerAddAction(ii,jq)
endfunction
function AW takes nothing returns nothing
local trigger UW
local playerunitevent IW
local integer PW
set Wt=CreateTrigger()
set UW=Wt
set IW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set PW=0
loop
call TriggerRegisterPlayerUnitEvent(UW,Player(PW),IW,null)
set PW=PW+1
exitwhen PW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Wt,Condition(Qe))
call TriggerAddAction(Wt,We)
set UW=null
set IW=null
endfunction
function BA takes nothing returns nothing
local trigger XA
local playerunitevent CA
local integer VA
set ki=CreateTrigger()
set XA=ki
set CA=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set VA=0
loop
call TriggerRegisterPlayerUnitEvent(XA,Player(VA),CA,null)
set VA=VA+1
exitwhen VA==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ki,Condition(fa))
call TriggerAddAction(ki,Ra)
set XA=null
set CA=null
endfunction
function BJ takes nothing returns nothing
local trigger XJ
local playerunitevent CJ
local integer VJ
set Ci=CreateTrigger()
set XJ=Ci
set CJ=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set VJ=0
loop
call TriggerRegisterPlayerUnitEvent(XJ,Player(VJ),CJ,null)
set VJ=VJ+1
exitwhen VJ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ci,Condition(cn))
call TriggerAddAction(Ci,on)
set XJ=null
set CJ=null
endfunction
function BQ takes nothing returns nothing
local trigger XQ
local playerunitevent CQ
local integer VQ
set kt=CreateTrigger()
set XQ=kt
set CQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set VQ=0
loop
call TriggerRegisterPlayerUnitEvent(XQ,Player(VQ),CQ,null)
set VQ=VQ+1
exitwhen VQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(kt,Condition(Re))
call TriggerAddAction(kt,Te)
set XQ=null
set CQ=null
endfunction
function CU takes nothing returns nothing
local trigger KU
local playerunitevent LU
local integer XU
set Si=CreateTrigger()
set KU=Si
set LU=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set XU=0
loop
call TriggerRegisterPlayerUnitEvent(KU,Player(XU),LU,null)
set XU=XU+1
exitwhen XU==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Si,Condition(xq))
call TriggerAddAction(Si,vq)
set KU=null
set LU=null
endfunction
function CW takes nothing returns nothing
local trigger KW
local playerunitevent LW
local integer XW
set Et=CreateTrigger()
set KW=Et
set LW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set XW=0
loop
call TriggerRegisterPlayerUnitEvent(KW,Player(XW),LW,null)
set XW=XW+1
exitwhen XW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Et,Condition(Ee))
call TriggerAddAction(Et,Ze)
set KW=null
set LW=null
endfunction
function CY takes nothing returns nothing
local trigger KY
local playerunitevent LY
local integer XY
set xs=CreateTrigger()
set KY=xs
set LY=EVENT_PLAYER_UNIT_ATTACKED
set XY=0
loop
call TriggerRegisterPlayerUnitEvent(KY,Player(XY),LY,null)
set XY=XY+1
exitwhen XY==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(xs,Condition(hy))
call TriggerAddAction(xs,Fy)
set KY=null
set LY=null
endfunction
function Cj takes nothing returns nothing
local trigger Kj
local playerunitevent Lj
local integer Xj
set Ns=CreateTrigger()
set Kj=Ns
set Lj=EVENT_PLAYER_UNIT_SPELL_CAST
set Xj=0
loop
call TriggerRegisterPlayerUnitEvent(Kj,Player(Xj),Lj,null)
set Xj=Xj+1
exitwhen Xj==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ns,Condition(np))
call TriggerAddAction(Ns,dp)
set Kj=null
set Lj=null
endfunction
function DE takes nothing returns nothing
set Ht=CreateTrigger()
call TriggerRegisterTimerEvent(Ht,0.10,false)
call TriggerAddAction(Ht,Ne)
endfunction
function Dm takes nothing returns nothing
local trigger Im
local playerunitevent Pm
local integer Am
set dt=CreateTrigger()
set Im=dt
set Pm=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Am=0
loop
call TriggerRegisterPlayerUnitEvent(Im,Player(Am),Pm,null)
set Am=Am+1
exitwhen Am==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(dt,Condition(re))
call TriggerAddAction(dt,se)
set Im=null
set Pm=null
endfunction
function EA takes nothing returns nothing
local trigger mA
local playerunitevent QA
local integer WA
set Fi=CreateTrigger()
set mA=Fi
set QA=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set WA=0
loop
call TriggerRegisterPlayerUnitEvent(mA,Player(WA),QA,null)
set WA=WA+1
exitwhen WA==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Fi,Condition(na))
call TriggerAddAction(Fi,da)
set mA=null
set QA=null
endfunction
function EJ takes nothing returns nothing
local trigger mJ
local playerunitevent QJ
local integer WJ
set Li=CreateTrigger()
set mJ=Li
set QJ=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set WJ=0
loop
call TriggerRegisterPlayerUnitEvent(mJ,Player(WJ),QJ,null)
set WJ=WJ+1
exitwhen WJ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Li,Condition(rn))
call TriggerAddAction(Li,sn)
set mJ=null
set QJ=null
endfunction
function EQ takes nothing returns nothing
set ht=CreateTrigger()
call TriggerRegisterTimerEvent(ht,0.10,false)
call TriggerAddAction(ht,ne)
endfunction
function EY takes nothing returns nothing
local trigger mY
local playerunitevent QY
local integer WY
set js=CreateTrigger()
set mY=js
set QY=EVENT_PLAYER_UNIT_ATTACKED
set WY=0
loop
call TriggerRegisterPlayerUnitEvent(mY,Player(WY),QY,null)
set WY=WY+1
exitwhen WY==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(js,Condition(Gy))
call TriggerAddAction(js,gy)
set mY=null
set QY=null
endfunction
function Fm takes nothing returns nothing
local trigger Gm
local playerunitevent gm
local integer hm
set at=CreateTrigger()
set Gm=at
set gm=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set hm=0
loop
call TriggerRegisterPlayerUnitEvent(Gm,Player(hm),gm,null)
set hm=hm+1
exitwhen hm==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(at,Condition(Np))
call TriggerAddAction(at,Mp)
set Gm=null
set gm=null
endfunction
function GE takes nothing returns nothing
local trigger RE
local playerunitevent TE
local integer YE
set Pt=CreateTrigger()
set RE=Pt
set TE=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set YE=0
loop
call TriggerRegisterPlayerUnitEvent(RE,Player(YE),TE,null)
set YE=YE+1
exitwhen YE==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Pt,Condition(Je))
call TriggerAddAction(Pt,Ke)
set RE=null
set TE=null
endfunction
function GF takes nothing returns nothing
local trigger RF
local playerunitevent TF
local integer YF
set Js=CreateTrigger()
set RF=Js
set TF=EVENT_PLAYER_UNIT_SPELL_CAST
set YF=0
loop
call TriggerRegisterPlayerUnitEvent(RF,Player(YF),TF,null)
set YF=YF+1
exitwhen YF==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Js,Condition(sp))
call TriggerAddAction(Js,tp)
set RF=null
set TF=null
endfunction
function GI takes nothing returns nothing
local trigger RI
local playerunitevent TI
local integer YI
set li=CreateTrigger()
set RI=li
set TI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set YI=0
loop
call TriggerRegisterPlayerUnitEvent(RI,Player(YI),TI,null)
set YI=YI+1
exitwhen YI==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(li,Condition(Iq))
call TriggerAddAction(li,Pq)
set RI=null
set TI=null
endfunction
function HJ takes nothing returns nothing
local trigger PJ
local playerunitevent AJ
local integer DJ
set Xi=CreateTrigger()
set PJ=Xi
set AJ=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set DJ=0
loop
call TriggerRegisterPlayerUnitEvent(PJ,Player(DJ),AJ,null)
set DJ=DJ+1
exitwhen DJ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Xi,Condition(tn))
call TriggerAddAction(Xi,Sn)
set PJ=null
set AJ=null
endfunction
function HQ takes nothing returns nothing
local trigger PQ
local playerunitevent AQ
local integer DQ
set Ft=CreateTrigger()
set PQ=Ft
set AQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set DQ=0
loop
call TriggerRegisterPlayerUnitEvent(PQ,Player(DQ),AQ,null)
set DQ=DQ+1
exitwhen DQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ft,Condition(de))
call TriggerAddAction(Ft,fe)
set PQ=null
set AQ=null
endfunction
function IE takes nothing returns nothing
local trigger EE
local playerunitevent ZE
local integer UE
set Dt=CreateTrigger()
set EE=Dt
set ZE=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set UE=0
loop
call TriggerRegisterPlayerUnitEvent(EE,Player(UE),ZE,null)
set UE=UE+1
exitwhen UE==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Dt,Condition(Ce))
call TriggerAddAction(Dt,Ve)
set EE=null
set ZE=null
endfunction
function II takes nothing returns nothing
local trigger EI
local playerunitevent ZI
local integer UI
set yi=CreateTrigger()
set EI=yi
set ZI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set UI=0
loop
call TriggerRegisterPlayerUnitEvent(EI,Player(UI),ZI,null)
set UI=UI+1
exitwhen UI==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(yi,Condition(Hq))
call TriggerAddAction(yi,Jq)
set EI=null
set ZI=null
endfunction
function IT takes nothing returns nothing
local trigger ET
local playerunitevent ZT
local integer UT
set gs=CreateTrigger()
set ET=gs
set ZT=EVENT_PLAYER_UNIT_ATTACKED
set UT=0
loop
call TriggerRegisterPlayerUnitEvent(ET,Player(UT),ZT,null)
set UT=UT+1
exitwhen UT==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(gs,Condition(qy))
call TriggerAddAction(gs,ay)
set ET=null
set ZT=null
endfunction
function Ix takes nothing returns nothing
local trigger Ex
local playerunitevent Zx
local integer Ux
set rt=CreateTrigger()
set Ex=rt
set Zx=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Ux=0
loop
call TriggerRegisterPlayerUnitEvent(Ex,Player(Ux),Zx,null)
set Ux=Ux+1
exitwhen Ux==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(rt,Condition(Gp))
call TriggerAddAction(rt,gp)
set Ex=null
set Zx=null
endfunction
function JF takes nothing returns nothing
local trigger AF
local playerunitevent DF
local integer HF
set Ks=CreateTrigger()
set AF=Ks
set DF=EVENT_PLAYER_UNIT_SPELL_CAST
set HF=0
loop
call TriggerRegisterPlayerUnitEvent(AF,Player(HF),DF,null)
set HF=HF+1
exitwhen HF==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ks,Condition(ip))
call TriggerAddAction(Ks,Sp)
set AF=null
set DF=null
endfunction
function JP takes nothing returns nothing
local trigger AP
local playerunitevent DP
local integer HP
set Ri=CreateTrigger()
set AP=Ri
set DP=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set HP=0
loop
call TriggerRegisterPlayerUnitEvent(AP,Player(HP),DP,null)
set HP=HP+1
exitwhen HP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ri,Condition(Sa))
call TriggerAddAction(Ri,ca)
set AP=null
set DP=null
endfunction
function Jk takes nothing returns nothing
local trigger Ak
local playerunitevent Dk
local integer Hk
set Cs=CreateTrigger()
set Ak=Cs
set Dk=EVENT_PLAYER_UNIT_DEATH
set Hk=0
loop
call TriggerRegisterPlayerUnitEvent(Ak,Player(Hk),Dk,null)
set Hk=Hk+1
exitwhen Hk==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Cs,Condition(bp))
call TriggerAddAction(Cs,yp)
set Ak=null
set Dk=null
endfunction
function Jv takes nothing returns nothing
local trigger Av
local playerunitevent Dv
local integer Hv
set bt=CreateTrigger()
set Av=bt
set Dv=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Hv=0
loop
call TriggerRegisterPlayerUnitEvent(Av,Player(Hv),Dv,null)
set Hv=Hv+1
exitwhen Hv==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(bt,Condition(Ap))
call TriggerAddAction(bt,Dp)
set Av=null
set Dv=null
endfunction
function KH takes nothing returns nothing
local trigger DH
local playerunitevent HH
local integer JH
set Pi=CreateTrigger()
set DH=Pi
set HH=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set JH=0
loop
call TriggerRegisterPlayerUnitEvent(DH,Player(JH),HH,null)
set JH=JH+1
exitwhen JH==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Pi,Condition(Ha))
call TriggerAddAction(Pi,Ja)
set DH=null
set HH=null
endfunction
function LI takes nothing returns nothing
local trigger HI
local playerunitevent JI
local integer KI
set pi=CreateTrigger()
set HI=pi
set JI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set KI=0
loop
call TriggerRegisterPlayerUnitEvent(HI,Player(KI),JI,null)
set KI=KI+1
exitwhen KI==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(pi,Condition(Kq))
call TriggerAddAction(pi,Lq)
set HI=null
set JI=null
endfunction
function Lx takes nothing returns nothing
local trigger Hx
local playerunitevent Jx
local integer Kx
set st=CreateTrigger()
set Hx=st
set Jx=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Kx=0
loop
call TriggerRegisterPlayerUnitEvent(Hx,Player(Kx),Jx,null)
set Kx=Kx+1
exitwhen Kx==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(st,Condition(hp))
call TriggerAddAction(st,Fp)
set Hx=null
set Jx=null
endfunction
function MH takes nothing returns nothing
local trigger VH
local playerunitevent BH
local integer NH
set Ai=CreateTrigger()
set VH=Ai
set BH=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set NH=0
loop
call TriggerRegisterPlayerUnitEvent(VH,Player(NH),BH,null)
set NH=NH+1
exitwhen NH==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ai,Condition(Ka))
call TriggerAddAction(Ai,La)
set VH=null
set BH=null
endfunction
function NP takes nothing returns nothing
local trigger CP
local playerunitevent VP
local integer BP
set Ti=CreateTrigger()
set CP=Ti
set VP=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set BP=0
loop
call TriggerRegisterPlayerUnitEvent(CP,Player(BP),VP,null)
set BP=BP+1
exitwhen BP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ti,Condition(oa))
call TriggerAddAction(Ti,Oa)
set CP=null
set VP=null
endfunction
function NT takes nothing returns nothing
local trigger CT
local playerunitevent VT
local integer BT
set hs=CreateTrigger()
set CT=hs
set VT=EVENT_PLAYER_UNIT_ATTACKED
set BT=0
loop
call TriggerRegisterPlayerUnitEvent(CT,Player(BT),VT,null)
set BT=BT+1
exitwhen BT==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(hs,Condition(ny))
call TriggerAddAction(hs,dy)
set CT=null
set VT=null
endfunction
function Nv takes nothing returns nothing
local trigger Cv
local playerunitevent Vv
local integer Bv
set yt=CreateTrigger()
set Cv=yt
set Vv=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Bv=0
loop
call TriggerRegisterPlayerUnitEvent(Cv,Player(Bv),Vv,null)
set Bv=Bv+1
exitwhen Bv==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(yt,Condition(Hp))
call TriggerAddAction(yt,Jp)
set Cv=null
set Vv=null
endfunction
function OE takes nothing returns nothing
local trigger SE
local playerunitevent cE
local integer oE
set Ut=CreateTrigger()
set SE=Ut
set cE=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set oE=0
loop
call TriggerRegisterPlayerUnitEvent(SE,Player(oE),cE,null)
set oE=oE+1
exitwhen oE==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ut,Condition(Pe))
call TriggerAddAction(Ut,Ae)
set SE=null
set cE=null
endfunction
function OI takes nothing returns nothing
local trigger SI
local playerunitevent cI
local integer oI
set oi=CreateTrigger()
set SI=oi
set cI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set oI=0
loop
call TriggerRegisterPlayerUnitEvent(SI,Player(oI),cI,null)
set oI=oI+1
exitwhen oI==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(oi,Condition(Wq))
call TriggerAddAction(oi,Eq)
set SI=null
set cI=null
endfunction
function Oh takes nothing returns nothing
set Ps=CreateTrigger()
call TriggerRegisterTimerEvent(Ps,5.00,true)
call TriggerAddAction(Ps,Vy)
endfunction
function PD takes nothing returns nothing
local trigger ZD
local playerunitevent UD
local integer ID
set vi=CreateTrigger()
set ZD=vi
set UD=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set ID=0
loop
call TriggerRegisterPlayerUnitEvent(ZD,Player(ID),UD,null)
set ID=ID+1
exitwhen ID==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(vi,Condition(ha))
call TriggerAddAction(vi,Fa)
set ZD=null
set UD=null
endfunction
function PZ takes nothing returns nothing
local trigger ZZ
local playerunitevent UZ
local integer IZ
set Bt=CreateTrigger()
set ZZ=Bt
set UZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set IZ=0
loop
call TriggerRegisterPlayerUnitEvent(ZZ,Player(IZ),UZ,null)
set IZ=IZ+1
exitwhen IZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Bt,Condition(bq))
call TriggerAddAction(Bt,yq)
set ZZ=null
set UZ=null
endfunction
function QK takes nothing returns nothing
local trigger xK
local playerunitevent vK
local integer mK
set wS=CreateTrigger()
set xK=wS
set vK=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set mK=0
loop
call TriggerRegisterPlayerUnitEvent(xK,Player(mK),vK,null)
set mK=mK+1
exitwhen mK==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(wS,Condition(nn))
call TriggerAddAction(wS,dn)
set xK=null
set vK=null
endfunction
function QW takes nothing returns nothing
local trigger xW
local playerunitevent vW
local integer mW
set Qt=CreateTrigger()
set xW=Qt
set vW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set mW=0
loop
call TriggerRegisterPlayerUnitEvent(xW,Player(mW),vW,null)
set mW=mW+1
exitwhen mW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Qt,Condition(ve))
call TriggerAddAction(Qt,me)
set xW=null
set vW=null
endfunction
function RA takes nothing returns nothing
local trigger nA
local playerunitevent dA
local integer fA
set hi=CreateTrigger()
set nA=hi
set dA=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set fA=0
loop
call TriggerRegisterPlayerUnitEvent(nA,Player(fA),dA,null)
set fA=fA+1
exitwhen fA==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(hi,aa)
set nA=null
set dA=null
endfunction
function RJ takes nothing returns nothing
local trigger nJ
local playerunitevent dJ
local integer fJ
set Ji=CreateTrigger()
set nJ=Ji
set dJ=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set fJ=0
loop
call TriggerRegisterPlayerUnitEvent(nJ,Player(fJ),dJ,null)
set fJ=fJ+1
exitwhen fJ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ji,Condition(Na))
call TriggerAddAction(Ji,Ma)
set nJ=null
set dJ=null
endfunction
function SJ takes nothing returns nothing
local trigger sJ
local playerunitevent tJ
local integer iJ
set Di=CreateTrigger()
set sJ=Di
set tJ=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set iJ=0
loop
call TriggerRegisterPlayerUnitEvent(sJ,Player(iJ),tJ,null)
set iJ=iJ+1
exitwhen iJ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Di,Condition(Xa))
call TriggerAddAction(Di,Ca)
set sJ=null
set tJ=null
endfunction
function TP takes nothing returns nothing
local trigger dP
local playerunitevent fP
local integer RP
set ni=CreateTrigger()
set dP=ni
set fP=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set RP=0
loop
call TriggerRegisterPlayerUnitEvent(dP,Player(RP),fP,null)
set RP=RP+1
exitwhen RP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ni,Condition(wa))
call TriggerAddAction(ni,ua)
set dP=null
set fP=null
endfunction
function Tv takes nothing returns nothing
local trigger dv
local playerunitevent fv
local integer Rv
set ot=CreateTrigger()
set dv=ot
set fv=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Rv=0
loop
call TriggerRegisterPlayerUnitEvent(dv,Player(Rv),fv,null)
set Rv=Rv+1
exitwhen Rv==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ot,Condition(Wp))
call TriggerAddAction(ot,Ep)
set dv=null
set fv=null
endfunction
function UH takes nothing returns nothing
local trigger WH
local playerunitevent EH
local integer ZH
set Ii=CreateTrigger()
set WH=Ii
set EH=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set ZH=0
loop
call TriggerRegisterPlayerUnitEvent(WH,Player(ZH),EH,null)
set ZH=ZH+1
exitwhen ZH==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ii,Condition(Aa))
call TriggerAddAction(Ii,Da)
set WH=null
set EH=null
endfunction
function UU takes nothing returns nothing
local trigger WU
local playerunitevent EU
local integer ZU
set ti=CreateTrigger()
set WU=ti
set EU=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set ZU=0
loop
call TriggerRegisterPlayerUnitEvent(WU,Player(ZU),EU,null)
set ZU=ZU+1
exitwhen ZU==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ti,Condition(hq))
call TriggerAddAction(ti,Fq)
set WU=null
set EU=null
endfunction
function Uh takes nothing returns nothing
local trigger Wh
local playerunitevent Eh
local integer Zh
set Ds=CreateTrigger()
set Wh=Ds
set Eh=EVENT_PLAYER_UNIT_SPELL_CAST
set Zh=0
loop
call TriggerRegisterPlayerUnitEvent(Wh,Player(Zh),Eh,null)
set Zh=Zh+1
exitwhen Zh==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ds,Condition(My))
call TriggerAddAction(Ds,wp)
set Wh=null
set Eh=null
endfunction
function VE takes nothing returns nothing
local trigger LE
local playerunitevent XE
local integer CE
set Jt=CreateTrigger()
set LE=Jt
set XE=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set CE=0
loop
call TriggerRegisterPlayerUnitEvent(LE,Player(CE),XE,null)
set CE=CE+1
exitwhen CE==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Jt,Condition(Me))
call TriggerAddAction(Jt,wq)
set LE=null
set XE=null
endfunction
function Vm takes nothing returns nothing
local trigger Lm
local playerunitevent Xm
local integer Cm
set ft=CreateTrigger()
set Lm=ft
set Xm=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Cm=0
loop
call TriggerRegisterPlayerUnitEvent(Lm,Player(Cm),Xm,null)
set Cm=Cm+1
exitwhen Cm==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ft,Condition(te))
call TriggerAddAction(ft,ie)
set Lm=null
set Xm=null
endfunction
function Wm takes nothing returns nothing
local trigger vm
local playerunitevent mm
local integer Qm
set nt=CreateTrigger()
set vm=nt
set mm=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Qm=0
loop
call TriggerRegisterPlayerUnitEvent(vm,Player(Qm),mm,null)
set Qm=Qm+1
exitwhen Qm==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(nt,Condition(we))
call TriggerAddAction(nt,ue)
set vm=null
set mm=null
endfunction
function XD takes nothing returns nothing
local trigger JD
local playerunitevent KD
local integer LD
set mi=CreateTrigger()
set JD=mi
set KD=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set LD=0
loop
call TriggerRegisterPlayerUnitEvent(JD,Player(LD),KD,null)
set LD=LD+1
exitwhen LD==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(mi,Condition(ka))
call TriggerAddAction(mi,ja)
set JD=null
set KD=null
endfunction
function XZ takes nothing returns nothing
local trigger JZ
local playerunitevent KZ
local integer LZ
set Nt=CreateTrigger()
set JZ=Nt
set KZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set LZ=0
loop
call TriggerRegisterPlayerUnitEvent(JZ,Player(LZ),KZ,null)
set LZ=LZ+1
exitwhen LZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Nt,Condition(pq))
call TriggerAddAction(Nt,eq)
set JZ=null
set KZ=null
endfunction
function YG takes nothing returns nothing
local trigger fG
local playerunitevent RG
local integer TG
set Qs=CreateTrigger()
set fG=Qs
set RG=EVENT_PLAYER_UNIT_SPELL_EFFECT
set TG=0
loop
call TriggerRegisterPlayerUnitEvent(fG,Player(TG),RG,null)
set TG=TG+1
exitwhen TG==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Qs,Condition(my))
call TriggerAddAction(Qs,Qy)
set fG=null
set RG=null
endfunction
function YH takes nothing returns nothing
local trigger fH
local playerunitevent RH
local integer TH
set Zi=CreateTrigger()
set fH=Zi
set RH=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set TH=0
loop
call TriggerRegisterPlayerUnitEvent(fH,Player(TH),RH,null)
set TH=TH+1
exitwhen TH==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Zi,Condition(Za))
call TriggerAddAction(Zi,Ua)
set fH=null
set RH=null
endfunction
function YU takes nothing returns nothing
local trigger fU
local playerunitevent RU
local integer TU
set ri=CreateTrigger()
set fU=ri
set RU=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set TU=0
loop
call TriggerRegisterPlayerUnitEvent(fU,Player(TU),RU,null)
set TU=TU+1
exitwhen TU==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ri,Condition(Tq))
call TriggerAddAction(ri,Yq)
set fU=null
set RU=null
endfunction
function YY takes nothing returns nothing
local trigger fY
local playerunitevent RY
local integer TY
set ks=CreateTrigger()
set fY=ks
set RY=EVENT_PLAYER_UNIT_ATTACKED
set TY=0
loop
call TriggerRegisterPlayerUnitEvent(fY,Player(TY),RY,null)
set TY=TY+1
exitwhen TY==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ks,Condition(Ty))
call TriggerAddAction(ks,Yy)
set fY=null
set RY=null
endfunction
function ZG takes nothing returns nothing
local trigger QG
local playerunitevent WG
local integer EG
set Ws=CreateTrigger()
set QG=Ws
set WG=EVENT_PLAYER_UNIT_SPELL_CAST
set EG=0
loop
call TriggerRegisterPlayerUnitEvent(QG,Player(EG),WG,null)
set EG=EG+1
exitwhen EG==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(Ws,Wy)
set QG=null
set WG=null
endfunction
function ZP takes nothing returns nothing
local trigger QP
local playerunitevent WP
local integer EP
set fi=CreateTrigger()
set QP=fi
set WP=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set EP=0
loop
call TriggerRegisterPlayerUnitEvent(QP,Player(EP),WP,null)
set EP=EP+1
exitwhen EP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(fi,Condition(ta))
call TriggerAddAction(fi,ia)
set QP=null
set WP=null
endfunction
function Zg takes nothing returns nothing
local trigger Qg
local playerunitevent Wg
local integer Eg
set Us=CreateTrigger()
set Qg=Us
set Wg=EVENT_PLAYER_UNIT_SPELL_CAST
set Eg=0
loop
call TriggerRegisterPlayerUnitEvent(Qg,Player(Eg),Wg,null)
set Eg=Eg+1
exitwhen Eg==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Us,Condition(Hy))
call TriggerAddAction(Us,Jy)
set Qg=null
set Wg=null
endfunction
function Zv takes nothing returns nothing
local trigger Qv
local playerunitevent Wv
local integer Ev
set lt=CreateTrigger()
set Qv=lt
set Wv=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Ev=0
loop
call TriggerRegisterPlayerUnitEvent(Qv,Player(Ev),Wv,null)
set Ev=Ev+1
exitwhen Ev==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(lt,Condition(Ip))
call TriggerAddAction(lt,Pp)
set Qv=null
set Wv=null
endfunction
function aE takes nothing returns nothing
local trigger pE
local playerunitevent eE
local integer qE
set It=CreateTrigger()
set pE=It
set eE=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set qE=0
loop
call TriggerRegisterPlayerUnitEvent(pE,Player(qE),eE,null)
set qE=qE+1
exitwhen qE==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(It,Condition(De))
call TriggerAddAction(It,He)
set pE=null
set eE=null
endfunction
function aG takes nothing returns nothing
local trigger pG
local playerunitevent eG
local integer qG
set ms=CreateTrigger()
set pG=ms
set eG=EVENT_PLAYER_UNIT_SPELL_CAST
set qG=0
loop
call TriggerRegisterPlayerUnitEvent(pG,Player(qG),eG,null)
set qG=qG+1
exitwhen qG==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ms,Condition(xy))
call TriggerAddAction(ms,vy)
set pG=null
set eG=null
endfunction
function aI takes nothing returns nothing
local trigger pI
local playerunitevent eI
local integer qI
set Oi=CreateTrigger()
set pI=Oi
set eI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set qI=0
loop
call TriggerRegisterPlayerUnitEvent(pI,Player(qI),eI,null)
set qI=qI+1
exitwhen qI==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Oi,Condition(Zq))
call TriggerAddAction(Oi,Uq)
set pI=null
set eI=null
endfunction
function bK takes nothing returns nothing
local trigger oK
local playerunitevent OK
local integer lK
set Bi=CreateTrigger()
set oK=Bi
set OK=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set lK=0
loop
call TriggerRegisterPlayerUnitEvent(oK,Player(lK),OK,null)
set lK=lK+1
exitwhen lK==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Bi,Condition(bn))
call TriggerAddAction(Bi,yn)
set oK=null
set OK=null
endfunction
function bW takes nothing returns nothing
local trigger oW
local playerunitevent OW
local integer lW
set xt=CreateTrigger()
set oW=xt
set OW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set lW=0
loop
call TriggerRegisterPlayerUnitEvent(oW,Player(lW),OW,null)
set lW=lW+1
exitwhen lW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(xt,Condition(ge))
call TriggerAddAction(xt,he)
set oW=null
set OW=null
endfunction
function cG takes nothing returns nothing
local trigger tG
local playerunitevent iG
local integer SG
set vs=CreateTrigger()
set tG=vs
set iG=EVENT_PLAYER_UNIT_ATTACKED
set SG=0
loop
call TriggerRegisterPlayerUnitEvent(tG,Player(SG),iG,null)
set SG=SG+1
exitwhen SG==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(vs,Condition(ky))
call TriggerAddAction(vs,jy)
set tG=null
set iG=null
endfunction
function cP takes nothing returns nothing
local trigger tP
local playerunitevent iP
local integer SP
set qi=CreateTrigger()
set tP=qi
set iP=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set SP=0
loop
call TriggerRegisterPlayerUnitEvent(tP,Player(SP),iP,null)
set SP=SP+1
exitwhen SP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(qi,Condition(Vq))
call TriggerAddAction(qi,Bq)
set tP=null
set iP=null
endfunction
function cv takes nothing returns nothing
local trigger tv
local playerunitevent iv
local integer Sv
set St=CreateTrigger()
set tv=St
set iv=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Sv=0
loop
call TriggerRegisterPlayerUnitEvent(tv,Player(Sv),iv,null)
set Sv=Sv+1
exitwhen Sv==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(St,Condition(xp))
call TriggerAddAction(St,vp)
set tv=null
set iv=null
endfunction
function dK takes nothing returns nothing
local trigger qK
local playerunitevent aK
local integer nK
set Ni=CreateTrigger()
set qK=Ni
set aK=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set nK=0
loop
call TriggerRegisterPlayerUnitEvent(qK,Player(nK),aK,null)
set nK=nK+1
exitwhen nK==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ni,Condition(pn))
call TriggerAddAction(Ni,en)
set qK=null
set aK=null
endfunction
function dW takes nothing returns nothing
local trigger qW
local playerunitevent aW
local integer nW
set vt=CreateTrigger()
set qW=vt
set aW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set nW=0
loop
call TriggerRegisterPlayerUnitEvent(qW,Player(nW),aW,null)
set nW=nW+1
exitwhen nW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(vt,Condition(Fe))
call TriggerAddAction(vt,ke)
set qW=null
set aW=null
endfunction
function dg takes nothing returns nothing
local trigger qg
local playerunitevent ag
local integer ng
set Zs=CreateTrigger()
set qg=Zs
set ag=EVENT_PLAYER_UNIT_SPELL_CAST
set ng=0
loop
call TriggerRegisterPlayerUnitEvent(qg,Player(ng),ag,null)
set ng=ng+1
exitwhen ng==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Zs,Condition(Py))
call TriggerAddAction(Zs,Ay)
set qg=null
set ag=null
endfunction
function eP takes nothing returns nothing
local trigger bP
local playerunitevent yP
local integer pP
set ai=CreateTrigger()
set bP=ai
set yP=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set pP=0
loop
call TriggerRegisterPlayerUnitEvent(bP,Player(pP),yP,null)
set pP=pP+1
exitwhen pP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ai,Condition(Nq))
call TriggerAddAction(ai,Mq)
set bP=null
set yP=null
endfunction
function ev takes nothing returns nothing
local trigger bv
local playerunitevent yv
local integer pv
set ct=CreateTrigger()
set bv=ct
set yv=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set pv=0
loop
call TriggerRegisterPlayerUnitEvent(bv,Player(pv),yv,null)
set pv=pv+1
exitwhen pv==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ct,Condition(mp))
call TriggerAddAction(ct,Qp)
set bv=null
set yv=null
endfunction
function fm takes nothing returns nothing
local trigger am
local playerunitevent nm
local integer dm
set qt=CreateTrigger()
set am=qt
set nm=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set dm=0
loop
call TriggerRegisterPlayerUnitEvent(am,Player(dm),nm,null)
set dm=dm+1
exitwhen dm==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(qt,Condition(Vp))
call TriggerAddAction(qt,Bp)
set am=null
set nm=null
endfunction
function gD takes nothing returns nothing
local trigger TD
local playerunitevent YD
local integer GD
set xi=CreateTrigger()
set TD=xi
set YD=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set GD=0
loop
call TriggerRegisterPlayerUnitEvent(TD,Player(GD),YD,null)
set GD=GD+1
exitwhen GD==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(xi,Condition(Ga))
call TriggerAddAction(xi,ga)
set TD=null
set YD=null
endfunction
function gQ takes nothing returns nothing
local trigger TQ
local playerunitevent YQ
local integer GQ
set Gt=CreateTrigger()
set TQ=Gt
set YQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set GQ=0
loop
call TriggerRegisterPlayerUnitEvent(TQ,Player(GQ),YQ,null)
set GQ=GQ+1
exitwhen GQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Gt,Condition(ye))
call TriggerAddAction(Gt,pe)
set TQ=null
set YQ=null
endfunction
function gZ takes nothing returns nothing
local trigger TZ
local playerunitevent YZ
local integer GZ
set Ct=CreateTrigger()
set TZ=Ct
set YZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set GZ=0
loop
call TriggerRegisterPlayerUnitEvent(TZ,Player(GZ),YZ,null)
set GZ=GZ+1
exitwhen GZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ct,Condition(cq))
call TriggerAddAction(Ct,oq)
set TZ=null
set YZ=null
endfunction
function hK takes nothing returns nothing
local trigger YK
local playerunitevent GK
local integer gK
set Mi=CreateTrigger()
set YK=Mi
set GK=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set gK=0
loop
call TriggerRegisterPlayerUnitEvent(YK,Player(gK),GK,null)
set gK=gK+1
exitwhen gK==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Mi,Condition(qn))
call TriggerAddAction(Mi,an)
set YK=null
set GK=null
endfunction
function hT takes nothing returns nothing
local trigger YT
local playerunitevent GT
local integer gT
set Gs=CreateTrigger()
set YT=Gs
set GT=EVENT_PLAYER_UNIT_ATTACKED
set gT=0
loop
call TriggerRegisterPlayerUnitEvent(YT,Player(gT),GT,null)
set gT=gT+1
exitwhen gT==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Gs,Condition(py))
call TriggerAddAction(Gs,ey)
set YT=null
set GT=null
endfunction
function hW takes nothing returns nothing
local trigger YW
local playerunitevent GW
local integer gW
set mt=CreateTrigger()
set YW=mt
set GW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set gW=0
loop
call TriggerRegisterPlayerUnitEvent(YW,Player(gW),GW,null)
set gW=gW+1
exitwhen gW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(mt,Condition(je))
call TriggerAddAction(mt,xe)
set YW=null
set GW=null
endfunction
function hk takes nothing returns nothing
local trigger Yk
local playerunitevent Gk
local integer gk
set Xs=CreateTrigger()
set Yk=Xs
set Gk=EVENT_PLAYER_UNIT_DEATH
set gk=0
loop
call TriggerRegisterPlayerUnitEvent(Yk,Player(gk),Gk,null)
set gk=gk+1
exitwhen gk==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Xs,Condition(Op))
call TriggerAddAction(Xs,lp)
set Yk=null
set Gk=null
endfunction
function iA takes nothing returns nothing
local trigger rA
local playerunitevent sA
local integer tA
set Yi=CreateTrigger()
set rA=Yi
set sA=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set tA=0
loop
call TriggerRegisterPlayerUnitEvent(rA,Player(tA),sA,null)
set tA=tA+1
exitwhen tA==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Yi,Condition(la))
call TriggerAddAction(Yi,ba)
set rA=null
set sA=null
endfunction
function im takes nothing returns nothing
local trigger rm
local playerunitevent sm
local integer tm
set pt=CreateTrigger()
set rm=pt
set sm=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set tm=0
loop
call TriggerRegisterPlayerUnitEvent(rm,Player(tm),sm,null)
set tm=tm+1
exitwhen tm==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(pt,Condition(Kp))
call TriggerAddAction(pt,Lp)
set rm=null
set sm=null
endfunction
function jP takes nothing returns nothing
local trigger hP
local playerunitevent FP
local integer kP
set di=CreateTrigger()
set hP=di
set FP=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set kP=0
loop
call TriggerRegisterPlayerUnitEvent(hP,Player(kP),FP,null)
set kP=kP+1
exitwhen kP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(di,Condition(ra))
call TriggerAddAction(di,sa)
set hP=null
set FP=null
endfunction
function jv takes nothing returns nothing
local trigger hv
local playerunitevent Fv
local integer kv
set Ot=CreateTrigger()
set hv=Ot
set Fv=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set kv=0
loop
call TriggerRegisterPlayerUnitEvent(hv,Player(kv),Fv,null)
set kv=kv+1
exitwhen kv==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ot,Condition(Zp))
call TriggerAddAction(Ot,Up)
set hv=null
set Fv=null
endfunction
function kJ takes nothing returns nothing
local trigger gJ
local playerunitevent hJ
local integer FJ
set Ki=CreateTrigger()
set gJ=Ki
set hJ=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set FJ=0
loop
call TriggerRegisterPlayerUnitEvent(gJ,Player(FJ),hJ,null)
set FJ=FJ+1
exitwhen FJ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ki,Condition(wn))
call TriggerAddAction(Ki,un)
set gJ=null
set hJ=null
endfunction
function kj takes nothing returns nothing
local trigger gj
local playerunitevent hj
local integer Fj
set Bs=CreateTrigger()
set gj=Bs
set hj=EVENT_PLAYER_UNIT_SPELL_CAST
set Fj=0
loop
call TriggerRegisterPlayerUnitEvent(gj,Player(Fj),hj,null)
set Fj=Fj+1
exitwhen Fj==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Bs,Condition(qp))
call TriggerAddAction(Bs,ap)
set gj=null
set hj=null
endfunction
function lD takes nothing returns nothing
local trigger cD
local playerunitevent oD
local integer OD
set ji=CreateTrigger()
set cD=ji
set oD=EVENT_PLAYER_UNIT_SPELL_CAST
set OD=0
loop
call TriggerRegisterPlayerUnitEvent(cD,Player(OD),oD,null)
set OD=OD+1
exitwhen OD==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ji,Condition(Ta))
call TriggerAddAction(ji,Ya)
set cD=null
set oD=null
endfunction
function lQ takes nothing returns nothing
local trigger cQ
local playerunitevent oQ
local integer OQ
set Tt=CreateTrigger()
set cQ=Tt
set oQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set OQ=0
loop
call TriggerRegisterPlayerUnitEvent(cQ,Player(OQ),oQ,null)
set OQ=OQ+1
exitwhen OQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Tt,Condition(oe))
call TriggerAddAction(Tt,Oe)
set cQ=null
set oQ=null
endfunction
function lT takes nothing returns nothing
set Rs=CreateTrigger()
call TriggerRegisterTimerEvent(Rs,120.00,false)
call TriggerAddAction(Rs,by)
endfunction
function lY takes nothing returns nothing
local trigger cY
local playerunitevent oY
local integer OY
set Fs=CreateTrigger()
set cY=Fs
set oY=EVENT_PLAYER_UNIT_ATTACKED
set OY=0
loop
call TriggerRegisterPlayerUnitEvent(cY,Player(OY),oY,null)
set OY=OY+1
exitwhen OY==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Fs,Condition(fy))
call TriggerAddAction(Fs,Ry)
set cY=null
set oY=null
endfunction
function lZ takes nothing returns nothing
local trigger cZ
local playerunitevent oZ
local integer OZ
set Lt=CreateTrigger()
set cZ=Lt
set oZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set OZ=0
loop
call TriggerRegisterPlayerUnitEvent(cZ,Player(OZ),oZ,null)
set OZ=OZ+1
exitwhen OZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Lt,Condition(sq))
call TriggerAddAction(Lt,tq)
set cZ=null
set oZ=null
endfunction
function mQ takes nothing returns nothing
local trigger jQ
local playerunitevent xQ
local integer vQ
set gt=CreateTrigger()
set jQ=gt
set xQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set vQ=0
loop
call TriggerRegisterPlayerUnitEvent(jQ,Player(vQ),xQ,null)
set vQ=vQ+1
exitwhen vQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(gt,Condition(ee))
call TriggerAddAction(gt,qe)
set jQ=null
set xQ=null
endfunction
function mZ takes nothing returns nothing
local trigger jZ
local playerunitevent xZ
local integer vZ
set Vt=CreateTrigger()
set jZ=Vt
set xZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set vZ=0
loop
call TriggerRegisterPlayerUnitEvent(jZ,Player(vZ),xZ,null)
set vZ=vZ+1
exitwhen vZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Vt,Condition(Oq))
call TriggerAddAction(Vt,lq)
set jZ=null
set xZ=null
endfunction
function nQ takes nothing returns nothing
local trigger eQ
local playerunitevent qQ
local integer aQ
set Yt=CreateTrigger()
set eQ=Yt
set qQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set aQ=0
loop
call TriggerRegisterPlayerUnitEvent(eQ,Player(aQ),qQ,null)
set aQ=aQ+1
exitwhen aQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Yt,Condition(le))
call TriggerAddAction(Yt,be)
set eQ=null
set qQ=null
endfunction
function nZ takes nothing returns nothing
local trigger eZ
local playerunitevent qZ
local integer aZ
set Xt=CreateTrigger()
set eZ=Xt
set qZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set aZ=0
loop
call TriggerRegisterPlayerUnitEvent(eZ,Player(aZ),qZ,null)
set aZ=aZ+1
exitwhen aZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Xt,Condition(iq))
call TriggerAddAction(Xt,Sq)
set eZ=null
set qZ=null
endfunction
function nh takes nothing returns nothing
set As=CreateTrigger()
call TriggerRegisterTimerEvent(As,5.00,true)
call TriggerAddAction(As,Ny)
endfunction
function oH takes nothing returns nothing
local trigger iH
local playerunitevent SH
local integer cH
set Wi=CreateTrigger()
set iH=Wi
set SH=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set cH=0
loop
call TriggerRegisterPlayerUnitEvent(iH,Player(cH),SH,null)
set cH=cH+1
exitwhen cH==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Wi,Condition(ma))
call TriggerAddAction(Wi,Qa)
set iH=null
set SH=null
endfunction
function oU takes nothing returns nothing
local trigger iU
local playerunitevent SU
local integer cU
set wi=CreateTrigger()
set iU=wi
set SU=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set cU=0
loop
call TriggerRegisterPlayerUnitEvent(iU,Player(cU),SU,null)
set cU=cU+1
exitwhen cU==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(wi,Condition(nq))
call TriggerAddAction(wi,dq)
set iU=null
set SU=null
endfunction
function oj takes nothing returns nothing
local trigger ij
local playerunitevent Sj
local integer cj
set Vs=CreateTrigger()
set ij=Vs
set Sj=EVENT_PLAYER_UNIT_DEATH
set cj=0
loop
call TriggerRegisterPlayerUnitEvent(ij,Player(cj),Sj,null)
set cj=cj+1
exitwhen cj==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Vs,Condition(pp))
call TriggerAddAction(Vs,ep)
set ij=null
set Sj=null
endfunction
function ok takes nothing returns nothing
local trigger ik
local playerunitevent Sk
local integer ck
set Ls=CreateTrigger()
set ik=Ls
set Sk=EVENT_PLAYER_UNIT_DEATH
set ck=0
loop
call TriggerRegisterPlayerUnitEvent(ik,Player(ck),Sk,null)
set ck=ck+1
exitwhen ck==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ls,Condition(cp))
call TriggerAddAction(Ls,op)
set ik=null
set Sk=null
endfunction
function pJ takes nothing returns nothing
local trigger lJ
local playerunitevent bJ
local integer yJ
set Hi=CreateTrigger()
set lJ=Hi
set bJ=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set yJ=0
loop
call TriggerRegisterPlayerUnitEvent(lJ,Player(yJ),bJ,null)
set yJ=yJ+1
exitwhen yJ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Hi,Condition(Va))
call TriggerAddAction(Hi,Ba)
set lJ=null
set bJ=null
endfunction
function pT takes nothing returns nothing
set Ys=CreateTrigger()
call TriggerRegisterTimerEvent(Ys,1.00,false)
call TriggerAddAction(Ys,yy)
endfunction
function px takes nothing returns nothing
local trigger lx
local playerunitevent bx
local integer yx
set wt=CreateTrigger()
set lx=wt
set bx=EVENT_PLAYER_UNIT_DEATH
set yx=0
loop
call TriggerRegisterPlayerUnitEvent(lx,Player(yx),bx,null)
set yx=yx+1
exitwhen yx==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(wt,Condition(fp))
call TriggerAddAction(wt,Rp)
set lx=null
set bx=null
endfunction
function qA takes nothing returns nothing
set gi=CreateTrigger()
call TriggerRegisterTimerEvent(gi,0.10,false)
call TriggerAddAction(gi,qa)
endfunction
function qH takes nothing returns nothing
local trigger yH
local playerunitevent pH
local integer eH
set Ei=CreateTrigger()
set yH=Ei
set pH=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set eH=0
loop
call TriggerRegisterPlayerUnitEvent(yH,Player(eH),pH,null)
set eH=eH+1
exitwhen eH==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ei,Condition(Wa))
call TriggerAddAction(Ei,Ea)
set yH=null
set pH=null
endfunction
function qU takes nothing returns nothing
local trigger yU
local playerunitevent pU
local integer eU
set ui=CreateTrigger()
set yU=ui
set pU=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set eU=0
loop
call TriggerRegisterPlayerUnitEvent(yU,Player(eU),pU,null)
set eU=eU+1
exitwhen eU==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ui,Condition(fq))
call TriggerAddAction(ui,Rq)
set yU=null
set pU=null
endfunction
function rE takes nothing returns nothing
local trigger MW
local playerunitevent wE
local integer uE
set Zt=CreateTrigger()
set MW=Zt
set wE=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set uE=0
loop
call TriggerRegisterPlayerUnitEvent(MW,Player(uE),wE,null)
set uE=uE+1
exitwhen uE==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Zt,Condition(Ue))
call TriggerAddAction(Zt,Ie)
set MW=null
set wE=null
endfunction
function rI takes nothing returns nothing
local trigger MU
local playerunitevent wI
local integer uI
set ci=CreateTrigger()
set MU=ci
set wI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set uI=0
loop
call TriggerRegisterPlayerUnitEvent(MU,Player(uI),wI,null)
set uI=uI+1
exitwhen uI==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ci,Condition(mq))
call TriggerAddAction(ci,Qq)
set MU=null
set wI=null
endfunction
function sQ takes nothing returns nothing
local trigger wQ
local playerunitevent uQ
local integer rQ
set Rt=CreateTrigger()
set wQ=Rt
set uQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set rQ=0
loop
call TriggerRegisterPlayerUnitEvent(wQ,Player(rQ),uQ,null)
set rQ=rQ+1
exitwhen rQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Rt,Condition(Se))
call TriggerAddAction(Rt,ce)
set wQ=null
set uQ=null
endfunction
function sZ takes nothing returns nothing
local trigger wZ
local playerunitevent uZ
local integer rZ
set Kt=CreateTrigger()
set wZ=Kt
set uZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set rZ=0
loop
call TriggerRegisterPlayerUnitEvent(wZ,Player(rZ),uZ,null)
set rZ=rZ+1
exitwhen rZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Kt,Condition(uq))
call TriggerAddAction(Kt,rq)
set wZ=null
set uZ=null
endfunction
function tF takes nothing returns nothing
local trigger uF
local playerunitevent rF
local integer sF
set Hs=CreateTrigger()
set uF=Hs
set rF=EVENT_PLAYER_UNIT_SPELL_CAST
set sF=0
loop
call TriggerRegisterPlayerUnitEvent(uF,Player(sF),rF,null)
set sF=sF+1
exitwhen sF==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Hs,Condition(up))
call TriggerAddAction(Hs,rp)
set uF=null
set rF=null
endfunction
function tK takes nothing returns nothing
local trigger uK
local playerunitevent rK
local integer sK
set Vi=CreateTrigger()
set uK=Vi
set rK=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set sK=0
loop
call TriggerRegisterPlayerUnitEvent(uK,Player(sK),rK,null)
set sK=sK+1
exitwhen sK==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Vi,Condition(On))
call TriggerAddAction(Vi,ln)
set uK=null
set rK=null
endfunction
function tW takes nothing returns nothing
local trigger uW
local playerunitevent rW
local integer sW
set jt=CreateTrigger()
set uW=jt
set rW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set sW=0
loop
call TriggerRegisterPlayerUnitEvent(uW,Player(sW),rW,null)
set sW=sW+1
exitwhen sW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(jt,Condition(Ye))
call TriggerAddAction(jt,Ge)
set uW=null
set rW=null
endfunction
function uH takes nothing returns nothing
local trigger ND
local playerunitevent MD
local integer wH
set Qi=CreateTrigger()
set ND=Qi
set MD=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set wH=0
loop
call TriggerRegisterPlayerUnitEvent(ND,Player(wH),MD,null)
set wH=wH+1
exitwhen wH==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Qi,Condition(xa))
call TriggerAddAction(Qi,va)
set ND=null
set MD=null
endfunction
function uU takes nothing returns nothing
local trigger NZ
local playerunitevent MZ
local integer wU
set Mt=CreateTrigger()
set NZ=Mt
set MZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set wU=0
loop
call TriggerRegisterPlayerUnitEvent(NZ,Player(wU),MZ,null)
set wU=wU+1
exitwhen wU==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Mt,Condition(qq))
call TriggerAddAction(Mt,aq)
set NZ=null
set MZ=null
endfunction
function ug takes nothing returns nothing
local trigger NG
local playerunitevent MG
local integer wg
set Es=CreateTrigger()
set NG=Es
set MG=EVENT_PLAYER_UNIT_SPELL_CAST
set wg=0
loop
call TriggerRegisterPlayerUnitEvent(NG,Player(wg),MG,null)
set wg=wg+1
exitwhen wg==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Es,Condition(Zy))
call TriggerAddAction(Es,Uy)
set NG=null
set MG=null
endfunction
function uh takes nothing returns nothing
local trigger Ng
local playerunitevent Mg
local integer wh
set Is=CreateTrigger()
set Ng=Is
set Mg=EVENT_PLAYER_UNIT_SPELL_CAST
set wh=0
loop
call TriggerRegisterPlayerUnitEvent(Ng,Player(wh),Mg,null)
set wh=wh+1
exitwhen wh==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Is,Condition(Ly))
call TriggerAddAction(Is,Xy)
set Ng=null
set Mg=null
endfunction
function vE takes nothing returns nothing
local trigger kE
local playerunitevent jE
local integer xE
set At=CreateTrigger()
set kE=At
set jE=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set xE=0
loop
call TriggerRegisterPlayerUnitEvent(kE,Player(xE),jE,null)
set xE=xE+1
exitwhen xE==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(At,Condition(Le))
call TriggerAddAction(At,Xe)
set kE=null
set jE=null
endfunction
function vI takes nothing returns nothing
local trigger kI
local playerunitevent jI
local integer xI
set bi=CreateTrigger()
set kI=bi
set jI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set xI=0
loop
call TriggerRegisterPlayerUnitEvent(kI,Player(xI),jI,null)
set xI=xI+1
exitwhen xI==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(bi,Condition(Aq))
call TriggerAddAction(bi,Dq)
set kI=null
set jI=null
endfunction
function vx takes nothing returns nothing
local trigger kx
local playerunitevent jx
local integer xx
set ut=CreateTrigger()
set kx=ut
set jx=EVENT_PLAYER_UNIT_DEATH
set xx=0
loop
call TriggerRegisterPlayerUnitEvent(kx,Player(xx),jx,null)
set xx=xx+1
exitwhen xx==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ut,Condition(Tp))
call TriggerAddAction(ut,Yp)
set kx=null
set jx=null
endfunction
function wP takes nothing returns nothing
local trigger BI
local playerunitevent NI
local integer MI
set ei=CreateTrigger()
set BI=ei
set NI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set MI=0
loop
call TriggerRegisterPlayerUnitEvent(BI,Player(MI),NI,null)
set MI=MI+1
exitwhen MI==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ei,Condition(Xq))
call TriggerAddAction(ei,Cq)
set BI=null
set NI=null
endfunction
function wv takes nothing returns nothing
local trigger Bx
local playerunitevent Nx
local integer Mx
set tt=CreateTrigger()
set Bx=tt
set Nx=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Mx=0
loop
call TriggerRegisterPlayerUnitEvent(Bx,Player(Mx),Nx,null)
set Mx=Mx+1
exitwhen Mx==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(tt,Condition(kp))
call TriggerAddAction(tt,jp)
set Bx=null
set Nx=null
endfunction
function xH takes nothing returns nothing
local trigger FH
local playerunitevent kH
local integer jH
set Ui=CreateTrigger()
set FH=Ui
set kH=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set jH=0
loop
call TriggerRegisterPlayerUnitEvent(FH,Player(jH),kH,null)
set jH=jH+1
exitwhen jH==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ui,Condition(Ia))
call TriggerAddAction(Ui,Pa)
set FH=null
set kH=null
endfunction
function xU takes nothing returns nothing
local trigger FU
local playerunitevent kU
local integer jU
set si=CreateTrigger()
set FU=si
set kU=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set jU=0
loop
call TriggerRegisterPlayerUnitEvent(FU,Player(jU),kU,null)
set jU=jU+1
exitwhen jU==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(si,Condition(Gq))
call TriggerAddAction(si,gq)
set FU=null
set kU=null
endfunction
function yA takes nothing returns nothing
local trigger OA
local playerunitevent lA
local integer bA
set Gi=CreateTrigger()
set OA=Gi
set lA=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set bA=0
loop
call TriggerRegisterPlayerUnitEvent(OA,Player(bA),lA,null)
set bA=bA+1
exitwhen bA==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Gi,Condition(ya))
call TriggerAddAction(Gi,pa)
set OA=null
set lA=null
endfunction
function ym takes nothing returns nothing
local trigger Om
local playerunitevent lm
local integer bm
set et=CreateTrigger()
set Om=et
set lm=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set bm=0
loop
call TriggerRegisterPlayerUnitEvent(Om,Player(bm),lm,null)
set bm=bm+1
exitwhen bm==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(et,Condition(Xp))
call TriggerAddAction(et,Cp)
set Om=null
set lm=null
endfunction
function WK takes nothing returns nothing
call lT()
set Ts=CreateTrigger()
call TriggerAddAction(Ts,fn)
call pT()
call hT()
call IT()
call NT()
call lY()
call YY()
call EY()
call CY()
call cG()
call aG()
call YG()
call ZG()
call ug()
call dg()
call Zg()
call uh()
call Oh()
call nh()
call Uh()
call tF()
call GF()
call JF()
call ok()
call hk()
call Jk()
call oj()
call kj()
call Cj()
set Ms=CreateTrigger()
call TriggerAddAction(Ms,Rn)
call px()
call vx()
call Ix()
call Lx()
call wv()
call cv()
call ev()
call Tv()
call jv()
call Zv()
call Jv()
call Nv()
call im()
call ym()
call fm()
call Fm()
call Wm()
call Dm()
call Vm()
call sQ()
call lQ()
call nQ()
call gQ()
call mQ()
call EQ()
call HQ()
call BQ()
call tW()
call bW()
call dW()
call hW()
call QW()
call AW()
call CW()
call rE()
call OE()
call aE()
call GE()
call vE()
call IE()
call DE()
call VE()
call sZ()
call lZ()
call nZ()
call gZ()
call mZ()
call PZ()
call XZ()
call uU()
call oU()
call qU()
call YU()
call xU()
call UU()
call AU()
call CU()
call rI()
call OI()
call aI()
call GI()
call vI()
call II()
call LI()
call wP()
call cP()
call eP()
call TP()
call jP()
call ZP()
call JP()
call NP()
call iA()
call yA()
call qA()
call RA()
call EA()
call BA()
call lD()
call gD()
call PD()
call XD()
call uH()
call oH()
call qH()
call YH()
call xH()
call UH()
call KH()
call MH()
call SJ()
call pJ()
call RJ()
call kJ()
call EJ()
call HJ()
call BJ()
call tK()
call bK()
call dK()
call hK()
call QK()
endfunction
function AE takes nothing returns nothing
set s=bj_FORCE_ALL_PLAYERS
call ForForce(s,Be)
endfunction
function AH takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function PI takes nothing returns boolean
if GetResearched()!=1378890051 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890051,true)!=2 then
return false
endif
return true
endfunction
function AI takes nothing returns boolean
if not PI() then
return false
endif
return true
endfunction
function PT takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989045 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function AT takes nothing returns boolean
if not PT() then
return false
endif
return true
endfunction
function rSw takes integer uSw returns string
if uSw==0 then
return "|cffADADADtrace|r"
elseif uSw==1 then
return "|cff2685DCdebug|r"
elseif uSw==2 then
return "|cffFFCC00info|r"
elseif uSw==3 then
return "|cffF47E3Ewarning|r"
elseif uSw==4 then
return "|cffFB2700error|r"
endif
return "?"
endfunction
function m6 takes string R6,string T6 returns nothing
local integer Y6
local string G6
local integer g6
local integer h6
local string F6
local integer k6
local integer j6
local string x6
local string v6
set Wb[Qb]=T6
set Qb=Qb+1
set Y6=StringHash(R6)
if HaveSavedInteger(Kc,-1,Y6) then
if LoadInteger(Kc,-1,Y6)+60<ro then
set x6=R6
set G6=""
set g6=Qb
set h6=0
loop
set g6=g6-1
set h6=h6+1
exitwhen h6>20 or g6<0
set G6=G6+"\n   "+Wb[g6]
endloop
call DisplayTimedTextToPlayer(fO,0.,0.,45.,rSw(4)+" - "+x6+G6)
call SaveInteger(Kc,-1,Y6,R2I(ro))
call SaveBoolean(Kc,-1,Y6,false)
elseif HaveSavedBoolean(Kc,-1,Y6) then
if not LoadBoolean(Kc,-1,Y6) then
call DisplayTimedTextToPlayer(fO,0.,0.,45.,rSw(4)+" - "+"|cffFF3A29Excessive repeating errors are being omitted")
call SaveBoolean(Kc,-1,Y6,true)
endif
else
call DisplayTimedTextToPlayer(fO,0.,0.,45.,rSw(4)+" - "+"|cffFF3A29Excessive repeating errors are being omitted")
call SaveBoolean(Kc,-1,Y6,true)
endif
else
call SaveInteger(Kc,-1,Y6,R2I(ro))
set v6="Message: "+R6
set F6=""
set k6=Qb
set j6=0
loop
set k6=k6-1
set j6=j6+1
exitwhen j6>20 or k6<0
set F6=F6+"\n   "+Wb[k6]
endloop
set T6=v6+F6
call DisplayTimedTextToPlayer(fO,0.,0.,45.,rSw(4)+" - "+T6)
endif
call I2S(1/0)
set Qb=Qb-1
endfunction
function aC takes string iC,string SC,real cC,real oC,real OC,integer lC,real bC,real yC,boolean pC,string eC returns integer
local integer qC
set Wb[Qb]=eC
set Qb=Qb+1
set Wb[Qb]="when calling CityModifierClass in CityModifiers, line 39"
set Qb=Qb+1
if kl==0 then
if jl<32768 then
set jl=jl+1
set qC=jl
else
call m6("Out of memory: Could not create CityModifierClass.","when calling error in CityModifiers, line 28")
set qC=0
endif
else
set kl=kl-1
set qC=Fl[kl]
endif
set Qb=Qb-1
set qS[qC]=cC
set aS[qC]=yC
set nS[qC]=pC
set dS[qC]=oC
set fS[qC]=lC
set RS[qC]=bC
set TS[qC]=OC
set YS[qC]=iC
set GS[qC]=SC
set Qb=Qb-1
return qC
endfunction
function o7 takes string S7 returns integer
local integer c7
set Wb[Qb]=S7
set Qb=Qb+1
set Wb[Qb]="when calling HashMap in HashMap, line 7"
set Qb=Qb+1
if ib==0 then
if Sb<32768 then
set Sb=Sb+1
set c7=Sb
set cb[c7]=726
else
call m6("Out of memory: Could not create HashMap.","when calling error in HashMap, line 8")
set c7=0
endif
else
set ib=ib-1
set c7=tb[ib]
set cb[c7]=726
endif
set Qb=Qb-1-1
return c7
endfunction
function K6 takes integer P6,integer A6,string D6 returns nothing
local hashtable H6
local integer J6
set Wb[Qb]=D6
set Qb=Qb+1
set H6=So
set Wb[Qb]="when calling count in HashList, line 19"
set Qb=Qb+1
if sb[P6]==0 then
if P6==0 then
call m6("Nullpointer exception when calling HashList.count","when calling error in HashList, line 15")
else
call m6("Called HashList.count on invalid object.","when calling error in HashList, line 15")
endif
endif
set J6=LoadInteger(So,P6,A6)
set Qb=Qb-1
call SaveInteger(H6,P6,A6,J6+1)
set Qb=Qb-1
set H6=null
endfunction
function cew takes integer tew,integer iew,string Sew returns nothing
set Wb[Qb]=Sew
set Qb=Qb+1
call SaveInteger(io,tew,co[tew],iew)
set Wb[Qb]="when calling incrOccurences in HashList, line 28"
set Qb=Qb+1
if sb[tew]==0 then
if tew==0 then
call m6("Nullpointer exception when calling HashList.incrOccurences","when calling error in HashList, line 18")
else
call m6("Called HashList.incrOccurences on invalid object.","when calling error in HashList, line 18")
endif
endif
call K6(tew,iew,"when calling incrOccurences in HashList, line 18")
set Qb=Qb-1
set co[tew]=co[tew]+1
set Qb=Qb-1
endfunction
function eew takes integer oew,integer Oew,string lew returns nothing
local integer bew
local hashtable yew
local integer pew
set Wb[Qb]=lew
set Qb=Qb+1
set Wb[Qb]="when calling count in HashSet, line 11"
set Qb=Qb+1
if sb[oew]==0 then
if oew==0 then
call m6("Nullpointer exception when calling HashList.count","when calling error in HashList, line 15")
else
call m6("Called HashList.count on invalid object.","when calling error in HashList, line 15")
endif
endif
set bew=LoadInteger(So,oew,Oew)
set Qb=Qb-1
if bew<=0 then
set yew=Oo
set Wb[Qb]="when calling size in HashSet, line 12"
set Qb=Qb+1
if sb[oew]==0 then
if oew==0 then
call m6("Nullpointer exception when calling HashList.size","when calling error in HashList, line 67")
else
call m6("Called HashList.size on invalid object.","when calling error in HashList, line 67")
endif
endif
set pew=co[oew]
set Qb=Qb-1
call SaveInteger(yew,oew,Oew,pew)
call cew(oew,Oew,"when calling add in HashSet, line 13")
endif
set Qb=Qb-1
set yew=null
endfunction
function few takes integer qew,integer aew,string dew returns nothing
set Wb[Qb]=dew
set Qb=Qb+1
if sb[qew]==0 then
if qew==0 then
call m6("Nullpointer exception when calling HashList.add","when calling error in HashList, line 25")
else
call m6("Called HashList.add on invalid object.","when calling error in HashList, line 25")
endif
endif
if sb[qew]<=690 then
call cew(qew,aew,"when calling add in HashList, line 25")
else
call eew(qew,aew,"when calling add in HashList, line 25")
endif
set Qb=Qb-1
endfunction
function spw takes integer Myw,integer wpw,string upw returns boolean
local integer rpw
set Wb[Qb]=upw
set Qb=Qb+1
if sb[Myw]==0 then
if Myw==0 then
call m6("Nullpointer exception when calling HashList.has","when calling error in HashList, line 87")
else
call m6("Called HashList.has on invalid object.","when calling error in HashList, line 87")
endif
endif
set Wb[Qb]="when calling has in HashList, line 87"
set Qb=Qb+1
set Wb[Qb]="when calling count in HashList, line 88"
set Qb=Qb+1
if sb[Myw]==0 then
if Myw==0 then
call m6("Nullpointer exception when calling HashList.count","when calling error in HashList, line 15")
else
call m6("Called HashList.count on invalid object.","when calling error in HashList, line 15")
endif
endif
set rpw=LoadInteger(So,Myw,wpw)
set Qb=Qb-1
set Qb=Qb-1-1
return rpw>0
endfunction
function e7 takes integer O7,integer l7,integer b7,string y7 returns nothing
local boolean p7
set Wb[Qb]=y7
set Qb=Qb+1
set Wb[Qb]="when calling put in HashMap, line 48"
set Qb=Qb+1
set Wb[Qb]="when calling saveInt in HashMap, line 16"
set Qb=Qb+1
if cb[O7]==0 then
if O7==0 then
call m6("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call m6("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(wl,O7,l7,b7)
set Qb=Qb-1-1
set Wb[Qb]="when calling hasKey in HashMap, line 49"
set Qb=Qb+1
if cb[O7]==0 then
if O7==0 then
call m6("Nullpointer exception when calling IterableMap.hasKey","when calling error in HashMap, line 75")
else
call m6("Called IterableMap.hasKey on invalid object.","when calling error in HashMap, line 75")
endif
endif
set Wb[Qb]="when calling hasKey in HashMap, line 75"
set Qb=Qb+1
set p7=spw(oo[O7],l7,"when calling has in HashMap, line 76")
set Qb=Qb-1-1
if not p7 then
call few(oo[O7],l7,"when calling add in HashMap, line 50")
endif
set Qb=Qb-1
endfunction
function ppw takes integer Opw,integer lpw,integer bpw,string ypw returns nothing
set Wb[Qb]=ypw
set Qb=Qb+1
if cb[Opw]==0 then
if Opw==0 then
call m6("Nullpointer exception when calling HashMap.put","when calling error in HashMap, line 15")
else
call m6("Called HashMap.put on invalid object.","when calling error in HashMap, line 15")
endif
endif
if cb[Opw]<=726 then
set Wb[Qb]="when calling put in HashMap, line 15"
set Qb=Qb+1
set Wb[Qb]="when calling saveInt in HashMap, line 16"
set Qb=Qb+1
if cb[Opw]==0 then
if Opw==0 then
call m6("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call m6("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(wl,Opw,lpw,bpw)
set Qb=Qb-1-1
else
call e7(Opw,lpw,bpw,"when calling put in HashMap, line 15")
endif
set Qb=Qb-1
endfunction
function J8 takes integer I8,integer P8,integer A8,string D8 returns integer
local integer H8
set Wb[Qb]=D8
set Qb=Qb+1
set Wb[Qb]="when calling LLEntry in LinkedList, line 401"
set Qb=Qb+1
if bb==0 then
if yb<32768 then
set yb=yb+1
set H8=yb
set pb[H8]=697
else
call m6("Out of memory: Could not create LLEntry.","when calling error in LinkedList, line 396")
set H8=0
endif
else
set bb=bb-1
set H8=lb[bb]
set pb[H8]=697
endif
set Qb=Qb-1
set qo[H8]=I8
set ao[H8]=P8
set no[H8]=A8
set Qb=Qb-1
return H8
endfunction
function sew takes integer Mpw,integer wew,string uew returns nothing
local integer rew
set Wb[Qb]=uew
set Qb=Qb+1
if Tb[Mpw]==0 then
if Mpw==0 then
call m6("Nullpointer exception when calling LinkedList.add","when calling error in LinkedList, line 37")
else
call m6("Called LinkedList.add on invalid object.","when calling error in LinkedList, line 37")
endif
endif
set Wb[Qb]="when calling add in LinkedList, line 37"
set Qb=Qb+1
set rew=J8(wew,ao[Yo[Mpw]],Yo[Mpw],"when calling new_LLEntry in LinkedList, line 39")
set no[ao[Yo[Mpw]]]=rew
set ao[Yo[Mpw]]=rew
set Go[Mpw]=Go[Mpw]+1
set Qb=Qb-1-1
endfunction
function y9 takes string l9 returns integer
local integer b9
set Wb[Qb]=l9
set Qb=Qb+1
set Wb[Qb]="when calling LinkedList in LinkedList, line 31"
set Qb=Qb+1
if fb==0 then
if Rb<32768 then
set Rb=Rb+1
set b9=Rb
set Tb[b9]=701
else
call m6("Out of memory: Could not create LinkedList.","when calling error in LinkedList, line 17")
set b9=0
endif
else
set fb=fb-1
set b9=db[fb]
set Tb[b9]=701
endif
set Qb=Qb-1
set Wb[Qb]="when calling construct_LinkedList2 in LinkedList, line 31"
set Qb=Qb+1
set Yo[b9]=J8(0,0,0,"when calling new_LLEntry in LinkedList, line 18")
set Go[b9]=0
set no[Yo[b9]]=Yo[b9]
set ao[Yo[b9]]=Yo[b9]
set Qb=Qb-1-1
return b9
endfunction
function tC takes string HX returns boolean
local integer JX
local integer KX
local integer LX
local integer XX
local integer CX
local integer VX
local integer BX
local integer NX
local integer MX
local integer wC
local integer uC
local integer rC
local integer sC
set Wb[Qb]=HX
set Qb=Qb+1
set KX=R2I(0.5)
set LX=R2I(1)
set Wb[Qb]="when calling asList in CityModifiers, line 9"
set Qb=Qb+1
set XX=y9("when calling new_LinkedList in LinkedList, line 391")
call sew(XX,KX,"when calling add in LinkedList, line 393")
call sew(XX,LX,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set tS[0]=XX
set CX=R2I(1)
set VX=R2I(3)
set Wb[Qb]="when calling asList in CityModifiers, line 10"
set Qb=Qb+1
set BX=y9("when calling new_LinkedList in LinkedList, line 391")
call sew(BX,CX,"when calling add in LinkedList, line 393")
call sew(BX,VX,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set tS[1]=BX
set NX=R2I(3)
set MX=R2I(10)
set Wb[Qb]="when calling asList in CityModifiers, line 11"
set Qb=Qb+1
set wC=y9("when calling new_LinkedList in LinkedList, line 391")
call sew(wC,NX,"when calling add in LinkedList, line 393")
call sew(wC,MX,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set tS[2]=wC
set uC=R2I(10)
set rC=R2I(20)
set Wb[Qb]="when calling asList in CityModifiers, line 12"
set Qb=Qb+1
set sC=y9("when calling new_LinkedList in LinkedList, line 391")
call sew(sC,uC,"when calling add in LinkedList, line 393")
call sew(sC,rC,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set tS[3]=sC
set iS=aC("|cffff0000Just conquered|r","|cffc00000-PO -pop|r",240,1.0,0.0,1,-1.0,-30.0,false,"when calling new_CityModifierClass in CityModifiers, line 70")
set SS=aC("|cfffffb00Just revolted|r","|cff00af00+PO|r|cffc00000 -pop|r",120.0,1.0,0.0,0,0.,30.0,false,"when calling new_CityModifierClass in CityModifiers, line 78")
set cS=aC("|cff33ff00Population Boom|r","|cff33ff00++pop|r",120.0,0.01,0.,0,0.,0.,true,"when calling new_CityModifierClass in CityModifiers, line 86")
set oS=aC("|cffff0000Plague outburst|r","|cffff0000--pop|r",240,0.03,0.,2,-1.,0.,true,"when calling new_CityModifierClass in CityModifiers, line 94")
set OS=aC("|cffaf0000Big Fire|r","|cffc00000-pop|r",30,0.01,0.,2,-1.,0.,true,"when calling new_CityModifierClass in CityModifiers, line 102")
set lS=aC("|cff15ff00More trade estabilished|r","|cff00af00+tax +pop|r",240,0.01,0.15,0,1.,0.,true,"when calling new_CityModifierClass in CityModifiers, line 110")
set bS=aC("|cffff0000Massacred population|r","|cff00af00+PO |r|cffff0000--pop|r",30,0.05,0.,3,-1.,10.,true,"when calling new_CityModifierClass in CityModifiers, line 118")
set yS=aC("|cff00ff00Prospering|r","|cff00af00+PO +pop +tax|r",240,0.01,0.10,1,1.,20.0,true,"when calling new_CityModifierClass in CityModifiers, line 126")
set pS=aC("|cffff0000Sieged|r","|cffc00000-PO -pop|r",5,1.0,0.,0,-1.,-10.0,true,"when calling new_CityModifierClass in CityModifiers, line 134")
set eS=o7("when calling new_HashMap in CityModifiers, line 144")
set JX=eS
call ppw(JX,0,iS,"when calling put in CityModifiers, line 151")
call ppw(JX,1,SS,"when calling put in CityModifiers, line 152")
call ppw(JX,2,cS,"when calling put in CityModifiers, line 153")
call ppw(JX,3,oS,"when calling put in CityModifiers, line 154")
call ppw(JX,4,OS,"when calling put in CityModifiers, line 155")
call ppw(JX,5,lS,"when calling put in CityModifiers, line 156")
call ppw(JX,6,bS,"when calling put in CityModifiers, line 157")
call ppw(JX,7,yS,"when calling put in CityModifiers, line 158")
call ppw(JX,8,pS,"when calling put in CityModifiers, line 159")
set Qb=Qb-1
return true
endfunction
function Aaw takes nothing returns boolean
set Qb=0
return tC("CityModifiers, line 1")
endfunction
function Ih takes nothing returns boolean
if GetUnitTypeId(GetSpellTargetUnit())==1747988787 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747990361 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747989831 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747989040 then
return true
endif
return false
endfunction
function Ph takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988801 then
return false
endif
if not Ih() then
return false
endif
return true
endfunction
function Ah takes nothing returns boolean
if not Ph() then
return false
endif
return true
endfunction
function Px takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function Ax takes nothing returns boolean
if not Px() then
return false
endif
return true
endfunction
function BD takes nothing returns nothing
call UnitAddAbility(GetConstructedStructure(),1093677896)
endfunction
function BG takes nothing returns nothing
local location AG
local location DG
local real HG
local real JG
local rect KG
local group LG
local group XG
local code CG
local boolean VG
set u=GetUnitLoc(GetSpellAbilityUnit())
set AG=u
set c=Location(GetLocationX(AG)+200.00,GetLocationY(AG)+0.00)
set DG=u
set HG=GetLocationX(DG)
set JG=GetLocationY(DG)
set O=Rect(HG-150,JG-140,HG+150,JG+140)
set KG=O
set LG=CreateGroup()
call GroupEnumUnitsInRect(LG,KG,null)
call DestroyBoolExpr(null)
set l=LG
set XG=l
set CG=Ey
set VG=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(XG,CG)
if VG then
call DestroyGroup(XG)
endif
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747988825,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"stand")
call DestroyGroup(l)
call RemoveLocation(c)
call RemoveLocation(u)
set AG=null
set DG=null
set KG=null
set LG=null
set XG=null
endfunction
function VU takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function BU takes nothing returns boolean
if not VU() then
return false
endif
return true
endfunction
function VW takes nothing returns boolean
if GetResearched()!=1378889809 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889809,true)!=2 then
return false
endif
return true
endfunction
function BW takes nothing returns boolean
if not VW() then
return false
endif
return true
endfunction
function VY takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989305 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function BY takes nothing returns boolean
if not VY() then
return false
endif
return true
endfunction
function BZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989833,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989834,0)
endfunction
function BSw takes playerunitevent ASw,code DSw,code HSw,code JSw returns nothing
local integer KSw=GetHandleId(ASw)
local integer LSw
local filterfunc XSw
local trigger CSw
local player VSw
if vO[KSw]==null then
set vO[KSw]=CreateTrigger()
set LSw=bj_MAX_PLAYER_SLOTS-1
loop
exitwhen LSw<0
set CSw=vO[KSw]
set VSw=dO[LSw]
if DSw!=null then
set XSw=Filter(DSw)
else
set XSw=null
endif
call TriggerRegisterPlayerUnitEvent(CSw,VSw,ASw,XSw)
set LSw=LSw-1
endloop
endif
if HSw!=null then
call TriggerAddCondition(vO[KSw],Filter(HSw))
endif
if JSw!=null then
call TriggerAddAction(vO[KSw],JSw)
endif
set XSw=null
set CSw=null
set VSw=null
endfunction
function lM takes eventid rM,string sM returns integer
local integer tM
local integer iM
local integer SM
local integer cM
local boolean oM
local boolean OM
set Wb[Qb]=sM
set Qb=Qb+1
set tM=GetHandleId(rM)
set Oc=Oc+1
set oc[tM]=Oc
set iM=GetHandleId(rM)
if (iM>=18 and iM<=51)or(iM>=269 and iM<=277) then
call BSw(ConvertPlayerUnitEvent(tM),null,sf,null)
else
if rM!=EVENT_UNIT_DAMAGED and rM!=EVENT_PLAYER_LEAVE and rM!=tc then
set SM=GetHandleId(rM)
set oM=SM<261 or SM>268 and SM!=17
else
set oM=false
endif
if oM then
set cM=GetHandleId(rM)
set OM=cM<305 or cM>307
else
set OM=false
endif
if OM then
call m6("registering handleid: "+I2S(tM)+" non-playerunitevent. Except EVENT_UNIT_DAMAGED and EVENT_PLAYER_LEAVE these are not supported right now.","when calling error in ClosureEvents, line 242")
endif
endif
set Qb=Qb-1
return Oc
endfunction
function r8 takes string C7 returns boolean
local playerunitevent V7
local playerunitevent B7
local integer N7
local integer M7
local integer w8
local integer u8
set Wb[Qb]=C7
set Qb=Qb+1
set V7=EVENT_PLAYER_UNIT_DEATH
set Wb[Qb]="when calling alloc_Closure in LimitEncampments, line 8"
set Qb=Qb+1
if Gl==0 then
if gl<32768 then
set gl=gl+1
set N7=gl
set hl[N7]=666
else
call m6("Out of memory: Could not create Closure.","when calling error in LimitEncampments, line 8")
set N7=0
endif
else
set Gl=Gl-1
set N7=Yl[Gl]
set hl[N7]=666
endif
set Qb=Qb-1
set ec[N7]=0
set qc[N7]=0
set ac[N7]=0
set Wb[Qb]="when calling add in LimitEncampments, line 8"
set Qb=Qb+1
set Wb[Qb]="when calling toIntId in ClosureEvents, line 111"
set Qb=Qb+1
set M7=oc[GetHandleId(V7)]
if M7==0 then
set M7=lM(V7,"when calling registerEventId in ClosureEvents, line 228")
endif
set Qb=Qb-1
set ec[N7]=M7
if yc[ec[N7]]!=0 then
set ac[yc[ec[N7]]]=N7
set qc[N7]=yc[ec[N7]]
endif
set yc[ec[N7]]=N7
set Qb=Qb-1
set B7=EVENT_PLAYER_UNIT_CONSTRUCT_START
set Wb[Qb]="when calling alloc_Closure in LimitEncampments, line 12"
set Qb=Qb+1
if Gl==0 then
if gl<32768 then
set gl=gl+1
set w8=gl
set hl[w8]=667
else
call m6("Out of memory: Could not create Closure.","when calling error in LimitEncampments, line 12")
set w8=0
endif
else
set Gl=Gl-1
set w8=Yl[Gl]
set hl[w8]=667
endif
set Qb=Qb-1
set ec[w8]=0
set qc[w8]=0
set ac[w8]=0
set Wb[Qb]="when calling add in LimitEncampments, line 12"
set Qb=Qb+1
set Wb[Qb]="when calling toIntId in ClosureEvents, line 111"
set Qb=Qb+1
set u8=oc[GetHandleId(B7)]
if u8==0 then
set u8=lM(B7,"when calling registerEventId in ClosureEvents, line 228")
endif
set Qb=Qb-1
set ec[w8]=u8
if yc[ec[w8]]!=0 then
set ac[yc[ec[w8]]]=w8
set qc[w8]=yc[ec[w8]]
endif
set yc[ec[w8]]=w8
set Qb=Qb-1-1
set V7=null
set B7=null
return true
endfunction
function Baw takes nothing returns boolean
set Qb=0
return r8("LimitEncampments, line 1")
endfunction
function Bg takes nothing returns nothing
local location Ag
local location Dg
local real Hg
local real Jg
local rect Kg
local group Lg
local group Xg
local code Cg
local boolean Vg
set u=GetUnitLoc(GetSpellAbilityUnit())
set Ag=u
set S=Location(GetLocationX(Ag)+0.00,GetLocationY(Ag)+200.00)
set Dg=u
set Hg=GetLocationX(Dg)
set Jg=GetLocationY(Dg)
set o=Rect(Hg-140,Jg-150,Hg+140,Jg+150)
set Kg=o
set Lg=CreateGroup()
call GroupEnumUnitsInRect(Lg,Kg,null)
call DestroyBoolExpr(null)
set l=Lg
set Xg=l
set Cg=Ky
set Vg=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(Xg,Cg)
if Vg then
call DestroyGroup(Xg)
endif
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747989079,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"stand")
call DestroyGroup(l)
call RemoveLocation(S)
call RemoveLocation(u)
set Ag=null
set Dg=null
set Kg=null
set Lg=null
set Xg=null
endfunction
function Bj takes nothing returns boolean
if GetUnitTypeId(GetDyingUnit())!=1747989049 then
return false
endif
return true
endfunction
function CH takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function XI takes nothing returns boolean
if GetResearched()!=1378890053 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890053,true)!=1 then
return false
endif
return true
endfunction
function CI takes nothing returns boolean
if not XI() then
return false
endif
return true
endfunction
function fow takes timer eow,integer qow,string aow returns nothing
local integer now
local integer dow
set Wb[Qb]=aow
set Qb=Qb+1
set now=sl
set dow=GetHandleId(eow)
set Wb[Qb]="when calling saveInt in TimerUtils, line 17"
set Qb=Qb+1
if cb[now]==0 then
if now==0 then
call m6("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call m6("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(wl,now,dow,qow)
set Qb=Qb-1-1
endfunction
function jow takes string Fow returns timer
local timer kow
set Wb[Qb]=Fow
set Qb=Qb+1
if rl>0 then
set rl=rl-1
call fow(ul[rl],0,"when calling setData in TimerUtils, line 29")
set Qb=Qb-1
set kow=null
return ul[rl]
else
set kow=CreateTimer()
call fow(kow,0,"when calling setData in TimerUtils, line 32")
set Qb=Qb-1
set mf=kow
set kow=null
return mf
endif
endfunction
function h3 takes integer Y3,real G3,string g3 returns nothing
set Wb[Qb]=g3
set Qb=Qb+1
set Fc[Y3]=jow("when calling getTimer in ClosureTimers, line 89")
call fow(Fc[Y3],Y3,"when calling setData in ClosureTimers, line 90")
call TimerStart(Fc[Y3],G3,true,yf)
set Qb=Qb-1
endfunction
function M1 takes string B1 returns boolean
local integer N1
set Wb[Qb]=B1
set Qb=Qb+1
set Wb[Qb]="when calling alloc_Closure in DateTime, line 31"
set Qb=Qb+1
if Jl==0 then
if Kl<32768 then
set Kl=Kl+1
set N1=Kl
set Ll[N1]=634
else
call m6("Out of memory: Could not create Closure.","when calling error in DateTime, line 31")
set N1=0
endif
else
set Jl=Jl-1
set N1=Hl[Jl]
set Ll[N1]=634
endif
set Qb=Qb-1
set Wc[N1]=120.0
set Wb[Qb]="when calling doPeriodically in DateTime, line 31"
set Qb=Qb+1
set Wb[Qb]="when calling start in ClosureTimers, line 36"
set Qb=Qb+1
if Ll[N1]==0 then
if N1==0 then
call m6("Nullpointer exception when calling CallbackPeriodic.start","when calling error in ClosureTimers, line 88")
else
call m6("Called CallbackPeriodic.start on invalid object.","when calling error in ClosureTimers, line 88")
endif
endif
call h3(N1,1.0,"when calling start in ClosureTimers, line 88")
set Qb=Qb-1-1-1
return true
endfunction
function Caw takes nothing returns boolean
set Qb=0
return M1("DateTime, line 1")
endfunction
function Ccw takes nothing returns boolean
return true
endfunction
function Xx takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function Cx takes nothing returns boolean
if not Xx() then
return false
endif
return true
endfunction
function AD takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989325 then
return false
endif
return true
endfunction
function DD takes nothing returns boolean
if not AD() then
return false
endif
return true
endfunction
function DI takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990607,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990583,0)
endfunction
function DK takes nothing returns boolean
return true
endfunction
function AZ takes nothing returns boolean
if GetResearched()!=1378890033 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890033,true)!=2 then
return false
endif
return true
endfunction
function DZ takes nothing returns boolean
if not AZ() then
return false
endif
return true
endfunction
function BK takes string LK returns boolean
local playerunitevent XK
local integer CK
local integer VK
set Wb[Qb]=LK
set Qb=Qb+1
set XK=EVENT_PLAYER_UNIT_ATTACKED
set Wb[Qb]="when calling alloc_Closure in CastleCapture, line 8"
set Qb=Qb+1
if Gl==0 then
if gl<32768 then
set gl=gl+1
set CK=gl
set hl[CK]=662
else
call m6("Out of memory: Could not create Closure.","when calling error in CastleCapture, line 8")
set CK=0
endif
else
set Gl=Gl-1
set CK=Yl[Gl]
set hl[CK]=662
endif
set Qb=Qb-1
set ec[CK]=0
set qc[CK]=0
set ac[CK]=0
set Wb[Qb]="when calling add in CastleCapture, line 8"
set Qb=Qb+1
set Wb[Qb]="when calling toIntId in ClosureEvents, line 111"
set Qb=Qb+1
set VK=oc[GetHandleId(XK)]
if VK==0 then
set VK=lM(XK,"when calling registerEventId in ClosureEvents, line 228")
endif
set Qb=Qb-1
set ec[CK]=VK
if yc[ec[CK]]!=0 then
set ac[yc[ec[CK]]]=CK
set qc[CK]=yc[ec[CK]]
endif
set yc[ec[CK]]=CK
set Qb=Qb-1-1
set XK=null
return true
endfunction
function Daw takes nothing returns boolean
set Qb=0
return BK("CastleCapture, line 1")
endfunction
function Diw takes nothing returns boolean
set RO=ConvertPlayerColor(24)
set TO=ConvertPlayerColor(25)
set YO=ConvertPlayerColor(26)
set GO=ConvertPlayerColor(27)
set gO[0]=PLAYER_COLOR_RED
set gO[1]=PLAYER_COLOR_BLUE
set gO[2]=PLAYER_COLOR_CYAN
set gO[3]=PLAYER_COLOR_PURPLE
set gO[4]=PLAYER_COLOR_YELLOW
set gO[5]=PLAYER_COLOR_ORANGE
set gO[6]=PLAYER_COLOR_GREEN
set gO[7]=PLAYER_COLOR_PINK
set gO[8]=PLAYER_COLOR_LIGHT_GRAY
set gO[9]=PLAYER_COLOR_LIGHT_BLUE
set gO[10]=PLAYER_COLOR_AQUA
set gO[11]=PLAYER_COLOR_BROWN
set gO[12]=PLAYER_COLOR_MAROON
set gO[13]=PLAYER_COLOR_NAVY
set gO[14]=PLAYER_COLOR_TURQUOISE
set gO[15]=PLAYER_COLOR_VIOLET
set gO[16]=PLAYER_COLOR_WHEAT
set gO[17]=PLAYER_COLOR_PEACH
set gO[18]=PLAYER_COLOR_MINT
set gO[19]=PLAYER_COLOR_LAVENDER
set gO[20]=PLAYER_COLOR_COAL
set gO[21]=PLAYER_COLOR_SNOW
set gO[22]=PLAYER_COLOR_EMERALD
set gO[23]=PLAYER_COLOR_PEANUT
set gO[24]=RO
set gO[25]=TO
set gO[26]=YO
set gO[27]=GO
return true
endfunction
function Dtw takes nothing returns boolean
local integer Ptw
local integer Atw
set fO=GetLocalPlayer()
set Ptw=0
set Atw=bj_MAX_PLAYER_SLOTS-1
loop
exitwhen Ptw>Atw
set dO[Ptw]=Player(Ptw)
set Ptw=Ptw+1
endloop
return true
endfunction
function Dx takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988561,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988784,0)
endfunction
function E6 takes nothing returns nothing
set ro=ro+0.030
endfunction
function ED takes nothing returns nothing
local integer kD=1
local integer jD=1751343475
local player xD=GetOwningPlayer(GetTriggerUnit())
local rect WD=bj_mapInitialPlayableArea
local location QD=Location(GetRectCenterX(WD),GetRectCenterY(WD))
local location vD=Location(GetLocationX(QD)+100000000.00,GetLocationY(QD)+100000000.00)
local real mD=bj_UNIT_FACING
call GroupClear(bj_lastCreatedGroup)
loop
set kD=kD-1
exitwhen kD<0
call CreateUnitAtLocSaveLast(xD,jD,vD,mD)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
call ShowUnit(bj_lastCreatedUnit,false)
set xD=null
set vD=null
set QD=null
set WD=null
endfunction
function WW takes nothing returns boolean
if GetResearched()!=1378889806 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889806,true)!=2 then
return false
endif
return true
endfunction
function EW takes nothing returns boolean
if not WW() then
return false
endif
return true
endfunction
function EZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989828,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989827,0)
endfunction
function vtw takes unit xtw returns nothing
call UnitAddAbility(xtw,1095577649)
call UnitMakeAbilityPermanent(xtw,true,1095577649)
set lO[bO]=xtw
set bO=bO+1
call TriggerEvaluate(oO)
set bO=bO-1
endfunction
function Etw takes nothing returns nothing
call vtw(GetFilterUnit())
endfunction
function hD takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())==1747988531 then
return true
endif
if GetUnitTypeId(GetTriggerUnit())==1747990328 then
return true
endif
if GetUnitTypeId(GetTriggerUnit())==1747989592 then
return true
endif
if GetUnitTypeId(GetTriggerUnit())==1747990086 then
return true
endif
return false
endfunction
function FD takes nothing returns boolean
if not hD() then
return false
endif
return true
endfunction
function FE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651832,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651830,0)
endfunction
function gF takes nothing returns boolean
if GetUnitTypeId(GetSpellTargetUnit())==1747988787 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747990361 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747989831 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747989040 then
return true
endif
return false
endfunction
function hF takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988793 then
return false
endif
if not gF() then
return false
endif
return true
endfunction
function FF takes nothing returns boolean
if not hF() then
return false
endif
return true
endfunction
function FI takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990594,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990584,0)
endfunction
function hQ takes nothing returns boolean
if GetResearched()!=1378889783 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889783,true)!=2 then
return false
endif
return true
endfunction
function FQ takes nothing returns boolean
if not hQ() then
return false
endif
return true
endfunction
function hZ takes nothing returns boolean
if GetResearched()!=1378890034 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890034,true)!=2 then
return false
endif
return true
endfunction
function FZ takes nothing returns boolean
if not hZ() then
return false
endif
return true
endfunction
function Jow takes string Zow,string Uow returns integer
local integer Iow
local integer Aow
local boolean Dow
local integer How
set Wb[Qb]=Uow
set Qb=Qb+1
set Iow=StringHash(Zow)
set Aow=tl
set Wb[Qb]="when calling hasString in TypeCasting, line 24"
set Qb=Qb+1
if cb[Aow]==0 then
if Aow==0 then
call m6("Nullpointer exception when calling Table.hasString","when calling error in Table, line 18")
else
call m6("Called Table.hasString on invalid object.","when calling error in Table, line 18")
endif
endif
set Dow=HaveSavedString(wl,Aow,Iow)
set Qb=Qb-1
if not Dow then
set How=tl
set Wb[Qb]="when calling saveString in TypeCasting, line 25"
set Qb=Qb+1
if cb[How]==0 then
if How==0 then
call m6("Nullpointer exception when calling Table.saveString","when calling error in Table, line 60")
else
call m6("Called Table.saveString on invalid object.","when calling error in Table, line 60")
endif
endif
call SaveStr(wl,How,Iow,Zow)
set Qb=Qb-1
endif
set Qb=Qb-1
return Iow
endfunction
function initialize takes nothing returns nothing
local integer i_2=0
local integer temp=WO
loop
exitwhen i_2>temp
set i_2=i_2+1
endloop
endfunction
function Faw takes nothing returns boolean
set Qb=0
set Wb[Qb]="StringUtils, line 1"
set Qb=Qb+1
set WO=127
call initialize()
call Jow("","when calling stringToIndex in StringUtils, line 167")
set Qb=Qb-1
return true
endfunction
function Fk takes nothing returns boolean
if GetUnitTypeId(GetDyingUnit())!=1747988791 then
return false
endif
return true
endfunction
function Fx takes nothing returns nothing
local player qx=GetOwningPlayer(GetKillingUnit())
local playerstate ax=PLAYER_STATE_RESOURCE_LUMBER
local playerstate nx
local playerstate dx
local player fx
local force Rx
local location Tx
local real Yx
local real Gx
local player gx
local force hx
if ax==PLAYER_STATE_RESOURCE_GOLD then
set nx=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(qx,nx,GetPlayerState(qx,nx)+500)
elseif ax==PLAYER_STATE_RESOURCE_LUMBER then
set dx=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(qx,dx,GetPlayerState(qx,dx)+500)
endif
call SetPlayerState(qx,ax,GetPlayerState(qx,ax)+500)
set fx=GetOwningPlayer(GetKillingUnit())
set Rx=CreateForce()
call ForceAddPlayer(Rx,fx)
if IsPlayerInForce(GetLocalPlayer(),Rx) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_084")
endif
set y=GetUnitLoc(GetDyingUnit())
set gx=GetOwningPlayer(GetDyingUnit())
set hx=CreateForce()
call ForceAddPlayer(hx,gx)
set Tx=y
set Yx=GetLocationX(Tx)
set Gx=GetLocationY(Tx)
if IsPlayerInForce(GetLocalPlayer(),hx) then
call PingMinimap(Yx,Gx,2.00)
endif
call RemoveLocation(y)
set qx=null
set ax=null
set nx=null
set dx=null
set fx=null
set Rx=null
set Tx=null
set gx=null
set hx=null
endfunction
function GJ takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function YP takes nothing returns boolean
if GetResearched()!=1378890054 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890054,true)!=1 then
return false
endif
return true
endfunction
function GP takes nothing returns boolean
if not YP() then
return false
endif
return true
endfunction
function Xcw takes string Kcw returns integer
local integer Lcw
set Wb[Qb]=Kcw
set Qb=Qb+1
set Wb[Qb]="when calling Table in Table, line 5"
set Qb=Qb+1
if ib==0 then
if Sb<32768 then
set Sb=Sb+1
set Lcw=Sb
set cb[Lcw]=725
else
call m6("Out of memory: Could not create Table.","when calling error in Table, line 6")
set Lcw=0
endif
else
set ib=ib-1
set Lcw=tb[ib]
set cb[Lcw]=725
endif
set Qb=Qb-1-1
return Lcw
endfunction
function Gaw takes nothing returns boolean
set Qb=0
set Wb[Qb]="TimerUtils, line 1"
set Qb=Qb+1
set sl=Xcw("when calling new_Table in TimerUtils, line 12")
call CreateTimer()
call CreateTrigger()
set Qb=Qb-1
return true
endfunction
function Gj takes nothing returns nothing
local player yj=GetOwningPlayer(GetSpellTargetUnit())
local playerstate pj=PLAYER_STATE_RESOURCE_LUMBER
local playerstate ej
local playerstate qj
local player aj
local force nj
local location dj
local real fj
local real Rj
local player Tj
local force Yj
if pj==PLAYER_STATE_RESOURCE_GOLD then
set ej=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(yj,ej,GetPlayerState(yj,ej)+500)
elseif pj==PLAYER_STATE_RESOURCE_LUMBER then
set qj=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(yj,qj,GetPlayerState(yj,qj)+500)
endif
call SetPlayerState(yj,pj,GetPlayerState(yj,pj)+500)
call RemoveUnit(GetSpellAbilityUnit())
set aj=GetOwningPlayer(GetSpellTargetUnit())
set nj=CreateForce()
call ForceAddPlayer(nj,aj)
if IsPlayerInForce(GetLocalPlayer(),nj) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_1232")
endif
set y=GetUnitLoc(GetSpellTargetUnit())
set Tj=GetOwningPlayer(GetSpellTargetUnit())
set Yj=CreateForce()
call ForceAddPlayer(Yj,Tj)
set dj=y
set fj=GetLocationX(dj)
set Rj=GetLocationY(dj)
if IsPlayerInForce(GetLocalPlayer(),Yj) then
call PingMinimap(fj,Rj,2.00)
endif
call RemoveLocation(y)
set yj=null
set pj=null
set ej=null
set qj=null
set aj=null
set nj=null
set dj=null
set Tj=null
set Yj=null
endfunction
function Wlw takes string Flw returns nothing
local unit klw
local integer jlw
local player xlw
local integer vlw
local integer mlw
local boolean Qlw
set Wb[Qb]=Flw
set Qb=Qb+1
set klw=GetEnteringUnit()
set jlw=GetPlayerId(GetOwningPlayer(klw))
set xlw=dO[jlw]
if GetPlayerSlotState(xlw)==PLAYER_SLOT_STATE_PLAYING then
set Qlw=GetPlayerController(xlw)==MAP_CONTROL_USER
else
set Qlw=false
endif
if Qlw and(not IsUnitType(klw,UNIT_TYPE_STRUCTURE)) then
set vlw=yO[jlw]
set mlw=-GetUnitLevel(klw)
set Wb[Qb]="when calling changeUpkeep in Upkeep, line 12"
set Qb=Qb+1
if kb[vlw]==0 then
if vlw==0 then
call m6("Nullpointer exception when calling PlayerStats.changeUpkeep","when calling error in PlayerStats, line 23")
else
call m6("Called PlayerStats.changeUpkeep on invalid object.","when calling error in PlayerStats, line 23")
endif
endif
set nO[vlw]=nO[vlw]+mlw
set Qb=Qb-1
endif
set Qb=Qb-1
set klw=null
set xlw=null
endfunction
function Gnw takes nothing returns nothing
set Qb=0
call Wlw("Upkeep, line 8")
endfunction
function Yv takes nothing returns boolean
if GetResearched()!=1378889796 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889796,true)!=2 then
return false
endif
return true
endfunction
function Gv takes nothing returns boolean
if not Yv() then
return false
endif
return true
endfunction
function Gww takes nothing returns boolean
return true
endfunction
function HD takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function HK takes nothing returns boolean
return true
endfunction
function DU takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function HU takes nothing returns boolean
if not DU() then
return false
endif
return true
endfunction
function DW takes nothing returns boolean
if GetResearched()!=1378889809 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889809,true)!=1 then
return false
endif
return true
endfunction
function HW takes nothing returns boolean
if not DW() then
return false
endif
return true
endfunction
function HZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989826,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989828,0)
endfunction
function YL takes string dL returns boolean
local playerunitevent fL
local integer RL
local integer TL
set Wb[Qb]=dL
set Qb=Qb+1
set fL=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set Wb[Qb]="when calling alloc_Closure in CityBuilded, line 9"
set Qb=Qb+1
if Gl==0 then
if gl<32768 then
set gl=gl+1
set RL=gl
set hl[RL]=663
else
call m6("Out of memory: Could not create Closure.","when calling error in CityBuilded, line 9")
set RL=0
endif
else
set Gl=Gl-1
set RL=Yl[Gl]
set hl[RL]=663
endif
set Qb=Qb-1
set ec[RL]=0
set qc[RL]=0
set ac[RL]=0
set Wb[Qb]="when calling add in CityBuilded, line 9"
set Qb=Qb+1
set Wb[Qb]="when calling toIntId in ClosureEvents, line 111"
set Qb=Qb+1
set TL=oc[GetHandleId(fL)]
if TL==0 then
set TL=lM(fL,"when calling registerEventId in ClosureEvents, line 228")
endif
set Qb=Qb-1
set ec[RL]=TL
if yc[ec[RL]]!=0 then
set ac[yc[ec[RL]]]=RL
set qc[RL]=yc[ec[RL]]
endif
set yc[ec[RL]]=RL
set Qb=Qb-1-1
set fL=null
return true
endfunction
function Haw takes nothing returns boolean
set Qb=0
return YL("CityBuilded, line 1")
endfunction
function Hcw takes nothing returns boolean
set EO[0]="Terrible! Terrible news, my lord!"
set EO[1]="The messenger came to us with horrific news! May we execute him?"
set EO[2]="A mere nightmare, Your Mightiness!"
set ZO[0]="Holy Mother of God, we have horrific news!"
set ZO[1]="Lord Preserve us, Great Prince!"
set ZO[2]="Great Prince, we have horrific news!"
set UO[0]="Allah be merciful! I bring terrible news"
set UO[1]="Oh, Great Sultan! We have terrible news"
set UO[2]="Oh, Great one! I bring ill news"
set IO[0]="Saints save us, we have some most horrific news!"
set IO[1]="My Basileus! We have horrific news!"
set IO[2]="My Basileus, by the grace of our lord. We have horrific news!"
set PO[0]="My King, we have received news concerning our realm"
set PO[1]="The messenger arrived with news. No matter, could I execute him?"
set PO[2]="My liege I bring news about the realm"
set AO[0]="Great Prince, a messenger came with news"
set AO[1]="May the God bless you, Great Prince, we have some news"
set AO[2]="There is something you should know, Great Prince"
set DO[0]="My Sultan! We have news"
set DO[1]="Praise be to Allah, Sultan! We bring news"
set DO[2]="Great Sultan! We have some news"
set HO[0]="My Basileus, we have some news"
set HO[1]="My Basileus, we have some news"
set HO[2]="My Basileus, we have some news"
set JO[0]="Milord! Good news!"
set JO[1]="Praise the Holy Lord! We have good news"
set JO[2]="My King, we bring great news for you!"
set KO[0]="By the grace of our Lord, we bring good news!"
set KO[1]="We received great news my Lord! Still the Messenger deserves to be pusnished"
set KO[2]="My Lord, we have received delightful news!"
set LO[0]="Praise be to Allah, Sultan! We have great news"
set LO[1]="Good tidings Sultan! I bring good news"
set LO[2]="Allah is glorious, Sultan! We have great news"
set XO[0]="Good news, my Basileus!"
set XO[1]="Praise the Holy Lord, we bring great news, my Basileus!"
set XO[2]="We received good news my Basileus! We shouldn’t blind this messenger"
set CO[0]="Your Majesty, important news!"
set CO[1]="May the God bless you, my lord. There is something you must know!"
set CO[2]="There is something that needs your attention, my lord!"
set VO[0]="By the Saints! Great Prince, you must hear to this"
set VO[1]="You should hear this, Great Prince!"
set VO[2]="You need to see this, Great Prince!"
set BO[0]="Great one, urgent news must be brought to your attention!"
set BO[1]="My Sultan, there is something you need to know!"
set BO[2]="My Great Sultan, there is something you must know!"
set NO[0]="My Basileus, there is something you need to know!"
set NO[1]="My Basileus, we can not delay this news!"
set NO[2]="My Basileus, you should be aware of this!"
set MO[0]="|cffffd900Med."
set MO[1]="|cff00ff00Low"
set MO[2]="|cffff0000High"
set MO[3]="|cff940000Harsh"
return true
endfunction
function Htw takes nothing returns boolean
return true
endfunction
function I6 takes nothing returns boolean
set io=InitHashtable()
set So=InitHashtable()
return true
endfunction
function IJ takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function UP takes nothing returns boolean
if GetResearched()!=1378890052 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890052,true)!=1 then
return false
endif
return true
endfunction
function IP takes nothing returns boolean
if not UP() then
return false
endif
return true
endfunction
function IQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990097,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989594,0)
endfunction
function IU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989815,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989816,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989825,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989814,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989830,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651844,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989833,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989832,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989835,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989836,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651848,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651846,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989828,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989826,0)
endfunction
function Iaw takes nothing returns boolean
local integer Qaw
local integer Waw
local integer Eaw
local integer Zaw
local integer Uaw
set Qb=0
set Wb[Qb]="City, line 1"
set Qb=Qb+1
set hS=120.0
set FS[0]=0.0020
set FS[1]=0.0025
set Wb[Qb]="when calling asList in City, line 36"
set Qb=Qb+1
set Qaw=y9("when calling new_LinkedList in LinkedList, line 391")
call sew(Qaw,10000,"when calling add in LinkedList, line 393")
call sew(Qaw,20000,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set kS[0]=Qaw
set Wb[Qb]="when calling asList in City, line 37"
set Qb=Qb+1
set Waw=y9("when calling new_LinkedList in LinkedList, line 391")
call sew(Waw,30000,"when calling add in LinkedList, line 393")
call sew(Waw,40000,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set kS[1]=Waw
set Wb[Qb]="when calling asList in City, line 38"
set Qb=Qb+1
set Eaw=y9("when calling new_LinkedList in LinkedList, line 391")
call sew(Eaw,60000,"when calling add in LinkedList, line 393")
call sew(Eaw,90000,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set kS[2]=Eaw
set Wb[Qb]="when calling asList in City, line 39"
set Qb=Qb+1
set Zaw=y9("when calling new_LinkedList in LinkedList, line 391")
call sew(Zaw,120000,"when calling add in LinkedList, line 393")
call sew(Zaw,160000,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set kS[3]=Zaw
set Wb[Qb]="when calling asList in City, line 40"
set Qb=Qb+1
set Uaw=y9("when calling new_LinkedList in LinkedList, line 391")
call sew(Uaw,180000,"when calling add in LinkedList, line 393")
call sew(Uaw,220000,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set kS[4]=Uaw
set jS[0]=1.0
set jS[1]=0.5
set jS[2]=1.6
set jS[3]=2.0
set xS[0]=0.0
set xS[1]=20.0
set xS[2]=-25.0
set xS[3]=-60.0
set vS[0]=0.05
set vS[1]=0.0
set vS[2]=0.15
set vS[3]=0.30
set mS[0]=1.0
set mS[1]=1.1
set mS[2]=0.85
set mS[3]=0.7
set Qb=Qb-1
return true
endfunction
function Itw takes nothing returns nothing
call vtw(GetEnumUnit())
endfunction
function Uv takes nothing returns boolean
if GetResearched()!=1378889798 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889798,true)!=2 then
return false
endif
return true
endfunction
function Iv takes nothing returns boolean
if not Uv() then
return false
endif
return true
endfunction
function HE takes nothing returns boolean
if GetResearched()!=1378889818 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889818,true)!=1 then
return false
endif
return true
endfunction
function JE takes nothing returns boolean
if not HE() then
return false
endif
return true
endfunction
function JK takes nothing returns boolean
set rS=dO[PLAYER_NEUTRAL_PASSIVE]
return true
endfunction
function JU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990324,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990325,0)
endfunction
function JW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651841,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651831,0)
endfunction
function JY takes nothing returns nothing
local player IY=GetOwningPlayer(GetAttacker())
local player PY=GetOwningPlayer(GetAttacker())
local player AY
local player DY
local unit HY
set r[GetPlayerId(IY)+1]=r[GetPlayerId(PY)+1]+1
set AY=GetOwningPlayer(GetTriggerUnit())
set DY=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(AY)+1]=r[GetPlayerId(DY)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set HY=GetTriggerUnit()
call SetUnitState(HY,UNIT_STATE_LIFE,GetUnitState(HY,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set IY=null
set PY=null
set AY=null
set DY=null
set HY=null
endfunction
function BL takes string QL returns boolean
local trigger WL
local playerunitevent EL
local playerunitevent ZL
local integer UL
local integer IL
local player PL
local location AL
local real DL
local integer HL
local integer JL
local trigger KL
local playerunitevent LL
local integer XL
local integer CL
local integer VL
set Wb[Qb]=QL
set Qb=Qb+1
if vo then
set UL=5
set IL=1747988553
set PL=dO[0]
set AL=Location(-3000.0,1700.0)
set DL=0.
call GroupClear(bj_lastCreatedGroup)
loop
set UL=UL-1
exitwhen UL<0
call CreateUnitAtLocSaveLast(PL,IL,AL,DL)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
endif
set EL=EVENT_PLAYER_UNIT_SELECTED
set Wb[Qb]="when calling alloc_Closure in CityManage, line 9"
set Qb=Qb+1
if Gl==0 then
if gl<32768 then
set gl=gl+1
set HL=gl
set hl[HL]=664
else
call m6("Out of memory: Could not create Closure.","when calling error in CityManage, line 9")
set HL=0
endif
else
set Gl=Gl-1
set HL=Yl[Gl]
set hl[HL]=664
endif
set Qb=Qb-1
set ec[HL]=0
set qc[HL]=0
set ac[HL]=0
set Wb[Qb]="when calling add in CityManage, line 9"
set Qb=Qb+1
set Wb[Qb]="when calling toIntId in ClosureEvents, line 111"
set Qb=Qb+1
set JL=oc[GetHandleId(EL)]
if JL==0 then
set JL=lM(EL,"when calling registerEventId in ClosureEvents, line 228")
endif
set Qb=Qb-1
set ec[HL]=JL
if yc[ec[HL]]!=0 then
set ac[yc[ec[HL]]]=HL
set qc[HL]=yc[ec[HL]]
endif
set yc[ec[HL]]=HL
set Qb=Qb-1
set WL=CreateTrigger()
call TriggerAddCondition(WL,Condition(uf))
call TriggerAddAction(WL,rf)
set KL=WL
set LL=EVENT_PLAYER_UNIT_SPELL_CAST
set XL=0
loop
call TriggerRegisterPlayerUnitEvent(KL,Player(XL),LL,null)
set XL=XL+1
exitwhen XL==bj_MAX_PLAYER_SLOTS
endloop
set ZL=EVENT_PLAYER_UNIT_ATTACKED
set Wb[Qb]="when calling alloc_Closure in CityManage, line 33"
set Qb=Qb+1
if Gl==0 then
if gl<32768 then
set gl=gl+1
set CL=gl
set hl[CL]=665
else
call m6("Out of memory: Could not create Closure.","when calling error in CityManage, line 33")
set CL=0
endif
else
set Gl=Gl-1
set CL=Yl[Gl]
set hl[CL]=665
endif
set Qb=Qb-1
set ec[CL]=0
set qc[CL]=0
set ac[CL]=0
set Wb[Qb]="when calling add in CityManage, line 33"
set Qb=Qb+1
set Wb[Qb]="when calling toIntId in ClosureEvents, line 111"
set Qb=Qb+1
set VL=oc[GetHandleId(ZL)]
if VL==0 then
set VL=lM(ZL,"when calling registerEventId in ClosureEvents, line 228")
endif
set Qb=Qb-1
set ec[CL]=VL
if yc[ec[CL]]!=0 then
set ac[yc[ec[CL]]]=CL
set qc[CL]=yc[ec[CL]]
endif
set yc[ec[CL]]=CL
set Qb=Qb-1-1
set WL=null
set EL=null
set ZL=null
set PL=null
set AL=null
set KL=null
set LL=null
return true
endfunction
function Jaw takes nothing returns boolean
set Qb=0
return BL("CityManage, line 1")
endfunction
function Jcw takes nothing returns boolean
set wl=InitHashtable()
return true
endfunction
function Jj takes nothing returns nothing
local player mj=GetOwningPlayer(GetSpellTargetUnit())
local playerstate Qj=PLAYER_STATE_RESOURCE_GOLD
local playerstate Wj
local playerstate Ej
local player Zj
local force Uj
local location Ij
local real Pj
local real Aj
local player Dj
local force Hj
if Qj==PLAYER_STATE_RESOURCE_GOLD then
set Wj=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(mj,Wj,GetPlayerState(mj,Wj)+500)
elseif Qj==PLAYER_STATE_RESOURCE_LUMBER then
set Ej=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(mj,Ej,GetPlayerState(mj,Ej)+500)
endif
call SetPlayerState(mj,Qj,GetPlayerState(mj,Qj)+500)
call RemoveUnit(GetSpellAbilityUnit())
set Zj=GetOwningPlayer(GetSpellTargetUnit())
set Uj=CreateForce()
call ForceAddPlayer(Uj,Zj)
if IsPlayerInForce(GetLocalPlayer(),Uj) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_1234")
endif
set y=GetUnitLoc(GetSpellTargetUnit())
set Dj=GetOwningPlayer(GetSpellTargetUnit())
set Hj=CreateForce()
call ForceAddPlayer(Hj,Dj)
set Ij=y
set Pj=GetLocationX(Ij)
set Aj=GetLocationY(Ij)
if IsPlayerInForce(GetLocalPlayer(),Hj) then
call PingMinimap(Pj,Aj,2.00)
endif
call RemoveLocation(y)
set mj=null
set Qj=null
set Wj=null
set Ej=null
set Zj=null
set Uj=null
set Ij=null
set Dj=null
set Hj=null
endfunction
function Jlw takes nothing returns boolean
call Location(0.,0.)
return true
endfunction
function Hm takes nothing returns boolean
if GetResearched()!=1378889801 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889801,true)!=2 then
return false
endif
return true
endfunction
function Jm takes nothing returns boolean
if not Hm() then
return false
endif
return true
endfunction
function K7 takes nothing returns boolean
return true
endfunction
function KE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989825,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989817,0)
endfunction
function KF takes nothing returns boolean
if GetUnitTypeId(GetDyingUnit())!=1747988792 then
return false
endif
return true
endfunction
function JJ takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990327 then
return false
endif
return true
endfunction
function KJ takes nothing returns boolean
if not JJ() then
return false
endif
return true
endfunction
function KK takes nothing returns boolean
return true
endfunction
function JQ takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function KQ takes nothing returns boolean
if not JQ() then
return false
endif
return true
endfunction
function J7 takes string D7 returns integer
local integer H7
set Wb[Qb]=D7
set Qb=Qb+1
set Wb[Qb]="when calling HashSet in HashSet, line 4"
set Qb=Qb+1
if ub==0 then
if rb<32768 then
set rb=rb+1
set H7=rb
set sb[H7]=691
else
call m6("Out of memory: Could not create HashSet.","when calling error in HashSet, line 5")
set H7=0
endif
else
set ub=ub-1
set H7=wb[ub]
set sb[H7]=691
endif
set Qb=Qb-1
set co[H7]=0
set Qb=Qb-1
return H7
endfunction
function qaw takes integer Dqw,integer Hqw,integer Jqw,integer Kqw,integer Lqw,integer Xqw,integer Cqw,integer Vqw,integer Bqw,integer Nqw,integer Mqw,integer waw,integer uaw,integer raw,integer saw,integer taw,integer iaw,integer Saw,integer caw,integer oaw,integer Oaw,integer law,integer baw,integer yaw,string paw returns integer
local integer eaw
set Wb[Qb]=paw
set Qb=Qb+1
set eaw=y9("when calling new_LinkedList in LinkedList, line 391")
call sew(eaw,Dqw,"when calling add in LinkedList, line 393")
call sew(eaw,Hqw,"when calling add in LinkedList, line 393")
call sew(eaw,Jqw,"when calling add in LinkedList, line 393")
call sew(eaw,Kqw,"when calling add in LinkedList, line 393")
call sew(eaw,Lqw,"when calling add in LinkedList, line 393")
call sew(eaw,Xqw,"when calling add in LinkedList, line 393")
call sew(eaw,Cqw,"when calling add in LinkedList, line 393")
call sew(eaw,Vqw,"when calling add in LinkedList, line 393")
call sew(eaw,Bqw,"when calling add in LinkedList, line 393")
call sew(eaw,Nqw,"when calling add in LinkedList, line 393")
call sew(eaw,Mqw,"when calling add in LinkedList, line 393")
call sew(eaw,waw,"when calling add in LinkedList, line 393")
call sew(eaw,uaw,"when calling add in LinkedList, line 393")
call sew(eaw,raw,"when calling add in LinkedList, line 393")
call sew(eaw,saw,"when calling add in LinkedList, line 393")
call sew(eaw,taw,"when calling add in LinkedList, line 393")
call sew(eaw,iaw,"when calling add in LinkedList, line 393")
call sew(eaw,Saw,"when calling add in LinkedList, line 393")
call sew(eaw,caw,"when calling add in LinkedList, line 393")
call sew(eaw,oaw,"when calling add in LinkedList, line 393")
call sew(eaw,Oaw,"when calling add in LinkedList, line 393")
call sew(eaw,law,"when calling add in LinkedList, line 393")
call sew(eaw,baw,"when calling add in LinkedList, line 393")
call sew(eaw,yaw,"when calling add in LinkedList, line 393")
set Qb=Qb-1
return eaw
endfunction
function Clw takes string Klw returns boolean
local integer Llw
local integer Xlw
set Wb[Qb]=Klw
set Qb=Qb+1
set Llw=0
set Xlw=23
loop
exitwhen Llw>Xlw
set Rl[Llw]=J7("when calling new_HashSet in VoteKick, line 10")
set Llw=Llw+1
endloop
set Tl=qaw(Jow("red","when calling stringToIndex in VoteKick, line 13"),Jow("blue","when calling stringToIndex in VoteKick, line 14"),Jow("teal","when calling stringToIndex in VoteKick, line 15"),Jow("purple","when calling stringToIndex in VoteKick, line 16"),Jow("yellow","when calling stringToIndex in VoteKick, line 17"),Jow("orange","when calling stringToIndex in VoteKick, line 18"),Jow("green","when calling stringToIndex in VoteKick, line 19"),Jow("pink","when calling stringToIndex in VoteKick, line 20"),Jow("grey","when calling stringToIndex in VoteKick, line 21"),Jow("light blue","when calling stringToIndex in VoteKick, line 22"),Jow("dark green","when calling stringToIndex in VoteKick, line 23"),Jow("brown","when calling stringToIndex in VoteKick, line 24"),Jow("maroon","when calling stringToIndex in VoteKick, line 25"),Jow("navy","when calling stringToIndex in VoteKick, line 26"),Jow("turquoise","when calling stringToIndex in VoteKick, line 27"),Jow("violet","when calling stringToIndex in VoteKick, line 28"),Jow("wheat","when calling stringToIndex in VoteKick, line 29"),Jow("peach","when calling stringToIndex in VoteKick, line 30"),Jow("mint","when calling stringToIndex in VoteKick, line 31"),Jow("lavender","when calling stringToIndex in VoteKick, line 32"),Jow("coal","when calling stringToIndex in VoteKick, line 33"),Jow("snow","when calling stringToIndex in VoteKick, line 34"),Jow("emerald","when calling stringToIndex in VoteKick, line 35"),Jow("peanut","when calling stringToIndex in VoteKick, line 36"),"when calling asList in VoteKick, line 12")
set Qb=Qb-1
return true
endfunction
function Kaw takes nothing returns boolean
set Qb=0
return Clw("VoteKick, line 1")
endfunction
function Kk takes nothing returns boolean
if GetUnitTypeId(GetDyingUnit())!=1747988793 then
return false
endif
return true
endfunction
function Km takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989082,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989072,0)
endfunction
function Dcw takes string Icw,string Pcw returns boolean
local integer Acw=StringLength(Icw)
if StringLength(Pcw)>Acw then
return false
endif
return SubString(Icw,0,StringLength(Pcw))==Pcw
endfunction
function L1 takes nothing returns boolean
return Dcw(GetEventPlayerChatString(),"-")
endfunction
function L7 takes nothing returns boolean
return true
endfunction
function LA takes nothing returns nothing
local integer IA=1
local integer PA=1751277938
local player AA=GetOwningPlayer(GetConstructedStructure())
local rect KA=bj_mapInitialPlayableArea
local location JA=Location(GetRectCenterX(KA),GetRectCenterY(KA))
local location DA=Location(GetLocationX(JA)+100000000.00,GetLocationY(JA)+1000000000.00)
local real HA=bj_UNIT_FACING
call GroupClear(bj_lastCreatedGroup)
loop
set IA=IA-1
exitwhen IA<0
call CreateUnitAtLocSaveLast(AA,PA,DA,HA)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
call ShowUnit(bj_lastCreatedUnit,false)
set p[GetPlayerId(GetOwningPlayer(GetConstructedStructure()))+1]=true
set AA=null
set DA=null
set JA=null
set KA=null
endfunction
function LJ takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function KP takes nothing returns boolean
if GetResearched()!=1378890052 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890052,true)!=2 then
return false
endif
return true
endfunction
function LP takes nothing returns boolean
if not KP() then
return false
endif
return true
endfunction
function LQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989812,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989811,0)
endfunction
function V1 takes string X1 returns boolean
local integer C1
set Wb[Qb]=X1
set Qb=Qb+1
set Wb[Qb]="when calling alloc_Closure in Credits, line 5"
set Qb=Qb+1
if Jl==0 then
if Kl<32768 then
set Kl=Kl+1
set C1=Kl
set Ll[C1]=633
else
call m6("Out of memory: Could not create Closure.","when calling error in Credits, line 5")
set C1=0
endif
else
set Jl=Jl-1
set C1=Hl[Jl]
set Ll[C1]=633
endif
set Qb=Qb-1
set Wb[Qb]="when calling doPeriodically in Credits, line 5"
set Qb=Qb+1
set Wb[Qb]="when calling start in ClosureTimers, line 36"
set Qb=Qb+1
if Ll[C1]==0 then
if C1==0 then
call m6("Nullpointer exception when calling CallbackPeriodic.start","when calling error in ClosureTimers, line 88")
else
call m6("Called CallbackPeriodic.start on invalid object.","when calling error in ClosureTimers, line 88")
endif
endif
call h3(C1,600,"when calling start in ClosureTimers, line 88")
set Qb=Qb-1-1-1
return true
endfunction
function Law takes nothing returns boolean
set Qb=0
return V1("Credits, line 1")
endfunction
function Kv takes nothing returns boolean
if GetResearched()!=1378889802 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889802,true)!=1 then
return false
endif
return true
endfunction
function Lv takes nothing returns boolean
if not Kv() then
return false
endif
return true
endfunction
function ME takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989814,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989825,0)
endfunction
function NJ takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990085 then
return false
endif
return true
endfunction
function MJ takes nothing returns boolean
if not NJ() then
return false
endif
return true
endfunction
function MM takes nothing returns boolean
set Tc=CreateGroup()
set gc=Filter(bf)
return true
endfunction
function NQ takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function MQ takes nothing returns boolean
if not NQ() then
return false
endif
return true
endfunction
function jnw takes integer gnw,integer hnw,integer Fnw,string knw returns nothing
if hnw<0 or hnw>=24 then
call m6("Index out of Bounds",knw)
elseif hnw<=11 then
if hnw<=5 then
if hnw<=2 then
if hnw<=1 then
if hnw<=0 then
set Ib[gnw]=Fnw
else
set Pb[gnw]=Fnw
endif
else
set Ab[gnw]=Fnw
endif
elseif hnw<=4 then
if hnw<=3 then
set Db[gnw]=Fnw
else
set Hb[gnw]=Fnw
endif
else
set Jb[gnw]=Fnw
endif
elseif hnw<=8 then
if hnw<=7 then
if hnw<=6 then
set Kb[gnw]=Fnw
else
set Lb[gnw]=Fnw
endif
else
set Xb[gnw]=Fnw
endif
elseif hnw<=10 then
if hnw<=9 then
set Cb[gnw]=Fnw
else
set Vb[gnw]=Fnw
endif
else
set Bb[gnw]=Fnw
endif
elseif hnw<=17 then
if hnw<=14 then
if hnw<=13 then
if hnw<=12 then
set Nb[gnw]=Fnw
else
set Mb[gnw]=Fnw
endif
else
set wy[gnw]=Fnw
endif
elseif hnw<=16 then
if hnw<=15 then
set uy[gnw]=Fnw
else
set ry[gnw]=Fnw
endif
else
set sy[gnw]=Fnw
endif
elseif hnw<=20 then
if hnw<=19 then
if hnw<=18 then
set ty[gnw]=Fnw
else
set iy[gnw]=Fnw
endif
else
set Sy[gnw]=Fnw
endif
elseif hnw<=22 then
if hnw<=21 then
set cy[gnw]=Fnw
else
set oy[gnw]=Fnw
endif
else
set Oy[gnw]=Fnw
endif
endfunction
function Aiw takes player viw,string miw returns integer
local integer Qiw
local integer Wiw
local integer Eiw
local player Ziw
local integer Uiw
local integer Iiw
local boolean Piw
set Wb[Qb]=miw
set Qb=Qb+1
set Wb[Qb]="when calling PlayerStats in PlayerStats, line 129"
set Qb=Qb+1
if hb==0 then
if Fb<32768 then
set Fb=Fb+1
set Wiw=Fb
set kb[Wiw]=712
else
call m6("Out of memory: Could not create PlayerStats.","when calling error in PlayerStats, line 6")
set Wiw=0
endif
else
set hb=hb-1
set Wiw=gb[hb]
set kb[Wiw]=712
endif
set Qb=Qb-1
set Qiw=Wiw
set Eiw=Wiw
set Ziw=viw
set Wb[Qb]="when calling construct_PlayerStats in PlayerStats, line 129"
set Qb=Qb+1
set qO[Wiw]=false
set nO[Wiw]=0
set pO[Wiw]=-1
set aO[Wiw]=-1
set eO[Wiw]=viw
if GetPlayerSlotState(viw)==PLAYER_SLOT_STATE_PLAYING then
set Piw=GetPlayerController(viw)==MAP_CONTROL_USER
else
set Piw=false
endif
set qO[Wiw]=Piw
set Uiw=0
set Iiw=23
loop
exitwhen Uiw>Iiw
if dO[Uiw]==Ziw then
call jnw(Eiw,Uiw,-1,"when writing array PlayerStats_alliance_states in PlayerStats, line 137")
else
call jnw(Eiw,Uiw,bj_ALLIANCE_UNALLIED,"when writing array PlayerStats_alliance_states in PlayerStats, line 139")
endif
set Uiw=Uiw+1
endloop
set Qb=Qb-1-1
set Ziw=null
return Qiw
endfunction
function L9 takes string x9 returns nothing
local integer v9
local integer m9
local real Q9
local player W9
local integer E9
local integer Z9
local integer U9
local boolean I9
local location P9
local location A9
local integer D9
local real H9
local real J9
local real K9
set Wb[Qb]=x9
set Qb=Qb+1
set v9=24
set m9=6
set Q9=100.0
loop
exitwhen v9<=0
set E9=1
set Z9=m9
loop
exitwhen E9>Z9
set H9=E9*6.28318/m9
set J9=311.2+Q9*Cos(H9)
set K9=5166.7+Q9*Sin(H9)
set W9=dO[24-v9+E9-1]
set U9=yO[GetPlayerId(W9)]
set x9="when calling isInGame in MainInit, line 55"
set Wb[Qb]="when calling isInGame in MainInit, line 55"
set Qb=Qb+1
if kb[U9]==0 then
if U9==0 then
call m6("Nullpointer exception when calling PlayerStats.isInGame","when calling error in PlayerStats, line 14")
else
call m6("Called PlayerStats.isInGame on invalid object.","when calling error in PlayerStats, line 14")
endif
endif
set I9=qO[U9]
set Qb=Qb-1
if I9 then
set P9=Location(J9,K9)
set A9=Location(311.2,5166.7)
call CreateNUnitsAtLoc(1,1747988554,W9,P9,bj_RADTODEG*Atan2(GetLocationY(A9)-GetLocationY(P9),GetLocationX(A9)-GetLocationX(P9)))
endif
set E9=E9+1
endloop
set Q9=Q9+50.0
set v9=v9-m9
set m9=m9+2
if v9<2147483647 then
set D9=v9
else
set D9=2147483647
endif
if m9<D9 then
set D9=m9
endif
set m9=D9
endloop
set Qb=Qb-1
set W9=null
set P9=null
set A9=null
endfunction
function Nww takes string Bww returns nothing
if (not xo)and(not vo) then
return
endif
call DisplayTimedTextToPlayer(dO[0],0.,0.,60.,Bww)
endfunction
function a0w takes player y0w returns nothing
local fogstate p0w
local location e0w
local rect q0w
call SetPlayerState(y0w,PLAYER_STATE_RESOURCE_GOLD,99999999)
call SetPlayerState(y0w,PLAYER_STATE_RESOURCE_LUMBER,99999999)
set p0w=FOG_OF_WAR_VISIBLE
set q0w=bj_mapInitialPlayableArea
set e0w=Location(GetRectCenterX(q0w),GetRectCenterY(q0w))
set bj_lastCreatedFogModifier=CreateFogModifierRadiusLoc(y0w,p0w,e0w,999999.00,true,false)
call FogModifierStart(bj_lastCreatedFogModifier)
set p0w=null
set e0w=null
set q0w=null
endfunction
function Hpw takes integer Epw,integer Zpw,string Upw returns integer
local integer Ipw
local integer Ppw
local integer Apw
local integer Dpw
set Wb[Qb]=Upw
set Qb=Qb+1
if Tb[Epw]==0 then
if Epw==0 then
call m6("Nullpointer exception when calling LinkedList.get","when calling error in LinkedList, line 50")
else
call m6("Called LinkedList.get on invalid object.","when calling error in LinkedList, line 50")
endif
endif
set Wb[Qb]="when calling get in LinkedList, line 50"
set Qb=Qb+1
set Wb[Qb]="when calling getEntry in LinkedList, line 51"
set Qb=Qb+1
if Tb[Epw]==0 then
if Epw==0 then
call m6("Nullpointer exception when calling LinkedList.getEntry","when calling error in LinkedList, line 366")
else
call m6("Called LinkedList.getEntry on invalid object.","when calling error in LinkedList, line 366")
endif
endif
set Ppw=Yo[Epw]
set Apw=0
set Dpw=Zpw
loop
exitwhen Apw>Dpw
set Ppw=no[Ppw]
set Apw=Apw+1
endloop
set Qb=Qb-1
set Ipw=qo[Ppw]
set Qb=Qb-1-1
return Ipw
endfunction
function qww takes real eww returns real
if eww>0. then
return 1.
elseif eww<0. then
return -1.
else
return 0.
endif
endfunction
function Tww takes real aww,real nww,real dww,real fww,real Rww returns real
set dww=GetRandomReal(dww,fww)
return (aww+nww)/2.+qww(dww)*Pow(2.718281828,-(Pow(dww,2.)/2.*Rww))/SquareRoot(6.283185482*Rww)*((nww-aww)/2.)
endfunction
function fN takes integer tN,unit iN,string SN,integer cN,integer oN,string ON returns nothing
local real lN
local real bN
local unit yN
local player pN
local real eN
local integer qN
local integer aN
local real nN
local real dN
set Wb[Qb]=ON
set Qb=Qb+1
set MS[tN]=0
set wc[tN]=0.
set uc[tN]=y9("when calling new_LinkedList in City, line 103")
set NS[tN]=1.0
set IS[tN]=iN
set yN=IS[tN]
set nN=GetUnitX(yN)
set dN=GetUnitY(yN)
set JS[tN]=nN
set KS[tN]=dN
set PS[tN]=SN
set DS[tN]=cN
set pN=GetOwningPlayer(IS[tN])
set HS[tN]=GetPlayerId(pN)
set PS[tN]=SubString(SN,0,24)
set AS[tN]=gS
set gS=gS+1
set CS[tN]=Tww(FS[0],FS[1],-5.0,5.0,0.15)
set eN=Tww(Hpw(kS[oN],0,"when calling get in City, line 121")*1.,Hpw(kS[oN],1,"when calling get in City, line 121")*1.,-5.0,5.0,0.15)
set LS[tN]=R2I(eN)
set BS[tN]=0.
set lN=2.5+GetRandomReal(2.5,5.0)
set Wb[Qb]="when calling alloc_Closure in City, line 126"
set Qb=Qb+1
if Jl==0 then
if Kl<32768 then
set Kl=Kl+1
set qN=Kl
set Ll[qN]=631
else
call m6("Out of memory: Could not create Closure.","when calling error in City, line 126")
set qN=0
endif
else
set Jl=Jl-1
set qN=Hl[Jl]
set Ll[qN]=631
endif
set Qb=Qb-1
set rc[qN]=tN
set Wb[Qb]="when calling doPeriodically in City, line 126"
set Qb=Qb+1
set Wb[Qb]="when calling start in ClosureTimers, line 36"
set Qb=Qb+1
if Ll[qN]==0 then
if qN==0 then
call m6("Nullpointer exception when calling CallbackPeriodic.start","when calling error in ClosureTimers, line 88")
else
call m6("Called CallbackPeriodic.start on invalid object.","when calling error in ClosureTimers, line 88")
endif
endif
call h3(qN,lN,"when calling start in ClosureTimers, line 88")
set Qb=Qb-1-1
set bN=60+GetRandomReal(60,120.0)
set Wb[Qb]="when calling alloc_Closure in City, line 142"
set Qb=Qb+1
if Jl==0 then
if Kl<32768 then
set Kl=Kl+1
set aN=Kl
set Ll[aN]=632
else
call m6("Out of memory: Could not create Closure.","when calling error in City, line 142")
set aN=0
endif
else
set Jl=Jl-1
set aN=Hl[Jl]
set Ll[aN]=632
endif
set Qb=Qb-1
set sc[aN]=tN
set Wb[Qb]="when calling doPeriodically in City, line 142"
set Qb=Qb+1
set Wb[Qb]="when calling start in ClosureTimers, line 36"
set Qb=Qb+1
if Ll[aN]==0 then
if aN==0 then
call m6("Nullpointer exception when calling CallbackPeriodic.start","when calling error in ClosureTimers, line 88")
else
call m6("Called CallbackPeriodic.start on invalid object.","when calling error in ClosureTimers, line 88")
endif
endif
call h3(aN,bN,"when calling start in ClosureTimers, line 88")
set Qb=Qb-1-1-1
set yN=null
set pN=null
endfunction
function sN takes unit BB,string NB,integer MB,integer wN,string uN returns integer
local integer rN
set Wb[Qb]=uN
set Qb=Qb+1
set Wb[Qb]="when calling City in City, line 100"
set Qb=Qb+1
if vl==0 then
if ml<32768 then
set ml=ml+1
set rN=ml
set Ql[rN]=653
else
call m6("Out of memory: Could not create City.","when calling error in City, line 70")
set rN=0
endif
else
set vl=vl-1
set rN=xl[vl]
set Ql[rN]=653
endif
set Qb=Qb-1
call fN(rN,BB,NB,MB,wN,"when calling construct_City in City, line 100")
set Qb=Qb-1
return rN
endfunction
function vcw takes rect Gcw,string gcw,integer hcw,integer Fcw,string kcw returns nothing
local group jcw
local unit xcw
set Wb[Qb]=kcw
set Qb=Qb+1
set jcw=CreateGroup()
call GroupEnumUnitsInRect(jcw,Gcw,null)
call DestroyBoolExpr(null)
set xcw=FirstOfGroup(jcw)
call GroupRemoveUnit(jcw,xcw)
set QS[gS]=sN(xcw,gcw,hcw,Fcw,"when calling new_City in SettingCities, line 7")
set Qb=Qb-1
set jcw=null
set xcw=null
endfunction
function j9 takes string a9 returns boolean
local integer n9
local integer d9
local trigger f9
local integer R9
local integer T9
local integer Y9
local player G9
local integer g9
local player h9
local boolean F9
local boolean k9
set Wb[Qb]=a9
set Qb=Qb+1
set go[0]="You're playing |cffffff65Crusade over Europe|r.\nA grand strategy medieval game inspired by many games and genres.\nCreate alliances and dissolve them just as easily, declare war on your neighbours and |cfff5da16Conquer Europe|r.\n|cffff0000To skip the tutorial, press ESC|r"
set go[1]="Use your |cffff8040Settler|r to choose the location of your Kingdom, use the ability |cffffff80Create Capitol|r on any Town Hall to build your Capitol.\nChoose your postion carefully and be mindful of the other players positions."
set go[2]="|cfff5da16Mechanics|r\n\n|cff80ff00Supply & Nutrition:|r All units and building will continuously lose Hit Points if not supplied by |cff00f7ffCities or Supply Horses|r.\n|cffff0000Public Order|r represents satisfaction level of population of each city and can be checked in top-right menu.\nLow Public Order will cause revolts."
set go[3]="|cfff5da16Combat & Diplomacy|r\n\nBuild your army but keep in mind that every army will have its weaknesses. Use general's Mass Control ability to quickly manipulate your army.\nUse |cffffff80Diplomacy|r (F1) menu to create Alliances and Declare War."
set go[4]="|cfff5da16Economy|r\n\n|cffffff80Florins|r (Gold) are given each Turn (2 minutes), you can increase the amount generated by capturing |cffffff80Cities|r or precious |cffffff80Ores|r and upgrading them into |cffffff80Mines|r.\nLumber is harvested from Trees.\n|cffff0000You can check public order of currently selected city and your income in top-right menu|r"
set R9=0
set T9=0
set Y9=23
loop
exitwhen T9>Y9
set G9=dO[T9]
if GetPlayerSlotState(G9)==PLAYER_SLOT_STATE_PLAYING then
set F9=GetPlayerController(G9)==MAP_CONTROL_USER
else
set F9=false
endif
if F9 then
set R9=R9+1
endif
set T9=T9+1
endloop
set Fo=R9
if xo then
call Nww("Debug info is enabled. Only for Red.")
endif
if vo then
call DisplayTimedTextToPlayer(fO,0.,0.,45.,"Debug mode is on.")
endif
set Wb[Qb]="when calling setupCities in MainInit, line 98"
set Qb=Qb+1
call vcw(h,"Adrianopolis",3,1,"when calling newCity in SettingCities, line 26")
call vcw(Ss,"Arta",3,0,"when calling newCity in SettingCities, line 27")
call vcw(Br,"Athens",3,1,"when calling newCity in SettingCities, line 28")
call vcw(Vr,"Ragusa",3,0,"when calling newCity in SettingCities, line 29")
call vcw(ls,"Canakkale",3,0,"when calling newCity in SettingCities, line 30")
call vcw(cs,"Candia",3,0,"when calling newCity in SettingCities, line 31")
call vcw(k,"Constantinople",3,4,"when calling newCity in SettingCities, line 32")
call vcw(is,"Corinth",3,0,"when calling newCity in SettingCities, line 33")
call vcw(g,"Durazzo",3,0,"when calling newCity in SettingCities, line 34")
call vcw(ws,"Nikomedeia",3,0,"when calling newCity in SettingCities, line 35")
call vcw(lu,"Kutaisi",3,0,"when calling newCity in SettingCities, line 36")
call vcw(Dw,"Nicae",3,2,"when calling newCity in SettingCities, line 37")
call vcw(Zw,"Nicosia",3,0,"when calling newCity in SettingCities, line 38")
call vcw(Nr,"Rhodes",3,0,"when calling newCity in SettingCities, line 39")
call vcw(x,"Scopia",3,0,"when calling newCity in SettingCities, line 40")
call vcw(Pw,"Smyrna",3,0,"when calling newCity in SettingCities, line 41")
call vcw(bu,"Tbilisi",3,0,"when calling newCity in SettingCities, line 42")
call vcw(Ew,"Trebizond",3,1,"when calling newCity in SettingCities, line 43")
call vcw(F,"Thessalonika",3,3,"when calling newCity in SettingCities, line 44")
call vcw(Qu,"Astrakhan'",1,2,"when calling newCity in SettingCities, line 48")
call vcw(Gw,"Azaq",1,0,"when calling newCity in SettingCities, line 49")
call vcw(ru,"Baia",1,0,"when calling newCity in SettingCities, line 50")
call vcw(cu,"Bryansk",1,0,"when calling newCity in SettingCities, line 51")
call vcw(sw,"Caffa",1,0,"when calling newCity in SettingCities, line 52")
call vcw(U,"Constanta",1,0,"when calling newCity in SettingCities, line 53")
call vcw(iu,"Dnipro",1,0,"when calling newCity in SettingCities, line 54")
call vcw(nw,"Halych",1,0,"when calling newCity in SettingCities, line 55")
call vcw(gw,"Kiev",1,2,"when calling newCity in SettingCities, line 56")
call vcw(N,"Konigsberg",1,0,"when calling newCity in SettingCities, line 57")
call vcw(uw,"Hrodna",1,0,"when calling newCity in SettingCities, line 58")
call vcw(hw,"Minsk",1,1,"when calling newCity in SettingCities, line 59")
call vcw(Su,"Moscow",1,0,"when calling newCity in SettingCities, line 60")
call vcw(Sw,"Novgorod",1,0,"when calling newCity in SettingCities, line 61")
call vcw(tu,"Olesh'e",1,0,"when calling newCity in SettingCities, line 62")
call vcw(cw,"Polotsk",1,0,"when calling newCity in SettingCities, line 63")
call vcw(tw,"Pskov",1,0,"when calling newCity in SettingCities, line 64")
call vcw(iw,"Reval",1,0,"when calling newCity in SettingCities, line 65")
call vcw(M,"Riga",1,1,"when calling newCity in SettingCities, line 66")
call vcw(bs,"Bulgar",1,0,"when calling newCity in SettingCities, line 67")
call vcw(Wu,"Ryazan'",1,0,"when calling newCity in SettingCities, line 68")
call vcw(Ou,"Sarkel",1,0,"when calling newCity in SettingCities, line 69")
call vcw(Fw,"Smolensk",1,1,"when calling newCity in SettingCities, line 70")
call vcw(L,"Sofia",1,0,"when calling newCity in SettingCities, line 71")
call vcw(I,"Targovitse",1,1,"when calling newCity in SettingCities, line 72")
call vcw(uu,"Tmutarakan'",1,0,"when calling newCity in SettingCities, line 73")
call vcw(Mr,"Turku",1,0,"when calling newCity in SettingCities, line 74")
call vcw(rw,"Vilnius",1,1,"when calling newCity in SettingCities, line 75")
call vcw(su,"Zhytomir",1,0,"when calling newCity in SettingCities, line 76")
call vcw(au,"Acre",2,2,"when calling newCity in SettingCities, line 80")
call vcw(mw,"Adana",2,0,"when calling newCity in SettingCities, line 81")
call vcw(as,"Alamut",2,0,"when calling newCity in SettingCities, line 82")
call vcw(nu,"Al-Aqaba",2,0,"when calling newCity in SettingCities, line 83")
call vcw(Nw,"Alexandria",2,2,"when calling newCity in SettingCities, line 84")
call vcw(Kw,"Algiers",2,0,"when calling newCity in SettingCities, line 85")
call vcw(Aw,"Ankara",2,1,"when calling newCity in SettingCities, line 86")
call vcw(Ww,"Antioch",2,2,"when calling newCity in SettingCities, line 87")
call vcw(us,"Badajoz",2,0,"when calling newCity in SettingCities, line 88")
call vcw(Os,"Baghdad",2,4,"when calling newCity in SettingCities, line 89")
call vcw(ns,"Baku",2,0,"when calling newCity in SettingCities, line 90")
call vcw(Cw,"Benghazi",2,1,"when calling newCity in SettingCities, line 91")
call vcw(es,"Beleb-el-Anab",2,0,"when calling newCity in SettingCities, line 92")
call vcw(wu,"Cairo",2,3,"when calling newCity in SettingCities, line 93")
call vcw(Tr,"Cordoba",2,4,"when calling newCity in SettingCities, line 94")
call vcw(yu,"Damascus",2,2,"when calling newCity in SettingCities, line 95")
call vcw(Mw,"Damietta",2,1,"when calling newCity in SettingCities, line 96")
call vcw(Ru,"Diyarbakir",2,0,"when calling newCity in SettingCities, line 97")
call vcw(Iw,"Edessa",2,1,"when calling newCity in SettingCities, line 98")
call vcw(Tu,"Erez",2,1,"when calling newCity in SettingCities, line 99")
call vcw(Hw,"Fes",2,3,"when calling newCity in SettingCities, line 100")
call vcw(eu,"Gaza",2,0,"when calling newCity in SettingCities, line 101")
call vcw(Rr,"Granada",2,2,"when calling newCity in SettingCities, line 102")
call vcw(xw,"Isparta",2,0,"when calling newCity in SettingCities, line 103")
call vcw(Uw,"Jerusalem",2,3,"when calling newCity in SettingCities, line 104")
call vcw(vw,"Kayseri",2,1,"when calling newCity in SettingCities, line 105")
call vcw(os,"Kerak",2,0,"when calling newCity in SettingCities, line 106")
call vcw(ds,"Kermanshah",2,0,"when calling newCity in SettingCities, line 107")
call vcw(Qw,"Konya",2,0,"when calling newCity in SettingCities, line 108")
call vcw(Sr,"Lisbon",2,0,"when calling newCity in SettingCities, line 109")
call vcw(Ur,"Luxor",2,0,"when calling newCity in SettingCities, line 110")
call vcw(tr,"Madrid",2,0,"when calling newCity in SettingCities, line 111")
call vcw(Lw,"Mahdya",2,0,"when calling newCity in SettingCities, line 112")
call vcw(Zr,"Marrakesh",2,3,"when calling newCity in SettingCities, line 113")
call vcw(Bw,"Medina",2,2,"when calling newCity in SettingCities, line 114")
call vcw(ps,"Melilla",2,0,"when calling newCity in SettingCities, line 115")
call vcw(qu,"Mosul",2,1,"when calling newCity in SettingCities, line 116")
call vcw(Yr,"Murcia",2,1,"when calling newCity in SettingCities, line 117")
call vcw(Jw,"Oran",2,0,"when calling newCity in SettingCities, line 118")
call vcw(mu,"Palma",2,1,"when calling newCity in SettingCities, line 119")
call vcw(du,"Quarisiya",2,1,"when calling newCity in SettingCities, line 120")
call vcw(Er,"Silves",2,0,"when calling newCity in SettingCities, line 121")
call vcw(jw,"Sinop",2,0,"when calling newCity in SettingCities, line 122")
call vcw(fu,"Tamiya",2,0,"when calling newCity in SettingCities, line 123")
call vcw(pu,"Tartus",2,0,"when calling newCity in SettingCities, line 124")
call vcw(qs,"Tabriz",2,0,"when calling newCity in SettingCities, line 125")
call vcw(Xw,"Tripoli",2,1,"when calling newCity in SettingCities, line 126")
call vcw(Yw,"Tunis",2,1,"when calling newCity in SettingCities, line 127")
call vcw(Gr,"Valencia",2,0,"when calling newCity in SettingCities, line 128")
call vcw(ou,"Yerevan",2,0,"when calling newCity in SettingCities, line 129")
call vcw(J,"Aarhus",0,1,"when calling newCity in SettingCities, line 133")
call vcw(Zu,"Aberdeen",0,1,"when calling newCity in SettingCities, line 134")
call vcw(Ar,"Ajaccio",0,0,"when calling newCity in SettingCities, line 135")
call vcw(dr,"Ancona",0,1,"when calling newCity in SettingCities, line 136")
call vcw(Pr,"Angers",0,0,"when calling newCity in SettingCities, line 137")
call vcw(yr,"Antwerp",0,0,"when calling newCity in SettingCities, line 138")
call vcw(ur,"Barcelona",0,1,"when calling newCity in SettingCities, line 139")
call vcw(Kr,"Bari",0,0,"when calling newCity in SettingCities, line 140")
call vcw(A,"Belgrade",0,1,"when calling newCity in SettingCities, line 141")
call vcw(mr,"Bergen",0,1,"when calling newCity in SettingCities, line 142")
call vcw(hr,"Bern",0,0,"when calling newCity in SettingCities, line 143")
call vcw(ar,"Bologna",0,1,"when calling newCity in SettingCities, line 144")
call vcw(Mu,"Bordeaux",0,1,"when calling newCity in SettingCities, line 145")
call vcw(P,"Brasov",0,0,"when calling newCity in SettingCities, line 146")
call vcw(br,"Bruges",0,0,"when calling newCity in SettingCities, line 147")
call vcw(f,"Burgh",0,0,"when calling newCity in SettingCities, line 148")
call vcw(sr,"Burgos",0,1,"when calling newCity in SettingCities, line 149")
call vcw(Lu,"Caen",0,0,"when calling newCity in SettingCities, line 150")
call vcw(Du,"Caenarfon",0,0,"when calling newCity in SettingCities, line 151")
call vcw(Dr,"Cagliari",0,0,"when calling newCity in SettingCities, line 152")
call vcw(R,"Cardiff",0,0,"when calling newCity in SettingCities, line 153")
call vcw(Bu,"Clermont",0,1,"when calling newCity in SettingCities, line 154")
call vcw(ju,"Cologne",0,1,"when calling newCity in SettingCities, line 155")
call vcw(Vu,"Dijon",0,0,"when calling newCity in SettingCities, line 156")
call vcw(Pu,"Dublin",0,0,"when calling newCity in SettingCities, line 157")
call vcw(Eu,"Edinburgh",0,0,"when calling newCity in SettingCities, line 158")
call vcw(vr,"Eikundarsund",0,0,"when calling newCity in SettingCities, line 159")
call vcw(Q,"Esztergom",0,1,"when calling newCity in SettingCities, line 160")
call vcw(Ku,"Exeter",0,0,"when calling newCity in SettingCities, line 161")
call vcw(ww,"Gdansk",0,0,"when calling newCity in SettingCities, line 162")
call vcw(D,"Flensburg",0,0,"when calling newCity in SettingCities, line 163")
call vcw(xu,"Frankfurt",0,1,"when calling newCity in SettingCities, line 164")
call vcw(T,"Galway",0,0,"when calling newCity in SettingCities, line 165")
call vcw(pr,"Genoa",0,2,"when calling newCity in SettingCities, line 166")
call vcw(Tw,"Groningen",0,0,"when calling newCity in SettingCities, line 167")
call vcw(ku,"Innsbruck",0,0,"when calling newCity in SettingCities, line 168")
call vcw(Uu,"Inverness",0,0,"when calling newCity in SettingCities, line 169")
call vcw(Au,"Desmond",0,0,"when calling newCity in SettingCities, line 170")
call vcw(Jr,"Reggio",0,0,"when calling newCity in SettingCities, line 172")
call vcw(ts,"Kalmar",0,0,"when calling newCity in SettingCities, line 173")
call vcw(V,"Kassa",0,0,"when calling newCity in SettingCities, line 174")
call vcw(E,"Krakow",0,2,"when calling newCity in SettingCities, line 175")
call vcw(rr,"Leon",0,1,"when calling newCity in SettingCities, line 176")
call vcw(Hu,"London",0,0,"when calling newCity in SettingCities, line 177")
call vcw(kr,"Lund",0,0,"when calling newCity in SettingCities, line 178")
call vcw(Fr,"Lyon",0,0,"when calling newCity in SettingCities, line 179")
call vcw(K,"Madgeburg",0,0,"when calling newCity in SettingCities, line 180")
call vcw(lr,"Marsellie",0,1,"when calling newCity in SettingCities, line 181")
call vcw(Cr,"Metz",0,0,"when calling newCity in SettingCities, line 182")
call vcw(er,"Milan",0,1,"when calling newCity in SettingCities, line 183")
call vcw(Hr,"Naples",0,1,"when calling newCity in SettingCities, line 184")
call vcw(gr,"Nuremburg",0,0,"when calling newCity in SettingCities, line 185")
call vcw(Wr,"Nykoping",0,0,"when calling newCity in SettingCities, line 186")
call vcw(rs,"Oporto",0,0,"when calling newCity in SettingCities, line 187")
call vcw(xr,"Oslo",0,1,"when calling newCity in SettingCities, line 188")
call vcw(ys,"Buda",0,1,"when calling newCity in SettingCities, line 189")
call vcw(Lr,"Palermo",0,3,"when calling newCity in SettingCities, line 190")
call vcw(cr,"Pamplona",0,0,"when calling newCity in SettingCities, line 191")
call vcw(Cu,"Paris",0,1,"when calling newCity in SettingCities, line 192")
call vcw(nr,"Pisa",0,0,"when calling newCity in SettingCities, line 193")
call vcw(X,"Plock",0,0,"when calling newCity in SettingCities, line 194")
call vcw(C,"Poznan",0,1,"when calling newCity in SettingCities, line 195")
call vcw(m,"Prague",0,0,"when calling newCity in SettingCities, line 196")
call vcw(G,"Zadar",0,0,"when calling newCity in SettingCities, line 197")
call vcw(Ir,"Rennes",0,0,"when calling newCity in SettingCities, line 198")
call vcw(Xu,"Rheims",0,0,"when calling newCity in SettingCities, line 199")
call vcw(fr,"Rome",0,1,"when calling newCity in SettingCities, line 200")
call vcw(H,"Roskilde",0,0,"when calling newCity in SettingCities, line 201")
call vcw(ir,"Salamanca",0,0,"when calling newCity in SettingCities, line 202")
call vcw(Fu,"Salzburg",0,0,"when calling newCity in SettingCities, line 203")
call vcw(jr,"Skara",0,0,"when calling newCity in SettingCities, line 204")
call vcw(W,"Stettin",0,0,"when calling newCity in SettingCities, line 205")
call vcw(ss,"Stockholm",0,1,"when calling newCity in SettingCities, line 206")
call vcw(Xr,"Syracuse",0,0,"when calling newCity in SettingCities, line 207")
call vcw(Nu,"Toulouse",0,0,"when calling newCity in SettingCities, line 208")
call vcw(B,"Varad",0,0,"when calling newCity in SettingCities, line 209")
call vcw(qr,"Venice",0,2,"when calling newCity in SettingCities, line 210")
call vcw(v,"Vienna",0,0,"when calling newCity in SettingCities, line 211")
call vcw(Qr,"Visby",0,0,"when calling newCity in SettingCities, line 212")
call vcw(j,"Warwick",0,0,"when calling newCity in SettingCities, line 213")
call vcw(Ju,"Winchester",0,1,"when calling newCity in SettingCities, line 214")
call vcw(Z,"Wroclaw",0,0,"when calling newCity in SettingCities, line 215")
call vcw(Iu,"York",0,1,"when calling newCity in SettingCities, line 216")
call vcw(Y,"Zagreb",0,0,"when calling newCity in SettingCities, line 217")
call vcw(wr,"Zaragoza",0,0,"when calling newCity in SettingCities, line 218")
call vcw(vu,"Hamburg",0,1,"when calling newCity in SettingCities, line 219")
set Qb=Qb-1
call SetForceAllianceStateBJ(bj_FORCE_ALL_PLAYERS,bj_FORCE_PLAYER[PLAYER_NEUTRAL_PASSIVE],bj_ALLIANCE_NEUTRAL)
call SetForceAllianceStateBJ(bj_FORCE_ALL_PLAYERS,bj_FORCE_ALL_PLAYERS,bj_ALLIANCE_UNALLIED)
call SetForceAllianceStateBJ(Lc,Lc,bj_ALLIANCE_NEUTRAL)
call SetForceAllianceStateBJ(Xc,Xc,bj_ALLIANCE_NEUTRAL)
call SetForceAllianceStateBJ(Cc,Cc,bj_ALLIANCE_NEUTRAL)
call SetForceAllianceStateBJ(Vc,Vc,bj_ALLIANCE_NEUTRAL)
set n9=0
set d9=23
loop
exitwhen n9>d9
call SetPlayerState(dO[n9],PLAYER_STATE_RESOURCE_GOLD,250)
call SetPlayerState(dO[n9],PLAYER_STATE_RESOURCE_LUMBER,200)
if vo then
call a0w(dO[n9])
endif
call SetPlayerTechMaxAllowed(dO[n9],1747988789,1)
set yO[n9]=Aiw(dO[n9],"when calling new_PlayerStats in MainInit, line 121")
set g9=yO[n9]
set h9=dO[n9]
if GetPlayerSlotState(h9)==PLAYER_SLOT_STATE_PLAYING then
set k9=GetPlayerController(h9)==MAP_CONTROL_USER
else
set k9=false
endif
set Wb[Qb]="when calling setInGame in MainInit, line 122"
set Qb=Qb+1
if kb[g9]==0 then
if g9==0 then
call m6("Nullpointer exception when calling PlayerStats.setInGame","when calling error in PlayerStats, line 17")
else
call m6("Called PlayerStats.setInGame on invalid object.","when calling error in PlayerStats, line 17")
endif
endif
set qO[g9]=k9
set Qb=Qb-1
set n9=n9+1
endloop
call L9("when calling setPlayersAtStart in MainInit, line 124")
set f9=CreateTrigger()
call TriggerRegisterTimerEvent(f9,0.01,false)
call TriggerAddAction(f9,Rf)
set Qb=Qb-1
set f9=null
set G9=null
set h9=null
return true
endfunction
function Maw takes nothing returns boolean
set Qb=0
return j9("MainInit, line 1")
endfunction
function Mm takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988818,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988552,0)
endfunction
function NA takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747988553 then
return false
endif
return true
endfunction
function BE takes nothing returns boolean
if GetResearched()!=1378889818 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889818,true)!=2 then
return false
endif
return true
endfunction
function NE takes nothing returns boolean
if not BE() then
return false
endif
return true
endfunction
function NU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990321,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990104,0)
endfunction
function NW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651833,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651841,0)
endfunction
function Y8 takes string q8 returns boolean
local playerunitevent a8
local playerunitevent n8
local integer d8
local integer f8
local integer R8
local integer T8
set Wb[Qb]=q8
set Qb=Qb+1
set a8=EVENT_PLAYER_UNIT_DEATH
set Wb[Qb]="when calling alloc_Closure in LimitMercenaryCamps, line 8"
set Qb=Qb+1
if Gl==0 then
if gl<32768 then
set gl=gl+1
set d8=gl
set hl[d8]=668
else
call m6("Out of memory: Could not create Closure.","when calling error in LimitMercenaryCamps, line 8")
set d8=0
endif
else
set Gl=Gl-1
set d8=Yl[Gl]
set hl[d8]=668
endif
set Qb=Qb-1
set ec[d8]=0
set qc[d8]=0
set ac[d8]=0
set Wb[Qb]="when calling add in LimitMercenaryCamps, line 8"
set Qb=Qb+1
set Wb[Qb]="when calling toIntId in ClosureEvents, line 111"
set Qb=Qb+1
set f8=oc[GetHandleId(a8)]
if f8==0 then
set f8=lM(a8,"when calling registerEventId in ClosureEvents, line 228")
endif
set Qb=Qb-1
set ec[d8]=f8
if yc[ec[d8]]!=0 then
set ac[yc[ec[d8]]]=d8
set qc[d8]=yc[ec[d8]]
endif
set yc[ec[d8]]=d8
set Qb=Qb-1
set n8=EVENT_PLAYER_UNIT_CONSTRUCT_START
set Wb[Qb]="when calling alloc_Closure in LimitMercenaryCamps, line 12"
set Qb=Qb+1
if Gl==0 then
if gl<32768 then
set gl=gl+1
set R8=gl
set hl[R8]=669
else
call m6("Out of memory: Could not create Closure.","when calling error in LimitMercenaryCamps, line 12")
set R8=0
endif
else
set Gl=Gl-1
set R8=Yl[Gl]
set hl[R8]=669
endif
set Qb=Qb-1
set ec[R8]=0
set qc[R8]=0
set ac[R8]=0
set Wb[Qb]="when calling add in LimitMercenaryCamps, line 12"
set Qb=Qb+1
set Wb[Qb]="when calling toIntId in ClosureEvents, line 111"
set Qb=Qb+1
set T8=oc[GetHandleId(n8)]
if T8==0 then
set T8=lM(n8,"when calling registerEventId in ClosureEvents, line 228")
endif
set Qb=Qb-1
set ec[R8]=T8
if yc[ec[R8]]!=0 then
set ac[yc[ec[R8]]]=R8
set qc[R8]=yc[ec[R8]]
endif
set yc[ec[R8]]=R8
set Qb=Qb-1-1
set a8=null
set n8=null
return true
endfunction
function Naw takes nothing returns boolean
set Qb=0
return Y8("LimitMercenaryCamps, line 1")
endfunction
function Bm takes nothing returns boolean
if GetResearched()!=1378889800 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889800,true)!=1 then
return false
endif
return true
endfunction
function Nm takes nothing returns boolean
if not Bm() then
return false
endif
return true
endfunction
function oG takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1966092336 then
return false
endif
if GetSpellAbilityId()!=1093677906 then
return false
endif
if GetOwningPlayer(GetSpellTargetUnit())==Player(PLAYER_NEUTRAL_AGGRESSIVE) then
return false
endif
if IsUnitType(GetSpellTargetUnit(),UNIT_TYPE_STRUCTURE)!=true then
return false
endif
return true
endfunction
function OG takes nothing returns boolean
if not oG() then
return false
endif
return true
endfunction
function OJ takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function oP takes nothing returns boolean
if GetResearched()!=1378890040 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890040,true)!=1 then
return false
endif
return true
endfunction
function OP takes nothing returns boolean
if not oP() then
return false
endif
return true
endfunction
function OT takes nothing returns nothing
local group ST=GetUnitsOfTypeIdAll(1747988554)
local code cT=ly
local boolean oT=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(ST,cT)
if oT then
call DestroyGroup(ST)
endif
set ST=null
endfunction
function Ok takes nothing returns boolean
if GetUnitTypeId(GetDyingUnit())!=1747988801 then
return false
endif
return true
endfunction
function eyw takes integer yyw,string pyw returns nothing
set Wb[Qb]=pyw
set Qb=Qb+1
if Ul[yyw]==0 then
if yyw==0 then
call m6("Nullpointer exception when calling ForGroupCallback.ForGroupCallback","when calling error in ClosureForGroups, line 3")
else
call m6("Called ForGroupCallback.ForGroupCallback on invalid object.","when calling error in ClosureForGroups, line 3")
endif
endif
set Wb[Qb]="when calling destroyForGroupCallback in ClosureForGroups, line 3"
set Qb=Qb+1
set Wb[Qb]="when calling ForGroupCallback in ClosureForGroups, line 3"
set Qb=Qb+1
if Ul[yyw]==0 then
call m6("Double free: object of type ForGroupCallback","when calling error in ClosureForGroups, line 3")
else
set Wl[El]=yyw
set El=El+1
set Ul[yyw]=0
endif
set Qb=Qb-1-1-1
endfunction
function R3 takes real q3,real a3,real n3,integer d3,string f3 returns nothing
set Wb[Qb]=f3
set Qb=Qb+1
set Yc[Gc]=d3
set Gc=Gc+1
call GroupEnumUnitsInRange(Tc,q3,a3,n3,gc)
set Wb[Qb]="when calling popCallback in ClosureForGroups, line 85"
set Qb=Qb+1
call GroupClear(Tc)
set Gc=Gc-1
call eyw(Yc[Gc],"when calling ForGroupCallback in ClosureForGroups, line 21")
set Qb=Qb-1-1
endfunction
function D0w takes integer Q0w,string W0w returns nothing
local integer E0w
local unit Z0w
local player U0w
local real I0w
local real P0w
local real A0w
set Wb[Qb]=W0w
set Qb=Qb+1
if GetSpellAbilityId()==1093678154 then
set E0w=y9("when calling new_LinkedList in MassControl, line 24")
set Z0w=GetSpellAbilityUnit()
set U0w=GetOwningPlayer(Z0w)
set P0w=GetSpellTargetX()
set A0w=GetSpellTargetY()
set I0w=Hpw(Ao,GetLearnedSkillLevel(),"when calling get in MassControl, line 27")/1000.
set Wb[Qb]="when calling alloc_Closure in MassControl, line 27"
set Qb=Qb+1
if El==0 then
if Zl<32768 then
set Zl=Zl+1
set Q0w=Zl
set Ul[Q0w]=685
else
call m6("Out of memory: Could not create Closure.","when calling error in MassControl, line 27")
set Q0w=0
endif
else
set El=El-1
set Q0w=Wl[El]
set Ul[Q0w]=685
endif
set Qb=Qb-1
set Ho[Q0w]=U0w
set Jo[Q0w]=Z0w
set Ko[Q0w]=E0w
call R3(P0w,A0w,I0w,Q0w,"when calling forUnitsInRange in MassControl, line 27")
call ppw(Po,GetHandleId(Z0w),E0w,"when calling put in MassControl, line 30")
endif
set Qb=Qb-1
set Z0w=null
set U0w=null
endfunction
function o1 takes playercolor V3 returns integer
local playercolor w1=V3
local integer u1=0
local integer r1=0
local integer s1=bj_MAX_PLAYER_SLOTS-1
local integer B3
local integer N3
local integer M3
local playercolor t1
local integer i1
local integer S1
local integer c1
loop
exitwhen r1>s1
if gO[r1]==w1 then
set u1=r1
exitwhen true
endif
set r1=r1+1
endloop
if u1<=23 then
set t1=V3
set i1=0
set S1=0
set c1=bj_MAX_PLAYER_SLOTS-1
loop
exitwhen S1>c1
if gO[S1]==t1 then
set i1=S1
exitwhen true
endif
set S1=S1+1
endloop
set B3=jc[i1]
set N3=xc[i1]
set M3=vc[i1]
else
set B3=0
set N3=0
set M3=0
endif
set Eb=B3
set Zb=N3
set Ub=M3
set w1=null
set t1=null
return Eb
endfunction
function C3 takes player A3 returns string
local integer K3=o1(GetPlayerColor(A3))
local integer L3=Zb
local integer X3=Ub
local integer D3=K3/16
local integer H3=L3/16
local integer J3=X3/16
return "|cff"+mc[D3]+mc[K3-D3*16]+mc[H3]+mc[L3-H3*16]+mc[J3]+mc[X3-J3*16]+GetPlayerName(A3)+"|r"
endfunction
function FC takes integer gC,integer hC returns integer
if gC==1 then
if hC==0 then
return 1747988529
elseif hC==1 then
return 1747990326
elseif hC==2 then
return 1747990084
elseif hC==3 then
return 1747989590
else
return 1747988529
endif
elseif gC==2 then
if hC==0 then
return 1747988530
elseif hC==1 then
return 1747990327
elseif hC==2 then
return 1747990087
elseif hC==3 then
return 1747989591
else
return 1747988530
endif
elseif gC==3 then
if hC==0 then
return 1747988531
elseif hC==1 then
return 1747990328
elseif hC==2 then
return 1747990085
elseif hC==3 then
return 1747989592
else
return 1747988531
endif
elseif hC==0 then
return 1747988529
elseif hC==1 then
return 1747990326
elseif hC==2 then
return 1747990084
elseif hC==3 then
return 1747989590
else
return 1747988529
endif
endfunction
function GC takes integer YC returns integer
if YC==1747988529 then
return 1
elseif YC==1747988530 then
return 2
elseif YC==1747988531 then
return 3
elseif YC==1747990326 then
return 1
elseif YC==1747990327 then
return 2
elseif YC==1747990328 then
return 3
elseif YC==1747990084 then
return 1
elseif YC==1747990087 then
return 2
elseif YC==1747990085 then
return 3
elseif YC==1747989590 then
return 1
elseif YC==1747989591 then
return 2
elseif YC==1747989592 then
return 3
else
return 1
endif
endfunction
function dpw takes integer epw,integer qpw,string apw returns integer
local integer npw
set Wb[Qb]=apw
set Qb=Qb+1
if cb[epw]==0 then
if epw==0 then
call m6("Nullpointer exception when calling HashMap.get","when calling error in HashMap, line 19")
else
call m6("Called HashMap.get on invalid object.","when calling error in HashMap, line 19")
endif
endif
set Wb[Qb]="when calling get in HashMap, line 19"
set Qb=Qb+1
set Wb[Qb]="when calling loadInt in HashMap, line 20"
set Qb=Qb+1
if cb[epw]==0 then
if epw==0 then
call m6("Nullpointer exception when calling Table.loadInt","when calling error in Table, line 39")
else
call m6("Called Table.loadInt on invalid object.","when calling error in Table, line 39")
endif
endif
set npw=LoadInteger(wl,epw,qpw)
set Qb=Qb-1-1-1
return npw
endfunction
function t9 takes integer u9,integer r9 returns boolean
local integer s9=no[Yo[u9]]
loop
exitwhen s9==Yo[u9]
if qo[s9]==r9 then
return true
endif
set s9=no[s9]
endloop
return false
endfunction
function gV takes integer fV,integer RV,string TV returns nothing
local integer YV
local boolean GV
set Wb[Qb]=TV
set Qb=Qb+1
set YV=al
set Wb[Qb]="when calling has in City, line 183"
set Qb=Qb+1
if Tb[YV]==0 then
if YV==0 then
call m6("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call m6("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set GV=t9(YV,RV)
set Qb=Qb-1
if not GV then
set Qb=Qb-1
return
endif
set IS[fV]=ReplaceUnitBJ(IS[fV],RV,bj_UNIT_STATE_METHOD_RELATIVE)
set Qb=Qb-1
endfunction
function Bbw takes integer Xbw,integer Cbw,string Vbw returns nothing
set Wb[Qb]=Vbw
set Qb=Qb+1
if Ql[Xbw]==0 then
if Xbw==0 then
call m6("Nullpointer exception when calling City.getCityModifierOnAdd","when calling error in City, line 406")
else
call m6("Called City.getCityModifierOnAdd on invalid object.","when calling error in City, line 406")
endif
endif
set Wb[Qb]="when calling getCityModifierOnAdd in City, line 406"
set Qb=Qb+1
set BS[Xbw]=BS[Xbw]+aS[dpw(eS,Cbw,"when calling get in City, line 407")]
set NS[Xbw]=NS[Xbw]+TS[dpw(eS,Cbw,"when calling get in City, line 408")]
set Qb=Qb-1-1
endfunction
function v3 takes integer F3,real k3,string j3 returns nothing
local timer x3
set Wb[Qb]=j3
set Qb=Qb+1
set x3=jow("when calling getTimer in ClosureTimers, line 68")
call fow(x3,F3,"when calling setData in ClosureTimers, line 69")
call TimerStart(x3,k3,false,pf)
set kc[F3]=x3
set Qb=Qb-1
set x3=null
endfunction
function lV takes integer sV,integer tV,string iV returns boolean
local real SV
local integer cV
local boolean oV
local integer OV
set Wb[Qb]=iV
set Qb=Qb+1
set cV=uc[sV]
set Wb[Qb]="when calling has in City, line 356"
set Qb=Qb+1
if Tb[cV]==0 then
if cV==0 then
call m6("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call m6("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set oV=t9(cV,tV)
set Qb=Qb-1
if oV then
set Qb=Qb-1
return false
endif
call sew(uc[sV],tV,"when calling add in City, line 358")
call Bbw(sV,tV,"when calling getCityModifierOnAdd in City, line 359")
set SV=qS[dpw(eS,tV,"when calling get in City, line 361")]
set Wb[Qb]="when calling alloc_Closure in City, line 361"
set Qb=Qb+1
if Pl==0 then
if Al<32768 then
set Al=Al+1
set OV=Al
set Dl[OV]=639
else
call m6("Out of memory: Could not create Closure.","when calling error in City, line 361")
set OV=0
endif
else
set Pl=Pl-1
set OV=Il[Pl]
set Dl[OV]=639
endif
set Qb=Qb-1
set ZS[OV]=sV
set US[OV]=tV
set Wb[Qb]="when calling doAfter in City, line 361"
set Qb=Qb+1
set Wb[Qb]="when calling start in ClosureTimers, line 15"
set Qb=Qb+1
if Dl[OV]==0 then
if OV==0 then
call m6("Nullpointer exception when calling CallbackSingle.start","when calling error in ClosureTimers, line 67")
else
call m6("Called CallbackSingle.start on invalid object.","when calling error in ClosureTimers, line 67")
endif
endif
call v3(OV,SV,"when calling start in ClosureTimers, line 67")
set Qb=Qb-1-1-1
return true
endfunction
function Wpw takes integer xpw,string vpw returns nothing
local integer mpw
local integer Qpw
set Wb[Qb]=vpw
set Qb=Qb+1
if nb[xpw]==0 then
if xpw==0 then
call m6("Nullpointer exception when calling LLIterator.reset","when calling error in LinkedList, line 421")
else
call m6("Called LLIterator.reset on invalid object.","when calling error in LinkedList, line 421")
endif
endif
set Wb[Qb]="when calling reset in LinkedList, line 421"
set Qb=Qb+1
set mpw=Ro[xpw]
set Wb[Qb]="when calling getDummy in LinkedList, line 422"
set Qb=Qb+1
if Tb[mpw]==0 then
if mpw==0 then
call m6("Nullpointer exception when calling LinkedList.getDummy","when calling error in LinkedList, line 362")
else
call m6("Called LinkedList.getDummy on invalid object.","when calling error in LinkedList, line 362")
endif
endif
set Qpw=Yo[mpw]
set Qb=Qb-1
set do[xpw]=Qpw
set fo[xpw]=do[xpw]
set Qb=Qb-1-1
endfunction
function C8 takes integer K8,string L8 returns integer
local integer X8
set Wb[Qb]=L8
set Qb=Qb+1
set Wb[Qb]="when calling LLIterator in LinkedList, line 412"
set Qb=Qb+1
if qb==0 then
if ab<32768 then
set ab=ab+1
set X8=ab
set nb[X8]=698
else
call m6("Out of memory: Could not create LLIterator.","when calling error in LinkedList, line 406")
set X8=0
endif
else
set qb=qb-1
set X8=eb[qb]
set nb[X8]=698
endif
set Qb=Qb-1
set Wb[Qb]="when calling construct_LLIterator in LinkedList, line 412"
set Qb=Qb+1
set To[X8]=true
set Ro[X8]=K8
call Wpw(X8,"when calling reset in LinkedList, line 414")
set Qb=Qb-1-1
return X8
endfunction
function Csw takes multiboard Isw,integer Psw,integer Asw,string Dsw,real Hsw returns nothing
local multiboarditem Jsw=MultiboardGetItem(Isw,Asw,Psw)
local string Ksw=Dsw
local integer Lsw=R2I((R2I(Hsw/0.004)-StringLength(Dsw))*1./2)
local string Xsw=""
set Asw=0
set Psw=Lsw-1
loop
exitwhen Asw>Psw
set Xsw=Xsw+" "
set Asw=Asw+1
endloop
if ModuloReal(Lsw,2)==1. then
set Ksw=" "+Ksw
endif
set Ksw=Xsw+Ksw
call MultiboardSetItemValue(Jsw,Ksw)
set Jsw=null
endfunction
function Lbw takes integer Ubw,string Ibw returns string
local integer Pbw
local integer Abw
local integer Dbw
local integer Hbw
local integer Jbw
local integer Kbw
set Wb[Qb]=Ibw
set Qb=Qb+1
if Ql[Ubw]==0 then
if Ubw==0 then
call m6("Nullpointer exception when calling City.getCityNameColored","when calling error in City, line 167")
else
call m6("Called City.getCityNameColored on invalid object.","when calling error in City, line 167")
endif
endif
set Hbw=Nc[DS[Ubw]]
set Jbw=Mc[DS[Ubw]]
set Kbw=wo[DS[Ubw]]
set Pbw=Hbw/16
set Abw=Jbw/16
set Dbw=Kbw/16
set Ibw="|cff"+mc[Pbw]+mc[Hbw-Pbw*16]+mc[Abw]+mc[Jbw-Abw*16]+mc[Dbw]+mc[Kbw-Dbw*16]+PS[Ubw]+"|r"
set Qb=Qb-1
return Ibw
endfunction
function Vww takes player Jww,string Kww returns string
local integer Lww
local integer Xww
local integer Cww
set Wb[Qb]=Kww
set Qb=Qb+1
set Xww=yO[GetPlayerId(Jww)]
set Wb[Qb]="when calling getForceId in Messages, line 53"
set Qb=Qb+1
if kb[Xww]==0 then
if Xww==0 then
call m6("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 94")
else
call m6("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 94")
endif
endif
set Cww=pO[Xww]
set Qb=Qb-1
set Lww=GetRandomInt(0,2)
if Cww==0 then
set Kww=CO[Lww]
elseif Cww==1 then
set Kww=VO[Lww]
elseif Cww==2 then
set Kww=BO[Lww]
elseif Cww==3 then
set Kww=NO[Lww]
else
set Kww="Attention!"
endif
set Qb=Qb-1
return "|cffffa600"+Kww+"|r"
endfunction
function jpw takes integer Fpw,string kpw returns nothing
set Wb[Qb]=kpw
set Qb=Qb+1
if nb[Fpw]==0 then
if Fpw==0 then
call m6("Nullpointer exception when calling LLIterator.LLIterator","when calling error in LinkedList, line 406")
else
call m6("Called LLIterator.LLIterator on invalid object.","when calling error in LinkedList, line 406")
endif
endif
set Wb[Qb]="when calling destroyLLIterator in LinkedList, line 406"
set Qb=Qb+1
set Wb[Qb]="when calling LLIterator in LinkedList, line 406"
set Qb=Qb+1
if nb[Fpw]==0 then
call m6("Double free: object of type LLIterator","when calling error in LinkedList, line 406")
else
set eb[qb]=Fpw
set qb=qb+1
set nb[Fpw]=0
endif
set Qb=Qb-1-1-1
endfunction
function Ycw takes integer rcw,string scw returns nothing
local unit tcw
local integer icw
local integer Scw
local integer ccw
local integer ocw
local real Ocw
local integer lcw
local unit bcw
local player ycw
local integer pcw
local player ecw
local integer qcw
local integer acw
local integer ncw
local integer dcw
local integer fcw
local integer Rcw
local boolean Tcw
set Wb[Qb]=scw
set Qb=Qb+1
if rcw<0 or rcw>=gS then
set Qb=Qb-1
set tcw=null
set bcw=null
set ycw=null
set ecw=null
return
endif
if Qo-QO[rcw]<=60 then
set Qb=Qb-1
set tcw=null
set bcw=null
set ycw=null
set ecw=null
return
endif
set ocw=QS[rcw]
set Wb[Qb]="when calling getLastPublicOrder in Revolts, line 18"
set Qb=Qb+1
if Ql[ocw]==0 then
if ocw==0 then
call m6("Nullpointer exception when calling City.getLastPublicOrder","when calling error in City, line 319")
else
call m6("Called City.getLastPublicOrder on invalid object.","when calling error in City, line 319")
endif
endif
set Ocw=VS[ocw]
set Qb=Qb-1
set lcw=QS[rcw]
set Wb[Qb]="when calling getCityUnit in Revolts, line 19"
set Qb=Qb+1
if Ql[lcw]==0 then
if lcw==0 then
call m6("Nullpointer exception when calling City.getCityUnit","when calling error in City, line 176")
else
call m6("Called City.getCityUnit on invalid object.","when calling error in City, line 176")
endif
endif
set bcw=IS[lcw]
set Qb=Qb-1
set tcw=bcw
set ycw=GetOwningPlayer(bcw)
if GetPlayerSlotState(ycw)==PLAYER_SLOT_STATE_PLAYING then
set Tcw=GetPlayerController(ycw)==MAP_CONTROL_USER
else
set Tcw=false
endif
if not Tcw then
set Qb=Qb-1
set tcw=null
set bcw=null
set ycw=null
set ecw=null
return
endif
if Ocw<50.0 then
set QO[rcw]=Qo
set pcw=QS[rcw]
set Wb[Qb]="when calling addModifier in Revolts, line 24"
set Qb=Qb+1
if Ql[pcw]==0 then
if pcw==0 then
call m6("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call m6("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call lV(pcw,1,"when calling addModifier in City, line 355")
set Qb=Qb-1
set scw="A violent mob has appeared near the gates of "+Lbw(QS[rcw],"when calling getCityNameColored in Revolts, line 25")+"!"
set ecw=GetOwningPlayer(bcw)
set Wb[Qb]="when calling attentionToPlayer in Revolts, line 25"
set Qb=Qb+1
call DisplayTimedTextToPlayer(ecw,0.,0.,10.0,Vww(ecw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(ecw,0.,0.,10.0,scw)
set Qb=Qb-1
if Ocw>=30.0 then
set qcw=nl[0]
set Wb[Qb]="when calling iterator in Revolts, line 28"
set Qb=Qb+1
set acw=C8(qcw,"when calling new_LLIterator in LinkedList, line 165")
set Qb=Qb-1
set icw=acw
loop
exitwhen no[fo[icw]]==do[icw]
set fo[icw]=no[fo[icw]]
call CreateUnit(dO[PLAYER_NEUTRAL_AGGRESSIVE],qo[fo[icw]],GetUnitX(tcw),GetUnitY(tcw),0.)
endloop
set Wb[Qb]="when calling close in Revolts, line 28"
set Qb=Qb+1
if To[icw]then
call jpw(icw,"when calling LLIterator in LinkedList, line 450")
endif
set Qb=Qb-1
elseif Ocw>=15.0 then
set ncw=nl[1]
set Wb[Qb]="when calling iterator in Revolts, line 32"
set Qb=Qb+1
set dcw=C8(ncw,"when calling new_LLIterator in LinkedList, line 165")
set Qb=Qb-1
set Scw=dcw
loop
exitwhen no[fo[Scw]]==do[Scw]
set fo[Scw]=no[fo[Scw]]
call CreateUnit(dO[PLAYER_NEUTRAL_AGGRESSIVE],qo[fo[Scw]],GetUnitX(tcw),GetUnitY(tcw),0.)
endloop
set Wb[Qb]="when calling close in Revolts, line 32"
set Qb=Qb+1
if To[Scw]then
call jpw(Scw,"when calling LLIterator in LinkedList, line 450")
endif
set Qb=Qb-1
else
set fcw=nl[2]
set Wb[Qb]="when calling iterator in Revolts, line 36"
set Qb=Qb+1
set Rcw=C8(fcw,"when calling new_LLIterator in LinkedList, line 165")
set Qb=Qb-1
set ccw=Rcw
loop
exitwhen no[fo[ccw]]==do[ccw]
set fo[ccw]=no[fo[ccw]]
call CreateUnit(dO[PLAYER_NEUTRAL_AGGRESSIVE],qo[fo[ccw]],GetUnitX(tcw),GetUnitY(tcw),0.)
endloop
set Wb[Qb]="when calling close in Revolts, line 36"
set Qb=Qb+1
if To[ccw]then
call jpw(ccw,"when calling LLIterator in LinkedList, line 450")
endif
set Qb=Qb-1
endif
endif
set Qb=Qb-1
set tcw=null
set bcw=null
set ycw=null
set ecw=null
endfunction
function eB takes integer iB,string SB returns real
local integer cB
local integer oB
local boolean OB
local real lB
local real bB
local real yB
local real pB
set Wb[Qb]=SB
set Qb=Qb+1
set VS[iB]=100.0-CS[iB]*1000.-SquareRoot(LS[iB]*1.)/17.+BS[iB]-LS[iB]*1./1000*vS[MS[iB]]
set lB=JS[iB]
set bB=KS[iB]
set Wb[Qb]="when calling alloc_Closure in City, line 300"
set Qb=Qb+1
if El==0 then
if Zl<32768 then
set Zl=Zl+1
set cB=Zl
set Ul[cB]=681
else
call m6("Out of memory: Could not create Closure.","when calling error in City, line 300")
set cB=0
endif
else
set El=El-1
set cB=Wl[El]
set Ul[cB]=681
endif
set Qb=Qb-1
set WS[cB]=iB
call R3(lB,bB,500,cB,"when calling forUnitsInRange in City, line 300")
set yB=JS[iB]
set pB=KS[iB]
set Wb[Qb]="when calling alloc_Closure in City, line 304"
set Qb=Qb+1
if El==0 then
if Zl<32768 then
set Zl=Zl+1
set oB=Zl
set Ul[oB]=682
else
call m6("Out of memory: Could not create Closure.","when calling error in City, line 304")
set oB=0
endif
else
set El=El-1
set oB=Wl[El]
set Ul[oB]=682
endif
set Qb=Qb-1
set ES[oB]=iB
call R3(yB,pB,1500.0,oB,"when calling forUnitsInRange in City, line 304")
if VS[iB]<0.0 then
set VS[iB]=0.0
endif
if VS[iB]>100.0 then
set VS[iB]=100.0
endif
if VS[iB]<50.0 then
set OB=GetRandomReal(0.0,1.0)<=0.01
else
set OB=false
endif
if OB then
call Ycw(AS[iB],"when calling checkForRevolt in City, line 315")
endif
set Qb=Qb-1
return VS[iB]
endfunction
function JC takes integer EC,string ZC returns integer
local integer UC
local real IC
local real PC
local real AC
local real DC
local real HC
set Wb[Qb]=ZC
set Qb=Qb+1
set UC=0
set UC=0+dpw(sS,GetUnitTypeId(IS[EC]),"when calling get in City, line 270")
set HC=LS[EC]*1.
set Wb[Qb]="when calling countPublicOrder in City, line 282"
set Qb=Qb+1
if Ql[EC]==0 then
if EC==0 then
call m6("Nullpointer exception when calling City.countPublicOrder","when calling error in City, line 295")
else
call m6("Called City.countPublicOrder on invalid object.","when calling error in City, line 295")
endif
endif
set DC=eB(EC,"when calling countPublicOrder in City, line 295")
set Qb=Qb-1
set IC=DC/100.
set PC=xO
if 0.75>PC then
set AC=0.75
else
set AC=PC
endif
if IC>AC then
set AC=IC
endif
set UC=UC+R2I(SquareRoot(HC*AC)/6.)
set UC=R2I(UC*NS[EC]*jS[MS[EC]])
set Qb=Qb-1
return UC
endfunction
function MC takes integer KC,string LC returns string
local real XC
local integer CC
local integer VC
local integer BC
local integer NC
set Wb[Qb]=LC
set Qb=Qb+1
set Wb[Qb]="when calling countPublicOrder in City, line 323"
set Qb=Qb+1
if Ql[KC]==0 then
if KC==0 then
call m6("Nullpointer exception when calling City.countPublicOrder","when calling error in City, line 295")
else
call m6("Called City.countPublicOrder on invalid object.","when calling error in City, line 295")
endif
endif
set XC=eB(KC,"when calling countPublicOrder in City, line 295")
set Qb=Qb-1
set BC=R2I(255.-XC/100.*255.)
set NC=R2I(XC/100.*255.)
set CC=BC/16
set VC=NC/16
set LC=StringCase("|cff"+mc[CC]+mc[BC-CC*16]+mc[VC]+mc[NC-VC*16]+mc[0]+mc[0],false)+I2S(R2I(XC))+","+I2S(R2I(ModuloReal(R2I(XC*10.),10)))+"%|r"
set Qb=Qb-1
return LC
endfunction
function Ucw takes integer Ecw returns string
local string Zcw="|cff15ff00+"
if qww(Ecw*1.)==-1. then
set Zcw="|cffff0000"
endif
return Zcw+I2S(Ecw)+"|r"
endfunction
function rV takes integer wV returns string
local string uV
if xo then
return I2S(LS[wV])
endif
if LS[wV]<100000 then
set uV=I2S(R2I(LS[wV]*1./1000))+","+I2S(R2I(ModuloReal(LS[wV],1000)/100.))+"k"
else
set uV=I2S(R2I(LS[wV]*1./1000))+"k"
endif
return uV
endfunction
function hiw takes integer Btw,string Ntw returns nothing
local integer Mtw
local multiboard wiw
local integer uiw
local integer riw
local integer siw
local multiboard tiw
local integer iiw
local integer Siw
local multiboard ciw
local integer oiw
local integer Oiw
local integer liw
local string biw
local integer yiw
local string piw
local integer eiw
local integer qiw
local string aiw
local integer niw
local integer diw
local string fiw
local integer Riw
local integer Tiw
local integer Yiw
local string Giw
local string giw
set Wb[Qb]=Ntw
set Qb=Qb+1
if aO[Btw]==-1 then
set Qb=Qb-1
set wiw=null
set tiw=null
set ciw=null
return
endif
set Mtw=GetPlayerId(eO[Btw])
call Csw(SO[Mtw],tO[0],tO[1],Lbw(QS[aO[Btw]],"when calling getCityNameColored in PlayerStats, line 48"),0.40)
set oiw=QS[aO[Btw]]
set Wb[Qb]="when calling countTax in PlayerStats, line 57"
set Qb=Qb+1
if Ql[oiw]==0 then
if oiw==0 then
call m6("Nullpointer exception when calling City.countTax","when calling error in City, line 266")
else
call m6("Called City.countTax on invalid object.","when calling error in City, line 266")
endif
endif
set Oiw=JC(oiw,"when calling countTax in City, line 266")
set Qb=Qb-1
set liw=QS[aO[Btw]]
set Wb[Qb]="when calling getTaxLevelString in PlayerStats, line 58"
set Qb=Qb+1
if Ql[liw]==0 then
if liw==0 then
call m6("Nullpointer exception when calling City.getTaxLevelString","when calling error in City, line 164")
else
call m6("Called City.getTaxLevelString on invalid object.","when calling error in City, line 164")
endif
endif
set biw=MO[MS[liw]]
set Qb=Qb-1
set yiw=QS[aO[Btw]]
set Wb[Qb]="when calling getPublicOrderStr in PlayerStats, line 59"
set Qb=Qb+1
if Ql[yiw]==0 then
if yiw==0 then
call m6("Nullpointer exception when calling City.getPublicOrderStr","when calling error in City, line 322")
else
call m6("Called City.getPublicOrderStr on invalid object.","when calling error in City, line 322")
endif
endif
set piw=MC(yiw,"when calling getPublicOrderStr in City, line 322")
set Qb=Qb-1
set eiw=QS[aO[Btw]]
set Wb[Qb]="when calling getPopulationStr in PlayerStats, line 60"
set Qb=Qb+1
if Ql[eiw]==0 then
if eiw==0 then
call m6("Nullpointer exception when calling City.getPopulationStr","when calling error in City, line 343")
else
call m6("Called City.getPopulationStr on invalid object.","when calling error in City, line 343")
endif
endif
set Ntw=rV(eiw)
set Qb=Qb-1
set qiw=QS[aO[Btw]]
set Wb[Qb]="when calling getPopulationGrowthStr in PlayerStats, line 61"
set Qb=Qb+1
if Ql[qiw]==0 then
if qiw==0 then
call m6("Nullpointer exception when calling City.getPopulationGrowthStr","when calling error in City, line 340")
else
call m6("Called City.getPopulationGrowthStr on invalid object.","when calling error in City, line 340")
endif
endif
set aiw=Ucw(XS[qiw])
set Qb=Qb-1
set wiw=SO[Mtw]
set niw=wO[0]
set diw=wO[1]
set fiw=I2S(Oiw)
call MultiboardSetItemValue(MultiboardGetItem(wiw,diw,niw),fiw)
call MultiboardSetItemValue(MultiboardGetItem(wiw,wO[1],wO[0]+1),biw)
call MultiboardSetItemValue(MultiboardGetItem(wiw,uO[1],uO[0]),piw)
call MultiboardSetItemValue(MultiboardGetItem(wiw,rO[1],rO[0]),Ntw)
call MultiboardSetItemValue(MultiboardGetItem(wiw,sO[1],sO[0]),aiw)
set uiw=0
set Tiw=QS[aO[Btw]]
set Wb[Qb]="when calling getModifiers in PlayerStats, line 71"
set Qb=Qb+1
if Ql[Tiw]==0 then
if Tiw==0 then
call m6("Nullpointer exception when calling City.getModifiers","when calling error in City, line 378")
else
call m6("Called City.getModifiers on invalid object.","when calling error in City, line 378")
endif
endif
set Yiw=uc[Tiw]
set Qb=Qb-1
set Wb[Qb]="when calling iterator in PlayerStats, line 71"
set Qb=Qb+1
set Riw=C8(Yiw,"when calling new_LLIterator in LinkedList, line 165")
set Qb=Qb-1
set riw=Riw
loop
exitwhen no[fo[riw]]==do[riw]
set fo[riw]=no[fo[riw]]
set siw=qo[fo[riw]]
set tiw=SO[Mtw]
set Giw=YS[dpw(eS,siw,"when calling get in PlayerStats, line 73")]
call MultiboardSetItemValue(MultiboardGetItem(tiw,4+uiw,4),Giw)
set giw="("+GS[dpw(eS,siw,"when calling get in PlayerStats, line 74")]+")"
call MultiboardSetItemValue(MultiboardGetItem(tiw,4+uiw,5),giw)
set uiw=uiw+1
endloop
set Wb[Qb]="when calling close in PlayerStats, line 71"
set Qb=Qb+1
if To[riw]then
call jpw(riw,"when calling LLIterator in LinkedList, line 450")
endif
set Qb=Qb-1
set iiw=uiw
set Siw=9
loop
exitwhen iiw>Siw
set ciw=SO[Mtw]
call MultiboardSetItemValue(MultiboardGetItem(ciw,4+iiw,4)," ")
call MultiboardSetItemValue(MultiboardGetItem(ciw,4+iiw,5)," ")
set iiw=iiw+1
endloop
set Qb=Qb-1
set wiw=null
set tiw=null
set ciw=null
endfunction
function dV takes integer bV,string yV returns nothing
local integer pV
local integer eV
local integer qV
local integer aV
local integer nV
set Wb[Qb]=yV
set Qb=Qb+1
set pV=0
set eV=23
loop
exitwhen pV>eV
set qV=yO[pV]
set Wb[Qb]="when calling getSelectedCityId in City, line 239"
set Qb=Qb+1
if kb[qV]==0 then
if qV==0 then
call m6("Nullpointer exception when calling PlayerStats.getSelectedCityId","when calling error in PlayerStats, line 84")
else
call m6("Called PlayerStats.getSelectedCityId on invalid object.","when calling error in PlayerStats, line 84")
endif
endif
set aV=aO[qV]
set Qb=Qb-1
if aV==AS[bV]then
set nV=yO[pV]
set yV="when calling refreshMultiboardCity in City, line 240"
set Wb[Qb]="when calling refreshMultiboardCity in City, line 240"
set Qb=Qb+1
if kb[nV]==0 then
if nV==0 then
call m6("Nullpointer exception when calling PlayerStats.refreshMultiboardCity","when calling error in PlayerStats, line 43")
else
call m6("Called PlayerStats.refreshMultiboardCity on invalid object.","when calling error in PlayerStats, line 43")
endif
endif
call hiw(nV,"when calling refreshMultiboardCity in PlayerStats, line 43")
set Qb=Qb-1
endif
set pV=pV+1
endloop
set Qb=Qb-1
endfunction
function vV takes integer hV,integer FV,string kV returns nothing
local integer jV
local integer xV
set Wb[Qb]=kV
set Qb=Qb+1
if FV==PLAYER_NEUTRAL_AGGRESSIVE then
call SetUnitOwner(IS[hV],Player(FV),true)
set Wb[Qb]="when calling changeTaxLevelFORCED in City, line 192"
set Qb=Qb+1
if Ql[hV]==0 then
if hV==0 then
call m6("Nullpointer exception when calling City.changeTaxLevelFORCED","when calling error in City, line 260")
else
call m6("Called City.changeTaxLevelFORCED on invalid object.","when calling error in City, line 260")
endif
endif
set BS[hV]=BS[hV]-xS[MS[hV]]
set BS[hV]=BS[hV]+xS[0]
set MS[hV]=0
set Qb=Qb-1
else
call SetUnitOwner(IS[hV],dO[FV],true)
endif
set HS[hV]=FV
if FV>=0 and FV<24 then
set jV=yO[FV]
set Wb[Qb]="when calling getForceId in City, line 199"
set Qb=Qb+1
if kb[jV]==0 then
if jV==0 then
call m6("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 94")
else
call m6("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 94")
endif
endif
set xV=pO[jV]
set Qb=Qb-1
set DS[hV]=xV
endif
set Wb[Qb]="when calling refreshMultiboardIfPossible in City, line 201"
set Qb=Qb+1
if Ql[hV]==0 then
if hV==0 then
call m6("Nullpointer exception when calling City.refreshMultiboardIfPossible","when calling error in City, line 237")
else
call m6("Called City.refreshMultiboardIfPossible on invalid object.","when calling error in City, line 237")
endif
endif
call dV(hV,"when calling refreshMultiboardIfPossible in City, line 237")
set Qb=Qb-1-1
endfunction
function MV takes integer UV,player IV,string PV returns nothing
local integer AV
local integer DV
local unit HV
local unit JV
local real KV
local integer LV
local integer XV
local integer CV
local integer VV
local boolean BV
local integer NV
set Wb[Qb]=PV
set Qb=Qb+1
set HV=IS[UV]
call SetUnitState(HV,UNIT_STATE_LIFE,GetUnitState(HV,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,60.0)*0.01)
set JV=IS[UV]
call SetUnitState(JV,UNIT_STATE_MANA,GetUnitState(JV,UNIT_STATE_MAX_MANA)*RMaxBJ(0.,30.0)*0.01)
set Wb[Qb]="when calling addModifier in City, line 222"
set Qb=Qb+1
if Ql[UV]==0 then
if UV==0 then
call m6("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call m6("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call lV(UV,0,"when calling addModifier in City, line 355")
set Qb=Qb-1
set KV=dS[dpw(eS,6,"when calling get in City, line 223")]
if GetRandomReal(0.0,1.0)<=KV then
set Wb[Qb]="when calling addModifier in City, line 224"
set Qb=Qb+1
if Ql[UV]==0 then
if UV==0 then
call m6("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call m6("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call lV(UV,6,"when calling addModifier in City, line 355")
set Qb=Qb-1
endif
set AV=DS[UV]
set DV=GetPlayerId(IV)
if DV>=0 and DV<24 then
set LV=yO[DV]
set Wb[Qb]="when calling getForceId in City, line 229"
set Qb=Qb+1
if kb[LV]==0 then
if LV==0 then
call m6("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 94")
else
call m6("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 94")
endif
endif
set XV=pO[LV]
set Qb=Qb-1
set AV=XV
endif
set CV=el
set VV=GetUnitTypeId(IS[UV])
set Wb[Qb]="when calling has in City, line 231"
set Qb=Qb+1
if Tb[CV]==0 then
if CV==0 then
call m6("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call m6("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set BV=t9(CV,VV)
set Qb=Qb-1
if BV then
set NV=FC(GC(GetUnitTypeId(IS[UV])),AV)
set Wb[Qb]="when calling replaceCity in City, line 232"
set Qb=Qb+1
if Ql[UV]==0 then
if UV==0 then
call m6("Nullpointer exception when calling City.replaceCity","when calling error in City, line 182")
else
call m6("Called City.replaceCity on invalid object.","when calling error in City, line 182")
endif
endif
call gV(UV,NV,"when calling replaceCity in City, line 182")
set Qb=Qb-1
call UnitAddAbility(IS[UV],1093677634)
endif
set Wb[Qb]="when calling changeOwner in City, line 235"
set Qb=Qb+1
if Ql[UV]==0 then
if UV==0 then
call m6("Nullpointer exception when calling City.changeOwner","when calling error in City, line 187")
else
call m6("Called City.changeOwner on invalid object.","when calling error in City, line 187")
endif
endif
call vV(UV,DV,"when calling changeOwner in City, line 187")
set Qb=Qb-1-1
set HV=null
set JV=null
endfunction
function WC takes unit kC,string jC returns integer
local integer xC
local integer vC
local integer mC
local unit QC
set Wb[Qb]=jC
set Qb=Qb+1
set xC=0
set vC=gS-1
loop
exitwhen xC>vC
set mC=QS[xC]
set jC="when calling getCityUnit in City, line 429"
set Wb[Qb]="when calling getCityUnit in City, line 429"
set Qb=Qb+1
if Ql[mC]==0 then
if mC==0 then
call m6("Nullpointer exception when calling City.getCityUnit","when calling error in City, line 176")
else
call m6("Called City.getCityUnit on invalid object.","when calling error in City, line 176")
endif
endif
set QC=IS[mC]
set Qb=Qb-1
if QC==kC then
set Qb=Qb-1
set QC=null
return xC
endif
set xC=xC+1
endloop
set Qb=Qb-1
set QC=null
return -1
endfunction
function cww takes string Mww,force www,string uww returns nothing
local integer rww
local integer sww
local player tww
local player iww
local force Sww
set Wb[Qb]=uww
set Qb=Qb+1
set rww=0
set sww=23
loop
exitwhen rww>sww
set iww=dO[rww]
set Sww=CreateForce()
call ForceAddPlayer(Sww,iww)
if Sww==www then
set tww=dO[rww]
call DisplayTimedTextToPlayer(tww,0.,0.,10.0,Vww(tww,"when calling getAttentionStringForPlayer in Messages, line 116"))
call DisplayTimedTextToPlayer(tww,0.,0.,10.0,Mww)
endif
set rww=rww+1
endloop
set Qb=Qb-1
set tww=null
set iww=null
set Sww=null
endfunction
function DX takes integer GX,string gX returns nothing
local unit hX
local integer FX
local integer kX
local integer jX
local boolean xX
local unit vX
local integer mX
local integer QX
local player WX
local boolean EX
local boolean ZX
local real UX
local real IX
local real PX
local real AX
set Wb[Qb]=gX
set Qb=Qb+1
set hX=GetTriggerUnit()
set Wb[Qb]="when calling isCity in CityManage, line 36"
set Qb=Qb+1
set Wb[Qb]="when calling isCity in UnitTools, line 5"
set Qb=Qb+1
set kX=al
set jX=GetUnitTypeId(hX)
set Wb[Qb]="when calling has in City, line 423"
set Qb=Qb+1
if Tb[kX]==0 then
if kX==0 then
call m6("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call m6("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set xX=t9(kX,jX)
set Qb=Qb-1-1-1
if xX then
if GetUnitStatePercent(hX,UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)<=50.0 then
set ZX=GetOwningPlayer(hX)!=GetOwningPlayer(GetAttacker())
else
set ZX=false
endif
if ZX then
set UX=GetUnitX(hX)
set IX=GetUnitY(hX)
set vX=GetAttacker()
set PX=UX-GetUnitX(vX)
set AX=IX-GetUnitY(vX)
if SquareRoot(PX*PX+AX*AX)>300.0 then
call SetUnitState(hX,UNIT_STATE_LIFE,GetUnitState(hX,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,50.0)*0.01)
else
set Wb[Qb]="when calling getCityId in CityManage, line 41"
set Qb=Qb+1
set mX=WC(hX,"when calling getCityId in UnitTools, line 9")
set Qb=Qb-1
set QX=QS[mX]
set WX=GetOwningPlayer(GetAttacker())
set Wb[Qb]="when calling capture in CityManage, line 42"
set Qb=Qb+1
if Ql[QX]==0 then
if QX==0 then
call m6("Nullpointer exception when calling City.capture","when calling error in City, line 218")
else
call m6("Called City.capture on invalid object.","when calling error in City, line 218")
endif
endif
call MV(QX,WX,"when calling capture in City, line 218")
set Qb=Qb-1
set FX=GetUnitTypeId(hX)
set GX=el
set Wb[Qb]="when calling has in CityManage, line 44"
set Qb=Qb+1
if Tb[GX]==0 then
if GX==0 then
call m6("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call m6("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set EX=t9(GX,FX)
set Qb=Qb-1
if EX then
call cww(C3(GetOwningPlayer(GetAttacker()))+" has just captured "+C3(GetOwningPlayer(GetTriggerUnit()))+" Capitol!",bj_FORCE_ALL_PLAYERS,"when calling attentionToForce in CityManage, line 45")
endif
endif
elseif GetUnitStatePercent(hX,UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)<=50.0 then
call SetUnitState(hX,UNIT_STATE_LIFE,GetUnitState(hX,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,50.0)*0.01)
endif
endif
set Qb=Qb-1
set hX=null
set vX=null
set WX=null
endfunction
function Wyw takes integer vyw,real myw,string Qyw returns nothing
set Wb[Qb]=Qyw
set Qb=Qb+1
if Dl[vyw]==0 then
if vyw==0 then
call m6("Nullpointer exception when calling CallbackSingle.start","when calling error in ClosureTimers, line 67")
else
call m6("Called CallbackSingle.start on invalid object.","when calling error in ClosureTimers, line 67")
endif
endif
call v3(vyw,myw,"when calling start in ClosureTimers, line 67")
set Qb=Qb-1
endfunction
function E8 takes integer j8,string x8 returns nothing
local unit v8
local player m8
local player Q8
local player W8
set Wb[Qb]=x8
set Qb=Qb+1
set v8=GetConstructingStructure()
if GetUnitTypeId(v8)==1747990614 then
if yo[GetPlayerId(GetOwningPlayer(v8))]<3 then
set m8=GetOwningPlayer(v8)
set Q8=GetOwningPlayer(v8)
set yo[GetPlayerId(m8)]=yo[GetPlayerId(Q8)]+1
else
set W8=GetOwningPlayer(v8)
set Wb[Qb]="when calling attentionToPlayer in LimitMercenaryCamps, line 18"
set Qb=Qb+1
call DisplayTimedTextToPlayer(W8,0.,0.,10.0,Vww(W8,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(W8,0.,0.,10.0,"You cannot build more than 3 mercenary camps.")
set Qb=Qb-1
set Wb[Qb]="when calling alloc_Closure in LimitMercenaryCamps, line 19"
set Qb=Qb+1
if Pl==0 then
if Al<32768 then
set Al=Al+1
set j8=Al
set Dl[j8]=646
else
call m6("Out of memory: Could not create Closure.","when calling error in LimitMercenaryCamps, line 19")
set j8=0
endif
else
set Pl=Pl-1
set j8=Il[Pl]
set Dl[j8]=646
endif
set Qb=Qb-1
set po[j8]=v8
set Wb[Qb]="when calling doAfter in LimitMercenaryCamps, line 19"
set Qb=Qb+1
call Wyw(j8,0.01,"when calling start in ClosureTimers, line 15")
set Qb=Qb-1
endif
endif
set Qb=Qb-1
set v8=null
set m8=null
set Q8=null
set W8=null
endfunction
function O3 takes player S3,integer c3,string o3 returns nothing
set Wb[Qb]=o3
set Qb=Qb+1
set Yc[Gc]=c3
set Gc=Gc+1
call GroupEnumUnitsOfPlayer(Tc,S3,gc)
set Wb[Qb]="when calling popCallback in ClosureForGroups, line 57"
set Qb=Qb+1
call GroupClear(Tc)
set Gc=Gc-1
call eyw(Yc[Gc],"when calling ForGroupCallback in ClosureForGroups, line 21")
set Qb=Qb-1-1
endfunction
function Gtw takes integer dtw,string ftw returns nothing
local player Rtw
local force Ttw
local integer Ytw
set Wb[Qb]=ftw
set Qb=Qb+1
set ftw=C3(GetTriggerPlayer())+" has left the game!"
set Ttw=bj_FORCE_ALL_PLAYERS
if IsPlayerInForce(GetLocalPlayer(),Ttw) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,5.0,ftw)
endif
set dtw=yO[GetPlayerId(GetTriggerPlayer())]
set Wb[Qb]="when calling setInGame in OnPlayerLeave, line 8"
set Qb=Qb+1
if kb[dtw]==0 then
if dtw==0 then
call m6("Nullpointer exception when calling PlayerStats.setInGame","when calling error in PlayerStats, line 17")
else
call m6("Called PlayerStats.setInGame on invalid object.","when calling error in PlayerStats, line 17")
endif
endif
set qO[dtw]=false
set Qb=Qb-1
set Rtw=GetTriggerPlayer()
set Wb[Qb]="when calling alloc_Closure in OnPlayerLeave, line 9"
set Qb=Qb+1
if El==0 then
if Zl<32768 then
set Zl=Zl+1
set Ytw=Zl
set Ul[Ytw]=686
else
call m6("Out of memory: Could not create Closure.","when calling error in OnPlayerLeave, line 9")
set Ytw=0
endif
else
set El=El-1
set Ytw=Wl[El]
set Ul[Ytw]=686
endif
set Qb=Qb-1
call O3(Rtw,Ytw,"when calling forUnitsOfPlayer in OnPlayerLeave, line 9")
set Qb=Qb-1
set Rtw=null
set Ttw=null
endfunction
function Hlw takes integer Elw,string Zlw returns nothing
local unit Ulw
local player Ilw
local integer Plw
local integer Alw
local boolean Dlw
set Wb[Qb]=Zlw
set Qb=Qb+1
set Ulw=GetDyingUnit()
set Elw=GetPlayerId(GetOwningPlayer(Ulw))
set Ilw=dO[Elw]
if GetPlayerSlotState(Ilw)==PLAYER_SLOT_STATE_PLAYING then
set Dlw=GetPlayerController(Ilw)==MAP_CONTROL_USER
else
set Dlw=false
endif
if Dlw and(not IsUnitType(Ulw,UNIT_TYPE_STRUCTURE)) then
set Plw=yO[Elw]
set Alw=GetUnitLevel(Ulw)
set Wb[Qb]="when calling changeUpkeep in Upkeep, line 19"
set Qb=Qb+1
if kb[Plw]==0 then
if Plw==0 then
call m6("Nullpointer exception when calling PlayerStats.changeUpkeep","when calling error in PlayerStats, line 23")
else
call m6("Called PlayerStats.changeUpkeep on invalid object.","when calling error in PlayerStats, line 23")
endif
endif
set nO[Plw]=nO[Plw]+Alw
set Qb=Qb-1
endif
set Qb=Qb-1
set Ulw=null
set Ilw=null
endfunction
function b0w takes integer s0w returns nothing
local integer t0w
local integer i0w
local player S0w
local string c0w
local force o0w
local force O0w
local boolean l0w
if (not ho[GetPlayerId(GetTriggerPlayer())])and(not jo) then
set t0w=0
set i0w=0
set s0w=23
loop
exitwhen i0w>s0w
set S0w=dO[i0w]
if GetPlayerSlotState(S0w)==PLAYER_SLOT_STATE_PLAYING then
set l0w=GetPlayerController(S0w)==MAP_CONTROL_USER
else
set l0w=false
endif
if l0w then
set t0w=t0w+1
endif
set i0w=i0w+1
endloop
set Fo=t0w
set ho[GetPlayerId(GetTriggerPlayer())]=true
set ko=ko+1
set c0w="|cffff0000"+I2S(ko)+"|r out of |cffff0000"+I2S(R2I((Fo+1)*1./2))+"|r voted to skip the tutorial!"
set o0w=bj_FORCE_ALL_PLAYERS
if IsPlayerInForce(GetLocalPlayer(),o0w) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,5.0,c0w)
endif
if ko>=R2I((Fo+1)*1./2) then
set jo=true
set O0w=bj_FORCE_ALL_PLAYERS
if IsPlayerInForce(GetLocalPlayer(),O0w) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,5.0,"|cffff0000Tutorial will shut down soon...|r")
endif
endif
endif
set S0w=null
set o0w=null
set O0w=null
endfunction
function c8 takes integer s8 returns nothing
local unit t8=GetConstructingStructure()
local player i8
local player S8
if GetUnitTypeId(t8)==1747988808 then
set i8=GetOwningPlayer(t8)
set S8=GetOwningPlayer(t8)
set lo[GetPlayerId(i8)]=lo[GetPlayerId(S8)]-1
endif
set t8=null
set i8=null
set S8=null
endfunction
function e8 takes integer o8,string O8 returns nothing
local unit l8
local player b8
local player y8
local player p8
set Wb[Qb]=O8
set Qb=Qb+1
set l8=GetConstructingStructure()
if GetUnitTypeId(l8)==1747988808 then
if lo[GetPlayerId(GetOwningPlayer(l8))]<3 then
set b8=GetOwningPlayer(l8)
set y8=GetOwningPlayer(l8)
set lo[GetPlayerId(b8)]=lo[GetPlayerId(y8)]+1
else
set p8=GetOwningPlayer(l8)
set Wb[Qb]="when calling attentionToPlayer in LimitEncampments, line 18"
set Qb=Qb+1
call DisplayTimedTextToPlayer(p8,0.,0.,10.0,Vww(p8,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(p8,0.,0.,10.0,"You cannot build more than 3 encampments.")
set Qb=Qb-1
set Wb[Qb]="when calling alloc_Closure in LimitEncampments, line 19"
set Qb=Qb+1
if Pl==0 then
if Al<32768 then
set Al=Al+1
set o8=Al
set Dl[o8]=645
else
call m6("Out of memory: Could not create Closure.","when calling error in LimitEncampments, line 19")
set o8=0
endif
else
set Pl=Pl-1
set o8=Il[Pl]
set Dl[o8]=645
endif
set Qb=Qb-1
set bo[o8]=l8
set Wb[Qb]="when calling doAfter in LimitEncampments, line 19"
set Qb=Qb+1
call Wyw(o8,0.01,"when calling start in ClosureTimers, line 15")
set Qb=Qb-1
endif
endif
set Qb=Qb-1
set l8=null
set b8=null
set y8=null
set p8=null
endfunction
function TC takes integer fC,integer RC returns integer
if fC==1 then
if RC==0 then
return 1747989059
elseif RC==1 then
return 1747990351
elseif RC==2 then
return 1747989331
elseif RC==3 then
return 1747990353
else
return 1747989059
endif
elseif fC==2 then
if RC==0 then
return 1747989060
elseif RC==1 then
return 1747990352
elseif RC==2 then
return 1747990350
elseif RC==3 then
return 1747990354
else
return 1747989060
endif
elseif fC==3 then
if RC==0 then
return 1747988844
elseif RC==1 then
return 1747990356
elseif RC==2 then
return 1747989809
elseif RC==3 then
return 1747990355
else
return 1747988844
endif
elseif RC==0 then
return 1747989059
elseif RC==1 then
return 1747990351
elseif RC==2 then
return 1747989331
elseif RC==3 then
return 1747990353
else
return 1747989059
endif
endfunction
function dC takes integer nC returns integer
if nC==1747989059 then
return 1
elseif nC==1747989060 then
return 2
elseif nC==1747988844 then
return 3
elseif nC==1747990351 then
return 1
elseif nC==1747990352 then
return 2
elseif nC==1747990356 then
return 3
elseif nC==1747989331 then
return 1
elseif nC==1747990350 then
return 2
elseif nC==1747989809 then
return 3
elseif nC==1747990353 then
return 1
elseif nC==1747990354 then
return 2
elseif nC==1747990355 then
return 3
else
return 1
endif
endfunction
function eL takes integer NK,string MK returns nothing
local unit wL
local player uL
local integer rL
local integer sL
local boolean tL
local unit iL
local integer SL
local boolean cL
local real oL
local boolean OL
local integer lL
local real bL
local real yL
local real pL
set Wb[Qb]=MK
set Qb=Qb+1
set wL=GetTriggerUnit()
set rL=ql
set sL=GetUnitTypeId(wL)
set Wb[Qb]="when calling has in CastleCapture, line 11"
set Qb=Qb+1
if Tb[rL]==0 then
if rL==0 then
call m6("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call m6("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set tL=t9(rL,sL)
set Qb=Qb-1
if tL then
if GetUnitStatePercent(wL,UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)<=50.0 then
set cL=GetOwningPlayer(wL)!=GetOwningPlayer(GetAttacker())
else
set cL=false
endif
if cL then
set oL=GetUnitX(wL)
set bL=GetUnitY(wL)
set iL=GetAttacker()
set yL=oL-GetUnitX(iL)
set pL=bL-GetUnitY(iL)
set OL=SquareRoot(yL*yL+pL*pL)<=300.0
else
set OL=false
endif
if OL then
set uL=GetOwningPlayer(GetAttacker())
call SetUnitOwner(wL,uL,true)
if GetPlayerId(uL)!=PLAYER_NEUTRAL_AGGRESSIVE then
set lL=dC(GetUnitTypeId(wL))
set NK=yO[GetPlayerId(uL)]
set Wb[Qb]="when calling getForceId in CastleCapture, line 17"
set Qb=Qb+1
if kb[NK]==0 then
if NK==0 then
call m6("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 94")
else
call m6("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 94")
endif
endif
set SL=pO[NK]
set Qb=Qb-1
call ReplaceUnitBJ(wL,TC(lL,SL),bj_UNIT_STATE_METHOD_RELATIVE)
endif
call SetUnitState(wL,UNIT_STATE_LIFE,GetUnitState(wL,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,60.0)*0.01)
call SetUnitState(wL,UNIT_STATE_MANA,GetUnitState(wL,UNIT_STATE_MAX_MANA)*RMaxBJ(0.,0.0)*0.01)
call UnitAddAbility(wL,1093677896)
endif
endif
set Qb=Qb-1
set wL=null
set uL=null
set iL=null
endfunction
function k8 takes integer G8 returns nothing
local unit g8=GetConstructingStructure()
local player h8
local player F8
if GetUnitTypeId(g8)==1747990614 then
set h8=GetOwningPlayer(g8)
set F8=GetOwningPlayer(g8)
set yo[GetPlayerId(h8)]=yo[GetPlayerId(F8)]-1
endif
set g8=null
set h8=null
set F8=null
endfunction
function PSw takes rect QSw,real WSw,real ESw returns boolean
local boolean ZSw
local boolean USw
local boolean ISw
if WSw>GetRectMinX(QSw) then
set ZSw=WSw<GetRectMaxX(QSw)
else
set ZSw=false
endif
if ZSw then
set USw=ESw>GetRectMinY(QSw)
else
set USw=false
endif
if USw then
set ISw=ESw<GetRectMaxY(QSw)
else
set ISw=false
endif
return ISw
endfunction
function yOw takes integer SOw,string cOw returns rect
local integer oOw
local fogstate OOw
local integer lOw
local rect bOw
set Wb[Qb]=cOw
set Qb=Qb+1
set oOw=tl
set OOw=ConvertFogState(SOw)
set Wb[Qb]="when calling saveFogState in TypeCasting, line 130"
set Qb=Qb+1
if cb[oOw]==0 then
if oOw==0 then
call m6("Nullpointer exception when calling Table.saveFogState","when calling error in Table, line 168")
else
call m6("Called Table.saveFogState on invalid object.","when calling error in Table, line 168")
endif
endif
call SaveFogStateHandle(wl,oOw,0,OOw)
set Qb=Qb-1
set lOw=tl
set Wb[Qb]="when calling loadRect in TypeCasting, line 131"
set Qb=Qb+1
if cb[lOw]==0 then
if lOw==0 then
call m6("Nullpointer exception when calling Table.loadRect","when calling error in Table, line 147")
else
call m6("Called Table.loadRect on invalid object.","when calling error in Table, line 147")
endif
endif
set bOw=LoadRectHandle(wl,lOw,0)
set Qb=Qb-1-1
set Ef=bOw
set OOw=null
set bOw=null
return Ef
endfunction
function ltw takes integer utw,string rtw returns nothing
local unit stw
local real ttw
local real itw
local integer Stw
local integer ctw
local integer otw
local player Otw
set Wb[Qb]=rtw
set Qb=Qb+1
set stw=GetTriggerUnit()
if GetUnitTypeId(stw)==1747988569 then
set ttw=GetUnitX(stw)
set itw=GetUnitY(stw)
set utw=dl
set Wb[Qb]="when calling iterator in NoShipsNearRivers, line 11"
set Qb=Qb+1
set ctw=C8(utw,"when calling new_LLIterator in LinkedList, line 165")
set Qb=Qb-1
set Stw=ctw
loop
exitwhen no[fo[Stw]]==do[Stw]
set fo[Stw]=no[fo[Stw]]
if PSw(yOw(qo[fo[Stw]],"when calling rectFromIndex in NoShipsNearRivers, line 11"),ttw,itw) then
set Wb[Qb]="when calling alloc_Closure in NoShipsNearRivers, line 14"
set Qb=Qb+1
if Pl==0 then
if Al<32768 then
set Al=Al+1
set otw=Al
set Dl[otw]=649
else
call m6("Out of memory: Could not create Closure.","when calling error in NoShipsNearRivers, line 14")
set otw=0
endif
else
set Pl=Pl-1
set otw=Il[Pl]
set Dl[otw]=649
endif
set Qb=Qb-1
set cO[otw]=stw
set rtw="when calling doAfter in NoShipsNearRivers, line 14"
set Wb[Qb]="when calling doAfter in NoShipsNearRivers, line 14"
set Qb=Qb+1
call Wyw(otw,0.01,"when calling start in ClosureTimers, line 15")
set Qb=Qb-1
set Otw=GetOwningPlayer(stw)
set Wb[Qb]="when calling attentionToPlayer in NoShipsNearRivers, line 16"
set Qb=Qb+1
call DisplayTimedTextToPlayer(Otw,0.,0.,10.0,Vww(Otw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(Otw,0.,0.,10.0,"You cannot build shipyards near rivers")
set Qb=Qb-1
endif
endloop
set Wb[Qb]="when calling close in NoShipsNearRivers, line 11"
set Qb=Qb+1
if To[Stw]then
call jpw(Stw,"when calling LLIterator in LinkedList, line 450")
endif
set Qb=Qb-1
endif
set Qb=Qb-1
set stw=null
set Otw=null
endfunction
function mL takes integer GL,string gL returns nothing
local unit hL
local integer FL
local boolean kL
local integer jL
local integer xL
local unit vL
set Wb[Qb]=gL
set Qb=Qb+1
set hL=GetConstructedStructure()
set Wb[Qb]="when calling isCity in CityBuilded, line 10"
set Qb=Qb+1
set Wb[Qb]="when calling isCity in UnitTools, line 5"
set Qb=Qb+1
set GL=al
set FL=GetUnitTypeId(hL)
set Wb[Qb]="when calling has in City, line 423"
set Qb=Qb+1
if Tb[GL]==0 then
if GL==0 then
call m6("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call m6("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set kL=t9(GL,FL)
set Qb=Qb-1-1-1
if kL then
set vL=GetConstructedStructure()
set jL=yO[GetPlayerId(GetOwningPlayer(GetConstructedStructure()))]
set Wb[Qb]="when calling getForceId in CityBuilded, line 11"
set Qb=Qb+1
if kb[jL]==0 then
if jL==0 then
call m6("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 94")
else
call m6("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 94")
endif
endif
set xL=pO[jL]
set Qb=Qb-1
set QS[gS]=sN(vL,"New",xL,1,"when calling new_City in CityBuilded, line 11")
endif
set Qb=Qb-1
set hL=null
set vL=null
endfunction
function Npw takes integer Cpw,integer Vpw,string Bpw returns nothing
set Wb[Qb]=Bpw
set Qb=Qb+1
if kb[Cpw]==0 then
if Cpw==0 then
call m6("Nullpointer exception when calling PlayerStats.setSelectedCityId","when calling error in PlayerStats, line 88")
else
call m6("Called PlayerStats.setSelectedCityId on invalid object.","when calling error in PlayerStats, line 88")
endif
endif
set Wb[Qb]="when calling setSelectedCityId in PlayerStats, line 88"
set Qb=Qb+1
if Vpw>=0 and Vpw<gS then
set aO[Cpw]=Vpw
set Wb[Qb]="when calling refreshMultiboardCity in PlayerStats, line 91"
set Qb=Qb+1
if kb[Cpw]==0 then
if Cpw==0 then
call m6("Nullpointer exception when calling PlayerStats.refreshMultiboardCity","when calling error in PlayerStats, line 43")
else
call m6("Called PlayerStats.refreshMultiboardCity on invalid object.","when calling error in PlayerStats, line 43")
endif
endif
call hiw(Cpw,"when calling refreshMultiboardCity in PlayerStats, line 43")
set Qb=Qb-1
endif
set Qb=Qb-1-1
endfunction
function sX takes integer NL,string ML returns nothing
local unit wX
local integer uX
local boolean rX
set Wb[Qb]=ML
set Qb=Qb+1
set wX=GetTriggerUnit()
set Wb[Qb]="when calling isCity in CityManage, line 10"
set Qb=Qb+1
set Wb[Qb]="when calling isCity in UnitTools, line 5"
set Qb=Qb+1
set uX=al
set NL=GetUnitTypeId(wX)
set Wb[Qb]="when calling has in City, line 423"
set Qb=Qb+1
if Tb[uX]==0 then
if uX==0 then
call m6("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call m6("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set rX=t9(uX,NL)
set Qb=Qb-1-1-1
if rX then
call Npw(yO[GetPlayerId(GetTriggerPlayer())],WC(GetTriggerUnit(),"when calling getCityId in CityManage, line 11"),"when calling setSelectedCityId in CityManage, line 11")
endif
set Qb=Qb-1
set wX=null
endfunction
function UOw takes unit vOw,unit mOw returns real
local real QOw=GetUnitX(vOw)
local real WOw=GetUnitY(vOw)
local real EOw=QOw-GetUnitX(mOw)
local real ZOw=WOw-GetUnitY(mOw)
return SquareRoot(EOw*EOw+ZOw*ZOw)
endfunction
function vSw takes integer bSw,string ySw returns nothing
local unit pSw
local player eSw
local group qSw
local integer aSw
local boolean nSw
local location dSw
local group fSw
local unit RSw
local integer TSw
local boolean YSw
local integer GSw
local integer gSw
local boolean hSw
local integer FSw
local boolean kSw
local boolean jSw
local boolean xSw
set Wb[Qb]=ySw
set Qb=Qb+1
set pSw=GetTriggerUnit()
set bSw=GetUnitTypeId(pSw)
set aSw=kO
set Wb[Qb]="when calling has in RangeChecks, line 13"
set Qb=Qb+1
if Tb[aSw]==0 then
if aSw==0 then
call m6("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call m6("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set nSw=t9(aSw,bSw)
set Qb=Qb-1
if nSw then
set eSw=GetOwningPlayer(pSw)
set dSw=GetUnitLoc(pSw)
set fSw=CreateGroup()
call GroupEnumUnitsInRangeOfLoc(fSw,dSw,3000.0,null)
call DestroyBoolExpr(null)
set so=CreateGroup()
call ForGroup(fSw,gf)
set qSw=so
loop
exitwhen FirstOfGroup(qSw)==null
set RSw=FirstOfGroup(qSw)
call GroupRemoveUnit(qSw,RSw)
if GetOwningPlayer(RSw)==eSw and RSw!=pSw then
if GetUnitTypeId(RSw)==bSw and UOw(RSw,pSw)<=1500 then
set jSw=true
else
set TSw=ql
set Wb[Qb]="when calling has in RangeChecks, line 20"
set Qb=Qb+1
if Tb[TSw]==0 then
if TSw==0 then
call m6("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call m6("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set YSw=t9(TSw,bSw)
set Qb=Qb-1
if YSw then
set GSw=ql
set gSw=GetUnitTypeId(RSw)
set Wb[Qb]="when calling has in RangeChecks, line 20"
set Qb=Qb+1
if Tb[GSw]==0 then
if GSw==0 then
call m6("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call m6("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set hSw=t9(GSw,gSw)
set Qb=Qb-1
set kSw=hSw
else
set kSw=false
endif
set jSw=kSw
endif
set xSw=jSw
else
set xSw=false
endif
if xSw then
set Wb[Qb]="when calling alloc_Closure in RangeChecks, line 22"
set Qb=Qb+1
if Pl==0 then
if Al<32768 then
set Al=Al+1
set FSw=Al
set Dl[FSw]=652
else
call m6("Out of memory: Could not create Closure.","when calling error in RangeChecks, line 22")
set FSw=0
endif
else
set Pl=Pl-1
set FSw=Il[Pl]
set Dl[FSw]=652
endif
set Qb=Qb-1
set jO[FSw]=pSw
set Wb[Qb]="when calling doAfter in RangeChecks, line 22"
set Qb=Qb+1
call Wyw(FSw,0.01,"when calling start in ClosureTimers, line 15")
set Qb=Qb-1
if bSw==1747988557 then
set Wb[Qb]="when calling attentionToPlayer in RangeChecks, line 26"
set Qb=Qb+1
call DisplayTimedTextToPlayer(eSw,0.,0.,10.0,Vww(eSw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(eSw,0.,0.,10.0,"You cannot build settlements too close to each other.")
set Qb=Qb-1
elseif bSw==1747989075 then
set Wb[Qb]="when calling attentionToPlayer in RangeChecks, line 28"
set Qb=Qb+1
call DisplayTimedTextToPlayer(eSw,0.,0.,10.0,Vww(eSw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(eSw,0.,0.,10.0,"You cannot build churches too close to each other.")
set Qb=Qb-1
elseif bSw==1747990102 then
set Wb[Qb]="when calling attentionToPlayer in RangeChecks, line 30"
set Qb=Qb+1
call DisplayTimedTextToPlayer(eSw,0.,0.,10.0,Vww(eSw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(eSw,0.,0.,10.0,"You cannot build churches too close to each other.")
set Qb=Qb-1
elseif bSw==1747988785 then
set Wb[Qb]="when calling attentionToPlayer in RangeChecks, line 32"
set Qb=Qb+1
call DisplayTimedTextToPlayer(eSw,0.,0.,10.0,Vww(eSw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(eSw,0.,0.,10.0,"You cannot build churches too close to each other.")
set Qb=Qb-1
elseif bSw==1747989839 then
set Wb[Qb]="when calling attentionToPlayer in RangeChecks, line 34"
set Qb=Qb+1
call DisplayTimedTextToPlayer(eSw,0.,0.,10.0,Vww(eSw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(eSw,0.,0.,10.0,"You cannot build mosques too close to each other.")
set Qb=Qb-1
elseif bSw==1747989059 then
set ySw="when calling attentionToPlayer in RangeChecks, line 36"
set Wb[Qb]="when calling attentionToPlayer in RangeChecks, line 36"
set Qb=Qb+1
call DisplayTimedTextToPlayer(eSw,0.,0.,10.0,Vww(eSw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(eSw,0.,0.,10.0,"You cannot build castles too close to each other.")
set Qb=Qb-1
elseif bSw==1747989331 then
set Wb[Qb]="when calling attentionToPlayer in RangeChecks, line 38"
set Qb=Qb+1
call DisplayTimedTextToPlayer(eSw,0.,0.,10.0,Vww(eSw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(eSw,0.,0.,10.0,"You cannot build castles too close to each other.")
set Qb=Qb-1
elseif bSw==1747990351 then
set Wb[Qb]="when calling attentionToPlayer in RangeChecks, line 40"
set Qb=Qb+1
call DisplayTimedTextToPlayer(eSw,0.,0.,10.0,Vww(eSw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(eSw,0.,0.,10.0,"You cannot build castles too close to each other.")
set Qb=Qb-1
elseif bSw==1747990353 then
set Wb[Qb]="when calling attentionToPlayer in RangeChecks, line 42"
set Qb=Qb+1
call DisplayTimedTextToPlayer(eSw,0.,0.,10.0,Vww(eSw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(eSw,0.,0.,10.0,"You cannot build castles too close to each other.")
set Qb=Qb-1
elseif bSw==1747988568 then
set Wb[Qb]="when calling attentionToPlayer in RangeChecks, line 44"
set Qb=Qb+1
call DisplayTimedTextToPlayer(eSw,0.,0.,10.0,Vww(eSw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(eSw,0.,0.,10.0,"You cannot build inns too close to each other.")
set Qb=Qb-1
elseif bSw==1747990341 then
set Wb[Qb]="when calling attentionToPlayer in RangeChecks, line 46"
set Qb=Qb+1
call DisplayTimedTextToPlayer(eSw,0.,0.,10.0,Vww(eSw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(eSw,0.,0.,10.0,"You cannot build inns too close to each other.")
set Qb=Qb-1
endif
exitwhen true
endif
endloop
call GroupClear(qSw)
call DestroyGroup(qSw)
endif
set Qb=Qb-1
set pSw=null
set eSw=null
set qSw=null
set dSw=null
set fSw=null
set RSw=null
endfunction
function Zww takes player vww,string mww returns string
local integer Qww
local integer Www
local integer Eww
set Wb[Qb]=mww
set Qb=Qb+1
set Www=yO[GetPlayerId(vww)]
set Wb[Qb]="when calling getForceId in Messages, line 21"
set Qb=Qb+1
if kb[Www]==0 then
if Www==0 then
call m6("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 94")
else
call m6("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 94")
endif
endif
set Eww=pO[Www]
set Qb=Qb-1
set Qww=GetRandomInt(0,2)
if Eww==0 then
set mww=PO[Qww]
elseif Eww==1 then
set mww=AO[Qww]
elseif Eww==2 then
set mww=DO[Qww]
elseif Eww==3 then
set mww=HO[Qww]
else
set mww="Note:"
endif
set Qb=Qb-1
return "|cff00ccff"+mww+"|r"
endfunction
function tB takes integer wB,integer uB,string rB returns nothing
local player sB
set Wb[Qb]=rB
set Qb=Qb+1
if Qo-wc[wB]>=hS then
set wc[wB]=Qo
set BS[wB]=BS[wB]-xS[MS[wB]]
set BS[wB]=BS[wB]+xS[uB]
set MS[wB]=uB
else
set sB=dO[HS[wB]]
set Wb[Qb]="when calling noteToPlayer in City, line 258"
set Qb=Qb+1
call DisplayTimedTextToPlayer(sB,0.,0.,10.0,Zww(sB,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(sB,0.,0.,10.0,"Wait 1 turn to be able to change tax level.")
set Qb=Qb-1
endif
set Qb=Qb-1
set sB=null
endfunction
function yow takes integer uow,string row returns nothing
local integer sow
local integer tow
local integer iow
local boolean Sow
local unit cow
local integer oow
local integer Oow
local boolean low
local integer bow
set Wb[Qb]=row
set Qb=Qb+1
set tow=uS
set iow=GetSpellAbilityId()
set Wb[Qb]="when calling has in Taxation, line 7"
set Qb=Qb+1
if Tb[tow]==0 then
if tow==0 then
call m6("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call m6("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set Sow=t9(tow,iow)
set Qb=Qb-1
if Sow then
set cow=GetSpellTargetUnit()
set Wb[Qb]="when calling isCity in Taxation, line 8"
set Qb=Qb+1
set oow=al
set Oow=GetUnitTypeId(cow)
set Wb[Qb]="when calling has in City, line 423"
set Qb=Qb+1
if Tb[oow]==0 then
if oow==0 then
call m6("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call m6("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set low=t9(oow,Oow)
set Qb=Qb-1-1
if low then
if GetOwningPlayer(GetSpellTargetUnit())==GetOwningPlayer(GetSpellAbilityUnit()) then
set sow=0
set uow=GetSpellAbilityId()
if uow==1093677642 then
set sow=1
elseif uow==1093677641 then
set sow=0
elseif uow==1093677640 then
set sow=2
elseif uow==1093678155 then
set sow=3
endif
set bow=QS[WC(GetSpellTargetUnit(),"when calling getCityId in Taxation, line 20")]
set Wb[Qb]="when calling changeTaxLevel in Taxation, line 20"
set Qb=Qb+1
if Ql[bow]==0 then
if bow==0 then
call m6("Nullpointer exception when calling City.changeTaxLevel","when calling error in City, line 249")
else
call m6("Called City.changeTaxLevel on invalid object.","when calling error in City, line 249")
endif
endif
call tB(bow,sow,"when calling changeTaxLevel in City, line 249")
set Qb=Qb-1
endif
endif
endif
set Qb=Qb-1
set cow=null
endfunction
function Now takes integer Kow,string Low returns unit
local integer Xow
local fogstate Cow
local integer Vow
local unit Bow
set Wb[Qb]=Low
set Qb=Qb+1
set Xow=tl
set Cow=ConvertFogState(Kow)
set Wb[Qb]="when calling saveFogState in TypeCasting, line 46"
set Qb=Qb+1
if cb[Xow]==0 then
if Xow==0 then
call m6("Nullpointer exception when calling Table.saveFogState","when calling error in Table, line 168")
else
call m6("Called Table.saveFogState on invalid object.","when calling error in Table, line 168")
endif
endif
call SaveFogStateHandle(wl,Xow,0,Cow)
set Qb=Qb-1
set Vow=tl
set Wb[Qb]="when calling loadUnit in TypeCasting, line 47"
set Qb=Qb+1
if cb[Vow]==0 then
if Vow==0 then
call m6("Nullpointer exception when calling Table.loadUnit","when calling error in Table, line 75")
else
call m6("Called Table.loadUnit on invalid object.","when calling error in Table, line 75")
endif
endif
set Bow=LoadUnitHandle(wl,Vow,0)
set Qb=Qb-1-1
set Qf=Bow
set Cow=null
set Bow=null
return Qf
endfunction
function N6 takes integer L6,integer X6,string C6 returns nothing
local hashtable V6
local integer B6
set Wb[Qb]=C6
set Qb=Qb+1
set V6=So
set Wb[Qb]="when calling count in HashList, line 22"
set Qb=Qb+1
if sb[L6]==0 then
if L6==0 then
call m6("Nullpointer exception when calling HashList.count","when calling error in HashList, line 15")
else
call m6("Called HashList.count on invalid object.","when calling error in HashList, line 15")
endif
endif
set B6=LoadInteger(So,L6,X6)
set Qb=Qb-1
call SaveInteger(V6,L6,X6,B6-1)
set Qb=Qb-1
set V6=null
endfunction
function i7 takes integer M6,integer w7,string u7 returns nothing
local integer r7
local integer s7
local integer t7
set Wb[Qb]=u7
set Qb=Qb+1
set t7=LoadInteger(io,M6,w7)
set Wb[Qb]="when calling decrOccurences in HashList, line 54"
set Qb=Qb+1
if sb[M6]==0 then
if M6==0 then
call m6("Nullpointer exception when calling HashList.decrOccurences","when calling error in HashList, line 21")
else
call m6("Called HashList.decrOccurences on invalid object.","when calling error in HashList, line 21")
endif
endif
call N6(M6,t7,"when calling decrOccurences in HashList, line 21")
set Qb=Qb-1
set r7=w7
set s7=co[M6]
loop
exitwhen r7>s7
call SaveInteger(io,M6,r7,LoadInteger(io,M6,r7+1))
set r7=r7+1
endloop
set co[M6]=co[M6]-1
set Qb=Qb-1
endfunction
function W7 takes integer T7,integer Y7,string G7 returns nothing
local integer g7
local integer h7
local hashtable F7
local integer k7
local integer j7
local hashtable x7
local integer v7
local hashtable m7
local integer Q7
set Wb[Qb]=G7
set Qb=Qb+1
set F7=Oo
set Wb[Qb]="when calling get in HashSet, line 22"
set Qb=Qb+1
if sb[T7]==0 then
if T7==0 then
call m6("Nullpointer exception when calling HashList.get","when calling error in HashList, line 79")
else
call m6("Called HashList.get on invalid object.","when calling error in HashList, line 79")
endif
endif
set k7=LoadInteger(io,T7,Y7)
set Qb=Qb-1
call RemoveSavedInteger(F7,T7,k7)
set g7=Y7+1
set Wb[Qb]="when calling size in HashSet, line 23"
set Qb=Qb+1
if sb[T7]==0 then
if T7==0 then
call m6("Nullpointer exception when calling HashList.size","when calling error in HashList, line 67")
else
call m6("Called HashList.size on invalid object.","when calling error in HashList, line 67")
endif
endif
set j7=co[T7]
set Qb=Qb-1
set h7=j7
loop
exitwhen g7>h7
set x7=Oo
set Wb[Qb]="when calling get in HashSet, line 24"
set Qb=Qb+1
if sb[T7]==0 then
if T7==0 then
call m6("Nullpointer exception when calling HashList.get","when calling error in HashList, line 79")
else
call m6("Called HashList.get on invalid object.","when calling error in HashList, line 79")
endif
endif
set v7=LoadInteger(io,T7,g7)
set Qb=Qb-1
set m7=Oo
set Wb[Qb]="when calling get in HashSet, line 24"
set Qb=Qb+1
if sb[T7]==0 then
if T7==0 then
call m6("Nullpointer exception when calling HashList.get","when calling error in HashList, line 79")
else
call m6("Called HashList.get on invalid object.","when calling error in HashList, line 79")
endif
endif
set Q7=LoadInteger(io,T7,g7)
set Qb=Qb-1
call SaveInteger(x7,T7,v7,LoadInteger(m7,T7,Q7)-1)
set g7=g7+1
endloop
call i7(T7,Y7,"when calling removeAt in HashSet, line 25")
set Qb=Qb-1
set F7=null
set x7=null
set m7=null
endfunction
function A7 takes integer E7,integer Z7,string U7 returns nothing
local integer I7
local integer P7
set Wb[Qb]=U7
set Qb=Qb+1
set Wb[Qb]="when calling count in HashSet, line 17"
set Qb=Qb+1
if sb[E7]==0 then
if E7==0 then
call m6("Nullpointer exception when calling HashList.count","when calling error in HashList, line 15")
else
call m6("Called HashList.count on invalid object.","when calling error in HashList, line 15")
endif
endif
set I7=LoadInteger(So,E7,Z7)
set Qb=Qb-1
if I7>0 then
set P7=LoadInteger(Oo,E7,Z7)
set Wb[Qb]="when calling removeAt in HashSet, line 18"
set Qb=Qb+1
if sb[E7]==0 then
if E7==0 then
call m6("Nullpointer exception when calling HashSet.removeAt","when calling error in HashSet, line 21")
else
call m6("Called HashSet.removeAt on invalid object.","when calling error in HashSet, line 21")
endif
endif
call W7(E7,P7,"when calling removeAt in HashSet, line 21")
set Qb=Qb-1
endif
set Qb=Qb-1
endfunction
function Hyw takes integer Pyw,integer Ayw,string Dyw returns nothing
set Wb[Qb]=Dyw
set Qb=Qb+1
if sb[Pyw]==0 then
if Pyw==0 then
call m6("Nullpointer exception when calling HashList.removeAt","when calling error in HashList, line 53")
else
call m6("Called HashList.removeAt on invalid object.","when calling error in HashList, line 53")
endif
endif
if sb[Pyw]<=690 then
call i7(Pyw,Ayw,"when calling removeAt in HashList, line 53")
else
call W7(Pyw,Ayw,"when calling removeAt in HashList, line 53")
endif
set Qb=Qb-1
endfunction
function Nyw takes integer Jyw,integer Kyw,string Lyw returns nothing
local integer Xyw
local integer Cyw
local integer Vyw
local integer Byw
set Wb[Qb]=Lyw
set Qb=Qb+1
if sb[Jyw]==0 then
if Jyw==0 then
call m6("Nullpointer exception when calling HashList.remove","when calling error in HashList, line 60")
else
call m6("Called HashList.remove on invalid object.","when calling error in HashList, line 60")
endif
endif
if sb[Jyw]<=690 then
set Xyw=Jyw
set Cyw=Kyw
set Wb[Qb]="when calling remove in HashList, line 60"
set Qb=Qb+1
set Vyw=0
set Byw=co[Jyw]-1
loop
exitwhen Vyw>Byw
if Cyw==LoadInteger(io,Xyw,Vyw) then
call Hyw(Xyw,Vyw,"when calling removeAt in HashList, line 63")
exitwhen true
endif
set Vyw=Vyw+1
endloop
set Qb=Qb-1
else
call A7(Jyw,Kyw,"when calling remove in HashList, line 60")
endif
set Qb=Qb-1
endfunction
function f7 takes integer q7,integer a7,string n7 returns nothing
local boolean d7
set Wb[Qb]=n7
set Qb=Qb+1
set Wb[Qb]="when calling remove in HashMap, line 54"
set Qb=Qb+1
set Wb[Qb]="when calling removeInt in HashMap, line 24"
set Qb=Qb+1
if cb[q7]==0 then
if q7==0 then
call m6("Nullpointer exception when calling Table.removeInt","when calling error in Table, line 24")
else
call m6("Called Table.removeInt on invalid object.","when calling error in Table, line 24")
endif
endif
call RemoveSavedInteger(wl,q7,a7)
set Qb=Qb-1-1
set Wb[Qb]="when calling hasKey in HashMap, line 55"
set Qb=Qb+1
if cb[q7]==0 then
if q7==0 then
call m6("Nullpointer exception when calling IterableMap.hasKey","when calling error in HashMap, line 75")
else
call m6("Called IterableMap.hasKey on invalid object.","when calling error in HashMap, line 75")
endif
endif
set Wb[Qb]="when calling hasKey in HashMap, line 75"
set Qb=Qb+1
set d7=spw(oo[q7],a7,"when calling has in HashMap, line 76")
set Qb=Qb-1-1
if d7 then
call Nyw(oo[q7],a7,"when calling remove in HashMap, line 56")
endif
set Qb=Qb-1
endfunction
function Ypw takes integer fpw,integer Rpw,string Tpw returns nothing
set Wb[Qb]=Tpw
set Qb=Qb+1
if cb[fpw]==0 then
if fpw==0 then
call m6("Nullpointer exception when calling HashMap.remove","when calling error in HashMap, line 23")
else
call m6("Called HashMap.remove on invalid object.","when calling error in HashMap, line 23")
endif
endif
if cb[fpw]<=726 then
set Wb[Qb]="when calling remove in HashMap, line 23"
set Qb=Qb+1
set Wb[Qb]="when calling removeInt in HashMap, line 24"
set Qb=Qb+1
if cb[fpw]==0 then
if fpw==0 then
call m6("Nullpointer exception when calling Table.removeInt","when calling error in Table, line 24")
else
call m6("Called Table.removeInt on invalid object.","when calling error in Table, line 24")
endif
endif
call RemoveSavedInteger(wl,fpw,Rpw)
set Qb=Qb-1-1
else
call f7(fpw,Rpw,"when calling remove in HashMap, line 23")
endif
set Qb=Qb-1
endfunction
function opw takes integer tpw,integer ipw,string Spw returns boolean
local boolean cpw
set Wb[Qb]=Spw
set Qb=Qb+1
if cb[tpw]==0 then
if tpw==0 then
call m6("Nullpointer exception when calling HashMap.has","when calling error in HashMap, line 11")
else
call m6("Called HashMap.has on invalid object.","when calling error in HashMap, line 11")
endif
endif
set Wb[Qb]="when calling has in HashMap, line 11"
set Qb=Qb+1
set Wb[Qb]="when calling hasInt in HashMap, line 12"
set Qb=Qb+1
if cb[tpw]==0 then
if tpw==0 then
call m6("Nullpointer exception when calling Table.hasInt","when calling error in Table, line 9")
else
call m6("Called Table.hasInt on invalid object.","when calling error in Table, line 9")
endif
endif
set cpw=HaveSavedInteger(wl,tpw,ipw)
set Qb=Qb-1-1-1
return cpw
endfunction
function yww takes integer N0w,string M0w returns nothing
local integer www
local integer uww
local real rww
local real sww
local unit tww
local integer iww
local integer Sww
local boolean cww_2
local integer oww
local integer Oww
local integer lww
local integer bww
set Wb[Qb]=M0w
set Qb=Qb+1
set iww=Do
set Sww=GetUnitTypeId(GetOrderedUnit())
set Wb[Qb]="when calling has in MassControl, line 33"
set Qb=Qb+1
if Tb[iww]==0 then
if iww==0 then
call m6("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call m6("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set cww_2=t9(iww,Sww)
set Qb=Qb-1
if cww_2 then
if opw(Po,GetHandleId(GetOrderedUnit()),"when calling has in MassControl, line 34") then
set oww=dpw(Po,GetHandleId(GetOrderedUnit()),"when calling get in MassControl, line 35")
set Wb[Qb]="when calling size in MassControl, line 35"
set Qb=Qb+1
if Tb[oww]==0 then
if oww==0 then
call m6("Nullpointer exception when calling LinkedList.size","when calling error in LinkedList, line 135")
else
call m6("Called LinkedList.size on invalid object.","when calling error in LinkedList, line 135")
endif
endif
set Oww=Go[oww]
set Qb=Qb-1
call Nww(I2S(Oww))
set www=dpw(Po,GetHandleId(GetOrderedUnit()),"when calling get in MassControl, line 36")
set uww=GetIssuedOrderId()
set rww=GetOrderPointX()
set sww=GetOrderPointY()
set Wb[Qb]="when calling iterator in MassControl, line 39"
set Qb=Qb+1
set lww=C8(www,"when calling new_LLIterator in LinkedList, line 165")
set Qb=Qb-1
set N0w=lww
loop
exitwhen no[fo[N0w]]==do[N0w]
set fo[N0w]=no[fo[N0w]]
set tww=Now(qo[fo[N0w]],"when calling unitFromIndex in MassControl, line 39")
set Wb[Qb]="when calling alloc_Closure in MassControl, line 40"
set Qb=Qb+1
if Pl==0 then
if Al<32768 then
set Al=Al+1
set bww=Al
set Dl[bww]=647
else
call m6("Out of memory: Could not create Closure.","when calling error in MassControl, line 40")
set bww=0
endif
else
set Pl=Pl-1
set bww=Il[Pl]
set Dl[bww]=647
endif
set Qb=Qb-1
set Lo[bww]=tww
set Xo[bww]=uww
set Co[bww]=rww
set Vo[bww]=sww
set M0w="when calling doAfter in MassControl, line 40"
set Wb[Qb]="when calling doAfter in MassControl, line 40"
set Qb=Qb+1
call Wyw(bww,0.01,"when calling start in ClosureTimers, line 15")
set Qb=Qb-1
call Nww(" issued = "+GetUnitName(tww))
endloop
set Wb[Qb]="when calling close in MassControl, line 39"
set Qb=Qb+1
if To[N0w]then
call jpw(N0w,"when calling LLIterator in LinkedList, line 450")
endif
set Qb=Qb-1
call Ypw(Po,GetHandleId(GetOrderedUnit()),"when calling remove in MassControl, line 44")
endif
endif
set Qb=Qb-1
set tww=null
endfunction
function tyw takes integer ryw,string syw returns nothing
set Wb[Qb]=syw
set Qb=Qb+1
if hl[ryw]==0 then
if ryw==0 then
call m6("Nullpointer exception when calling EventListener.onEvent","when calling error in ClosureEvents, line 108")
else
call m6("Called EventListener.onEvent on invalid object.","when calling error in ClosureEvents, line 108")
endif
endif
if hl[ryw]<=669 then
if hl[ryw]<=665 then
if hl[ryw]<=663 then
if hl[ryw]<=662 then
call eL(ryw,"when calling CastleCapture_closure_impl in ClosureEvents, line 108")
else
call mL(ryw,"when calling CityBuilded_closure_impl in ClosureEvents, line 108")
endif
elseif hl[ryw]<=664 then
call sX(ryw,"when calling CityManage_closure_impl in ClosureEvents, line 108")
else
call DX(ryw,"when calling CityManage_closure_impl in ClosureEvents, line 108")
endif
elseif hl[ryw]<=667 then
if hl[ryw]<=666 then
call c8(ryw)
else
call e8(ryw,"when calling LimitEncampments_closure_impl in ClosureEvents, line 108")
endif
elseif hl[ryw]<=668 then
call k8(ryw)
else
call E8(ryw,"when calling LimitMercenaryCamps_closure_impl in ClosureEvents, line 108")
endif
elseif hl[ryw]<=673 then
if hl[ryw]<=671 then
if hl[ryw]<=670 then
call b0w(ryw)
else
call D0w(ryw,"when calling MassControl_closure_impl in ClosureEvents, line 108")
endif
elseif hl[ryw]<=672 then
call yww(ryw,"when calling MassControl_closure_impl in ClosureEvents, line 108")
else
call ltw(ryw,"when calling NoShipsNearRivers_closure_impl in ClosureEvents, line 108")
endif
elseif hl[ryw]<=675 then
if hl[ryw]<=674 then
call Gtw(ryw,"when calling OnPlayerLeave_closure_impl in ClosureEvents, line 108")
else
call vSw(ryw,"when calling RangeChecks_closure_impl in ClosureEvents, line 108")
endif
elseif hl[ryw]<=676 then
call yow(ryw,"when calling Taxation_closure_impl in ClosureEvents, line 108")
else
call Hlw(ryw,"when calling Upkeep_closure_impl in ClosureEvents, line 108")
endif
set Qb=Qb-1
endfunction
function UM takes string jM returns nothing
local unit xM
local integer vM
local integer mM
local integer QM
local eventid WM
local integer EM
local boolean ZM
set Wb[Qb]=jM
set Qb=Qb+1
set xM=GetTriggerUnit()
set WM=GetTriggerEventId()
set Wb[Qb]="when calling toIntId in ClosureEvents, line 169"
set Qb=Qb+1
set EM=oc[GetHandleId(WM)]
if EM==0 then
set EM=lM(WM,"when calling registerEventId in ClosureEvents, line 228")
endif
set Qb=Qb-1
set vM=EM
if xM!=null then
set ZM=GetUnitUserData(xM)>0
else
set ZM=false
endif
if ZM then
if pc[GetUnitUserData(xM)]!=0 then
set mM=pc[GetUnitUserData(xM)]
loop
exitwhen mM==0
if ec[mM]==vM then
call tyw(mM,"when calling onEvent in ClosureEvents, line 176")
endif
set mM=qc[mM]
endloop
endif
endif
if yc[vM]!=0 then
set QM=yc[vM]
loop
exitwhen QM==0
call tyw(QM,"when calling onEvent in ClosureEvents, line 182")
set QM=qc[QM]
endloop
endif
set Qb=Qb-1
set xM=null
set WM=null
endfunction
function Onw takes nothing returns nothing
set Qb=0
set Wb[Qb]="ClosureEvents, line 286"
set Qb=Qb+1
call UM("when calling generalEventCallback in ClosureEvents, line 286")
set Qb=Qb-1
endfunction
function ov takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function Ov takes nothing returns boolean
if not ov() then
return false
endif
return true
endfunction
function Ox takes nothing returns nothing
local player Nj=GetOwningPlayer(GetKillingUnit())
local playerstate Mj=PLAYER_STATE_RESOURCE_GOLD
local playerstate wx
local playerstate ux
local player rx
local force sx
local location tx
local real ix
local real Sx
local player cx
local force ox
if Mj==PLAYER_STATE_RESOURCE_GOLD then
set wx=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(Nj,wx,GetPlayerState(Nj,wx)+500)
elseif Mj==PLAYER_STATE_RESOURCE_LUMBER then
set ux=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(Nj,ux,GetPlayerState(Nj,ux)+500)
endif
call SetPlayerState(Nj,Mj,GetPlayerState(Nj,Mj)+500)
set rx=GetOwningPlayer(GetKillingUnit())
set sx=CreateForce()
call ForceAddPlayer(sx,rx)
if IsPlayerInForce(GetLocalPlayer(),sx) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_083")
endif
set y=GetUnitLoc(GetDyingUnit())
set cx=GetOwningPlayer(GetDyingUnit())
set ox=CreateForce()
call ForceAddPlayer(ox,cx)
set tx=y
set ix=GetLocationX(tx)
set Sx=GetLocationY(tx)
if IsPlayerInForce(GetLocalPlayer(),ox) then
call PingMinimap(ix,Sx,2.00)
endif
call RemoveLocation(y)
set Nj=null
set Mj=null
set wx=null
set ux=null
set rx=null
set sx=null
set tx=null
set cx=null
set ox=null
endfunction
function PE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989570,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989556,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989559,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989557,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989560,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989573,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989574,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651841,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651833,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651832,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989582,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990097,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989812,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990098,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990099,0)
endfunction
function PF takes nothing returns nothing
local player kF=GetOwningPlayer(GetSpellTargetUnit())
local playerstate jF=PLAYER_STATE_RESOURCE_GOLD
local playerstate xF
local playerstate vF
local player mF
local force QF
local location WF
local real EF
local real ZF
local player UF
local force IF
if jF==PLAYER_STATE_RESOURCE_GOLD then
set xF=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(kF,xF,GetPlayerState(kF,xF)+500)
elseif jF==PLAYER_STATE_RESOURCE_LUMBER then
set vF=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(kF,vF,GetPlayerState(kF,vF)+500)
endif
call SetPlayerState(kF,jF,GetPlayerState(kF,jF)+500)
call RemoveUnit(GetSpellAbilityUnit())
set mF=GetOwningPlayer(GetSpellTargetUnit())
set QF=CreateForce()
call ForceAddPlayer(QF,mF)
if IsPlayerInForce(GetLocalPlayer(),QF) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_1231")
endif
set y=GetUnitLoc(GetSpellTargetUnit())
set UF=GetOwningPlayer(GetSpellTargetUnit())
set IF=CreateForce()
call ForceAddPlayer(IF,UF)
set WF=y
set EF=GetLocationX(WF)
set ZF=GetLocationY(WF)
if IsPlayerInForce(GetLocalPlayer(),IF) then
call PingMinimap(EF,ZF,2.00)
endif
call RemoveLocation(y)
set kF=null
set jF=null
set xF=null
set vF=null
set mF=null
set QF=null
set WF=null
set UF=null
set IF=null
endfunction
function IG takes nothing returns boolean
if IsUnitType(GetEnumUnit(),UNIT_TYPE_STRUCTURE)!=false then
return false
endif
return true
endfunction
function PG takes nothing returns nothing
if IG() then
call SetUnitPositionLoc(GetEnumUnit(),c)
endif
endfunction
function IH takes nothing returns boolean
if GetUnitTypeId(GetConstructedStructure())!=1747989331 then
return false
endif
return true
endfunction
function PH takes nothing returns boolean
if not IH() then
return false
endif
return true
endfunction
function PP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990599,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990600,0)
endfunction
function PU takes nothing returns nothing
set s=bj_FORCE_ALL_PLAYERS
call ForForce(s,kq)
endfunction
function jsw takes string Dww returns boolean
local integer Hww
local integer Jww
local integer Kww
local integer Lww
local integer Xww
local integer Cww
local integer Vww_2
local integer Bww
local integer Nww_2
local integer Mww
local integer wuw
local integer uuw
local integer ruw
local integer suw
local integer tuw
local integer iuw
local integer Suw
local integer cuw
local integer ouw
local integer Ouw
local integer luw
local integer buw
local integer yuw
local integer puw
local integer euw
local integer quw
local integer auw
local integer nuw
local integer duw
local integer fuw
local integer Ruw
local integer Tuw
local integer Yuw
local integer Guw
local integer guw
local integer huw
local integer Fuw
local integer kuw
local integer juw
local integer xuw
local integer vuw
local integer muw
local integer Quw
local integer Wuw
local integer Euw
local integer Zuw
local integer Uuw
local integer Iuw
local integer Puw
local integer Auw
local integer Duw
local integer Huw
local integer Juw
local integer Kuw
local integer Luw
local integer Xuw
local integer Cuw
local integer Vuw
local integer Buw
local integer Nuw
local integer Muw
local integer wrw
local integer urw
local integer rrw
local integer srw
local integer trw
local integer irw
local integer Srw
local integer crw
local integer orw
local integer Orw
local integer lrw
local integer brw
local integer yrw
local integer prw
local integer erw
local integer qrw
local integer arw
local integer nrw
local integer drw
local integer frw
local integer Rrw
local integer Trw
local integer Yrw
local integer Grw
local integer grw
local integer hrw
local integer Frw
local integer krw
local integer jrw
local integer xrw
local integer vrw
local integer mrw
local integer Qrw
local integer Wrw
local integer Erw
local integer Zrw
local integer Urw
local integer Irw
local integer Prw
local integer Arw
local integer Drw
local integer Hrw
local integer Jrw
local integer Krw
local integer Lrw
local integer Xrw
local integer Crw
local integer Vrw
local integer Brw
local integer Nrw
local integer Mrw
local integer wsw
local integer usw
local integer rsw
local integer ssw
local integer tsw
local integer isw
local integer Ssw
local integer csw
local integer osw
local integer Osw
local integer lsw
local integer bsw
local integer ysw
local integer psw
local integer esw
local integer qsw
local integer asw
local integer nsw
local integer dsw
local integer fsw
local integer Rsw
local integer Tsw
local integer Ysw
local integer Gsw
local integer gsw
local integer hsw
local integer Fsw
local integer ksw
set Wb[Qb]=Dww
set Qb=Qb+1
set Hww=R2I(70)
set Jww=R2I(30)
set Kww=R2I(10)
set Lww=R2I(70)
set Xww=R2I(30)
set Cww=R2I(140)
set Wb[Qb]="when calling asList in Multiboards, line 23"
set Qb=Qb+1
set Vww_2=y9("when calling new_LinkedList in LinkedList, line 391")
call sew(Vww_2,Hww,"when calling add in LinkedList, line 393")
call sew(Vww_2,Jww,"when calling add in LinkedList, line 393")
call sew(Vww_2,Kww,"when calling add in LinkedList, line 393")
call sew(Vww_2,Lww,"when calling add in LinkedList, line 393")
call sew(Vww_2,Xww,"when calling add in LinkedList, line 393")
call sew(Vww_2,Cww,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set Bo[0]=Vww_2
set Bww=R2I(70)
set Nww_2=R2I(30)
set Mww=R2I(10)
set wuw=R2I(70)
set uuw=R2I(30)
set ruw=R2I(140)
set Wb[Qb]="when calling asList in Multiboards, line 24"
set Qb=Qb+1
set suw=y9("when calling new_LinkedList in LinkedList, line 391")
call sew(suw,Bww,"when calling add in LinkedList, line 393")
call sew(suw,Nww_2,"when calling add in LinkedList, line 393")
call sew(suw,Mww,"when calling add in LinkedList, line 393")
call sew(suw,wuw,"when calling add in LinkedList, line 393")
call sew(suw,uuw,"when calling add in LinkedList, line 393")
call sew(suw,ruw,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set Bo[1]=suw
set tuw=R2I(70)
set iuw=R2I(30)
set Suw=R2I(10)
set cuw=R2I(70)
set ouw=R2I(30)
set Ouw=R2I(140)
set Wb[Qb]="when calling asList in Multiboards, line 25"
set Qb=Qb+1
set luw=y9("when calling new_LinkedList in LinkedList, line 391")
call sew(luw,tuw,"when calling add in LinkedList, line 393")
call sew(luw,iuw,"when calling add in LinkedList, line 393")
call sew(luw,Suw,"when calling add in LinkedList, line 393")
call sew(luw,cuw,"when calling add in LinkedList, line 393")
call sew(luw,ouw,"when calling add in LinkedList, line 393")
call sew(luw,Ouw,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set Bo[2]=luw
set buw=R2I(2.5)
set yuw=R2I(2.5)
set puw=R2I(400)
set euw=R2I(2.5)
set quw=R2I(2.5)
set auw=R2I(2.5)
set Wb[Qb]="when calling asList in Multiboards, line 27"
set Qb=Qb+1
set nuw=y9("when calling new_LinkedList in LinkedList, line 391")
call sew(nuw,buw,"when calling add in LinkedList, line 393")
call sew(nuw,yuw,"when calling add in LinkedList, line 393")
call sew(nuw,puw,"when calling add in LinkedList, line 393")
call sew(nuw,euw,"when calling add in LinkedList, line 393")
call sew(nuw,quw,"when calling add in LinkedList, line 393")
call sew(nuw,auw,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set Bo[3]=nuw
set duw=R2I(70)
set fuw=R2I(30)
set Ruw=R2I(30)
set Tuw=R2I(10)
set Yuw=R2I(126)
set Guw=R2I(84.000007629)
set Wb[Qb]="when calling asList in Multiboards, line 28"
set Qb=Qb+1
set guw=y9("when calling new_LinkedList in LinkedList, line 391")
call sew(guw,duw,"when calling add in LinkedList, line 393")
call sew(guw,fuw,"when calling add in LinkedList, line 393")
call sew(guw,Ruw,"when calling add in LinkedList, line 393")
call sew(guw,Tuw,"when calling add in LinkedList, line 393")
call sew(guw,Yuw,"when calling add in LinkedList, line 393")
call sew(guw,Guw,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set Bo[4]=guw
set huw=R2I(70)
set Fuw=R2I(30)
set kuw=R2I(30)
set juw=R2I(10)
set xuw=R2I(126)
set vuw=R2I(84.000007629)
set Wb[Qb]="when calling asList in Multiboards, line 29"
set Qb=Qb+1
set muw=y9("when calling new_LinkedList in LinkedList, line 391")
call sew(muw,huw,"when calling add in LinkedList, line 393")
call sew(muw,Fuw,"when calling add in LinkedList, line 393")
call sew(muw,kuw,"when calling add in LinkedList, line 393")
call sew(muw,juw,"when calling add in LinkedList, line 393")
call sew(muw,xuw,"when calling add in LinkedList, line 393")
call sew(muw,vuw,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set Bo[5]=muw
set Quw=R2I(70)
set Wuw=R2I(30)
set Euw=R2I(30)
set Zuw=R2I(10)
set Uuw=R2I(126)
set Iuw=R2I(84.000007629)
set Wb[Qb]="when calling asList in Multiboards, line 30"
set Qb=Qb+1
set Puw=y9("when calling new_LinkedList in LinkedList, line 391")
call sew(Puw,Quw,"when calling add in LinkedList, line 393")
call sew(Puw,Wuw,"when calling add in LinkedList, line 393")
call sew(Puw,Euw,"when calling add in LinkedList, line 393")
call sew(Puw,Zuw,"when calling add in LinkedList, line 393")
call sew(Puw,Uuw,"when calling add in LinkedList, line 393")
call sew(Puw,Iuw,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set Bo[6]=Puw
set Auw=R2I(70)
set Duw=R2I(30)
set Huw=R2I(30)
set Juw=R2I(10)
set Kuw=R2I(126)
set Luw=R2I(84.000007629)
set Wb[Qb]="when calling asList in Multiboards, line 31"
set Qb=Qb+1
set Xuw=y9("when calling new_LinkedList in LinkedList, line 391")
call sew(Xuw,Auw,"when calling add in LinkedList, line 393")
call sew(Xuw,Duw,"when calling add in LinkedList, line 393")
call sew(Xuw,Huw,"when calling add in LinkedList, line 393")
call sew(Xuw,Juw,"when calling add in LinkedList, line 393")
call sew(Xuw,Kuw,"when calling add in LinkedList, line 393")
call sew(Xuw,Luw,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set Bo[7]=Xuw
set Cuw=R2I(70)
set Vuw=R2I(30)
set Buw=R2I(30)
set Nuw=R2I(10)
set Muw=R2I(126)
set wrw=R2I(84.000007629)
set Wb[Qb]="when calling asList in Multiboards, line 32"
set Qb=Qb+1
set urw=y9("when calling new_LinkedList in LinkedList, line 391")
call sew(urw,Cuw,"when calling add in LinkedList, line 393")
call sew(urw,Vuw,"when calling add in LinkedList, line 393")
call sew(urw,Buw,"when calling add in LinkedList, line 393")
call sew(urw,Nuw,"when calling add in LinkedList, line 393")
call sew(urw,Muw,"when calling add in LinkedList, line 393")
call sew(urw,wrw,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set Bo[8]=urw
set rrw=R2I(70)
set srw=R2I(30)
set trw=R2I(30)
set irw=R2I(10)
set Srw=R2I(126)
set crw=R2I(84.000007629)
set Wb[Qb]="when calling asList in Multiboards, line 33"
set Qb=Qb+1
set orw=y9("when calling new_LinkedList in LinkedList, line 391")
call sew(orw,rrw,"when calling add in LinkedList, line 393")
call sew(orw,srw,"when calling add in LinkedList, line 393")
call sew(orw,trw,"when calling add in LinkedList, line 393")
call sew(orw,irw,"when calling add in LinkedList, line 393")
call sew(orw,Srw,"when calling add in LinkedList, line 393")
call sew(orw,crw,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set Bo[9]=orw
set No[0]=4
set No[1]=0
set Mo[0]=4
set Mo[1]=1
set wO[0]=1
set wO[1]=4
set uO[0]=1
set uO[1]=5
set rO[0]=1
set rO[1]=6
set sO[0]=2
set sO[1]=6
set tO[0]=2
set tO[1]=3
set Orw=Jow("Food","when calling stringToIndex in Multiboards, line 56")
set lrw=Jow("0","when calling stringToIndex in Multiboards, line 56")
set brw=Jow("|","when calling stringToIndex in Multiboards, line 56")
set yrw=Jow("Income","when calling stringToIndex in Multiboards, line 56")
set prw=Jow("0","when calling stringToIndex in Multiboards, line 56")
set erw=Jow(" ","when calling stringToIndex in Multiboards, line 56")
set Wb[Qb]="when calling asList in Multiboards, line 56"
set Qb=Qb+1
set qrw=y9("when calling new_LinkedList in LinkedList, line 391")
call sew(qrw,Orw,"when calling add in LinkedList, line 393")
call sew(qrw,lrw,"when calling add in LinkedList, line 393")
call sew(qrw,brw,"when calling add in LinkedList, line 393")
call sew(qrw,yrw,"when calling add in LinkedList, line 393")
call sew(qrw,prw,"when calling add in LinkedList, line 393")
call sew(qrw,erw,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set iO[0]=qrw
set arw=Jow("Iron","when calling stringToIndex in Multiboards, line 57")
set nrw=Jow("0","when calling stringToIndex in Multiboards, line 57")
set drw=Jow("|","when calling stringToIndex in Multiboards, line 57")
set frw=Jow("Upkeep","when calling stringToIndex in Multiboards, line 57")
set Rrw=Jow("0","when calling stringToIndex in Multiboards, line 57")
set Trw=Jow(" ","when calling stringToIndex in Multiboards, line 57")
set Wb[Qb]="when calling asList in Multiboards, line 57"
set Qb=Qb+1
set Yrw=y9("when calling new_LinkedList in LinkedList, line 391")
call sew(Yrw,arw,"when calling add in LinkedList, line 393")
call sew(Yrw,nrw,"when calling add in LinkedList, line 393")
call sew(Yrw,drw,"when calling add in LinkedList, line 393")
call sew(Yrw,frw,"when calling add in LinkedList, line 393")
call sew(Yrw,Rrw,"when calling add in LinkedList, line 393")
call sew(Yrw,Trw,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set iO[1]=Yrw
set Grw=Jow("Stone","when calling stringToIndex in Multiboards, line 58")
set grw=Jow("0","when calling stringToIndex in Multiboards, line 58")
set hrw=Jow("|","when calling stringToIndex in Multiboards, line 58")
set Frw=Jow(" ","when calling stringToIndex in Multiboards, line 58")
set krw=Jow(" ","when calling stringToIndex in Multiboards, line 58")
set jrw=Jow(" ","when calling stringToIndex in Multiboards, line 58")
set Wb[Qb]="when calling asList in Multiboards, line 58"
set Qb=Qb+1
set xrw=y9("when calling new_LinkedList in LinkedList, line 391")
call sew(xrw,Grw,"when calling add in LinkedList, line 393")
call sew(xrw,grw,"when calling add in LinkedList, line 393")
call sew(xrw,hrw,"when calling add in LinkedList, line 393")
call sew(xrw,Frw,"when calling add in LinkedList, line 393")
call sew(xrw,krw,"when calling add in LinkedList, line 393")
call sew(xrw,jrw,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set iO[2]=xrw
set vrw=Jow(" ","when calling stringToIndex in Multiboards, line 60")
set mrw=Jow(" ","when calling stringToIndex in Multiboards, line 60")
set Qrw=Jow("                           City info","when calling stringToIndex in Multiboards, line 60")
set Wrw=Jow(" ","when calling stringToIndex in Multiboards, line 60")
set Erw=Jow(" ","when calling stringToIndex in Multiboards, line 60")
set Zrw=Jow(" ","when calling stringToIndex in Multiboards, line 60")
set Wb[Qb]="when calling asList in Multiboards, line 60"
set Qb=Qb+1
set Urw=y9("when calling new_LinkedList in LinkedList, line 391")
call sew(Urw,vrw,"when calling add in LinkedList, line 393")
call sew(Urw,mrw,"when calling add in LinkedList, line 393")
call sew(Urw,Qrw,"when calling add in LinkedList, line 393")
call sew(Urw,Wrw,"when calling add in LinkedList, line 393")
call sew(Urw,Erw,"when calling add in LinkedList, line 393")
call sew(Urw,Zrw,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set iO[3]=Urw
set Irw=Jow("Tax","when calling stringToIndex in Multiboards, line 61")
set Prw=Jow("0","when calling stringToIndex in Multiboards, line 61")
set Arw=Jow(" ","when calling stringToIndex in Multiboards, line 61")
set Drw=Jow("|","when calling stringToIndex in Multiboards, line 61")
set Hrw=Jow(" ","when calling stringToIndex in Multiboards, line 61")
set Jrw=Jow(" ","when calling stringToIndex in Multiboards, line 61")
set Wb[Qb]="when calling asList in Multiboards, line 61"
set Qb=Qb+1
set Krw=y9("when calling new_LinkedList in LinkedList, line 391")
call sew(Krw,Irw,"when calling add in LinkedList, line 393")
call sew(Krw,Prw,"when calling add in LinkedList, line 393")
call sew(Krw,Arw,"when calling add in LinkedList, line 393")
call sew(Krw,Drw,"when calling add in LinkedList, line 393")
call sew(Krw,Hrw,"when calling add in LinkedList, line 393")
call sew(Krw,Jrw,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set iO[4]=Krw
set Lrw=Jow("Public order","when calling stringToIndex in Multiboards, line 62")
set Xrw=Jow("0","when calling stringToIndex in Multiboards, line 62")
set Crw=Jow(" ","when calling stringToIndex in Multiboards, line 62")
set Vrw=Jow("|","when calling stringToIndex in Multiboards, line 62")
set Brw=Jow(" ","when calling stringToIndex in Multiboards, line 62")
set Nrw=Jow(" ","when calling stringToIndex in Multiboards, line 62")
set Wb[Qb]="when calling asList in Multiboards, line 62"
set Qb=Qb+1
set Mrw=y9("when calling new_LinkedList in LinkedList, line 391")
call sew(Mrw,Lrw,"when calling add in LinkedList, line 393")
call sew(Mrw,Xrw,"when calling add in LinkedList, line 393")
call sew(Mrw,Crw,"when calling add in LinkedList, line 393")
call sew(Mrw,Vrw,"when calling add in LinkedList, line 393")
call sew(Mrw,Brw,"when calling add in LinkedList, line 393")
call sew(Mrw,Nrw,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set iO[5]=Mrw
set wsw=Jow("Population","when calling stringToIndex in Multiboards, line 63")
set usw=Jow("0","when calling stringToIndex in Multiboards, line 63")
set rsw=Jow(" ","when calling stringToIndex in Multiboards, line 63")
set ssw=Jow("|","when calling stringToIndex in Multiboards, line 63")
set tsw=Jow(" ","when calling stringToIndex in Multiboards, line 63")
set isw=Jow(" ","when calling stringToIndex in Multiboards, line 63")
set Wb[Qb]="when calling asList in Multiboards, line 63"
set Qb=Qb+1
set Ssw=y9("when calling new_LinkedList in LinkedList, line 391")
call sew(Ssw,wsw,"when calling add in LinkedList, line 393")
call sew(Ssw,usw,"when calling add in LinkedList, line 393")
call sew(Ssw,rsw,"when calling add in LinkedList, line 393")
call sew(Ssw,ssw,"when calling add in LinkedList, line 393")
call sew(Ssw,tsw,"when calling add in LinkedList, line 393")
call sew(Ssw,isw,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set iO[6]=Ssw
set csw=Jow(" ","when calling stringToIndex in Multiboards, line 64")
set osw=Jow(" ","when calling stringToIndex in Multiboards, line 64")
set Osw=Jow(" ","when calling stringToIndex in Multiboards, line 64")
set lsw=Jow("|","when calling stringToIndex in Multiboards, line 64")
set bsw=Jow(" ","when calling stringToIndex in Multiboards, line 64")
set ysw=Jow(" ","when calling stringToIndex in Multiboards, line 64")
set Wb[Qb]="when calling asList in Multiboards, line 64"
set Qb=Qb+1
set psw=y9("when calling new_LinkedList in LinkedList, line 391")
call sew(psw,csw,"when calling add in LinkedList, line 393")
call sew(psw,osw,"when calling add in LinkedList, line 393")
call sew(psw,Osw,"when calling add in LinkedList, line 393")
call sew(psw,lsw,"when calling add in LinkedList, line 393")
call sew(psw,bsw,"when calling add in LinkedList, line 393")
call sew(psw,ysw,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set iO[7]=psw
set esw=Jow(" ","when calling stringToIndex in Multiboards, line 65")
set qsw=Jow(" ","when calling stringToIndex in Multiboards, line 65")
set asw=Jow(" ","when calling stringToIndex in Multiboards, line 65")
set nsw=Jow("|","when calling stringToIndex in Multiboards, line 65")
set dsw=Jow(" ","when calling stringToIndex in Multiboards, line 65")
set fsw=Jow(" ","when calling stringToIndex in Multiboards, line 65")
set Wb[Qb]="when calling asList in Multiboards, line 65"
set Qb=Qb+1
set Rsw=y9("when calling new_LinkedList in LinkedList, line 391")
call sew(Rsw,esw,"when calling add in LinkedList, line 393")
call sew(Rsw,qsw,"when calling add in LinkedList, line 393")
call sew(Rsw,asw,"when calling add in LinkedList, line 393")
call sew(Rsw,nsw,"when calling add in LinkedList, line 393")
call sew(Rsw,dsw,"when calling add in LinkedList, line 393")
call sew(Rsw,fsw,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set iO[8]=Rsw
set Tsw=Jow(" ","when calling stringToIndex in Multiboards, line 66")
set Ysw=Jow(" ","when calling stringToIndex in Multiboards, line 66")
set Gsw=Jow(" ","when calling stringToIndex in Multiboards, line 66")
set gsw=Jow("|","when calling stringToIndex in Multiboards, line 66")
set hsw=Jow(" ","when calling stringToIndex in Multiboards, line 66")
set Fsw=Jow(" ","when calling stringToIndex in Multiboards, line 66")
set Wb[Qb]="when calling asList in Multiboards, line 66"
set Qb=Qb+1
set ksw=y9("when calling new_LinkedList in LinkedList, line 391")
call sew(ksw,Tsw,"when calling add in LinkedList, line 393")
call sew(ksw,Ysw,"when calling add in LinkedList, line 393")
call sew(ksw,Gsw,"when calling add in LinkedList, line 393")
call sew(ksw,gsw,"when calling add in LinkedList, line 393")
call sew(ksw,hsw,"when calling add in LinkedList, line 393")
call sew(ksw,Fsw,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set iO[9]=ksw
set Qb=Qb-1
return true
endfunction
function Paw takes nothing returns boolean
set Qb=0
return jsw("Multiboards, line 1")
endfunction
function Ig takes nothing returns boolean
if IsUnitType(GetEnumUnit(),UNIT_TYPE_STRUCTURE)!=false then
return false
endif
return true
endfunction
function Pg takes nothing returns nothing
if Ig() then
call SetUnitPositionLoc(GetEnumUnit(),S)
endif
endfunction
function Pk takes nothing returns nothing
local player kk=GetOwningPlayer(GetKillingUnit())
local playerstate jk=PLAYER_STATE_RESOURCE_GOLD
local playerstate xk
local playerstate vk
local player mk
local force Qk
local location Wk
local real Ek
local real Zk
local player Uk
local force Ik
if jk==PLAYER_STATE_RESOURCE_GOLD then
set xk=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(kk,xk,GetPlayerState(kk,xk)+125)
elseif jk==PLAYER_STATE_RESOURCE_LUMBER then
set vk=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(kk,vk,GetPlayerState(kk,vk)+125)
endif
call SetPlayerState(kk,jk,GetPlayerState(kk,jk)+125)
set mk=GetOwningPlayer(GetKillingUnit())
set Qk=CreateForce()
call ForceAddPlayer(Qk,mk)
if IsPlayerInForce(GetLocalPlayer(),Qk) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_091")
endif
set y=GetUnitLoc(GetDyingUnit())
set Uk=GetOwningPlayer(GetDyingUnit())
set Ik=CreateForce()
call ForceAddPlayer(Ik,Uk)
set Wk=y
set Ek=GetLocationX(Wk)
set Zk=GetLocationY(Wk)
if IsPlayerInForce(GetLocalPlayer(),Ik) then
call PingMinimap(Ek,Zk,2.00)
endif
call RemoveLocation(y)
set kk=null
set jk=null
set xk=null
set vk=null
set mk=null
set Qk=null
set Wk=null
set Uk=null
set Ik=null
endfunction
function Pv takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989066,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988551,0)
endfunction
function Q6 takes nothing returns boolean
set Lc=CreateForce()
set Xc=CreateForce()
set Cc=CreateForce()
set Vc=CreateForce()
set Bc[0]=Lc
set Bc[1]=Xc
set Bc[2]=Cc
set Bc[3]=Vc
set Nc[0]=62
set Mc[0]=194
set wo[0]=255
set Nc[1]=255
set Mc[1]=238
set wo[1]=0
set Nc[2]=0
set Mc[2]=201
set wo[2]=10
set Nc[3]=219
set Mc[3]=0
set wo[3]=201
return true
endfunction
function mE takes nothing returns boolean
if GetResearched()!=1378890035 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890035,true)!=1 then
return false
endif
return true
endfunction
function QE takes nothing returns boolean
if not mE() then
return false
endif
return true
endfunction
function QH takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function mI takes nothing returns boolean
if GetResearched()!=1378890051 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890051,true)!=1 then
return false
endif
return true
endfunction
function QI takes nothing returns boolean
if not mI() then
return false
endif
return true
endfunction
function QQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989057,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988558,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988551,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989066,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651824,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651826,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988818,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989080,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989072,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989082,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988559,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988812,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651828,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989065,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989067,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989301,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651843,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988561,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988788,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988565,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988566,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988567,0)
endfunction
function QU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989830,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989829,0)
endfunction
function Qcw takes nothing returns boolean
return true
endfunction
function Qh takes nothing returns nothing
local player Th=GetOwningPlayer(GetSpellTargetUnit())
local playerstate Yh=PLAYER_STATE_RESOURCE_LUMBER
local playerstate Gh
local playerstate gh
local player hh
local force Fh
local location kh
local real jh
local real xh
local player vh
local force mh
if Yh==PLAYER_STATE_RESOURCE_GOLD then
set Gh=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(Th,Gh,GetPlayerState(Th,Gh)+250)
elseif Yh==PLAYER_STATE_RESOURCE_LUMBER then
set gh=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(Th,gh,GetPlayerState(Th,gh)+250)
endif
call SetPlayerState(Th,Yh,GetPlayerState(Th,Yh)+250)
call RemoveUnit(GetSpellAbilityUnit())
set hh=GetOwningPlayer(GetSpellTargetUnit())
set Fh=CreateForce()
call ForceAddPlayer(Fh,hh)
if IsPlayerInForce(GetLocalPlayer(),Fh) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_1229")
endif
set y=GetUnitLoc(GetSpellTargetUnit())
set vh=GetOwningPlayer(GetSpellTargetUnit())
set mh=CreateForce()
call ForceAddPlayer(mh,vh)
set kh=y
set jh=GetLocationX(kh)
set xh=GetLocationY(kh)
if IsPlayerInForce(GetLocalPlayer(),mh) then
call PingMinimap(jh,xh,2.00)
endif
call RemoveLocation(y)
set Th=null
set Yh=null
set Gh=null
set gh=null
set hh=null
set Fh=null
set kh=null
set vh=null
set mh=null
endfunction
function mx takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function Qx takes nothing returns boolean
if not mx() then
return false
endif
return true
endfunction
function R2 takes nothing returns boolean
return true
endfunction
function R7 takes nothing returns boolean
set Oo=InitHashtable()
return true
endfunction
function RD takes nothing returns nothing
local integer pD=1
local integer eD=1751868773
local player qD=GetOwningPlayer(GetTriggerUnit())
local rect fD=bj_mapInitialPlayableArea
local location dD=Location(GetRectCenterX(fD),GetRectCenterY(fD))
local location aD=Location(GetLocationX(dD)+100000000.00,GetLocationY(dD)+100000000.00)
local real nD=bj_UNIT_FACING
call GroupClear(bj_lastCreatedGroup)
loop
set pD=pD-1
exitwhen pD<0
call CreateUnitAtLocSaveLast(qD,eD,aD,nD)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
call ShowUnit(bj_lastCreatedUnit,false)
set qD=null
set aD=null
set dD=null
set fD=null
endfunction
function fK takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990328 then
return false
endif
return true
endfunction
function RK takes nothing returns boolean
if not fK() then
return false
endif
return true
endfunction
function RQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651843,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651842,0)
endfunction
function fW takes nothing returns boolean
if GetResearched()!=1378889807 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889807,true)!=2 then
return false
endif
return true
endfunction
function RW takes nothing returns boolean
if not fW() then
return false
endif
return true
endfunction
function RZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989815,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989838,0)
endfunction
function Raw takes nothing returns boolean
local integer faw
set Qb=0
set Wb[Qb]="Abilities, line 1"
set Qb=Qb+1
set Wb[Qb]="when calling asList in Abilities, line 17"
set Qb=Qb+1
set faw=y9("when calling new_LinkedList in LinkedList, line 391")
call sew(faw,1093677642,"when calling add in LinkedList, line 393")
call sew(faw,1093677641,"when calling add in LinkedList, line 393")
call sew(faw,1093677640,"when calling add in LinkedList, line 393")
call sew(faw,1093678155,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set uS=faw
set Qb=Qb-1
return true
endfunction
function dh takes nothing returns boolean
if GetUnitTypeId(GetSpellTargetUnit())==1747988787 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747990361 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747989831 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747989040 then
return true
endif
return false
endfunction
function fh takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988792 then
return false
endif
if not dh() then
return false
endif
return true
endfunction
function Rh takes nothing returns boolean
if not fh() then
return false
endif
return true
endfunction
function iOw takes integer Mow,string wOw returns trigger
local integer uOw
local fogstate rOw
local integer sOw
local trigger tOw
set Wb[Qb]=wOw
set Qb=Qb+1
set uOw=tl
set rOw=ConvertFogState(Mow)
set Wb[Qb]="when calling saveFogState in TypeCasting, line 88"
set Qb=Qb+1
if cb[uOw]==0 then
if uOw==0 then
call m6("Nullpointer exception when calling Table.saveFogState","when calling error in Table, line 168")
else
call m6("Called Table.saveFogState on invalid object.","when calling error in Table, line 168")
endif
endif
call SaveFogStateHandle(wl,uOw,0,rOw)
set Qb=Qb-1
set sOw=tl
set Wb[Qb]="when calling loadTrigger in TypeCasting, line 89"
set Qb=Qb+1
if cb[sOw]==0 then
if sOw==0 then
call m6("Nullpointer exception when calling Table.loadTrigger","when calling error in Table, line 111")
else
call m6("Called Table.loadTrigger on invalid object.","when calling error in Table, line 111")
endif
endif
set tOw=LoadTriggerHandle(wl,sOw,0)
set Qb=Qb-1-1
set Wf=tOw
set rOw=null
set tOw=null
return Wf
endfunction
function wcw takes string NSw returns boolean
local boolean MSw
set Wb[Qb]=NSw
set Qb=Qb+1
set MSw=TriggerEvaluate(iOw(dpw(mO,GetSpellAbilityId(),"when calling get in RegisterEvents, line 58"),"when calling triggerFromIndex in RegisterEvents, line 58"))
set Qb=Qb-1
return MSw
endfunction
function Rnw takes nothing returns boolean
set Qb=0
return wcw("RegisterEvents, line 58")
endfunction
function SD takes nothing returns nothing
local integer MA=1
local integer wD=1752461175
local player uD=GetOwningPlayer(GetTriggerUnit())
local rect iD=bj_mapInitialPlayableArea
local location tD=Location(GetRectCenterX(iD),GetRectCenterY(iD))
local location rD=Location(GetLocationX(tD)+100000000.00,GetLocationY(tD)+100000000.00)
local real sD=bj_UNIT_FACING
call GroupClear(bj_lastCreatedGroup)
loop
set MA=MA-1
exitwhen MA<0
call CreateUnitAtLocSaveLast(uD,wD,rD,sD)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
call ShowUnit(bj_lastCreatedUnit,false)
set uD=null
set rD=null
set tD=null
set iD=null
endfunction
function iK takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989592 then
return false
endif
return true
endfunction
function SK takes nothing returns boolean
if not iK() then
return false
endif
return true
endfunction
function SQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989080,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988818,0)
endfunction
function iW takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function SW takes nothing returns boolean
if not iW() then
return false
endif
return true
endfunction
function SX takes nothing returns boolean
local boolean tX
local boolean iX
if GetUnitTypeId(GetSpellAbilityUnit())==1747988553 then
set tX=GetUnitTypeId(GetSpellTargetUnit())==1747989297
else
set tX=false
endif
if tX then
set iX=GetPlayerId(GetOwningPlayer(GetSpellTargetUnit()))==PLAYER_NEUTRAL_AGGRESSIVE
else
set iX=false
endif
return iX
endfunction
function SY takes nothing returns nothing
local player uY=GetOwningPlayer(GetAttacker())
local player rY=GetOwningPlayer(GetAttacker())
local player sY
local player tY
local unit iY
set r[GetPlayerId(uY)+1]=r[GetPlayerId(rY)+1]+1
set sY=GetOwningPlayer(GetTriggerUnit())
set tY=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(sY)+1]=r[GetPlayerId(tY)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set iY=GetTriggerUnit()
call SetUnitState(iY,UNIT_STATE_LIFE,GetUnitState(iY,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set uY=null
set rY=null
set sY=null
set tY=null
set iY=null
endfunction
function SZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651846,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651847,0)
endfunction
function ZV takes integer mV,integer QV,string WV returns nothing
local integer EV
set Wb[Qb]=WV
set Qb=Qb+1
set EV=DS[mV]
if EV==0 then
set Wb[Qb]="when calling replaceCity in City, line 206"
set Qb=Qb+1
if Ql[mV]==0 then
if mV==0 then
call m6("Nullpointer exception when calling City.replaceCity","when calling error in City, line 182")
else
call m6("Called City.replaceCity on invalid object.","when calling error in City, line 182")
endif
endif
call gV(mV,1747988529,"when calling replaceCity in City, line 182")
set Qb=Qb-1
elseif EV==3 then
set Wb[Qb]="when calling replaceCity in City, line 208"
set Qb=Qb+1
if Ql[mV]==0 then
if mV==0 then
call m6("Nullpointer exception when calling City.replaceCity","when calling error in City, line 182")
else
call m6("Called City.replaceCity on invalid object.","when calling error in City, line 182")
endif
endif
call gV(mV,1747989590,"when calling replaceCity in City, line 182")
set Qb=Qb-1
elseif EV==1 then
set Wb[Qb]="when calling replaceCity in City, line 210"
set Qb=Qb+1
if Ql[mV]==0 then
if mV==0 then
call m6("Nullpointer exception when calling City.replaceCity","when calling error in City, line 182")
else
call m6("Called City.replaceCity on invalid object.","when calling error in City, line 182")
endif
endif
call gV(mV,1747990326,"when calling replaceCity in City, line 182")
set Qb=Qb-1
elseif EV==2 then
set Wb[Qb]="when calling replaceCity in City, line 212"
set Qb=Qb+1
if Ql[mV]==0 then
if mV==0 then
call m6("Nullpointer exception when calling City.replaceCity","when calling error in City, line 182")
else
call m6("Called City.replaceCity on invalid object.","when calling error in City, line 182")
endif
endif
call gV(mV,1747990084,"when calling replaceCity in City, line 182")
set Qb=Qb-1
endif
set Wb[Qb]="when calling changeOwner in City, line 213"
set Qb=Qb+1
if Ql[mV]==0 then
if mV==0 then
call m6("Nullpointer exception when calling City.changeOwner","when calling error in City, line 187")
else
call m6("Called City.changeOwner on invalid object.","when calling error in City, line 187")
endif
endif
call vV(mV,QV,"when calling changeOwner in City, line 187")
set Qb=Qb-1-1
endfunction
function xiw takes integer Fiw,integer kiw returns nothing
local integer jiw
if pO[Fiw]!=-1 then
call ForceRemovePlayer(Bc[pO[Fiw]],eO[Fiw])
endif
set pO[Fiw]=kiw
call ForceAddPlayer(Bc[pO[Fiw]],eO[Fiw])
call SetPlayerTechMaxAllowed(eO[Fiw],1747990087,0)
call SetPlayerTechMaxAllowed(eO[Fiw],1747990088,0)
call SetPlayerTechMaxAllowed(eO[Fiw],1747989558,0)
call SetPlayerTechMaxAllowed(eO[Fiw],1747989575,0)
call SetPlayerTechMaxAllowed(eO[Fiw],1747990339,0)
call SetPlayerTechMaxAllowed(eO[Fiw],1747990340,0)
call SetPlayerTechMaxAllowed(eO[Fiw],1747988528,0)
call SetPlayerTechMaxAllowed(eO[Fiw],1747988532,0)
set jiw=pO[Fiw]
if jiw==0 then
call SetPlayerTechMaxAllowed(eO[Fiw],1747988528,-1)
call SetPlayerTechMaxAllowed(eO[Fiw],1747988532,-1)
elseif jiw==1 then
call SetPlayerTechMaxAllowed(eO[Fiw],1747990339,-1)
call SetPlayerTechMaxAllowed(eO[Fiw],1747990340,-1)
elseif jiw==2 then
call SetPlayerTechMaxAllowed(eO[Fiw],1747990087,-1)
call SetPlayerTechMaxAllowed(eO[Fiw],1747990088,-1)
elseif jiw==3 then
call SetPlayerTechMaxAllowed(eO[Fiw],1747989558,-1)
call SetPlayerTechMaxAllowed(eO[Fiw],1747989575,-1)
endif
endfunction
function YX takes string cX returns nothing
local integer oX
local integer OX
local integer lX
local integer bX
local integer yX
local integer pX
local integer eX
local integer qX
local integer aX
local integer nX
local player dX
local location fX
local real RX
local integer TX
set Wb[Qb]=cX
set Qb=Qb+1
set oX=WC(GetSpellTargetUnit(),"when calling getCityId in CityManage, line 18")
set bX=QS[oX]
set Wb[Qb]="when calling getCityForceId in CityManage, line 19"
set Qb=Qb+1
if Ql[bX]==0 then
if bX==0 then
call m6("Nullpointer exception when calling City.getCityForceId","when calling error in City, line 179")
else
call m6("Called City.getCityForceId on invalid object.","when calling error in City, line 179")
endif
endif
set yX=DS[bX]
set Qb=Qb-1
set OX=GetPlayerId(GetOwningPlayer(GetSpellAbilityUnit()))
set pX=yO[OX]
set Wb[Qb]="when calling changeForce in CityManage, line 21"
set Qb=Qb+1
if kb[pX]==0 then
if pX==0 then
call m6("Nullpointer exception when calling PlayerStats.changeForce","when calling error in PlayerStats, line 97")
else
call m6("Called PlayerStats.changeForce on invalid object.","when calling error in PlayerStats, line 97")
endif
endif
call xiw(pX,yX)
set Qb=Qb-1
set eX=yl[yX]
set Wb[Qb]="when calling iterator in CityManage, line 24"
set Qb=Qb+1
set qX=C8(eX,"when calling new_LLIterator in LinkedList, line 165")
set Qb=Qb-1
set lX=qX
loop
exitwhen no[fo[lX]]==do[lX]
set fo[lX]=no[fo[lX]]
set aX=1
set nX=qo[fo[lX]]
set dX=dO[OX]
set fX=GetSpellTargetLoc()
set RX=0.
call GroupClear(bj_lastCreatedGroup)
loop
set aX=aX-1
exitwhen aX<0
call CreateUnitAtLocSaveLast(dX,nX,fX,RX)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
endloop
set Wb[Qb]="when calling close in CityManage, line 24"
set Qb=Qb+1
if To[lX]then
call jpw(lX,"when calling LLIterator in LinkedList, line 450")
endif
set Qb=Qb-1
set TX=QS[oX]
set Wb[Qb]="when calling settleCity in CityManage, line 27"
set Qb=Qb+1
if Ql[TX]==0 then
if TX==0 then
call m6("Nullpointer exception when calling City.settleCity","when calling error in City, line 203")
else
call m6("Called City.settleCity on invalid object.","when calling error in City, line 203")
endif
endif
call ZV(TX,OX,"when calling settleCity in City, line 203")
set Qb=Qb-1
call KillUnit(GetSpellAbilityUnit())
set Qb=Qb-1
set dX=null
set fX=null
endfunction
function Snw takes nothing returns nothing
set Qb=0
call YX("CityManage, line 14")
endfunction
function T3 takes nothing returns boolean
set hc=200
return true
endfunction
function TK takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function TT takes nothing returns nothing
local player aT=GetOwningPlayer(GetAttacker())
local player nT=GetOwningPlayer(GetAttacker())
local player dT
local player fT
local unit RT
set r[GetPlayerId(aT)+1]=r[GetPlayerId(nT)+1]+1
set dT=GetOwningPlayer(GetTriggerUnit())
set fT=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(dT)+1]=r[GetPlayerId(fT)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set RT=GetTriggerUnit()
call SetUnitState(RT,UNIT_STATE_LIFE,GetUnitState(RT,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set aT=null
set nT=null
set dT=null
set fT=null
set RT=null
endfunction
function TW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989556,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989570,0)
endfunction
function Taw takes nothing returns boolean
set Qb=0
set Wb[Qb]="EventHelper, line 1"
set Qb=Qb+1
call o7("when calling new_HashMap in EventHelper, line 6")
call o7("when calling new_HashMap in EventHelper, line 7")
call Xcw("when calling new_Table in EventHelper, line 8")
set Qb=Qb-1
return true
endfunction
function Rg takes nothing returns boolean
if IsUnitType(GetEnumUnit(),UNIT_TYPE_STRUCTURE)!=false then
return false
endif
return true
endfunction
function Tg takes nothing returns nothing
if Rg() then
call SetUnitPositionLoc(GetEnumUnit(),c)
endif
endfunction
function Tk takes nothing returns nothing
local player lk=GetOwningPlayer(GetKillingUnit())
local playerstate bk=PLAYER_STATE_RESOURCE_LUMBER
local playerstate yk
local playerstate pk
local player ek
local force qk
local location ak
local real nk
local real dk
local player fk
local force Rk
if bk==PLAYER_STATE_RESOURCE_GOLD then
set yk=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(lk,yk,GetPlayerState(lk,yk)+250)
elseif bk==PLAYER_STATE_RESOURCE_LUMBER then
set pk=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(lk,pk,GetPlayerState(lk,pk)+250)
endif
call SetPlayerState(lk,bk,GetPlayerState(lk,bk)+250)
set ek=GetOwningPlayer(GetKillingUnit())
set qk=CreateForce()
call ForceAddPlayer(qk,ek)
if IsPlayerInForce(GetLocalPlayer(),qk) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_090")
endif
set y=GetUnitLoc(GetDyingUnit())
set fk=GetOwningPlayer(GetDyingUnit())
set Rk=CreateForce()
call ForceAddPlayer(Rk,fk)
set ak=y
set nk=GetLocationX(ak)
set dk=GetLocationY(ak)
if IsPlayerInForce(GetLocalPlayer(),Rk) then
call PingMinimap(nk,dk,2.00)
endif
call RemoveLocation(y)
set lk=null
set bk=null
set yk=null
set pk=null
set ek=null
set qk=null
set ak=null
set fk=null
set Rk=null
endfunction
function Rm takes nothing returns boolean
if GetResearched()!=1378889799 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889799,true)!=1 then
return false
endif
return true
endfunction
function Tm takes nothing returns boolean
if not Rm() then
return false
endif
return true
endfunction
function FOw takes unit GOw,string gOw returns integer
local integer hOw
set Wb[Qb]=gOw
set Qb=Qb+1
set Wb[Qb]="when calling UnitIndex in UnitIndexer, line 166"
set Qb=Qb+1
if xb==0 then
if vb<32768 then
set vb=vb+1
set hOw=vb
set mb[hOw]=735
else
call m6("Out of memory: Could not create UnitIndex.","when calling error in UnitIndexer, line 157")
set hOw=0
endif
else
set xb=xb-1
set hOw=jb[xb]
set mb[hOw]=735
endif
set Qb=Qb-1
set Ol[hOw]=GOw
call SetUnitUserData(Ol[hOw],hOw)
set cl=Ol[hOw]
call TriggerEvaluate(il)
set Qb=Qb-1
return hOw
endfunction
function YOw takes string ROw returns nothing
local unit TOw
set Wb[Qb]=ROw
set Qb=Qb+1
set TOw=lO[bO-1]
set Wb[Qb]="when calling toUnitIndex in UnitIndexer, line 179"
set Qb=Qb+1
if GetUnitUserData(TOw)==0 then
call FOw(TOw,"when calling new_UnitIndex in UnitIndexer, line 125")
endif
set Qb=Qb-1-1
set TOw=null
endfunction
function Tnw takes nothing returns nothing
set Qb=0
call YOw("UnitIndexer, line 179")
endfunction
function U6 takes nothing returns nothing
call GroupAddUnit(so,GetEnumUnit())
endfunction
function ZA takes nothing returns boolean
if GetUnitTypeId(GetConstructedStructure())==1747988545 then
return true
endif
if GetUnitTypeId(GetConstructedStructure())==1747989577 then
return true
endif
if GetUnitTypeId(GetConstructedStructure())==1747990320 then
return true
endif
if GetUnitTypeId(GetConstructedStructure())==1747989845 then
return true
endif
return false
endfunction
function UA takes nothing returns boolean
if p[GetPlayerId(GetOwningPlayer(GetConstructedStructure()))+1]!=false then
return false
endif
if not ZA() then
return false
endif
return true
endfunction
function UG takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989047 then
return false
endif
return true
endfunction
function ZJ takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989591 then
return false
endif
return true
endfunction
function UJ takes nothing returns boolean
if not ZJ() then
return false
endif
return true
endfunction
function ZQ takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function UQ takes nothing returns boolean
if not ZQ() then
return false
endif
return true
endfunction
function ZY takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989044 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function UY takes nothing returns boolean
if not ZY() then
return false
endif
return true
endfunction
function Ug takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989078 then
return false
endif
return true
endfunction
function Um takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989072,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989073,0)
endfunction
function Utw takes nothing returns nothing
local unit Ztw=GetTriggerUnit()
if GetUnitAbilityLevel(Ztw,1095577649)==0 then
set lO[bO]=Ztw
set bO=bO+1
call TriggerExecute(oO)
set bO=bO-1
endif
set Ztw=null
endfunction
function CD takes nothing returns boolean
if GetUnitTypeId(GetConstructedStructure())!=1747990353 then
return false
endif
return true
endfunction
function VD takes nothing returns boolean
if not CD() then
return false
endif
return true
endfunction
function VI takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651855,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651851,0)
endfunction
function CZ takes nothing returns boolean
if GetResearched()!=1378889797 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889797,true)!=1 then
return false
endif
return true
endfunction
function VZ takes nothing returns boolean
if not CZ() then
return false
endif
return true
endfunction
function bww takes string oww returns boolean
local integer Oww
local integer lww
set Wb[Qb]=oww
set Qb=Qb+1
set Wb[Qb]="when calling alloc_Closure in MultiboardCityUpdate, line 18"
set Qb=Qb+1
if Pl==0 then
if Al<32768 then
set Al=Al+1
set Oww=Al
set Dl[Oww]=648
else
call m6("Out of memory: Could not create Closure.","when calling error in MultiboardCityUpdate, line 18")
set Oww=0
endif
else
set Pl=Pl-1
set Oww=Il[Pl]
set Dl[Oww]=648
endif
set Qb=Qb-1
set Wb[Qb]="when calling doAfter in MultiboardCityUpdate, line 18"
set Qb=Qb+1
call Wyw(Oww,0.01,"when calling start in ClosureTimers, line 15")
set Qb=Qb-1
set Wb[Qb]="when calling alloc_Closure in MultiboardCityUpdate, line 25"
set Qb=Qb+1
if Jl==0 then
if Kl<32768 then
set Kl=Kl+1
set lww=Kl
set Ll[lww]=637
else
call m6("Out of memory: Could not create Closure.","when calling error in MultiboardCityUpdate, line 25")
set lww=0
endif
else
set Jl=Jl-1
set lww=Hl[Jl]
set Ll[lww]=637
endif
set Qb=Qb-1
set Wb[Qb]="when calling doPeriodically in MultiboardCityUpdate, line 25"
set Qb=Qb+1
set Wb[Qb]="when calling start in ClosureTimers, line 36"
set Qb=Qb+1
if Ll[lww]==0 then
if lww==0 then
call m6("Nullpointer exception when calling CallbackPeriodic.start","when calling error in ClosureTimers, line 88")
else
call m6("Called CallbackPeriodic.start on invalid object.","when calling error in ClosureTimers, line 88")
endif
endif
call h3(lww,1.0,"when calling start in ClosureTimers, line 88")
set Qb=Qb-1-1-1
return true
endfunction
function Vaw takes nothing returns boolean
set Qb=0
return bww("MultiboardCityUpdate, line 1")
endfunction
function Vj takes nothing returns nothing
call SetMapFlag(MAP_LOCK_RESOURCE_TRADING,false)
endfunction
function Vx takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988565,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988563,0)
endfunction
function W6 takes nothing returns boolean
set uo=CreateTimer()
call TimerStart(uo,100000.,false,null)
call TimerStart(CreateTimer(),0.030,true,df)
return true
endfunction
function WE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989582,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989583,0)
endfunction
function WI takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989825,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989817,0)
endfunction
function WQ takes nothing returns nothing
set s=bj_FORCE_ALL_PLAYERS
call ForForce(s,ae)
endfunction
function WT takes nothing returns nothing
local player jT=GetOwningPlayer(GetAttacker())
local player xT=GetOwningPlayer(GetAttacker())
local player vT
local player mT
local unit QT
set r[GetPlayerId(jT)+1]=r[GetPlayerId(xT)+1]+1
set vT=GetOwningPlayer(GetTriggerUnit())
set mT=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(vT)+1]=r[GetPlayerId(mT)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set QT=GetTriggerUnit()
call SetUnitState(QT,UNIT_STATE_LIFE,GetUnitState(QT,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set jT=null
set xT=null
set vT=null
set mT=null
set QT=null
endfunction
function QZ takes nothing returns boolean
if GetResearched()!=1378890033 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890033,true)!=1 then
return false
endif
return true
endfunction
function WZ takes nothing returns boolean
if not QZ() then
return false
endif
return true
endfunction
function Wcw takes nothing returns boolean
return true
endfunction
function Wx takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988788,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988535,0)
endfunction
function X7 takes nothing returns boolean
return true
endfunction
function LH takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990350 then
return false
endif
return true
endfunction
function XH takes nothing returns boolean
if not LH() then
return false
endif
return true
endfunction
function XP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990601,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990599,0)
endfunction
function XT takes nothing returns nothing
local player DT=GetOwningPlayer(GetAttacker())
local player HT=GetOwningPlayer(GetAttacker())
local player JT
local player KT
local unit LT
set r[GetPlayerId(DT)+1]=r[GetPlayerId(HT)+1]+1
set JT=GetOwningPlayer(GetTriggerUnit())
set KT=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(JT)+1]=r[GetPlayerId(KT)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set LT=GetTriggerUnit()
call SetUnitState(LT,UNIT_STATE_LIFE,GetUnitState(LT,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set DT=null
set HT=null
set JT=null
set KT=null
set LT=null
endfunction
function A2 takes string U2 returns boolean
local integer I2
local integer P2
set Wb[Qb]=U2
set Qb=Qb+1
set Wb[Qb]="when calling alloc_Closure in Economy, line 43"
set Qb=Qb+1
if Jl==0 then
if Kl<32768 then
set Kl=Kl+1
set I2=Kl
set Ll[I2]=635
else
call m6("Out of memory: Could not create Closure.","when calling error in Economy, line 43")
set I2=0
endif
else
set Jl=Jl-1
set I2=Hl[Jl]
set Ll[I2]=635
endif
set Qb=Qb-1
set Wb[Qb]="when calling doPeriodically in Economy, line 43"
set Qb=Qb+1
set Wb[Qb]="when calling start in ClosureTimers, line 36"
set Qb=Qb+1
if Ll[I2]==0 then
if I2==0 then
call m6("Nullpointer exception when calling CallbackPeriodic.start","when calling error in ClosureTimers, line 88")
else
call m6("Called CallbackPeriodic.start on invalid object.","when calling error in ClosureTimers, line 88")
endif
endif
call h3(I2,0.333333343,"when calling start in ClosureTimers, line 88")
set Qb=Qb-1-1
set Wb[Qb]="when calling alloc_Closure in Economy, line 50"
set Qb=Qb+1
if Jl==0 then
if Kl<32768 then
set Kl=Kl+1
set P2=Kl
set Ll[P2]=636
else
call m6("Out of memory: Could not create Closure.","when calling error in Economy, line 50")
set P2=0
endif
else
set Jl=Jl-1
set P2=Hl[Jl]
set Ll[P2]=636
endif
set Qb=Qb-1
set Wb[Qb]="when calling doPeriodically in Economy, line 50"
set Qb=Qb+1
set Wb[Qb]="when calling start in ClosureTimers, line 36"
set Qb=Qb+1
if Ll[P2]==0 then
if P2==0 then
call m6("Nullpointer exception when calling CallbackPeriodic.start","when calling error in ClosureTimers, line 88")
else
call m6("Called CallbackPeriodic.start on invalid object.","when calling error in ClosureTimers, line 88")
endif
endif
call h3(P2,10.0,"when calling start in ClosureTimers, line 88")
set Qb=Qb-1-1-1
return true
endfunction
function Xaw takes nothing returns boolean
set Qb=0
return A2("Economy, line 1")
endfunction
function Xv takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651824,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651825,0)
endfunction
function TA takes nothing returns boolean
if GetUnitTypeId(GetConstructedStructure())==1747989040 then
return true
endif
if GetUnitTypeId(GetConstructedStructure())==1747990361 then
return true
endif
if GetUnitTypeId(GetConstructedStructure())==1747989831 then
return true
endif
return false
endfunction
function YA takes nothing returns boolean
if e[GetPlayerId(GetOwningPlayer(GetConstructedStructure()))+1]!=false then
return false
endif
if not TA() then
return false
endif
return true
endfunction
function TJ takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989060 then
return false
endif
return true
endfunction
function YJ takes nothing returns boolean
if not TJ() then
return false
endif
return true
endfunction
function Yaw takes nothing returns boolean
set Qb=0
set Wb[Qb]="RegisterEvents, line 1"
set Qb=Qb+1
set mO=o7("when calling new_HashMap in RegisterEvents, line 55")
call BSw(EVENT_PLAYER_UNIT_SPELL_EFFECT,null,jf,null)
set Qb=Qb-1
return true
endfunction
function Ym takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988559,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989064,0)
endfunction
function xOw takes integer kOw,string jOw returns nothing
set Wb[Qb]=jOw
set Qb=Qb+1
set ol=Ol[kOw]
call TriggerEvaluate(Sl)
call SetUnitUserData(Ol[kOw],0)
set Wb[Qb]="when calling UnitIndex in UnitIndexer, line 172"
set Qb=Qb+1
if mb[kOw]==0 then
call m6("Double free: object of type UnitIndex","when calling error in UnitIndexer, line 157")
else
set jb[xb]=kOw
set xb=xb+1
set mb[kOw]=0
endif
set Qb=Qb-1-1
endfunction
function fOw takes unit aOw,string nOw returns boolean
local integer dOw
set Wb[Qb]=nOw
set Qb=Qb+1
if GetUnitUserData(aOw)==0 then
set Qb=Qb-1
return false
else
set Wb[Qb]="when calling toUnitIndex in UnitIndexer, line 154"
set Qb=Qb+1
set dOw=GetUnitUserData(aOw)
if dOw==0 then
set dOw=FOw(aOw,"when calling new_UnitIndex in UnitIndexer, line 125")
endif
set Qb=Qb-1
set Wb[Qb]="when calling UnitIndex in UnitIndexer, line 154"
set Qb=Qb+1
if mb[dOw]==0 then
if dOw==0 then
call m6("Nullpointer exception when calling UnitIndex.UnitIndex","when calling error in UnitIndexer, line 157")
else
call m6("Called UnitIndex.UnitIndex on invalid object.","when calling error in UnitIndexer, line 157")
endif
endif
call xOw(dOw,"when calling destroyUnitIndex in UnitIndexer, line 157")
set Qb=Qb-1-1
return true
endif
endfunction
function Ynw takes nothing returns nothing
set Qb=0
set Wb[Qb]="UnitIndexer, line 180"
set Qb=Qb+1
call fOw(lO[bO-1],"when calling deindex in UnitIndexer, line 180")
set Qb=Qb-1
endfunction
function Yww takes nothing returns boolean
return true
endfunction
function Z6 takes nothing returns boolean
call CreateGroup()
return true
endfunction
function ZW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989557,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989559,0)
endfunction
function Em takes nothing returns boolean
if GetResearched()!=1378889801 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889801,true)!=1 then
return false
endif
return true
endfunction
function Zm takes nothing returns boolean
if not Em() then
return false
endif
return true
endfunction
function aA takes nothing returns nothing
call UnitRemoveAbility(GetTriggerUnit(),1093677402)
endfunction
function aJ takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function qP takes nothing returns boolean
if GetResearched()!=1378890040 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890040,true)!=2 then
return false
endif
return true
endfunction
function aP takes nothing returns boolean
if not qP() then
return false
endif
return true
endfunction
function initializeTable takes string stackPos returns nothing
local integer i_2
local integer this
local integer parentKey
set Wb[Qb]=stackPos
set Qb=Qb+1
set i_2=0
loop
exitwhen i_2>15
set this=Qc
set parentKey=StringHash(mc[i_2])
set stackPos="when calling saveInt in Colors, line 206"
set Wb[Qb]="when calling saveInt in Colors, line 206"
set Qb=Qb+1
if cb[this]==0 then
if this==0 then
call m6("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call m6("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(wl,this,parentKey,i_2)
set Qb=Qb-1
set i_2=i_2+1
endloop
set Qb=Qb-1
endfunction
function P3 takes string I3 returns boolean
set Wb[Qb]=I3
set Qb=Qb+1
set jc[0]=255
set xc[0]=2
set vc[0]=2
set jc[1]=0
set xc[1]=65
set vc[1]=255
set jc[2]=27
set xc[2]=229
set vc[2]=184
set jc[3]=83
set xc[3]=0
set vc[3]=128
set jc[4]=255
set xc[4]=252
set vc[4]=0
set jc[5]=254
set xc[5]=137
set vc[5]=13
set jc[6]=31
set xc[6]=191
set vc[6]=0
set jc[7]=228
set xc[7]=90
set vc[7]=175
set jc[8]=148
set xc[8]=149
set vc[8]=150
set jc[9]=125
set xc[9]=190
set vc[9]=241
set jc[10]=15
set xc[10]=97
set vc[10]=69
set jc[11]=77
set xc[11]=41
set vc[11]=3
set jc[12]=155
set xc[12]=0
set vc[12]=0
set jc[13]=0
set xc[13]=0
set vc[13]=195
set jc[14]=0
set xc[14]=234
set vc[14]=255
set jc[15]=190
set xc[15]=0
set vc[15]=254
set jc[16]=235
set xc[16]=205
set vc[16]=135
set jc[17]=248
set xc[17]=164
set vc[17]=139
set jc[18]=191
set xc[18]=255
set vc[18]=128
set jc[19]=220
set xc[19]=185
set vc[19]=235
set jc[20]=40
set xc[20]=40
set vc[20]=40
set jc[21]=235
set xc[21]=240
set vc[21]=255
set jc[22]=0
set xc[22]=120
set vc[22]=30
set jc[23]=164
set xc[23]=11
set vc[23]=51
set mc[0]="0"
set mc[1]="1"
set mc[2]="2"
set mc[3]="3"
set mc[4]="4"
set mc[5]="5"
set mc[6]="6"
set mc[7]="7"
set mc[8]="8"
set mc[9]="9"
set mc[10]="A"
set mc[11]="B"
set mc[12]="C"
set mc[13]="D"
set mc[14]="E"
set mc[15]="F"
set Qc=Xcw("when calling new_Table in Colors, line 154")
call initializeTable("when calling initializeTable in Colors, line 209")
set Qb=Qb-1
return true
endfunction
function aaw takes nothing returns boolean
set Qb=0
return P3("Colors, line 1")
endfunction
function ah takes nothing returns nothing
local group ph
local code eh
local boolean qh
set b=GetUnitsOfTypeIdAll(1747989301)
set ph=w
set eh=By
set qh=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(ph,eh)
if qh then
call DestroyGroup(ph)
endif
call DestroyGroup(b)
set ph=null
endfunction
function how takes timer Row,string Tow returns integer
local integer Yow
local integer Gow
local integer gow
set Wb[Qb]=Tow
set Qb=Qb+1
set Yow=sl
set Gow=GetHandleId(Row)
set Wb[Qb]="when calling loadInt in TimerUtils, line 21"
set Qb=Qb+1
if cb[Yow]==0 then
if Yow==0 then
call m6("Nullpointer exception when calling Table.loadInt","when calling error in Table, line 39")
else
call m6("Called Table.loadInt on invalid object.","when calling error in Table, line 39")
endif
endif
set gow=LoadInteger(wl,Yow,Gow)
set Qb=Qb-1-1
return gow
endfunction
function mow takes timer xow,string vow returns nothing
set Wb[Qb]=vow
set Qb=Qb+1
if xow==null then
call m6("Trying to release a null timer","when calling error in TimerUtils, line 37")
set Qb=Qb-1
return
endif
if how(xow,"when calling getData in TimerUtils, line 39")==679645218 then
call m6("ReleaseTimer: Double free!","when calling error in TimerUtils, line 40")
set Qb=Qb-1
return
endif
call fow(xow,679645218,"when calling setData in TimerUtils, line 42")
call PauseTimer(xow)
set ul[rl]=xow
set rl=rl+1
set Qb=Qb-1
endfunction
function U3 takes integer E3,string Z3 returns nothing
set Wb[Qb]=Z3
set Qb=Qb+1
set Wb[Qb]="when calling CallbackSingle_onDestroy in ClosureTimers, line 79"
set Qb=Qb+1
call mow(kc[E3],"when calling release in ClosureTimers, line 80")
set Qb=Qb-1
set Wb[Qb]="when calling CallbackSingle in ClosureTimers, line 79"
set Qb=Qb+1
if Dl[E3]==0 then
call m6("Double free: object of type CallbackSingle","when calling error in ClosureTimers, line 63")
else
set Il[Pl]=E3
set Pl=Pl+1
set Dl[E3]=0
endif
set Qb=Qb-1-1
endfunction
function FM takes integer GM returns nothing
local integer gM
local trigger hM
call TriggerAddCondition(il,Condition(tf))
call TriggerAddCondition(Sl,Condition(Sf))
call TriggerAddAction(ic,cf)
call TriggerAddAction(Sc,of)
call TriggerAddAction(cc,Of)
set gM=0
set GM=bj_MAX_PLAYERS-1
loop
exitwhen gM>GM
call TriggerRegisterPlayerEvent(Sc,dO[gM],EVENT_PLAYER_LEAVE)
set hM=cc
call TriggerRegisterPlayerEvent(hM,dO[gM],EVENT_PLAYER_ARROW_DOWN_DOWN)
call TriggerRegisterPlayerEvent(hM,dO[gM],EVENT_PLAYER_ARROW_DOWN_UP)
call TriggerRegisterPlayerEvent(hM,dO[gM],EVENT_PLAYER_ARROW_UP_DOWN)
call TriggerRegisterPlayerEvent(hM,dO[gM],EVENT_PLAYER_ARROW_UP_UP)
call TriggerRegisterPlayerEvent(hM,dO[gM],EVENT_PLAYER_ARROW_LEFT_DOWN)
call TriggerRegisterPlayerEvent(hM,dO[gM],EVENT_PLAYER_ARROW_LEFT_UP)
call TriggerRegisterPlayerEvent(hM,dO[gM],EVENT_PLAYER_ARROW_RIGHT_DOWN)
call TriggerRegisterPlayerEvent(hM,dO[gM],EVENT_PLAYER_ARROW_RIGHT_UP)
call TriggerRegisterPlayerEvent(hM,dO[gM],EVENT_PLAYER_END_CINEMATIC)
call TriggerRegisterPlayerEvent(hM,dO[gM],EVENT_PLAYER_MOUSE_UP)
call TriggerRegisterPlayerEvent(hM,dO[gM],EVENT_PLAYER_MOUSE_DOWN)
call TriggerRegisterPlayerEvent(hM,dO[gM],EVENT_PLAYER_MOUSE_MOVE)
call TriggerRegisterPlayerChatEvent(hM,dO[gM],"",false)
set gM=gM+1
endloop
call BSw(EVENT_PLAYER_UNIT_SPELL_EFFECT,null,lf,null)
set hM=null
endfunction
function B0w takes integer H0w,unit J0w,string K0w returns nothing
local integer L0w
local integer X0w
local boolean C0w
local boolean V0w
set Wb[Qb]=K0w
set Qb=Qb+1
if GetOwningPlayer(J0w)==Ho[H0w]then
set L0w=pl
set X0w=GetUnitTypeId(J0w)
set Wb[Qb]="when calling has in MassControl, line 28"
set Qb=Qb+1
if Tb[L0w]==0 then
if L0w==0 then
call m6("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call m6("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set C0w=t9(L0w,X0w)
set Qb=Qb-1
set V0w=not C0w
else
set V0w=false
endif
if V0w and J0w!=Jo[H0w] and(not IsUnitType(J0w,UNIT_TYPE_STRUCTURE)) then
call sew(Ko[H0w],GetHandleId(J0w),"when calling add in MassControl, line 29")
endif
set Qb=Qb-1
endfunction
function tSw takes integer sSw returns real
if sSw==1747988785 then
return 10.0
elseif sSw==1747989075 then
return 10.0
elseif sSw==1747990102 then
return 10.0
elseif sSw==1747989839 then
return 10.0
elseif sSw==1747988568 then
return 5.0
elseif sSw==1747990341 then
return 5.0
elseif sSw==1747988789 then
return 15.0
elseif sSw==1747990103 then
return 15.0
elseif sSw==1747990064 then
return 15.0
elseif sSw==1747989846 then
return 15.0
else
return 0.0
endif
endfunction
function FB takes integer GB,unit gB returns nothing
local boolean hB
if IsUnitType(gB,UNIT_TYPE_STRUCTURE) then
set hB=GetOwningPlayer(gB)==dO[HS[ES[GB]]]
else
set hB=false
endif
if hB then
set VS[ES[GB]]=VS[ES[GB]]+tSw(GetUnitTypeId(gB))
endif
endfunction
function YB takes integer qB,unit aB,string nB returns nothing
local integer dB
local integer fB
local boolean RB
local boolean TB
set Wb[Qb]=nB
set Qb=Qb+1
set dB=pl
set fB=GetUnitTypeId(aB)
set Wb[Qb]="when calling has in City, line 301"
set Qb=Qb+1
if Tb[dB]==0 then
if dB==0 then
call m6("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call m6("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set RB=t9(dB,fB)
set Qb=Qb-1
if not RB then
set TB=GetOwningPlayer(aB)==dO[HS[WS[qB]]]
else
set TB=false
endif
if TB then
set VS[WS[qB]]=VS[WS[qB]]+0.5
endif
set Qb=Qb-1
endfunction
function m5 takes integer R5,unit T5,string Y5 returns nothing
local integer G5
local integer g5
local boolean h5
local player F5
local player k5
local boolean j5
local boolean x5
local integer v5
set Wb[Qb]=Y5
set Qb=Qb+1
set G5=ll
set g5=GetUnitTypeId(T5)
set Wb[Qb]="when calling has in Economy, line 39"
set Qb=Qb+1
if Tb[G5]==0 then
if G5==0 then
call m6("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call m6("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set h5=t9(G5,g5)
set Qb=Qb-1
if h5 then
set F5=dO[GetPlayerId(GetOwningPlayer(T5))]
if GetPlayerSlotState(F5)==PLAYER_SLOT_STATE_PLAYING then
set j5=GetPlayerController(F5)==MAP_CONTROL_USER
else
set j5=false
endif
set x5=j5
else
set x5=false
endif
if x5 then
set k5=GetOwningPlayer(T5)
set R5=Pc[GetPlayerId(GetOwningPlayer(T5))]
set v5=bl
set Pc[GetPlayerId(k5)]=R5+dpw(v5,GetUnitTypeId(T5),"when calling get in Economy, line 40")
endif
set Qb=Qb-1
set F5=null
set k5=null
endfunction
function dyw takes integer qyw,unit ayw,string nyw returns nothing
set Wb[Qb]=nyw
set Qb=Qb+1
if Ul[qyw]==0 then
if qyw==0 then
call m6("Nullpointer exception when calling ForGroupCallback.callback","when calling error in ClosureForGroups, line 4")
else
call m6("Called ForGroupCallback.callback on invalid object.","when calling error in ClosureForGroups, line 4")
endif
endif
if Ul[qyw]<=684 then
if Ul[qyw]<=682 then
if Ul[qyw]<=681 then
call YB(qyw,ayw,"when calling City_closure_impl in ClosureForGroups, line 4")
else
call FB(qyw,ayw)
endif
elseif Ul[qyw]<=683 then
call m5(qyw,ayw,"when calling Economy_closure_impl in ClosureForGroups, line 4")
else
set Wb[Qb]="when calling LinkedList_closure_impl in ClosureForGroups, line 4"
set Qb=Qb+1
call sew(eo[qyw],GetHandleId(ayw),"when calling add in LinkedList, line 515")
set Qb=Qb-1
endif
elseif Ul[qyw]<=686 then
if Ul[qyw]<=685 then
call B0w(qyw,ayw,"when calling MassControl_closure_impl in ClosureForGroups, line 4")
else
call SetUnitOwner(ayw,dO[PLAYER_NEUTRAL_AGGRESSIVE],true)
endif
else
call RemoveUnit(ayw)
endif
set Qb=Qb-1
endfunction
function i3 takes group w3,integer u3,string r3 returns nothing
local group s3
local unit t3
set Wb[Qb]=r3
set Qb=Qb+1
set s3=w3
loop
exitwhen FirstOfGroup(s3)==null
set t3=FirstOfGroup(s3)
call GroupRemoveUnit(s3,t3)
call dyw(u3,t3,"when calling callback in ClosureForGroups, line 31")
endloop
set Qb=Qb-1
set s3=null
set t3=null
endfunction
function Miw takes string Viw returns nothing
local group Biw
local integer Niw
set Wb[Qb]=Viw
set Qb=Qb+1
call RemoveUnit(FO)
set Biw=hO
set Wb[Qb]="when calling alloc_Closure in Preloader, line 45"
set Qb=Qb+1
if El==0 then
if Zl<32768 then
set Zl=Zl+1
set Niw=Zl
set Ul[Niw]=687
else
call m6("Out of memory: Could not create Closure.","when calling error in Preloader, line 45")
set Niw=0
endif
else
set El=El-1
set Niw=Wl[El]
set Ul[Niw]=687
endif
set Qb=Qb-1
call i3(Biw,Niw,"when calling forEachFrom in Preloader, line 45")
call DestroyGroup(hO)
set hO=null
set Qb=Qb-1
set Biw=null
endfunction
function Usw takes multiboard vsw,integer msw,integer Qsw,real Wsw,string Esw returns nothing
local multiboarditem Zsw=MultiboardGetItem(vsw,Qsw,msw)
call MultiboardSetItemWidth(Zsw,Wsw)
call MultiboardSetItemValue(Zsw,Esw)
set Zsw=null
endfunction
function Gww_2 takes string yww_2 returns multiboard
local multiboard pww
local integer eww
local integer qww_2
local integer aww
local integer nww
local integer dww
local integer fww
local integer Rww
local integer Tww_2
local real Yww_2
set Wb[Qb]=yww_2
set Qb=Qb+1
set bj_lastCreatedMultiboard=CreateMultiboard()
call MultiboardSetRowCount(bj_lastCreatedMultiboard,10)
call MultiboardSetColumnCount(bj_lastCreatedMultiboard,6)
call MultiboardSetTitleText(bj_lastCreatedMultiboard,"Income: 2:00")
call MultiboardDisplay(bj_lastCreatedMultiboard,true)
set pww=bj_lastCreatedMultiboard
call MultiboardMinimize(pww,true)
call MultiboardSetItemsStyle(pww,true,false)
set eww=0
set qww_2=23
loop
exitwhen eww>qww_2
if fO==dO[eww]then
call MultiboardDisplay(pww,false)
endif
set eww=eww+1
endloop
set aww=0
set nww=9
loop
exitwhen aww>nww
set dww=0
set fww=5
loop
exitwhen dww>fww
set Yww_2=Hpw(Bo[aww],dww,"when calling get in MultiboardCityUpdate, line 14")/1000.
set Rww=Hpw(iO[aww],dww,"when calling get in MultiboardCityUpdate, line 14")
set Wb[Qb]="when calling stringFromIndex in MultiboardCityUpdate, line 14"
set Qb=Qb+1
set Tww_2=tl
set Wb[Qb]="when calling loadString in TypeCasting, line 29"
set Qb=Qb+1
if cb[Tww_2]==0 then
if Tww_2==0 then
call m6("Nullpointer exception when calling Table.loadString","when calling error in Table, line 57")
else
call m6("Called Table.loadString on invalid object.","when calling error in Table, line 57")
endif
endif
set yww_2=LoadStr(wl,Tww_2,Rww)
set Qb=Qb-1-1
call Usw(pww,dww,aww,Yww_2,yww_2)
set dww=dww+1
endloop
set aww=aww+1
endloop
set Qb=Qb-1
set vf=pww
set pww=null
return vf
endfunction
function Qww takes integer gww,string hww returns nothing
local integer Fww
local integer kww
local integer jww
local integer xww
local boolean vww
local multiboard mww
set Wb[Qb]=hww
set Qb=Qb+1
set Fww=0
set kww=23
loop
exitwhen Fww>kww
set xww=yO[Fww]
set hww="when calling isInGame in MultiboardCityUpdate, line 20"
set Wb[Qb]="when calling isInGame in MultiboardCityUpdate, line 20"
set Qb=Qb+1
if kb[xww]==0 then
if xww==0 then
call m6("Nullpointer exception when calling PlayerStats.isInGame","when calling error in PlayerStats, line 14")
else
call m6("Called PlayerStats.isInGame on invalid object.","when calling error in PlayerStats, line 14")
endif
endif
set vww=qO[xww]
set Qb=Qb-1
if vww then
set SO[Fww]=Gww_2("when calling createCoEMultiboard in MultiboardCityUpdate, line 21")
endif
set Fww=Fww+1
endloop
set jww=0
set gww=23
loop
exitwhen jww>gww
set mww=SO[jww]
if fO==dO[jww]then
call MultiboardDisplay(mww,true)
endif
set jww=jww+1
endloop
set Qb=Qb-1
set mww=null
endfunction
function hpw takes integer Gpw,string gpw returns nothing
set Wb[Qb]=gpw
set Qb=Qb+1
if pb[Gpw]==0 then
if Gpw==0 then
call m6("Nullpointer exception when calling LLEntry.LLEntry","when calling error in LinkedList, line 396")
else
call m6("Called LLEntry.LLEntry on invalid object.","when calling error in LinkedList, line 396")
endif
endif
set Wb[Qb]="when calling destroyLLEntry in LinkedList, line 396"
set Qb=Qb+1
set Wb[Qb]="when calling LLEntry in LinkedList, line 396"
set Qb=Qb+1
if pb[Gpw]==0 then
call m6("Double free: object of type LLEntry","when calling error in LinkedList, line 396")
else
set lb[bb]=Gpw
set bb=bb+1
set pb[Gpw]=0
endif
set Qb=Qb-1-1-1
endfunction
function Xpw takes integer Jpw,integer Kpw,string Lpw returns nothing
set Wb[Qb]=Lpw
set Qb=Qb+1
if Tb[Jpw]==0 then
if Jpw==0 then
call m6("Nullpointer exception when calling LinkedList.removeEntry","when calling error in LinkedList, line 373")
else
call m6("Called LinkedList.removeEntry on invalid object.","when calling error in LinkedList, line 373")
endif
endif
set Wb[Qb]="when calling removeEntry in LinkedList, line 373"
set Qb=Qb+1
set no[ao[Kpw]]=no[Kpw]
set ao[no[Kpw]]=ao[Kpw]
call hpw(Kpw,"when calling LLEntry in LinkedList, line 376")
set Go[Jpw]=Go[Jpw]-1
set Qb=Qb-1-1
endfunction
function O9 takes integer i9,integer S9,string c9 returns nothing
local integer o9
set Wb[Qb]=c9
set Qb=Qb+1
set o9=no[Yo[i9]]
loop
exitwhen o9==Yo[i9]
if qo[o9]==S9 then
call Xpw(i9,o9,"when calling removeEntry in LinkedList, line 126")
set Qb=Qb-1
return
endif
set o9=no[o9]
endloop
set Qb=Qb-1
endfunction
function uyw takes integer Nbw,integer Mbw,string wyw returns nothing
set Wb[Qb]=wyw
set Qb=Qb+1
if Ql[Nbw]==0 then
if Nbw==0 then
call m6("Nullpointer exception when calling City.getCityModifierOnRemove","when calling error in City, line 411")
else
call m6("Called City.getCityModifierOnRemove on invalid object.","when calling error in City, line 411")
endif
endif
set Wb[Qb]="when calling getCityModifierOnRemove in City, line 411"
set Qb=Qb+1
if nS[dpw(eS,Mbw,"when calling get in City, line 412")]then
set BS[Nbw]=BS[Nbw]-aS[dpw(eS,Mbw,"when calling get in City, line 413")]
endif
set NS[Nbw]=NS[Nbw]-TS[dpw(eS,Mbw,"when calling get in City, line 414")]
set Qb=Qb-1-1
endfunction
function WB takes integer kB,integer jB,string xB returns boolean
local integer vB
local boolean mB
local integer QB
set Wb[Qb]=xB
set Qb=Qb+1
set vB=uc[kB]
set Wb[Qb]="when calling has in City, line 366"
set Qb=Qb+1
if Tb[vB]==0 then
if vB==0 then
call m6("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call m6("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set mB=t9(vB,jB)
set Qb=Qb-1
if not mB then
set Qb=Qb-1
return false
endif
set QB=uc[kB]
set Wb[Qb]="when calling remove in City, line 368"
set Qb=Qb+1
if Tb[QB]==0 then
if QB==0 then
call m6("Nullpointer exception when calling LinkedList.remove","when calling error in LinkedList, line 122")
else
call m6("Called LinkedList.remove on invalid object.","when calling error in LinkedList, line 122")
endif
endif
call O9(QB,jB,"when calling remove in LinkedList, line 122")
set Qb=Qb-1
call uyw(kB,jB,"when calling getCityModifierOnRemove in City, line 370")
set Qb=Qb-1
return true
endfunction
function Wtw takes integer mtw returns nothing
local group Qtw
call TriggerRegisterEnterRegion(CreateTrigger(),Zo,Filter(Tf))
call BSw(EVENT_PLAYER_UNIT_ISSUED_ORDER,null,Yf,null)
call GroupEnumUnitsInRect(OO,Eo,null)
call ForGroup(OO,Gf)
set Qtw=OO
call GroupClear(Qtw)
call DestroyGroup(Qtw)
set Qtw=null
endfunction
function f5 takes integer r5,string s5 returns nothing
local integer t5
local integer i5
local integer S5
local integer c5
local integer o5
local integer O5
local integer l5
local unit b5
local player y5
local integer p5
local unit e5
local integer q5
local integer a5
local boolean n5
local integer d5
set Wb[Qb]=s5
set Qb=Qb+1
set t5=Hc[r5]*Jc[r5]
set c5=gS-1
set o5=(Hc[r5]+1)*Jc[r5]-1
if c5<2147483647 then
set O5=c5
else
set O5=2147483647
endif
if o5<O5 then
set O5=o5
endif
set i5=O5
loop
exitwhen t5>i5
set l5=QS[t5]
set Wb[Qb]="when calling getCityUnit in Economy, line 31"
set Qb=Qb+1
if Ql[l5]==0 then
if l5==0 then
call m6("Nullpointer exception when calling City.getCityUnit","when calling error in City, line 176")
else
call m6("Called City.getCityUnit on invalid object.","when calling error in City, line 176")
endif
endif
set b5=IS[l5]
set Qb=Qb-1
set S5=GetPlayerId(GetOwningPlayer(b5))
set p5=QS[t5]
set Wb[Qb]="when calling getCityUnit in Economy, line 32"
set Qb=Qb+1
if Ql[p5]==0 then
if p5==0 then
call m6("Nullpointer exception when calling City.getCityUnit","when calling error in City, line 176")
else
call m6("Called City.getCityUnit on invalid object.","when calling error in City, line 176")
endif
endif
set e5=IS[p5]
set Qb=Qb-1
set y5=GetOwningPlayer(e5)
if GetPlayerSlotState(y5)==PLAYER_SLOT_STATE_PLAYING then
set n5=GetPlayerController(y5)==MAP_CONTROL_USER
else
set n5=false
endif
if n5 then
set d5=Pc[S5]
set q5=QS[t5]
set s5="when calling countTax in Economy, line 33"
set Wb[Qb]="when calling countTax in Economy, line 33"
set Qb=Qb+1
if Ql[q5]==0 then
if q5==0 then
call m6("Nullpointer exception when calling City.countTax","when calling error in City, line 266")
else
call m6("Called City.countTax on invalid object.","when calling error in City, line 266")
endif
endif
set a5=JC(q5,"when calling countTax in City, line 266")
set Qb=Qb-1
set Pc[S5]=d5+a5
endif
set t5=t5+1
endloop
set Qb=Qb-1
set b5=null
set y5=null
set e5=null
endfunction
function mbw takes string vbw returns nothing
endfunction
function xyw takes integer gyw,string hyw returns nothing
local integer Fyw
local integer kyw
local integer jyw
set Wb[Qb]=hyw
set Qb=Qb+1
if Dl[gyw]==0 then
if gyw==0 then
call m6("Nullpointer exception when calling CallbackSingle.call","when calling error in ClosureTimers, line 65")
else
call m6("Called CallbackSingle.call on invalid object.","when calling error in ClosureTimers, line 65")
endif
endif
if Dl[gyw]<=645 then
if Dl[gyw]<=642 then
if Dl[gyw]<=640 then
if Dl[gyw]<=639 then
set Wb[Qb]="when calling City_closure_impl in ClosureTimers, line 65"
set Qb=Qb+1
set Fyw=ZS[gyw]
set kyw=US[gyw]
set Wb[Qb]="when calling removeModifier in City, line 362"
set Qb=Qb+1
if Ql[Fyw]==0 then
if Fyw==0 then
call m6("Nullpointer exception when calling City.removeModifier","when calling error in City, line 365")
else
call m6("Called City.removeModifier on invalid object.","when calling error in City, line 365")
endif
endif
call WB(Fyw,kyw,"when calling removeModifier in City, line 365")
set Qb=Qb-1-1
else
call FM(gyw)
endif
elseif Dl[gyw]<=641 then
set hc=hc+50
else
set hc=hc*2
endif
elseif Dl[gyw]<=644 then
if Dl[gyw]<=643 then
set hc=hc/2
set jyw=hc
if jyw!=250 then
call mbw("Expected <"+I2S(250)+">, Actual <"+I2S(jyw)+">")
endif
else
call f5(gyw,"when calling Economy_closure_impl in ClosureTimers, line 65")
endif
else
call IssueImmediateOrderById(bo[gyw],851976)
endif
elseif Dl[gyw]<=649 then
if Dl[gyw]<=647 then
if Dl[gyw]<=646 then
call IssueImmediateOrderById(po[gyw],851976)
else
call IssuePointOrderById(Lo[gyw],Xo[gyw],Co[gyw],Vo[gyw])
endif
elseif Dl[gyw]<=648 then
call Qww(gyw,"when calling MultiboardCityUpdate_closure_impl in ClosureTimers, line 65")
else
call IssueImmediateOrderById(cO[gyw],851976)
endif
elseif Dl[gyw]<=651 then
if Dl[gyw]<=650 then
call Wtw(gyw)
else
set Wb[Qb]="when calling Preloader_closure_impl in ClosureTimers, line 65"
set Qb=Qb+1
call Miw("when calling finishPreload in Preloader, line 54")
set Qb=Qb-1
endif
else
call IssueImmediateOrderById(jO[gyw],851976)
endif
set Qb=Qb-1
endfunction
function W3 takes string m3 returns nothing
local integer Q3
set Wb[Qb]=m3
set Qb=Qb+1
set Q3=how(GetExpiredTimer(),"when calling getData in ClosureTimers, line 75")
call xyw(Q3,"when calling call in ClosureTimers, line 76")
set Wb[Qb]="when calling CallbackSingle in ClosureTimers, line 77"
set Qb=Qb+1
if Dl[Q3]==0 then
if Q3==0 then
call m6("Nullpointer exception when calling CallbackSingle.CallbackSingle","when calling error in ClosureTimers, line 63")
else
call m6("Called CallbackSingle.CallbackSingle on invalid object.","when calling error in ClosureTimers, line 63")
endif
endif
call U3(Q3,"when calling destroyCallbackSingle in ClosureTimers, line 63")
set Qb=Qb-1-1
endfunction
function anw takes nothing returns nothing
set Qb=0
set Wb[Qb]="ClosureTimers, line 68"
set Qb=Qb+1
call W3("when calling staticCallback in ClosureTimers, line 70")
set Qb=Qb-1
endfunction
function qv takes nothing returns boolean
if GetResearched()!=1378889796 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889796,true)!=1 then
return false
endif
return true
endfunction
function av takes nothing returns boolean
if not qv() then
return false
endif
return true
endfunction
function lE takes nothing returns boolean
if GetResearched()!=1378889810 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889810,true)!=1 then
return false
endif
return true
endfunction
function bE takes nothing returns boolean
if not lE() then
return false
endif
return true
endfunction
function bH takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function lI takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function bI takes nothing returns boolean
if not lI() then
return false
endif
return true
endfunction
function bT takes nothing returns nothing
call SetFloatGameState(GAME_STATE_TIME_OF_DAY,bj_MELEE_STARTING_TOD)
call MeleeStartingHeroLimit()
endfunction
function bU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989836,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989837,0)
endfunction
function Oj takes nothing returns boolean
if GetUnitTypeId(GetSpellTargetUnit())==1747990581 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747990580 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747989813 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747988569 then
return true
endif
return false
endfunction
function lj takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989048 then
return false
endif
if not Oj() then
return false
endif
return true
endfunction
function bj takes nothing returns boolean
if not lj() then
return false
endif
return true
endfunction
function bnw takes nothing returns nothing
set Qb=0
set Wb[Qb]="ClosureEvents, line 288"
set Qb=Qb+1
call UM("when calling generalEventCallback in ClosureEvents, line 288")
set Qb=Qb-1
endfunction
function btw takes nothing returns boolean
return true
endfunction
function SA takes nothing returns boolean
if GetResearched()!=1378890041 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890041,true)!=1 then
return false
endif
return true
endfunction
function cA takes nothing returns boolean
if not SA() then
return false
endif
return true
endfunction
function iF takes nothing returns boolean
if GetUnitTypeId(GetSpellTargetUnit())==1747988787 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747990361 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747989831 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747989040 then
return true
endif
return false
endfunction
function SF takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988791 then
return false
endif
if not iF() then
return false
endif
return true
endfunction
function cF takes nothing returns boolean
if not SF() then
return false
endif
return true
endfunction
function cK takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function cW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990099,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990096,0)
endfunction
function Sm takes nothing returns boolean
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889797,true)!=1 then
return false
endif
return true
endfunction
function cm takes nothing returns boolean
if not Sm() then
return false
endif
return true
endfunction
function cnw takes nothing returns nothing
set Qb=0
call UM("ClosureEvents, line 240")
endfunction
function initMapBounds takes nothing returns nothing
local rect cond_result
local region receiver
local real temp
local real tuple_temp
set Wo=bj_mapInitialPlayableArea
call RegionAddRect(CreateRegion(),Wo)
set cond_result=GetWorldBounds()
set Eo=cond_result
set receiver=CreateRegion()
call RegionAddRect(receiver,Eo)
set Zo=receiver
set temp=GetRectMaxX(Eo)
set tuple_temp=GetRectMaxY(Eo)
set Uo=temp
set Io=tuple_temp
endfunction
function d0w takes nothing returns boolean
call initMapBounds()
return true
endfunction
function nE takes nothing returns boolean
if GetResearched()!=1378889810 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889810,true)!=2 then
return false
endif
return true
endfunction
function dE takes nothing returns boolean
if not nE() then
return false
endif
return true
endfunction
function dG takes nothing returns nothing
set t=GetUnitLoc(GetSpellTargetUnit())
set bj_lastCreatedEffect=AddSpecialEffectLoc("Abilities\\Spells\\Orc\\Voodoo\\VoodooAuraTarget.mdl",t)
call DestroyEffect(bj_lastCreatedEffect)
set i=GetUnitLoc(GetSpellAbilityUnit())
set bj_lastCreatedEffect=AddSpecialEffectLoc("Abilities\\Spells\\Orc\\Voodoo\\VoodooAura.mdl",i)
call DestroyEffect(bj_lastCreatedEffect)
call RemoveLocation(t)
call RemoveLocation(i)
endfunction
function dH takes nothing returns nothing
call UnitAddAbility(GetConstructedStructure(),1093677896)
endfunction
function nI takes nothing returns boolean
if GetResearched()!=1378890049 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890049,true)!=1 then
return false
endif
return true
endfunction
function dI takes nothing returns boolean
if not nI() then
return false
endif
return true
endfunction
function dU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989835,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989836,0)
endfunction
function dY takes nothing returns nothing
local player pY=GetOwningPlayer(GetAttacker())
local player eY=GetOwningPlayer(GetAttacker())
local player qY
local player aY
local unit nY
set r[GetPlayerId(pY)+1]=r[GetPlayerId(eY)+1]+1
set qY=GetOwningPlayer(GetTriggerUnit())
set aY=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(qY)+1]=r[GetPlayerId(aY)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set nY=GetTriggerUnit()
call SetUnitState(nY,UNIT_STATE_LIFE,GetUnitState(nY,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set pY=null
set eY=null
set qY=null
set aY=null
set nY=null
endfunction
function U8 takes string Z8 returns boolean
set Wb[Qb]=Z8
set Qb=Qb+1
set Wb[Qb]="when calling alloc_Closure in LinkedList, line 504"
set Qb=Qb+1
if ob==0 then
if Ob<32768 then
set Ob=Ob+1
else
call m6("Out of memory: Could not create Closure.","when calling error in LinkedList, line 504")
endif
else
set ob=ob-1
endif
set Qb=Qb-1
set Wb[Qb]="when calling alloc_Closure in LinkedList, line 508"
set Qb=Qb+1
if ob==0 then
if Ob<32768 then
set Ob=Ob+1
else
call m6("Out of memory: Could not create Closure.","when calling error in LinkedList, line 508")
endif
else
set ob=ob-1
endif
set Qb=Qb-1-1
return true
endfunction
function daw takes nothing returns boolean
set Qb=0
return U8("LinkedList, line 1")
endfunction
function Hww takes player Uww,string Iww returns string
local integer Pww
local integer Aww
local integer Dww
set Wb[Qb]=Iww
set Qb=Qb+1
set Aww=yO[GetPlayerId(Uww)]
set Wb[Qb]="when calling getForceId in Messages, line 37"
set Qb=Qb+1
if kb[Aww]==0 then
if Aww==0 then
call m6("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 94")
else
call m6("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 94")
endif
endif
set Dww=pO[Aww]
set Qb=Qb-1
set Pww=GetRandomInt(0,2)
if Dww==0 then
set Iww=JO[Pww]
elseif Dww==1 then
set Iww=KO[Pww]
elseif Dww==2 then
set Iww=LO[Pww]
elseif Dww==3 then
set Iww=XO[Pww]
else
set Iww="Good news!"
endif
set Qb=Qb-1
return "|cff00ff00"+Iww+"|r"
endfunction
function Wnw takes integer xnw,integer vnw,string mnw returns integer
local integer Qnw
if vnw<0 or vnw>=24 then
call m6("Index out of Bounds",mnw)
elseif vnw<=11 then
if vnw<=5 then
if vnw<=2 then
if vnw<=1 then
if vnw<=0 then
set Qnw=Ib[xnw]
else
set Qnw=Pb[xnw]
endif
else
set Qnw=Ab[xnw]
endif
elseif vnw<=4 then
if vnw<=3 then
set Qnw=Db[xnw]
else
set Qnw=Hb[xnw]
endif
else
set Qnw=Jb[xnw]
endif
elseif vnw<=8 then
if vnw<=7 then
if vnw<=6 then
set Qnw=Kb[xnw]
else
set Qnw=Lb[xnw]
endif
else
set Qnw=Xb[xnw]
endif
elseif vnw<=10 then
if vnw<=9 then
set Qnw=Cb[xnw]
else
set Qnw=Vb[xnw]
endif
else
set Qnw=Bb[xnw]
endif
elseif vnw<=17 then
if vnw<=14 then
if vnw<=13 then
if vnw<=12 then
set Qnw=Nb[xnw]
else
set Qnw=Mb[xnw]
endif
else
set Qnw=wy[xnw]
endif
elseif vnw<=16 then
if vnw<=15 then
set Qnw=uy[xnw]
else
set Qnw=ry[xnw]
endif
else
set Qnw=sy[xnw]
endif
elseif vnw<=20 then
if vnw<=19 then
if vnw<=18 then
set Qnw=ty[xnw]
else
set Qnw=iy[xnw]
endif
else
set Qnw=Sy[xnw]
endif
elseif vnw<=22 then
if vnw<=21 then
set Qnw=cy[xnw]
else
set Qnw=oy[xnw]
endif
else
set Qnw=Oy[xnw]
endif
return Qnw
endfunction
function Vtw takes integer Jtw,player Ktw,integer Ltw,string Xtw returns nothing
local integer Ctw
set Wb[Qb]=Xtw
set Qb=Qb+1
set Ctw=GetPlayerId(Ktw)
if not qO[Jtw]then
set Qb=Qb-1
return
endif
if Ctw>=24 then
set Qb=Qb-1
return
endif
if Wnw(Jtw,Ctw,"when reading array PlayerStats_alliance_states in PlayerStats, line 33")==Ltw or Ktw==eO[Jtw]then
set Qb=Qb-1
return
endif
call jnw(Jtw,Ctw,Ltw,"when writing array PlayerStats_alliance_states in PlayerStats, line 35")
call SetPlayerAllianceStateBJ(eO[Jtw],Ktw,Ltw)
set Qb=Qb-1
endfunction
function xww takes player gww,string hww returns string
local integer Fww
local integer kww
local integer jww
set Wb[Qb]=hww
set Qb=Qb+1
set kww=yO[GetPlayerId(gww)]
set Wb[Qb]="when calling getForceId in Messages, line 5"
set Qb=Qb+1
if kb[kww]==0 then
if kww==0 then
call m6("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 94")
else
call m6("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 94")
endif
endif
set jww=pO[kww]
set Qb=Qb-1
set Fww=GetRandomInt(0,2)
if jww==0 then
set hww=EO[Fww]
elseif jww==1 then
set hww=ZO[Fww]
elseif jww==2 then
set hww=UO[Fww]
elseif jww==3 then
set hww=IO[Fww]
else
set hww="Warning!"
endif
set Qb=Qb-1
return "|cffff0000"+hww+"|r"
endfunction
function e2 takes string O4 returns nothing
local player l4
local player b4
local string y4
local integer p4
local force e4
local force q4
local integer a4
local integer n4
local integer d4
local integer f4
local integer R4
local integer T4
local integer Y4
local integer G4
local integer g4
local force h4
local force F4
local integer k4
local integer j4
local integer x4
local integer v4
local integer m4
local integer Q4
local player W4
local force E4
local player Z4
local player U4
local player I4
local integer P4
local integer A4
local integer D4
local integer H4
local player J4
local force K4
local player L4
local player X4
local player C4
local integer V4
local integer B4
local integer N4
local integer M4
local player w2
local force u2
local player r2
local player s2
local player t2
local integer i2
local integer S2
local integer c2
local integer o2
local player O2
local force l2
local player b2
local player y2
local player p2
set Wb[Qb]=O4
set Qb=Qb+1
set l4=GetOwningPlayer(GetSpellAbilityUnit())
set b4=GetOwningPlayer(GetSpellTargetUnit())
set y4=C3(l4)
set O4=C3(b4)
set p4=GetPlayerId(l4)
set h4=CreateForce()
call ForceAddPlayer(h4,l4)
set e4=h4
set F4=CreateForce()
call ForceAddPlayer(F4,l4)
set q4=F4
set a4=GetSpellAbilityId()
if a4==1093677396 then
set k4=yO[p4]
set Wb[Qb]="when calling getAllianceState in Diplomacy, line 17"
set Qb=Qb+1
if kb[k4]==0 then
if k4==0 then
call m6("Nullpointer exception when calling PlayerStats.getAllianceState","when calling error in PlayerStats, line 38")
else
call m6("Called PlayerStats.getAllianceState on invalid object.","when calling error in PlayerStats, line 38")
endif
endif
set Wb[Qb]="when calling getAllianceState in PlayerStats, line 38"
set Qb=Qb+1
set j4=Wnw(k4,GetPlayerId(b4),"when reading array PlayerStats_alliance_states in PlayerStats, line 39")
set Qb=Qb-1-1
if j4==bj_ALLIANCE_UNALLIED then
set Qb=Qb-1
set l4=null
set b4=null
set e4=null
set q4=null
set h4=null
set F4=null
set W4=null
set E4=null
set Z4=null
set U4=null
set I4=null
set J4=null
set K4=null
set L4=null
set X4=null
set C4=null
set w2=null
set u2=null
set r2=null
set s2=null
set t2=null
set O2=null
set l2=null
set b2=null
set y2=null
set p2=null
return
endif
set x4=yO[p4]
set v4=bj_ALLIANCE_UNALLIED
set Wb[Qb]="when calling setAlliance in Diplomacy, line 19"
set Qb=Qb+1
if kb[x4]==0 then
if x4==0 then
call m6("Nullpointer exception when calling PlayerStats.setAlliance","when calling error in PlayerStats, line 27")
else
call m6("Called PlayerStats.setAlliance on invalid object.","when calling error in PlayerStats, line 27")
endif
endif
call Vtw(x4,b4,v4,"when calling setAlliance in PlayerStats, line 27")
set Qb=Qb-1
set m4=yO[GetPlayerId(b4)]
set Q4=bj_ALLIANCE_UNALLIED
set Wb[Qb]="when calling setAlliance in Diplomacy, line 20"
set Qb=Qb+1
if kb[m4]==0 then
if m4==0 then
call m6("Nullpointer exception when calling PlayerStats.setAlliance","when calling error in PlayerStats, line 27")
else
call m6("Called PlayerStats.setAlliance on invalid object.","when calling error in PlayerStats, line 27")
endif
endif
call Vtw(m4,l4,Q4,"when calling setAlliance in PlayerStats, line 27")
set Qb=Qb-1
set n4=0
set d4=23
loop
exitwhen n4>d4
set W4=dO[n4]
set E4=CreateForce()
call ForceAddPlayer(E4,W4)
if dO[n4]==b4 then
set Z4=dO[n4]
set Wb[Qb]="when calling warningToPlayer in Diplomacy, line 25"
set Qb=Qb+1
call DisplayTimedTextToPlayer(Z4,0.,0.,10.0,xww(Z4,"when calling getWarningStringForPlayer in Messages, line 79"))
call DisplayTimedTextToPlayer(Z4,0.,0.,10.0,y4+" has declared war on you!")
set Qb=Qb-1
elseif E4==e4 or E4==q4 then
set U4=dO[n4]
set Wb[Qb]="when calling attentionToPlayer in Diplomacy, line 27"
set Qb=Qb+1
call DisplayTimedTextToPlayer(U4,0.,0.,10.0,Vww(U4,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(U4,0.,0.,10.0,y4+" has declared war on your brother-in-arms, "+O4+"!")
set Qb=Qb-1
else
set I4=dO[n4]
set Wb[Qb]="when calling noteToPlayer in Diplomacy, line 29"
set Qb=Qb+1
call DisplayTimedTextToPlayer(I4,0.,0.,10.0,Zww(I4,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(I4,0.,0.,10.0,y4+" has declared war on "+O4)
set Qb=Qb-1
endif
set n4=n4+1
endloop
elseif a4==1093677397 then
set P4=yO[p4]
set Wb[Qb]="when calling getAllianceState in Diplomacy, line 32"
set Qb=Qb+1
if kb[P4]==0 then
if P4==0 then
call m6("Nullpointer exception when calling PlayerStats.getAllianceState","when calling error in PlayerStats, line 38")
else
call m6("Called PlayerStats.getAllianceState on invalid object.","when calling error in PlayerStats, line 38")
endif
endif
set Wb[Qb]="when calling getAllianceState in PlayerStats, line 38"
set Qb=Qb+1
set A4=Wnw(P4,GetPlayerId(b4),"when reading array PlayerStats_alliance_states in PlayerStats, line 39")
set Qb=Qb-1-1
if A4==bj_ALLIANCE_ALLIED_VISION then
set Qb=Qb-1
set l4=null
set b4=null
set e4=null
set q4=null
set h4=null
set F4=null
set W4=null
set E4=null
set Z4=null
set U4=null
set I4=null
set J4=null
set K4=null
set L4=null
set X4=null
set C4=null
set w2=null
set u2=null
set r2=null
set s2=null
set t2=null
set O2=null
set l2=null
set b2=null
set y2=null
set p2=null
return
endif
set D4=yO[p4]
set H4=bj_ALLIANCE_ALLIED_VISION
set Wb[Qb]="when calling setAlliance in Diplomacy, line 34"
set Qb=Qb+1
if kb[D4]==0 then
if D4==0 then
call m6("Nullpointer exception when calling PlayerStats.setAlliance","when calling error in PlayerStats, line 27")
else
call m6("Called PlayerStats.setAlliance on invalid object.","when calling error in PlayerStats, line 27")
endif
endif
call Vtw(D4,b4,H4,"when calling setAlliance in PlayerStats, line 27")
set Qb=Qb-1
set f4=0
set R4=23
loop
exitwhen f4>R4
set J4=dO[f4]
set K4=CreateForce()
call ForceAddPlayer(K4,J4)
if dO[f4]==b4 then
set L4=dO[f4]
set Wb[Qb]="when calling goodNewsToPlayer in Diplomacy, line 39"
set Qb=Qb+1
call DisplayTimedTextToPlayer(L4,0.,0.,10.0,Hww(L4,"when calling getGoodNewsStringForPlayer in Messages, line 85"))
call DisplayTimedTextToPlayer(L4,0.,0.,10.0,y4+" wants to ally you")
set Qb=Qb-1
elseif K4==e4 or K4==q4 then
set X4=dO[f4]
set Wb[Qb]="when calling noteToPlayer in Diplomacy, line 41"
set Qb=Qb+1
call DisplayTimedTextToPlayer(X4,0.,0.,10.0,Zww(X4,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(X4,0.,0.,10.0,y4+" allied "+O4)
set Qb=Qb-1
else
set C4=dO[f4]
set Wb[Qb]="when calling noteToPlayer in Diplomacy, line 43"
set Qb=Qb+1
call DisplayTimedTextToPlayer(C4,0.,0.,10.0,Zww(C4,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(C4,0.,0.,10.0,y4+" allied "+O4)
set Qb=Qb-1
endif
set f4=f4+1
endloop
elseif a4==1093677398 then
set V4=yO[p4]
set Wb[Qb]="when calling getAllianceState in Diplomacy, line 46"
set Qb=Qb+1
if kb[V4]==0 then
if V4==0 then
call m6("Nullpointer exception when calling PlayerStats.getAllianceState","when calling error in PlayerStats, line 38")
else
call m6("Called PlayerStats.getAllianceState on invalid object.","when calling error in PlayerStats, line 38")
endif
endif
set Wb[Qb]="when calling getAllianceState in PlayerStats, line 38"
set Qb=Qb+1
set B4=Wnw(V4,GetPlayerId(b4),"when reading array PlayerStats_alliance_states in PlayerStats, line 39")
set Qb=Qb-1-1
if B4==bj_ALLIANCE_NEUTRAL then
set Qb=Qb-1
set l4=null
set b4=null
set e4=null
set q4=null
set h4=null
set F4=null
set W4=null
set E4=null
set Z4=null
set U4=null
set I4=null
set J4=null
set K4=null
set L4=null
set X4=null
set C4=null
set w2=null
set u2=null
set r2=null
set s2=null
set t2=null
set O2=null
set l2=null
set b2=null
set y2=null
set p2=null
return
endif
set N4=yO[p4]
set M4=bj_ALLIANCE_NEUTRAL
set Wb[Qb]="when calling setAlliance in Diplomacy, line 48"
set Qb=Qb+1
if kb[N4]==0 then
if N4==0 then
call m6("Nullpointer exception when calling PlayerStats.setAlliance","when calling error in PlayerStats, line 27")
else
call m6("Called PlayerStats.setAlliance on invalid object.","when calling error in PlayerStats, line 27")
endif
endif
call Vtw(N4,b4,M4,"when calling setAlliance in PlayerStats, line 27")
set Qb=Qb-1
set T4=0
set Y4=23
loop
exitwhen T4>Y4
set w2=dO[T4]
set u2=CreateForce()
call ForceAddPlayer(u2,w2)
if dO[T4]==b4 then
set r2=dO[T4]
set Wb[Qb]="when calling noteToPlayer in Diplomacy, line 53"
set Qb=Qb+1
call DisplayTimedTextToPlayer(r2,0.,0.,10.0,Zww(r2,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(r2,0.,0.,10.0,y4+" is now neutral towards you")
set Qb=Qb-1
elseif u2==e4 or u2==q4 then
set s2=dO[T4]
set Wb[Qb]="when calling noteToPlayer in Diplomacy, line 55"
set Qb=Qb+1
call DisplayTimedTextToPlayer(s2,0.,0.,10.0,Zww(s2,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(s2,0.,0.,10.0,y4+" shows "+O4+" neutrality")
set Qb=Qb-1
else
set t2=dO[T4]
set Wb[Qb]="when calling noteToPlayer in Diplomacy, line 57"
set Qb=Qb+1
call DisplayTimedTextToPlayer(t2,0.,0.,10.0,Zww(t2,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(t2,0.,0.,10.0,y4+" shows "+O4+" neutrality")
set Qb=Qb-1
endif
set T4=T4+1
endloop
elseif a4==1093677400 then
set i2=yO[p4]
set Wb[Qb]="when calling getAllianceState in Diplomacy, line 60"
set Qb=Qb+1
if kb[i2]==0 then
if i2==0 then
call m6("Nullpointer exception when calling PlayerStats.getAllianceState","when calling error in PlayerStats, line 38")
else
call m6("Called PlayerStats.getAllianceState on invalid object.","when calling error in PlayerStats, line 38")
endif
endif
set Wb[Qb]="when calling getAllianceState in PlayerStats, line 38"
set Qb=Qb+1
set S2=Wnw(i2,GetPlayerId(b4),"when reading array PlayerStats_alliance_states in PlayerStats, line 39")
set Qb=Qb-1-1
if S2==bj_ALLIANCE_NEUTRAL then
set Qb=Qb-1
set l4=null
set b4=null
set e4=null
set q4=null
set h4=null
set F4=null
set W4=null
set E4=null
set Z4=null
set U4=null
set I4=null
set J4=null
set K4=null
set L4=null
set X4=null
set C4=null
set w2=null
set u2=null
set r2=null
set s2=null
set t2=null
set O2=null
set l2=null
set b2=null
set y2=null
set p2=null
return
endif
set c2=yO[p4]
set o2=bj_ALLIANCE_NEUTRAL
set Wb[Qb]="when calling setAlliance in Diplomacy, line 62"
set Qb=Qb+1
if kb[c2]==0 then
if c2==0 then
call m6("Nullpointer exception when calling PlayerStats.setAlliance","when calling error in PlayerStats, line 27")
else
call m6("Called PlayerStats.setAlliance on invalid object.","when calling error in PlayerStats, line 27")
endif
endif
call Vtw(c2,b4,o2,"when calling setAlliance in PlayerStats, line 27")
set Qb=Qb-1
set G4=0
set g4=23
loop
exitwhen G4>g4
set O2=dO[G4]
set l2=CreateForce()
call ForceAddPlayer(l2,O2)
if dO[G4]==b4 then
set b2=dO[G4]
set Wb[Qb]="when calling noteToPlayer in Diplomacy, line 67"
set Qb=Qb+1
call DisplayTimedTextToPlayer(b2,0.,0.,10.0,Zww(b2,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(b2,0.,0.,10.0,y4+" unallies you!")
set Qb=Qb-1
elseif l2==e4 or l2==q4 then
set y2=dO[G4]
set Wb[Qb]="when calling noteToPlayer in Diplomacy, line 69"
set Qb=Qb+1
call DisplayTimedTextToPlayer(y2,0.,0.,10.0,Zww(y2,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(y2,0.,0.,10.0,y4+" unallied "+O4)
set Qb=Qb-1
else
set p2=dO[G4]
set Wb[Qb]="when calling noteToPlayer in Diplomacy, line 71"
set Qb=Qb+1
call DisplayTimedTextToPlayer(p2,0.,0.,10.0,Zww(p2,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(p2,0.,0.,10.0,y4+" unallied "+O4)
set Qb=Qb-1
endif
set G4=G4+1
endloop
endif
set Qb=Qb-1
set l4=null
set b4=null
set e4=null
set q4=null
set h4=null
set F4=null
set W4=null
set E4=null
set Z4=null
set U4=null
set I4=null
set J4=null
set K4=null
set L4=null
set X4=null
set C4=null
set w2=null
set u2=null
set r2=null
set s2=null
set t2=null
set O2=null
set l2=null
set b2=null
set y2=null
set p2=null
endfunction
function dnw takes nothing returns nothing
set Qb=0
call e2("Diplomacy, line 116")
endfunction
function e9 takes nothing returns boolean
return true
endfunction
function eA takes nothing returns nothing
set s=bj_FORCE_ALL_PLAYERS
call ForForce(s,ea)
endfunction
function eK takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function eOw takes nothing returns boolean
return true
endfunction
function eW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989570,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989571,0)
endfunction
function eg takes nothing returns nothing
local location ig
local location Sg
local real cg
local real og
local rect Og
local group lg
local group bg
local code yg
local boolean pg
set u=GetUnitLoc(GetSpellAbilityUnit())
set ig=u
set S=Location(GetLocationX(ig)+0.00,GetLocationY(ig)+200.00)
set Sg=u
set cg=GetLocationX(Sg)
set og=GetLocationY(Sg)
set o=Rect(cg-140,og-150,cg+140,og+150)
set Og=o
set lg=CreateGroup()
call GroupEnumUnitsInRect(lg,Og,null)
call DestroyBoolExpr(null)
set l=lg
set bg=l
set yg=Iy
set pg=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(bg,yg)
if pg then
call DestroyGroup(bg)
endif
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747988824,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"stand")
call DestroyGroup(l)
call RemoveLocation(S)
call RemoveLocation(u)
set ig=null
set Sg=null
set Og=null
set lg=null
set bg=null
endfunction
function pm takes nothing returns boolean
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889797,true)!=2 then
return false
endif
return true
endfunction
function em takes nothing returns boolean
if not pm() then
return false
endif
return true
endfunction
function ex takes nothing returns boolean
if GetUnitTypeId(GetDyingUnit())!=1747989048 then
return false
endif
return true
endfunction
function f2 takes nothing returns boolean
local integer q2
local player a2
local boolean n2
local boolean d2
if GetOwningPlayer(GetSpellAbilityUnit())==GetOwningPlayer(GetSpellTargetUnit()) then
set d2=true
else
set a2=GetOwningPlayer(GetSpellTargetUnit())
if GetPlayerSlotState(a2)==PLAYER_SLOT_STATE_PLAYING then
set n2=GetPlayerController(a2)==MAP_CONTROL_USER
else
set n2=false
endif
set d2=not n2
endif
if d2 then
set a2=null
return false
endif
set q2=GetSpellAbilityId()
set a2=null
return q2==1093677396 or q2==1093677397 or q2==1093677398 or q2==1093677400 or q2==1093677399
endfunction
function f6 takes nothing returns boolean
set Kc=InitHashtable()
return true
endfunction
function fE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989574,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989573,0)
endfunction
function fF takes nothing returns nothing
local player oF=GetOwningPlayer(GetSpellTargetUnit())
local playerstate OF=PLAYER_STATE_RESOURCE_GOLD
local playerstate lF
local playerstate bF
local player yF
local force pF
local location eF
local real qF
local real aF
local player nF
local force dF
if OF==PLAYER_STATE_RESOURCE_GOLD then
set lF=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(oF,lF,GetPlayerState(oF,lF)+250)
elseif OF==PLAYER_STATE_RESOURCE_LUMBER then
set bF=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(oF,bF,GetPlayerState(oF,bF)+250)
endif
call SetPlayerState(oF,OF,GetPlayerState(oF,OF)+250)
call RemoveUnit(GetSpellAbilityUnit())
set yF=GetOwningPlayer(GetSpellTargetUnit())
set pF=CreateForce()
call ForceAddPlayer(pF,yF)
if IsPlayerInForce(GetLocalPlayer(),pF) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_1230")
endif
set y=GetUnitLoc(GetSpellTargetUnit())
set nF=GetOwningPlayer(GetSpellTargetUnit())
set dF=CreateForce()
call ForceAddPlayer(dF,nF)
set eF=y
set qF=GetLocationX(eF)
set aF=GetLocationY(eF)
if IsPlayerInForce(GetLocalPlayer(),dF) then
call PingMinimap(qF,aF,2.00)
endif
call RemoveLocation(y)
set oF=null
set OF=null
set lF=null
set bF=null
set yF=null
set pF=null
set eF=null
set nF=null
set dF=null
endfunction
function fI takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990584,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990593,0)
endfunction
function dQ takes nothing returns boolean
if GetResearched()!=1378889812 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889812,true)!=1 then
return false
endif
return true
endfunction
function fQ takes nothing returns boolean
if not dQ() then
return false
endif
return true
endfunction
function dZ takes nothing returns boolean
if GetResearched()!=1378890034 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890034,true)!=1 then
return false
endif
return true
endfunction
function fZ takes nothing returns boolean
if not dZ() then
return false
endif
return true
endfunction
function fg takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989077 then
return false
endif
return true
endfunction
function r0w takes string X9 returns nothing
local integer C9
local integer V9
local playerevent B9
local integer N9
local integer M9
local force w0w
local force u0w
set Wb[Qb]=X9
set Qb=Qb+1
if vo then
set Qb=Qb-1
set B9=null
set w0w=null
set u0w=null
return
endif
set B9=EVENT_PLAYER_END_CINEMATIC
set Wb[Qb]="when calling alloc_Closure in MainInit, line 72"
set Qb=Qb+1
if Gl==0 then
if gl<32768 then
set gl=gl+1
set N9=gl
set hl[N9]=670
else
call m6("Out of memory: Could not create Closure.","when calling error in MainInit, line 72")
set N9=0
endif
else
set Gl=Gl-1
set N9=Yl[Gl]
set hl[N9]=670
endif
set Qb=Qb-1
set ec[N9]=0
set qc[N9]=0
set ac[N9]=0
set Wb[Qb]="when calling add in MainInit, line 72"
set Qb=Qb+1
set Wb[Qb]="when calling toIntId in ClosureEvents, line 111"
set Qb=Qb+1
set M9=oc[GetHandleId(B9)]
if M9==0 then
set M9=lM(B9,"when calling registerEventId in ClosureEvents, line 228")
endif
set Qb=Qb-1
set ec[N9]=M9
if yc[ec[N9]]!=0 then
set ac[yc[ec[N9]]]=N9
set qc[N9]=yc[ec[N9]]
endif
set yc[ec[N9]]=N9
set Qb=Qb-1
set w0w=bj_FORCE_ALL_PLAYERS
if IsPlayerInForce(GetLocalPlayer(),w0w) then
call ShowInterface(false,0.50)
endif
set C9=0
set V9=4
loop
exitwhen C9>V9
if not jo then
set u0w=bj_FORCE_ALL_PLAYERS
set X9=go[C9]
if IsPlayerInForce(GetLocalPlayer(),u0w) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,10.0,X9)
endif
call TriggerSleepAction(12.5)
endif
set C9=C9+1
endloop
call CinematicModeExBJ(false,bj_FORCE_ALL_PLAYERS,bj_CINEMODE_INTERFACEFADE)
set jo=true
set Qb=Qb-1
set B9=null
set w0w=null
set u0w=null
endfunction
function fnw takes nothing returns nothing
set Qb=0
call r0w("MainInit, line 128")
endfunction
function GH takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990352 then
return false
endif
return true
endfunction
function gH takes nothing returns boolean
if not GH() then
return false
endif
return true
endfunction
function gP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990604,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990602,0)
endfunction
function GU takes nothing returns boolean
if GetResearched()!=1378890032 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890032,true)!=1 then
return false
endif
return true
endfunction
function gU takes nothing returns boolean
if not GU() then
return false
endif
return true
endfunction
function GY takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989315 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function gY takes nothing returns boolean
if not GY() then
return false
endif
return true
endfunction
function Aqw takes integer qqw,integer aqw,integer nqw,integer dqw,integer fqw,integer Rqw,integer Tqw,integer Yqw,integer Gqw,integer gqw,integer hqw,integer Fqw,integer kqw,integer jqw,integer xqw,integer vqw,integer mqw,integer Qqw,integer Wqw,integer Eqw,integer Zqw,integer Uqw,string Iqw returns integer
local integer Pqw
set Wb[Qb]=Iqw
set Qb=Qb+1
set Pqw=y9("when calling new_LinkedList in LinkedList, line 391")
call sew(Pqw,qqw,"when calling add in LinkedList, line 393")
call sew(Pqw,aqw,"when calling add in LinkedList, line 393")
call sew(Pqw,nqw,"when calling add in LinkedList, line 393")
call sew(Pqw,dqw,"when calling add in LinkedList, line 393")
call sew(Pqw,fqw,"when calling add in LinkedList, line 393")
call sew(Pqw,Rqw,"when calling add in LinkedList, line 393")
call sew(Pqw,Tqw,"when calling add in LinkedList, line 393")
call sew(Pqw,Yqw,"when calling add in LinkedList, line 393")
call sew(Pqw,Gqw,"when calling add in LinkedList, line 393")
call sew(Pqw,gqw,"when calling add in LinkedList, line 393")
call sew(Pqw,hqw,"when calling add in LinkedList, line 393")
call sew(Pqw,Fqw,"when calling add in LinkedList, line 393")
call sew(Pqw,kqw,"when calling add in LinkedList, line 393")
call sew(Pqw,jqw,"when calling add in LinkedList, line 393")
call sew(Pqw,xqw,"when calling add in LinkedList, line 393")
call sew(Pqw,vqw,"when calling add in LinkedList, line 393")
call sew(Pqw,mqw,"when calling add in LinkedList, line 393")
call sew(Pqw,Qqw,"when calling add in LinkedList, line 393")
call sew(Pqw,Wqw,"when calling add in LinkedList, line 393")
call sew(Pqw,Eqw,"when calling add in LinkedList, line 393")
call sew(Pqw,Zqw,"when calling add in LinkedList, line 393")
call sew(Pqw,Uqw,"when calling add in LinkedList, line 393")
set Qb=Qb-1
return Pqw
endfunction
function eqw takes integer Cew,integer Vew,integer Bew,integer New,integer Mew,integer wqw,integer uqw,integer rqw,integer sqw,integer tqw,integer iqw,integer Sqw,integer cqw,integer oqw,integer Oqw,integer lqw,integer bqw,string yqw returns integer
local integer pqw
set Wb[Qb]=yqw
set Qb=Qb+1
set pqw=y9("when calling new_LinkedList in LinkedList, line 391")
call sew(pqw,Cew,"when calling add in LinkedList, line 393")
call sew(pqw,Vew,"when calling add in LinkedList, line 393")
call sew(pqw,Bew,"when calling add in LinkedList, line 393")
call sew(pqw,New,"when calling add in LinkedList, line 393")
call sew(pqw,Mew,"when calling add in LinkedList, line 393")
call sew(pqw,wqw,"when calling add in LinkedList, line 393")
call sew(pqw,uqw,"when calling add in LinkedList, line 393")
call sew(pqw,rqw,"when calling add in LinkedList, line 393")
call sew(pqw,sqw,"when calling add in LinkedList, line 393")
call sew(pqw,tqw,"when calling add in LinkedList, line 393")
call sew(pqw,iqw,"when calling add in LinkedList, line 393")
call sew(pqw,Sqw,"when calling add in LinkedList, line 393")
call sew(pqw,cqw,"when calling add in LinkedList, line 393")
call sew(pqw,oqw,"when calling add in LinkedList, line 393")
call sew(pqw,Oqw,"when calling add in LinkedList, line 393")
call sew(pqw,lqw,"when calling add in LinkedList, line 393")
call sew(pqw,bqw,"when calling add in LinkedList, line 393")
set Qb=Qb-1
return pqw
endfunction
function nlw takes string IOw returns boolean
local integer POw
local integer AOw
local integer DOw
local integer HOw
local integer JOw
local integer KOw
local integer LOw
local integer XOw
local integer COw
local integer VOw
local integer BOw
local integer NOw
local integer MOw
local integer wlw
local integer ulw
local integer rlw
local integer slw
local integer tlw
local integer ilw
local integer Slw
local integer clw
local integer olw
local integer Olw
local integer llw
local integer blw
local integer ylw
local integer plw
local integer elw
local integer qlw
local integer alw
set Wb[Qb]=IOw
set Qb=Qb+1
set Wb[Qb]="when calling asList in Units, line 115"
set Qb=Qb+1
set AOw=y9("when calling new_LinkedList in LinkedList, line 391")
call sew(AOw,1747989317,"when calling add in LinkedList, line 393")
call sew(AOw,1747989305,"when calling add in LinkedList, line 393")
call sew(AOw,1747989316,"when calling add in LinkedList, line 393")
call sew(AOw,1747989315,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set ll=AOw
set bl=o7("when calling new_HashMap in Units, line 116")
set yl[0]=eqw(1747988528,1747988528,1747988528,1747988528,1747988528,1747988528,1747988532,1747988532,1747988532,1747988532,1211118401,1747989058,1747989058,1747989058,1747989058,1747989058,1747989058,"when calling asList in Units, line 123")
set yl[1]=eqw(1747990339,1747990339,1747990339,1747990339,1747990339,1747990339,1747990340,1747990340,1747990340,1747990340,1211119699,1747990593,1747990593,1747990593,1747990593,1747990593,1747990593,"when calling asList in Units, line 128")
set yl[2]=eqw(1747990087,1747990087,1747990087,1747990087,1747990087,1747990087,1747990088,1747990088,1747990088,1747990088,1211119701,1747989817,1747989817,1747989817,1747989817,1747989817,1747989817,"when calling asList in Units, line 134")
set yl[3]=eqw(1747989558,1747989558,1747989558,1747989558,1747989558,1747989558,1747989575,1747989575,1747989575,1747989575,1211119700,1747989571,1747989571,1747989571,1747989571,1747989571,1747989571,"when calling asList in Units, line 140")
set Wb[Qb]="when calling asList in Units, line 148"
set Qb=Qb+1
set DOw=y9("when calling new_LinkedList in LinkedList, line 391")
call sew(DOw,1747989558,"when calling add in LinkedList, line 393")
call sew(DOw,1747990339,"when calling add in LinkedList, line 393")
call sew(DOw,1747990087,"when calling add in LinkedList, line 393")
call sew(DOw,1747988528,"when calling add in LinkedList, line 393")
call sew(DOw,1747989575,"when calling add in LinkedList, line 393")
call sew(DOw,1747990340,"when calling add in LinkedList, line 393")
call sew(DOw,1747990088,"when calling add in LinkedList, line 393")
call sew(DOw,1747988532,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set pl=DOw
set Wb[Qb]="when calling asList in Units, line 160"
set Qb=Qb+1
set HOw=y9("when calling new_LinkedList in LinkedList, line 391")
call sew(HOw,1747988529,"when calling add in LinkedList, line 393")
call sew(HOw,1747988530,"when calling add in LinkedList, line 393")
call sew(HOw,1747988531,"when calling add in LinkedList, line 393")
call sew(HOw,1747990326,"when calling add in LinkedList, line 393")
call sew(HOw,1747990327,"when calling add in LinkedList, line 393")
call sew(HOw,1747990328,"when calling add in LinkedList, line 393")
call sew(HOw,1747990084,"when calling add in LinkedList, line 393")
call sew(HOw,1747990087,"when calling add in LinkedList, line 393")
call sew(HOw,1747990085,"when calling add in LinkedList, line 393")
call sew(HOw,1747989590,"when calling add in LinkedList, line 393")
call sew(HOw,1747989591,"when calling add in LinkedList, line 393")
call sew(HOw,1747989592,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set el=HOw
set Wb[Qb]="when calling asList in Units, line 175"
set Qb=Qb+1
set JOw=y9("when calling new_LinkedList in LinkedList, line 391")
call sew(JOw,1747989059,"when calling add in LinkedList, line 393")
call sew(JOw,1747989060,"when calling add in LinkedList, line 393")
call sew(JOw,1747988844,"when calling add in LinkedList, line 393")
call sew(JOw,1747990351,"when calling add in LinkedList, line 393")
call sew(JOw,1747990352,"when calling add in LinkedList, line 393")
call sew(JOw,1747990356,"when calling add in LinkedList, line 393")
call sew(JOw,1747989331,"when calling add in LinkedList, line 393")
call sew(JOw,1747990350,"when calling add in LinkedList, line 393")
call sew(JOw,1747989809,"when calling add in LinkedList, line 393")
call sew(JOw,1747990353,"when calling add in LinkedList, line 393")
call sew(JOw,1747990354,"when calling add in LinkedList, line 393")
call sew(JOw,1747990355,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set ql=JOw
set Wb[Qb]="when calling asList in Units, line 190"
set Qb=Qb+1
set KOw=y9("when calling new_LinkedList in LinkedList, line 391")
call sew(KOw,1747988529,"when calling add in LinkedList, line 393")
call sew(KOw,1747988530,"when calling add in LinkedList, line 393")
call sew(KOw,1747988531,"when calling add in LinkedList, line 393")
call sew(KOw,1747990326,"when calling add in LinkedList, line 393")
call sew(KOw,1747990327,"when calling add in LinkedList, line 393")
call sew(KOw,1747990328,"when calling add in LinkedList, line 393")
call sew(KOw,1747990084,"when calling add in LinkedList, line 393")
call sew(KOw,1747990087,"when calling add in LinkedList, line 393")
call sew(KOw,1747990085,"when calling add in LinkedList, line 393")
call sew(KOw,1747989590,"when calling add in LinkedList, line 393")
call sew(KOw,1747989591,"when calling add in LinkedList, line 393")
call sew(KOw,1747989592,"when calling add in LinkedList, line 393")
call sew(KOw,1747989555,"when calling add in LinkedList, line 393")
call sew(KOw,1747989297,"when calling add in LinkedList, line 393")
call sew(KOw,1747989325,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set al=KOw
set Wb[Qb]="when calling asList in Units, line 199"
set Qb=Qb+1
set LOw=y9("when calling new_LinkedList in LinkedList, line 391")
call sew(LOw,1747989321,"when calling add in LinkedList, line 393")
call sew(LOw,1747989321,"when calling add in LinkedList, line 393")
call sew(LOw,1747989321,"when calling add in LinkedList, line 393")
call sew(LOw,1747989321,"when calling add in LinkedList, line 393")
call sew(LOw,1747989321,"when calling add in LinkedList, line 393")
call sew(LOw,1747989321,"when calling add in LinkedList, line 393")
call sew(LOw,1747989321,"when calling add in LinkedList, line 393")
call sew(LOw,1747989321,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set nl[0]=LOw
set Wb[Qb]="when calling asList in Units, line 200"
set Qb=Qb+1
set XOw=y9("when calling new_LinkedList in LinkedList, line 391")
call sew(XOw,1747989321,"when calling add in LinkedList, line 393")
call sew(XOw,1747989321,"when calling add in LinkedList, line 393")
call sew(XOw,1747989321,"when calling add in LinkedList, line 393")
call sew(XOw,1747989321,"when calling add in LinkedList, line 393")
call sew(XOw,1747989326,"when calling add in LinkedList, line 393")
call sew(XOw,1747989326,"when calling add in LinkedList, line 393")
call sew(XOw,1747989321,"when calling add in LinkedList, line 393")
call sew(XOw,1747989321,"when calling add in LinkedList, line 393")
call sew(XOw,1747989321,"when calling add in LinkedList, line 393")
call sew(XOw,1747989321,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set nl[1]=XOw
set Wb[Qb]="when calling asList in Units, line 201"
set Qb=Qb+1
set COw=y9("when calling new_LinkedList in LinkedList, line 391")
call sew(COw,1747989321,"when calling add in LinkedList, line 393")
call sew(COw,1747989321,"when calling add in LinkedList, line 393")
call sew(COw,1747989321,"when calling add in LinkedList, line 393")
call sew(COw,1747989321,"when calling add in LinkedList, line 393")
call sew(COw,1747989326,"when calling add in LinkedList, line 393")
call sew(COw,1747989326,"when calling add in LinkedList, line 393")
call sew(COw,1747989326,"when calling add in LinkedList, line 393")
call sew(COw,1747989326,"when calling add in LinkedList, line 393")
call sew(COw,1747989326,"when calling add in LinkedList, line 393")
call sew(COw,1747989326,"when calling add in LinkedList, line 393")
call sew(COw,1747989337,"when calling add in LinkedList, line 393")
call sew(COw,1747989337,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set nl[2]=COw
set VOw=GetHandleId(gu)
set BOw=GetHandleId(kw)
set NOw=GetHandleId(ew)
set MOw=GetHandleId(qw)
set wlw=GetHandleId(Ow)
set ulw=GetHandleId(hu)
set rlw=GetHandleId(Yu)
set slw=GetHandleId(Vw)
set tlw=GetHandleId(q)
set ilw=GetHandleId(Gu)
set Slw=GetHandleId(a)
set clw=GetHandleId(fw)
set olw=GetHandleId(dw)
set Olw=GetHandleId(Rw)
set llw=GetHandleId(ow)
set blw=GetHandleId(lw)
set ylw=GetHandleId(bw)
set plw=GetHandleId(yw)
set elw=GetHandleId(pw)
set qlw=GetHandleId(aw)
set alw=GetHandleId(d)
set dl=Aqw(VOw,BOw,NOw,MOw,wlw,ulw,rlw,slw,tlw,ilw,Slw,clw,olw,Olw,llw,blw,ylw,plw,elw,qlw,alw,GetHandleId(n),"when calling asList in Units, line 204")
set POw=bl
call ppw(POw,1747989317,15,"when calling put in Units, line 231")
call ppw(POw,1747989305,50,"when calling put in Units, line 232")
call ppw(POw,1747989316,25,"when calling put in Units, line 233")
call ppw(POw,1747989315,40,"when calling put in Units, line 234")
set Qb=Qb-1
return true
endfunction
function gaw takes nothing returns boolean
set Qb=0
return nlw("Units, line 1")
endfunction
function gv takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988558,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989057,0)
endfunction
function gE takes nothing returns boolean
if GetResearched()!=1378889808 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889808,true)!=1 then
return false
endif
return true
endfunction
function hE takes nothing returns boolean
if not gE() then
return false
endif
return true
endfunction
function hH takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function gI takes nothing returns boolean
if GetResearched()!=1378890049 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890049,true)!=2 then
return false
endif
return true
endfunction
function hI takes nothing returns boolean
if not gI() then
return false
endif
return true
endfunction
function hU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651844,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651845,0)
endfunction
function Iyw takes integer Eyw,unit Zyw,string Uyw returns nothing
set Wb[Qb]=Uyw
set Qb=Qb+1
if Ml[Eyw]==0 then
if Eyw==0 then
call m6("Nullpointer exception when calling ArrayQueue.enqueue","when calling error in DummyRecycler, line 54")
else
call m6("Called ArrayQueue.enqueue on invalid object.","when calling error in DummyRecycler, line 54")
endif
endif
set Wb[Qb]="when calling enqueue in DummyRecycler, line 54"
set Qb=Qb+1
if Uc[Eyw]<6 then
set Uc[Eyw]=Uc[Eyw]+1
set Zc[Eyw]=ModuloInteger(Zc[Eyw]+1,6)
else
call m6("Queue Overflow","when calling error in DummyRecycler, line 60")
endif
set Qb=Qb-1-1
endfunction
function Q2 takes real k2,real j2,player x2,real v2 returns unit
local unit m2=CreateUnit(x2,2019849581,k2,j2,v2*57.295779513)
call SetUnitX(m2,k2)
call SetUnitY(m2,j2)
call UnitAddAbility(m2,1097691750)
call UnitRemoveAbility(m2,1097691750)
call UnitAddAbility(m2,1097625443)
set xf=m2
set m2=null
return xf
endfunction
function Z2 takes string W2 returns integer
local integer E2
set Wb[Qb]=W2
set Qb=Qb+1
set Wb[Qb]="when calling ArrayQueue in DummyRecycler, line 48"
set Qb=Qb+1
if Bl==0 then
if Nl<32768 then
set Nl=Nl+1
set E2=Nl
set Ml[E2]=626
else
call m6("Out of memory: Could not create ArrayQueue.","when calling error in DummyRecycler, line 48")
set E2=0
endif
else
set Bl=Bl-1
set E2=Vl[Bl]
set Ml[E2]=626
endif
set Qb=Qb-1
set Zc[E2]=0
set Uc[E2]=0
set Qb=Qb-1
return E2
endfunction
function F2 takes string T2 returns boolean
local integer Y2
local integer G2
local integer g2
local integer h2
set Wb[Qb]=T2
set Qb=Qb+1
set Ec=360*1./8
call CreateTimer()
set Y2=0
set G2=7
loop
exitwhen Y2>G2
set Ic[Y2]=Z2("when calling new_ArrayQueue in DummyRecycler, line 139")
set g2=0
set h2=5
loop
exitwhen g2>h2
call Iyw(Ic[Y2],Q2(Uo,Io,rS,Y2*Ec*0.017453293),"when calling enqueue in DummyRecycler, line 141")
set g2=g2+1
endloop
set Y2=Y2+1
endloop
set Qb=Qb-1
return true
endfunction
function haw takes nothing returns boolean
set Qb=0
return F2("DummyRecycler, line 1")
endfunction
function iE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989560,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989579,0)
endfunction
function iI takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990322,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990105,0)
endfunction
function tQ takes nothing returns boolean
if GetResearched()!=1378889800 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889800,true)!=2 then
return false
endif
return true
endfunction
function iQ takes nothing returns boolean
if not tQ() then
return false
endif
return true
endfunction
function iSw takes nothing returns boolean
return true
endfunction
function iT takes nothing returns nothing
call ReplaceUnitBJ(GetEnumUnit(),1747988553,bj_UNIT_STATE_METHOD_RELATIVE)
endfunction
function tZ takes nothing returns boolean
if GetResearched()!=1378890037 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890037,true)!=1 then
return false
endif
return true
endfunction
function iZ takes nothing returns boolean
if not tZ() then
return false
endif
return true
endfunction
function hlw takes string dlw returns boolean
local trigger flw
local playerunitevent Rlw
local rect Tlw
local region Ylw
local integer Glw
local integer glw
set Wb[Qb]=dlw
set Qb=Qb+1
set flw=CreateTrigger()
set Tlw=GetWorldBounds()
set Ylw=CreateRegion()
call RegionAddRect(Ylw,Tlw)
call TriggerRegisterEnterRegion(flw,Ylw,null)
call TriggerAddAction(flw,kf)
set Rlw=EVENT_PLAYER_UNIT_DEATH
set Wb[Qb]="when calling alloc_Closure in Upkeep, line 15"
set Qb=Qb+1
if Gl==0 then
if gl<32768 then
set gl=gl+1
set Glw=gl
set hl[Glw]=677
else
call m6("Out of memory: Could not create Closure.","when calling error in Upkeep, line 15")
set Glw=0
endif
else
set Gl=Gl-1
set Glw=Yl[Gl]
set hl[Glw]=677
endif
set Qb=Qb-1
set ec[Glw]=0
set qc[Glw]=0
set ac[Glw]=0
set Wb[Qb]="when calling add in Upkeep, line 15"
set Qb=Qb+1
set Wb[Qb]="when calling toIntId in ClosureEvents, line 111"
set Qb=Qb+1
set glw=oc[GetHandleId(Rlw)]
if glw==0 then
set glw=lM(Rlw,"when calling registerEventId in ClosureEvents, line 228")
endif
set Qb=Qb-1
set ec[Glw]=glw
if yc[ec[Glw]]!=0 then
set ac[yc[ec[Glw]]]=Glw
set qc[Glw]=yc[ec[Glw]]
endif
set yc[ec[Glw]]=Glw
set Qb=Qb-1-1
set flw=null
set Rlw=null
set Tlw=null
set Ylw=null
return true
endfunction
function inw takes nothing returns boolean
set Qb=0
return hlw("Upkeep, line 1")
endfunction
function jK takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function jW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989559,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989569,0)
endfunction
function jaw takes nothing returns boolean
set Qb=0
set Wb[Qb]="ObjectIdGenerator, line 1"
set Qb=Qb+1
set Wb[Qb]="when calling new_IdGenerator in ObjectIdGenerator, line 7"
set Qb=Qb+1
set Wb[Qb]="when calling IdGenerator in ObjectIdGenerator, line 20"
set Qb=Qb+1
if Yb==0 then
if Gb<32768 then
set Gb=Gb+1
else
call m6("Out of memory: Could not create IdGenerator.","when calling error in ObjectIdGenerator, line 14")
endif
else
set Yb=Yb-1
endif
set Qb=Qb-1-1
set Wb[Qb]="when calling new_IdGenerator in ObjectIdGenerator, line 8"
set Qb=Qb+1
set Wb[Qb]="when calling IdGenerator in ObjectIdGenerator, line 20"
set Qb=Qb+1
if Yb==0 then
if Gb<32768 then
set Gb=Gb+1
else
call m6("Out of memory: Could not create IdGenerator.","when calling error in ObjectIdGenerator, line 14")
endif
else
set Yb=Yb-1
endif
set Qb=Qb-1-1
set Wb[Qb]="when calling new_IdGenerator in ObjectIdGenerator, line 9"
set Qb=Qb+1
set Wb[Qb]="when calling IdGenerator in ObjectIdGenerator, line 20"
set Qb=Qb+1
if Yb==0 then
if Gb<32768 then
set Gb=Gb+1
else
call m6("Out of memory: Could not create IdGenerator.","when calling error in ObjectIdGenerator, line 14")
endif
else
set Yb=Yb-1
endif
set Qb=Qb-1-1
set Wb[Qb]="when calling new_IdGenerator in ObjectIdGenerator, line 10"
set Qb=Qb+1
set Wb[Qb]="when calling IdGenerator in ObjectIdGenerator, line 20"
set Qb=Qb+1
if Yb==0 then
if Gb<32768 then
set Gb=Gb+1
else
call m6("Out of memory: Could not create IdGenerator.","when calling error in ObjectIdGenerator, line 14")
endif
else
set Yb=Yb-1
endif
set Qb=Qb-1-1
set Wb[Qb]="when calling new_IdGenerator in ObjectIdGenerator, line 11"
set Qb=Qb+1
set Wb[Qb]="when calling IdGenerator in ObjectIdGenerator, line 20"
set Qb=Qb+1
if Yb==0 then
if Gb<32768 then
set Gb=Gb+1
else
call m6("Out of memory: Could not create IdGenerator.","when calling error in ObjectIdGenerator, line 14")
endif
else
set Yb=Yb-1
endif
set Qb=Qb-1-1
set Wb[Qb]="when calling new_IdGenerator in ObjectIdGenerator, line 12"
set Qb=Qb+1
set Wb[Qb]="when calling IdGenerator in ObjectIdGenerator, line 20"
set Qb=Qb+1
if Yb==0 then
if Gb<32768 then
set Gb=Gb+1
else
call m6("Out of memory: Could not create IdGenerator.","when calling error in ObjectIdGenerator, line 14")
endif
else
set Yb=Yb-1
endif
set Qb=Qb-1-1-1
return true
endfunction
function km takes nothing returns boolean
if GetResearched()!=1378889799 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889799,true)!=2 then
return false
endif
return true
endfunction
function jm takes nothing returns boolean
if not km() then
return false
endif
return true
endfunction
function FK takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747988531 then
return false
endif
return true
endfunction
function kK takes nothing returns boolean
if not FK() then
return false
endif
return true
endfunction
function kM takes nothing returns nothing
call TriggerRegisterUnitEvent(ic,cl,EVENT_UNIT_DAMAGED)
endfunction
function kQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989301,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988790,0)
endfunction
function FT takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989317 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function kT takes nothing returns boolean
if not FT() then
return false
endif
return true
endfunction
function FW takes nothing returns boolean
if GetResearched()!=1378889806 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889806,true)!=1 then
return false
endif
return true
endfunction
function kW takes nothing returns boolean
if not FW() then
return false
endif
return true
endfunction
function kZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989816,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989815,0)
endfunction
function Ciw takes string Hiw returns boolean
local integer Jiw
local integer Kiw
local integer Liw
local integer Xiw
set Wb[Qb]=Hiw
set Qb=Qb+1
set hO=CreateGroup()
set FO=CreateUnit(rS,2019849581,0.,0.,0)
if FO==null then
set Hiw=""
set Jiw=2019849581
set Kiw=0
loop
exitwhen Kiw>3
set Liw=ModuloInteger(Jiw,256)
set Jiw=Jiw/256
set Hiw=SubString(".................................!.#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[.]^_`abcdefghijklmnopqrstuvwxyz{|}~.................................................................................................................................",Liw,Liw+1)+Hiw
set Kiw=Kiw+1
endloop
call m6("DUMMY_UNITID ("+Hiw+") not added correctly to the map.","when calling error in Preloader, line 52")
endif
set Wb[Qb]="when calling alloc_Closure in Preloader, line 54"
set Qb=Qb+1
if Pl==0 then
if Al<32768 then
set Al=Al+1
set Xiw=Al
set Dl[Xiw]=651
else
call m6("Out of memory: Could not create Closure.","when calling error in Preloader, line 54")
set Xiw=0
endif
else
set Pl=Pl-1
set Xiw=Il[Pl]
set Dl[Xiw]=651
endif
set Qb=Qb-1
set Wb[Qb]="when calling nullTimer in Preloader, line 54"
set Qb=Qb+1
set Wb[Qb]="when calling doAfter in ClosureTimers, line 22"
set Qb=Qb+1
call Wyw(Xiw,0.,"when calling start in ClosureTimers, line 15")
set Qb=Qb-1-1-1
return true
endfunction
function kaw takes nothing returns boolean
set Qb=0
return Ciw("Preloader, line 1")
endfunction
function OH takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990356 then
return false
endif
return true
endfunction
function lH takes nothing returns boolean
if not OH() then
return false
endif
return true
endfunction
function lP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990595,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990608,0)
endfunction
function OU takes nothing returns boolean
if GetResearched()!=1378890036 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890036,true)!=1 then
return false
endif
return true
endfunction
function lU takes nothing returns boolean
if not OU() then
return false
endif
return true
endfunction
function lnw takes nothing returns nothing
set Qb=0
set Wb[Qb]="ClosureEvents, line 287"
set Qb=Qb+1
call UM("when calling generalEventCallback in ClosureEvents, line 287")
set Qb=Qb-1
endfunction
function lv takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988567,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988564,0)
endfunction
function hG takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988824 then
return false
endif
return true
endfunction
function FG takes nothing returns boolean
if not hG() then
return false
endif
return true
endfunction
function GG takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988825 then
return false
endif
return true
endfunction
function gG takes nothing returns boolean
if not GG() then
return false
endif
return true
endfunction
function kG takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988826 then
return false
endif
return true
endfunction
function jG takes nothing returns boolean
if not kG() then
return false
endif
return true
endfunction
function xG takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989079 then
return false
endif
return true
endfunction
function vG takes nothing returns boolean
if not xG() then
return false
endif
return true
endfunction
function mG takes nothing returns nothing
if gG() then
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747989047,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"Death Alternate")
endif
if FG() then
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747989046,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"Death Alternate")
endif
if jG() then
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747989077,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"Death Alternate")
endif
if vG() then
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747989078,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"Death Alternate")
endif
endfunction
function vH takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990356 then
return false
endif
return true
endfunction
function mH takes nothing returns boolean
if not vH() then
return false
endif
return true
endfunction
function mP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990603,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990604,0)
endfunction
function mSw takes nothing returns boolean
set xO=-340282366920938000000000000000000000000.
return true
endfunction
function vU takes nothing returns boolean
if GetResearched()!=1378890038 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890038,true)!=1 then
return false
endif
return true
endfunction
function mU takes nothing returns boolean
if not vU() then
return false
endif
return true
endfunction
function nL takes string qL returns boolean
local integer aL
set Wb[Qb]=qL
set Qb=Qb+1
set sS=o7("when calling new_HashMap in CityBaseTaxes, line 5")
set aL=sS
set Wb[Qb]="when calling saveInt in CityBaseTaxes, line 9"
set Qb=Qb+1
if cb[aL]==0 then
if aL==0 then
call m6("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call m6("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(wl,aL,1747988529,20)
set Qb=Qb-1
set Wb[Qb]="when calling saveInt in CityBaseTaxes, line 10"
set Qb=Qb+1
if cb[aL]==0 then
if aL==0 then
call m6("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call m6("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(wl,aL,1747988530,50)
set Qb=Qb-1
set Wb[Qb]="when calling saveInt in CityBaseTaxes, line 11"
set Qb=Qb+1
if cb[aL]==0 then
if aL==0 then
call m6("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call m6("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(wl,aL,1747988531,120)
set Qb=Qb-1
set Wb[Qb]="when calling saveInt in CityBaseTaxes, line 12"
set Qb=Qb+1
if cb[aL]==0 then
if aL==0 then
call m6("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call m6("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(wl,aL,1747990326,20)
set Qb=Qb-1
set Wb[Qb]="when calling saveInt in CityBaseTaxes, line 13"
set Qb=Qb+1
if cb[aL]==0 then
if aL==0 then
call m6("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call m6("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(wl,aL,1747990327,50)
set Qb=Qb-1
set Wb[Qb]="when calling saveInt in CityBaseTaxes, line 14"
set Qb=Qb+1
if cb[aL]==0 then
if aL==0 then
call m6("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call m6("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(wl,aL,1747990328,120)
set Qb=Qb-1
set Wb[Qb]="when calling saveInt in CityBaseTaxes, line 15"
set Qb=Qb+1
if cb[aL]==0 then
if aL==0 then
call m6("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call m6("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(wl,aL,1747990084,20)
set Qb=Qb-1
set Wb[Qb]="when calling saveInt in CityBaseTaxes, line 16"
set Qb=Qb+1
if cb[aL]==0 then
if aL==0 then
call m6("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call m6("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(wl,aL,1747990087,50)
set Qb=Qb-1
set Wb[Qb]="when calling saveInt in CityBaseTaxes, line 17"
set Qb=Qb+1
if cb[aL]==0 then
if aL==0 then
call m6("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call m6("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(wl,aL,1747990085,120)
set Qb=Qb-1
set Wb[Qb]="when calling saveInt in CityBaseTaxes, line 18"
set Qb=Qb+1
if cb[aL]==0 then
if aL==0 then
call m6("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call m6("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(wl,aL,1747989590,20)
set Qb=Qb-1
set Wb[Qb]="when calling saveInt in CityBaseTaxes, line 19"
set Qb=Qb+1
if cb[aL]==0 then
if aL==0 then
call m6("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call m6("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(wl,aL,1747989591,50)
set Qb=Qb-1
set Wb[Qb]="when calling saveInt in CityBaseTaxes, line 20"
set Qb=Qb+1
if cb[aL]==0 then
if aL==0 then
call m6("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call m6("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(wl,aL,1747989592,120)
set Qb=Qb-1
set Wb[Qb]="when calling saveInt in CityBaseTaxes, line 22"
set Qb=Qb+1
if cb[aL]==0 then
if aL==0 then
call m6("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call m6("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(wl,aL,1747989555,5)
set Qb=Qb-1
set Wb[Qb]="when calling saveInt in CityBaseTaxes, line 23"
set Qb=Qb+1
if cb[aL]==0 then
if aL==0 then
call m6("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call m6("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(wl,aL,1747989297,10)
set Qb=Qb-1
set Wb[Qb]="when calling saveInt in CityBaseTaxes, line 24"
set Qb=Qb+1
if cb[aL]==0 then
if aL==0 then
call m6("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call m6("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(wl,aL,1747989325,30)
set Qb=Qb-1-1
return true
endfunction
function maw takes nothing returns boolean
set Qb=0
return nL("CityBaseTaxes, line 1")
endfunction
function mcw takes nothing returns boolean
return true
endfunction
function mg takes nothing returns nothing
local location Yg
local location Gg
local real gg
local real hg
local rect Fg
local group kg
local group jg
local code xg
local boolean vg
set u=GetUnitLoc(GetSpellAbilityUnit())
set Yg=u
set c=Location(GetLocationX(Yg)+200.00,GetLocationY(Yg)+0.00)
set Gg=u
set gg=GetLocationX(Gg)
set hg=GetLocationY(Gg)
set O=Rect(gg-150,hg-140,gg+150,hg+140)
set Fg=O
set kg=CreateGroup()
call GroupEnumUnitsInRect(kg,Fg,null)
call DestroyBoolExpr(null)
set l=kg
set jg=l
set xg=Dy
set vg=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(jg,xg)
if vg then
call DestroyGroup(jg)
endif
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747988826,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"stand")
call DestroyGroup(l)
call RemoveLocation(c)
call RemoveLocation(u)
set Yg=null
set Gg=null
set Fg=null
set kg=null
set jg=null
endfunction
function mv takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988551,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989081,0)
endfunction
function n0w takes nothing returns nothing
set Qo=Qo+0.01
endfunction
function nG takes nothing returns boolean
if GetSpellAbilityId()!=1093677620 then
return false
endif
return true
endfunction
function aH takes nothing returns boolean
if GetUnitTypeId(GetConstructedStructure())!=1747990351 then
return false
endif
return true
endfunction
function nH takes nothing returns boolean
if not aH() then
return false
endif
return true
endfunction
function nP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990596,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990595,0)
endfunction
function aU takes nothing returns boolean
if GetResearched()!=1378890036 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890036,true)!=2 then
return false
endif
return true
endfunction
function nU takes nothing returns boolean
if not aU() then
return false
endif
return true
endfunction
function Eow takes string Qow returns boolean
local integer Wow
set Wb[Qb]=Qow
set Qb=Qb+1
set tl=Xcw("when calling new_Table in TypeCasting, line 6")
set Wb[Qb]="when calling initTypecastData in TypeCasting, line 14"
set Qb=Qb+1
set Wow=tl
set Wb[Qb]="when calling saveString in TypeCasting, line 11"
set Qb=Qb+1
if cb[Wow]==0 then
if Wow==0 then
call m6("Nullpointer exception when calling Table.saveString","when calling error in Table, line 60")
else
call m6("Called Table.saveString on invalid object.","when calling error in Table, line 60")
endif
endif
call SaveStr(wl,Wow,0,"")
set Qb=Qb-1-1-1
return true
endfunction
function naw takes nothing returns boolean
set Qb=0
return Eow("TypeCasting, line 1")
endfunction
function Zbw takes integer Qbw,string Wbw,string Ebw returns nothing
set Wb[Qb]=Ebw
set Qb=Qb+1
if Ql[Qbw]==0 then
if Qbw==0 then
call m6("Nullpointer exception when calling City.changeCityName","when calling error in City, line 159")
else
call m6("Called City.changeCityName on invalid object.","when calling error in City, line 159")
endif
endif
set Wb[Qb]="when calling changeCityName in City, line 159"
set Qb=Qb+1
set PS[Qbw]=SubString(Wbw,0,24)
set Wb[Qb]="when calling refreshMultiboardIfPossible in City, line 162"
set Qb=Qb+1
if Ql[Qbw]==0 then
if Qbw==0 then
call m6("Nullpointer exception when calling City.refreshMultiboardIfPossible","when calling error in City, line 237")
else
call m6("Called City.refreshMultiboardIfPossible on invalid object.","when calling error in City, line 237")
endif
endif
call dV(Qbw,"when calling refreshMultiboardIfPossible in City, line 237")
set Qb=Qb-1-1-1
endfunction
function bbw takes string obw returns integer
local integer Obw=0
local integer lbw=23
loop
exitwhen Obw>lbw
if GetPlayerName(dO[Obw])==obw then
return Obw
endif
set Obw=Obw+1
endloop
return -1
endfunction
function ubw takes nothing returns integer
local integer Vlw=0
local integer Blw=0
local integer Nlw=23
local player Mlw
local boolean wbw
loop
exitwhen Blw>Nlw
set Mlw=dO[Blw]
if GetPlayerSlotState(Mlw)==PLAYER_SLOT_STATE_PLAYING then
set wbw=GetPlayerController(Mlw)==MAP_CONTROL_USER
else
set wbw=false
endif
if wbw then
set Vlw=Vlw+1
endif
set Blw=Blw+1
endloop
set Mlw=null
return R2I((Vlw-1)*1./2)+1
endfunction
function cbw takes integer rbw returns nothing
local string sbw
local force tbw
local string ibw
local force Sbw
if rbw<0 then
set tbw=null
set Sbw=null
return
endif
if fl[rbw]>=ubw() then
call CustomDefeatBJ(dO[rbw],"You've been kicked from the game!")
set sbw="The player "+C3(dO[rbw])+" has been kicked with the power of democracy!"
set tbw=bj_FORCE_ALL_PLAYERS
if IsPlayerInForce(GetLocalPlayer(),tbw) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,10.0,sbw)
endif
else
set ibw=I2S(fl[rbw])+" |cffff0000out of|r "+I2S(ubw())+" |cffff0000voted to kick the player|r "+C3(dO[rbw])+"! |cff00ffdd(player number is "+I2S(rbw)+")|r"
set Sbw=bj_FORCE_ALL_PLAYERS
if IsPlayerInForce(GetLocalPlayer(),Sbw) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,10.0,ibw)
endif
endif
set tbw=null
set Sbw=null
endfunction
function qbw takes integer ybw,player pbw,string ebw returns nothing
set Wb[Qb]=ebw
set Qb=Qb+1
if ybw<0 then
set Qb=Qb-1
return
endif
if not spw(Rl[ybw],GetPlayerId(pbw),"when calling has in VoteKick, line 68") then
set fl[ybw]=fl[ybw]+1
endif
set Qb=Qb-1
endfunction
function w9 takes integer V8,integer B8 returns integer
local integer N8=no[Yo[V8]]
local integer M8=0
loop
exitwhen N8==Yo[V8]
if qo[N8]==B8 then
return M8
endif
set N8=no[N8]
set M8=M8+1
endloop
return -1
endfunction
function jbw takes player abw,string nbw,string dbw returns nothing
local integer fbw
local integer Rbw
local integer Tbw
local boolean Ybw
local integer Gbw
local integer gbw
local integer hbw
local boolean Fbw
local boolean kbw
set Wb[Qb]=dbw
set Qb=Qb+1
set fbw=24
if StringLength(nbw)<=2 then
set Fbw=S2I(nbw)>=0
else
set Fbw=false
endif
if Fbw then
set kbw=S2I(nbw)<24
else
set kbw=false
endif
if kbw then
set fbw=S2I(nbw)
else
set Rbw=Tl
set Tbw=Jow(nbw,"when calling stringToIndex in VoteKick, line 77")
set Wb[Qb]="when calling has in VoteKick, line 77"
set Qb=Qb+1
if Tb[Rbw]==0 then
if Rbw==0 then
call m6("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call m6("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set Ybw=t9(Rbw,Tbw)
set Qb=Qb-1
if Ybw then
set Gbw=Tl
set gbw=Jow(nbw,"when calling stringToIndex in VoteKick, line 78")
set Wb[Qb]="when calling indexOf in VoteKick, line 78"
set Qb=Qb+1
if Tb[Gbw]==0 then
if Gbw==0 then
call m6("Nullpointer exception when calling LinkedList.indexOf","when calling error in LinkedList, line 54")
else
call m6("Called LinkedList.indexOf on invalid object.","when calling error in LinkedList, line 54")
endif
endif
set hbw=w9(Gbw,gbw)
set Qb=Qb-1
set fbw=hbw
elseif bbw(nbw)!=-1 then
set fbw=bbw(nbw)
endif
endif
call qbw(fbw,abw,"when calling addVote in VoteKick, line 82")
call cbw(fbw)
set Qb=Qb-1
endfunction
function K1 takes string e1 returns nothing
local string q1
local string array a1
local player n1
local integer d1
local integer f1
local integer R1
local string T1
local string Y1
local player G1
local camerafield g1
local player h1
local camerafield F1
local integer k1
local integer j1
local integer x1
local unit v1
local integer m1
local integer Q1
local integer W1
local integer E1
local integer Z1
local integer U1
local integer I1
local integer P1
local integer A1
local integer D1
local integer H1
local boolean J1
set Wb[Qb]=e1
set Qb=Qb+1
set q1=GetEventPlayerChatString()
set e1=""
set n1=GetTriggerPlayer()
set d1=0
set f1=1
set R1=StringLength(q1)
loop
exitwhen f1>R1
set T1=SubString(q1,f1,f1+1)
if d1>0 then
set J1=f1>StringLength(a1[0])+1
else
set J1=false
endif
if J1 then
set e1=e1+T1
endif
if T1!=" " then
set a1[d1]=a1[d1]+T1
else
set d1=d1+1
endif
set f1=f1+1
endloop
if a1[0]=="far" then
set G1=GetTriggerPlayer()
set g1=CAMERA_FIELD_TARGET_DISTANCE
if GetLocalPlayer()==G1 then
call SetCameraField(g1,3000.0,0.)
endif
elseif a1[0]=="med" then
set h1=GetTriggerPlayer()
set F1=CAMERA_FIELD_TARGET_DISTANCE
if GetLocalPlayer()==h1 then
call SetCameraField(F1,2300.0,0.)
endif
elseif a1[0]=="name" then
call SetPlayerName(GetTriggerPlayer(),SubString(e1,0,40))
elseif a1[0]=="rename" then
set k1=yO[GetPlayerId(n1)]
set Wb[Qb]="when calling getSelectedCityId in Commands, line 49"
set Qb=Qb+1
if kb[k1]==0 then
if k1==0 then
call m6("Nullpointer exception when calling PlayerStats.getSelectedCityId","when calling error in PlayerStats, line 84")
else
call m6("Called PlayerStats.getSelectedCityId on invalid object.","when calling error in PlayerStats, line 84")
endif
endif
set j1=aO[k1]
set Qb=Qb-1
if j1>=0 and j1<gS then
set x1=QS[j1]
set Wb[Qb]="when calling getCityUnit in Commands, line 51"
set Qb=Qb+1
if Ql[x1]==0 then
if x1==0 then
call m6("Nullpointer exception when calling City.getCityUnit","when calling error in City, line 176")
else
call m6("Called City.getCityUnit on invalid object.","when calling error in City, line 176")
endif
endif
set v1=IS[x1]
set Qb=Qb-1
if GetOwningPlayer(v1)!=n1 then
set Wb[Qb]="when calling noteToPlayer in Commands, line 52"
set Qb=Qb+1
call DisplayTimedTextToPlayer(n1,0.,0.,10.0,Zww(n1,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(n1,0.,0.,10.0,"The city you wanted to rename so eagerly doesn't belong to you!")
set Qb=Qb-1
else
call Zbw(QS[j1],e1,"when calling changeCityName in Commands, line 54")
endif
endif
elseif a1[0]=="add_mod" then
set m1=yO[GetPlayerId(n1)]
set Wb[Qb]="when calling getSelectedCityId in Commands, line 56"
set Qb=Qb+1
if kb[m1]==0 then
if m1==0 then
call m6("Nullpointer exception when calling PlayerStats.getSelectedCityId","when calling error in PlayerStats, line 84")
else
call m6("Called PlayerStats.getSelectedCityId on invalid object.","when calling error in PlayerStats, line 84")
endif
endif
set Q1=aO[m1]
set Qb=Qb-1
if not vo then
set Qb=Qb-1
set n1=null
set G1=null
set g1=null
set h1=null
set F1=null
set v1=null
return
endif
if Q1>=0 and Q1<gS then
set Y1=a1[1]
if Y1=="massacred_pop" then
set W1=QS[Q1]
set Wb[Qb]="when calling addModifier in Commands, line 62"
set Qb=Qb+1
if Ql[W1]==0 then
if W1==0 then
call m6("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call m6("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call lV(W1,6,"when calling addModifier in City, line 355")
set Qb=Qb-1
elseif Y1=="recently_conquered" then
set E1=QS[Q1]
set Wb[Qb]="when calling addModifier in Commands, line 64"
set Qb=Qb+1
if Ql[E1]==0 then
if E1==0 then
call m6("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call m6("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call lV(E1,0,"when calling addModifier in City, line 355")
set Qb=Qb-1
elseif Y1=="recently_revolted" then
set Z1=QS[Q1]
set Wb[Qb]="when calling addModifier in Commands, line 66"
set Qb=Qb+1
if Ql[Z1]==0 then
if Z1==0 then
call m6("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call m6("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call lV(Z1,1,"when calling addModifier in City, line 355")
set Qb=Qb-1
elseif Y1=="more_trade_estabilished" then
set U1=QS[Q1]
set Wb[Qb]="when calling addModifier in Commands, line 68"
set Qb=Qb+1
if Ql[U1]==0 then
if U1==0 then
call m6("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call m6("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call lV(U1,5,"when calling addModifier in City, line 355")
set Qb=Qb-1
elseif Y1=="on_fire" then
set I1=QS[Q1]
set Wb[Qb]="when calling addModifier in Commands, line 70"
set Qb=Qb+1
if Ql[I1]==0 then
if I1==0 then
call m6("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call m6("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call lV(I1,4,"when calling addModifier in City, line 355")
set Qb=Qb-1
elseif Y1=="plague_outburst" then
set P1=QS[Q1]
set Wb[Qb]="when calling addModifier in Commands, line 72"
set Qb=Qb+1
if Ql[P1]==0 then
if P1==0 then
call m6("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call m6("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call lV(P1,3,"when calling addModifier in City, line 355")
set Qb=Qb-1
elseif Y1=="population_boom" then
set A1=QS[Q1]
set Wb[Qb]="when calling addModifier in Commands, line 74"
set Qb=Qb+1
if Ql[A1]==0 then
if A1==0 then
call m6("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call m6("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call lV(A1,2,"when calling addModifier in City, line 355")
set Qb=Qb-1
elseif Y1=="prospering" then
set D1=QS[Q1]
set Wb[Qb]="when calling addModifier in Commands, line 76"
set Qb=Qb+1
if Ql[D1]==0 then
if D1==0 then
call m6("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call m6("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call lV(D1,7,"when calling addModifier in City, line 355")
set Qb=Qb-1
elseif Y1=="sieged" then
set H1=QS[Q1]
set Wb[Qb]="when calling addModifier in Commands, line 78"
set Qb=Qb+1
if Ql[H1]==0 then
if H1==0 then
call m6("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call m6("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call lV(H1,8,"when calling addModifier in City, line 355")
set Qb=Qb-1
endif
endif
elseif a1[0]=="непереводимоесочетаниебукв" then
set vo=not vo
set xo=not xo
call a0w(n1)
elseif a1[0]=="votekick" then
call jbw(n1,e1,"when calling voteKick in Commands, line 84")
endif
set Qb=Qb-1
set n1=null
set G1=null
set g1=null
set h1=null
set F1=null
set v1=null
endfunction
function nnw takes nothing returns nothing
set Qb=0
call K1("Commands, line 91")
endfunction
function nv takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989057,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989058,0)
endfunction
function o4 takes nothing returns boolean
local trigger t4=CreateTrigger()
local trigger i4=t4
local playerunitevent S4=EVENT_PLAYER_UNIT_SPELL_EFFECT
local integer c4=0
loop
call TriggerRegisterPlayerUnitEvent(i4,Player(c4),S4,null)
set c4=c4+1
exitwhen c4==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(t4,Condition(af))
call TriggerAddAction(t4,nf)
set t4=null
set i4=null
set S4=null
return true
endfunction
function oA takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651850,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651849,0)
endfunction
function cJ takes nothing returns boolean
if GetUnitTypeId(GetConstructedStructure())!=1747989059 then
return false
endif
return true
endfunction
function oJ takes nothing returns boolean
if not cJ() then
return false
endif
return true
endfunction
function oh takes nothing returns nothing
local group ih
local code Sh
local boolean ch
set w=GetUnitsOfTypeIdAll(1747988790)
set ih=w
set Sh=Cy
set ch=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(ih,Sh)
if ch then
call DestroyGroup(ih)
endif
call DestroyGroup(w)
set ih=null
endfunction
function om takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989065,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989296,0)
endfunction
function CM takes integer KM,string LM returns nothing
local integer XM
set Wb[Qb]=LM
set Qb=Qb+1
set XM=yc[ec[KM]]
if XM==KM then
set yc[ec[KM]]=qc[KM]
elseif ac[KM]!=0 then
set qc[ac[KM]]=qc[KM]
endif
set ac[qc[KM]]=ac[KM]
set XM=pc[ec[KM]]
if XM==KM then
set pc[ec[KM]]=qc[KM]
elseif ac[KM]!=0 then
set qc[ac[KM]]=qc[KM]
endif
set ac[qc[KM]]=ac[KM]
set qc[KM]=0
set ac[KM]=0
set Wb[Qb]="when calling EventListener in ClosureEvents, line 201"
set Qb=Qb+1
if hl[KM]==0 then
call m6("Double free: object of type EventListener","when calling error in ClosureEvents, line 98")
else
set Yl[Gl]=KM
set Gl=Gl+1
set hl[KM]=0
endif
set Qb=Qb-1-1
endfunction
function YM takes integer dM,string fM returns nothing
local integer RM
local integer TM
set Wb[Qb]=fM
set Qb=Qb+1
if dM>0 then
if pc[dM]!=0 then
set RM=pc[dM]
set pc[dM]=0
loop
exitwhen RM==0
set TM=RM
set RM=qc[RM]
set fM="when calling EventListener in ClosureEvents, line 275"
set Wb[Qb]="when calling EventListener in ClosureEvents, line 275"
set Qb=Qb+1
if hl[TM]==0 then
if TM==0 then
call m6("Nullpointer exception when calling EventListener.EventListener","when calling error in ClosureEvents, line 98")
else
call m6("Called EventListener.EventListener on invalid object.","when calling error in ClosureEvents, line 98")
endif
endif
call CM(TM,"when calling destroyEventListener in ClosureEvents, line 98")
set Qb=Qb-1
endloop
endif
endif
set Qb=Qb-1
endfunction
function NM takes integer VM,string BM returns nothing
set Wb[Qb]=BM
set Qb=Qb+1
if Rc[VM]!=null then
if dpw(bc,GetHandleId(Rc[VM]),"when calling get in ClosureEvents, line 60")==VM then
call ppw(bc,GetHandleId(Rc[VM]),nc[VM],"when calling put in ClosureEvents, line 62")
elseif dc[VM]!=0 then
set nc[dc[VM]]=nc[VM]
endif
elseif dpw(lc,fc[VM],"when calling get in ClosureEvents, line 66")==VM then
call ppw(lc,fc[VM],nc[VM],"when calling put in ClosureEvents, line 68")
elseif dc[VM]!=0 then
set nc[dc[VM]]=nc[VM]
endif
set dc[nc[VM]]=dc[VM]
set nc[VM]=0
set dc[VM]=0
set Qb=Qb-1
endfunction
function cyw takes integer iyw,string Syw returns nothing
set Wb[Qb]=Syw
set Qb=Qb+1
if Cl[iyw]==0 then
if iyw==0 then
call m6("Nullpointer exception when calling OnCastListener.OnCastListener","when calling error in ClosureEvents, line 50")
else
call m6("Called OnCastListener.OnCastListener on invalid object.","when calling error in ClosureEvents, line 50")
endif
endif
set Wb[Qb]="when calling destroyOnCastListener in ClosureEvents, line 50"
set Qb=Qb+1
call NM(iyw,"when calling OnCastListener_onDestroy in ClosureEvents, line 58")
set Wb[Qb]="when calling OnCastListener in ClosureEvents, line 58"
set Qb=Qb+1
if Cl[iyw]==0 then
call m6("Double free: object of type OnCastListener","when calling error in ClosureEvents, line 50")
else
set Xl=Xl+1
set Cl[iyw]=0
endif
set Qb=Qb-1-1-1
endfunction
function nM takes unit bM,string yM returns nothing
local integer pM
local integer eM
local integer qM
local integer aM
set Wb[Qb]=yM
set Qb=Qb+1
call YM(GetUnitUserData(bM),"when calling unregisterEvents in ClosureEvents, line 251")
if opw(bc,GetHandleId(bM),"when calling has in ClosureEvents, line 252") then
set pM=dpw(bc,GetHandleId(bM),"when calling get in ClosureEvents, line 253")
call Ypw(bc,GetHandleId(bM),"when calling remove in ClosureEvents, line 254")
loop
exitwhen pM==0
set eM=pM
set pM=nc[pM]
call cyw(eM,"when calling OnCastListener in ClosureEvents, line 258")
endloop
endif
if opw(bc,GetHandleId(bM),"when calling has in ClosureEvents, line 259") then
set qM=dpw(bc,GetHandleId(bM),"when calling get in ClosureEvents, line 260")
loop
exitwhen qM==0
set aM=qM
set qM=nc[qM]
call cyw(aM,"when calling OnCastListener in ClosureEvents, line 264")
endloop
endif
set Qb=Qb-1
endfunction
function onw takes nothing returns nothing
set Qb=0
set Wb[Qb]="ClosureEvents, line 283"
set Qb=Qb+1
call nM(ol,"when calling unregisterEventsForUnit in ClosureEvents, line 283")
set Qb=Qb-1
endfunction
function p1 takes nothing returns boolean
local trigger l1=CreateTrigger()
local trigger O1
local integer b1
local integer y1
call TriggerAddCondition(l1,Condition(ef))
call TriggerAddAction(l1,qf)
set O1=l1
set b1=0
set y1=23
loop
exitwhen b1>y1
call TriggerRegisterPlayerChatEvent(O1,dO[b1],"-",false)
set b1=b1+1
endloop
set O1=null
set l1=null
return true
endfunction
function p9 takes nothing returns boolean
return true
endfunction
function pA takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990584,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990594,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990583,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990607,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990598,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990606,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990599,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990601,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651855,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651852,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651850,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990595,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990596,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990604,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990603,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990322,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990323,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990321,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990324,0)
endfunction
function yK takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990086 then
return false
endif
return true
endfunction
function pK takes nothing returns boolean
if not yK() then
return false
endif
return true
endfunction
function pOw takes nothing returns boolean
return true
endfunction
function pQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651828,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651827,0)
endfunction
function yW takes nothing returns boolean
if GetResearched()!=1378889807 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889807,true)!=1 then
return false
endif
return true
endfunction
function pW takes nothing returns boolean
if not yW() then
return false
endif
return true
endfunction
function pZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651848,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651846,0)
endfunction
function pnw takes nothing returns nothing
set Qb=0
set Wb[Qb]="ClosureForGroups, line 12"
set Qb=Qb+1
call dyw(Yc[Gc-1],GetFilterUnit(),"when calling callback in ClosureForGroups, line 12")
set Qb=Qb-1
endfunction
function pow takes nothing returns boolean
return true
endfunction
function pww takes nothing returns boolean
return true
endfunction
function q9 takes nothing returns boolean
set xo=true
set vo=true
set mo=CreateTimer()
call TimerStart(mo,0.01,true,ff)
return true
endfunction
function eJ takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747988809 then
return false
endif
return true
endfunction
function qJ takes nothing returns boolean
if not eJ() then
return false
endif
return true
endfunction
function qOw takes nothing returns boolean
set il=CreateTrigger()
set Sl=CreateTrigger()
set cl=null
set ol=null
call TriggerAddCondition(oO,Filter(hf))
call TriggerAddAction(oO,Ff)
return true
endfunction
function eT takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989043 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function qT takes nothing returns boolean
if not eT() then
return false
endif
return true
endfunction
function qm takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989067,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989065,0)
endfunction
function Aww takes integer Www,integer Eww,string Zww_2 returns nothing
local integer Uww
local boolean Iww
local integer Pww
set Wb[Qb]=Zww_2
set Qb=Qb+1
set Eww=0
set Uww=23
loop
exitwhen Eww>Uww
set Www=yO[Eww]
set Wb[Qb]="when calling isInGame in MultiboardCityUpdate, line 27"
set Qb=Qb+1
if kb[Www]==0 then
if Www==0 then
call m6("Nullpointer exception when calling PlayerStats.isInGame","when calling error in PlayerStats, line 14")
else
call m6("Called PlayerStats.isInGame on invalid object.","when calling error in PlayerStats, line 14")
endif
endif
set Iww=qO[Www]
set Qb=Qb-1
if Iww then
set Pww=yO[Eww]
set Zww_2="when calling refreshMultiboardCity in MultiboardCityUpdate, line 28"
set Wb[Qb]="when calling refreshMultiboardCity in MultiboardCityUpdate, line 28"
set Qb=Qb+1
if kb[Pww]==0 then
if Pww==0 then
call m6("Nullpointer exception when calling PlayerStats.refreshMultiboardCity","when calling error in PlayerStats, line 43")
else
call m6("Called PlayerStats.refreshMultiboardCity on invalid object.","when calling error in PlayerStats, line 43")
endif
endif
call hiw(Pww,"when calling refreshMultiboardCity in PlayerStats, line 43")
set Qb=Qb-1
endif
set Eww=Eww+1
endloop
set Qb=Qb-1
endfunction
function K5 takes integer Q5,integer W5,string E5 returns nothing
local integer Z5
local integer U5
local multiboard I5
local integer P5
local boolean A5
local integer D5
local string H5
local integer J5
set Wb[Qb]=E5
set Qb=Qb+1
set Z5=0
set U5=23
loop
exitwhen Z5>U5
set P5=yO[Z5]
set E5="when calling isInGame in Economy, line 45"
set Wb[Qb]="when calling isInGame in Economy, line 45"
set Qb=Qb+1
if kb[P5]==0 then
if P5==0 then
call m6("Nullpointer exception when calling PlayerStats.isInGame","when calling error in PlayerStats, line 14")
else
call m6("Called PlayerStats.isInGame on invalid object.","when calling error in PlayerStats, line 14")
endif
endif
set A5=qO[P5]
set Qb=Qb-1
if A5 then
set I5=SO[Z5]
set D5=Mo[0]
set W5=Mo[1]
set Q5=yO[Z5]
set Wb[Qb]="when calling getUpkeep in Economy, line 47"
set Qb=Qb+1
if kb[Q5]==0 then
if Q5==0 then
call m6("Nullpointer exception when calling PlayerStats.getUpkeep","when calling error in PlayerStats, line 20")
else
call m6("Called PlayerStats.getUpkeep on invalid object.","when calling error in PlayerStats, line 20")
endif
endif
set J5=nO[Q5]
set Qb=Qb-1
set H5=Ucw(J5)
call MultiboardSetItemValue(MultiboardGetItem(I5,W5,D5),H5)
endif
set Z5=Z5+1
endloop
set Qb=Qb-1
set I5=null
endfunction
function NN takes integer WN,integer EN,string ZN returns nothing
local integer UN
local real IN
local integer PN
local real AN
local real DN
local integer HN
local real JN
local integer KN
local real LN
local integer XN
local integer CN
local integer VN
local integer BN
set Wb[Qb]=ZN
set Qb=Qb+1
set IN=dS[dpw(eS,2,"when calling get in City, line 143")]
if GetRandomReal(0.0,1.0)<=IN then
set PN=sc[WN]
set Wb[Qb]="when calling addModifier in City, line 144"
set Qb=Qb+1
if Ql[PN]==0 then
if PN==0 then
call m6("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call m6("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call lV(PN,2,"when calling addModifier in City, line 355")
set Qb=Qb-1
endif
set AN=dS[dpw(eS,5,"when calling get in City, line 145")]
if GetRandomReal(0.0,1.0)<=AN then
set EN=sc[WN]
set Wb[Qb]="when calling addModifier in City, line 146"
set Qb=Qb+1
if Ql[EN]==0 then
if EN==0 then
call m6("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call m6("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call lV(EN,5,"when calling addModifier in City, line 355")
set Qb=Qb-1
endif
set DN=dS[dpw(eS,7,"when calling get in City, line 147")]
if GetRandomReal(0.0,1.0)<=DN then
set HN=sc[WN]
set Wb[Qb]="when calling addModifier in City, line 148"
set Qb=Qb+1
if Ql[HN]==0 then
if HN==0 then
call m6("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call m6("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call lV(HN,7,"when calling addModifier in City, line 355")
set Qb=Qb-1
endif
set JN=dS[dpw(eS,3,"when calling get in City, line 149")]
if GetRandomReal(0.0,1.0)<=JN then
set KN=sc[WN]
set Wb[Qb]="when calling addModifier in City, line 150"
set Qb=Qb+1
if Ql[KN]==0 then
if KN==0 then
call m6("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call m6("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call lV(KN,3,"when calling addModifier in City, line 355")
set Qb=Qb-1
endif
set LN=dS[dpw(eS,4,"when calling get in City, line 151")]
if GetRandomReal(0.0,1.0)<=LN then
set XN=sc[WN]
set Wb[Qb]="when calling addModifier in City, line 152"
set Qb=Qb+1
if Ql[XN]==0 then
if XN==0 then
call m6("Nullpointer exception when calling City.addModifier","when calling error in City, line 355")
else
call m6("Called City.addModifier on invalid object.","when calling error in City, line 355")
endif
endif
call lV(XN,4,"when calling addModifier in City, line 355")
set Qb=Qb-1
endif
set CN=uc[sc[WN]]
set Wb[Qb]="when calling iterator in City, line 154"
set Qb=Qb+1
set VN=C8(CN,"when calling new_LLIterator in LinkedList, line 165")
set Qb=Qb-1
set UN=VN
loop
exitwhen no[fo[UN]]==do[UN]
set fo[UN]=no[fo[UN]]
set BN=sc[WN]
set Wb[Qb]="when calling getCityModifierOnLongCount in City, line 155"
set Qb=Qb+1
if Ql[BN]==0 then
if BN==0 then
call m6("Nullpointer exception when calling City.getCityModifierOnLongCount","when calling error in City, line 402")
else
call m6("Called City.getCityModifierOnLongCount on invalid object.","when calling error in City, line 402")
endif
endif
set Qb=Qb-1
endloop
set Wb[Qb]="when calling close in City, line 154"
set Qb=Qb+1
if To[UN]then
call jpw(UN,"when calling LLIterator in LinkedList, line 450")
endif
set Qb=Qb-1-1
endfunction
function HB takes integer EB,integer ZB,real UB,string IB returns nothing
local integer PB
local real AB
local integer DB
set Wb[Qb]=IB
set Qb=Qb+1
set PB=LS[EB]
set DB=LS[EB]
set AB=UB*GetRandomReal(Hpw(tS[ZB],0,"when calling get in City, line 389")/1000.,Hpw(tS[ZB],1,"when calling get in City, line 389")/1000.)*LS[EB]
set LS[EB]=DB+R2I(AB)
set XS[EB]=XS[EB]+(LS[EB]-PB)
set Qb=Qb-1
endfunction
function VB takes integer JB,integer KB,string LB returns nothing
local integer XB
local real CB
set Wb[Qb]=LB
set Qb=Qb+1
set XB=fS[dpw(eS,KB,"when calling get in City, line 394")]
set CB=RS[dpw(eS,KB,"when calling get in City, line 395")]
set Wb[Qb]="when calling addPopulation in City, line 396"
set Qb=Qb+1
if Ql[JB]==0 then
if JB==0 then
call m6("Nullpointer exception when calling City.addPopulation","when calling error in City, line 387")
else
call m6("Called City.addPopulation on invalid object.","when calling error in City, line 387")
endif
endif
call HB(JB,XB,CB,"when calling addPopulation in City, line 387")
set Qb=Qb-1
if nS[dpw(eS,KB,"when calling get in City, line 398")]==false then
set BS[JB]=BS[JB]-aS[dpw(eS,KB,"when calling get in City, line 399")]*5.0/qS[dpw(eS,KB,"when calling get in City, line 399")]
endif
set Qb=Qb-1
endfunction
function QN takes integer RN,integer TN,string YN returns nothing
local integer GN
local integer gN
local integer hN
local integer FN
local real kN
local integer jN
local integer xN
local integer vN
local integer mN
set Wb[Qb]=YN
set Qb=Qb+1
set CS[rc[RN]]=CS[rc[RN]]+GetRandomReal(-0.0001,0.00015)*CS[rc[RN]]
set GN=LS[rc[RN]]
set mN=LS[rc[RN]]
set kN=Pow(LS[rc[RN]]*CS[rc[RN]],0.8)*mS[MS[rc[RN]]]
set LS[rc[RN]]=mN+R2I(kN)
set gN=LS[rc[RN]]-GN
set hN=GetRandomInt(R2I(-(0.25*gN)),R2I(0.25*gN))
set LS[rc[RN]]=LS[rc[RN]]+hN
set XS[rc[RN]]=LS[rc[RN]]-GN
set jN=uc[rc[RN]]
set Wb[Qb]="when calling iterator in City, line 137"
set Qb=Qb+1
set xN=C8(jN,"when calling new_LLIterator in LinkedList, line 165")
set Qb=Qb-1
set TN=xN
loop
exitwhen no[fo[TN]]==do[TN]
set fo[TN]=no[fo[TN]]
set FN=qo[fo[TN]]
set vN=rc[RN]
set Wb[Qb]="when calling getCityModifierOnFastCount in City, line 138"
set Qb=Qb+1
if Ql[vN]==0 then
if vN==0 then
call m6("Nullpointer exception when calling City.getCityModifierOnFastCount","when calling error in City, line 393")
else
call m6("Called City.getCityModifierOnFastCount on invalid object.","when calling error in City, line 393")
endif
endif
call VB(vN,FN,"when calling getCityModifierOnFastCount in City, line 393")
set Qb=Qb-1
endloop
set Wb[Qb]="when calling close in City, line 137"
set Qb=Qb+1
if To[TN]then
call jpw(TN,"when calling LLIterator in LinkedList, line 450")
endif
set Qb=Qb-1-1
endfunction
function e3 takes integer l3,string b3 returns nothing
local integer y3
local integer p3
set Wb[Qb]=b3
set Qb=Qb+1
set y3=0
set p3=bj_MAX_PLAYER_SLOTS-1
loop
exitwhen y3>p3
set Yc[Gc]=l3
set Gc=Gc+1
call GroupEnumUnitsOfPlayer(Tc,dO[y3],gc)
call GroupClear(Tc)
set Gc=Gc-1
set y3=y3+1
endloop
call eyw(l3,"when calling ForGroupCallback in ClosureForGroups, line 66")
set Qb=Qb-1
endfunction
function u5 takes string D2 returns nothing
local integer H2
local integer J2
local integer K2
local integer L2
local integer X2
local real C2
local integer V2
local integer B2
local integer N2
local integer M2
local integer w5
set Wb[Qb]=D2
set Qb=Qb+1
set H2=0
set J2=23
loop
exitwhen H2>J2
set Pc[H2]=0
set Ac[H2]=0
set H2=H2+1
endloop
set K2=R2I(gS*0.5/10.0)+1
set L2=0
set X2=R2I(20)-1
loop
exitwhen L2>X2
set C2=L2*0.5
set Wb[Qb]="when calling alloc_Closure in Economy, line 29"
set Qb=Qb+1
if Pl==0 then
if Al<32768 then
set Al=Al+1
set V2=Al
set Dl[V2]=644
else
call m6("Out of memory: Could not create Closure.","when calling error in Economy, line 29")
set V2=0
endif
else
set Pl=Pl-1
set V2=Il[Pl]
set Dl[V2]=644
endif
set Qb=Qb-1
set Hc[V2]=L2
set Jc[V2]=K2
set Wb[Qb]="when calling doAfter in Economy, line 29"
set Qb=Qb+1
call Wyw(V2,C2,"when calling start in ClosureTimers, line 15")
set Qb=Qb-1
set B2=gS-1
set N2=(L2+1)*K2-1
if B2<2147483647 then
set M2=B2
else
set M2=2147483647
endif
if N2<M2 then
set M2=N2
endif
exitwhen M2==gS-1
set L2=L2+1
endloop
set Wb[Qb]="when calling alloc_Closure in Economy, line 38"
set Qb=Qb+1
if El==0 then
if Zl<32768 then
set Zl=Zl+1
set w5=Zl
set Ul[w5]=683
else
call m6("Out of memory: Could not create Closure.","when calling error in Economy, line 38")
set w5=0
endif
else
set El=El-1
set w5=Wl[El]
set Ul[w5]=683
endif
set Qb=Qb-1
call e3(w5,"when calling forUnitsAll in Economy, line 38")
set Qb=Qb-1
endfunction
function d6 takes integer L5,integer X5,string C5 returns nothing
local integer V5
local integer B5
local multiboard N5
local integer M5
local integer w6
local integer u6
local integer r6
local boolean s6
local integer t6
local integer i6
local string S6
local integer c6
local integer o6
local string O6
local integer l6
local integer b6
local integer y6
local boolean p6
local integer e6
local integer q6
local player a6
local playerstate n6
set Wb[Qb]=C5
set Qb=Qb+1
set Dc=Dc+1
set V5=0
set B5=23
loop
exitwhen V5>B5
set r6=yO[V5]
set Wb[Qb]="when calling isInGame in Economy, line 53"
set Qb=Qb+1
if kb[r6]==0 then
if r6==0 then
call m6("Nullpointer exception when calling PlayerStats.isInGame","when calling error in PlayerStats, line 14")
else
call m6("Called PlayerStats.isInGame on invalid object.","when calling error in PlayerStats, line 14")
endif
endif
set s6=qO[r6]
set Qb=Qb-1
if s6 then
set N5=SO[V5]
set t6=No[0]
set i6=No[1]
set S6=Ucw(Pc[V5])
call MultiboardSetItemValue(MultiboardGetItem(N5,i6,t6),S6)
set c6=Mo[0]
set o6=Mo[1]
set l6=yO[V5]
set Wb[Qb]="when calling getUpkeep in Economy, line 56"
set Qb=Qb+1
if kb[l6]==0 then
if l6==0 then
call m6("Nullpointer exception when calling PlayerStats.getUpkeep","when calling error in PlayerStats, line 20")
else
call m6("Called PlayerStats.getUpkeep on invalid object.","when calling error in PlayerStats, line 20")
endif
endif
set b6=nO[l6]
set Qb=Qb-1
set O6=Ucw(b6)
call MultiboardSetItemValue(MultiboardGetItem(N5,o6,c6),O6)
endif
set V5=V5+1
endloop
if Dc==R2I(12) then
set Dc=0
set M5=0
set L5=23
loop
exitwhen M5>L5
set y6=yO[M5]
set C5="when calling isInGame in Economy, line 61"
set Wb[Qb]="when calling isInGame in Economy, line 61"
set Qb=Qb+1
if kb[y6]==0 then
if y6==0 then
call m6("Nullpointer exception when calling PlayerStats.isInGame","when calling error in PlayerStats, line 14")
else
call m6("Called PlayerStats.isInGame on invalid object.","when calling error in PlayerStats, line 14")
endif
endif
set p6=qO[y6]
set Qb=Qb-1
if p6 then
set w6=GetPlayerState(dO[M5],PLAYER_STATE_RESOURCE_GOLD)
set u6=GetPlayerState(dO[M5],PLAYER_STATE_RESOURCE_LUMBER)
set a6=dO[M5]
set n6=PLAYER_STATE_RESOURCE_GOLD
set q6=w6+Pc[M5]
set e6=yO[M5]
set Wb[Qb]="when calling getUpkeep in Economy, line 64"
set Qb=Qb+1
if kb[e6]==0 then
if e6==0 then
call m6("Nullpointer exception when calling PlayerStats.getUpkeep","when calling error in PlayerStats, line 20")
else
call m6("Called PlayerStats.getUpkeep on invalid object.","when calling error in PlayerStats, line 20")
endif
endif
set X5=nO[e6]
set Qb=Qb-1
call SetPlayerState(a6,n6,q6+X5)
call SetPlayerState(dO[M5],PLAYER_STATE_RESOURCE_LUMBER,u6+Ac[M5])
endif
set M5=M5+1
endloop
endif
call u5("when calling countIncomeForAll in Economy, line 68")
set Qb=Qb-1
set N5=null
set a6=null
set n6=null
endfunction
function s4 takes integer w4,integer u4 returns nothing
local integer r4
set Wc[w4]=Wc[w4]-1.
set u4=0
set r4=23
loop
exitwhen u4>r4
call MultiboardSetTitleText(SO[u4],"Income: "+I2S(R2I(Wc[w4]/60.))+":"+I2S(R2I(ModuloReal(Wc[w4],60.)/10.))+I2S(R2I(ModuloReal(ModuloReal(Wc[w4],60.),10.))))
set u4=u4+1
endloop
if Wc[w4]<=0. then
set Wc[w4]=120.0
endif
endfunction
function Gyw takes integer fyw,integer Ryw,string Tyw returns nothing
local force Yyw
set Wb[Qb]=Tyw
set Qb=Qb+1
if Ll[fyw]==0 then
if fyw==0 then
call m6("Nullpointer exception when calling CallbackPeriodic.call","when calling error in ClosureTimers, line 86")
else
call m6("Called CallbackPeriodic.call on invalid object.","when calling error in ClosureTimers, line 86")
endif
endif
if Ll[fyw]<=634 then
if Ll[fyw]<=632 then
if Ll[fyw]<=631 then
call QN(fyw,Ryw,"when calling City_closure_impl in ClosureTimers, line 86")
else
call NN(fyw,Ryw,"when calling City_closure_impl in ClosureTimers, line 86")
endif
elseif Ll[fyw]<=633 then
set Yyw=bj_FORCE_ALL_PLAYERS
if IsPlayerInForce(GetLocalPlayer(),Yyw) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,20.0,"Enjoying the map? Join the |cffe100ffofficial CoE discord channel|r! Link: |cffffff00discord.gg/V6kmxsy|r")
endif
else
call s4(fyw,Ryw)
endif
elseif Ll[fyw]<=636 then
if Ll[fyw]<=635 then
call K5(fyw,Ryw,"when calling Economy_closure_impl in ClosureTimers, line 86")
else
call d6(fyw,Ryw,"when calling Economy_closure_impl in ClosureTimers, line 86")
endif
else
call Aww(fyw,Ryw,"when calling MultiboardCityUpdate_closure_impl in ClosureTimers, line 86")
endif
set Qb=Qb-1
set Yyw=null
endfunction
function qnw takes nothing returns nothing
local integer enw
set Qb=0
set Wb[Qb]="ClosureTimers, line 91"
set Qb=Qb+1
set enw=how(GetExpiredTimer(),"when calling getData in ClosureTimers, line 94")
call Gyw(enw,enw,"when calling call in ClosureTimers, line 95")
set Qb=Qb-1
endfunction
function rJ takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function uP takes nothing returns boolean
if GetResearched()!=1378890053 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890053,true)!=2 then
return false
endif
return true
endfunction
function rP takes nothing returns boolean
if not uP() then
return false
endif
return true
endfunction
function rg takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989046 then
return false
endif
return true
endfunction
function ntw takes string ptw returns boolean
local playerevent etw
local integer qtw
local integer atw
set Wb[Qb]=ptw
set Qb=Qb+1
set etw=EVENT_PLAYER_LEAVE
set Wb[Qb]="when calling alloc_Closure in OnPlayerLeave, line 6"
set Qb=Qb+1
if Gl==0 then
if gl<32768 then
set gl=gl+1
set qtw=gl
set hl[qtw]=674
else
call m6("Out of memory: Could not create Closure.","when calling error in OnPlayerLeave, line 6")
set qtw=0
endif
else
set Gl=Gl-1
set qtw=Yl[Gl]
set hl[qtw]=674
endif
set Qb=Qb-1
set ec[qtw]=0
set qc[qtw]=0
set ac[qtw]=0
set Wb[Qb]="when calling add in OnPlayerLeave, line 6"
set Qb=Qb+1
set Wb[Qb]="when calling toIntId in ClosureEvents, line 111"
set Qb=Qb+1
set atw=oc[GetHandleId(etw)]
if atw==0 then
set atw=lM(etw,"when calling registerEventId in ClosureEvents, line 228")
endif
set Qb=Qb-1
set ec[qtw]=atw
if yc[ec[qtw]]!=0 then
set ac[yc[ec[qtw]]]=qtw
set qc[qtw]=yc[ec[qtw]]
endif
set yc[ec[qtw]]=qtw
set Qb=Qb-1-1
set etw=null
return true
endfunction
function rnw takes nothing returns boolean
set Qb=0
return ntw("OnPlayerLeave, line 1")
endfunction
function uv takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function rv takes nothing returns boolean
if not uv() then
return false
endif
return true
endfunction
function sG takes nothing returns nothing
local player NY=GetOwningPlayer(GetAttacker())
local player MY=GetOwningPlayer(GetAttacker())
local player wG
local player uG
local unit rG
set r[GetPlayerId(NY)+1]=r[GetPlayerId(MY)+1]+1
set wG=GetOwningPlayer(GetTriggerUnit())
set uG=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(wG)+1]=r[GetPlayerId(uG)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set rG=GetTriggerUnit()
call SetUnitState(rG,UNIT_STATE_LIFE,GetUnitState(rG,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set NY=null
set MY=null
set wG=null
set uG=null
set rG=null
endfunction
function rH takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990354 then
return false
endif
return true
endfunction
function sH takes nothing returns boolean
if not rH() then
return false
endif
return true
endfunction
function sP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651852,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651855,0)
endfunction
function rU takes nothing returns boolean
if GetResearched()!=1378889797 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889797,true)!=2 then
return false
endif
return true
endfunction
function sU takes nothing returns boolean
if not rU() then
return false
endif
return true
endfunction
function Xew takes integer Rew,integer Tew,integer Yew,integer Gew,integer gew,integer hew,integer Few,integer kew,integer jew,integer xew,integer vew,integer mew,integer Qew,integer Wew,integer Eew,integer Zew,integer Uew,integer Iew,integer Pew,integer Aew,integer Dew,integer Hew,integer Jew,string Kew returns integer
local integer Lew
set Wb[Qb]=Kew
set Qb=Qb+1
set Lew=y9("when calling new_LinkedList in LinkedList, line 391")
call sew(Lew,Rew,"when calling add in LinkedList, line 393")
call sew(Lew,Tew,"when calling add in LinkedList, line 393")
call sew(Lew,Yew,"when calling add in LinkedList, line 393")
call sew(Lew,Gew,"when calling add in LinkedList, line 393")
call sew(Lew,gew,"when calling add in LinkedList, line 393")
call sew(Lew,hew,"when calling add in LinkedList, line 393")
call sew(Lew,Few,"when calling add in LinkedList, line 393")
call sew(Lew,kew,"when calling add in LinkedList, line 393")
call sew(Lew,jew,"when calling add in LinkedList, line 393")
call sew(Lew,xew,"when calling add in LinkedList, line 393")
call sew(Lew,vew,"when calling add in LinkedList, line 393")
call sew(Lew,mew,"when calling add in LinkedList, line 393")
call sew(Lew,Qew,"when calling add in LinkedList, line 393")
call sew(Lew,Wew,"when calling add in LinkedList, line 393")
call sew(Lew,Eew,"when calling add in LinkedList, line 393")
call sew(Lew,Zew,"when calling add in LinkedList, line 393")
call sew(Lew,Uew,"when calling add in LinkedList, line 393")
call sew(Lew,Iew,"when calling add in LinkedList, line 393")
call sew(Lew,Pew,"when calling add in LinkedList, line 393")
call sew(Lew,Aew,"when calling add in LinkedList, line 393")
call sew(Lew,Dew,"when calling add in LinkedList, line 393")
call sew(Lew,Hew,"when calling add in LinkedList, line 393")
call sew(Lew,Jew,"when calling add in LinkedList, line 393")
set Qb=Qb-1
return Lew
endfunction
function lSw takes string SSw returns boolean
local playerunitevent cSw
local integer oSw
local integer OSw
set Wb[Qb]=SSw
set Qb=Qb+1
set kO=Xew(1747988557,1747989075,1747990102,1747988785,1747989839,1747990101,1747989554,1747989041,1747990344,1747989059,1747989060,1747988844,1747990351,1747990352,1747990356,1747989331,1747990350,1747989809,1747990353,1747990354,1747990355,1747988568,1747990341,"when calling asList in RangeChecks, line 5")
set cSw=EVENT_PLAYER_UNIT_CONSTRUCT_START
set Wb[Qb]="when calling alloc_Closure in RangeChecks, line 10"
set Qb=Qb+1
if Gl==0 then
if gl<32768 then
set gl=gl+1
set oSw=gl
set hl[oSw]=675
else
call m6("Out of memory: Could not create Closure.","when calling error in RangeChecks, line 10")
set oSw=0
endif
else
set Gl=Gl-1
set oSw=Yl[Gl]
set hl[oSw]=675
endif
set Qb=Qb-1
set ec[oSw]=0
set qc[oSw]=0
set ac[oSw]=0
set Wb[Qb]="when calling add in RangeChecks, line 10"
set Qb=Qb+1
set Wb[Qb]="when calling toIntId in ClosureEvents, line 111"
set Qb=Qb+1
set OSw=oc[GetHandleId(cSw)]
if OSw==0 then
set OSw=lM(cSw,"when calling registerEventId in ClosureEvents, line 228")
endif
set Qb=Qb-1
set ec[oSw]=OSw
if yc[ec[oSw]]!=0 then
set ac[yc[ec[oSw]]]=oSw
set qc[oSw]=yc[ec[oSw]]
endif
set yc[ec[oSw]]=oSw
set Qb=Qb-1-1
set cSw=null
return true
endfunction
function snw takes nothing returns boolean
set Qb=0
return lSw("RangeChecks, line 1")
endfunction
function sv takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988566,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988562,0)
endfunction
function sE takes nothing returns boolean
if GetResearched()!=1378889811 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889811,true)!=1 then
return false
endif
return true
endfunction
function tE takes nothing returns boolean
if not sE() then
return false
endif
return true
endfunction
function tH takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function sI takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function tI takes nothing returns boolean
if not sI() then
return false
endif
return true
endfunction
function tU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989832,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989833,0)
endfunction
function sg takes nothing returns boolean
if IsUnitType(GetEnumUnit(),UNIT_TYPE_STRUCTURE)!=false then
return false
endif
return true
endfunction
function tg takes nothing returns nothing
if sg() then
call SetUnitPositionLoc(GetEnumUnit(),S)
endif
endfunction
function sh takes nothing returns boolean
local unitstate rh=UNIT_STATE_MANA
if GetUnitState(GetEnumUnit(),rh)>0.00 then
set rh=null
return false
endif
set rh=null
return true
endfunction
function th takes nothing returns nothing
if sh() then
call KillUnit(GetEnumUnit())
endif
endfunction
function tj takes nothing returns nothing
local player Lk=GetOwningPlayer(GetKillingUnit())
local playerstate Xk=PLAYER_STATE_RESOURCE_GOLD
local playerstate Ck
local playerstate Vk
local player Bk
local force Nk
local location Mk
local real wj
local real uj
local player rj
local force sj
if Xk==PLAYER_STATE_RESOURCE_GOLD then
set Ck=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(Lk,Ck,GetPlayerState(Lk,Ck)+250)
elseif Xk==PLAYER_STATE_RESOURCE_LUMBER then
set Vk=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(Lk,Vk,GetPlayerState(Lk,Vk)+250)
endif
call SetPlayerState(Lk,Xk,GetPlayerState(Lk,Xk)+250)
set Bk=GetOwningPlayer(GetKillingUnit())
set Nk=CreateForce()
call ForceAddPlayer(Nk,Bk)
if IsPlayerInForce(GetLocalPlayer(),Nk) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_092")
endif
set y=GetUnitLoc(GetDyingUnit())
set rj=GetOwningPlayer(GetDyingUnit())
set sj=CreateForce()
call ForceAddPlayer(sj,rj)
set Mk=y
set wj=GetLocationX(Mk)
set uj=GetLocationY(Mk)
if IsPlayerInForce(GetLocalPlayer(),sj) then
call PingMinimap(wj,uj,2.00)
endif
call RemoveLocation(y)
set Lk=null
set Xk=null
set Ck=null
set Vk=null
set Bk=null
set Nk=null
set Mk=null
set rj=null
set sj=null
endfunction
function tk takes nothing returns nothing
local player LF=GetOwningPlayer(GetKillingUnit())
local playerstate XF=PLAYER_STATE_RESOURCE_LUMBER
local playerstate CF
local playerstate VF
local player BF
local force NF
local location MF
local real wk
local real uk
local player rk
local force sk
if XF==PLAYER_STATE_RESOURCE_GOLD then
set CF=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(LF,CF,GetPlayerState(LF,CF)+125)
elseif XF==PLAYER_STATE_RESOURCE_LUMBER then
set VF=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(LF,VF,GetPlayerState(LF,VF)+125)
endif
call SetPlayerState(LF,XF,GetPlayerState(LF,XF)+125)
set BF=GetOwningPlayer(GetKillingUnit())
set NF=CreateForce()
call ForceAddPlayer(NF,BF)
if IsPlayerInForce(GetLocalPlayer(),NF) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_089")
endif
set y=GetUnitLoc(GetDyingUnit())
set rk=GetOwningPlayer(GetDyingUnit())
set sk=CreateForce()
call ForceAddPlayer(sk,rk)
set MF=y
set wk=GetLocationX(MF)
set uk=GetLocationY(MF)
if IsPlayerInForce(GetLocalPlayer(),sk) then
call PingMinimap(wk,uk,2.00)
endif
call RemoveLocation(y)
set LF=null
set XF=null
set CF=null
set VF=null
set BF=null
set NF=null
set MF=null
set rk=null
set sk=null
endfunction
function wow takes string Vcw returns boolean
local playerunitevent Bcw
local integer Ncw
local integer Mcw
set Wb[Qb]=Vcw
set Qb=Qb+1
set Bcw=EVENT_PLAYER_UNIT_SPELL_CAST
set Wb[Qb]="when calling alloc_Closure in Taxation, line 6"
set Qb=Qb+1
if Gl==0 then
if gl<32768 then
set gl=gl+1
set Ncw=gl
set hl[Ncw]=676
else
call m6("Out of memory: Could not create Closure.","when calling error in Taxation, line 6")
set Ncw=0
endif
else
set Gl=Gl-1
set Ncw=Yl[Gl]
set hl[Ncw]=676
endif
set Qb=Qb-1
set ec[Ncw]=0
set qc[Ncw]=0
set ac[Ncw]=0
set Wb[Qb]="when calling add in Taxation, line 6"
set Qb=Qb+1
set Wb[Qb]="when calling toIntId in ClosureEvents, line 111"
set Qb=Qb+1
set Mcw=oc[GetHandleId(Bcw)]
if Mcw==0 then
set Mcw=lM(Bcw,"when calling registerEventId in ClosureEvents, line 228")
endif
set Qb=Qb-1
set ec[Ncw]=Mcw
if yc[ec[Ncw]]!=0 then
set ac[yc[ec[Ncw]]]=Ncw
set qc[Ncw]=yc[ec[Ncw]]
endif
set yc[ec[Ncw]]=Ncw
set Qb=Qb-1-1
set Bcw=null
return true
endfunction
function tnw takes nothing returns boolean
set Qb=0
return wow("Taxation, line 1")
endfunction
function uA takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990598,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990597,0)
endfunction
function wJ takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989809 then
return false
endif
return true
endfunction
function uJ takes nothing returns boolean
if not wJ() then
return false
endif
return true
endfunction
function ucw takes nothing returns boolean
return true
endfunction
function um takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651826,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651824,0)
endfunction
function wtw takes string Vsw returns boolean
local playerunitevent Bsw
local integer Nsw
local integer Msw
set Wb[Qb]=Vsw
set Qb=Qb+1
set Bsw=EVENT_PLAYER_UNIT_CONSTRUCT_START
set Wb[Qb]="when calling alloc_Closure in NoShipsNearRivers, line 7"
set Qb=Qb+1
if Gl==0 then
if gl<32768 then
set gl=gl+1
set Nsw=gl
set hl[Nsw]=673
else
call m6("Out of memory: Could not create Closure.","when calling error in NoShipsNearRivers, line 7")
set Nsw=0
endif
else
set Gl=Gl-1
set Nsw=Yl[Gl]
set hl[Nsw]=673
endif
set Qb=Qb-1
set ec[Nsw]=0
set qc[Nsw]=0
set ac[Nsw]=0
set Wb[Qb]="when calling add in NoShipsNearRivers, line 7"
set Qb=Qb+1
set Wb[Qb]="when calling toIntId in ClosureEvents, line 111"
set Qb=Qb+1
set Msw=oc[GetHandleId(Bsw)]
if Msw==0 then
set Msw=lM(Bsw,"when calling registerEventId in ClosureEvents, line 228")
endif
set Qb=Qb-1
set ec[Nsw]=Msw
if yc[ec[Nsw]]!=0 then
set ac[yc[ec[Nsw]]]=Nsw
set qc[Nsw]=yc[ec[Nsw]]
endif
set yc[ec[Nsw]]=Nsw
set Qb=Qb-1-1
set Bsw=null
return true
endfunction
function unw takes nothing returns boolean
set Qb=0
return wtw("NoShipsNearRivers, line 1")
endfunction
function vA takes nothing returns nothing
local integer GA=1
local integer gA=1747988787
local player hA=GetOwningPlayer(GetConstructedStructure())
local rect xA=bj_mapInitialPlayableArea
local location jA=Location(GetRectCenterX(xA),GetRectCenterY(xA))
local location FA=Location(GetLocationX(jA)+100000000.00,GetLocationY(jA)+1000000000.00)
local real kA=bj_UNIT_FACING
call GroupClear(bj_lastCreatedGroup)
loop
set GA=GA-1
exitwhen GA<0
call CreateUnitAtLocSaveLast(hA,gA,FA,kA)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
call ShowUnit(bj_lastCreatedUnit,false)
set e[GetPlayerId(GetOwningPlayer(GetConstructedStructure()))+1]=true
set hA=null
set FA=null
set jA=null
set xA=null
endfunction
function vJ takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function xP takes nothing returns boolean
if GetResearched()!=1378890054 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890054,true)!=2 then
return false
endif
return true
endfunction
function vP takes nothing returns boolean
if not xP() then
return false
endif
return true
endfunction
function vY takes nothing returns nothing
local player hY=GetOwningPlayer(GetAttacker())
local player FY=GetOwningPlayer(GetAttacker())
local player kY
local player jY
local unit xY
set r[GetPlayerId(hY)+1]=r[GetPlayerId(FY)+1]+1
set kY=GetOwningPlayer(GetTriggerUnit())
set jY=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(kY)+1]=r[GetPlayerId(jY)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set xY=GetTriggerUnit()
call SetUnitState(xY,UNIT_STATE_LIFE,GetUnitState(xY,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set hY=null
set FY=null
set kY=null
set jY=null
set xY=null
endfunction
function uM takes string MN returns boolean
local integer wM
set Wb[Qb]=MN
set Qb=Qb+1
set tc=ConvertPlayerEvent(96)
set lc=o7("when calling new_HashMap in ClosureEvents, line 99")
set bc=o7("when calling new_HashMap in ClosureEvents, line 100")
set ic=CreateTrigger()
set Sc=CreateTrigger()
set cc=CreateTrigger()
set Wb[Qb]="when calling alloc_Closure in ClosureEvents, line 279"
set Qb=Qb+1
if Pl==0 then
if Al<32768 then
set Al=Al+1
set wM=Al
set Dl[wM]=640
else
call m6("Out of memory: Could not create Closure.","when calling error in ClosureEvents, line 279")
set wM=0
endif
else
set Pl=Pl-1
set wM=Il[Pl]
set Dl[wM]=640
endif
set Qb=Qb-1
set Wb[Qb]="when calling nullTimer in ClosureEvents, line 279"
set Qb=Qb+1
set Wb[Qb]="when calling doAfter in ClosureTimers, line 22"
set Qb=Qb+1
call Wyw(wM,0.,"when calling start in ClosureTimers, line 15")
set Qb=Qb-1-1-1
return true
endfunction
function vaw takes nothing returns boolean
set Qb=0
return uM("ClosureEvents, line 1")
endfunction
function jj takes nothing returns boolean
if GetUnitTypeId(GetSpellTargetUnit())==1747990581 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747990580 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747989813 then
return true
endif
if GetUnitTypeId(GetSpellTargetUnit())==1747988569 then
return true
endif
return false
endfunction
function xj takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989049 then
return false
endif
if not jj() then
return false
endif
return true
endfunction
function vj takes nothing returns boolean
if not xj() then
return false
endif
return true
endfunction
function xv takes nothing returns boolean
if GetResearched()!=1378889798 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889798,true)!=1 then
return false
endif
return true
endfunction
function vv takes nothing returns boolean
if not xv() then
return false
endif
return true
endfunction
function MP takes nothing returns boolean
if GetResearched()!=1378889818 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889818,true)!=1 then
return false
endif
return true
endfunction
function wA takes nothing returns boolean
if not MP() then
return false
endif
return true
endfunction
function wF takes nothing returns nothing
local player Dh=GetOwningPlayer(GetSpellTargetUnit())
local playerstate Hh=PLAYER_STATE_RESOURCE_LUMBER
local playerstate Jh
local playerstate Kh
local player Lh
local force Xh
local location Ch
local real Vh
local real Bh
local player Nh
local force Mh
if Hh==PLAYER_STATE_RESOURCE_GOLD then
set Jh=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(Dh,Jh,GetPlayerState(Dh,Jh)+500)
elseif Hh==PLAYER_STATE_RESOURCE_LUMBER then
set Kh=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(Dh,Kh,GetPlayerState(Dh,Kh)+500)
endif
call SetPlayerState(Dh,Hh,GetPlayerState(Dh,Hh)+500)
call RemoveUnit(GetSpellAbilityUnit())
set Lh=GetOwningPlayer(GetSpellTargetUnit())
set Xh=CreateForce()
call ForceAddPlayer(Xh,Lh)
if IsPlayerInForce(GetLocalPlayer(),Xh) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_1228")
endif
set y=GetUnitLoc(GetSpellTargetUnit())
set Nh=GetOwningPlayer(GetSpellTargetUnit())
set Mh=CreateForce()
call ForceAddPlayer(Mh,Nh)
set Ch=y
set Vh=GetLocationX(Ch)
set Bh=GetLocationY(Ch)
if IsPlayerInForce(GetLocalPlayer(),Mh) then
call PingMinimap(Vh,Bh,2.00)
endif
call RemoveLocation(y)
set Dh=null
set Hh=null
set Jh=null
set Kh=null
set Lh=null
set Xh=null
set Ch=null
set Nh=null
set Mh=null
endfunction
function wK takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function wSw takes nothing returns boolean
return true
endfunction
function wW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990098,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990095,0)
endfunction
function MT takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989316 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function wY takes nothing returns boolean
if not MT() then
return false
endif
return true
endfunction
function Mv takes nothing returns boolean
if GetResearched()!=1378889802 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889802,true)!=2 then
return false
endif
return true
endfunction
function wm takes nothing returns boolean
if not Mv() then
return false
endif
return true
endfunction
function m0w takes string f0w returns boolean
local playerunitevent R0w
local playerunitevent T0w
local integer Y0w
local integer G0w
local integer g0w
local integer h0w
local integer F0w
local integer k0w
local integer j0w
local integer x0w
local integer v0w
set Wb[Qb]=f0w
set Qb=Qb+1
set Po=o7("when calling new_HashMap in MassControl, line 7")
set Y0w=R2I(500000)
set G0w=R2I(700000)
set g0w=R2I(1000000)
set Wb[Qb]="when calling asList in MassControl, line 8"
set Qb=Qb+1
set h0w=y9("when calling new_LinkedList in LinkedList, line 391")
call sew(h0w,Y0w,"when calling add in LinkedList, line 393")
call sew(h0w,G0w,"when calling add in LinkedList, line 393")
call sew(h0w,g0w,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set Ao=h0w
set Wb[Qb]="when calling asList in MassControl, line 14"
set Qb=Qb+1
set F0w=y9("when calling new_LinkedList in LinkedList, line 391")
call sew(F0w,1211118401,"when calling add in LinkedList, line 393")
call sew(F0w,1211119699,"when calling add in LinkedList, line 393")
call sew(F0w,1211119701,"when calling add in LinkedList, line 393")
call sew(F0w,1211119700,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set Do=F0w
set R0w=EVENT_PLAYER_UNIT_SPELL_CAST
set Wb[Qb]="when calling alloc_Closure in MassControl, line 22"
set Qb=Qb+1
if Gl==0 then
if gl<32768 then
set gl=gl+1
set k0w=gl
set hl[k0w]=671
else
call m6("Out of memory: Could not create Closure.","when calling error in MassControl, line 22")
set k0w=0
endif
else
set Gl=Gl-1
set k0w=Yl[Gl]
set hl[k0w]=671
endif
set Qb=Qb-1
set ec[k0w]=0
set qc[k0w]=0
set ac[k0w]=0
set Wb[Qb]="when calling add in MassControl, line 22"
set Qb=Qb+1
set Wb[Qb]="when calling toIntId in ClosureEvents, line 111"
set Qb=Qb+1
set j0w=oc[GetHandleId(R0w)]
if j0w==0 then
set j0w=lM(R0w,"when calling registerEventId in ClosureEvents, line 228")
endif
set Qb=Qb-1
set ec[k0w]=j0w
if yc[ec[k0w]]!=0 then
set ac[yc[ec[k0w]]]=k0w
set qc[k0w]=yc[ec[k0w]]
endif
set yc[ec[k0w]]=k0w
set Qb=Qb-1
set T0w=EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER
set Wb[Qb]="when calling alloc_Closure in MassControl, line 32"
set Qb=Qb+1
if Gl==0 then
if gl<32768 then
set gl=gl+1
set x0w=gl
set hl[x0w]=672
else
call m6("Out of memory: Could not create Closure.","when calling error in MassControl, line 32")
set x0w=0
endif
else
set Gl=Gl-1
set x0w=Yl[Gl]
set hl[x0w]=672
endif
set Qb=Qb-1
set ec[x0w]=0
set qc[x0w]=0
set ac[x0w]=0
set Wb[Qb]="when calling add in MassControl, line 32"
set Qb=Qb+1
set Wb[Qb]="when calling toIntId in ClosureEvents, line 111"
set Qb=Qb+1
set v0w=oc[GetHandleId(T0w)]
if v0w==0 then
set v0w=lM(T0w,"when calling registerEventId in ClosureEvents, line 228")
endif
set Qb=Qb-1
set ec[x0w]=v0w
if yc[ec[x0w]]!=0 then
set ac[yc[ec[x0w]]]=x0w
set qc[x0w]=yc[ec[x0w]]
endif
set yc[ec[x0w]]=x0w
set Qb=Qb-1-1
set R0w=null
set T0w=null
return true
endfunction
function wnw takes nothing returns boolean
set Qb=0
return m0w("MassControl, line 1")
endfunction
function jJ takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747988530 then
return false
endif
return true
endfunction
function xJ takes nothing returns boolean
if not jJ() then
return false
endif
return true
endfunction
function jtw takes string gtw returns boolean
local integer htw
local integer Ftw
local integer ktw
set Wb[Qb]=gtw
set Qb=Qb+1
set oO=CreateTrigger()
set OO=CreateGroup()
set htw=0
set Ftw=bj_MAX_PLAYER_SLOTS-1
loop
exitwhen htw>Ftw
call SetPlayerAbilityAvailable(dO[htw],1095577649,false)
set htw=htw+1
endloop
set Wb[Qb]="when calling alloc_Closure in OnUnitEnterLeave, line 59"
set Qb=Qb+1
if Pl==0 then
if Al<32768 then
set Al=Al+1
set ktw=Al
set Dl[ktw]=650
else
call m6("Out of memory: Could not create Closure.","when calling error in OnUnitEnterLeave, line 59")
set ktw=0
endif
else
set Pl=Pl-1
set ktw=Il[Pl]
set Dl[ktw]=650
endif
set Qb=Qb-1
set Wb[Qb]="when calling nullTimer in OnUnitEnterLeave, line 59"
set Qb=Qb+1
set Wb[Qb]="when calling doAfter in ClosureTimers, line 22"
set Qb=Qb+1
call Wyw(ktw,0.,"when calling start in ClosureTimers, line 15")
set Qb=Qb-1-1-1
return true
endfunction
function xaw takes nothing returns boolean
set Qb=0
return jtw("OnUnitEnterLeave, line 1")
endfunction
function xbw takes nothing returns boolean
return true
endfunction
function xm takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988812,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988559,0)
endfunction
function xsw takes nothing returns boolean
return true
endfunction
function bD takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())==1747988530 then
return true
endif
if GetUnitTypeId(GetTriggerUnit())==1747990327 then
return true
endif
if GetUnitTypeId(GetTriggerUnit())==1747989591 then
return true
endif
if GetUnitTypeId(GetTriggerUnit())==1747990085 then
return true
endif
return false
endfunction
function yD takes nothing returns boolean
if not bD() then
return false
endif
return true
endfunction
function yE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989573,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989572,0)
endfunction
function yG takes nothing returns nothing
local unit lG=GetSpellTargetUnit()
local unitstate bG=UNIT_STATE_MANA
call SetUnitState(lG,UNIT_STATE_MANA,RMaxBJ(0.,GetUnitState(GetSpellTargetUnit(),bG)-600.00))
set lG=null
set bG=null
endfunction
function yI takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990323,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990106,0)
endfunction
function bQ takes nothing returns boolean
if GetResearched()!=1378889803 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889803,true)!=1 then
return false
endif
return true
endfunction
function yQ takes nothing returns boolean
if not bQ() then
return false
endif
return true
endfunction
function yT takes nothing returns nothing
call CreateQuestBJ(bj_QUESTTYPE_OPT_DISCOVERED,"TRIGSTR_097","TRIGSTR_098","ReplaceableTextures\\CommandButtons\\BTNSteelMelee.blp")
call CreateQuestBJ(bj_QUESTTYPE_OPT_DISCOVERED,"TRIGSTR_103","TRIGSTR_104","ReplaceableTextures\\WorldEditUI\\Doodad-Cinematic.blp")
call CreateQuestBJ(bj_QUESTTYPE_OPT_DISCOVERED,"TRIGSTR_2667","TRIGSTR_2668","ReplaceableTextures\\WorldEditUI\\Editor-MultipleUnits.blp")
endfunction
function bY takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989042 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function yY takes nothing returns boolean
if not bY() then
return false
endif
return true
endfunction
function bZ takes nothing returns boolean
if GetResearched()!=1378890037 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890037,true)!=2 then
return false
endif
return true
endfunction
function yZ takes nothing returns boolean
if not bZ() then
return false
endif
return true
endfunction
function bh takes nothing returns boolean
local unitstate lh=UNIT_STATE_MANA
if GetUnitState(GetEnumUnit(),lh)>0.00 then
set lh=null
return false
endif
set lh=null
return true
endfunction
function yh takes nothing returns nothing
if bh() then
call KillUnit(GetEnumUnit())
endif
endfunction
function byw takes integer oyw,unit Oyw,string lyw returns nothing
set Wb[Qb]=lyw
set Qb=Qb+1
if Cl[oyw]==0 then
if oyw==0 then
call m6("Nullpointer exception when calling OnCastListener.fire","when calling error in ClosureEvents, line 56")
else
call m6("Called OnCastListener.fire on invalid object.","when calling error in ClosureEvents, line 56")
endif
endif
set Qb=Qb-1
endfunction
function JM takes string IM returns nothing
local unit PM
local integer AM
local integer DM
local integer HM
set Wb[Qb]=IM
set Qb=Qb+1
set PM=GetTriggerUnit()
set AM=GetSpellAbilityId()
if opw(bc,GetHandleId(PM),"when calling has in ClosureEvents, line 188") then
set DM=dpw(bc,GetHandleId(PM),"when calling get in ClosureEvents, line 189")
loop
exitwhen DM==0
if fc[DM]==-1 or fc[DM]==AM then
call byw(DM,GetSpellAbilityUnit(),"when calling fire in ClosureEvents, line 192")
endif
set DM=nc[DM]
endloop
endif
if opw(lc,AM,"when calling has in ClosureEvents, line 194") then
set HM=dpw(lc,AM,"when calling get in ClosureEvents, line 195")
loop
exitwhen HM==0
if Rc[HM]==null or Rc[HM]==PM then
call byw(HM,GetSpellAbilityUnit(),"when calling fire in ClosureEvents, line 198")
endif
set HM=nc[HM]
endloop
endif
set Qb=Qb-1
set PM=null
endfunction
function ynw takes nothing returns nothing
set Qb=0
set Wb[Qb]="ClosureEvents, line 306"
set Qb=Qb+1
call JM("when calling onSpellEffect in ClosureEvents, line 306")
set Qb=Qb-1
endfunction
function ytw takes nothing returns boolean
return true
endfunction
function Zf takes nothing returns nothing
set w=null
set u=null
set s=null
set t=null
set i=null
set S=null
set c=null
set o=null
set O=null
set l=null
set b=null
set y=null
set q=null
set a=null
set n=null
set d=null
set f=null
set R=null
set T=null
set Y=null
set G=null
set g=null
set h=null
set F=null
set k=null
set j=null
set x=null
set v=null
set m=null
set Q=null
set W=null
set E=null
set Z=null
set U=null
set I=null
set P=null
set A=null
set D=null
set H=null
set J=null
set K=null
set L=null
set X=null
set C=null
set V=null
set B=null
set N=null
set M=null
set ww=null
set uw=null
set rw=null
set sw=null
set tw=null
set iw=null
set Sw=null
set cw=null
set ow=null
set Ow=null
set lw=null
set bw=null
set yw=null
set pw=null
set ew=null
set qw=null
set aw=null
set nw=null
set dw=null
set fw=null
set Rw=null
set Tw=null
set Yw=null
set Gw=null
set gw=null
set hw=null
set Fw=null
set kw=null
set jw=null
set xw=null
set vw=null
set mw=null
set Qw=null
set Ww=null
set Ew=null
set Zw=null
set Uw=null
set Iw=null
set Pw=null
set Aw=null
set Dw=null
set Hw=null
set Jw=null
set Kw=null
set Lw=null
set Xw=null
set Cw=null
set Vw=null
set Bw=null
set Nw=null
set Mw=null
set wu=null
set uu=null
set ru=null
set su=null
set tu=null
set iu=null
set Su=null
set cu=null
set ou=null
set Ou=null
set lu=null
set bu=null
set yu=null
set pu=null
set eu=null
set qu=null
set au=null
set nu=null
set du=null
set fu=null
set Ru=null
set Tu=null
set Yu=null
set Gu=null
set gu=null
set hu=null
set Fu=null
set ku=null
set ju=null
set xu=null
set vu=null
set mu=null
set Qu=null
set Wu=null
set Eu=null
set Zu=null
set Uu=null
set Iu=null
set Pu=null
set Au=null
set Du=null
set Hu=null
set Ju=null
set Ku=null
set Lu=null
set Xu=null
set Cu=null
set Vu=null
set Bu=null
set Nu=null
set Mu=null
set wr=null
set ur=null
set rr=null
set sr=null
set tr=null
set ir=null
set Sr=null
set cr=null
set lr=null
set br=null
set yr=null
set pr=null
set er=null
set qr=null
set ar=null
set nr=null
set dr=null
set fr=null
set Rr=null
set Tr=null
set Yr=null
set Gr=null
set gr=null
set hr=null
set Fr=null
set kr=null
set jr=null
set xr=null
set vr=null
set mr=null
set Qr=null
set Wr=null
set Er=null
set Zr=null
set Ur=null
set Ir=null
set Pr=null
set Ar=null
set Dr=null
set Hr=null
set Jr=null
set Kr=null
set Lr=null
set Xr=null
set Cr=null
set Vr=null
set Br=null
set Nr=null
set Mr=null
set ws=null
set us=null
set rs=null
set ss=null
set ts=null
set is=null
set Ss=null
set cs=null
set os=null
set Os=null
set ls=null
set bs=null
set ys=null
set ps=null
set es=null
set qs=null
set as=null
set ns=null
set ds=null
set fs=null
set Rs=null
set Ts=null
set Ys=null
set Gs=null
set gs=null
set hs=null
set Fs=null
set ks=null
set js=null
set xs=null
set vs=null
set ms=null
set Qs=null
set Ws=null
set Es=null
set Zs=null
set Us=null
set Is=null
set Ps=null
set As=null
set Ds=null
set Hs=null
set Js=null
set Ks=null
set Ls=null
set Xs=null
set Cs=null
set Vs=null
set Bs=null
set Ns=null
set Ms=null
set wt=null
set ut=null
set rt=null
set st=null
set tt=null
set St=null
set ct=null
set ot=null
set Ot=null
set lt=null
set bt=null
set yt=null
set pt=null
set et=null
set qt=null
set at=null
set nt=null
set dt=null
set ft=null
set Rt=null
set Tt=null
set Yt=null
set Gt=null
set gt=null
set ht=null
set Ft=null
set kt=null
set jt=null
set xt=null
set vt=null
set mt=null
set Qt=null
set Wt=null
set Et=null
set Zt=null
set Ut=null
set It=null
set Pt=null
set At=null
set Dt=null
set Ht=null
set Jt=null
set Kt=null
set Lt=null
set Xt=null
set Ct=null
set Vt=null
set Bt=null
set Nt=null
set Mt=null
set wi=null
set ui=null
set ri=null
set si=null
set ti=null
set ii=null
set Si=null
set ci=null
set oi=null
set Oi=null
set li=null
set bi=null
set yi=null
set pi=null
set ei=null
set qi=null
set ai=null
set ni=null
set di=null
set fi=null
set Ri=null
set Ti=null
set Yi=null
set Gi=null
set gi=null
set hi=null
set Fi=null
set ki=null
set ji=null
set xi=null
set vi=null
set mi=null
set Qi=null
set Wi=null
set Ei=null
set Zi=null
set Ui=null
set Ii=null
set Pi=null
set Ai=null
set Di=null
set Hi=null
set Ji=null
set Ki=null
set Li=null
set Xi=null
set Ci=null
set Vi=null
set Bi=null
set Ni=null
set Mi=null
set wS=null
set ly=function iT
set by=function OT
set yy=function yT
set py=function qT
set ey=function TT
set qy=function kT
set ay=function WT
set ny=function AT
set dy=function XT
set fy=function wY
set Ry=function SY
set Ty=function yY
set Yy=function dY
set Gy=function gY
set gy=function vY
set hy=function UY
set Fy=function JY
set ky=function BY
set jy=function sG
set xy=function OG
set vy=function yG
set my=function nG
set Qy=function dG
set Wy=function mG
set Ey=function PG
set Zy=function UG
set Uy=function BG
set Iy=function tg
set Py=function rg
set Ay=function eg
set Dy=function Tg
set Hy=function fg
set Jy=function mg
set Ky=function Pg
set Ly=function Ug
set Xy=function Bg
set Cy=function th
set Vy=function oh
set By=function yh
set Ny=function ah
set My=function Rh
set wp=function Qh
set up=function Ah
set rp=function wF
set sp=function cF
set tp=function fF
set ip=function FF
set Sp=function PF
set cp=function KF
set op=function tk
set Op=function Ok
set lp=function Tk
set bp=function Fk
set yp=function Pk
set pp=function Kk
set ep=function tj
set qp=function bj
set ap=function Gj
set np=function vj
set dp=function Jj
set fp=function Bj
set Rp=function Ox
set Tp=function ex
set Yp=function Fx
set Gp=function Qx
set gp=function Wx
set hp=function Ax
set Fp=function Dx
set kp=function Cx
set jp=function Vx
set xp=function rv
set vp=function sv
set mp=function Ov
set Qp=function lv
set Wp=function av
set Ep=function nv
set Zp=function Gv
set Up=function gv
set Ip=function vv
set Pp=function mv
set Ap=function Iv
set Dp=function Pv
set Hp=function Lv
set Jp=function Xv
set Kp=function wm
set Lp=function um
set Xp=function cm
set Cp=function om
set Vp=function em
set Bp=function qm
set Np=function Tm
set Mp=function Ym
set we=function jm
set ue=function xm
set re=function Zm
set se=function Um
set te=function Jm
set ie=function Km
set Se=function Nm
set ce=function Mm
set oe=function iQ
set Oe=function SQ
set le=function yQ
set be=function pQ
set ye=function fQ
set pe=function RQ
set ee=function FQ
set qe=function kQ
set ae=function QQ
set ne=function WQ
set de=function UQ
set fe=function IQ
set Re=function KQ
set Te=function LQ
set Ye=function MQ
set Ge=function wW
set ge=function SW
set he=function cW
set Fe=function pW
set ke=function eW
set je=function RW
set xe=function TW
set ve=function kW
set me=function jW
set Qe=function EW
set We=function ZW
set Ee=function HW
set Ze=function JW
set Ue=function BW
set Ie=function NW
set Pe=function tE
set Ae=function iE
set De=function bE
set He=function yE
set Je=function dE
set Ke=function fE
set Le=function hE
set Xe=function FE
set Ce=function QE
set Ve=function WE
set Be=function PE
set Ne=function AE
set Me=function JE
set wq=function KE
set uq=function NE
set rq=function ME
set sq=function iZ
set tq=function SZ
set iq=function yZ
set Sq=function pZ
set cq=function fZ
set oq=function RZ
set Oq=function FZ
set lq=function kZ
set bq=function WZ
set yq=function EZ
set pq=function DZ
set eq=function HZ
set qq=function VZ
set aq=function BZ
set nq=function sU
set dq=function tU
set fq=function lU
set Rq=function bU
set Tq=function nU
set Yq=function dU
set Gq=function gU
set gq=function hU
set hq=function mU
set Fq=function QU
set kq=function IU
set jq=function PU
set xq=function HU
set vq=function JU
set mq=function BU
set Qq=function NU
set Wq=function tI
set Eq=function iI
set Zq=function bI
set Uq=function yI
set Iq=function dI
set Pq=function fI
set Aq=function hI
set Dq=function FI
set Hq=function QI
set Jq=function WI
set Kq=function AI
set Lq=function DI
set Xq=function CI
set Cq=function VI
set Vq=function rP
set Bq=function sP
set Nq=function OP
set Mq=function lP
set wa=function aP
set ua=function nP
set ra=function GP
set sa=function gP
set ta=function vP
set ia=function mP
set Sa=function IP
set ca=function PP
set oa=function LP
set Oa=function XP
set la=function wA
set ba=function uA
set ya=function cA
set pa=function oA
set ea=function pA
set qa=function eA
set aa=function aA
set na=function YA
set da=function vA
set fa=function UA
set Ra=function LA
set Ta=function NA
set Ya=function SD
set Ga=function yD
set ga=function RD
set ha=function FD
set Fa=function ED
set ka=function DD
set ja=function HD
set xa=function VD
set va=function BD
set ma=function sH
set Qa=function tH
set Wa=function lH
set Ea=function bH
set Za=function nH
set Ua=function dH
set Ia=function gH
set Pa=function hH
set Aa=function mH
set Da=function QH
set Ha=function PH
set Ja=function AH
set Ka=function XH
set La=function CH
set Xa=function uJ
set Ca=function rJ
set Va=function oJ
set Ba=function OJ
set Na=function qJ
set Ma=function aJ
set wn=function YJ
set un=function GJ
set rn=function xJ
set sn=function vJ
set tn=function UJ
set Sn=function IJ
set cn=function KJ
set on=function LJ
set On=function MJ
set ln=function wK
set bn=function SK
set yn=function cK
set pn=function pK
set en=function eK
set qn=function RK
set an=function TK
set nn=function kK
set dn=function jK
set fn=function bT
set Rn=function Vj
set Tn=function mSw
set Yn=function L7
set Gn=function Wcw
set gn=function HK
set hn=function Jlw
set Fn=function Yww
set kn=function Dtw
set jn=function wSw
set xn=function JK
set vn=function W6
set mn=function e9
set Qn=function f6
set Wn=function Gww
set En=function iSw
set Zn=function Jcw
set Un=function Diw
set In=function aaw
set Pn=function Z6
set An=function X7
set Dn=function xbw
set Hn=function naw
set Jn=function MM
set Kn=function daw
set Ln=function Raw
set Xn=function DK
set Cn=function KK
set Vn=function xsw
set Bn=function I6
set Nn=function Taw
set Mn=function Yaw
set wd=function Gaw
set ud=function T3
set rd=function Ccw
set sd=function R2
set td=function K7
set id=function ytw
set Sd=function mcw
set cd=function Qcw
set od=function pow
set Od=function pOw
set ld=function gaw
set bd=function eOw
set yd=function d0w
set pd=function haw
set ed=function Faw
set qd=function btw
set ad=function kaw
set nd=function jaw
set dd=function xaw
set fd=function qOw
set Rd=function vaw
set Td=function pww
set Yd=function Q6
set Gd=function Hcw
set gd=function maw
set hd=function ucw
set Fd=function Iaw
set kd=function Paw
set jd=function Htw
set xd=function Aaw
set vd=function q9
set md=function Daw
set Qd=function Haw
set Wd=function Jaw
set Ed=function R7
set Zd=function Kaw
set Ud=function p1
set Id=function Law
set Pd=function Xaw
set Ad=function Caw
set Dd=function Vaw
set Hd=function o4
set Jd=function Baw
set Kd=function Naw
set Ld=function p9
set Xd=function Maw
set Cd=function wnw
set Vd=function unw
set Bd=function rnw
set Nd=function snw
set Md=function tnw
set wf=function inw
set uf=function SX
set rf=function Snw
set sf=function cnw
set tf=function kM
set Sf=function onw
set cf=function Onw
set of=function lnw
set Of=function bnw
set lf=function ynw
set bf=function pnw
set yf=function qnw
set pf=function anw
set ef=function L1
set qf=function nnw
set af=function f2
set nf=function dnw
set df=function E6
set ff=function n0w
set Rf=function fnw
set Tf=function Etw
set Yf=function Utw
set Gf=function Itw
set gf=function U6
set hf=function Tnw
set Ff=function Ynw
set kf=function Gnw
set jf=function Rnw
endfunction
function sT takes nothing returns nothing
local player rT=Player(PLAYER_NEUTRAL_AGGRESSIVE)
call CreateUnit(rT,1747989297,-1600.0,-128.0,270.000)
call CreateUnit(rT,1747989297,-15040.0,10816.0,270.000)
call CreateUnit(rT,1747989297,-256.0,-2432.0,270.000)
call CreateUnit(rT,1747989297,-24320.0,3904.0,270.000)
call CreateUnit(rT,1747989297,-23552.0,-4544.0,270.000)
call CreateUnit(rT,1747989297,-23360.0,-64.0,270.000)
call CreateUnit(rT,1747989297,2176.0,-7744.0,270.000)
call CreateUnit(rT,1747989297,-6336.0,8000.0,270.000)
call CreateUnit(rT,1747989297,832.0,-5568.0,270.000)
call CreateUnit(rT,1747989297,-3648.0,1856.0,270.000)
call CreateUnit(rT,1747989042,-768.0,24384.0,270.000)
call CreateUnit(rT,1747989297,-26304.0,-8704.0,270.000)
call CreateUnit(rT,1747989297,2688.0,-3008.0,270.000)
call CreateUnit(rT,1747989297,-5568.0,-2752.0,270.000)
call CreateUnit(rT,1747989297,-3456.0,-2880.0,270.000)
call CreateUnit(rT,1747989297,-6464.0,1280.0,270.000)
call CreateUnit(rT,1747989297,-8064.0,3200.0,270.000)
call CreateUnit(rT,1747989297,-8768.0,1984.0,270.000)
call CreateUnit(rT,1747989297,-7104.0,-768.0,270.000)
call CreateUnit(rT,1747989297,-28544.0,0.0,270.000)
call CreateUnit(rT,1747989297,-27840.0,-2752.0,270.000)
call CreateUnit(rT,1747989297,-27008.0,2688.0,270.000)
call CreateUnit(rT,1747989297,-17024.0,512.0,270.000)
call CreateUnit(rT,1747989297,-21696.0,-4224.0,270.000)
call CreateUnit(rT,1747989042,17536.0,-9024.0,270.000)
call CreateUnit(rT,1747989297,10816.0,-7360.0,270.000)
call CreateUnit(rT,1747989297,12800.0,-6912.0,270.000)
call CreateUnit(rT,1747989297,15488.0,-7552.0,270.000)
call CreateUnit(rT,1747989297,19072.0,-7424.0,270.000)
call CreateUnit(rT,1747989297,15360.0,-5568.0,270.000)
call CreateUnit(rT,1747989297,17216.0,-8640.0,270.000)
call CreateUnit(rT,1747989297,16960.0,-16192.0,270.000)
call CreateUnit(rT,1747989297,6976.0,-6592.0,270.000)
call CreateUnit(rT,1747989297,24000.0,256.0,270.000)
call CreateUnit(rT,1747989297,-10688.0,-384.0,270.000)
call CreateUnit(rT,1747989297,13952.0,-11008.0,270.000)
call CreateUnit(rT,1747989297,-10944.0,-4608.0,270.000)
call CreateUnit(rT,1747989297,-21440.0,-8384.0,270.000)
call CreateUnit(rT,1747989297,17472.0,9472.0,270.000)
call CreateUnit(rT,1747989297,-16768.0,-8064.0,270.000)
call CreateUnit(rT,1747989297,-9920.0,-11264.0,270.000)
call CreateUnit(rT,1747989297,-7488.0,-16256.0,270.000)
call CreateUnit(rT,1747989297,448.0,-17600.0,270.000)
call CreateUnit(rT,1747989297,11008.0,-18496.0,270.000)
call CreateUnit(rT,1747989297,13248.0,-17856.0,270.000)
call CreateUnit(rT,1747989297,12288.0,-20864.0,270.000)
call CreateUnit(rT,1747989297,-11456.0,11008.0,270.000)
call CreateUnit(rT,1747989297,-8640.0,7104.0,270.000)
call CreateUnit(rT,1747989297,-7360.0,17088.0,270.000)
call CreateUnit(rT,1747989297,-5120.0,14528.0,270.000)
call CreateUnit(rT,1747989297,15488.0,-26816.0,270.000)
call CreateUnit(rT,1747989297,-9600.0,13120.0,270.000)
call CreateUnit(rT,1747989297,-11456.0,14528.0,270.000)
call CreateUnit(rT,1747989297,-12544.0,16320.0,270.000)
call CreateUnit(rT,1747989297,-7680.0,22272.0,270.000)
call CreateUnit(rT,1747989297,-6272.0,21376.0,270.000)
call CreateUnit(rT,1747989297,-4992.0,21888.0,270.000)
call CreateUnit(rT,1747989297,-1280.0,23936.0,270.000)
call CreateUnit(rT,1747989297,-3328.0,23232.0,270.000)
call CreateUnit(rT,1747989297,-2560.0,26368.0,270.000)
call CreateUnit(rT,1747989297,-6528.0,28288.0,270.000)
call CreateUnit(rT,1747989297,-9856.0,28416.0,270.000)
call CreateUnit(rT,1747989297,-13376.0,15104.0,270.000)
call CreateUnit(rT,1747989297,-10688.0,3520.0,270.000)
call CreateUnit(rT,1747989297,-9856.0,5440.0,270.000)
call CreateUnit(rT,1747989297,-6720.0,4096.0,270.000)
call CreateUnit(rT,1747989297,-13632.0,2368.0,270.000)
call CreateUnit(rT,1747989297,-10496.0,17728.0,270.000)
call CreateUnit(rT,1747989297,-7616.0,11200.0,270.000)
call CreateUnit(rT,1747989297,-18688.0,5760.0,270.000)
call CreateUnit(rT,1747989297,-25024.0,-3008.0,270.000)
call CreateUnit(rT,1747989297,-20096.0,1408.0,270.000)
call CreateUnit(rT,1747989297,-7040.0,-7808.0,270.000)
call CreateUnit(rT,1747989297,-5376.0,-9216.0,270.000)
call CreateUnit(rT,1747989297,24896.0,-27456.0,270.000)
call CreateUnit(rT,1747989297,-20352.0,12224.0,270.000)
call CreateUnit(rT,1747989297,-13568.0,5184.0,270.000)
call CreateUnit(rT,1747989297,-5120.0,24576.0,270.000)
call CreateUnit(rT,1747989297,-1856.0,27776.0,270.000)
call CreateUnit(rT,1747989297,-16704.0,24192.0,270.000)
call CreateUnit(rT,1747989297,-15936.0,17088.0,270.000)
call CreateUnit(rT,1747989297,-17792.0,16064.0,270.000)
call CreateUnit(rT,1747989297,-20224.0,21632.0,270.000)
call CreateUnit(rT,1747989297,-22400.0,19968.0,270.000)
call CreateUnit(rT,1747989297,-15872.0,20544.0,270.000)
call CreateUnit(rT,1747989297,-19776.0,16512.0,270.000)
call CreateUnit(rT,1747989297,-17088.0,12672.0,270.000)
call CreateUnit(rT,1747989297,-18560.0,19712.0,270.000)
call CreateUnit(rT,1747989297,-15680.0,26112.0,270.000)
call CreateUnit(rT,1747989297,-17088.0,26816.0,270.000)
call CreateUnit(rT,1747989297,-16704.0,3584.0,270.000)
call CreateUnit(rT,1747989297,-11456.0,7232.0,270.000)
call CreateUnit(rT,1747989297,-18176.0,10816.0,270.000)
call CreateUnit(rT,1747989297,-16000.0,6016.0,270.000)
call CreateUnit(rT,1747989297,-8896.0,26688.0,270.000)
call CreateUnit(rT,1747989297,9216.0,-4416.0,270.000)
call CreateUnit(rT,1747989297,6656.0,-4480.0,270.000)
call CreateUnit(rT,1747989297,5184.0,-1856.0,270.000)
call CreateUnit(rT,1747989297,18624.0,-448.0,270.000)
call CreateUnit(rT,1747989297,11008.0,-1984.0,270.000)
call CreateUnit(rT,1747989297,14144.0,-128.0,270.000)
call CreateUnit(rT,1747989297,8384.0,-10368.0,270.000)
call CreateUnit(rT,1747989297,5376.0,-12224.0,270.000)
call CreateUnit(rT,1747989297,3392.0,-7296.0,270.000)
call CreateUnit(rT,1747989297,12672.0,-3904.0,270.000)
call CreateUnit(rT,1747989297,27008.0,-11520.0,270.000)
call CreateUnit(rT,1747989297,-25216.0,1472.0,270.000)
call CreateUnit(rT,1747989297,23552.0,11072.0,270.000)
call CreateUnit(rT,1747989297,-20736.0,-2112.0,270.000)
call CreateUnit(rT,1747989297,-22592.0,2560.0,270.000)
call CreateUnit(rT,1747989297,-20864.0,3136.0,270.000)
call CreateUnit(rT,1747989297,-17280.0,-3136.0,270.000)
call CreateUnit(rT,1747989297,-3584.0,4608.0,270.000)
call CreateUnit(rT,1747989297,1536.0,29440.0,270.000)
call CreateUnit(rT,1747989297,-23104.0,-8832.0,270.000)
call CreateUnit(rT,1747989297,1216.0,-960.0,270.000)
call CreateUnit(rT,1747989297,-13312.0,-8512.0,270.000)
call CreateUnit(rT,1747989297,26240.0,-2688.0,270.000)
call CreateUnit(rT,1747989043,-7872.0,17536.0,270.000)
call CreateUnit(rT,1747989297,-13568.0,12160.0,270.000)
call CreateUnit(rT,1747989297,-13696.0,8064.0,270.000)
call CreateUnit(rT,1747989297,27648.0,-5824.0,270.000)
call CreateUnit(rT,1747989297,-4544.0,11648.0,270.000)
call CreateUnit(rT,1747989297,28992.0,-3200.0,270.000)
call CreateUnit(rT,1747989297,-3072.0,8320.0,270.000)
call CreateUnit(rT,1747989297,-384.0,8512.0,270.000)
call CreateUnit(rT,1747989297,28224.0,2752.0,270.000)
call CreateUnit(rT,1747989297,-4992.0,17280.0,270.000)
call CreateUnit(rT,1747989297,64.0,12608.0,270.000)
call CreateUnit(rT,1747989297,-2112.0,13696.0,270.000)
call CreateUnit(rT,1747989297,4160.0,5376.0,270.000)
call CreateUnit(rT,1747989297,4224.0,3904.0,270.000)
call CreateUnit(rT,1747989297,7232.0,2240.0,270.000)
call CreateUnit(rT,1747989297,-384.0,3072.0,270.000)
call CreateUnit(rT,1747989297,-8128.0,19968.0,270.000)
call CreateUnit(rT,1747989297,3072.0,192.0,270.000)
call CreateUnit(rT,1747989297,832.0,15872.0,270.000)
call CreateUnit(rT,1747989297,-2304.0,16064.0,270.000)
call CreateUnit(rT,1747989297,4416.0,19648.0,270.000)
call CreateUnit(rT,1747989297,1792.0,6976.0,270.000)
call CreateUnit(rT,1747989297,5888.0,24960.0,270.000)
call CreateUnit(rT,1747989297,-1792.0,19200.0,270.000)
call CreateUnit(rT,1747989297,3008.0,22784.0,270.000)
call CreateUnit(rT,1747989297,3200.0,18240.0,270.000)
call CreateUnit(rT,1747989297,-3712.0,-6528.0,270.000)
call CreateUnit(rT,1747989297,-17216.0,22208.0,270.000)
call CreateUnit(rT,1747989297,-18880.0,17920.0,270.000)
call CreateUnit(rT,1747989297,-17280.0,18304.0,270.000)
call CreateUnit(rT,1747989297,-22272.0,22400.0,270.000)
call CreateUnit(rT,1747989297,-10496.0,-9152.0,270.000)
call CreateUnit(rT,1747989297,13248.0,5120.0,270.000)
call CreateUnit(rT,1747989297,7936.0,-2368.0,270.000)
call CreateUnit(rT,1747989297,3520.0,27008.0,270.000)
call CreateUnit(rT,1747989297,8832.0,26368.0,270.000)
call CreateUnit(rT,1747989297,6848.0,21440.0,270.000)
call CreateUnit(rT,1747989297,6144.0,18560.0,270.000)
call CreateUnit(rT,1747989297,3904.0,11072.0,270.000)
call CreateUnit(rT,1747989297,8512.0,12352.0,270.000)
call CreateUnit(rT,1747989297,9280.0,20032.0,270.000)
call CreateUnit(rT,1747989297,1216.0,11008.0,270.000)
call CreateUnit(rT,1747989044,-15680.0,11200.0,270.000)
call CreateUnit(rT,1747989044,-15104.0,17408.0,270.000)
call CreateUnit(rT,1747989045,-1728.0,28608.0,270.000)
call CreateUnit(rT,1747989043,-18304.0,18112.0,270.000)
call CreateUnit(rT,1747989044,-9600.0,13888.0,270.000)
call CreateUnit(rT,1747989297,384.0,19456.0,270.000)
call CreateUnit(rT,1747989044,4864.0,5952.0,270.000)
call CreateUnit(rT,1747989044,8000.0,-1664.0,270.000)
call CreateUnit(rT,1747989044,9280.0,-3008.0,270.000)
call CreateUnit(rT,1747989045,-21056.0,21056.0,270.000)
call CreateUnit(rT,1747989045,-19648.0,12224.0,270.000)
call CreateUnit(rT,1747989045,17984.0,-13120.0,270.000)
call CreateUnit(rT,1747989042,-28544.0,704.0,270.000)
call CreateUnit(rT,1747989045,-9344.0,7168.0,270.000)
call CreateUnit(rT,1747989043,-6336.0,8576.0,270.000)
call CreateUnit(rT,1747989045,-15616.0,21248.0,270.000)
call CreateUnit(rT,1747989045,-16640.0,1024.0,270.000)
call CreateUnit(rT,1747989045,13760.0,-11584.0,270.000)
call CreateUnit(rT,1747989042,-11328.0,3712.0,270.000)
call CreateUnit(rT,1747989042,-16768.0,25920.0,270.000)
call CreateUnit(rT,1747989045,-19200.0,28352.0,270.000)
call CreateUnit(rT,1747989043,3456.0,11584.0,270.000)
call CreateUnit(rT,1747989044,-24640.0,4352.0,270.000)
call CreateUnit(rT,1747989044,-23232.0,-5120.0,270.000)
call CreateUnit(rT,1747989042,-23424.0,768.0,270.000)
call CreateUnit(rT,1747989045,-15936.0,-2688.0,270.000)
call CreateUnit(rT,1747989045,-10752.0,-3456.0,270.000)
call CreateUnit(rT,1747989044,-7552.0,4416.0,270.000)
call CreateUnit(rT,1747989045,-20160.0,-1600.0,270.000)
call CreateUnit(rT,1747989045,-21824.0,2560.0,270.000)
call CreateUnit(rT,1747989045,11392.0,-7104.0,270.000)
call CreateUnit(rT,1747989042,4352.0,20224.0,270.000)
call CreateUnit(rT,1747989044,-15360.0,4992.0,270.000)
call CreateUnit(rT,1747989042,-896.0,3392.0,270.000)
call CreateUnit(rT,1747989045,-6528.0,-832.0,270.000)
call CreateUnit(rT,1747989043,-4928.0,-3264.0,270.000)
call CreateUnit(rT,1747989042,-6144.0,-8192.0,270.000)
call CreateUnit(rT,1747989043,23424.0,640.0,270.000)
call CreateUnit(rT,1747989043,-6976.0,1344.0,270.000)
call CreateUnit(rT,1747989043,4352.0,128.0,270.000)
call CreateUnit(rT,1747989297,17472.0,19648.0,270.000)
call CreateUnit(rT,1747989044,-7872.0,22784.0,270.000)
call CreateUnit(rT,1747989297,20864.0,21504.0,270.000)
call CreateUnit(rT,1747989044,-9152.0,28480.0,270.000)
call CreateUnit(rT,1747989042,-27712.0,-9536.0,270.000)
call CreateUnit(rT,1747989042,4800.0,-12480.0,270.000)
call CreateUnit(rT,1747989045,7232.0,-11328.0,270.000)
call CreateUnit(rT,1747989045,1792.0,-8064.0,270.000)
call CreateUnit(rT,1747989297,-1600.0,5952.0,270.000)
call CreateUnit(rT,1747989043,-128.0,-1792.0,270.000)
call CreateUnit(rT,1747989042,-3392.0,8640.0,270.000)
call CreateUnit(rT,1747989044,-1856.0,16576.0,270.000)
call CreateUnit(rT,1747989043,-13888.0,14784.0,270.000)
call CreateUnit(rT,1747989297,-29568.0,-9792.0,270.000)
call CreateUnit(rT,1747989043,-9088.0,26240.0,270.000)
call CreateUnit(rT,1747989045,-5440.0,23808.0,270.000)
call CreateUnit(rT,1747989045,2176.0,30080.0,270.000)
call CreateUnit(rT,1747989043,1984.0,6464.0,270.000)
call CreateUnit(rT,1747989297,-26304.0,-1408.0,270.000)
call CreateUnit(rT,1747989043,448.0,13056.0,270.000)
call CreateUnit(rT,1747989045,3072.0,26752.0,270.000)
call CreateUnit(rT,1747989043,6656.0,18880.0,270.000)
call CreateUnit(rT,1747989043,3264.0,-3712.0,270.000)
call CreateUnit(rT,1747989297,15872.0,5760.0,270.000)
call CreateUnit(rT,1747989043,6528.0,22080.0,270.000)
call CreateUnit(rT,1747989044,8896.0,27008.0,270.000)
call CreateUnit(rT,1747989297,18496.0,-17280.0,270.000)
call CreateUnit(rT,1747989297,11392.0,7872.0,270.000)
call CreateUnit(rT,1747989297,12672.0,11328.0,270.000)
call CreateUnit(rT,1747989297,6016.0,12416.0,270.000)
call CreateUnit(rT,1747989297,7104.0,7808.0,270.000)
call CreateUnit(rT,1747989297,20864.0,2688.0,270.000)
call CreateUnit(rT,1747989297,24000.0,2560.0,270.000)
call CreateUnit(rT,1747989297,19648.0,11328.0,270.000)
call CreateUnit(rT,1747989297,11584.0,16960.0,270.000)
call CreateUnit(rT,1747989297,18496.0,-13248.0,270.000)
call CreateUnit(rT,1747989297,17216.0,-11456.0,270.000)
call CreateUnit(rT,1747989297,25088.0,-8320.0,270.000)
call CreateUnit(rT,1747989297,15680.0,-17536.0,270.000)
call CreateUnit(rT,1747989297,16640.0,-14208.0,270.000)
call CreateUnit(rT,1747989297,17280.0,-19584.0,270.000)
call CreateUnit(rT,1747989297,22912.0,-10240.0,270.000)
call CreateUnit(rT,1747989297,20864.0,-23040.0,270.000)
call CreateUnit(rT,1747989044,13120.0,-21696.0,270.000)
call CreateUnit(rT,1747989297,20096.0,-5760.0,270.000)
call CreateUnit(rT,1747989297,18816.0,-3776.0,270.000)
call CreateUnit(rT,1747989042,14464.0,-26432.0,270.000)
call CreateUnit(rT,1747989044,23808.0,-27776.0,270.000)
call CreateUnit(rT,1747989042,11776.0,-18688.0,270.000)
call CreateUnit(rT,1747989043,256.0,-18048.0,270.000)
call CreateUnit(rT,1747989045,-16192.0,-8192.0,270.000)
call CreateUnit(rT,1747989045,-11520.0,-10944.0,270.000)
call CreateUnit(rT,1747989045,16512.0,-19968.0,270.000)
call CreateUnit(rT,1747989045,20416.0,-22272.0,270.000)
call CreateUnit(rT,1747989044,28800.0,-11904.0,270.000)
call CreateUnit(rT,1747989297,15040.0,23104.0,270.000)
call CreateUnit(rT,1747989044,8128.0,12928.0,270.000)
call CreateUnit(rT,1747989044,16896.0,-15744.0,270.000)
call CreateUnit(rT,1747989042,17984.0,-640.0,270.000)
call CreateUnit(rT,1747989045,20608.0,3136.0,270.000)
call CreateUnit(rT,1747989045,7232.0,-5120.0,270.000)
call CreateUnit(rT,1747989045,25984.0,-8128.0,270.000)
call CreateUnit(rT,1747989045,20544.0,-5440.0,270.000)
call CreateUnit(rT,1747989045,11968.0,17856.0,270.000)
call CreateUnit(rT,1747989045,10048.0,20032.0,270.000)
call CreateUnit(rT,1747989043,15296.0,-7232.0,270.000)
call CreateUnit(rT,1747989043,13056.0,11776.0,270.000)
call CreateUnit(rT,1747989043,15744.0,23488.0,270.000)
call CreateUnit(rT,1747989043,17984.0,9280.0,270.000)
set rT=null
endfunction
function CR takes nothing returns nothing
local player LR=Player(19)
local unit XR=CreateUnit(LR,1211118391,-29820.0,29950.4,269.903)
call SetHeroLevel(XR,15,false)
call SetUnitState(XR,UNIT_STATE_MANA,85.)
set XR=CreateUnit(LR,1211118406,-29707.1,29309.8,269.793)
call SetHeroLevel(XR,15,false)
set LR=null
set XR=null
endfunction
function Cf takes nothing returns nothing
local player Lf=Player(2)
local unit Xf=CreateUnit(Lf,1211118391,-30324.4,30466.1,270.380)
call SetHeroLevel(Xf,15,false)
call SetUnitState(Xf,UNIT_STATE_MANA,85.)
set Xf=CreateUnit(Lf,1211118406,-30346.6,29573.7,270.406)
call SetHeroLevel(Xf,15,false)
set Lf=null
set Xf=null
endfunction
function DR takes nothing returns nothing
local player PR=Player(17)
local unit AR=CreateUnit(PR,1211118391,-29951.6,30084.7,270.028)
call SetHeroLevel(AR,15,false)
call SetUnitState(AR,UNIT_STATE_MANA,85.)
set AR=CreateUnit(PR,1211118406,-29862.1,29302.2,269.942)
call SetHeroLevel(AR,15,false)
set PR=null
set AR=null
endfunction
function Df takes nothing returns nothing
local player Pf=Player(0)
local unit Af=CreateUnit(Pf,1211118391,-30470.9,30602.5,270.516)
call SetHeroLevel(Af,15,false)
call SetUnitState(Af,UNIT_STATE_MANA,85.)
set Af=CreateUnit(Pf,1211118406,-30360.2,29312.6,270.421)
call SetHeroLevel(Af,15,false)
set Pf=null
set Af=null
endfunction
function ER takes nothing returns nothing
local player QR=Player(15)
local unit WR=CreateUnit(QR,1211118391,-30467.2,29834.7,270.519)
call SetHeroLevel(WR,15,false)
call SetUnitState(WR,UNIT_STATE_MANA,85.)
set WR=CreateUnit(QR,1211118406,-29874.4,29559.4,269.954)
call SetHeroLevel(WR,15,false)
set QR=null
set WR=null
endfunction
function IR takes nothing returns nothing
local player ZR=Player(16)
local unit UR=CreateUnit(ZR,1211118391,-30203.1,29826.8,270.268)
call SetHeroLevel(UR,15,false)
call SetUnitState(UR,UNIT_STATE_MANA,85.)
set UR=CreateUnit(ZR,1211118406,-29780.4,29300.3,269.864)
call SetHeroLevel(UR,15,false)
set ZR=null
set UR=null
endfunction
function KR takes nothing returns nothing
local player HR=Player(18)
local unit JR=CreateUnit(HR,1211118391,-29691.7,30077.9,269.782)
call SetHeroLevel(JR,15,false)
call SetUnitState(JR,UNIT_STATE_MANA,85.)
set JR=CreateUnit(HR,1211118406,-29792.0,29571.7,269.875)
call SetHeroLevel(JR,15,false)
set HR=null
set JR=null
endfunction
function Kf takes nothing returns nothing
local player Hf=Player(1)
local unit Jf=CreateUnit(Hf,1211118391,-30205.9,30601.1,270.267)
call SetHeroLevel(Jf,15,false)
call SetUnitState(Jf,UNIT_STATE_MANA,85.)
set Jf=CreateUnit(Hf,1211118406,-30199.1,29448.7,270.266)
call SetHeroLevel(Jf,15,false)
set Hf=null
set Jf=null
endfunction
function NR takes nothing returns nothing
local player VR=Player(22)
local unit BR=CreateUnit(VR,1211118391,-29948.2,29831.1,270.025)
call SetHeroLevel(BR,15,false)
call SetUnitState(BR,UNIT_STATE_MANA,85.)
set BR=CreateUnit(VR,1211118406,-29699.3,29565.4,269.787)
call SetHeroLevel(BR,15,false)
set VR=null
set BR=null
endfunction
function Nf takes nothing returns nothing
local player Vf=Player(3)
local unit Bf=CreateUnit(Vf,1211118391,-30468.2,30345.3,270.516)
call SetHeroLevel(Bf,15,false)
call SetUnitState(Bf,UNIT_STATE_MANA,85.)
set Bf=CreateUnit(Vf,1211118406,-30252.3,29576.9,270.316)
call SetHeroLevel(Bf,15,false)
set Vf=null
set Bf=null
endfunction
function YR takes nothing returns nothing
local player RR=Player(11)
local unit TR=CreateUnit(RR,1211118391,-29827.0,30210.1,269.911)
call SetHeroLevel(TR,15,false)
call SetUnitState(TR,UNIT_STATE_MANA,85.)
set TR=CreateUnit(RR,1211118406,-30125.9,29321.4,270.196)
call SetHeroLevel(TR,15,false)
set RR=null
set TR=null
endfunction
function aR takes nothing returns nothing
local player eR=Player(9)
local unit qR=CreateUnit(eR,1211118391,-29693.5,30338.3,269.785)
call SetHeroLevel(qR,15,false)
call SetUnitState(qR,UNIT_STATE_MANA,85.)
set qR=CreateUnit(eR,1211118406,-30045.2,29554.8,270.118)
call SetHeroLevel(qR,15,false)
set eR=null
set qR=null
endfunction
function cR takes nothing returns nothing
local player iR=Player(6)
local unit SR=CreateUnit(iR,1211118391,-29693.7,30597.0,269.786)
call SetHeroLevel(SR,15,false)
call SetUnitState(SR,UNIT_STATE_MANA,85.)
set SR=CreateUnit(iR,1211118406,-30199.8,29310.0,270.267)
call SetHeroLevel(SR,15,false)
set iR=null
set SR=null
endfunction
function fR takes nothing returns nothing
local player nR=Player(10)
local unit dR=CreateUnit(nR,1211118391,-30338.2,30210.1,270.394)
call SetHeroLevel(dR,15,false)
call SetUnitState(dR,UNIT_STATE_MANA,85.)
set dR=CreateUnit(nR,1211118406,-29904.6,29442.8,269.983)
call SetHeroLevel(dR,15,false)
set nR=null
set dR=null
endfunction
function hR takes nothing returns nothing
local player GR=Player(12)
local unit gR=CreateUnit(GR,1211118391,-30464.7,30089.7,270.515)
call SetHeroLevel(gR,15,false)
call SetUnitState(gR,UNIT_STATE_MANA,85.)
set gR=CreateUnit(GR,1211118406,-29962.2,29311.8,270.038)
call SetHeroLevel(gR,15,false)
set GR=null
set gR=null
endfunction
function jR takes nothing returns nothing
local player FR=Player(13)
local unit kR=CreateUnit(FR,1211118391,-30204.3,30080.3,270.268)
call SetHeroLevel(kR,15,false)
call SetUnitState(kR,UNIT_STATE_MANA,85.)
set kR=CreateUnit(FR,1211118406,-30039.0,29306.5,270.112)
call SetHeroLevel(kR,15,false)
set FR=null
set kR=null
endfunction
function lR takes nothing returns nothing
local player oR=Player(7)
local unit OR=CreateUnit(oR,1211118391,-29818.2,30468.8,269.903)
call SetHeroLevel(OR,15,false)
call SetUnitState(OR,UNIT_STATE_MANA,85.)
set OR=CreateUnit(oR,1211118406,-29998.9,29444.3,270.074)
call SetHeroLevel(OR,15,false)
set oR=null
set OR=null
endfunction
function mR takes nothing returns nothing
local player xR=Player(14)
local unit vR=CreateUnit(xR,1211118391,-30339.8,29950.4,270.397)
call SetHeroLevel(vR,15,false)
call SetUnitState(vR,UNIT_STATE_MANA,85.)
set vR=CreateUnit(xR,1211118406,-29968.7,29556.2,270.045)
call SetHeroLevel(vR,15,false)
set xR=null
set vR=null
endfunction
function pR takes nothing returns nothing
local player bR=Player(8)
local unit yR=CreateUnit(bR,1211118391,-29946.0,30342.9,270.023)
call SetHeroLevel(yR,15,false)
call SetUnitState(yR,UNIT_STATE_MANA,85.)
set yR=CreateUnit(bR,1211118406,-30137.9,29561.1,270.206)
call SetHeroLevel(yR,15,false)
set bR=null
set yR=null
endfunction
function tR takes nothing returns nothing
local player rR=Player(5)
local unit sR=CreateUnit(rR,1211118391,-29950.2,30589.5,270.027)
call SetHeroLevel(sR,15,false)
call SetUnitState(sR,UNIT_STATE_MANA,85.)
set sR=CreateUnit(rR,1211118406,-30283.9,29308.8,270.348)
call SetHeroLevel(sR,15,false)
set rR=null
set sR=null
endfunction
function uR takes nothing returns nothing
local player Mf=Player(4)
local unit wR=CreateUnit(Mf,1211118391,-30204.6,30339.2,270.267)
call SetHeroLevel(wR,15,false)
call SetUnitState(wR,UNIT_STATE_MANA,85.)
set wR=CreateUnit(Mf,1211118406,-30106.5,29439.8,270.177)
call SetHeroLevel(wR,15,false)
set Mf=null
set wR=null
endfunction
function uT takes nothing returns nothing
local player MR=Player(23)
local unit wT=CreateUnit(MR,1211118391,-29689.5,29824.6,269.779)
call SetHeroLevel(wT,15,false)
call SetUnitState(wT,UNIT_STATE_MANA,85.)
set wT=CreateUnit(MR,1211118406,-29815.4,29434.4,269.898)
call SetHeroLevel(wT,15,false)
set MR=null
set wT=null
endfunction
function tT takes nothing returns nothing
call Df()
call Kf()
call Cf()
call Nf()
call uR()
call tR()
call cR()
call lR()
call pR()
call aR()
call fR()
call YR()
call hR()
call jR()
call mR()
call ER()
call IR()
call DR()
call KR()
call CR()
call NR()
call uT()
endfunction
function main takes nothing returns nothing
local trigger IK
local trigger PK
local trigger AK
call Zf()
call SetCameraBounds((-30720.0)+GetCameraMargin(CAMERA_MARGIN_LEFT),(-30720.0)+GetCameraMargin(CAMERA_MARGIN_BOTTOM),30720.0-GetCameraMargin(CAMERA_MARGIN_RIGHT),30720.0-GetCameraMargin(CAMERA_MARGIN_TOP),(-30720.0)+GetCameraMargin(CAMERA_MARGIN_LEFT),30720.0-GetCameraMargin(CAMERA_MARGIN_TOP),30720.0-GetCameraMargin(CAMERA_MARGIN_RIGHT),(-30720.0)+GetCameraMargin(CAMERA_MARGIN_BOTTOM))
call SetDayNightModels("Environment\\DNC\\DNCLordaeron\\DNCLordaeronTerrain\\DNCLordaeronTerrain.mdl","Environment\\DNC\\DNCLordaeron\\DNCLordaeronUnit\\DNCLordaeronUnit.mdl")
call NewSoundEnvironment("Default")
call SetAmbientDaySound("LordaeronSummerDay")
call SetAmbientNightSound("LordaeronSummerNight")
call SetMapMusic("Music",true,0)
set fs=CreateSound("Sound\\Interface\\Warning.wav",false,false,false,10,10,"")
call SetSoundParamsFromLabel(fs,"Warning")
call SetSoundDuration(fs,1903)
set q=Rect(11872.0,-24096.0,13376.0,-18304.0)
set a=Rect(14080.0,-30720.0,16256.0,-25664.0)
set n=Rect(12096.0,-26240.0,14944.0,-23776.0)
set d=Rect(-17120.0,15936.0,-15520.0,17408.0)
call Rect(-29824.0,-30080.0,-29312.0,-28672.0)
call Rect(-29216.0,-30112.0,-28672.0,-28672.0)
call Rect(-25984.0,-29760.0,-24992.0,-29504.0)
call Rect(-25984.0,-30080.0,-25472.0,-29824.0)
call Rect(-25984.0,-30400.0,-25472.0,-30144.0)
call Rect(-26464.0,-30048.0,-26176.0,-29056.0)
call Rect(-25440.0,-30368.0,-25184.0,-29856.0)
call Rect(-25184.0,-30368.0,-24928.0,-29856.0)
call Rect(-24672.0,-29568.0,-24064.0,-28800.0)
call Rect(-24704.0,-30208.0,-24064.0,-29696.0)
set f=Rect(-17408.0,22016.0,-17056.0,22368.0)
set R=Rect(-19072.0,17728.0,-18688.0,18080.0)
set T=Rect(-22464.0,22208.0,-22112.0,22560.0)
set Y=Rect(-3776.0,4416.0,-3392.0,4768.0)
set G=Rect(-3872.0,1664.0,-3456.0,2016.0)
set g=Rect(-416.0,-2592.0,-128.0,-2272.0)
set h=Rect(4992.0,-2016.0,5344.0,-1696.0)
set F=Rect(2528.0,-3168.0,2848.0,-2880.0)
set k=Rect(7744.0,-2528.0,8096.0,-2208.0)
set j=Rect(-17504.0,18080.0,-17056.0,18496.0)
set x=Rect(1024.0,-1120.0,1376.0,-800.0)
set v=Rect(-3328.0,8096.0,-2848.0,8512.0)
set m=Rect(-4704.0,11488.0,-4416.0,11776.0)
set Q=Rect(-640.0,8288.0,-160.0,8704.0)
set W=Rect(-5184.0,17120.0,-4832.0,17440.0)
set E=Rect(-96.0,12448.0,224.0,12768.0)
set Z=Rect(-2272.0,13536.0,-1984.0,13856.0)
set U=Rect(7008.0,1984.0,7456.0,2432.0)
set I=Rect(4032.0,3744.0,4416.0,4064.0)
set P=Rect(4000.0,5216.0,4320.0,5536.0)
set A=Rect(-576.0,2880.0,-224.0,3232.0)
set D=Rect(-8288.0,19776.0,-7936.0,20160.0)
set H=Rect(-6464.0,21184.0,-6080.0,21568.0)
set J=Rect(-7904.0,22048.0,-7488.0,22464.0)
set K=Rect(-5344.0,14304.0,-4960.0,14720.0)
set L=Rect(2880.0,32.0,3264.0,352.0)
set X=Rect(608.0,15680.0,992.0,16096.0)
set C=Rect(-2496.0,15872.0,-2112.0,16224.0)
set V=Rect(1056.0,10848.0,1344.0,11136.0)
set B=Rect(1600.0,6784.0,1984.0,7136.0)
set N=Rect(224.0,19296.0,544.0,19648.0)
set M=Rect(2784.0,22592.0,3200.0,22944.0)
set ww=Rect(-1984.0,19008.0,-1600.0,19360.0)
set uw=Rect(3008.0,18048.0,3392.0,18400.0)
call Rect(-28544.0,-30080.0,-28064.0,-29344.0)
call Rect(-27744.0,-30080.0,-27456.0,-29760.0)
set rw=Rect(4224.0,19488.0,4608.0,19776.0)
set sw=Rect(13056.0,4960.0,13408.0,5280.0)
set tw=Rect(5696.0,24768.0,6048.0,25088.0)
set iw=Rect(3328.0,26816.0,3680.0,27168.0)
set Sw=Rect(8608.0,26144.0,9024.0,26528.0)
set cw=Rect(6656.0,21248.0,7008.0,21600.0)
set ow=Rect(-16640.0,10368.0,-13504.0,13056.0)
set Ow=Rect(-18944.0,5312.0,-16864.0,7328.0)
set lw=Rect(-28032.0,-1120.0,-22464.0,640.0)
set bw=Rect(-27264.0,2784.0,-26208.0,3328.0)
set yw=Rect(-26912.0,-4320.0,-23872.0,-2976.0)
set pw=Rect(-19328.0,-288.0,-18592.0,1568.0)
set ew=Rect(-11936.0,7616.0,-448.0,11424.0)
set qw=Rect(-1664.0,1216.0,6848.0,7776.0)
set aw=Rect(-5472.0,24704.0,-3232.0,27616.0)
set nw=Rect(3744.0,10880.0,4064.0,11232.0)
set dw=Rect(-12064.0,11392.0,-8832.0,16576.0)
set fw=Rect(-8832.0,10176.0,23520.0,17760.0)
set Rw=Rect(4384.0,17728.0,23424.0,27040.0)
set Tw=Rect(-10688.0,17536.0,-10304.0,17888.0)
set Yw=Rect(-10688.0,-9312.0,-10336.0,-9024.0)
set Gw=Rect(17280.0,9280.0,17632.0,9632.0)
set gw=Rect(8352.0,12192.0,8672.0,12512.0)
set hw=Rect(5952.0,18400.0,6304.0,18688.0)
set Fw=Rect(9120.0,19872.0,9408.0,20192.0)
set kw=Rect(23328.0,-14080.0,30688.0,17792.0)
set jw=Rect(13984.0,-288.0,14336.0,0.0)
set xw=Rect(10624.0,-7552.0,11008.0,-7200.0)
set vw=Rect(15168.0,-5792.0,15552.0,-5408.0)
set mw=Rect(15328.0,-7712.0,15648.0,-7424.0)
set Qw=Rect(12640.0,-7104.0,12992.0,-6752.0)
set Ww=Rect(17056.0,-8800.0,17376.0,-8512.0)
set Ew=Rect(18432.0,-608.0,18784.0,-320.0)
set Zw=Rect(13760.0,-11168.0,14112.0,-10752.0)
set Uw=Rect(16768.0,-16416.0,17120.0,-16032.0)
set Iw=Rect(18880.0,-7616.0,19232.0,-7296.0)
set Pw=Rect(6816.0,-6752.0,7136.0,-6464.0)
set Aw=Rect(12512.0,-4064.0,12832.0,-3712.0)
set Dw=Rect(9056.0,-4576.0,9344.0,-4288.0)
set Hw=Rect(-26464.0,-8896.0,-26144.0,-8544.0)
set Jw=Rect(-21632.0,-8544.0,-21248.0,-8224.0)
set Kw=Rect(-16928.0,-8224.0,-16608.0,-7904.0)
set Lw=Rect(-10112.0,-11424.0,-9760.0,-11136.0)
set Xw=Rect(-7680.0,-16416.0,-7328.0,-16128.0)
set Cw=Rect(288.0,-17760.0,608.0,-17472.0)
set Vw=Rect(9248.0,-21376.0,9984.0,-20640.0)
set Bw=Rect(24704.0,-27648.0,25088.0,-27264.0)
set Nw=Rect(10816.0,-18688.0,11168.0,-18304.0)
set Mw=Rect(13056.0,-18016.0,13408.0,-17760.0)
set wu=Rect(12096.0,-21024.0,12448.0,-20704.0)
set uu=Rect(15680.0,5600.0,16032.0,5920.0)
set ru=Rect(6944.0,7648.0,7264.0,7968.0)
set su=Rect(5824.0,12256.0,6176.0,12576.0)
set tu=Rect(11200.0,7712.0,11552.0,8064.0)
set iu=Rect(12480.0,11136.0,12832.0,11456.0)
set Su=Rect(14880.0,22944.0,15200.0,23232.0)
set cu=Rect(11392.0,16768.0,11744.0,17088.0)
set ou=Rect(23840.0,96.0,24128.0,384.0)
set Ou=Rect(19488.0,11168.0,19808.0,11488.0)
set lu=Rect(20672.0,2528.0,21056.0,2848.0)
set bu=Rect(23776.0,2368.0,24160.0,2720.0)
set yu=Rect(18336.0,-13408.0,18624.0,-13120.0)
set pu=Rect(17056.0,-11648.0,17376.0,-11264.0)
set eu=Rect(15488.0,-17696.0,15840.0,-17376.0)
set qu=Rect(24896.0,-8480.0,25248.0,-8128.0)
set au=Rect(16480.0,-14368.0,16768.0,-14048.0)
set nu=Rect(17088.0,-19744.0,17440.0,-19456.0)
set du=Rect(22720.0,-10432.0,23072.0,-10048.0)
set fu=Rect(20672.0,-23232.0,21056.0,-22848.0)
set Ru=Rect(19904.0,-5920.0,20256.0,-5632.0)
set Tu=Rect(18624.0,-3936.0,18976.0,-3616.0)
set Yu=Rect(-13632.0,-14816.0,-12192.0,-13376.0)
set Gu=Rect(17760.0,-10400.0,23360.0,-1344.0)
set gu=Rect(12384.0,-5984.0,13824.0,-4352.0)
set hu=Rect(-10944.0,3968.0,-7680.0,5120.0)
set Fu=Rect(-6528.0,7808.0,-6176.0,8160.0)
set ku=Rect(-8864.0,6912.0,-8448.0,7264.0)
set ju=Rect(-11680.0,14304.0,-11264.0,14752.0)
set xu=Rect(-9760.0,12928.0,-9472.0,13280.0)
set vu=Rect(-7552.0,16928.0,-7232.0,17248.0)
set mu=Rect(-17472.0,-3328.0,-17120.0,-2976.0)
call Rect(-24576.0,-1376.0,-24224.0,-1024.0)
set Qu=Rect(23392.0,10912.0,23712.0,11232.0)
set Wu=Rect(17280.0,19456.0,17632.0,19808.0)
set Eu=Rect(-16896.0,24032.0,-16544.0,24352.0)
set Zu=Rect(-15904.0,25952.0,-15520.0,26304.0)
set Uu=Rect(-17312.0,26624.0,-16896.0,27008.0)
set Iu=Rect(-16096.0,20352.0,-15712.0,20768.0)
set Pu=Rect(-20448.0,21440.0,-20064.0,21792.0)
set Au=Rect(-22560.0,19808.0,-22272.0,20128.0)
set Du=Rect(-18752.0,19520.0,-18400.0,19872.0)
set Hu=Rect(-16128.0,16896.0,-15808.0,17248.0)
set Ju=Rect(-17952.0,15904.0,-17632.0,16224.0)
set Ku=Rect(-19936.0,16352.0,-19648.0,16672.0)
set Lu=Rect(-17248.0,12448.0,-16928.0,12832.0)
set Xu=Rect(-13728.0,11968.0,-13408.0,12352.0)
set Cu=Rect(-15232.0,10624.0,-14880.0,10976.0)
set Vu=Rect(-13856.0,7872.0,-13568.0,8256.0)
set Bu=Rect(-16192.0,5824.0,-15840.0,6208.0)
set Nu=Rect(-16864.0,3392.0,-16576.0,3776.0)
set Mu=Rect(-18880.0,5568.0,-18528.0,5920.0)
set wr=Rect(-20288.0,1216.0,-19936.0,1600.0)
set ur=Rect(-17216.0,352.0,-16896.0,736.0)
set rr=Rect(-24512.0,3744.0,-24128.0,4064.0)
set sr=Rect(-22720.0,2368.0,-22432.0,2752.0)
set tr=Rect(-23552.0,-256.0,-23200.0,128.0)
set ir=Rect(-25376.0,1312.0,-25056.0,1632.0)
set Sr=Rect(-28736.0,-192.0,-28352.0,160.0)
set cr=Rect(-21024.0,2944.0,-20704.0,3360.0)
set lr=Rect(-13792.0,2144.0,-13440.0,2592.0)
set br=Rect(-13568.0,14912.0,-13216.0,15296.0)
set yr=Rect(-12736.0,16128.0,-12352.0,16512.0)
set pr=Rect(-10880.0,3360.0,-10528.0,3712.0)
set er=Rect(-10048.0,5280.0,-9696.0,5600.0)
set qr=Rect(-6880.0,3936.0,-6560.0,4256.0)
set ar=Rect(-8224.0,3040.0,-7904.0,3392.0)
set nr=Rect(-8960.0,1760.0,-8608.0,2176.0)
set dr=Rect(-6624.0,1088.0,-6304.0,1472.0)
set fr=Rect(-7296.0,-960.0,-6944.0,-544.0)
set Rr=Rect(-23712.0,-4704.0,-23392.0,-4416.0)
set Tr=Rect(-25184.0,-3168.0,-24864.0,-2848.0)
set Yr=Rect(-21888.0,-4416.0,-21536.0,-4032.0)
set Gr=Rect(-20928.0,-2304.0,-20576.0,-1888.0)
set gr=Rect(-7776.0,11040.0,-7456.0,11392.0)
set hr=Rect(-11648.0,7072.0,-11296.0,7360.0)
set Fr=Rect(-13728.0,4992.0,-13408.0,5376.0)
set kr=Rect(-5152.0,21696.0,-4832.0,22080.0)
set jr=Rect(-5248.0,24416.0,-4960.0,24768.0)
set xr=Rect(-6688.0,28096.0,-6368.0,28480.0)
set vr=Rect(-9024.0,26496.0,-8736.0,26880.0)
set mr=Rect(-10048.0,28224.0,-9696.0,28576.0)
set Qr=Rect(-1408.0,23776.0,-1152.0,24096.0)
set Wr=Rect(-2720.0,26176.0,-2432.0,26560.0)
set Er=Rect(-28032.0,-2944.0,-27680.0,-2560.0)
set Zr=Rect(-29760.0,-10016.0,-29408.0,-9632.0)
set Ur=Rect(15296.0,-26976.0,15648.0,-26624.0)
set Ir=Rect(-20544.0,12032.0,-20160.0,12416.0)
set Pr=Rect(-18368.0,10624.0,-18016.0,11008.0)
set Ar=Rect(-10880.0,-576.0,-10528.0,-224.0)
set Dr=Rect(-11104.0,-4768.0,-10816.0,-4448.0)
set Hr=Rect(-5728.0,-2912.0,-5440.0,-2560.0)
set Jr=Rect(-3904.0,-6720.0,-3552.0,-6336.0)
set Kr=Rect(-3616.0,-3040.0,-3328.0,-2688.0)
set Lr=Rect(-7200.0,-8000.0,-6880.0,-7616.0)
set Xr=Rect(-5504.0,-9344.0,-5248.0,-9056.0)
set Cr=Rect(-11616.0,10848.0,-11296.0,11168.0)
set Vr=Rect(-1792.0,-320.0,-1440.0,64.0)
set Br=Rect(3232.0,-7488.0,3552.0,-7136.0)
set Nr=Rect(8224.0,-10496.0,8512.0,-10208.0)
set Mr=Rect(1344.0,29280.0,1696.0,29632.0)
set ws=Rect(10848.0,-2144.0,11136.0,-1824.0)
set us=Rect(-26496.0,-1568.0,-26144.0,-1248.0)
set rs=Rect(-27168.0,2528.0,-26880.0,2816.0)
set ss=Rect(-2016.0,27552.0,-1696.0,27936.0)
set ts=Rect(-3488.0,23040.0,-3200.0,23392.0)
set is=Rect(2016.0,-7904.0,2336.0,-7584.0)
set Ss=Rect(640.0,-5760.0,992.0,-5376.0)
set cs=Rect(5216.0,-12384.0,5504.0,-12064.0)
set os=Rect(18272.0,-17504.0,18656.0,-17056.0)
set Os=Rect(26848.0,-11680.0,27168.0,-11360.0)
set ls=Rect(6464.0,-4672.0,6816.0,-4288.0)
set bs=Rect(20672.0,21312.0,21024.0,21696.0)
set ys=Rect(-1824.0,5792.0,-1440.0,6144.0)
set ps=Rect(-23264.0,-8992.0,-22944.0,-8704.0)
set es=Rect(-13504.0,-8640.0,-13184.0,-8384.0)
set qs=Rect(26048.0,-2848.0,26400.0,-2528.0)
set as=Rect(28864.0,-3360.0,29152.0,-3040.0)
set ns=Rect(28064.0,2592.0,28352.0,2880.0)
set ds=Rect(27488.0,-5984.0,27808.0,-5664.0)
call sT()
call tT()
call InitBlizzard()
call If()
call WK()
set PK=Ts
if TriggerEvaluate(PK) then
call TriggerExecute(PK)
endif
set AK=Ms
if TriggerEvaluate(AK) then
call TriggerExecute(AK)
endif
set IK=CreateTrigger()
call TriggerAddCondition(IK,Condition(Tn))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Real.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(Yn))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Integer.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(Gn))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package String.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(gn))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Angle.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(hn))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Vectors.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(Fn))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Maths.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(kn))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Player.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(jn))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Printing.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(xn))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Basics.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(vn))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package GameTimer.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(mn))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MagicFunctions.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(Qn))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package ErrorHandling.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(Wn))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Matrices.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(En))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Quaternion.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(Zn))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Table.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(Un))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Playercolor.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(In))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Colors.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(Pn))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Group.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(An))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Lightning.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(Dn))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package WeatherEffects.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(Hn))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package TypeCasting.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(Jn))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package ClosureForGroups.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(Kn))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package LinkedList.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(Ln))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Abilities.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(Xn))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package AbilityIds.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(Cn))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Buildings.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(Vn))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MutliboardTools.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(Bn))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package HashList.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(Nn))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package EventHelper.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(Mn))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package RegisterEvents.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(wd))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package TimerUtils.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(ud))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package ClosureTimers.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(rd))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package TargetsAllowed.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(sd))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Doodads.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(td))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Icons.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(id))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Objects.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(Sd))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Sounds.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(cd))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Soundsets.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(od))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Textures.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(Od))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package UI.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(ld))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Units.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(bd))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package UnitIds.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(yd))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MapBounds.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(pd))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package DummyRecycler.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(ed))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package StringUtils.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(qd))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package ObjectIds.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(ad))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Preloader.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(nd))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package ObjectIdGenerator.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(dd))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package OnUnitEnterLeave.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(fd))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package UnitIndexer.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(Rd))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package ClosureEvents.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(Td))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MathTools.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(Yd))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Forces.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(Gd))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Strings.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(gd))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package CityBaseTaxes.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(hd))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Revolts.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(Fd))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package City.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(kd))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Multiboards.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(jd))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package PlayerStats.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(xd))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package CityModifiers.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(vd))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Main.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(md))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package CastleCapture.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(Qd))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package CityBuilded.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(Wd))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package CityManage.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(Ed))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package HashSet.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(Zd))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package VoteKick.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(Ud))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Commands.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(Id))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Credits.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(Pd))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Economy.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(Ad))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package DateTime.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(Dd))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MultiboardCityUpdate.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(Hd))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Diplomacy.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(Jd))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package LimitEncampments.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(Kd))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package LimitMercenaryCamps.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(Ld))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Logarithm.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(Xd))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MainInit.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(Cd))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MassControl.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(Vd))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package NoShipsNearRivers.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(Bd))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package OnPlayerLeave.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(Nd))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package RangeChecks.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(Md))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Taxation.")
endif
call TriggerClearConditions(IK)
call TriggerAddCondition(IK,Condition(wf))
if not TriggerEvaluate(IK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Upkeep.")
endif
call TriggerClearConditions(IK)
call DestroyTrigger(IK)
set IK=null
set PK=null
set AK=null
endfunction
function EK takes nothing returns nothing
call SetPlayerStartLocation(Player(0),0)
call ForcePlayerStartLocation(Player(0),0)
call SetPlayerColor(Player(0),ConvertPlayerColor(0))
call SetPlayerRacePreference(Player(0),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(0),false)
call SetPlayerController(Player(0),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(1),1)
call ForcePlayerStartLocation(Player(1),1)
call SetPlayerColor(Player(1),ConvertPlayerColor(1))
call SetPlayerRacePreference(Player(1),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(1),false)
call SetPlayerController(Player(1),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(2),2)
call ForcePlayerStartLocation(Player(2),2)
call SetPlayerColor(Player(2),ConvertPlayerColor(2))
call SetPlayerRacePreference(Player(2),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(2),false)
call SetPlayerController(Player(2),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(3),3)
call ForcePlayerStartLocation(Player(3),3)
call SetPlayerColor(Player(3),ConvertPlayerColor(3))
call SetPlayerRacePreference(Player(3),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(3),false)
call SetPlayerController(Player(3),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(4),4)
call ForcePlayerStartLocation(Player(4),4)
call SetPlayerColor(Player(4),ConvertPlayerColor(4))
call SetPlayerRacePreference(Player(4),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(4),false)
call SetPlayerController(Player(4),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(5),5)
call ForcePlayerStartLocation(Player(5),5)
call SetPlayerColor(Player(5),ConvertPlayerColor(5))
call SetPlayerRacePreference(Player(5),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(5),false)
call SetPlayerController(Player(5),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(6),6)
call ForcePlayerStartLocation(Player(6),6)
call SetPlayerColor(Player(6),ConvertPlayerColor(6))
call SetPlayerRacePreference(Player(6),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(6),false)
call SetPlayerController(Player(6),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(7),7)
call ForcePlayerStartLocation(Player(7),7)
call SetPlayerColor(Player(7),ConvertPlayerColor(7))
call SetPlayerRacePreference(Player(7),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(7),false)
call SetPlayerController(Player(7),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(8),8)
call ForcePlayerStartLocation(Player(8),8)
call SetPlayerColor(Player(8),ConvertPlayerColor(8))
call SetPlayerRacePreference(Player(8),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(8),false)
call SetPlayerController(Player(8),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(9),9)
call ForcePlayerStartLocation(Player(9),9)
call SetPlayerColor(Player(9),ConvertPlayerColor(9))
call SetPlayerRacePreference(Player(9),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(9),false)
call SetPlayerController(Player(9),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(10),10)
call ForcePlayerStartLocation(Player(10),10)
call SetPlayerColor(Player(10),ConvertPlayerColor(10))
call SetPlayerRacePreference(Player(10),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(10),false)
call SetPlayerController(Player(10),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(11),11)
call ForcePlayerStartLocation(Player(11),11)
call SetPlayerColor(Player(11),ConvertPlayerColor(11))
call SetPlayerRacePreference(Player(11),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(11),false)
call SetPlayerController(Player(11),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(12),12)
call ForcePlayerStartLocation(Player(12),12)
call SetPlayerColor(Player(12),ConvertPlayerColor(12))
call SetPlayerRacePreference(Player(12),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(12),false)
call SetPlayerController(Player(12),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(13),13)
call ForcePlayerStartLocation(Player(13),13)
call SetPlayerColor(Player(13),ConvertPlayerColor(13))
call SetPlayerRacePreference(Player(13),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(13),false)
call SetPlayerController(Player(13),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(14),14)
call ForcePlayerStartLocation(Player(14),14)
call SetPlayerColor(Player(14),ConvertPlayerColor(14))
call SetPlayerRacePreference(Player(14),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(14),false)
call SetPlayerController(Player(14),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(15),15)
call ForcePlayerStartLocation(Player(15),15)
call SetPlayerColor(Player(15),ConvertPlayerColor(15))
call SetPlayerRacePreference(Player(15),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(15),false)
call SetPlayerController(Player(15),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(16),16)
call ForcePlayerStartLocation(Player(16),16)
call SetPlayerColor(Player(16),ConvertPlayerColor(16))
call SetPlayerRacePreference(Player(16),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(16),false)
call SetPlayerController(Player(16),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(17),17)
call ForcePlayerStartLocation(Player(17),17)
call SetPlayerColor(Player(17),ConvertPlayerColor(17))
call SetPlayerRacePreference(Player(17),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(17),false)
call SetPlayerController(Player(17),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(18),18)
call ForcePlayerStartLocation(Player(18),18)
call SetPlayerColor(Player(18),ConvertPlayerColor(18))
call SetPlayerRacePreference(Player(18),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(18),false)
call SetPlayerController(Player(18),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(19),19)
call ForcePlayerStartLocation(Player(19),19)
call SetPlayerColor(Player(19),ConvertPlayerColor(19))
call SetPlayerRacePreference(Player(19),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(19),false)
call SetPlayerController(Player(19),MAP_CONTROL_USER)
endfunction
function UK takes nothing returns nothing
call SetStartLocPrioCount(0,19)
call SetStartLocPrio(0,0,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,1,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,2,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,3,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,4,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,9,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,10,11,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,11,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,12,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,13,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,14,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,15,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,16,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,17,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,18,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(1,9)
call SetStartLocPrio(1,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,1,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,2,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,3,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,4,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(2,9)
call SetStartLocPrio(2,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,2,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,3,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,4,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(3,9)
call SetStartLocPrio(3,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,3,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,4,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(4,9)
call SetStartLocPrio(4,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,4,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(5,9)
call SetStartLocPrio(5,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(6,9)
call SetStartLocPrio(6,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(7,9)
call SetStartLocPrio(7,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(8,9)
call SetStartLocPrio(8,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(9,9)
call SetStartLocPrio(9,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,8,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(10,16)
call SetStartLocPrio(10,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,8,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,9,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,10,12,MAP_LOC_PRIO_LOW)
call SetStartLocPrio(10,11,13,MAP_LOC_PRIO_LOW)
call SetStartLocPrio(10,12,14,MAP_LOC_PRIO_LOW)
call SetStartLocPrio(10,13,15,MAP_LOC_PRIO_LOW)
call SetStartLocPrio(10,14,16,MAP_LOC_PRIO_LOW)
call SetStartLocPrio(10,15,17,MAP_LOC_PRIO_LOW)
call SetStartLocPrioCount(11,19)
call SetStartLocPrio(11,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,8,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,9,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,10,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,11,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,12,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,13,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,14,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,15,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,16,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,17,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,18,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(12,5)
call SetStartLocPrio(12,0,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,1,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,2,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,3,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,4,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(13,5)
call SetStartLocPrio(13,0,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,1,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,2,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,3,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,4,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(14,5)
call SetStartLocPrio(14,0,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,1,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,2,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,3,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,4,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(15,5)
call SetStartLocPrio(15,0,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,1,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,2,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,3,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,4,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(16,5)
call SetStartLocPrio(16,0,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,1,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,2,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,3,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,4,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(17,5)
call SetStartLocPrio(17,0,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,1,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,2,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,3,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,4,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(18,1)
call SetStartLocPrio(18,0,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(19,1)
call SetStartLocPrio(19,0,18,MAP_LOC_PRIO_HIGH)
endfunction
function ZK takes nothing returns nothing
call SetPlayerTeam(Player(0),0)
call SetPlayerTeam(Player(1),0)
call SetPlayerTeam(Player(2),0)
call SetPlayerTeam(Player(3),0)
call SetPlayerTeam(Player(4),0)
call SetPlayerTeam(Player(5),0)
call SetPlayerTeam(Player(6),0)
call SetPlayerTeam(Player(7),0)
call SetPlayerTeam(Player(8),0)
call SetPlayerTeam(Player(9),0)
call SetPlayerTeam(Player(10),0)
call SetPlayerTeam(Player(11),0)
call SetPlayerTeam(Player(12),1)
call SetPlayerTeam(Player(13),1)
call SetPlayerTeam(Player(14),1)
call SetPlayerTeam(Player(15),1)
call SetPlayerTeam(Player(16),1)
call SetPlayerTeam(Player(17),1)
call SetPlayerTeam(Player(18),1)
call SetPlayerTeam(Player(19),1)
endfunction
function config takes nothing returns nothing
call SetMapName("TRIGSTR_001")
call SetMapDescription("TRIGSTR_003")
call SetPlayers(20)
call SetTeams(20)
call SetGamePlacement(MAP_PLACEMENT_TEAMS_TOGETHER)
call DefineStartLocation(0,320.0,5184.0)
call DefineStartLocation(1,320.0,5184.0)
call DefineStartLocation(2,320.0,5184.0)
call DefineStartLocation(3,320.0,5184.0)
call DefineStartLocation(4,320.0,5184.0)
call DefineStartLocation(5,320.0,5184.0)
call DefineStartLocation(6,320.0,5184.0)
call DefineStartLocation(7,320.0,5184.0)
call DefineStartLocation(8,320.0,5184.0)
call DefineStartLocation(9,320.0,5184.0)
call DefineStartLocation(10,320.0,5184.0)
call DefineStartLocation(11,320.0,5184.0)
call DefineStartLocation(12,320.0,5184.0)
call DefineStartLocation(13,320.0,5184.0)
call DefineStartLocation(14,320.0,5184.0)
call DefineStartLocation(15,320.0,5184.0)
call DefineStartLocation(16,320.0,5184.0)
call DefineStartLocation(17,320.0,5184.0)
call DefineStartLocation(18,320.0,5184.0)
call DefineStartLocation(19,320.0,5184.0)
call EK()
call ZK()
call UK()
endfunction
