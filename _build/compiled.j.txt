// this script was compiled with wurst 1.8.0.0-jenkins-Wurst-1091
globals
// real bj_UNIT_FACING=0.
// real bj_RADTODEG=0.
// real bj_GAME_STARTED_THRESHOLD=0.
// integer bj_MAX_INVENTORY=0
// integer bj_MAX_PLAYERS=0
// integer bj_PLAYER_NEUTRAL_VICTIM=0
// integer bj_MAX_PLAYER_SLOTS=0
// integer bj_MAX_SKELETONS=0
// integer bj_MAX_STOCK_ITEM_SLOTS=0
// integer bj_MAX_STOCK_UNIT_SLOTS=0
// integer bj_MAX_ITEM_LEVEL=0
// real bj_TOD_DAWN=0.
// real bj_TOD_DUSK=0.
// real bj_MELEE_STARTING_TOD=0.
// integer bj_MELEE_HERO_LIMIT=0
// integer bj_MELEE_HERO_TYPE_LIMIT=0
// integer bj_MELEE_MAX_TWINKED_HEROES_V0=0
// integer bj_MELEE_MAX_TWINKED_HEROES_V1=0
// real bj_STOCK_RESTOCK_INITIAL_DELAY=0.
// real bj_STOCK_RESTOCK_INTERVAL=0.
// integer bj_STOCK_MAX_ITERATIONS=0
// real bj_RESCUE_PING_TIME=0.
// real bj_CINEMODE_INTERFACEFADE=0.
// gamespeed bj_CINEMODE_GAMESPEED=null
// real bj_CINEMODE_VOLUME_UNITMOVEMENT=0.
// real bj_CINEMODE_VOLUME_UNITSOUNDS=0.
// real bj_CINEMODE_VOLUME_COMBAT=0.
// real bj_CINEMODE_VOLUME_SPELLS=0.
// real bj_CINEMODE_VOLUME_UI=0.
// real bj_CINEMODE_VOLUME_MUSIC=0.
// real bj_CINEMODE_VOLUME_AMBIENTSOUNDS=0.
// real bj_CINEMODE_VOLUME_FIRE=0.
// integer bj_MAX_QUEUED_TRIGGERS=0
// real bj_QUEUED_TRIGGER_TIMEOUT=0.
// integer bj_ALLIANCE_UNALLIED=0
// integer bj_ALLIANCE_UNALLIED_VISION=0
// integer bj_ALLIANCE_ALLIED=0
// integer bj_ALLIANCE_ALLIED_VISION=0
// integer bj_ALLIANCE_ALLIED_UNITS=0
// integer bj_ALLIANCE_ALLIED_ADVUNITS=0
// integer bj_ALLIANCE_NEUTRAL=0
// integer bj_ALLIANCE_NEUTRAL_VISION=0
// integer bj_QUESTTYPE_REQ_DISCOVERED=0
// integer bj_QUESTTYPE_REQ_UNDISCOVERED=0
// integer bj_QUESTTYPE_OPT_DISCOVERED=0
// integer bj_UNIT_STATE_METHOD_ABSOLUTE=0
// integer bj_UNIT_STATE_METHOD_RELATIVE=0
// integer bj_UNIT_STATE_METHOD_DEFAULTS=0
// integer bj_UNIT_STATE_METHOD_MAXIMUM=0
// real bj_CORPSE_MAX_DEATH_TIME=0.
// force bj_FORCE_ALL_PLAYERS=null
// rect bj_mapInitialPlayableArea=null
// timer bj_gameStartedTimer=null
// boolean bj_gameStarted=false
// timer bj_volumeGroupsTimer=null
// boolean bj_isSinglePlayer=false
// trigger bj_dncSoundsDay=null
// trigger bj_dncSoundsNight=null
// sound bj_dayAmbientSound=null
// sound bj_nightAmbientSound=null
// trigger bj_dncSoundsDawn=null
// trigger bj_dncSoundsDusk=null
// sound bj_dawnSound=null
// sound bj_duskSound=null
// boolean bj_useDawnDuskSounds=false
// boolean bj_dncIsDaytime=false
// sound bj_rescueSound=null
// sound bj_defeatDialogSound=null
// trigger bj_stockItemPurchased=null
// timer bj_stockUpdateTimer=null
// integer bj_stockPickedItemLevel=0
// itemtype bj_stockPickedItemType=null
// trigger bj_rescueUnitBehavior=null
// boolean bj_rescueChangeColorUnit=false
// boolean bj_rescueChangeColorBldg=false
// gamespeed bj_cineModePriorSpeed=null
// boolean bj_cineModePriorFogSetting=false
// boolean bj_cineModePriorMaskSetting=false
// boolean bj_cineModeAlreadyIn=false
// boolean bj_cineModePriorDawnDusk=false
// integer bj_cineModeSavedSeed=0
// integer bj_queuedExecTotal=0
// timer bj_queuedExecTimeoutTimer=null
// trigger bj_queuedExecTimeout=null
// integer bj_groupEnumTypeId=0
// player bj_groupEnumOwningPlayer=null
// group bj_groupAddGroupDest=null
// location bj_enumDestructableCenter=null
// real bj_enumDestructableRadius=0.
// group bj_suspendDecayFleshGroup=null
// group bj_suspendDecayBoneGroup=null
// timer bj_delayedSuspendDecayTimer=null
// trigger bj_delayedSuspendDecayTrig=null
// integer bj_livingPlayerUnitsTypeId=0
// unit bj_lastCreatedUnit=null
// group bj_lastCreatedGroup=null
// fogmodifier bj_lastCreatedFogModifier=null
// effect bj_lastCreatedEffect=null
// quest bj_lastCreatedQuest=null
// multiboard bj_lastCreatedMultiboard=null
// unit bj_lastReplacedUnit=null
// boolexpr filterGetUnitsOfTypeIdAll=null
// boolean bj_wantDestroyGroup=false
// integer PLAYER_NEUTRAL_PASSIVE=0
// integer PLAYER_NEUTRAL_AGGRESSIVE=0
// playercolor PLAYER_COLOR_RED=null
// playercolor PLAYER_COLOR_BLUE=null
// playercolor PLAYER_COLOR_CYAN=null
// playercolor PLAYER_COLOR_PURPLE=null
// playercolor PLAYER_COLOR_YELLOW=null
// playercolor PLAYER_COLOR_ORANGE=null
// playercolor PLAYER_COLOR_GREEN=null
// playercolor PLAYER_COLOR_PINK=null
// playercolor PLAYER_COLOR_LIGHT_GRAY=null
// playercolor PLAYER_COLOR_LIGHT_BLUE=null
// playercolor PLAYER_COLOR_AQUA=null
// playercolor PLAYER_COLOR_BROWN=null
// playercolor PLAYER_COLOR_MAROON=null
// playercolor PLAYER_COLOR_NAVY=null
// playercolor PLAYER_COLOR_TURQUOISE=null
// playercolor PLAYER_COLOR_VIOLET=null
// playercolor PLAYER_COLOR_WHEAT=null
// playercolor PLAYER_COLOR_PEACH=null
// playercolor PLAYER_COLOR_MINT=null
// playercolor PLAYER_COLOR_LAVENDER=null
// playercolor PLAYER_COLOR_COAL=null
// playercolor PLAYER_COLOR_SNOW=null
// playercolor PLAYER_COLOR_EMERALD=null
// playercolor PLAYER_COLOR_PEANUT=null
// playergameresult PLAYER_GAME_RESULT_VICTORY=null
// playergameresult PLAYER_GAME_RESULT_DEFEAT=null
// playergameresult PLAYER_GAME_RESULT_NEUTRAL=null
// alliancetype ALLIANCE_PASSIVE=null
// alliancetype ALLIANCE_HELP_REQUEST=null
// alliancetype ALLIANCE_HELP_RESPONSE=null
// alliancetype ALLIANCE_SHARED_XP=null
// alliancetype ALLIANCE_SHARED_SPELLS=null
// alliancetype ALLIANCE_SHARED_VISION=null
// alliancetype ALLIANCE_SHARED_CONTROL=null
// alliancetype ALLIANCE_SHARED_ADVANCED_CONTROL=null
// version VERSION_REIGN_OF_CHAOS=null
// racepreference RACE_PREF_HUMAN=null
// mapcontrol MAP_CONTROL_USER=null
// mapcontrol MAP_CONTROL_RESCUABLE=null
// mapflag MAP_LOCK_RESOURCE_TRADING=null
// mapflag MAP_LOCK_SPEED=null
// placement MAP_PLACEMENT_TEAMS_TOGETHER=null
// startlocprio MAP_LOC_PRIO_LOW=null
// startlocprio MAP_LOC_PRIO_HIGH=null
// gamedifficulty MAP_DIFFICULTY_EASY=null
// gamedifficulty MAP_DIFFICULTY_NORMAL=null
// gamedifficulty MAP_DIFFICULTY_HARD=null
// playerslotstate PLAYER_SLOT_STATE_PLAYING=null
// volumegroup SOUND_VOLUMEGROUP_UNITMOVEMENT=null
// volumegroup SOUND_VOLUMEGROUP_UNITSOUNDS=null
// volumegroup SOUND_VOLUMEGROUP_COMBAT=null
// volumegroup SOUND_VOLUMEGROUP_SPELLS=null
// volumegroup SOUND_VOLUMEGROUP_UI=null
// volumegroup SOUND_VOLUMEGROUP_MUSIC=null
// volumegroup SOUND_VOLUMEGROUP_AMBIENTSOUNDS=null
// volumegroup SOUND_VOLUMEGROUP_FIRE=null
// fgamestate GAME_STATE_TIME_OF_DAY=null
// playerstate PLAYER_STATE_RESOURCE_GOLD=null
// playerstate PLAYER_STATE_RESOURCE_LUMBER=null
// playerstate PLAYER_STATE_GIVES_BOUNTY=null
// playerstate PLAYER_STATE_GOLD_GATHERED=null
// playerstate PLAYER_STATE_LUMBER_GATHERED=null
// unitstate UNIT_STATE_LIFE=null
// unitstate UNIT_STATE_MAX_LIFE=null
// unitstate UNIT_STATE_MANA=null
// unitstate UNIT_STATE_MAX_MANA=null
// playerevent EVENT_PLAYER_LEAVE=null
// playerevent EVENT_PLAYER_END_CINEMATIC=null
// playerunitevent EVENT_PLAYER_UNIT_ATTACKED=null
// playerunitevent EVENT_PLAYER_UNIT_RESCUED=null
// playerunitevent EVENT_PLAYER_UNIT_DEATH=null
// playerunitevent EVENT_PLAYER_UNIT_SELECTED=null
// playerunitevent EVENT_PLAYER_UNIT_CONSTRUCT_START=null
// playerunitevent EVENT_PLAYER_UNIT_CONSTRUCT_FINISH=null
// playerunitevent EVENT_PLAYER_UNIT_UPGRADE_FINISH=null
// playerunitevent EVENT_PLAYER_UNIT_RESEARCH_FINISH=null
// playerunitevent EVENT_PLAYER_UNIT_ISSUED_ORDER=null
// playerunitevent EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER=null
// unitevent EVENT_UNIT_DAMAGED=null
// playerevent EVENT_PLAYER_ARROW_LEFT_DOWN=null
// playerevent EVENT_PLAYER_ARROW_LEFT_UP=null
// playerevent EVENT_PLAYER_ARROW_RIGHT_DOWN=null
// playerevent EVENT_PLAYER_ARROW_RIGHT_UP=null
// playerevent EVENT_PLAYER_ARROW_DOWN_DOWN=null
// playerevent EVENT_PLAYER_ARROW_DOWN_UP=null
// playerevent EVENT_PLAYER_ARROW_UP_DOWN=null
// playerevent EVENT_PLAYER_ARROW_UP_UP=null
// playerevent EVENT_PLAYER_MOUSE_DOWN=null
// playerevent EVENT_PLAYER_MOUSE_UP=null
// playerevent EVENT_PLAYER_MOUSE_MOVE=null
// playerunitevent EVENT_PLAYER_UNIT_SELL_ITEM=null
// playerunitevent EVENT_PLAYER_UNIT_SPELL_CAST=null
// playerunitevent EVENT_PLAYER_UNIT_SPELL_EFFECT=null
// playerunitevent EVENT_PLAYER_UNIT_SPELL_FINISH=null
// limitop LESS_THAN=null
// limitop EQUAL=null
// limitop GREATER_THAN_OR_EQUAL=null
// unittype UNIT_TYPE_HERO=null
// unittype UNIT_TYPE_STRUCTURE=null
// itemtype ITEM_TYPE_PERMANENT=null
// itemtype ITEM_TYPE_CHARGED=null
// itemtype ITEM_TYPE_ARTIFACT=null
// camerafield CAMERA_FIELD_TARGET_DISTANCE=null
// fogstate FOG_OF_WAR_VISIBLE=null
// integer CAMERA_MARGIN_LEFT=0
// integer CAMERA_MARGIN_RIGHT=0
// integer CAMERA_MARGIN_TOP=0
// integer CAMERA_MARGIN_BOTTOM=0
group udg_Supplyhorses=null
location udg_Temp_Point=null
integer array udg_PlayerRegions
force udg_AllPlayerUnits=null
location udg_ConvertPoint=null
location udg_ConvertPoint2=null
location udg_GHoriTP=null
location udg_GVertRP=null
rect udg_GHoriDetectCenter=null
rect udg_GVertDetectCenter=null
group udg_GateMovingUnits1=null
group udg_Supplyhorses2=null
location udg_TradePoint=null
boolean array udg_hasBarracks
boolean array udg_hasMarketplace
rect gg_rct_SHIP_Lower_Nile=null
rect gg_rct_SHIP_Nile_2=null
rect gg_rct_SHIP_Upper_Nile=null
rect gg_rct_SHIP_Thames=null
rect gg_rct_CITY_WE_Burgh=null
rect gg_rct_CITY_WE_Cardiff=null
rect gg_rct_CITY_WE_Galway=null
rect gg_rct_CITY_WE_Zagreb=null
rect gg_rct_CITY_WE_Zadar=null
rect gg_rct_CITY_BYZ_Durrazo=null
rect gg_rct_CITY_BYZ_Adrianopolis=null
rect gg_rct_CITY_Byz_Thessalonika=null
rect gg_rct_CITY_BYZ_Constantinople=null
rect gg_rct_CITY_WE_Warwick=null
rect gg_rct_CITY_BYZ_Scopia=null
rect gg_rct_CITY_WE_Vienna=null
rect gg_rct_CITY_WE_Prague=null
rect gg_rct_CITY_WE_Esztergom=null
rect gg_rct_CITY_WE_Stettin=null
rect gg_rct_CITY_WE_Krakow=null
rect gg_rct_CITY_WE_Wroclaw=null
rect gg_rct_CITY_EE_Constanta=null
rect gg_rct_CITY_EE_Targoviste=null
rect gg_rct_CITY_WE_Brasov=null
rect gg_rct_CITY_WE_Belgrade=null
rect gg_rct_CITY_WE_Flensburg=null
rect gg_rct_CITY_WE_Roskilde=null
rect gg_rct_CITY_WE_Aarhus=null
rect gg_rct_CITY_WE_Madgeburg=null
rect gg_rct_CITY_EE_Sofia=null
rect gg_rct_CITY_WE_Plock=null
rect gg_rct_CITY_WE_Poznan=null
rect gg_rct_CITY_WE_Kassa=null
rect gg_rct_CITY_WE_Varad=null
rect gg_rct_CITY_EE_Konigsberg=null
rect gg_rct_CITY_EE_Riga=null
rect gg_rct_CITY_WE_Gdansk=null
rect gg_rct_CITY_EE_Hrodna=null
rect gg_rct_CITY_EE_Vilnius=null
rect gg_rct_CITY_EE_Caffa=null
rect gg_rct_CITY_EE_Pskov=null
rect gg_rct_CITY_EE_Reval=null
rect gg_rct_CITY_EE_Novgorod=null
rect gg_rct_CITY_EE_Polotsk=null
rect gg_rct_SHIP_Seine_River=null
rect gg_rct_SHIP_French_River=null
rect gg_rct_SHIP_Spannish_River=null
rect gg_rct_SHIP_Spannish_River_2=null
rect gg_rct_SHIP_Spannish_River_3=null
rect gg_rct_SHIP_Spannish_River_4=null
rect gg_rct_SHIP_Danube_1=null
rect gg_rct_SHIP_Danube_2=null
rect gg_rct_SHIP_Swedish_Lake=null
rect gg_rct_CITY_EE_Halych=null
rect gg_rct_SHIP_River=null
rect gg_rct_SHIP_Region_Giant=null
rect gg_rct_SHIP_River_GIANT=null
rect gg_rct_CITY_WE_Groningen=null
rect gg_rct_CITY_ME_Tunis=null
rect gg_rct_CITY_EE_Azaq=null
rect gg_rct_CITY_EE_Kiev=null
rect gg_rct_CITY_EE_Minsk=null
rect gg_rct_CITY_EE_Smolensk=null
rect gg_rct_SHIP_Caspian_Sea_and_Mesapotamia=null
rect gg_rct_CITY_ME_Sinop=null
rect gg_rct_CITY_ME_Isparta=null
rect gg_rct_CITY_ME_Kayseri=null
rect gg_rct_CITY_ME_Adana=null
rect gg_rct_CITY_ME_Konya=null
rect gg_rct_CITY_ME_Antioch=null
rect gg_rct_CITY_BYZ_Trebizond=null
rect gg_rct_CITY_BYZ_Nicosia=null
rect gg_rct_CITY_ME_JERUSALEM=null
rect gg_rct_CITY_ME_Edessa=null
rect gg_rct_CITY_BYZ_Smyrna=null
rect gg_rct_CITY_ME_Ankara=null
rect gg_rct_CITY_BYZ_Nicae=null
rect gg_rct_CITY_ME_Fes=null
rect gg_rct_CITY_ME_Oran=null
rect gg_rct_CITY_ME_Algiers=null
rect gg_rct_CITY_ME_Mahdya=null
rect gg_rct_CITY_ME_Tripoli=null
rect gg_rct_CITY_ME_Benghazi=null
rect gg_rct_SHIP_Lake_Egypt=null
rect gg_rct_CITY_ME_Medina=null
rect gg_rct_CITY_ME_Alexandria=null
rect gg_rct_CITY_ME_Damietta=null
rect gg_rct_CITY_ME_Cairo=null
rect gg_rct_CITY_EE_Timutarakan=null
rect gg_rct_CITY_EE_Baia=null
rect gg_rct_CITY_EE_Zhytomyr=null
rect gg_rct_CITY_EE_Oleshe=null
rect gg_rct_CITY_EE_Dnipro=null
rect gg_rct_CITY_EE_Moscow=null
rect gg_rct_CITY_EE_Bryansk=null
rect gg_rct_CITY_ME_Yerevan=null
rect gg_rct_CITY_EE_Sarkel=null
rect gg_rct_CITY_BYZ_Kutaisi=null
rect gg_rct_CITY_BYZ_Tbilisi=null
rect gg_rct_CITY_ME_Damascus=null
rect gg_rct_CITY_ME_Tartus=null
rect gg_rct_CITY_ME_Gaza=null
rect gg_rct_CITY_ME_Mosul=null
rect gg_rct_CITY_ME_Acre=null
rect gg_rct_CITY_ME_Al_Aqaba=null
rect gg_rct_CITY_ME_Quarisiya=null
rect gg_rct_CITY_ME_Tamiya=null
rect gg_rct_CITY_ME_Diyarbakir=null
rect gg_rct_CITY_ME_Erez=null
rect gg_rct_SHIP_Lake_Africa=null
rect gg_rct_SHIP_Mesapotamia=null
rect gg_rct_SHIP_Ankara_Lake=null
rect gg_rct_SHIP_Italy=null
rect gg_rct_CITY_WE_Salzburg=null
rect gg_rct_CITY_WE_Innsbruck=null
rect gg_rct_CITY_WE_Cologne=null
rect gg_rct_CITY_WE_Frankfurt=null
rect gg_rct_CITY_WE_Hamburg=null
rect gg_rct_CITY_ME_Palma=null
rect gg_rct_CITY_EE_Astrakhan=null
rect gg_rct_CITY_EE_Ryazan=null
rect gg_rct_CITY_WE_Edinburgh=null
rect gg_rct_CITY_WE_Aberdeen=null
rect gg_rct_CITY_WE_Inverness=null
rect gg_rct_CITY_WE_York=null
rect gg_rct_CITY_WE_Dublin=null
rect gg_rct_CITY_WE_Desmond=null
rect gg_rct_CITY_WE_Caernarfon=null
rect gg_rct_CITY_WE_London=null
rect gg_rct_CITY_WE_Winchester=null
rect gg_rct_CITY_WE_Exeter=null
rect gg_rct_CITY_WE_Caen=null
rect gg_rct_CITY_WE_Rheims=null
rect gg_rct_CITY_WE_Paris=null
rect gg_rct_CITY_WE_Dijon=null
rect gg_rct_CITY_WE_Clermont=null
rect gg_rct_CITY_WE_Toulouse=null
rect gg_rct_CITY_WE_Bordeaux=null
rect gg_rct_CITY_WE_Zaragoza=null
rect gg_rct_CITY_WE_Barcelona=null
rect gg_rct_CITY_WE_Leon=null
rect gg_rct_CITY_WE_Burgos=null
rect gg_rct_CITY_ME_Madrid=null
rect gg_rct_CITY_WE_Salamanca=null
rect gg_rct_CITY_ME_Lisbon=null
rect gg_rct_CITY_WE_Pamplona=null
rect gg_rct_CITY_WE_Marseille=null
rect gg_rct_CITY_WE_Bruges=null
rect gg_rct_CITY_WE_Antwerp=null
rect gg_rct_CITY_WE_Genoa=null
rect gg_rct_CITY_WE_Milan=null
rect gg_rct_CITY_WE_Venice=null
rect gg_rct_CITY_WE_Bologna=null
rect gg_rct_CITY_WE_Pisa=null
rect gg_rct_CITY_WE_Ancona=null
rect gg_rct_CITY_WE_Rome=null
rect gg_rct_CITY_ME_Granada=null
rect gg_rct_CITY_ME_Cordoba=null
rect gg_rct_CITY_ME_Murcia=null
rect gg_rct_CITY_ME_Valencia=null
rect gg_rct_CITY_WE_Nuremburg=null
rect gg_rct_CITY_WE_Bern=null
rect gg_rct_CITY_WE_Lyon=null
rect gg_rct_CITY_WE_Lund=null
rect gg_rct_CITY_WE_Skara=null
rect gg_rct_CITY_WE_Oslo=null
rect gg_rct_CITY_WE_Eikundarsund=null
rect gg_rct_CITY_WE_Bergen=null
rect gg_rct_CITY_WE_Visby=null
rect gg_rct_CITY_WE_Nykoping=null
rect gg_rct_CITY_ME_Silves=null
rect gg_rct_CITY_ME_Marakesh=null
rect gg_rct_CITY_ME_Luxor=null
rect gg_rct_CITY_WE_Rennes=null
rect gg_rct_CITY_WE_Angers=null
rect gg_rct_CITY_WE_Ajaccio=null
rect gg_rct_CITY_WE_Cagliari=null
rect gg_rct_CITY_WE_Naples=null
rect gg_rct_CITY_WE_Reggio=null
rect gg_rct_CITY_WE_Bari=null
rect gg_rct_CITY_WE_Palermo=null
rect gg_rct_CITY_WE_Syracuse=null
rect gg_rct_CITY_WE_Metz=null
rect gg_rct_CITY_BYZ_Ragusa=null
rect gg_rct_CITY_BYZ_Athens=null
rect gg_rct_CITY_BYZ_Rhodes=null
rect gg_rct_CITY_EE_Turku=null
rect gg_rct_CITY_BYZ_Nikomedaia=null
rect gg_rct_CITY_ME_Badajoz=null
rect gg_rct_CITY_WE_Oporto=null
rect gg_rct_CITY_WE_Stockholm=null
rect gg_rct_CITY_WE_Kalmar=null
rect gg_rct_CITY_BYZ_Corinth=null
rect gg_rct_CITY_BYZ_Arta=null
rect gg_rct_CITY_BYZ_Candia=null
rect gg_rct_CITY_ME_Kerak=null
rect gg_rct_CITY_ME_Baghdad=null
rect gg_rct_CITY_BYZ_Canakkale=null
rect gg_rct_CITY_EE_Syrt=null
rect gg_rct_CITY_WE_Buda=null
rect gg_rct_CITY_ME_Melilla=null
rect gg_rct_CITY_ME_Beleb_el_Anab=null
rect gg_rct_CITY_ME_Tabriz=null
rect gg_rct_CITY_ME_Alamut=null
rect gg_rct_CITY_ME_Baku=null
rect gg_rct_CITY_ME_Kermanshah=null
sound gg_snd_Warning=null
trigger gg_trg_Settle=null
trigger gg_trg_Melee_Initialization=null
trigger gg_trg_F9=null
trigger gg_trg_Capturing_Ore_15g=null
trigger gg_trg_Capturing_Ore_25g=null
trigger gg_trg_Capturing_Ore_40g=null
trigger gg_trg_Capturing_Ore_50g=null
trigger gg_trg_Spy_Sabotage_on_buildings=null
trigger gg_trg_Convert_V2=null
trigger gg_trg_Gate_Opening=null
trigger gg_trg_Gate_Opening_ME=null
trigger gg_trg_Gate_Closing_WoodGate_V=null
trigger gg_trg_Gate_Closing_WoodGate_V_ME=null
trigger gg_trg_Gate_Closing_WoodGate_H=null
trigger gg_trg_Gate_Closing_WoodGate_H_ME=null
trigger gg_trg_Gate_Closing_IronGate_V=null
trigger gg_trg_Gate_Closing_IronGate_V_ME=null
trigger gg_trg_Gate_Closing_IronGate_H=null
trigger gg_trg_Gate_Closing_IronGate_H_ME=null
trigger gg_trg_Supply_Horses=null
trigger gg_trg_Supply_Horse_2=null
trigger gg_trg_Lumber_Horse_250=null
trigger gg_trg_Lumber_Horse_500=null
trigger gg_trg_Gold_Horse_250=null
trigger gg_trg_Gold_Horse_500=null
trigger gg_trg_Killing_trading_horse_l250=null
trigger gg_trg_Killing_trading_horse_l500=null
trigger gg_trg_Killing_trading_horse_g250=null
trigger gg_trg_Killing_trading_horse_g500=null
trigger gg_trg_Trading_Lumber_Ship=null
trigger gg_trg_Trading_Gold_Ship=null
trigger gg_trg_Trade=null
trigger gg_trg_killing_Gold_Ship=null
trigger gg_trg_killing_Lumber_Ship=null
trigger gg_trg_FarmHouse=null
trigger gg_trg_Thatched_Cottage_1=null
trigger gg_trg_Thatched_Cottage_2=null
trigger gg_trg_Thatched_Cottage_3=null
trigger gg_trg_Thatched_Cottage_4=null
trigger gg_trg_Spearmen_1=null
trigger gg_trg_Spearmen_2=null
trigger gg_trg_Heavy_Infantry_1=null
trigger gg_trg_Heavy_Infantry_2=null
trigger gg_trg_Archer_1=null
trigger gg_trg_Archer_2=null
trigger gg_trg_Light_Infantry_1=null
trigger gg_trg_Light_Infantry_2=null
trigger gg_trg_Pikemen_1=null
trigger gg_trg_Pikemen_2=null
trigger gg_trg_Light_Cavalry_1=null
trigger gg_trg_Light_Cavalry_2=null
trigger gg_trg_Heavy_Cavalry_1=null
trigger gg_trg_Heavy_Cavalry_2=null
trigger gg_trg_Skirmisher=null
trigger gg_trg_Arquebusers=null
trigger gg_trg_Supply_Horse=null
trigger gg_trg_Disabled_units_at_beginning=null
trigger gg_trg_FarmHouse_Byzantine=null
trigger gg_trg_Thatched_Cottage_1_Byz=null
trigger gg_trg_Thatched_Cottage_2_Byz=null
trigger gg_trg_Thatched_Cottage_3_Byz=null
trigger gg_trg_Spearmen_1_Byzantine=null
trigger gg_trg_Spearmen_2_Byzantine=null
trigger gg_trg_Heavy_Infantry_1_Byzantine=null
trigger gg_trg_Heavy_Infantry_2_Byzantine=null
trigger gg_trg_Archer_1_Byzantine=null
trigger gg_trg_Archer_2_Byzantine=null
trigger gg_trg_Light_Cavalry_1_Byzantine=null
trigger gg_trg_Heavy_Cavalry_1_Byzantine=null
trigger gg_trg_Heavy_Cavalry_2_Byzantine=null
trigger gg_trg_Skirmisher_Byzantine=null
trigger gg_trg_Missile_Cavalry_Byzantine=null
trigger gg_trg_Disabled_units_Byzantine=null
trigger gg_trg_ME_Spearmen_1=null
trigger gg_trg_ME_Spearmen_2=null
trigger gg_trg_ME_Archer_1=null
trigger gg_trg_ME_Archer_2=null
trigger gg_trg_ME_Light_Infantry_1=null
trigger gg_trg_ME_Light_Infantry_2=null
trigger gg_trg_ME_Pikeman=null
trigger gg_trg_ME_Pikeman_2=null
trigger gg_trg_ME_Light_Cavalry_1=null
trigger gg_trg_ME_Light_Cavalry_2=null
trigger gg_trg_ME_Heavy_Cavalry_1=null
trigger gg_trg_ME_Heavy_Cavalry_2=null
trigger gg_trg_ME_Skirmisher=null
trigger gg_trg_ME_Missile_Cavalry=null
trigger gg_trg_Disabled_units_ME=null
trigger gg_trg_FarmHouse_EE_Copy=null
trigger gg_trg_Thatched_Cottage_1_EE_Copy=null
trigger gg_trg_Thatched_Cottage_2_EE=null
trigger gg_trg_Thatched_Cottage_3_EE=null
trigger gg_trg_EE_Spearmen_1_Copy=null
trigger gg_trg_EE_Spearmen_2_Copy=null
trigger gg_trg_EE_Heavy_Infantry_1=null
trigger gg_trg_EE_Heavy_Infantry_2=null
trigger gg_trg_EE_Archer_1=null
trigger gg_trg_EE_Archer_2=null
trigger gg_trg_EE_Missile_Cavalry_1=null
trigger gg_trg_EE_Missile_Cavalry_2=null
trigger gg_trg_EE_Pikeman_1=null
trigger gg_trg_EE_Pikeman_2=null
trigger gg_trg_EE_Heavy_Cavalry_1=null
trigger gg_trg_EE_Heavy_Cavalry_2=null
trigger gg_trg_EE_Light_Cavalry_1=null
trigger gg_trg_EE_Skirmisher_1=null
trigger gg_trg_Disabled_units_EE=null
trigger gg_trg_Urbanization=null
trigger gg_trg_Structures_finishes=null
trigger gg_trg_Marketplace=null
trigger gg_trg_Barracks=null
trigger gg_trg_Capitol_1_Dummies=null
trigger gg_trg_Capitol_2_Dummies=null
trigger gg_trg_Capitol_3_Dummies=null
trigger gg_trg_CITY_HALL=null
trigger gg_trg_Castle_BYZ_T1=null
trigger gg_trg_Castle_BYZ_T2=null
trigger gg_trg_Castle_BYZ_T3=null
trigger gg_trg_Castle_EE_T1=null
trigger gg_trg_Castle_EE_T2=null
trigger gg_trg_Castle_EE_T3=null
trigger gg_trg_Castle_ME__T1=null
trigger gg_trg_Castle_ME__T2=null
trigger gg_trg_Castle_ME_T3=null
trigger gg_trg_Castle_WE_T1=null
trigger gg_trg_Castle_WE_T2=null
trigger gg_trg_Castle_WE_T3=null
trigger gg_trg_Capitol_Keep_UPG_WE_T2=null
trigger gg_trg_Capitol_Keep_Upg_BYZ_T2=null
trigger gg_trg_Capitol_Keep_Upg_EE_T2=null
trigger gg_trg_Capitol_Keep_Upg_ME_T2=null
trigger gg_trg_Capitol_Castle_Up_BYZ_T3=null
trigger gg_trg_Capitol_Castle_Up_ME_T3=null
trigger gg_trg_Capitol_Castle_Up_EE_T3=null
trigger gg_trg_Capitol_Castle_UP_WE_T3=null
integer Abilities_aWar=0
integer Abilities_aAlly=0
integer Abilities_aNeutral=0
integer Abilities_aUnally=0
integer Abilities_aShareUnits=0
integer Abilities_aLowTax=0
integer Abilities_aMedTax=0
integer Abilities_aHighTax=0
integer Abilities_aHarshTax=0
integer Abilities_aTaxes=0
integer Abilities_aMassCommand=0
integer Abilities_aUnitHunger=0
integer Abilities_aConversion=0
integer Abilities_aTownHallCapitolAura=0
integer Abilities_aCastleAura=0
string Abilities_oGarrison=null
real Angle_DEGTORAD=0.
real Angle_RADTODEG=0.
real Basics_ANIMATION_PERIOD=0.
integer Basics_HEIGHT_ENABLER=0
integer Basics_LOCUST_ID=0
player Basics_DUMMY_PLAYER=null
integer CityBaseTaxes_kCityBaseTaxes=0
integer array CityModifiers_mPortions
integer CityModifiers_cm_recently_conquered=0
integer CityModifiers_cm_recently_revolted=0
integer CityModifiers_cm_population_boom=0
integer CityModifiers_cm_plague_outburst=0
integer CityModifiers_cm_on_fire=0
integer CityModifiers_cm_more_trade_estabilished=0
integer CityModifiers_cm_massacred_pop=0
integer CityModifiers_cm_prospering=0
integer CityModifiers_cm_sieged=0
integer CityModifiers_cityModifiers=0
real City_kCityRadius=0.
real City_kCityRange=0.
real City_kCityLifePercentToCapture=0.
real City_kCityLifePercentOnceItCaptured=0.
real City_kCityManaPercentOnceItCapruted=0.
real City_kCityUnitPOAdd=0.
integer City_cityCount=0
integer City_kCityNameLimit=0
real City_kCityPopCountRate=0.
real City_kCityFastCount=0.
real City_kCityLongCount=0.
real City_kCityTaxLevelTimeToChange=0.
real array City_kCityPopGrowthRateMinMax
integer array City_kCityPopInit
real array City_kCityTaxLevelMultipliers
real array City_kCityTaxLevelPOIncrease
real array City_kCityTaxLevelPODecreasePerThousandPop
real array City_kCityTaxLevelPopModifier
integer array City_cities
playerevent ClosureEvents_EVENT_PLAYER_CHAT_FILTER=null
trigger ClosureEvents_unitTrig=null
trigger ClosureEvents_leaveTrig=null
trigger ClosureEvents_keyTrig=null
integer array ClosureEvents_eventidToIndex
integer ClosureEvents_eventTypeCounter=0
integer EventListener_castMap=0
integer EventListener_castMapCasters=0
integer array EventListener_generalListenersFirsts
integer array EventListener_unitListenersFirsts
boolean EventListener_useMouseEvents=false
group ClosureForGroups_DUMMY_GROUP=null
integer array ClosureForGroups_tempCallbacks
integer ClosureForGroups_tempCallbacksCount=0
integer ClosureForGroups_maxCount=0
integer ClosureForGroups_iterCount=0
filterfunc ClosureForGroups_filter=null
integer array ClosureForGroups_tempCallbacksD
integer ClosureForGroups_tempCallbacksDCount=0
real ClosureForGroups_nearestDDist=0.
real ClosureForGroups_gpos_x=0.
real ClosureForGroups_gpos_y=0.
integer ClosureTimers_x=0
integer Colors_COLOR_WHITE_red=0
integer Colors_COLOR_WHITE_green=0
integer Colors_COLOR_WHITE_blue=0
integer Colors_COLOR_WHITE_alpha=0
integer Colors_COLOR_BLACK_red=0
integer Colors_COLOR_BLACK_green=0
integer Colors_COLOR_BLACK_blue=0
integer Colors_COLOR_BLACK_alpha=0
integer Colors_MAX_PLAYER_COLORS=0
integer array Colors_PLAYER_COLORS_red
integer array Colors_PLAYER_COLORS_green
integer array Colors_PLAYER_COLORS_blue
string array Colors_hexs
integer Colors_decs=0
real Commands_kFarDistance=0.
real Commands_kMedDistance=0.
integer Commands_kNameLimit=0
string Commands_ksFar=null
string Commands_ksMed=null
string Commands_ksName=null
string Commands_ksRenameCity=null
string Commands_ksAddModifier=null
string Commands_ksDebug=null
string Commands_ksVoteKick=null
string Commands_ksZoom=null
string Commands_ksObserve=null
string Commands_ksLowerPO=null
string Commands_kseNotYourCity=null
real DateTime_kIncomeTime=0.
real DateTime_kSecondsPerSecond=0.
integer DummyRecycler_DUMMY_UNIT_ID=0
integer DummyRecycler_DIFFERENT_ANGLES=0
real DummyRecycler_ANGLE_DEGREE=0.
integer DummyRecycler_SAVED_UNITS_PER_ANGLE=0
timer DelayNode_t=null
integer DelayNode_first=0
integer array DummyRecycler_angleQueues
real Economy_kIncomeCountRate=0.
real Economy_kIncomeCountToMultiboardRate=0.
real Economy_kStepTime=0.
integer array Economy_gold_change
integer array Economy_lumb_change
integer array Economy_gold_adder
integer array Economy_lumb_adder
integer Economy_income_counting_i=0
integer ErrorHandling_MUTE_ERROR_DURATION=0
integer ErrorHandling_PRIMARY_ERROR_KEY=0
hashtable ErrorHandling_HT=null
boolean ErrorHandling_suppressErrorMessages=false
force Forces_fWE=null
force Forces_fEE=null
force Forces_fME=null
force Forces_fBZ=null
integer Forces_kWE=0
integer Forces_kEE=0
integer Forces_kME=0
integer Forces_kBZ=0
force array Forces_forces
integer array Forces_forces_colors_red
integer array Forces_forces_colors_green
integer array Forces_forces_colors_blue
timer GameTimer_gameTimer=null
real GameTimer_currentTime=0.
integer Group_unitCounter=0
integer Group_randomCounter=0
group Group_iterGroup=null
hashtable HashList_ht=null
hashtable HashList_occurences=null
hashtable HashSet_position=null
integer Integer_INT_MAX=0
integer array LimitEncampments_encampments
integer array LimitMercenaryCamps_mercenary_camps
boolean MagicFunctions_compiletime=false
real MainInit_kSpawnPoint_x=0.
real MainInit_kSpawnPoint_y=0.
integer MainInit_kSpawnPlayersInFirstRing=0
integer MainInit_kSpawnAddPerRing=0
real MainInit_kSpawnFirstRingRadius=0.
real MainInit_kSpawnRingRadiusChange=0.
real MainInit_kCTfade=0.
real MainInit_kCTchange=0.
integer MainInit_ksCT=0
boolean MainInit_skip_tutorial=false
boolean Main_dbg_msg=false
boolean Main_dbg_mode=false
integer Main_dbg_player=0
integer Main_PLAYER_SLOTS=0
integer Main_kStartGold=0
integer Main_kStartLumber=0
real Main_TURN_TIME=0.
timer Main_global_timer=null
real Main_elapsed_time=0.
rect MapBounds_playableMapRect=null
rect MapBounds_boundRect=null
region MapBounds_boundRegion=null
real MapBounds_playableMin_x=0.
real MapBounds_playableMin_y=0.
real MapBounds_playableMax_x=0.
real MapBounds_playableMax_y=0.
real MapBounds_boundMin_x=0.
real MapBounds_boundMin_y=0.
real MapBounds_boundMax_x=0.
real MapBounds_boundMax_y=0.
integer MassControl_units_of_general=0
integer MassControl_kMassControlRanges=0
integer MassControl_uGenerals=0
real MathTools_e=0.
real Maths_EULER=0.
real Maths_PI=0.
real Maths_PI2=0.
integer Multiboards_kMultiboardRowC=0
integer Multiboards_kMultiboardColC=0
real Multiboards_kMultiboardCityRefreshRate=0.
real Multiboards_kMBVal=0.
real Multiboards_kMBText=0.
real Multiboards_kMBCityNameWidth=0.
string Multiboards_kMBLine=null
integer array Multiboards_kMultiboardInitWidths
integer array Multiboards_kMBIncome
integer array Multiboards_kMBUpkeep
integer array Multiboards_kMBCityTax
integer array Multiboards_kMBCityPublicOrder
integer array Multiboards_kMBCityPop
integer array Multiboards_kMBCityPopGrowth
integer array Multiboards_kMBCityName
integer Multiboards_kMBCityModifiersCol=0
integer Multiboards_kMBCityModifiersStart=0
integer Multiboards_kMBCityModifiersEnd=0
integer Multiboards_kMBCityModifiersDescCol=0
integer array Multiboards_kMultiboardInitStrings
multiboard array Multiboards_multiboards
real MutliboardTools_kWidthPerChar=0.
integer NoStarvationOnBoat_unitsRemovedHunger=0
string ObjectIds_CHARMAP=null
trigger OnUnitEnterLeave_eventTrigger=null
group OnUnitEnterLeave_preplacedUnits=null
unit array OnUnitEnterLeave_tempUnits
integer OnUnitEnterLeave_tempUnitsCount=0
integer OnUnitEnterLeave_ABILITY_ID=0
real OreCapture_kLifePercentToCapture=0.
integer PlayerStats_PLAYER_SELF=0
integer array PlayerStats_player_stats
player array Player_players
player Player_localPlayer=null
playercolor Playercolor_PLAYER_COLOR_BLACK_AGGRESSIVE=null
playercolor Playercolor_PLAYER_COLOR_UNKNOWN1=null
playercolor Playercolor_PLAYER_COLOR_UNKNOWN2=null
playercolor Playercolor_PLAYER_COLOR_BLACK_PASSIVE=null
playercolor array Playercolor_LOOKUP
boolean Preloader_autoFinish=false
group Preloader_dumg=null
unit Preloader_dum=null
integer Printing_DEBUG_LEVEL=0
real Printing_DEBUG_MSG_DURATION=0.
integer RangeChecks_kUnitsToCheck=0
real RangeChecks_kBuildingCheckRange=0.
real Real_REAL_MAX=0.
real Real_REAL_MIN=0.
trigger array RegisterEvents_t
integer RegisterEvents_onCastMap=0
real Revolts_kPOtoRevolt1=0.
real Revolts_kPOtoRevolt2=0.
real Revolts_kPOtoRevolt3=0.
integer Revolts_k100ChanceOfDoubleRevoltComesWithNPop=0
real array Revolts_last_time_city_revolted
real Revolts_kCityMinTimeToRevolt=0.
string array StringUtils_c2s
integer StringUtils_MAX_INDEX=0
string String_charset=null
string String_numberset=null
real Strings_kWarningDur=0.
string array Strings_ksWarning
integer Strings_ksMsgCount=0
string array Strings_ksWarningWE
string array Strings_ksWarningEE
string array Strings_ksWarningME
string array Strings_ksWarningBZ
real Strings_kNoteDur=0.
string array Strings_ksNote
string array Strings_ksNoteWE
string array Strings_ksNoteEE
string array Strings_ksNoteME
string array Strings_ksNoteBZ
real Strings_kGoodNewsDur=0.
string array Strings_ksGoodNews
string array Strings_ksGoodNewsWE
string array Strings_ksGoodNewsEE
string array Strings_ksGoodNewsME
string array Strings_ksGoodNewsBZ
string array Strings_ksAttention
string array Strings_ksAttentionWE
string array Strings_ksAttentionEE
string array Strings_ksAttentionME
string array Strings_ksAttentionBZ
string Strings_ksShipyardNearRiver=null
string Strings_ksTooCloseChurchWE=null
string Strings_ksTooCloseChurchEE=null
string Strings_ksTooCloseChurchBZ=null
string Strings_ksTooCloseMosque=null
string Strings_ksTooCloseSettlement=null
string Strings_ksTooCloseInn=null
string Strings_ksTooCloseCastle=null
string Strings_ksTooManyEncampments=null
string Strings_ksTooManyMercenaryCamps=null
string Strings_ksCannotConvertBelievers=null
string Strings_ksRevolt=null
real Strings_kDiscordTime=0.
string Strings_ksDiscord=null
string array Strings_ksTaxLevels
string Strings_ksCannotChangeTaxLevel=null
string Strings_ksBecomeObserver=null
string Strings_ksToBecomeObserver=null
hashtable Table_ht=null
timer array TimerUtils_freeTimers
integer TimerUtils_freeTimersCount=0
integer TimerUtils_timerData=0
integer TimerUtils_HELD=0
integer TypeCasting_typecastdata=0
real TypeCasting_R2I_PRECISION=0.
trigger UnitIndexer_onIndexTrigger=null
trigger UnitIndexer_onDeindexTrigger=null
unit array UnitIndexer_tempUnits
integer UnitIndexer_tempUnitsCount=0
integer Units_uSettler=0
integer Units_uSettlerReadyToSettle=0
integer Units_uDiplomacy=0
integer Units_uEconomy=0
integer Units_uPeasantWE=0
integer Units_uWorkerWE=0
integer Units_uGeneralWE=0
integer Units_uSpearmanWE=0
integer Units_uChurchWE=0
integer Units_uCapitolWE1=0
integer Units_uCapitolWE2=0
integer Units_uCapitolWE3=0
integer Units_uCastleWE1=0
integer Units_uCastleWE2=0
integer Units_uCastleWE3=0
integer Units_uUniversityWE=0
integer Units_uChurchEE=0
integer Units_uSettlementEE=0
integer Units_uPeasantEE=0
integer Units_uWorkerEE=0
integer Units_uCapitolEE1=0
integer Units_uCapitolEE2=0
integer Units_uCapitolEE3=0
integer Units_uSpearmanEE=0
integer Units_uGeneralEE=0
integer Units_uCastleEE1=0
integer Units_uCastleEE2=0
integer Units_uCastleEE3=0
integer Units_uInnEE=0
integer Units_uUniversityEE=0
integer Units_uPeasantME=0
integer Units_uWorkerME=0
integer Units_uMosque=0
integer Units_uCapitolME1=0
integer Units_uCapitolME2=0
integer Units_uCapitolME3=0
integer Units_uSpearmanME=0
integer Units_uGeneralME=0
integer Units_uCastleME1=0
integer Units_uCastleME2=0
integer Units_uCastleME3=0
integer Units_uUniversityME=0
integer Units_uPeasantBZ=0
integer Units_uWorkerBZ=0
integer Units_uChurchBZ=0
integer Units_uSettlementBZ=0
integer Units_uCapitolBZ1=0
integer Units_uCapitolBZ2=0
integer Units_uCapitolBZ3=0
integer Units_uSpearmanBZ=0
integer Units_uGeneralBZ=0
integer Units_uCastleBZ1=0
integer Units_uCastleBZ2=0
integer Units_uCastleBZ3=0
integer Units_uMercenaryCamp=0
integer Units_uUniversityBZ=0
integer Units_uAutonomousTH=0
integer Units_uTH=0
integer Units_uCH=0
integer Units_uUniversity=0
integer Units_uShipyard=0
integer Units_uSettlement=0
integer Units_uSettlementAnc1=0
integer Units_uSettlementAnc2=0
integer Units_uEncampment=0
integer Units_uInn=0
integer Units_uRebelSpreading=0
integer Units_uRebelKnight=0
integer Units_uRebelRam=0
integer Units_uSupplyHorse=0
integer Units_uCopperMine=0
integer Units_uGoldMine=0
integer Units_uIronMine=0
integer Units_uSilverMine=0
integer Units_uMines=0
integer Units_usIncomeOres=0
integer array Units_kStartingUnits
integer Units_uPlebs=0
integer Units_uCapitols=0
integer Units_uCastles=0
integer Units_kCityTypes=0
integer array Units_uRebels
integer Units_kRiverRects=0
real Vectors_ZERO2_x=0.
real Vectors_ZERO2_y=0.
integer array VoteKick_kick_count
integer array VoteKick_who_voted_for_player
integer VoteKick_playerstr=0
integer array EventListener_nextFree
integer EventListener_firstFree=0
integer EventListener_maxIndex=0
integer array EventListener_typeId
integer array CityModifierClass_nextFree
integer CityModifierClass_firstFree=0
integer CityModifierClass_maxIndex=0
integer array City_nextFree
integer City_firstFree=0
integer City_maxIndex=0
integer array City_typeId
integer array ForGroupCallback_nextFree
integer ForGroupCallback_firstFree=0
integer ForGroupCallback_maxIndex=0
integer array ForGroupCallback_typeId
integer array CallbackSingle_nextFree
integer CallbackSingle_firstFree=0
integer CallbackSingle_maxIndex=0
integer array CallbackSingle_typeId
integer array CallbackPeriodic_nextFree
integer CallbackPeriodic_firstFree=0
integer CallbackPeriodic_maxIndex=0
integer array CallbackPeriodic_typeId
integer OnCastListener_firstFree=0
integer array OnCastListener_typeId
integer CallbackCounted_firstFree=0
integer array CallbackCounted_typeId
integer array ArrayQueue_nextFree
integer ArrayQueue_firstFree=0
integer ArrayQueue_maxIndex=0
integer array ArrayQueue_typeId
integer DelayNode_firstFree=0
integer array DelayNode_typeId
integer array HashList_nextFree
integer HashList_firstFree=0
integer HashList_maxIndex=0
integer array HashList_typeId
integer array Table_nextFree
integer Table_firstFree=0
integer Table_maxIndex=0
integer array Table_typeId
integer array Comparator_nextFree
integer Comparator_firstFree=0
integer Comparator_maxIndex=0
integer array FoldClosure_nextFree
integer FoldClosure_firstFree=0
integer FoldClosure_maxIndex=0
integer array FoldClosure_typeId
integer array LLEntry_nextFree
integer LLEntry_firstFree=0
integer LLEntry_maxIndex=0
integer array LLEntry_typeId
integer array LLIterator_nextFree
integer LLIterator_firstFree=0
integer LLIterator_maxIndex=0
integer array LLIterator_typeId
integer array LinkedList_nextFree
integer LinkedList_firstFree=0
integer LinkedList_maxIndex=0
integer array LinkedList_typeId
integer array IdGenerator_nextFree
integer IdGenerator_firstFree=0
integer IdGenerator_maxIndex=0
integer array PlayerStats_nextFree
integer PlayerStats_firstFree=0
integer PlayerStats_maxIndex=0
integer array PlayerStats_typeId
integer array ReligionClass_nextFree
integer ReligionClass_firstFree=0
integer ReligionClass_maxIndex=0
integer array UnitIndex_nextFree
integer UnitIndex_firstFree=0
integer UnitIndex_maxIndex=0
integer array UnitIndex_typeId
real array CityModifierClass_time
real array CityModifierClass_POIncrease
boolean array CityModifierClass_isPOIncreaseConstant
real array CityModifierClass_chance
integer array CityModifierClass_popIncreaseTier
real array CityModifierClass_popIncreaseMultiplier
real array CityModifierClass_taxIncrease
string array CityModifierClass_name
string array CityModifierClass_desc
unit array City_city_unit
string array City_city_name
integer array City_city_id
integer array City_force_id
integer array City_player_id
real array City_city_pos_x
real array City_city_pos_y
integer array City_population
integer array City_last_pop_growth
real array City_population_growth_rate
real array City_public_order_last
real array City_public_order_add
real array City_tax_multiplier
integer array City_tax_level
real array City_last_time_tax_level_changed
integer array City_modifiers
integer array this
integer array this_2
integer array this_3
integer array cm
integer array this_4
integer array this_5
integer array this_6
integer array EventListener_eventId
integer array EventListener_next
integer array EventListener_prev
integer array OnCastListener_next
integer array OnCastListener_prev
integer array OnCastListener_abilId
unit array OnCastListener_eventUnit
integer array CallbackCounted_count
timer array CallbackCounted_t
timer array CallbackSingle_t
real array sec
integer array ArrayQueue_rp
integer array ArrayQueue_size
unit array DelayNode_u
real array DelayNode_delayTime
integer array DelayNode_next
integer array i
integer array number_of_cities_per_step
integer array HashList_size
integer array HashMap_size
integer array IterableMap_keys
unit array u
unit array u_2
integer array result
integer array LLEntry_elem
integer array LLEntry_prev
integer array LLEntry_next
integer array LLIterator_dummy
integer array LLIterator_current
integer array LLIterator_parent
boolean array LLIterator_destroyOnClose
integer array LinkedList_dummy
integer array LinkedList_size
player array caster_owner
unit array caster
integer array g
unit array u_3
integer array order
real array pos_x
real array pos_y
unit array u_4
integer array PlayerStats_force_id
player array PlayerStats_pl
boolean array PlayerStats_is_in_game
integer array PlayerStats_selected_city_id
integer array PlayerStats_upkeep
boolean array PlayerStats_is_observer
unit array un
unit array UnitIndex__unit
integer wurst_stack_depth=0
string array wurst_stack
real real_asAngleDegrees_return_radians=0.
real unit_getPos_return_x=0.
real unit_getPos_return_y=0.
real destructable_getPos_return_x=0.
real destructable_getPos_return_y=0.
integer playercolor_toColor_return_red=0
integer playercolor_toColor_return_green=0
integer playercolor_toColor_return_blue=0
integer colorA_withoutAlpha_return_red=0
integer colorA_withoutAlpha_return_green=0
integer colorA_withoutAlpha_return_blue=0
real getSpellTargetPos_return_x=0.
real getSpellTargetPos_return_y=0.
real getOrderPos_return_x=0.
real getOrderPos_return_y=0.
real vec2_op_plus_return_x=0.
real vec2_op_plus_return_y=0.
real vec2_op_mult_return_x=0.
real vec2_op_mult_return_y=0.
real vec2_op_minus_return_x=0.
real vec2_op_minus_return_y=0.
integer array PlayerStats_alliance_states_0
integer array PlayerStats_alliance_states_1
integer array PlayerStats_alliance_states_2
integer array PlayerStats_alliance_states_3
integer array PlayerStats_alliance_states_4
integer array PlayerStats_alliance_states_5
integer array PlayerStats_alliance_states_6
integer array PlayerStats_alliance_states_7
integer array PlayerStats_alliance_states_8
integer array PlayerStats_alliance_states_9
integer array PlayerStats_alliance_states_10
integer array PlayerStats_alliance_states_11
integer array PlayerStats_alliance_states_12
integer array PlayerStats_alliance_states_13
integer array PlayerStats_alliance_states_14
integer array PlayerStats_alliance_states_15
integer array PlayerStats_alliance_states_16
integer array PlayerStats_alliance_states_17
integer array PlayerStats_alliance_states_18
integer array PlayerStats_alliance_states_19
integer array PlayerStats_alliance_states_20
integer array PlayerStats_alliance_states_21
integer array PlayerStats_alliance_states_22
integer array PlayerStats_alliance_states_23
code ref_function_Trig_Settle_Func001002=null
code ref_function_Trig_Settle_Actions=null
code ref_function_Trig_Melee_Initialization_Actions=null
code ref_function_Trig_F9_Actions=null
code ref_function_Trig_Capturing_Ore_15g_Conditions=null
code ref_function_Trig_Capturing_Ore_15g_Actions=null
code ref_function_Trig_Capturing_Ore_25g_Conditions=null
code ref_function_Trig_Capturing_Ore_25g_Actions=null
code ref_function_Trig_Capturing_Ore_40g_Conditions=null
code ref_function_Trig_Capturing_Ore_40g_Actions=null
code ref_function_Trig_Capturing_Ore_50g_Conditions=null
code ref_function_Trig_Capturing_Ore_50g_Actions=null
code ref_function_Trig_Spy_Sabotage_on_buildings_Conditions=null
code ref_function_Trig_Spy_Sabotage_on_buildings_Actions=null
code ref_function_Trig_Convert_V2_Conditions=null
code ref_function_Trig_Convert_V2_Actions=null
code ref_function_Trig_Gate_Opening_Actions=null
code ref_function_Trig_Gate_Opening_ME_Actions=null
code ref_function_Trig_Gate_Closing_WoodGate_V_Func005A=null
code ref_function_Trig_Gate_Closing_WoodGate_V_Conditions=null
code ref_function_Trig_Gate_Closing_WoodGate_V_Actions=null
code ref_function_Trig_Gate_Closing_WoodGate_V_ME_Func005A=null
code ref_function_Trig_Gate_Closing_WoodGate_V_ME_Conditions=null
code ref_function_Trig_Gate_Closing_WoodGate_V_ME_Actions=null
code ref_function_Trig_Gate_Closing_WoodGate_H_Func005A=null
code ref_function_Trig_Gate_Closing_WoodGate_H_Conditions=null
code ref_function_Trig_Gate_Closing_WoodGate_H_Actions=null
code ref_function_Trig_Gate_Closing_WoodGate_H_ME_Func005A=null
code ref_function_Trig_Gate_Closing_WoodGate_H_ME_Conditions=null
code ref_function_Trig_Gate_Closing_WoodGate_H_ME_Actions=null
code ref_function_Trig_Gate_Closing_IronGate_V_Func005A=null
code ref_function_Trig_Gate_Closing_IronGate_V_Conditions=null
code ref_function_Trig_Gate_Closing_IronGate_V_Actions=null
code ref_function_Trig_Gate_Closing_IronGate_V_ME_Func005A=null
code ref_function_Trig_Gate_Closing_IronGate_V_ME_Conditions=null
code ref_function_Trig_Gate_Closing_IronGate_V_ME_Actions=null
code ref_function_Trig_Gate_Closing_IronGate_H_Func005A=null
code ref_function_Trig_Gate_Closing_IronGate_H_Conditions=null
code ref_function_Trig_Gate_Closing_IronGate_H_Actions=null
code ref_function_Trig_Gate_Closing_IronGate_H_ME_Func005A=null
code ref_function_Trig_Gate_Closing_IronGate_H_ME_Conditions=null
code ref_function_Trig_Gate_Closing_IronGate_H_ME_Actions=null
code ref_function_Trig_Supply_Horses_Func002A=null
code ref_function_Trig_Supply_Horses_Actions=null
code ref_function_Trig_Supply_Horse_2_Func002A=null
code ref_function_Trig_Supply_Horse_2_Actions=null
code ref_function_Trig_Lumber_Horse_250_Conditions=null
code ref_function_Trig_Lumber_Horse_250_Actions=null
code ref_function_Trig_Lumber_Horse_500_Conditions=null
code ref_function_Trig_Lumber_Horse_500_Actions=null
code ref_function_Trig_Gold_Horse_250_Conditions=null
code ref_function_Trig_Gold_Horse_250_Actions=null
code ref_function_Trig_Gold_Horse_500_Conditions=null
code ref_function_Trig_Gold_Horse_500_Actions=null
code ref_function_Trig_Killing_trading_horse_l250_Conditions=null
code ref_function_Trig_Killing_trading_horse_l250_Actions=null
code ref_function_Trig_Killing_trading_horse_l500_Conditions=null
code ref_function_Trig_Killing_trading_horse_l500_Actions=null
code ref_function_Trig_Killing_trading_horse_g250_Conditions=null
code ref_function_Trig_Killing_trading_horse_g250_Actions=null
code ref_function_Trig_Killing_trading_horse_g500_Conditions=null
code ref_function_Trig_Killing_trading_horse_g500_Actions=null
code ref_function_Trig_Trading_Lumber_Ship_Conditions=null
code ref_function_Trig_Trading_Lumber_Ship_Actions=null
code ref_function_Trig_Trading_Gold_Ship_Conditions=null
code ref_function_Trig_Trading_Gold_Ship_Actions=null
code ref_function_Trig_Trade_Actions=null
code ref_function_Trig_killing_Gold_Ship_Conditions=null
code ref_function_Trig_killing_Gold_Ship_Actions=null
code ref_function_Trig_killing_Lumber_Ship_Conditions=null
code ref_function_Trig_killing_Lumber_Ship_Actions=null
code ref_function_Trig_FarmHouse_Conditions=null
code ref_function_Trig_FarmHouse_Actions=null
code ref_function_Trig_Thatched_Cottage_1_Conditions=null
code ref_function_Trig_Thatched_Cottage_1_Actions=null
code ref_function_Trig_Thatched_Cottage_2_Conditions=null
code ref_function_Trig_Thatched_Cottage_2_Actions=null
code ref_function_Trig_Thatched_Cottage_3_Conditions=null
code ref_function_Trig_Thatched_Cottage_3_Actions=null
code ref_function_Trig_Thatched_Cottage_4_Conditions=null
code ref_function_Trig_Thatched_Cottage_4_Actions=null
code ref_function_Trig_Spearmen_1_Conditions=null
code ref_function_Trig_Spearmen_1_Actions=null
code ref_function_Trig_Spearmen_2_Conditions=null
code ref_function_Trig_Spearmen_2_Actions=null
code ref_function_Trig_Heavy_Infantry_1_Conditions=null
code ref_function_Trig_Heavy_Infantry_1_Actions=null
code ref_function_Trig_Heavy_Infantry_2_Conditions=null
code ref_function_Trig_Heavy_Infantry_2_Actions=null
code ref_function_Trig_Archer_1_Conditions=null
code ref_function_Trig_Archer_1_Actions=null
code ref_function_Trig_Archer_2_Conditions=null
code ref_function_Trig_Archer_2_Actions=null
code ref_function_Trig_Light_Infantry_1_Conditions=null
code ref_function_Trig_Light_Infantry_1_Actions=null
code ref_function_Trig_Light_Infantry_2_Conditions=null
code ref_function_Trig_Light_Infantry_2_Actions=null
code ref_function_Trig_Pikemen_1_Conditions=null
code ref_function_Trig_Pikemen_1_Actions=null
code ref_function_Trig_Pikemen_2_Conditions=null
code ref_function_Trig_Pikemen_2_Actions=null
code ref_function_Trig_Light_Cavalry_1_Conditions=null
code ref_function_Trig_Light_Cavalry_1_Actions=null
code ref_function_Trig_Light_Cavalry_2_Conditions=null
code ref_function_Trig_Light_Cavalry_2_Actions=null
code ref_function_Trig_Heavy_Cavalry_1_Conditions=null
code ref_function_Trig_Heavy_Cavalry_1_Actions=null
code ref_function_Trig_Heavy_Cavalry_2_Conditions=null
code ref_function_Trig_Heavy_Cavalry_2_Actions=null
code ref_function_Trig_Skirmisher_Conditions=null
code ref_function_Trig_Skirmisher_Actions=null
code ref_function_Trig_Arquebusers_Conditions=null
code ref_function_Trig_Arquebusers_Actions=null
code ref_function_Trig_Supply_Horse_Conditions=null
code ref_function_Trig_Supply_Horse_Actions=null
code ref_function_Trig_Disabled_units_at_beginning_Func002A=null
code ref_function_Trig_Disabled_units_at_beginning_Actions=null
code ref_function_Trig_FarmHouse_Byzantine_Conditions=null
code ref_function_Trig_FarmHouse_Byzantine_Actions=null
code ref_function_Trig_Thatched_Cottage_1_Byz_Conditions=null
code ref_function_Trig_Thatched_Cottage_1_Byz_Actions=null
code ref_function_Trig_Thatched_Cottage_2_Byz_Conditions=null
code ref_function_Trig_Thatched_Cottage_2_Byz_Actions=null
code ref_function_Trig_Thatched_Cottage_3_Byz_Conditions=null
code ref_function_Trig_Thatched_Cottage_3_Byz_Actions=null
code ref_function_Trig_Spearmen_1_Byzantine_Conditions=null
code ref_function_Trig_Spearmen_1_Byzantine_Actions=null
code ref_function_Trig_Spearmen_2_Byzantine_Conditions=null
code ref_function_Trig_Spearmen_2_Byzantine_Actions=null
code ref_function_Trig_Heavy_Infantry_1_Byzantine_Conditions=null
code ref_function_Trig_Heavy_Infantry_1_Byzantine_Actions=null
code ref_function_Trig_Heavy_Infantry_2_Byzantine_Conditions=null
code ref_function_Trig_Heavy_Infantry_2_Byzantine_Actions=null
code ref_function_Trig_Archer_1_Byzantine_Conditions=null
code ref_function_Trig_Archer_1_Byzantine_Actions=null
code ref_function_Trig_Archer_2_Byzantine_Conditions=null
code ref_function_Trig_Archer_2_Byzantine_Actions=null
code ref_function_Trig_Light_Cavalry_1_Byzantine_Conditions=null
code ref_function_Trig_Light_Cavalry_1_Byzantine_Actions=null
code ref_function_Trig_Heavy_Cavalry_1_Byzantine_Conditions=null
code ref_function_Trig_Heavy_Cavalry_1_Byzantine_Actions=null
code ref_function_Trig_Heavy_Cavalry_2_Byzantine_Conditions=null
code ref_function_Trig_Heavy_Cavalry_2_Byzantine_Actions=null
code ref_function_Trig_Skirmisher_Byzantine_Conditions=null
code ref_function_Trig_Skirmisher_Byzantine_Actions=null
code ref_function_Trig_Missile_Cavalry_Byzantine_Conditions=null
code ref_function_Trig_Missile_Cavalry_Byzantine_Actions=null
code ref_function_Trig_Disabled_units_Byzantine_Func002A=null
code ref_function_Trig_Disabled_units_Byzantine_Actions=null
code ref_function_Trig_ME_Spearmen_1_Conditions=null
code ref_function_Trig_ME_Spearmen_1_Actions=null
code ref_function_Trig_ME_Spearmen_2_Conditions=null
code ref_function_Trig_ME_Spearmen_2_Actions=null
code ref_function_Trig_ME_Archer_1_Conditions=null
code ref_function_Trig_ME_Archer_1_Actions=null
code ref_function_Trig_ME_Archer_2_Conditions=null
code ref_function_Trig_ME_Archer_2_Actions=null
code ref_function_Trig_ME_Light_Infantry_1_Conditions=null
code ref_function_Trig_ME_Light_Infantry_1_Actions=null
code ref_function_Trig_ME_Light_Infantry_2_Conditions=null
code ref_function_Trig_ME_Light_Infantry_2_Actions=null
code ref_function_Trig_ME_Pikeman_Conditions=null
code ref_function_Trig_ME_Pikeman_Actions=null
code ref_function_Trig_ME_Pikeman_2_Conditions=null
code ref_function_Trig_ME_Pikeman_2_Actions=null
code ref_function_Trig_ME_Light_Cavalry_1_Conditions=null
code ref_function_Trig_ME_Light_Cavalry_1_Actions=null
code ref_function_Trig_ME_Light_Cavalry_2_Conditions=null
code ref_function_Trig_ME_Light_Cavalry_2_Actions=null
code ref_function_Trig_ME_Heavy_Cavalry_1_Conditions=null
code ref_function_Trig_ME_Heavy_Cavalry_1_Actions=null
code ref_function_Trig_ME_Heavy_Cavalry_2_Conditions=null
code ref_function_Trig_ME_Heavy_Cavalry_2_Actions=null
code ref_function_Trig_ME_Skirmisher_Conditions=null
code ref_function_Trig_ME_Skirmisher_Actions=null
code ref_function_Trig_ME_Missile_Cavalry_Conditions=null
code ref_function_Trig_ME_Missile_Cavalry_Actions=null
code ref_function_Trig_Disabled_units_ME_Func002A=null
code ref_function_Trig_Disabled_units_ME_Actions=null
code ref_function_Trig_FarmHouse_EE_Copy_Conditions=null
code ref_function_Trig_FarmHouse_EE_Copy_Actions=null
code ref_function_Trig_Thatched_Cottage_1_EE_Copy_Conditions=null
code ref_function_Trig_Thatched_Cottage_1_EE_Copy_Actions=null
code ref_function_Trig_Thatched_Cottage_2_EE_Conditions=null
code ref_function_Trig_Thatched_Cottage_2_EE_Actions=null
code ref_function_Trig_Thatched_Cottage_3_EE_Conditions=null
code ref_function_Trig_Thatched_Cottage_3_EE_Actions=null
code ref_function_Trig_EE_Spearmen_1_Copy_Conditions=null
code ref_function_Trig_EE_Spearmen_1_Copy_Actions=null
code ref_function_Trig_EE_Spearmen_2_Copy_Conditions=null
code ref_function_Trig_EE_Spearmen_2_Copy_Actions=null
code ref_function_Trig_EE_Heavy_Infantry_1_Conditions=null
code ref_function_Trig_EE_Heavy_Infantry_1_Actions=null
code ref_function_Trig_EE_Heavy_Infantry_2_Conditions=null
code ref_function_Trig_EE_Heavy_Infantry_2_Actions=null
code ref_function_Trig_EE_Archer_1_Conditions=null
code ref_function_Trig_EE_Archer_1_Actions=null
code ref_function_Trig_EE_Archer_2_Conditions=null
code ref_function_Trig_EE_Archer_2_Actions=null
code ref_function_Trig_EE_Missile_Cavalry_1_Conditions=null
code ref_function_Trig_EE_Missile_Cavalry_1_Actions=null
code ref_function_Trig_EE_Missile_Cavalry_2_Conditions=null
code ref_function_Trig_EE_Missile_Cavalry_2_Actions=null
code ref_function_Trig_EE_Pikeman_1_Conditions=null
code ref_function_Trig_EE_Pikeman_1_Actions=null
code ref_function_Trig_EE_Pikeman_2_Conditions=null
code ref_function_Trig_EE_Pikeman_2_Actions=null
code ref_function_Trig_EE_Heavy_Cavalry_1_Conditions=null
code ref_function_Trig_EE_Heavy_Cavalry_1_Actions=null
code ref_function_Trig_EE_Heavy_Cavalry_2_Conditions=null
code ref_function_Trig_EE_Heavy_Cavalry_2_Actions=null
code ref_function_Trig_EE_Light_Cavalry_1_Conditions=null
code ref_function_Trig_EE_Light_Cavalry_1_Actions=null
code ref_function_Trig_EE_Skirmisher_1_Conditions=null
code ref_function_Trig_EE_Skirmisher_1_Actions=null
code ref_function_Trig_Disabled_units_EE_Func002A=null
code ref_function_Trig_Disabled_units_EE_Actions=null
code ref_function_Trig_Urbanization_Func001001002=null
code ref_function_Trig_Urbanization_Func001A=null
code ref_function_Trig_Urbanization_Conditions=null
code ref_function_Trig_Urbanization_Actions=null
code ref_function_Trig_Structures_finishes_Actions=null
code ref_function_Trig_Marketplace_Conditions=null
code ref_function_Trig_Marketplace_Actions=null
code ref_function_Trig_Barracks_Conditions=null
code ref_function_Trig_Barracks_Actions=null
code ref_function_Trig_Capitol_1_Dummies_Conditions=null
code ref_function_Trig_Capitol_1_Dummies_Actions=null
code ref_function_Trig_Capitol_2_Dummies_Conditions=null
code ref_function_Trig_Capitol_2_Dummies_Actions=null
code ref_function_Trig_Capitol_3_Dummies_Conditions=null
code ref_function_Trig_Capitol_3_Dummies_Actions=null
code ref_function_Trig_CITY_HALL_Conditions=null
code ref_function_Trig_CITY_HALL_Actions=null
code ref_function_Trig_Castle_BYZ_T1_Conditions=null
code ref_function_Trig_Castle_BYZ_T1_Actions=null
code ref_function_Trig_Castle_BYZ_T2_Conditions=null
code ref_function_Trig_Castle_BYZ_T2_Actions=null
code ref_function_Trig_Castle_BYZ_T3_Conditions=null
code ref_function_Trig_Castle_BYZ_T3_Actions=null
code ref_function_Trig_Castle_EE_T1_Conditions=null
code ref_function_Trig_Castle_EE_T1_Actions=null
code ref_function_Trig_Castle_EE_T2_Conditions=null
code ref_function_Trig_Castle_EE_T2_Actions=null
code ref_function_Trig_Castle_EE_T3_Conditions=null
code ref_function_Trig_Castle_EE_T3_Actions=null
code ref_function_Trig_Castle_ME__T1_Conditions=null
code ref_function_Trig_Castle_ME__T1_Actions=null
code ref_function_Trig_Castle_ME__T2_Conditions=null
code ref_function_Trig_Castle_ME__T2_Actions=null
code ref_function_Trig_Castle_ME_T3_Conditions=null
code ref_function_Trig_Castle_ME_T3_Actions=null
code ref_function_Trig_Castle_WE_T1_Conditions=null
code ref_function_Trig_Castle_WE_T1_Actions=null
code ref_function_Trig_Castle_WE_T2_Conditions=null
code ref_function_Trig_Castle_WE_T2_Actions=null
code ref_function_Trig_Castle_WE_T3_Conditions=null
code ref_function_Trig_Castle_WE_T3_Actions=null
code ref_function_Trig_Capitol_Keep_UPG_WE_T2_Conditions=null
code ref_function_Trig_Capitol_Keep_UPG_WE_T2_Actions=null
code ref_function_Trig_Capitol_Keep_Upg_BYZ_T2_Conditions=null
code ref_function_Trig_Capitol_Keep_Upg_BYZ_T2_Actions=null
code ref_function_Trig_Capitol_Keep_Upg_EE_T2_Conditions=null
code ref_function_Trig_Capitol_Keep_Upg_EE_T2_Actions=null
code ref_function_Trig_Capitol_Keep_Upg_ME_T2_Conditions=null
code ref_function_Trig_Capitol_Keep_Upg_ME_T2_Actions=null
code ref_function_Trig_Capitol_Castle_Up_BYZ_T3_Conditions=null
code ref_function_Trig_Capitol_Castle_Up_BYZ_T3_Actions=null
code ref_function_Trig_Capitol_Castle_Up_ME_T3_Conditions=null
code ref_function_Trig_Capitol_Castle_Up_ME_T3_Actions=null
code ref_function_Trig_Capitol_Castle_Up_EE_T3_Conditions=null
code ref_function_Trig_Capitol_Castle_Up_EE_T3_Actions=null
code ref_function_Trig_Capitol_Castle_UP_WE_T3_Conditions=null
code ref_function_Trig_Capitol_Castle_UP_WE_T3_Actions=null
code ref_function_init_Real=null
code ref_function_init_Integer=null
code ref_function_init_String=null
code ref_function_init_Angle=null
code ref_function_init_Vectors=null
code ref_function_init_Maths=null
code ref_function_init_Player=null
code ref_function_init_Printing=null
code ref_function_init_Basics=null
code ref_function_init_GameTimer=null
code ref_function_init_MagicFunctions=null
code ref_function_init_ErrorHandling=null
code ref_function_init_Matrices=null
code ref_function_init_Quaternion=null
code ref_function_init_Table=null
code ref_function_init_Playercolor=null
code ref_function_bridge_init_Colors=null
code ref_function_init_Group=null
code ref_function_init_Lightning=null
code ref_function_init_WeatherEffects=null
code ref_function_bridge_init_TypeCasting=null
code ref_function_init_ClosureForGroups=null
code ref_function_bridge_init_LinkedList=null
code ref_function_bridge_init_Abilities=null
code ref_function_init_AbilityIds=null
code ref_function_init_Bootleg=null
code ref_function_init_Buildings=null
code ref_function_init_MutliboardTools=null
code ref_function_init_HashList=null
code ref_function_bridge_init_EventHelper=null
code ref_function_bridge_init_RegisterEvents=null
code ref_function_bridge_init_TimerUtils=null
code ref_function_init_ClosureTimers=null
code ref_function_init_TargetsAllowed=null
code ref_function_init_Doodads=null
code ref_function_init_Icons=null
code ref_function_init_Objects=null
code ref_function_init_Sounds=null
code ref_function_init_Soundsets=null
code ref_function_init_Textures=null
code ref_function_init_UI=null
code ref_function_bridge_init_Units=null
code ref_function_init_UnitIds=null
code ref_function_init_MapBounds=null
code ref_function_bridge_init_DummyRecycler=null
code ref_function_bridge_init_StringUtils=null
code ref_function_init_ObjectIds=null
code ref_function_bridge_init_Preloader=null
code ref_function_bridge_init_ObjectIdGenerator=null
code ref_function_bridge_init_OnUnitEnterLeave=null
code ref_function_init_UnitIndexer=null
code ref_function_bridge_init_ClosureEvents=null
code ref_function_init_MathTools=null
code ref_function_init_Forces=null
code ref_function_init_Strings=null
code ref_function_bridge_init_CityBaseTaxes=null
code ref_function_init_Revolts=null
code ref_function_bridge_init_City=null
code ref_function_bridge_init_Multiboards=null
code ref_function_init_PlayerStats=null
code ref_function_init_Main=null
code ref_function_bridge_init_CastleCapture=null
code ref_function_bridge_init_CityBuilded=null
code ref_function_bridge_init_CityManage=null
code ref_function_bridge_init_CityModifiers=null
code ref_function_bridge_init_Clerics=null
code ref_function_init_HashSet=null
code ref_function_bridge_init_VoteKick=null
code ref_function_init_Commands=null
code ref_function_bridge_init_Credits=null
code ref_function_bridge_init_Economy=null
code ref_function_bridge_init_DateTime=null
code ref_function_init_Diplomacy=null
code ref_function_bridge_init_Garissons=null
code ref_function_bridge_init_LimitEncampments=null
code ref_function_bridge_init_LimitMercenaryCamps=null
code ref_function_init_Logarithm=null
code ref_function_bridge_init_MainInit=null
code ref_function_bridge_init_MassControl=null
code ref_function_bridge_init_MultiboardCityUpdate=null
code ref_function_bridge_init_NoShipsNearRivers=null
code ref_function_bridge_init_NoStarvationOnBoat=null
code ref_function_bridge_init_OnPlayerLeave=null
code ref_function_bridge_init_OreCapture=null
code ref_function_bridge_init_RangeChecks=null
code ref_function_bridge_init_Religion=null
code ref_function_bridge_init_Taxation=null
code ref_function_bridge_init_Upkeep=null
code ref_function_CityManage_closure_impl=null
code ref_function_bridge_CityManage_closure_impl=null
code ref_function_ClosureEvents_closure_impl=null
code ref_function_bridge_ClosureEvents_closure_impl=null
code ref_function_bridge_EventListener_generalEventCallback=null
code ref_function_bridge_ClosureForGroups_closure_impl=null
code ref_function_cond=null
code ref_function_bridge_action=null
code ref_function_bridge_cond=null
code ref_function_bridge_action_2=null
code ref_function_bridge_DelayNode_recycle=null
code ref_function_GameTimer_closure_impl=null
code ref_function_Group_closure_impl=null
code ref_function_Main_closure_impl=null
code ref_function_bridge_cinematicTutorial=null
code ref_function_bridge_RegisterEvents_closure_impl=null
code ref_function_bridge_UnitIndexer_closure_impl=null
code ref_function_bridge_UnitIndexer_closure_impl_2=null
code ref_function_bridge_Upkeep_closure_impl=null
code ref_function_bridge_ClosureEvents_closure_impl_2=null
code ref_function_bridge_ClosureEvents_closure_impl_3=null
code ref_function_bridge_ClosureEvents_closure_impl_4=null
code ref_function_bridge_ClosureEvents_closure_impl_5=null
code ref_function_bridge_CallbackPeriodic_staticCallback=null
code ref_function_bridge_CallbackSingle_closure_impl=null
code ref_function_OnUnitEnterLeave_closure_impl=null
code ref_function_OnUnitEnterLeave_closure_impl_2=null
code ref_function_OnUnitEnterLeave_closure_impl_3=null
unit createDummytempReturn=null
unit group_nexttempReturn=null
multiboard createCoEMultiboardtempReturn=null
timer getTimertempReturn=null
unit unitFromIndextempReturn=null
trigger triggerFromIndextempReturn=null
rect rectFromIndextempReturn=null
unit dispatch_City_City_City_getCityUnittempReturn=null
unit dispatch_Table_Table_Table_loadUnittempReturn=null
trigger dispatch_Table_Table_Table_loadTriggertempReturn=null
rect dispatch_Table_Table_Table_loadRecttempReturn=null
endglobals
function CreateNeutralHostileBuildings takes nothing returns nothing
	local player p = Player(PLAYER_NEUTRAL_AGGRESSIVE)
	call CreateUnit(p, 1747989297,  - 1600.0,  - 128.0, 270.000)
	call CreateUnit(p, 1747989297,  - 15040.0, 10816.0, 270.000)
	call CreateUnit(p, 1747989297,  - 256.0,  - 2432.0, 270.000)
	call CreateUnit(p, 1747989297,  - 24320.0, 3904.0, 270.000)
	call CreateUnit(p, 1747989297,  - 23552.0,  - 4544.0, 270.000)
	call CreateUnit(p, 1747989297,  - 23360.0,  - 64.0, 270.000)
	call CreateUnit(p, 1747989297, 2176.0,  - 7744.0, 270.000)
	call CreateUnit(p, 1747989297,  - 6336.0, 8000.0, 270.000)
	call CreateUnit(p, 1747989297, 832.0,  - 5568.0, 270.000)
	call CreateUnit(p, 1747989297,  - 3648.0, 1856.0, 270.000)
	call CreateUnit(p, 1747989042,  - 768.0, 24384.0, 270.000)
	call CreateUnit(p, 1747989297,  - 26304.0,  - 8704.0, 270.000)
	call CreateUnit(p, 1747989297, 2688.0,  - 3008.0, 270.000)
	call CreateUnit(p, 1747989297,  - 5568.0,  - 2752.0, 270.000)
	call CreateUnit(p, 1747989297,  - 3456.0,  - 2880.0, 270.000)
	call CreateUnit(p, 1747989297,  - 6464.0, 1280.0, 270.000)
	call CreateUnit(p, 1747989297,  - 8064.0, 3200.0, 270.000)
	call CreateUnit(p, 1747989297,  - 8768.0, 1984.0, 270.000)
	call CreateUnit(p, 1747989297,  - 7104.0,  - 768.0, 270.000)
	call CreateUnit(p, 1747989297,  - 28544.0, 0.0, 270.000)
	call CreateUnit(p, 1747989297,  - 27840.0,  - 2752.0, 270.000)
	call CreateUnit(p, 1747989297,  - 27008.0, 2688.0, 270.000)
	call CreateUnit(p, 1747989297,  - 17024.0, 512.0, 270.000)
	call CreateUnit(p, 1747989297,  - 21696.0,  - 4224.0, 270.000)
	call CreateUnit(p, 1747989042, 17536.0,  - 9024.0, 270.000)
	call CreateUnit(p, 1747989297, 10816.0,  - 7360.0, 270.000)
	call CreateUnit(p, 1747989297, 12800.0,  - 6912.0, 270.000)
	call CreateUnit(p, 1747989297, 15488.0,  - 7552.0, 270.000)
	call CreateUnit(p, 1747989297, 19072.0,  - 7424.0, 270.000)
	call CreateUnit(p, 1747989297, 15360.0,  - 5568.0, 270.000)
	call CreateUnit(p, 1747989297, 17216.0,  - 8640.0, 270.000)
	call CreateUnit(p, 1747989297, 16960.0,  - 16192.0, 270.000)
	call CreateUnit(p, 1747989297, 6976.0,  - 6592.0, 270.000)
	call CreateUnit(p, 1747989297, 24000.0, 256.0, 270.000)
	call CreateUnit(p, 1747989297,  - 10688.0,  - 384.0, 270.000)
	call CreateUnit(p, 1747989297, 13952.0,  - 11008.0, 270.000)
	call CreateUnit(p, 1747989297,  - 10944.0,  - 4608.0, 270.000)
	call CreateUnit(p, 1747989297,  - 21440.0,  - 8384.0, 270.000)
	call CreateUnit(p, 1747989297, 17472.0, 9472.0, 270.000)
	call CreateUnit(p, 1747989297,  - 16768.0,  - 8064.0, 270.000)
	call CreateUnit(p, 1747989297,  - 9920.0,  - 11264.0, 270.000)
	call CreateUnit(p, 1747989297,  - 7488.0,  - 16256.0, 270.000)
	call CreateUnit(p, 1747989297, 448.0,  - 17600.0, 270.000)
	call CreateUnit(p, 1747989297, 11008.0,  - 18496.0, 270.000)
	call CreateUnit(p, 1747989297, 13248.0,  - 17856.0, 270.000)
	call CreateUnit(p, 1747989297, 12288.0,  - 20864.0, 270.000)
	call CreateUnit(p, 1747989297,  - 11456.0, 11008.0, 270.000)
	call CreateUnit(p, 1747989297,  - 8640.0, 7104.0, 270.000)
	call CreateUnit(p, 1747989297,  - 7360.0, 17088.0, 270.000)
	call CreateUnit(p, 1747989297,  - 5120.0, 14528.0, 270.000)
	call CreateUnit(p, 1747989297, 15488.0,  - 26816.0, 270.000)
	call CreateUnit(p, 1747989297,  - 9600.0, 13120.0, 270.000)
	call CreateUnit(p, 1747989297,  - 11456.0, 14528.0, 270.000)
	call CreateUnit(p, 1747989297,  - 12544.0, 16320.0, 270.000)
	call CreateUnit(p, 1747989297,  - 7680.0, 22272.0, 270.000)
	call CreateUnit(p, 1747989297,  - 6272.0, 21376.0, 270.000)
	call CreateUnit(p, 1747989297,  - 4992.0, 21888.0, 270.000)
	call CreateUnit(p, 1747989297,  - 1280.0, 23936.0, 270.000)
	call CreateUnit(p, 1747989297,  - 3328.0, 23232.0, 270.000)
	call CreateUnit(p, 1747989297,  - 2560.0, 26368.0, 270.000)
	call CreateUnit(p, 1747989297,  - 6528.0, 28288.0, 270.000)
	call CreateUnit(p, 1747989297,  - 9856.0, 28416.0, 270.000)
	call CreateUnit(p, 1747989297,  - 13376.0, 15104.0, 270.000)
	call CreateUnit(p, 1747989297,  - 10688.0, 3520.0, 270.000)
	call CreateUnit(p, 1747989297,  - 9856.0, 5440.0, 270.000)
	call CreateUnit(p, 1747989297,  - 6720.0, 4096.0, 270.000)
	call CreateUnit(p, 1747989297,  - 13632.0, 2368.0, 270.000)
	call CreateUnit(p, 1747989297,  - 10496.0, 17728.0, 270.000)
	call CreateUnit(p, 1747989297,  - 7616.0, 11200.0, 270.000)
	call CreateUnit(p, 1747989297,  - 18688.0, 5760.0, 270.000)
	call CreateUnit(p, 1747989297,  - 25024.0,  - 3008.0, 270.000)
	call CreateUnit(p, 1747989297,  - 20096.0, 1408.0, 270.000)
	call CreateUnit(p, 1747989297,  - 7040.0,  - 7808.0, 270.000)
	call CreateUnit(p, 1747989297,  - 5376.0,  - 9216.0, 270.000)
	call CreateUnit(p, 1747989297, 24896.0,  - 27456.0, 270.000)
	call CreateUnit(p, 1747989297,  - 20352.0, 12224.0, 270.000)
	call CreateUnit(p, 1747989297,  - 13568.0, 5184.0, 270.000)
	call CreateUnit(p, 1747989297,  - 5120.0, 24576.0, 270.000)
	call CreateUnit(p, 1747989297,  - 1856.0, 27776.0, 270.000)
	call CreateUnit(p, 1747989297,  - 16704.0, 24192.0, 270.000)
	call CreateUnit(p, 1747989297,  - 15936.0, 17088.0, 270.000)
	call CreateUnit(p, 1747989297,  - 17792.0, 16064.0, 270.000)
	call CreateUnit(p, 1747989297,  - 20224.0, 21632.0, 270.000)
	call CreateUnit(p, 1747989297,  - 22400.0, 19968.0, 270.000)
	call CreateUnit(p, 1747989297,  - 15872.0, 20544.0, 270.000)
	call CreateUnit(p, 1747989297,  - 19776.0, 16512.0, 270.000)
	call CreateUnit(p, 1747989297,  - 17088.0, 12672.0, 270.000)
	call CreateUnit(p, 1747989297,  - 18560.0, 19712.0, 270.000)
	call CreateUnit(p, 1747989297,  - 15680.0, 26112.0, 270.000)
	call CreateUnit(p, 1747989297,  - 17088.0, 26816.0, 270.000)
	call CreateUnit(p, 1747989297,  - 16704.0, 3584.0, 270.000)
	call CreateUnit(p, 1747989297,  - 11456.0, 7232.0, 270.000)
	call CreateUnit(p, 1747989297,  - 18176.0, 10816.0, 270.000)
	call CreateUnit(p, 1747989297,  - 16000.0, 6016.0, 270.000)
	call CreateUnit(p, 1747989297,  - 8896.0, 26688.0, 270.000)
	call CreateUnit(p, 1747989297, 9216.0,  - 4416.0, 270.000)
	call CreateUnit(p, 1747989297, 6656.0,  - 4480.0, 270.000)
	call CreateUnit(p, 1747989297, 5184.0,  - 1856.0, 270.000)
	call CreateUnit(p, 1747989297, 18624.0,  - 448.0, 270.000)
	call CreateUnit(p, 1747989297, 11008.0,  - 1984.0, 270.000)
	call CreateUnit(p, 1747989297, 14144.0,  - 128.0, 270.000)
	call CreateUnit(p, 1747989297, 8384.0,  - 10368.0, 270.000)
	call CreateUnit(p, 1747989297, 5376.0,  - 12224.0, 270.000)
	call CreateUnit(p, 1747989297, 3392.0,  - 7296.0, 270.000)
	call CreateUnit(p, 1747989297, 12672.0,  - 3904.0, 270.000)
	call CreateUnit(p, 1747989297, 27008.0,  - 11520.0, 270.000)
	call CreateUnit(p, 1747989297,  - 25216.0, 1472.0, 270.000)
	call CreateUnit(p, 1747989297, 23552.0, 11072.0, 270.000)
	call CreateUnit(p, 1747989297,  - 20736.0,  - 2112.0, 270.000)
	call CreateUnit(p, 1747989297,  - 22592.0, 2560.0, 270.000)
	call CreateUnit(p, 1747989297,  - 20864.0, 3136.0, 270.000)
	call CreateUnit(p, 1747989297,  - 17280.0,  - 3136.0, 270.000)
	call CreateUnit(p, 1747989297,  - 3584.0, 4608.0, 270.000)
	call CreateUnit(p, 1747989297, 1536.0, 29440.0, 270.000)
	call CreateUnit(p, 1747989297,  - 23104.0,  - 8832.0, 270.000)
	call CreateUnit(p, 1747989297, 1216.0,  - 960.0, 270.000)
	call CreateUnit(p, 1747989297,  - 13312.0,  - 8512.0, 270.000)
	call CreateUnit(p, 1747989297, 26240.0,  - 2688.0, 270.000)
	call CreateUnit(p, 1747989043,  - 7872.0, 17536.0, 270.000)
	call CreateUnit(p, 1747989297,  - 13568.0, 12160.0, 270.000)
	call CreateUnit(p, 1747989297,  - 13696.0, 8064.0, 270.000)
	call CreateUnit(p, 1747989297, 27648.0,  - 5824.0, 270.000)
	call CreateUnit(p, 1747989297,  - 4544.0, 11648.0, 270.000)
	call CreateUnit(p, 1747989297, 28992.0,  - 3200.0, 270.000)
	call CreateUnit(p, 1747989297,  - 3072.0, 8320.0, 270.000)
	call CreateUnit(p, 1747989297,  - 384.0, 8512.0, 270.000)
	call CreateUnit(p, 1747989297, 28224.0, 2752.0, 270.000)
	call CreateUnit(p, 1747989297,  - 4992.0, 17280.0, 270.000)
	call CreateUnit(p, 1747989297, 64.0, 12608.0, 270.000)
	call CreateUnit(p, 1747989297,  - 2112.0, 13696.0, 270.000)
	call CreateUnit(p, 1747989297, 4160.0, 5376.0, 270.000)
	call CreateUnit(p, 1747989297, 4224.0, 3904.0, 270.000)
	call CreateUnit(p, 1747989297, 7232.0, 2240.0, 270.000)
	call CreateUnit(p, 1747989297,  - 384.0, 3072.0, 270.000)
	call CreateUnit(p, 1747989297,  - 8128.0, 19968.0, 270.000)
	call CreateUnit(p, 1747989297, 3072.0, 192.0, 270.000)
	call CreateUnit(p, 1747989297, 832.0, 15872.0, 270.000)
	call CreateUnit(p, 1747989297,  - 2304.0, 16064.0, 270.000)
	call CreateUnit(p, 1747989297, 4416.0, 19648.0, 270.000)
	call CreateUnit(p, 1747989297, 1792.0, 6976.0, 270.000)
	call CreateUnit(p, 1747989297, 5888.0, 24960.0, 270.000)
	call CreateUnit(p, 1747989297,  - 1792.0, 19200.0, 270.000)
	call CreateUnit(p, 1747989297, 3008.0, 22784.0, 270.000)
	call CreateUnit(p, 1747989297, 3200.0, 18240.0, 270.000)
	call CreateUnit(p, 1747989297,  - 3712.0,  - 6528.0, 270.000)
	call CreateUnit(p, 1747989297,  - 17216.0, 22208.0, 270.000)
	call CreateUnit(p, 1747989297,  - 18880.0, 17920.0, 270.000)
	call CreateUnit(p, 1747989297,  - 17280.0, 18304.0, 270.000)
	call CreateUnit(p, 1747989297,  - 22272.0, 22400.0, 270.000)
	call CreateUnit(p, 1747989297,  - 10496.0,  - 9152.0, 270.000)
	call CreateUnit(p, 1747989297, 13248.0, 5120.0, 270.000)
	call CreateUnit(p, 1747989297, 7936.0,  - 2368.0, 270.000)
	call CreateUnit(p, 1747989297, 3520.0, 27008.0, 270.000)
	call CreateUnit(p, 1747989297, 8832.0, 26368.0, 270.000)
	call CreateUnit(p, 1747989297, 6848.0, 21440.0, 270.000)
	call CreateUnit(p, 1747989297, 6144.0, 18560.0, 270.000)
	call CreateUnit(p, 1747989297, 3904.0, 11072.0, 270.000)
	call CreateUnit(p, 1747989297, 8512.0, 12352.0, 270.000)
	call CreateUnit(p, 1747989297, 9280.0, 20032.0, 270.000)
	call CreateUnit(p, 1747989297, 1216.0, 11008.0, 270.000)
	call CreateUnit(p, 1747989044,  - 15680.0, 11200.0, 270.000)
	call CreateUnit(p, 1747989044,  - 15104.0, 17408.0, 270.000)
	call CreateUnit(p, 1747989045,  - 1728.0, 28608.0, 270.000)
	call CreateUnit(p, 1747989043,  - 18304.0, 18112.0, 270.000)
	call CreateUnit(p, 1747989044,  - 9600.0, 13888.0, 270.000)
	call CreateUnit(p, 1747989297, 384.0, 19456.0, 270.000)
	call CreateUnit(p, 1747989044, 4864.0, 5952.0, 270.000)
	call CreateUnit(p, 1747989044, 8000.0,  - 1664.0, 270.000)
	call CreateUnit(p, 1747989044, 9280.0,  - 3008.0, 270.000)
	call CreateUnit(p, 1747989045,  - 21056.0, 21056.0, 270.000)
	call CreateUnit(p, 1747989045,  - 19648.0, 12224.0, 270.000)
	call CreateUnit(p, 1747989045, 17984.0,  - 13120.0, 270.000)
	call CreateUnit(p, 1747989042,  - 28544.0, 704.0, 270.000)
	call CreateUnit(p, 1747989045,  - 9344.0, 7168.0, 270.000)
	call CreateUnit(p, 1747989043,  - 6336.0, 8576.0, 270.000)
	call CreateUnit(p, 1747989045,  - 15616.0, 21248.0, 270.000)
	call CreateUnit(p, 1747989045,  - 16640.0, 1024.0, 270.000)
	call CreateUnit(p, 1747989045, 13760.0,  - 11584.0, 270.000)
	call CreateUnit(p, 1747989042,  - 11328.0, 3712.0, 270.000)
	call CreateUnit(p, 1747989042,  - 16768.0, 25920.0, 270.000)
	call CreateUnit(p, 1747989045,  - 19200.0, 28352.0, 270.000)
	call CreateUnit(p, 1747989043, 3456.0, 11584.0, 270.000)
	call CreateUnit(p, 1747989044,  - 24640.0, 4352.0, 270.000)
	call CreateUnit(p, 1747989044,  - 23232.0,  - 5120.0, 270.000)
	call CreateUnit(p, 1747989042,  - 23424.0, 768.0, 270.000)
	call CreateUnit(p, 1747989045,  - 15936.0,  - 2688.0, 270.000)
	call CreateUnit(p, 1747989045,  - 10752.0,  - 3456.0, 270.000)
	call CreateUnit(p, 1747989044,  - 7552.0, 4416.0, 270.000)
	call CreateUnit(p, 1747989045,  - 20160.0,  - 1600.0, 270.000)
	call CreateUnit(p, 1747989045,  - 21824.0, 2560.0, 270.000)
	call CreateUnit(p, 1747989045, 11392.0,  - 7104.0, 270.000)
	call CreateUnit(p, 1747989042, 4352.0, 20224.0, 270.000)
	call CreateUnit(p, 1747989044,  - 15360.0, 4992.0, 270.000)
	call CreateUnit(p, 1747989042,  - 896.0, 3392.0, 270.000)
	call CreateUnit(p, 1747989045,  - 6528.0,  - 832.0, 270.000)
	call CreateUnit(p, 1747989043,  - 4928.0,  - 3264.0, 270.000)
	call CreateUnit(p, 1747989042,  - 6144.0,  - 8192.0, 270.000)
	call CreateUnit(p, 1747989043, 23424.0, 640.0, 270.000)
	call CreateUnit(p, 1747989043,  - 6976.0, 1344.0, 270.000)
	call CreateUnit(p, 1747989043, 4352.0, 128.0, 270.000)
	call CreateUnit(p, 1747989297, 17472.0, 19648.0, 270.000)
	call CreateUnit(p, 1747989044,  - 7872.0, 22784.0, 270.000)
	call CreateUnit(p, 1747989297, 20864.0, 21504.0, 270.000)
	call CreateUnit(p, 1747989044,  - 9152.0, 28480.0, 270.000)
	call CreateUnit(p, 1747989042,  - 27712.0,  - 9536.0, 270.000)
	call CreateUnit(p, 1747989042, 4800.0,  - 12480.0, 270.000)
	call CreateUnit(p, 1747989045, 7232.0,  - 11328.0, 270.000)
	call CreateUnit(p, 1747989045, 1792.0,  - 8064.0, 270.000)
	call CreateUnit(p, 1747989297,  - 1600.0, 5952.0, 270.000)
	call CreateUnit(p, 1747989043,  - 128.0,  - 1792.0, 270.000)
	call CreateUnit(p, 1747989042,  - 3392.0, 8640.0, 270.000)
	call CreateUnit(p, 1747989044,  - 1856.0, 16576.0, 270.000)
	call CreateUnit(p, 1747989043,  - 13888.0, 14784.0, 270.000)
	call CreateUnit(p, 1747989297,  - 29568.0,  - 9792.0, 270.000)
	call CreateUnit(p, 1747989043,  - 9088.0, 26240.0, 270.000)
	call CreateUnit(p, 1747989045,  - 5440.0, 23808.0, 270.000)
	call CreateUnit(p, 1747989045, 2176.0, 30080.0, 270.000)
	call CreateUnit(p, 1747989043, 1984.0, 6464.0, 270.000)
	call CreateUnit(p, 1747989297,  - 26304.0,  - 1408.0, 270.000)
	call CreateUnit(p, 1747989043, 448.0, 13056.0, 270.000)
	call CreateUnit(p, 1747989045, 3072.0, 26752.0, 270.000)
	call CreateUnit(p, 1747989043, 6656.0, 18880.0, 270.000)
	call CreateUnit(p, 1747989043, 3264.0,  - 3712.0, 270.000)
	call CreateUnit(p, 1747989297, 15872.0, 5760.0, 270.000)
	call CreateUnit(p, 1747989043, 6528.0, 22080.0, 270.000)
	call CreateUnit(p, 1747989044, 8896.0, 27008.0, 270.000)
	call CreateUnit(p, 1747989297, 18496.0,  - 17280.0, 270.000)
	call CreateUnit(p, 1747989297, 11392.0, 7872.0, 270.000)
	call CreateUnit(p, 1747989297, 12672.0, 11328.0, 270.000)
	call CreateUnit(p, 1747989297, 6016.0, 12416.0, 270.000)
	call CreateUnit(p, 1747989297, 7104.0, 7808.0, 270.000)
	call CreateUnit(p, 1747989297, 20864.0, 2688.0, 270.000)
	call CreateUnit(p, 1747989297, 24000.0, 2560.0, 270.000)
	call CreateUnit(p, 1747989297, 19648.0, 11328.0, 270.000)
	call CreateUnit(p, 1747989297, 11584.0, 16960.0, 270.000)
	call CreateUnit(p, 1747989297, 18496.0,  - 13248.0, 270.000)
	call CreateUnit(p, 1747989297, 17216.0,  - 11456.0, 270.000)
	call CreateUnit(p, 1747989297, 25088.0,  - 8320.0, 270.000)
	call CreateUnit(p, 1747989297, 15680.0,  - 17536.0, 270.000)
	call CreateUnit(p, 1747989297, 16640.0,  - 14208.0, 270.000)
	call CreateUnit(p, 1747989297, 17280.0,  - 19584.0, 270.000)
	call CreateUnit(p, 1747989297, 22912.0,  - 10240.0, 270.000)
	call CreateUnit(p, 1747989297, 20864.0,  - 23040.0, 270.000)
	call CreateUnit(p, 1747989044, 13120.0,  - 21696.0, 270.000)
	call CreateUnit(p, 1747989297, 20096.0,  - 5760.0, 270.000)
	call CreateUnit(p, 1747989297, 18816.0,  - 3776.0, 270.000)
	call CreateUnit(p, 1747989042, 14464.0,  - 26432.0, 270.000)
	call CreateUnit(p, 1747989044, 23808.0,  - 27776.0, 270.000)
	call CreateUnit(p, 1747989042, 11776.0,  - 18688.0, 270.000)
	call CreateUnit(p, 1747989043, 256.0,  - 18048.0, 270.000)
	call CreateUnit(p, 1747989045,  - 16192.0,  - 8192.0, 270.000)
	call CreateUnit(p, 1747989045,  - 11520.0,  - 10944.0, 270.000)
	call CreateUnit(p, 1747989045, 16512.0,  - 19968.0, 270.000)
	call CreateUnit(p, 1747989045, 20416.0,  - 22272.0, 270.000)
	call CreateUnit(p, 1747989044, 28800.0,  - 11904.0, 270.000)
	call CreateUnit(p, 1747989297, 15040.0, 23104.0, 270.000)
	call CreateUnit(p, 1747989044, 8128.0, 12928.0, 270.000)
	call CreateUnit(p, 1747989044, 16896.0,  - 15744.0, 270.000)
	call CreateUnit(p, 1747989042, 17984.0,  - 640.0, 270.000)
	call CreateUnit(p, 1747989045, 20608.0, 3136.0, 270.000)
	call CreateUnit(p, 1747989045, 7232.0,  - 5120.0, 270.000)
	call CreateUnit(p, 1747989045, 25984.0,  - 8128.0, 270.000)
	call CreateUnit(p, 1747989045, 20544.0,  - 5440.0, 270.000)
	call CreateUnit(p, 1747989045, 11968.0, 17856.0, 270.000)
	call CreateUnit(p, 1747989045, 10048.0, 20032.0, 270.000)
	call CreateUnit(p, 1747989043, 15296.0,  - 7232.0, 270.000)
	call CreateUnit(p, 1747989043, 13056.0, 11776.0, 270.000)
	call CreateUnit(p, 1747989043, 15744.0, 23488.0, 270.000)
	call CreateUnit(p, 1747989043, 17984.0, 9280.0, 270.000)
	set p = null
endfunction

function CreatePlayerBuildings takes nothing returns nothing
endfunction

function CreateUnitsForPlayer0 takes nothing returns nothing
	local player p = Player(0)
	local unit u_5 = CreateUnit(p, 1211118391,  - 30470.9, 30602.5, 270.516)
	call SetHeroLevel(u_5, 15, false)
	call SetUnitState(u_5, UNIT_STATE_MANA, 85.)
	set u_5 = CreateUnit(p, 1211118406,  - 30360.2, 29312.6, 270.421)
	call SetHeroLevel(u_5, 15, false)
	set p = null
	set u_5 = null
endfunction

function CreateUnitsForPlayer1 takes nothing returns nothing
	local player p = Player(1)
	local unit u_5 = CreateUnit(p, 1211118391,  - 30205.9, 30601.1, 270.267)
	call SetHeroLevel(u_5, 15, false)
	call SetUnitState(u_5, UNIT_STATE_MANA, 85.)
	set u_5 = CreateUnit(p, 1211118406,  - 30199.1, 29448.7, 270.266)
	call SetHeroLevel(u_5, 15, false)
	set p = null
	set u_5 = null
endfunction

function CreateUnitsForPlayer10 takes nothing returns nothing
	local player p = Player(10)
	local unit u_5 = CreateUnit(p, 1211118391,  - 30338.2, 30210.1, 270.394)
	call SetHeroLevel(u_5, 15, false)
	call SetUnitState(u_5, UNIT_STATE_MANA, 85.)
	set u_5 = CreateUnit(p, 1211118406,  - 29904.6, 29442.8, 269.983)
	call SetHeroLevel(u_5, 15, false)
	set p = null
	set u_5 = null
endfunction

function CreateUnitsForPlayer11 takes nothing returns nothing
	local player p = Player(11)
	local unit u_5 = CreateUnit(p, 1211118391,  - 29827.0, 30210.1, 269.911)
	call SetHeroLevel(u_5, 15, false)
	call SetUnitState(u_5, UNIT_STATE_MANA, 85.)
	set u_5 = CreateUnit(p, 1211118406,  - 30125.9, 29321.4, 270.196)
	call SetHeroLevel(u_5, 15, false)
	set p = null
	set u_5 = null
endfunction

function CreateUnitsForPlayer12 takes nothing returns nothing
	local player p = Player(12)
	local unit u_5 = CreateUnit(p, 1211118391,  - 30464.7, 30089.7, 270.515)
	call SetHeroLevel(u_5, 15, false)
	call SetUnitState(u_5, UNIT_STATE_MANA, 85.)
	set u_5 = CreateUnit(p, 1211118406,  - 29962.2, 29311.8, 270.038)
	call SetHeroLevel(u_5, 15, false)
	set p = null
	set u_5 = null
endfunction

function CreateUnitsForPlayer13 takes nothing returns nothing
	local player p = Player(13)
	local unit u_5 = CreateUnit(p, 1211118391,  - 30204.3, 30080.3, 270.268)
	call SetHeroLevel(u_5, 15, false)
	call SetUnitState(u_5, UNIT_STATE_MANA, 85.)
	set u_5 = CreateUnit(p, 1211118406,  - 30039.0, 29306.5, 270.112)
	call SetHeroLevel(u_5, 15, false)
	set p = null
	set u_5 = null
endfunction

function CreateUnitsForPlayer14 takes nothing returns nothing
	local player p = Player(14)
	local unit u_5 = CreateUnit(p, 1211118391,  - 30339.8, 29950.4, 270.397)
	call SetHeroLevel(u_5, 15, false)
	call SetUnitState(u_5, UNIT_STATE_MANA, 85.)
	set u_5 = CreateUnit(p, 1211118406,  - 29968.7, 29556.2, 270.045)
	call SetHeroLevel(u_5, 15, false)
	set p = null
	set u_5 = null
endfunction

function CreateUnitsForPlayer15 takes nothing returns nothing
	local player p = Player(15)
	local unit u_5 = CreateUnit(p, 1211118391,  - 30467.2, 29834.7, 270.519)
	call SetHeroLevel(u_5, 15, false)
	call SetUnitState(u_5, UNIT_STATE_MANA, 85.)
	set u_5 = CreateUnit(p, 1211118406,  - 29874.4, 29559.4, 269.954)
	call SetHeroLevel(u_5, 15, false)
	set p = null
	set u_5 = null
endfunction

function CreateUnitsForPlayer16 takes nothing returns nothing
	local player p = Player(16)
	local unit u_5 = CreateUnit(p, 1211118391,  - 30203.1, 29826.8, 270.268)
	call SetHeroLevel(u_5, 15, false)
	call SetUnitState(u_5, UNIT_STATE_MANA, 85.)
	set u_5 = CreateUnit(p, 1211118406,  - 29780.4, 29300.3, 269.864)
	call SetHeroLevel(u_5, 15, false)
	set p = null
	set u_5 = null
endfunction

function CreateUnitsForPlayer17 takes nothing returns nothing
	local player p = Player(17)
	local unit u_5 = CreateUnit(p, 1211118391,  - 29951.6, 30084.7, 270.028)
	call SetHeroLevel(u_5, 15, false)
	call SetUnitState(u_5, UNIT_STATE_MANA, 85.)
	set u_5 = CreateUnit(p, 1211118406,  - 29862.1, 29302.2, 269.942)
	call SetHeroLevel(u_5, 15, false)
	set p = null
	set u_5 = null
endfunction

function CreateUnitsForPlayer18 takes nothing returns nothing
	local player p = Player(18)
	local unit u_5 = CreateUnit(p, 1211118391,  - 29691.7, 30077.9, 269.782)
	call SetHeroLevel(u_5, 15, false)
	call SetUnitState(u_5, UNIT_STATE_MANA, 85.)
	set u_5 = CreateUnit(p, 1211118406,  - 29792.0, 29571.7, 269.875)
	call SetHeroLevel(u_5, 15, false)
	set p = null
	set u_5 = null
endfunction

function CreateUnitsForPlayer19 takes nothing returns nothing
	local player p = Player(19)
	local unit u_5 = CreateUnit(p, 1211118391,  - 29820.0, 29950.4, 269.903)
	call SetHeroLevel(u_5, 15, false)
	call SetUnitState(u_5, UNIT_STATE_MANA, 85.)
	set u_5 = CreateUnit(p, 1211118406,  - 29707.1, 29309.8, 269.793)
	call SetHeroLevel(u_5, 15, false)
	set p = null
	set u_5 = null
endfunction

function CreateUnitsForPlayer2 takes nothing returns nothing
	local player p = Player(2)
	local unit u_5 = CreateUnit(p, 1211118391,  - 30324.4, 30466.1, 270.380)
	call SetHeroLevel(u_5, 15, false)
	call SetUnitState(u_5, UNIT_STATE_MANA, 85.)
	set u_5 = CreateUnit(p, 1211118406,  - 30346.6, 29573.7, 270.406)
	call SetHeroLevel(u_5, 15, false)
	set p = null
	set u_5 = null
endfunction

function CreateUnitsForPlayer22 takes nothing returns nothing
	local player p = Player(22)
	local unit u_5 = CreateUnit(p, 1211118391,  - 29948.2, 29831.1, 270.025)
	call SetHeroLevel(u_5, 15, false)
	call SetUnitState(u_5, UNIT_STATE_MANA, 85.)
	set u_5 = CreateUnit(p, 1211118406,  - 29699.3, 29565.4, 269.787)
	call SetHeroLevel(u_5, 15, false)
	set p = null
	set u_5 = null
endfunction

function CreateUnitsForPlayer23 takes nothing returns nothing
	local player p = Player(23)
	local unit u_5 = CreateUnit(p, 1211118391,  - 29689.5, 29824.6, 269.779)
	call SetHeroLevel(u_5, 15, false)
	call SetUnitState(u_5, UNIT_STATE_MANA, 85.)
	set u_5 = CreateUnit(p, 1211118406,  - 29815.4, 29434.4, 269.898)
	call SetHeroLevel(u_5, 15, false)
	set p = null
	set u_5 = null
endfunction

function CreateUnitsForPlayer3 takes nothing returns nothing
	local player p = Player(3)
	local unit u_5 = CreateUnit(p, 1211118391,  - 30468.2, 30345.3, 270.516)
	call SetHeroLevel(u_5, 15, false)
	call SetUnitState(u_5, UNIT_STATE_MANA, 85.)
	set u_5 = CreateUnit(p, 1211118406,  - 30252.3, 29576.9, 270.316)
	call SetHeroLevel(u_5, 15, false)
	set p = null
	set u_5 = null
endfunction

function CreateUnitsForPlayer4 takes nothing returns nothing
	local player p = Player(4)
	local unit u_5 = CreateUnit(p, 1211118391,  - 30204.6, 30339.2, 270.267)
	call SetHeroLevel(u_5, 15, false)
	call SetUnitState(u_5, UNIT_STATE_MANA, 85.)
	set u_5 = CreateUnit(p, 1211118406,  - 30106.5, 29439.8, 270.177)
	call SetHeroLevel(u_5, 15, false)
	set p = null
	set u_5 = null
endfunction

function CreateUnitsForPlayer5 takes nothing returns nothing
	local player p = Player(5)
	local unit u_5 = CreateUnit(p, 1211118391,  - 29950.2, 30589.5, 270.027)
	call SetHeroLevel(u_5, 15, false)
	call SetUnitState(u_5, UNIT_STATE_MANA, 85.)
	set u_5 = CreateUnit(p, 1211118406,  - 30283.9, 29308.8, 270.348)
	call SetHeroLevel(u_5, 15, false)
	set p = null
	set u_5 = null
endfunction

function CreateUnitsForPlayer6 takes nothing returns nothing
	local player p = Player(6)
	local unit u_5 = CreateUnit(p, 1211118391,  - 29693.7, 30597.0, 269.786)
	call SetHeroLevel(u_5, 15, false)
	call SetUnitState(u_5, UNIT_STATE_MANA, 85.)
	set u_5 = CreateUnit(p, 1211118406,  - 30199.8, 29310.0, 270.267)
	call SetHeroLevel(u_5, 15, false)
	set p = null
	set u_5 = null
endfunction

function CreateUnitsForPlayer7 takes nothing returns nothing
	local player p = Player(7)
	local unit u_5 = CreateUnit(p, 1211118391,  - 29818.2, 30468.8, 269.903)
	call SetHeroLevel(u_5, 15, false)
	call SetUnitState(u_5, UNIT_STATE_MANA, 85.)
	set u_5 = CreateUnit(p, 1211118406,  - 29998.9, 29444.3, 270.074)
	call SetHeroLevel(u_5, 15, false)
	set p = null
	set u_5 = null
endfunction

function CreateUnitsForPlayer8 takes nothing returns nothing
	local player p = Player(8)
	local unit u_5 = CreateUnit(p, 1211118391,  - 29946.0, 30342.9, 270.023)
	call SetHeroLevel(u_5, 15, false)
	call SetUnitState(u_5, UNIT_STATE_MANA, 85.)
	set u_5 = CreateUnit(p, 1211118406,  - 30137.9, 29561.1, 270.206)
	call SetHeroLevel(u_5, 15, false)
	set p = null
	set u_5 = null
endfunction

function CreateUnitsForPlayer9 takes nothing returns nothing
	local player p = Player(9)
	local unit u_5 = CreateUnit(p, 1211118391,  - 29693.5, 30338.3, 269.785)
	call SetHeroLevel(u_5, 15, false)
	call SetUnitState(u_5, UNIT_STATE_MANA, 85.)
	set u_5 = CreateUnit(p, 1211118406,  - 30045.2, 29554.8, 270.118)
	call SetHeroLevel(u_5, 15, false)
	set p = null
	set u_5 = null
endfunction

function CreatePlayerUnits takes nothing returns nothing
	call CreateUnitsForPlayer0()
	call CreateUnitsForPlayer1()
	call CreateUnitsForPlayer2()
	call CreateUnitsForPlayer3()
	call CreateUnitsForPlayer4()
	call CreateUnitsForPlayer5()
	call CreateUnitsForPlayer6()
	call CreateUnitsForPlayer7()
	call CreateUnitsForPlayer8()
	call CreateUnitsForPlayer9()
	call CreateUnitsForPlayer10()
	call CreateUnitsForPlayer11()
	call CreateUnitsForPlayer12()
	call CreateUnitsForPlayer13()
	call CreateUnitsForPlayer14()
	call CreateUnitsForPlayer15()
	call CreateUnitsForPlayer16()
	call CreateUnitsForPlayer17()
	call CreateUnitsForPlayer18()
	call CreateUnitsForPlayer19()
	call CreateUnitsForPlayer22()
	call CreateUnitsForPlayer23()
endfunction

function CreateAllUnits takes nothing returns nothing
	call CreateNeutralHostileBuildings()
	call CreatePlayerBuildings()
	call CreatePlayerUnits()
endfunction

function CreateRegions takes nothing returns nothing
	set gg_rct_SHIP_Lower_Nile = Rect(11872.0,  - 24096.0, 13376.0,  - 18304.0)
	set gg_rct_SHIP_Nile_2 = Rect(14080.0,  - 30720.0, 16256.0,  - 25664.0)
	set gg_rct_SHIP_Upper_Nile = Rect(12096.0,  - 26240.0, 14944.0,  - 23776.0)
	set gg_rct_SHIP_Thames = Rect( - 17120.0, 15936.0,  - 15520.0, 17408.0)
	call Rect( - 29824.0,  - 30080.0,  - 29312.0,  - 28672.0)
	call Rect( - 29216.0,  - 30112.0,  - 28672.0,  - 28672.0)
	call Rect( - 25984.0,  - 29760.0,  - 24992.0,  - 29504.0)
	call Rect( - 25984.0,  - 30080.0,  - 25472.0,  - 29824.0)
	call Rect( - 25984.0,  - 30400.0,  - 25472.0,  - 30144.0)
	call Rect( - 26464.0,  - 30048.0,  - 26176.0,  - 29056.0)
	call Rect( - 25440.0,  - 30368.0,  - 25184.0,  - 29856.0)
	call Rect( - 25184.0,  - 30368.0,  - 24928.0,  - 29856.0)
	call Rect( - 24672.0,  - 29568.0,  - 24064.0,  - 28800.0)
	call Rect( - 24704.0,  - 30208.0,  - 24064.0,  - 29696.0)
	set gg_rct_CITY_WE_Burgh = Rect( - 17408.0, 22016.0,  - 17056.0, 22368.0)
	set gg_rct_CITY_WE_Cardiff = Rect( - 19072.0, 17728.0,  - 18688.0, 18080.0)
	set gg_rct_CITY_WE_Galway = Rect( - 22464.0, 22208.0,  - 22112.0, 22560.0)
	set gg_rct_CITY_WE_Zagreb = Rect( - 3776.0, 4416.0,  - 3392.0, 4768.0)
	set gg_rct_CITY_WE_Zadar = Rect( - 3872.0, 1664.0,  - 3456.0, 2016.0)
	set gg_rct_CITY_BYZ_Durrazo = Rect( - 416.0,  - 2592.0,  - 128.0,  - 2272.0)
	set gg_rct_CITY_BYZ_Adrianopolis = Rect(4992.0,  - 2016.0, 5344.0,  - 1696.0)
	set gg_rct_CITY_Byz_Thessalonika = Rect(2528.0,  - 3168.0, 2848.0,  - 2880.0)
	set gg_rct_CITY_BYZ_Constantinople = Rect(7744.0,  - 2528.0, 8096.0,  - 2208.0)
	set gg_rct_CITY_WE_Warwick = Rect( - 17504.0, 18080.0,  - 17056.0, 18496.0)
	set gg_rct_CITY_BYZ_Scopia = Rect(1024.0,  - 1120.0, 1376.0,  - 800.0)
	set gg_rct_CITY_WE_Vienna = Rect( - 3328.0, 8096.0,  - 2848.0, 8512.0)
	set gg_rct_CITY_WE_Prague = Rect( - 4704.0, 11488.0,  - 4416.0, 11776.0)
	set gg_rct_CITY_WE_Esztergom = Rect( - 640.0, 8288.0,  - 160.0, 8704.0)
	set gg_rct_CITY_WE_Stettin = Rect( - 5184.0, 17120.0,  - 4832.0, 17440.0)
	set gg_rct_CITY_WE_Krakow = Rect( - 96.0, 12448.0, 224.0, 12768.0)
	set gg_rct_CITY_WE_Wroclaw = Rect( - 2272.0, 13536.0,  - 1984.0, 13856.0)
	set gg_rct_CITY_EE_Constanta = Rect(7008.0, 1984.0, 7456.0, 2432.0)
	set gg_rct_CITY_EE_Targoviste = Rect(4032.0, 3744.0, 4416.0, 4064.0)
	set gg_rct_CITY_WE_Brasov = Rect(4000.0, 5216.0, 4320.0, 5536.0)
	set gg_rct_CITY_WE_Belgrade = Rect( - 576.0, 2880.0,  - 224.0, 3232.0)
	set gg_rct_CITY_WE_Flensburg = Rect( - 8288.0, 19776.0,  - 7936.0, 20160.0)
	set gg_rct_CITY_WE_Roskilde = Rect( - 6464.0, 21184.0,  - 6080.0, 21568.0)
	set gg_rct_CITY_WE_Aarhus = Rect( - 7904.0, 22048.0,  - 7488.0, 22464.0)
	set gg_rct_CITY_WE_Madgeburg = Rect( - 5344.0, 14304.0,  - 4960.0, 14720.0)
	set gg_rct_CITY_EE_Sofia = Rect(2880.0, 32.0, 3264.0, 352.0)
	set gg_rct_CITY_WE_Plock = Rect(608.0, 15680.0, 992.0, 16096.0)
	set gg_rct_CITY_WE_Poznan = Rect( - 2496.0, 15872.0,  - 2112.0, 16224.0)
	set gg_rct_CITY_WE_Kassa = Rect(1056.0, 10848.0, 1344.0, 11136.0)
	set gg_rct_CITY_WE_Varad = Rect(1600.0, 6784.0, 1984.0, 7136.0)
	set gg_rct_CITY_EE_Konigsberg = Rect(224.0, 19296.0, 544.0, 19648.0)
	set gg_rct_CITY_EE_Riga = Rect(2784.0, 22592.0, 3200.0, 22944.0)
	set gg_rct_CITY_WE_Gdansk = Rect( - 1984.0, 19008.0,  - 1600.0, 19360.0)
	set gg_rct_CITY_EE_Hrodna = Rect(3008.0, 18048.0, 3392.0, 18400.0)
	call Rect( - 28544.0,  - 30080.0,  - 28064.0,  - 29344.0)
	call Rect( - 27744.0,  - 30080.0,  - 27456.0,  - 29760.0)
	set gg_rct_CITY_EE_Vilnius = Rect(4224.0, 19488.0, 4608.0, 19776.0)
	set gg_rct_CITY_EE_Caffa = Rect(13056.0, 4960.0, 13408.0, 5280.0)
	set gg_rct_CITY_EE_Pskov = Rect(5696.0, 24768.0, 6048.0, 25088.0)
	set gg_rct_CITY_EE_Reval = Rect(3328.0, 26816.0, 3680.0, 27168.0)
	set gg_rct_CITY_EE_Novgorod = Rect(8608.0, 26144.0, 9024.0, 26528.0)
	set gg_rct_CITY_EE_Polotsk = Rect(6656.0, 21248.0, 7008.0, 21600.0)
	set gg_rct_SHIP_Seine_River = Rect( - 16640.0, 10368.0,  - 13504.0, 13056.0)
	set gg_rct_SHIP_French_River = Rect( - 18944.0, 5312.0,  - 16864.0, 7328.0)
	set gg_rct_SHIP_Spannish_River = Rect( - 28032.0,  - 1120.0,  - 22464.0, 640.0)
	set gg_rct_SHIP_Spannish_River_2 = Rect( - 27264.0, 2784.0,  - 26208.0, 3328.0)
	set gg_rct_SHIP_Spannish_River_3 = Rect( - 26912.0,  - 4320.0,  - 23872.0,  - 2976.0)
	set gg_rct_SHIP_Spannish_River_4 = Rect( - 19328.0,  - 288.0,  - 18592.0, 1568.0)
	set gg_rct_SHIP_Danube_1 = Rect( - 11936.0, 7616.0,  - 448.0, 11424.0)
	set gg_rct_SHIP_Danube_2 = Rect( - 1664.0, 1216.0, 6848.0, 7776.0)
	set gg_rct_SHIP_Swedish_Lake = Rect( - 5472.0, 24704.0,  - 3232.0, 27616.0)
	set gg_rct_CITY_EE_Halych = Rect(3744.0, 10880.0, 4064.0, 11232.0)
	set gg_rct_SHIP_River = Rect( - 12064.0, 11392.0,  - 8832.0, 16576.0)
	set gg_rct_SHIP_Region_Giant = Rect( - 8832.0, 10176.0, 23520.0, 17760.0)
	set gg_rct_SHIP_River_GIANT = Rect(4384.0, 17728.0, 23424.0, 27040.0)
	set gg_rct_CITY_WE_Groningen = Rect( - 10688.0, 17536.0,  - 10304.0, 17888.0)
	set gg_rct_CITY_ME_Tunis = Rect( - 10688.0,  - 9312.0,  - 10336.0,  - 9024.0)
	set gg_rct_CITY_EE_Azaq = Rect(17280.0, 9280.0, 17632.0, 9632.0)
	set gg_rct_CITY_EE_Kiev = Rect(8352.0, 12192.0, 8672.0, 12512.0)
	set gg_rct_CITY_EE_Minsk = Rect(5952.0, 18400.0, 6304.0, 18688.0)
	set gg_rct_CITY_EE_Smolensk = Rect(9120.0, 19872.0, 9408.0, 20192.0)
	set gg_rct_SHIP_Caspian_Sea_and_Mesapotamia = Rect(23328.0,  - 14080.0, 30688.0, 17792.0)
	set gg_rct_CITY_ME_Sinop = Rect(13984.0,  - 288.0, 14336.0, 0.0)
	set gg_rct_CITY_ME_Isparta = Rect(10624.0,  - 7552.0, 11008.0,  - 7200.0)
	set gg_rct_CITY_ME_Kayseri = Rect(15168.0,  - 5792.0, 15552.0,  - 5408.0)
	set gg_rct_CITY_ME_Adana = Rect(15328.0,  - 7712.0, 15648.0,  - 7424.0)
	set gg_rct_CITY_ME_Konya = Rect(12640.0,  - 7104.0, 12992.0,  - 6752.0)
	set gg_rct_CITY_ME_Antioch = Rect(17056.0,  - 8800.0, 17376.0,  - 8512.0)
	set gg_rct_CITY_BYZ_Trebizond = Rect(18432.0,  - 608.0, 18784.0,  - 320.0)
	set gg_rct_CITY_BYZ_Nicosia = Rect(13760.0,  - 11168.0, 14112.0,  - 10752.0)
	set gg_rct_CITY_ME_JERUSALEM = Rect(16768.0,  - 16416.0, 17120.0,  - 16032.0)
	set gg_rct_CITY_ME_Edessa = Rect(18880.0,  - 7616.0, 19232.0,  - 7296.0)
	set gg_rct_CITY_BYZ_Smyrna = Rect(6816.0,  - 6752.0, 7136.0,  - 6464.0)
	set gg_rct_CITY_ME_Ankara = Rect(12512.0,  - 4064.0, 12832.0,  - 3712.0)
	set gg_rct_CITY_BYZ_Nicae = Rect(9056.0,  - 4576.0, 9344.0,  - 4288.0)
	set gg_rct_CITY_ME_Fes = Rect( - 26464.0,  - 8896.0,  - 26144.0,  - 8544.0)
	set gg_rct_CITY_ME_Oran = Rect( - 21632.0,  - 8544.0,  - 21248.0,  - 8224.0)
	set gg_rct_CITY_ME_Algiers = Rect( - 16928.0,  - 8224.0,  - 16608.0,  - 7904.0)
	set gg_rct_CITY_ME_Mahdya = Rect( - 10112.0,  - 11424.0,  - 9760.0,  - 11136.0)
	set gg_rct_CITY_ME_Tripoli = Rect( - 7680.0,  - 16416.0,  - 7328.0,  - 16128.0)
	set gg_rct_CITY_ME_Benghazi = Rect(288.0,  - 17760.0, 608.0,  - 17472.0)
	set gg_rct_SHIP_Lake_Egypt = Rect(9248.0,  - 21376.0, 9984.0,  - 20640.0)
	set gg_rct_CITY_ME_Medina = Rect(24704.0,  - 27648.0, 25088.0,  - 27264.0)
	set gg_rct_CITY_ME_Alexandria = Rect(10816.0,  - 18688.0, 11168.0,  - 18304.0)
	set gg_rct_CITY_ME_Damietta = Rect(13056.0,  - 18016.0, 13408.0,  - 17760.0)
	set gg_rct_CITY_ME_Cairo = Rect(12096.0,  - 21024.0, 12448.0,  - 20704.0)
	set gg_rct_CITY_EE_Timutarakan = Rect(15680.0, 5600.0, 16032.0, 5920.0)
	set gg_rct_CITY_EE_Baia = Rect(6944.0, 7648.0, 7264.0, 7968.0)
	set gg_rct_CITY_EE_Zhytomyr = Rect(5824.0, 12256.0, 6176.0, 12576.0)
	set gg_rct_CITY_EE_Oleshe = Rect(11200.0, 7712.0, 11552.0, 8064.0)
	set gg_rct_CITY_EE_Dnipro = Rect(12480.0, 11136.0, 12832.0, 11456.0)
	set gg_rct_CITY_EE_Moscow = Rect(14880.0, 22944.0, 15200.0, 23232.0)
	set gg_rct_CITY_EE_Bryansk = Rect(11392.0, 16768.0, 11744.0, 17088.0)
	set gg_rct_CITY_ME_Yerevan = Rect(23840.0, 96.0, 24128.0, 384.0)
	set gg_rct_CITY_EE_Sarkel = Rect(19488.0, 11168.0, 19808.0, 11488.0)
	set gg_rct_CITY_BYZ_Kutaisi = Rect(20672.0, 2528.0, 21056.0, 2848.0)
	set gg_rct_CITY_BYZ_Tbilisi = Rect(23776.0, 2368.0, 24160.0, 2720.0)
	set gg_rct_CITY_ME_Damascus = Rect(18336.0,  - 13408.0, 18624.0,  - 13120.0)
	set gg_rct_CITY_ME_Tartus = Rect(17056.0,  - 11648.0, 17376.0,  - 11264.0)
	set gg_rct_CITY_ME_Gaza = Rect(15488.0,  - 17696.0, 15840.0,  - 17376.0)
	set gg_rct_CITY_ME_Mosul = Rect(24896.0,  - 8480.0, 25248.0,  - 8128.0)
	set gg_rct_CITY_ME_Acre = Rect(16480.0,  - 14368.0, 16768.0,  - 14048.0)
	set gg_rct_CITY_ME_Al_Aqaba = Rect(17088.0,  - 19744.0, 17440.0,  - 19456.0)
	set gg_rct_CITY_ME_Quarisiya = Rect(22720.0,  - 10432.0, 23072.0,  - 10048.0)
	set gg_rct_CITY_ME_Tamiya = Rect(20672.0,  - 23232.0, 21056.0,  - 22848.0)
	set gg_rct_CITY_ME_Diyarbakir = Rect(19904.0,  - 5920.0, 20256.0,  - 5632.0)
	set gg_rct_CITY_ME_Erez = Rect(18624.0,  - 3936.0, 18976.0,  - 3616.0)
	set gg_rct_SHIP_Lake_Africa = Rect( - 13632.0,  - 14816.0,  - 12192.0,  - 13376.0)
	set gg_rct_SHIP_Mesapotamia = Rect(17760.0,  - 10400.0, 23360.0,  - 1344.0)
	set gg_rct_SHIP_Ankara_Lake = Rect(12384.0,  - 5984.0, 13824.0,  - 4352.0)
	set gg_rct_SHIP_Italy = Rect( - 10944.0, 3968.0,  - 7680.0, 5120.0)
	set gg_rct_CITY_WE_Salzburg = Rect( - 6528.0, 7808.0,  - 6176.0, 8160.0)
	set gg_rct_CITY_WE_Innsbruck = Rect( - 8864.0, 6912.0,  - 8448.0, 7264.0)
	set gg_rct_CITY_WE_Cologne = Rect( - 11680.0, 14304.0,  - 11264.0, 14752.0)
	set gg_rct_CITY_WE_Frankfurt = Rect( - 9760.0, 12928.0,  - 9472.0, 13280.0)
	set gg_rct_CITY_WE_Hamburg = Rect( - 7552.0, 16928.0,  - 7232.0, 17248.0)
	set gg_rct_CITY_ME_Palma = Rect( - 17472.0,  - 3328.0,  - 17120.0,  - 2976.0)
	call Rect( - 24576.0,  - 1376.0,  - 24224.0,  - 1024.0)
	set gg_rct_CITY_EE_Astrakhan = Rect(23392.0, 10912.0, 23712.0, 11232.0)
	set gg_rct_CITY_EE_Ryazan = Rect(17280.0, 19456.0, 17632.0, 19808.0)
	set gg_rct_CITY_WE_Edinburgh = Rect( - 16896.0, 24032.0,  - 16544.0, 24352.0)
	set gg_rct_CITY_WE_Aberdeen = Rect( - 15904.0, 25952.0,  - 15520.0, 26304.0)
	set gg_rct_CITY_WE_Inverness = Rect( - 17312.0, 26624.0,  - 16896.0, 27008.0)
	set gg_rct_CITY_WE_York = Rect( - 16096.0, 20352.0,  - 15712.0, 20768.0)
	set gg_rct_CITY_WE_Dublin = Rect( - 20448.0, 21440.0,  - 20064.0, 21792.0)
	set gg_rct_CITY_WE_Desmond = Rect( - 22560.0, 19808.0,  - 22272.0, 20128.0)
	set gg_rct_CITY_WE_Caernarfon = Rect( - 18752.0, 19520.0,  - 18400.0, 19872.0)
	set gg_rct_CITY_WE_London = Rect( - 16128.0, 16896.0,  - 15808.0, 17248.0)
	set gg_rct_CITY_WE_Winchester = Rect( - 17952.0, 15904.0,  - 17632.0, 16224.0)
	set gg_rct_CITY_WE_Exeter = Rect( - 19936.0, 16352.0,  - 19648.0, 16672.0)
	set gg_rct_CITY_WE_Caen = Rect( - 17248.0, 12448.0,  - 16928.0, 12832.0)
	set gg_rct_CITY_WE_Rheims = Rect( - 13728.0, 11968.0,  - 13408.0, 12352.0)
	set gg_rct_CITY_WE_Paris = Rect( - 15232.0, 10624.0,  - 14880.0, 10976.0)
	set gg_rct_CITY_WE_Dijon = Rect( - 13856.0, 7872.0,  - 13568.0, 8256.0)
	set gg_rct_CITY_WE_Clermont = Rect( - 16192.0, 5824.0,  - 15840.0, 6208.0)
	set gg_rct_CITY_WE_Toulouse = Rect( - 16864.0, 3392.0,  - 16576.0, 3776.0)
	set gg_rct_CITY_WE_Bordeaux = Rect( - 18880.0, 5568.0,  - 18528.0, 5920.0)
	set gg_rct_CITY_WE_Zaragoza = Rect( - 20288.0, 1216.0,  - 19936.0, 1600.0)
	set gg_rct_CITY_WE_Barcelona = Rect( - 17216.0, 352.0,  - 16896.0, 736.0)
	set gg_rct_CITY_WE_Leon = Rect( - 24512.0, 3744.0,  - 24128.0, 4064.0)
	set gg_rct_CITY_WE_Burgos = Rect( - 22720.0, 2368.0,  - 22432.0, 2752.0)
	set gg_rct_CITY_ME_Madrid = Rect( - 23552.0,  - 256.0,  - 23200.0, 128.0)
	set gg_rct_CITY_WE_Salamanca = Rect( - 25376.0, 1312.0,  - 25056.0, 1632.0)
	set gg_rct_CITY_ME_Lisbon = Rect( - 28736.0,  - 192.0,  - 28352.0, 160.0)
	set gg_rct_CITY_WE_Pamplona = Rect( - 21024.0, 2944.0,  - 20704.0, 3360.0)
	set gg_rct_CITY_WE_Marseille = Rect( - 13792.0, 2144.0,  - 13440.0, 2592.0)
	set gg_rct_CITY_WE_Bruges = Rect( - 13568.0, 14912.0,  - 13216.0, 15296.0)
	set gg_rct_CITY_WE_Antwerp = Rect( - 12736.0, 16128.0,  - 12352.0, 16512.0)
	set gg_rct_CITY_WE_Genoa = Rect( - 10880.0, 3360.0,  - 10528.0, 3712.0)
	set gg_rct_CITY_WE_Milan = Rect( - 10048.0, 5280.0,  - 9696.0, 5600.0)
	set gg_rct_CITY_WE_Venice = Rect( - 6880.0, 3936.0,  - 6560.0, 4256.0)
	set gg_rct_CITY_WE_Bologna = Rect( - 8224.0, 3040.0,  - 7904.0, 3392.0)
	set gg_rct_CITY_WE_Pisa = Rect( - 8960.0, 1760.0,  - 8608.0, 2176.0)
	set gg_rct_CITY_WE_Ancona = Rect( - 6624.0, 1088.0,  - 6304.0, 1472.0)
	set gg_rct_CITY_WE_Rome = Rect( - 7296.0,  - 960.0,  - 6944.0,  - 544.0)
	set gg_rct_CITY_ME_Granada = Rect( - 23712.0,  - 4704.0,  - 23392.0,  - 4416.0)
	set gg_rct_CITY_ME_Cordoba = Rect( - 25184.0,  - 3168.0,  - 24864.0,  - 2848.0)
	set gg_rct_CITY_ME_Murcia = Rect( - 21888.0,  - 4416.0,  - 21536.0,  - 4032.0)
	set gg_rct_CITY_ME_Valencia = Rect( - 20928.0,  - 2304.0,  - 20576.0,  - 1888.0)
	set gg_rct_CITY_WE_Nuremburg = Rect( - 7776.0, 11040.0,  - 7456.0, 11392.0)
	set gg_rct_CITY_WE_Bern = Rect( - 11648.0, 7072.0,  - 11296.0, 7360.0)
	set gg_rct_CITY_WE_Lyon = Rect( - 13728.0, 4992.0,  - 13408.0, 5376.0)
	set gg_rct_CITY_WE_Lund = Rect( - 5152.0, 21696.0,  - 4832.0, 22080.0)
	set gg_rct_CITY_WE_Skara = Rect( - 5248.0, 24416.0,  - 4960.0, 24768.0)
	set gg_rct_CITY_WE_Oslo = Rect( - 6688.0, 28096.0,  - 6368.0, 28480.0)
	set gg_rct_CITY_WE_Eikundarsund = Rect( - 9024.0, 26496.0,  - 8736.0, 26880.0)
	set gg_rct_CITY_WE_Bergen = Rect( - 10048.0, 28224.0,  - 9696.0, 28576.0)
	set gg_rct_CITY_WE_Visby = Rect( - 1408.0, 23776.0,  - 1152.0, 24096.0)
	set gg_rct_CITY_WE_Nykoping = Rect( - 2720.0, 26176.0,  - 2432.0, 26560.0)
	set gg_rct_CITY_ME_Silves = Rect( - 28032.0,  - 2944.0,  - 27680.0,  - 2560.0)
	set gg_rct_CITY_ME_Marakesh = Rect( - 29760.0,  - 10016.0,  - 29408.0,  - 9632.0)
	set gg_rct_CITY_ME_Luxor = Rect(15296.0,  - 26976.0, 15648.0,  - 26624.0)
	set gg_rct_CITY_WE_Rennes = Rect( - 20544.0, 12032.0,  - 20160.0, 12416.0)
	set gg_rct_CITY_WE_Angers = Rect( - 18368.0, 10624.0,  - 18016.0, 11008.0)
	set gg_rct_CITY_WE_Ajaccio = Rect( - 10880.0,  - 576.0,  - 10528.0,  - 224.0)
	set gg_rct_CITY_WE_Cagliari = Rect( - 11104.0,  - 4768.0,  - 10816.0,  - 4448.0)
	set gg_rct_CITY_WE_Naples = Rect( - 5728.0,  - 2912.0,  - 5440.0,  - 2560.0)
	set gg_rct_CITY_WE_Reggio = Rect( - 3904.0,  - 6720.0,  - 3552.0,  - 6336.0)
	set gg_rct_CITY_WE_Bari = Rect( - 3616.0,  - 3040.0,  - 3328.0,  - 2688.0)
	set gg_rct_CITY_WE_Palermo = Rect( - 7200.0,  - 8000.0,  - 6880.0,  - 7616.0)
	set gg_rct_CITY_WE_Syracuse = Rect( - 5504.0,  - 9344.0,  - 5248.0,  - 9056.0)
	set gg_rct_CITY_WE_Metz = Rect( - 11616.0, 10848.0,  - 11296.0, 11168.0)
	set gg_rct_CITY_BYZ_Ragusa = Rect( - 1792.0,  - 320.0,  - 1440.0, 64.0)
	set gg_rct_CITY_BYZ_Athens = Rect(3232.0,  - 7488.0, 3552.0,  - 7136.0)
	set gg_rct_CITY_BYZ_Rhodes = Rect(8224.0,  - 10496.0, 8512.0,  - 10208.0)
	set gg_rct_CITY_EE_Turku = Rect(1344.0, 29280.0, 1696.0, 29632.0)
	set gg_rct_CITY_BYZ_Nikomedaia = Rect(10848.0,  - 2144.0, 11136.0,  - 1824.0)
	set gg_rct_CITY_ME_Badajoz = Rect( - 26496.0,  - 1568.0,  - 26144.0,  - 1248.0)
	set gg_rct_CITY_WE_Oporto = Rect( - 27168.0, 2528.0,  - 26880.0, 2816.0)
	set gg_rct_CITY_WE_Stockholm = Rect( - 2016.0, 27552.0,  - 1696.0, 27936.0)
	set gg_rct_CITY_WE_Kalmar = Rect( - 3488.0, 23040.0,  - 3200.0, 23392.0)
	set gg_rct_CITY_BYZ_Corinth = Rect(2016.0,  - 7904.0, 2336.0,  - 7584.0)
	set gg_rct_CITY_BYZ_Arta = Rect(640.0,  - 5760.0, 992.0,  - 5376.0)
	set gg_rct_CITY_BYZ_Candia = Rect(5216.0,  - 12384.0, 5504.0,  - 12064.0)
	set gg_rct_CITY_ME_Kerak = Rect(18272.0,  - 17504.0, 18656.0,  - 17056.0)
	set gg_rct_CITY_ME_Baghdad = Rect(26848.0,  - 11680.0, 27168.0,  - 11360.0)
	set gg_rct_CITY_BYZ_Canakkale = Rect(6464.0,  - 4672.0, 6816.0,  - 4288.0)
	set gg_rct_CITY_EE_Syrt = Rect(20672.0, 21312.0, 21024.0, 21696.0)
	set gg_rct_CITY_WE_Buda = Rect( - 1824.0, 5792.0,  - 1440.0, 6144.0)
	set gg_rct_CITY_ME_Melilla = Rect( - 23264.0,  - 8992.0,  - 22944.0,  - 8704.0)
	set gg_rct_CITY_ME_Beleb_el_Anab = Rect( - 13504.0,  - 8640.0,  - 13184.0,  - 8384.0)
	set gg_rct_CITY_ME_Tabriz = Rect(26048.0,  - 2848.0, 26400.0,  - 2528.0)
	set gg_rct_CITY_ME_Alamut = Rect(28864.0,  - 3360.0, 29152.0,  - 3040.0)
	set gg_rct_CITY_ME_Baku = Rect(28064.0, 2592.0, 28352.0, 2880.0)
	set gg_rct_CITY_ME_Kermanshah = Rect(27488.0,  - 5984.0, 27808.0,  - 5664.0)
endfunction

function InitTrig_Archer_1 takes nothing returns nothing
	set gg_trg_Archer_1 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Archer_1, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_Archer_1, Condition(ref_function_Trig_Archer_1_Conditions))
	call TriggerAddAction(gg_trg_Archer_1, ref_function_Trig_Archer_1_Actions)
endfunction

function InitTrig_Archer_1_Byzantine takes nothing returns nothing
	set gg_trg_Archer_1_Byzantine = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Archer_1_Byzantine, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_Archer_1_Byzantine, Condition(ref_function_Trig_Archer_1_Byzantine_Conditions))
	call TriggerAddAction(gg_trg_Archer_1_Byzantine, ref_function_Trig_Archer_1_Byzantine_Actions)
endfunction

function InitTrig_Archer_2 takes nothing returns nothing
	set gg_trg_Archer_2 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Archer_2, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_Archer_2, Condition(ref_function_Trig_Archer_2_Conditions))
	call TriggerAddAction(gg_trg_Archer_2, ref_function_Trig_Archer_2_Actions)
endfunction

function InitTrig_Archer_2_Byzantine takes nothing returns nothing
	set gg_trg_Archer_2_Byzantine = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Archer_2_Byzantine, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_Archer_2_Byzantine, Condition(ref_function_Trig_Archer_2_Byzantine_Conditions))
	call TriggerAddAction(gg_trg_Archer_2_Byzantine, ref_function_Trig_Archer_2_Byzantine_Actions)
endfunction

function InitTrig_Arquebusers takes nothing returns nothing
	set gg_trg_Arquebusers = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Arquebusers, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_Arquebusers, Condition(ref_function_Trig_Arquebusers_Conditions))
	call TriggerAddAction(gg_trg_Arquebusers, ref_function_Trig_Arquebusers_Actions)
endfunction

function InitTrig_Barracks takes nothing returns nothing
	set gg_trg_Barracks = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Barracks, EVENT_PLAYER_UNIT_CONSTRUCT_FINISH)
	call TriggerAddCondition(gg_trg_Barracks, Condition(ref_function_Trig_Barracks_Conditions))
	call TriggerAddAction(gg_trg_Barracks, ref_function_Trig_Barracks_Actions)
endfunction

function InitTrig_CITY_HALL takes nothing returns nothing
	set gg_trg_CITY_HALL = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_CITY_HALL, EVENT_PLAYER_UNIT_UPGRADE_FINISH)
	call TriggerAddCondition(gg_trg_CITY_HALL, Condition(ref_function_Trig_CITY_HALL_Conditions))
	call TriggerAddAction(gg_trg_CITY_HALL, ref_function_Trig_CITY_HALL_Actions)
endfunction

function InitTrig_Capitol_1_Dummies takes nothing returns nothing
	set gg_trg_Capitol_1_Dummies = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Capitol_1_Dummies, EVENT_PLAYER_UNIT_SPELL_CAST)
	call TriggerAddCondition(gg_trg_Capitol_1_Dummies, Condition(ref_function_Trig_Capitol_1_Dummies_Conditions))
	call TriggerAddAction(gg_trg_Capitol_1_Dummies, ref_function_Trig_Capitol_1_Dummies_Actions)
endfunction

function InitTrig_Capitol_2_Dummies takes nothing returns nothing
	set gg_trg_Capitol_2_Dummies = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Capitol_2_Dummies, EVENT_PLAYER_UNIT_UPGRADE_FINISH)
	call TriggerAddCondition(gg_trg_Capitol_2_Dummies, Condition(ref_function_Trig_Capitol_2_Dummies_Conditions))
	call TriggerAddAction(gg_trg_Capitol_2_Dummies, ref_function_Trig_Capitol_2_Dummies_Actions)
endfunction

function InitTrig_Capitol_3_Dummies takes nothing returns nothing
	set gg_trg_Capitol_3_Dummies = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Capitol_3_Dummies, EVENT_PLAYER_UNIT_UPGRADE_FINISH)
	call TriggerAddCondition(gg_trg_Capitol_3_Dummies, Condition(ref_function_Trig_Capitol_3_Dummies_Conditions))
	call TriggerAddAction(gg_trg_Capitol_3_Dummies, ref_function_Trig_Capitol_3_Dummies_Actions)
endfunction

function InitTrig_Capitol_Castle_UP_WE_T3 takes nothing returns nothing
	set gg_trg_Capitol_Castle_UP_WE_T3 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Capitol_Castle_UP_WE_T3, EVENT_PLAYER_UNIT_UPGRADE_FINISH)
	call TriggerAddCondition(gg_trg_Capitol_Castle_UP_WE_T3, Condition(ref_function_Trig_Capitol_Castle_UP_WE_T3_Conditions))
	call TriggerAddAction(gg_trg_Capitol_Castle_UP_WE_T3, ref_function_Trig_Capitol_Castle_UP_WE_T3_Actions)
endfunction

function InitTrig_Capitol_Castle_Up_BYZ_T3 takes nothing returns nothing
	set gg_trg_Capitol_Castle_Up_BYZ_T3 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Capitol_Castle_Up_BYZ_T3, EVENT_PLAYER_UNIT_UPGRADE_FINISH)
	call TriggerAddCondition(gg_trg_Capitol_Castle_Up_BYZ_T3, Condition(ref_function_Trig_Capitol_Castle_Up_BYZ_T3_Conditions))
	call TriggerAddAction(gg_trg_Capitol_Castle_Up_BYZ_T3, ref_function_Trig_Capitol_Castle_Up_BYZ_T3_Actions)
endfunction

function InitTrig_Capitol_Castle_Up_EE_T3 takes nothing returns nothing
	set gg_trg_Capitol_Castle_Up_EE_T3 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Capitol_Castle_Up_EE_T3, EVENT_PLAYER_UNIT_UPGRADE_FINISH)
	call TriggerAddCondition(gg_trg_Capitol_Castle_Up_EE_T3, Condition(ref_function_Trig_Capitol_Castle_Up_EE_T3_Conditions))
	call TriggerAddAction(gg_trg_Capitol_Castle_Up_EE_T3, ref_function_Trig_Capitol_Castle_Up_EE_T3_Actions)
endfunction

function InitTrig_Capitol_Castle_Up_ME_T3 takes nothing returns nothing
	set gg_trg_Capitol_Castle_Up_ME_T3 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Capitol_Castle_Up_ME_T3, EVENT_PLAYER_UNIT_UPGRADE_FINISH)
	call TriggerAddCondition(gg_trg_Capitol_Castle_Up_ME_T3, Condition(ref_function_Trig_Capitol_Castle_Up_ME_T3_Conditions))
	call TriggerAddAction(gg_trg_Capitol_Castle_Up_ME_T3, ref_function_Trig_Capitol_Castle_Up_ME_T3_Actions)
endfunction

function InitTrig_Capitol_Keep_UPG_WE_T2 takes nothing returns nothing
	set gg_trg_Capitol_Keep_UPG_WE_T2 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Capitol_Keep_UPG_WE_T2, EVENT_PLAYER_UNIT_UPGRADE_FINISH)
	call TriggerAddCondition(gg_trg_Capitol_Keep_UPG_WE_T2, Condition(ref_function_Trig_Capitol_Keep_UPG_WE_T2_Conditions))
	call TriggerAddAction(gg_trg_Capitol_Keep_UPG_WE_T2, ref_function_Trig_Capitol_Keep_UPG_WE_T2_Actions)
endfunction

function InitTrig_Capitol_Keep_Upg_BYZ_T2 takes nothing returns nothing
	set gg_trg_Capitol_Keep_Upg_BYZ_T2 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Capitol_Keep_Upg_BYZ_T2, EVENT_PLAYER_UNIT_UPGRADE_FINISH)
	call TriggerAddCondition(gg_trg_Capitol_Keep_Upg_BYZ_T2, Condition(ref_function_Trig_Capitol_Keep_Upg_BYZ_T2_Conditions))
	call TriggerAddAction(gg_trg_Capitol_Keep_Upg_BYZ_T2, ref_function_Trig_Capitol_Keep_Upg_BYZ_T2_Actions)
endfunction

function InitTrig_Capitol_Keep_Upg_EE_T2 takes nothing returns nothing
	set gg_trg_Capitol_Keep_Upg_EE_T2 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Capitol_Keep_Upg_EE_T2, EVENT_PLAYER_UNIT_UPGRADE_FINISH)
	call TriggerAddCondition(gg_trg_Capitol_Keep_Upg_EE_T2, Condition(ref_function_Trig_Capitol_Keep_Upg_EE_T2_Conditions))
	call TriggerAddAction(gg_trg_Capitol_Keep_Upg_EE_T2, ref_function_Trig_Capitol_Keep_Upg_EE_T2_Actions)
endfunction

function InitTrig_Capitol_Keep_Upg_ME_T2 takes nothing returns nothing
	set gg_trg_Capitol_Keep_Upg_ME_T2 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Capitol_Keep_Upg_ME_T2, EVENT_PLAYER_UNIT_UPGRADE_FINISH)
	call TriggerAddCondition(gg_trg_Capitol_Keep_Upg_ME_T2, Condition(ref_function_Trig_Capitol_Keep_Upg_ME_T2_Conditions))
	call TriggerAddAction(gg_trg_Capitol_Keep_Upg_ME_T2, ref_function_Trig_Capitol_Keep_Upg_ME_T2_Actions)
endfunction

function InitTrig_Capturing_Ore_15g takes nothing returns nothing
	set gg_trg_Capturing_Ore_15g = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Capturing_Ore_15g, EVENT_PLAYER_UNIT_ATTACKED)
	call TriggerAddCondition(gg_trg_Capturing_Ore_15g, Condition(ref_function_Trig_Capturing_Ore_15g_Conditions))
	call TriggerAddAction(gg_trg_Capturing_Ore_15g, ref_function_Trig_Capturing_Ore_15g_Actions)
endfunction

function InitTrig_Capturing_Ore_25g takes nothing returns nothing
	set gg_trg_Capturing_Ore_25g = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Capturing_Ore_25g, EVENT_PLAYER_UNIT_ATTACKED)
	call TriggerAddCondition(gg_trg_Capturing_Ore_25g, Condition(ref_function_Trig_Capturing_Ore_25g_Conditions))
	call TriggerAddAction(gg_trg_Capturing_Ore_25g, ref_function_Trig_Capturing_Ore_25g_Actions)
endfunction

function InitTrig_Capturing_Ore_40g takes nothing returns nothing
	set gg_trg_Capturing_Ore_40g = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Capturing_Ore_40g, EVENT_PLAYER_UNIT_ATTACKED)
	call TriggerAddCondition(gg_trg_Capturing_Ore_40g, Condition(ref_function_Trig_Capturing_Ore_40g_Conditions))
	call TriggerAddAction(gg_trg_Capturing_Ore_40g, ref_function_Trig_Capturing_Ore_40g_Actions)
endfunction

function InitTrig_Capturing_Ore_50g takes nothing returns nothing
	set gg_trg_Capturing_Ore_50g = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Capturing_Ore_50g, EVENT_PLAYER_UNIT_ATTACKED)
	call TriggerAddCondition(gg_trg_Capturing_Ore_50g, Condition(ref_function_Trig_Capturing_Ore_50g_Conditions))
	call TriggerAddAction(gg_trg_Capturing_Ore_50g, ref_function_Trig_Capturing_Ore_50g_Actions)
endfunction

function InitTrig_Castle_BYZ_T1 takes nothing returns nothing
	set gg_trg_Castle_BYZ_T1 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Castle_BYZ_T1, EVENT_PLAYER_UNIT_CONSTRUCT_FINISH)
	call TriggerAddCondition(gg_trg_Castle_BYZ_T1, Condition(ref_function_Trig_Castle_BYZ_T1_Conditions))
	call TriggerAddAction(gg_trg_Castle_BYZ_T1, ref_function_Trig_Castle_BYZ_T1_Actions)
endfunction

function InitTrig_Castle_BYZ_T2 takes nothing returns nothing
	set gg_trg_Castle_BYZ_T2 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Castle_BYZ_T2, EVENT_PLAYER_UNIT_UPGRADE_FINISH)
	call TriggerAddCondition(gg_trg_Castle_BYZ_T2, Condition(ref_function_Trig_Castle_BYZ_T2_Conditions))
	call TriggerAddAction(gg_trg_Castle_BYZ_T2, ref_function_Trig_Castle_BYZ_T2_Actions)
endfunction

function InitTrig_Castle_BYZ_T3 takes nothing returns nothing
	set gg_trg_Castle_BYZ_T3 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Castle_BYZ_T3, EVENT_PLAYER_UNIT_UPGRADE_FINISH)
	call TriggerAddCondition(gg_trg_Castle_BYZ_T3, Condition(ref_function_Trig_Castle_BYZ_T3_Conditions))
	call TriggerAddAction(gg_trg_Castle_BYZ_T3, ref_function_Trig_Castle_BYZ_T3_Actions)
endfunction

function InitTrig_Castle_EE_T1 takes nothing returns nothing
	set gg_trg_Castle_EE_T1 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Castle_EE_T1, EVENT_PLAYER_UNIT_CONSTRUCT_FINISH)
	call TriggerAddCondition(gg_trg_Castle_EE_T1, Condition(ref_function_Trig_Castle_EE_T1_Conditions))
	call TriggerAddAction(gg_trg_Castle_EE_T1, ref_function_Trig_Castle_EE_T1_Actions)
endfunction

function InitTrig_Castle_EE_T2 takes nothing returns nothing
	set gg_trg_Castle_EE_T2 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Castle_EE_T2, EVENT_PLAYER_UNIT_UPGRADE_FINISH)
	call TriggerAddCondition(gg_trg_Castle_EE_T2, Condition(ref_function_Trig_Castle_EE_T2_Conditions))
	call TriggerAddAction(gg_trg_Castle_EE_T2, ref_function_Trig_Castle_EE_T2_Actions)
endfunction

function InitTrig_Castle_EE_T3 takes nothing returns nothing
	set gg_trg_Castle_EE_T3 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Castle_EE_T3, EVENT_PLAYER_UNIT_UPGRADE_FINISH)
	call TriggerAddCondition(gg_trg_Castle_EE_T3, Condition(ref_function_Trig_Castle_EE_T3_Conditions))
	call TriggerAddAction(gg_trg_Castle_EE_T3, ref_function_Trig_Castle_EE_T3_Actions)
endfunction

function InitTrig_Castle_ME_T3 takes nothing returns nothing
	set gg_trg_Castle_ME_T3 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Castle_ME_T3, EVENT_PLAYER_UNIT_UPGRADE_FINISH)
	call TriggerAddCondition(gg_trg_Castle_ME_T3, Condition(ref_function_Trig_Castle_ME_T3_Conditions))
	call TriggerAddAction(gg_trg_Castle_ME_T3, ref_function_Trig_Castle_ME_T3_Actions)
endfunction

function InitTrig_Castle_ME__T1 takes nothing returns nothing
	set gg_trg_Castle_ME__T1 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Castle_ME__T1, EVENT_PLAYER_UNIT_CONSTRUCT_FINISH)
	call TriggerAddCondition(gg_trg_Castle_ME__T1, Condition(ref_function_Trig_Castle_ME__T1_Conditions))
	call TriggerAddAction(gg_trg_Castle_ME__T1, ref_function_Trig_Castle_ME__T1_Actions)
endfunction

function InitTrig_Castle_ME__T2 takes nothing returns nothing
	set gg_trg_Castle_ME__T2 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Castle_ME__T2, EVENT_PLAYER_UNIT_UPGRADE_FINISH)
	call TriggerAddCondition(gg_trg_Castle_ME__T2, Condition(ref_function_Trig_Castle_ME__T2_Conditions))
	call TriggerAddAction(gg_trg_Castle_ME__T2, ref_function_Trig_Castle_ME__T2_Actions)
endfunction

function InitTrig_Castle_WE_T1 takes nothing returns nothing
	set gg_trg_Castle_WE_T1 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Castle_WE_T1, EVENT_PLAYER_UNIT_CONSTRUCT_FINISH)
	call TriggerAddCondition(gg_trg_Castle_WE_T1, Condition(ref_function_Trig_Castle_WE_T1_Conditions))
	call TriggerAddAction(gg_trg_Castle_WE_T1, ref_function_Trig_Castle_WE_T1_Actions)
endfunction

function InitTrig_Castle_WE_T2 takes nothing returns nothing
	set gg_trg_Castle_WE_T2 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Castle_WE_T2, EVENT_PLAYER_UNIT_UPGRADE_FINISH)
	call TriggerAddCondition(gg_trg_Castle_WE_T2, Condition(ref_function_Trig_Castle_WE_T2_Conditions))
	call TriggerAddAction(gg_trg_Castle_WE_T2, ref_function_Trig_Castle_WE_T2_Actions)
endfunction

function InitTrig_Castle_WE_T3 takes nothing returns nothing
	set gg_trg_Castle_WE_T3 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Castle_WE_T3, EVENT_PLAYER_UNIT_UPGRADE_FINISH)
	call TriggerAddCondition(gg_trg_Castle_WE_T3, Condition(ref_function_Trig_Castle_WE_T3_Conditions))
	call TriggerAddAction(gg_trg_Castle_WE_T3, ref_function_Trig_Castle_WE_T3_Actions)
endfunction

function InitTrig_Convert_V2 takes nothing returns nothing
	set gg_trg_Convert_V2 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Convert_V2, EVENT_PLAYER_UNIT_SPELL_EFFECT)
	call TriggerAddCondition(gg_trg_Convert_V2, Condition(ref_function_Trig_Convert_V2_Conditions))
	call TriggerAddAction(gg_trg_Convert_V2, ref_function_Trig_Convert_V2_Actions)
endfunction

function InitTrig_Disabled_units_Byzantine takes nothing returns nothing
	set gg_trg_Disabled_units_Byzantine = CreateTrigger()
	call TriggerRegisterTimerEventSingle(gg_trg_Disabled_units_Byzantine, 0.10)
	call TriggerAddAction(gg_trg_Disabled_units_Byzantine, ref_function_Trig_Disabled_units_Byzantine_Actions)
endfunction

function InitTrig_Disabled_units_EE takes nothing returns nothing
	set gg_trg_Disabled_units_EE = CreateTrigger()
	call TriggerRegisterTimerEventSingle(gg_trg_Disabled_units_EE, 0.10)
	call TriggerAddAction(gg_trg_Disabled_units_EE, ref_function_Trig_Disabled_units_EE_Actions)
endfunction

function InitTrig_Disabled_units_ME takes nothing returns nothing
	set gg_trg_Disabled_units_ME = CreateTrigger()
	call TriggerRegisterTimerEventSingle(gg_trg_Disabled_units_ME, 0.10)
	call TriggerAddAction(gg_trg_Disabled_units_ME, ref_function_Trig_Disabled_units_ME_Actions)
endfunction

function InitTrig_Disabled_units_at_beginning takes nothing returns nothing
	set gg_trg_Disabled_units_at_beginning = CreateTrigger()
	call TriggerRegisterTimerEventSingle(gg_trg_Disabled_units_at_beginning, 0.10)
	call TriggerAddAction(gg_trg_Disabled_units_at_beginning, ref_function_Trig_Disabled_units_at_beginning_Actions)
endfunction

function InitTrig_EE_Archer_1 takes nothing returns nothing
	set gg_trg_EE_Archer_1 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_EE_Archer_1, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_EE_Archer_1, Condition(ref_function_Trig_EE_Archer_1_Conditions))
	call TriggerAddAction(gg_trg_EE_Archer_1, ref_function_Trig_EE_Archer_1_Actions)
endfunction

function InitTrig_EE_Archer_2 takes nothing returns nothing
	set gg_trg_EE_Archer_2 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_EE_Archer_2, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_EE_Archer_2, Condition(ref_function_Trig_EE_Archer_2_Conditions))
	call TriggerAddAction(gg_trg_EE_Archer_2, ref_function_Trig_EE_Archer_2_Actions)
endfunction

function InitTrig_EE_Heavy_Cavalry_1 takes nothing returns nothing
	set gg_trg_EE_Heavy_Cavalry_1 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_EE_Heavy_Cavalry_1, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_EE_Heavy_Cavalry_1, Condition(ref_function_Trig_EE_Heavy_Cavalry_1_Conditions))
	call TriggerAddAction(gg_trg_EE_Heavy_Cavalry_1, ref_function_Trig_EE_Heavy_Cavalry_1_Actions)
endfunction

function InitTrig_EE_Heavy_Cavalry_2 takes nothing returns nothing
	set gg_trg_EE_Heavy_Cavalry_2 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_EE_Heavy_Cavalry_2, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_EE_Heavy_Cavalry_2, Condition(ref_function_Trig_EE_Heavy_Cavalry_2_Conditions))
	call TriggerAddAction(gg_trg_EE_Heavy_Cavalry_2, ref_function_Trig_EE_Heavy_Cavalry_2_Actions)
endfunction

function InitTrig_EE_Heavy_Infantry_1 takes nothing returns nothing
	set gg_trg_EE_Heavy_Infantry_1 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_EE_Heavy_Infantry_1, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_EE_Heavy_Infantry_1, Condition(ref_function_Trig_EE_Heavy_Infantry_1_Conditions))
	call TriggerAddAction(gg_trg_EE_Heavy_Infantry_1, ref_function_Trig_EE_Heavy_Infantry_1_Actions)
endfunction

function InitTrig_EE_Heavy_Infantry_2 takes nothing returns nothing
	set gg_trg_EE_Heavy_Infantry_2 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_EE_Heavy_Infantry_2, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_EE_Heavy_Infantry_2, Condition(ref_function_Trig_EE_Heavy_Infantry_2_Conditions))
	call TriggerAddAction(gg_trg_EE_Heavy_Infantry_2, ref_function_Trig_EE_Heavy_Infantry_2_Actions)
endfunction

function InitTrig_EE_Light_Cavalry_1 takes nothing returns nothing
	set gg_trg_EE_Light_Cavalry_1 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_EE_Light_Cavalry_1, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_EE_Light_Cavalry_1, Condition(ref_function_Trig_EE_Light_Cavalry_1_Conditions))
	call TriggerAddAction(gg_trg_EE_Light_Cavalry_1, ref_function_Trig_EE_Light_Cavalry_1_Actions)
endfunction

function InitTrig_EE_Missile_Cavalry_1 takes nothing returns nothing
	set gg_trg_EE_Missile_Cavalry_1 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_EE_Missile_Cavalry_1, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_EE_Missile_Cavalry_1, Condition(ref_function_Trig_EE_Missile_Cavalry_1_Conditions))
	call TriggerAddAction(gg_trg_EE_Missile_Cavalry_1, ref_function_Trig_EE_Missile_Cavalry_1_Actions)
endfunction

function InitTrig_EE_Missile_Cavalry_2 takes nothing returns nothing
	set gg_trg_EE_Missile_Cavalry_2 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_EE_Missile_Cavalry_2, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_EE_Missile_Cavalry_2, Condition(ref_function_Trig_EE_Missile_Cavalry_2_Conditions))
	call TriggerAddAction(gg_trg_EE_Missile_Cavalry_2, ref_function_Trig_EE_Missile_Cavalry_2_Actions)
endfunction

function InitTrig_EE_Pikeman_1 takes nothing returns nothing
	set gg_trg_EE_Pikeman_1 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_EE_Pikeman_1, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_EE_Pikeman_1, Condition(ref_function_Trig_EE_Pikeman_1_Conditions))
	call TriggerAddAction(gg_trg_EE_Pikeman_1, ref_function_Trig_EE_Pikeman_1_Actions)
endfunction

function InitTrig_EE_Pikeman_2 takes nothing returns nothing
	set gg_trg_EE_Pikeman_2 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_EE_Pikeman_2, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_EE_Pikeman_2, Condition(ref_function_Trig_EE_Pikeman_2_Conditions))
	call TriggerAddAction(gg_trg_EE_Pikeman_2, ref_function_Trig_EE_Pikeman_2_Actions)
endfunction

function InitTrig_EE_Skirmisher_1 takes nothing returns nothing
	set gg_trg_EE_Skirmisher_1 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_EE_Skirmisher_1, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_EE_Skirmisher_1, Condition(ref_function_Trig_EE_Skirmisher_1_Conditions))
	call TriggerAddAction(gg_trg_EE_Skirmisher_1, ref_function_Trig_EE_Skirmisher_1_Actions)
endfunction

function InitTrig_EE_Spearmen_1_Copy takes nothing returns nothing
	set gg_trg_EE_Spearmen_1_Copy = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_EE_Spearmen_1_Copy, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_EE_Spearmen_1_Copy, Condition(ref_function_Trig_EE_Spearmen_1_Copy_Conditions))
	call TriggerAddAction(gg_trg_EE_Spearmen_1_Copy, ref_function_Trig_EE_Spearmen_1_Copy_Actions)
endfunction

function InitTrig_EE_Spearmen_2_Copy takes nothing returns nothing
	set gg_trg_EE_Spearmen_2_Copy = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_EE_Spearmen_2_Copy, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_EE_Spearmen_2_Copy, Condition(ref_function_Trig_EE_Spearmen_2_Copy_Conditions))
	call TriggerAddAction(gg_trg_EE_Spearmen_2_Copy, ref_function_Trig_EE_Spearmen_2_Copy_Actions)
endfunction

function InitTrig_F9 takes nothing returns nothing
	set gg_trg_F9 = CreateTrigger()
	call TriggerRegisterTimerEventSingle(gg_trg_F9, 1.00)
	call TriggerAddAction(gg_trg_F9, ref_function_Trig_F9_Actions)
endfunction

function InitTrig_FarmHouse takes nothing returns nothing
	set gg_trg_FarmHouse = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_FarmHouse, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_FarmHouse, Condition(ref_function_Trig_FarmHouse_Conditions))
	call TriggerAddAction(gg_trg_FarmHouse, ref_function_Trig_FarmHouse_Actions)
endfunction

function InitTrig_FarmHouse_Byzantine takes nothing returns nothing
	set gg_trg_FarmHouse_Byzantine = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_FarmHouse_Byzantine, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_FarmHouse_Byzantine, Condition(ref_function_Trig_FarmHouse_Byzantine_Conditions))
	call TriggerAddAction(gg_trg_FarmHouse_Byzantine, ref_function_Trig_FarmHouse_Byzantine_Actions)
endfunction

function InitTrig_FarmHouse_EE_Copy takes nothing returns nothing
	set gg_trg_FarmHouse_EE_Copy = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_FarmHouse_EE_Copy, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_FarmHouse_EE_Copy, Condition(ref_function_Trig_FarmHouse_EE_Copy_Conditions))
	call TriggerAddAction(gg_trg_FarmHouse_EE_Copy, ref_function_Trig_FarmHouse_EE_Copy_Actions)
endfunction

function InitTrig_Gate_Closing_IronGate_H takes nothing returns nothing
	set gg_trg_Gate_Closing_IronGate_H = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Gate_Closing_IronGate_H, EVENT_PLAYER_UNIT_SPELL_CAST)
	call TriggerAddCondition(gg_trg_Gate_Closing_IronGate_H, Condition(ref_function_Trig_Gate_Closing_IronGate_H_Conditions))
	call TriggerAddAction(gg_trg_Gate_Closing_IronGate_H, ref_function_Trig_Gate_Closing_IronGate_H_Actions)
endfunction

function InitTrig_Gate_Closing_IronGate_H_ME takes nothing returns nothing
	set gg_trg_Gate_Closing_IronGate_H_ME = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Gate_Closing_IronGate_H_ME, EVENT_PLAYER_UNIT_SPELL_CAST)
	call TriggerAddCondition(gg_trg_Gate_Closing_IronGate_H_ME, Condition(ref_function_Trig_Gate_Closing_IronGate_H_ME_Conditions))
	call TriggerAddAction(gg_trg_Gate_Closing_IronGate_H_ME, ref_function_Trig_Gate_Closing_IronGate_H_ME_Actions)
endfunction

function InitTrig_Gate_Closing_IronGate_V takes nothing returns nothing
	set gg_trg_Gate_Closing_IronGate_V = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Gate_Closing_IronGate_V, EVENT_PLAYER_UNIT_SPELL_CAST)
	call TriggerAddCondition(gg_trg_Gate_Closing_IronGate_V, Condition(ref_function_Trig_Gate_Closing_IronGate_V_Conditions))
	call TriggerAddAction(gg_trg_Gate_Closing_IronGate_V, ref_function_Trig_Gate_Closing_IronGate_V_Actions)
endfunction

function InitTrig_Gate_Closing_IronGate_V_ME takes nothing returns nothing
	set gg_trg_Gate_Closing_IronGate_V_ME = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Gate_Closing_IronGate_V_ME, EVENT_PLAYER_UNIT_SPELL_CAST)
	call TriggerAddCondition(gg_trg_Gate_Closing_IronGate_V_ME, Condition(ref_function_Trig_Gate_Closing_IronGate_V_ME_Conditions))
	call TriggerAddAction(gg_trg_Gate_Closing_IronGate_V_ME, ref_function_Trig_Gate_Closing_IronGate_V_ME_Actions)
endfunction

function InitTrig_Gate_Closing_WoodGate_H takes nothing returns nothing
	set gg_trg_Gate_Closing_WoodGate_H = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Gate_Closing_WoodGate_H, EVENT_PLAYER_UNIT_SPELL_CAST)
	call TriggerAddCondition(gg_trg_Gate_Closing_WoodGate_H, Condition(ref_function_Trig_Gate_Closing_WoodGate_H_Conditions))
	call TriggerAddAction(gg_trg_Gate_Closing_WoodGate_H, ref_function_Trig_Gate_Closing_WoodGate_H_Actions)
endfunction

function InitTrig_Gate_Closing_WoodGate_H_ME takes nothing returns nothing
	set gg_trg_Gate_Closing_WoodGate_H_ME = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Gate_Closing_WoodGate_H_ME, EVENT_PLAYER_UNIT_SPELL_CAST)
	call TriggerAddCondition(gg_trg_Gate_Closing_WoodGate_H_ME, Condition(ref_function_Trig_Gate_Closing_WoodGate_H_ME_Conditions))
	call TriggerAddAction(gg_trg_Gate_Closing_WoodGate_H_ME, ref_function_Trig_Gate_Closing_WoodGate_H_ME_Actions)
endfunction

function InitTrig_Gate_Closing_WoodGate_V takes nothing returns nothing
	set gg_trg_Gate_Closing_WoodGate_V = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Gate_Closing_WoodGate_V, EVENT_PLAYER_UNIT_SPELL_CAST)
	call TriggerAddCondition(gg_trg_Gate_Closing_WoodGate_V, Condition(ref_function_Trig_Gate_Closing_WoodGate_V_Conditions))
	call TriggerAddAction(gg_trg_Gate_Closing_WoodGate_V, ref_function_Trig_Gate_Closing_WoodGate_V_Actions)
endfunction

function InitTrig_Gate_Closing_WoodGate_V_ME takes nothing returns nothing
	set gg_trg_Gate_Closing_WoodGate_V_ME = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Gate_Closing_WoodGate_V_ME, EVENT_PLAYER_UNIT_SPELL_CAST)
	call TriggerAddCondition(gg_trg_Gate_Closing_WoodGate_V_ME, Condition(ref_function_Trig_Gate_Closing_WoodGate_V_ME_Conditions))
	call TriggerAddAction(gg_trg_Gate_Closing_WoodGate_V_ME, ref_function_Trig_Gate_Closing_WoodGate_V_ME_Actions)
endfunction

function InitTrig_Gate_Opening takes nothing returns nothing
	set gg_trg_Gate_Opening = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Gate_Opening, EVENT_PLAYER_UNIT_SPELL_CAST)
	call TriggerAddAction(gg_trg_Gate_Opening, ref_function_Trig_Gate_Opening_Actions)
endfunction

function InitTrig_Gate_Opening_ME takes nothing returns nothing
	set gg_trg_Gate_Opening_ME = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Gate_Opening_ME, EVENT_PLAYER_UNIT_SPELL_CAST)
	call TriggerAddAction(gg_trg_Gate_Opening_ME, ref_function_Trig_Gate_Opening_ME_Actions)
endfunction

function InitTrig_Gold_Horse_250 takes nothing returns nothing
	set gg_trg_Gold_Horse_250 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Gold_Horse_250, EVENT_PLAYER_UNIT_SPELL_CAST)
	call TriggerAddCondition(gg_trg_Gold_Horse_250, Condition(ref_function_Trig_Gold_Horse_250_Conditions))
	call TriggerAddAction(gg_trg_Gold_Horse_250, ref_function_Trig_Gold_Horse_250_Actions)
endfunction

function InitTrig_Gold_Horse_500 takes nothing returns nothing
	set gg_trg_Gold_Horse_500 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Gold_Horse_500, EVENT_PLAYER_UNIT_SPELL_CAST)
	call TriggerAddCondition(gg_trg_Gold_Horse_500, Condition(ref_function_Trig_Gold_Horse_500_Conditions))
	call TriggerAddAction(gg_trg_Gold_Horse_500, ref_function_Trig_Gold_Horse_500_Actions)
endfunction

function InitTrig_Heavy_Cavalry_1 takes nothing returns nothing
	set gg_trg_Heavy_Cavalry_1 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Heavy_Cavalry_1, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_Heavy_Cavalry_1, Condition(ref_function_Trig_Heavy_Cavalry_1_Conditions))
	call TriggerAddAction(gg_trg_Heavy_Cavalry_1, ref_function_Trig_Heavy_Cavalry_1_Actions)
endfunction

function InitTrig_Heavy_Cavalry_1_Byzantine takes nothing returns nothing
	set gg_trg_Heavy_Cavalry_1_Byzantine = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Heavy_Cavalry_1_Byzantine, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_Heavy_Cavalry_1_Byzantine, Condition(ref_function_Trig_Heavy_Cavalry_1_Byzantine_Conditions))
	call TriggerAddAction(gg_trg_Heavy_Cavalry_1_Byzantine, ref_function_Trig_Heavy_Cavalry_1_Byzantine_Actions)
endfunction

function InitTrig_Heavy_Cavalry_2 takes nothing returns nothing
	set gg_trg_Heavy_Cavalry_2 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Heavy_Cavalry_2, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_Heavy_Cavalry_2, Condition(ref_function_Trig_Heavy_Cavalry_2_Conditions))
	call TriggerAddAction(gg_trg_Heavy_Cavalry_2, ref_function_Trig_Heavy_Cavalry_2_Actions)
endfunction

function InitTrig_Heavy_Cavalry_2_Byzantine takes nothing returns nothing
	set gg_trg_Heavy_Cavalry_2_Byzantine = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Heavy_Cavalry_2_Byzantine, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_Heavy_Cavalry_2_Byzantine, Condition(ref_function_Trig_Heavy_Cavalry_2_Byzantine_Conditions))
	call TriggerAddAction(gg_trg_Heavy_Cavalry_2_Byzantine, ref_function_Trig_Heavy_Cavalry_2_Byzantine_Actions)
endfunction

function InitTrig_Heavy_Infantry_1 takes nothing returns nothing
	set gg_trg_Heavy_Infantry_1 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Heavy_Infantry_1, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_Heavy_Infantry_1, Condition(ref_function_Trig_Heavy_Infantry_1_Conditions))
	call TriggerAddAction(gg_trg_Heavy_Infantry_1, ref_function_Trig_Heavy_Infantry_1_Actions)
endfunction

function InitTrig_Heavy_Infantry_1_Byzantine takes nothing returns nothing
	set gg_trg_Heavy_Infantry_1_Byzantine = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Heavy_Infantry_1_Byzantine, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_Heavy_Infantry_1_Byzantine, Condition(ref_function_Trig_Heavy_Infantry_1_Byzantine_Conditions))
	call TriggerAddAction(gg_trg_Heavy_Infantry_1_Byzantine, ref_function_Trig_Heavy_Infantry_1_Byzantine_Actions)
endfunction

function InitTrig_Heavy_Infantry_2 takes nothing returns nothing
	set gg_trg_Heavy_Infantry_2 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Heavy_Infantry_2, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_Heavy_Infantry_2, Condition(ref_function_Trig_Heavy_Infantry_2_Conditions))
	call TriggerAddAction(gg_trg_Heavy_Infantry_2, ref_function_Trig_Heavy_Infantry_2_Actions)
endfunction

function InitTrig_Heavy_Infantry_2_Byzantine takes nothing returns nothing
	set gg_trg_Heavy_Infantry_2_Byzantine = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Heavy_Infantry_2_Byzantine, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_Heavy_Infantry_2_Byzantine, Condition(ref_function_Trig_Heavy_Infantry_2_Byzantine_Conditions))
	call TriggerAddAction(gg_trg_Heavy_Infantry_2_Byzantine, ref_function_Trig_Heavy_Infantry_2_Byzantine_Actions)
endfunction

function InitTrig_Killing_trading_horse_g250 takes nothing returns nothing
	set gg_trg_Killing_trading_horse_g250 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Killing_trading_horse_g250, EVENT_PLAYER_UNIT_DEATH)
	call TriggerAddCondition(gg_trg_Killing_trading_horse_g250, Condition(ref_function_Trig_Killing_trading_horse_g250_Conditions))
	call TriggerAddAction(gg_trg_Killing_trading_horse_g250, ref_function_Trig_Killing_trading_horse_g250_Actions)
endfunction

function InitTrig_Killing_trading_horse_g500 takes nothing returns nothing
	set gg_trg_Killing_trading_horse_g500 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Killing_trading_horse_g500, EVENT_PLAYER_UNIT_DEATH)
	call TriggerAddCondition(gg_trg_Killing_trading_horse_g500, Condition(ref_function_Trig_Killing_trading_horse_g500_Conditions))
	call TriggerAddAction(gg_trg_Killing_trading_horse_g500, ref_function_Trig_Killing_trading_horse_g500_Actions)
endfunction

function InitTrig_Killing_trading_horse_l250 takes nothing returns nothing
	set gg_trg_Killing_trading_horse_l250 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Killing_trading_horse_l250, EVENT_PLAYER_UNIT_DEATH)
	call TriggerAddCondition(gg_trg_Killing_trading_horse_l250, Condition(ref_function_Trig_Killing_trading_horse_l250_Conditions))
	call TriggerAddAction(gg_trg_Killing_trading_horse_l250, ref_function_Trig_Killing_trading_horse_l250_Actions)
endfunction

function InitTrig_Killing_trading_horse_l500 takes nothing returns nothing
	set gg_trg_Killing_trading_horse_l500 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Killing_trading_horse_l500, EVENT_PLAYER_UNIT_DEATH)
	call TriggerAddCondition(gg_trg_Killing_trading_horse_l500, Condition(ref_function_Trig_Killing_trading_horse_l500_Conditions))
	call TriggerAddAction(gg_trg_Killing_trading_horse_l500, ref_function_Trig_Killing_trading_horse_l500_Actions)
endfunction

function InitTrig_Light_Cavalry_1 takes nothing returns nothing
	set gg_trg_Light_Cavalry_1 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Light_Cavalry_1, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_Light_Cavalry_1, Condition(ref_function_Trig_Light_Cavalry_1_Conditions))
	call TriggerAddAction(gg_trg_Light_Cavalry_1, ref_function_Trig_Light_Cavalry_1_Actions)
endfunction

function InitTrig_Light_Cavalry_1_Byzantine takes nothing returns nothing
	set gg_trg_Light_Cavalry_1_Byzantine = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Light_Cavalry_1_Byzantine, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_Light_Cavalry_1_Byzantine, Condition(ref_function_Trig_Light_Cavalry_1_Byzantine_Conditions))
	call TriggerAddAction(gg_trg_Light_Cavalry_1_Byzantine, ref_function_Trig_Light_Cavalry_1_Byzantine_Actions)
endfunction

function InitTrig_Light_Cavalry_2 takes nothing returns nothing
	set gg_trg_Light_Cavalry_2 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Light_Cavalry_2, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_Light_Cavalry_2, Condition(ref_function_Trig_Light_Cavalry_2_Conditions))
	call TriggerAddAction(gg_trg_Light_Cavalry_2, ref_function_Trig_Light_Cavalry_2_Actions)
endfunction

function InitTrig_Light_Infantry_1 takes nothing returns nothing
	set gg_trg_Light_Infantry_1 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Light_Infantry_1, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_Light_Infantry_1, Condition(ref_function_Trig_Light_Infantry_1_Conditions))
	call TriggerAddAction(gg_trg_Light_Infantry_1, ref_function_Trig_Light_Infantry_1_Actions)
endfunction

function InitTrig_Light_Infantry_2 takes nothing returns nothing
	set gg_trg_Light_Infantry_2 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Light_Infantry_2, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_Light_Infantry_2, Condition(ref_function_Trig_Light_Infantry_2_Conditions))
	call TriggerAddAction(gg_trg_Light_Infantry_2, ref_function_Trig_Light_Infantry_2_Actions)
endfunction

function InitTrig_Lumber_Horse_250 takes nothing returns nothing
	set gg_trg_Lumber_Horse_250 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Lumber_Horse_250, EVENT_PLAYER_UNIT_SPELL_CAST)
	call TriggerAddCondition(gg_trg_Lumber_Horse_250, Condition(ref_function_Trig_Lumber_Horse_250_Conditions))
	call TriggerAddAction(gg_trg_Lumber_Horse_250, ref_function_Trig_Lumber_Horse_250_Actions)
endfunction

function InitTrig_Lumber_Horse_500 takes nothing returns nothing
	set gg_trg_Lumber_Horse_500 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Lumber_Horse_500, EVENT_PLAYER_UNIT_SPELL_CAST)
	call TriggerAddCondition(gg_trg_Lumber_Horse_500, Condition(ref_function_Trig_Lumber_Horse_500_Conditions))
	call TriggerAddAction(gg_trg_Lumber_Horse_500, ref_function_Trig_Lumber_Horse_500_Actions)
endfunction

function InitTrig_ME_Archer_1 takes nothing returns nothing
	set gg_trg_ME_Archer_1 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_ME_Archer_1, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_ME_Archer_1, Condition(ref_function_Trig_ME_Archer_1_Conditions))
	call TriggerAddAction(gg_trg_ME_Archer_1, ref_function_Trig_ME_Archer_1_Actions)
endfunction

function InitTrig_ME_Archer_2 takes nothing returns nothing
	set gg_trg_ME_Archer_2 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_ME_Archer_2, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_ME_Archer_2, Condition(ref_function_Trig_ME_Archer_2_Conditions))
	call TriggerAddAction(gg_trg_ME_Archer_2, ref_function_Trig_ME_Archer_2_Actions)
endfunction

function InitTrig_ME_Heavy_Cavalry_1 takes nothing returns nothing
	set gg_trg_ME_Heavy_Cavalry_1 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_ME_Heavy_Cavalry_1, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_ME_Heavy_Cavalry_1, Condition(ref_function_Trig_ME_Heavy_Cavalry_1_Conditions))
	call TriggerAddAction(gg_trg_ME_Heavy_Cavalry_1, ref_function_Trig_ME_Heavy_Cavalry_1_Actions)
endfunction

function InitTrig_ME_Heavy_Cavalry_2 takes nothing returns nothing
	set gg_trg_ME_Heavy_Cavalry_2 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_ME_Heavy_Cavalry_2, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_ME_Heavy_Cavalry_2, Condition(ref_function_Trig_ME_Heavy_Cavalry_2_Conditions))
	call TriggerAddAction(gg_trg_ME_Heavy_Cavalry_2, ref_function_Trig_ME_Heavy_Cavalry_2_Actions)
endfunction

function InitTrig_ME_Light_Cavalry_1 takes nothing returns nothing
	set gg_trg_ME_Light_Cavalry_1 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_ME_Light_Cavalry_1, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_ME_Light_Cavalry_1, Condition(ref_function_Trig_ME_Light_Cavalry_1_Conditions))
	call TriggerAddAction(gg_trg_ME_Light_Cavalry_1, ref_function_Trig_ME_Light_Cavalry_1_Actions)
endfunction

function InitTrig_ME_Light_Cavalry_2 takes nothing returns nothing
	set gg_trg_ME_Light_Cavalry_2 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_ME_Light_Cavalry_2, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_ME_Light_Cavalry_2, Condition(ref_function_Trig_ME_Light_Cavalry_2_Conditions))
	call TriggerAddAction(gg_trg_ME_Light_Cavalry_2, ref_function_Trig_ME_Light_Cavalry_2_Actions)
endfunction

function InitTrig_ME_Light_Infantry_1 takes nothing returns nothing
	set gg_trg_ME_Light_Infantry_1 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_ME_Light_Infantry_1, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_ME_Light_Infantry_1, Condition(ref_function_Trig_ME_Light_Infantry_1_Conditions))
	call TriggerAddAction(gg_trg_ME_Light_Infantry_1, ref_function_Trig_ME_Light_Infantry_1_Actions)
endfunction

function InitTrig_ME_Light_Infantry_2 takes nothing returns nothing
	set gg_trg_ME_Light_Infantry_2 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_ME_Light_Infantry_2, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_ME_Light_Infantry_2, Condition(ref_function_Trig_ME_Light_Infantry_2_Conditions))
	call TriggerAddAction(gg_trg_ME_Light_Infantry_2, ref_function_Trig_ME_Light_Infantry_2_Actions)
endfunction

function InitTrig_ME_Missile_Cavalry takes nothing returns nothing
	set gg_trg_ME_Missile_Cavalry = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_ME_Missile_Cavalry, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_ME_Missile_Cavalry, Condition(ref_function_Trig_ME_Missile_Cavalry_Conditions))
	call TriggerAddAction(gg_trg_ME_Missile_Cavalry, ref_function_Trig_ME_Missile_Cavalry_Actions)
endfunction

function InitTrig_ME_Pikeman takes nothing returns nothing
	set gg_trg_ME_Pikeman = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_ME_Pikeman, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_ME_Pikeman, Condition(ref_function_Trig_ME_Pikeman_Conditions))
	call TriggerAddAction(gg_trg_ME_Pikeman, ref_function_Trig_ME_Pikeman_Actions)
endfunction

function InitTrig_ME_Pikeman_2 takes nothing returns nothing
	set gg_trg_ME_Pikeman_2 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_ME_Pikeman_2, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_ME_Pikeman_2, Condition(ref_function_Trig_ME_Pikeman_2_Conditions))
	call TriggerAddAction(gg_trg_ME_Pikeman_2, ref_function_Trig_ME_Pikeman_2_Actions)
endfunction

function InitTrig_ME_Skirmisher takes nothing returns nothing
	set gg_trg_ME_Skirmisher = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_ME_Skirmisher, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_ME_Skirmisher, Condition(ref_function_Trig_ME_Skirmisher_Conditions))
	call TriggerAddAction(gg_trg_ME_Skirmisher, ref_function_Trig_ME_Skirmisher_Actions)
endfunction

function InitTrig_ME_Spearmen_1 takes nothing returns nothing
	set gg_trg_ME_Spearmen_1 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_ME_Spearmen_1, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_ME_Spearmen_1, Condition(ref_function_Trig_ME_Spearmen_1_Conditions))
	call TriggerAddAction(gg_trg_ME_Spearmen_1, ref_function_Trig_ME_Spearmen_1_Actions)
endfunction

function InitTrig_ME_Spearmen_2 takes nothing returns nothing
	set gg_trg_ME_Spearmen_2 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_ME_Spearmen_2, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_ME_Spearmen_2, Condition(ref_function_Trig_ME_Spearmen_2_Conditions))
	call TriggerAddAction(gg_trg_ME_Spearmen_2, ref_function_Trig_ME_Spearmen_2_Actions)
endfunction

function InitTrig_Marketplace takes nothing returns nothing
	set gg_trg_Marketplace = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Marketplace, EVENT_PLAYER_UNIT_CONSTRUCT_FINISH)
	call TriggerAddCondition(gg_trg_Marketplace, Condition(ref_function_Trig_Marketplace_Conditions))
	call TriggerAddAction(gg_trg_Marketplace, ref_function_Trig_Marketplace_Actions)
endfunction

function InitTrig_Melee_Initialization takes nothing returns nothing
	set gg_trg_Melee_Initialization = CreateTrigger()
	call TriggerAddAction(gg_trg_Melee_Initialization, ref_function_Trig_Melee_Initialization_Actions)
endfunction

function InitTrig_Missile_Cavalry_Byzantine takes nothing returns nothing
	set gg_trg_Missile_Cavalry_Byzantine = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Missile_Cavalry_Byzantine, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_Missile_Cavalry_Byzantine, Condition(ref_function_Trig_Missile_Cavalry_Byzantine_Conditions))
	call TriggerAddAction(gg_trg_Missile_Cavalry_Byzantine, ref_function_Trig_Missile_Cavalry_Byzantine_Actions)
endfunction

function InitTrig_Pikemen_1 takes nothing returns nothing
	set gg_trg_Pikemen_1 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Pikemen_1, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_Pikemen_1, Condition(ref_function_Trig_Pikemen_1_Conditions))
	call TriggerAddAction(gg_trg_Pikemen_1, ref_function_Trig_Pikemen_1_Actions)
endfunction

function InitTrig_Pikemen_2 takes nothing returns nothing
	set gg_trg_Pikemen_2 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Pikemen_2, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_Pikemen_2, Condition(ref_function_Trig_Pikemen_2_Conditions))
	call TriggerAddAction(gg_trg_Pikemen_2, ref_function_Trig_Pikemen_2_Actions)
endfunction

function InitTrig_Settle takes nothing returns nothing
	set gg_trg_Settle = CreateTrigger()
	call TriggerRegisterTimerEventSingle(gg_trg_Settle, 70.00)
	call TriggerAddAction(gg_trg_Settle, ref_function_Trig_Settle_Actions)
endfunction

function InitTrig_Skirmisher takes nothing returns nothing
	set gg_trg_Skirmisher = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Skirmisher, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_Skirmisher, Condition(ref_function_Trig_Skirmisher_Conditions))
	call TriggerAddAction(gg_trg_Skirmisher, ref_function_Trig_Skirmisher_Actions)
endfunction

function InitTrig_Skirmisher_Byzantine takes nothing returns nothing
	set gg_trg_Skirmisher_Byzantine = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Skirmisher_Byzantine, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_Skirmisher_Byzantine, Condition(ref_function_Trig_Skirmisher_Byzantine_Conditions))
	call TriggerAddAction(gg_trg_Skirmisher_Byzantine, ref_function_Trig_Skirmisher_Byzantine_Actions)
endfunction

function InitTrig_Spearmen_1 takes nothing returns nothing
	set gg_trg_Spearmen_1 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Spearmen_1, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_Spearmen_1, Condition(ref_function_Trig_Spearmen_1_Conditions))
	call TriggerAddAction(gg_trg_Spearmen_1, ref_function_Trig_Spearmen_1_Actions)
endfunction

function InitTrig_Spearmen_1_Byzantine takes nothing returns nothing
	set gg_trg_Spearmen_1_Byzantine = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Spearmen_1_Byzantine, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_Spearmen_1_Byzantine, Condition(ref_function_Trig_Spearmen_1_Byzantine_Conditions))
	call TriggerAddAction(gg_trg_Spearmen_1_Byzantine, ref_function_Trig_Spearmen_1_Byzantine_Actions)
endfunction

function InitTrig_Spearmen_2 takes nothing returns nothing
	set gg_trg_Spearmen_2 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Spearmen_2, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_Spearmen_2, Condition(ref_function_Trig_Spearmen_2_Conditions))
	call TriggerAddAction(gg_trg_Spearmen_2, ref_function_Trig_Spearmen_2_Actions)
endfunction

function InitTrig_Spearmen_2_Byzantine takes nothing returns nothing
	set gg_trg_Spearmen_2_Byzantine = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Spearmen_2_Byzantine, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_Spearmen_2_Byzantine, Condition(ref_function_Trig_Spearmen_2_Byzantine_Conditions))
	call TriggerAddAction(gg_trg_Spearmen_2_Byzantine, ref_function_Trig_Spearmen_2_Byzantine_Actions)
endfunction

function InitTrig_Spy_Sabotage_on_buildings takes nothing returns nothing
	set gg_trg_Spy_Sabotage_on_buildings = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Spy_Sabotage_on_buildings, EVENT_PLAYER_UNIT_SPELL_CAST)
	call TriggerAddCondition(gg_trg_Spy_Sabotage_on_buildings, Condition(ref_function_Trig_Spy_Sabotage_on_buildings_Conditions))
	call TriggerAddAction(gg_trg_Spy_Sabotage_on_buildings, ref_function_Trig_Spy_Sabotage_on_buildings_Actions)
endfunction

function InitTrig_Structures_finishes takes nothing returns nothing
	set gg_trg_Structures_finishes = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Structures_finishes, EVENT_PLAYER_UNIT_CONSTRUCT_FINISH)
	call TriggerAddAction(gg_trg_Structures_finishes, ref_function_Trig_Structures_finishes_Actions)
endfunction

function InitTrig_Supply_Horse takes nothing returns nothing
	set gg_trg_Supply_Horse = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Supply_Horse, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_Supply_Horse, Condition(ref_function_Trig_Supply_Horse_Conditions))
	call TriggerAddAction(gg_trg_Supply_Horse, ref_function_Trig_Supply_Horse_Actions)
endfunction

function InitTrig_Supply_Horse_2 takes nothing returns nothing
	set gg_trg_Supply_Horse_2 = CreateTrigger()
	call TriggerRegisterTimerEventPeriodic(gg_trg_Supply_Horse_2, 5.00)
	call TriggerAddAction(gg_trg_Supply_Horse_2, ref_function_Trig_Supply_Horse_2_Actions)
endfunction

function InitTrig_Supply_Horses takes nothing returns nothing
	set gg_trg_Supply_Horses = CreateTrigger()
	call TriggerRegisterTimerEventPeriodic(gg_trg_Supply_Horses, 5.00)
	call TriggerAddAction(gg_trg_Supply_Horses, ref_function_Trig_Supply_Horses_Actions)
endfunction

function InitTrig_Thatched_Cottage_1 takes nothing returns nothing
	set gg_trg_Thatched_Cottage_1 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Thatched_Cottage_1, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_Thatched_Cottage_1, Condition(ref_function_Trig_Thatched_Cottage_1_Conditions))
	call TriggerAddAction(gg_trg_Thatched_Cottage_1, ref_function_Trig_Thatched_Cottage_1_Actions)
endfunction

function InitTrig_Thatched_Cottage_1_Byz takes nothing returns nothing
	set gg_trg_Thatched_Cottage_1_Byz = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Thatched_Cottage_1_Byz, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_Thatched_Cottage_1_Byz, Condition(ref_function_Trig_Thatched_Cottage_1_Byz_Conditions))
	call TriggerAddAction(gg_trg_Thatched_Cottage_1_Byz, ref_function_Trig_Thatched_Cottage_1_Byz_Actions)
endfunction

function InitTrig_Thatched_Cottage_1_EE_Copy takes nothing returns nothing
	set gg_trg_Thatched_Cottage_1_EE_Copy = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Thatched_Cottage_1_EE_Copy, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_Thatched_Cottage_1_EE_Copy, Condition(ref_function_Trig_Thatched_Cottage_1_EE_Copy_Conditions))
	call TriggerAddAction(gg_trg_Thatched_Cottage_1_EE_Copy, ref_function_Trig_Thatched_Cottage_1_EE_Copy_Actions)
endfunction

function InitTrig_Thatched_Cottage_2 takes nothing returns nothing
	set gg_trg_Thatched_Cottage_2 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Thatched_Cottage_2, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_Thatched_Cottage_2, Condition(ref_function_Trig_Thatched_Cottage_2_Conditions))
	call TriggerAddAction(gg_trg_Thatched_Cottage_2, ref_function_Trig_Thatched_Cottage_2_Actions)
endfunction

function InitTrig_Thatched_Cottage_2_Byz takes nothing returns nothing
	set gg_trg_Thatched_Cottage_2_Byz = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Thatched_Cottage_2_Byz, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_Thatched_Cottage_2_Byz, Condition(ref_function_Trig_Thatched_Cottage_2_Byz_Conditions))
	call TriggerAddAction(gg_trg_Thatched_Cottage_2_Byz, ref_function_Trig_Thatched_Cottage_2_Byz_Actions)
endfunction

function InitTrig_Thatched_Cottage_2_EE takes nothing returns nothing
	set gg_trg_Thatched_Cottage_2_EE = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Thatched_Cottage_2_EE, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_Thatched_Cottage_2_EE, Condition(ref_function_Trig_Thatched_Cottage_2_EE_Conditions))
	call TriggerAddAction(gg_trg_Thatched_Cottage_2_EE, ref_function_Trig_Thatched_Cottage_2_EE_Actions)
endfunction

function InitTrig_Thatched_Cottage_3 takes nothing returns nothing
	set gg_trg_Thatched_Cottage_3 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Thatched_Cottage_3, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_Thatched_Cottage_3, Condition(ref_function_Trig_Thatched_Cottage_3_Conditions))
	call TriggerAddAction(gg_trg_Thatched_Cottage_3, ref_function_Trig_Thatched_Cottage_3_Actions)
endfunction

function InitTrig_Thatched_Cottage_3_Byz takes nothing returns nothing
	set gg_trg_Thatched_Cottage_3_Byz = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Thatched_Cottage_3_Byz, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_Thatched_Cottage_3_Byz, Condition(ref_function_Trig_Thatched_Cottage_3_Byz_Conditions))
	call TriggerAddAction(gg_trg_Thatched_Cottage_3_Byz, ref_function_Trig_Thatched_Cottage_3_Byz_Actions)
endfunction

function InitTrig_Thatched_Cottage_3_EE takes nothing returns nothing
	set gg_trg_Thatched_Cottage_3_EE = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Thatched_Cottage_3_EE, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_Thatched_Cottage_3_EE, Condition(ref_function_Trig_Thatched_Cottage_3_EE_Conditions))
	call TriggerAddAction(gg_trg_Thatched_Cottage_3_EE, ref_function_Trig_Thatched_Cottage_3_EE_Actions)
endfunction

function InitTrig_Thatched_Cottage_4 takes nothing returns nothing
	set gg_trg_Thatched_Cottage_4 = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Thatched_Cottage_4, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_Thatched_Cottage_4, Condition(ref_function_Trig_Thatched_Cottage_4_Conditions))
	call TriggerAddAction(gg_trg_Thatched_Cottage_4, ref_function_Trig_Thatched_Cottage_4_Actions)
endfunction

function InitTrig_Trade takes nothing returns nothing
	set gg_trg_Trade = CreateTrigger()
	call TriggerAddAction(gg_trg_Trade, ref_function_Trig_Trade_Actions)
endfunction

function InitTrig_Trading_Gold_Ship takes nothing returns nothing
	set gg_trg_Trading_Gold_Ship = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Trading_Gold_Ship, EVENT_PLAYER_UNIT_SPELL_CAST)
	call TriggerAddCondition(gg_trg_Trading_Gold_Ship, Condition(ref_function_Trig_Trading_Gold_Ship_Conditions))
	call TriggerAddAction(gg_trg_Trading_Gold_Ship, ref_function_Trig_Trading_Gold_Ship_Actions)
endfunction

function InitTrig_Trading_Lumber_Ship takes nothing returns nothing
	set gg_trg_Trading_Lumber_Ship = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Trading_Lumber_Ship, EVENT_PLAYER_UNIT_SPELL_CAST)
	call TriggerAddCondition(gg_trg_Trading_Lumber_Ship, Condition(ref_function_Trig_Trading_Lumber_Ship_Conditions))
	call TriggerAddAction(gg_trg_Trading_Lumber_Ship, ref_function_Trig_Trading_Lumber_Ship_Actions)
endfunction

function InitTrig_Urbanization takes nothing returns nothing
	set gg_trg_Urbanization = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_Urbanization, EVENT_PLAYER_UNIT_RESEARCH_FINISH)
	call TriggerAddCondition(gg_trg_Urbanization, Condition(ref_function_Trig_Urbanization_Conditions))
	call TriggerAddAction(gg_trg_Urbanization, ref_function_Trig_Urbanization_Actions)
endfunction

function InitTrig_killing_Gold_Ship takes nothing returns nothing
	set gg_trg_killing_Gold_Ship = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_killing_Gold_Ship, EVENT_PLAYER_UNIT_DEATH)
	call TriggerAddCondition(gg_trg_killing_Gold_Ship, Condition(ref_function_Trig_killing_Gold_Ship_Conditions))
	call TriggerAddAction(gg_trg_killing_Gold_Ship, ref_function_Trig_killing_Gold_Ship_Actions)
endfunction

function InitTrig_killing_Lumber_Ship takes nothing returns nothing
	set gg_trg_killing_Lumber_Ship = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(gg_trg_killing_Lumber_Ship, EVENT_PLAYER_UNIT_DEATH)
	call TriggerAddCondition(gg_trg_killing_Lumber_Ship, Condition(ref_function_Trig_killing_Lumber_Ship_Conditions))
	call TriggerAddAction(gg_trg_killing_Lumber_Ship, ref_function_Trig_killing_Lumber_Ship_Actions)
endfunction

function InitCustomTriggers takes nothing returns nothing
	call InitTrig_Settle()
	call InitTrig_Melee_Initialization()
	call InitTrig_F9()
	call InitTrig_Capturing_Ore_15g()
	call InitTrig_Capturing_Ore_25g()
	call InitTrig_Capturing_Ore_40g()
	call InitTrig_Capturing_Ore_50g()
	call InitTrig_Spy_Sabotage_on_buildings()
	call InitTrig_Convert_V2()
	call InitTrig_Gate_Opening()
	call InitTrig_Gate_Opening_ME()
	call InitTrig_Gate_Closing_WoodGate_V()
	call InitTrig_Gate_Closing_WoodGate_V_ME()
	call InitTrig_Gate_Closing_WoodGate_H()
	call InitTrig_Gate_Closing_WoodGate_H_ME()
	call InitTrig_Gate_Closing_IronGate_V()
	call InitTrig_Gate_Closing_IronGate_V_ME()
	call InitTrig_Gate_Closing_IronGate_H()
	call InitTrig_Gate_Closing_IronGate_H_ME()
	call InitTrig_Supply_Horses()
	call InitTrig_Supply_Horse_2()
	call InitTrig_Lumber_Horse_250()
	call InitTrig_Lumber_Horse_500()
	call InitTrig_Gold_Horse_250()
	call InitTrig_Gold_Horse_500()
	call InitTrig_Killing_trading_horse_l250()
	call InitTrig_Killing_trading_horse_l500()
	call InitTrig_Killing_trading_horse_g250()
	call InitTrig_Killing_trading_horse_g500()
	call InitTrig_Trading_Lumber_Ship()
	call InitTrig_Trading_Gold_Ship()
	call InitTrig_Trade()
	call InitTrig_killing_Gold_Ship()
	call InitTrig_killing_Lumber_Ship()
	call InitTrig_FarmHouse()
	call InitTrig_Thatched_Cottage_1()
	call InitTrig_Thatched_Cottage_2()
	call InitTrig_Thatched_Cottage_3()
	call InitTrig_Thatched_Cottage_4()
	call InitTrig_Spearmen_1()
	call InitTrig_Spearmen_2()
	call InitTrig_Heavy_Infantry_1()
	call InitTrig_Heavy_Infantry_2()
	call InitTrig_Archer_1()
	call InitTrig_Archer_2()
	call InitTrig_Light_Infantry_1()
	call InitTrig_Light_Infantry_2()
	call InitTrig_Pikemen_1()
	call InitTrig_Pikemen_2()
	call InitTrig_Light_Cavalry_1()
	call InitTrig_Light_Cavalry_2()
	call InitTrig_Heavy_Cavalry_1()
	call InitTrig_Heavy_Cavalry_2()
	call InitTrig_Skirmisher()
	call InitTrig_Arquebusers()
	call InitTrig_Supply_Horse()
	call InitTrig_Disabled_units_at_beginning()
	call InitTrig_FarmHouse_Byzantine()
	call InitTrig_Thatched_Cottage_1_Byz()
	call InitTrig_Thatched_Cottage_2_Byz()
	call InitTrig_Thatched_Cottage_3_Byz()
	call InitTrig_Spearmen_1_Byzantine()
	call InitTrig_Spearmen_2_Byzantine()
	call InitTrig_Heavy_Infantry_1_Byzantine()
	call InitTrig_Heavy_Infantry_2_Byzantine()
	call InitTrig_Archer_1_Byzantine()
	call InitTrig_Archer_2_Byzantine()
	call InitTrig_Light_Cavalry_1_Byzantine()
	call InitTrig_Heavy_Cavalry_1_Byzantine()
	call InitTrig_Heavy_Cavalry_2_Byzantine()
	call InitTrig_Skirmisher_Byzantine()
	call InitTrig_Missile_Cavalry_Byzantine()
	call InitTrig_Disabled_units_Byzantine()
	call InitTrig_ME_Spearmen_1()
	call InitTrig_ME_Spearmen_2()
	call InitTrig_ME_Archer_1()
	call InitTrig_ME_Archer_2()
	call InitTrig_ME_Light_Infantry_1()
	call InitTrig_ME_Light_Infantry_2()
	call InitTrig_ME_Pikeman()
	call InitTrig_ME_Pikeman_2()
	call InitTrig_ME_Light_Cavalry_1()
	call InitTrig_ME_Light_Cavalry_2()
	call InitTrig_ME_Heavy_Cavalry_1()
	call InitTrig_ME_Heavy_Cavalry_2()
	call InitTrig_ME_Skirmisher()
	call InitTrig_ME_Missile_Cavalry()
	call InitTrig_Disabled_units_ME()
	call InitTrig_FarmHouse_EE_Copy()
	call InitTrig_Thatched_Cottage_1_EE_Copy()
	call InitTrig_Thatched_Cottage_2_EE()
	call InitTrig_Thatched_Cottage_3_EE()
	call InitTrig_EE_Spearmen_1_Copy()
	call InitTrig_EE_Spearmen_2_Copy()
	call InitTrig_EE_Heavy_Infantry_1()
	call InitTrig_EE_Heavy_Infantry_2()
	call InitTrig_EE_Archer_1()
	call InitTrig_EE_Archer_2()
	call InitTrig_EE_Missile_Cavalry_1()
	call InitTrig_EE_Missile_Cavalry_2()
	call InitTrig_EE_Pikeman_1()
	call InitTrig_EE_Pikeman_2()
	call InitTrig_EE_Heavy_Cavalry_1()
	call InitTrig_EE_Heavy_Cavalry_2()
	call InitTrig_EE_Light_Cavalry_1()
	call InitTrig_EE_Skirmisher_1()
	call InitTrig_Disabled_units_EE()
	call InitTrig_Urbanization()
	call InitTrig_Structures_finishes()
	call InitTrig_Marketplace()
	call InitTrig_Barracks()
	call InitTrig_Capitol_1_Dummies()
	call InitTrig_Capitol_2_Dummies()
	call InitTrig_Capitol_3_Dummies()
	call InitTrig_CITY_HALL()
	call InitTrig_Castle_BYZ_T1()
	call InitTrig_Castle_BYZ_T2()
	call InitTrig_Castle_BYZ_T3()
	call InitTrig_Castle_EE_T1()
	call InitTrig_Castle_EE_T2()
	call InitTrig_Castle_EE_T3()
	call InitTrig_Castle_ME__T1()
	call InitTrig_Castle_ME__T2()
	call InitTrig_Castle_ME_T3()
	call InitTrig_Castle_WE_T1()
	call InitTrig_Castle_WE_T2()
	call InitTrig_Castle_WE_T3()
	call InitTrig_Capitol_Keep_UPG_WE_T2()
	call InitTrig_Capitol_Keep_Upg_BYZ_T2()
	call InitTrig_Capitol_Keep_Upg_EE_T2()
	call InitTrig_Capitol_Keep_Upg_ME_T2()
	call InitTrig_Capitol_Castle_Up_BYZ_T3()
	call InitTrig_Capitol_Castle_Up_ME_T3()
	call InitTrig_Capitol_Castle_Up_EE_T3()
	call InitTrig_Capitol_Castle_UP_WE_T3()
endfunction

function InitGlobals takes nothing returns nothing
	local integer i_2 = 0
	set i_2 = 0
	loop
		exitwhen i_2 > 8192
		call CreateGroup()
		set i_2 = i_2 + 1
	endloop
	call CreateForce()
	call CreateGroup()
	call CreateForce()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateForce()
	call CreateForce()
	call CreateForce()
	call CreateTimer()
	call CreateForce()
	call CreateGroup()
	set udg_Supplyhorses = CreateGroup()
	call CreateGroup()
	call CreateForce()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateTimer()
	set i_2 = 0
	loop
		exitwhen i_2 > 24
		set i_2 = i_2 + 1
	endloop
	set i_2 = 0
	loop
		exitwhen i_2 > 24
		set udg_PlayerRegions[i_2] = 0
		set i_2 = i_2 + 1
	endloop
	set udg_AllPlayerUnits = CreateForce()
	set i_2 = 0
	loop
		exitwhen i_2 > 24
		set i_2 = i_2 + 1
	endloop
	call CreateGroup()
	set i_2 = 0
	loop
		exitwhen i_2 > 24
		set i_2 = i_2 + 1
	endloop
	set i_2 = 0
	loop
		exitwhen i_2 > 24
		set i_2 = i_2 + 1
	endloop
	call CreateForce()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	set udg_GateMovingUnits1 = CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	set i_2 = 0
	loop
		exitwhen i_2 > 24
		set i_2 = i_2 + 1
	endloop
	set i_2 = 0
	loop
		exitwhen i_2 > 24
		set i_2 = i_2 + 1
	endloop
	call CreateGroup()
	set i_2 = 0
	loop
		exitwhen i_2 > 24
		set i_2 = i_2 + 1
	endloop
	set i_2 = 0
	loop
		exitwhen i_2 > 24
		set i_2 = i_2 + 1
	endloop
	set i_2 = 0
	loop
		exitwhen i_2 > 24
		set i_2 = i_2 + 1
	endloop
	set i_2 = 0
	loop
		exitwhen i_2 > 24
		set i_2 = i_2 + 1
	endloop
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateForce()
	call CreateForce()
	set i_2 = 0
	loop
		exitwhen i_2 > 1
		set i_2 = i_2 + 1
	endloop
	set i_2 = 0
	loop
		exitwhen i_2 > 1
		set i_2 = i_2 + 1
	endloop
	set i_2 = 0
	loop
		exitwhen i_2 > 1
		set i_2 = i_2 + 1
	endloop
	set udg_Supplyhorses2 = CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	call CreateGroup()
	set i_2 = 0
	loop
		exitwhen i_2 > 24
		set udg_hasBarracks[i_2] = false
		set i_2 = i_2 + 1
	endloop
	set i_2 = 0
	loop
		exitwhen i_2 > 24
		set udg_hasMarketplace[i_2] = false
		set i_2 = i_2 + 1
	endloop
endfunction

function InitSounds takes nothing returns nothing
	set gg_snd_Warning = CreateSound("Sound\\Interface\\Warning.wav", false, false, false, 10, 10, "")
	call SetSoundParamsFromLabel(gg_snd_Warning, "Warning")
	call SetSoundDuration(gg_snd_Warning, 1903)
endfunction

function RunInitializationTriggers takes nothing returns nothing
	call ConditionalTriggerExecute(gg_trg_Melee_Initialization)
	call ConditionalTriggerExecute(gg_trg_Trade)
endfunction

function player_getId takes player this_7 returns integer
	return GetPlayerId(this_7)
endfunction

function unit_getOwner takes unit this_7 returns player
	return GetOwningPlayer(this_7)
endfunction

function unit_getTypeId takes unit this_7 returns integer
	return GetUnitTypeId(this_7)
endfunction

function CityManage_closure_impl takes nothing returns boolean
	return unit_getTypeId(GetSpellAbilityUnit()) == Units_uSettlerReadyToSettle and unit_getTypeId(GetSpellTargetUnit()) == Units_uTH and player_getId(unit_getOwner(GetSpellTargetUnit())) == PLAYER_NEUTRAL_AGGRESSIVE
endfunction

function getIndexingUnit takes nothing returns unit
	return UnitIndexer_tempUnits[UnitIndexer_tempUnitsCount - 1]
endfunction

function fireEvents takes unit w_u returns boolean
	return true
endfunction

function trigger_registerUnitEvent takes trigger this_7, unit whichUnit, unitevent whichEvent returns event
	return TriggerRegisterUnitEvent(this_7, whichUnit, whichEvent)
endfunction

function registerEventsForUnit takes unit u_5 returns nothing
	if fireEvents(u_5) then
		call trigger_registerUnitEvent(ClosureEvents_unitTrig, u_5, EVENT_UNIT_DAMAGED)
	endif
endfunction

function ClosureEvents_closure_impl takes nothing returns nothing
	call registerEventsForUnit(getIndexingUnit())
endfunction

function GameTimer_closure_impl takes nothing returns nothing
	set GameTimer_currentTime = GameTimer_currentTime + Basics_ANIMATION_PERIOD
endfunction

function group_addUnit_1 takes group this_7, unit units_0 returns nothing
	call GroupAddUnit(this_7, units_0)
endfunction

function Group_closure_impl takes nothing returns nothing
	call group_addUnit_1(Group_iterGroup, GetEnumUnit())
endfunction

function Main_closure_impl takes nothing returns nothing
	set Main_elapsed_time = Main_elapsed_time + 0.01
endfunction

function popUnit takes nothing returns nothing
	set OnUnitEnterLeave_tempUnitsCount = OnUnitEnterLeave_tempUnitsCount - 1
endfunction

function pushUnit takes unit u_5 returns nothing
	set OnUnitEnterLeave_tempUnits[OnUnitEnterLeave_tempUnitsCount] = u_5
	set OnUnitEnterLeave_tempUnitsCount = OnUnitEnterLeave_tempUnitsCount + 1
endfunction

function trigger_execute takes trigger this_7 returns nothing
	call TriggerExecute(this_7)
endfunction

function unit_getAbilityLevel takes unit this_7, integer id returns integer
	return GetUnitAbilityLevel(this_7, id)
endfunction

function OnUnitEnterLeave_closure_impl takes nothing returns nothing
	local unit leavingUnit = GetTriggerUnit()
	if unit_getAbilityLevel(leavingUnit, OnUnitEnterLeave_ABILITY_ID) == 0 then
		call pushUnit(leavingUnit)
		call trigger_execute(OnUnitEnterLeave_eventTrigger)
		call popUnit()
	endif
	set leavingUnit = null
endfunction

function trigger_evaluate takes trigger this_7 returns boolean
	return TriggerEvaluate(this_7)
endfunction

function unit_addAbility takes unit this_7, integer abil returns boolean
	return UnitAddAbility(this_7, abil)
endfunction

function unit_makeAbilityPermanent takes unit this_7, integer abil, boolean flag returns boolean
	return UnitMakeAbilityPermanent(this_7, flag, abil)
endfunction

function prepareUnit takes unit u_5 returns nothing
	local unit receiver = u_5
	local unit receiver_2
	call unit_addAbility(receiver, OnUnitEnterLeave_ABILITY_ID)
	set receiver_2 = receiver
	call unit_makeAbilityPermanent(receiver_2, OnUnitEnterLeave_ABILITY_ID, true)
	call pushUnit(u_5)
	call trigger_evaluate(OnUnitEnterLeave_eventTrigger)
	call popUnit()
	set receiver = null
	set receiver_2 = null
endfunction

function OnUnitEnterLeave_closure_impl_2 takes nothing returns nothing
	call prepareUnit(GetEnumUnit())
endfunction

function OnUnitEnterLeave_closure_impl_3 takes nothing returns nothing
	call prepareUnit(GetFilterUnit())
endfunction

function Trig_Archer_1_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1848651824, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1848651825, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_Archer_1_Byzantine_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1848651841, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1848651831, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_Archer_1_Byzantine_Func003C takes nothing returns boolean
	if  not (GetResearched() == 1378889809) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378889809, GetOwningPlayer(GetResearchingUnit())) == 1) then
		return false
	endif
	return true
endfunction

function Trig_Archer_1_Byzantine_Conditions takes nothing returns boolean
	if  not Trig_Archer_1_Byzantine_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Archer_1_Func003C takes nothing returns boolean
	if  not (GetResearched() == 1378889802) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378889802, GetOwningPlayer(GetResearchingUnit())) == 1) then
		return false
	endif
	return true
endfunction

function Trig_Archer_1_Conditions takes nothing returns boolean
	if  not Trig_Archer_1_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Archer_2_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1848651826, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1848651824, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_Archer_2_Byzantine_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1848651833, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1848651841, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_Archer_2_Byzantine_Func003C takes nothing returns boolean
	if  not (GetResearched() == 1378889809) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378889809, GetOwningPlayer(GetResearchingUnit())) == 2) then
		return false
	endif
	return true
endfunction

function Trig_Archer_2_Byzantine_Conditions takes nothing returns boolean
	if  not Trig_Archer_2_Byzantine_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Archer_2_Func004C takes nothing returns boolean
	if  not (GetResearched() == 1378889802) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378889802, GetOwningPlayer(GetResearchingUnit())) == 2) then
		return false
	endif
	return true
endfunction

function Trig_Archer_2_Conditions takes nothing returns boolean
	if  not Trig_Archer_2_Func004C() then
		return false
	endif
	return true
endfunction

function Trig_Arquebusers_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1848651843, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1848651842, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_Arquebusers_Func003C takes nothing returns boolean
	if  not (GetResearched() == 1378889812) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378889812, GetOwningPlayer(GetResearchingUnit())) == 1) then
		return false
	endif
	return true
endfunction

function Trig_Arquebusers_Conditions takes nothing returns boolean
	if  not Trig_Arquebusers_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Barracks_Actions takes nothing returns nothing
	call CreateNUnitsAtLoc(1, 1751277938, GetOwningPlayer(GetConstructedStructure()), OffsetLocation(GetRectCenter(GetPlayableMapRect()), 100000000.00, 1000000000.00), bj_UNIT_FACING)
	call ShowUnitHide(GetLastCreatedUnit())
	set udg_hasBarracks[GetConvertedPlayerId(GetOwningPlayer(GetConstructedStructure()))] = true
endfunction

function Trig_Barracks_Func005C takes nothing returns boolean
	if GetUnitTypeId(GetConstructedStructure()) == 1747988545 then
		return true
	endif
	if GetUnitTypeId(GetConstructedStructure()) == 1747989577 then
		return true
	endif
	if GetUnitTypeId(GetConstructedStructure()) == 1747990320 then
		return true
	endif
	if GetUnitTypeId(GetConstructedStructure()) == 1747989845 then
		return true
	endif
	return false
endfunction

function Trig_Barracks_Conditions takes nothing returns boolean
	if  not (udg_hasBarracks[GetConvertedPlayerId(GetOwningPlayer(GetConstructedStructure()))] == false) then
		return false
	endif
	if  not Trig_Barracks_Func005C() then
		return false
	endif
	return true
endfunction

function Trig_CITY_HALL_Actions takes nothing returns nothing
	call UnitAddAbilityBJ(1093677634, GetTriggerUnit())
endfunction

function Trig_CITY_HALL_Func002C takes nothing returns boolean
	if  not (GetUnitTypeId(GetTriggerUnit()) == 1747989325) then
		return false
	endif
	return true
endfunction

function Trig_CITY_HALL_Conditions takes nothing returns boolean
	if  not Trig_CITY_HALL_Func002C() then
		return false
	endif
	return true
endfunction

function Trig_Capitol_1_Dummies_Actions takes nothing returns nothing
	call CreateNUnitsAtLoc(1, 1752461175, GetOwningPlayer(GetTriggerUnit()), OffsetLocation(GetRectCenter(GetPlayableMapRect()), 100000000.00, 100000000.00), bj_UNIT_FACING)
	call ShowUnitHide(GetLastCreatedUnit())
endfunction

function Trig_Capitol_1_Dummies_Conditions takes nothing returns boolean
	if  not (GetUnitTypeId(GetTriggerUnit()) == 1747988553) then
		return false
	endif
	return true
endfunction

function Trig_Capitol_2_Dummies_Actions takes nothing returns nothing
	call CreateNUnitsAtLoc(1, 1751868773, GetOwningPlayer(GetTriggerUnit()), OffsetLocation(GetRectCenter(GetPlayableMapRect()), 100000000.00, 100000000.00), bj_UNIT_FACING)
	call ShowUnitHide(GetLastCreatedUnit())
endfunction

function Trig_Capitol_2_Dummies_Func001C takes nothing returns boolean
	if GetUnitTypeId(GetTriggerUnit()) == 1747988530 then
		return true
	endif
	if GetUnitTypeId(GetTriggerUnit()) == 1747990327 then
		return true
	endif
	if GetUnitTypeId(GetTriggerUnit()) == 1747989591 then
		return true
	endif
	if GetUnitTypeId(GetTriggerUnit()) == 1747990085 then
		return true
	endif
	return false
endfunction

function Trig_Capitol_2_Dummies_Conditions takes nothing returns boolean
	if  not Trig_Capitol_2_Dummies_Func001C() then
		return false
	endif
	return true
endfunction

function Trig_Capitol_3_Dummies_Actions takes nothing returns nothing
	call CreateNUnitsAtLoc(1, 1751343475, GetOwningPlayer(GetTriggerUnit()), OffsetLocation(GetRectCenter(GetPlayableMapRect()), 100000000.00, 100000000.00), bj_UNIT_FACING)
	call ShowUnitHide(GetLastCreatedUnit())
endfunction

function Trig_Capitol_3_Dummies_Func001C takes nothing returns boolean
	if GetUnitTypeId(GetTriggerUnit()) == 1747988531 then
		return true
	endif
	if GetUnitTypeId(GetTriggerUnit()) == 1747990328 then
		return true
	endif
	if GetUnitTypeId(GetTriggerUnit()) == 1747989592 then
		return true
	endif
	if GetUnitTypeId(GetTriggerUnit()) == 1747990086 then
		return true
	endif
	return false
endfunction

function Trig_Capitol_3_Dummies_Conditions takes nothing returns boolean
	if  not Trig_Capitol_3_Dummies_Func001C() then
		return false
	endif
	return true
endfunction

function Trig_Capitol_Castle_UP_WE_T3_Actions takes nothing returns nothing
	call UnitAddAbilityBJ(1093677634, GetTriggerUnit())
endfunction

function Trig_Capitol_Castle_UP_WE_T3_Func002C takes nothing returns boolean
	if  not (GetUnitTypeId(GetTriggerUnit()) == 1747988531) then
		return false
	endif
	return true
endfunction

function Trig_Capitol_Castle_UP_WE_T3_Conditions takes nothing returns boolean
	if  not Trig_Capitol_Castle_UP_WE_T3_Func002C() then
		return false
	endif
	return true
endfunction

function Trig_Capitol_Castle_Up_BYZ_T3_Actions takes nothing returns nothing
	call UnitAddAbilityBJ(1093677634, GetTriggerUnit())
endfunction

function Trig_Capitol_Castle_Up_BYZ_T3_Func002C takes nothing returns boolean
	if  not (GetUnitTypeId(GetTriggerUnit()) == 1747989592) then
		return false
	endif
	return true
endfunction

function Trig_Capitol_Castle_Up_BYZ_T3_Conditions takes nothing returns boolean
	if  not Trig_Capitol_Castle_Up_BYZ_T3_Func002C() then
		return false
	endif
	return true
endfunction

function Trig_Capitol_Castle_Up_EE_T3_Actions takes nothing returns nothing
	call UnitAddAbilityBJ(1093677634, GetTriggerUnit())
endfunction

function Trig_Capitol_Castle_Up_EE_T3_Func002C takes nothing returns boolean
	if  not (GetUnitTypeId(GetTriggerUnit()) == 1747990328) then
		return false
	endif
	return true
endfunction

function Trig_Capitol_Castle_Up_EE_T3_Conditions takes nothing returns boolean
	if  not Trig_Capitol_Castle_Up_EE_T3_Func002C() then
		return false
	endif
	return true
endfunction

function Trig_Capitol_Castle_Up_ME_T3_Actions takes nothing returns nothing
	call UnitAddAbilityBJ(1093677634, GetTriggerUnit())
endfunction

function Trig_Capitol_Castle_Up_ME_T3_Func002C takes nothing returns boolean
	if  not (GetUnitTypeId(GetTriggerUnit()) == 1747990086) then
		return false
	endif
	return true
endfunction

function Trig_Capitol_Castle_Up_ME_T3_Conditions takes nothing returns boolean
	if  not Trig_Capitol_Castle_Up_ME_T3_Func002C() then
		return false
	endif
	return true
endfunction

function Trig_Capitol_Keep_UPG_WE_T2_Actions takes nothing returns nothing
	call UnitAddAbilityBJ(1093677634, GetTriggerUnit())
endfunction

function Trig_Capitol_Keep_UPG_WE_T2_Func002C takes nothing returns boolean
	if  not (GetUnitTypeId(GetTriggerUnit()) == 1747988530) then
		return false
	endif
	return true
endfunction

function Trig_Capitol_Keep_UPG_WE_T2_Conditions takes nothing returns boolean
	if  not Trig_Capitol_Keep_UPG_WE_T2_Func002C() then
		return false
	endif
	return true
endfunction

function Trig_Capitol_Keep_Upg_BYZ_T2_Actions takes nothing returns nothing
	call UnitAddAbilityBJ(1093677634, GetTriggerUnit())
endfunction

function Trig_Capitol_Keep_Upg_BYZ_T2_Func002C takes nothing returns boolean
	if  not (GetUnitTypeId(GetTriggerUnit()) == 1747989591) then
		return false
	endif
	return true
endfunction

function Trig_Capitol_Keep_Upg_BYZ_T2_Conditions takes nothing returns boolean
	if  not Trig_Capitol_Keep_Upg_BYZ_T2_Func002C() then
		return false
	endif
	return true
endfunction

function Trig_Capitol_Keep_Upg_EE_T2_Actions takes nothing returns nothing
	call UnitAddAbilityBJ(1093677634, GetTriggerUnit())
endfunction

function Trig_Capitol_Keep_Upg_EE_T2_Func002C takes nothing returns boolean
	if  not (GetUnitTypeId(GetTriggerUnit()) == 1747990327) then
		return false
	endif
	return true
endfunction

function Trig_Capitol_Keep_Upg_EE_T2_Conditions takes nothing returns boolean
	if  not Trig_Capitol_Keep_Upg_EE_T2_Func002C() then
		return false
	endif
	return true
endfunction

function Trig_Capitol_Keep_Upg_ME_T2_Actions takes nothing returns nothing
	call UnitAddAbilityBJ(1093677634, GetTriggerUnit())
endfunction

function Trig_Capitol_Keep_Upg_ME_T2_Func002C takes nothing returns boolean
	if  not (GetUnitTypeId(GetTriggerUnit()) == 1747990085) then
		return false
	endif
	return true
endfunction

function Trig_Capitol_Keep_Upg_ME_T2_Conditions takes nothing returns boolean
	if  not Trig_Capitol_Keep_Upg_ME_T2_Func002C() then
		return false
	endif
	return true
endfunction

function Trig_Capturing_Ore_15g_Actions takes nothing returns nothing
	set udg_PlayerRegions[GetConvertedPlayerId(GetOwningPlayer(GetAttacker()))] = udg_PlayerRegions[GetConvertedPlayerId(GetOwningPlayer(GetAttacker()))] + 1
	set udg_PlayerRegions[GetConvertedPlayerId(GetOwningPlayer(GetAttackedUnitBJ()))] = udg_PlayerRegions[GetConvertedPlayerId(GetOwningPlayer(GetAttackedUnitBJ()))] - 1
	call ReplaceUnitBJ(GetAttackedUnitBJ(), GetUnitTypeId(GetAttackedUnitBJ()), bj_UNIT_STATE_METHOD_DEFAULTS)
	call SetUnitOwner(GetLastReplacedUnitBJ(), GetOwningPlayer(GetAttacker()), true)
	call SetUnitLifePercentBJ(GetAttackedUnitBJ(), 100.)
endfunction

function Trig_Capturing_Ore_15g_Func001C takes nothing returns boolean
	if  not (GetUnitTypeId(GetAttackedUnitBJ()) == 1747989043) then
		return false
	endif
	if  not (GetUnitLifePercent(GetAttackedUnitBJ()) <= 80.00) then
		return false
	endif
	return true
endfunction

function Trig_Capturing_Ore_15g_Conditions takes nothing returns boolean
	if  not Trig_Capturing_Ore_15g_Func001C() then
		return false
	endif
	return true
endfunction

function Trig_Capturing_Ore_25g_Actions takes nothing returns nothing
	set udg_PlayerRegions[GetConvertedPlayerId(GetOwningPlayer(GetAttacker()))] = udg_PlayerRegions[GetConvertedPlayerId(GetOwningPlayer(GetAttacker()))] + 1
	set udg_PlayerRegions[GetConvertedPlayerId(GetOwningPlayer(GetAttackedUnitBJ()))] = udg_PlayerRegions[GetConvertedPlayerId(GetOwningPlayer(GetAttackedUnitBJ()))] - 1
	call ReplaceUnitBJ(GetAttackedUnitBJ(), GetUnitTypeId(GetAttackedUnitBJ()), bj_UNIT_STATE_METHOD_DEFAULTS)
	call SetUnitOwner(GetLastReplacedUnitBJ(), GetOwningPlayer(GetAttacker()), true)
	call SetUnitLifePercentBJ(GetAttackedUnitBJ(), 100.)
endfunction

function Trig_Capturing_Ore_25g_Func001C takes nothing returns boolean
	if  not (GetUnitTypeId(GetAttackedUnitBJ()) == 1747989045) then
		return false
	endif
	if  not (GetUnitLifePercent(GetAttackedUnitBJ()) <= 80.00) then
		return false
	endif
	return true
endfunction

function Trig_Capturing_Ore_25g_Conditions takes nothing returns boolean
	if  not Trig_Capturing_Ore_25g_Func001C() then
		return false
	endif
	return true
endfunction

function Trig_Capturing_Ore_40g_Actions takes nothing returns nothing
	set udg_PlayerRegions[GetConvertedPlayerId(GetOwningPlayer(GetAttacker()))] = udg_PlayerRegions[GetConvertedPlayerId(GetOwningPlayer(GetAttacker()))] + 1
	set udg_PlayerRegions[GetConvertedPlayerId(GetOwningPlayer(GetAttackedUnitBJ()))] = udg_PlayerRegions[GetConvertedPlayerId(GetOwningPlayer(GetAttackedUnitBJ()))] - 1
	call ReplaceUnitBJ(GetAttackedUnitBJ(), GetUnitTypeId(GetAttackedUnitBJ()), bj_UNIT_STATE_METHOD_DEFAULTS)
	call SetUnitOwner(GetLastReplacedUnitBJ(), GetOwningPlayer(GetAttacker()), true)
	call SetUnitLifePercentBJ(GetAttackedUnitBJ(), 100.)
endfunction

function Trig_Capturing_Ore_40g_Func001C takes nothing returns boolean
	if  not (GetUnitTypeId(GetAttackedUnitBJ()) == 1747989042) then
		return false
	endif
	if  not (GetUnitLifePercent(GetAttackedUnitBJ()) <= 80.00) then
		return false
	endif
	return true
endfunction

function Trig_Capturing_Ore_40g_Conditions takes nothing returns boolean
	if  not Trig_Capturing_Ore_40g_Func001C() then
		return false
	endif
	return true
endfunction

function Trig_Capturing_Ore_50g_Actions takes nothing returns nothing
	set udg_PlayerRegions[GetConvertedPlayerId(GetOwningPlayer(GetAttacker()))] = udg_PlayerRegions[GetConvertedPlayerId(GetOwningPlayer(GetAttacker()))] + 1
	set udg_PlayerRegions[GetConvertedPlayerId(GetOwningPlayer(GetAttackedUnitBJ()))] = udg_PlayerRegions[GetConvertedPlayerId(GetOwningPlayer(GetAttackedUnitBJ()))] - 1
	call ReplaceUnitBJ(GetAttackedUnitBJ(), GetUnitTypeId(GetAttackedUnitBJ()), bj_UNIT_STATE_METHOD_DEFAULTS)
	call SetUnitOwner(GetLastReplacedUnitBJ(), GetOwningPlayer(GetAttacker()), true)
	call SetUnitLifePercentBJ(GetAttackedUnitBJ(), 100.)
endfunction

function Trig_Capturing_Ore_50g_Func001C takes nothing returns boolean
	if  not (GetUnitTypeId(GetAttackedUnitBJ()) == 1747989044) then
		return false
	endif
	if  not (GetUnitLifePercent(GetAttackedUnitBJ()) <= 80.00) then
		return false
	endif
	return true
endfunction

function Trig_Capturing_Ore_50g_Conditions takes nothing returns boolean
	if  not Trig_Capturing_Ore_50g_Func001C() then
		return false
	endif
	return true
endfunction

function Trig_Castle_BYZ_T1_Actions takes nothing returns nothing
	call UnitAddAbilityBJ(1093677896, GetConstructedStructure())
endfunction

function Trig_Castle_BYZ_T1_Func002C takes nothing returns boolean
	if  not (GetUnitTypeId(GetConstructedStructure()) == 1747990353) then
		return false
	endif
	return true
endfunction

function Trig_Castle_BYZ_T1_Conditions takes nothing returns boolean
	if  not Trig_Castle_BYZ_T1_Func002C() then
		return false
	endif
	return true
endfunction

function Trig_Castle_BYZ_T2_Actions takes nothing returns nothing
	call UnitAddAbilityBJ(1093677896, GetTriggerUnit())
endfunction

function Trig_Castle_BYZ_T2_Func002C takes nothing returns boolean
	if  not (GetUnitTypeId(GetTriggerUnit()) == 1747990354) then
		return false
	endif
	return true
endfunction

function Trig_Castle_BYZ_T2_Conditions takes nothing returns boolean
	if  not Trig_Castle_BYZ_T2_Func002C() then
		return false
	endif
	return true
endfunction

function Trig_Castle_BYZ_T3_Actions takes nothing returns nothing
	call UnitAddAbilityBJ(1093677896, GetTriggerUnit())
endfunction

function Trig_Castle_BYZ_T3_Func002C takes nothing returns boolean
	if  not (GetUnitTypeId(GetTriggerUnit()) == 1747990356) then
		return false
	endif
	return true
endfunction

function Trig_Castle_BYZ_T3_Conditions takes nothing returns boolean
	if  not Trig_Castle_BYZ_T3_Func002C() then
		return false
	endif
	return true
endfunction

function Trig_Castle_EE_T1_Actions takes nothing returns nothing
	call UnitAddAbilityBJ(1093677896, GetConstructedStructure())
endfunction

function Trig_Castle_EE_T1_Func002C takes nothing returns boolean
	if  not (GetUnitTypeId(GetConstructedStructure()) == 1747990351) then
		return false
	endif
	return true
endfunction

function Trig_Castle_EE_T1_Conditions takes nothing returns boolean
	if  not Trig_Castle_EE_T1_Func002C() then
		return false
	endif
	return true
endfunction

function Trig_Castle_EE_T2_Actions takes nothing returns nothing
	call UnitAddAbilityBJ(1093677896, GetTriggerUnit())
endfunction

function Trig_Castle_EE_T2_Func002C takes nothing returns boolean
	if  not (GetUnitTypeId(GetTriggerUnit()) == 1747990352) then
		return false
	endif
	return true
endfunction

function Trig_Castle_EE_T2_Conditions takes nothing returns boolean
	if  not Trig_Castle_EE_T2_Func002C() then
		return false
	endif
	return true
endfunction

function Trig_Castle_EE_T3_Actions takes nothing returns nothing
	call UnitAddAbilityBJ(1093677896, GetTriggerUnit())
endfunction

function Trig_Castle_EE_T3_Func002C takes nothing returns boolean
	if  not (GetUnitTypeId(GetTriggerUnit()) == 1747990356) then
		return false
	endif
	return true
endfunction

function Trig_Castle_EE_T3_Conditions takes nothing returns boolean
	if  not Trig_Castle_EE_T3_Func002C() then
		return false
	endif
	return true
endfunction

function Trig_Castle_ME_T3_Actions takes nothing returns nothing
	call UnitAddAbilityBJ(1093677896, GetTriggerUnit())
endfunction

function Trig_Castle_ME_T3_Func002C takes nothing returns boolean
	if  not (GetUnitTypeId(GetTriggerUnit()) == 1747989809) then
		return false
	endif
	return true
endfunction

function Trig_Castle_ME_T3_Conditions takes nothing returns boolean
	if  not Trig_Castle_ME_T3_Func002C() then
		return false
	endif
	return true
endfunction

function Trig_Castle_ME__T1_Actions takes nothing returns nothing
	call UnitAddAbilityBJ(1093677896, GetTriggerUnit())
endfunction

function Trig_Castle_ME__T1_Func002C takes nothing returns boolean
	if  not (GetUnitTypeId(GetConstructedStructure()) == 1747989331) then
		return false
	endif
	return true
endfunction

function Trig_Castle_ME__T1_Conditions takes nothing returns boolean
	if  not Trig_Castle_ME__T1_Func002C() then
		return false
	endif
	return true
endfunction

function Trig_Castle_ME__T2_Actions takes nothing returns nothing
	call UnitAddAbilityBJ(1093677896, GetTriggerUnit())
endfunction

function Trig_Castle_ME__T2_Func002C takes nothing returns boolean
	if  not (GetUnitTypeId(GetTriggerUnit()) == 1747990350) then
		return false
	endif
	return true
endfunction

function Trig_Castle_ME__T2_Conditions takes nothing returns boolean
	if  not Trig_Castle_ME__T2_Func002C() then
		return false
	endif
	return true
endfunction

function Trig_Castle_WE_T1_Actions takes nothing returns nothing
	call UnitAddAbilityBJ(1093677896, GetTriggerUnit())
endfunction

function Trig_Castle_WE_T1_Func002C takes nothing returns boolean
	if  not (GetUnitTypeId(GetConstructedStructure()) == 1747989059) then
		return false
	endif
	return true
endfunction

function Trig_Castle_WE_T1_Conditions takes nothing returns boolean
	if  not Trig_Castle_WE_T1_Func002C() then
		return false
	endif
	return true
endfunction

function Trig_Castle_WE_T2_Actions takes nothing returns nothing
	call UnitAddAbilityBJ(1093677896, GetTriggerUnit())
endfunction

function Trig_Castle_WE_T2_Func002C takes nothing returns boolean
	if  not (GetUnitTypeId(GetTriggerUnit()) == 1747988809) then
		return false
	endif
	return true
endfunction

function Trig_Castle_WE_T2_Conditions takes nothing returns boolean
	if  not Trig_Castle_WE_T2_Func002C() then
		return false
	endif
	return true
endfunction

function Trig_Castle_WE_T3_Actions takes nothing returns nothing
	call UnitAddAbilityBJ(1093677896, GetTriggerUnit())
endfunction

function Trig_Castle_WE_T3_Func002C takes nothing returns boolean
	if  not (GetUnitTypeId(GetTriggerUnit()) == 1747989060) then
		return false
	endif
	return true
endfunction

function Trig_Castle_WE_T3_Conditions takes nothing returns boolean
	if  not Trig_Castle_WE_T3_Func002C() then
		return false
	endif
	return true
endfunction

function Trig_Convert_V2_Actions takes nothing returns nothing
	set udg_ConvertPoint = GetUnitLoc(GetSpellTargetUnit())
	call AddSpecialEffectLocBJ(udg_ConvertPoint, "Abilities\\Spells\\Orc\\Voodoo\\VoodooAuraTarget.mdl")
	call DestroyEffectBJ(GetLastCreatedEffectBJ())
	set udg_ConvertPoint2 = GetUnitLoc(GetSpellAbilityUnit())
	call AddSpecialEffectLocBJ(udg_ConvertPoint2, "Abilities\\Spells\\Orc\\Voodoo\\VoodooAura.mdl")
	call DestroyEffectBJ(GetLastCreatedEffectBJ())
	call RemoveLocation(udg_ConvertPoint)
	call RemoveLocation(udg_ConvertPoint2)
endfunction

function Trig_Convert_V2_Conditions takes nothing returns boolean
	if  not (GetSpellAbilityId() == 1093677620) then
		return false
	endif
	return true
endfunction

function Trig_Disabled_units_Byzantine_Actions takes nothing returns nothing
	set udg_AllPlayerUnits = GetPlayersAll()
	call ForForce(udg_AllPlayerUnits, ref_function_Trig_Disabled_units_Byzantine_Func002A)
endfunction

function Trig_Disabled_units_Byzantine_Func002A takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1747989570, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1747989556, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1747989559, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1747989557, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1747989560, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1747989573, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1747989574, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1848651841, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1848651833, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1848651832, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1747989582, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1747990097, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1747989812, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1747990098, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1747990099, false, GetEnumPlayer())
endfunction

function Trig_Disabled_units_EE_Actions takes nothing returns nothing
	set udg_AllPlayerUnits = GetPlayersAll()
	call ForForce(udg_AllPlayerUnits, ref_function_Trig_Disabled_units_EE_Func002A)
endfunction

function Trig_Disabled_units_EE_Func002A takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1747990584, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1747990594, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1747990583, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1747990607, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1747990598, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1747990606, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1747990599, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1747990601, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1848651855, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1848651852, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1848651850, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1747990595, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1747990596, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1747990604, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1747990603, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1747990322, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1747990323, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1747990321, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1747990324, false, GetEnumPlayer())
endfunction

function Trig_Disabled_units_ME_Actions takes nothing returns nothing
	set udg_AllPlayerUnits = GetPlayersAll()
	call ForForce(udg_AllPlayerUnits, ref_function_Trig_Disabled_units_ME_Func002A)
endfunction

function Trig_Disabled_units_ME_Func002A takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1747989815, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1747989816, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1747989825, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1747989814, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1747989830, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1848651844, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1747989833, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1747989832, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1747989835, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1747989836, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1848651848, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1848651846, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1747989828, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1747989826, false, GetEnumPlayer())
endfunction

function Trig_Disabled_units_at_beginning_Actions takes nothing returns nothing
	set udg_AllPlayerUnits = GetPlayersAll()
	call ForForce(udg_AllPlayerUnits, ref_function_Trig_Disabled_units_at_beginning_Func002A)
endfunction

function Trig_Disabled_units_at_beginning_Func002A takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1747989057, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1747988558, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1747988551, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1747989066, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1848651824, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1848651826, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1747988818, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1747989080, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1747989072, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1747989082, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1747988559, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1747988812, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1848651828, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1747989065, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1747989067, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1747989301, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1848651843, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1747988561, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1747988788, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1747988565, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1747988566, false, GetEnumPlayer())
	call SetPlayerUnitAvailableBJ(1747988567, false, GetEnumPlayer())
endfunction

function Trig_EE_Archer_1_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1848651855, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1848651851, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_EE_Archer_1_Func003C takes nothing returns boolean
	if  not (GetResearched() == 1378890053) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378890053, GetOwningPlayer(GetResearchingUnit())) == 1) then
		return false
	endif
	return true
endfunction

function Trig_EE_Archer_1_Conditions takes nothing returns boolean
	if  not Trig_EE_Archer_1_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_EE_Archer_2_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1848651852, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1848651855, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_EE_Archer_2_Func003C takes nothing returns boolean
	if  not (GetResearched() == 1378890053) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378890053, GetOwningPlayer(GetResearchingUnit())) == 2) then
		return false
	endif
	return true
endfunction

function Trig_EE_Archer_2_Conditions takes nothing returns boolean
	if  not Trig_EE_Archer_2_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_EE_Heavy_Cavalry_1_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1747990599, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1747990600, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_EE_Heavy_Cavalry_1_Func003C takes nothing returns boolean
	if  not (GetResearched() == 1378890052) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378890052, GetOwningPlayer(GetResearchingUnit())) == 1) then
		return false
	endif
	return true
endfunction

function Trig_EE_Heavy_Cavalry_1_Conditions takes nothing returns boolean
	if  not Trig_EE_Heavy_Cavalry_1_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_EE_Heavy_Cavalry_2_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1747990601, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1747990599, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_EE_Heavy_Cavalry_2_Func003C takes nothing returns boolean
	if  not (GetResearched() == 1378890052) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378890052, GetOwningPlayer(GetResearchingUnit())) == 2) then
		return false
	endif
	return true
endfunction

function Trig_EE_Heavy_Cavalry_2_Conditions takes nothing returns boolean
	if  not Trig_EE_Heavy_Cavalry_2_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_EE_Heavy_Infantry_1_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1747989825, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1747989817, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_EE_Heavy_Infantry_1_Func003C takes nothing returns boolean
	if  not (GetResearched() == 1378890051) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378890051, GetOwningPlayer(GetResearchingUnit())) == 1) then
		return false
	endif
	return true
endfunction

function Trig_EE_Heavy_Infantry_1_Conditions takes nothing returns boolean
	if  not Trig_EE_Heavy_Infantry_1_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_EE_Heavy_Infantry_2_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1747990607, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1747990583, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_EE_Heavy_Infantry_2_Func003C takes nothing returns boolean
	if  not (GetResearched() == 1378890051) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378890051, GetOwningPlayer(GetResearchingUnit())) == 2) then
		return false
	endif
	return true
endfunction

function Trig_EE_Heavy_Infantry_2_Conditions takes nothing returns boolean
	if  not Trig_EE_Heavy_Infantry_2_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_EE_Light_Cavalry_1_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1747990598, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1747990597, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_EE_Light_Cavalry_1_Func003C takes nothing returns boolean
	if  not (GetResearched() == 1378889818) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378889818, GetOwningPlayer(GetResearchingUnit())) == 1) then
		return false
	endif
	return true
endfunction

function Trig_EE_Light_Cavalry_1_Conditions takes nothing returns boolean
	if  not Trig_EE_Light_Cavalry_1_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_EE_Missile_Cavalry_1_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1747990595, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1747990608, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_EE_Missile_Cavalry_1_Func003C takes nothing returns boolean
	if  not (GetResearched() == 1378890040) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378890040, GetOwningPlayer(GetResearchingUnit())) == 1) then
		return false
	endif
	return true
endfunction

function Trig_EE_Missile_Cavalry_1_Conditions takes nothing returns boolean
	if  not Trig_EE_Missile_Cavalry_1_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_EE_Missile_Cavalry_2_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1747990596, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1747990595, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_EE_Missile_Cavalry_2_Func003C takes nothing returns boolean
	if  not (GetResearched() == 1378890040) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378890040, GetOwningPlayer(GetResearchingUnit())) == 2) then
		return false
	endif
	return true
endfunction

function Trig_EE_Missile_Cavalry_2_Conditions takes nothing returns boolean
	if  not Trig_EE_Missile_Cavalry_2_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_EE_Pikeman_1_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1747990604, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1747990602, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_EE_Pikeman_1_Func003C takes nothing returns boolean
	if  not (GetResearched() == 1378890054) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378890054, GetOwningPlayer(GetResearchingUnit())) == 1) then
		return false
	endif
	return true
endfunction

function Trig_EE_Pikeman_1_Conditions takes nothing returns boolean
	if  not Trig_EE_Pikeman_1_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_EE_Pikeman_2_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1747990603, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1747990604, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_EE_Pikeman_2_Func003C takes nothing returns boolean
	if  not (GetResearched() == 1378890054) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378890054, GetOwningPlayer(GetResearchingUnit())) == 2) then
		return false
	endif
	return true
endfunction

function Trig_EE_Pikeman_2_Conditions takes nothing returns boolean
	if  not Trig_EE_Pikeman_2_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_EE_Skirmisher_1_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1848651850, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1848651849, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_EE_Skirmisher_1_Func003C takes nothing returns boolean
	if  not (GetResearched() == 1378890041) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378890041, GetOwningPlayer(GetResearchingUnit())) == 1) then
		return false
	endif
	return true
endfunction

function Trig_EE_Skirmisher_1_Conditions takes nothing returns boolean
	if  not Trig_EE_Skirmisher_1_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_EE_Spearmen_1_Copy_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1747990584, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1747990593, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_EE_Spearmen_1_Copy_Func003C takes nothing returns boolean
	if  not (GetResearched() == 1378890049) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378890049, GetOwningPlayer(GetResearchingUnit())) == 1) then
		return false
	endif
	return true
endfunction

function Trig_EE_Spearmen_1_Copy_Conditions takes nothing returns boolean
	if  not Trig_EE_Spearmen_1_Copy_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_EE_Spearmen_2_Copy_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1747990594, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1747990584, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_EE_Spearmen_2_Copy_Func003C takes nothing returns boolean
	if  not (GetResearched() == 1378890049) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378890049, GetOwningPlayer(GetResearchingUnit())) == 2) then
		return false
	endif
	return true
endfunction

function Trig_EE_Spearmen_2_Copy_Conditions takes nothing returns boolean
	if  not Trig_EE_Spearmen_2_Copy_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_F9_Actions takes nothing returns nothing
	call CreateQuestBJ(bj_QUESTTYPE_OPT_DISCOVERED, "TRIGSTR_097", "TRIGSTR_098", "ReplaceableTextures\\CommandButtons\\BTNSteelMelee.blp")
	call CreateQuestBJ(bj_QUESTTYPE_OPT_DISCOVERED, "TRIGSTR_103", "TRIGSTR_104", "ReplaceableTextures\\WorldEditUI\\Doodad-Cinematic.blp")
	call CreateQuestBJ(bj_QUESTTYPE_OPT_DISCOVERED, "TRIGSTR_2667", "TRIGSTR_2668", "ReplaceableTextures\\WorldEditUI\\Editor-MultipleUnits.blp")
endfunction

function Trig_FarmHouse_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1747988788, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1747988535, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_FarmHouse_Byzantine_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1747990097, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1747989594, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_FarmHouse_Byzantine_Func003C takes nothing returns boolean
	if  not (GetResearched() == 1378889780) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378889780, GetOwningPlayer(GetResearchingUnit())) == 1) then
		return false
	endif
	return true
endfunction

function Trig_FarmHouse_Byzantine_Conditions takes nothing returns boolean
	if  not Trig_FarmHouse_Byzantine_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_FarmHouse_Func003C takes nothing returns boolean
	if  not (GetResearched() == 1378889780) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378889780, GetOwningPlayer(GetResearchingUnit())) == 1) then
		return false
	endif
	return true
endfunction

function Trig_FarmHouse_Conditions takes nothing returns boolean
	if  not Trig_FarmHouse_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_FarmHouse_EE_Copy_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1747990324, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1747990325, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_FarmHouse_EE_Copy_Func003C takes nothing returns boolean
	if  not (GetResearched() == 1378889780) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378889780, GetOwningPlayer(GetResearchingUnit())) == 1) then
		return false
	endif
	return true
endfunction

function Trig_FarmHouse_EE_Copy_Conditions takes nothing returns boolean
	if  not Trig_FarmHouse_EE_Copy_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Gate_Closing_IronGate_H_Actions takes nothing returns nothing
	set udg_Temp_Point = GetUnitLoc(GetSpellAbilityUnit())
	set udg_GHoriTP = OffsetLocation(udg_Temp_Point, 0.00, 200.00)
	set udg_GHoriDetectCenter = RectFromCenterSizeBJ(udg_Temp_Point, 280.00, 300.00)
	set udg_GateMovingUnits1 = GetUnitsInRectAll(udg_GHoriDetectCenter)
	call ForGroupBJ(udg_GateMovingUnits1, ref_function_Trig_Gate_Closing_IronGate_H_Func005A)
	call ReplaceUnitBJ(GetSpellAbilityUnit(), 1747989079, bj_UNIT_STATE_METHOD_RELATIVE)
	call ResetUnitAnimation(GetLastReplacedUnitBJ())
	call DestroyGroup(udg_GateMovingUnits1)
	call RemoveLocation(udg_GHoriTP)
	call RemoveLocation(udg_Temp_Point)
endfunction

function Trig_Gate_Closing_IronGate_H_Conditions takes nothing returns boolean
	if  not (GetSpellAbilityId() == 1093677624) then
		return false
	endif
	if  not (GetUnitTypeId(GetSpellAbilityUnit()) == 1747989078) then
		return false
	endif
	return true
endfunction

function Trig_Gate_Closing_IronGate_H_Func005Func001C takes nothing returns boolean
	if  not (IsUnitType(GetEnumUnit(), UNIT_TYPE_STRUCTURE) == false) then
		return false
	endif
	return true
endfunction

function Trig_Gate_Closing_IronGate_H_Func005A takes nothing returns nothing
	if Trig_Gate_Closing_IronGate_H_Func005Func001C() then
		call SetUnitPositionLoc(GetEnumUnit(), udg_GHoriTP)
	endif
endfunction

function Trig_Gate_Closing_IronGate_H_ME_Actions takes nothing returns nothing
	set udg_Temp_Point = GetUnitLoc(GetSpellAbilityUnit())
	set udg_GHoriTP = OffsetLocation(udg_Temp_Point, 0.00, 200.00)
	set udg_GHoriDetectCenter = RectFromCenterSizeBJ(udg_Temp_Point, 280.00, 300.00)
	set udg_GateMovingUnits1 = GetUnitsInRectAll(udg_GHoriDetectCenter)
	call ForGroupBJ(udg_GateMovingUnits1, ref_function_Trig_Gate_Closing_IronGate_H_ME_Func005A)
	call ReplaceUnitBJ(GetSpellAbilityUnit(), 1747990072, bj_UNIT_STATE_METHOD_RELATIVE)
	call ResetUnitAnimation(GetLastReplacedUnitBJ())
	call DestroyGroup(udg_GateMovingUnits1)
	call RemoveLocation(udg_GHoriTP)
	call RemoveLocation(udg_Temp_Point)
endfunction

function Trig_Gate_Closing_IronGate_H_ME_Conditions takes nothing returns boolean
	if  not (GetSpellAbilityId() == 1093677624) then
		return false
	endif
	if  not (GetUnitTypeId(GetSpellAbilityUnit()) == 1747990071) then
		return false
	endif
	return true
endfunction

function Trig_Gate_Closing_IronGate_H_ME_Func005Func001C takes nothing returns boolean
	if  not (IsUnitType(GetEnumUnit(), UNIT_TYPE_STRUCTURE) == false) then
		return false
	endif
	return true
endfunction

function Trig_Gate_Closing_IronGate_H_ME_Func005A takes nothing returns nothing
	if Trig_Gate_Closing_IronGate_H_ME_Func005Func001C() then
		call SetUnitPositionLoc(GetEnumUnit(), udg_GHoriTP)
	endif
endfunction

function Trig_Gate_Closing_IronGate_V_Actions takes nothing returns nothing
	set udg_Temp_Point = GetUnitLoc(GetSpellAbilityUnit())
	set udg_GVertRP = OffsetLocation(udg_Temp_Point, 200.00, 0.00)
	set udg_GVertDetectCenter = RectFromCenterSizeBJ(udg_Temp_Point, 300.00, 280.00)
	set udg_GateMovingUnits1 = GetUnitsInRectAll(udg_GVertDetectCenter)
	call ForGroupBJ(udg_GateMovingUnits1, ref_function_Trig_Gate_Closing_IronGate_V_Func005A)
	call ReplaceUnitBJ(GetSpellAbilityUnit(), 1747988826, bj_UNIT_STATE_METHOD_RELATIVE)
	call ResetUnitAnimation(GetLastReplacedUnitBJ())
	call DestroyGroup(udg_GateMovingUnits1)
	call RemoveLocation(udg_GVertRP)
	call RemoveLocation(udg_Temp_Point)
endfunction

function Trig_Gate_Closing_IronGate_V_Conditions takes nothing returns boolean
	if  not (GetSpellAbilityId() == 1093677624) then
		return false
	endif
	if  not (GetUnitTypeId(GetSpellAbilityUnit()) == 1747989077) then
		return false
	endif
	return true
endfunction

function Trig_Gate_Closing_IronGate_V_Func005Func001C takes nothing returns boolean
	if  not (IsUnitType(GetEnumUnit(), UNIT_TYPE_STRUCTURE) == false) then
		return false
	endif
	return true
endfunction

function Trig_Gate_Closing_IronGate_V_Func005A takes nothing returns nothing
	if Trig_Gate_Closing_IronGate_V_Func005Func001C() then
		call SetUnitPositionLoc(GetEnumUnit(), udg_GVertRP)
	endif
endfunction

function Trig_Gate_Closing_IronGate_V_ME_Actions takes nothing returns nothing
	set udg_Temp_Point = GetUnitLoc(GetSpellAbilityUnit())
	set udg_GVertRP = OffsetLocation(udg_Temp_Point, 200.00, 0.00)
	set udg_GVertDetectCenter = RectFromCenterSizeBJ(udg_Temp_Point, 300.00, 280.00)
	set udg_GateMovingUnits1 = GetUnitsInRectAll(udg_GVertDetectCenter)
	call ForGroupBJ(udg_GateMovingUnits1, ref_function_Trig_Gate_Closing_IronGate_V_ME_Func005A)
	call ReplaceUnitBJ(GetSpellAbilityUnit(), 1747990081, bj_UNIT_STATE_METHOD_RELATIVE)
	call ResetUnitAnimation(GetLastReplacedUnitBJ())
	call DestroyGroup(udg_GateMovingUnits1)
	call RemoveLocation(udg_GVertRP)
	call RemoveLocation(udg_Temp_Point)
endfunction

function Trig_Gate_Closing_IronGate_V_ME_Conditions takes nothing returns boolean
	if  not (GetSpellAbilityId() == 1093677624) then
		return false
	endif
	if  not (GetUnitTypeId(GetSpellAbilityUnit()) == 1747990073) then
		return false
	endif
	return true
endfunction

function Trig_Gate_Closing_IronGate_V_ME_Func005Func001C takes nothing returns boolean
	if  not (IsUnitType(GetEnumUnit(), UNIT_TYPE_STRUCTURE) == false) then
		return false
	endif
	return true
endfunction

function Trig_Gate_Closing_IronGate_V_ME_Func005A takes nothing returns nothing
	if Trig_Gate_Closing_IronGate_V_ME_Func005Func001C() then
		call SetUnitPositionLoc(GetEnumUnit(), udg_GVertRP)
	endif
endfunction

function Trig_Gate_Closing_WoodGate_H_Actions takes nothing returns nothing
	set udg_Temp_Point = GetUnitLoc(GetSpellAbilityUnit())
	set udg_GHoriTP = OffsetLocation(udg_Temp_Point, 0.00, 200.00)
	set udg_GHoriDetectCenter = RectFromCenterSizeBJ(udg_Temp_Point, 280.00, 300.00)
	set udg_GateMovingUnits1 = GetUnitsInRectAll(udg_GHoriDetectCenter)
	call ForGroupBJ(udg_GateMovingUnits1, ref_function_Trig_Gate_Closing_WoodGate_H_Func005A)
	call ReplaceUnitBJ(GetSpellAbilityUnit(), 1747988824, bj_UNIT_STATE_METHOD_RELATIVE)
	call ResetUnitAnimation(GetLastReplacedUnitBJ())
	call DestroyGroup(udg_GateMovingUnits1)
	call RemoveLocation(udg_GHoriTP)
	call RemoveLocation(udg_Temp_Point)
endfunction

function Trig_Gate_Closing_WoodGate_H_Conditions takes nothing returns boolean
	if  not (GetSpellAbilityId() == 1093677624) then
		return false
	endif
	if  not (GetUnitTypeId(GetSpellAbilityUnit()) == 1747989046) then
		return false
	endif
	return true
endfunction

function Trig_Gate_Closing_WoodGate_H_Func005Func001C takes nothing returns boolean
	if  not (IsUnitType(GetEnumUnit(), UNIT_TYPE_STRUCTURE) == false) then
		return false
	endif
	return true
endfunction

function Trig_Gate_Closing_WoodGate_H_Func005A takes nothing returns nothing
	if Trig_Gate_Closing_WoodGate_H_Func005Func001C() then
		call SetUnitPositionLoc(GetEnumUnit(), udg_GHoriTP)
	endif
endfunction

function Trig_Gate_Closing_WoodGate_H_ME_Actions takes nothing returns nothing
	set udg_Temp_Point = GetUnitLoc(GetSpellAbilityUnit())
	set udg_GHoriTP = OffsetLocation(udg_Temp_Point, 0.00, 200.00)
	set udg_GHoriDetectCenter = RectFromCenterSizeBJ(udg_Temp_Point, 280.00, 300.00)
	set udg_GateMovingUnits1 = GetUnitsInRectAll(udg_GHoriDetectCenter)
	call ForGroupBJ(udg_GateMovingUnits1, ref_function_Trig_Gate_Closing_WoodGate_H_ME_Func005A)
	call ReplaceUnitBJ(GetSpellAbilityUnit(), 1747990090, bj_UNIT_STATE_METHOD_RELATIVE)
	call ResetUnitAnimation(GetLastReplacedUnitBJ())
	call DestroyGroup(udg_GateMovingUnits1)
	call RemoveLocation(udg_GHoriTP)
	call RemoveLocation(udg_Temp_Point)
endfunction

function Trig_Gate_Closing_WoodGate_H_ME_Conditions takes nothing returns boolean
	if  not (GetSpellAbilityId() == 1093677624) then
		return false
	endif
	if  not (GetUnitTypeId(GetSpellAbilityUnit()) == 1747990089) then
		return false
	endif
	return true
endfunction

function Trig_Gate_Closing_WoodGate_H_ME_Func005Func001C takes nothing returns boolean
	if  not (IsUnitType(GetEnumUnit(), UNIT_TYPE_STRUCTURE) == false) then
		return false
	endif
	return true
endfunction

function Trig_Gate_Closing_WoodGate_H_ME_Func005A takes nothing returns nothing
	if Trig_Gate_Closing_WoodGate_H_ME_Func005Func001C() then
		call SetUnitPositionLoc(GetEnumUnit(), udg_GHoriTP)
	endif
endfunction

function Trig_Gate_Closing_WoodGate_V_Actions takes nothing returns nothing
	set udg_Temp_Point = GetUnitLoc(GetSpellAbilityUnit())
	set udg_GVertRP = OffsetLocation(udg_Temp_Point, 200.00, 0.00)
	set udg_GVertDetectCenter = RectFromCenterSizeBJ(udg_Temp_Point, 300.00, 280.00)
	set udg_GateMovingUnits1 = GetUnitsInRectAll(udg_GVertDetectCenter)
	call ForGroupBJ(udg_GateMovingUnits1, ref_function_Trig_Gate_Closing_WoodGate_V_Func005A)
	call ReplaceUnitBJ(GetSpellAbilityUnit(), 1747988825, bj_UNIT_STATE_METHOD_RELATIVE)
	call ResetUnitAnimation(GetLastReplacedUnitBJ())
	call DestroyGroup(udg_GateMovingUnits1)
	call RemoveLocation(udg_GVertRP)
	call RemoveLocation(udg_Temp_Point)
endfunction

function Trig_Gate_Closing_WoodGate_V_Conditions takes nothing returns boolean
	if  not (GetSpellAbilityId() == 1093677624) then
		return false
	endif
	if  not (GetUnitTypeId(GetSpellAbilityUnit()) == 1747989047) then
		return false
	endif
	return true
endfunction

function Trig_Gate_Closing_WoodGate_V_Func005Func001C takes nothing returns boolean
	if  not (IsUnitType(GetEnumUnit(), UNIT_TYPE_STRUCTURE) == false) then
		return false
	endif
	return true
endfunction

function Trig_Gate_Closing_WoodGate_V_Func005A takes nothing returns nothing
	if Trig_Gate_Closing_WoodGate_V_Func005Func001C() then
		call SetUnitPositionLoc(GetEnumUnit(), udg_GVertRP)
	endif
endfunction

function Trig_Gate_Closing_WoodGate_V_ME_Actions takes nothing returns nothing
	set udg_Temp_Point = GetUnitLoc(GetSpellAbilityUnit())
	set udg_GVertRP = OffsetLocation(udg_Temp_Point, 200.00, 0.00)
	set udg_GVertDetectCenter = RectFromCenterSizeBJ(udg_Temp_Point, 300.00, 280.00)
	set udg_GateMovingUnits1 = GetUnitsInRectAll(udg_GVertDetectCenter)
	call ForGroupBJ(udg_GateMovingUnits1, ref_function_Trig_Gate_Closing_WoodGate_V_ME_Func005A)
	call ReplaceUnitBJ(GetSpellAbilityUnit(), 1747990092, bj_UNIT_STATE_METHOD_RELATIVE)
	call ResetUnitAnimation(GetLastReplacedUnitBJ())
	call DestroyGroup(udg_GateMovingUnits1)
	call RemoveLocation(udg_GVertRP)
	call RemoveLocation(udg_Temp_Point)
endfunction

function Trig_Gate_Closing_WoodGate_V_ME_Conditions takes nothing returns boolean
	if  not (GetSpellAbilityId() == 1093677624) then
		return false
	endif
	if  not (GetUnitTypeId(GetSpellAbilityUnit()) == 1747990091) then
		return false
	endif
	return true
endfunction

function Trig_Gate_Closing_WoodGate_V_ME_Func005Func001C takes nothing returns boolean
	if  not (IsUnitType(GetEnumUnit(), UNIT_TYPE_STRUCTURE) == false) then
		return false
	endif
	return true
endfunction

function Trig_Gate_Closing_WoodGate_V_ME_Func005A takes nothing returns nothing
	if Trig_Gate_Closing_WoodGate_V_ME_Func005Func001C() then
		call SetUnitPositionLoc(GetEnumUnit(), udg_GVertRP)
	endif
endfunction

function Trig_Gate_Opening_Func001Func001C takes nothing returns boolean
	if  not (GetSpellAbilityId() == 1093677624) then
		return false
	endif
	if  not (GetUnitTypeId(GetSpellAbilityUnit()) == 1747988825) then
		return false
	endif
	return true
endfunction

function Trig_Gate_Opening_Func001C takes nothing returns boolean
	if  not Trig_Gate_Opening_Func001Func001C() then
		return false
	endif
	return true
endfunction

function Trig_Gate_Opening_Func002Func001C takes nothing returns boolean
	if  not (GetSpellAbilityId() == 1093677624) then
		return false
	endif
	if  not (GetUnitTypeId(GetSpellAbilityUnit()) == 1747988824) then
		return false
	endif
	return true
endfunction

function Trig_Gate_Opening_Func002C takes nothing returns boolean
	if  not Trig_Gate_Opening_Func002Func001C() then
		return false
	endif
	return true
endfunction

function Trig_Gate_Opening_Func003Func001C takes nothing returns boolean
	if  not (GetSpellAbilityId() == 1093677624) then
		return false
	endif
	if  not (GetUnitTypeId(GetSpellAbilityUnit()) == 1747988826) then
		return false
	endif
	return true
endfunction

function Trig_Gate_Opening_Func003C takes nothing returns boolean
	if  not Trig_Gate_Opening_Func003Func001C() then
		return false
	endif
	return true
endfunction

function Trig_Gate_Opening_Func004Func001C takes nothing returns boolean
	if  not (GetSpellAbilityId() == 1093677624) then
		return false
	endif
	if  not (GetUnitTypeId(GetSpellAbilityUnit()) == 1747989079) then
		return false
	endif
	return true
endfunction

function Trig_Gate_Opening_Func004C takes nothing returns boolean
	if  not Trig_Gate_Opening_Func004Func001C() then
		return false
	endif
	return true
endfunction

function Trig_Gate_Opening_Actions takes nothing returns nothing
	if Trig_Gate_Opening_Func001C() then
		call ReplaceUnitBJ(GetSpellAbilityUnit(), 1747989047, bj_UNIT_STATE_METHOD_RELATIVE)
		call SetUnitAnimation(GetLastReplacedUnitBJ(), "Death Alternate")
	endif
	if Trig_Gate_Opening_Func002C() then
		call ReplaceUnitBJ(GetSpellAbilityUnit(), 1747989046, bj_UNIT_STATE_METHOD_RELATIVE)
		call SetUnitAnimation(GetLastReplacedUnitBJ(), "Death Alternate")
	endif
	if Trig_Gate_Opening_Func003C() then
		call ReplaceUnitBJ(GetSpellAbilityUnit(), 1747989077, bj_UNIT_STATE_METHOD_RELATIVE)
		call SetUnitAnimation(GetLastReplacedUnitBJ(), "Death Alternate")
	endif
	if Trig_Gate_Opening_Func004C() then
		call ReplaceUnitBJ(GetSpellAbilityUnit(), 1747989078, bj_UNIT_STATE_METHOD_RELATIVE)
		call SetUnitAnimation(GetLastReplacedUnitBJ(), "Death Alternate")
	endif
endfunction

function Trig_Gate_Opening_ME_Func001Func001C takes nothing returns boolean
	if  not (GetSpellAbilityId() == 1093677624) then
		return false
	endif
	if  not (GetUnitTypeId(GetSpellAbilityUnit()) == 1747990092) then
		return false
	endif
	return true
endfunction

function Trig_Gate_Opening_ME_Func001C takes nothing returns boolean
	if  not Trig_Gate_Opening_ME_Func001Func001C() then
		return false
	endif
	return true
endfunction

function Trig_Gate_Opening_ME_Func002Func001C takes nothing returns boolean
	if  not (GetSpellAbilityId() == 1093677624) then
		return false
	endif
	if  not (GetUnitTypeId(GetSpellAbilityUnit()) == 1747990090) then
		return false
	endif
	return true
endfunction

function Trig_Gate_Opening_ME_Func002C takes nothing returns boolean
	if  not Trig_Gate_Opening_ME_Func002Func001C() then
		return false
	endif
	return true
endfunction

function Trig_Gate_Opening_ME_Func003Func001C takes nothing returns boolean
	if  not (GetSpellAbilityId() == 1093677624) then
		return false
	endif
	if  not (GetUnitTypeId(GetSpellAbilityUnit()) == 1747990081) then
		return false
	endif
	return true
endfunction

function Trig_Gate_Opening_ME_Func003C takes nothing returns boolean
	if  not Trig_Gate_Opening_ME_Func003Func001C() then
		return false
	endif
	return true
endfunction

function Trig_Gate_Opening_ME_Func004Func001C takes nothing returns boolean
	if  not (GetSpellAbilityId() == 1093677624) then
		return false
	endif
	if  not (GetUnitTypeId(GetSpellAbilityUnit()) == 1747990072) then
		return false
	endif
	return true
endfunction

function Trig_Gate_Opening_ME_Func004C takes nothing returns boolean
	if  not Trig_Gate_Opening_ME_Func004Func001C() then
		return false
	endif
	return true
endfunction

function Trig_Gate_Opening_ME_Actions takes nothing returns nothing
	if Trig_Gate_Opening_ME_Func001C() then
		call ReplaceUnitBJ(GetSpellAbilityUnit(), 1747990091, bj_UNIT_STATE_METHOD_RELATIVE)
		call SetUnitAnimation(GetLastReplacedUnitBJ(), "Death Alternate")
	endif
	if Trig_Gate_Opening_ME_Func002C() then
		call ReplaceUnitBJ(GetSpellAbilityUnit(), 1747990089, bj_UNIT_STATE_METHOD_RELATIVE)
		call SetUnitAnimation(GetLastReplacedUnitBJ(), "Death Alternate")
	endif
	if Trig_Gate_Opening_ME_Func003C() then
		call ReplaceUnitBJ(GetSpellAbilityUnit(), 1747990073, bj_UNIT_STATE_METHOD_RELATIVE)
		call SetUnitAnimation(GetLastReplacedUnitBJ(), "Death Alternate")
	endif
	if Trig_Gate_Opening_ME_Func004C() then
		call ReplaceUnitBJ(GetSpellAbilityUnit(), 1747990071, bj_UNIT_STATE_METHOD_RELATIVE)
		call SetUnitAnimation(GetLastReplacedUnitBJ(), "Death Alternate")
	endif
endfunction

function Trig_Gold_Horse_250_Actions takes nothing returns nothing
	call AdjustPlayerStateBJ(250, GetOwningPlayer(GetSpellTargetUnit()), PLAYER_STATE_RESOURCE_GOLD)
	call RemoveUnit(GetSpellAbilityUnit())
	call DisplayTextToForce(GetForceOfPlayer(GetOwningPlayer(GetSpellTargetUnit())), "TRIGSTR_1230")
	set udg_TradePoint = GetUnitLoc(GetSpellTargetUnit())
	call PingMinimapLocForForce(GetForceOfPlayer(GetOwningPlayer(GetSpellTargetUnit())), udg_TradePoint, 2.00)
	call RemoveLocation(udg_TradePoint)
endfunction

function Trig_Gold_Horse_250_Func007Func002C takes nothing returns boolean
	if GetUnitTypeId(GetSpellTargetUnit()) == 1747988787 then
		return true
	endif
	if GetUnitTypeId(GetSpellTargetUnit()) == 1747990361 then
		return true
	endif
	if GetUnitTypeId(GetSpellTargetUnit()) == 1747989831 then
		return true
	endif
	if GetUnitTypeId(GetSpellTargetUnit()) == 1747989040 then
		return true
	endif
	return false
endfunction

function Trig_Gold_Horse_250_Func007C takes nothing returns boolean
	if  not (GetUnitTypeId(GetSpellAbilityUnit()) == 1747988791) then
		return false
	endif
	if  not Trig_Gold_Horse_250_Func007Func002C() then
		return false
	endif
	return true
endfunction

function Trig_Gold_Horse_250_Conditions takes nothing returns boolean
	if  not Trig_Gold_Horse_250_Func007C() then
		return false
	endif
	return true
endfunction

function Trig_Gold_Horse_500_Actions takes nothing returns nothing
	call AdjustPlayerStateBJ(500, GetOwningPlayer(GetSpellTargetUnit()), PLAYER_STATE_RESOURCE_GOLD)
	call RemoveUnit(GetSpellAbilityUnit())
	call DisplayTextToForce(GetForceOfPlayer(GetOwningPlayer(GetSpellTargetUnit())), "TRIGSTR_1231")
	set udg_TradePoint = GetUnitLoc(GetSpellTargetUnit())
	call PingMinimapLocForForce(GetForceOfPlayer(GetOwningPlayer(GetSpellTargetUnit())), udg_TradePoint, 2.00)
	call RemoveLocation(udg_TradePoint)
endfunction

function Trig_Gold_Horse_500_Func007Func002C takes nothing returns boolean
	if GetUnitTypeId(GetSpellTargetUnit()) == 1747988787 then
		return true
	endif
	if GetUnitTypeId(GetSpellTargetUnit()) == 1747990361 then
		return true
	endif
	if GetUnitTypeId(GetSpellTargetUnit()) == 1747989831 then
		return true
	endif
	if GetUnitTypeId(GetSpellTargetUnit()) == 1747989040 then
		return true
	endif
	return false
endfunction

function Trig_Gold_Horse_500_Func007C takes nothing returns boolean
	if  not (GetUnitTypeId(GetSpellAbilityUnit()) == 1747988793) then
		return false
	endif
	if  not Trig_Gold_Horse_500_Func007Func002C() then
		return false
	endif
	return true
endfunction

function Trig_Gold_Horse_500_Conditions takes nothing returns boolean
	if  not Trig_Gold_Horse_500_Func007C() then
		return false
	endif
	return true
endfunction

function Trig_Heavy_Cavalry_1_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1747988818, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1747988552, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_Heavy_Cavalry_1_Byzantine_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1747989573, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1747989572, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_Heavy_Cavalry_1_Byzantine_Func003C takes nothing returns boolean
	if  not (GetResearched() == 1378889810) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378889810, GetOwningPlayer(GetResearchingUnit())) == 1) then
		return false
	endif
	return true
endfunction

function Trig_Heavy_Cavalry_1_Byzantine_Conditions takes nothing returns boolean
	if  not Trig_Heavy_Cavalry_1_Byzantine_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Heavy_Cavalry_1_Func003C takes nothing returns boolean
	if  not (GetResearched() == 1378889800) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378889800, GetOwningPlayer(GetResearchingUnit())) == 1) then
		return false
	endif
	return true
endfunction

function Trig_Heavy_Cavalry_1_Conditions takes nothing returns boolean
	if  not Trig_Heavy_Cavalry_1_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Heavy_Cavalry_2_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1747989080, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1747988818, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_Heavy_Cavalry_2_Byzantine_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1747989574, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1747989573, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_Heavy_Cavalry_2_Byzantine_Func003C takes nothing returns boolean
	if  not (GetResearched() == 1378889810) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378889810, GetOwningPlayer(GetResearchingUnit())) == 2) then
		return false
	endif
	return true
endfunction

function Trig_Heavy_Cavalry_2_Byzantine_Conditions takes nothing returns boolean
	if  not Trig_Heavy_Cavalry_2_Byzantine_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Heavy_Cavalry_2_Func004C takes nothing returns boolean
	if  not (GetResearched() == 1378889800) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378889800, GetOwningPlayer(GetResearchingUnit())) == 2) then
		return false
	endif
	return true
endfunction

function Trig_Heavy_Cavalry_2_Conditions takes nothing returns boolean
	if  not Trig_Heavy_Cavalry_2_Func004C() then
		return false
	endif
	return true
endfunction

function Trig_Heavy_Infantry_1_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1747988551, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1747989081, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_Heavy_Infantry_1_Byzantine_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1747989559, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1747989569, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_Heavy_Infantry_1_Byzantine_Func003C takes nothing returns boolean
	if  not (GetResearched() == 1378889806) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378889806, GetOwningPlayer(GetResearchingUnit())) == 1) then
		return false
	endif
	return true
endfunction

function Trig_Heavy_Infantry_1_Byzantine_Conditions takes nothing returns boolean
	if  not Trig_Heavy_Infantry_1_Byzantine_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Heavy_Infantry_1_Func003C takes nothing returns boolean
	if  not (GetResearched() == 1378889798) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378889798, GetOwningPlayer(GetResearchingUnit())) == 1) then
		return false
	endif
	return true
endfunction

function Trig_Heavy_Infantry_1_Conditions takes nothing returns boolean
	if  not Trig_Heavy_Infantry_1_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Heavy_Infantry_2_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1747989066, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1747988551, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_Heavy_Infantry_2_Byzantine_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1747989557, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1747989559, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_Heavy_Infantry_2_Byzantine_Func003C takes nothing returns boolean
	if  not (GetResearched() == 1378889806) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378889806, GetOwningPlayer(GetResearchingUnit())) == 2) then
		return false
	endif
	return true
endfunction

function Trig_Heavy_Infantry_2_Byzantine_Conditions takes nothing returns boolean
	if  not Trig_Heavy_Infantry_2_Byzantine_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Heavy_Infantry_2_Func004C takes nothing returns boolean
	if  not (GetResearched() == 1378889798) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378889798, GetOwningPlayer(GetResearchingUnit())) == 2) then
		return false
	endif
	return true
endfunction

function Trig_Heavy_Infantry_2_Conditions takes nothing returns boolean
	if  not Trig_Heavy_Infantry_2_Func004C() then
		return false
	endif
	return true
endfunction

function Trig_Killing_trading_horse_g250_Actions takes nothing returns nothing
	call AdjustPlayerStateBJ(125, GetOwningPlayer(GetKillingUnitBJ()), PLAYER_STATE_RESOURCE_GOLD)
	call DisplayTextToForce(GetForceOfPlayer(GetOwningPlayer(GetKillingUnitBJ())), "TRIGSTR_091")
	set udg_TradePoint = GetUnitLoc(GetDyingUnit())
	call PingMinimapLocForForce(GetForceOfPlayer(GetOwningPlayer(GetDyingUnit())), udg_TradePoint, 2.00)
	call RemoveLocation(udg_TradePoint)
endfunction

function Trig_Killing_trading_horse_g250_Conditions takes nothing returns boolean
	if  not (GetUnitTypeId(GetDyingUnit()) == 1747988791) then
		return false
	endif
	return true
endfunction

function Trig_Killing_trading_horse_g500_Actions takes nothing returns nothing
	call AdjustPlayerStateBJ(250, GetOwningPlayer(GetKillingUnitBJ()), PLAYER_STATE_RESOURCE_GOLD)
	call DisplayTextToForce(GetForceOfPlayer(GetOwningPlayer(GetKillingUnitBJ())), "TRIGSTR_092")
	set udg_TradePoint = GetUnitLoc(GetDyingUnit())
	call PingMinimapLocForForce(GetForceOfPlayer(GetOwningPlayer(GetDyingUnit())), udg_TradePoint, 2.00)
	call RemoveLocation(udg_TradePoint)
endfunction

function Trig_Killing_trading_horse_g500_Conditions takes nothing returns boolean
	if  not (GetUnitTypeId(GetDyingUnit()) == 1747988793) then
		return false
	endif
	return true
endfunction

function Trig_Killing_trading_horse_l250_Actions takes nothing returns nothing
	call AdjustPlayerStateBJ(125, GetOwningPlayer(GetKillingUnitBJ()), PLAYER_STATE_RESOURCE_LUMBER)
	call DisplayTextToForce(GetForceOfPlayer(GetOwningPlayer(GetKillingUnitBJ())), "TRIGSTR_089")
	set udg_TradePoint = GetUnitLoc(GetDyingUnit())
	call PingMinimapLocForForce(GetForceOfPlayer(GetOwningPlayer(GetDyingUnit())), udg_TradePoint, 2.00)
	call RemoveLocation(udg_TradePoint)
endfunction

function Trig_Killing_trading_horse_l250_Conditions takes nothing returns boolean
	if  not (GetUnitTypeId(GetDyingUnit()) == 1747988792) then
		return false
	endif
	return true
endfunction

function Trig_Killing_trading_horse_l500_Actions takes nothing returns nothing
	call AdjustPlayerStateBJ(250, GetOwningPlayer(GetKillingUnitBJ()), PLAYER_STATE_RESOURCE_LUMBER)
	call DisplayTextToForce(GetForceOfPlayer(GetOwningPlayer(GetKillingUnitBJ())), "TRIGSTR_090")
	set udg_TradePoint = GetUnitLoc(GetDyingUnit())
	call PingMinimapLocForForce(GetForceOfPlayer(GetOwningPlayer(GetDyingUnit())), udg_TradePoint, 2.00)
	call RemoveLocation(udg_TradePoint)
endfunction

function Trig_Killing_trading_horse_l500_Conditions takes nothing returns boolean
	if  not (GetUnitTypeId(GetDyingUnit()) == 1747988801) then
		return false
	endif
	return true
endfunction

function Trig_Light_Cavalry_1_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1747989072, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1747989073, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_Light_Cavalry_1_Byzantine_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1747989560, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1747989579, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_Light_Cavalry_1_Byzantine_Func003C takes nothing returns boolean
	if  not (GetResearched() == 1378889811) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378889811, GetOwningPlayer(GetResearchingUnit())) == 1) then
		return false
	endif
	return true
endfunction

function Trig_Light_Cavalry_1_Byzantine_Conditions takes nothing returns boolean
	if  not Trig_Light_Cavalry_1_Byzantine_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Light_Cavalry_1_Func003C takes nothing returns boolean
	if  not (GetResearched() == 1378889801) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378889801, GetOwningPlayer(GetResearchingUnit())) == 1) then
		return false
	endif
	return true
endfunction

function Trig_Light_Cavalry_1_Conditions takes nothing returns boolean
	if  not Trig_Light_Cavalry_1_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Light_Cavalry_2_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1747989082, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1747989072, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_Light_Cavalry_2_Func004C takes nothing returns boolean
	if  not (GetResearched() == 1378889801) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378889801, GetOwningPlayer(GetResearchingUnit())) == 2) then
		return false
	endif
	return true
endfunction

function Trig_Light_Cavalry_2_Conditions takes nothing returns boolean
	if  not Trig_Light_Cavalry_2_Func004C() then
		return false
	endif
	return true
endfunction

function Trig_Light_Infantry_1_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1747989065, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1747989296, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_Light_Infantry_1_Func003C takes nothing returns boolean
	if  not (GetPlayerTechCountSimple(1378889797, GetOwningPlayer(GetResearchingUnit())) == 1) then
		return false
	endif
	return true
endfunction

function Trig_Light_Infantry_1_Conditions takes nothing returns boolean
	if  not Trig_Light_Infantry_1_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Light_Infantry_2_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1747989067, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1747989065, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_Light_Infantry_2_Func004C takes nothing returns boolean
	if  not (GetPlayerTechCountSimple(1378889797, GetOwningPlayer(GetResearchingUnit())) == 2) then
		return false
	endif
	return true
endfunction

function Trig_Light_Infantry_2_Conditions takes nothing returns boolean
	if  not Trig_Light_Infantry_2_Func004C() then
		return false
	endif
	return true
endfunction

function Trig_Lumber_Horse_250_Actions takes nothing returns nothing
	call AdjustPlayerStateBJ(250, GetOwningPlayer(GetSpellTargetUnit()), PLAYER_STATE_RESOURCE_LUMBER)
	call RemoveUnit(GetSpellAbilityUnit())
	call DisplayTextToForce(GetForceOfPlayer(GetOwningPlayer(GetSpellTargetUnit())), "TRIGSTR_1229")
	set udg_TradePoint = GetUnitLoc(GetSpellTargetUnit())
	call PingMinimapLocForForce(GetForceOfPlayer(GetOwningPlayer(GetSpellTargetUnit())), udg_TradePoint, 2.00)
	call RemoveLocation(udg_TradePoint)
endfunction

function Trig_Lumber_Horse_250_Func007Func002C takes nothing returns boolean
	if GetUnitTypeId(GetSpellTargetUnit()) == 1747988787 then
		return true
	endif
	if GetUnitTypeId(GetSpellTargetUnit()) == 1747990361 then
		return true
	endif
	if GetUnitTypeId(GetSpellTargetUnit()) == 1747989831 then
		return true
	endif
	if GetUnitTypeId(GetSpellTargetUnit()) == 1747989040 then
		return true
	endif
	return false
endfunction

function Trig_Lumber_Horse_250_Func007C takes nothing returns boolean
	if  not (GetUnitTypeId(GetSpellAbilityUnit()) == 1747988792) then
		return false
	endif
	if  not Trig_Lumber_Horse_250_Func007Func002C() then
		return false
	endif
	return true
endfunction

function Trig_Lumber_Horse_250_Conditions takes nothing returns boolean
	if  not Trig_Lumber_Horse_250_Func007C() then
		return false
	endif
	return true
endfunction

function Trig_Lumber_Horse_500_Actions takes nothing returns nothing
	call AdjustPlayerStateBJ(500, GetOwningPlayer(GetSpellTargetUnit()), PLAYER_STATE_RESOURCE_LUMBER)
	call RemoveUnit(GetSpellAbilityUnit())
	call DisplayTextToForce(GetForceOfPlayer(GetOwningPlayer(GetSpellTargetUnit())), "TRIGSTR_1228")
	set udg_TradePoint = GetUnitLoc(GetSpellTargetUnit())
	call PingMinimapLocForForce(GetForceOfPlayer(GetOwningPlayer(GetSpellTargetUnit())), udg_TradePoint, 2.00)
	call RemoveLocation(udg_TradePoint)
endfunction

function Trig_Lumber_Horse_500_Func007Func002C takes nothing returns boolean
	if GetUnitTypeId(GetSpellTargetUnit()) == 1747988787 then
		return true
	endif
	if GetUnitTypeId(GetSpellTargetUnit()) == 1747990361 then
		return true
	endif
	if GetUnitTypeId(GetSpellTargetUnit()) == 1747989831 then
		return true
	endif
	if GetUnitTypeId(GetSpellTargetUnit()) == 1747989040 then
		return true
	endif
	return false
endfunction

function Trig_Lumber_Horse_500_Func007C takes nothing returns boolean
	if  not (GetUnitTypeId(GetSpellAbilityUnit()) == 1747988801) then
		return false
	endif
	if  not Trig_Lumber_Horse_500_Func007Func002C() then
		return false
	endif
	return true
endfunction

function Trig_Lumber_Horse_500_Conditions takes nothing returns boolean
	if  not Trig_Lumber_Horse_500_Func007C() then
		return false
	endif
	return true
endfunction

function Trig_ME_Archer_1_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1848651846, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1848651847, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_ME_Archer_1_Func003C takes nothing returns boolean
	if  not (GetResearched() == 1378890037) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378890037, GetOwningPlayer(GetResearchingUnit())) == 1) then
		return false
	endif
	return true
endfunction

function Trig_ME_Archer_1_Conditions takes nothing returns boolean
	if  not Trig_ME_Archer_1_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_ME_Archer_2_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1848651848, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1848651846, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_ME_Archer_2_Func003C takes nothing returns boolean
	if  not (GetResearched() == 1378890037) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378890037, GetOwningPlayer(GetResearchingUnit())) == 2) then
		return false
	endif
	return true
endfunction

function Trig_ME_Archer_2_Conditions takes nothing returns boolean
	if  not Trig_ME_Archer_2_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_ME_Heavy_Cavalry_1_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1747989836, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1747989837, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_ME_Heavy_Cavalry_1_Func003C takes nothing returns boolean
	if  not (GetResearched() == 1378890036) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378890036, GetOwningPlayer(GetResearchingUnit())) == 1) then
		return false
	endif
	return true
endfunction

function Trig_ME_Heavy_Cavalry_1_Conditions takes nothing returns boolean
	if  not Trig_ME_Heavy_Cavalry_1_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_ME_Heavy_Cavalry_2_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1747989835, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1747989836, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_ME_Heavy_Cavalry_2_Func003C takes nothing returns boolean
	if  not (GetResearched() == 1378890036) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378890036, GetOwningPlayer(GetResearchingUnit())) == 2) then
		return false
	endif
	return true
endfunction

function Trig_ME_Heavy_Cavalry_2_Conditions takes nothing returns boolean
	if  not Trig_ME_Heavy_Cavalry_2_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_ME_Light_Cavalry_1_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1747989833, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1747989834, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_ME_Light_Cavalry_1_Func003C takes nothing returns boolean
	if  not (GetResearched() == 1378889797) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378889797, GetOwningPlayer(GetResearchingUnit())) == 1) then
		return false
	endif
	return true
endfunction

function Trig_ME_Light_Cavalry_1_Conditions takes nothing returns boolean
	if  not Trig_ME_Light_Cavalry_1_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_ME_Light_Cavalry_2_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1747989832, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1747989833, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_ME_Light_Cavalry_2_Func003C takes nothing returns boolean
	if  not (GetResearched() == 1378889797) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378889797, GetOwningPlayer(GetResearchingUnit())) == 2) then
		return false
	endif
	return true
endfunction

function Trig_ME_Light_Cavalry_2_Conditions takes nothing returns boolean
	if  not Trig_ME_Light_Cavalry_2_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_ME_Light_Infantry_1_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1747989815, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1747989838, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_ME_Light_Infantry_1_Func003C takes nothing returns boolean
	if  not (GetResearched() == 1378890034) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378890034, GetOwningPlayer(GetResearchingUnit())) == 1) then
		return false
	endif
	return true
endfunction

function Trig_ME_Light_Infantry_1_Conditions takes nothing returns boolean
	if  not Trig_ME_Light_Infantry_1_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_ME_Light_Infantry_2_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1747989816, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1747989815, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_ME_Light_Infantry_2_Func003C takes nothing returns boolean
	if  not (GetResearched() == 1378890034) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378890034, GetOwningPlayer(GetResearchingUnit())) == 2) then
		return false
	endif
	return true
endfunction

function Trig_ME_Light_Infantry_2_Conditions takes nothing returns boolean
	if  not Trig_ME_Light_Infantry_2_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_ME_Missile_Cavalry_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1747989830, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1747989829, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_ME_Missile_Cavalry_Func003C takes nothing returns boolean
	if  not (GetResearched() == 1378890038) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378890038, GetOwningPlayer(GetResearchingUnit())) == 1) then
		return false
	endif
	return true
endfunction

function Trig_ME_Missile_Cavalry_Conditions takes nothing returns boolean
	if  not Trig_ME_Missile_Cavalry_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_ME_Pikeman_2_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1747989826, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1747989828, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_ME_Pikeman_2_Func003C takes nothing returns boolean
	if  not (GetResearched() == 1378890033) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378890033, GetOwningPlayer(GetResearchingUnit())) == 2) then
		return false
	endif
	return true
endfunction

function Trig_ME_Pikeman_2_Conditions takes nothing returns boolean
	if  not Trig_ME_Pikeman_2_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_ME_Pikeman_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1747989828, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1747989827, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_ME_Pikeman_Func003C takes nothing returns boolean
	if  not (GetResearched() == 1378890033) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378890033, GetOwningPlayer(GetResearchingUnit())) == 1) then
		return false
	endif
	return true
endfunction

function Trig_ME_Pikeman_Conditions takes nothing returns boolean
	if  not Trig_ME_Pikeman_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_ME_Skirmisher_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1848651844, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1848651845, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_ME_Skirmisher_Func003C takes nothing returns boolean
	if  not (GetResearched() == 1378890032) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378890032, GetOwningPlayer(GetResearchingUnit())) == 1) then
		return false
	endif
	return true
endfunction

function Trig_ME_Skirmisher_Conditions takes nothing returns boolean
	if  not Trig_ME_Skirmisher_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_ME_Spearmen_1_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1747989825, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1747989817, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_ME_Spearmen_1_Func003C takes nothing returns boolean
	if  not (GetResearched() == 1378889818) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378889818, GetOwningPlayer(GetResearchingUnit())) == 1) then
		return false
	endif
	return true
endfunction

function Trig_ME_Spearmen_1_Conditions takes nothing returns boolean
	if  not Trig_ME_Spearmen_1_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_ME_Spearmen_2_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1747989814, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1747989825, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_ME_Spearmen_2_Func003C takes nothing returns boolean
	if  not (GetResearched() == 1378889818) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378889818, GetOwningPlayer(GetResearchingUnit())) == 2) then
		return false
	endif
	return true
endfunction

function Trig_ME_Spearmen_2_Conditions takes nothing returns boolean
	if  not Trig_ME_Spearmen_2_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Marketplace_Actions takes nothing returns nothing
	call CreateNUnitsAtLoc(1, 1747988787, GetOwningPlayer(GetConstructedStructure()), OffsetLocation(GetRectCenter(GetPlayableMapRect()), 100000000.00, 1000000000.00), bj_UNIT_FACING)
	call UnitRemoveAbilityBJ(1093677905, GetLastCreatedUnit())
	call ShowUnitHide(GetLastCreatedUnit())
	set udg_hasMarketplace[GetConvertedPlayerId(GetOwningPlayer(GetConstructedStructure()))] = true
endfunction

function Trig_Marketplace_Func006C takes nothing returns boolean
	if GetUnitTypeId(GetConstructedStructure()) == 1747989040 then
		return true
	endif
	if GetUnitTypeId(GetConstructedStructure()) == 1747990361 then
		return true
	endif
	if GetUnitTypeId(GetConstructedStructure()) == 1747989831 then
		return true
	endif
	return false
endfunction

function Trig_Marketplace_Conditions takes nothing returns boolean
	if  not (udg_hasMarketplace[GetConvertedPlayerId(GetOwningPlayer(GetConstructedStructure()))] == false) then
		return false
	endif
	if  not Trig_Marketplace_Func006C() then
		return false
	endif
	return true
endfunction

function Trig_Melee_Initialization_Actions takes nothing returns nothing
	call MeleeStartingVisibility()
	call MeleeStartingHeroLimit()
endfunction

function Trig_Missile_Cavalry_Byzantine_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1747989582, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1747989583, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_Missile_Cavalry_Byzantine_Func003C takes nothing returns boolean
	if  not (GetResearched() == 1378890035) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378890035, GetOwningPlayer(GetResearchingUnit())) == 1) then
		return false
	endif
	return true
endfunction

function Trig_Missile_Cavalry_Byzantine_Conditions takes nothing returns boolean
	if  not Trig_Missile_Cavalry_Byzantine_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Pikemen_1_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1747988559, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1747989064, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_Pikemen_1_Func003C takes nothing returns boolean
	if  not (GetResearched() == 1378889799) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378889799, GetOwningPlayer(GetResearchingUnit())) == 1) then
		return false
	endif
	return true
endfunction

function Trig_Pikemen_1_Conditions takes nothing returns boolean
	if  not Trig_Pikemen_1_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Pikemen_2_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1747988812, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1747988559, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_Pikemen_2_Func004C takes nothing returns boolean
	if  not (GetResearched() == 1378889799) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378889799, GetOwningPlayer(GetResearchingUnit())) == 2) then
		return false
	endif
	return true
endfunction

function Trig_Pikemen_2_Conditions takes nothing returns boolean
	if  not Trig_Pikemen_2_Func004C() then
		return false
	endif
	return true
endfunction

function Trig_Settle_Actions takes nothing returns nothing
	call ForGroupBJ(GetUnitsOfTypeIdAll(1747988554), ref_function_Trig_Settle_Func001002)
endfunction

function Trig_Settle_Func001002 takes nothing returns nothing
	call ReplaceUnitBJ(GetEnumUnit(), 1747988553, bj_UNIT_STATE_METHOD_RELATIVE)
endfunction

function Trig_Skirmisher_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1848651828, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1848651827, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_Skirmisher_Byzantine_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1848651832, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1848651830, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_Skirmisher_Byzantine_Func003C takes nothing returns boolean
	if  not (GetResearched() == 1378889808) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378889808, GetOwningPlayer(GetResearchingUnit())) == 1) then
		return false
	endif
	return true
endfunction

function Trig_Skirmisher_Byzantine_Conditions takes nothing returns boolean
	if  not Trig_Skirmisher_Byzantine_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Skirmisher_Func003C takes nothing returns boolean
	if  not (GetResearched() == 1378889803) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378889803, GetOwningPlayer(GetResearchingUnit())) == 1) then
		return false
	endif
	return true
endfunction

function Trig_Skirmisher_Conditions takes nothing returns boolean
	if  not Trig_Skirmisher_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Spearmen_1_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1747989057, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1747989058, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_Spearmen_1_Byzantine_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1747989570, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1747989571, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_Spearmen_1_Byzantine_Func003C takes nothing returns boolean
	if  not (GetResearched() == 1378889807) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378889807, GetOwningPlayer(GetResearchingUnit())) == 1) then
		return false
	endif
	return true
endfunction

function Trig_Spearmen_1_Byzantine_Conditions takes nothing returns boolean
	if  not Trig_Spearmen_1_Byzantine_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Spearmen_1_Func003C takes nothing returns boolean
	if  not (GetResearched() == 1378889796) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378889796, GetOwningPlayer(GetResearchingUnit())) == 1) then
		return false
	endif
	return true
endfunction

function Trig_Spearmen_1_Conditions takes nothing returns boolean
	if  not Trig_Spearmen_1_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Spearmen_2_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1747988558, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1747989057, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_Spearmen_2_Byzantine_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1747989556, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1747989570, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_Spearmen_2_Byzantine_Func003C takes nothing returns boolean
	if  not (GetResearched() == 1378889807) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378889807, GetOwningPlayer(GetResearchingUnit())) == 2) then
		return false
	endif
	return true
endfunction

function Trig_Spearmen_2_Byzantine_Conditions takes nothing returns boolean
	if  not Trig_Spearmen_2_Byzantine_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Spearmen_2_Func004C takes nothing returns boolean
	if  not (GetResearched() == 1378889796) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378889796, GetOwningPlayer(GetResearchingUnit())) == 2) then
		return false
	endif
	return true
endfunction

function Trig_Spearmen_2_Conditions takes nothing returns boolean
	if  not Trig_Spearmen_2_Func004C() then
		return false
	endif
	return true
endfunction

function Trig_Spy_Sabotage_on_buildings_Actions takes nothing returns nothing
	call SetUnitManaBJ(GetSpellTargetUnit(), GetUnitStateSwap(UNIT_STATE_MANA, GetSpellTargetUnit()) - 600.00)
endfunction

function Trig_Spy_Sabotage_on_buildings_Func002C takes nothing returns boolean
	if  not (GetUnitTypeId(GetSpellAbilityUnit()) == 1966092336) then
		return false
	endif
	if  not (GetSpellAbilityId() == 1093677906) then
		return false
	endif
	if  not (GetOwningPlayer(GetSpellTargetUnit()) != Player(PLAYER_NEUTRAL_AGGRESSIVE)) then
		return false
	endif
	if  not (IsUnitType(GetSpellTargetUnit(), UNIT_TYPE_STRUCTURE) == true) then
		return false
	endif
	return true
endfunction

function Trig_Spy_Sabotage_on_buildings_Conditions takes nothing returns boolean
	if  not Trig_Spy_Sabotage_on_buildings_Func002C() then
		return false
	endif
	return true
endfunction

function Trig_Structures_finishes_Actions takes nothing returns nothing
	call UnitRemoveAbilityBJ(1093677402, GetTriggerUnit())
endfunction

function Trig_Supply_Horse_2_Actions takes nothing returns nothing
	set udg_Supplyhorses2 = GetUnitsOfTypeIdAll(1747989301)
	call ForGroupBJ(udg_Supplyhorses2, ref_function_Trig_Supply_Horse_2_Func002A)
	call DestroyGroup(udg_Supplyhorses2)
endfunction

function Trig_Supply_Horse_2_Func002Func001C takes nothing returns boolean
	if  not (GetUnitStateSwap(UNIT_STATE_MANA, GetEnumUnit()) <= 0.00) then
		return false
	endif
	return true
endfunction

function Trig_Supply_Horse_2_Func002A takes nothing returns nothing
	if Trig_Supply_Horse_2_Func002Func001C() then
		call KillUnit(GetEnumUnit())
	else
		call DoNothing()
	endif
endfunction

function Trig_Supply_Horse_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1747989301, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1747988790, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_Supply_Horse_Func004C takes nothing returns boolean
	if  not (GetResearched() == 1378889783) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378889783, GetOwningPlayer(GetResearchingUnit())) == 2) then
		return false
	endif
	return true
endfunction

function Trig_Supply_Horse_Conditions takes nothing returns boolean
	if  not Trig_Supply_Horse_Func004C() then
		return false
	endif
	return true
endfunction

function Trig_Supply_Horses_Actions takes nothing returns nothing
	set udg_Supplyhorses = GetUnitsOfTypeIdAll(1747988790)
	call ForGroupBJ(udg_Supplyhorses, ref_function_Trig_Supply_Horses_Func002A)
	call DestroyGroup(udg_Supplyhorses)
endfunction

function Trig_Supply_Horses_Func002Func001C takes nothing returns boolean
	if  not (GetUnitStateSwap(UNIT_STATE_MANA, GetEnumUnit()) <= 0.00) then
		return false
	endif
	return true
endfunction

function Trig_Supply_Horses_Func002A takes nothing returns nothing
	if Trig_Supply_Horses_Func002Func001C() then
		call KillUnit(GetEnumUnit())
	else
		call DoNothing()
	endif
endfunction

function Trig_Thatched_Cottage_1_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1747988561, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1747988784, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_Thatched_Cottage_1_Byz_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1747989812, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1747989811, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_Thatched_Cottage_1_Byz_Func003C takes nothing returns boolean
	if  not (GetResearched() == 1378889780) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378889780, GetOwningPlayer(GetResearchingUnit())) == 1) then
		return false
	endif
	return true
endfunction

function Trig_Thatched_Cottage_1_Byz_Conditions takes nothing returns boolean
	if  not Trig_Thatched_Cottage_1_Byz_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Thatched_Cottage_1_Func003C takes nothing returns boolean
	if  not (GetResearched() == 1378889780) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378889780, GetOwningPlayer(GetResearchingUnit())) == 1) then
		return false
	endif
	return true
endfunction

function Trig_Thatched_Cottage_1_Conditions takes nothing returns boolean
	if  not Trig_Thatched_Cottage_1_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Thatched_Cottage_1_EE_Copy_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1747990321, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1747990104, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_Thatched_Cottage_1_EE_Copy_Func003C takes nothing returns boolean
	if  not (GetResearched() == 1378889780) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378889780, GetOwningPlayer(GetResearchingUnit())) == 1) then
		return false
	endif
	return true
endfunction

function Trig_Thatched_Cottage_1_EE_Copy_Conditions takes nothing returns boolean
	if  not Trig_Thatched_Cottage_1_EE_Copy_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Thatched_Cottage_2_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1747988565, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1747988563, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_Thatched_Cottage_2_Byz_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1747990098, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1747990095, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_Thatched_Cottage_2_Byz_Func003C takes nothing returns boolean
	if  not (GetResearched() == 1378889780) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378889780, GetOwningPlayer(GetResearchingUnit())) == 1) then
		return false
	endif
	return true
endfunction

function Trig_Thatched_Cottage_2_Byz_Conditions takes nothing returns boolean
	if  not Trig_Thatched_Cottage_2_Byz_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Thatched_Cottage_2_Func003C takes nothing returns boolean
	if  not (GetResearched() == 1378889780) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378889780, GetOwningPlayer(GetResearchingUnit())) == 1) then
		return false
	endif
	return true
endfunction

function Trig_Thatched_Cottage_2_Conditions takes nothing returns boolean
	if  not Trig_Thatched_Cottage_2_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Thatched_Cottage_2_EE_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1747990322, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1747990105, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_Thatched_Cottage_2_EE_Func003C takes nothing returns boolean
	if  not (GetResearched() == 1378889780) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378889780, GetOwningPlayer(GetResearchingUnit())) == 1) then
		return false
	endif
	return true
endfunction

function Trig_Thatched_Cottage_2_EE_Conditions takes nothing returns boolean
	if  not Trig_Thatched_Cottage_2_EE_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Thatched_Cottage_3_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1747988566, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1747988562, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_Thatched_Cottage_3_Byz_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1747990099, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1747990096, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_Thatched_Cottage_3_Byz_Func003C takes nothing returns boolean
	if  not (GetResearched() == 1378889780) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378889780, GetOwningPlayer(GetResearchingUnit())) == 1) then
		return false
	endif
	return true
endfunction

function Trig_Thatched_Cottage_3_Byz_Conditions takes nothing returns boolean
	if  not Trig_Thatched_Cottage_3_Byz_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Thatched_Cottage_3_Func003C takes nothing returns boolean
	if  not (GetResearched() == 1378889780) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378889780, GetOwningPlayer(GetResearchingUnit())) == 1) then
		return false
	endif
	return true
endfunction

function Trig_Thatched_Cottage_3_Conditions takes nothing returns boolean
	if  not Trig_Thatched_Cottage_3_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Thatched_Cottage_3_EE_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1747990323, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1747990106, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_Thatched_Cottage_3_EE_Func003C takes nothing returns boolean
	if  not (GetResearched() == 1378889780) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378889780, GetOwningPlayer(GetResearchingUnit())) == 1) then
		return false
	endif
	return true
endfunction

function Trig_Thatched_Cottage_3_EE_Conditions takes nothing returns boolean
	if  not Trig_Thatched_Cottage_3_EE_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Thatched_Cottage_4_Actions takes nothing returns nothing
	call SetPlayerUnitAvailableBJ(1747988567, true, GetOwningPlayer(GetResearchingUnit()))
	call SetPlayerUnitAvailableBJ(1747988564, false, GetOwningPlayer(GetResearchingUnit()))
endfunction

function Trig_Thatched_Cottage_4_Func003C takes nothing returns boolean
	if  not (GetResearched() == 1378889780) then
		return false
	endif
	if  not (GetPlayerTechCountSimple(1378889780, GetOwningPlayer(GetResearchingUnit())) == 1) then
		return false
	endif
	return true
endfunction

function Trig_Thatched_Cottage_4_Conditions takes nothing returns boolean
	if  not Trig_Thatched_Cottage_4_Func003C() then
		return false
	endif
	return true
endfunction

function Trig_Trade_Actions takes nothing returns nothing
	call SetMapFlag(MAP_LOCK_RESOURCE_TRADING, false)
endfunction

function Trig_Trading_Gold_Ship_Actions takes nothing returns nothing
	call AdjustPlayerStateBJ(500, GetOwningPlayer(GetSpellTargetUnit()), PLAYER_STATE_RESOURCE_GOLD)
	call RemoveUnit(GetSpellAbilityUnit())
	call DisplayTextToForce(GetForceOfPlayer(GetOwningPlayer(GetSpellTargetUnit())), "TRIGSTR_1234")
	set udg_TradePoint = GetUnitLoc(GetSpellTargetUnit())
	call PingMinimapLocForForce(GetForceOfPlayer(GetOwningPlayer(GetSpellTargetUnit())), udg_TradePoint, 2.00)
	call RemoveLocation(udg_TradePoint)
endfunction

function Trig_Trading_Gold_Ship_Func007Func002C takes nothing returns boolean
	if GetUnitTypeId(GetSpellTargetUnit()) == 1747990581 then
		return true
	endif
	if GetUnitTypeId(GetSpellTargetUnit()) == 1747990580 then
		return true
	endif
	if GetUnitTypeId(GetSpellTargetUnit()) == 1747989813 then
		return true
	endif
	if GetUnitTypeId(GetSpellTargetUnit()) == 1747988569 then
		return true
	endif
	return false
endfunction

function Trig_Trading_Gold_Ship_Func007C takes nothing returns boolean
	if  not (GetUnitTypeId(GetSpellAbilityUnit()) == 1747989049) then
		return false
	endif
	if  not Trig_Trading_Gold_Ship_Func007Func002C() then
		return false
	endif
	return true
endfunction

function Trig_Trading_Gold_Ship_Conditions takes nothing returns boolean
	if  not Trig_Trading_Gold_Ship_Func007C() then
		return false
	endif
	return true
endfunction

function Trig_Trading_Lumber_Ship_Actions takes nothing returns nothing
	call AdjustPlayerStateBJ(500, GetOwningPlayer(GetSpellTargetUnit()), PLAYER_STATE_RESOURCE_LUMBER)
	call RemoveUnit(GetSpellAbilityUnit())
	call DisplayTextToForce(GetForceOfPlayer(GetOwningPlayer(GetSpellTargetUnit())), "TRIGSTR_1232")
	set udg_TradePoint = GetUnitLoc(GetSpellTargetUnit())
	call PingMinimapLocForForce(GetForceOfPlayer(GetOwningPlayer(GetSpellTargetUnit())), udg_TradePoint, 2.00)
	call RemoveLocation(udg_TradePoint)
endfunction

function Trig_Trading_Lumber_Ship_Func007Func002C takes nothing returns boolean
	if GetUnitTypeId(GetSpellTargetUnit()) == 1747990581 then
		return true
	endif
	if GetUnitTypeId(GetSpellTargetUnit()) == 1747990580 then
		return true
	endif
	if GetUnitTypeId(GetSpellTargetUnit()) == 1747989813 then
		return true
	endif
	if GetUnitTypeId(GetSpellTargetUnit()) == 1747988569 then
		return true
	endif
	return false
endfunction

function Trig_Trading_Lumber_Ship_Func007C takes nothing returns boolean
	if  not (GetUnitTypeId(GetSpellAbilityUnit()) == 1747989048) then
		return false
	endif
	if  not Trig_Trading_Lumber_Ship_Func007Func002C() then
		return false
	endif
	return true
endfunction

function Trig_Trading_Lumber_Ship_Conditions takes nothing returns boolean
	if  not Trig_Trading_Lumber_Ship_Func007C() then
		return false
	endif
	return true
endfunction

function Trig_Urbanization_Actions takes nothing returns nothing
	call ForGroupBJ(GetUnitsOfPlayerMatching(GetOwningPlayer(GetTriggerUnit()), Condition(ref_function_Trig_Urbanization_Func001001002)), ref_function_Trig_Urbanization_Func001A)
endfunction

function Trig_Urbanization_Conditions takes nothing returns boolean
	if  not (GetResearched() == 1378889780) then
		return false
	endif
	return true
endfunction

function Trig_Urbanization_Func001001002 takes nothing returns boolean
	return IsUnitType(GetTriggerUnit(), UNIT_TYPE_STRUCTURE) == true
endfunction

function Trig_Urbanization_Func001Func001001 takes nothing returns boolean
	return GetUnitTypeId(GetEnumUnit()) == 1747988535
endfunction

function Trig_Urbanization_Func001Func002001 takes nothing returns boolean
	return GetUnitTypeId(GetEnumUnit()) == 1747990325
endfunction

function Trig_Urbanization_Func001Func003001 takes nothing returns boolean
	return GetUnitTypeId(GetEnumUnit()) == 1747989594
endfunction

function Trig_Urbanization_Func001Func004001 takes nothing returns boolean
	return GetUnitTypeId(GetEnumUnit()) == 1747988784
endfunction

function Trig_Urbanization_Func001Func005001 takes nothing returns boolean
	return GetUnitTypeId(GetEnumUnit()) == 1747988563
endfunction

function Trig_Urbanization_Func001Func006001 takes nothing returns boolean
	return GetUnitTypeId(GetEnumUnit()) == 1747988562
endfunction

function Trig_Urbanization_Func001Func007001 takes nothing returns boolean
	return GetUnitTypeId(GetEnumUnit()) == 1747988564
endfunction

function Trig_Urbanization_Func001Func008001 takes nothing returns boolean
	return GetUnitTypeId(GetEnumUnit()) == 1747990104
endfunction

function Trig_Urbanization_Func001Func009001 takes nothing returns boolean
	return GetUnitTypeId(GetEnumUnit()) == 1747990105
endfunction

function Trig_Urbanization_Func001Func010001 takes nothing returns boolean
	return GetUnitTypeId(GetEnumUnit()) == 1747990106
endfunction

function Trig_Urbanization_Func001Func011001 takes nothing returns boolean
	return GetUnitTypeId(GetEnumUnit()) == 1747989811
endfunction

function Trig_Urbanization_Func001Func012001 takes nothing returns boolean
	return GetUnitTypeId(GetEnumUnit()) == 1747990095
endfunction

function Trig_Urbanization_Func001Func013001 takes nothing returns boolean
	return GetUnitTypeId(GetEnumUnit()) == 1747990096
endfunction

function Trig_Urbanization_Func001A takes nothing returns nothing
	if Trig_Urbanization_Func001Func001001() then
		call ReplaceUnitBJ(GetEnumUnit(), 1747988788, bj_UNIT_STATE_METHOD_RELATIVE)
	else
		call DoNothing()
	endif
	if Trig_Urbanization_Func001Func002001() then
		call ReplaceUnitBJ(GetEnumUnit(), 1747990324, bj_UNIT_STATE_METHOD_RELATIVE)
	else
		call DoNothing()
	endif
	if Trig_Urbanization_Func001Func003001() then
		call ReplaceUnitBJ(GetEnumUnit(), 1747990097, bj_UNIT_STATE_METHOD_RELATIVE)
	else
		call DoNothing()
	endif
	if Trig_Urbanization_Func001Func004001() then
		call ReplaceUnitBJ(GetEnumUnit(), 1747988561, bj_UNIT_STATE_METHOD_RELATIVE)
	else
		call DoNothing()
	endif
	if Trig_Urbanization_Func001Func005001() then
		call ReplaceUnitBJ(GetEnumUnit(), 1747988565, bj_UNIT_STATE_METHOD_RELATIVE)
	else
		call DoNothing()
	endif
	if Trig_Urbanization_Func001Func006001() then
		call ReplaceUnitBJ(GetEnumUnit(), 1747988566, bj_UNIT_STATE_METHOD_RELATIVE)
	else
		call DoNothing()
	endif
	if Trig_Urbanization_Func001Func007001() then
		call ReplaceUnitBJ(GetEnumUnit(), 1747988567, bj_UNIT_STATE_METHOD_RELATIVE)
	else
		call DoNothing()
	endif
	if Trig_Urbanization_Func001Func008001() then
		call ReplaceUnitBJ(GetEnumUnit(), 1747990321, bj_UNIT_STATE_METHOD_RELATIVE)
	else
		call DoNothing()
	endif
	if Trig_Urbanization_Func001Func009001() then
		call ReplaceUnitBJ(GetEnumUnit(), 1747990322, bj_UNIT_STATE_METHOD_RELATIVE)
	else
		call DoNothing()
	endif
	if Trig_Urbanization_Func001Func010001() then
		call ReplaceUnitBJ(GetEnumUnit(), 1747990323, bj_UNIT_STATE_METHOD_RELATIVE)
	else
		call DoNothing()
	endif
	if Trig_Urbanization_Func001Func011001() then
		call ReplaceUnitBJ(GetEnumUnit(), 1747989812, bj_UNIT_STATE_METHOD_RELATIVE)
	else
		call DoNothing()
	endif
	if Trig_Urbanization_Func001Func012001() then
		call ReplaceUnitBJ(GetEnumUnit(), 1747990098, bj_UNIT_STATE_METHOD_RELATIVE)
	else
		call DoNothing()
	endif
	if Trig_Urbanization_Func001Func013001() then
		call ReplaceUnitBJ(GetEnumUnit(), 1747990099, bj_UNIT_STATE_METHOD_RELATIVE)
	else
		call DoNothing()
	endif
endfunction

function Trig_killing_Gold_Ship_Actions takes nothing returns nothing
	call AdjustPlayerStateBJ(500, GetOwningPlayer(GetKillingUnitBJ()), PLAYER_STATE_RESOURCE_GOLD)
	call DisplayTextToForce(GetForceOfPlayer(GetOwningPlayer(GetKillingUnitBJ())), "TRIGSTR_083")
	set udg_TradePoint = GetUnitLoc(GetDyingUnit())
	call PingMinimapLocForForce(GetForceOfPlayer(GetOwningPlayer(GetDyingUnit())), udg_TradePoint, 2.00)
	call RemoveLocation(udg_TradePoint)
endfunction

function Trig_killing_Gold_Ship_Conditions takes nothing returns boolean
	if  not (GetUnitTypeId(GetDyingUnit()) == 1747989049) then
		return false
	endif
	return true
endfunction

function Trig_killing_Lumber_Ship_Actions takes nothing returns nothing
	call AdjustPlayerStateBJ(500, GetOwningPlayer(GetKillingUnitBJ()), PLAYER_STATE_RESOURCE_LUMBER)
	call DisplayTextToForce(GetForceOfPlayer(GetOwningPlayer(GetKillingUnitBJ())), "TRIGSTR_084")
	set udg_TradePoint = GetUnitLoc(GetDyingUnit())
	call PingMinimapLocForForce(GetForceOfPlayer(GetOwningPlayer(GetDyingUnit())), udg_TradePoint, 2.00)
	call RemoveLocation(udg_TradePoint)
endfunction

function Trig_killing_Lumber_Ship_Conditions takes nothing returns boolean
	if  not (GetUnitTypeId(GetDyingUnit()) == 1747989048) then
		return false
	endif
	return true
endfunction

function LLIterator_onDestroy takes integer this_7 returns nothing
endfunction

function Loglevel_getTag takes integer this_7 returns string
	local integer temp = this_7
	if temp == 0 then
		return "|cffADADADtrace|r"
	elseif temp == 1 then
		return "|cff2685DCdebug|r"
	elseif temp == 2 then
		return "|cffFFCC00info|r"
	elseif temp == 3 then
		return "|cffF47E3Ewarning|r"
	elseif temp == 4 then
		return "|cffFB2700error|r"
	endif
	return "?"
endfunction

function printLog takes player showTo, integer loglvl, string msg returns nothing
	local string compositeMsg
	if Printing_DEBUG_LEVEL <= loglvl then
		set compositeMsg = Loglevel_getTag(loglvl) + " - " + msg
		call DisplayTimedTextToPlayer(showTo, 0., 0., Printing_DEBUG_MSG_DURATION, compositeMsg)
	endif
endfunction

function Log_error takes string msg returns nothing
	call printLog(Player_localPlayer, 4, msg)
endfunction

function compileError takes string message returns nothing
endfunction

function hashtable_hasBoolean takes hashtable this_7, integer parentKey, integer childKey returns boolean
	return HaveSavedBoolean(this_7, parentKey, childKey)
endfunction

function hashtable_hasInt takes hashtable this_7, integer parentKey, integer childKey returns boolean
	return HaveSavedInteger(this_7, parentKey, childKey)
endfunction

function hashtable_loadBoolean takes hashtable this_7, integer parentKey, integer childKey returns boolean
	return LoadBoolean(this_7, parentKey, childKey)
endfunction

function hashtable_loadInt takes hashtable this_7, integer parentKey, integer childKey returns integer
	return LoadInteger(this_7, parentKey, childKey)
endfunction

function hashtable_saveBoolean takes hashtable this_7, integer parentKey, integer childKey, boolean value returns nothing
	call SaveBoolean(this_7, parentKey, childKey, value)
endfunction

function hashtable_saveInt takes hashtable this_7, integer parentKey, integer childKey, integer value returns nothing
	call SaveInteger(this_7, parentKey, childKey, value)
endfunction

function real_toInt takes real this_7 returns integer
	return R2I(this_7)
endfunction

function string_getHash takes string this_7 returns integer
	return StringHash(this_7)
endfunction

function error takes string msg, string stackPos returns nothing
	local integer hash
	local string stacktraceStr
	local integer stacktraceIndex
	local integer stacktraceLimit
	local string stacktraceStr_2
	local integer stacktraceIndex_2
	local integer stacktraceLimit_2
	local string temp
	local string temp_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if MagicFunctions_compiletime then
		call compileError("ERROR: " + msg)
	else
		if  not ErrorHandling_suppressErrorMessages then
			set hash = string_getHash(msg)
			if hashtable_hasInt(ErrorHandling_HT, ErrorHandling_PRIMARY_ERROR_KEY, hash) then
				if hashtable_loadInt(ErrorHandling_HT, ErrorHandling_PRIMARY_ERROR_KEY, hash) + ErrorHandling_MUTE_ERROR_DURATION < GameTimer_currentTime then
					set temp = msg
					set stacktraceStr = ""
					set stacktraceIndex = wurst_stack_depth
					set stacktraceLimit = 0
					loop
						set stacktraceIndex = stacktraceIndex - 1
						set stacktraceLimit = stacktraceLimit + 1
						exitwhen stacktraceLimit > 20
						exitwhen stacktraceIndex < 0
						set stacktraceStr = stacktraceStr + "\n   " + wurst_stack[stacktraceIndex]
					endloop
					call Log_error(temp + stacktraceStr)
					call hashtable_saveInt(ErrorHandling_HT, ErrorHandling_PRIMARY_ERROR_KEY, hash, real_toInt(GameTimer_currentTime))
					call hashtable_saveBoolean(ErrorHandling_HT, ErrorHandling_PRIMARY_ERROR_KEY, hash, false)
				elseif hashtable_hasBoolean(ErrorHandling_HT, ErrorHandling_PRIMARY_ERROR_KEY, hash) then
					if  not hashtable_loadBoolean(ErrorHandling_HT, ErrorHandling_PRIMARY_ERROR_KEY, hash) then
						call Log_error("|cffFF3A29Excessive repeating errors are being omitted")
						call hashtable_saveBoolean(ErrorHandling_HT, ErrorHandling_PRIMARY_ERROR_KEY, hash, true)
					endif
				else
					call Log_error("|cffFF3A29Excessive repeating errors are being omitted")
					call hashtable_saveBoolean(ErrorHandling_HT, ErrorHandling_PRIMARY_ERROR_KEY, hash, true)
				endif
			else
				call hashtable_saveInt(ErrorHandling_HT, ErrorHandling_PRIMARY_ERROR_KEY, hash, real_toInt(GameTimer_currentTime))
				set temp_2 = "Message: " + msg
				set stacktraceStr_2 = ""
				set stacktraceIndex_2 = wurst_stack_depth
				set stacktraceLimit_2 = 0
				loop
					set stacktraceIndex_2 = stacktraceIndex_2 - 1
					set stacktraceLimit_2 = stacktraceLimit_2 + 1
					exitwhen stacktraceLimit_2 > 20
					exitwhen stacktraceIndex_2 < 0
					set stacktraceStr_2 = stacktraceStr_2 + "\n   " + wurst_stack[stacktraceIndex_2]
				endloop
				call Log_error(temp_2 + stacktraceStr_2)
			endif
		endif
		call I2S(1 / 0)
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function dealloc_LLIterator takes integer obj, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if LLIterator_typeId[obj] == 0 then
		call error("Double free: object of type LLIterator", "when calling error in LinkedList, line 406")
	else
		set LLIterator_nextFree[LLIterator_firstFree] = obj
		set LLIterator_firstFree = LLIterator_firstFree + 1
		set LLIterator_typeId[obj] = 0
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function destroyLLIterator takes integer this_7, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call LLIterator_onDestroy(this_7)
	call dealloc_LLIterator(this_7, "when calling dealloc_LLIterator in LinkedList, line 406")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function dispatch_LLIterator_destroyLLIterator takes integer this_7, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if LLIterator_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling LLIterator.LLIterator", "when calling error in LinkedList, line 406")
		else
			call error("Called LLIterator.LLIterator on invalid object.", "when calling error in LinkedList, line 406")
		endif
	endif
	call destroyLLIterator(this_7, "when calling destroyLLIterator in LinkedList, line 406")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function LLIterator_close takes integer this_7, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if LLIterator_destroyOnClose[this_7] then
		call dispatch_LLIterator_destroyLLIterator(this_7, "when calling dispatch_LLIterator_destroyLLIterator in LinkedList, line 450")
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function LLIterator_hasNext takes integer this_7 returns boolean
	return LLEntry_next[LLIterator_current[this_7]] != LLIterator_dummy[this_7]
endfunction

function LLIterator_next takes integer this_7 returns integer
	set LLIterator_current[this_7] = LLEntry_next[LLIterator_current[this_7]]
	return LLEntry_elem[LLIterator_current[this_7]]
endfunction

function alloc_LLIterator takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if LLIterator_firstFree == 0 then
		if LLIterator_maxIndex < 32768 then
			set LLIterator_maxIndex = LLIterator_maxIndex + 1
			set this_7 = LLIterator_maxIndex
			set LLIterator_typeId[this_7] = 704
		else
			call error("Out of memory: Could not create LLIterator.", "when calling error in LinkedList, line 406")
			set this_7 = 0
		endif
	else
		set LLIterator_firstFree = LLIterator_firstFree - 1
		set this_7 = LLIterator_nextFree[LLIterator_firstFree]
		set LLIterator_typeId[this_7] = 704
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function LinkedList_getDummy takes integer this_7 returns integer
	return LinkedList_dummy[this_7]
endfunction

function dispatch_LinkedList_LinkedList_LinkedList_getDummy takes integer this_7, string stackPos returns integer
	local integer LinkedList_LinkedList_getDummy_result
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if LinkedList_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling LinkedList.getDummy", "when calling error in LinkedList, line 362")
		else
			call error("Called LinkedList.getDummy on invalid object.", "when calling error in LinkedList, line 362")
		endif
	endif
	set LinkedList_LinkedList_getDummy_result = LinkedList_getDummy(this_7)
	set wurst_stack_depth = wurst_stack_depth - 1
	return LinkedList_LinkedList_getDummy_result
endfunction

function LLIterator_reset takes integer this_7, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set LLIterator_dummy[this_7] = dispatch_LinkedList_LinkedList_LinkedList_getDummy(LLIterator_parent[this_7], "when calling getDummy in LinkedList, line 422")
	set LLIterator_current[this_7] = LLIterator_dummy[this_7]
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function dispatch_LLIterator_LinkedList_LLIterator_reset takes integer this_7, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if LLIterator_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling LLIterator.reset", "when calling error in LinkedList, line 421")
		else
			call error("Called LLIterator.reset on invalid object.", "when calling error in LinkedList, line 421")
		endif
	endif
	call LLIterator_reset(this_7, "when calling reset in LinkedList, line 421")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function construct_LLIterator takes integer this_7, integer parent, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set LLIterator_destroyOnClose[this_7] = true
	set LLIterator_parent[this_7] = parent
	call dispatch_LLIterator_LinkedList_LLIterator_reset(this_7, "when calling reset in LinkedList, line 414")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function new_LLIterator takes integer parent, string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_7 = alloc_LLIterator("when calling alloc_LLIterator in LinkedList, line 412")
	call construct_LLIterator(this_7, parent, "when calling construct_LLIterator in LinkedList, line 412")
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function LinkedList_iterator takes integer this_7, string stackPos returns integer
	local integer stackTrace_tempReturn
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackTrace_tempReturn = new_LLIterator(this_7, "when calling new_LLIterator in LinkedList, line 165")
	set wurst_stack_depth = wurst_stack_depth - 1
	return stackTrace_tempReturn
endfunction

function LinkedList_getEntry takes integer this_7, integer index returns integer
	local integer entry = LinkedList_dummy[this_7]
	local integer i_2 = 0
	local integer temp = index
	loop
		exitwhen i_2 > temp
		set entry = LLEntry_next[entry]
		set i_2 = i_2 + 1
	endloop
	return entry
endfunction

function dispatch_LinkedList_LinkedList_LinkedList_getEntry takes integer this_7, integer index, string stackPos returns integer
	local integer LinkedList_LinkedList_getEntry_result
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if LinkedList_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling LinkedList.getEntry", "when calling error in LinkedList, line 366")
		else
			call error("Called LinkedList.getEntry on invalid object.", "when calling error in LinkedList, line 366")
		endif
	endif
	set LinkedList_LinkedList_getEntry_result = LinkedList_getEntry(this_7, index)
	set wurst_stack_depth = wurst_stack_depth - 1
	return LinkedList_LinkedList_getEntry_result
endfunction

function LinkedList_get takes integer this_7, integer index, string stackPos returns integer
	local integer stackTrace_tempReturn
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackTrace_tempReturn = LLEntry_elem[dispatch_LinkedList_LinkedList_LinkedList_getEntry(this_7, index, "when calling getEntry in LinkedList, line 51")]
	set wurst_stack_depth = wurst_stack_depth - 1
	return stackTrace_tempReturn
endfunction

function dispatch_LinkedList_LinkedList_LinkedList_get takes integer this_7, integer index, string stackPos returns integer
	local integer LinkedList_LinkedList_get_result
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if LinkedList_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling LinkedList.get", "when calling error in LinkedList, line 50")
		else
			call error("Called LinkedList.get on invalid object.", "when calling error in LinkedList, line 50")
		endif
	endif
	set LinkedList_LinkedList_get_result = LinkedList_get(this_7, index, "when calling get in LinkedList, line 50")
	set wurst_stack_depth = wurst_stack_depth - 1
	return LinkedList_LinkedList_get_result
endfunction

function realFromIndex takes integer index returns real
	return index / TypeCasting_R2I_PRECISION
endfunction

function City_addPopulation takes integer this_7, integer tier, real multiplier, string stackPos returns nothing
	local integer prev_pop
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set prev_pop = City_population[this_7]
	set City_population[this_7] = City_population[this_7] + real_toInt(multiplier * GetRandomReal(realFromIndex(dispatch_LinkedList_LinkedList_LinkedList_get(CityModifiers_mPortions[tier], 0, "when calling get in City, line 403")), realFromIndex(dispatch_LinkedList_LinkedList_LinkedList_get(CityModifiers_mPortions[tier], 1, "when calling get in City, line 403"))) * City_population[this_7])
	set City_last_pop_growth[this_7] = City_last_pop_growth[this_7] + (City_population[this_7] - prev_pop)
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function dispatch_City_City_City_addPopulation takes integer this_7, integer tier, real multiplier, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if City_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling City.addPopulation", "when calling error in City, line 401")
		else
			call error("Called City.addPopulation on invalid object.", "when calling error in City, line 401")
		endif
	endif
	call City_addPopulation(this_7, tier, multiplier, "when calling addPopulation in City, line 401")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function Table_loadInt takes integer this_7, integer parentKey returns integer
	return hashtable_loadInt(Table_ht, this_7, parentKey)
endfunction

function dispatch_Table_Table_Table_loadInt takes integer this_7, integer parentKey, string stackPos returns integer
	local integer Table_Table_loadInt_result
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if Table_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling Table.loadInt", "when calling error in Table, line 39")
		else
			call error("Called Table.loadInt on invalid object.", "when calling error in Table, line 39")
		endif
	endif
	set Table_Table_loadInt_result = Table_loadInt(this_7, parentKey)
	set wurst_stack_depth = wurst_stack_depth - 1
	return Table_Table_loadInt_result
endfunction

function HashMap_get takes integer this_7, integer key, string stackPos returns integer
	local integer stackTrace_tempReturn
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackTrace_tempReturn = dispatch_Table_Table_Table_loadInt(this_7, key, "when calling loadInt in HashMap, line 24")
	set wurst_stack_depth = wurst_stack_depth - 1
	return stackTrace_tempReturn
endfunction

function dispatch_HashMap_HashMap_HashMap_get takes integer this_7, integer key, string stackPos returns integer
	local integer HashMap_HashMap_get_result
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if Table_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling HashMap.get", "when calling error in HashMap, line 23")
		else
			call error("Called HashMap.get on invalid object.", "when calling error in HashMap, line 23")
		endif
	endif
	set HashMap_HashMap_get_result = HashMap_get(this_7, key, "when calling get in HashMap, line 23")
	set wurst_stack_depth = wurst_stack_depth - 1
	return HashMap_HashMap_get_result
endfunction

function City_getCityModifierOnFastCount takes integer this_7, integer cm_2, string stackPos returns nothing
	local integer tier
	local real mult
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set tier = CityModifierClass_popIncreaseTier[dispatch_HashMap_HashMap_HashMap_get(CityModifiers_cityModifiers, cm_2, "when calling get in City, line 408")]
	set mult = CityModifierClass_popIncreaseMultiplier[dispatch_HashMap_HashMap_HashMap_get(CityModifiers_cityModifiers, cm_2, "when calling get in City, line 409")]
	call dispatch_City_City_City_addPopulation(this_7, tier, mult, "when calling addPopulation in City, line 410")
	if CityModifierClass_isPOIncreaseConstant[dispatch_HashMap_HashMap_HashMap_get(CityModifiers_cityModifiers, cm_2, "when calling get in City, line 412")] == false then
		set City_public_order_add[this_7] = City_public_order_add[this_7] - CityModifierClass_POIncrease[dispatch_HashMap_HashMap_HashMap_get(CityModifiers_cityModifiers, cm_2, "when calling get in City, line 413")] * City_kCityFastCount / CityModifierClass_time[dispatch_HashMap_HashMap_HashMap_get(CityModifiers_cityModifiers, cm_2, "when calling get in City, line 413")]
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function dispatch_City_City_City_getCityModifierOnFastCount takes integer this_7, integer cm_2, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if City_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling City.getCityModifierOnFastCount", "when calling error in City, line 407")
		else
			call error("Called City.getCityModifierOnFastCount on invalid object.", "when calling error in City, line 407")
		endif
	endif
	call City_getCityModifierOnFastCount(this_7, cm_2, "when calling getCityModifierOnFastCount in City, line 407")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function City_City_call_line138 takes integer this_7, integer cbPOP, string stackPos returns nothing
	local integer pop_prev
	local integer pop_growth
	local integer deviation
	local integer iterator
	local integer m
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set City_population_growth_rate[this_5[this_7]] = City_population_growth_rate[this_5[this_7]] + GetRandomReal( - 0.0001, 0.00015) * City_population_growth_rate[this_5[this_7]]
	set pop_prev = City_population[this_5[this_7]]
	set City_population[this_5[this_7]] = City_population[this_5[this_7]] + real_toInt(Pow(City_population[this_5[this_7]] * City_population_growth_rate[this_5[this_7]], 0.8) * City_kCityTaxLevelPopModifier[City_tax_level[this_5[this_7]]])
	set pop_growth = City_population[this_5[this_7]] - pop_prev
	set deviation = GetRandomInt(real_toInt( - (0.25 * pop_growth)), real_toInt(0.25 * pop_growth))
	set City_population[this_5[this_7]] = City_population[this_5[this_7]] + deviation
	set City_last_pop_growth[this_5[this_7]] = City_population[this_5[this_7]] - pop_prev
	set iterator = LinkedList_iterator(City_modifiers[this_5[this_7]], "when calling iterator in City, line 149")
	loop
		exitwhen  not LLIterator_hasNext(iterator)
		set m = LLIterator_next(iterator)
		call dispatch_City_City_City_getCityModifierOnFastCount(this_5[this_7], m, "when calling getCityModifierOnFastCount in City, line 150")
	endloop
	call LLIterator_close(iterator, "when calling close in City, line 149")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function alloc_City_City_CallbackSingle_line374 takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if CallbackSingle_firstFree == 0 then
		if CallbackSingle_maxIndex < 32768 then
			set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
			set this_7 = CallbackSingle_maxIndex
			set CallbackSingle_typeId[this_7] = 639
		else
			call error("Out of memory: Could not create City_City_CallbackSingle_line374.", "when calling error in City, line 374")
			set this_7 = 0
		endif
	else
		set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
		set this_7 = CallbackSingle_nextFree[CallbackSingle_firstFree]
		set CallbackSingle_typeId[this_7] = 639
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function construct_CallbackSingle takes integer this_7 returns nothing
endfunction

function dbg takes string msg returns nothing
	if ( not Main_dbg_msg) and ( not Main_dbg_mode) then
		return
	endif
	call DisplayTimedTextToPlayer(Player_players[Main_dbg_player], 0., 0., 60., msg)
endfunction

function City_getCityModifierOnAdd takes integer this_7, integer cm_2, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set City_public_order_add[this_7] = City_public_order_add[this_7] + CityModifierClass_POIncrease[dispatch_HashMap_HashMap_HashMap_get(CityModifiers_cityModifiers, cm_2, "when calling get in City, line 421")]
	set City_tax_multiplier[this_7] = City_tax_multiplier[this_7] + CityModifierClass_taxIncrease[dispatch_HashMap_HashMap_HashMap_get(CityModifiers_cityModifiers, cm_2, "when calling get in City, line 422")]
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function dispatch_City_City_City_getCityModifierOnAdd takes integer this_7, integer cm_2, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if City_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling City.getCityModifierOnAdd", "when calling error in City, line 420")
		else
			call error("Called City.getCityModifierOnAdd on invalid object.", "when calling error in City, line 420")
		endif
	endif
	call City_getCityModifierOnAdd(this_7, cm_2, "when calling getCityModifierOnAdd in City, line 420")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function alloc_LLEntry takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if LLEntry_firstFree == 0 then
		if LLEntry_maxIndex < 32768 then
			set LLEntry_maxIndex = LLEntry_maxIndex + 1
			set this_7 = LLEntry_maxIndex
			set LLEntry_typeId[this_7] = 703
		else
			call error("Out of memory: Could not create LLEntry.", "when calling error in LinkedList, line 396")
			set this_7 = 0
		endif
	else
		set LLEntry_firstFree = LLEntry_firstFree - 1
		set this_7 = LLEntry_nextFree[LLEntry_firstFree]
		set LLEntry_typeId[this_7] = 703
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function construct_LLEntry takes integer this_7, integer elem, integer prev, integer next returns nothing
	set LLEntry_elem[this_7] = elem
	set LLEntry_prev[this_7] = prev
	set LLEntry_next[this_7] = next
endfunction

function new_LLEntry takes integer elem, integer prev, integer next, string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_7 = alloc_LLEntry("when calling alloc_LLEntry in LinkedList, line 401")
	call construct_LLEntry(this_7, elem, prev, next)
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function LinkedList_add_1 takes integer this_7, integer elems_0, string stackPos returns nothing
	local integer entry
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set entry = new_LLEntry(elems_0, LLEntry_prev[LinkedList_dummy[this_7]], LinkedList_dummy[this_7], "when calling new_LLEntry in LinkedList, line 39")
	set LLEntry_next[LLEntry_prev[LinkedList_dummy[this_7]]] = entry
	set LLEntry_prev[LinkedList_dummy[this_7]] = entry
	set LinkedList_size[this_7] = LinkedList_size[this_7] + 1
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function dispatch_LinkedList_LinkedList_LinkedList_add_1 takes integer this_7, integer elems_0, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if LinkedList_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling LinkedList.add", "when calling error in LinkedList, line 37")
		else
			call error("Called LinkedList.add on invalid object.", "when calling error in LinkedList, line 37")
		endif
	endif
	call LinkedList_add_1(this_7, elems_0, "when calling add in LinkedList, line 37")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function LinkedList_has takes integer this_7, integer elem returns boolean
	local integer entry = LLEntry_next[LinkedList_dummy[this_7]]
	loop
		exitwhen  not (entry != LinkedList_dummy[this_7])
		if LLEntry_elem[entry] == elem then
			return true
		endif
		set entry = LLEntry_next[entry]
	endloop
	return false
endfunction

function dispatch_LinkedList_LinkedList_LinkedList_has takes integer this_7, integer elem, string stackPos returns boolean
	local boolean LinkedList_LinkedList_has_result
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if LinkedList_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling LinkedList.has", "when calling error in LinkedList, line 103")
		else
			call error("Called LinkedList.has on invalid object.", "when calling error in LinkedList, line 103")
		endif
	endif
	set LinkedList_LinkedList_has_result = LinkedList_has(this_7, elem)
	set wurst_stack_depth = wurst_stack_depth - 1
	return LinkedList_LinkedList_has_result
endfunction

function Table_saveInt takes integer this_7, integer parentKey, integer value returns nothing
	call hashtable_saveInt(Table_ht, this_7, parentKey, value)
endfunction

function dispatch_Table_Table_Table_saveInt takes integer this_7, integer parentKey, integer value, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if Table_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling Table.saveInt", "when calling error in Table, line 42")
		else
			call error("Called Table.saveInt on invalid object.", "when calling error in Table, line 42")
		endif
	endif
	call Table_saveInt(this_7, parentKey, value)
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function timer_getHandleId takes timer this_7 returns integer
	return GetHandleId(this_7)
endfunction

function timer_setData takes timer this_7, integer data, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call dispatch_Table_Table_Table_saveInt(TimerUtils_timerData, timer_getHandleId(this_7), data, "when calling saveInt in TimerUtils, line 17")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function getTimer takes string stackPos returns timer
	local timer receiver
	local timer stackTrace_tempReturn
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if TimerUtils_freeTimersCount > 0 then
		set TimerUtils_freeTimersCount = TimerUtils_freeTimersCount - 1
		call timer_setData(TimerUtils_freeTimers[TimerUtils_freeTimersCount], 0, "when calling setData in TimerUtils, line 29")
		set wurst_stack_depth = wurst_stack_depth - 1
		set receiver = null
		set stackTrace_tempReturn = null
		return TimerUtils_freeTimers[TimerUtils_freeTimersCount]
	else
		set receiver = CreateTimer()
		call timer_setData(receiver, 0, "when calling setData in TimerUtils, line 32")
		set stackTrace_tempReturn = receiver
		set wurst_stack_depth = wurst_stack_depth - 1
		set getTimertempReturn = stackTrace_tempReturn
		set receiver = null
		set stackTrace_tempReturn = null
		return getTimertempReturn
	endif
endfunction

function timer_start takes timer this_7, real time, code timerCallBack returns nothing
	call TimerStart(this_7, time, false, timerCallBack)
endfunction

function CallbackSingle_start takes integer this_7, timer whichTimer, real time, string stackPos returns nothing
	local timer receiver
	local timer receiver_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set receiver = whichTimer
	call timer_setData(receiver, this_7, "when calling setData in ClosureTimers, line 113")
	set receiver_2 = receiver
	call timer_start(receiver_2, time, ref_function_bridge_CallbackSingle_closure_impl)
	set CallbackSingle_t[this_7] = receiver_2
	set wurst_stack_depth = wurst_stack_depth - 1
	set receiver = null
	set receiver_2 = null
endfunction

function dispatch_CallbackSingle_ClosureTimers_CallbackSingle_start takes integer this_7, timer whichTimer, real time, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if CallbackSingle_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling CallbackSingle.start", "when calling error in ClosureTimers, line 111")
		else
			call error("Called CallbackSingle.start on invalid object.", "when calling error in ClosureTimers, line 111")
		endif
	endif
	call CallbackSingle_start(this_7, whichTimer, time, "when calling start in ClosureTimers, line 111")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function timer_doAfter takes timer this_7, real timeToWait, integer cb, string stackPos returns integer
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call dispatch_CallbackSingle_ClosureTimers_CallbackSingle_start(cb, this_7, timeToWait, "when calling start in ClosureTimers, line 16")
	set wurst_stack_depth = wurst_stack_depth - 1
	return cb
endfunction

function doAfter takes real timeToWait, integer cb, string stackPos returns integer
	local integer stackTrace_tempReturn
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackTrace_tempReturn = timer_doAfter(getTimer("when calling getTimer in ClosureTimers, line 27"), timeToWait, cb, "when calling doAfter in ClosureTimers, line 27")
	set wurst_stack_depth = wurst_stack_depth - 1
	return stackTrace_tempReturn
endfunction

function real_toString takes real this_7, integer precision returns string
	return R2SW(this_7, precision, precision)
endfunction

function City_addModifier takes integer this_7, integer cm_2, string stackPos returns boolean
	local integer clVar
	local real temp
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if dispatch_LinkedList_LinkedList_LinkedList_has(City_modifiers[this_7], cm_2, "when calling has in City, line 369") then
		set wurst_stack_depth = wurst_stack_depth - 1
		return false
	endif
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(City_modifiers[this_7], cm_2, "when calling add in City, line 371")
	call dispatch_City_City_City_getCityModifierOnAdd(this_7, cm_2, "when calling getCityModifierOnAdd in City, line 372")
	call dbg("Added a modifier " + CityModifierClass_name[dispatch_HashMap_HashMap_HashMap_get(CityModifiers_cityModifiers, cm_2, "when calling get in City, line 373")] + " | " + real_toString(CityModifierClass_time[dispatch_HashMap_HashMap_HashMap_get(CityModifiers_cityModifiers, cm_2, "when calling get in City, line 373")], 3))
	set temp = CityModifierClass_time[dispatch_HashMap_HashMap_HashMap_get(CityModifiers_cityModifiers, cm_2, "when calling get in City, line 374")]
	set clVar = alloc_City_City_CallbackSingle_line374("when calling alloc_City_City_CallbackSingle_line374 in City, line 374")
	call construct_CallbackSingle(clVar)
	set this_3[clVar] = this_7
	set cm[clVar] = cm_2
	call doAfter(temp, clVar, "when calling doAfter in City, line 374")
	set wurst_stack_depth = wurst_stack_depth - 1
	return true
endfunction

function dispatch_City_City_City_addModifier takes integer this_7, integer cm_2, string stackPos returns boolean
	local boolean City_City_addModifier_result
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if City_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling City.addModifier", "when calling error in City, line 368")
		else
			call error("Called City.addModifier on invalid object.", "when calling error in City, line 368")
		endif
	endif
	set City_City_addModifier_result = City_addModifier(this_7, cm_2, "when calling addModifier in City, line 368")
	set wurst_stack_depth = wurst_stack_depth - 1
	return City_City_addModifier_result
endfunction

function City_getCityModifierOnLongCount takes integer this_7, integer w_cm returns nothing
endfunction

function dispatch_City_City_City_getCityModifierOnLongCount takes integer this_7, integer w_cm, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if City_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling City.getCityModifierOnLongCount", "when calling error in City, line 416")
		else
			call error("Called City.getCityModifierOnLongCount on invalid object.", "when calling error in City, line 416")
		endif
	endif
	call City_getCityModifierOnLongCount(this_7, w_cm)
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function getChance takes real ch returns boolean
	return GetRandomReal(0.0, 1.0) <= ch
endfunction

function City_City_call_line154 takes integer this_7, integer cbLONG, string stackPos returns nothing
	local integer iterator
	local integer m
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if getChance(CityModifierClass_chance[dispatch_HashMap_HashMap_HashMap_get(CityModifiers_cityModifiers, 2, "when calling get in City, line 155")]) then
		call dispatch_City_City_City_addModifier(this_6[this_7], 2, "when calling addModifier in City, line 156")
	endif
	if getChance(CityModifierClass_chance[dispatch_HashMap_HashMap_HashMap_get(CityModifiers_cityModifiers, 5, "when calling get in City, line 157")]) then
		call dispatch_City_City_City_addModifier(this_6[this_7], 5, "when calling addModifier in City, line 158")
	endif
	if getChance(CityModifierClass_chance[dispatch_HashMap_HashMap_HashMap_get(CityModifiers_cityModifiers, 7, "when calling get in City, line 159")]) then
		call dispatch_City_City_City_addModifier(this_6[this_7], 7, "when calling addModifier in City, line 160")
	endif
	if getChance(CityModifierClass_chance[dispatch_HashMap_HashMap_HashMap_get(CityModifiers_cityModifiers, 3, "when calling get in City, line 161")]) then
		call dispatch_City_City_City_addModifier(this_6[this_7], 3, "when calling addModifier in City, line 162")
	endif
	if getChance(CityModifierClass_chance[dispatch_HashMap_HashMap_HashMap_get(CityModifiers_cityModifiers, 4, "when calling get in City, line 163")]) then
		call dispatch_City_City_City_addModifier(this_6[this_7], 4, "when calling addModifier in City, line 164")
	endif
	set iterator = LinkedList_iterator(City_modifiers[this_6[this_7]], "when calling iterator in City, line 166")
	loop
		exitwhen  not LLIterator_hasNext(iterator)
		set m = LLIterator_next(iterator)
		call dispatch_City_City_City_getCityModifierOnLongCount(this_6[this_7], m, "when calling getCityModifierOnLongCount in City, line 167")
	endloop
	call LLIterator_close(iterator, "when calling close in City, line 166")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function textToAll takes string msg, real time returns nothing
	call DisplayTimedTextToForce(GetPlayersAll(), time, msg)
endfunction

function Credits_call_line5 takes integer this_7, integer cb returns nothing
	call textToAll(Strings_ksDiscord, Strings_kDiscordTime)
endfunction

function int_toString takes integer this_7 returns string
	return I2S(this_7)
endfunction

function multiboard_setTitle takes multiboard this_7, string label returns nothing
	call MultiboardSetTitleText(this_7, label)
endfunction

function DateTime_call_line31 takes integer this_7, integer cb returns nothing
	local integer i_2
	local integer temp
	local multiboard receiver
	set sec[this_7] = sec[this_7] - 1.
	set i_2 = 0
	set temp = Main_PLAYER_SLOTS - 1
	loop
		exitwhen i_2 > temp
		set receiver = Multiboards_multiboards[i_2]
		call multiboard_setTitle(receiver, "Income: " + int_toString(real_toInt(sec[this_7] / 60.)) + ":" + int_toString(real_toInt(ModuloReal(sec[this_7], 60.) / 10.)) + int_toString(real_toInt(ModuloReal(ModuloReal(sec[this_7], 60.), 10.))))
		set i_2 = i_2 + 1
	endloop
	if sec[this_7] <= 0. then
		set sec[this_7] = DateTime_kIncomeTime
	endif
	set receiver = null
endfunction

function PlayerStats_getUpkeep takes integer this_7 returns integer
	return PlayerStats_upkeep[this_7]
endfunction

function dispatch_PlayerStats_PlayerStats_PlayerStats_getUpkeep takes integer this_7, string stackPos returns integer
	local integer PlayerStats_PlayerStats_getUpkeep_result
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if PlayerStats_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling PlayerStats.getUpkeep", "when calling error in PlayerStats, line 48")
		else
			call error("Called PlayerStats.getUpkeep on invalid object.", "when calling error in PlayerStats, line 48")
		endif
	endif
	set PlayerStats_PlayerStats_getUpkeep_result = PlayerStats_getUpkeep(this_7)
	set wurst_stack_depth = wurst_stack_depth - 1
	return PlayerStats_PlayerStats_getUpkeep_result
endfunction

function PlayerStats_isInGame takes integer this_7 returns boolean
	return PlayerStats_is_in_game[this_7]
endfunction

function dispatch_PlayerStats_PlayerStats_PlayerStats_isInGame takes integer this_7, string stackPos returns boolean
	local boolean PlayerStats_PlayerStats_isInGame_result
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if PlayerStats_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling PlayerStats.isInGame", "when calling error in PlayerStats, line 42")
		else
			call error("Called PlayerStats.isInGame on invalid object.", "when calling error in PlayerStats, line 42")
		endif
	endif
	set PlayerStats_PlayerStats_isInGame_result = PlayerStats_isInGame(this_7)
	set wurst_stack_depth = wurst_stack_depth - 1
	return PlayerStats_PlayerStats_isInGame_result
endfunction

function int_toReal takes integer this_7 returns real
	return this_7 * 1.
endfunction

function sign takes real x returns real
	if x > 0. then
		return 1.
	elseif x < 0. then
		return -1.
	else
		return 0.
	endif
endfunction

function getStringColoredBasedOnSign takes integer x returns string
	local string sgn = "|cff15ff00+"
	if sign(int_toReal(x)) == -1. then
		set sgn = "|cffff0000"
	endif
	return sgn + int_toString(x) + "|r"
endfunction

function multiboard_getItem takes multiboard this_7, integer row, integer column returns multiboarditem
	return MultiboardGetItem(this_7, row, column)
endfunction

function multiboard_setItem takes multiboard this_7, integer x, integer y, string wval returns nothing
	local multiboarditem mbi = multiboard_getItem(this_7, y, x)
	call MultiboardSetItemValue(mbi, wval)
	set mbi = null
endfunction

function Economy_call_line47 takes integer this_7, integer cbUPKEEP_SHOWING, string stackPos returns nothing
	local integer i_2
	local integer temp
	local multiboard receiver
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set i_2 = 0
	set temp = Main_PLAYER_SLOTS - 1
	loop
		exitwhen i_2 > temp
		if dispatch_PlayerStats_PlayerStats_PlayerStats_isInGame(PlayerStats_player_stats[i_2], "when calling isInGame in Economy, line 49") then
			set receiver = Multiboards_multiboards[i_2]
			call multiboard_setItem(receiver, Multiboards_kMBUpkeep[0], Multiboards_kMBUpkeep[1], getStringColoredBasedOnSign(dispatch_PlayerStats_PlayerStats_PlayerStats_getUpkeep(PlayerStats_player_stats[i_2], "when calling getUpkeep in Economy, line 51")))
		endif
		set i_2 = i_2 + 1
	endloop
	set wurst_stack_depth = wurst_stack_depth - 1
	set receiver = null
endfunction

function alloc_Economy_CallbackSingle_line34 takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if CallbackSingle_firstFree == 0 then
		if CallbackSingle_maxIndex < 32768 then
			set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
			set this_7 = CallbackSingle_maxIndex
			set CallbackSingle_typeId[this_7] = 644
		else
			call error("Out of memory: Could not create Economy_CallbackSingle_line34.", "when calling error in Economy, line 34")
			set this_7 = 0
		endif
	else
		set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
		set this_7 = CallbackSingle_nextFree[CallbackSingle_firstFree]
		set CallbackSingle_typeId[this_7] = 644
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function min_2 takes integer numbers_0, integer numbers_1 returns integer
	local integer minNumber = Integer_INT_MAX
	local integer cond_result
	if numbers_0 < minNumber then
		set cond_result = numbers_0
	else
		set cond_result = minNumber
	endif
	set minNumber = cond_result
	if numbers_1 < minNumber then
		set cond_result = numbers_1
	else
		set cond_result = minNumber
	endif
	set minNumber = cond_result
	return minNumber
endfunction

function countIncomeForAll takes string stackPos returns nothing
	local integer i_2
	local integer temp
	local integer number_of_cities_per_step_2
	local integer i_3
	local integer temp_2
	local integer clVar
	local real temp_3
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set i_2 = 0
	set temp = Main_PLAYER_SLOTS - 1
	loop
		exitwhen i_2 > temp
		set Economy_gold_change[i_2] = Economy_gold_adder[i_2]
		set Economy_lumb_change[i_2] = Economy_lumb_adder[i_2]
		set i_2 = i_2 + 1
	endloop
	set number_of_cities_per_step_2 = real_toInt(City_cityCount * Economy_kStepTime / Economy_kIncomeCountToMultiboardRate) + 1
	set i_3 = 0
	set temp_2 = real_toInt(Economy_kIncomeCountToMultiboardRate / Economy_kStepTime) - 1
	loop
		exitwhen i_3 > temp_2
		set temp_3 = i_3 * Economy_kStepTime
		set clVar = alloc_Economy_CallbackSingle_line34("when calling alloc_Economy_CallbackSingle_line34 in Economy, line 34")
		call construct_CallbackSingle(clVar)
		set i[clVar] = i_3
		set number_of_cities_per_step[clVar] = number_of_cities_per_step_2
		call doAfter(temp_3, clVar, "when calling doAfter in Economy, line 34")
		if min_2(City_cityCount - 1, (i_3 + 1) * number_of_cities_per_step_2 - 1) == City_cityCount - 1 then
			exitwhen true
		endif
		set i_3 = i_3 + 1
	endloop
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function Economy_call_line54 takes integer this_7, integer cbINCOME_MULTIBOARD, string stackPos returns nothing
	local integer i_2
	local integer temp
	local multiboard receiver
	local multiboard receiver_2
	local integer i_3
	local integer temp_2
	local integer cur_gold
	local integer cur_lumb
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set Economy_income_counting_i = Economy_income_counting_i + 1
	set i_2 = 0
	set temp = Main_PLAYER_SLOTS - 1
	loop
		exitwhen i_2 > temp
		if dispatch_PlayerStats_PlayerStats_PlayerStats_isInGame(PlayerStats_player_stats[i_2], "when calling isInGame in Economy, line 57") then
			set receiver = Multiboards_multiboards[i_2]
			call multiboard_setItem(receiver, Multiboards_kMBIncome[0], Multiboards_kMBIncome[1], getStringColoredBasedOnSign(Economy_gold_change[i_2]))
			set receiver_2 = receiver
			call multiboard_setItem(receiver_2, Multiboards_kMBUpkeep[0], Multiboards_kMBUpkeep[1], getStringColoredBasedOnSign(dispatch_PlayerStats_PlayerStats_PlayerStats_getUpkeep(PlayerStats_player_stats[i_2], "when calling getUpkeep in Economy, line 60")))
		endif
		set i_2 = i_2 + 1
	endloop
	if Economy_income_counting_i == real_toInt(Economy_kIncomeCountRate / Economy_kIncomeCountToMultiboardRate) then
		set Economy_income_counting_i = 0
		set i_3 = 0
		set temp_2 = Main_PLAYER_SLOTS - 1
		loop
			exitwhen i_3 > temp_2
			if dispatch_PlayerStats_PlayerStats_PlayerStats_isInGame(PlayerStats_player_stats[i_3], "when calling isInGame in Economy, line 65") then
				set cur_gold = GetPlayerState(Player_players[i_3], PLAYER_STATE_RESOURCE_GOLD)
				set cur_lumb = GetPlayerState(Player_players[i_3], PLAYER_STATE_RESOURCE_LUMBER)
				call SetPlayerState(Player_players[i_3], PLAYER_STATE_RESOURCE_GOLD, cur_gold + Economy_gold_change[i_3] + dispatch_PlayerStats_PlayerStats_PlayerStats_getUpkeep(PlayerStats_player_stats[i_3], "when calling getUpkeep in Economy, line 68"))
				call SetPlayerState(Player_players[i_3], PLAYER_STATE_RESOURCE_LUMBER, cur_lumb + Economy_lumb_change[i_3])
			endif
			set i_3 = i_3 + 1
		endloop
	endif
	call countIncomeForAll("when calling countIncomeForAll in Economy, line 72")
	set wurst_stack_depth = wurst_stack_depth - 1
	set receiver = null
	set receiver_2 = null
endfunction

function alloc_City_City_ForGroupCallback_line313 takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if ForGroupCallback_firstFree == 0 then
		if ForGroupCallback_maxIndex < 32768 then
			set ForGroupCallback_maxIndex = ForGroupCallback_maxIndex + 1
			set this_7 = ForGroupCallback_maxIndex
			set ForGroupCallback_typeId[this_7] = 688
		else
			call error("Out of memory: Could not create City_City_ForGroupCallback_line313.", "when calling error in City, line 313")
			set this_7 = 0
		endif
	else
		set ForGroupCallback_firstFree = ForGroupCallback_firstFree - 1
		set this_7 = ForGroupCallback_nextFree[ForGroupCallback_firstFree]
		set ForGroupCallback_typeId[this_7] = 688
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function alloc_City_City_ForGroupCallback_line317 takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if ForGroupCallback_firstFree == 0 then
		if ForGroupCallback_maxIndex < 32768 then
			set ForGroupCallback_maxIndex = ForGroupCallback_maxIndex + 1
			set this_7 = ForGroupCallback_maxIndex
			set ForGroupCallback_typeId[this_7] = 689
		else
			call error("Out of memory: Could not create City_City_ForGroupCallback_line317.", "when calling error in City, line 317")
			set this_7 = 0
		endif
	else
		set ForGroupCallback_firstFree = ForGroupCallback_firstFree - 1
		set this_7 = ForGroupCallback_nextFree[ForGroupCallback_firstFree]
		set ForGroupCallback_typeId[this_7] = 689
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function PlayerStats_getForceId takes integer this_7 returns integer
	return PlayerStats_force_id[this_7]
endfunction

function dispatch_PlayerStats_PlayerStats_PlayerStats_getForceId takes integer this_7, string stackPos returns integer
	local integer PlayerStats_PlayerStats_getForceId_result
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if PlayerStats_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling PlayerStats.getForceId", "when calling error in PlayerStats, line 122")
		else
			call error("Called PlayerStats.getForceId on invalid object.", "when calling error in PlayerStats, line 122")
		endif
	endif
	set PlayerStats_PlayerStats_getForceId_result = PlayerStats_getForceId(this_7)
	set wurst_stack_depth = wurst_stack_depth - 1
	return PlayerStats_PlayerStats_getForceId_result
endfunction

function getAttentionStringForPlayer takes player pl, string stackPos returns string
	local integer f
	local integer r
	local string s
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set f = dispatch_PlayerStats_PlayerStats_PlayerStats_getForceId(PlayerStats_player_stats[player_getId(pl)], "when calling getForceId in Messages, line 53")
	set r = GetRandomInt(0, Strings_ksMsgCount - 1)
	if f == Forces_kWE then
		set s = Strings_ksAttentionWE[r]
	elseif f == Forces_kEE then
		set s = Strings_ksAttentionEE[r]
	elseif f == Forces_kME then
		set s = Strings_ksAttentionME[r]
	elseif f == Forces_kBZ then
		set s = Strings_ksAttentionBZ[r]
	else
		set s = Strings_ksAttention[0]
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return "|cffffa600" + s + "|r"
endfunction

function attentionToPlayer takes string msg, player pl, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call DisplayTimedTextToPlayer(pl, 0., 0., Strings_kGoodNewsDur, getAttentionStringForPlayer(pl, "when calling getAttentionStringForPlayer in Messages, line 88"))
	call DisplayTimedTextToPlayer(pl, 0., 0., Strings_kGoodNewsDur, msg)
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function toHex takes integer number returns string
	local integer firstpart = number / 16
	local integer secondpart = number - firstpart * 16
	return Colors_hexs[firstpart] + Colors_hexs[secondpart]
endfunction

function color_toColorString takes integer this_red, integer this_green, integer this_blue returns string
	return "|cff" + toHex(this_red) + toHex(this_green) + toHex(this_blue)
endfunction

function City_getCityNameColored takes integer this_7 returns string
	return color_toColorString(Forces_forces_colors_red[City_force_id[this_7]], Forces_forces_colors_green[City_force_id[this_7]], Forces_forces_colors_blue[City_force_id[this_7]]) + City_city_name[this_7] + "|r"
endfunction

function dispatch_City_City_City_getCityNameColored takes integer this_7, string stackPos returns string
	local string City_City_getCityNameColored_result
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if City_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling City.getCityNameColored", "when calling error in City, line 179")
		else
			call error("Called City.getCityNameColored on invalid object.", "when calling error in City, line 179")
		endif
	endif
	set City_City_getCityNameColored_result = City_getCityNameColored(this_7)
	set wurst_stack_depth = wurst_stack_depth - 1
	return City_City_getCityNameColored_result
endfunction

function City_getCityUnit takes integer this_7 returns unit
	return City_city_unit[this_7]
endfunction

function dispatch_City_City_City_getCityUnit takes integer this_7, string stackPos returns unit
	local unit City_City_getCityUnit_result
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if City_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling City.getCityUnit", "when calling error in City, line 188")
		else
			call error("Called City.getCityUnit on invalid object.", "when calling error in City, line 188")
		endif
	endif
	set City_City_getCityUnit_result = City_getCityUnit(this_7)
	set wurst_stack_depth = wurst_stack_depth - 1
	set dispatch_City_City_City_getCityUnittempReturn = City_City_getCityUnit_result
	set City_City_getCityUnit_result = null
	return dispatch_City_City_City_getCityUnittempReturn
endfunction

function City_getLastPublicOrder takes integer this_7 returns real
	return City_public_order_last[this_7]
endfunction

function dispatch_City_City_City_getLastPublicOrder takes integer this_7, string stackPos returns real
	local real City_City_getLastPublicOrder_result
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if City_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling City.getLastPublicOrder", "when calling error in City, line 335")
		else
			call error("Called City.getLastPublicOrder on invalid object.", "when calling error in City, line 335")
		endif
	endif
	set City_City_getLastPublicOrder_result = City_getLastPublicOrder(this_7)
	set wurst_stack_depth = wurst_stack_depth - 1
	return City_City_getLastPublicOrder_result
endfunction

function City_getPopulation takes integer this_7 returns integer
	return City_population[this_7]
endfunction

function dispatch_City_City_City_getPopulation takes integer this_7, string stackPos returns integer
	local integer City_City_getPopulation_result
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if City_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling City.getPopulation", "when calling error in City, line 344")
		else
			call error("Called City.getPopulation on invalid object.", "when calling error in City, line 344")
		endif
	endif
	set City_City_getPopulation_result = City_getPopulation(this_7)
	set wurst_stack_depth = wurst_stack_depth - 1
	return City_City_getPopulation_result
endfunction

function getElapsedTime takes nothing returns real
	return Main_elapsed_time
endfunction

function player_getController takes player this_7 returns mapcontrol
	return GetPlayerController(this_7)
endfunction

function player_getSlotState takes player this_7 returns playerslotstate
	return GetPlayerSlotState(this_7)
endfunction

function player_isIngame takes player this_7 returns boolean
	return player_getSlotState(this_7) == PLAYER_SLOT_STATE_PLAYING and player_getController(this_7) == MAP_CONTROL_USER
endfunction

function unit_getX takes unit this_7 returns real
	return GetUnitX(this_7)
endfunction

function unit_getY takes unit this_7 returns real
	return GetUnitY(this_7)
endfunction

function checkForRevolt takes integer city_id, string stackPos returns nothing
	local real po
	local integer pop
	local unit city_u
	local integer iterator
	local integer u_5
	local integer iterator_2
	local integer u_6
	local integer iterator_3
	local integer u_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if city_id < 0 or city_id >= City_cityCount then
		set wurst_stack_depth = wurst_stack_depth - 1
		set city_u = null
		return
	endif
	if getElapsedTime() - Revolts_last_time_city_revolted[city_id] <= Revolts_kCityMinTimeToRevolt then
		set wurst_stack_depth = wurst_stack_depth - 1
		set city_u = null
		return
	endif
	set po = dispatch_City_City_City_getLastPublicOrder(City_cities[city_id], "when calling getLastPublicOrder in Revolts, line 21")
	set pop = dispatch_City_City_City_getPopulation(City_cities[city_id], "when calling getPopulation in Revolts, line 22")
	set city_u = dispatch_City_City_City_getCityUnit(City_cities[city_id], "when calling getCityUnit in Revolts, line 23")
	if  not player_isIngame(unit_getOwner(city_u)) then
		set wurst_stack_depth = wurst_stack_depth - 1
		set city_u = null
		return
	endif
	if po < Revolts_kPOtoRevolt1 then
		set Revolts_last_time_city_revolted[city_id] = getElapsedTime()
		call dispatch_City_City_City_addModifier(City_cities[city_id], 1, "when calling addModifier in Revolts, line 28")
		call attentionToPlayer(Strings_ksRevolt + dispatch_City_City_City_getCityNameColored(City_cities[city_id], "when calling getCityNameColored in Revolts, line 29") + "!", unit_getOwner(city_u), "when calling attentionToPlayer in Revolts, line 29")
		if po >= Revolts_kPOtoRevolt2 then
			set iterator = LinkedList_iterator(Units_uRebels[0], "when calling iterator in Revolts, line 32")
			loop
				exitwhen  not LLIterator_hasNext(iterator)
				set u_5 = LLIterator_next(iterator)
				call CreateUnit(Player_players[PLAYER_NEUTRAL_AGGRESSIVE], u_5, unit_getX(city_u), unit_getY(city_u), 0.)
				if getChance(pop * 1. / Revolts_k100ChanceOfDoubleRevoltComesWithNPop) then
					call CreateUnit(Player_players[PLAYER_NEUTRAL_AGGRESSIVE], u_5, unit_getX(city_u), unit_getY(city_u), 0.)
				endif
			endloop
			call LLIterator_close(iterator, "when calling close in Revolts, line 32")
		elseif po >= Revolts_kPOtoRevolt3 then
			set iterator_2 = LinkedList_iterator(Units_uRebels[1], "when calling iterator in Revolts, line 38")
			loop
				exitwhen  not LLIterator_hasNext(iterator_2)
				set u_6 = LLIterator_next(iterator_2)
				call CreateUnit(Player_players[PLAYER_NEUTRAL_AGGRESSIVE], u_6, unit_getX(city_u), unit_getY(city_u), 0.)
				if getChance(pop * 1. / Revolts_k100ChanceOfDoubleRevoltComesWithNPop) then
					call CreateUnit(Player_players[PLAYER_NEUTRAL_AGGRESSIVE], u_6, unit_getX(city_u), unit_getY(city_u), 0.)
				endif
			endloop
			call LLIterator_close(iterator_2, "when calling close in Revolts, line 38")
		else
			set iterator_3 = LinkedList_iterator(Units_uRebels[2], "when calling iterator in Revolts, line 44")
			loop
				exitwhen  not LLIterator_hasNext(iterator_3)
				set u_7 = LLIterator_next(iterator_3)
				call CreateUnit(Player_players[PLAYER_NEUTRAL_AGGRESSIVE], u_7, unit_getX(city_u), unit_getY(city_u), 0.)
				if getChance(pop * 1. / Revolts_k100ChanceOfDoubleRevoltComesWithNPop) then
					call CreateUnit(Player_players[PLAYER_NEUTRAL_AGGRESSIVE], u_7, unit_getX(city_u), unit_getY(city_u), 0.)
				endif
			endloop
			call LLIterator_close(iterator_3, "when calling close in Revolts, line 44")
		endif
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set city_u = null
endfunction

function dealloc_ForGroupCallback takes integer obj, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if ForGroupCallback_typeId[obj] == 0 then
		call error("Double free: object of type ForGroupCallback", "when calling error in ClosureForGroups, line 3")
	else
		set ForGroupCallback_nextFree[ForGroupCallback_firstFree] = obj
		set ForGroupCallback_firstFree = ForGroupCallback_firstFree + 1
		set ForGroupCallback_typeId[obj] = 0
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function destroyForGroupCallback takes integer this_7, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call dealloc_ForGroupCallback(this_7, "when calling dealloc_ForGroupCallback in ClosureForGroups, line 3")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function dispatch_ForGroupCallback_destroyForGroupCallback takes integer this_7, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if ForGroupCallback_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling ForGroupCallback.ForGroupCallback", "when calling error in ClosureForGroups, line 3")
		else
			call error("Called ForGroupCallback.ForGroupCallback on invalid object.", "when calling error in ClosureForGroups, line 3")
		endif
	endif
	call destroyForGroupCallback(this_7, "when calling destroyForGroupCallback in ClosureForGroups, line 3")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function group_clear takes group this_7 returns nothing
	call GroupClear(this_7)
endfunction

function popCallback takes string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call group_clear(ClosureForGroups_DUMMY_GROUP)
	set ClosureForGroups_tempCallbacksCount = ClosureForGroups_tempCallbacksCount - 1
	call dispatch_ForGroupCallback_destroyForGroupCallback(ClosureForGroups_tempCallbacks[ClosureForGroups_tempCallbacksCount], "when calling dispatch_ForGroupCallback_destroyForGroupCallback in ClosureForGroups, line 30")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function pushCallback takes integer c returns nothing
	set ClosureForGroups_tempCallbacks[ClosureForGroups_tempCallbacksCount] = c
	set ClosureForGroups_tempCallbacksCount = ClosureForGroups_tempCallbacksCount + 1
	set ClosureForGroups_iterCount = 0
	set ClosureForGroups_maxCount = Integer_INT_MAX
endfunction

function forUnitsInRange takes real pos_x_2, real pos_y_2, real radius, integer c, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call pushCallback(c)
	call GroupEnumUnitsInRange(ClosureForGroups_DUMMY_GROUP, pos_x_2, pos_y_2, radius, ClosureForGroups_filter)
	call popCallback("when calling popCallback in ClosureForGroups, line 98")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function City_countPublicOrder takes integer this_7, string stackPos returns real
	local integer clVar
	local integer clVar_2
	local real temp_x
	local real temp_y
	local real temp
	local real temp_x_2
	local real temp_y_2
	local real temp_2
	local real tuple_temp
	local real tuple_temp_2
	local real tuple_temp_3
	local real tuple_temp_4
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set City_public_order_last[this_7] = 100.0 - City_population_growth_rate[this_7] * 1000. - SquareRoot(int_toReal(City_population[this_7])) / 17. + City_public_order_add[this_7] - City_population[this_7] * 1. / 1000 * City_kCityTaxLevelPODecreasePerThousandPop[City_tax_level[this_7]]
	set tuple_temp = City_city_pos_x[this_7]
	set tuple_temp_2 = City_city_pos_y[this_7]
	set temp_x = tuple_temp
	set temp_y = tuple_temp_2
	set temp = City_kCityRange / 3.
	set clVar = alloc_City_City_ForGroupCallback_line313("when calling alloc_City_City_ForGroupCallback_line313 in City, line 313")
	set this[clVar] = this_7
	call forUnitsInRange(temp_x, temp_y, temp, clVar, "when calling forUnitsInRange in City, line 313")
	set tuple_temp_3 = City_city_pos_x[this_7]
	set tuple_temp_4 = City_city_pos_y[this_7]
	set temp_x_2 = tuple_temp_3
	set temp_y_2 = tuple_temp_4
	set temp_2 = City_kCityRange
	set clVar_2 = alloc_City_City_ForGroupCallback_line317("when calling alloc_City_City_ForGroupCallback_line317 in City, line 317")
	set this_2[clVar_2] = this_7
	call forUnitsInRange(temp_x_2, temp_y_2, temp_2, clVar_2, "when calling forUnitsInRange in City, line 317")
	if City_public_order_last[this_7] < 0.0 then
		set City_public_order_last[this_7] = 0.0
	endif
	if City_public_order_last[this_7] > 100.0 then
		set City_public_order_last[this_7] = 100.0
	endif
	if City_public_order_last[this_7] < 50.0 and getChance(0.01) then
		call checkForRevolt(City_city_id[this_7], "when calling checkForRevolt in City, line 328")
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return City_public_order_last[this_7]
endfunction

function dispatch_City_City_City_countPublicOrder takes integer this_7, string stackPos returns real
	local real City_City_countPublicOrder_result
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if City_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling City.countPublicOrder", "when calling error in City, line 308")
		else
			call error("Called City.countPublicOrder on invalid object.", "when calling error in City, line 308")
		endif
	endif
	set City_City_countPublicOrder_result = City_countPublicOrder(this_7, "when calling countPublicOrder in City, line 308")
	set wurst_stack_depth = wurst_stack_depth - 1
	return City_City_countPublicOrder_result
endfunction

function max_2 takes real numbers_0, real numbers_1 returns real
	local real maxNumber = Real_REAL_MIN
	local real cond_result
	if numbers_0 > maxNumber then
		set cond_result = numbers_0
	else
		set cond_result = maxNumber
	endif
	set maxNumber = cond_result
	if numbers_1 > maxNumber then
		set cond_result = numbers_1
	else
		set cond_result = maxNumber
	endif
	set maxNumber = cond_result
	return maxNumber
endfunction

function City_countTax takes integer this_7, string stackPos returns integer
	local integer tax
	local integer pop_tax
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set tax = 0
	set tax = tax + dispatch_HashMap_HashMap_HashMap_get(CityBaseTaxes_kCityBaseTaxes, unit_getTypeId(City_city_unit[this_7]), "when calling get in City, line 283")
	set pop_tax = real_toInt(SquareRoot(int_toReal(City_population[this_7]) * max_2(0.75, dispatch_City_City_City_countPublicOrder(this_7, "when calling countPublicOrder in City, line 295") / 100.)) / 6.)
	set tax = tax + pop_tax
	set tax = real_toInt(tax * City_tax_multiplier[this_7] * City_kCityTaxLevelMultipliers[City_tax_level[this_7]])
	set wurst_stack_depth = wurst_stack_depth - 1
	return tax
endfunction

function dispatch_City_City_City_countTax takes integer this_7, string stackPos returns integer
	local integer City_City_countTax_result
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if City_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling City.countTax", "when calling error in City, line 279")
		else
			call error("Called City.countTax on invalid object.", "when calling error in City, line 279")
		endif
	endif
	set City_City_countTax_result = City_countTax(this_7, "when calling countTax in City, line 279")
	set wurst_stack_depth = wurst_stack_depth - 1
	return City_City_countTax_result
endfunction

function alloc_LinkedList_LinkedList_FoldClosure_line349 takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if FoldClosure_firstFree == 0 then
		if FoldClosure_maxIndex < 32768 then
			set FoldClosure_maxIndex = FoldClosure_maxIndex + 1
			set this_7 = FoldClosure_maxIndex
			set FoldClosure_typeId[this_7] = 686
		else
			call error("Out of memory: Could not create LinkedList_LinkedList_FoldClosure_line349.", "when calling error in LinkedList, line 349")
			set this_7 = 0
		endif
	else
		set FoldClosure_firstFree = FoldClosure_firstFree - 1
		set this_7 = FoldClosure_nextFree[FoldClosure_firstFree]
		set FoldClosure_typeId[this_7] = 686
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function LinkedList_LinkedList_run_line349 takes integer this_7, integer i_2, string q returns string
	return q + int_toString(i_2) + ","
endfunction

function hashtable_loadString takes hashtable this_7, integer parentKey, integer childKey returns string
	return LoadStr(this_7, parentKey, childKey)
endfunction

function Table_loadString takes integer this_7, integer parentKey returns string
	return hashtable_loadString(Table_ht, this_7, parentKey)
endfunction

function dispatch_Table_Table_Table_loadString takes integer this_7, integer parentKey, string stackPos returns string
	local string Table_Table_loadString_result
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if Table_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling Table.loadString", "when calling error in Table, line 57")
		else
			call error("Called Table.loadString on invalid object.", "when calling error in Table, line 57")
		endif
	endif
	set Table_Table_loadString_result = Table_loadString(this_7, parentKey)
	set wurst_stack_depth = wurst_stack_depth - 1
	return Table_Table_loadString_result
endfunction

function stringFromIndex takes integer index, string stackPos returns string
	local string str
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set str = dispatch_Table_Table_Table_loadString(TypeCasting_typecastdata, index, "when calling loadString in TypeCasting, line 35")
	set wurst_stack_depth = wurst_stack_depth - 1
	return str
endfunction

function hashtable_hasString takes hashtable this_7, integer parentKey, integer childKey returns boolean
	return HaveSavedString(this_7, parentKey, childKey)
endfunction

function Table_hasString takes integer this_7, integer parentKey returns boolean
	return hashtable_hasString(Table_ht, this_7, parentKey)
endfunction

function dispatch_Table_Table_Table_hasString takes integer this_7, integer parentKey, string stackPos returns boolean
	local boolean Table_Table_hasString_result
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if Table_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling Table.hasString", "when calling error in Table, line 18")
		else
			call error("Called Table.hasString on invalid object.", "when calling error in Table, line 18")
		endif
	endif
	set Table_Table_hasString_result = Table_hasString(this_7, parentKey)
	set wurst_stack_depth = wurst_stack_depth - 1
	return Table_Table_hasString_result
endfunction

function hashtable_saveString takes hashtable this_7, integer parentKey, integer childKey, string value returns nothing
	call SaveStr(this_7, parentKey, childKey, value)
endfunction

function Table_saveString takes integer this_7, integer parentKey, string value returns nothing
	call hashtable_saveString(Table_ht, this_7, parentKey, value)
endfunction

function dispatch_Table_Table_Table_saveString takes integer this_7, integer parentKey, string value, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if Table_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling Table.saveString", "when calling error in Table, line 60")
		else
			call error("Called Table.saveString on invalid object.", "when calling error in Table, line 60")
		endif
	endif
	call Table_saveString(this_7, parentKey, value)
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function stringToIndex takes string s, string stackPos returns integer
	local integer hash
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set hash = string_getHash(s)
	loop
		exitwhen  not true
		if dispatch_Table_Table_Table_hasString(TypeCasting_typecastdata, hash, "when calling hasString in TypeCasting, line 25") then
			if dispatch_Table_Table_Table_loadString(TypeCasting_typecastdata, hash, "when calling loadString in TypeCasting, line 26") == s then
				exitwhen true
			endif
		else
			call dispatch_Table_Table_Table_saveString(TypeCasting_typecastdata, hash, s, "when calling saveString in TypeCasting, line 29")
			exitwhen true
		endif
		set hash = hash + 1
	endloop
	set wurst_stack_depth = wurst_stack_depth - 1
	return hash
endfunction

function run_wrapper takes integer this_7, integer t, integer q, string stackPos returns integer
	local integer stackTrace_tempReturn
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackTrace_tempReturn = stringToIndex(LinkedList_LinkedList_run_line349(this_7, t, stringFromIndex(q, "when calling stringFromIndex in LinkedList, line 349")), "when calling stringToIndex in LinkedList, line 349")
	set wurst_stack_depth = wurst_stack_depth - 1
	return stackTrace_tempReturn
endfunction

function dispatch_FoldClosure_LinkedList_FoldClosure_run takes integer this_7, integer t, integer q, string stackPos returns integer
	local integer LinkedList_FoldClosure_run_result
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if FoldClosure_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling FoldClosure.run", "when calling error in LinkedList, line 499")
		else
			call error("Called FoldClosure.run on invalid object.", "when calling error in LinkedList, line 499")
		endif
	endif
	set LinkedList_FoldClosure_run_result = run_wrapper(this_7, t, q, "when calling run_wrapper in LinkedList, line 499")
	set wurst_stack_depth = wurst_stack_depth - 1
	return LinkedList_FoldClosure_run_result
endfunction

function dealloc_FoldClosure takes integer obj, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if FoldClosure_typeId[obj] == 0 then
		call error("Double free: object of type FoldClosure", "when calling error in LinkedList, line 498")
	else
		set FoldClosure_nextFree[FoldClosure_firstFree] = obj
		set FoldClosure_firstFree = FoldClosure_firstFree + 1
		set FoldClosure_typeId[obj] = 0
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function destroyFoldClosure takes integer this_7, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call dealloc_FoldClosure(this_7, "when calling dealloc_FoldClosure in LinkedList, line 498")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function dispatch_FoldClosure_destroyFoldClosure takes integer this_7, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if FoldClosure_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling FoldClosure.FoldClosure", "when calling error in LinkedList, line 498")
		else
			call error("Called FoldClosure.FoldClosure on invalid object.", "when calling error in LinkedList, line 498")
		endif
	endif
	call destroyFoldClosure(this_7, "when calling destroyFoldClosure in LinkedList, line 498")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function LinkedList_foldl takes integer this_7, integer startValue, integer predicate, string stackPos returns integer
	local integer result_2
	local integer r
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set result_2 = startValue
	set r = LLEntry_next[LinkedList_dummy[this_7]]
	loop
		exitwhen  not (r != LinkedList_dummy[this_7])
		set result_2 = dispatch_FoldClosure_LinkedList_FoldClosure_run(predicate, LLEntry_elem[r], result_2, "when calling run in LinkedList, line 281")
		set r = LLEntry_next[r]
	endloop
	call dispatch_FoldClosure_destroyFoldClosure(predicate, "when calling dispatch_FoldClosure_destroyFoldClosure in LinkedList, line 283")
	set wurst_stack_depth = wurst_stack_depth - 1
	return result_2
endfunction

function dispatch_LinkedList_LinkedList_LinkedList_foldl takes integer this_7, integer startValue, integer predicate, string stackPos returns integer
	local integer LinkedList_LinkedList_foldl_result
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if LinkedList_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling LinkedList.foldl", "when calling error in LinkedList, line 277")
		else
			call error("Called LinkedList.foldl on invalid object.", "when calling error in LinkedList, line 277")
		endif
	endif
	set LinkedList_LinkedList_foldl_result = LinkedList_foldl(this_7, startValue, predicate, "when calling foldl in LinkedList, line 277")
	set wurst_stack_depth = wurst_stack_depth - 1
	return LinkedList_LinkedList_foldl_result
endfunction

function string_length takes string this_7 returns integer
	return StringLength(this_7)
endfunction

function string_substring takes string this_7, integer start, integer stop returns string
	return SubString(this_7, start, stop)
endfunction

function LinkedList_toString takes integer this_7, string stackPos returns string
	local string fold
	local integer clVar
	local string stackTrace_tempReturn
	local integer temp
	local integer temp_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set temp = this_7
	set temp_2 = stringToIndex("[", "when calling stringToIndex in LinkedList, line 349")
	set clVar = alloc_LinkedList_LinkedList_FoldClosure_line349("when calling alloc_LinkedList_LinkedList_FoldClosure_line349 in LinkedList, line 349")
	set fold = stringFromIndex(dispatch_LinkedList_LinkedList_LinkedList_foldl(temp, temp_2, clVar, "when calling foldl in LinkedList, line 349"), "when calling stringFromIndex in LinkedList, line 349")
	set stackTrace_tempReturn = string_substring(fold, 0, string_length(fold) - 1) + "]"
	set wurst_stack_depth = wurst_stack_depth - 1
	return stackTrace_tempReturn
endfunction

function dispatch_LinkedList_LinkedList_LinkedList_toString takes integer this_7, string stackPos returns string
	local string LinkedList_LinkedList_toString_result
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if LinkedList_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling LinkedList.toString", "when calling error in LinkedList, line 348")
		else
			call error("Called LinkedList.toString on invalid object.", "when calling error in LinkedList, line 348")
		endif
	endif
	set LinkedList_LinkedList_toString_result = LinkedList_toString(this_7, "when calling toString in LinkedList, line 348")
	set wurst_stack_depth = wurst_stack_depth - 1
	return LinkedList_LinkedList_toString_result
endfunction

function City_getModifiers takes integer this_7, string stackPos returns integer
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call dbg(dispatch_LinkedList_LinkedList_LinkedList_toString(City_modifiers[this_7], "when calling toString in City, line 392"))
	set wurst_stack_depth = wurst_stack_depth - 1
	return City_modifiers[this_7]
endfunction

function dispatch_City_City_City_getModifiers takes integer this_7, string stackPos returns integer
	local integer City_City_getModifiers_result
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if City_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling City.getModifiers", "when calling error in City, line 391")
		else
			call error("Called City.getModifiers on invalid object.", "when calling error in City, line 391")
		endif
	endif
	set City_City_getModifiers_result = City_getModifiers(this_7, "when calling getModifiers in City, line 391")
	set wurst_stack_depth = wurst_stack_depth - 1
	return City_City_getModifiers_result
endfunction

function City_getPopulationGrowthStr takes integer this_7 returns string
	return getStringColoredBasedOnSign(City_last_pop_growth[this_7])
endfunction

function dispatch_City_City_City_getPopulationGrowthStr takes integer this_7, string stackPos returns string
	local string City_City_getPopulationGrowthStr_result
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if City_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling City.getPopulationGrowthStr", "when calling error in City, line 356")
		else
			call error("Called City.getPopulationGrowthStr on invalid object.", "when calling error in City, line 356")
		endif
	endif
	set City_City_getPopulationGrowthStr_result = City_getPopulationGrowthStr(this_7)
	set wurst_stack_depth = wurst_stack_depth - 1
	return City_City_getPopulationGrowthStr_result
endfunction

function City_getPopulationStr takes integer this_7 returns string
	local string str
	if City_population[this_7] < 100000 then
		set str = int_toString(real_toInt(City_population[this_7] * 1. / 1000)) + "," + int_toString(real_toInt(ModuloReal(City_population[this_7], 1000) / 100.)) + "k"
	else
		set str = int_toString(real_toInt(City_population[this_7] * 1. / 1000)) + "k"
	endif
	return str
endfunction

function dispatch_City_City_City_getPopulationStr takes integer this_7, string stackPos returns string
	local string City_City_getPopulationStr_result
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if City_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling City.getPopulationStr", "when calling error in City, line 359")
		else
			call error("Called City.getPopulationStr on invalid object.", "when calling error in City, line 359")
		endif
	endif
	set City_City_getPopulationStr_result = City_getPopulationStr(this_7)
	set wurst_stack_depth = wurst_stack_depth - 1
	return City_City_getPopulationStr_result
endfunction

function string_toLowerCase takes string this_7 returns string
	return StringCase(this_7, false)
endfunction

function City_getPublicOrderStr takes integer this_7, string stackPos returns string
	local real po
	local integer clr_red
	local integer clr_green
	local integer clr_blue
	local string stackTrace_tempReturn
	local integer tuple_temp
	local integer tuple_temp_2
	local integer tuple_temp_3
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set po = dispatch_City_City_City_countPublicOrder(this_7, "when calling countPublicOrder in City, line 339")
	set tuple_temp = real_toInt(255. - po / 100. * 255.)
	set tuple_temp_2 = real_toInt(po / 100. * 255.)
	set tuple_temp_3 = 0
	set clr_red = tuple_temp
	set clr_green = tuple_temp_2
	set clr_blue = tuple_temp_3
	set stackTrace_tempReturn = string_toLowerCase(color_toColorString(clr_red, clr_green, clr_blue)) + int_toString(real_toInt(po)) + "," + int_toString(real_toInt(ModuloReal(real_toInt(po * 10.), 10))) + "%|r"
	set wurst_stack_depth = wurst_stack_depth - 1
	return stackTrace_tempReturn
endfunction

function dispatch_City_City_City_getPublicOrderStr takes integer this_7, string stackPos returns string
	local string City_City_getPublicOrderStr_result
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if City_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling City.getPublicOrderStr", "when calling error in City, line 338")
		else
			call error("Called City.getPublicOrderStr on invalid object.", "when calling error in City, line 338")
		endif
	endif
	set City_City_getPublicOrderStr_result = City_getPublicOrderStr(this_7, "when calling getPublicOrderStr in City, line 338")
	set wurst_stack_depth = wurst_stack_depth - 1
	return City_City_getPublicOrderStr_result
endfunction

function City_getTaxLevelString takes integer this_7 returns string
	return Strings_ksTaxLevels[City_tax_level[this_7]]
endfunction

function dispatch_City_City_City_getTaxLevelString takes integer this_7, string stackPos returns string
	local string City_City_getTaxLevelString_result
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if City_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling City.getTaxLevelString", "when calling error in City, line 176")
		else
			call error("Called City.getTaxLevelString on invalid object.", "when calling error in City, line 176")
		endif
	endif
	set City_City_getTaxLevelString_result = City_getTaxLevelString(this_7)
	set wurst_stack_depth = wurst_stack_depth - 1
	return City_City_getTaxLevelString_result
endfunction

function multiboard_setItemCentered takes multiboard this_7, integer x, integer y, string wval, real width returns nothing
	local multiboarditem mbi = multiboard_getItem(this_7, y, x)
	local string centered = wval
	local integer chars = real_toInt(width / MutliboardTools_kWidthPerChar)
	local integer spaces_num = real_toInt((chars - string_length(wval)) * 1. / 2)
	local string spaces_chars = ""
	local integer i_2 = 0
	local integer temp = spaces_num - 1
	loop
		exitwhen i_2 > temp
		set spaces_chars = spaces_chars + " "
		set i_2 = i_2 + 1
	endloop
	if ModuloReal(spaces_num, 2) == 1. then
		set centered = " " + centered
	endif
	set centered = spaces_chars + centered
	call MultiboardSetItemValue(mbi, centered)
	set mbi = null
endfunction

function PlayerStats_refreshMultiboardCity takes integer this_7, string stackPos returns nothing
	local integer pl_id
	local integer tax
	local string public_order_str
	local string population_str
	local string population_growth_str
	local string tax_level
	local multiboard receiver
	local multiboard receiver_2
	local multiboard receiver_3
	local multiboard receiver_4
	local multiboard receiver_5
	local integer i_2
	local integer iterator
	local integer m
	local multiboard receiver_6
	local multiboard receiver_7
	local integer j
	local integer temp
	local multiboard receiver_8
	local multiboard receiver_9
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if PlayerStats_selected_city_id[this_7] == -1 then
		set wurst_stack_depth = wurst_stack_depth - 1
		set receiver = null
		set receiver_2 = null
		set receiver_3 = null
		set receiver_4 = null
		set receiver_5 = null
		set receiver_6 = null
		set receiver_7 = null
		set receiver_8 = null
		set receiver_9 = null
		return
	endif
	set pl_id = player_getId(PlayerStats_pl[this_7])
	call multiboard_setItemCentered(Multiboards_multiboards[pl_id], Multiboards_kMBCityName[0], Multiboards_kMBCityName[1], dispatch_City_City_City_getCityNameColored(City_cities[PlayerStats_selected_city_id[this_7]], "when calling getCityNameColored in PlayerStats, line 76"), Multiboards_kMBCityNameWidth)
	set tax = dispatch_City_City_City_countTax(City_cities[PlayerStats_selected_city_id[this_7]], "when calling countTax in PlayerStats, line 85")
	set tax_level = dispatch_City_City_City_getTaxLevelString(City_cities[PlayerStats_selected_city_id[this_7]], "when calling getTaxLevelString in PlayerStats, line 86")
	set public_order_str = dispatch_City_City_City_getPublicOrderStr(City_cities[PlayerStats_selected_city_id[this_7]], "when calling getPublicOrderStr in PlayerStats, line 87")
	set population_str = dispatch_City_City_City_getPopulationStr(City_cities[PlayerStats_selected_city_id[this_7]], "when calling getPopulationStr in PlayerStats, line 88")
	set population_growth_str = dispatch_City_City_City_getPopulationGrowthStr(City_cities[PlayerStats_selected_city_id[this_7]], "when calling getPopulationGrowthStr in PlayerStats, line 89")
	set receiver = Multiboards_multiboards[pl_id]
	call multiboard_setItem(receiver, Multiboards_kMBCityTax[0], Multiboards_kMBCityTax[1], int_toString(tax))
	set receiver_2 = receiver
	call multiboard_setItem(receiver_2, Multiboards_kMBCityTax[0] + 1, Multiboards_kMBCityTax[1], tax_level)
	set receiver_3 = receiver_2
	call multiboard_setItem(receiver_3, Multiboards_kMBCityPublicOrder[0], Multiboards_kMBCityPublicOrder[1], public_order_str)
	set receiver_4 = receiver_3
	call multiboard_setItem(receiver_4, Multiboards_kMBCityPop[0], Multiboards_kMBCityPop[1], population_str)
	set receiver_5 = receiver_4
	call multiboard_setItem(receiver_5, Multiboards_kMBCityPopGrowth[0], Multiboards_kMBCityPopGrowth[1], population_growth_str)
	set i_2 = 0
	set iterator = LinkedList_iterator(dispatch_City_City_City_getModifiers(City_cities[PlayerStats_selected_city_id[this_7]], "when calling getModifiers in PlayerStats, line 99"), "when calling iterator in PlayerStats, line 99")
	loop
		exitwhen  not LLIterator_hasNext(iterator)
		set m = LLIterator_next(iterator)
		set receiver_6 = Multiboards_multiboards[pl_id]
		call multiboard_setItem(receiver_6, Multiboards_kMBCityModifiersCol, Multiboards_kMBCityModifiersStart + i_2, CityModifierClass_name[dispatch_HashMap_HashMap_HashMap_get(CityModifiers_cityModifiers, m, "when calling get in PlayerStats, line 101")])
		set receiver_7 = receiver_6
		call multiboard_setItem(receiver_7, Multiboards_kMBCityModifiersDescCol, Multiboards_kMBCityModifiersStart + i_2, "(" + CityModifierClass_desc[dispatch_HashMap_HashMap_HashMap_get(CityModifiers_cityModifiers, m, "when calling get in PlayerStats, line 102")] + ")")
		set i_2 = i_2 + 1
	endloop
	call LLIterator_close(iterator, "when calling close in PlayerStats, line 99")
	set j = i_2
	set temp = Multiboards_kMBCityModifiersEnd
	loop
		exitwhen j > temp
		set receiver_8 = Multiboards_multiboards[pl_id]
		call multiboard_setItem(receiver_8, Multiboards_kMBCityModifiersCol, Multiboards_kMBCityModifiersStart + j, " ")
		set receiver_9 = receiver_8
		call multiboard_setItem(receiver_9, Multiboards_kMBCityModifiersDescCol, Multiboards_kMBCityModifiersStart + j, " ")
		set j = j + 1
	endloop
	set wurst_stack_depth = wurst_stack_depth - 1
	set receiver = null
	set receiver_2 = null
	set receiver_3 = null
	set receiver_4 = null
	set receiver_5 = null
	set receiver_6 = null
	set receiver_7 = null
	set receiver_8 = null
	set receiver_9 = null
endfunction

function dispatch_PlayerStats_PlayerStats_PlayerStats_refreshMultiboardCity takes integer this_7, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if PlayerStats_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling PlayerStats.refreshMultiboardCity", "when calling error in PlayerStats, line 71")
		else
			call error("Called PlayerStats.refreshMultiboardCity on invalid object.", "when calling error in PlayerStats, line 71")
		endif
	endif
	call PlayerStats_refreshMultiboardCity(this_7, "when calling refreshMultiboardCity in PlayerStats, line 71")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function MultiboardCityUpdate_call_line25 takes integer this_7, integer cbCITY, string stackPos returns nothing
	local integer i_2
	local integer temp
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set i_2 = 0
	set temp = Main_PLAYER_SLOTS - 1
	loop
		exitwhen i_2 > temp
		if dispatch_PlayerStats_PlayerStats_PlayerStats_isInGame(PlayerStats_player_stats[i_2], "when calling isInGame in MultiboardCityUpdate, line 27") then
			call dispatch_PlayerStats_PlayerStats_PlayerStats_refreshMultiboardCity(PlayerStats_player_stats[i_2], "when calling refreshMultiboardCity in MultiboardCityUpdate, line 28")
		endif
		set i_2 = i_2 + 1
	endloop
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function dispatch_CallbackPeriodic_ClosureTimers_CallbackPeriodic_call takes integer this_7, integer cb, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if CallbackPeriodic_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling CallbackPeriodic.call", "when calling error in ClosureTimers, line 130")
		else
			call error("Called CallbackPeriodic.call on invalid object.", "when calling error in ClosureTimers, line 130")
		endif
	endif
	if CallbackPeriodic_typeId[this_7] <= 634 then
		if CallbackPeriodic_typeId[this_7] <= 632 then
			if CallbackPeriodic_typeId[this_7] <= 631 then
				call City_City_call_line138(this_7, cb, "when calling City_City_call_line138 in ClosureTimers, line 130")
			else
				call City_City_call_line154(this_7, cb, "when calling City_City_call_line154 in ClosureTimers, line 130")
			endif
		elseif CallbackPeriodic_typeId[this_7] <= 633 then
			call Credits_call_line5(this_7, cb)
		else
			call DateTime_call_line31(this_7, cb)
		endif
	elseif CallbackPeriodic_typeId[this_7] <= 636 then
		if CallbackPeriodic_typeId[this_7] <= 635 then
			call Economy_call_line47(this_7, cb, "when calling Economy_call_line47 in ClosureTimers, line 130")
		else
			call Economy_call_line54(this_7, cb, "when calling Economy_call_line54 in ClosureTimers, line 130")
		endif
	else
		call MultiboardCityUpdate_call_line25(this_7, cb, "when calling MultiboardCityUpdate_call_line25 in ClosureTimers, line 130")
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function timer_getData takes timer this_7, string stackPos returns integer
	local integer stackTrace_tempReturn
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackTrace_tempReturn = dispatch_Table_Table_Table_loadInt(TimerUtils_timerData, timer_getHandleId(this_7), "when calling loadInt in TimerUtils, line 21")
	set wurst_stack_depth = wurst_stack_depth - 1
	return stackTrace_tempReturn
endfunction

function CallbackPeriodic_staticCallback takes string stackPos returns nothing
	local integer cb
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set cb = timer_getData(GetExpiredTimer(), "when calling getData in ClosureTimers, line 138")
	call dispatch_CallbackPeriodic_ClosureTimers_CallbackPeriodic_call(cb, cb, "when calling call in ClosureTimers, line 139")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function bridge_CallbackPeriodic_staticCallback takes nothing returns nothing
	set wurst_stack_depth = 0
	call CallbackPeriodic_staticCallback("ClosureTimers, line 135")
endfunction

function City_getCityModifierOnRemove takes integer this_7, integer cm_2, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if CityModifierClass_isPOIncreaseConstant[dispatch_HashMap_HashMap_HashMap_get(CityModifiers_cityModifiers, cm_2, "when calling get in City, line 426")] then
		set City_public_order_add[this_7] = City_public_order_add[this_7] - CityModifierClass_POIncrease[dispatch_HashMap_HashMap_HashMap_get(CityModifiers_cityModifiers, cm_2, "when calling get in City, line 427")]
	endif
	set City_tax_multiplier[this_7] = City_tax_multiplier[this_7] - CityModifierClass_taxIncrease[dispatch_HashMap_HashMap_HashMap_get(CityModifiers_cityModifiers, cm_2, "when calling get in City, line 428")]
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function dispatch_City_City_City_getCityModifierOnRemove takes integer this_7, integer cm_2, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if City_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling City.getCityModifierOnRemove", "when calling error in City, line 425")
		else
			call error("Called City.getCityModifierOnRemove on invalid object.", "when calling error in City, line 425")
		endif
	endif
	call City_getCityModifierOnRemove(this_7, cm_2, "when calling getCityModifierOnRemove in City, line 425")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function LLEntry_onDestroy takes integer this_7 returns nothing
endfunction

function dealloc_LLEntry takes integer obj, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if LLEntry_typeId[obj] == 0 then
		call error("Double free: object of type LLEntry", "when calling error in LinkedList, line 396")
	else
		set LLEntry_nextFree[LLEntry_firstFree] = obj
		set LLEntry_firstFree = LLEntry_firstFree + 1
		set LLEntry_typeId[obj] = 0
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function destroyLLEntry takes integer this_7, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call LLEntry_onDestroy(this_7)
	call dealloc_LLEntry(this_7, "when calling dealloc_LLEntry in LinkedList, line 396")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function dispatch_LLEntry_destroyLLEntry takes integer this_7, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if LLEntry_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling LLEntry.LLEntry", "when calling error in LinkedList, line 396")
		else
			call error("Called LLEntry.LLEntry on invalid object.", "when calling error in LinkedList, line 396")
		endif
	endif
	call destroyLLEntry(this_7, "when calling destroyLLEntry in LinkedList, line 396")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function LinkedList_removeEntry takes integer this_7, integer entry, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set LLEntry_next[LLEntry_prev[entry]] = LLEntry_next[entry]
	set LLEntry_prev[LLEntry_next[entry]] = LLEntry_prev[entry]
	call dispatch_LLEntry_destroyLLEntry(entry, "when calling dispatch_LLEntry_destroyLLEntry in LinkedList, line 376")
	set LinkedList_size[this_7] = LinkedList_size[this_7] - 1
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function dispatch_LinkedList_LinkedList_LinkedList_removeEntry takes integer this_7, integer entry, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if LinkedList_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling LinkedList.removeEntry", "when calling error in LinkedList, line 373")
		else
			call error("Called LinkedList.removeEntry on invalid object.", "when calling error in LinkedList, line 373")
		endif
	endif
	call LinkedList_removeEntry(this_7, entry, "when calling removeEntry in LinkedList, line 373")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function LinkedList_remove takes integer this_7, integer elem, string stackPos returns nothing
	local integer entry
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set entry = LLEntry_next[LinkedList_dummy[this_7]]
	loop
		exitwhen  not (entry != LinkedList_dummy[this_7])
		if LLEntry_elem[entry] == elem then
			call dispatch_LinkedList_LinkedList_LinkedList_removeEntry(this_7, entry, "when calling removeEntry in LinkedList, line 126")
			set wurst_stack_depth = wurst_stack_depth - 1
			return
		endif
		set entry = LLEntry_next[entry]
	endloop
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function dispatch_LinkedList_LinkedList_LinkedList_remove takes integer this_7, integer elem, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if LinkedList_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling LinkedList.remove", "when calling error in LinkedList, line 122")
		else
			call error("Called LinkedList.remove on invalid object.", "when calling error in LinkedList, line 122")
		endif
	endif
	call LinkedList_remove(this_7, elem, "when calling remove in LinkedList, line 122")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function City_removeModifier takes integer this_7, integer cm_2, string stackPos returns boolean
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if  not dispatch_LinkedList_LinkedList_LinkedList_has(City_modifiers[this_7], cm_2, "when calling has in City, line 379") then
		set wurst_stack_depth = wurst_stack_depth - 1
		return false
	endif
	call dispatch_LinkedList_LinkedList_LinkedList_remove(City_modifiers[this_7], cm_2, "when calling remove in City, line 381")
	call dbg("Removed a modifier " + CityModifierClass_name[dispatch_HashMap_HashMap_HashMap_get(CityModifiers_cityModifiers, cm_2, "when calling get in City, line 382")])
	call dispatch_City_City_City_getCityModifierOnRemove(this_7, cm_2, "when calling getCityModifierOnRemove in City, line 383")
	set wurst_stack_depth = wurst_stack_depth - 1
	return true
endfunction

function dispatch_City_City_City_removeModifier takes integer this_7, integer cm_2, string stackPos returns boolean
	local boolean City_City_removeModifier_result
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if City_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling City.removeModifier", "when calling error in City, line 378")
		else
			call error("Called City.removeModifier on invalid object.", "when calling error in City, line 378")
		endif
	endif
	set City_City_removeModifier_result = City_removeModifier(this_7, cm_2, "when calling removeModifier in City, line 378")
	set wurst_stack_depth = wurst_stack_depth - 1
	return City_City_removeModifier_result
endfunction

function City_City_call_line374 takes integer this_7, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call dispatch_City_City_City_removeModifier(this_3[this_7], cm[this_7], "when calling removeModifier in City, line 375")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function handle_getHandleId takes handle this_7 returns integer
	return GetHandleId(this_7)
endfunction

function trigger_addAction takes trigger this_7, code actionFunc returns triggeraction
	return TriggerAddAction(this_7, actionFunc)
endfunction

function trigger_addCondition takes trigger this_7, boolexpr condition returns triggercondition
	return TriggerAddCondition(this_7, condition)
endfunction

function trigger_registerPlayerUnitEvent takes trigger this_7, player whichPlayer, playerunitevent whichPlayerUnitEvent, boolexpr filter returns event
	return TriggerRegisterPlayerUnitEvent(this_7, whichPlayer, whichPlayerUnitEvent, filter)
endfunction

function registerPlayerUnitEvent takes playerunitevent p, code filter, code condition, code action returns nothing
	local integer hid = handle_getHandleId(p)
	local integer k
	local filterfunc cond_result
	local trigger temp
	local player temp_2
	local playerunitevent temp_3
	if RegisterEvents_t[hid] == null then
		set RegisterEvents_t[hid] = CreateTrigger()
		set k = bj_MAX_PLAYER_SLOTS - 1
		loop
			exitwhen k < 0
			set temp = RegisterEvents_t[hid]
			set temp_2 = Player_players[k]
			set temp_3 = p
			if filter != null then
				set cond_result = Filter(filter)
			else
				set cond_result = null
			endif
			call trigger_registerPlayerUnitEvent(temp, temp_2, temp_3, cond_result)
			set k = k - 1
		endloop
	endif
	if condition != null then
		call trigger_addCondition(RegisterEvents_t[hid], Filter(condition))
	endif
	if action != null then
		call trigger_addAction(RegisterEvents_t[hid], action)
	endif
	set cond_result = null
	set temp = null
	set temp_2 = null
	set temp_3 = null
endfunction

function trigger_registerPlayerChatEvent takes trigger this_7, player whichPlayer, string chatMessageToDetect, boolean exactMatchOnly returns event
	return TriggerRegisterPlayerChatEvent(this_7, whichPlayer, chatMessageToDetect, exactMatchOnly)
endfunction

function trigger_registerPlayerEvent takes trigger this_7, player whichPlayer, playerevent whichPlayerEvent returns event
	return TriggerRegisterPlayerEvent(this_7, whichPlayer, whichPlayerEvent)
endfunction

function ClosureEvents_call_line290 takes integer this_7 returns nothing
	local integer i_2
	local integer temp
	local trigger receiver
	local trigger receiver_2
	local trigger receiver_3
	local trigger receiver_4
	local trigger receiver_5
	local trigger receiver_6
	local trigger receiver_7
	local trigger receiver_8
	local trigger receiver_9
	local trigger receiver_10
	call trigger_addAction(ClosureEvents_unitTrig, ref_function_bridge_ClosureEvents_closure_impl_2)
	call trigger_addAction(ClosureEvents_leaveTrig, ref_function_bridge_ClosureEvents_closure_impl_3)
	call trigger_addAction(ClosureEvents_keyTrig, ref_function_bridge_ClosureEvents_closure_impl_4)
	set i_2 = 0
	set temp = bj_MAX_PLAYERS - 1
	loop
		exitwhen i_2 > temp
		call trigger_registerPlayerEvent(ClosureEvents_leaveTrig, Player_players[i_2], EVENT_PLAYER_LEAVE)
		set receiver = ClosureEvents_keyTrig
		call trigger_registerPlayerEvent(receiver, Player_players[i_2], EVENT_PLAYER_ARROW_DOWN_DOWN)
		set receiver_2 = receiver
		call trigger_registerPlayerEvent(receiver_2, Player_players[i_2], EVENT_PLAYER_ARROW_DOWN_UP)
		set receiver_3 = receiver_2
		call trigger_registerPlayerEvent(receiver_3, Player_players[i_2], EVENT_PLAYER_ARROW_UP_DOWN)
		set receiver_4 = receiver_3
		call trigger_registerPlayerEvent(receiver_4, Player_players[i_2], EVENT_PLAYER_ARROW_UP_UP)
		set receiver_5 = receiver_4
		call trigger_registerPlayerEvent(receiver_5, Player_players[i_2], EVENT_PLAYER_ARROW_LEFT_DOWN)
		set receiver_6 = receiver_5
		call trigger_registerPlayerEvent(receiver_6, Player_players[i_2], EVENT_PLAYER_ARROW_LEFT_UP)
		set receiver_7 = receiver_6
		call trigger_registerPlayerEvent(receiver_7, Player_players[i_2], EVENT_PLAYER_ARROW_RIGHT_DOWN)
		set receiver_8 = receiver_7
		call trigger_registerPlayerEvent(receiver_8, Player_players[i_2], EVENT_PLAYER_ARROW_RIGHT_UP)
		set receiver_9 = receiver_8
		call trigger_registerPlayerEvent(receiver_9, Player_players[i_2], EVENT_PLAYER_END_CINEMATIC)
		set receiver_10 = receiver_9
		call trigger_registerPlayerChatEvent(receiver_10, Player_players[i_2], "", false)
		set i_2 = i_2 + 1
	endloop
	call registerPlayerUnitEvent(EVENT_PLAYER_UNIT_SPELL_EFFECT, null, ref_function_bridge_ClosureEvents_closure_impl_5, null)
	set receiver = null
	set receiver_2 = null
	set receiver_3 = null
	set receiver_4 = null
	set receiver_5 = null
	set receiver_6 = null
	set receiver_7 = null
	set receiver_8 = null
	set receiver_9 = null
	set receiver_10 = null
endfunction

function ClosureTimers_call_line182 takes integer this_7 returns nothing
	set ClosureTimers_x = ClosureTimers_x + 50
endfunction

function ClosureTimers_call_line185 takes integer this_7 returns nothing
	set ClosureTimers_x = ClosureTimers_x * 2
endfunction

function testFail takes string msg returns nothing
endfunction

function int_assertEquals takes integer this_7, integer expected returns nothing
	if this_7 != expected then
		call testFail("Expected <" + int_toString(expected) + ">, Actual <" + int_toString(this_7) + ">")
	endif
endfunction

function ClosureTimers_call_line188 takes integer this_7 returns nothing
	set ClosureTimers_x = ClosureTimers_x / 2
	call int_assertEquals(ClosureTimers_x, 250)
endfunction

function Economy_call_line34 takes integer this_7, string stackPos returns nothing
	local integer j
	local integer temp
	local integer pl_id
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set j = i[this_7] * number_of_cities_per_step[this_7]
	set temp = min_2(City_cityCount - 1, (i[this_7] + 1) * number_of_cities_per_step[this_7] - 1)
	loop
		exitwhen j > temp
		set pl_id = player_getId(unit_getOwner(dispatch_City_City_City_getCityUnit(City_cities[j], "when calling getCityUnit in Economy, line 36")))
		if player_isIngame(unit_getOwner(dispatch_City_City_City_getCityUnit(City_cities[j], "when calling getCityUnit in Economy, line 37"))) then
			set Economy_gold_change[pl_id] = Economy_gold_change[pl_id] + dispatch_City_City_City_countTax(City_cities[j], "when calling countTax in Economy, line 38")
		endif
		set j = j + 1
	endloop
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function LimitEncampments_call_line19 takes integer this_7 returns nothing
	call IssueImmediateOrderById(u[this_7], 851976)
endfunction

function LimitMercenaryCamps_call_line19 takes integer this_7 returns nothing
	call IssueImmediateOrderById(u_2[this_7], 851976)
endfunction

function unit_issuePointOrderById takes unit this_7, integer id, real target_x, real target_y returns boolean
	return IssuePointOrderById(this_7, id, target_x, target_y)
endfunction

function MassControl_call_line39 takes integer this_7 returns nothing
	call unit_issuePointOrderById(u_3[this_7], order[this_7], pos_x[this_7], pos_y[this_7])
endfunction

function multiboard_display takes multiboard this_7, player p, boolean show returns nothing
	if Player_localPlayer == p then
		call MultiboardDisplay(this_7, show)
	endif
endfunction

function multiboard_minimalize takes multiboard this_7, boolean minimalize returns nothing
	call MultiboardMinimize(this_7, minimalize)
endfunction

function multiboard_setItem_2 takes multiboard this_7, integer x, integer y, real width, string wval returns nothing
	local multiboarditem mbi = multiboard_getItem(this_7, y, x)
	call MultiboardSetItemWidth(mbi, width)
	call MultiboardSetItemValue(mbi, wval)
	set mbi = null
endfunction

function multiboard_setItemsStyle takes multiboard this_7, boolean showValues, boolean showIcons returns nothing
	call MultiboardSetItemsStyle(this_7, showValues, showIcons)
endfunction

function createCoEMultiboard takes string stackPos returns multiboard
	local multiboard mb
	local multiboard receiver
	local multiboard receiver_2
	local integer j
	local integer temp
	local integer j_2
	local integer temp_2
	local integer k
	local integer temp_3
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set mb = CreateMultiboardBJ(Multiboards_kMultiboardColC, Multiboards_kMultiboardRowC, "Income: 2:00")
	set receiver = mb
	call multiboard_minimalize(receiver, true)
	set receiver_2 = receiver
	call multiboard_setItemsStyle(receiver_2, true, false)
	set j = 0
	set temp = Main_PLAYER_SLOTS - 1
	loop
		exitwhen j > temp
		call multiboard_display(mb, Player_players[j], false)
		set j = j + 1
	endloop
	set j_2 = 0
	set temp_2 = Multiboards_kMultiboardRowC - 1
	loop
		exitwhen j_2 > temp_2
		set k = 0
		set temp_3 = Multiboards_kMultiboardColC - 1
		loop
			exitwhen k > temp_3
			call multiboard_setItem_2(mb, k, j_2, realFromIndex(dispatch_LinkedList_LinkedList_LinkedList_get(Multiboards_kMultiboardInitWidths[j_2], k, "when calling get in MultiboardCityUpdate, line 14")), stringFromIndex(dispatch_LinkedList_LinkedList_LinkedList_get(Multiboards_kMultiboardInitStrings[j_2], k, "when calling get in MultiboardCityUpdate, line 14"), "when calling stringFromIndex in MultiboardCityUpdate, line 14"))
			set k = k + 1
		endloop
		set j_2 = j_2 + 1
	endloop
	set wurst_stack_depth = wurst_stack_depth - 1
	set createCoEMultiboardtempReturn = mb
	set mb = null
	set receiver = null
	set receiver_2 = null
	return createCoEMultiboardtempReturn
endfunction

function MultiboardCityUpdate_call_line18 takes integer this_7, string stackPos returns nothing
	local integer i_2
	local integer temp
	local integer i_3
	local integer temp_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set i_2 = 0
	set temp = Main_PLAYER_SLOTS - 1
	loop
		exitwhen i_2 > temp
		if dispatch_PlayerStats_PlayerStats_PlayerStats_isInGame(PlayerStats_player_stats[i_2], "when calling isInGame in MultiboardCityUpdate, line 20") then
			set Multiboards_multiboards[i_2] = createCoEMultiboard("when calling createCoEMultiboard in MultiboardCityUpdate, line 21")
		endif
		set i_2 = i_2 + 1
	endloop
	set i_3 = 0
	set temp_2 = Main_PLAYER_SLOTS - 1
	loop
		exitwhen i_3 > temp_2
		call multiboard_display(Multiboards_multiboards[i_3], Player_players[i_3], true)
		set i_3 = i_3 + 1
	endloop
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function NoShipsNearRivers_call_line14 takes integer this_7 returns nothing
	call IssueImmediateOrderById(u_4[this_7], 851976)
endfunction

function group_destr takes group this_7 returns nothing
	call DestroyGroup(this_7)
endfunction

function group_enumUnitsInRect takes group this_7, rect rec, boolexpr filter returns nothing
	call GroupEnumUnitsInRect(this_7, rec, filter)
endfunction

function group_enumUnitsInRect_2 takes group this_7, rect rec returns nothing
	call group_enumUnitsInRect(this_7, rec, null)
endfunction

function registerPlayerUnitEvent_2 takes playerunitevent p, code c returns nothing
	call registerPlayerUnitEvent(p, null, c, null)
endfunction

function trigger_registerEnterRegion takes trigger this_7, region whichRegion, boolexpr filter returns event
	return TriggerRegisterEnterRegion(this_7, whichRegion, filter)
endfunction

function OnUnitEnterLeave_call_line62 takes integer this_7 returns nothing
	local trigger receiver = CreateTrigger()
	local group receiver_2
	local group receiver_3
	call trigger_registerEnterRegion(receiver, MapBounds_boundRegion, Filter(ref_function_OnUnitEnterLeave_closure_impl))
	call registerPlayerUnitEvent_2(EVENT_PLAYER_UNIT_ISSUED_ORDER, ref_function_OnUnitEnterLeave_closure_impl_2)
	call group_enumUnitsInRect_2(OnUnitEnterLeave_preplacedUnits, MapBounds_boundRect)
	call ForGroup(OnUnitEnterLeave_preplacedUnits, ref_function_OnUnitEnterLeave_closure_impl_3)
	set receiver_2 = OnUnitEnterLeave_preplacedUnits
	call group_clear(receiver_2)
	set receiver_3 = receiver_2
	call group_destr(receiver_3)
	set receiver = null
	set receiver_2 = null
	set receiver_3 = null
endfunction

function alloc_Preloader_ForGroupCallback_line45 takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if ForGroupCallback_firstFree == 0 then
		if ForGroupCallback_maxIndex < 32768 then
			set ForGroupCallback_maxIndex = ForGroupCallback_maxIndex + 1
			set this_7 = ForGroupCallback_maxIndex
			set ForGroupCallback_typeId[this_7] = 692
		else
			call error("Out of memory: Could not create Preloader_ForGroupCallback_line45.", "when calling error in Preloader, line 45")
			set this_7 = 0
		endif
	else
		set ForGroupCallback_firstFree = ForGroupCallback_firstFree - 1
		set this_7 = ForGroupCallback_nextFree[ForGroupCallback_firstFree]
		set ForGroupCallback_typeId[this_7] = 692
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function City_City_callback_line313 takes integer this_7, unit u_5, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if ( not dispatch_LinkedList_LinkedList_LinkedList_has(Units_uPlebs, unit_getTypeId(u_5), "when calling has in City, line 314")) and unit_getOwner(u_5) == Player_players[City_player_id[this[this_7]]] then
		set City_public_order_last[this[this_7]] = City_public_order_last[this[this_7]] + City_kCityUnitPOAdd
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function getPublicOrderAddByUnit takes integer id returns real
	local integer temp = id
	if temp == Units_uChurchWE then
		return 10.0
	elseif temp == Units_uChurchBZ then
		return 10.0
	elseif temp == Units_uChurchEE then
		return 10.0
	elseif temp == Units_uMosque then
		return 10.0
	elseif temp == Units_uInn then
		return 5.0
	elseif temp == Units_uInnEE then
		return 5.0
	elseif temp == Units_uUniversityWE then
		return 15.0
	elseif temp == Units_uUniversityEE then
		return 15.0
	elseif temp == Units_uUniversityBZ then
		return 15.0
	elseif temp == Units_uUniversityME then
		return 15.0
	else
		return 0.0
	endif
endfunction

function City_City_callback_line317 takes integer this_7, unit u_5 returns nothing
	if IsUnitType(u_5, UNIT_TYPE_STRUCTURE) and unit_getOwner(u_5) == Player_players[City_player_id[this_2[this_7]]] then
		set City_public_order_last[this_2[this_7]] = City_public_order_last[this_2[this_7]] + getPublicOrderAddByUnit(unit_getTypeId(u_5))
	endif
endfunction

function unitToIndex takes unit object returns integer
	return handle_getHandleId(object)
endfunction

function LinkedList_callback_line514 takes integer this_7, unit u_5, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(result[this_7], unitToIndex(u_5), "when calling add in LinkedList, line 515")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function MassControl_callback_line27 takes integer this_7, unit u_5, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if unit_getOwner(u_5) == caster_owner[this_7] and ( not dispatch_LinkedList_LinkedList_LinkedList_has(Units_uPlebs, unit_getTypeId(u_5), "when calling has in MassControl, line 28")) and u_5 != caster[this_7] and ( not IsUnitType(u_5, UNIT_TYPE_STRUCTURE)) then
		call dispatch_LinkedList_LinkedList_LinkedList_add_1(g[this_7], unitToIndex(u_5), "when calling add in MassControl, line 29")
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function unit_remove takes unit this_7 returns nothing
	call RemoveUnit(this_7)
endfunction

function Preloader_callback_line45 takes integer this_7, unit u_5 returns nothing
	call unit_remove(u_5)
endfunction

function dispatch_ForGroupCallback_ClosureForGroups_ForGroupCallback_callback takes integer this_7, unit u_5, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if ForGroupCallback_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling ForGroupCallback.callback", "when calling error in ClosureForGroups, line 4")
		else
			call error("Called ForGroupCallback.callback on invalid object.", "when calling error in ClosureForGroups, line 4")
		endif
	endif
	if ForGroupCallback_typeId[this_7] <= 690 then
		if ForGroupCallback_typeId[this_7] <= 689 then
			if ForGroupCallback_typeId[this_7] <= 688 then
				call City_City_callback_line313(this_7, u_5, "when calling City_City_callback_line313 in ClosureForGroups, line 4")
			else
				call City_City_callback_line317(this_7, u_5)
			endif
		else
			call LinkedList_callback_line514(this_7, u_5, "when calling LinkedList_callback_line514 in ClosureForGroups, line 4")
		endif
	elseif ForGroupCallback_typeId[this_7] <= 691 then
		call MassControl_callback_line27(this_7, u_5, "when calling MassControl_callback_line27 in ClosureForGroups, line 4")
	else
		call Preloader_callback_line45(this_7, u_5)
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function group_hasNext takes group this_7 returns boolean
	return FirstOfGroup(this_7) != null
endfunction

function group_next takes group this_7 returns unit
	local unit iterUnit = FirstOfGroup(this_7)
	call GroupRemoveUnit(this_7, iterUnit)
	set group_nexttempReturn = iterUnit
	set iterUnit = null
	return group_nexttempReturn
endfunction

function group_forEachFrom takes group this_7, integer cb, string stackPos returns nothing
	local unit u_5
	local group from
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set from = this_7
	loop
		exitwhen  not group_hasNext(from)
		set u_5 = group_next(from)
		call dispatch_ForGroupCallback_ClosureForGroups_ForGroupCallback_callback(cb, u_5, "when calling callback in ClosureForGroups, line 40")
	endloop
	call dispatch_ForGroupCallback_destroyForGroupCallback(cb, "when calling dispatch_ForGroupCallback_destroyForGroupCallback in ClosureForGroups, line 41")
	set wurst_stack_depth = wurst_stack_depth - 1
	set u_5 = null
	set from = null
endfunction

function finishPreload takes string stackPos returns nothing
	local integer clVar
	local group temp
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call unit_remove(Preloader_dum)
	set temp = Preloader_dumg
	set clVar = alloc_Preloader_ForGroupCallback_line45("when calling alloc_Preloader_ForGroupCallback_line45 in Preloader, line 45")
	call group_forEachFrom(temp, clVar, "when calling forEachFrom in Preloader, line 45")
	call group_destr(Preloader_dumg)
	set Preloader_dumg = null
	set wurst_stack_depth = wurst_stack_depth - 1
	set temp = null
endfunction

function Preloader_call_line54 takes integer this_7, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call finishPreload("when calling finishPreload in Preloader, line 54")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function RangeChecks_call_line23 takes integer this_7 returns nothing
	call IssueImmediateOrderById(un[this_7], 851976)
endfunction

function dispatch_CallbackSingle_ClosureTimers_CallbackSingle_call takes integer this_7, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if CallbackSingle_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling CallbackSingle.call", "when calling error in ClosureTimers, line 109")
		else
			call error("Called CallbackSingle.call on invalid object.", "when calling error in ClosureTimers, line 109")
		endif
	endif
	if CallbackSingle_typeId[this_7] <= 645 then
		if CallbackSingle_typeId[this_7] <= 642 then
			if CallbackSingle_typeId[this_7] <= 640 then
				if CallbackSingle_typeId[this_7] <= 639 then
					call City_City_call_line374(this_7, "when calling City_City_call_line374 in ClosureTimers, line 109")
				else
					call ClosureEvents_call_line290(this_7)
				endif
			elseif CallbackSingle_typeId[this_7] <= 641 then
				call ClosureTimers_call_line182(this_7)
			else
				call ClosureTimers_call_line185(this_7)
			endif
		elseif CallbackSingle_typeId[this_7] <= 644 then
			if CallbackSingle_typeId[this_7] <= 643 then
				call ClosureTimers_call_line188(this_7)
			else
				call Economy_call_line34(this_7, "when calling Economy_call_line34 in ClosureTimers, line 109")
			endif
		else
			call LimitEncampments_call_line19(this_7)
		endif
	elseif CallbackSingle_typeId[this_7] <= 649 then
		if CallbackSingle_typeId[this_7] <= 647 then
			if CallbackSingle_typeId[this_7] <= 646 then
				call LimitMercenaryCamps_call_line19(this_7)
			else
				call MassControl_call_line39(this_7)
			endif
		elseif CallbackSingle_typeId[this_7] <= 648 then
			call MultiboardCityUpdate_call_line18(this_7, "when calling MultiboardCityUpdate_call_line18 in ClosureTimers, line 109")
		else
			call NoShipsNearRivers_call_line14(this_7)
		endif
	elseif CallbackSingle_typeId[this_7] <= 651 then
		if CallbackSingle_typeId[this_7] <= 650 then
			call OnUnitEnterLeave_call_line62(this_7)
		else
			call Preloader_call_line54(this_7, "when calling Preloader_call_line54 in ClosureTimers, line 109")
		endif
	else
		call RangeChecks_call_line23(this_7)
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function timer_pause takes timer this_7 returns nothing
	call PauseTimer(this_7)
endfunction

function timer_release takes timer this_7, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if this_7 == null then
		call error("Trying to release a null timer", "when calling error in TimerUtils, line 37")
		set wurst_stack_depth = wurst_stack_depth - 1
		return
	endif
	if timer_getData(this_7, "when calling getData in TimerUtils, line 39") == TimerUtils_HELD then
		call error("ReleaseTimer: Double free!", "when calling error in TimerUtils, line 40")
		set wurst_stack_depth = wurst_stack_depth - 1
		return
	endif
	call timer_setData(this_7, TimerUtils_HELD, "when calling setData in TimerUtils, line 42")
	call timer_pause(this_7)
	set TimerUtils_freeTimers[TimerUtils_freeTimersCount] = this_7
	set TimerUtils_freeTimersCount = TimerUtils_freeTimersCount + 1
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function CallbackSingle_onDestroy takes integer this_7, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call timer_release(CallbackSingle_t[this_7], "when calling release in ClosureTimers, line 124")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function dealloc_CallbackSingle takes integer obj, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if CallbackSingle_typeId[obj] == 0 then
		call error("Double free: object of type CallbackSingle", "when calling error in ClosureTimers, line 107")
	else
		set CallbackSingle_nextFree[CallbackSingle_firstFree] = obj
		set CallbackSingle_firstFree = CallbackSingle_firstFree + 1
		set CallbackSingle_typeId[obj] = 0
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function destroyCallbackSingle takes integer this_7, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call CallbackSingle_onDestroy(this_7, "when calling CallbackSingle_onDestroy in ClosureTimers, line 123")
	call dealloc_CallbackSingle(this_7, "when calling dealloc_CallbackSingle in ClosureTimers, line 123")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function dispatch_CallbackSingle_destroyCallbackSingle takes integer this_7, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if CallbackSingle_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling CallbackSingle.CallbackSingle", "when calling error in ClosureTimers, line 107")
		else
			call error("Called CallbackSingle.CallbackSingle on invalid object.", "when calling error in ClosureTimers, line 107")
		endif
	endif
	call destroyCallbackSingle(this_7, "when calling destroyCallbackSingle in ClosureTimers, line 107")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function CallbackSingle_staticCallback takes string stackPos returns nothing
	local timer t
	local integer cb
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set t = GetExpiredTimer()
	set cb = timer_getData(t, "when calling getData in ClosureTimers, line 119")
	call dispatch_CallbackSingle_ClosureTimers_CallbackSingle_call(cb, "when calling call in ClosureTimers, line 120")
	call dispatch_CallbackSingle_destroyCallbackSingle(cb, "when calling dispatch_CallbackSingle_destroyCallbackSingle in ClosureTimers, line 121")
	set wurst_stack_depth = wurst_stack_depth - 1
	set t = null
endfunction

function CallbackSingle_closure_impl takes string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call CallbackSingle_staticCallback("when calling staticCallback in ClosureTimers, line 114")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function bridge_CallbackSingle_closure_impl takes nothing returns nothing
	set wurst_stack_depth = 0
	call CallbackSingle_closure_impl("ClosureTimers, line 114")
endfunction

function City_getCityForceId takes integer this_7 returns integer
	return City_force_id[this_7]
endfunction

function dispatch_City_City_City_getCityForceId takes integer this_7, string stackPos returns integer
	local integer City_City_getCityForceId_result
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if City_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling City.getCityForceId", "when calling error in City, line 191")
		else
			call error("Called City.getCityForceId on invalid object.", "when calling error in City, line 191")
		endif
	endif
	set City_City_getCityForceId_result = City_getCityForceId(this_7)
	set wurst_stack_depth = wurst_stack_depth - 1
	return City_City_getCityForceId_result
endfunction

function City_changeTaxLevelFORCED takes integer this_7, integer lvl returns nothing
	set City_public_order_add[this_7] = City_public_order_add[this_7] - City_kCityTaxLevelPOIncrease[City_tax_level[this_7]]
	set City_public_order_add[this_7] = City_public_order_add[this_7] + City_kCityTaxLevelPOIncrease[lvl]
	set City_tax_level[this_7] = lvl
endfunction

function dispatch_City_City_City_changeTaxLevelFORCED takes integer this_7, integer lvl, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if City_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling City.changeTaxLevelFORCED", "when calling error in City, line 273")
		else
			call error("Called City.changeTaxLevelFORCED on invalid object.", "when calling error in City, line 273")
		endif
	endif
	call City_changeTaxLevelFORCED(this_7, lvl)
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function PlayerStats_getSelectedCityId takes integer this_7 returns integer
	return PlayerStats_selected_city_id[this_7]
endfunction

function dispatch_PlayerStats_PlayerStats_PlayerStats_getSelectedCityId takes integer this_7, string stackPos returns integer
	local integer PlayerStats_PlayerStats_getSelectedCityId_result
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if PlayerStats_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling PlayerStats.getSelectedCityId", "when calling error in PlayerStats, line 112")
		else
			call error("Called PlayerStats.getSelectedCityId on invalid object.", "when calling error in PlayerStats, line 112")
		endif
	endif
	set PlayerStats_PlayerStats_getSelectedCityId_result = PlayerStats_getSelectedCityId(this_7)
	set wurst_stack_depth = wurst_stack_depth - 1
	return PlayerStats_PlayerStats_getSelectedCityId_result
endfunction

function City_refreshMultiboardIfPossible takes integer this_7, string stackPos returns nothing
	local integer i_2
	local integer temp
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set i_2 = 0
	set temp = Main_PLAYER_SLOTS - 1
	loop
		exitwhen i_2 > temp
		if dispatch_PlayerStats_PlayerStats_PlayerStats_getSelectedCityId(PlayerStats_player_stats[i_2], "when calling getSelectedCityId in City, line 252") == City_city_id[this_7] then
			call dispatch_PlayerStats_PlayerStats_PlayerStats_refreshMultiboardCity(PlayerStats_player_stats[i_2], "when calling refreshMultiboardCity in City, line 253")
		endif
		set i_2 = i_2 + 1
	endloop
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function dispatch_City_City_City_refreshMultiboardIfPossible takes integer this_7, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if City_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling City.refreshMultiboardIfPossible", "when calling error in City, line 250")
		else
			call error("Called City.refreshMultiboardIfPossible on invalid object.", "when calling error in City, line 250")
		endif
	endif
	call City_refreshMultiboardIfPossible(this_7, "when calling refreshMultiboardIfPossible in City, line 250")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function unit_setOwner takes unit this_7, player p, boolean changeColor returns nothing
	call SetUnitOwner(this_7, p, changeColor)
endfunction

function City_changeOwner takes integer this_7, integer pl_id, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if pl_id == PLAYER_NEUTRAL_AGGRESSIVE then
		call unit_setOwner(City_city_unit[this_7], Player(PLAYER_NEUTRAL_AGGRESSIVE), true)
		call dispatch_City_City_City_changeTaxLevelFORCED(this_7, 0, "when calling changeTaxLevelFORCED in City, line 204")
	else
		call unit_setOwner(City_city_unit[this_7], Player_players[pl_id], true)
	endif
	set City_player_id[this_7] = pl_id
	if pl_id >= 0 and pl_id < Main_PLAYER_SLOTS then
		set City_force_id[this_7] = dispatch_PlayerStats_PlayerStats_PlayerStats_getForceId(PlayerStats_player_stats[pl_id], "when calling getForceId in City, line 211")
	endif
	call dispatch_City_City_City_refreshMultiboardIfPossible(this_7, "when calling refreshMultiboardIfPossible in City, line 213")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function dispatch_City_City_City_changeOwner takes integer this_7, integer pl_id, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if City_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling City.changeOwner", "when calling error in City, line 199")
		else
			call error("Called City.changeOwner on invalid object.", "when calling error in City, line 199")
		endif
	endif
	call City_changeOwner(this_7, pl_id, "when calling changeOwner in City, line 199")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function City_replaceCity takes integer this_7, integer unit_id, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if  not dispatch_LinkedList_LinkedList_LinkedList_has(Units_kCityTypes, unit_id, "when calling has in City, line 195") then
		set wurst_stack_depth = wurst_stack_depth - 1
		return
	endif
	set City_city_unit[this_7] = ReplaceUnitBJ(City_city_unit[this_7], unit_id, bj_UNIT_STATE_METHOD_RELATIVE)
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function dispatch_City_City_City_replaceCity takes integer this_7, integer unit_id, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if City_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling City.replaceCity", "when calling error in City, line 194")
		else
			call error("Called City.replaceCity on invalid object.", "when calling error in City, line 194")
		endif
	endif
	call City_replaceCity(this_7, unit_id, "when calling replaceCity in City, line 194")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function City_settleCity takes integer this_7, integer pl_id, string stackPos returns nothing
	local integer temp
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set temp = City_force_id[this_7]
	if temp == Forces_kWE then
		call dispatch_City_City_City_replaceCity(this_7, Units_uCapitolWE1, "when calling replaceCity in City, line 218")
	elseif temp == Forces_kBZ then
		call dispatch_City_City_City_replaceCity(this_7, Units_uCapitolBZ1, "when calling replaceCity in City, line 220")
	elseif temp == Forces_kEE then
		call dispatch_City_City_City_replaceCity(this_7, Units_uCapitolEE1, "when calling replaceCity in City, line 222")
	elseif temp == Forces_kME then
		call dispatch_City_City_City_replaceCity(this_7, Units_uCapitolME1, "when calling replaceCity in City, line 224")
	endif
	call dispatch_City_City_City_changeOwner(this_7, pl_id, "when calling changeOwner in City, line 225")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function dispatch_City_City_City_settleCity takes integer this_7, integer pl_id, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if City_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling City.settleCity", "when calling error in City, line 215")
		else
			call error("Called City.settleCity on invalid object.", "when calling error in City, line 215")
		endif
	endif
	call City_settleCity(this_7, pl_id, "when calling settleCity in City, line 215")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function force_addPlayer takes force this_7, player whichPlayer returns nothing
	call ForceAddPlayer(this_7, whichPlayer)
endfunction

function force_removePlayer takes force this_7, player whichPlayer returns nothing
	call ForceRemovePlayer(this_7, whichPlayer)
endfunction

function PlayerStats_changeForce takes integer this_7, integer f_id returns nothing
	local integer temp
	if PlayerStats_force_id[this_7] != -1 then
		call force_removePlayer(Forces_forces[PlayerStats_force_id[this_7]], PlayerStats_pl[this_7])
	endif
	set PlayerStats_force_id[this_7] = f_id
	call force_addPlayer(Forces_forces[PlayerStats_force_id[this_7]], PlayerStats_pl[this_7])
	call SetPlayerUnitAvailableBJ(Units_uPeasantME, false, PlayerStats_pl[this_7])
	call SetPlayerUnitAvailableBJ(Units_uWorkerME, false, PlayerStats_pl[this_7])
	call SetPlayerUnitAvailableBJ(Units_uPeasantBZ, false, PlayerStats_pl[this_7])
	call SetPlayerUnitAvailableBJ(Units_uWorkerBZ, false, PlayerStats_pl[this_7])
	call SetPlayerUnitAvailableBJ(Units_uPeasantEE, false, PlayerStats_pl[this_7])
	call SetPlayerUnitAvailableBJ(Units_uWorkerEE, false, PlayerStats_pl[this_7])
	call SetPlayerUnitAvailableBJ(Units_uPeasantWE, false, PlayerStats_pl[this_7])
	call SetPlayerUnitAvailableBJ(Units_uWorkerWE, false, PlayerStats_pl[this_7])
	set temp = PlayerStats_force_id[this_7]
	if temp == Forces_kWE then
		call SetPlayerUnitAvailableBJ(Units_uPeasantWE, true, PlayerStats_pl[this_7])
		call SetPlayerUnitAvailableBJ(Units_uWorkerWE, true, PlayerStats_pl[this_7])
	elseif temp == Forces_kEE then
		call SetPlayerUnitAvailableBJ(Units_uPeasantEE, true, PlayerStats_pl[this_7])
		call SetPlayerUnitAvailableBJ(Units_uWorkerEE, true, PlayerStats_pl[this_7])
	elseif temp == Forces_kME then
		call SetPlayerUnitAvailableBJ(Units_uPeasantME, true, PlayerStats_pl[this_7])
		call SetPlayerUnitAvailableBJ(Units_uWorkerME, true, PlayerStats_pl[this_7])
	elseif temp == Forces_kBZ then
		call SetPlayerUnitAvailableBJ(Units_uPeasantBZ, true, PlayerStats_pl[this_7])
		call SetPlayerUnitAvailableBJ(Units_uWorkerBZ, true, PlayerStats_pl[this_7])
	endif
endfunction

function dispatch_PlayerStats_PlayerStats_PlayerStats_changeForce takes integer this_7, integer f_id, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if PlayerStats_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling PlayerStats.changeForce", "when calling error in PlayerStats, line 125")
		else
			call error("Called PlayerStats.changeForce on invalid object.", "when calling error in PlayerStats, line 125")
		endif
	endif
	call PlayerStats_changeForce(this_7, f_id)
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function getCityId takes unit u_5, string stackPos returns integer
	local integer i_2
	local integer temp
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set i_2 = 0
	set temp = City_cityCount - 1
	loop
		exitwhen i_2 > temp
		if dispatch_City_City_City_getCityUnit(City_cities[i_2], "when calling getCityUnit in City, line 443") == u_5 then
			set wurst_stack_depth = wurst_stack_depth - 1
			return i_2
		endif
		set i_2 = i_2 + 1
	endloop
	set wurst_stack_depth = wurst_stack_depth - 1
	return -1
endfunction

function CityManage_closure_impl_2 takes string stackPos returns nothing
	local integer city_id
	local integer force_id
	local integer player_id
	local integer iterator
	local integer u_5
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set city_id = getCityId(GetSpellTargetUnit(), "when calling getCityId in CityManage, line 20")
	set force_id = dispatch_City_City_City_getCityForceId(City_cities[city_id], "when calling getCityForceId in CityManage, line 21")
	set player_id = player_getId(unit_getOwner(GetSpellAbilityUnit()))
	call dispatch_PlayerStats_PlayerStats_PlayerStats_changeForce(PlayerStats_player_stats[player_id], force_id, "when calling changeForce in CityManage, line 23")
	set iterator = LinkedList_iterator(Units_kStartingUnits[force_id], "when calling iterator in CityManage, line 26")
	loop
		exitwhen  not LLIterator_hasNext(iterator)
		set u_5 = LLIterator_next(iterator)
		call CreateNUnitsAtLoc(1, u_5, Player_players[player_id], GetSpellTargetLoc(), 0.)
	endloop
	call LLIterator_close(iterator, "when calling close in CityManage, line 26")
	call dispatch_City_City_City_settleCity(City_cities[city_id], player_id, "when calling settleCity in CityManage, line 29")
	call KillUnit(GetSpellAbilityUnit())
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function bridge_CityManage_closure_impl takes nothing returns nothing
	set wurst_stack_depth = 0
	call CityManage_closure_impl_2("CityManage, line 18")
endfunction

function Table_hasInt takes integer this_7, integer parentKey returns boolean
	return hashtable_hasInt(Table_ht, this_7, parentKey)
endfunction

function dispatch_Table_Table_Table_hasInt takes integer this_7, integer parentKey, string stackPos returns boolean
	local boolean Table_Table_hasInt_result
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if Table_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling Table.hasInt", "when calling error in Table, line 9")
		else
			call error("Called Table.hasInt on invalid object.", "when calling error in Table, line 9")
		endif
	endif
	set Table_Table_hasInt_result = Table_hasInt(this_7, parentKey)
	set wurst_stack_depth = wurst_stack_depth - 1
	return Table_Table_hasInt_result
endfunction

function HashMap_has takes integer this_7, integer key, string stackPos returns boolean
	local boolean stackTrace_tempReturn
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackTrace_tempReturn = dispatch_Table_Table_Table_hasInt(this_7, key, "when calling hasInt in HashMap, line 14")
	set wurst_stack_depth = wurst_stack_depth - 1
	return stackTrace_tempReturn
endfunction

function dispatch_HashMap_HashMap_HashMap_has takes integer this_7, integer key, string stackPos returns boolean
	local boolean HashMap_HashMap_has_result
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if Table_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling HashMap.has", "when calling error in HashMap, line 13")
		else
			call error("Called HashMap.has on invalid object.", "when calling error in HashMap, line 13")
		endif
	endif
	set HashMap_HashMap_has_result = HashMap_has(this_7, key, "when calling has in HashMap, line 13")
	set wurst_stack_depth = wurst_stack_depth - 1
	return HashMap_HashMap_has_result
endfunction

function dispatch_OnCast_ClosureEvents_OnCast_fireEx takes integer this_7, integer id returns nothing
endfunction

function OnCast_fire takes integer this_7, unit caster_2 returns nothing
	call dispatch_OnCast_ClosureEvents_OnCast_fireEx(this_7, GetSpellAbilityId())
endfunction

function dispatch_OnPointCast_ClosureEvents_OnPointCast_fireEx takes integer this_7, unit caster_2, real target_x, real target_y returns nothing
endfunction

function getSpellTargetPos takes nothing returns real
	set getSpellTargetPos_return_x = GetSpellTargetX()
	set getSpellTargetPos_return_y = GetSpellTargetY()
	return getSpellTargetPos_return_x
endfunction

function OnPointCast_fire takes integer this_7, unit caster_2 returns nothing
	call dispatch_OnPointCast_ClosureEvents_OnPointCast_fireEx(this_7, caster_2, getSpellTargetPos(), getSpellTargetPos_return_y)
endfunction

function dispatch_OnUnitCast_ClosureEvents_OnUnitCast_fireEx takes integer this_7, unit caster_2, unit target returns nothing
endfunction

function OnUnitCast_fire takes integer this_7, unit caster_2 returns nothing
	call dispatch_OnUnitCast_ClosureEvents_OnUnitCast_fireEx(this_7, caster_2, GetSpellTargetUnit())
endfunction

function dispatch_OnCastListener_ClosureEvents_OnCastListener_fire takes integer this_7, unit caster_2, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if OnCastListener_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling OnCastListener.fire", "when calling error in ClosureEvents, line 56")
		else
			call error("Called OnCastListener.fire on invalid object.", "when calling error in ClosureEvents, line 56")
		endif
	endif
	if OnCastListener_typeId[this_7] <= 716 then
		if OnCastListener_typeId[this_7] <= 715 then
			call OnCast_fire(this_7, caster_2)
		else
			call OnPointCast_fire(this_7, caster_2)
		endif
	else
		call OnUnitCast_fire(this_7, caster_2)
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function EventListener_onSpellEffect takes string stackPos returns nothing
	local unit trigUnit
	local integer abilId
	local integer listener
	local integer listener_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set trigUnit = GetTriggerUnit()
	set abilId = GetSpellAbilityId()
	if dispatch_HashMap_HashMap_HashMap_has(EventListener_castMapCasters, unitToIndex(trigUnit), "when calling has in ClosureEvents, line 189") then
		set listener = dispatch_HashMap_HashMap_HashMap_get(EventListener_castMapCasters, unitToIndex(trigUnit), "when calling get in ClosureEvents, line 190")
		loop
			exitwhen  not (listener != 0)
			if OnCastListener_abilId[listener] == -1 or OnCastListener_abilId[listener] == abilId then
				call dispatch_OnCastListener_ClosureEvents_OnCastListener_fire(listener, GetSpellAbilityUnit(), "when calling fire in ClosureEvents, line 193")
			endif
			set listener = OnCastListener_next[listener]
		endloop
	endif
	if dispatch_HashMap_HashMap_HashMap_has(EventListener_castMap, abilId, "when calling has in ClosureEvents, line 195") then
		set listener_2 = dispatch_HashMap_HashMap_HashMap_get(EventListener_castMap, abilId, "when calling get in ClosureEvents, line 196")
		loop
			exitwhen  not (listener_2 != 0)
			if OnCastListener_eventUnit[listener_2] == null or OnCastListener_eventUnit[listener_2] == trigUnit then
				call dispatch_OnCastListener_ClosureEvents_OnCastListener_fire(listener_2, GetSpellAbilityUnit(), "when calling fire in ClosureEvents, line 199")
			endif
			set listener_2 = OnCastListener_next[listener_2]
		endloop
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set trigUnit = null
endfunction

function ClosureEvents_closure_impl_2 takes string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call EventListener_onSpellEffect("when calling onSpellEffect in ClosureEvents, line 308")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function bridge_ClosureEvents_closure_impl takes nothing returns nothing
	set wurst_stack_depth = 0
	call ClosureEvents_closure_impl_2("ClosureEvents, line 308")
endfunction

function getCastleByFaction takes integer tier, integer force_id returns integer
	local integer temp = tier
	local integer temp_2
	local integer temp_3
	local integer temp_4
	local integer temp_5
	if temp == 1 then
		set temp_2 = force_id
		if temp_2 == Forces_kWE then
			return Units_uCastleWE1
		elseif temp_2 == Forces_kEE then
			return Units_uCastleEE1
		elseif temp_2 == Forces_kME then
			return Units_uCastleME1
		elseif temp_2 == Forces_kBZ then
			return Units_uCastleBZ1
		else
			return Units_uCastleWE1
		endif
	elseif temp == 2 then
		set temp_3 = force_id
		if temp_3 == Forces_kWE then
			return Units_uCastleWE2
		elseif temp_3 == Forces_kEE then
			return Units_uCastleEE2
		elseif temp_3 == Forces_kME then
			return Units_uCastleME2
		elseif temp_3 == Forces_kBZ then
			return Units_uCastleBZ2
		else
			return Units_uCastleWE2
		endif
	elseif temp == 3 then
		set temp_4 = force_id
		if temp_4 == Forces_kWE then
			return Units_uCastleWE3
		elseif temp_4 == Forces_kEE then
			return Units_uCastleEE3
		elseif temp_4 == Forces_kME then
			return Units_uCastleME3
		elseif temp_4 == Forces_kBZ then
			return Units_uCastleBZ3
		else
			return Units_uCastleWE3
		endif
	else
		set temp_5 = force_id
		if temp_5 == Forces_kWE then
			return Units_uCastleWE1
		elseif temp_5 == Forces_kEE then
			return Units_uCastleEE1
		elseif temp_5 == Forces_kME then
			return Units_uCastleME1
		elseif temp_5 == Forces_kBZ then
			return Units_uCastleBZ1
		else
			return Units_uCastleWE1
		endif
	endif
endfunction

function getCastleTier takes integer unit_type returns integer
	local integer temp = unit_type
	if temp == Units_uCastleWE1 then
		return 1
	elseif temp == Units_uCastleWE2 then
		return 2
	elseif temp == Units_uCastleWE3 then
		return 3
	elseif temp == Units_uCastleEE1 then
		return 1
	elseif temp == Units_uCastleEE2 then
		return 2
	elseif temp == Units_uCastleEE3 then
		return 3
	elseif temp == Units_uCastleME1 then
		return 1
	elseif temp == Units_uCastleME2 then
		return 2
	elseif temp == Units_uCastleME3 then
		return 3
	elseif temp == Units_uCastleBZ1 then
		return 1
	elseif temp == Units_uCastleBZ2 then
		return 2
	elseif temp == Units_uCastleBZ3 then
		return 3
	else
		return 1
	endif
endfunction

function unit_getLifePercent takes unit this_7 returns real
	return GetUnitLifePercent(this_7)
endfunction

function unit_getPos takes unit this_7 returns real
	set unit_getPos_return_x = unit_getX(this_7)
	set unit_getPos_return_y = unit_getY(this_7)
	return unit_getPos_return_x
endfunction

function unit_setLifePercent takes unit this_7, real p returns nothing
	call SetUnitLifePercentBJ(this_7, p)
endfunction

function unit_setManaPercent takes unit this_7, real p returns nothing
	call SetUnitManaPercentBJ(this_7, p)
endfunction

function vec2_length takes real this_x, real this_y returns real
	return SquareRoot(this_x * this_x + this_y * this_y)
endfunction

function vec2_op_minus takes real this_x, real this_y, real v_x, real v_y returns real
	set vec2_op_minus_return_x = this_x - v_x
	set vec2_op_minus_return_y = this_y - v_y
	return vec2_op_minus_return_x
endfunction

function CastleCapture_onEvent_line8 takes integer this_7, string stackPos returns nothing
	local unit u_5
	local player pl_attacker
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set u_5 = GetAttackedUnitBJ()
	if dispatch_LinkedList_LinkedList_LinkedList_has(Units_uCastles, unit_getTypeId(u_5), "when calling has in CastleCapture, line 11") then
		if unit_getLifePercent(u_5) <= City_kCityLifePercentToCapture and unit_getOwner(u_5) != unit_getOwner(GetAttacker()) and vec2_length(vec2_op_minus(unit_getPos(u_5), unit_getPos_return_y, unit_getPos(GetAttacker()), unit_getPos_return_y), vec2_op_minus_return_y) <= 300.0 then
			set pl_attacker = unit_getOwner(GetAttacker())
			call unit_setOwner(u_5, pl_attacker, true)
			if player_getId(pl_attacker) != PLAYER_NEUTRAL_AGGRESSIVE then
				call ReplaceUnitBJ(u_5, getCastleByFaction(getCastleTier(unit_getTypeId(u_5)), dispatch_PlayerStats_PlayerStats_PlayerStats_getForceId(PlayerStats_player_stats[player_getId(pl_attacker)], "when calling getForceId in CastleCapture, line 17")), bj_UNIT_STATE_METHOD_RELATIVE)
			endif
			call unit_setLifePercent(u_5, City_kCityLifePercentOnceItCaptured)
			call unit_setManaPercent(u_5, 0.0)
			call UnitAddAbility(u_5, Abilities_aCastleAura)
		endif
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set u_5 = null
	set pl_attacker = null
endfunction

function alloc_City takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if City_firstFree == 0 then
		if City_maxIndex < 32768 then
			set City_maxIndex = City_maxIndex + 1
			set this_7 = City_maxIndex
			set City_typeId[this_7] = 653
		else
			call error("Out of memory: Could not create City.", "when calling error in City, line 71")
			set this_7 = 0
		endif
	else
		set City_firstFree = City_firstFree - 1
		set this_7 = City_nextFree[City_firstFree]
		set City_typeId[this_7] = 653
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function Log_debug takes string msg returns nothing
	call printLog(Player_localPlayer, 1, msg)
endfunction

function eventid_isKeyboardEvent takes eventid this_7 returns boolean
	local integer eventId = handle_getHandleId(this_7)
	return (eventId >= 261 and eventId <= 268) or eventId == 17
endfunction

function eventid_isMouseEvent takes eventid this_7 returns boolean
	local integer eventId = handle_getHandleId(this_7)
	return eventId >= 305 and eventId <= 307
endfunction

function eventid_isPlayerunitEvent takes eventid this_7 returns boolean
	local integer eventId = handle_getHandleId(this_7)
	return (eventId >= 18 and eventId <= 51) or (eventId >= 269 and eventId <= 277)
endfunction

function registerEventId takes eventid evnt, string stackPos returns integer
	local integer eventId
	local integer i_2
	local integer temp
	local trigger receiver
	local trigger receiver_2
	local trigger receiver_3
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set eventId = handle_getHandleId(evnt)
	set ClosureEvents_eventTypeCounter = ClosureEvents_eventTypeCounter + 1
	set ClosureEvents_eventidToIndex[eventId] = ClosureEvents_eventTypeCounter
	if eventid_isPlayerunitEvent(evnt) then
		call Log_debug("reg handleid: " + int_toString(eventId) + " -> eventId: " + int_toString(ClosureEvents_eventTypeCounter))
		call registerPlayerUnitEvent_2(ConvertPlayerUnitEvent(eventId), ref_function_bridge_EventListener_generalEventCallback)
	elseif evnt != EVENT_UNIT_DAMAGED and evnt != EVENT_PLAYER_LEAVE and evnt != ClosureEvents_EVENT_PLAYER_CHAT_FILTER and ( not eventid_isKeyboardEvent(evnt)) and ( not eventid_isMouseEvent(evnt)) then
		call error("registering handleid: " + int_toString(eventId) + " non-playerunitevent. Except EVENT_UNIT_DAMAGED and EVENT_PLAYER_LEAVE these are not supported right now.", "when calling error in ClosureEvents, line 243")
	endif
	if eventid_isMouseEvent(evnt) and ( not EventListener_useMouseEvents) then
		set EventListener_useMouseEvents = true
		set i_2 = 0
		set temp = bj_MAX_PLAYERS - 1
		loop
			exitwhen i_2 > temp
			set receiver = ClosureEvents_keyTrig
			call trigger_registerPlayerEvent(receiver, Player_players[i_2], EVENT_PLAYER_MOUSE_UP)
			set receiver_2 = receiver
			call trigger_registerPlayerEvent(receiver_2, Player_players[i_2], EVENT_PLAYER_MOUSE_DOWN)
			set receiver_3 = receiver_2
			call trigger_registerPlayerEvent(receiver_3, Player_players[i_2], EVENT_PLAYER_MOUSE_MOVE)
			set i_2 = i_2 + 1
		endloop
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set receiver = null
	set receiver_2 = null
	set receiver_3 = null
	return ClosureEvents_eventTypeCounter
endfunction

function eventid_toIntId takes eventid this_7, string stackPos returns integer
	local integer id
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set id = ClosureEvents_eventidToIndex[handle_getHandleId(this_7)]
	if id == 0 then
		set id = registerEventId(this_7, "when calling registerEventId in ClosureEvents, line 229")
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return id
endfunction

function EventListener_add takes eventid eventId, integer listener, string stackPos returns integer
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set EventListener_eventId[listener] = eventid_toIntId(eventId, "when calling toIntId in ClosureEvents, line 112")
	if EventListener_generalListenersFirsts[EventListener_eventId[listener]] != 0 then
		set EventListener_prev[EventListener_generalListenersFirsts[EventListener_eventId[listener]]] = listener
		set EventListener_next[listener] = EventListener_generalListenersFirsts[EventListener_eventId[listener]]
	endif
	set EventListener_generalListenersFirsts[EventListener_eventId[listener]] = listener
	set wurst_stack_depth = wurst_stack_depth - 1
	return listener
endfunction

function alloc_City_City_CallbackPeriodic_line138 takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if CallbackPeriodic_firstFree == 0 then
		if CallbackPeriodic_maxIndex < 32768 then
			set CallbackPeriodic_maxIndex = CallbackPeriodic_maxIndex + 1
			set this_7 = CallbackPeriodic_maxIndex
			set CallbackPeriodic_typeId[this_7] = 631
		else
			call error("Out of memory: Could not create City_City_CallbackPeriodic_line138.", "when calling error in City, line 138")
			set this_7 = 0
		endif
	else
		set CallbackPeriodic_firstFree = CallbackPeriodic_firstFree - 1
		set this_7 = CallbackPeriodic_nextFree[CallbackPeriodic_firstFree]
		set CallbackPeriodic_typeId[this_7] = 631
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function alloc_City_City_CallbackPeriodic_line154 takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if CallbackPeriodic_firstFree == 0 then
		if CallbackPeriodic_maxIndex < 32768 then
			set CallbackPeriodic_maxIndex = CallbackPeriodic_maxIndex + 1
			set this_7 = CallbackPeriodic_maxIndex
			set CallbackPeriodic_typeId[this_7] = 632
		else
			call error("Out of memory: Could not create City_City_CallbackPeriodic_line154.", "when calling error in City, line 154")
			set this_7 = 0
		endif
	else
		set CallbackPeriodic_firstFree = CallbackPeriodic_firstFree - 1
		set this_7 = CallbackPeriodic_nextFree[CallbackPeriodic_firstFree]
		set CallbackPeriodic_typeId[this_7] = 632
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function alloc_City_City_EventListener_line121 takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_7 = EventListener_maxIndex
			set EventListener_typeId[this_7] = 666
		else
			call error("Out of memory: Could not create City_City_EventListener_line121.", "when calling error in City, line 121")
			set this_7 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_7 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_7] = 666
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function construct_CallbackPeriodic takes integer this_7 returns nothing
endfunction

function construct_EventListener takes integer this_7 returns nothing
	set EventListener_eventId[this_7] = 0
	set EventListener_next[this_7] = 0
	set EventListener_prev[this_7] = 0
endfunction

function timer_startPeriodic takes timer this_7, real time, code timerCallBack returns nothing
	call TimerStart(this_7, time, true, timerCallBack)
endfunction

function CallbackPeriodic_start takes integer this_7, timer whichTimer, real time, string stackPos returns nothing
	local timer receiver
	local timer receiver_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set receiver = whichTimer
	call timer_setData(receiver, this_7, "when calling setData in ClosureTimers, line 134")
	set receiver_2 = receiver
	call timer_startPeriodic(receiver_2, time, ref_function_bridge_CallbackPeriodic_staticCallback)
	set wurst_stack_depth = wurst_stack_depth - 1
	set receiver = null
	set receiver_2 = null
endfunction

function dispatch_CallbackPeriodic_ClosureTimers_CallbackPeriodic_start takes integer this_7, timer whichTimer, real time, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if CallbackPeriodic_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling CallbackPeriodic.start", "when calling error in ClosureTimers, line 132")
		else
			call error("Called CallbackPeriodic.start on invalid object.", "when calling error in ClosureTimers, line 132")
		endif
	endif
	call CallbackPeriodic_start(this_7, whichTimer, time, "when calling start in ClosureTimers, line 132")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function timer_doPeriodically takes timer this_7, real time, integer cb, string stackPos returns integer
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call dispatch_CallbackPeriodic_ClosureTimers_CallbackPeriodic_start(cb, this_7, time, "when calling start in ClosureTimers, line 45")
	set wurst_stack_depth = wurst_stack_depth - 1
	return cb
endfunction

function doPeriodically takes real time, integer cb, string stackPos returns integer
	local integer stackTrace_tempReturn
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackTrace_tempReturn = timer_doPeriodically(getTimer("when calling getTimer in ClosureTimers, line 57"), time, cb, "when calling doPeriodically in ClosureTimers, line 57")
	set wurst_stack_depth = wurst_stack_depth - 1
	return stackTrace_tempReturn
endfunction

function exp takes real x returns real
	return Pow(MathTools_e, x)
endfunction

function getRandomValWithNormalDistribution takes real lower, real upper, real left, real right, real sigmasqr returns real
	local real med = (lower + upper) / 2.
	local real max_add = (upper - lower) / 2.
	local real x = GetRandomReal(left, right)
	local real mul = sign(x) * exp( - (Pow(x, 2.) / 2. * sigmasqr)) / SquareRoot(2. * Maths_PI * sigmasqr)
	return med + mul * max_add
endfunction

function alloc_LinkedList takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if LinkedList_firstFree == 0 then
		if LinkedList_maxIndex < 32768 then
			set LinkedList_maxIndex = LinkedList_maxIndex + 1
			set this_7 = LinkedList_maxIndex
			set LinkedList_typeId[this_7] = 707
		else
			call error("Out of memory: Could not create LinkedList.", "when calling error in LinkedList, line 17")
			set this_7 = 0
		endif
	else
		set LinkedList_firstFree = LinkedList_firstFree - 1
		set this_7 = LinkedList_nextFree[LinkedList_firstFree]
		set LinkedList_typeId[this_7] = 707
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function construct_LinkedList2 takes integer this_7, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set LinkedList_dummy[this_7] = new_LLEntry(0, 0, 0, "when calling new_LLEntry in LinkedList, line 18")
	set LinkedList_size[this_7] = 0
	set LLEntry_next[LinkedList_dummy[this_7]] = LinkedList_dummy[this_7]
	set LLEntry_prev[LinkedList_dummy[this_7]] = LinkedList_dummy[this_7]
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function new_LinkedList takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_7 = alloc_LinkedList("when calling alloc_LinkedList in LinkedList, line 31")
	call construct_LinkedList2(this_7, "when calling construct_LinkedList2 in LinkedList, line 31")
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function construct_City takes integer this_7, unit u_5, string n, integer f_id, integer tier, string stackPos returns nothing
	local integer clVar
	local integer clVar_2
	local integer clVar_3
	local playerunitevent temp
	local real temp_2
	local real temp_3
	local real tuple_temp
	local real tuple_temp_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set City_tax_level[this_7] = 0
	set City_last_time_tax_level_changed[this_7] = 0.
	set City_modifiers[this_7] = new_LinkedList("when calling new_LinkedList in City, line 104")
	set City_tax_multiplier[this_7] = 1.0
	set City_city_unit[this_7] = u_5
	set tuple_temp = unit_getPos(City_city_unit[this_7])
	set tuple_temp_2 = unit_getPos_return_y
	set City_city_pos_x[this_7] = tuple_temp
	set City_city_pos_y[this_7] = tuple_temp_2
	set City_city_name[this_7] = n
	set City_force_id[this_7] = f_id
	set City_player_id[this_7] = player_getId(unit_getOwner(City_city_unit[this_7]))
	set City_city_name[this_7] = string_substring(n, 0, City_kCityNameLimit)
	set City_city_id[this_7] = City_cityCount
	set City_cityCount = City_cityCount + 1
	set temp = EVENT_PLAYER_UNIT_DEATH
	set clVar = alloc_City_City_EventListener_line121("when calling alloc_City_City_EventListener_line121 in City, line 121")
	call construct_EventListener(clVar)
	set this_4[clVar] = this_7
	call EventListener_add(temp, clVar, "when calling add in City, line 121")
	set City_population_growth_rate[this_7] = getRandomValWithNormalDistribution(City_kCityPopGrowthRateMinMax[0], City_kCityPopGrowthRateMinMax[1],  - 5.0, 5.0, 0.15)
	set City_population[this_7] = real_toInt(getRandomValWithNormalDistribution(int_toReal(dispatch_LinkedList_LinkedList_LinkedList_get(City_kCityPopInit[tier], 0, "when calling get in City, line 133")), int_toReal(dispatch_LinkedList_LinkedList_LinkedList_get(City_kCityPopInit[tier], 1, "when calling get in City, line 133")),  - 5.0, 5.0, 0.15))
	set City_public_order_add[this_7] = 0.
	set temp_2 = City_kCityPopCountRate / 2. + GetRandomReal(City_kCityPopCountRate / 2., City_kCityPopCountRate)
	set clVar_2 = alloc_City_City_CallbackPeriodic_line138("when calling alloc_City_City_CallbackPeriodic_line138 in City, line 138")
	call construct_CallbackPeriodic(clVar_2)
	set this_5[clVar_2] = this_7
	call doPeriodically(temp_2, clVar_2, "when calling doPeriodically in City, line 138")
	set temp_3 = City_kCityLongCount / 2. + GetRandomReal(City_kCityLongCount / 2., City_kCityLongCount)
	set clVar_3 = alloc_City_City_CallbackPeriodic_line154("when calling alloc_City_City_CallbackPeriodic_line154 in City, line 154")
	call construct_CallbackPeriodic(clVar_3)
	set this_6[clVar_3] = this_7
	call doPeriodically(temp_3, clVar_3, "when calling doPeriodically in City, line 154")
	set wurst_stack_depth = wurst_stack_depth - 1
	set temp = null
endfunction

function new_City takes unit u_5, string n, integer f_id, integer tier, string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_7 = alloc_City("when calling alloc_City in City, line 101")
	call construct_City(this_7, u_5, n, f_id, tier, "when calling construct_City in City, line 101")
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function isCity takes unit u_5, string stackPos returns boolean
	local boolean stackTrace_tempReturn
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackTrace_tempReturn = dispatch_LinkedList_LinkedList_LinkedList_has(Units_kCityTypes, unit_getTypeId(u_5), "when calling has in City, line 437")
	set wurst_stack_depth = wurst_stack_depth - 1
	return stackTrace_tempReturn
endfunction

function unit_isCity takes unit this_7, string stackPos returns boolean
	local boolean stackTrace_tempReturn
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackTrace_tempReturn = isCity(this_7, "when calling isCity in UnitTools, line 5")
	set wurst_stack_depth = wurst_stack_depth - 1
	return stackTrace_tempReturn
endfunction

function CityBuilded_onEvent_line9 takes integer this_7, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if unit_isCity(GetConstructedStructure(), "when calling isCity in CityBuilded, line 10") then
		set City_cities[City_cityCount] = new_City(GetConstructedStructure(), "New", dispatch_PlayerStats_PlayerStats_PlayerStats_getForceId(PlayerStats_player_stats[player_getId(unit_getOwner(GetConstructedStructure()))], "when calling getForceId in CityBuilded, line 11"), 1, "when calling new_City in CityBuilded, line 11")
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function attentionToForce takes string msg, force f, string stackPos returns nothing
	local integer i_2
	local integer temp
	local player pl
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set i_2 = 0
	set temp = Main_PLAYER_SLOTS - 1
	loop
		exitwhen i_2 > temp
		if GetForceOfPlayer(Player_players[i_2]) == f then
			set pl = Player_players[i_2]
			call DisplayTimedTextToPlayer(pl, 0., 0., Strings_kGoodNewsDur, getAttentionStringForPlayer(pl, "when calling getAttentionStringForPlayer in Messages, line 116"))
			call DisplayTimedTextToPlayer(pl, 0., 0., Strings_kGoodNewsDur, msg)
		endif
		set i_2 = i_2 + 1
	endloop
	set wurst_stack_depth = wurst_stack_depth - 1
	set pl = null
endfunction

function getCapitolByFaction takes integer tier, integer force_id returns integer
	local integer temp = tier
	local integer temp_2
	local integer temp_3
	local integer temp_4
	local integer temp_5
	if temp == 1 then
		set temp_2 = force_id
		if temp_2 == Forces_kWE then
			return Units_uCapitolWE1
		elseif temp_2 == Forces_kEE then
			return Units_uCapitolEE1
		elseif temp_2 == Forces_kME then
			return Units_uCapitolME1
		elseif temp_2 == Forces_kBZ then
			return Units_uCapitolBZ1
		else
			return Units_uCapitolWE1
		endif
	elseif temp == 2 then
		set temp_3 = force_id
		if temp_3 == Forces_kWE then
			return Units_uCapitolWE2
		elseif temp_3 == Forces_kEE then
			return Units_uCapitolEE2
		elseif temp_3 == Forces_kME then
			return Units_uCapitolME2
		elseif temp_3 == Forces_kBZ then
			return Units_uCapitolBZ2
		else
			return Units_uCapitolWE2
		endif
	elseif temp == 3 then
		set temp_4 = force_id
		if temp_4 == Forces_kWE then
			return Units_uCapitolWE3
		elseif temp_4 == Forces_kEE then
			return Units_uCapitolEE3
		elseif temp_4 == Forces_kME then
			return Units_uCapitolME3
		elseif temp_4 == Forces_kBZ then
			return Units_uCapitolBZ3
		else
			return Units_uCapitolWE3
		endif
	else
		set temp_5 = force_id
		if temp_5 == Forces_kWE then
			return Units_uCapitolWE1
		elseif temp_5 == Forces_kEE then
			return Units_uCapitolEE1
		elseif temp_5 == Forces_kME then
			return Units_uCapitolME1
		elseif temp_5 == Forces_kBZ then
			return Units_uCapitolBZ1
		else
			return Units_uCapitolWE1
		endif
	endif
endfunction

function getCapitolTier takes integer unit_type returns integer
	local integer temp = unit_type
	if temp == Units_uCapitolWE1 then
		return 1
	elseif temp == Units_uCapitolWE2 then
		return 2
	elseif temp == Units_uCapitolWE3 then
		return 3
	elseif temp == Units_uCapitolEE1 then
		return 1
	elseif temp == Units_uCapitolEE2 then
		return 2
	elseif temp == Units_uCapitolEE3 then
		return 3
	elseif temp == Units_uCapitolME1 then
		return 1
	elseif temp == Units_uCapitolME2 then
		return 2
	elseif temp == Units_uCapitolME3 then
		return 3
	elseif temp == Units_uCapitolBZ1 then
		return 1
	elseif temp == Units_uCapitolBZ2 then
		return 2
	elseif temp == Units_uCapitolBZ3 then
		return 3
	else
		return 1
	endif
endfunction

function City_capture takes integer this_7, player whoCaptures, string stackPos returns nothing
	local integer whoCapturesForceId
	local integer whoCapturesId
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call SetUnitLifePercentBJ(City_city_unit[this_7], City_kCityLifePercentOnceItCaptured)
	call SetUnitManaPercentBJ(City_city_unit[this_7], City_kCityManaPercentOnceItCapruted)
	call dispatch_City_City_City_addModifier(this_7, 0, "when calling addModifier in City, line 234")
	if getChance(CityModifierClass_chance[dispatch_HashMap_HashMap_HashMap_get(CityModifiers_cityModifiers, 6, "when calling get in City, line 235")]) then
		call dispatch_City_City_City_addModifier(this_7, 6, "when calling addModifier in City, line 236")
	endif
	set whoCapturesForceId = City_force_id[this_7]
	set whoCapturesId = player_getId(whoCaptures)
	if whoCapturesId >= 0 and whoCapturesId < Main_PLAYER_SLOTS then
		set whoCapturesForceId = dispatch_PlayerStats_PlayerStats_PlayerStats_getForceId(PlayerStats_player_stats[whoCapturesId], "when calling getForceId in City, line 242")
	endif
	if dispatch_LinkedList_LinkedList_LinkedList_has(Units_uCapitols, unit_getTypeId(City_city_unit[this_7]), "when calling has in City, line 244") then
		call dispatch_City_City_City_replaceCity(this_7, getCapitolByFaction(getCapitolTier(unit_getTypeId(City_city_unit[this_7])), whoCapturesForceId), "when calling replaceCity in City, line 245")
	endif
	call dispatch_City_City_City_changeOwner(this_7, whoCapturesId, "when calling changeOwner in City, line 247")
	call UnitAddAbility(City_city_unit[this_7], Abilities_aTownHallCapitolAura)
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function dispatch_City_City_City_capture takes integer this_7, player whoCaptures, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if City_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling City.capture", "when calling error in City, line 230")
		else
			call error("Called City.capture on invalid object.", "when calling error in City, line 230")
		endif
	endif
	call City_capture(this_7, whoCaptures, "when calling capture in City, line 230")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function player_getColor takes player this_7 returns playercolor
	return GetPlayerColor(this_7)
endfunction

function colorA_withoutAlpha takes integer this_red, integer this_green, integer this_blue, integer this_alpha returns integer
	set colorA_withoutAlpha_return_red = this_red
	set colorA_withoutAlpha_return_green = this_green
	set colorA_withoutAlpha_return_blue = this_blue
	return colorA_withoutAlpha_return_red
endfunction

function playercolor_toInt takes playercolor this_7 returns integer
	local integer value = 0
	local integer i_2 = 0
	local integer temp = bj_MAX_PLAYER_SLOTS - 1
	loop
		exitwhen i_2 > temp
		if Playercolor_LOOKUP[i_2] == this_7 then
			set value = i_2
			exitwhen true
		endif
		set i_2 = i_2 + 1
	endloop
	return value
endfunction

function playercolor_toColor takes playercolor this_7 returns integer
	local integer cond_result_red
	local integer cond_result_green
	local integer cond_result_blue
	local integer tempIndex
	local integer tuple_temp
	local integer tuple_temp_2
	local integer tuple_temp_3
	local integer tuple_temp_4
	local integer tuple_temp_5
	local integer tuple_temp_6
	if playercolor_toInt(this_7) <= Colors_MAX_PLAYER_COLORS then
		set tempIndex = playercolor_toInt(this_7)
		set tuple_temp = Colors_PLAYER_COLORS_red[tempIndex]
		set tuple_temp_2 = Colors_PLAYER_COLORS_green[tempIndex]
		set tuple_temp_3 = Colors_PLAYER_COLORS_blue[tempIndex]
		set cond_result_red = tuple_temp
		set cond_result_green = tuple_temp_2
		set cond_result_blue = tuple_temp_3
	else
		set tuple_temp_4 = colorA_withoutAlpha(Colors_COLOR_BLACK_red, Colors_COLOR_BLACK_green, Colors_COLOR_BLACK_blue, Colors_COLOR_BLACK_alpha)
		set tuple_temp_5 = colorA_withoutAlpha_return_green
		set tuple_temp_6 = colorA_withoutAlpha_return_blue
		set cond_result_red = tuple_temp_4
		set cond_result_green = tuple_temp_5
		set cond_result_blue = tuple_temp_6
	endif
	set playercolor_toColor_return_red = cond_result_red
	set playercolor_toColor_return_green = cond_result_green
	set playercolor_toColor_return_blue = cond_result_blue
	return playercolor_toColor_return_red
endfunction

function player_getNameColored takes player this_7 returns string
	return color_toColorString(playercolor_toColor(player_getColor(this_7)), playercolor_toColor_return_green, playercolor_toColor_return_blue) + GetPlayerName(this_7) + "|r"
endfunction

function unit_getCityId takes unit this_7, string stackPos returns integer
	local integer stackTrace_tempReturn
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackTrace_tempReturn = getCityId(this_7, "when calling getCityId in UnitTools, line 9")
	set wurst_stack_depth = wurst_stack_depth - 1
	return stackTrace_tempReturn
endfunction

function CityManage_onEvent_line35 takes integer this_7, string stackPos returns nothing
	local unit u_5
	local integer city_id
	local integer u_id
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set u_5 = GetAttackedUnitBJ()
	if unit_isCity(u_5, "when calling isCity in CityManage, line 38") then
		if unit_getLifePercent(u_5) <= City_kCityLifePercentToCapture and unit_getOwner(u_5) != unit_getOwner(GetAttacker()) then
			if vec2_length(vec2_op_minus(unit_getPos(u_5), unit_getPos_return_y, unit_getPos(GetAttacker()), unit_getPos_return_y), vec2_op_minus_return_y) > 300.0 then
				call unit_setLifePercent(u_5, City_kCityLifePercentToCapture)
			else
				set city_id = unit_getCityId(u_5, "when calling getCityId in CityManage, line 43")
				set u_id = unit_getTypeId(u_5)
				if dispatch_LinkedList_LinkedList_LinkedList_has(Units_uCapitols, u_id, "when calling has in CityManage, line 45") then
					call attentionToForce(player_getNameColored(unit_getOwner(GetAttacker())) + " has just captured " + player_getNameColored(unit_getOwner(GetAttackedUnitBJ())) + " Capitol!", GetPlayersAll(), "when calling attentionToForce in CityManage, line 46")
				endif
				call dispatch_City_City_City_capture(City_cities[city_id], unit_getOwner(GetAttacker()), "when calling capture in CityManage, line 47")
			endif
		elseif unit_getLifePercent(u_5) <= City_kCityLifePercentToCapture then
			call unit_setLifePercent(u_5, City_kCityLifePercentToCapture)
		endif
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set u_5 = null
endfunction

function PlayerStats_setSelectedCityId takes integer this_7, integer c_id, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if c_id >= 0 and c_id < City_cityCount then
		set PlayerStats_selected_city_id[this_7] = c_id
		call dispatch_PlayerStats_PlayerStats_PlayerStats_refreshMultiboardCity(this_7, "when calling refreshMultiboardCity in PlayerStats, line 119")
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function dispatch_PlayerStats_PlayerStats_PlayerStats_setSelectedCityId takes integer this_7, integer c_id, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if PlayerStats_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling PlayerStats.setSelectedCityId", "when calling error in PlayerStats, line 116")
		else
			call error("Called PlayerStats.setSelectedCityId on invalid object.", "when calling error in PlayerStats, line 116")
		endif
	endif
	call PlayerStats_setSelectedCityId(this_7, c_id, "when calling setSelectedCityId in PlayerStats, line 116")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function CityManage_onEvent_line9 takes integer this_7, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if unit_isCity(GetTriggerUnit(), "when calling isCity in CityManage, line 10") then
		call dispatch_PlayerStats_PlayerStats_PlayerStats_setSelectedCityId(PlayerStats_player_stats[player_getId(GetTriggerPlayer())], getCityId(GetTriggerUnit(), "when calling getCityId in CityManage, line 11"), "when calling setSelectedCityId in CityManage, line 11")
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function unit_getLoc takes unit this_7 returns location
	return GetUnitLoc(this_7)
endfunction

function unit_getState takes unit this_7, unitstate state returns real
	return GetUnitState(this_7, state)
endfunction

function unit_getMana takes unit this_7 returns real
	return unit_getState(this_7, UNIT_STATE_MANA)
endfunction

function unit_setState takes unit this_7, unitstate state, real value returns nothing
	call SetUnitState(this_7, state, value)
endfunction

function unit_setMana takes unit this_7, real wval returns nothing
	call unit_setState(this_7, UNIT_STATE_MANA, wval)
endfunction

function City_City_onEvent_line121 takes integer this_7 returns nothing
	local unit dying_u = GetDyingUnit()
	if dying_u == City_city_unit[this_4[this_7]] then
		set City_city_unit[this_4[this_7]] = CreateUnitAtLoc(Player_players[City_player_id[this_4[this_7]]], unit_getTypeId(dying_u), unit_getLoc(dying_u), bj_UNIT_FACING)
		call SetUnitState(City_city_unit[this_4[this_7]], UNIT_STATE_LIFE, GetUnitState(City_city_unit[this_4[this_7]], UNIT_STATE_MAX_LIFE) * max_2(0., City_kCityLifePercentToCapture) * 0.01)
		call unit_setMana(City_city_unit[this_4[this_7]], unit_getMana(dying_u))
	endif
	set dying_u = null
endfunction

function getNoteStringForPlayer takes player pl, string stackPos returns string
	local integer f
	local integer r
	local string s
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set f = dispatch_PlayerStats_PlayerStats_PlayerStats_getForceId(PlayerStats_player_stats[player_getId(pl)], "when calling getForceId in Messages, line 21")
	set r = GetRandomInt(0, Strings_ksMsgCount - 1)
	if f == Forces_kWE then
		set s = Strings_ksNoteWE[r]
	elseif f == Forces_kEE then
		set s = Strings_ksNoteEE[r]
	elseif f == Forces_kME then
		set s = Strings_ksNoteME[r]
	elseif f == Forces_kBZ then
		set s = Strings_ksNoteBZ[r]
	else
		set s = Strings_ksNote[0]
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return "|cff00ccff" + s + "|r"
endfunction

function noteToPlayer takes string msg, player pl, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call DisplayTimedTextToPlayer(pl, 0., 0., Strings_kNoteDur, getNoteStringForPlayer(pl, "when calling getNoteStringForPlayer in Messages, line 82"))
	call DisplayTimedTextToPlayer(pl, 0., 0., Strings_kNoteDur, msg)
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function Clerics_onEvent_line5 takes integer this_7, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if GetSpellAbilityId() == Abilities_aConversion then
		if player_getId(unit_getOwner(GetSpellTargetUnit())) < Main_PLAYER_SLOTS then
			if dispatch_PlayerStats_PlayerStats_PlayerStats_getForceId(PlayerStats_player_stats[player_getId(unit_getOwner(GetSpellTargetUnit()))], "when calling getForceId in Clerics, line 10") == dispatch_PlayerStats_PlayerStats_PlayerStats_getForceId(PlayerStats_player_stats[player_getId(unit_getOwner(GetSpellAbilityUnit()))], "when calling getForceId in Clerics, line 10") then
				call IssueImmediateOrderById(GetSpellAbilityUnit(), 851972)
				call noteToPlayer(Strings_ksCannotConvertBelievers, unit_getOwner(GetSpellAbilityUnit()), "when calling noteToPlayer in Clerics, line 12")
			endif
		endif
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function Garissons_onEvent_line7 takes integer this_7, string stackPos returns nothing
	local unit u_5
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set u_5 = GetTriggerUnit()
	if unit_isCity(u_5, "when calling isCity in Garissons, line 9") or dispatch_LinkedList_LinkedList_LinkedList_has(Units_uCastles, unit_getTypeId(u_5), "when calling has in Garissons, line 9") and ( not player_isIngame(unit_getOwner(u_5))) then
		call IssueImmediateOrder(u_5, Abilities_oGarrison)
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set u_5 = null
endfunction

function alloc_LimitEncampments_CallbackSingle_line19 takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if CallbackSingle_firstFree == 0 then
		if CallbackSingle_maxIndex < 32768 then
			set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
			set this_7 = CallbackSingle_maxIndex
			set CallbackSingle_typeId[this_7] = 645
		else
			call error("Out of memory: Could not create LimitEncampments_CallbackSingle_line19.", "when calling error in LimitEncampments, line 19")
			set this_7 = 0
		endif
	else
		set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
		set this_7 = CallbackSingle_nextFree[CallbackSingle_firstFree]
		set CallbackSingle_typeId[this_7] = 645
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function LimitEncampments_onEvent_line12 takes integer this_7, string stackPos returns nothing
	local unit u_5
	local integer clVar
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set u_5 = GetConstructingStructure()
	if unit_getTypeId(u_5) == Units_uEncampment then
		if LimitEncampments_encampments[player_getId(unit_getOwner(u_5))] < 3 then
			set LimitEncampments_encampments[player_getId(unit_getOwner(u_5))] = LimitEncampments_encampments[player_getId(unit_getOwner(u_5))] + 1
		else
			call attentionToPlayer(Strings_ksTooManyEncampments, unit_getOwner(u_5), "when calling attentionToPlayer in LimitEncampments, line 18")
			set clVar = alloc_LimitEncampments_CallbackSingle_line19("when calling alloc_LimitEncampments_CallbackSingle_line19 in LimitEncampments, line 19")
			call construct_CallbackSingle(clVar)
			set u[clVar] = u_5
			call doAfter(0.01, clVar, "when calling doAfter in LimitEncampments, line 19")
		endif
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set u_5 = null
endfunction

function LimitEncampments_onEvent_line8 takes integer this_7 returns nothing
	local unit u_5 = GetConstructingStructure()
	if unit_getTypeId(u_5) == Units_uEncampment then
		set LimitEncampments_encampments[player_getId(unit_getOwner(u_5))] = LimitEncampments_encampments[player_getId(unit_getOwner(u_5))] - 1
	endif
	set u_5 = null
endfunction

function alloc_LimitMercenaryCamps_CallbackSingle_line19 takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if CallbackSingle_firstFree == 0 then
		if CallbackSingle_maxIndex < 32768 then
			set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
			set this_7 = CallbackSingle_maxIndex
			set CallbackSingle_typeId[this_7] = 646
		else
			call error("Out of memory: Could not create LimitMercenaryCamps_CallbackSingle_line19.", "when calling error in LimitMercenaryCamps, line 19")
			set this_7 = 0
		endif
	else
		set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
		set this_7 = CallbackSingle_nextFree[CallbackSingle_firstFree]
		set CallbackSingle_typeId[this_7] = 646
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function LimitMercenaryCamps_onEvent_line12 takes integer this_7, string stackPos returns nothing
	local unit u_5
	local integer clVar
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set u_5 = GetConstructingStructure()
	if unit_getTypeId(u_5) == Units_uMercenaryCamp then
		if LimitMercenaryCamps_mercenary_camps[player_getId(unit_getOwner(u_5))] < 3 then
			set LimitMercenaryCamps_mercenary_camps[player_getId(unit_getOwner(u_5))] = LimitMercenaryCamps_mercenary_camps[player_getId(unit_getOwner(u_5))] + 1
		else
			call attentionToPlayer(Strings_ksTooManyMercenaryCamps, unit_getOwner(u_5), "when calling attentionToPlayer in LimitMercenaryCamps, line 18")
			set clVar = alloc_LimitMercenaryCamps_CallbackSingle_line19("when calling alloc_LimitMercenaryCamps_CallbackSingle_line19 in LimitMercenaryCamps, line 19")
			call construct_CallbackSingle(clVar)
			set u_2[clVar] = u_5
			call doAfter(0.01, clVar, "when calling doAfter in LimitMercenaryCamps, line 19")
		endif
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set u_5 = null
endfunction

function LimitMercenaryCamps_onEvent_line8 takes integer this_7 returns nothing
	local unit u_5 = GetTriggerUnit()
	if unit_getTypeId(u_5) == Units_uMercenaryCamp then
		set LimitMercenaryCamps_mercenary_camps[player_getId(unit_getOwner(u_5))] = LimitMercenaryCamps_mercenary_camps[player_getId(unit_getOwner(u_5))] - 1
	endif
	set u_5 = null
endfunction

function alloc_MassControl_ForGroupCallback_line27 takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if ForGroupCallback_firstFree == 0 then
		if ForGroupCallback_maxIndex < 32768 then
			set ForGroupCallback_maxIndex = ForGroupCallback_maxIndex + 1
			set this_7 = ForGroupCallback_maxIndex
			set ForGroupCallback_typeId[this_7] = 691
		else
			call error("Out of memory: Could not create MassControl_ForGroupCallback_line27.", "when calling error in MassControl, line 27")
			set this_7 = 0
		endif
	else
		set ForGroupCallback_firstFree = ForGroupCallback_firstFree - 1
		set this_7 = ForGroupCallback_nextFree[ForGroupCallback_firstFree]
		set ForGroupCallback_typeId[this_7] = 691
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function HashMap_put takes integer this_7, integer key, integer value, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if  not dispatch_HashMap_HashMap_HashMap_has(this_7, key, "when calling has in HashMap, line 18") then
		set HashMap_size[this_7] = HashMap_size[this_7] + 1
	endif
	call dispatch_Table_Table_Table_saveInt(this_7, key, value, "when calling saveInt in HashMap, line 20")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function HashList_count takes integer this_7, integer elem returns integer
	return hashtable_loadInt(HashList_occurences, this_7, elem)
endfunction

function dispatch_HashList_HashList_HashList_count takes integer this_7, integer elem, string stackPos returns integer
	local integer HashList_HashList_count_result
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if HashList_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling HashList.count", "when calling error in HashList, line 15")
		else
			call error("Called HashList.count on invalid object.", "when calling error in HashList, line 15")
		endif
	endif
	set HashList_HashList_count_result = HashList_count(this_7, elem)
	set wurst_stack_depth = wurst_stack_depth - 1
	return HashList_HashList_count_result
endfunction

function HashList_incrOccurences takes integer this_7, integer elem, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call hashtable_saveInt(HashList_occurences, this_7, elem, dispatch_HashList_HashList_HashList_count(this_7, elem, "when calling count in HashList, line 19") + 1)
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function dispatch_HashList_HashList_HashList_incrOccurences takes integer this_7, integer elem, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if HashList_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling HashList.incrOccurences", "when calling error in HashList, line 18")
		else
			call error("Called HashList.incrOccurences on invalid object.", "when calling error in HashList, line 18")
		endif
	endif
	call HashList_incrOccurences(this_7, elem, "when calling incrOccurences in HashList, line 18")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function HashList_add_1 takes integer this_7, integer elems_0, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call hashtable_saveInt(HashList_ht, this_7, HashList_size[this_7], elems_0)
	call dispatch_HashList_HashList_HashList_incrOccurences(this_7, elems_0, "when calling incrOccurences in HashList, line 28")
	set HashList_size[this_7] = HashList_size[this_7] + 1
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function HashList_size_2 takes integer this_7 returns integer
	return HashList_size[this_7]
endfunction

function dispatch_HashList_HashList_HashList_size takes integer this_7, string stackPos returns integer
	local integer HashList_HashList_size_result
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if HashList_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling HashList.size", "when calling error in HashList, line 67")
		else
			call error("Called HashList.size on invalid object.", "when calling error in HashList, line 67")
		endif
	endif
	set HashList_HashList_size_result = HashList_size_2(this_7)
	set wurst_stack_depth = wurst_stack_depth - 1
	return HashList_HashList_size_result
endfunction

function HashSet_add_1 takes integer this_7, integer elems_0, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if dispatch_HashList_HashList_HashList_count(this_7, elems_0, "when calling count in HashSet, line 11") <= 0 then
		call hashtable_saveInt(HashSet_position, this_7, elems_0, dispatch_HashList_HashList_HashList_size(this_7, "when calling size in HashSet, line 12"))
		call HashList_add_1(this_7, elems_0, "when calling add in HashSet, line 13")
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function dispatch_HashList_HashList_HashList_add_1 takes integer this_7, integer elems_0, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if HashList_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling HashList.add", "when calling error in HashList, line 25")
		else
			call error("Called HashList.add on invalid object.", "when calling error in HashList, line 25")
		endif
	endif
	if HashList_typeId[this_7] <= 695 then
		call HashList_add_1(this_7, elems_0, "when calling add in HashList, line 25")
	else
		call HashSet_add_1(this_7, elems_0, "when calling add in HashList, line 25")
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function HashList_has takes integer this_7, integer elem, string stackPos returns boolean
	local boolean stackTrace_tempReturn
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackTrace_tempReturn = dispatch_HashList_HashList_HashList_count(this_7, elem, "when calling count in HashList, line 88") > 0
	set wurst_stack_depth = wurst_stack_depth - 1
	return stackTrace_tempReturn
endfunction

function dispatch_HashList_HashList_HashList_has takes integer this_7, integer elem, string stackPos returns boolean
	local boolean HashList_HashList_has_result
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if HashList_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling HashList.has", "when calling error in HashList, line 87")
		else
			call error("Called HashList.has on invalid object.", "when calling error in HashList, line 87")
		endif
	endif
	set HashList_HashList_has_result = HashList_has(this_7, elem, "when calling has in HashList, line 87")
	set wurst_stack_depth = wurst_stack_depth - 1
	return HashList_HashList_has_result
endfunction

function IterableMap_hasKey takes integer this_7, integer key, string stackPos returns boolean
	local boolean stackTrace_tempReturn
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackTrace_tempReturn = dispatch_HashList_HashList_HashList_has(IterableMap_keys[this_7], key, "when calling has in HashMap, line 88")
	set wurst_stack_depth = wurst_stack_depth - 1
	return stackTrace_tempReturn
endfunction

function dispatch_IterableMap_HashMap_IterableMap_hasKey takes integer this_7, integer key, string stackPos returns boolean
	local boolean HashMap_IterableMap_hasKey_result
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if Table_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling IterableMap.hasKey", "when calling error in HashMap, line 87")
		else
			call error("Called IterableMap.hasKey on invalid object.", "when calling error in HashMap, line 87")
		endif
	endif
	set HashMap_IterableMap_hasKey_result = IterableMap_hasKey(this_7, key, "when calling hasKey in HashMap, line 87")
	set wurst_stack_depth = wurst_stack_depth - 1
	return HashMap_IterableMap_hasKey_result
endfunction

function IterableMap_put takes integer this_7, integer key, integer value, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call HashMap_put(this_7, key, value, "when calling put in HashMap, line 60")
	if  not dispatch_IterableMap_HashMap_IterableMap_hasKey(this_7, key, "when calling hasKey in HashMap, line 61") then
		call dispatch_HashList_HashList_HashList_add_1(IterableMap_keys[this_7], key, "when calling add in HashMap, line 62")
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function dispatch_HashMap_HashMap_HashMap_put takes integer this_7, integer key, integer value, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if Table_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling HashMap.put", "when calling error in HashMap, line 17")
		else
			call error("Called HashMap.put on invalid object.", "when calling error in HashMap, line 17")
		endif
	endif
	if Table_typeId[this_7] <= 733 then
		call HashMap_put(this_7, key, value, "when calling put in HashMap, line 17")
	else
		call IterableMap_put(this_7, key, value, "when calling put in HashMap, line 17")
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function MassControl_onEvent_line22 takes integer this_7, string stackPos returns nothing
	local integer g_2
	local unit caster_2
	local player caster_owner_2
	local integer clVar
	local real temp_x
	local real temp_y
	local real temp
	local real tuple_temp
	local real tuple_temp_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if GetSpellAbilityId() == Abilities_aMassCommand then
		set g_2 = new_LinkedList("when calling new_LinkedList in MassControl, line 24")
		set caster_2 = GetSpellAbilityUnit()
		set caster_owner_2 = unit_getOwner(caster_2)
		set tuple_temp = getSpellTargetPos()
		set tuple_temp_2 = getSpellTargetPos_return_y
		set temp_x = tuple_temp
		set temp_y = tuple_temp_2
		set temp = realFromIndex(dispatch_LinkedList_LinkedList_LinkedList_get(MassControl_kMassControlRanges, GetLearnedSkillLevel(), "when calling get in MassControl, line 27"))
		set clVar = alloc_MassControl_ForGroupCallback_line27("when calling alloc_MassControl_ForGroupCallback_line27 in MassControl, line 27")
		set caster_owner[clVar] = caster_owner_2
		set caster[clVar] = caster_2
		set g[clVar] = g_2
		call forUnitsInRange(temp_x, temp_y, temp, clVar, "when calling forUnitsInRange in MassControl, line 27")
		call dispatch_HashMap_HashMap_HashMap_put(MassControl_units_of_general, unitToIndex(caster_2), g_2, "when calling put in MassControl, line 30")
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set caster_2 = null
	set caster_owner_2 = null
endfunction

function alloc_MassControl_CallbackSingle_line39 takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if CallbackSingle_firstFree == 0 then
		if CallbackSingle_maxIndex < 32768 then
			set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
			set this_7 = CallbackSingle_maxIndex
			set CallbackSingle_typeId[this_7] = 647
		else
			call error("Out of memory: Could not create MassControl_CallbackSingle_line39.", "when calling error in MassControl, line 39")
			set this_7 = 0
		endif
	else
		set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
		set this_7 = CallbackSingle_nextFree[CallbackSingle_firstFree]
		set CallbackSingle_typeId[this_7] = 647
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function Table_removeInt takes integer this_7, integer parentKey returns nothing
	call RemoveSavedInteger(Table_ht, this_7, parentKey)
endfunction

function dispatch_Table_Table_Table_removeInt takes integer this_7, integer parentKey, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if Table_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling Table.removeInt", "when calling error in Table, line 24")
		else
			call error("Called Table.removeInt on invalid object.", "when calling error in Table, line 24")
		endif
	endif
	call Table_removeInt(this_7, parentKey)
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function HashMap_remove takes integer this_7, integer key, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if dispatch_HashMap_HashMap_HashMap_has(this_7, key, "when calling has in HashMap, line 28") then
		set HashMap_size[this_7] = HashMap_size[this_7] - 1
	endif
	call dispatch_Table_Table_Table_removeInt(this_7, key, "when calling removeInt in HashMap, line 30")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function HashList_decrOccurences takes integer this_7, integer elem, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call hashtable_saveInt(HashList_occurences, this_7, elem, dispatch_HashList_HashList_HashList_count(this_7, elem, "when calling count in HashList, line 22") - 1)
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function dispatch_HashList_HashList_HashList_decrOccurences takes integer this_7, integer elem, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if HashList_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling HashList.decrOccurences", "when calling error in HashList, line 21")
		else
			call error("Called HashList.decrOccurences on invalid object.", "when calling error in HashList, line 21")
		endif
	endif
	call HashList_decrOccurences(this_7, elem, "when calling decrOccurences in HashList, line 21")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function HashList_removeAt takes integer this_7, integer index, string stackPos returns nothing
	local integer i_2
	local integer temp
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call dispatch_HashList_HashList_HashList_decrOccurences(this_7, hashtable_loadInt(HashList_ht, this_7, index), "when calling decrOccurences in HashList, line 54")
	set i_2 = index
	set temp = HashList_size[this_7]
	loop
		exitwhen i_2 > temp
		call hashtable_saveInt(HashList_ht, this_7, i_2, hashtable_loadInt(HashList_ht, this_7, i_2 + 1))
		set i_2 = i_2 + 1
	endloop
	set HashList_size[this_7] = HashList_size[this_7] - 1
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function HashList_get takes integer this_7, integer index returns integer
	return hashtable_loadInt(HashList_ht, this_7, index)
endfunction

function dispatch_HashList_HashList_HashList_get takes integer this_7, integer index, string stackPos returns integer
	local integer HashList_HashList_get_result
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if HashList_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling HashList.get", "when calling error in HashList, line 79")
		else
			call error("Called HashList.get on invalid object.", "when calling error in HashList, line 79")
		endif
	endif
	set HashList_HashList_get_result = HashList_get(this_7, index)
	set wurst_stack_depth = wurst_stack_depth - 1
	return HashList_HashList_get_result
endfunction

function hashtable_removeInt takes hashtable this_7, integer parentKey, integer childKey returns nothing
	call RemoveSavedInteger(this_7, parentKey, childKey)
endfunction

function HashSet_removeAt takes integer this_7, integer index, string stackPos returns nothing
	local integer i_2
	local integer temp
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call hashtable_removeInt(HashSet_position, this_7, dispatch_HashList_HashList_HashList_get(this_7, index, "when calling get in HashSet, line 22"))
	set i_2 = index + 1
	set temp = dispatch_HashList_HashList_HashList_size(this_7, "when calling size in HashSet, line 23")
	loop
		exitwhen i_2 > temp
		call hashtable_saveInt(HashSet_position, this_7, dispatch_HashList_HashList_HashList_get(this_7, i_2, "when calling get in HashSet, line 24"), hashtable_loadInt(HashSet_position, this_7, dispatch_HashList_HashList_HashList_get(this_7, i_2, "when calling get in HashSet, line 24")) - 1)
		set i_2 = i_2 + 1
	endloop
	call HashList_removeAt(this_7, index, "when calling removeAt in HashSet, line 25")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function dispatch_HashList_HashList_HashList_removeAt takes integer this_7, integer index, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if HashList_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling HashList.removeAt", "when calling error in HashList, line 53")
		else
			call error("Called HashList.removeAt on invalid object.", "when calling error in HashList, line 53")
		endif
	endif
	if HashList_typeId[this_7] <= 695 then
		call HashList_removeAt(this_7, index, "when calling removeAt in HashList, line 53")
	else
		call HashSet_removeAt(this_7, index, "when calling removeAt in HashList, line 53")
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function HashList_remove takes integer this_7, integer t, string stackPos returns nothing
	local integer i_2
	local integer temp
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set i_2 = 0
	set temp = HashList_size[this_7] - 1
	loop
		exitwhen i_2 > temp
		if t == hashtable_loadInt(HashList_ht, this_7, i_2) then
			call dispatch_HashList_HashList_HashList_removeAt(this_7, i_2, "when calling removeAt in HashList, line 63")
			exitwhen true
		endif
		set i_2 = i_2 + 1
	endloop
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function dispatch_HashSet_HashSet_HashSet_removeAt takes integer this_7, integer index, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if HashList_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling HashSet.removeAt", "when calling error in HashSet, line 21")
		else
			call error("Called HashSet.removeAt on invalid object.", "when calling error in HashSet, line 21")
		endif
	endif
	call HashSet_removeAt(this_7, index, "when calling removeAt in HashSet, line 21")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function HashSet_remove takes integer this_7, integer elem, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if dispatch_HashList_HashList_HashList_count(this_7, elem, "when calling count in HashSet, line 17") > 0 then
		call dispatch_HashSet_HashSet_HashSet_removeAt(this_7, hashtable_loadInt(HashSet_position, this_7, elem), "when calling removeAt in HashSet, line 18")
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function dispatch_HashList_HashList_HashList_remove takes integer this_7, integer t, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if HashList_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling HashList.remove", "when calling error in HashList, line 60")
		else
			call error("Called HashList.remove on invalid object.", "when calling error in HashList, line 60")
		endif
	endif
	if HashList_typeId[this_7] <= 695 then
		call HashList_remove(this_7, t, "when calling remove in HashList, line 60")
	else
		call HashSet_remove(this_7, t, "when calling remove in HashList, line 60")
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function IterableMap_remove takes integer this_7, integer key, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call HashMap_remove(this_7, key, "when calling remove in HashMap, line 66")
	if dispatch_IterableMap_HashMap_IterableMap_hasKey(this_7, key, "when calling hasKey in HashMap, line 67") then
		call dispatch_HashList_HashList_HashList_remove(IterableMap_keys[this_7], key, "when calling remove in HashMap, line 68")
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function dispatch_HashMap_HashMap_HashMap_remove takes integer this_7, integer key, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if Table_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling HashMap.remove", "when calling error in HashMap, line 27")
		else
			call error("Called HashMap.remove on invalid object.", "when calling error in HashMap, line 27")
		endif
	endif
	if Table_typeId[this_7] <= 733 then
		call HashMap_remove(this_7, key, "when calling remove in HashMap, line 27")
	else
		call IterableMap_remove(this_7, key, "when calling remove in HashMap, line 27")
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function getOrderPos takes nothing returns real
	set getOrderPos_return_x = GetOrderPointX()
	set getOrderPos_return_y = GetOrderPointY()
	return getOrderPos_return_x
endfunction

function hashtable_loadUnitHandle takes hashtable this_7, integer parentKey, integer childKey returns unit
	return LoadUnitHandle(this_7, parentKey, childKey)
endfunction

function Table_loadUnit takes integer this_7, integer parentKey returns unit
	return hashtable_loadUnitHandle(Table_ht, this_7, parentKey)
endfunction

function dispatch_Table_Table_Table_loadUnit takes integer this_7, integer parentKey, string stackPos returns unit
	local unit Table_Table_loadUnit_result
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if Table_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling Table.loadUnit", "when calling error in Table, line 75")
		else
			call error("Called Table.loadUnit on invalid object.", "when calling error in Table, line 75")
		endif
	endif
	set Table_Table_loadUnit_result = Table_loadUnit(this_7, parentKey)
	set wurst_stack_depth = wurst_stack_depth - 1
	set dispatch_Table_Table_Table_loadUnittempReturn = Table_Table_loadUnit_result
	set Table_Table_loadUnit_result = null
	return dispatch_Table_Table_Table_loadUnittempReturn
endfunction

function hashtable_saveFogStateHandle takes hashtable this_7, integer parentKey, integer childKey, fogstate value returns nothing
	call SaveFogStateHandle(this_7, parentKey, childKey, value)
endfunction

function Table_saveFogState takes integer this_7, integer parentKey, fogstate value returns nothing
	call hashtable_saveFogStateHandle(Table_ht, this_7, parentKey, value)
endfunction

function dispatch_Table_Table_Table_saveFogState takes integer this_7, integer parentKey, fogstate value, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if Table_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling Table.saveFogState", "when calling error in Table, line 168")
		else
			call error("Called Table.saveFogState on invalid object.", "when calling error in Table, line 168")
		endif
	endif
	call Table_saveFogState(this_7, parentKey, value)
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function unitFromIndex takes integer index, string stackPos returns unit
	local unit stackTrace_tempReturn
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call dispatch_Table_Table_Table_saveFogState(TypeCasting_typecastdata, 0, ConvertFogState(index), "when calling saveFogState in TypeCasting, line 52")
	set stackTrace_tempReturn = dispatch_Table_Table_Table_loadUnit(TypeCasting_typecastdata, 0, "when calling loadUnit in TypeCasting, line 53")
	set wurst_stack_depth = wurst_stack_depth - 1
	set unitFromIndextempReturn = stackTrace_tempReturn
	set stackTrace_tempReturn = null
	return unitFromIndextempReturn
endfunction

function MassControl_onEvent_line32 takes integer this_7, string stackPos returns nothing
	local integer g_2
	local integer order_2
	local real pos_x_2
	local real pos_y_2
	local integer iterator
	local unit u_5
	local integer clVar
	local real tuple_temp
	local real tuple_temp_2
	local real tuple_temp_3
	local real tuple_temp_4
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if dispatch_LinkedList_LinkedList_LinkedList_has(MassControl_uGenerals, unit_getTypeId(GetOrderedUnit()), "when calling has in MassControl, line 33") then
		if dispatch_HashMap_HashMap_HashMap_has(MassControl_units_of_general, unitToIndex(GetOrderedUnit()), "when calling has in MassControl, line 34") then
			set g_2 = dispatch_HashMap_HashMap_HashMap_get(MassControl_units_of_general, unitToIndex(GetOrderedUnit()), "when calling get in MassControl, line 35")
			set order_2 = GetIssuedOrderId()
			set tuple_temp = getOrderPos()
			set tuple_temp_2 = getOrderPos_return_y
			set pos_x_2 = tuple_temp
			set pos_y_2 = tuple_temp_2
			set iterator = LinkedList_iterator(g_2, "when calling iterator in MassControl, line 38")
			loop
				exitwhen  not LLIterator_hasNext(iterator)
				set u_5 = unitFromIndex(LLIterator_next(iterator), "when calling unitFromIndex in MassControl, line 38")
				set clVar = alloc_MassControl_CallbackSingle_line39("when calling alloc_MassControl_CallbackSingle_line39 in MassControl, line 39")
				call construct_CallbackSingle(clVar)
				set u_3[clVar] = u_5
				set order[clVar] = order_2
				set tuple_temp_3 = pos_x_2
				set tuple_temp_4 = pos_y_2
				set pos_x[clVar] = tuple_temp_3
				set pos_y[clVar] = tuple_temp_4
				call doAfter(0.01, clVar, "when calling doAfter in MassControl, line 39")
			endloop
			call LLIterator_close(iterator, "when calling close in MassControl, line 38")
			call dispatch_HashMap_HashMap_HashMap_remove(MassControl_units_of_general, unitToIndex(GetOrderedUnit()), "when calling remove in MassControl, line 42")
		endif
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set u_5 = null
endfunction

function alloc_NoShipsNearRivers_CallbackSingle_line14 takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if CallbackSingle_firstFree == 0 then
		if CallbackSingle_maxIndex < 32768 then
			set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
			set this_7 = CallbackSingle_maxIndex
			set CallbackSingle_typeId[this_7] = 649
		else
			call error("Out of memory: Could not create NoShipsNearRivers_CallbackSingle_line14.", "when calling error in NoShipsNearRivers, line 14")
			set this_7 = 0
		endif
	else
		set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
		set this_7 = CallbackSingle_nextFree[CallbackSingle_firstFree]
		set CallbackSingle_typeId[this_7] = 649
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function hashtable_loadRectHandle takes hashtable this_7, integer parentKey, integer childKey returns rect
	return LoadRectHandle(this_7, parentKey, childKey)
endfunction

function Table_loadRect takes integer this_7, integer parentKey returns rect
	return hashtable_loadRectHandle(Table_ht, this_7, parentKey)
endfunction

function dispatch_Table_Table_Table_loadRect takes integer this_7, integer parentKey, string stackPos returns rect
	local rect Table_Table_loadRect_result
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if Table_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling Table.loadRect", "when calling error in Table, line 147")
		else
			call error("Called Table.loadRect on invalid object.", "when calling error in Table, line 147")
		endif
	endif
	set Table_Table_loadRect_result = Table_loadRect(this_7, parentKey)
	set wurst_stack_depth = wurst_stack_depth - 1
	set dispatch_Table_Table_Table_loadRecttempReturn = Table_Table_loadRect_result
	set Table_Table_loadRect_result = null
	return dispatch_Table_Table_Table_loadRecttempReturn
endfunction

function rectFromIndex takes integer index, string stackPos returns rect
	local rect stackTrace_tempReturn
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call dispatch_Table_Table_Table_saveFogState(TypeCasting_typecastdata, 0, ConvertFogState(index), "when calling saveFogState in TypeCasting, line 136")
	set stackTrace_tempReturn = dispatch_Table_Table_Table_loadRect(TypeCasting_typecastdata, 0, "when calling loadRect in TypeCasting, line 137")
	set wurst_stack_depth = wurst_stack_depth - 1
	set rectFromIndextempReturn = stackTrace_tempReturn
	set stackTrace_tempReturn = null
	return rectFromIndextempReturn
endfunction

function rect_getMaxX takes rect this_7 returns real
	return GetRectMaxX(this_7)
endfunction

function rect_getMaxY takes rect this_7 returns real
	return GetRectMaxY(this_7)
endfunction

function rect_getMinX takes rect this_7 returns real
	return GetRectMinX(this_7)
endfunction

function rect_getMinY takes rect this_7 returns real
	return GetRectMinY(this_7)
endfunction

function rect_contains takes rect this_7, real r_x, real r_y returns boolean
	return r_x > rect_getMinX(this_7) and r_x < rect_getMaxX(this_7) and r_y > rect_getMinY(this_7) and r_y < rect_getMaxY(this_7)
endfunction

function NoShipsNearRivers_onEvent_line7 takes integer this_7, string stackPos returns nothing
	local unit u_5
	local real upos_x
	local real upos_y
	local integer iterator
	local rect r
	local integer clVar
	local real tuple_temp
	local real tuple_temp_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set u_5 = GetTriggerUnit()
	if unit_getTypeId(u_5) == Units_uShipyard then
		set tuple_temp = unit_getPos(u_5)
		set tuple_temp_2 = unit_getPos_return_y
		set upos_x = tuple_temp
		set upos_y = tuple_temp_2
		set iterator = LinkedList_iterator(Units_kRiverRects, "when calling iterator in NoShipsNearRivers, line 11")
		loop
			exitwhen  not LLIterator_hasNext(iterator)
			set r = rectFromIndex(LLIterator_next(iterator), "when calling rectFromIndex in NoShipsNearRivers, line 11")
			if rect_contains(r, upos_x, upos_y) then
				set clVar = alloc_NoShipsNearRivers_CallbackSingle_line14("when calling alloc_NoShipsNearRivers_CallbackSingle_line14 in NoShipsNearRivers, line 14")
				call construct_CallbackSingle(clVar)
				set u_4[clVar] = u_5
				call doAfter(0.01, clVar, "when calling doAfter in NoShipsNearRivers, line 14")
				call attentionToPlayer(Strings_ksShipyardNearRiver, unit_getOwner(u_5), "when calling attentionToPlayer in NoShipsNearRivers, line 16")
			endif
		endloop
		call LLIterator_close(iterator, "when calling close in NoShipsNearRivers, line 11")
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set u_5 = null
	set r = null
endfunction

function dispatch_HashSet_HashSet_HashSet_add_1 takes integer this_7, integer elems_0, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if HashList_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling HashSet.add", "when calling error in HashSet, line 9")
		else
			call error("Called HashSet.add on invalid object.", "when calling error in HashSet, line 9")
		endif
	endif
	call HashSet_add_1(this_7, elems_0, "when calling add in HashSet, line 9")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function dispatch_HashSet_HashSet_HashSet_remove takes integer this_7, integer elem, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if HashList_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling HashSet.remove", "when calling error in HashSet, line 16")
		else
			call error("Called HashSet.remove on invalid object.", "when calling error in HashSet, line 16")
		endif
	endif
	call HashSet_remove(this_7, elem, "when calling remove in HashSet, line 16")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function unit_hasAbility takes unit this_7, integer id returns boolean
	return GetUnitAbilityLevel(this_7, id) > 0
endfunction

function unit_removeAbility takes unit this_7, integer abil returns boolean
	return UnitRemoveAbility(this_7, abil)
endfunction

function NoStarvationOnBoat_onEvent_line9 takes integer this_7, string stackPos returns nothing
	local unit u_5
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set u_5 = GetOrderedUnit()
	if GetIssuedOrderId() == 852056 and unit_hasAbility(u_5, Abilities_aUnitHunger) then
		call unit_removeAbility(u_5, Abilities_aUnitHunger)
		call dispatch_HashSet_HashSet_HashSet_add_1(NoStarvationOnBoat_unitsRemovedHunger, unitToIndex(u_5), "when calling add in NoStarvationOnBoat, line 14")
	endif
	if GetIssuedOrderId() == 851972 and dispatch_HashList_HashList_HashList_has(NoStarvationOnBoat_unitsRemovedHunger, unitToIndex(u_5), "when calling has in NoStarvationOnBoat, line 16") then
		call unit_addAbility(GetOrderedUnit(), Abilities_aUnitHunger)
		call dispatch_HashSet_HashSet_HashSet_remove(NoStarvationOnBoat_unitsRemovedHunger, unitToIndex(u_5), "when calling remove in NoStarvationOnBoat, line 18")
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set u_5 = null
endfunction

function PlayerStats_setInGame takes integer this_7, boolean flag returns nothing
	set PlayerStats_is_in_game[this_7] = flag
endfunction

function dispatch_PlayerStats_PlayerStats_PlayerStats_setInGame takes integer this_7, boolean flag, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if PlayerStats_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling PlayerStats.setInGame", "when calling error in PlayerStats, line 45")
		else
			call error("Called PlayerStats.setInGame on invalid object.", "when calling error in PlayerStats, line 45")
		endif
	endif
	call PlayerStats_setInGame(this_7, flag)
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function player_getName takes player this_7 returns string
	return GetPlayerName(this_7)
endfunction

function player_setName takes player this_7, string name returns nothing
	call SetPlayerName(this_7, name)
endfunction

function OnPlayerLeave_onEvent_line5 takes integer this_7, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call textToAll(player_getNameColored(GetTriggerPlayer()) + " has left the game!", 5.0)
	call dispatch_PlayerStats_PlayerStats_PlayerStats_setInGame(PlayerStats_player_stats[GetPlayerId(GetTriggerPlayer())], false, "when calling setInGame in OnPlayerLeave, line 7")
	call player_setName(GetTriggerPlayer(), player_getName(GetTriggerPlayer()) + " [LEFT]")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function OreCapture_onEvent_line14 takes integer this_7, string stackPos returns nothing
	local unit u_5
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if dispatch_LinkedList_LinkedList_LinkedList_has(Units_uMines, unit_getTypeId(GetTriggerUnit()), "when calling has in OreCapture, line 15") then
		set u_5 = GetTriggerUnit()
		set Economy_gold_adder[player_getId(unit_getOwner(u_5))] = Economy_gold_adder[player_getId(unit_getOwner(u_5))] + dispatch_HashMap_HashMap_HashMap_get(Units_usIncomeOres, unit_getTypeId(u_5), "when calling get in OreCapture, line 19")
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set u_5 = null
endfunction

function OreCapture_onEvent_line21 takes integer this_7, string stackPos returns nothing
	local unit u_5
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if dispatch_LinkedList_LinkedList_LinkedList_has(Units_uMines, unit_getTypeId(GetAttackedUnitBJ()), "when calling has in OreCapture, line 22") then
		set u_5 = GetAttackedUnitBJ()
		if unit_getLifePercent(u_5) <= OreCapture_kLifePercentToCapture then
			call unit_setOwner(u_5, unit_getOwner(GetAttacker()), true)
			call unit_setLifePercent(u_5, 100.0)
			set Economy_gold_adder[player_getId(unit_getOwner(u_5))] = Economy_gold_adder[player_getId(unit_getOwner(u_5))] - dispatch_HashMap_HashMap_HashMap_get(Units_usIncomeOres, unit_getTypeId(u_5), "when calling get in OreCapture, line 29")
			set Economy_gold_adder[player_getId(unit_getOwner(GetAttacker()))] = Economy_gold_adder[player_getId(unit_getOwner(GetAttacker()))] + dispatch_HashMap_HashMap_HashMap_get(Units_usIncomeOres, unit_getTypeId(u_5), "when calling get in OreCapture, line 30")
		endif
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set u_5 = null
endfunction

function OreCapture_onEvent_line9 takes integer this_7, string stackPos returns nothing
	local unit u_5
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if dispatch_LinkedList_LinkedList_LinkedList_has(Units_uMines, unit_getTypeId(GetDyingUnit()), "when calling has in OreCapture, line 10") then
		set u_5 = GetTriggerUnit()
		call CreateUnitAtLoc(unit_getOwner(u_5), unit_getTypeId(u_5), unit_getLoc(u_5), bj_UNIT_FACING)
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set u_5 = null
endfunction

function alloc_RangeChecks_CallbackSingle_line23 takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if CallbackSingle_firstFree == 0 then
		if CallbackSingle_maxIndex < 32768 then
			set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
			set this_7 = CallbackSingle_maxIndex
			set CallbackSingle_typeId[this_7] = 652
		else
			call error("Out of memory: Could not create RangeChecks_CallbackSingle_line23.", "when calling error in RangeChecks, line 23")
			set this_7 = 0
		endif
	else
		set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
		set this_7 = CallbackSingle_nextFree[CallbackSingle_firstFree]
		set CallbackSingle_typeId[this_7] = 652
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function group_close takes group this_7 returns nothing
	call group_clear(this_7)
	call group_destr(this_7)
endfunction

function group_iterator takes group this_7 returns group
	set Group_iterGroup = CreateGroup()
	call ForGroup(this_7, ref_function_Group_closure_impl)
	return Group_iterGroup
endfunction

function unit_getDistance takes unit this_7, unit other returns real
	return vec2_length(vec2_op_minus(unit_getPos(this_7), unit_getPos_return_y, unit_getPos(other), unit_getPos_return_y), vec2_op_minus_return_y)
endfunction

function RangeChecks_onEvent_line11 takes integer this_7, string stackPos returns nothing
	local unit un_2
	local integer un_id
	local player pl
	local group g_2
	local group iterator
	local unit u_5
	local integer clVar
	local integer temp
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set un_2 = GetTriggerUnit()
	set un_id = unit_getTypeId(un_2)
	if dispatch_LinkedList_LinkedList_LinkedList_has(RangeChecks_kUnitsToCheck, un_id, "when calling has in RangeChecks, line 14") then
		set pl = unit_getOwner(un_2)
		set g_2 = GetUnitsInRangeOfLocAll(RangeChecks_kBuildingCheckRange, unit_getLoc(un_2))
		set iterator = group_iterator(g_2)
		loop
			exitwhen  not group_hasNext(iterator)
			set u_5 = group_next(iterator)
			if unit_getOwner(u_5) == pl and u_5 != un_2 and (unit_getTypeId(u_5) == un_id and unit_getDistance(u_5, un_2) <= RangeChecks_kBuildingCheckRange * 0.75) or (dispatch_LinkedList_LinkedList_LinkedList_has(Units_uCastles, un_id, "when calling has in RangeChecks, line 21") and dispatch_LinkedList_LinkedList_LinkedList_has(Units_uCastles, unit_getTypeId(u_5), "when calling has in RangeChecks, line 21")) then
				set clVar = alloc_RangeChecks_CallbackSingle_line23("when calling alloc_RangeChecks_CallbackSingle_line23 in RangeChecks, line 23")
				call construct_CallbackSingle(clVar)
				set un[clVar] = un_2
				call doAfter(0.01, clVar, "when calling doAfter in RangeChecks, line 23")
				set temp = un_id
				if temp == Units_uSettlement then
					call attentionToPlayer(Strings_ksTooCloseSettlement, pl, "when calling attentionToPlayer in RangeChecks, line 27")
				elseif temp == Units_uSettlementBZ then
					call attentionToPlayer(Strings_ksTooCloseSettlement, pl, "when calling attentionToPlayer in RangeChecks, line 29")
				elseif temp == Units_uSettlementEE then
					call attentionToPlayer(Strings_ksTooCloseSettlement, pl, "when calling attentionToPlayer in RangeChecks, line 31")
				elseif temp == Units_uChurchBZ then
					call attentionToPlayer(Strings_ksTooCloseChurchBZ, pl, "when calling attentionToPlayer in RangeChecks, line 33")
				elseif temp == Units_uChurchEE then
					call attentionToPlayer(Strings_ksTooCloseChurchEE, pl, "when calling attentionToPlayer in RangeChecks, line 35")
				elseif temp == Units_uChurchWE then
					call attentionToPlayer(Strings_ksTooCloseChurchWE, pl, "when calling attentionToPlayer in RangeChecks, line 37")
				elseif temp == Units_uMosque then
					call attentionToPlayer(Strings_ksTooCloseMosque, pl, "when calling attentionToPlayer in RangeChecks, line 39")
				elseif temp == Units_uCastleWE1 then
					call attentionToPlayer(Strings_ksTooCloseCastle, pl, "when calling attentionToPlayer in RangeChecks, line 41")
				elseif temp == Units_uCastleME1 then
					call attentionToPlayer(Strings_ksTooCloseCastle, pl, "when calling attentionToPlayer in RangeChecks, line 43")
				elseif temp == Units_uCastleEE1 then
					call attentionToPlayer(Strings_ksTooCloseCastle, pl, "when calling attentionToPlayer in RangeChecks, line 45")
				elseif temp == Units_uCastleBZ1 then
					call attentionToPlayer(Strings_ksTooCloseCastle, pl, "when calling attentionToPlayer in RangeChecks, line 47")
				elseif temp == Units_uInn then
					call attentionToPlayer(Strings_ksTooCloseInn, pl, "when calling attentionToPlayer in RangeChecks, line 49")
				elseif temp == Units_uInnEE then
					call attentionToPlayer(Strings_ksTooCloseInn, pl, "when calling attentionToPlayer in RangeChecks, line 51")
				endif
				exitwhen true
			endif
		endloop
		call group_close(iterator)
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set un_2 = null
	set pl = null
	set g_2 = null
	set iterator = null
	set u_5 = null
endfunction

function City_changeTaxLevel takes integer this_7, integer lvl, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if getElapsedTime() - City_last_time_tax_level_changed[this_7] >= City_kCityTaxLevelTimeToChange then
		set City_last_time_tax_level_changed[this_7] = getElapsedTime()
		set City_public_order_add[this_7] = City_public_order_add[this_7] - City_kCityTaxLevelPOIncrease[City_tax_level[this_7]]
		set City_public_order_add[this_7] = City_public_order_add[this_7] + City_kCityTaxLevelPOIncrease[lvl]
		set City_tax_level[this_7] = lvl
	else
		call noteToPlayer(Strings_ksCannotChangeTaxLevel, Player_players[City_player_id[this_7]], "when calling noteToPlayer in City, line 271")
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function dispatch_City_City_City_changeTaxLevel takes integer this_7, integer lvl, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if City_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling City.changeTaxLevel", "when calling error in City, line 262")
		else
			call error("Called City.changeTaxLevel on invalid object.", "when calling error in City, line 262")
		endif
	endif
	call City_changeTaxLevel(this_7, lvl, "when calling changeTaxLevel in City, line 262")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function Taxation_onEvent_line6 takes integer this_7, string stackPos returns nothing
	local integer lvl
	local integer temp
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if dispatch_LinkedList_LinkedList_LinkedList_has(Abilities_aTaxes, GetSpellAbilityId(), "when calling has in Taxation, line 7") then
		if isCity(GetSpellTargetUnit(), "when calling isCity in Taxation, line 8") then
			if unit_getOwner(GetSpellTargetUnit()) == unit_getOwner(GetSpellAbilityUnit()) then
				set lvl = 0
				set temp = GetSpellAbilityId()
				if temp == Abilities_aLowTax then
					set lvl = 1
				elseif temp == Abilities_aMedTax then
					set lvl = 0
				elseif temp == Abilities_aHighTax then
					set lvl = 2
				elseif temp == Abilities_aHarshTax then
					set lvl = 3
				endif
				call dispatch_City_City_City_changeTaxLevel(City_cities[getCityId(GetSpellTargetUnit(), "when calling getCityId in Taxation, line 20")], lvl, "when calling changeTaxLevel in Taxation, line 20")
			endif
		endif
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function PlayerStats_changeUpkeep takes integer this_7, integer byHowMuch returns nothing
	set PlayerStats_upkeep[this_7] = PlayerStats_upkeep[this_7] + byHowMuch
endfunction

function dispatch_PlayerStats_PlayerStats_PlayerStats_changeUpkeep takes integer this_7, integer byHowMuch, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if PlayerStats_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling PlayerStats.changeUpkeep", "when calling error in PlayerStats, line 51")
		else
			call error("Called PlayerStats.changeUpkeep on invalid object.", "when calling error in PlayerStats, line 51")
		endif
	endif
	call PlayerStats_changeUpkeep(this_7, byHowMuch)
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function Upkeep_onEvent_line28 takes integer this_7, string stackPos returns nothing
	local unit u_5
	local integer player_id
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set u_5 = GetDyingUnit()
	set player_id = player_getId(unit_getOwner(u_5))
	if player_isIngame(Player_players[player_id]) and ( not IsUnitType(u_5, UNIT_TYPE_STRUCTURE)) then
		call dispatch_PlayerStats_PlayerStats_PlayerStats_changeUpkeep(PlayerStats_player_stats[player_id], GetUnitLevel(u_5), "when calling changeUpkeep in Upkeep, line 32")
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set u_5 = null
endfunction

function Upkeep_onEvent_line6 takes integer this_7, string stackPos returns nothing
	local unit u1
	local unit u2
	local integer player_id1
	local integer player_id2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if GetSpellAbilityId() == Abilities_aConversion then
		set u1 = GetSpellAbilityUnit()
		set u2 = GetSpellTargetUnit()
		set player_id1 = player_getId(unit_getOwner(u1))
		set player_id2 = player_getId(unit_getOwner(u2))
		if player_isIngame(Player_players[player_id1]) then
			call dispatch_PlayerStats_PlayerStats_PlayerStats_changeUpkeep(PlayerStats_player_stats[player_id1],  - GetUnitLevel(u2), "when calling changeUpkeep in Upkeep, line 15")
		endif
		if player_isIngame(Player_players[player_id2]) then
			call dispatch_PlayerStats_PlayerStats_PlayerStats_changeUpkeep(PlayerStats_player_stats[player_id2], GetUnitLevel(u2), "when calling changeUpkeep in Upkeep, line 17")
		endif
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set u1 = null
	set u2 = null
endfunction

function dispatch_EventListener_ClosureEvents_EventListener_onEvent takes integer this_7, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if EventListener_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling EventListener.onEvent", "when calling error in ClosureEvents, line 109")
		else
			call error("Called EventListener.onEvent on invalid object.", "when calling error in ClosureEvents, line 109")
		endif
	endif
	if EventListener_typeId[this_7] <= 673 then
		if EventListener_typeId[this_7] <= 667 then
			if EventListener_typeId[this_7] <= 664 then
				if EventListener_typeId[this_7] <= 663 then
					if EventListener_typeId[this_7] <= 662 then
						call CastleCapture_onEvent_line8(this_7, "when calling CastleCapture_onEvent_line8 in ClosureEvents, line 109")
					else
						call CityBuilded_onEvent_line9(this_7, "when calling CityBuilded_onEvent_line9 in ClosureEvents, line 109")
					endif
				else
					call CityManage_onEvent_line35(this_7, "when calling CityManage_onEvent_line35 in ClosureEvents, line 109")
				endif
			elseif EventListener_typeId[this_7] <= 666 then
				if EventListener_typeId[this_7] <= 665 then
					call CityManage_onEvent_line9(this_7, "when calling CityManage_onEvent_line9 in ClosureEvents, line 109")
				else
					call City_City_onEvent_line121(this_7)
				endif
			else
				call Clerics_onEvent_line5(this_7, "when calling Clerics_onEvent_line5 in ClosureEvents, line 109")
			endif
		elseif EventListener_typeId[this_7] <= 670 then
			if EventListener_typeId[this_7] <= 669 then
				if EventListener_typeId[this_7] <= 668 then
					call Garissons_onEvent_line7(this_7, "when calling Garissons_onEvent_line7 in ClosureEvents, line 109")
				else
					call LimitEncampments_onEvent_line12(this_7, "when calling LimitEncampments_onEvent_line12 in ClosureEvents, line 109")
				endif
			else
				call LimitEncampments_onEvent_line8(this_7)
			endif
		elseif EventListener_typeId[this_7] <= 672 then
			if EventListener_typeId[this_7] <= 671 then
				call LimitMercenaryCamps_onEvent_line12(this_7, "when calling LimitMercenaryCamps_onEvent_line12 in ClosureEvents, line 109")
			else
				call LimitMercenaryCamps_onEvent_line8(this_7)
			endif
		else
			call MassControl_onEvent_line22(this_7, "when calling MassControl_onEvent_line22 in ClosureEvents, line 109")
		endif
	elseif EventListener_typeId[this_7] <= 679 then
		if EventListener_typeId[this_7] <= 676 then
			if EventListener_typeId[this_7] <= 675 then
				if EventListener_typeId[this_7] <= 674 then
					call MassControl_onEvent_line32(this_7, "when calling MassControl_onEvent_line32 in ClosureEvents, line 109")
				else
					call NoShipsNearRivers_onEvent_line7(this_7, "when calling NoShipsNearRivers_onEvent_line7 in ClosureEvents, line 109")
				endif
			else
				call NoStarvationOnBoat_onEvent_line9(this_7, "when calling NoStarvationOnBoat_onEvent_line9 in ClosureEvents, line 109")
			endif
		elseif EventListener_typeId[this_7] <= 678 then
			if EventListener_typeId[this_7] <= 677 then
				call OnPlayerLeave_onEvent_line5(this_7, "when calling OnPlayerLeave_onEvent_line5 in ClosureEvents, line 109")
			else
				call OreCapture_onEvent_line14(this_7, "when calling OreCapture_onEvent_line14 in ClosureEvents, line 109")
			endif
		else
			call OreCapture_onEvent_line21(this_7, "when calling OreCapture_onEvent_line21 in ClosureEvents, line 109")
		endif
	elseif EventListener_typeId[this_7] <= 682 then
		if EventListener_typeId[this_7] <= 681 then
			if EventListener_typeId[this_7] <= 680 then
				call OreCapture_onEvent_line9(this_7, "when calling OreCapture_onEvent_line9 in ClosureEvents, line 109")
			else
				call RangeChecks_onEvent_line11(this_7, "when calling RangeChecks_onEvent_line11 in ClosureEvents, line 109")
			endif
		else
			call Taxation_onEvent_line6(this_7, "when calling Taxation_onEvent_line6 in ClosureEvents, line 109")
		endif
	elseif EventListener_typeId[this_7] <= 683 then
		call Upkeep_onEvent_line28(this_7, "when calling Upkeep_onEvent_line28 in ClosureEvents, line 109")
	else
		call Upkeep_onEvent_line6(this_7, "when calling Upkeep_onEvent_line6 in ClosureEvents, line 109")
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function unit_getUserData takes unit this_7 returns integer
	return GetUnitUserData(this_7)
endfunction

function unit_getIndex takes unit this_7 returns integer
	return unit_getUserData(this_7)
endfunction

function EventListener_generalEventCallback takes string stackPos returns nothing
	local unit trigUnit
	local integer id
	local integer listener
	local integer listener_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set trigUnit = GetTriggerUnit()
	set id = eventid_toIntId(GetTriggerEventId(), "when calling toIntId in ClosureEvents, line 170")
	if trigUnit != null and fireEvents(trigUnit) and unit_getIndex(trigUnit) > 0 then
		if EventListener_unitListenersFirsts[unit_getIndex(trigUnit)] != 0 then
			set listener = EventListener_unitListenersFirsts[unit_getIndex(trigUnit)]
			loop
				exitwhen  not (listener != 0)
				if EventListener_eventId[listener] == id then
					call dispatch_EventListener_ClosureEvents_EventListener_onEvent(listener, "when calling onEvent in ClosureEvents, line 177")
				endif
				set listener = EventListener_next[listener]
			endloop
		endif
	endif
	if EventListener_generalListenersFirsts[id] != 0 then
		set listener_2 = EventListener_generalListenersFirsts[id]
		loop
			exitwhen  not (listener_2 != 0)
			call dispatch_EventListener_ClosureEvents_EventListener_onEvent(listener_2, "when calling onEvent in ClosureEvents, line 183")
			set listener_2 = EventListener_next[listener_2]
		endloop
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set trigUnit = null
endfunction

function ClosureEvents_closure_impl_3 takes string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call EventListener_generalEventCallback("when calling generalEventCallback in ClosureEvents, line 291")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function bridge_ClosureEvents_closure_impl_2 takes nothing returns nothing
	set wurst_stack_depth = 0
	call ClosureEvents_closure_impl_3("ClosureEvents, line 291")
endfunction

function ClosureEvents_closure_impl_4 takes string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call EventListener_generalEventCallback("when calling generalEventCallback in ClosureEvents, line 293")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function bridge_ClosureEvents_closure_impl_3 takes nothing returns nothing
	set wurst_stack_depth = 0
	call ClosureEvents_closure_impl_4("ClosureEvents, line 293")
endfunction

function OnCastListener_onDestroy takes integer this_7, string stackPos returns nothing
	local integer listener
	local integer listener_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if OnCastListener_eventUnit[this_7] != null then
		set listener = dispatch_HashMap_HashMap_HashMap_get(EventListener_castMapCasters, unitToIndex(OnCastListener_eventUnit[this_7]), "when calling get in ClosureEvents, line 60")
		if listener == this_7 then
			call dispatch_HashMap_HashMap_HashMap_put(EventListener_castMapCasters, unitToIndex(OnCastListener_eventUnit[this_7]), OnCastListener_next[this_7], "when calling put in ClosureEvents, line 62")
		elseif OnCastListener_prev[this_7] != 0 then
			set OnCastListener_next[OnCastListener_prev[this_7]] = OnCastListener_next[this_7]
		endif
	else
		set listener_2 = dispatch_HashMap_HashMap_HashMap_get(EventListener_castMap, OnCastListener_abilId[this_7], "when calling get in ClosureEvents, line 66")
		if listener_2 == this_7 then
			call dispatch_HashMap_HashMap_HashMap_put(EventListener_castMap, OnCastListener_abilId[this_7], OnCastListener_next[this_7], "when calling put in ClosureEvents, line 68")
		elseif OnCastListener_prev[this_7] != 0 then
			set OnCastListener_next[OnCastListener_prev[this_7]] = OnCastListener_next[this_7]
		endif
	endif
	set OnCastListener_prev[OnCastListener_next[this_7]] = OnCastListener_prev[this_7]
	set OnCastListener_next[this_7] = 0
	set OnCastListener_prev[this_7] = 0
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function dealloc_OnCastListener takes integer obj, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if OnCastListener_typeId[obj] == 0 then
		call error("Double free: object of type OnCastListener", "when calling error in ClosureEvents, line 50")
	else
		set OnCastListener_firstFree = OnCastListener_firstFree + 1
		set OnCastListener_typeId[obj] = 0
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function destroyOnCastListener takes integer this_7, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call OnCastListener_onDestroy(this_7, "when calling OnCastListener_onDestroy in ClosureEvents, line 58")
	call dealloc_OnCastListener(this_7, "when calling dealloc_OnCastListener in ClosureEvents, line 58")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function dispatch_OnCastListener_destroyOnCastListener takes integer this_7, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if OnCastListener_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling OnCastListener.OnCastListener", "when calling error in ClosureEvents, line 50")
		else
			call error("Called OnCastListener.OnCastListener on invalid object.", "when calling error in ClosureEvents, line 50")
		endif
	endif
	call destroyOnCastListener(this_7, "when calling destroyOnCastListener in ClosureEvents, line 50")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function Log_trace takes string msg returns nothing
	call printLog(Player_localPlayer, 0, msg)
endfunction

function EventListener_onDestroy takes integer this_7 returns nothing
	local integer listener = EventListener_generalListenersFirsts[EventListener_eventId[this_7]]
	if listener == this_7 then
		set EventListener_generalListenersFirsts[EventListener_eventId[this_7]] = EventListener_next[this_7]
	elseif EventListener_prev[this_7] != 0 then
		set EventListener_next[EventListener_prev[this_7]] = EventListener_next[this_7]
	endif
	set EventListener_prev[EventListener_next[this_7]] = EventListener_prev[this_7]
	set listener = EventListener_unitListenersFirsts[EventListener_eventId[this_7]]
	if listener == this_7 then
		set EventListener_unitListenersFirsts[EventListener_eventId[this_7]] = EventListener_next[this_7]
	elseif EventListener_prev[this_7] != 0 then
		set EventListener_next[EventListener_prev[this_7]] = EventListener_next[this_7]
	endif
	set EventListener_prev[EventListener_next[this_7]] = EventListener_prev[this_7]
	set EventListener_next[this_7] = 0
	set EventListener_prev[this_7] = 0
endfunction

function dealloc_EventListener takes integer obj, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if EventListener_typeId[obj] == 0 then
		call error("Double free: object of type EventListener", "when calling error in ClosureEvents, line 98")
	else
		set EventListener_nextFree[EventListener_firstFree] = obj
		set EventListener_firstFree = EventListener_firstFree + 1
		set EventListener_typeId[obj] = 0
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function destroyEventListener takes integer this_7, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call EventListener_onDestroy(this_7)
	call dealloc_EventListener(this_7, "when calling dealloc_EventListener in ClosureEvents, line 202")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function dispatch_EventListener_destroyEventListener takes integer this_7, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if EventListener_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling EventListener.EventListener", "when calling error in ClosureEvents, line 98")
		else
			call error("Called EventListener.EventListener on invalid object.", "when calling error in ClosureEvents, line 98")
		endif
	endif
	call destroyEventListener(this_7, "when calling destroyEventListener in ClosureEvents, line 98")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function unregisterEvents takes integer id, string stackPos returns nothing
	local integer listener
	local integer t
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if id > 0 then
		if EventListener_unitListenersFirsts[id] != 0 then
			call Log_trace("unregister unit has listeners. startid: " + int_toString(id))
			set listener = EventListener_unitListenersFirsts[id]
			set EventListener_unitListenersFirsts[id] = 0
			loop
				exitwhen  not (listener != 0)
				set t = listener
				set listener = EventListener_next[listener]
				call dispatch_EventListener_destroyEventListener(t, "when calling dispatch_EventListener_destroyEventListener in ClosureEvents, line 282")
			endloop
		endif
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function unregisterEventsForUnit takes unit u_5, string stackPos returns nothing
	local integer listener
	local integer t
	local integer listener_2
	local integer t_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if fireEvents(u_5) then
		call unregisterEvents(unit_getIndex(u_5), "when calling unregisterEvents in ClosureEvents, line 258")
		if dispatch_HashMap_HashMap_HashMap_has(EventListener_castMapCasters, unitToIndex(u_5), "when calling has in ClosureEvents, line 259") then
			set listener = dispatch_HashMap_HashMap_HashMap_get(EventListener_castMapCasters, unitToIndex(u_5), "when calling get in ClosureEvents, line 260")
			call dispatch_HashMap_HashMap_HashMap_remove(EventListener_castMapCasters, unitToIndex(u_5), "when calling remove in ClosureEvents, line 261")
			loop
				exitwhen  not (listener != 0)
				set t = listener
				set listener = OnCastListener_next[listener]
				call dispatch_OnCastListener_destroyOnCastListener(t, "when calling dispatch_OnCastListener_destroyOnCastListener in ClosureEvents, line 265")
			endloop
		endif
		if dispatch_HashMap_HashMap_HashMap_has(EventListener_castMapCasters, unitToIndex(u_5), "when calling has in ClosureEvents, line 266") then
			set listener_2 = dispatch_HashMap_HashMap_HashMap_get(EventListener_castMapCasters, unitToIndex(u_5), "when calling get in ClosureEvents, line 267")
			loop
				exitwhen  not (listener_2 != 0)
				set t_2 = listener_2
				set listener_2 = OnCastListener_next[listener_2]
				call dispatch_OnCastListener_destroyOnCastListener(t_2, "when calling dispatch_OnCastListener_destroyOnCastListener in ClosureEvents, line 271")
			endloop
		endif
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function ClosureEvents_closure_impl_5 takes string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call unregisterEventsForUnit(getIndexingUnit(), "when calling unregisterEventsForUnit in ClosureEvents, line 288")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function bridge_ClosureEvents_closure_impl_4 takes nothing returns nothing
	set wurst_stack_depth = 0
	call ClosureEvents_closure_impl_5("ClosureEvents, line 288")
endfunction

function ClosureEvents_closure_impl_6 takes string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call EventListener_generalEventCallback("when calling generalEventCallback in ClosureEvents, line 292")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function bridge_ClosureEvents_closure_impl_5 takes nothing returns nothing
	set wurst_stack_depth = 0
	call ClosureEvents_closure_impl_6("ClosureEvents, line 292")
endfunction

function currentCallback takes nothing returns integer
	return ClosureForGroups_tempCallbacks[ClosureForGroups_tempCallbacksCount - 1]
endfunction

function filterCallback takes unit filter, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if ClosureForGroups_iterCount < ClosureForGroups_maxCount then
		call dispatch_ForGroupCallback_ClosureForGroups_ForGroupCallback_callback(currentCallback(), filter, "when calling callback in ClosureForGroups, line 18")
	endif
	set ClosureForGroups_iterCount = ClosureForGroups_iterCount + 1
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function ClosureForGroups_closure_impl takes string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call filterCallback(GetFilterUnit(), "when calling filterCallback in ClosureForGroups, line 14")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function bridge_ClosureForGroups_closure_impl takes nothing returns nothing
	set wurst_stack_depth = 0
	call ClosureForGroups_closure_impl("ClosureForGroups, line 14")
endfunction

function ArrayQueue_units_set takes integer instanceId, integer arrayIndex, unit value, string stackPos returns nothing
	if arrayIndex < 0 or arrayIndex >= 6 then
		call error("Index out of Bounds", stackPos)
	elseif arrayIndex <= 2 then
		if arrayIndex <= 1 then
			if arrayIndex <= 0 then
			endif
		endif
	elseif arrayIndex <= 4 then
		if arrayIndex <= 3 then
		endif
	endif
endfunction

function ArrayQueue_enqueue takes integer this_7, unit u_5, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if ArrayQueue_size[this_7] < DummyRecycler_SAVED_UNITS_PER_ANGLE then
		set ArrayQueue_size[this_7] = ArrayQueue_size[this_7] + 1
		set ArrayQueue_rp[this_7] = ModuloInteger(ArrayQueue_rp[this_7] + 1, DummyRecycler_SAVED_UNITS_PER_ANGLE)
		call ArrayQueue_units_set(this_7, ArrayQueue_rp[this_7], u_5, "when writing array ArrayQueue_units in DummyRecycler, line 59")
	else
		call error("Queue Overflow", "when calling error in DummyRecycler, line 61")
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function dispatch_ArrayQueue_DummyRecycler_ArrayQueue_enqueue takes integer this_7, unit u_5, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if ArrayQueue_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling ArrayQueue.enqueue", "when calling error in DummyRecycler, line 55")
		else
			call error("Called ArrayQueue.enqueue on invalid object.", "when calling error in DummyRecycler, line 55")
		endif
	endif
	call ArrayQueue_enqueue(this_7, u_5, "when calling enqueue in DummyRecycler, line 55")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function real_asAngleDegrees takes real this_7 returns real
	set real_asAngleDegrees_return_radians = this_7 * Angle_DEGTORAD
	return real_asAngleDegrees_return_radians
endfunction

function unit_pause takes unit this_7 returns nothing
	call PauseUnit(this_7, true)
endfunction

function angle_degrees takes real this_radians returns real
	return this_radians * Angle_RADTODEG
endfunction

function unit_setFacing takes unit this_7, real a_radians returns nothing
	call SetUnitFacing(this_7, angle_degrees(a_radians))
endfunction

function unit_setScale takes unit this_7, real scale returns nothing
	call SetUnitScale(this_7, scale, scale, scale)
endfunction

function unit_setVertexColor takes unit this_7, integer col_red, integer col_green, integer col_blue, integer col_alpha returns nothing
	call SetUnitVertexColor(this_7, col_red, col_green, col_blue, col_alpha)
endfunction

function unit_setX takes unit this_7, real x returns nothing
	call SetUnitX(this_7, x)
endfunction

function unit_setY takes unit this_7, real y returns nothing
	call SetUnitY(this_7, y)
endfunction

function unit_setXY takes unit this_7, real pos_x_2, real pos_y_2 returns nothing
	local unit receiver = this_7
	local unit receiver_2
	call unit_setX(receiver, pos_x_2)
	set receiver_2 = receiver
	call unit_setY(receiver_2, pos_y_2)
	set receiver = null
	set receiver_2 = null
endfunction

function DummyRecycler_recycle takes unit u_5, string stackPos returns nothing
	local integer smallestQueue
	local integer i_2
	local integer temp
	local unit receiver
	local unit receiver_2
	local unit receiver_3
	local unit receiver_4
	local unit receiver_5
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set smallestQueue = 0
	set i_2 = 1
	set temp = DummyRecycler_DIFFERENT_ANGLES - 1
	loop
		exitwhen i_2 > temp
		if ArrayQueue_size[DummyRecycler_angleQueues[smallestQueue]] > ArrayQueue_size[DummyRecycler_angleQueues[i_2]] then
			set smallestQueue = i_2
		endif
		set i_2 = i_2 + 1
	endloop
	if ArrayQueue_size[DummyRecycler_angleQueues[smallestQueue]] >= DummyRecycler_SAVED_UNITS_PER_ANGLE then
		call unit_remove(u_5)
	else
		call dispatch_ArrayQueue_DummyRecycler_ArrayQueue_enqueue(DummyRecycler_angleQueues[smallestQueue], u_5, "when calling enqueue in DummyRecycler, line 39")
		set receiver = u_5
		call unit_setXY(receiver, MapBounds_boundMax_x, MapBounds_boundMax_y)
		set receiver_2 = receiver
		call unit_pause(receiver_2)
		set receiver_3 = receiver_2
		call unit_setFacing(receiver_3, real_asAngleDegrees(smallestQueue * DummyRecycler_ANGLE_DEGREE))
		set receiver_4 = receiver_3
		call unit_setScale(receiver_4, 1.)
		set receiver_5 = receiver_4
		call unit_setVertexColor(receiver_5, Colors_COLOR_WHITE_red, Colors_COLOR_WHITE_green, Colors_COLOR_WHITE_blue, Colors_COLOR_WHITE_alpha)
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set receiver = null
	set receiver_2 = null
	set receiver_3 = null
	set receiver_4 = null
	set receiver_5 = null
endfunction

function DelayNode_onDestroy takes integer this_7 returns nothing
endfunction

function dealloc_DelayNode takes integer obj, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if DelayNode_typeId[obj] == 0 then
		call error("Double free: object of type DelayNode", "when calling error in DummyRecycler, line 72")
	else
		set DelayNode_firstFree = DelayNode_firstFree + 1
		set DelayNode_typeId[obj] = 0
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function destroyDelayNode takes integer this_7, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call DelayNode_onDestroy(this_7)
	call dealloc_DelayNode(this_7, "when calling dealloc_DelayNode in DummyRecycler, line 72")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function dispatch_DelayNode_destroyDelayNode takes integer this_7, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if DelayNode_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling DelayNode.DelayNode", "when calling error in DummyRecycler, line 72")
		else
			call error("Called DelayNode.DelayNode on invalid object.", "when calling error in DummyRecycler, line 72")
		endif
	endif
	call destroyDelayNode(this_7, "when calling destroyDelayNode in DummyRecycler, line 72")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function timer_getElapsed takes timer this_7 returns real
	return TimerGetElapsed(this_7)
endfunction

function getElapsedGameTime takes nothing returns real
	return timer_getElapsed(GameTimer_gameTimer)
endfunction

function DelayNode_recycle takes string stackPos returns nothing
	local integer tmp
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call DummyRecycler_recycle(DelayNode_u[DelayNode_first], "when calling recycle in DummyRecycler, line 121")
	set tmp = DelayNode_first
	if DelayNode_next[DelayNode_first] == 0 then
		set DelayNode_first = 0
	else
		set DelayNode_first = DelayNode_next[DelayNode_first]
		call timer_start(DelayNode_t, DelayNode_delayTime[DelayNode_first] - getElapsedGameTime(), ref_function_bridge_DelayNode_recycle)
	endif
	call dispatch_DelayNode_destroyDelayNode(tmp, "when calling dispatch_DelayNode_destroyDelayNode in DummyRecycler, line 130")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function bridge_DelayNode_recycle takes nothing returns nothing
	set wurst_stack_depth = 0
	call DelayNode_recycle("DummyRecycler, line 128")
endfunction

function bridge_EventListener_generalEventCallback takes nothing returns nothing
	set wurst_stack_depth = 0
	call EventListener_generalEventCallback("ClosureEvents, line 241")
endfunction

function hashtable_loadTriggerHandle takes hashtable this_7, integer parentKey, integer childKey returns trigger
	return LoadTriggerHandle(this_7, parentKey, childKey)
endfunction

function Table_loadTrigger takes integer this_7, integer parentKey returns trigger
	return hashtable_loadTriggerHandle(Table_ht, this_7, parentKey)
endfunction

function dispatch_Table_Table_Table_loadTrigger takes integer this_7, integer parentKey, string stackPos returns trigger
	local trigger Table_Table_loadTrigger_result
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if Table_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling Table.loadTrigger", "when calling error in Table, line 111")
		else
			call error("Called Table.loadTrigger on invalid object.", "when calling error in Table, line 111")
		endif
	endif
	set Table_Table_loadTrigger_result = Table_loadTrigger(this_7, parentKey)
	set wurst_stack_depth = wurst_stack_depth - 1
	set dispatch_Table_Table_Table_loadTriggertempReturn = Table_Table_loadTrigger_result
	set Table_Table_loadTrigger_result = null
	return dispatch_Table_Table_Table_loadTriggertempReturn
endfunction

function triggerFromIndex takes integer index, string stackPos returns trigger
	local trigger stackTrace_tempReturn
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call dispatch_Table_Table_Table_saveFogState(TypeCasting_typecastdata, 0, ConvertFogState(index), "when calling saveFogState in TypeCasting, line 94")
	set stackTrace_tempReturn = dispatch_Table_Table_Table_loadTrigger(TypeCasting_typecastdata, 0, "when calling loadTrigger in TypeCasting, line 95")
	set wurst_stack_depth = wurst_stack_depth - 1
	set triggerFromIndextempReturn = stackTrace_tempReturn
	set stackTrace_tempReturn = null
	return triggerFromIndextempReturn
endfunction

function RegisterEvents_closure_impl takes string stackPos returns boolean
	local boolean stackTrace_tempReturn
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackTrace_tempReturn = trigger_evaluate(triggerFromIndex(dispatch_HashMap_HashMap_HashMap_get(RegisterEvents_onCastMap, GetSpellAbilityId(), "when calling get in RegisterEvents, line 58"), "when calling triggerFromIndex in RegisterEvents, line 58"))
	set wurst_stack_depth = wurst_stack_depth - 1
	return stackTrace_tempReturn
endfunction

function bridge_RegisterEvents_closure_impl takes nothing returns boolean
	set wurst_stack_depth = 0
	return RegisterEvents_closure_impl("RegisterEvents, line 58")
endfunction

function getEnterLeaveUnit takes nothing returns unit
	return OnUnitEnterLeave_tempUnits[OnUnitEnterLeave_tempUnitsCount - 1]
endfunction

function shouldIndex takes unit w_u returns boolean
	return true
endfunction

function alloc_UnitIndex takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if UnitIndex_firstFree == 0 then
		if UnitIndex_maxIndex < 32768 then
			set UnitIndex_maxIndex = UnitIndex_maxIndex + 1
			set this_7 = UnitIndex_maxIndex
			set UnitIndex_typeId[this_7] = 742
		else
			call error("Out of memory: Could not create UnitIndex.", "when calling error in UnitIndexer, line 172")
			set this_7 = 0
		endif
	else
		set UnitIndex_firstFree = UnitIndex_firstFree - 1
		set this_7 = UnitIndex_nextFree[UnitIndex_firstFree]
		set UnitIndex_typeId[this_7] = 742
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function popUnit_2 takes nothing returns nothing
	set UnitIndexer_tempUnitsCount = UnitIndexer_tempUnitsCount - 1
endfunction

function pushUnit_2 takes unit u_5 returns nothing
	set UnitIndexer_tempUnits[UnitIndexer_tempUnitsCount] = u_5
	set UnitIndexer_tempUnitsCount = UnitIndexer_tempUnitsCount + 1
endfunction

function unit_setUserData takes unit this_7, integer data returns nothing
	call SetUnitUserData(this_7, data)
endfunction

function construct_UnitIndex takes integer this_7, unit whichUnit returns nothing
	set UnitIndex__unit[this_7] = whichUnit
	call unit_setUserData(UnitIndex__unit[this_7], this_7)
	call pushUnit_2(whichUnit)
	call trigger_evaluate(UnitIndexer_onIndexTrigger)
	call popUnit_2()
endfunction

function new_UnitIndex takes unit whichUnit, string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_7 = alloc_UnitIndex("when calling alloc_UnitIndex in UnitIndexer, line 181")
	call construct_UnitIndex(this_7, whichUnit)
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function unit_toUnitIndex takes unit this_7, string stackPos returns integer
	local integer instance
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set instance = unit_getUserData(this_7)
	if instance == 0 then
		set instance = new_UnitIndex(this_7, "when calling new_UnitIndex in UnitIndexer, line 135")
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return instance
endfunction

function UnitIndexer_closure_impl takes string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if shouldIndex(getEnterLeaveUnit()) then
		call unit_toUnitIndex(getEnterLeaveUnit(), "when calling toUnitIndex in UnitIndexer, line 196")
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function bridge_UnitIndexer_closure_impl takes nothing returns nothing
	set wurst_stack_depth = 0
	call UnitIndexer_closure_impl("UnitIndexer, line 196")
endfunction

function UnitIndex_onDestroy takes integer this_7 returns nothing
	call pushUnit_2(UnitIndex__unit[this_7])
	call trigger_evaluate(UnitIndexer_onDeindexTrigger)
	call popUnit_2()
	call unit_setUserData(UnitIndex__unit[this_7], 0)
endfunction

function dealloc_UnitIndex takes integer obj, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if UnitIndex_typeId[obj] == 0 then
		call error("Double free: object of type UnitIndex", "when calling error in UnitIndexer, line 172")
	else
		set UnitIndex_nextFree[UnitIndex_firstFree] = obj
		set UnitIndex_firstFree = UnitIndex_firstFree + 1
		set UnitIndex_typeId[obj] = 0
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function destroyUnitIndex takes integer this_7, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call UnitIndex_onDestroy(this_7)
	call dealloc_UnitIndex(this_7, "when calling dealloc_UnitIndex in UnitIndexer, line 188")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function dispatch_UnitIndex_destroyUnitIndex takes integer this_7, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if UnitIndex_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling UnitIndex.UnitIndex", "when calling error in UnitIndexer, line 172")
		else
			call error("Called UnitIndex.UnitIndex on invalid object.", "when calling error in UnitIndexer, line 172")
		endif
	endif
	call destroyUnitIndex(this_7, "when calling destroyUnitIndex in UnitIndexer, line 172")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function unit_deindex takes unit this_7, string stackPos returns boolean
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if unit_getUserData(this_7) == 0 then
		set wurst_stack_depth = wurst_stack_depth - 1
		return false
	else
		call dispatch_UnitIndex_destroyUnitIndex(unit_toUnitIndex(this_7, "when calling toUnitIndex in UnitIndexer, line 169"), "when calling dispatch_UnitIndex_destroyUnitIndex in UnitIndexer, line 169")
		set wurst_stack_depth = wurst_stack_depth - 1
		return true
	endif
endfunction

function UnitIndexer_closure_impl_2 takes string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if shouldIndex(getEnterLeaveUnit()) then
		call unit_deindex(getEnterLeaveUnit(), "when calling deindex in UnitIndexer, line 197")
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function bridge_UnitIndexer_closure_impl_2 takes nothing returns nothing
	set wurst_stack_depth = 0
	call UnitIndexer_closure_impl_2("UnitIndexer, line 197")
endfunction

function Upkeep_closure_impl takes string stackPos returns nothing
	local unit u_5
	local integer player_id
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set u_5 = GetEnteringUnit()
	set player_id = player_getId(unit_getOwner(u_5))
	if player_isIngame(Player_players[player_id]) and ( not IsUnitType(u_5, UNIT_TYPE_STRUCTURE)) then
		call dispatch_PlayerStats_PlayerStats_PlayerStats_changeUpkeep(PlayerStats_player_stats[player_id],  - GetUnitLevel(u_5), "when calling changeUpkeep in Upkeep, line 25")
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set u_5 = null
endfunction

function bridge_Upkeep_closure_impl takes nothing returns nothing
	set wurst_stack_depth = 0
	call Upkeep_closure_impl("Upkeep, line 21")
endfunction

function City_addPublicOrder takes integer this_7, real amount returns nothing
	set City_public_order_add[this_7] = City_public_order_add[this_7] + amount
endfunction

function dispatch_City_City_City_addPublicOrder takes integer this_7, real amount, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if City_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling City.addPublicOrder", "when calling error in City, line 332")
		else
			call error("Called City.addPublicOrder on invalid object.", "when calling error in City, line 332")
		endif
	endif
	call City_addPublicOrder(this_7, amount)
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function City_changeCityName takes integer this_7, string new_name, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set City_city_name[this_7] = string_substring(new_name, 0, City_kCityNameLimit)
	call dispatch_City_City_City_refreshMultiboardIfPossible(this_7, "when calling refreshMultiboardIfPossible in City, line 174")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function dispatch_City_City_City_changeCityName takes integer this_7, string new_name, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if City_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling City.changeCityName", "when calling error in City, line 171")
		else
			call error("Called City.changeCityName on invalid object.", "when calling error in City, line 171")
		endif
	endif
	call City_changeCityName(this_7, new_name, "when calling changeCityName in City, line 171")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function PlayerStats_alliance_states_get takes integer index1, integer index2, string stackPos returns integer
	local integer returnVal
	if index2 < 0 or index2 >= 24 then
		call error("Index out of Bounds", stackPos)
	elseif index2 <= 11 then
		if index2 <= 5 then
			if index2 <= 2 then
				if index2 <= 1 then
					if index2 <= 0 then
						set returnVal = PlayerStats_alliance_states_0[index1]
					else
						set returnVal = PlayerStats_alliance_states_1[index1]
					endif
				else
					set returnVal = PlayerStats_alliance_states_2[index1]
				endif
			elseif index2 <= 4 then
				if index2 <= 3 then
					set returnVal = PlayerStats_alliance_states_3[index1]
				else
					set returnVal = PlayerStats_alliance_states_4[index1]
				endif
			else
				set returnVal = PlayerStats_alliance_states_5[index1]
			endif
		elseif index2 <= 8 then
			if index2 <= 7 then
				if index2 <= 6 then
					set returnVal = PlayerStats_alliance_states_6[index1]
				else
					set returnVal = PlayerStats_alliance_states_7[index1]
				endif
			else
				set returnVal = PlayerStats_alliance_states_8[index1]
			endif
		elseif index2 <= 10 then
			if index2 <= 9 then
				set returnVal = PlayerStats_alliance_states_9[index1]
			else
				set returnVal = PlayerStats_alliance_states_10[index1]
			endif
		else
			set returnVal = PlayerStats_alliance_states_11[index1]
		endif
	elseif index2 <= 17 then
		if index2 <= 14 then
			if index2 <= 13 then
				if index2 <= 12 then
					set returnVal = PlayerStats_alliance_states_12[index1]
				else
					set returnVal = PlayerStats_alliance_states_13[index1]
				endif
			else
				set returnVal = PlayerStats_alliance_states_14[index1]
			endif
		elseif index2 <= 16 then
			if index2 <= 15 then
				set returnVal = PlayerStats_alliance_states_15[index1]
			else
				set returnVal = PlayerStats_alliance_states_16[index1]
			endif
		else
			set returnVal = PlayerStats_alliance_states_17[index1]
		endif
	elseif index2 <= 20 then
		if index2 <= 19 then
			if index2 <= 18 then
				set returnVal = PlayerStats_alliance_states_18[index1]
			else
				set returnVal = PlayerStats_alliance_states_19[index1]
			endif
		else
			set returnVal = PlayerStats_alliance_states_20[index1]
		endif
	elseif index2 <= 22 then
		if index2 <= 21 then
			set returnVal = PlayerStats_alliance_states_21[index1]
		else
			set returnVal = PlayerStats_alliance_states_22[index1]
		endif
	else
		set returnVal = PlayerStats_alliance_states_23[index1]
	endif
	return returnVal
endfunction

function PlayerStats_alliance_states_set takes integer instanceId, integer arrayIndex, integer value, string stackPos returns nothing
	if arrayIndex < 0 or arrayIndex >= 24 then
		call error("Index out of Bounds", stackPos)
	elseif arrayIndex <= 11 then
		if arrayIndex <= 5 then
			if arrayIndex <= 2 then
				if arrayIndex <= 1 then
					if arrayIndex <= 0 then
						set PlayerStats_alliance_states_0[instanceId] = value
					else
						set PlayerStats_alliance_states_1[instanceId] = value
					endif
				else
					set PlayerStats_alliance_states_2[instanceId] = value
				endif
			elseif arrayIndex <= 4 then
				if arrayIndex <= 3 then
					set PlayerStats_alliance_states_3[instanceId] = value
				else
					set PlayerStats_alliance_states_4[instanceId] = value
				endif
			else
				set PlayerStats_alliance_states_5[instanceId] = value
			endif
		elseif arrayIndex <= 8 then
			if arrayIndex <= 7 then
				if arrayIndex <= 6 then
					set PlayerStats_alliance_states_6[instanceId] = value
				else
					set PlayerStats_alliance_states_7[instanceId] = value
				endif
			else
				set PlayerStats_alliance_states_8[instanceId] = value
			endif
		elseif arrayIndex <= 10 then
			if arrayIndex <= 9 then
				set PlayerStats_alliance_states_9[instanceId] = value
			else
				set PlayerStats_alliance_states_10[instanceId] = value
			endif
		else
			set PlayerStats_alliance_states_11[instanceId] = value
		endif
	elseif arrayIndex <= 17 then
		if arrayIndex <= 14 then
			if arrayIndex <= 13 then
				if arrayIndex <= 12 then
					set PlayerStats_alliance_states_12[instanceId] = value
				else
					set PlayerStats_alliance_states_13[instanceId] = value
				endif
			else
				set PlayerStats_alliance_states_14[instanceId] = value
			endif
		elseif arrayIndex <= 16 then
			if arrayIndex <= 15 then
				set PlayerStats_alliance_states_15[instanceId] = value
			else
				set PlayerStats_alliance_states_16[instanceId] = value
			endif
		else
			set PlayerStats_alliance_states_17[instanceId] = value
		endif
	elseif arrayIndex <= 20 then
		if arrayIndex <= 19 then
			if arrayIndex <= 18 then
				set PlayerStats_alliance_states_18[instanceId] = value
			else
				set PlayerStats_alliance_states_19[instanceId] = value
			endif
		else
			set PlayerStats_alliance_states_20[instanceId] = value
		endif
	elseif arrayIndex <= 22 then
		if arrayIndex <= 21 then
			set PlayerStats_alliance_states_21[instanceId] = value
		else
			set PlayerStats_alliance_states_22[instanceId] = value
		endif
	else
		set PlayerStats_alliance_states_23[instanceId] = value
	endif
endfunction

function PlayerStats_setAlliance takes integer this_7, player which_player, integer alliance_state, string stackPos returns nothing
	local integer id
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set id = player_getId(which_player)
	if  not PlayerStats_is_in_game[this_7] then
		set wurst_stack_depth = wurst_stack_depth - 1
		return
	endif
	if id >= Main_PLAYER_SLOTS then
		set wurst_stack_depth = wurst_stack_depth - 1
		return
	endif
	if PlayerStats_alliance_states_get(this_7, id, "when reading array PlayerStats_alliance_states in  in PlayerStats, line 61") == alliance_state or which_player == PlayerStats_pl[this_7] then
		set wurst_stack_depth = wurst_stack_depth - 1
		return
	endif
	call PlayerStats_alliance_states_set(this_7, id, alliance_state, "when writing array PlayerStats_alliance_states in PlayerStats, line 63")
	call SetPlayerAllianceStateBJ(PlayerStats_pl[this_7], which_player, alliance_state)
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function dispatch_PlayerStats_PlayerStats_PlayerStats_setAlliance takes integer this_7, player which_player, integer alliance_state, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if PlayerStats_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling PlayerStats.setAlliance", "when calling error in PlayerStats, line 55")
		else
			call error("Called PlayerStats.setAlliance on invalid object.", "when calling error in PlayerStats, line 55")
		endif
	endif
	call PlayerStats_setAlliance(this_7, which_player, alliance_state, "when calling setAlliance in PlayerStats, line 55")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function PlayerStats_becomeObserver takes integer this_7, string stackPos returns nothing
	local integer pl_id
	local integer i_2
	local integer temp
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set PlayerStats_is_observer[this_7] = true
	set pl_id = player_getId(PlayerStats_pl[this_7])
	set i_2 = 0
	set temp = Main_PLAYER_SLOTS - 1
	loop
		exitwhen i_2 > temp
		call dispatch_PlayerStats_PlayerStats_PlayerStats_setAlliance(PlayerStats_player_stats[i_2], PlayerStats_pl[this_7], bj_ALLIANCE_UNALLIED, "when calling setAlliance in PlayerStats, line 37")
		call dispatch_PlayerStats_PlayerStats_PlayerStats_setAlliance(PlayerStats_player_stats[pl_id], Player_players[i_2], bj_ALLIANCE_UNALLIED, "when calling setAlliance in PlayerStats, line 38")
		set i_2 = i_2 + 1
	endloop
	call CreateFogModifierRadiusLocBJ(true, PlayerStats_pl[this_7], FOG_OF_WAR_VISIBLE, GetRectCenter(GetPlayableMapRect()), 999999.00)
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function dispatch_PlayerStats_PlayerStats_PlayerStats_becomeObserver takes integer this_7, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if PlayerStats_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling PlayerStats.becomeObserver", "when calling error in PlayerStats, line 32")
		else
			call error("Called PlayerStats.becomeObserver on invalid object.", "when calling error in PlayerStats, line 32")
		endif
	endif
	call PlayerStats_becomeObserver(this_7, "when calling becomeObserver in PlayerStats, line 32")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function PlayerStats_isObserver takes integer this_7 returns boolean
	return PlayerStats_is_observer[this_7]
endfunction

function dispatch_PlayerStats_PlayerStats_PlayerStats_isObserver takes integer this_7, string stackPos returns boolean
	local boolean PlayerStats_PlayerStats_isObserver_result
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if PlayerStats_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling PlayerStats.isObserver", "when calling error in PlayerStats, line 29")
		else
			call error("Called PlayerStats.isObserver on invalid object.", "when calling error in PlayerStats, line 29")
		endif
	endif
	set PlayerStats_PlayerStats_isObserver_result = PlayerStats_isObserver(this_7)
	set wurst_stack_depth = wurst_stack_depth - 1
	return PlayerStats_PlayerStats_isObserver_result
endfunction

function enableDebugForPlayer takes player pl returns nothing
	call SetPlayerState(pl, PLAYER_STATE_RESOURCE_GOLD, 99999999)
	call SetPlayerState(pl, PLAYER_STATE_RESOURCE_LUMBER, 99999999)
	call CreateFogModifierRadiusLocBJ(true, pl, FOG_OF_WAR_VISIBLE, GetRectCenter(GetPlayableMapRect()), 999999.00)
endfunction

function string_toInt takes string this_7 returns integer
	return S2I(this_7)
endfunction

function string_toReal takes string this_7 returns real
	return S2R(this_7)
endfunction

function unit_isHidden takes unit this_7 returns boolean
	return IsUnitHidden(this_7)
endfunction

function playerToIndex takes player object returns integer
	return player_getId(object)
endfunction

function addVote takes integer kick_id, player who_votes, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if kick_id < 0 then
		set wurst_stack_depth = wurst_stack_depth - 1
		return
	endif
	if  not dispatch_HashList_HashList_HashList_has(VoteKick_who_voted_for_player[kick_id], playerToIndex(who_votes), "when calling has in VoteKick, line 68") then
		set VoteKick_kick_count[kick_id] = VoteKick_kick_count[kick_id] + 1
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function LinkedList_indexOf takes integer this_7, integer t returns integer
	local integer entry = LLEntry_next[LinkedList_dummy[this_7]]
	local integer idx = 0
	loop
		exitwhen  not (entry != LinkedList_dummy[this_7])
		if LLEntry_elem[entry] == t then
			return idx
		endif
		set entry = LLEntry_next[entry]
		set idx = idx + 1
	endloop
	return -1
endfunction

function dispatch_LinkedList_LinkedList_LinkedList_indexOf takes integer this_7, integer t, string stackPos returns integer
	local integer LinkedList_LinkedList_indexOf_result
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if LinkedList_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling LinkedList.indexOf", "when calling error in LinkedList, line 54")
		else
			call error("Called LinkedList.indexOf on invalid object.", "when calling error in LinkedList, line 54")
		endif
	endif
	set LinkedList_LinkedList_indexOf_result = LinkedList_indexOf(this_7, t)
	set wurst_stack_depth = wurst_stack_depth - 1
	return LinkedList_LinkedList_indexOf_result
endfunction

function getPlayerIdByName takes string pl_str returns integer
	local integer i_2 = 0
	local integer temp = Main_PLAYER_SLOTS - 1
	loop
		exitwhen i_2 > temp
		if player_getName(Player_players[i_2]) == pl_str then
			return i_2
		endif
		set i_2 = i_2 + 1
	endloop
	return -1
endfunction

function countVotesNeeded takes nothing returns integer
	local integer c = 0
	local integer i_2 = 0
	local integer temp = Main_PLAYER_SLOTS - 1
	loop
		exitwhen i_2 > temp
		if player_isIngame(Player_players[i_2]) then
			set c = c + 1
		endif
		set i_2 = i_2 + 1
	endloop
	return real_toInt((c - 1) * 1. / 2) + 1
endfunction

function tryToKickOrHowMuchLeft takes integer kick_id returns nothing
	if kick_id < 0 then
		return
	endif
	if VoteKick_kick_count[kick_id] >= countVotesNeeded() then
		call CustomDefeatBJ(Player_players[kick_id], "You've been kicked from the game!")
		call textToAll("The player " + player_getNameColored(Player_players[kick_id]) + " has been kicked with the power of democracy!", 10.0)
	else
		call textToAll(int_toString(VoteKick_kick_count[kick_id]) + " |cffff0000out of|r " + int_toString(countVotesNeeded()) + " |cffff0000voted to kick the player|r " + player_getNameColored(Player_players[kick_id]) + "! |cff00ffdd(player number is " + int_toString(kick_id) + ")|r", 10.0)
	endif
endfunction

function voteKick takes player who_votes, string who_kick, string stackPos returns nothing
	local integer kick_id
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if string_length(who_kick) <= 2 and string_toInt(who_kick) > 0 and string_toInt(who_kick) < 24 then
		set kick_id = string_toInt(who_kick)
	elseif dispatch_LinkedList_LinkedList_LinkedList_has(VoteKick_playerstr, stringToIndex(who_kick, "when calling stringToIndex in VoteKick, line 77"), "when calling has in VoteKick, line 77") then
		set kick_id = dispatch_LinkedList_LinkedList_LinkedList_indexOf(VoteKick_playerstr, stringToIndex(who_kick, "when calling stringToIndex in VoteKick, line 78"), "when calling indexOf in VoteKick, line 78")
	elseif getPlayerIdByName(who_kick) != -1 then
		set kick_id = getPlayerIdByName(who_kick)
	else
		call noteToPlayer("Couldn't find player: '" + who_kick + "'", who_votes, "when calling noteToPlayer in VoteKick, line 82")
		set wurst_stack_depth = wurst_stack_depth - 1
		return
	endif
	call addVote(kick_id, who_votes, "when calling addVote in VoteKick, line 85")
	call tryToKickOrHowMuchLeft(kick_id)
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function action takes string stackPos returns nothing
	local string input
	local string array args
	local string arg
	local player pl
	local integer j
	local integer i_2
	local integer temp
	local string char
	local integer city_id
	local integer city_id_2
	local string temp_2
	local integer num
	local boolean has_no_units
	local group iterator
	local unit u_5
	local integer city_id_3
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set input = GetEventPlayerChatString()
	set arg = ""
	set pl = GetTriggerPlayer()
	set j = 0
	set i_2 = 1
	set temp = string_length(input)
	loop
		exitwhen i_2 > temp
		set char = string_substring(input, i_2, i_2 + 1)
		if j > 0 and i_2 > string_length(args[0]) + 1 then
			set arg = arg + char
		endif
		if char != " " then
			set args[j] = args[j] + char
		else
			set j = j + 1
		endif
		set i_2 = i_2 + 1
	endloop
	if args[0] == Commands_ksFar then
		call SetCameraFieldForPlayer(GetTriggerPlayer(), CAMERA_FIELD_TARGET_DISTANCE, Commands_kFarDistance, 0.)
	elseif args[0] == Commands_ksMed then
		call SetCameraFieldForPlayer(GetTriggerPlayer(), CAMERA_FIELD_TARGET_DISTANCE, Commands_kMedDistance, 0.)
	elseif args[0] == Commands_ksName then
		call SetPlayerName(GetTriggerPlayer(), string_substring(arg, 0, Commands_kNameLimit))
	elseif args[0] == Commands_ksRenameCity then
		set city_id = dispatch_PlayerStats_PlayerStats_PlayerStats_getSelectedCityId(PlayerStats_player_stats[player_getId(pl)], "when calling getSelectedCityId in Commands, line 51")
		if city_id >= 0 and city_id < City_cityCount then
			if unit_getOwner(dispatch_City_City_City_getCityUnit(City_cities[city_id], "when calling getCityUnit in Commands, line 53")) != pl then
				call noteToPlayer(Commands_kseNotYourCity, pl, "when calling noteToPlayer in Commands, line 54")
			else
				call dispatch_City_City_City_changeCityName(City_cities[city_id], arg, "when calling changeCityName in Commands, line 56")
			endif
		endif
	elseif args[0] == Commands_ksAddModifier then
		set city_id_2 = dispatch_PlayerStats_PlayerStats_PlayerStats_getSelectedCityId(PlayerStats_player_stats[player_getId(pl)], "when calling getSelectedCityId in Commands, line 58")
		if  not Main_dbg_mode then
			set wurst_stack_depth = wurst_stack_depth - 1
			set pl = null
			set iterator = null
			set u_5 = null
			return
		endif
		if city_id_2 >= 0 and city_id_2 < City_cityCount then
			set temp_2 = args[1]
			if temp_2 == "massacred_pop" then
				call dispatch_City_City_City_addModifier(City_cities[city_id_2], 6, "when calling addModifier in Commands, line 64")
			elseif temp_2 == "recently_conquered" then
				call dispatch_City_City_City_addModifier(City_cities[city_id_2], 0, "when calling addModifier in Commands, line 66")
			elseif temp_2 == "recently_revolted" then
				call dispatch_City_City_City_addModifier(City_cities[city_id_2], 1, "when calling addModifier in Commands, line 68")
			elseif temp_2 == "more_trade_estabilished" then
				call dispatch_City_City_City_addModifier(City_cities[city_id_2], 5, "when calling addModifier in Commands, line 70")
			elseif temp_2 == "on_fire" then
				call dispatch_City_City_City_addModifier(City_cities[city_id_2], 4, "when calling addModifier in Commands, line 72")
			elseif temp_2 == "plague_outburst" then
				call dispatch_City_City_City_addModifier(City_cities[city_id_2], 3, "when calling addModifier in Commands, line 74")
			elseif temp_2 == "population_boom" then
				call dispatch_City_City_City_addModifier(City_cities[city_id_2], 2, "when calling addModifier in Commands, line 76")
			elseif temp_2 == "prospering" then
				call dispatch_City_City_City_addModifier(City_cities[city_id_2], 7, "when calling addModifier in Commands, line 78")
			elseif temp_2 == "sieged" then
				call dispatch_City_City_City_addModifier(City_cities[city_id_2], 8, "when calling addModifier in Commands, line 80")
			endif
		endif
	elseif args[0] == Commands_ksDebug then
		set Main_dbg_mode =  not Main_dbg_mode
		set Main_dbg_msg =  not Main_dbg_msg
		call enableDebugForPlayer(pl)
	elseif args[0] == Commands_ksVoteKick then
		call voteKick(pl, arg, "when calling voteKick in Commands, line 86")
	elseif args[0] == Commands_ksZoom then
		set num = string_toInt(args[1])
		call SetCameraFieldForPlayer(GetTriggerPlayer(), CAMERA_FIELD_TARGET_DISTANCE, int_toReal(num), 0.)
	elseif args[0] == Commands_ksObserve then
		if  not dispatch_PlayerStats_PlayerStats_PlayerStats_isObserver(PlayerStats_player_stats[player_getId(pl)], "when calling isObserver in Commands, line 91") then
			set has_no_units = true
			set iterator = group_iterator(GetUnitsOfPlayerAll(pl))
			loop
				exitwhen  not group_hasNext(iterator)
				set u_5 = group_next(iterator)
				if ( not unit_isHidden(u_5)) and unit_getTypeId(u_5) != Units_uDiplomacy and unit_getTypeId(u_5) != Units_uEconomy then
					set has_no_units = false
				endif
			endloop
			call group_close(iterator)
			if has_no_units then
				call dispatch_PlayerStats_PlayerStats_PlayerStats_becomeObserver(PlayerStats_player_stats[player_getId(pl)], "when calling becomeObserver in Commands, line 98")
				call textToAll(player_getNameColored(pl) + Strings_ksBecomeObserver, 10.0)
			else
				call noteToPlayer(Strings_ksToBecomeObserver, pl, "when calling noteToPlayer in Commands, line 101")
			endif
		endif
	elseif args[0] == Commands_ksLowerPO then
		if  not Main_dbg_mode then
			set wurst_stack_depth = wurst_stack_depth - 1
			set pl = null
			set iterator = null
			set u_5 = null
			return
		endif
		set city_id_3 = dispatch_PlayerStats_PlayerStats_PlayerStats_getSelectedCityId(PlayerStats_player_stats[player_getId(pl)], "when calling getSelectedCityId in Commands, line 105")
		if city_id_3 >= 0 and city_id_3 < City_cityCount then
			call dispatch_City_City_City_addPublicOrder(City_cities[city_id_3], string_toReal(args[1]), "when calling addPublicOrder in Commands, line 107")
		endif
	else
		call noteToPlayer("Couldn't find command: '" + args[0] + "'", pl, "when calling noteToPlayer in Commands, line 109")
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set pl = null
	set iterator = null
	set u_5 = null
endfunction

function bridge_action takes nothing returns nothing
	set wurst_stack_depth = 0
	call action("Commands, line 118")
endfunction

function PlayerStats_getAllianceState takes integer this_7, player which_player, string stackPos returns integer
	local integer stackTrace_tempReturn
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackTrace_tempReturn = PlayerStats_alliance_states_get(this_7, player_getId(which_player), "when reading array PlayerStats_alliance_states in  in PlayerStats, line 67")
	set wurst_stack_depth = wurst_stack_depth - 1
	return stackTrace_tempReturn
endfunction

function dispatch_PlayerStats_PlayerStats_PlayerStats_getAllianceState takes integer this_7, player which_player, string stackPos returns integer
	local integer PlayerStats_PlayerStats_getAllianceState_result
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if PlayerStats_typeId[this_7] == 0 then
		if this_7 == 0 then
			call error("Nullpointer exception when calling PlayerStats.getAllianceState", "when calling error in PlayerStats, line 66")
		else
			call error("Called PlayerStats.getAllianceState on invalid object.", "when calling error in PlayerStats, line 66")
		endif
	endif
	set PlayerStats_PlayerStats_getAllianceState_result = PlayerStats_getAllianceState(this_7, which_player, "when calling getAllianceState in PlayerStats, line 66")
	set wurst_stack_depth = wurst_stack_depth - 1
	return PlayerStats_PlayerStats_getAllianceState_result
endfunction

function getGoodNewsStringForPlayer takes player pl, string stackPos returns string
	local integer f
	local integer r
	local string s
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set f = dispatch_PlayerStats_PlayerStats_PlayerStats_getForceId(PlayerStats_player_stats[player_getId(pl)], "when calling getForceId in Messages, line 37")
	set r = GetRandomInt(0, Strings_ksMsgCount - 1)
	if f == Forces_kWE then
		set s = Strings_ksGoodNewsWE[r]
	elseif f == Forces_kEE then
		set s = Strings_ksGoodNewsEE[r]
	elseif f == Forces_kME then
		set s = Strings_ksGoodNewsME[r]
	elseif f == Forces_kBZ then
		set s = Strings_ksGoodNewsBZ[r]
	else
		set s = Strings_ksGoodNews[0]
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return "|cff00ff00" + s + "|r"
endfunction

function goodNewsToPlayer takes string msg, player pl, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call DisplayTimedTextToPlayer(pl, 0., 0., Strings_kGoodNewsDur, getGoodNewsStringForPlayer(pl, "when calling getGoodNewsStringForPlayer in Messages, line 85"))
	call DisplayTimedTextToPlayer(pl, 0., 0., Strings_kGoodNewsDur, msg)
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function getWarningStringForPlayer takes player pl, string stackPos returns string
	local integer f
	local integer r
	local string s
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set f = dispatch_PlayerStats_PlayerStats_PlayerStats_getForceId(PlayerStats_player_stats[player_getId(pl)], "when calling getForceId in Messages, line 5")
	set r = GetRandomInt(0, Strings_ksMsgCount - 1)
	if f == Forces_kWE then
		set s = Strings_ksWarningWE[r]
	elseif f == Forces_kEE then
		set s = Strings_ksWarningEE[r]
	elseif f == Forces_kME then
		set s = Strings_ksWarningME[r]
	elseif f == Forces_kBZ then
		set s = Strings_ksWarningBZ[r]
	else
		set s = Strings_ksWarning[0]
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return "|cffff0000" + s + "|r"
endfunction

function warningToPlayer takes string msg, player pl, string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call DisplayTimedTextToPlayer(pl, 0., 0., Strings_kWarningDur, getWarningStringForPlayer(pl, "when calling getWarningStringForPlayer in Messages, line 79"))
	call DisplayTimedTextToPlayer(pl, 0., 0., Strings_kWarningDur, msg)
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function action_2 takes string stackPos returns nothing
	local player source
	local player target
	local string source_s
	local string target_s
	local integer source_id
	local force f1
	local force f2
	local integer temp
	local integer i_2
	local integer temp_2
	local force current_f
	local integer i_3
	local integer temp_3
	local force current_f_2
	local integer i_4
	local integer temp_4
	local force current_f_3
	local integer i_5
	local integer temp_5
	local force current_f_4
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set source = unit_getOwner(GetSpellAbilityUnit())
	set target = unit_getOwner(GetSpellTargetUnit())
	set source_s = player_getNameColored(source)
	set target_s = player_getNameColored(target)
	set source_id = GetPlayerId(source)
	set f1 = GetForceOfPlayer(source)
	set f2 = GetForceOfPlayer(source)
	set temp = GetSpellAbilityId()
	if temp == Abilities_aWar then
		if dispatch_PlayerStats_PlayerStats_PlayerStats_getAllianceState(PlayerStats_player_stats[source_id], target, "when calling getAllianceState in Diplomacy, line 16") == bj_ALLIANCE_UNALLIED then
			set wurst_stack_depth = wurst_stack_depth - 1
			set source = null
			set target = null
			set f1 = null
			set f2 = null
			set current_f = null
			set current_f_2 = null
			set current_f_3 = null
			set current_f_4 = null
			return
		endif
		call dispatch_PlayerStats_PlayerStats_PlayerStats_setAlliance(PlayerStats_player_stats[source_id], target, bj_ALLIANCE_UNALLIED, "when calling setAlliance in Diplomacy, line 18")
		call dispatch_PlayerStats_PlayerStats_PlayerStats_setAlliance(PlayerStats_player_stats[player_getId(target)], source, bj_ALLIANCE_UNALLIED, "when calling setAlliance in Diplomacy, line 19")
		set i_2 = 0
		set temp_2 = Main_PLAYER_SLOTS - 1
		loop
			exitwhen i_2 > temp_2
			set current_f = GetForceOfPlayer(Player_players[i_2])
			if Player_players[i_2] == target then
				call warningToPlayer(source_s + " has declared war on you!", Player_players[i_2], "when calling warningToPlayer in Diplomacy, line 24")
			elseif current_f == f1 or current_f == f2 then
				call attentionToPlayer(source_s + " has declared war on your brother-in-arms, " + target_s + "!", Player_players[i_2], "when calling attentionToPlayer in Diplomacy, line 26")
			else
				call noteToPlayer(source_s + " has declared war on " + target_s, Player_players[i_2], "when calling noteToPlayer in Diplomacy, line 28")
			endif
			set i_2 = i_2 + 1
		endloop
	elseif temp == Abilities_aAlly then
		if dispatch_PlayerStats_PlayerStats_PlayerStats_getAllianceState(PlayerStats_player_stats[source_id], target, "when calling getAllianceState in Diplomacy, line 31") == bj_ALLIANCE_ALLIED_VISION then
			set wurst_stack_depth = wurst_stack_depth - 1
			set source = null
			set target = null
			set f1 = null
			set f2 = null
			set current_f = null
			set current_f_2 = null
			set current_f_3 = null
			set current_f_4 = null
			return
		endif
		call dispatch_PlayerStats_PlayerStats_PlayerStats_setAlliance(PlayerStats_player_stats[source_id], target, bj_ALLIANCE_ALLIED_VISION, "when calling setAlliance in Diplomacy, line 33")
		set i_3 = 0
		set temp_3 = Main_PLAYER_SLOTS - 1
		loop
			exitwhen i_3 > temp_3
			set current_f_2 = GetForceOfPlayer(Player_players[i_3])
			if Player_players[i_3] == target then
				call goodNewsToPlayer(source_s + " seeks an alliance with you!", Player_players[i_3], "when calling goodNewsToPlayer in Diplomacy, line 38")
			elseif current_f_2 == f1 or current_f_2 == f2 then
				call noteToPlayer(source_s + " has allied " + target_s, Player_players[i_3], "when calling noteToPlayer in Diplomacy, line 40")
			else
				call noteToPlayer(source_s + " has allied " + target_s, Player_players[i_3], "when calling noteToPlayer in Diplomacy, line 42")
			endif
			set i_3 = i_3 + 1
		endloop
	elseif temp == Abilities_aNeutral then
		if dispatch_PlayerStats_PlayerStats_PlayerStats_getAllianceState(PlayerStats_player_stats[source_id], target, "when calling getAllianceState in Diplomacy, line 45") == bj_ALLIANCE_NEUTRAL then
			set wurst_stack_depth = wurst_stack_depth - 1
			set source = null
			set target = null
			set f1 = null
			set f2 = null
			set current_f = null
			set current_f_2 = null
			set current_f_3 = null
			set current_f_4 = null
			return
		endif
		call dispatch_PlayerStats_PlayerStats_PlayerStats_setAlliance(PlayerStats_player_stats[source_id], target, bj_ALLIANCE_NEUTRAL, "when calling setAlliance in Diplomacy, line 47")
		set i_4 = 0
		set temp_4 = Main_PLAYER_SLOTS - 1
		loop
			exitwhen i_4 > temp_4
			set current_f_3 = GetForceOfPlayer(Player_players[i_4])
			if Player_players[i_4] == target then
				call noteToPlayer(source_s + " is now neutral towards you!", Player_players[i_4], "when calling noteToPlayer in Diplomacy, line 52")
			elseif current_f_3 == f1 or current_f_3 == f2 then
				call noteToPlayer(source_s + " shows neutrality towards " + target_s, Player_players[i_4], "when calling noteToPlayer in Diplomacy, line 54")
			else
				call noteToPlayer(source_s + " shows neutrality towards " + target_s, Player_players[i_4], "when calling noteToPlayer in Diplomacy, line 56")
			endif
			set i_4 = i_4 + 1
		endloop
	elseif temp == Abilities_aUnally then
		if dispatch_PlayerStats_PlayerStats_PlayerStats_getAllianceState(PlayerStats_player_stats[source_id], target, "when calling getAllianceState in Diplomacy, line 59") == bj_ALLIANCE_NEUTRAL then
			set wurst_stack_depth = wurst_stack_depth - 1
			set source = null
			set target = null
			set f1 = null
			set f2 = null
			set current_f = null
			set current_f_2 = null
			set current_f_3 = null
			set current_f_4 = null
			return
		endif
		call dispatch_PlayerStats_PlayerStats_PlayerStats_setAlliance(PlayerStats_player_stats[source_id], target, bj_ALLIANCE_NEUTRAL, "when calling setAlliance in Diplomacy, line 61")
		set i_5 = 0
		set temp_5 = Main_PLAYER_SLOTS - 1
		loop
			exitwhen i_5 > temp_5
			set current_f_4 = GetForceOfPlayer(Player_players[i_5])
			if Player_players[i_5] == target then
				call noteToPlayer(source_s + " unallies you!", Player_players[i_5], "when calling noteToPlayer in Diplomacy, line 66")
			elseif current_f_4 == f1 or current_f_4 == f2 then
				call noteToPlayer(source_s + " has unallied " + target_s, Player_players[i_5], "when calling noteToPlayer in Diplomacy, line 68")
			else
				call noteToPlayer(source_s + " has unallied " + target_s, Player_players[i_5], "when calling noteToPlayer in Diplomacy, line 70")
			endif
			set i_5 = i_5 + 1
		endloop
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	set source = null
	set target = null
	set f1 = null
	set f2 = null
	set current_f = null
	set current_f_2 = null
	set current_f_3 = null
	set current_f_4 = null
endfunction

function bridge_action_2 takes nothing returns nothing
	set wurst_stack_depth = 0
	call action_2("Diplomacy, line 119")
endfunction

function cinematicTutorial takes string stackPos returns nothing
	local fogmodifier array fm
	local integer i_2
	local integer temp
	local integer iterator
	local string str
	local integer i_3
	local integer temp_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if Main_dbg_mode then
		set wurst_stack_depth = wurst_stack_depth - 1
		return
	endif
	set i_2 = 0
	set temp = Main_PLAYER_SLOTS - 1
	loop
		exitwhen i_2 > temp
		set fm[i_2] = CreateFogModifierRadiusLocBJ(true, Player_players[i_2], FOG_OF_WAR_VISIBLE, GetRectCenter(GetPlayableMapRect()), 999999.00)
		call FogModifierStart(fm[i_2])
		set i_2 = i_2 + 1
	endloop
	call ShowInterfaceForceOff(GetPlayersAll(), 0.50)
	set iterator = LinkedList_iterator(MainInit_ksCT, "when calling iterator in MainInit, line 89")
	loop
		exitwhen  not LLIterator_hasNext(iterator)
		set str = stringFromIndex(LLIterator_next(iterator), "when calling stringFromIndex in MainInit, line 89")
		if  not MainInit_skip_tutorial then
			call DisplayTimedTextToForce(GetPlayersAll(), MainInit_kCTfade, str)
			call TriggerSleepAction(MainInit_kCTchange)
		endif
	endloop
	call LLIterator_close(iterator, "when calling close in MainInit, line 89")
	call CinematicModeBJ(false, GetPlayersAll())
	set i_3 = 0
	set temp_2 = Main_PLAYER_SLOTS - 1
	loop
		exitwhen i_3 > temp_2
		call FogModifierStop(fm[i_3])
		set i_3 = i_3 + 1
	endloop
	set MainInit_skip_tutorial = true
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function bridge_cinematicTutorial takes nothing returns nothing
	set wurst_stack_depth = 0
	call cinematicTutorial("MainInit, line 138")
endfunction

function cond takes string stackPos returns boolean
	local integer id
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if unit_getOwner(GetSpellAbilityUnit()) == unit_getOwner(GetSpellTargetUnit()) or dispatch_PlayerStats_PlayerStats_PlayerStats_isObserver(PlayerStats_player_stats[player_getId(unit_getOwner(GetSpellAbilityUnit()))], "when calling isObserver in Diplomacy, line 107") or dispatch_PlayerStats_PlayerStats_PlayerStats_isObserver(PlayerStats_player_stats[player_getId(unit_getOwner(GetSpellTargetUnit()))], "when calling isObserver in Diplomacy, line 108") then
		set wurst_stack_depth = wurst_stack_depth - 1
		return false
	endif
	set id = GetSpellAbilityId()
	set wurst_stack_depth = wurst_stack_depth - 1
	return id == Abilities_aWar or id == Abilities_aAlly or id == Abilities_aNeutral or id == Abilities_aUnally or id == Abilities_aShareUnits
endfunction

function bridge_cond takes nothing returns boolean
	set wurst_stack_depth = 0
	return cond("Diplomacy, line 118")
endfunction

function asList_4 takes integer ts_0, integer ts_1, integer ts_2, integer ts_3, string stackPos returns integer
	local integer ll
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set ll = new_LinkedList("when calling new_LinkedList in LinkedList, line 391")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_0, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_1, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_2, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_3, "when calling add in LinkedList, line 393")
	set wurst_stack_depth = wurst_stack_depth - 1
	return ll
endfunction

function init_Abilities takes string stackPos returns boolean
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set Abilities_aWar = 1093677396
	set Abilities_aAlly = 1093677397
	set Abilities_aNeutral = 1093677398
	set Abilities_aUnally = 1093677400
	set Abilities_aShareUnits = 1093677399
	set Abilities_aLowTax = 1093677642
	set Abilities_aMedTax = 1093677641
	set Abilities_aHighTax = 1093677640
	set Abilities_aHarshTax = 1093678155
	set Abilities_aTaxes = asList_4(Abilities_aLowTax, Abilities_aMedTax, Abilities_aHighTax, Abilities_aHarshTax, "when calling asList in Abilities, line 17")
	set Abilities_aMassCommand = 1093678154
	set Abilities_aUnitHunger = 1093677904
	set Abilities_aConversion = 1093677620
	set Abilities_aTownHallCapitolAura = 1093677634
	set Abilities_aCastleAura = 1093677896
	set Abilities_oGarrison = "spiritwolf"
	set wurst_stack_depth = wurst_stack_depth - 1
	return true
endfunction

function bridge_init_Abilities takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_Abilities("Abilities, line 1")
endfunction

function alloc_CastleCapture_EventListener_line8 takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_7 = EventListener_maxIndex
			set EventListener_typeId[this_7] = 662
		else
			call error("Out of memory: Could not create CastleCapture_EventListener_line8.", "when calling error in CastleCapture, line 8")
			set this_7 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_7 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_7] = 662
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function init_CastleCapture takes string stackPos returns boolean
	local integer clVar
	local playerunitevent temp
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set temp = EVENT_PLAYER_UNIT_ATTACKED
	set clVar = alloc_CastleCapture_EventListener_line8("when calling alloc_CastleCapture_EventListener_line8 in CastleCapture, line 8")
	call construct_EventListener(clVar)
	call EventListener_add(temp, clVar, "when calling add in CastleCapture, line 8")
	set wurst_stack_depth = wurst_stack_depth - 1
	set temp = null
	return true
endfunction

function bridge_init_CastleCapture takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_CastleCapture("CastleCapture, line 1")
endfunction

function asList_2 takes integer ts_0, integer ts_1, string stackPos returns integer
	local integer ll
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set ll = new_LinkedList("when calling new_LinkedList in LinkedList, line 391")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_0, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_1, "when calling add in LinkedList, line 393")
	set wurst_stack_depth = wurst_stack_depth - 1
	return ll
endfunction

function init_City takes string stackPos returns boolean
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set City_kCityRadius = 1500.0
	set City_kCityRange = City_kCityRadius
	set City_kCityLifePercentToCapture = 50.0
	set City_kCityLifePercentOnceItCaptured = 60.0
	set City_kCityManaPercentOnceItCapruted = 30.0
	set City_kCityUnitPOAdd = 0.5
	set City_cityCount = 0
	set City_kCityNameLimit = 24
	set City_kCityPopCountRate = 5.0
	set City_kCityFastCount = City_kCityPopCountRate
	set City_kCityLongCount = 120.0
	set City_kCityTaxLevelTimeToChange = Main_TURN_TIME
	set City_kCityPopGrowthRateMinMax[0] = 0.0020
	set City_kCityPopGrowthRateMinMax[1] = 0.0025
	set City_kCityPopInit[0] = asList_2(10000, 20000, "when calling asList in City, line 37")
	set City_kCityPopInit[1] = asList_2(30000, 40000, "when calling asList in City, line 38")
	set City_kCityPopInit[2] = asList_2(60000, 90000, "when calling asList in City, line 39")
	set City_kCityPopInit[3] = asList_2(120000, 160000, "when calling asList in City, line 40")
	set City_kCityPopInit[4] = asList_2(180000, 220000, "when calling asList in City, line 41")
	set City_kCityTaxLevelMultipliers[0] = 1.0
	set City_kCityTaxLevelMultipliers[1] = 0.5
	set City_kCityTaxLevelMultipliers[2] = 1.6
	set City_kCityTaxLevelMultipliers[3] = 2.0
	set City_kCityTaxLevelPOIncrease[0] = 0.0
	set City_kCityTaxLevelPOIncrease[1] = 20.0
	set City_kCityTaxLevelPOIncrease[2] =  - 25.0
	set City_kCityTaxLevelPOIncrease[3] =  - 60.0
	set City_kCityTaxLevelPODecreasePerThousandPop[0] = 0.05
	set City_kCityTaxLevelPODecreasePerThousandPop[1] = 0.0
	set City_kCityTaxLevelPODecreasePerThousandPop[2] = 0.15
	set City_kCityTaxLevelPODecreasePerThousandPop[3] = 0.30
	set City_kCityTaxLevelPopModifier[0] = 1.0
	set City_kCityTaxLevelPopModifier[1] = 1.1
	set City_kCityTaxLevelPopModifier[2] = 0.85
	set City_kCityTaxLevelPopModifier[3] = 0.7
	set wurst_stack_depth = wurst_stack_depth - 1
	return true
endfunction

function bridge_init_City takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_City("City, line 1")
endfunction

function alloc_HashMap takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if Table_firstFree == 0 then
		if Table_maxIndex < 32768 then
			set Table_maxIndex = Table_maxIndex + 1
			set this_7 = Table_maxIndex
			set Table_typeId[this_7] = 733
		else
			call error("Out of memory: Could not create HashMap.", "when calling error in HashMap, line 8")
			set this_7 = 0
		endif
	else
		set Table_firstFree = Table_firstFree - 1
		set this_7 = Table_nextFree[Table_firstFree]
		set Table_typeId[this_7] = 733
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function construct_Table takes integer this_7 returns nothing
endfunction

function construct_HashMap takes integer this_7 returns nothing
	call construct_Table(this_7)
	set HashMap_size[this_7] = 0
endfunction

function new_HashMap takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_7 = alloc_HashMap("when calling alloc_HashMap in HashMap, line 7")
	call construct_HashMap(this_7)
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function init_CityBaseTaxes takes string stackPos returns boolean
	local integer receiver
	local integer receiver_2
	local integer receiver_3
	local integer receiver_4
	local integer receiver_5
	local integer receiver_6
	local integer receiver_7
	local integer receiver_8
	local integer receiver_9
	local integer receiver_10
	local integer receiver_11
	local integer receiver_12
	local integer receiver_13
	local integer receiver_14
	local integer receiver_15
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set CityBaseTaxes_kCityBaseTaxes = new_HashMap("when calling new_HashMap in CityBaseTaxes, line 5")
	set receiver = CityBaseTaxes_kCityBaseTaxes
	call dispatch_Table_Table_Table_saveInt(receiver, Units_uCapitolWE1, 20, "when calling saveInt in CityBaseTaxes, line 9")
	set receiver_2 = receiver
	call dispatch_Table_Table_Table_saveInt(receiver_2, Units_uCapitolWE2, 50, "when calling saveInt in CityBaseTaxes, line 10")
	set receiver_3 = receiver_2
	call dispatch_Table_Table_Table_saveInt(receiver_3, Units_uCapitolWE3, 120, "when calling saveInt in CityBaseTaxes, line 11")
	set receiver_4 = receiver_3
	call dispatch_Table_Table_Table_saveInt(receiver_4, Units_uCapitolEE1, 20, "when calling saveInt in CityBaseTaxes, line 12")
	set receiver_5 = receiver_4
	call dispatch_Table_Table_Table_saveInt(receiver_5, Units_uCapitolEE2, 50, "when calling saveInt in CityBaseTaxes, line 13")
	set receiver_6 = receiver_5
	call dispatch_Table_Table_Table_saveInt(receiver_6, Units_uCapitolEE3, 120, "when calling saveInt in CityBaseTaxes, line 14")
	set receiver_7 = receiver_6
	call dispatch_Table_Table_Table_saveInt(receiver_7, Units_uCapitolME1, 20, "when calling saveInt in CityBaseTaxes, line 15")
	set receiver_8 = receiver_7
	call dispatch_Table_Table_Table_saveInt(receiver_8, Units_uCapitolME2, 50, "when calling saveInt in CityBaseTaxes, line 16")
	set receiver_9 = receiver_8
	call dispatch_Table_Table_Table_saveInt(receiver_9, Units_uCapitolME3, 120, "when calling saveInt in CityBaseTaxes, line 17")
	set receiver_10 = receiver_9
	call dispatch_Table_Table_Table_saveInt(receiver_10, Units_uCapitolBZ1, 20, "when calling saveInt in CityBaseTaxes, line 18")
	set receiver_11 = receiver_10
	call dispatch_Table_Table_Table_saveInt(receiver_11, Units_uCapitolBZ2, 50, "when calling saveInt in CityBaseTaxes, line 19")
	set receiver_12 = receiver_11
	call dispatch_Table_Table_Table_saveInt(receiver_12, Units_uCapitolBZ3, 120, "when calling saveInt in CityBaseTaxes, line 20")
	set receiver_13 = receiver_12
	call dispatch_Table_Table_Table_saveInt(receiver_13, Units_uAutonomousTH, 5, "when calling saveInt in CityBaseTaxes, line 22")
	set receiver_14 = receiver_13
	call dispatch_Table_Table_Table_saveInt(receiver_14, Units_uTH, 10, "when calling saveInt in CityBaseTaxes, line 23")
	set receiver_15 = receiver_14
	call dispatch_Table_Table_Table_saveInt(receiver_15, Units_uCH, 30, "when calling saveInt in CityBaseTaxes, line 24")
	set wurst_stack_depth = wurst_stack_depth - 1
	return true
endfunction

function bridge_init_CityBaseTaxes takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_CityBaseTaxes("CityBaseTaxes, line 1")
endfunction

function alloc_CityBuilded_EventListener_line9 takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_7 = EventListener_maxIndex
			set EventListener_typeId[this_7] = 663
		else
			call error("Out of memory: Could not create CityBuilded_EventListener_line9.", "when calling error in CityBuilded, line 9")
			set this_7 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_7 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_7] = 663
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function init_CityBuilded takes string stackPos returns boolean
	local integer clVar
	local playerunitevent temp
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set temp = EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
	set clVar = alloc_CityBuilded_EventListener_line9("when calling alloc_CityBuilded_EventListener_line9 in CityBuilded, line 9")
	call construct_EventListener(clVar)
	call EventListener_add(temp, clVar, "when calling add in CityBuilded, line 9")
	set wurst_stack_depth = wurst_stack_depth - 1
	set temp = null
	return true
endfunction

function bridge_init_CityBuilded takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_CityBuilded("CityBuilded, line 1")
endfunction

function alloc_CityManage_EventListener_line35 takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_7 = EventListener_maxIndex
			set EventListener_typeId[this_7] = 664
		else
			call error("Out of memory: Could not create CityManage_EventListener_line35.", "when calling error in CityManage, line 35")
			set this_7 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_7 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_7] = 664
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function alloc_CityManage_EventListener_line9 takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_7 = EventListener_maxIndex
			set EventListener_typeId[this_7] = 665
		else
			call error("Out of memory: Could not create CityManage_EventListener_line9.", "when calling error in CityManage, line 9")
			set this_7 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_7 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_7] = 665
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function trigger_registerAnyUnitEvent takes trigger this_7, playerunitevent whichEvent returns nothing
	call TriggerRegisterAnyUnitEventBJ(this_7, whichEvent)
endfunction

function init_CityManage takes string stackPos returns boolean
	local integer clVar
	local trigger receiver
	local trigger receiver_2
	local trigger receiver_3
	local integer clVar_2
	local playerunitevent temp
	local playerunitevent temp_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if Main_dbg_mode then
		call CreateNUnitsAtLoc(5, Units_uSettlerReadyToSettle, Player_players[Main_dbg_player], Location( - 3000.0, 1700.0), 0.)
	endif
	set temp = EVENT_PLAYER_UNIT_SELECTED
	set clVar = alloc_CityManage_EventListener_line9("when calling alloc_CityManage_EventListener_line9 in CityManage, line 9")
	call construct_EventListener(clVar)
	call EventListener_add(temp, clVar, "when calling add in CityManage, line 9")
	set receiver = CreateTrigger()
	call trigger_addCondition(receiver, Condition(ref_function_CityManage_closure_impl))
	set receiver_2 = receiver
	call trigger_addAction(receiver_2, ref_function_bridge_CityManage_closure_impl)
	set receiver_3 = receiver_2
	call trigger_registerAnyUnitEvent(receiver_3, EVENT_PLAYER_UNIT_SPELL_CAST)
	set temp_2 = EVENT_PLAYER_UNIT_ATTACKED
	set clVar_2 = alloc_CityManage_EventListener_line35("when calling alloc_CityManage_EventListener_line35 in CityManage, line 35")
	call construct_EventListener(clVar_2)
	call EventListener_add(temp_2, clVar_2, "when calling add in CityManage, line 35")
	set wurst_stack_depth = wurst_stack_depth - 1
	set receiver = null
	set receiver_2 = null
	set receiver_3 = null
	set temp = null
	set temp_2 = null
	return true
endfunction

function bridge_init_CityManage takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_CityManage("CityManage, line 1")
endfunction

function alloc_CityModifierClass takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if CityModifierClass_firstFree == 0 then
		if CityModifierClass_maxIndex < 32768 then
			set CityModifierClass_maxIndex = CityModifierClass_maxIndex + 1
			set this_7 = CityModifierClass_maxIndex
		else
			call error("Out of memory: Could not create CityModifierClass.", "when calling error in CityModifiers, line 26")
			set this_7 = 0
		endif
	else
		set CityModifierClass_firstFree = CityModifierClass_firstFree - 1
		set this_7 = CityModifierClass_nextFree[CityModifierClass_firstFree]
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function construct_CityModifierClass takes integer this_7, string name_u, string desc_u, real time_u, real chance_u, real taxIncrease_u, integer popIncreaseTier_u, real popIncreaseMultiplier_u, real POIncrease_u, boolean isPOIncreaseConstant_u returns nothing
	set CityModifierClass_time[this_7] = time_u
	set CityModifierClass_POIncrease[this_7] = POIncrease_u
	set CityModifierClass_isPOIncreaseConstant[this_7] = isPOIncreaseConstant_u
	set CityModifierClass_chance[this_7] = chance_u
	set CityModifierClass_popIncreaseTier[this_7] = popIncreaseTier_u
	set CityModifierClass_popIncreaseMultiplier[this_7] = popIncreaseMultiplier_u
	set CityModifierClass_taxIncrease[this_7] = taxIncrease_u
	set CityModifierClass_name[this_7] = name_u
	set CityModifierClass_desc[this_7] = desc_u
endfunction

function new_CityModifierClass takes string name_u, string desc_u, real time_u, real chance_u, real taxIncrease_u, integer popIncreaseTier_u, real popIncreaseMultiplier_u, real POIncrease_u, boolean isPOIncreaseConstant_u, string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_7 = alloc_CityModifierClass("when calling alloc_CityModifierClass in CityModifiers, line 37")
	call construct_CityModifierClass(this_7, name_u, desc_u, time_u, chance_u, taxIncrease_u, popIncreaseTier_u, popIncreaseMultiplier_u, POIncrease_u, isPOIncreaseConstant_u)
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function realToIndex takes real r returns integer
	return real_toInt(r * TypeCasting_R2I_PRECISION)
endfunction

function init_CityModifiers takes string stackPos returns boolean
	local integer receiver
	local integer receiver_2
	local integer receiver_3
	local integer receiver_4
	local integer receiver_5
	local integer receiver_6
	local integer receiver_7
	local integer receiver_8
	local integer receiver_9
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set CityModifiers_mPortions[0] = asList_2(realToIndex(0.0005), realToIndex(0.001), "when calling asList in CityModifiers, line 7")
	set CityModifiers_mPortions[1] = asList_2(realToIndex(0.001), realToIndex(0.003), "when calling asList in CityModifiers, line 8")
	set CityModifiers_mPortions[2] = asList_2(realToIndex(0.003), realToIndex(0.01), "when calling asList in CityModifiers, line 9")
	set CityModifiers_mPortions[3] = asList_2(realToIndex(0.01), realToIndex(0.02), "when calling asList in CityModifiers, line 10")
	set CityModifiers_cm_recently_conquered = new_CityModifierClass("|cffff0000Just conquered|r", "|cffc00000-PO -pop|r", Main_TURN_TIME * 2., 1.0, 0.0, 1,  - 1.0,  - 30.0, false, "when calling new_CityModifierClass in CityModifiers, line 68")
	set CityModifiers_cm_recently_revolted = new_CityModifierClass("|cfffffb00Just revolted|r", "|cff00af00+PO|r|cffc00000 -pop|r", Main_TURN_TIME, 1.0, 0.0, 0, 0., 30.0, false, "when calling new_CityModifierClass in CityModifiers, line 76")
	set CityModifiers_cm_population_boom = new_CityModifierClass("|cff33ff00Population Boom|r", "|cff33ff00++pop|r", Main_TURN_TIME, 0.01, 0., 0, 0., 0., true, "when calling new_CityModifierClass in CityModifiers, line 84")
	set CityModifiers_cm_plague_outburst = new_CityModifierClass("|cffff0000Plague outburst|r", "|cffff0000--pop|r", Main_TURN_TIME * 2., 0.03, 0., 2, -1., 0., true, "when calling new_CityModifierClass in CityModifiers, line 92")
	set CityModifiers_cm_on_fire = new_CityModifierClass("|cffaf0000Big Fire|r", "|cffc00000-pop|r", Main_TURN_TIME * 0.25, 0.01, 0., 2, -1., 0., true, "when calling new_CityModifierClass in CityModifiers, line 100")
	set CityModifiers_cm_more_trade_estabilished = new_CityModifierClass("|cff15ff00More trade estabilished|r", "|cff00af00+tax +pop|r", Main_TURN_TIME * 2., 0.01, 0.15, 0, 1., 0., true, "when calling new_CityModifierClass in CityModifiers, line 108")
	set CityModifiers_cm_massacred_pop = new_CityModifierClass("|cffff0000Massacred population|r", "|cff00af00+PO |r|cffff0000--pop|r", Main_TURN_TIME * 0.25, 0.05, 0., 3, -1., 10., true, "when calling new_CityModifierClass in CityModifiers, line 116")
	set CityModifiers_cm_prospering = new_CityModifierClass("|cff00ff00Prospering|r", "|cff00af00+PO +pop +tax|r", Main_TURN_TIME * 2., 0.01, 0.10, 1, 1., 20.0, true, "when calling new_CityModifierClass in CityModifiers, line 124")
	set CityModifiers_cm_sieged = new_CityModifierClass("|cffff0000Sieged|r", "|cffc00000-PO -pop|r", Main_TURN_TIME / 24., 1.0, 0., 0, -1.,  - 10.0, true, "when calling new_CityModifierClass in CityModifiers, line 132")
	set CityModifiers_cityModifiers = new_HashMap("when calling new_HashMap in CityModifiers, line 142")
	set receiver = CityModifiers_cityModifiers
	call dispatch_HashMap_HashMap_HashMap_put(receiver, 0, CityModifiers_cm_recently_conquered, "when calling put in CityModifiers, line 149")
	set receiver_2 = receiver
	call dispatch_HashMap_HashMap_HashMap_put(receiver_2, 1, CityModifiers_cm_recently_revolted, "when calling put in CityModifiers, line 150")
	set receiver_3 = receiver_2
	call dispatch_HashMap_HashMap_HashMap_put(receiver_3, 2, CityModifiers_cm_population_boom, "when calling put in CityModifiers, line 151")
	set receiver_4 = receiver_3
	call dispatch_HashMap_HashMap_HashMap_put(receiver_4, 3, CityModifiers_cm_plague_outburst, "when calling put in CityModifiers, line 152")
	set receiver_5 = receiver_4
	call dispatch_HashMap_HashMap_HashMap_put(receiver_5, 4, CityModifiers_cm_on_fire, "when calling put in CityModifiers, line 153")
	set receiver_6 = receiver_5
	call dispatch_HashMap_HashMap_HashMap_put(receiver_6, 5, CityModifiers_cm_more_trade_estabilished, "when calling put in CityModifiers, line 154")
	set receiver_7 = receiver_6
	call dispatch_HashMap_HashMap_HashMap_put(receiver_7, 6, CityModifiers_cm_massacred_pop, "when calling put in CityModifiers, line 155")
	set receiver_8 = receiver_7
	call dispatch_HashMap_HashMap_HashMap_put(receiver_8, 7, CityModifiers_cm_prospering, "when calling put in CityModifiers, line 156")
	set receiver_9 = receiver_8
	call dispatch_HashMap_HashMap_HashMap_put(receiver_9, 8, CityModifiers_cm_sieged, "when calling put in CityModifiers, line 157")
	set wurst_stack_depth = wurst_stack_depth - 1
	return true
endfunction

function bridge_init_CityModifiers takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_CityModifiers("CityModifiers, line 1")
endfunction

function alloc_Clerics_EventListener_line5 takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_7 = EventListener_maxIndex
			set EventListener_typeId[this_7] = 667
		else
			call error("Out of memory: Could not create Clerics_EventListener_line5.", "when calling error in Clerics, line 5")
			set this_7 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_7 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_7] = 667
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function init_Clerics takes string stackPos returns boolean
	local integer clVar
	local playerunitevent temp
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set temp = EVENT_PLAYER_UNIT_SPELL_CAST
	set clVar = alloc_Clerics_EventListener_line5("when calling alloc_Clerics_EventListener_line5 in Clerics, line 5")
	call construct_EventListener(clVar)
	call EventListener_add(temp, clVar, "when calling add in Clerics, line 5")
	set wurst_stack_depth = wurst_stack_depth - 1
	set temp = null
	return true
endfunction

function bridge_init_Clerics takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_Clerics("Clerics, line 1")
endfunction

function alloc_ClosureEvents_CallbackSingle_line290 takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if CallbackSingle_firstFree == 0 then
		if CallbackSingle_maxIndex < 32768 then
			set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
			set this_7 = CallbackSingle_maxIndex
			set CallbackSingle_typeId[this_7] = 640
		else
			call error("Out of memory: Could not create ClosureEvents_CallbackSingle_line290.", "when calling error in ClosureEvents, line 290")
			set this_7 = 0
		endif
	else
		set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
		set this_7 = CallbackSingle_nextFree[CallbackSingle_firstFree]
		set CallbackSingle_typeId[this_7] = 640
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function nullTimer takes integer cb, string stackPos returns integer
	local integer stackTrace_tempReturn
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set stackTrace_tempReturn = doAfter(0., cb, "when calling doAfter in ClosureTimers, line 33")
	set wurst_stack_depth = wurst_stack_depth - 1
	return stackTrace_tempReturn
endfunction

function onUnitDeindex takes code func returns nothing
	call trigger_addCondition(UnitIndexer_onDeindexTrigger, Condition(func))
endfunction

function onUnitIndex takes code func returns nothing
	call trigger_addCondition(UnitIndexer_onIndexTrigger, Condition(func))
endfunction

function init_ClosureEvents takes string stackPos returns boolean
	local integer clVar
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set ClosureEvents_EVENT_PLAYER_CHAT_FILTER = ConvertPlayerEvent(96)
	set EventListener_castMap = new_HashMap("when calling new_HashMap in ClosureEvents, line 99")
	set EventListener_castMapCasters = new_HashMap("when calling new_HashMap in ClosureEvents, line 100")
	set EventListener_useMouseEvents = false
	set ClosureEvents_unitTrig = CreateTrigger()
	set ClosureEvents_leaveTrig = CreateTrigger()
	set ClosureEvents_keyTrig = CreateTrigger()
	set ClosureEvents_eventTypeCounter = 0
	call onUnitIndex(ref_function_ClosureEvents_closure_impl)
	call onUnitDeindex(ref_function_bridge_ClosureEvents_closure_impl)
	set clVar = alloc_ClosureEvents_CallbackSingle_line290("when calling alloc_ClosureEvents_CallbackSingle_line290 in ClosureEvents, line 290")
	call construct_CallbackSingle(clVar)
	call nullTimer(clVar, "when calling nullTimer in ClosureEvents, line 290")
	set wurst_stack_depth = wurst_stack_depth - 1
	return true
endfunction

function bridge_init_ClosureEvents takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_ClosureEvents("ClosureEvents, line 1")
endfunction

function initializeTable takes string stackPos returns nothing
	local integer i_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set i_2 = 0
	loop
		exitwhen i_2 > 15
		call dispatch_Table_Table_Table_saveInt(Colors_decs, string_getHash(Colors_hexs[i_2]), i_2, "when calling saveInt in Colors, line 206")
		set i_2 = i_2 + 1
	endloop
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function alloc_Table takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if Table_firstFree == 0 then
		if Table_maxIndex < 32768 then
			set Table_maxIndex = Table_maxIndex + 1
			set this_7 = Table_maxIndex
			set Table_typeId[this_7] = 732
		else
			call error("Out of memory: Could not create Table.", "when calling error in Table, line 6")
			set this_7 = 0
		endif
	else
		set Table_firstFree = Table_firstFree - 1
		set this_7 = Table_nextFree[Table_firstFree]
		set Table_typeId[this_7] = 732
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function new_Table takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_7 = alloc_Table("when calling alloc_Table in Table, line 5")
	call construct_Table(this_7)
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function init_Colors takes string stackPos returns boolean
	local integer tuple_temp
	local integer tuple_temp_2
	local integer tuple_temp_3
	local integer tuple_temp_4
	local integer tuple_temp_5
	local integer tuple_temp_6
	local integer tuple_temp_7
	local integer tuple_temp_8
	local integer tuple_temp_9
	local integer tuple_temp_10
	local integer tuple_temp_11
	local integer tuple_temp_12
	local integer tuple_temp_13
	local integer tuple_temp_14
	local integer tuple_temp_15
	local integer tuple_temp_16
	local integer tuple_temp_17
	local integer tuple_temp_18
	local integer tuple_temp_19
	local integer tuple_temp_20
	local integer tuple_temp_21
	local integer tuple_temp_22
	local integer tuple_temp_23
	local integer tuple_temp_24
	local integer tuple_temp_25
	local integer tuple_temp_26
	local integer tuple_temp_27
	local integer tuple_temp_28
	local integer tuple_temp_29
	local integer tuple_temp_30
	local integer tuple_temp_31
	local integer tuple_temp_32
	local integer tuple_temp_33
	local integer tuple_temp_34
	local integer tuple_temp_35
	local integer tuple_temp_36
	local integer tuple_temp_37
	local integer tuple_temp_38
	local integer tuple_temp_39
	local integer tuple_temp_40
	local integer tuple_temp_41
	local integer tuple_temp_42
	local integer tuple_temp_43
	local integer tuple_temp_44
	local integer tuple_temp_45
	local integer tuple_temp_46
	local integer tuple_temp_47
	local integer tuple_temp_48
	local integer tuple_temp_49
	local integer tuple_temp_50
	local integer tuple_temp_51
	local integer tuple_temp_52
	local integer tuple_temp_53
	local integer tuple_temp_54
	local integer tuple_temp_55
	local integer tuple_temp_56
	local integer tuple_temp_57
	local integer tuple_temp_58
	local integer tuple_temp_59
	local integer tuple_temp_60
	local integer tuple_temp_61
	local integer tuple_temp_62
	local integer tuple_temp_63
	local integer tuple_temp_64
	local integer tuple_temp_65
	local integer tuple_temp_66
	local integer tuple_temp_67
	local integer tuple_temp_68
	local integer tuple_temp_69
	local integer tuple_temp_70
	local integer tuple_temp_71
	local integer tuple_temp_72
	local integer tuple_temp_73
	local integer tuple_temp_74
	local integer tuple_temp_75
	local integer tuple_temp_76
	local integer tuple_temp_77
	local integer tuple_temp_78
	local integer tuple_temp_79
	local integer tuple_temp_80
	local integer tuple_temp_81
	local integer tuple_temp_82
	local integer tuple_temp_83
	local integer tuple_temp_84
	local integer tuple_temp_85
	local integer tuple_temp_86
	local integer tuple_temp_87
	local integer tuple_temp_88
	local integer tuple_temp_89
	local integer tuple_temp_90
	local integer tuple_temp_91
	local integer tuple_temp_92
	local integer tuple_temp_93
	local integer tuple_temp_94
	local integer tuple_temp_95
	local integer tuple_temp_96
	local integer tuple_temp_97
	local integer tuple_temp_98
	local integer tuple_temp_99
	local integer tuple_temp_100
	local integer tuple_temp_101
	local integer tuple_temp_102
	local integer tuple_temp_103
	local integer tuple_temp_104
	local integer tuple_temp_105
	local integer tuple_temp_106
	local integer tuple_temp_107
	local integer tuple_temp_108
	local integer tuple_temp_109
	local integer tuple_temp_110
	local integer tuple_temp_111
	local integer tuple_temp_112
	local integer tuple_temp_113
	local integer tuple_temp_114
	local integer tuple_temp_115
	local integer tuple_temp_116
	local integer tuple_temp_117
	local integer tuple_temp_118
	local integer tuple_temp_119
	local integer tuple_temp_120
	local integer tuple_temp_121
	local integer tuple_temp_122
	local integer tuple_temp_123
	local integer tuple_temp_124
	local integer tuple_temp_125
	local integer tuple_temp_126
	local integer tuple_temp_127
	local integer tuple_temp_128
	local integer tuple_temp_129
	local integer tuple_temp_130
	local integer tuple_temp_131
	local integer tuple_temp_132
	local integer tuple_temp_133
	local integer tuple_temp_134
	local integer tuple_temp_135
	local integer tuple_temp_136
	local integer tuple_temp_137
	local integer tuple_temp_138
	local integer tuple_temp_139
	local integer tuple_temp_140
	local integer tuple_temp_141
	local integer tuple_temp_142
	local integer tuple_temp_143
	local integer tuple_temp_144
	local integer tuple_temp_145
	local integer tuple_temp_146
	local integer tuple_temp_147
	local integer tuple_temp_148
	local integer tuple_temp_149
	local integer tuple_temp_150
	local integer tuple_temp_151
	local integer tuple_temp_152
	local integer tuple_temp_153
	local integer tuple_temp_154
	local integer tuple_temp_155
	local integer tuple_temp_156
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set tuple_temp = 255
	set tuple_temp_2 = 255
	set tuple_temp_3 = 255
	set tuple_temp_4 = 255
	set Colors_COLOR_WHITE_red = tuple_temp
	set Colors_COLOR_WHITE_green = tuple_temp_2
	set Colors_COLOR_WHITE_blue = tuple_temp_3
	set Colors_COLOR_WHITE_alpha = tuple_temp_4
	set tuple_temp_5 = 0
	set tuple_temp_6 = 0
	set tuple_temp_7 = 0
	set tuple_temp_8 = 0
	set Colors_COLOR_BLACK_red = tuple_temp_5
	set Colors_COLOR_BLACK_green = tuple_temp_6
	set Colors_COLOR_BLACK_blue = tuple_temp_7
	set Colors_COLOR_BLACK_alpha = tuple_temp_8
	set tuple_temp_9 = 255
	set tuple_temp_10 = 204
	set tuple_temp_11 = 0
	set tuple_temp_12 = 255
	set Colors_MAX_PLAYER_COLORS = 23
	set tuple_temp_13 = 255
	set tuple_temp_14 = 2
	set tuple_temp_15 = 2
	set Colors_PLAYER_COLORS_red[0] = tuple_temp_13
	set Colors_PLAYER_COLORS_green[0] = tuple_temp_14
	set Colors_PLAYER_COLORS_blue[0] = tuple_temp_15
	set tuple_temp_16 = 0
	set tuple_temp_17 = 65
	set tuple_temp_18 = 255
	set Colors_PLAYER_COLORS_red[1] = tuple_temp_16
	set Colors_PLAYER_COLORS_green[1] = tuple_temp_17
	set Colors_PLAYER_COLORS_blue[1] = tuple_temp_18
	set tuple_temp_19 = 27
	set tuple_temp_20 = 229
	set tuple_temp_21 = 184
	set Colors_PLAYER_COLORS_red[2] = tuple_temp_19
	set Colors_PLAYER_COLORS_green[2] = tuple_temp_20
	set Colors_PLAYER_COLORS_blue[2] = tuple_temp_21
	set tuple_temp_22 = 83
	set tuple_temp_23 = 0
	set tuple_temp_24 = 128
	set Colors_PLAYER_COLORS_red[3] = tuple_temp_22
	set Colors_PLAYER_COLORS_green[3] = tuple_temp_23
	set Colors_PLAYER_COLORS_blue[3] = tuple_temp_24
	set tuple_temp_25 = 255
	set tuple_temp_26 = 252
	set tuple_temp_27 = 0
	set Colors_PLAYER_COLORS_red[4] = tuple_temp_25
	set Colors_PLAYER_COLORS_green[4] = tuple_temp_26
	set Colors_PLAYER_COLORS_blue[4] = tuple_temp_27
	set tuple_temp_28 = 254
	set tuple_temp_29 = 137
	set tuple_temp_30 = 13
	set Colors_PLAYER_COLORS_red[5] = tuple_temp_28
	set Colors_PLAYER_COLORS_green[5] = tuple_temp_29
	set Colors_PLAYER_COLORS_blue[5] = tuple_temp_30
	set tuple_temp_31 = 31
	set tuple_temp_32 = 191
	set tuple_temp_33 = 0
	set Colors_PLAYER_COLORS_red[6] = tuple_temp_31
	set Colors_PLAYER_COLORS_green[6] = tuple_temp_32
	set Colors_PLAYER_COLORS_blue[6] = tuple_temp_33
	set tuple_temp_34 = 228
	set tuple_temp_35 = 90
	set tuple_temp_36 = 175
	set Colors_PLAYER_COLORS_red[7] = tuple_temp_34
	set Colors_PLAYER_COLORS_green[7] = tuple_temp_35
	set Colors_PLAYER_COLORS_blue[7] = tuple_temp_36
	set tuple_temp_37 = 148
	set tuple_temp_38 = 149
	set tuple_temp_39 = 150
	set Colors_PLAYER_COLORS_red[8] = tuple_temp_37
	set Colors_PLAYER_COLORS_green[8] = tuple_temp_38
	set Colors_PLAYER_COLORS_blue[8] = tuple_temp_39
	set tuple_temp_40 = 125
	set tuple_temp_41 = 190
	set tuple_temp_42 = 241
	set Colors_PLAYER_COLORS_red[9] = tuple_temp_40
	set Colors_PLAYER_COLORS_green[9] = tuple_temp_41
	set Colors_PLAYER_COLORS_blue[9] = tuple_temp_42
	set tuple_temp_43 = 15
	set tuple_temp_44 = 97
	set tuple_temp_45 = 69
	set Colors_PLAYER_COLORS_red[10] = tuple_temp_43
	set Colors_PLAYER_COLORS_green[10] = tuple_temp_44
	set Colors_PLAYER_COLORS_blue[10] = tuple_temp_45
	set tuple_temp_46 = 77
	set tuple_temp_47 = 41
	set tuple_temp_48 = 3
	set Colors_PLAYER_COLORS_red[11] = tuple_temp_46
	set Colors_PLAYER_COLORS_green[11] = tuple_temp_47
	set Colors_PLAYER_COLORS_blue[11] = tuple_temp_48
	set tuple_temp_49 = 155
	set tuple_temp_50 = 0
	set tuple_temp_51 = 0
	set Colors_PLAYER_COLORS_red[12] = tuple_temp_49
	set Colors_PLAYER_COLORS_green[12] = tuple_temp_50
	set Colors_PLAYER_COLORS_blue[12] = tuple_temp_51
	set tuple_temp_52 = 0
	set tuple_temp_53 = 0
	set tuple_temp_54 = 195
	set Colors_PLAYER_COLORS_red[13] = tuple_temp_52
	set Colors_PLAYER_COLORS_green[13] = tuple_temp_53
	set Colors_PLAYER_COLORS_blue[13] = tuple_temp_54
	set tuple_temp_55 = 0
	set tuple_temp_56 = 234
	set tuple_temp_57 = 255
	set Colors_PLAYER_COLORS_red[14] = tuple_temp_55
	set Colors_PLAYER_COLORS_green[14] = tuple_temp_56
	set Colors_PLAYER_COLORS_blue[14] = tuple_temp_57
	set tuple_temp_58 = 190
	set tuple_temp_59 = 0
	set tuple_temp_60 = 254
	set Colors_PLAYER_COLORS_red[15] = tuple_temp_58
	set Colors_PLAYER_COLORS_green[15] = tuple_temp_59
	set Colors_PLAYER_COLORS_blue[15] = tuple_temp_60
	set tuple_temp_61 = 235
	set tuple_temp_62 = 205
	set tuple_temp_63 = 135
	set Colors_PLAYER_COLORS_red[16] = tuple_temp_61
	set Colors_PLAYER_COLORS_green[16] = tuple_temp_62
	set Colors_PLAYER_COLORS_blue[16] = tuple_temp_63
	set tuple_temp_64 = 248
	set tuple_temp_65 = 164
	set tuple_temp_66 = 139
	set Colors_PLAYER_COLORS_red[17] = tuple_temp_64
	set Colors_PLAYER_COLORS_green[17] = tuple_temp_65
	set Colors_PLAYER_COLORS_blue[17] = tuple_temp_66
	set tuple_temp_67 = 191
	set tuple_temp_68 = 255
	set tuple_temp_69 = 128
	set Colors_PLAYER_COLORS_red[18] = tuple_temp_67
	set Colors_PLAYER_COLORS_green[18] = tuple_temp_68
	set Colors_PLAYER_COLORS_blue[18] = tuple_temp_69
	set tuple_temp_70 = 220
	set tuple_temp_71 = 185
	set tuple_temp_72 = 235
	set Colors_PLAYER_COLORS_red[19] = tuple_temp_70
	set Colors_PLAYER_COLORS_green[19] = tuple_temp_71
	set Colors_PLAYER_COLORS_blue[19] = tuple_temp_72
	set tuple_temp_73 = 40
	set tuple_temp_74 = 40
	set tuple_temp_75 = 40
	set Colors_PLAYER_COLORS_red[20] = tuple_temp_73
	set Colors_PLAYER_COLORS_green[20] = tuple_temp_74
	set Colors_PLAYER_COLORS_blue[20] = tuple_temp_75
	set tuple_temp_76 = 235
	set tuple_temp_77 = 240
	set tuple_temp_78 = 255
	set Colors_PLAYER_COLORS_red[21] = tuple_temp_76
	set Colors_PLAYER_COLORS_green[21] = tuple_temp_77
	set Colors_PLAYER_COLORS_blue[21] = tuple_temp_78
	set tuple_temp_79 = 0
	set tuple_temp_80 = 120
	set tuple_temp_81 = 30
	set Colors_PLAYER_COLORS_red[22] = tuple_temp_79
	set Colors_PLAYER_COLORS_green[22] = tuple_temp_80
	set Colors_PLAYER_COLORS_blue[22] = tuple_temp_81
	set tuple_temp_82 = 164
	set tuple_temp_83 = 11
	set tuple_temp_84 = 51
	set Colors_PLAYER_COLORS_red[23] = tuple_temp_82
	set Colors_PLAYER_COLORS_green[23] = tuple_temp_83
	set Colors_PLAYER_COLORS_blue[23] = tuple_temp_84
	set tuple_temp_85 = Colors_PLAYER_COLORS_red[0]
	set tuple_temp_86 = Colors_PLAYER_COLORS_green[0]
	set tuple_temp_87 = Colors_PLAYER_COLORS_blue[0]
	set tuple_temp_88 = Colors_PLAYER_COLORS_red[1]
	set tuple_temp_89 = Colors_PLAYER_COLORS_green[1]
	set tuple_temp_90 = Colors_PLAYER_COLORS_blue[1]
	set tuple_temp_91 = Colors_PLAYER_COLORS_red[2]
	set tuple_temp_92 = Colors_PLAYER_COLORS_green[2]
	set tuple_temp_93 = Colors_PLAYER_COLORS_blue[2]
	set tuple_temp_94 = Colors_PLAYER_COLORS_red[3]
	set tuple_temp_95 = Colors_PLAYER_COLORS_green[3]
	set tuple_temp_96 = Colors_PLAYER_COLORS_blue[3]
	set tuple_temp_97 = Colors_PLAYER_COLORS_red[4]
	set tuple_temp_98 = Colors_PLAYER_COLORS_green[4]
	set tuple_temp_99 = Colors_PLAYER_COLORS_blue[4]
	set tuple_temp_100 = Colors_PLAYER_COLORS_red[5]
	set tuple_temp_101 = Colors_PLAYER_COLORS_green[5]
	set tuple_temp_102 = Colors_PLAYER_COLORS_blue[5]
	set tuple_temp_103 = Colors_PLAYER_COLORS_red[6]
	set tuple_temp_104 = Colors_PLAYER_COLORS_green[6]
	set tuple_temp_105 = Colors_PLAYER_COLORS_blue[6]
	set tuple_temp_106 = Colors_PLAYER_COLORS_red[7]
	set tuple_temp_107 = Colors_PLAYER_COLORS_green[7]
	set tuple_temp_108 = Colors_PLAYER_COLORS_blue[7]
	set tuple_temp_109 = Colors_PLAYER_COLORS_red[8]
	set tuple_temp_110 = Colors_PLAYER_COLORS_green[8]
	set tuple_temp_111 = Colors_PLAYER_COLORS_blue[8]
	set tuple_temp_112 = Colors_PLAYER_COLORS_red[9]
	set tuple_temp_113 = Colors_PLAYER_COLORS_green[9]
	set tuple_temp_114 = Colors_PLAYER_COLORS_blue[9]
	set tuple_temp_115 = Colors_PLAYER_COLORS_red[10]
	set tuple_temp_116 = Colors_PLAYER_COLORS_green[10]
	set tuple_temp_117 = Colors_PLAYER_COLORS_blue[10]
	set tuple_temp_118 = Colors_PLAYER_COLORS_red[11]
	set tuple_temp_119 = Colors_PLAYER_COLORS_green[11]
	set tuple_temp_120 = Colors_PLAYER_COLORS_blue[11]
	set tuple_temp_121 = Colors_PLAYER_COLORS_red[12]
	set tuple_temp_122 = Colors_PLAYER_COLORS_green[12]
	set tuple_temp_123 = Colors_PLAYER_COLORS_blue[12]
	set tuple_temp_124 = Colors_PLAYER_COLORS_red[13]
	set tuple_temp_125 = Colors_PLAYER_COLORS_green[13]
	set tuple_temp_126 = Colors_PLAYER_COLORS_blue[13]
	set tuple_temp_127 = Colors_PLAYER_COLORS_red[14]
	set tuple_temp_128 = Colors_PLAYER_COLORS_green[14]
	set tuple_temp_129 = Colors_PLAYER_COLORS_blue[14]
	set tuple_temp_130 = Colors_PLAYER_COLORS_red[15]
	set tuple_temp_131 = Colors_PLAYER_COLORS_green[15]
	set tuple_temp_132 = Colors_PLAYER_COLORS_blue[15]
	set tuple_temp_133 = Colors_PLAYER_COLORS_red[16]
	set tuple_temp_134 = Colors_PLAYER_COLORS_green[16]
	set tuple_temp_135 = Colors_PLAYER_COLORS_blue[16]
	set tuple_temp_136 = Colors_PLAYER_COLORS_red[17]
	set tuple_temp_137 = Colors_PLAYER_COLORS_green[17]
	set tuple_temp_138 = Colors_PLAYER_COLORS_blue[17]
	set tuple_temp_139 = Colors_PLAYER_COLORS_red[18]
	set tuple_temp_140 = Colors_PLAYER_COLORS_green[18]
	set tuple_temp_141 = Colors_PLAYER_COLORS_blue[18]
	set tuple_temp_142 = Colors_PLAYER_COLORS_red[19]
	set tuple_temp_143 = Colors_PLAYER_COLORS_green[19]
	set tuple_temp_144 = Colors_PLAYER_COLORS_blue[19]
	set tuple_temp_145 = Colors_PLAYER_COLORS_red[20]
	set tuple_temp_146 = Colors_PLAYER_COLORS_green[20]
	set tuple_temp_147 = Colors_PLAYER_COLORS_blue[20]
	set tuple_temp_148 = Colors_PLAYER_COLORS_red[21]
	set tuple_temp_149 = Colors_PLAYER_COLORS_green[21]
	set tuple_temp_150 = Colors_PLAYER_COLORS_blue[21]
	set tuple_temp_151 = Colors_PLAYER_COLORS_red[22]
	set tuple_temp_152 = Colors_PLAYER_COLORS_green[22]
	set tuple_temp_153 = Colors_PLAYER_COLORS_blue[22]
	set tuple_temp_154 = Colors_PLAYER_COLORS_red[23]
	set tuple_temp_155 = Colors_PLAYER_COLORS_green[23]
	set tuple_temp_156 = Colors_PLAYER_COLORS_blue[23]
	set Colors_hexs[0] = "0"
	set Colors_hexs[1] = "1"
	set Colors_hexs[2] = "2"
	set Colors_hexs[3] = "3"
	set Colors_hexs[4] = "4"
	set Colors_hexs[5] = "5"
	set Colors_hexs[6] = "6"
	set Colors_hexs[7] = "7"
	set Colors_hexs[8] = "8"
	set Colors_hexs[9] = "9"
	set Colors_hexs[10] = "A"
	set Colors_hexs[11] = "B"
	set Colors_hexs[12] = "C"
	set Colors_hexs[13] = "D"
	set Colors_hexs[14] = "E"
	set Colors_hexs[15] = "F"
	set Colors_decs = new_Table("when calling new_Table in Colors, line 154")
	call initializeTable("when calling initializeTable in Colors, line 209")
	set wurst_stack_depth = wurst_stack_depth - 1
	return true
endfunction

function bridge_init_Colors takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_Colors("Colors, line 1")
endfunction

function alloc_Credits_CallbackPeriodic_line5 takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if CallbackPeriodic_firstFree == 0 then
		if CallbackPeriodic_maxIndex < 32768 then
			set CallbackPeriodic_maxIndex = CallbackPeriodic_maxIndex + 1
			set this_7 = CallbackPeriodic_maxIndex
			set CallbackPeriodic_typeId[this_7] = 633
		else
			call error("Out of memory: Could not create Credits_CallbackPeriodic_line5.", "when calling error in Credits, line 5")
			set this_7 = 0
		endif
	else
		set CallbackPeriodic_firstFree = CallbackPeriodic_firstFree - 1
		set this_7 = CallbackPeriodic_nextFree[CallbackPeriodic_firstFree]
		set CallbackPeriodic_typeId[this_7] = 633
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function init_Credits takes string stackPos returns boolean
	local integer clVar
	local real temp
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set temp = Main_TURN_TIME * 5.
	set clVar = alloc_Credits_CallbackPeriodic_line5("when calling alloc_Credits_CallbackPeriodic_line5 in Credits, line 5")
	call construct_CallbackPeriodic(clVar)
	call doPeriodically(temp, clVar, "when calling doPeriodically in Credits, line 5")
	set wurst_stack_depth = wurst_stack_depth - 1
	return true
endfunction

function bridge_init_Credits takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_Credits("Credits, line 1")
endfunction

function alloc_DateTime_CallbackPeriodic_line31 takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if CallbackPeriodic_firstFree == 0 then
		if CallbackPeriodic_maxIndex < 32768 then
			set CallbackPeriodic_maxIndex = CallbackPeriodic_maxIndex + 1
			set this_7 = CallbackPeriodic_maxIndex
			set CallbackPeriodic_typeId[this_7] = 634
		else
			call error("Out of memory: Could not create DateTime_CallbackPeriodic_line31.", "when calling error in DateTime, line 31")
			set this_7 = 0
		endif
	else
		set CallbackPeriodic_firstFree = CallbackPeriodic_firstFree - 1
		set this_7 = CallbackPeriodic_nextFree[CallbackPeriodic_firstFree]
		set CallbackPeriodic_typeId[this_7] = 634
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function init_DateTime takes string stackPos returns boolean
	local real sec_2
	local integer clVar
	local real temp
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set DateTime_kIncomeTime = Economy_kIncomeCountRate
	set DateTime_kSecondsPerSecond = 1.0
	set sec_2 = DateTime_kIncomeTime
	set temp = DateTime_kSecondsPerSecond
	set clVar = alloc_DateTime_CallbackPeriodic_line31("when calling alloc_DateTime_CallbackPeriodic_line31 in DateTime, line 31")
	call construct_CallbackPeriodic(clVar)
	set sec[clVar] = sec_2
	call doPeriodically(temp, clVar, "when calling doPeriodically in DateTime, line 31")
	set wurst_stack_depth = wurst_stack_depth - 1
	return true
endfunction

function bridge_init_DateTime takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_DateTime("DateTime, line 1")
endfunction

function createUnit takes player p, integer unitId, real pos_x_2, real pos_y_2, real facing_radians returns unit
	return CreateUnit(p, unitId, pos_x_2, pos_y_2, angle_degrees(facing_radians))
endfunction

function createDummy takes real pos_x_2, real pos_y_2, player owner, real facing_radians returns unit
	local unit u_5 = createUnit(owner, DummyRecycler_DUMMY_UNIT_ID, pos_x_2, pos_y_2, facing_radians)
	local unit receiver = u_5
	local unit receiver_2
	local unit receiver_3
	local unit receiver_4
	call unit_setXY(receiver, pos_x_2, pos_y_2)
	set receiver_2 = receiver
	call unit_addAbility(receiver_2, Basics_HEIGHT_ENABLER)
	set receiver_3 = receiver_2
	call unit_removeAbility(receiver_3, Basics_HEIGHT_ENABLER)
	set receiver_4 = receiver_3
	call unit_addAbility(receiver_4, Basics_LOCUST_ID)
	set createDummytempReturn = u_5
	set u_5 = null
	set receiver = null
	set receiver_2 = null
	set receiver_3 = null
	set receiver_4 = null
	return createDummytempReturn
endfunction

function alloc_ArrayQueue takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if ArrayQueue_firstFree == 0 then
		if ArrayQueue_maxIndex < 32768 then
			set ArrayQueue_maxIndex = ArrayQueue_maxIndex + 1
			set this_7 = ArrayQueue_maxIndex
			set ArrayQueue_typeId[this_7] = 626
		else
			call error("Out of memory: Could not create ArrayQueue.", "when calling error in DummyRecycler, line 49")
			set this_7 = 0
		endif
	else
		set ArrayQueue_firstFree = ArrayQueue_firstFree - 1
		set this_7 = ArrayQueue_nextFree[ArrayQueue_firstFree]
		set ArrayQueue_typeId[this_7] = 626
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function construct_ArrayQueue takes integer this_7 returns nothing
	set ArrayQueue_rp[this_7] = 0
	set ArrayQueue_size[this_7] = 0
endfunction

function new_ArrayQueue takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_7 = alloc_ArrayQueue("when calling alloc_ArrayQueue in DummyRecycler, line 49")
	call construct_ArrayQueue(this_7)
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function init_DummyRecycler takes string stackPos returns boolean
	local integer i_2
	local integer temp
	local integer j
	local integer temp_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set DummyRecycler_DUMMY_UNIT_ID = 2019849581
	set DummyRecycler_DIFFERENT_ANGLES = 8
	set DummyRecycler_ANGLE_DEGREE = 360 * 1. / DummyRecycler_DIFFERENT_ANGLES
	set DummyRecycler_SAVED_UNITS_PER_ANGLE = 6
	set DelayNode_t = CreateTimer()
	set DelayNode_first = 0
	set i_2 = 0
	set temp = DummyRecycler_DIFFERENT_ANGLES - 1
	loop
		exitwhen i_2 > temp
		set DummyRecycler_angleQueues[i_2] = new_ArrayQueue("when calling new_ArrayQueue in DummyRecycler, line 140")
		set j = 0
		set temp_2 = DummyRecycler_SAVED_UNITS_PER_ANGLE - 1
		loop
			exitwhen j > temp_2
			call dispatch_ArrayQueue_DummyRecycler_ArrayQueue_enqueue(DummyRecycler_angleQueues[i_2], createDummy(MapBounds_boundMax_x, MapBounds_boundMax_y, Basics_DUMMY_PLAYER, real_asAngleDegrees(i_2 * DummyRecycler_ANGLE_DEGREE)), "when calling enqueue in DummyRecycler, line 142")
			set j = j + 1
		endloop
		set i_2 = i_2 + 1
	endloop
	set wurst_stack_depth = wurst_stack_depth - 1
	return true
endfunction

function bridge_init_DummyRecycler takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_DummyRecycler("DummyRecycler, line 1")
endfunction

function alloc_Economy_CallbackPeriodic_line47 takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if CallbackPeriodic_firstFree == 0 then
		if CallbackPeriodic_maxIndex < 32768 then
			set CallbackPeriodic_maxIndex = CallbackPeriodic_maxIndex + 1
			set this_7 = CallbackPeriodic_maxIndex
			set CallbackPeriodic_typeId[this_7] = 635
		else
			call error("Out of memory: Could not create Economy_CallbackPeriodic_line47.", "when calling error in Economy, line 47")
			set this_7 = 0
		endif
	else
		set CallbackPeriodic_firstFree = CallbackPeriodic_firstFree - 1
		set this_7 = CallbackPeriodic_nextFree[CallbackPeriodic_firstFree]
		set CallbackPeriodic_typeId[this_7] = 635
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function alloc_Economy_CallbackPeriodic_line54 takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if CallbackPeriodic_firstFree == 0 then
		if CallbackPeriodic_maxIndex < 32768 then
			set CallbackPeriodic_maxIndex = CallbackPeriodic_maxIndex + 1
			set this_7 = CallbackPeriodic_maxIndex
			set CallbackPeriodic_typeId[this_7] = 636
		else
			call error("Out of memory: Could not create Economy_CallbackPeriodic_line54.", "when calling error in Economy, line 54")
			set this_7 = 0
		endif
	else
		set CallbackPeriodic_firstFree = CallbackPeriodic_firstFree - 1
		set this_7 = CallbackPeriodic_nextFree[CallbackPeriodic_firstFree]
		set CallbackPeriodic_typeId[this_7] = 636
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function init_Economy takes string stackPos returns boolean
	local integer i_2
	local integer temp
	local integer clVar
	local integer clVar_2
	local real temp_2
	local real temp_3
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set Economy_kIncomeCountRate = 120.0
	set Economy_kIncomeCountToMultiboardRate = 10.0
	set Economy_kStepTime = 0.5
	set Economy_income_counting_i = 0
	set i_2 = 0
	set temp = Main_PLAYER_SLOTS - 1
	loop
		exitwhen i_2 > temp
		set Economy_gold_adder[i_2] = 0
		set Economy_lumb_adder[i_2] = 0
		set i_2 = i_2 + 1
	endloop
	set temp_2 = Economy_kIncomeCountToMultiboardRate / 30.
	set clVar = alloc_Economy_CallbackPeriodic_line47("when calling alloc_Economy_CallbackPeriodic_line47 in Economy, line 47")
	call construct_CallbackPeriodic(clVar)
	call doPeriodically(temp_2, clVar, "when calling doPeriodically in Economy, line 47")
	set temp_3 = Economy_kIncomeCountToMultiboardRate
	set clVar_2 = alloc_Economy_CallbackPeriodic_line54("when calling alloc_Economy_CallbackPeriodic_line54 in Economy, line 54")
	call construct_CallbackPeriodic(clVar_2)
	call doPeriodically(temp_3, clVar_2, "when calling doPeriodically in Economy, line 54")
	set wurst_stack_depth = wurst_stack_depth - 1
	return true
endfunction

function bridge_init_Economy takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_Economy("Economy, line 1")
endfunction

function init_EventHelper takes string stackPos returns boolean
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call new_HashMap("when calling new_HashMap in EventHelper, line 6")
	call new_HashMap("when calling new_HashMap in EventHelper, line 7")
	call new_Table("when calling new_Table in EventHelper, line 8")
	set wurst_stack_depth = wurst_stack_depth - 1
	return true
endfunction

function bridge_init_EventHelper takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_EventHelper("EventHelper, line 1")
endfunction

function alloc_Garissons_EventListener_line7 takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_7 = EventListener_maxIndex
			set EventListener_typeId[this_7] = 668
		else
			call error("Out of memory: Could not create Garissons_EventListener_line7.", "when calling error in Garissons, line 7")
			set this_7 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_7 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_7] = 668
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function init_Garissons takes string stackPos returns boolean
	local integer clVar
	local playerunitevent temp
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set temp = EVENT_PLAYER_UNIT_ATTACKED
	set clVar = alloc_Garissons_EventListener_line7("when calling alloc_Garissons_EventListener_line7 in Garissons, line 7")
	call construct_EventListener(clVar)
	call EventListener_add(temp, clVar, "when calling add in Garissons, line 7")
	set wurst_stack_depth = wurst_stack_depth - 1
	set temp = null
	return true
endfunction

function bridge_init_Garissons takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_Garissons("Garissons, line 1")
endfunction

function alloc_LimitEncampments_EventListener_line12 takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_7 = EventListener_maxIndex
			set EventListener_typeId[this_7] = 669
		else
			call error("Out of memory: Could not create LimitEncampments_EventListener_line12.", "when calling error in LimitEncampments, line 12")
			set this_7 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_7 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_7] = 669
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function alloc_LimitEncampments_EventListener_line8 takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_7 = EventListener_maxIndex
			set EventListener_typeId[this_7] = 670
		else
			call error("Out of memory: Could not create LimitEncampments_EventListener_line8.", "when calling error in LimitEncampments, line 8")
			set this_7 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_7 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_7] = 670
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function init_LimitEncampments takes string stackPos returns boolean
	local integer clVar
	local integer clVar_2
	local playerunitevent temp
	local playerunitevent temp_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set temp = EVENT_PLAYER_UNIT_DEATH
	set clVar = alloc_LimitEncampments_EventListener_line8("when calling alloc_LimitEncampments_EventListener_line8 in LimitEncampments, line 8")
	call construct_EventListener(clVar)
	call EventListener_add(temp, clVar, "when calling add in LimitEncampments, line 8")
	set temp_2 = EVENT_PLAYER_UNIT_CONSTRUCT_START
	set clVar_2 = alloc_LimitEncampments_EventListener_line12("when calling alloc_LimitEncampments_EventListener_line12 in LimitEncampments, line 12")
	call construct_EventListener(clVar_2)
	call EventListener_add(temp_2, clVar_2, "when calling add in LimitEncampments, line 12")
	set wurst_stack_depth = wurst_stack_depth - 1
	set temp = null
	set temp_2 = null
	return true
endfunction

function bridge_init_LimitEncampments takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_LimitEncampments("LimitEncampments, line 1")
endfunction

function alloc_LimitMercenaryCamps_EventListener_line12 takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_7 = EventListener_maxIndex
			set EventListener_typeId[this_7] = 671
		else
			call error("Out of memory: Could not create LimitMercenaryCamps_EventListener_line12.", "when calling error in LimitMercenaryCamps, line 12")
			set this_7 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_7 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_7] = 671
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function alloc_LimitMercenaryCamps_EventListener_line8 takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_7 = EventListener_maxIndex
			set EventListener_typeId[this_7] = 672
		else
			call error("Out of memory: Could not create LimitMercenaryCamps_EventListener_line8.", "when calling error in LimitMercenaryCamps, line 8")
			set this_7 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_7 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_7] = 672
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function init_LimitMercenaryCamps takes string stackPos returns boolean
	local integer clVar
	local integer clVar_2
	local playerunitevent temp
	local playerunitevent temp_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set temp = EVENT_PLAYER_UNIT_DEATH
	set clVar = alloc_LimitMercenaryCamps_EventListener_line8("when calling alloc_LimitMercenaryCamps_EventListener_line8 in LimitMercenaryCamps, line 8")
	call construct_EventListener(clVar)
	call EventListener_add(temp, clVar, "when calling add in LimitMercenaryCamps, line 8")
	set temp_2 = EVENT_PLAYER_UNIT_CONSTRUCT_START
	set clVar_2 = alloc_LimitMercenaryCamps_EventListener_line12("when calling alloc_LimitMercenaryCamps_EventListener_line12 in LimitMercenaryCamps, line 12")
	call construct_EventListener(clVar_2)
	call EventListener_add(temp_2, clVar_2, "when calling add in LimitMercenaryCamps, line 12")
	set wurst_stack_depth = wurst_stack_depth - 1
	set temp = null
	set temp_2 = null
	return true
endfunction

function bridge_init_LimitMercenaryCamps takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_LimitMercenaryCamps("LimitMercenaryCamps, line 1")
endfunction

function alloc_LinkedList_Comparator_line504 takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if Comparator_firstFree == 0 then
		if Comparator_maxIndex < 32768 then
			set Comparator_maxIndex = Comparator_maxIndex + 1
			set this_7 = Comparator_maxIndex
		else
			call error("Out of memory: Could not create LinkedList_Comparator_line504.", "when calling error in LinkedList, line 504")
			set this_7 = 0
		endif
	else
		set Comparator_firstFree = Comparator_firstFree - 1
		set this_7 = Comparator_nextFree[Comparator_firstFree]
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function alloc_LinkedList_Comparator_line508 takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if Comparator_firstFree == 0 then
		if Comparator_maxIndex < 32768 then
			set Comparator_maxIndex = Comparator_maxIndex + 1
			set this_7 = Comparator_maxIndex
		else
			call error("Out of memory: Could not create LinkedList_Comparator_line508.", "when calling error in LinkedList, line 508")
			set this_7 = 0
		endif
	else
		set Comparator_firstFree = Comparator_firstFree - 1
		set this_7 = Comparator_nextFree[Comparator_firstFree]
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function init_LinkedList takes string stackPos returns boolean
	local integer clVar
	local integer clVar_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set clVar = alloc_LinkedList_Comparator_line504("when calling alloc_LinkedList_Comparator_line504 in LinkedList, line 504")
	set clVar_2 = alloc_LinkedList_Comparator_line508("when calling alloc_LinkedList_Comparator_line508 in LinkedList, line 508")
	call realToIndex(0.)
	set wurst_stack_depth = wurst_stack_depth - 1
	return true
endfunction

function bridge_init_LinkedList takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_LinkedList("LinkedList, line 1")
endfunction

function asList_1 takes integer ts_0, string stackPos returns integer
	local integer ll
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set ll = new_LinkedList("when calling new_LinkedList in LinkedList, line 391")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_0, "when calling add in LinkedList, line 393")
	set wurst_stack_depth = wurst_stack_depth - 1
	return ll
endfunction

function countActivePlayers takes nothing returns integer
	local integer c = 0
	local integer i_2 = 0
	local integer temp = Main_PLAYER_SLOTS - 1
	loop
		exitwhen i_2 > temp
		if player_isIngame(Player_players[i_2]) then
			set c = c + 1
		endif
		set i_2 = i_2 + 1
	endloop
	return c
endfunction

function alloc_PlayerStats takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if PlayerStats_firstFree == 0 then
		if PlayerStats_maxIndex < 32768 then
			set PlayerStats_maxIndex = PlayerStats_maxIndex + 1
			set this_7 = PlayerStats_maxIndex
			set PlayerStats_typeId[this_7] = 718
		else
			call error("Out of memory: Could not create PlayerStats.", "when calling error in PlayerStats, line 6")
			set this_7 = 0
		endif
	else
		set PlayerStats_firstFree = PlayerStats_firstFree - 1
		set this_7 = PlayerStats_nextFree[PlayerStats_firstFree]
		set PlayerStats_typeId[this_7] = 718
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function construct_PlayerStats takes integer this_7, player which_player, string stackPos returns nothing
	local integer i_2
	local integer temp
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set PlayerStats_is_in_game[this_7] = false
	set PlayerStats_is_observer[this_7] = false
	set PlayerStats_upkeep[this_7] = 0
	set PlayerStats_force_id[this_7] = -1
	set PlayerStats_selected_city_id[this_7] = -1
	set PlayerStats_pl[this_7] = which_player
	set PlayerStats_is_in_game[this_7] = player_isIngame(which_player)
	set i_2 = 0
	set temp = Main_PLAYER_SLOTS - 1
	loop
		exitwhen i_2 > temp
		if Player_players[i_2] == which_player then
			call PlayerStats_alliance_states_set(this_7, i_2, PlayerStats_PLAYER_SELF, "when writing array PlayerStats_alliance_states in PlayerStats, line 25")
		else
			call PlayerStats_alliance_states_set(this_7, i_2, bj_ALLIANCE_UNALLIED, "when writing array PlayerStats_alliance_states in PlayerStats, line 27")
		endif
		set i_2 = i_2 + 1
	endloop
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function new_PlayerStats takes player which_player, string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_7 = alloc_PlayerStats("when calling alloc_PlayerStats in PlayerStats, line 16")
	call construct_PlayerStats(this_7, which_player, "when calling construct_PlayerStats in PlayerStats, line 16")
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function print takes string msg returns nothing
	call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., Printing_DEBUG_MSG_DURATION, msg)
endfunction

function angle_cos takes real this_radians returns real
	return Cos(this_radians)
endfunction

function angle_sin takes real this_radians returns real
	return Sin(this_radians)
endfunction

function vec2_op_plus takes real this_x, real this_y, real v_x, real v_y returns real
	set vec2_op_plus_return_x = this_x + v_x
	set vec2_op_plus_return_y = this_y + v_y
	return vec2_op_plus_return_x
endfunction

function setPlayersAtStart takes string stackPos returns nothing
	local integer pl_left
	local integer pl_in_ring
	local real rad
	local real pos_x_2
	local real pos_y_2
	local player curpl
	local real ang_radians
	local integer i_2
	local integer temp
	local real tuple_temp
	local real tuple_temp_2
	local real tuple_temp_3
	local real tuple_temp_4
	local real tuple_temp_5
	local real tuple_temp_6
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set pl_left = Main_PLAYER_SLOTS
	set pl_in_ring = MainInit_kSpawnPlayersInFirstRing
	set rad = MainInit_kSpawnFirstRingRadius
	set tuple_temp = MainInit_kSpawnPoint_x
	set tuple_temp_2 = MainInit_kSpawnPoint_y
	set pos_x_2 = tuple_temp
	set pos_y_2 = tuple_temp_2
	set tuple_temp_3 = 0.0
	set ang_radians = tuple_temp_3
	loop
		exitwhen  not (pl_left > 0)
		set i_2 = 1
		set temp = pl_in_ring
		loop
			exitwhen i_2 > temp
			set tuple_temp_4 = i_2 * Maths_PI2 / pl_in_ring
			set ang_radians = tuple_temp_4
			set tuple_temp_5 = vec2_op_plus(MainInit_kSpawnPoint_x, MainInit_kSpawnPoint_y, rad * angle_cos(ang_radians), rad * angle_sin(ang_radians))
			set tuple_temp_6 = vec2_op_plus_return_y
			set pos_x_2 = tuple_temp_5
			set pos_y_2 = tuple_temp_6
			set curpl = Player_players[Main_PLAYER_SLOTS - pl_left + i_2 - 1]
			if dispatch_PlayerStats_PlayerStats_PlayerStats_isInGame(PlayerStats_player_stats[GetPlayerId(curpl)], "when calling isInGame in MainInit, line 54") then
				call CreateNUnitsAtLocFacingLocBJ(1, Units_uSettler, curpl, Location(pos_x_2, pos_y_2), Location(MainInit_kSpawnPoint_x, MainInit_kSpawnPoint_y))
			endif
			set i_2 = i_2 + 1
		endloop
		set rad = rad + MainInit_kSpawnRingRadiusChange
		set pl_left = pl_left - pl_in_ring
		set pl_in_ring = pl_in_ring + MainInit_kSpawnAddPerRing
		set pl_in_ring = min_2(pl_left, pl_in_ring)
	endloop
	set wurst_stack_depth = wurst_stack_depth - 1
	set curpl = null
endfunction

function newCity takes rect r, string n, integer f, integer tier, string stackPos returns nothing
	local group g_2
	local unit u_5
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set g_2 = GetUnitsInRectAll(r)
	set u_5 = group_next(g_2)
	set City_cities[City_cityCount] = new_City(u_5, n, f, tier, "when calling new_City in SettingCities, line 8")
	set wurst_stack_depth = wurst_stack_depth - 1
	set g_2 = null
	set u_5 = null
endfunction

function setupCities takes string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call newCity(gg_rct_CITY_BYZ_Adrianopolis, "Adrianopolis", Forces_kBZ, 1, "when calling newCity in SettingCities, line 27")
	call newCity(gg_rct_CITY_BYZ_Arta, "Arta", Forces_kBZ, 0, "when calling newCity in SettingCities, line 28")
	call newCity(gg_rct_CITY_BYZ_Athens, "Athens", Forces_kBZ, 1, "when calling newCity in SettingCities, line 29")
	call newCity(gg_rct_CITY_BYZ_Ragusa, "Ragusa", Forces_kBZ, 0, "when calling newCity in SettingCities, line 30")
	call newCity(gg_rct_CITY_BYZ_Canakkale, "Canakkale", Forces_kBZ, 0, "when calling newCity in SettingCities, line 31")
	call newCity(gg_rct_CITY_BYZ_Candia, "Candia", Forces_kBZ, 0, "when calling newCity in SettingCities, line 32")
	call newCity(gg_rct_CITY_BYZ_Constantinople, "Constantinople", Forces_kBZ, 4, "when calling newCity in SettingCities, line 33")
	call newCity(gg_rct_CITY_BYZ_Corinth, "Corinth", Forces_kBZ, 0, "when calling newCity in SettingCities, line 34")
	call newCity(gg_rct_CITY_BYZ_Durrazo, "Durazzo", Forces_kBZ, 0, "when calling newCity in SettingCities, line 35")
	call newCity(gg_rct_CITY_BYZ_Nikomedaia, "Nikomedeia", Forces_kBZ, 0, "when calling newCity in SettingCities, line 36")
	call newCity(gg_rct_CITY_BYZ_Kutaisi, "Kutaisi", Forces_kBZ, 0, "when calling newCity in SettingCities, line 37")
	call newCity(gg_rct_CITY_BYZ_Nicae, "Nicae", Forces_kBZ, 2, "when calling newCity in SettingCities, line 38")
	call newCity(gg_rct_CITY_BYZ_Nicosia, "Nicosia", Forces_kBZ, 0, "when calling newCity in SettingCities, line 39")
	call newCity(gg_rct_CITY_BYZ_Rhodes, "Rhodes", Forces_kBZ, 0, "when calling newCity in SettingCities, line 40")
	call newCity(gg_rct_CITY_BYZ_Scopia, "Scopia", Forces_kBZ, 0, "when calling newCity in SettingCities, line 41")
	call newCity(gg_rct_CITY_BYZ_Smyrna, "Smyrna", Forces_kBZ, 0, "when calling newCity in SettingCities, line 42")
	call newCity(gg_rct_CITY_BYZ_Tbilisi, "Tbilisi", Forces_kBZ, 0, "when calling newCity in SettingCities, line 43")
	call newCity(gg_rct_CITY_BYZ_Trebizond, "Trebizond", Forces_kBZ, 1, "when calling newCity in SettingCities, line 44")
	call newCity(gg_rct_CITY_Byz_Thessalonika, "Thessalonika", Forces_kBZ, 3, "when calling newCity in SettingCities, line 45")
	call newCity(gg_rct_CITY_EE_Astrakhan, "Astrakhan'", Forces_kEE, 2, "when calling newCity in SettingCities, line 49")
	call newCity(gg_rct_CITY_EE_Azaq, "Azaq", Forces_kEE, 0, "when calling newCity in SettingCities, line 50")
	call newCity(gg_rct_CITY_EE_Baia, "Baia", Forces_kEE, 0, "when calling newCity in SettingCities, line 51")
	call newCity(gg_rct_CITY_EE_Bryansk, "Bryansk", Forces_kEE, 0, "when calling newCity in SettingCities, line 52")
	call newCity(gg_rct_CITY_EE_Caffa, "Caffa", Forces_kEE, 0, "when calling newCity in SettingCities, line 53")
	call newCity(gg_rct_CITY_EE_Constanta, "Constanta", Forces_kEE, 0, "when calling newCity in SettingCities, line 54")
	call newCity(gg_rct_CITY_EE_Dnipro, "Dnipro", Forces_kEE, 0, "when calling newCity in SettingCities, line 55")
	call newCity(gg_rct_CITY_EE_Halych, "Halych", Forces_kEE, 0, "when calling newCity in SettingCities, line 56")
	call newCity(gg_rct_CITY_EE_Kiev, "Kiev", Forces_kEE, 2, "when calling newCity in SettingCities, line 57")
	call newCity(gg_rct_CITY_EE_Konigsberg, "Konigsberg", Forces_kEE, 0, "when calling newCity in SettingCities, line 58")
	call newCity(gg_rct_CITY_EE_Hrodna, "Hrodna", Forces_kEE, 0, "when calling newCity in SettingCities, line 59")
	call newCity(gg_rct_CITY_EE_Minsk, "Minsk", Forces_kEE, 1, "when calling newCity in SettingCities, line 60")
	call newCity(gg_rct_CITY_EE_Moscow, "Moscow", Forces_kEE, 0, "when calling newCity in SettingCities, line 61")
	call newCity(gg_rct_CITY_EE_Novgorod, "Novgorod", Forces_kEE, 0, "when calling newCity in SettingCities, line 62")
	call newCity(gg_rct_CITY_EE_Oleshe, "Olesh'e", Forces_kEE, 0, "when calling newCity in SettingCities, line 63")
	call newCity(gg_rct_CITY_EE_Polotsk, "Polotsk", Forces_kEE, 0, "when calling newCity in SettingCities, line 64")
	call newCity(gg_rct_CITY_EE_Pskov, "Pskov", Forces_kEE, 0, "when calling newCity in SettingCities, line 65")
	call newCity(gg_rct_CITY_EE_Reval, "Reval", Forces_kEE, 0, "when calling newCity in SettingCities, line 66")
	call newCity(gg_rct_CITY_EE_Riga, "Riga", Forces_kEE, 1, "when calling newCity in SettingCities, line 67")
	call newCity(gg_rct_CITY_EE_Syrt, "Bulgar", Forces_kEE, 0, "when calling newCity in SettingCities, line 68")
	call newCity(gg_rct_CITY_EE_Ryazan, "Ryazan'", Forces_kEE, 0, "when calling newCity in SettingCities, line 69")
	call newCity(gg_rct_CITY_EE_Sarkel, "Sarkel", Forces_kEE, 0, "when calling newCity in SettingCities, line 70")
	call newCity(gg_rct_CITY_EE_Smolensk, "Smolensk", Forces_kEE, 1, "when calling newCity in SettingCities, line 71")
	call newCity(gg_rct_CITY_EE_Sofia, "Sofia", Forces_kEE, 0, "when calling newCity in SettingCities, line 72")
	call newCity(gg_rct_CITY_EE_Targoviste, "Targovitse", Forces_kEE, 1, "when calling newCity in SettingCities, line 73")
	call newCity(gg_rct_CITY_EE_Timutarakan, "Tmutarakan'", Forces_kEE, 0, "when calling newCity in SettingCities, line 74")
	call newCity(gg_rct_CITY_EE_Turku, "Turku", Forces_kEE, 0, "when calling newCity in SettingCities, line 75")
	call newCity(gg_rct_CITY_EE_Vilnius, "Vilnius", Forces_kEE, 1, "when calling newCity in SettingCities, line 76")
	call newCity(gg_rct_CITY_EE_Zhytomyr, "Zhytomir", Forces_kEE, 0, "when calling newCity in SettingCities, line 77")
	call newCity(gg_rct_CITY_ME_Acre, "Acre", Forces_kME, 2, "when calling newCity in SettingCities, line 81")
	call newCity(gg_rct_CITY_ME_Adana, "Adana", Forces_kME, 0, "when calling newCity in SettingCities, line 82")
	call newCity(gg_rct_CITY_ME_Alamut, "Alamut", Forces_kME, 0, "when calling newCity in SettingCities, line 83")
	call newCity(gg_rct_CITY_ME_Al_Aqaba, "Al-Aqaba", Forces_kME, 0, "when calling newCity in SettingCities, line 84")
	call newCity(gg_rct_CITY_ME_Alexandria, "Alexandria", Forces_kME, 2, "when calling newCity in SettingCities, line 85")
	call newCity(gg_rct_CITY_ME_Algiers, "Algiers", Forces_kME, 0, "when calling newCity in SettingCities, line 86")
	call newCity(gg_rct_CITY_ME_Ankara, "Ankara", Forces_kME, 1, "when calling newCity in SettingCities, line 87")
	call newCity(gg_rct_CITY_ME_Antioch, "Antioch", Forces_kME, 2, "when calling newCity in SettingCities, line 88")
	call newCity(gg_rct_CITY_ME_Badajoz, "Badajoz", Forces_kME, 0, "when calling newCity in SettingCities, line 89")
	call newCity(gg_rct_CITY_ME_Baghdad, "Baghdad", Forces_kME, 4, "when calling newCity in SettingCities, line 90")
	call newCity(gg_rct_CITY_ME_Baku, "Baku", Forces_kME, 0, "when calling newCity in SettingCities, line 91")
	call newCity(gg_rct_CITY_ME_Benghazi, "Benghazi", Forces_kME, 1, "when calling newCity in SettingCities, line 92")
	call newCity(gg_rct_CITY_ME_Beleb_el_Anab, "Beleb-el-Anab", Forces_kME, 0, "when calling newCity in SettingCities, line 93")
	call newCity(gg_rct_CITY_ME_Cairo, "Cairo", Forces_kME, 3, "when calling newCity in SettingCities, line 94")
	call newCity(gg_rct_CITY_ME_Cordoba, "Cordoba", Forces_kME, 4, "when calling newCity in SettingCities, line 95")
	call newCity(gg_rct_CITY_ME_Damascus, "Damascus", Forces_kME, 2, "when calling newCity in SettingCities, line 96")
	call newCity(gg_rct_CITY_ME_Damietta, "Damietta", Forces_kME, 1, "when calling newCity in SettingCities, line 97")
	call newCity(gg_rct_CITY_ME_Diyarbakir, "Diyarbakir", Forces_kME, 0, "when calling newCity in SettingCities, line 98")
	call newCity(gg_rct_CITY_ME_Edessa, "Edessa", Forces_kME, 1, "when calling newCity in SettingCities, line 99")
	call newCity(gg_rct_CITY_ME_Erez, "Erez", Forces_kME, 1, "when calling newCity in SettingCities, line 100")
	call newCity(gg_rct_CITY_ME_Fes, "Fes", Forces_kME, 3, "when calling newCity in SettingCities, line 101")
	call newCity(gg_rct_CITY_ME_Gaza, "Gaza", Forces_kME, 0, "when calling newCity in SettingCities, line 102")
	call newCity(gg_rct_CITY_ME_Granada, "Granada", Forces_kME, 2, "when calling newCity in SettingCities, line 103")
	call newCity(gg_rct_CITY_ME_Isparta, "Isparta", Forces_kME, 0, "when calling newCity in SettingCities, line 104")
	call newCity(gg_rct_CITY_ME_JERUSALEM, "Jerusalem", Forces_kME, 3, "when calling newCity in SettingCities, line 105")
	call newCity(gg_rct_CITY_ME_Kayseri, "Kayseri", Forces_kME, 1, "when calling newCity in SettingCities, line 106")
	call newCity(gg_rct_CITY_ME_Kerak, "Kerak", Forces_kME, 0, "when calling newCity in SettingCities, line 107")
	call newCity(gg_rct_CITY_ME_Kermanshah, "Kermanshah", Forces_kME, 0, "when calling newCity in SettingCities, line 108")
	call newCity(gg_rct_CITY_ME_Konya, "Konya", Forces_kME, 0, "when calling newCity in SettingCities, line 109")
	call newCity(gg_rct_CITY_ME_Lisbon, "Lisbon", Forces_kME, 0, "when calling newCity in SettingCities, line 110")
	call newCity(gg_rct_CITY_ME_Luxor, "Luxor", Forces_kME, 0, "when calling newCity in SettingCities, line 111")
	call newCity(gg_rct_CITY_ME_Madrid, "Madrid", Forces_kME, 0, "when calling newCity in SettingCities, line 112")
	call newCity(gg_rct_CITY_ME_Mahdya, "Mahdya", Forces_kME, 0, "when calling newCity in SettingCities, line 113")
	call newCity(gg_rct_CITY_ME_Marakesh, "Marrakesh", Forces_kME, 3, "when calling newCity in SettingCities, line 114")
	call newCity(gg_rct_CITY_ME_Medina, "Medina", Forces_kME, 2, "when calling newCity in SettingCities, line 115")
	call newCity(gg_rct_CITY_ME_Melilla, "Melilla", Forces_kME, 0, "when calling newCity in SettingCities, line 116")
	call newCity(gg_rct_CITY_ME_Mosul, "Mosul", Forces_kME, 1, "when calling newCity in SettingCities, line 117")
	call newCity(gg_rct_CITY_ME_Murcia, "Murcia", Forces_kME, 1, "when calling newCity in SettingCities, line 118")
	call newCity(gg_rct_CITY_ME_Oran, "Oran", Forces_kME, 0, "when calling newCity in SettingCities, line 119")
	call newCity(gg_rct_CITY_ME_Palma, "Palma", Forces_kME, 1, "when calling newCity in SettingCities, line 120")
	call newCity(gg_rct_CITY_ME_Quarisiya, "Quarisiya", Forces_kME, 1, "when calling newCity in SettingCities, line 121")
	call newCity(gg_rct_CITY_ME_Silves, "Silves", Forces_kME, 0, "when calling newCity in SettingCities, line 122")
	call newCity(gg_rct_CITY_ME_Sinop, "Sinop", Forces_kME, 0, "when calling newCity in SettingCities, line 123")
	call newCity(gg_rct_CITY_ME_Tamiya, "Tamiya", Forces_kME, 0, "when calling newCity in SettingCities, line 124")
	call newCity(gg_rct_CITY_ME_Tartus, "Tartus", Forces_kME, 0, "when calling newCity in SettingCities, line 125")
	call newCity(gg_rct_CITY_ME_Tabriz, "Tabriz", Forces_kME, 0, "when calling newCity in SettingCities, line 126")
	call newCity(gg_rct_CITY_ME_Tripoli, "Tripoli", Forces_kME, 1, "when calling newCity in SettingCities, line 127")
	call newCity(gg_rct_CITY_ME_Tunis, "Tunis", Forces_kME, 1, "when calling newCity in SettingCities, line 128")
	call newCity(gg_rct_CITY_ME_Valencia, "Valencia", Forces_kME, 0, "when calling newCity in SettingCities, line 129")
	call newCity(gg_rct_CITY_ME_Yerevan, "Yerevan", Forces_kME, 0, "when calling newCity in SettingCities, line 130")
	call newCity(gg_rct_CITY_WE_Aarhus, "Aarhus", Forces_kWE, 1, "when calling newCity in SettingCities, line 134")
	call newCity(gg_rct_CITY_WE_Aberdeen, "Aberdeen", Forces_kWE, 1, "when calling newCity in SettingCities, line 135")
	call newCity(gg_rct_CITY_WE_Ajaccio, "Ajaccio", Forces_kWE, 0, "when calling newCity in SettingCities, line 136")
	call newCity(gg_rct_CITY_WE_Ancona, "Ancona", Forces_kWE, 1, "when calling newCity in SettingCities, line 137")
	call newCity(gg_rct_CITY_WE_Angers, "Angers", Forces_kWE, 0, "when calling newCity in SettingCities, line 138")
	call newCity(gg_rct_CITY_WE_Antwerp, "Antwerp", Forces_kWE, 0, "when calling newCity in SettingCities, line 139")
	call newCity(gg_rct_CITY_WE_Barcelona, "Barcelona", Forces_kWE, 1, "when calling newCity in SettingCities, line 140")
	call newCity(gg_rct_CITY_WE_Bari, "Bari", Forces_kWE, 0, "when calling newCity in SettingCities, line 141")
	call newCity(gg_rct_CITY_WE_Belgrade, "Belgrade", Forces_kWE, 1, "when calling newCity in SettingCities, line 142")
	call newCity(gg_rct_CITY_WE_Bergen, "Bergen", Forces_kWE, 1, "when calling newCity in SettingCities, line 143")
	call newCity(gg_rct_CITY_WE_Bern, "Bern", Forces_kWE, 0, "when calling newCity in SettingCities, line 144")
	call newCity(gg_rct_CITY_WE_Bologna, "Bologna", Forces_kWE, 1, "when calling newCity in SettingCities, line 145")
	call newCity(gg_rct_CITY_WE_Bordeaux, "Bordeaux", Forces_kWE, 1, "when calling newCity in SettingCities, line 146")
	call newCity(gg_rct_CITY_WE_Brasov, "Brasov", Forces_kWE, 0, "when calling newCity in SettingCities, line 147")
	call newCity(gg_rct_CITY_WE_Bruges, "Bruges", Forces_kWE, 0, "when calling newCity in SettingCities, line 148")
	call newCity(gg_rct_CITY_WE_Burgh, "Burgh", Forces_kWE, 0, "when calling newCity in SettingCities, line 149")
	call newCity(gg_rct_CITY_WE_Burgos, "Burgos", Forces_kWE, 1, "when calling newCity in SettingCities, line 150")
	call newCity(gg_rct_CITY_WE_Caen, "Caen", Forces_kWE, 0, "when calling newCity in SettingCities, line 151")
	call newCity(gg_rct_CITY_WE_Caernarfon, "Caenarfon", Forces_kWE, 0, "when calling newCity in SettingCities, line 152")
	call newCity(gg_rct_CITY_WE_Cagliari, "Cagliari", Forces_kWE, 0, "when calling newCity in SettingCities, line 153")
	call newCity(gg_rct_CITY_WE_Cardiff, "Cardiff", Forces_kWE, 0, "when calling newCity in SettingCities, line 154")
	call newCity(gg_rct_CITY_WE_Clermont, "Clermont", Forces_kWE, 1, "when calling newCity in SettingCities, line 155")
	call newCity(gg_rct_CITY_WE_Cologne, "Cologne", Forces_kWE, 1, "when calling newCity in SettingCities, line 156")
	call newCity(gg_rct_CITY_WE_Dijon, "Dijon", Forces_kWE, 0, "when calling newCity in SettingCities, line 157")
	call newCity(gg_rct_CITY_WE_Dublin, "Dublin", Forces_kWE, 0, "when calling newCity in SettingCities, line 158")
	call newCity(gg_rct_CITY_WE_Edinburgh, "Edinburgh", Forces_kWE, 0, "when calling newCity in SettingCities, line 159")
	call newCity(gg_rct_CITY_WE_Eikundarsund, "Eikundarsund", Forces_kWE, 0, "when calling newCity in SettingCities, line 160")
	call newCity(gg_rct_CITY_WE_Esztergom, "Esztergom", Forces_kWE, 1, "when calling newCity in SettingCities, line 161")
	call newCity(gg_rct_CITY_WE_Exeter, "Exeter", Forces_kWE, 0, "when calling newCity in SettingCities, line 162")
	call newCity(gg_rct_CITY_WE_Gdansk, "Gdansk", Forces_kWE, 0, "when calling newCity in SettingCities, line 163")
	call newCity(gg_rct_CITY_WE_Flensburg, "Flensburg", Forces_kWE, 0, "when calling newCity in SettingCities, line 164")
	call newCity(gg_rct_CITY_WE_Frankfurt, "Frankfurt", Forces_kWE, 1, "when calling newCity in SettingCities, line 165")
	call newCity(gg_rct_CITY_WE_Galway, "Galway", Forces_kWE, 0, "when calling newCity in SettingCities, line 166")
	call newCity(gg_rct_CITY_WE_Genoa, "Genoa", Forces_kWE, 2, "when calling newCity in SettingCities, line 167")
	call newCity(gg_rct_CITY_WE_Groningen, "Groningen", Forces_kWE, 0, "when calling newCity in SettingCities, line 168")
	call newCity(gg_rct_CITY_WE_Innsbruck, "Innsbruck", Forces_kWE, 0, "when calling newCity in SettingCities, line 169")
	call newCity(gg_rct_CITY_WE_Inverness, "Inverness", Forces_kWE, 0, "when calling newCity in SettingCities, line 170")
	call newCity(gg_rct_CITY_WE_Desmond, "Desmond", Forces_kWE, 0, "when calling newCity in SettingCities, line 171")
	call newCity(gg_rct_CITY_WE_Reggio, "Reggio", Forces_kWE, 0, "when calling newCity in SettingCities, line 173")
	call newCity(gg_rct_CITY_WE_Kalmar, "Kalmar", Forces_kWE, 0, "when calling newCity in SettingCities, line 174")
	call newCity(gg_rct_CITY_WE_Kassa, "Kassa", Forces_kWE, 0, "when calling newCity in SettingCities, line 175")
	call newCity(gg_rct_CITY_WE_Krakow, "Krakow", Forces_kWE, 2, "when calling newCity in SettingCities, line 176")
	call newCity(gg_rct_CITY_WE_Leon, "Leon", Forces_kWE, 1, "when calling newCity in SettingCities, line 177")
	call newCity(gg_rct_CITY_WE_London, "London", Forces_kWE, 0, "when calling newCity in SettingCities, line 178")
	call newCity(gg_rct_CITY_WE_Lund, "Lund", Forces_kWE, 0, "when calling newCity in SettingCities, line 179")
	call newCity(gg_rct_CITY_WE_Lyon, "Lyon", Forces_kWE, 0, "when calling newCity in SettingCities, line 180")
	call newCity(gg_rct_CITY_WE_Madgeburg, "Madgeburg", Forces_kWE, 0, "when calling newCity in SettingCities, line 181")
	call newCity(gg_rct_CITY_WE_Marseille, "Marsellie", Forces_kWE, 1, "when calling newCity in SettingCities, line 182")
	call newCity(gg_rct_CITY_WE_Metz, "Metz", Forces_kWE, 0, "when calling newCity in SettingCities, line 183")
	call newCity(gg_rct_CITY_WE_Milan, "Milan", Forces_kWE, 1, "when calling newCity in SettingCities, line 184")
	call newCity(gg_rct_CITY_WE_Naples, "Naples", Forces_kWE, 1, "when calling newCity in SettingCities, line 185")
	call newCity(gg_rct_CITY_WE_Nuremburg, "Nuremburg", Forces_kWE, 0, "when calling newCity in SettingCities, line 186")
	call newCity(gg_rct_CITY_WE_Nykoping, "Nykoping", Forces_kWE, 0, "when calling newCity in SettingCities, line 187")
	call newCity(gg_rct_CITY_WE_Oporto, "Oporto", Forces_kWE, 0, "when calling newCity in SettingCities, line 188")
	call newCity(gg_rct_CITY_WE_Oslo, "Oslo", Forces_kWE, 1, "when calling newCity in SettingCities, line 189")
	call newCity(gg_rct_CITY_WE_Buda, "Buda", Forces_kWE, 1, "when calling newCity in SettingCities, line 190")
	call newCity(gg_rct_CITY_WE_Palermo, "Palermo", Forces_kWE, 3, "when calling newCity in SettingCities, line 191")
	call newCity(gg_rct_CITY_WE_Pamplona, "Pamplona", Forces_kWE, 0, "when calling newCity in SettingCities, line 192")
	call newCity(gg_rct_CITY_WE_Paris, "Paris", Forces_kWE, 1, "when calling newCity in SettingCities, line 193")
	call newCity(gg_rct_CITY_WE_Pisa, "Pisa", Forces_kWE, 0, "when calling newCity in SettingCities, line 194")
	call newCity(gg_rct_CITY_WE_Plock, "Plock", Forces_kWE, 0, "when calling newCity in SettingCities, line 195")
	call newCity(gg_rct_CITY_WE_Poznan, "Poznan", Forces_kWE, 1, "when calling newCity in SettingCities, line 196")
	call newCity(gg_rct_CITY_WE_Prague, "Prague", Forces_kWE, 0, "when calling newCity in SettingCities, line 197")
	call newCity(gg_rct_CITY_WE_Zadar, "Zadar", Forces_kWE, 0, "when calling newCity in SettingCities, line 198")
	call newCity(gg_rct_CITY_WE_Rennes, "Rennes", Forces_kWE, 0, "when calling newCity in SettingCities, line 199")
	call newCity(gg_rct_CITY_WE_Rheims, "Rheims", Forces_kWE, 0, "when calling newCity in SettingCities, line 200")
	call newCity(gg_rct_CITY_WE_Rome, "Rome", Forces_kWE, 1, "when calling newCity in SettingCities, line 201")
	call newCity(gg_rct_CITY_WE_Roskilde, "Roskilde", Forces_kWE, 0, "when calling newCity in SettingCities, line 202")
	call newCity(gg_rct_CITY_WE_Salamanca, "Salamanca", Forces_kWE, 0, "when calling newCity in SettingCities, line 203")
	call newCity(gg_rct_CITY_WE_Salzburg, "Salzburg", Forces_kWE, 0, "when calling newCity in SettingCities, line 204")
	call newCity(gg_rct_CITY_WE_Skara, "Skara", Forces_kWE, 0, "when calling newCity in SettingCities, line 205")
	call newCity(gg_rct_CITY_WE_Stettin, "Stettin", Forces_kWE, 0, "when calling newCity in SettingCities, line 206")
	call newCity(gg_rct_CITY_WE_Stockholm, "Stockholm", Forces_kWE, 1, "when calling newCity in SettingCities, line 207")
	call newCity(gg_rct_CITY_WE_Syracuse, "Syracuse", Forces_kWE, 0, "when calling newCity in SettingCities, line 208")
	call newCity(gg_rct_CITY_WE_Toulouse, "Toulouse", Forces_kWE, 0, "when calling newCity in SettingCities, line 209")
	call newCity(gg_rct_CITY_WE_Varad, "Varad", Forces_kWE, 0, "when calling newCity in SettingCities, line 210")
	call newCity(gg_rct_CITY_WE_Venice, "Venice", Forces_kWE, 2, "when calling newCity in SettingCities, line 211")
	call newCity(gg_rct_CITY_WE_Vienna, "Vienna", Forces_kWE, 0, "when calling newCity in SettingCities, line 212")
	call newCity(gg_rct_CITY_WE_Visby, "Visby", Forces_kWE, 0, "when calling newCity in SettingCities, line 213")
	call newCity(gg_rct_CITY_WE_Warwick, "Warwick", Forces_kWE, 0, "when calling newCity in SettingCities, line 214")
	call newCity(gg_rct_CITY_WE_Winchester, "Winchester", Forces_kWE, 1, "when calling newCity in SettingCities, line 215")
	call newCity(gg_rct_CITY_WE_Wroclaw, "Wroclaw", Forces_kWE, 0, "when calling newCity in SettingCities, line 216")
	call newCity(gg_rct_CITY_WE_York, "York", Forces_kWE, 1, "when calling newCity in SettingCities, line 217")
	call newCity(gg_rct_CITY_WE_Zagreb, "Zagreb", Forces_kWE, 0, "when calling newCity in SettingCities, line 218")
	call newCity(gg_rct_CITY_WE_Zaragoza, "Zaragoza", Forces_kWE, 0, "when calling newCity in SettingCities, line 219")
	call newCity(gg_rct_CITY_WE_Hamburg, "Hamburg", Forces_kWE, 1, "when calling newCity in SettingCities, line 220")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function trigger_registerTimerEvent takes trigger this_7, real timeout, boolean periodic returns event
	return TriggerRegisterTimerEvent(this_7, timeout, periodic)
endfunction

function init_MainInit takes string stackPos returns boolean
	local integer i_2
	local integer temp
	local trigger receiver
	local trigger receiver_2
	local real tuple_temp
	local real tuple_temp_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set tuple_temp = 311.2
	set tuple_temp_2 = 5166.7
	set MainInit_kSpawnPoint_x = tuple_temp
	set MainInit_kSpawnPoint_y = tuple_temp_2
	set MainInit_kSpawnPlayersInFirstRing = 6
	set MainInit_kSpawnAddPerRing = 2
	set MainInit_kSpawnFirstRingRadius = 100.0
	set MainInit_kSpawnRingRadiusChange = 50.0
	set MainInit_kCTfade = 10.0
	set MainInit_kCTchange = 12.5
	set MainInit_ksCT = asList_1(stringToIndex("You're playing |cffffff65Crusade over Europe|r.\n\nUse your |cff0011ffsettler|r to choose the foundation of your new kingdom.\nThe location you choose will |cffff0000determine the faction you will get|r.\nUse the |cff00ffffF1|r menu to create alliances.\nExpand quickly, Capture cities and ores to |cffff0000increase your income|r.\nUse the |cff00fff2F2|r menu to set the taxes of your newly acquired |cff0026ffcities|r.\nFor more information, please, go to |cff00d3f8F9 menu|r.", "when calling stringToIndex in MainInit, line 21"), "when calling asList in MainInit, line 20")
	call countActivePlayers()
	set MainInit_skip_tutorial = false
	if Main_dbg_msg then
		call dbg("Debug info is enabled. Only for Red.")
	endif
	if Main_dbg_mode then
		call print("Debug mode is on.")
	endif
	call setupCities("when calling setupCities in MainInit, line 106")
	call SetForceAllianceStateBJ(GetPlayersAll(), bj_FORCE_PLAYER[PLAYER_NEUTRAL_PASSIVE], bj_ALLIANCE_NEUTRAL)
	call SetForceAllianceStateBJ(GetPlayersAll(), GetPlayersAll(), bj_ALLIANCE_UNALLIED)
	call SetForceAllianceStateBJ(Forces_fWE, Forces_fWE, bj_ALLIANCE_NEUTRAL)
	call SetForceAllianceStateBJ(Forces_fEE, Forces_fEE, bj_ALLIANCE_NEUTRAL)
	call SetForceAllianceStateBJ(Forces_fME, Forces_fME, bj_ALLIANCE_NEUTRAL)
	call SetForceAllianceStateBJ(Forces_fBZ, Forces_fBZ, bj_ALLIANCE_NEUTRAL)
	set i_2 = 0
	set temp = Main_PLAYER_SLOTS - 1
	loop
		exitwhen i_2 > temp
		call SetPlayerState(Player_players[i_2], PLAYER_STATE_RESOURCE_GOLD, Main_kStartGold)
		call SetPlayerState(Player_players[i_2], PLAYER_STATE_RESOURCE_LUMBER, Main_kStartLumber)
		if Main_dbg_mode then
			call enableDebugForPlayer(Player_players[i_2])
		endif
		call SetPlayerTechMaxAllowedSwap(Units_uUniversity, 1, Player_players[i_2])
		set PlayerStats_player_stats[i_2] = new_PlayerStats(Player_players[i_2], "when calling new_PlayerStats in MainInit, line 129")
		call dispatch_PlayerStats_PlayerStats_PlayerStats_setInGame(PlayerStats_player_stats[i_2], player_isIngame(Player_players[i_2]), "when calling setInGame in MainInit, line 130")
		set i_2 = i_2 + 1
	endloop
	call setPlayersAtStart("when calling setPlayersAtStart in MainInit, line 132")
	set receiver = CreateTrigger()
	call trigger_registerTimerEvent(receiver, 0.01, false)
	set receiver_2 = receiver
	call trigger_addAction(receiver_2, ref_function_bridge_cinematicTutorial)
	set wurst_stack_depth = wurst_stack_depth - 1
	set receiver = null
	set receiver_2 = null
	return true
endfunction

function bridge_init_MainInit takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_MainInit("MainInit, line 1")
endfunction

function alloc_MassControl_EventListener_line22 takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_7 = EventListener_maxIndex
			set EventListener_typeId[this_7] = 673
		else
			call error("Out of memory: Could not create MassControl_EventListener_line22.", "when calling error in MassControl, line 22")
			set this_7 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_7 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_7] = 673
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function alloc_MassControl_EventListener_line32 takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_7 = EventListener_maxIndex
			set EventListener_typeId[this_7] = 674
		else
			call error("Out of memory: Could not create MassControl_EventListener_line32.", "when calling error in MassControl, line 32")
			set this_7 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_7 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_7] = 674
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function asList_3 takes integer ts_0, integer ts_1, integer ts_2, string stackPos returns integer
	local integer ll
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set ll = new_LinkedList("when calling new_LinkedList in LinkedList, line 391")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_0, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_1, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_2, "when calling add in LinkedList, line 393")
	set wurst_stack_depth = wurst_stack_depth - 1
	return ll
endfunction

function init_MassControl takes string stackPos returns boolean
	local integer clVar
	local integer clVar_2
	local playerunitevent temp
	local playerunitevent temp_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set MassControl_units_of_general = new_HashMap("when calling new_HashMap in MassControl, line 7")
	set MassControl_kMassControlRanges = asList_3(realToIndex(500.0), realToIndex(700.0), realToIndex(1000.0), "when calling asList in MassControl, line 8")
	set MassControl_uGenerals = asList_4(Units_uGeneralWE, Units_uGeneralEE, Units_uGeneralME, Units_uGeneralBZ, "when calling asList in MassControl, line 14")
	set temp = EVENT_PLAYER_UNIT_SPELL_CAST
	set clVar = alloc_MassControl_EventListener_line22("when calling alloc_MassControl_EventListener_line22 in MassControl, line 22")
	call construct_EventListener(clVar)
	call EventListener_add(temp, clVar, "when calling add in MassControl, line 22")
	set temp_2 = EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER
	set clVar_2 = alloc_MassControl_EventListener_line32("when calling alloc_MassControl_EventListener_line32 in MassControl, line 32")
	call construct_EventListener(clVar_2)
	call EventListener_add(temp_2, clVar_2, "when calling add in MassControl, line 32")
	set wurst_stack_depth = wurst_stack_depth - 1
	set temp = null
	set temp_2 = null
	return true
endfunction

function bridge_init_MassControl takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_MassControl("MassControl, line 1")
endfunction

function alloc_MultiboardCityUpdate_CallbackPeriodic_line25 takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if CallbackPeriodic_firstFree == 0 then
		if CallbackPeriodic_maxIndex < 32768 then
			set CallbackPeriodic_maxIndex = CallbackPeriodic_maxIndex + 1
			set this_7 = CallbackPeriodic_maxIndex
			set CallbackPeriodic_typeId[this_7] = 637
		else
			call error("Out of memory: Could not create MultiboardCityUpdate_CallbackPeriodic_line25.", "when calling error in MultiboardCityUpdate, line 25")
			set this_7 = 0
		endif
	else
		set CallbackPeriodic_firstFree = CallbackPeriodic_firstFree - 1
		set this_7 = CallbackPeriodic_nextFree[CallbackPeriodic_firstFree]
		set CallbackPeriodic_typeId[this_7] = 637
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function alloc_MultiboardCityUpdate_CallbackSingle_line18 takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if CallbackSingle_firstFree == 0 then
		if CallbackSingle_maxIndex < 32768 then
			set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
			set this_7 = CallbackSingle_maxIndex
			set CallbackSingle_typeId[this_7] = 648
		else
			call error("Out of memory: Could not create MultiboardCityUpdate_CallbackSingle_line18.", "when calling error in MultiboardCityUpdate, line 18")
			set this_7 = 0
		endif
	else
		set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
		set this_7 = CallbackSingle_nextFree[CallbackSingle_firstFree]
		set CallbackSingle_typeId[this_7] = 648
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function init_MultiboardCityUpdate takes string stackPos returns boolean
	local integer clVar
	local integer clVar_2
	local real temp
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set clVar = alloc_MultiboardCityUpdate_CallbackSingle_line18("when calling alloc_MultiboardCityUpdate_CallbackSingle_line18 in MultiboardCityUpdate, line 18")
	call construct_CallbackSingle(clVar)
	call doAfter(0.01, clVar, "when calling doAfter in MultiboardCityUpdate, line 18")
	set temp = Multiboards_kMultiboardCityRefreshRate
	set clVar_2 = alloc_MultiboardCityUpdate_CallbackPeriodic_line25("when calling alloc_MultiboardCityUpdate_CallbackPeriodic_line25 in MultiboardCityUpdate, line 25")
	call construct_CallbackPeriodic(clVar_2)
	call doPeriodically(temp, clVar_2, "when calling doPeriodically in MultiboardCityUpdate, line 25")
	set wurst_stack_depth = wurst_stack_depth - 1
	return true
endfunction

function bridge_init_MultiboardCityUpdate takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_MultiboardCityUpdate("MultiboardCityUpdate, line 1")
endfunction

function asList_6 takes integer ts_0, integer ts_1, integer ts_2, integer ts_3, integer ts_4, integer ts_5, string stackPos returns integer
	local integer ll
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set ll = new_LinkedList("when calling new_LinkedList in LinkedList, line 391")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_0, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_1, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_2, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_3, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_4, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_5, "when calling add in LinkedList, line 393")
	set wurst_stack_depth = wurst_stack_depth - 1
	return ll
endfunction

function init_Multiboards takes string stackPos returns boolean
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set Multiboards_kMultiboardRowC = 10
	set Multiboards_kMultiboardColC = 6
	set Multiboards_kMultiboardCityRefreshRate = 1.0
	set Multiboards_kMBVal = 0.03
	set Multiboards_kMBText = 0.07
	set Multiboards_kMBCityNameWidth = 0.40
	set Multiboards_kMBLine = " "
	set Multiboards_kMultiboardInitWidths[0] = asList_6(realToIndex(Multiboards_kMBText), realToIndex(Multiboards_kMBVal), realToIndex(0.01), realToIndex(Multiboards_kMBText), realToIndex(Multiboards_kMBVal), realToIndex(Multiboards_kMBText * 2.), "when calling asList in Multiboards, line 23")
	set Multiboards_kMultiboardInitWidths[1] = asList_6(realToIndex(Multiboards_kMBText), realToIndex(Multiboards_kMBVal), realToIndex(0.01), realToIndex(Multiboards_kMBText), realToIndex(Multiboards_kMBVal), realToIndex(Multiboards_kMBText * 2.), "when calling asList in Multiboards, line 24")
	set Multiboards_kMultiboardInitWidths[2] = asList_6(realToIndex(Multiboards_kMBText), realToIndex(Multiboards_kMBVal), realToIndex(0.01), realToIndex(Multiboards_kMBText), realToIndex(Multiboards_kMBVal), realToIndex(Multiboards_kMBText * 2.), "when calling asList in Multiboards, line 25")
	set Multiboards_kMultiboardInitWidths[3] = asList_6(realToIndex(0.0025), realToIndex(0.0025), realToIndex(Multiboards_kMBCityNameWidth), realToIndex(0.0025), realToIndex(0.0025), realToIndex(0.0025), "when calling asList in Multiboards, line 27")
	set Multiboards_kMultiboardInitWidths[4] = asList_6(realToIndex(Multiboards_kMBText), realToIndex(Multiboards_kMBVal), realToIndex(Multiboards_kMBVal), realToIndex(0.01), realToIndex(Multiboards_kMBText * 1.8), realToIndex(Multiboards_kMBText * 1.2), "when calling asList in Multiboards, line 28")
	set Multiboards_kMultiboardInitWidths[5] = asList_6(realToIndex(Multiboards_kMBText), realToIndex(Multiboards_kMBVal), realToIndex(Multiboards_kMBVal), realToIndex(0.01), realToIndex(Multiboards_kMBText * 1.8), realToIndex(Multiboards_kMBText * 1.2), "when calling asList in Multiboards, line 29")
	set Multiboards_kMultiboardInitWidths[6] = asList_6(realToIndex(Multiboards_kMBText), realToIndex(Multiboards_kMBVal), realToIndex(Multiboards_kMBVal), realToIndex(0.01), realToIndex(Multiboards_kMBText * 1.8), realToIndex(Multiboards_kMBText * 1.2), "when calling asList in Multiboards, line 30")
	set Multiboards_kMultiboardInitWidths[7] = asList_6(realToIndex(Multiboards_kMBText), realToIndex(Multiboards_kMBVal), realToIndex(Multiboards_kMBVal), realToIndex(0.01), realToIndex(Multiboards_kMBText * 1.8), realToIndex(Multiboards_kMBText * 1.2), "when calling asList in Multiboards, line 31")
	set Multiboards_kMultiboardInitWidths[8] = asList_6(realToIndex(Multiboards_kMBText), realToIndex(Multiboards_kMBVal), realToIndex(Multiboards_kMBVal), realToIndex(0.01), realToIndex(Multiboards_kMBText * 1.8), realToIndex(Multiboards_kMBText * 1.2), "when calling asList in Multiboards, line 32")
	set Multiboards_kMultiboardInitWidths[9] = asList_6(realToIndex(Multiboards_kMBText), realToIndex(Multiboards_kMBVal), realToIndex(Multiboards_kMBVal), realToIndex(0.01), realToIndex(Multiboards_kMBText * 1.8), realToIndex(Multiboards_kMBText * 1.2), "when calling asList in Multiboards, line 33")
	set Multiboards_kMBIncome[0] = 4
	set Multiboards_kMBIncome[1] = 0
	set Multiboards_kMBUpkeep[0] = 4
	set Multiboards_kMBUpkeep[1] = 1
	set Multiboards_kMBCityTax[0] = 1
	set Multiboards_kMBCityTax[1] = 4
	set Multiboards_kMBCityPublicOrder[0] = 1
	set Multiboards_kMBCityPublicOrder[1] = 5
	set Multiboards_kMBCityPop[0] = 1
	set Multiboards_kMBCityPop[1] = 6
	set Multiboards_kMBCityPopGrowth[0] = 2
	set Multiboards_kMBCityPopGrowth[1] = 6
	set Multiboards_kMBCityName[0] = 2
	set Multiboards_kMBCityName[1] = 3
	set Multiboards_kMBCityModifiersCol = 4
	set Multiboards_kMBCityModifiersStart = 4
	set Multiboards_kMBCityModifiersEnd = 9
	set Multiboards_kMBCityModifiersDescCol = 5
	set Multiboards_kMultiboardInitStrings[0] = asList_6(stringToIndex("Food", "when calling stringToIndex in Multiboards, line 56"), stringToIndex("0", "when calling stringToIndex in Multiboards, line 56"), stringToIndex("|", "when calling stringToIndex in Multiboards, line 56"), stringToIndex("Income", "when calling stringToIndex in Multiboards, line 56"), stringToIndex("0", "when calling stringToIndex in Multiboards, line 56"), stringToIndex(" ", "when calling stringToIndex in Multiboards, line 56"), "when calling asList in Multiboards, line 56")
	set Multiboards_kMultiboardInitStrings[1] = asList_6(stringToIndex("Iron", "when calling stringToIndex in Multiboards, line 57"), stringToIndex("0", "when calling stringToIndex in Multiboards, line 57"), stringToIndex("|", "when calling stringToIndex in Multiboards, line 57"), stringToIndex("Upkeep", "when calling stringToIndex in Multiboards, line 57"), stringToIndex("0", "when calling stringToIndex in Multiboards, line 57"), stringToIndex(" ", "when calling stringToIndex in Multiboards, line 57"), "when calling asList in Multiboards, line 57")
	set Multiboards_kMultiboardInitStrings[2] = asList_6(stringToIndex("Stone", "when calling stringToIndex in Multiboards, line 58"), stringToIndex("0", "when calling stringToIndex in Multiboards, line 58"), stringToIndex("|", "when calling stringToIndex in Multiboards, line 58"), stringToIndex(" ", "when calling stringToIndex in Multiboards, line 58"), stringToIndex(" ", "when calling stringToIndex in Multiboards, line 58"), stringToIndex(" ", "when calling stringToIndex in Multiboards, line 58"), "when calling asList in Multiboards, line 58")
	set Multiboards_kMultiboardInitStrings[3] = asList_6(stringToIndex(Multiboards_kMBLine, "when calling stringToIndex in Multiboards, line 60"), stringToIndex(Multiboards_kMBLine, "when calling stringToIndex in Multiboards, line 60"), stringToIndex("                           City info", "when calling stringToIndex in Multiboards, line 60"), stringToIndex(Multiboards_kMBLine, "when calling stringToIndex in Multiboards, line 60"), stringToIndex(Multiboards_kMBLine, "when calling stringToIndex in Multiboards, line 60"), stringToIndex(Multiboards_kMBLine, "when calling stringToIndex in Multiboards, line 60"), "when calling asList in Multiboards, line 60")
	set Multiboards_kMultiboardInitStrings[4] = asList_6(stringToIndex("Tax", "when calling stringToIndex in Multiboards, line 61"), stringToIndex("0", "when calling stringToIndex in Multiboards, line 61"), stringToIndex(" ", "when calling stringToIndex in Multiboards, line 61"), stringToIndex("|", "when calling stringToIndex in Multiboards, line 61"), stringToIndex(" ", "when calling stringToIndex in Multiboards, line 61"), stringToIndex(" ", "when calling stringToIndex in Multiboards, line 61"), "when calling asList in Multiboards, line 61")
	set Multiboards_kMultiboardInitStrings[5] = asList_6(stringToIndex("Public order", "when calling stringToIndex in Multiboards, line 62"), stringToIndex("0", "when calling stringToIndex in Multiboards, line 62"), stringToIndex(" ", "when calling stringToIndex in Multiboards, line 62"), stringToIndex("|", "when calling stringToIndex in Multiboards, line 62"), stringToIndex(" ", "when calling stringToIndex in Multiboards, line 62"), stringToIndex(" ", "when calling stringToIndex in Multiboards, line 62"), "when calling asList in Multiboards, line 62")
	set Multiboards_kMultiboardInitStrings[6] = asList_6(stringToIndex("Population", "when calling stringToIndex in Multiboards, line 63"), stringToIndex("0", "when calling stringToIndex in Multiboards, line 63"), stringToIndex(" ", "when calling stringToIndex in Multiboards, line 63"), stringToIndex("|", "when calling stringToIndex in Multiboards, line 63"), stringToIndex(" ", "when calling stringToIndex in Multiboards, line 63"), stringToIndex(" ", "when calling stringToIndex in Multiboards, line 63"), "when calling asList in Multiboards, line 63")
	set Multiboards_kMultiboardInitStrings[7] = asList_6(stringToIndex(" ", "when calling stringToIndex in Multiboards, line 64"), stringToIndex(" ", "when calling stringToIndex in Multiboards, line 64"), stringToIndex(" ", "when calling stringToIndex in Multiboards, line 64"), stringToIndex("|", "when calling stringToIndex in Multiboards, line 64"), stringToIndex(" ", "when calling stringToIndex in Multiboards, line 64"), stringToIndex(" ", "when calling stringToIndex in Multiboards, line 64"), "when calling asList in Multiboards, line 64")
	set Multiboards_kMultiboardInitStrings[8] = asList_6(stringToIndex(" ", "when calling stringToIndex in Multiboards, line 65"), stringToIndex(" ", "when calling stringToIndex in Multiboards, line 65"), stringToIndex(" ", "when calling stringToIndex in Multiboards, line 65"), stringToIndex("|", "when calling stringToIndex in Multiboards, line 65"), stringToIndex(" ", "when calling stringToIndex in Multiboards, line 65"), stringToIndex(" ", "when calling stringToIndex in Multiboards, line 65"), "when calling asList in Multiboards, line 65")
	set Multiboards_kMultiboardInitStrings[9] = asList_6(stringToIndex(" ", "when calling stringToIndex in Multiboards, line 66"), stringToIndex(" ", "when calling stringToIndex in Multiboards, line 66"), stringToIndex(" ", "when calling stringToIndex in Multiboards, line 66"), stringToIndex("|", "when calling stringToIndex in Multiboards, line 66"), stringToIndex(" ", "when calling stringToIndex in Multiboards, line 66"), stringToIndex(" ", "when calling stringToIndex in Multiboards, line 66"), "when calling asList in Multiboards, line 66")
	set wurst_stack_depth = wurst_stack_depth - 1
	return true
endfunction

function bridge_init_Multiboards takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_Multiboards("Multiboards, line 1")
endfunction

function alloc_NoShipsNearRivers_EventListener_line7 takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_7 = EventListener_maxIndex
			set EventListener_typeId[this_7] = 675
		else
			call error("Out of memory: Could not create NoShipsNearRivers_EventListener_line7.", "when calling error in NoShipsNearRivers, line 7")
			set this_7 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_7 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_7] = 675
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function init_NoShipsNearRivers takes string stackPos returns boolean
	local integer clVar
	local playerunitevent temp
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set temp = EVENT_PLAYER_UNIT_CONSTRUCT_START
	set clVar = alloc_NoShipsNearRivers_EventListener_line7("when calling alloc_NoShipsNearRivers_EventListener_line7 in NoShipsNearRivers, line 7")
	call construct_EventListener(clVar)
	call EventListener_add(temp, clVar, "when calling add in NoShipsNearRivers, line 7")
	set wurst_stack_depth = wurst_stack_depth - 1
	set temp = null
	return true
endfunction

function bridge_init_NoShipsNearRivers takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_NoShipsNearRivers("NoShipsNearRivers, line 1")
endfunction

function alloc_NoStarvationOnBoat_EventListener_line9 takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_7 = EventListener_maxIndex
			set EventListener_typeId[this_7] = 676
		else
			call error("Out of memory: Could not create NoStarvationOnBoat_EventListener_line9.", "when calling error in NoStarvationOnBoat, line 9")
			set this_7 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_7 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_7] = 676
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function alloc_HashSet takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if HashList_firstFree == 0 then
		if HashList_maxIndex < 32768 then
			set HashList_maxIndex = HashList_maxIndex + 1
			set this_7 = HashList_maxIndex
			set HashList_typeId[this_7] = 696
		else
			call error("Out of memory: Could not create HashSet.", "when calling error in HashSet, line 5")
			set this_7 = 0
		endif
	else
		set HashList_firstFree = HashList_firstFree - 1
		set this_7 = HashList_nextFree[HashList_firstFree]
		set HashList_typeId[this_7] = 696
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function construct_HashList takes integer this_7 returns nothing
	set HashList_size[this_7] = 0
endfunction

function construct_HashSet takes integer this_7 returns nothing
	call construct_HashList(this_7)
endfunction

function new_HashSet takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_7 = alloc_HashSet("when calling alloc_HashSet in HashSet, line 4")
	call construct_HashSet(this_7)
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function init_NoStarvationOnBoat takes string stackPos returns boolean
	local integer clVar
	local playerunitevent temp
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set NoStarvationOnBoat_unitsRemovedHunger = new_HashSet("when calling new_HashSet in NoStarvationOnBoat, line 6")
	set temp = EVENT_PLAYER_UNIT_ISSUED_ORDER
	set clVar = alloc_NoStarvationOnBoat_EventListener_line9("when calling alloc_NoStarvationOnBoat_EventListener_line9 in NoStarvationOnBoat, line 9")
	call construct_EventListener(clVar)
	call EventListener_add(temp, clVar, "when calling add in NoStarvationOnBoat, line 9")
	set wurst_stack_depth = wurst_stack_depth - 1
	set temp = null
	return true
endfunction

function bridge_init_NoStarvationOnBoat takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_NoStarvationOnBoat("NoStarvationOnBoat, line 1")
endfunction

function alloc_IdGenerator takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if IdGenerator_firstFree == 0 then
		if IdGenerator_maxIndex < 32768 then
			set IdGenerator_maxIndex = IdGenerator_maxIndex + 1
			set this_7 = IdGenerator_maxIndex
		else
			call error("Out of memory: Could not create IdGenerator.", "when calling error in ObjectIdGenerator, line 14")
			set this_7 = 0
		endif
	else
		set IdGenerator_firstFree = IdGenerator_firstFree - 1
		set this_7 = IdGenerator_nextFree[IdGenerator_firstFree]
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function construct_IdGenerator takes integer this_7, integer start returns nothing
endfunction

function new_IdGenerator takes integer start, string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_7 = alloc_IdGenerator("when calling alloc_IdGenerator in ObjectIdGenerator, line 20")
	call construct_IdGenerator(this_7, start)
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function init_ObjectIdGenerator takes string stackPos returns boolean
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call new_IdGenerator(2016423984, "when calling new_IdGenerator in ObjectIdGenerator, line 7")
	call new_IdGenerator(1213018160, "when calling new_IdGenerator in ObjectIdGenerator, line 8")
	call new_IdGenerator(1095577648, "when calling new_IdGenerator in ObjectIdGenerator, line 9")
	call new_IdGenerator(1112354864, "when calling new_IdGenerator in ObjectIdGenerator, line 10")
	call new_IdGenerator(1229795376, "when calling new_IdGenerator in ObjectIdGenerator, line 11")
	call new_IdGenerator(1380790320, "when calling new_IdGenerator in ObjectIdGenerator, line 12")
	set wurst_stack_depth = wurst_stack_depth - 1
	return true
endfunction

function bridge_init_ObjectIdGenerator takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_ObjectIdGenerator("ObjectIdGenerator, line 1")
endfunction

function alloc_OnPlayerLeave_EventListener_line5 takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_7 = EventListener_maxIndex
			set EventListener_typeId[this_7] = 677
		else
			call error("Out of memory: Could not create OnPlayerLeave_EventListener_line5.", "when calling error in OnPlayerLeave, line 5")
			set this_7 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_7 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_7] = 677
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function init_OnPlayerLeave takes string stackPos returns boolean
	local integer clVar
	local playerevent temp
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set temp = EVENT_PLAYER_LEAVE
	set clVar = alloc_OnPlayerLeave_EventListener_line5("when calling alloc_OnPlayerLeave_EventListener_line5 in OnPlayerLeave, line 5")
	call construct_EventListener(clVar)
	call EventListener_add(temp, clVar, "when calling add in OnPlayerLeave, line 5")
	set wurst_stack_depth = wurst_stack_depth - 1
	set temp = null
	return true
endfunction

function bridge_init_OnPlayerLeave takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_OnPlayerLeave("OnPlayerLeave, line 1")
endfunction

function alloc_OnUnitEnterLeave_CallbackSingle_line62 takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if CallbackSingle_firstFree == 0 then
		if CallbackSingle_maxIndex < 32768 then
			set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
			set this_7 = CallbackSingle_maxIndex
			set CallbackSingle_typeId[this_7] = 650
		else
			call error("Out of memory: Could not create OnUnitEnterLeave_CallbackSingle_line62.", "when calling error in OnUnitEnterLeave, line 62")
			set this_7 = 0
		endif
	else
		set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
		set this_7 = CallbackSingle_nextFree[CallbackSingle_firstFree]
		set CallbackSingle_typeId[this_7] = 650
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function player_setAbilityAvailable takes player this_7, integer abilityId, boolean avail returns nothing
	call SetPlayerAbilityAvailable(this_7, abilityId, avail)
endfunction

function init_OnUnitEnterLeave takes string stackPos returns boolean
	local integer i_2
	local integer temp
	local integer clVar
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set OnUnitEnterLeave_eventTrigger = CreateTrigger()
	set OnUnitEnterLeave_preplacedUnits = CreateGroup()
	set OnUnitEnterLeave_tempUnitsCount = 0
	set OnUnitEnterLeave_ABILITY_ID = 1095577649
	set i_2 = 0
	set temp = bj_MAX_PLAYER_SLOTS - 1
	loop
		exitwhen i_2 > temp
		call player_setAbilityAvailable(Player_players[i_2], OnUnitEnterLeave_ABILITY_ID, false)
		set i_2 = i_2 + 1
	endloop
	set clVar = alloc_OnUnitEnterLeave_CallbackSingle_line62("when calling alloc_OnUnitEnterLeave_CallbackSingle_line62 in OnUnitEnterLeave, line 62")
	call construct_CallbackSingle(clVar)
	call nullTimer(clVar, "when calling nullTimer in OnUnitEnterLeave, line 62")
	set wurst_stack_depth = wurst_stack_depth - 1
	return true
endfunction

function bridge_init_OnUnitEnterLeave takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_OnUnitEnterLeave("OnUnitEnterLeave, line 1")
endfunction

function alloc_OreCapture_EventListener_line14 takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_7 = EventListener_maxIndex
			set EventListener_typeId[this_7] = 678
		else
			call error("Out of memory: Could not create OreCapture_EventListener_line14.", "when calling error in OreCapture, line 14")
			set this_7 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_7 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_7] = 678
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function alloc_OreCapture_EventListener_line21 takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_7 = EventListener_maxIndex
			set EventListener_typeId[this_7] = 679
		else
			call error("Out of memory: Could not create OreCapture_EventListener_line21.", "when calling error in OreCapture, line 21")
			set this_7 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_7 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_7] = 679
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function alloc_OreCapture_EventListener_line9 takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_7 = EventListener_maxIndex
			set EventListener_typeId[this_7] = 680
		else
			call error("Out of memory: Could not create OreCapture_EventListener_line9.", "when calling error in OreCapture, line 9")
			set this_7 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_7 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_7] = 680
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function init_OreCapture takes string stackPos returns boolean
	local integer clVar
	local integer clVar_2
	local integer clVar_3
	local playerunitevent temp
	local playerunitevent temp_2
	local playerunitevent temp_3
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set OreCapture_kLifePercentToCapture = 80.0
	set temp = EVENT_PLAYER_UNIT_DEATH
	set clVar = alloc_OreCapture_EventListener_line9("when calling alloc_OreCapture_EventListener_line9 in OreCapture, line 9")
	call construct_EventListener(clVar)
	call EventListener_add(temp, clVar, "when calling add in OreCapture, line 9")
	set temp_2 = EVENT_PLAYER_UNIT_UPGRADE_FINISH
	set clVar_2 = alloc_OreCapture_EventListener_line14("when calling alloc_OreCapture_EventListener_line14 in OreCapture, line 14")
	call construct_EventListener(clVar_2)
	call EventListener_add(temp_2, clVar_2, "when calling add in OreCapture, line 14")
	set temp_3 = EVENT_PLAYER_UNIT_ATTACKED
	set clVar_3 = alloc_OreCapture_EventListener_line21("when calling alloc_OreCapture_EventListener_line21 in OreCapture, line 21")
	call construct_EventListener(clVar_3)
	call EventListener_add(temp_3, clVar_3, "when calling add in OreCapture, line 21")
	set wurst_stack_depth = wurst_stack_depth - 1
	set temp = null
	set temp_2 = null
	set temp_3 = null
	return true
endfunction

function bridge_init_OreCapture takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_OreCapture("OreCapture, line 1")
endfunction

function alloc_Preloader_CallbackSingle_line54 takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if CallbackSingle_firstFree == 0 then
		if CallbackSingle_maxIndex < 32768 then
			set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
			set this_7 = CallbackSingle_maxIndex
			set CallbackSingle_typeId[this_7] = 651
		else
			call error("Out of memory: Could not create Preloader_CallbackSingle_line54.", "when calling error in Preloader, line 54")
			set this_7 = 0
		endif
	else
		set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
		set this_7 = CallbackSingle_nextFree[CallbackSingle_firstFree]
		set CallbackSingle_typeId[this_7] = 651
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function string_charAt takes string this_7, integer index returns string
	return SubString(this_7, index, index + 1)
endfunction

function toRawCode takes integer value returns string
	local string result_2 = ""
	local integer remainingValue = value
	local integer byteno = 0
	local integer charValue
	loop
		exitwhen byteno > 3
		set charValue = ModuloInteger(remainingValue, 256)
		set remainingValue = remainingValue / 256
		set result_2 = string_charAt(ObjectIds_CHARMAP, charValue) + result_2
		set byteno = byteno + 1
	endloop
	return result_2
endfunction

function int_toRawCode takes integer this_7 returns string
	return toRawCode(this_7)
endfunction

function init_Preloader takes string stackPos returns boolean
	local integer clVar
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set Preloader_autoFinish = true
	set Preloader_dumg = CreateGroup()
	set Preloader_dum = createUnit(Basics_DUMMY_PLAYER, DummyRecycler_DUMMY_UNIT_ID, 0., 0., 0.)
	if Preloader_dum == null then
		call error("DUMMY_UNITID (" + int_toRawCode(DummyRecycler_DUMMY_UNIT_ID) + ") not added correctly to the map.", "when calling error in Preloader, line 52")
	endif
	if Preloader_autoFinish then
		set clVar = alloc_Preloader_CallbackSingle_line54("when calling alloc_Preloader_CallbackSingle_line54 in Preloader, line 54")
		call construct_CallbackSingle(clVar)
		call nullTimer(clVar, "when calling nullTimer in Preloader, line 54")
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return true
endfunction

function bridge_init_Preloader takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_Preloader("Preloader, line 1")
endfunction

function alloc_RangeChecks_EventListener_line11 takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_7 = EventListener_maxIndex
			set EventListener_typeId[this_7] = 681
		else
			call error("Out of memory: Could not create RangeChecks_EventListener_line11.", "when calling error in RangeChecks, line 11")
			set this_7 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_7 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_7] = 681
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function asList_23 takes integer ts_0, integer ts_1, integer ts_2, integer ts_3, integer ts_4, integer ts_5, integer ts_6, integer ts_7, integer ts_8, integer ts_9, integer ts_10, integer ts_11, integer ts_12, integer ts_13, integer ts_14, integer ts_15, integer ts_16, integer ts_17, integer ts_18, integer ts_19, integer ts_20, integer ts_21, integer ts_22, string stackPos returns integer
	local integer ll
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set ll = new_LinkedList("when calling new_LinkedList in LinkedList, line 391")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_0, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_1, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_2, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_3, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_4, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_5, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_6, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_7, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_8, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_9, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_10, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_11, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_12, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_13, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_14, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_15, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_16, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_17, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_18, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_19, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_20, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_21, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_22, "when calling add in LinkedList, line 393")
	set wurst_stack_depth = wurst_stack_depth - 1
	return ll
endfunction

function init_RangeChecks takes string stackPos returns boolean
	local integer clVar
	local playerunitevent temp
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set RangeChecks_kUnitsToCheck = asList_23(Units_uSettlement, Units_uChurchBZ, Units_uChurchEE, Units_uChurchWE, Units_uMosque, Units_uSettlementAnc1, Units_uSettlementAnc2, Units_uSettlementBZ, Units_uSettlementEE, Units_uCastleWE1, Units_uCastleWE2, Units_uCastleWE3, Units_uCastleEE1, Units_uCastleEE2, Units_uCastleEE3, Units_uCastleME1, Units_uCastleME2, Units_uCastleME3, Units_uCastleBZ1, Units_uCastleBZ2, Units_uCastleBZ3, Units_uInn, Units_uInnEE, "when calling asList in RangeChecks, line 5")
	set RangeChecks_kBuildingCheckRange = 2000.0
	set temp = EVENT_PLAYER_UNIT_CONSTRUCT_START
	set clVar = alloc_RangeChecks_EventListener_line11("when calling alloc_RangeChecks_EventListener_line11 in RangeChecks, line 11")
	call construct_EventListener(clVar)
	call EventListener_add(temp, clVar, "when calling add in RangeChecks, line 11")
	set wurst_stack_depth = wurst_stack_depth - 1
	set temp = null
	return true
endfunction

function bridge_init_RangeChecks takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_RangeChecks("RangeChecks, line 1")
endfunction

function init_RegisterEvents takes string stackPos returns boolean
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set RegisterEvents_onCastMap = new_HashMap("when calling new_HashMap in RegisterEvents, line 55")
	call registerPlayerUnitEvent_2(EVENT_PLAYER_UNIT_SPELL_EFFECT, ref_function_bridge_RegisterEvents_closure_impl)
	set wurst_stack_depth = wurst_stack_depth - 1
	return true
endfunction

function bridge_init_RegisterEvents takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_RegisterEvents("RegisterEvents, line 1")
endfunction

function alloc_ReligionClass takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if ReligionClass_firstFree == 0 then
		if ReligionClass_maxIndex < 32768 then
			set ReligionClass_maxIndex = ReligionClass_maxIndex + 1
			set this_7 = ReligionClass_maxIndex
		else
			call error("Out of memory: Could not create ReligionClass.", "when calling error in Religion, line 10")
			set this_7 = 0
		endif
	else
		set ReligionClass_firstFree = ReligionClass_firstFree - 1
		set this_7 = ReligionClass_nextFree[ReligionClass_firstFree]
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function construct_ReligionClass takes integer this_7, string noun_u, string adjective_u, integer clr__red, integer clr__green, integer clr__blue returns nothing
	local integer tuple_temp = clr__red
	local integer tuple_temp_2 = clr__green
	local integer tuple_temp_3 = clr__blue
endfunction

function new_ReligionClass takes string noun_u, string adjective_u, integer clr__red, integer clr__green, integer clr__blue, string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set this_7 = alloc_ReligionClass("when calling alloc_ReligionClass in Religion, line 15")
	call construct_ReligionClass(this_7, noun_u, adjective_u, clr__red, clr__green, clr__blue)
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function init_Religion takes string stackPos returns boolean
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call new_ReligionClass("Catholicism", "Catholic", 244, 255, 96, "when calling new_ReligionClass in Religion, line 29")
	call new_ReligionClass("Orthodoxy", "Orthodox", 234, 0, 255, "when calling new_ReligionClass in Religion, line 35")
	call new_ReligionClass("Islam", "Muslim", 0, 151, 0, "when calling new_ReligionClass in Religion, line 41")
	call new_ReligionClass("Orthodoxy", "Orthodox", 234, 0, 255, "when calling new_ReligionClass in Religion, line 47")
	set wurst_stack_depth = wurst_stack_depth - 1
	return true
endfunction

function bridge_init_Religion takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_Religion("Religion, line 1")
endfunction

function c2sInit takes nothing returns nothing
	set StringUtils_c2s[0] = ""
	set StringUtils_c2s[1] = ""
	set StringUtils_c2s[2] = ""
	set StringUtils_c2s[3] = ""
	set StringUtils_c2s[4] = ""
	set StringUtils_c2s[5] = ""
	set StringUtils_c2s[6] = ""
	set StringUtils_c2s[7] = ""
	set StringUtils_c2s[8] = ""
	set StringUtils_c2s[9] = "\t"
	set StringUtils_c2s[10] = "\n"
	set StringUtils_c2s[11] = ""
	set StringUtils_c2s[12] = ""
	set StringUtils_c2s[13] = "\r"
	set StringUtils_c2s[14] = ""
	set StringUtils_c2s[15] = ""
	set StringUtils_c2s[16] = ""
	set StringUtils_c2s[17] = ""
	set StringUtils_c2s[18] = ""
	set StringUtils_c2s[19] = ""
	set StringUtils_c2s[20] = ""
	set StringUtils_c2s[21] = ""
	set StringUtils_c2s[22] = ""
	set StringUtils_c2s[23] = ""
	set StringUtils_c2s[24] = ""
	set StringUtils_c2s[25] = ""
	set StringUtils_c2s[26] = ""
	set StringUtils_c2s[27] = ""
	set StringUtils_c2s[28] = ""
	set StringUtils_c2s[29] = ""
	set StringUtils_c2s[30] = ""
	set StringUtils_c2s[31] = ""
	set StringUtils_c2s[32] = " "
	set StringUtils_c2s[33] = "!"
	set StringUtils_c2s[34] = "\""
	set StringUtils_c2s[35] = "#"
	set StringUtils_c2s[36] = "$"
	set StringUtils_c2s[37] = "%"
	set StringUtils_c2s[38] = "&"
	set StringUtils_c2s[39] = "'"
	set StringUtils_c2s[40] = "("
	set StringUtils_c2s[41] = ")"
	set StringUtils_c2s[42] = "*"
	set StringUtils_c2s[43] = "+"
	set StringUtils_c2s[44] = ","
	set StringUtils_c2s[45] = "-"
	set StringUtils_c2s[46] = "."
	set StringUtils_c2s[47] = "/"
	set StringUtils_c2s[48] = "0"
	set StringUtils_c2s[49] = "1"
	set StringUtils_c2s[50] = "2"
	set StringUtils_c2s[51] = "3"
	set StringUtils_c2s[52] = "4"
	set StringUtils_c2s[53] = "5"
	set StringUtils_c2s[54] = "6"
	set StringUtils_c2s[55] = "7"
	set StringUtils_c2s[56] = "8"
	set StringUtils_c2s[57] = "9"
	set StringUtils_c2s[58] = ":"
	set StringUtils_c2s[59] = ";"
	set StringUtils_c2s[60] = "<"
	set StringUtils_c2s[61] = "="
	set StringUtils_c2s[62] = ">"
	set StringUtils_c2s[63] = "?"
	set StringUtils_c2s[64] = "@"
	set StringUtils_c2s[65] = "A"
	set StringUtils_c2s[66] = "B"
	set StringUtils_c2s[67] = "C"
	set StringUtils_c2s[68] = "D"
	set StringUtils_c2s[69] = "E"
	set StringUtils_c2s[70] = "F"
	set StringUtils_c2s[71] = "G"
	set StringUtils_c2s[72] = "H"
	set StringUtils_c2s[73] = "I"
	set StringUtils_c2s[74] = "J"
	set StringUtils_c2s[75] = "K"
	set StringUtils_c2s[76] = "L"
	set StringUtils_c2s[77] = "M"
	set StringUtils_c2s[78] = "N"
	set StringUtils_c2s[79] = "O"
	set StringUtils_c2s[80] = "P"
	set StringUtils_c2s[81] = "Q"
	set StringUtils_c2s[82] = "R"
	set StringUtils_c2s[83] = "S"
	set StringUtils_c2s[84] = "T"
	set StringUtils_c2s[85] = "U"
	set StringUtils_c2s[86] = "V"
	set StringUtils_c2s[87] = "W"
	set StringUtils_c2s[88] = "X"
	set StringUtils_c2s[89] = "Y"
	set StringUtils_c2s[90] = "Z"
	set StringUtils_c2s[91] = "["
	set StringUtils_c2s[92] = "\\"
	set StringUtils_c2s[93] = "]"
	set StringUtils_c2s[94] = "^"
	set StringUtils_c2s[95] = "_"
	set StringUtils_c2s[96] = "`"
	set StringUtils_c2s[97] = "a"
	set StringUtils_c2s[98] = "b"
	set StringUtils_c2s[99] = "c"
	set StringUtils_c2s[100] = "d"
	set StringUtils_c2s[101] = "e"
	set StringUtils_c2s[102] = "f"
	set StringUtils_c2s[103] = "g"
	set StringUtils_c2s[104] = "h"
	set StringUtils_c2s[105] = "i"
	set StringUtils_c2s[106] = "j"
	set StringUtils_c2s[107] = "k"
	set StringUtils_c2s[108] = "l"
	set StringUtils_c2s[109] = "m"
	set StringUtils_c2s[110] = "n"
	set StringUtils_c2s[111] = "o"
	set StringUtils_c2s[112] = "p"
	set StringUtils_c2s[113] = "q"
	set StringUtils_c2s[114] = "r"
	set StringUtils_c2s[115] = "s"
	set StringUtils_c2s[116] = "t"
	set StringUtils_c2s[117] = "u"
	set StringUtils_c2s[118] = "v"
	set StringUtils_c2s[119] = "w"
	set StringUtils_c2s[120] = "x"
	set StringUtils_c2s[121] = "y"
	set StringUtils_c2s[122] = "z"
	set StringUtils_c2s[123] = "{"
	set StringUtils_c2s[124] = "|"
	set StringUtils_c2s[125] = "}"
	set StringUtils_c2s[126] = "~"
	set StringUtils_c2s[127] = ""
endfunction

function string_toUpperCase takes string this_7 returns string
	return StringCase(this_7, true)
endfunction

function s2cInit takes nothing returns nothing
	local integer i_2 = 0
	local integer temp = StringUtils_MAX_INDEX
	loop
		exitwhen i_2 > temp
		if string_toUpperCase(StringUtils_c2s[i_2]) == StringUtils_c2s[i_2] then
			call StringHash(StringUtils_c2s[i_2])
		endif
		set i_2 = i_2 + 1
	endloop
endfunction

function widthInit takes nothing returns nothing
endfunction

function initialize takes nothing returns nothing
	call c2sInit()
	call s2cInit()
	call widthInit()
endfunction

function init_StringUtils takes string stackPos returns boolean
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set StringUtils_MAX_INDEX = 126 + 1
	call initialize()
	call stringToIndex("", "when calling stringToIndex in StringUtils, line 167")
	set wurst_stack_depth = wurst_stack_depth - 1
	return true
endfunction

function bridge_init_StringUtils takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_StringUtils("StringUtils, line 1")
endfunction

function alloc_Taxation_EventListener_line6 takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_7 = EventListener_maxIndex
			set EventListener_typeId[this_7] = 682
		else
			call error("Out of memory: Could not create Taxation_EventListener_line6.", "when calling error in Taxation, line 6")
			set this_7 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_7 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_7] = 682
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function init_Taxation takes string stackPos returns boolean
	local integer clVar
	local playerunitevent temp
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set temp = EVENT_PLAYER_UNIT_SPELL_CAST
	set clVar = alloc_Taxation_EventListener_line6("when calling alloc_Taxation_EventListener_line6 in Taxation, line 6")
	call construct_EventListener(clVar)
	call EventListener_add(temp, clVar, "when calling add in Taxation, line 6")
	set wurst_stack_depth = wurst_stack_depth - 1
	set temp = null
	return true
endfunction

function bridge_init_Taxation takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_Taxation("Taxation, line 1")
endfunction

function init_TimerUtils takes string stackPos returns boolean
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set TimerUtils_freeTimersCount = 0
	set TimerUtils_timerData = new_Table("when calling new_Table in TimerUtils, line 12")
	set TimerUtils_HELD = 679645218
	call CreateTimer()
	call CreateTrigger()
	set wurst_stack_depth = wurst_stack_depth - 1
	return true
endfunction

function bridge_init_TimerUtils takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_TimerUtils("TimerUtils, line 1")
endfunction

function initTypecastData takes string stackPos returns nothing
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	call dispatch_Table_Table_Table_saveString(TypeCasting_typecastdata, 0, "", "when calling saveString in TypeCasting, line 11")
	set wurst_stack_depth = wurst_stack_depth - 1
endfunction

function init_TypeCasting takes string stackPos returns boolean
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set TypeCasting_typecastdata = new_Table("when calling new_Table in TypeCasting, line 6")
	set TypeCasting_R2I_PRECISION = 1000.
	call initTypecastData("when calling initTypecastData in TypeCasting, line 14")
	set wurst_stack_depth = wurst_stack_depth - 1
	return true
endfunction

function bridge_init_TypeCasting takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_TypeCasting("TypeCasting, line 1")
endfunction

function asList_11 takes integer ts_0, integer ts_1, integer ts_2, integer ts_3, integer ts_4, integer ts_5, integer ts_6, integer ts_7, integer ts_8, integer ts_9, integer ts_10, string stackPos returns integer
	local integer ll
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set ll = new_LinkedList("when calling new_LinkedList in LinkedList, line 391")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_0, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_1, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_2, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_3, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_4, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_5, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_6, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_7, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_8, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_9, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_10, "when calling add in LinkedList, line 393")
	set wurst_stack_depth = wurst_stack_depth - 1
	return ll
endfunction

function asList_12 takes integer ts_0, integer ts_1, integer ts_2, integer ts_3, integer ts_4, integer ts_5, integer ts_6, integer ts_7, integer ts_8, integer ts_9, integer ts_10, integer ts_11, string stackPos returns integer
	local integer ll
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set ll = new_LinkedList("when calling new_LinkedList in LinkedList, line 391")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_0, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_1, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_2, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_3, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_4, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_5, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_6, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_7, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_8, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_9, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_10, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_11, "when calling add in LinkedList, line 393")
	set wurst_stack_depth = wurst_stack_depth - 1
	return ll
endfunction

function asList_15 takes integer ts_0, integer ts_1, integer ts_2, integer ts_3, integer ts_4, integer ts_5, integer ts_6, integer ts_7, integer ts_8, integer ts_9, integer ts_10, integer ts_11, integer ts_12, integer ts_13, integer ts_14, string stackPos returns integer
	local integer ll
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set ll = new_LinkedList("when calling new_LinkedList in LinkedList, line 391")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_0, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_1, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_2, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_3, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_4, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_5, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_6, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_7, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_8, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_9, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_10, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_11, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_12, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_13, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_14, "when calling add in LinkedList, line 393")
	set wurst_stack_depth = wurst_stack_depth - 1
	return ll
endfunction

function asList_18 takes integer ts_0, integer ts_1, integer ts_2, integer ts_3, integer ts_4, integer ts_5, integer ts_6, integer ts_7, integer ts_8, integer ts_9, integer ts_10, integer ts_11, integer ts_12, integer ts_13, integer ts_14, integer ts_15, integer ts_16, integer ts_17, string stackPos returns integer
	local integer ll
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set ll = new_LinkedList("when calling new_LinkedList in LinkedList, line 391")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_0, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_1, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_2, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_3, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_4, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_5, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_6, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_7, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_8, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_9, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_10, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_11, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_12, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_13, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_14, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_15, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_16, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_17, "when calling add in LinkedList, line 393")
	set wurst_stack_depth = wurst_stack_depth - 1
	return ll
endfunction

function asList_22 takes integer ts_0, integer ts_1, integer ts_2, integer ts_3, integer ts_4, integer ts_5, integer ts_6, integer ts_7, integer ts_8, integer ts_9, integer ts_10, integer ts_11, integer ts_12, integer ts_13, integer ts_14, integer ts_15, integer ts_16, integer ts_17, integer ts_18, integer ts_19, integer ts_20, integer ts_21, string stackPos returns integer
	local integer ll
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set ll = new_LinkedList("when calling new_LinkedList in LinkedList, line 391")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_0, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_1, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_2, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_3, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_4, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_5, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_6, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_7, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_8, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_9, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_10, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_11, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_12, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_13, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_14, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_15, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_16, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_17, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_18, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_19, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_20, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_21, "when calling add in LinkedList, line 393")
	set wurst_stack_depth = wurst_stack_depth - 1
	return ll
endfunction

function asList_7 takes integer ts_0, integer ts_1, integer ts_2, integer ts_3, integer ts_4, integer ts_5, integer ts_6, string stackPos returns integer
	local integer ll
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set ll = new_LinkedList("when calling new_LinkedList in LinkedList, line 391")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_0, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_1, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_2, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_3, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_4, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_5, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_6, "when calling add in LinkedList, line 393")
	set wurst_stack_depth = wurst_stack_depth - 1
	return ll
endfunction

function asList_8 takes integer ts_0, integer ts_1, integer ts_2, integer ts_3, integer ts_4, integer ts_5, integer ts_6, integer ts_7, string stackPos returns integer
	local integer ll
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set ll = new_LinkedList("when calling new_LinkedList in LinkedList, line 391")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_0, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_1, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_2, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_3, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_4, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_5, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_6, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_7, "when calling add in LinkedList, line 393")
	set wurst_stack_depth = wurst_stack_depth - 1
	return ll
endfunction

function asList_9 takes integer ts_0, integer ts_1, integer ts_2, integer ts_3, integer ts_4, integer ts_5, integer ts_6, integer ts_7, integer ts_8, string stackPos returns integer
	local integer ll
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set ll = new_LinkedList("when calling new_LinkedList in LinkedList, line 391")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_0, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_1, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_2, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_3, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_4, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_5, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_6, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_7, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_8, "when calling add in LinkedList, line 393")
	set wurst_stack_depth = wurst_stack_depth - 1
	return ll
endfunction

function rectToIndex takes rect object returns integer
	return handle_getHandleId(object)
endfunction

function init_Units takes string stackPos returns boolean
	local integer receiver
	local integer receiver_2
	local integer receiver_3
	local integer receiver_4
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set Units_uSettler = 1747988554
	set Units_uSettlerReadyToSettle = 1747988553
	set Units_uDiplomacy = 1211118391
	set Units_uEconomy = 1211118406
	set Units_uPeasantWE = 1747988528
	set Units_uWorkerWE = 1747988532
	set Units_uGeneralWE = 1211118401
	set Units_uSpearmanWE = 1747989058
	set Units_uChurchWE = 1747988785
	set Units_uCapitolWE1 = 1747988529
	set Units_uCapitolWE2 = 1747988530
	set Units_uCapitolWE3 = 1747988531
	set Units_uCastleWE1 = 1747989059
	set Units_uCastleWE2 = 1747989060
	set Units_uCastleWE3 = 1747988844
	set Units_uUniversityWE = 1747988789
	set Units_uChurchEE = 1747990102
	set Units_uSettlementEE = 1747990344
	set Units_uPeasantEE = 1747990339
	set Units_uWorkerEE = 1747990340
	set Units_uCapitolEE1 = 1747990326
	set Units_uCapitolEE2 = 1747990327
	set Units_uCapitolEE3 = 1747990328
	set Units_uSpearmanEE = 1747990593
	set Units_uGeneralEE = 1211119699
	set Units_uCastleEE1 = 1747990351
	set Units_uCastleEE2 = 1747990352
	set Units_uCastleEE3 = 1747990356
	set Units_uInnEE = 1747990341
	set Units_uUniversityEE = 1747990103
	set Units_uPeasantME = 1747990087
	set Units_uWorkerME = 1747990088
	set Units_uMosque = 1747989839
	set Units_uCapitolME1 = 1747990084
	set Units_uCapitolME2 = 1747990087
	set Units_uCapitolME3 = 1747990086
	set Units_uSpearmanME = 1747989817
	set Units_uGeneralME = 1211119701
	set Units_uCastleME1 = 1747989331
	set Units_uCastleME2 = 1747990350
	set Units_uCastleME3 = 1747989809
	set Units_uUniversityME = 1747989846
	set Units_uPeasantBZ = 1747989558
	set Units_uWorkerBZ = 1747989575
	set Units_uChurchBZ = 1747989075
	set Units_uSettlementBZ = 1747989041
	set Units_uCapitolBZ1 = 1747989590
	set Units_uCapitolBZ2 = 1747989591
	set Units_uCapitolBZ3 = 1747989592
	set Units_uSpearmanBZ = 1747989571
	set Units_uGeneralBZ = 1211119700
	set Units_uCastleBZ1 = 1747990353
	set Units_uCastleBZ2 = 1747990354
	set Units_uCastleBZ3 = 1747990355
	set Units_uMercenaryCamp = 1747990614
	set Units_uUniversityBZ = 1747990064
	set Units_uAutonomousTH = 1747989555
	set Units_uTH = 1747989297
	set Units_uCH = 1747989325
	set Units_uUniversity = 1747988789
	set Units_uShipyard = 1747988569
	set Units_uSettlement = 1747988557
	set Units_uSettlementAnc1 = 1747990101
	set Units_uSettlementAnc2 = 1747989554
	set Units_uEncampment = 1747988808
	set Units_uInn = 1747988568
	set Units_uRebelSpreading = 1747989321
	set Units_uRebelKnight = 1747989326
	set Units_uRebelRam = 1747989337
	set Units_uSupplyHorse = 1747988790
	set Units_uCopperMine = 1747989317
	set Units_uGoldMine = 1747989305
	set Units_uIronMine = 1747989316
	set Units_uSilverMine = 1747989315
	set Units_uMines = asList_4(Units_uCopperMine, Units_uGoldMine, Units_uIronMine, Units_uSilverMine, "when calling asList in Units, line 112")
	set Units_usIncomeOres = new_HashMap("when calling new_HashMap in Units, line 113")
	set Units_kStartingUnits[0] = asList_18(Units_uPeasantWE, Units_uPeasantWE, Units_uPeasantWE, Units_uPeasantWE, Units_uPeasantWE, Units_uPeasantWE, Units_uWorkerWE, Units_uWorkerWE, Units_uWorkerWE, Units_uWorkerWE, Units_uGeneralWE, Units_uSpearmanWE, Units_uSpearmanWE, Units_uSpearmanWE, Units_uSpearmanWE, Units_uSpearmanWE, Units_uSpearmanWE, Units_uSupplyHorse, "when calling asList in Units, line 120")
	set Units_kStartingUnits[1] = asList_18(Units_uPeasantEE, Units_uPeasantEE, Units_uPeasantEE, Units_uPeasantEE, Units_uPeasantEE, Units_uPeasantEE, Units_uWorkerEE, Units_uWorkerEE, Units_uWorkerEE, Units_uWorkerEE, Units_uGeneralEE, Units_uSpearmanEE, Units_uSpearmanEE, Units_uSpearmanEE, Units_uSpearmanEE, Units_uSpearmanEE, Units_uSpearmanEE, Units_uSupplyHorse, "when calling asList in Units, line 126")
	set Units_kStartingUnits[2] = asList_18(Units_uPeasantME, Units_uPeasantME, Units_uPeasantME, Units_uPeasantME, Units_uPeasantME, Units_uPeasantME, Units_uWorkerME, Units_uWorkerME, Units_uWorkerME, Units_uWorkerME, Units_uGeneralME, Units_uSpearmanME, Units_uSpearmanME, Units_uSpearmanME, Units_uSpearmanME, Units_uSpearmanME, Units_uSpearmanME, Units_uSupplyHorse, "when calling asList in Units, line 133")
	set Units_kStartingUnits[3] = asList_18(Units_uPeasantBZ, Units_uPeasantBZ, Units_uPeasantBZ, Units_uPeasantBZ, Units_uPeasantBZ, Units_uPeasantBZ, Units_uWorkerBZ, Units_uWorkerBZ, Units_uWorkerBZ, Units_uWorkerBZ, Units_uGeneralBZ, Units_uSpearmanBZ, Units_uSpearmanBZ, Units_uSpearmanBZ, Units_uSpearmanBZ, Units_uSpearmanBZ, Units_uSpearmanBZ, Units_uSupplyHorse, "when calling asList in Units, line 140")
	set Units_uPlebs = asList_8(Units_uPeasantBZ, Units_uPeasantEE, Units_uPeasantME, Units_uPeasantWE, Units_uWorkerBZ, Units_uWorkerEE, Units_uWorkerME, Units_uWorkerWE, "when calling asList in Units, line 149")
	set Units_uCapitols = asList_12(Units_uCapitolWE1, Units_uCapitolWE2, Units_uCapitolWE3, Units_uCapitolEE1, Units_uCapitolEE2, Units_uCapitolEE3, Units_uCapitolME1, Units_uCapitolME2, Units_uCapitolME3, Units_uCapitolBZ1, Units_uCapitolBZ2, Units_uCapitolBZ3, "when calling asList in Units, line 161")
	set Units_uCastles = asList_12(Units_uCastleWE1, Units_uCastleWE2, Units_uCastleWE3, Units_uCastleEE1, Units_uCastleEE2, Units_uCastleEE3, Units_uCastleME1, Units_uCastleME2, Units_uCastleME3, Units_uCastleBZ1, Units_uCastleBZ2, Units_uCastleBZ3, "when calling asList in Units, line 176")
	set Units_kCityTypes = asList_15(Units_uCapitolWE1, Units_uCapitolWE2, Units_uCapitolWE3, Units_uCapitolEE1, Units_uCapitolEE2, Units_uCapitolEE3, Units_uCapitolME1, Units_uCapitolME2, Units_uCapitolME3, Units_uCapitolBZ1, Units_uCapitolBZ2, Units_uCapitolBZ3, Units_uAutonomousTH, Units_uTH, Units_uCH, "when calling asList in Units, line 191")
	set Units_uRebels[0] = asList_7(Units_uRebelSpreading, Units_uRebelSpreading, Units_uRebelSpreading, Units_uRebelSpreading, Units_uRebelSpreading, Units_uRebelSpreading, Units_uSupplyHorse, "when calling asList in Units, line 200")
	set Units_uRebels[1] = asList_9(Units_uRebelSpreading, Units_uRebelSpreading, Units_uRebelSpreading, Units_uRebelKnight, Units_uRebelKnight, Units_uRebelSpreading, Units_uRebelSpreading, Units_uRebelSpreading, Units_uSupplyHorse, "when calling asList in Units, line 201")
	set Units_uRebels[2] = asList_11(Units_uRebelSpreading, Units_uRebelSpreading, Units_uRebelSpreading, Units_uRebelSpreading, Units_uRebelKnight, Units_uRebelKnight, Units_uRebelKnight, Units_uRebelKnight, Units_uRebelRam, Units_uRebelRam, Units_uSupplyHorse, "when calling asList in Units, line 202")
	set Units_kRiverRects = asList_22(rectToIndex(gg_rct_SHIP_Ankara_Lake), rectToIndex(gg_rct_SHIP_Caspian_Sea_and_Mesapotamia), rectToIndex(gg_rct_SHIP_Danube_1), rectToIndex(gg_rct_SHIP_Danube_2), rectToIndex(gg_rct_SHIP_French_River), rectToIndex(gg_rct_SHIP_Italy), rectToIndex(gg_rct_SHIP_Lake_Africa), rectToIndex(gg_rct_SHIP_Lake_Egypt), rectToIndex(gg_rct_SHIP_Lower_Nile), rectToIndex(gg_rct_SHIP_Mesapotamia), rectToIndex(gg_rct_SHIP_Nile_2), rectToIndex(gg_rct_SHIP_Region_Giant), rectToIndex(gg_rct_SHIP_River), rectToIndex(gg_rct_SHIP_River_GIANT), rectToIndex(gg_rct_SHIP_Seine_River), rectToIndex(gg_rct_SHIP_Spannish_River), rectToIndex(gg_rct_SHIP_Spannish_River_2), rectToIndex(gg_rct_SHIP_Spannish_River_3), rectToIndex(gg_rct_SHIP_Spannish_River_4), rectToIndex(gg_rct_SHIP_Swedish_Lake), rectToIndex(gg_rct_SHIP_Thames), rectToIndex(gg_rct_SHIP_Upper_Nile), "when calling asList in Units, line 205")
	set receiver = Units_usIncomeOres
	call dispatch_HashMap_HashMap_HashMap_put(receiver, Units_uCopperMine, 15, "when calling put in Units, line 232")
	set receiver_2 = receiver
	call dispatch_HashMap_HashMap_HashMap_put(receiver_2, Units_uGoldMine, 50, "when calling put in Units, line 233")
	set receiver_3 = receiver_2
	call dispatch_HashMap_HashMap_HashMap_put(receiver_3, Units_uIronMine, 25, "when calling put in Units, line 234")
	set receiver_4 = receiver_3
	call dispatch_HashMap_HashMap_HashMap_put(receiver_4, Units_uSilverMine, 40, "when calling put in Units, line 235")
	set wurst_stack_depth = wurst_stack_depth - 1
	return true
endfunction

function bridge_init_Units takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_Units("Units, line 1")
endfunction

function alloc_Upkeep_EventListener_line28 takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_7 = EventListener_maxIndex
			set EventListener_typeId[this_7] = 683
		else
			call error("Out of memory: Could not create Upkeep_EventListener_line28.", "when calling error in Upkeep, line 28")
			set this_7 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_7 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_7] = 683
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function alloc_Upkeep_EventListener_line6 takes string stackPos returns integer
	local integer this_7
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_7 = EventListener_maxIndex
			set EventListener_typeId[this_7] = 684
		else
			call error("Out of memory: Could not create Upkeep_EventListener_line6.", "when calling error in Upkeep, line 6")
			set this_7 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_7 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_7] = 684
	endif
	set wurst_stack_depth = wurst_stack_depth - 1
	return this_7
endfunction

function init_Upkeep takes string stackPos returns boolean
	local integer clVar
	local trigger t_enter
	local integer clVar_2
	local playerunitevent temp
	local playerunitevent temp_2
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set temp = EVENT_PLAYER_UNIT_SPELL_FINISH
	set clVar = alloc_Upkeep_EventListener_line6("when calling alloc_Upkeep_EventListener_line6 in Upkeep, line 6")
	call construct_EventListener(clVar)
	call EventListener_add(temp, clVar, "when calling add in Upkeep, line 6")
	set t_enter = CreateTrigger()
	call TriggerRegisterEnterRectSimple(t_enter, GetEntireMapRect())
	call trigger_addAction(t_enter, ref_function_bridge_Upkeep_closure_impl)
	set temp_2 = EVENT_PLAYER_UNIT_DEATH
	set clVar_2 = alloc_Upkeep_EventListener_line28("when calling alloc_Upkeep_EventListener_line28 in Upkeep, line 28")
	call construct_EventListener(clVar_2)
	call EventListener_add(temp_2, clVar_2, "when calling add in Upkeep, line 28")
	set wurst_stack_depth = wurst_stack_depth - 1
	set t_enter = null
	set temp = null
	set temp_2 = null
	return true
endfunction

function bridge_init_Upkeep takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_Upkeep("Upkeep, line 1")
endfunction

function asList_24 takes integer ts_0, integer ts_1, integer ts_2, integer ts_3, integer ts_4, integer ts_5, integer ts_6, integer ts_7, integer ts_8, integer ts_9, integer ts_10, integer ts_11, integer ts_12, integer ts_13, integer ts_14, integer ts_15, integer ts_16, integer ts_17, integer ts_18, integer ts_19, integer ts_20, integer ts_21, integer ts_22, integer ts_23, string stackPos returns integer
	local integer ll
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set ll = new_LinkedList("when calling new_LinkedList in LinkedList, line 391")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_0, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_1, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_2, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_3, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_4, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_5, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_6, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_7, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_8, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_9, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_10, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_11, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_12, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_13, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_14, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_15, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_16, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_17, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_18, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_19, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_20, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_21, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_22, "when calling add in LinkedList, line 393")
	call dispatch_LinkedList_LinkedList_LinkedList_add_1(ll, ts_23, "when calling add in LinkedList, line 393")
	set wurst_stack_depth = wurst_stack_depth - 1
	return ll
endfunction

function init_VoteKick takes string stackPos returns boolean
	local integer i_2
	local integer temp
	set wurst_stack[wurst_stack_depth] = stackPos
	set wurst_stack_depth = wurst_stack_depth + 1
	set i_2 = 0
	set temp = Main_PLAYER_SLOTS - 1
	loop
		exitwhen i_2 > temp
		set VoteKick_who_voted_for_player[i_2] = new_HashSet("when calling new_HashSet in VoteKick, line 10")
		set i_2 = i_2 + 1
	endloop
	set VoteKick_playerstr = asList_24(stringToIndex("red", "when calling stringToIndex in VoteKick, line 13"), stringToIndex("blue", "when calling stringToIndex in VoteKick, line 14"), stringToIndex("teal", "when calling stringToIndex in VoteKick, line 15"), stringToIndex("purple", "when calling stringToIndex in VoteKick, line 16"), stringToIndex("yellow", "when calling stringToIndex in VoteKick, line 17"), stringToIndex("orange", "when calling stringToIndex in VoteKick, line 18"), stringToIndex("green", "when calling stringToIndex in VoteKick, line 19"), stringToIndex("pink", "when calling stringToIndex in VoteKick, line 20"), stringToIndex("grey", "when calling stringToIndex in VoteKick, line 21"), stringToIndex("light blue", "when calling stringToIndex in VoteKick, line 22"), stringToIndex("dark green", "when calling stringToIndex in VoteKick, line 23"), stringToIndex("brown", "when calling stringToIndex in VoteKick, line 24"), stringToIndex("maroon", "when calling stringToIndex in VoteKick, line 25"), stringToIndex("navy", "when calling stringToIndex in VoteKick, line 26"), stringToIndex("turquoise", "when calling stringToIndex in VoteKick, line 27"), stringToIndex("violet", "when calling stringToIndex in VoteKick, line 28"), stringToIndex("wheat", "when calling stringToIndex in VoteKick, line 29"), stringToIndex("peach", "when calling stringToIndex in VoteKick, line 30"), stringToIndex("mint", "when calling stringToIndex in VoteKick, line 31"), stringToIndex("lavender", "when calling stringToIndex in VoteKick, line 32"), stringToIndex("coal", "when calling stringToIndex in VoteKick, line 33"), stringToIndex("snow", "when calling stringToIndex in VoteKick, line 34"), stringToIndex("emerald", "when calling stringToIndex in VoteKick, line 35"), stringToIndex("peanut", "when calling stringToIndex in VoteKick, line 36"), "when calling asList in VoteKick, line 12")
	set wurst_stack_depth = wurst_stack_depth - 1
	return true
endfunction

function bridge_init_VoteKick takes nothing returns boolean
	set wurst_stack_depth = 0
	return init_VoteKick("VoteKick, line 1")
endfunction

function string_startsWith takes string this_7, string s returns boolean
	local integer len = string_length(this_7)
	if string_length(s) > len then
		return false
	endif
	return string_substring(this_7, 0, string_length(s)) == s
endfunction

function cond_2 takes nothing returns boolean
	return string_startsWith(GetEventPlayerChatString(), "-")
endfunction

function init_AbilityIds takes nothing returns boolean
	return true
endfunction

function init_Angle takes nothing returns boolean
	set Angle_DEGTORAD = 0.017453293
	set Angle_RADTODEG = 57.295779513
	return true
endfunction

function init_Basics takes nothing returns boolean
	set Basics_ANIMATION_PERIOD = 0.030
	set Basics_HEIGHT_ENABLER = 1097691750
	set Basics_LOCUST_ID = 1097625443
	set Basics_DUMMY_PLAYER = Player_players[PLAYER_NEUTRAL_PASSIVE]
	return true
endfunction

function init_Bootleg takes nothing returns boolean
	return true
endfunction

function init_Buildings takes nothing returns boolean
	return true
endfunction

function init_ClosureForGroups takes nothing returns boolean
	local real tuple_temp
	local real tuple_temp_2
	set ClosureForGroups_DUMMY_GROUP = CreateGroup()
	set ClosureForGroups_tempCallbacksCount = 0
	set ClosureForGroups_maxCount = Integer_INT_MAX
	set ClosureForGroups_iterCount = 0
	set ClosureForGroups_filter = Filter(ref_function_bridge_ClosureForGroups_closure_impl)
	set ClosureForGroups_tempCallbacksDCount = 0
	set ClosureForGroups_nearestDDist = Real_REAL_MAX
	set tuple_temp = Vectors_ZERO2_x
	set tuple_temp_2 = Vectors_ZERO2_y
	set ClosureForGroups_gpos_x = tuple_temp
	set ClosureForGroups_gpos_y = tuple_temp_2
	return true
endfunction

function init_ClosureTimers takes nothing returns boolean
	set ClosureTimers_x = 200
	return true
endfunction

function init_Commands takes nothing returns boolean
	local trigger t
	local trigger receiver
	local trigger receiver_2
	local integer i_2
	local integer temp
	set Commands_kFarDistance = 3000.0
	set Commands_kMedDistance = 2300.0
	set Commands_kNameLimit = 40
	set Commands_ksFar = "far"
	set Commands_ksMed = "med"
	set Commands_ksName = "name"
	set Commands_ksRenameCity = "rename"
	set Commands_ksAddModifier = "add_mod"
	set Commands_ksDebug = "непереводимоесочетаниебукв"
	set Commands_ksVoteKick = "votekick"
	set Commands_ksZoom = "zoom"
	set Commands_ksObserve = "observe"
	set Commands_ksLowerPO = "add_po"
	set Commands_kseNotYourCity = "The city you wanted to rename so eagerly doesn't belong to you!"
	set receiver = CreateTrigger()
	call trigger_addCondition(receiver, Condition(ref_function_cond))
	set receiver_2 = receiver
	call trigger_addAction(receiver_2, ref_function_bridge_action)
	set t = receiver_2
	set i_2 = 0
	set temp = Main_PLAYER_SLOTS - 1
	loop
		exitwhen i_2 > temp
		call trigger_registerPlayerChatEvent(t, Player_players[i_2], "-", false)
		set i_2 = i_2 + 1
	endloop
	set t = null
	set receiver = null
	set receiver_2 = null
	return true
endfunction

function init_Diplomacy takes nothing returns boolean
	local trigger receiver = CreateTrigger()
	local trigger receiver_2
	local trigger receiver_3
	call trigger_registerAnyUnitEvent(receiver, EVENT_PLAYER_UNIT_SPELL_EFFECT)
	set receiver_2 = receiver
	call trigger_addCondition(receiver_2, Condition(ref_function_bridge_cond))
	set receiver_3 = receiver_2
	call trigger_addAction(receiver_3, ref_function_bridge_action_2)
	set receiver = null
	set receiver_2 = null
	set receiver_3 = null
	return true
endfunction

function init_Doodads takes nothing returns boolean
	return true
endfunction

function init_ErrorHandling takes nothing returns boolean
	set ErrorHandling_MUTE_ERROR_DURATION = 60
	set ErrorHandling_PRIMARY_ERROR_KEY = -1
	set ErrorHandling_HT = InitHashtable()
	set ErrorHandling_suppressErrorMessages = false
	return true
endfunction

function init_Forces takes nothing returns boolean
	local integer tuple_temp
	local integer tuple_temp_2
	local integer tuple_temp_3
	local integer tuple_temp_4
	local integer tuple_temp_5
	local integer tuple_temp_6
	local integer tuple_temp_7
	local integer tuple_temp_8
	local integer tuple_temp_9
	local integer tuple_temp_10
	local integer tuple_temp_11
	local integer tuple_temp_12
	set Forces_fWE = CreateForce()
	set Forces_fEE = CreateForce()
	set Forces_fME = CreateForce()
	set Forces_fBZ = CreateForce()
	set Forces_kWE = 0
	set Forces_kEE = 1
	set Forces_kME = 2
	set Forces_kBZ = 3
	set Forces_forces[0] = Forces_fWE
	set Forces_forces[1] = Forces_fEE
	set Forces_forces[2] = Forces_fME
	set Forces_forces[3] = Forces_fBZ
	set tuple_temp = 62
	set tuple_temp_2 = 194
	set tuple_temp_3 = 255
	set Forces_forces_colors_red[0] = tuple_temp
	set Forces_forces_colors_green[0] = tuple_temp_2
	set Forces_forces_colors_blue[0] = tuple_temp_3
	set tuple_temp_4 = 255
	set tuple_temp_5 = 238
	set tuple_temp_6 = 0
	set Forces_forces_colors_red[1] = tuple_temp_4
	set Forces_forces_colors_green[1] = tuple_temp_5
	set Forces_forces_colors_blue[1] = tuple_temp_6
	set tuple_temp_7 = 0
	set tuple_temp_8 = 201
	set tuple_temp_9 = 10
	set Forces_forces_colors_red[2] = tuple_temp_7
	set Forces_forces_colors_green[2] = tuple_temp_8
	set Forces_forces_colors_blue[2] = tuple_temp_9
	set tuple_temp_10 = 219
	set tuple_temp_11 = 0
	set tuple_temp_12 = 201
	set Forces_forces_colors_red[3] = tuple_temp_10
	set Forces_forces_colors_green[3] = tuple_temp_11
	set Forces_forces_colors_blue[3] = tuple_temp_12
	call color_toColorString(Forces_forces_colors_red[0], Forces_forces_colors_green[0], Forces_forces_colors_blue[0])
	call color_toColorString(Forces_forces_colors_red[1], Forces_forces_colors_green[1], Forces_forces_colors_blue[1])
	call color_toColorString(Forces_forces_colors_red[2], Forces_forces_colors_green[2], Forces_forces_colors_blue[2])
	call color_toColorString(Forces_forces_colors_red[3], Forces_forces_colors_green[3], Forces_forces_colors_blue[3])
	return true
endfunction

function init_GameTimer takes nothing returns boolean
	set GameTimer_gameTimer = CreateTimer()
	call timer_start(GameTimer_gameTimer, 100000., null)
	call timer_startPeriodic(CreateTimer(), Basics_ANIMATION_PERIOD, ref_function_GameTimer_closure_impl)
	return true
endfunction

function init_Group takes nothing returns boolean
	call CreateGroup()
	set Group_unitCounter = 0
	set Group_randomCounter = 0
	return true
endfunction

function init_HashList takes nothing returns boolean
	set HashList_ht = InitHashtable()
	set HashList_occurences = InitHashtable()
	return true
endfunction

function init_HashSet takes nothing returns boolean
	set HashSet_position = InitHashtable()
	return true
endfunction

function init_Icons takes nothing returns boolean
	return true
endfunction

function init_Integer takes nothing returns boolean
	set Integer_INT_MAX = 2147483647
	return true
endfunction

function init_Lightning takes nothing returns boolean
	return true
endfunction

function init_Logarithm takes nothing returns boolean
	call Pow(2.0, 128.0)
	return true
endfunction

function init_MagicFunctions takes nothing returns boolean
	set MagicFunctions_compiletime = false
	return true
endfunction

function init_Main takes nothing returns boolean
	set Main_dbg_msg = false
	set Main_dbg_mode = false
	set Main_dbg_player = 0
	set Main_PLAYER_SLOTS = 24
	set Main_kStartGold = 200
	set Main_kStartLumber = 200
	set Main_TURN_TIME = 120.0
	set Main_global_timer = CreateTimer()
	call timer_startPeriodic(Main_global_timer, 0.01, ref_function_Main_closure_impl)
	return true
endfunction

function region_addRect takes region this_7, rect rct returns nothing
	call RegionAddRect(this_7, rct)
endfunction

function vec2_op_mult takes real this_x, real this_y, real factor returns real
	set vec2_op_mult_return_x = this_x * factor
	set vec2_op_mult_return_y = this_y * factor
	return vec2_op_mult_return_x
endfunction

function initMapBounds takes nothing returns nothing
	local rect cond_result
	local region receiver
	local rect cond_result_2
	local region receiver_2
	local real tuple_temp
	local real tuple_temp_2
	local real tuple_temp_3
	local real tuple_temp_4
	local real tuple_temp_5
	local real tuple_temp_6
	local real tuple_temp_7
	local real tuple_temp_8
	local real tuple_temp_9
	local real tuple_temp_10
	local real tuple_temp_11
	local real tuple_temp_12
	if MagicFunctions_compiletime then
		set cond_result = Rect(-1024., -1024., 1024., 1024.)
	else
		set cond_result = GetPlayableMapRect()
	endif
	set MapBounds_playableMapRect = cond_result
	set receiver = CreateRegion()
	call region_addRect(receiver, MapBounds_playableMapRect)
	if MagicFunctions_compiletime then
		set cond_result_2 = Rect(-1536., -1536., 1536., 1536.)
	else
		set cond_result_2 = GetWorldBounds()
	endif
	set MapBounds_boundRect = cond_result_2
	set receiver_2 = CreateRegion()
	call region_addRect(receiver_2, MapBounds_boundRect)
	set MapBounds_boundRegion = receiver_2
	set tuple_temp = rect_getMinX(MapBounds_playableMapRect)
	set tuple_temp_2 = rect_getMinY(MapBounds_playableMapRect)
	set MapBounds_playableMin_x = tuple_temp
	set MapBounds_playableMin_y = tuple_temp_2
	set tuple_temp_3 = rect_getMaxX(MapBounds_playableMapRect)
	set tuple_temp_4 = rect_getMaxY(MapBounds_playableMapRect)
	set MapBounds_playableMax_x = tuple_temp_3
	set MapBounds_playableMax_y = tuple_temp_4
	set tuple_temp_5 = rect_getMinX(MapBounds_boundRect)
	set tuple_temp_6 = rect_getMinY(MapBounds_boundRect)
	set MapBounds_boundMin_x = tuple_temp_5
	set MapBounds_boundMin_y = tuple_temp_6
	set tuple_temp_7 = rect_getMaxX(MapBounds_boundRect)
	set tuple_temp_8 = rect_getMaxY(MapBounds_boundRect)
	set MapBounds_boundMax_x = tuple_temp_7
	set MapBounds_boundMax_y = tuple_temp_8
	set tuple_temp_9 = vec2_op_mult(vec2_op_plus(MapBounds_playableMin_x, MapBounds_playableMin_y, MapBounds_playableMax_x, MapBounds_playableMax_y), vec2_op_plus_return_y, .5)
	set tuple_temp_10 = vec2_op_mult_return_y
	set tuple_temp_11 = vec2_op_mult(vec2_op_plus(MapBounds_boundMin_x, MapBounds_boundMin_y, MapBounds_boundMax_x, MapBounds_boundMax_y), vec2_op_plus_return_y, .5)
	set tuple_temp_12 = vec2_op_mult_return_y
endfunction

function init_MapBounds takes nothing returns boolean
	call initMapBounds()
	return true
endfunction

function init_MathTools takes nothing returns boolean
	set MathTools_e = Maths_EULER
	return true
endfunction

function init_Maths takes nothing returns boolean
	set Maths_EULER = 2.718281828
	set Maths_PI = 3.141592654
	set Maths_PI2 = 6.28318
	return true
endfunction

function init_Matrices takes nothing returns boolean
	local real tuple_temp = 0.
	local real tuple_temp_2 = 0.
	local real tuple_temp_3 = 0.
	local real tuple_temp_4 = 0.
	local real tuple_temp_5 = 1.
	local real tuple_temp_6 = 0.
	local real tuple_temp_7 = 0.
	local real tuple_temp_8 = 1.
	local real tuple_temp_9 = 0.
	local real tuple_temp_10 = 0.
	local real tuple_temp_11 = 0.
	local real tuple_temp_12 = 0.
	local real tuple_temp_13 = 0.
	local real tuple_temp_14 = 0.
	local real tuple_temp_15 = 0.
	local real tuple_temp_16 = 0.
	local real tuple_temp_17 = 0.
	local real tuple_temp_18 = 1.
	local real tuple_temp_19 = 0.
	local real tuple_temp_20 = 0.
	local real tuple_temp_21 = 0.
	local real tuple_temp_22 = 1.
	local real tuple_temp_23 = 0.
	local real tuple_temp_24 = 0.
	local real tuple_temp_25 = 0.
	local real tuple_temp_26 = 1.
	return true
endfunction

function init_MutliboardTools takes nothing returns boolean
	set MutliboardTools_kWidthPerChar = 0.004
	return true
endfunction

function init_ObjectIds takes nothing returns boolean
	set ObjectIds_CHARMAP = ".................................!.#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[.]^_`abcdefghijklmnopqrstuvwxyz{|}~................................................................................................................................."
	return true
endfunction

function init_Objects takes nothing returns boolean
	return true
endfunction

function initPlayerArray takes nothing returns nothing
	local integer i_2 = 0
	local integer temp = bj_MAX_PLAYER_SLOTS - 1
	loop
		exitwhen i_2 > temp
		set Player_players[i_2] = Player(i_2)
		set i_2 = i_2 + 1
	endloop
endfunction

function init_Player takes nothing returns boolean
	set Player_localPlayer = GetLocalPlayer()
	call initPlayerArray()
	return true
endfunction

function init_PlayerStats takes nothing returns boolean
	set PlayerStats_PLAYER_SELF = -1
	return true
endfunction

function init_Playercolor takes nothing returns boolean
	set Playercolor_PLAYER_COLOR_BLACK_AGGRESSIVE = ConvertPlayerColor(24)
	set Playercolor_PLAYER_COLOR_UNKNOWN1 = ConvertPlayerColor(25)
	set Playercolor_PLAYER_COLOR_UNKNOWN2 = ConvertPlayerColor(26)
	set Playercolor_PLAYER_COLOR_BLACK_PASSIVE = ConvertPlayerColor(27)
	set Playercolor_LOOKUP[0] = PLAYER_COLOR_RED
	set Playercolor_LOOKUP[1] = PLAYER_COLOR_BLUE
	set Playercolor_LOOKUP[2] = PLAYER_COLOR_CYAN
	set Playercolor_LOOKUP[3] = PLAYER_COLOR_PURPLE
	set Playercolor_LOOKUP[4] = PLAYER_COLOR_YELLOW
	set Playercolor_LOOKUP[5] = PLAYER_COLOR_ORANGE
	set Playercolor_LOOKUP[6] = PLAYER_COLOR_GREEN
	set Playercolor_LOOKUP[7] = PLAYER_COLOR_PINK
	set Playercolor_LOOKUP[8] = PLAYER_COLOR_LIGHT_GRAY
	set Playercolor_LOOKUP[9] = PLAYER_COLOR_LIGHT_BLUE
	set Playercolor_LOOKUP[10] = PLAYER_COLOR_AQUA
	set Playercolor_LOOKUP[11] = PLAYER_COLOR_BROWN
	set Playercolor_LOOKUP[12] = PLAYER_COLOR_MAROON
	set Playercolor_LOOKUP[13] = PLAYER_COLOR_NAVY
	set Playercolor_LOOKUP[14] = PLAYER_COLOR_TURQUOISE
	set Playercolor_LOOKUP[15] = PLAYER_COLOR_VIOLET
	set Playercolor_LOOKUP[16] = PLAYER_COLOR_WHEAT
	set Playercolor_LOOKUP[17] = PLAYER_COLOR_PEACH
	set Playercolor_LOOKUP[18] = PLAYER_COLOR_MINT
	set Playercolor_LOOKUP[19] = PLAYER_COLOR_LAVENDER
	set Playercolor_LOOKUP[20] = PLAYER_COLOR_COAL
	set Playercolor_LOOKUP[21] = PLAYER_COLOR_SNOW
	set Playercolor_LOOKUP[22] = PLAYER_COLOR_EMERALD
	set Playercolor_LOOKUP[23] = PLAYER_COLOR_PEANUT
	set Playercolor_LOOKUP[24] = Playercolor_PLAYER_COLOR_BLACK_AGGRESSIVE
	set Playercolor_LOOKUP[25] = Playercolor_PLAYER_COLOR_UNKNOWN1
	set Playercolor_LOOKUP[26] = Playercolor_PLAYER_COLOR_UNKNOWN2
	set Playercolor_LOOKUP[27] = Playercolor_PLAYER_COLOR_BLACK_PASSIVE
	return true
endfunction

function init_Printing takes nothing returns boolean
	set Printing_DEBUG_LEVEL = 2
	set Printing_DEBUG_MSG_DURATION = 45.
	return true
endfunction

function init_Quaternion takes nothing returns boolean
	local real tuple_temp = 0.
	local real tuple_temp_2 = 0.
	local real tuple_temp_3 = 0.
	local real tuple_temp_4 = 1.
	local real tuple_temp_5 = 0.
	local real tuple_temp_6 = 0.
	local real tuple_temp_7 = 0.
	local real tuple_temp_8 = 0.
	return true
endfunction

function init_Real takes nothing returns boolean
	set Real_REAL_MAX = 340282366920938000000000000000000000000.
	set Real_REAL_MIN =  - 340282366920938000000000000000000000000.
	return true
endfunction

function init_Revolts takes nothing returns boolean
	set Revolts_kPOtoRevolt1 = 50.0
	set Revolts_kPOtoRevolt2 = 30.0
	set Revolts_kPOtoRevolt3 = 15.0
	set Revolts_k100ChanceOfDoubleRevoltComesWithNPop = 150000
	set Revolts_kCityMinTimeToRevolt = Main_TURN_TIME / 2.
	return true
endfunction

function init_Sounds takes nothing returns boolean
	return true
endfunction

function init_Soundsets takes nothing returns boolean
	return true
endfunction

function init_String takes nothing returns boolean
	set String_charset = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
	set String_numberset = "0123456789"
	call string_length(String_numberset)
	call string_length(String_charset)
	return true
endfunction

function init_Strings takes nothing returns boolean
	set Strings_kWarningDur = 10.0
	set Strings_ksWarning[0] = "Warning!"
	set Strings_ksMsgCount = 3
	set Strings_ksWarningWE[0] = "Terrible! Terrible news, my lord!"
	set Strings_ksWarningWE[1] = "The messenger came to us with horrific news! May we execute him?"
	set Strings_ksWarningWE[2] = "A mere nightmare, Your Mightiness!"
	set Strings_ksWarningEE[0] = "Holy Mother of God, we have horrific news!"
	set Strings_ksWarningEE[1] = "Lord Preserve us, Great Prince!"
	set Strings_ksWarningEE[2] = "Great Prince, we have horrific news!"
	set Strings_ksWarningME[0] = "Allah be merciful! I bring terrible news"
	set Strings_ksWarningME[1] = "Oh, Great Sultan! We have terrible news"
	set Strings_ksWarningME[2] = "Oh, Great one! I bring ill news"
	set Strings_ksWarningBZ[0] = "Saints save us, we have some most horrific news!"
	set Strings_ksWarningBZ[1] = "My Basileus! We have horrific news!"
	set Strings_ksWarningBZ[2] = "My Basileus, by the grace of our lord. We have horrific news!"
	set Strings_kNoteDur = 10.0
	set Strings_ksNote[0] = "Note:"
	set Strings_ksNoteWE[0] = "My King, we have received news concerning our realm"
	set Strings_ksNoteWE[1] = "The messenger arrived with news. No matter, could I execute him?"
	set Strings_ksNoteWE[2] = "My liege I bring news about the realm"
	set Strings_ksNoteEE[0] = "Great Prince, a messenger came with news"
	set Strings_ksNoteEE[1] = "May the God bless you, Great Prince, we have some news"
	set Strings_ksNoteEE[2] = "There is something you should know, Great Prince"
	set Strings_ksNoteME[0] = "My Sultan! We have news"
	set Strings_ksNoteME[1] = "Praise be to Allah, Sultan! We bring news"
	set Strings_ksNoteME[2] = "Great Sultan! We have some news"
	set Strings_ksNoteBZ[0] = "My Basileus, we have some news"
	set Strings_ksNoteBZ[1] = "My Basileus, we have some news"
	set Strings_ksNoteBZ[2] = "My Basileus, we have some news"
	set Strings_kGoodNewsDur = 10.0
	set Strings_ksGoodNews[0] = "Good news!"
	set Strings_ksGoodNewsWE[0] = "Milord! Good news!"
	set Strings_ksGoodNewsWE[1] = "Praise the Holy Lord! We have good news"
	set Strings_ksGoodNewsWE[2] = "My King, we bring great news for you!"
	set Strings_ksGoodNewsEE[0] = "By the grace of our Lord, we bring good news!"
	set Strings_ksGoodNewsEE[1] = "We received great news my Lord! Still the Messenger deserves to be pusnished"
	set Strings_ksGoodNewsEE[2] = "My Lord, we have received delightful news!"
	set Strings_ksGoodNewsME[0] = "Praise be to Allah, Sultan! We have great news"
	set Strings_ksGoodNewsME[1] = "Good tidings Sultan! I bring good news"
	set Strings_ksGoodNewsME[2] = "Allah is glorious, Sultan! We have great news"
	set Strings_ksGoodNewsBZ[0] = "Good news, my Basileus!"
	set Strings_ksGoodNewsBZ[1] = "Praise the Holy Lord, we bring great news, my Basileus!"
	set Strings_ksGoodNewsBZ[2] = "We received good news my Basileus! We shouldn’t blind this messenger"
	set Strings_ksAttention[0] = "Attention!"
	set Strings_ksAttentionWE[0] = "Your Majesty, important news!"
	set Strings_ksAttentionWE[1] = "May the God bless you, my lord. There is something you must know!"
	set Strings_ksAttentionWE[2] = "There is something that needs your attention, my lord!"
	set Strings_ksAttentionEE[0] = "By the Saints! Great Prince, you must hear to this"
	set Strings_ksAttentionEE[1] = "You should hear this, Great Prince!"
	set Strings_ksAttentionEE[2] = "You need to see this, Great Prince!"
	set Strings_ksAttentionME[0] = "Great one, urgent news must be brought to your attention!"
	set Strings_ksAttentionME[1] = "My Sultan, there is something you need to know!"
	set Strings_ksAttentionME[2] = "My Great Sultan, there is something you must know!"
	set Strings_ksAttentionBZ[0] = "My Basileus, there is something you need to know!"
	set Strings_ksAttentionBZ[1] = "My Basileus, we can not delay this news!"
	set Strings_ksAttentionBZ[2] = "My Basileus, you should be aware of this!"
	set Strings_ksShipyardNearRiver = "You cannot build shipyards near rivers"
	set Strings_ksTooCloseChurchWE = "You cannot build churches too close to each other."
	set Strings_ksTooCloseChurchEE = "You cannot build churches too close to each other."
	set Strings_ksTooCloseChurchBZ = "You cannot build churches too close to each other."
	set Strings_ksTooCloseMosque = "You cannot build mosques too close to each other."
	set Strings_ksTooCloseSettlement = "You cannot build settlements too close to each other."
	set Strings_ksTooCloseInn = "You cannot build inns too close to each other."
	set Strings_ksTooCloseCastle = "You cannot build castles too close to each other."
	set Strings_ksTooManyEncampments = "You cannot build more than 3 encampments."
	set Strings_ksTooManyMercenaryCamps = "You cannot build more than 3 mercenary camps."
	set Strings_ksCannotConvertBelievers = "Clerics cannot convert someone who professes same religion as you."
	set Strings_ksRevolt = "A violent mob has appeared near the gates of "
	set Strings_kDiscordTime = 20.0
	set Strings_ksDiscord = "Enjoying the map? Join the |cffe100ffofficial CoE discord channel|r! Link: |cffffff00discord.gg/V6kmxsy|r"
	set Strings_ksTaxLevels[0] = "|cffffd900Med."
	set Strings_ksTaxLevels[1] = "|cff00ff00Low"
	set Strings_ksTaxLevels[2] = "|cffff0000High"
	set Strings_ksTaxLevels[3] = "|cff940000Harsh"
	set Strings_ksCannotChangeTaxLevel = "Wait 1 turn to be able to change tax level."
	set Strings_ksBecomeObserver = " has just became an observer."
	set Strings_ksToBecomeObserver = "To become an observer, you should have no units!"
	return true
endfunction

function init_Table takes nothing returns boolean
	set Table_ht = InitHashtable()
	return true
endfunction

function init_TargetsAllowed takes nothing returns boolean
	return true
endfunction

function init_Textures takes nothing returns boolean
	return true
endfunction

function init_UI takes nothing returns boolean
	return true
endfunction

function init_UnitIds takes nothing returns boolean
	return true
endfunction

function onEnter takes code c returns nothing
	call trigger_addCondition(OnUnitEnterLeave_eventTrigger, Filter(c))
endfunction

function onLeave takes code c returns nothing
	call trigger_addAction(OnUnitEnterLeave_eventTrigger, c)
endfunction

function init_UnitIndexer takes nothing returns boolean
	set UnitIndexer_onIndexTrigger = CreateTrigger()
	set UnitIndexer_onDeindexTrigger = CreateTrigger()
	set UnitIndexer_tempUnitsCount = 0
	call onEnter(ref_function_bridge_UnitIndexer_closure_impl)
	call onLeave(ref_function_bridge_UnitIndexer_closure_impl_2)
	return true
endfunction

function init_Vectors takes nothing returns boolean
	local real tuple_temp = 0.
	local real tuple_temp_2 = 0.
	local real tuple_temp_3
	local real tuple_temp_4
	local real tuple_temp_5
	local real tuple_temp_6
	local real tuple_temp_7
	local real tuple_temp_8
	local real tuple_temp_9
	local real tuple_temp_10
	local real tuple_temp_11
	local real tuple_temp_12
	local real tuple_temp_13
	set Vectors_ZERO2_x = tuple_temp
	set Vectors_ZERO2_y = tuple_temp_2
	set tuple_temp_3 = 0.
	set tuple_temp_4 = 0.
	set tuple_temp_5 = 0.
	set tuple_temp_6 = 1.
	set tuple_temp_7 = 0.
	set tuple_temp_8 = 0.
	set tuple_temp_9 = 1.
	set tuple_temp_10 = -1.
	set tuple_temp_11 = 0.
	set tuple_temp_12 = 0.
	set tuple_temp_13 = -1.
	call Location(0., 0.)
	return true
endfunction

function init_WeatherEffects takes nothing returns boolean
	return true
endfunction

function initGlobals takes nothing returns nothing
	set udg_Supplyhorses = null
	set udg_Temp_Point = null
	set udg_AllPlayerUnits = null
	set udg_ConvertPoint = null
	set udg_ConvertPoint2 = null
	set udg_GHoriTP = null
	set udg_GVertRP = null
	set udg_GHoriDetectCenter = null
	set udg_GVertDetectCenter = null
	set udg_GateMovingUnits1 = null
	set udg_Supplyhorses2 = null
	set udg_TradePoint = null
	set gg_rct_SHIP_Lower_Nile = null
	set gg_rct_SHIP_Nile_2 = null
	set gg_rct_SHIP_Upper_Nile = null
	set gg_rct_SHIP_Thames = null
	set gg_rct_CITY_WE_Burgh = null
	set gg_rct_CITY_WE_Cardiff = null
	set gg_rct_CITY_WE_Galway = null
	set gg_rct_CITY_WE_Zagreb = null
	set gg_rct_CITY_WE_Zadar = null
	set gg_rct_CITY_BYZ_Durrazo = null
	set gg_rct_CITY_BYZ_Adrianopolis = null
	set gg_rct_CITY_Byz_Thessalonika = null
	set gg_rct_CITY_BYZ_Constantinople = null
	set gg_rct_CITY_WE_Warwick = null
	set gg_rct_CITY_BYZ_Scopia = null
	set gg_rct_CITY_WE_Vienna = null
	set gg_rct_CITY_WE_Prague = null
	set gg_rct_CITY_WE_Esztergom = null
	set gg_rct_CITY_WE_Stettin = null
	set gg_rct_CITY_WE_Krakow = null
	set gg_rct_CITY_WE_Wroclaw = null
	set gg_rct_CITY_EE_Constanta = null
	set gg_rct_CITY_EE_Targoviste = null
	set gg_rct_CITY_WE_Brasov = null
	set gg_rct_CITY_WE_Belgrade = null
	set gg_rct_CITY_WE_Flensburg = null
	set gg_rct_CITY_WE_Roskilde = null
	set gg_rct_CITY_WE_Aarhus = null
	set gg_rct_CITY_WE_Madgeburg = null
	set gg_rct_CITY_EE_Sofia = null
	set gg_rct_CITY_WE_Plock = null
	set gg_rct_CITY_WE_Poznan = null
	set gg_rct_CITY_WE_Kassa = null
	set gg_rct_CITY_WE_Varad = null
	set gg_rct_CITY_EE_Konigsberg = null
	set gg_rct_CITY_EE_Riga = null
	set gg_rct_CITY_WE_Gdansk = null
	set gg_rct_CITY_EE_Hrodna = null
	set gg_rct_CITY_EE_Vilnius = null
	set gg_rct_CITY_EE_Caffa = null
	set gg_rct_CITY_EE_Pskov = null
	set gg_rct_CITY_EE_Reval = null
	set gg_rct_CITY_EE_Novgorod = null
	set gg_rct_CITY_EE_Polotsk = null
	set gg_rct_SHIP_Seine_River = null
	set gg_rct_SHIP_French_River = null
	set gg_rct_SHIP_Spannish_River = null
	set gg_rct_SHIP_Spannish_River_2 = null
	set gg_rct_SHIP_Spannish_River_3 = null
	set gg_rct_SHIP_Spannish_River_4 = null
	set gg_rct_SHIP_Danube_1 = null
	set gg_rct_SHIP_Danube_2 = null
	set gg_rct_SHIP_Swedish_Lake = null
	set gg_rct_CITY_EE_Halych = null
	set gg_rct_SHIP_River = null
	set gg_rct_SHIP_Region_Giant = null
	set gg_rct_SHIP_River_GIANT = null
	set gg_rct_CITY_WE_Groningen = null
	set gg_rct_CITY_ME_Tunis = null
	set gg_rct_CITY_EE_Azaq = null
	set gg_rct_CITY_EE_Kiev = null
	set gg_rct_CITY_EE_Minsk = null
	set gg_rct_CITY_EE_Smolensk = null
	set gg_rct_SHIP_Caspian_Sea_and_Mesapotamia = null
	set gg_rct_CITY_ME_Sinop = null
	set gg_rct_CITY_ME_Isparta = null
	set gg_rct_CITY_ME_Kayseri = null
	set gg_rct_CITY_ME_Adana = null
	set gg_rct_CITY_ME_Konya = null
	set gg_rct_CITY_ME_Antioch = null
	set gg_rct_CITY_BYZ_Trebizond = null
	set gg_rct_CITY_BYZ_Nicosia = null
	set gg_rct_CITY_ME_JERUSALEM = null
	set gg_rct_CITY_ME_Edessa = null
	set gg_rct_CITY_BYZ_Smyrna = null
	set gg_rct_CITY_ME_Ankara = null
	set gg_rct_CITY_BYZ_Nicae = null
	set gg_rct_CITY_ME_Fes = null
	set gg_rct_CITY_ME_Oran = null
	set gg_rct_CITY_ME_Algiers = null
	set gg_rct_CITY_ME_Mahdya = null
	set gg_rct_CITY_ME_Tripoli = null
	set gg_rct_CITY_ME_Benghazi = null
	set gg_rct_SHIP_Lake_Egypt = null
	set gg_rct_CITY_ME_Medina = null
	set gg_rct_CITY_ME_Alexandria = null
	set gg_rct_CITY_ME_Damietta = null
	set gg_rct_CITY_ME_Cairo = null
	set gg_rct_CITY_EE_Timutarakan = null
	set gg_rct_CITY_EE_Baia = null
	set gg_rct_CITY_EE_Zhytomyr = null
	set gg_rct_CITY_EE_Oleshe = null
	set gg_rct_CITY_EE_Dnipro = null
	set gg_rct_CITY_EE_Moscow = null
	set gg_rct_CITY_EE_Bryansk = null
	set gg_rct_CITY_ME_Yerevan = null
	set gg_rct_CITY_EE_Sarkel = null
	set gg_rct_CITY_BYZ_Kutaisi = null
	set gg_rct_CITY_BYZ_Tbilisi = null
	set gg_rct_CITY_ME_Damascus = null
	set gg_rct_CITY_ME_Tartus = null
	set gg_rct_CITY_ME_Gaza = null
	set gg_rct_CITY_ME_Mosul = null
	set gg_rct_CITY_ME_Acre = null
	set gg_rct_CITY_ME_Al_Aqaba = null
	set gg_rct_CITY_ME_Quarisiya = null
	set gg_rct_CITY_ME_Tamiya = null
	set gg_rct_CITY_ME_Diyarbakir = null
	set gg_rct_CITY_ME_Erez = null
	set gg_rct_SHIP_Lake_Africa = null
	set gg_rct_SHIP_Mesapotamia = null
	set gg_rct_SHIP_Ankara_Lake = null
	set gg_rct_SHIP_Italy = null
	set gg_rct_CITY_WE_Salzburg = null
	set gg_rct_CITY_WE_Innsbruck = null
	set gg_rct_CITY_WE_Cologne = null
	set gg_rct_CITY_WE_Frankfurt = null
	set gg_rct_CITY_WE_Hamburg = null
	set gg_rct_CITY_ME_Palma = null
	set gg_rct_CITY_EE_Astrakhan = null
	set gg_rct_CITY_EE_Ryazan = null
	set gg_rct_CITY_WE_Edinburgh = null
	set gg_rct_CITY_WE_Aberdeen = null
	set gg_rct_CITY_WE_Inverness = null
	set gg_rct_CITY_WE_York = null
	set gg_rct_CITY_WE_Dublin = null
	set gg_rct_CITY_WE_Desmond = null
	set gg_rct_CITY_WE_Caernarfon = null
	set gg_rct_CITY_WE_London = null
	set gg_rct_CITY_WE_Winchester = null
	set gg_rct_CITY_WE_Exeter = null
	set gg_rct_CITY_WE_Caen = null
	set gg_rct_CITY_WE_Rheims = null
	set gg_rct_CITY_WE_Paris = null
	set gg_rct_CITY_WE_Dijon = null
	set gg_rct_CITY_WE_Clermont = null
	set gg_rct_CITY_WE_Toulouse = null
	set gg_rct_CITY_WE_Bordeaux = null
	set gg_rct_CITY_WE_Zaragoza = null
	set gg_rct_CITY_WE_Barcelona = null
	set gg_rct_CITY_WE_Leon = null
	set gg_rct_CITY_WE_Burgos = null
	set gg_rct_CITY_ME_Madrid = null
	set gg_rct_CITY_WE_Salamanca = null
	set gg_rct_CITY_ME_Lisbon = null
	set gg_rct_CITY_WE_Pamplona = null
	set gg_rct_CITY_WE_Marseille = null
	set gg_rct_CITY_WE_Bruges = null
	set gg_rct_CITY_WE_Antwerp = null
	set gg_rct_CITY_WE_Genoa = null
	set gg_rct_CITY_WE_Milan = null
	set gg_rct_CITY_WE_Venice = null
	set gg_rct_CITY_WE_Bologna = null
	set gg_rct_CITY_WE_Pisa = null
	set gg_rct_CITY_WE_Ancona = null
	set gg_rct_CITY_WE_Rome = null
	set gg_rct_CITY_ME_Granada = null
	set gg_rct_CITY_ME_Cordoba = null
	set gg_rct_CITY_ME_Murcia = null
	set gg_rct_CITY_ME_Valencia = null
	set gg_rct_CITY_WE_Nuremburg = null
	set gg_rct_CITY_WE_Bern = null
	set gg_rct_CITY_WE_Lyon = null
	set gg_rct_CITY_WE_Lund = null
	set gg_rct_CITY_WE_Skara = null
	set gg_rct_CITY_WE_Oslo = null
	set gg_rct_CITY_WE_Eikundarsund = null
	set gg_rct_CITY_WE_Bergen = null
	set gg_rct_CITY_WE_Visby = null
	set gg_rct_CITY_WE_Nykoping = null
	set gg_rct_CITY_ME_Silves = null
	set gg_rct_CITY_ME_Marakesh = null
	set gg_rct_CITY_ME_Luxor = null
	set gg_rct_CITY_WE_Rennes = null
	set gg_rct_CITY_WE_Angers = null
	set gg_rct_CITY_WE_Ajaccio = null
	set gg_rct_CITY_WE_Cagliari = null
	set gg_rct_CITY_WE_Naples = null
	set gg_rct_CITY_WE_Reggio = null
	set gg_rct_CITY_WE_Bari = null
	set gg_rct_CITY_WE_Palermo = null
	set gg_rct_CITY_WE_Syracuse = null
	set gg_rct_CITY_WE_Metz = null
	set gg_rct_CITY_BYZ_Ragusa = null
	set gg_rct_CITY_BYZ_Athens = null
	set gg_rct_CITY_BYZ_Rhodes = null
	set gg_rct_CITY_EE_Turku = null
	set gg_rct_CITY_BYZ_Nikomedaia = null
	set gg_rct_CITY_ME_Badajoz = null
	set gg_rct_CITY_WE_Oporto = null
	set gg_rct_CITY_WE_Stockholm = null
	set gg_rct_CITY_WE_Kalmar = null
	set gg_rct_CITY_BYZ_Corinth = null
	set gg_rct_CITY_BYZ_Arta = null
	set gg_rct_CITY_BYZ_Candia = null
	set gg_rct_CITY_ME_Kerak = null
	set gg_rct_CITY_ME_Baghdad = null
	set gg_rct_CITY_BYZ_Canakkale = null
	set gg_rct_CITY_EE_Syrt = null
	set gg_rct_CITY_WE_Buda = null
	set gg_rct_CITY_ME_Melilla = null
	set gg_rct_CITY_ME_Beleb_el_Anab = null
	set gg_rct_CITY_ME_Tabriz = null
	set gg_rct_CITY_ME_Alamut = null
	set gg_rct_CITY_ME_Baku = null
	set gg_rct_CITY_ME_Kermanshah = null
	set gg_snd_Warning = null
	set gg_trg_Settle = null
	set gg_trg_Melee_Initialization = null
	set gg_trg_F9 = null
	set gg_trg_Capturing_Ore_15g = null
	set gg_trg_Capturing_Ore_25g = null
	set gg_trg_Capturing_Ore_40g = null
	set gg_trg_Capturing_Ore_50g = null
	set gg_trg_Spy_Sabotage_on_buildings = null
	set gg_trg_Convert_V2 = null
	set gg_trg_Gate_Opening = null
	set gg_trg_Gate_Opening_ME = null
	set gg_trg_Gate_Closing_WoodGate_V = null
	set gg_trg_Gate_Closing_WoodGate_V_ME = null
	set gg_trg_Gate_Closing_WoodGate_H = null
	set gg_trg_Gate_Closing_WoodGate_H_ME = null
	set gg_trg_Gate_Closing_IronGate_V = null
	set gg_trg_Gate_Closing_IronGate_V_ME = null
	set gg_trg_Gate_Closing_IronGate_H = null
	set gg_trg_Gate_Closing_IronGate_H_ME = null
	set gg_trg_Supply_Horses = null
	set gg_trg_Supply_Horse_2 = null
	set gg_trg_Lumber_Horse_250 = null
	set gg_trg_Lumber_Horse_500 = null
	set gg_trg_Gold_Horse_250 = null
	set gg_trg_Gold_Horse_500 = null
	set gg_trg_Killing_trading_horse_l250 = null
	set gg_trg_Killing_trading_horse_l500 = null
	set gg_trg_Killing_trading_horse_g250 = null
	set gg_trg_Killing_trading_horse_g500 = null
	set gg_trg_Trading_Lumber_Ship = null
	set gg_trg_Trading_Gold_Ship = null
	set gg_trg_Trade = null
	set gg_trg_killing_Gold_Ship = null
	set gg_trg_killing_Lumber_Ship = null
	set gg_trg_FarmHouse = null
	set gg_trg_Thatched_Cottage_1 = null
	set gg_trg_Thatched_Cottage_2 = null
	set gg_trg_Thatched_Cottage_3 = null
	set gg_trg_Thatched_Cottage_4 = null
	set gg_trg_Spearmen_1 = null
	set gg_trg_Spearmen_2 = null
	set gg_trg_Heavy_Infantry_1 = null
	set gg_trg_Heavy_Infantry_2 = null
	set gg_trg_Archer_1 = null
	set gg_trg_Archer_2 = null
	set gg_trg_Light_Infantry_1 = null
	set gg_trg_Light_Infantry_2 = null
	set gg_trg_Pikemen_1 = null
	set gg_trg_Pikemen_2 = null
	set gg_trg_Light_Cavalry_1 = null
	set gg_trg_Light_Cavalry_2 = null
	set gg_trg_Heavy_Cavalry_1 = null
	set gg_trg_Heavy_Cavalry_2 = null
	set gg_trg_Skirmisher = null
	set gg_trg_Arquebusers = null
	set gg_trg_Supply_Horse = null
	set gg_trg_Disabled_units_at_beginning = null
	set gg_trg_FarmHouse_Byzantine = null
	set gg_trg_Thatched_Cottage_1_Byz = null
	set gg_trg_Thatched_Cottage_2_Byz = null
	set gg_trg_Thatched_Cottage_3_Byz = null
	set gg_trg_Spearmen_1_Byzantine = null
	set gg_trg_Spearmen_2_Byzantine = null
	set gg_trg_Heavy_Infantry_1_Byzantine = null
	set gg_trg_Heavy_Infantry_2_Byzantine = null
	set gg_trg_Archer_1_Byzantine = null
	set gg_trg_Archer_2_Byzantine = null
	set gg_trg_Light_Cavalry_1_Byzantine = null
	set gg_trg_Heavy_Cavalry_1_Byzantine = null
	set gg_trg_Heavy_Cavalry_2_Byzantine = null
	set gg_trg_Skirmisher_Byzantine = null
	set gg_trg_Missile_Cavalry_Byzantine = null
	set gg_trg_Disabled_units_Byzantine = null
	set gg_trg_ME_Spearmen_1 = null
	set gg_trg_ME_Spearmen_2 = null
	set gg_trg_ME_Archer_1 = null
	set gg_trg_ME_Archer_2 = null
	set gg_trg_ME_Light_Infantry_1 = null
	set gg_trg_ME_Light_Infantry_2 = null
	set gg_trg_ME_Pikeman = null
	set gg_trg_ME_Pikeman_2 = null
	set gg_trg_ME_Light_Cavalry_1 = null
	set gg_trg_ME_Light_Cavalry_2 = null
	set gg_trg_ME_Heavy_Cavalry_1 = null
	set gg_trg_ME_Heavy_Cavalry_2 = null
	set gg_trg_ME_Skirmisher = null
	set gg_trg_ME_Missile_Cavalry = null
	set gg_trg_Disabled_units_ME = null
	set gg_trg_FarmHouse_EE_Copy = null
	set gg_trg_Thatched_Cottage_1_EE_Copy = null
	set gg_trg_Thatched_Cottage_2_EE = null
	set gg_trg_Thatched_Cottage_3_EE = null
	set gg_trg_EE_Spearmen_1_Copy = null
	set gg_trg_EE_Spearmen_2_Copy = null
	set gg_trg_EE_Heavy_Infantry_1 = null
	set gg_trg_EE_Heavy_Infantry_2 = null
	set gg_trg_EE_Archer_1 = null
	set gg_trg_EE_Archer_2 = null
	set gg_trg_EE_Missile_Cavalry_1 = null
	set gg_trg_EE_Missile_Cavalry_2 = null
	set gg_trg_EE_Pikeman_1 = null
	set gg_trg_EE_Pikeman_2 = null
	set gg_trg_EE_Heavy_Cavalry_1 = null
	set gg_trg_EE_Heavy_Cavalry_2 = null
	set gg_trg_EE_Light_Cavalry_1 = null
	set gg_trg_EE_Skirmisher_1 = null
	set gg_trg_Disabled_units_EE = null
	set gg_trg_Urbanization = null
	set gg_trg_Structures_finishes = null
	set gg_trg_Marketplace = null
	set gg_trg_Barracks = null
	set gg_trg_Capitol_1_Dummies = null
	set gg_trg_Capitol_2_Dummies = null
	set gg_trg_Capitol_3_Dummies = null
	set gg_trg_CITY_HALL = null
	set gg_trg_Castle_BYZ_T1 = null
	set gg_trg_Castle_BYZ_T2 = null
	set gg_trg_Castle_BYZ_T3 = null
	set gg_trg_Castle_EE_T1 = null
	set gg_trg_Castle_EE_T2 = null
	set gg_trg_Castle_EE_T3 = null
	set gg_trg_Castle_ME__T1 = null
	set gg_trg_Castle_ME__T2 = null
	set gg_trg_Castle_ME_T3 = null
	set gg_trg_Castle_WE_T1 = null
	set gg_trg_Castle_WE_T2 = null
	set gg_trg_Castle_WE_T3 = null
	set gg_trg_Capitol_Keep_UPG_WE_T2 = null
	set gg_trg_Capitol_Keep_Upg_BYZ_T2 = null
	set gg_trg_Capitol_Keep_Upg_EE_T2 = null
	set gg_trg_Capitol_Keep_Upg_ME_T2 = null
	set gg_trg_Capitol_Castle_Up_BYZ_T3 = null
	set gg_trg_Capitol_Castle_Up_ME_T3 = null
	set gg_trg_Capitol_Castle_Up_EE_T3 = null
	set gg_trg_Capitol_Castle_UP_WE_T3 = null
	set EventListener_firstFree = 0
	set EventListener_maxIndex = 0
	set CityModifierClass_firstFree = 0
	set CityModifierClass_maxIndex = 0
	set City_firstFree = 0
	set City_maxIndex = 0
	set ForGroupCallback_firstFree = 0
	set ForGroupCallback_maxIndex = 0
	set CallbackSingle_firstFree = 0
	set CallbackSingle_maxIndex = 0
	set CallbackPeriodic_firstFree = 0
	set CallbackPeriodic_maxIndex = 0
	set OnCastListener_firstFree = 0
	set CallbackCounted_firstFree = 0
	set ArrayQueue_firstFree = 0
	set ArrayQueue_maxIndex = 0
	set DelayNode_firstFree = 0
	set HashList_firstFree = 0
	set HashList_maxIndex = 0
	set Table_firstFree = 0
	set Table_maxIndex = 0
	set Comparator_firstFree = 0
	set Comparator_maxIndex = 0
	set FoldClosure_firstFree = 0
	set FoldClosure_maxIndex = 0
	set LLEntry_firstFree = 0
	set LLEntry_maxIndex = 0
	set LLIterator_firstFree = 0
	set LLIterator_maxIndex = 0
	set LinkedList_firstFree = 0
	set LinkedList_maxIndex = 0
	set IdGenerator_firstFree = 0
	set IdGenerator_maxIndex = 0
	set PlayerStats_firstFree = 0
	set PlayerStats_maxIndex = 0
	set ReligionClass_firstFree = 0
	set ReligionClass_maxIndex = 0
	set UnitIndex_firstFree = 0
	set UnitIndex_maxIndex = 0
	set ref_function_Trig_Settle_Func001002 = function Trig_Settle_Func001002
	set ref_function_Trig_Settle_Actions = function Trig_Settle_Actions
	set ref_function_Trig_Melee_Initialization_Actions = function Trig_Melee_Initialization_Actions
	set ref_function_Trig_F9_Actions = function Trig_F9_Actions
	set ref_function_Trig_Capturing_Ore_15g_Conditions = function Trig_Capturing_Ore_15g_Conditions
	set ref_function_Trig_Capturing_Ore_15g_Actions = function Trig_Capturing_Ore_15g_Actions
	set ref_function_Trig_Capturing_Ore_25g_Conditions = function Trig_Capturing_Ore_25g_Conditions
	set ref_function_Trig_Capturing_Ore_25g_Actions = function Trig_Capturing_Ore_25g_Actions
	set ref_function_Trig_Capturing_Ore_40g_Conditions = function Trig_Capturing_Ore_40g_Conditions
	set ref_function_Trig_Capturing_Ore_40g_Actions = function Trig_Capturing_Ore_40g_Actions
	set ref_function_Trig_Capturing_Ore_50g_Conditions = function Trig_Capturing_Ore_50g_Conditions
	set ref_function_Trig_Capturing_Ore_50g_Actions = function Trig_Capturing_Ore_50g_Actions
	set ref_function_Trig_Spy_Sabotage_on_buildings_Conditions = function Trig_Spy_Sabotage_on_buildings_Conditions
	set ref_function_Trig_Spy_Sabotage_on_buildings_Actions = function Trig_Spy_Sabotage_on_buildings_Actions
	set ref_function_Trig_Convert_V2_Conditions = function Trig_Convert_V2_Conditions
	set ref_function_Trig_Convert_V2_Actions = function Trig_Convert_V2_Actions
	set ref_function_Trig_Gate_Opening_Actions = function Trig_Gate_Opening_Actions
	set ref_function_Trig_Gate_Opening_ME_Actions = function Trig_Gate_Opening_ME_Actions
	set ref_function_Trig_Gate_Closing_WoodGate_V_Func005A = function Trig_Gate_Closing_WoodGate_V_Func005A
	set ref_function_Trig_Gate_Closing_WoodGate_V_Conditions = function Trig_Gate_Closing_WoodGate_V_Conditions
	set ref_function_Trig_Gate_Closing_WoodGate_V_Actions = function Trig_Gate_Closing_WoodGate_V_Actions
	set ref_function_Trig_Gate_Closing_WoodGate_V_ME_Func005A = function Trig_Gate_Closing_WoodGate_V_ME_Func005A
	set ref_function_Trig_Gate_Closing_WoodGate_V_ME_Conditions = function Trig_Gate_Closing_WoodGate_V_ME_Conditions
	set ref_function_Trig_Gate_Closing_WoodGate_V_ME_Actions = function Trig_Gate_Closing_WoodGate_V_ME_Actions
	set ref_function_Trig_Gate_Closing_WoodGate_H_Func005A = function Trig_Gate_Closing_WoodGate_H_Func005A
	set ref_function_Trig_Gate_Closing_WoodGate_H_Conditions = function Trig_Gate_Closing_WoodGate_H_Conditions
	set ref_function_Trig_Gate_Closing_WoodGate_H_Actions = function Trig_Gate_Closing_WoodGate_H_Actions
	set ref_function_Trig_Gate_Closing_WoodGate_H_ME_Func005A = function Trig_Gate_Closing_WoodGate_H_ME_Func005A
	set ref_function_Trig_Gate_Closing_WoodGate_H_ME_Conditions = function Trig_Gate_Closing_WoodGate_H_ME_Conditions
	set ref_function_Trig_Gate_Closing_WoodGate_H_ME_Actions = function Trig_Gate_Closing_WoodGate_H_ME_Actions
	set ref_function_Trig_Gate_Closing_IronGate_V_Func005A = function Trig_Gate_Closing_IronGate_V_Func005A
	set ref_function_Trig_Gate_Closing_IronGate_V_Conditions = function Trig_Gate_Closing_IronGate_V_Conditions
	set ref_function_Trig_Gate_Closing_IronGate_V_Actions = function Trig_Gate_Closing_IronGate_V_Actions
	set ref_function_Trig_Gate_Closing_IronGate_V_ME_Func005A = function Trig_Gate_Closing_IronGate_V_ME_Func005A
	set ref_function_Trig_Gate_Closing_IronGate_V_ME_Conditions = function Trig_Gate_Closing_IronGate_V_ME_Conditions
	set ref_function_Trig_Gate_Closing_IronGate_V_ME_Actions = function Trig_Gate_Closing_IronGate_V_ME_Actions
	set ref_function_Trig_Gate_Closing_IronGate_H_Func005A = function Trig_Gate_Closing_IronGate_H_Func005A
	set ref_function_Trig_Gate_Closing_IronGate_H_Conditions = function Trig_Gate_Closing_IronGate_H_Conditions
	set ref_function_Trig_Gate_Closing_IronGate_H_Actions = function Trig_Gate_Closing_IronGate_H_Actions
	set ref_function_Trig_Gate_Closing_IronGate_H_ME_Func005A = function Trig_Gate_Closing_IronGate_H_ME_Func005A
	set ref_function_Trig_Gate_Closing_IronGate_H_ME_Conditions = function Trig_Gate_Closing_IronGate_H_ME_Conditions
	set ref_function_Trig_Gate_Closing_IronGate_H_ME_Actions = function Trig_Gate_Closing_IronGate_H_ME_Actions
	set ref_function_Trig_Supply_Horses_Func002A = function Trig_Supply_Horses_Func002A
	set ref_function_Trig_Supply_Horses_Actions = function Trig_Supply_Horses_Actions
	set ref_function_Trig_Supply_Horse_2_Func002A = function Trig_Supply_Horse_2_Func002A
	set ref_function_Trig_Supply_Horse_2_Actions = function Trig_Supply_Horse_2_Actions
	set ref_function_Trig_Lumber_Horse_250_Conditions = function Trig_Lumber_Horse_250_Conditions
	set ref_function_Trig_Lumber_Horse_250_Actions = function Trig_Lumber_Horse_250_Actions
	set ref_function_Trig_Lumber_Horse_500_Conditions = function Trig_Lumber_Horse_500_Conditions
	set ref_function_Trig_Lumber_Horse_500_Actions = function Trig_Lumber_Horse_500_Actions
	set ref_function_Trig_Gold_Horse_250_Conditions = function Trig_Gold_Horse_250_Conditions
	set ref_function_Trig_Gold_Horse_250_Actions = function Trig_Gold_Horse_250_Actions
	set ref_function_Trig_Gold_Horse_500_Conditions = function Trig_Gold_Horse_500_Conditions
	set ref_function_Trig_Gold_Horse_500_Actions = function Trig_Gold_Horse_500_Actions
	set ref_function_Trig_Killing_trading_horse_l250_Conditions = function Trig_Killing_trading_horse_l250_Conditions
	set ref_function_Trig_Killing_trading_horse_l250_Actions = function Trig_Killing_trading_horse_l250_Actions
	set ref_function_Trig_Killing_trading_horse_l500_Conditions = function Trig_Killing_trading_horse_l500_Conditions
	set ref_function_Trig_Killing_trading_horse_l500_Actions = function Trig_Killing_trading_horse_l500_Actions
	set ref_function_Trig_Killing_trading_horse_g250_Conditions = function Trig_Killing_trading_horse_g250_Conditions
	set ref_function_Trig_Killing_trading_horse_g250_Actions = function Trig_Killing_trading_horse_g250_Actions
	set ref_function_Trig_Killing_trading_horse_g500_Conditions = function Trig_Killing_trading_horse_g500_Conditions
	set ref_function_Trig_Killing_trading_horse_g500_Actions = function Trig_Killing_trading_horse_g500_Actions
	set ref_function_Trig_Trading_Lumber_Ship_Conditions = function Trig_Trading_Lumber_Ship_Conditions
	set ref_function_Trig_Trading_Lumber_Ship_Actions = function Trig_Trading_Lumber_Ship_Actions
	set ref_function_Trig_Trading_Gold_Ship_Conditions = function Trig_Trading_Gold_Ship_Conditions
	set ref_function_Trig_Trading_Gold_Ship_Actions = function Trig_Trading_Gold_Ship_Actions
	set ref_function_Trig_Trade_Actions = function Trig_Trade_Actions
	set ref_function_Trig_killing_Gold_Ship_Conditions = function Trig_killing_Gold_Ship_Conditions
	set ref_function_Trig_killing_Gold_Ship_Actions = function Trig_killing_Gold_Ship_Actions
	set ref_function_Trig_killing_Lumber_Ship_Conditions = function Trig_killing_Lumber_Ship_Conditions
	set ref_function_Trig_killing_Lumber_Ship_Actions = function Trig_killing_Lumber_Ship_Actions
	set ref_function_Trig_FarmHouse_Conditions = function Trig_FarmHouse_Conditions
	set ref_function_Trig_FarmHouse_Actions = function Trig_FarmHouse_Actions
	set ref_function_Trig_Thatched_Cottage_1_Conditions = function Trig_Thatched_Cottage_1_Conditions
	set ref_function_Trig_Thatched_Cottage_1_Actions = function Trig_Thatched_Cottage_1_Actions
	set ref_function_Trig_Thatched_Cottage_2_Conditions = function Trig_Thatched_Cottage_2_Conditions
	set ref_function_Trig_Thatched_Cottage_2_Actions = function Trig_Thatched_Cottage_2_Actions
	set ref_function_Trig_Thatched_Cottage_3_Conditions = function Trig_Thatched_Cottage_3_Conditions
	set ref_function_Trig_Thatched_Cottage_3_Actions = function Trig_Thatched_Cottage_3_Actions
	set ref_function_Trig_Thatched_Cottage_4_Conditions = function Trig_Thatched_Cottage_4_Conditions
	set ref_function_Trig_Thatched_Cottage_4_Actions = function Trig_Thatched_Cottage_4_Actions
	set ref_function_Trig_Spearmen_1_Conditions = function Trig_Spearmen_1_Conditions
	set ref_function_Trig_Spearmen_1_Actions = function Trig_Spearmen_1_Actions
	set ref_function_Trig_Spearmen_2_Conditions = function Trig_Spearmen_2_Conditions
	set ref_function_Trig_Spearmen_2_Actions = function Trig_Spearmen_2_Actions
	set ref_function_Trig_Heavy_Infantry_1_Conditions = function Trig_Heavy_Infantry_1_Conditions
	set ref_function_Trig_Heavy_Infantry_1_Actions = function Trig_Heavy_Infantry_1_Actions
	set ref_function_Trig_Heavy_Infantry_2_Conditions = function Trig_Heavy_Infantry_2_Conditions
	set ref_function_Trig_Heavy_Infantry_2_Actions = function Trig_Heavy_Infantry_2_Actions
	set ref_function_Trig_Archer_1_Conditions = function Trig_Archer_1_Conditions
	set ref_function_Trig_Archer_1_Actions = function Trig_Archer_1_Actions
	set ref_function_Trig_Archer_2_Conditions = function Trig_Archer_2_Conditions
	set ref_function_Trig_Archer_2_Actions = function Trig_Archer_2_Actions
	set ref_function_Trig_Light_Infantry_1_Conditions = function Trig_Light_Infantry_1_Conditions
	set ref_function_Trig_Light_Infantry_1_Actions = function Trig_Light_Infantry_1_Actions
	set ref_function_Trig_Light_Infantry_2_Conditions = function Trig_Light_Infantry_2_Conditions
	set ref_function_Trig_Light_Infantry_2_Actions = function Trig_Light_Infantry_2_Actions
	set ref_function_Trig_Pikemen_1_Conditions = function Trig_Pikemen_1_Conditions
	set ref_function_Trig_Pikemen_1_Actions = function Trig_Pikemen_1_Actions
	set ref_function_Trig_Pikemen_2_Conditions = function Trig_Pikemen_2_Conditions
	set ref_function_Trig_Pikemen_2_Actions = function Trig_Pikemen_2_Actions
	set ref_function_Trig_Light_Cavalry_1_Conditions = function Trig_Light_Cavalry_1_Conditions
	set ref_function_Trig_Light_Cavalry_1_Actions = function Trig_Light_Cavalry_1_Actions
	set ref_function_Trig_Light_Cavalry_2_Conditions = function Trig_Light_Cavalry_2_Conditions
	set ref_function_Trig_Light_Cavalry_2_Actions = function Trig_Light_Cavalry_2_Actions
	set ref_function_Trig_Heavy_Cavalry_1_Conditions = function Trig_Heavy_Cavalry_1_Conditions
	set ref_function_Trig_Heavy_Cavalry_1_Actions = function Trig_Heavy_Cavalry_1_Actions
	set ref_function_Trig_Heavy_Cavalry_2_Conditions = function Trig_Heavy_Cavalry_2_Conditions
	set ref_function_Trig_Heavy_Cavalry_2_Actions = function Trig_Heavy_Cavalry_2_Actions
	set ref_function_Trig_Skirmisher_Conditions = function Trig_Skirmisher_Conditions
	set ref_function_Trig_Skirmisher_Actions = function Trig_Skirmisher_Actions
	set ref_function_Trig_Arquebusers_Conditions = function Trig_Arquebusers_Conditions
	set ref_function_Trig_Arquebusers_Actions = function Trig_Arquebusers_Actions
	set ref_function_Trig_Supply_Horse_Conditions = function Trig_Supply_Horse_Conditions
	set ref_function_Trig_Supply_Horse_Actions = function Trig_Supply_Horse_Actions
	set ref_function_Trig_Disabled_units_at_beginning_Func002A = function Trig_Disabled_units_at_beginning_Func002A
	set ref_function_Trig_Disabled_units_at_beginning_Actions = function Trig_Disabled_units_at_beginning_Actions
	set ref_function_Trig_FarmHouse_Byzantine_Conditions = function Trig_FarmHouse_Byzantine_Conditions
	set ref_function_Trig_FarmHouse_Byzantine_Actions = function Trig_FarmHouse_Byzantine_Actions
	set ref_function_Trig_Thatched_Cottage_1_Byz_Conditions = function Trig_Thatched_Cottage_1_Byz_Conditions
	set ref_function_Trig_Thatched_Cottage_1_Byz_Actions = function Trig_Thatched_Cottage_1_Byz_Actions
	set ref_function_Trig_Thatched_Cottage_2_Byz_Conditions = function Trig_Thatched_Cottage_2_Byz_Conditions
	set ref_function_Trig_Thatched_Cottage_2_Byz_Actions = function Trig_Thatched_Cottage_2_Byz_Actions
	set ref_function_Trig_Thatched_Cottage_3_Byz_Conditions = function Trig_Thatched_Cottage_3_Byz_Conditions
	set ref_function_Trig_Thatched_Cottage_3_Byz_Actions = function Trig_Thatched_Cottage_3_Byz_Actions
	set ref_function_Trig_Spearmen_1_Byzantine_Conditions = function Trig_Spearmen_1_Byzantine_Conditions
	set ref_function_Trig_Spearmen_1_Byzantine_Actions = function Trig_Spearmen_1_Byzantine_Actions
	set ref_function_Trig_Spearmen_2_Byzantine_Conditions = function Trig_Spearmen_2_Byzantine_Conditions
	set ref_function_Trig_Spearmen_2_Byzantine_Actions = function Trig_Spearmen_2_Byzantine_Actions
	set ref_function_Trig_Heavy_Infantry_1_Byzantine_Conditions = function Trig_Heavy_Infantry_1_Byzantine_Conditions
	set ref_function_Trig_Heavy_Infantry_1_Byzantine_Actions = function Trig_Heavy_Infantry_1_Byzantine_Actions
	set ref_function_Trig_Heavy_Infantry_2_Byzantine_Conditions = function Trig_Heavy_Infantry_2_Byzantine_Conditions
	set ref_function_Trig_Heavy_Infantry_2_Byzantine_Actions = function Trig_Heavy_Infantry_2_Byzantine_Actions
	set ref_function_Trig_Archer_1_Byzantine_Conditions = function Trig_Archer_1_Byzantine_Conditions
	set ref_function_Trig_Archer_1_Byzantine_Actions = function Trig_Archer_1_Byzantine_Actions
	set ref_function_Trig_Archer_2_Byzantine_Conditions = function Trig_Archer_2_Byzantine_Conditions
	set ref_function_Trig_Archer_2_Byzantine_Actions = function Trig_Archer_2_Byzantine_Actions
	set ref_function_Trig_Light_Cavalry_1_Byzantine_Conditions = function Trig_Light_Cavalry_1_Byzantine_Conditions
	set ref_function_Trig_Light_Cavalry_1_Byzantine_Actions = function Trig_Light_Cavalry_1_Byzantine_Actions
	set ref_function_Trig_Heavy_Cavalry_1_Byzantine_Conditions = function Trig_Heavy_Cavalry_1_Byzantine_Conditions
	set ref_function_Trig_Heavy_Cavalry_1_Byzantine_Actions = function Trig_Heavy_Cavalry_1_Byzantine_Actions
	set ref_function_Trig_Heavy_Cavalry_2_Byzantine_Conditions = function Trig_Heavy_Cavalry_2_Byzantine_Conditions
	set ref_function_Trig_Heavy_Cavalry_2_Byzantine_Actions = function Trig_Heavy_Cavalry_2_Byzantine_Actions
	set ref_function_Trig_Skirmisher_Byzantine_Conditions = function Trig_Skirmisher_Byzantine_Conditions
	set ref_function_Trig_Skirmisher_Byzantine_Actions = function Trig_Skirmisher_Byzantine_Actions
	set ref_function_Trig_Missile_Cavalry_Byzantine_Conditions = function Trig_Missile_Cavalry_Byzantine_Conditions
	set ref_function_Trig_Missile_Cavalry_Byzantine_Actions = function Trig_Missile_Cavalry_Byzantine_Actions
	set ref_function_Trig_Disabled_units_Byzantine_Func002A = function Trig_Disabled_units_Byzantine_Func002A
	set ref_function_Trig_Disabled_units_Byzantine_Actions = function Trig_Disabled_units_Byzantine_Actions
	set ref_function_Trig_ME_Spearmen_1_Conditions = function Trig_ME_Spearmen_1_Conditions
	set ref_function_Trig_ME_Spearmen_1_Actions = function Trig_ME_Spearmen_1_Actions
	set ref_function_Trig_ME_Spearmen_2_Conditions = function Trig_ME_Spearmen_2_Conditions
	set ref_function_Trig_ME_Spearmen_2_Actions = function Trig_ME_Spearmen_2_Actions
	set ref_function_Trig_ME_Archer_1_Conditions = function Trig_ME_Archer_1_Conditions
	set ref_function_Trig_ME_Archer_1_Actions = function Trig_ME_Archer_1_Actions
	set ref_function_Trig_ME_Archer_2_Conditions = function Trig_ME_Archer_2_Conditions
	set ref_function_Trig_ME_Archer_2_Actions = function Trig_ME_Archer_2_Actions
	set ref_function_Trig_ME_Light_Infantry_1_Conditions = function Trig_ME_Light_Infantry_1_Conditions
	set ref_function_Trig_ME_Light_Infantry_1_Actions = function Trig_ME_Light_Infantry_1_Actions
	set ref_function_Trig_ME_Light_Infantry_2_Conditions = function Trig_ME_Light_Infantry_2_Conditions
	set ref_function_Trig_ME_Light_Infantry_2_Actions = function Trig_ME_Light_Infantry_2_Actions
	set ref_function_Trig_ME_Pikeman_Conditions = function Trig_ME_Pikeman_Conditions
	set ref_function_Trig_ME_Pikeman_Actions = function Trig_ME_Pikeman_Actions
	set ref_function_Trig_ME_Pikeman_2_Conditions = function Trig_ME_Pikeman_2_Conditions
	set ref_function_Trig_ME_Pikeman_2_Actions = function Trig_ME_Pikeman_2_Actions
	set ref_function_Trig_ME_Light_Cavalry_1_Conditions = function Trig_ME_Light_Cavalry_1_Conditions
	set ref_function_Trig_ME_Light_Cavalry_1_Actions = function Trig_ME_Light_Cavalry_1_Actions
	set ref_function_Trig_ME_Light_Cavalry_2_Conditions = function Trig_ME_Light_Cavalry_2_Conditions
	set ref_function_Trig_ME_Light_Cavalry_2_Actions = function Trig_ME_Light_Cavalry_2_Actions
	set ref_function_Trig_ME_Heavy_Cavalry_1_Conditions = function Trig_ME_Heavy_Cavalry_1_Conditions
	set ref_function_Trig_ME_Heavy_Cavalry_1_Actions = function Trig_ME_Heavy_Cavalry_1_Actions
	set ref_function_Trig_ME_Heavy_Cavalry_2_Conditions = function Trig_ME_Heavy_Cavalry_2_Conditions
	set ref_function_Trig_ME_Heavy_Cavalry_2_Actions = function Trig_ME_Heavy_Cavalry_2_Actions
	set ref_function_Trig_ME_Skirmisher_Conditions = function Trig_ME_Skirmisher_Conditions
	set ref_function_Trig_ME_Skirmisher_Actions = function Trig_ME_Skirmisher_Actions
	set ref_function_Trig_ME_Missile_Cavalry_Conditions = function Trig_ME_Missile_Cavalry_Conditions
	set ref_function_Trig_ME_Missile_Cavalry_Actions = function Trig_ME_Missile_Cavalry_Actions
	set ref_function_Trig_Disabled_units_ME_Func002A = function Trig_Disabled_units_ME_Func002A
	set ref_function_Trig_Disabled_units_ME_Actions = function Trig_Disabled_units_ME_Actions
	set ref_function_Trig_FarmHouse_EE_Copy_Conditions = function Trig_FarmHouse_EE_Copy_Conditions
	set ref_function_Trig_FarmHouse_EE_Copy_Actions = function Trig_FarmHouse_EE_Copy_Actions
	set ref_function_Trig_Thatched_Cottage_1_EE_Copy_Conditions = function Trig_Thatched_Cottage_1_EE_Copy_Conditions
	set ref_function_Trig_Thatched_Cottage_1_EE_Copy_Actions = function Trig_Thatched_Cottage_1_EE_Copy_Actions
	set ref_function_Trig_Thatched_Cottage_2_EE_Conditions = function Trig_Thatched_Cottage_2_EE_Conditions
	set ref_function_Trig_Thatched_Cottage_2_EE_Actions = function Trig_Thatched_Cottage_2_EE_Actions
	set ref_function_Trig_Thatched_Cottage_3_EE_Conditions = function Trig_Thatched_Cottage_3_EE_Conditions
	set ref_function_Trig_Thatched_Cottage_3_EE_Actions = function Trig_Thatched_Cottage_3_EE_Actions
	set ref_function_Trig_EE_Spearmen_1_Copy_Conditions = function Trig_EE_Spearmen_1_Copy_Conditions
	set ref_function_Trig_EE_Spearmen_1_Copy_Actions = function Trig_EE_Spearmen_1_Copy_Actions
	set ref_function_Trig_EE_Spearmen_2_Copy_Conditions = function Trig_EE_Spearmen_2_Copy_Conditions
	set ref_function_Trig_EE_Spearmen_2_Copy_Actions = function Trig_EE_Spearmen_2_Copy_Actions
	set ref_function_Trig_EE_Heavy_Infantry_1_Conditions = function Trig_EE_Heavy_Infantry_1_Conditions
	set ref_function_Trig_EE_Heavy_Infantry_1_Actions = function Trig_EE_Heavy_Infantry_1_Actions
	set ref_function_Trig_EE_Heavy_Infantry_2_Conditions = function Trig_EE_Heavy_Infantry_2_Conditions
	set ref_function_Trig_EE_Heavy_Infantry_2_Actions = function Trig_EE_Heavy_Infantry_2_Actions
	set ref_function_Trig_EE_Archer_1_Conditions = function Trig_EE_Archer_1_Conditions
	set ref_function_Trig_EE_Archer_1_Actions = function Trig_EE_Archer_1_Actions
	set ref_function_Trig_EE_Archer_2_Conditions = function Trig_EE_Archer_2_Conditions
	set ref_function_Trig_EE_Archer_2_Actions = function Trig_EE_Archer_2_Actions
	set ref_function_Trig_EE_Missile_Cavalry_1_Conditions = function Trig_EE_Missile_Cavalry_1_Conditions
	set ref_function_Trig_EE_Missile_Cavalry_1_Actions = function Trig_EE_Missile_Cavalry_1_Actions
	set ref_function_Trig_EE_Missile_Cavalry_2_Conditions = function Trig_EE_Missile_Cavalry_2_Conditions
	set ref_function_Trig_EE_Missile_Cavalry_2_Actions = function Trig_EE_Missile_Cavalry_2_Actions
	set ref_function_Trig_EE_Pikeman_1_Conditions = function Trig_EE_Pikeman_1_Conditions
	set ref_function_Trig_EE_Pikeman_1_Actions = function Trig_EE_Pikeman_1_Actions
	set ref_function_Trig_EE_Pikeman_2_Conditions = function Trig_EE_Pikeman_2_Conditions
	set ref_function_Trig_EE_Pikeman_2_Actions = function Trig_EE_Pikeman_2_Actions
	set ref_function_Trig_EE_Heavy_Cavalry_1_Conditions = function Trig_EE_Heavy_Cavalry_1_Conditions
	set ref_function_Trig_EE_Heavy_Cavalry_1_Actions = function Trig_EE_Heavy_Cavalry_1_Actions
	set ref_function_Trig_EE_Heavy_Cavalry_2_Conditions = function Trig_EE_Heavy_Cavalry_2_Conditions
	set ref_function_Trig_EE_Heavy_Cavalry_2_Actions = function Trig_EE_Heavy_Cavalry_2_Actions
	set ref_function_Trig_EE_Light_Cavalry_1_Conditions = function Trig_EE_Light_Cavalry_1_Conditions
	set ref_function_Trig_EE_Light_Cavalry_1_Actions = function Trig_EE_Light_Cavalry_1_Actions
	set ref_function_Trig_EE_Skirmisher_1_Conditions = function Trig_EE_Skirmisher_1_Conditions
	set ref_function_Trig_EE_Skirmisher_1_Actions = function Trig_EE_Skirmisher_1_Actions
	set ref_function_Trig_Disabled_units_EE_Func002A = function Trig_Disabled_units_EE_Func002A
	set ref_function_Trig_Disabled_units_EE_Actions = function Trig_Disabled_units_EE_Actions
	set ref_function_Trig_Urbanization_Func001001002 = function Trig_Urbanization_Func001001002
	set ref_function_Trig_Urbanization_Func001A = function Trig_Urbanization_Func001A
	set ref_function_Trig_Urbanization_Conditions = function Trig_Urbanization_Conditions
	set ref_function_Trig_Urbanization_Actions = function Trig_Urbanization_Actions
	set ref_function_Trig_Structures_finishes_Actions = function Trig_Structures_finishes_Actions
	set ref_function_Trig_Marketplace_Conditions = function Trig_Marketplace_Conditions
	set ref_function_Trig_Marketplace_Actions = function Trig_Marketplace_Actions
	set ref_function_Trig_Barracks_Conditions = function Trig_Barracks_Conditions
	set ref_function_Trig_Barracks_Actions = function Trig_Barracks_Actions
	set ref_function_Trig_Capitol_1_Dummies_Conditions = function Trig_Capitol_1_Dummies_Conditions
	set ref_function_Trig_Capitol_1_Dummies_Actions = function Trig_Capitol_1_Dummies_Actions
	set ref_function_Trig_Capitol_2_Dummies_Conditions = function Trig_Capitol_2_Dummies_Conditions
	set ref_function_Trig_Capitol_2_Dummies_Actions = function Trig_Capitol_2_Dummies_Actions
	set ref_function_Trig_Capitol_3_Dummies_Conditions = function Trig_Capitol_3_Dummies_Conditions
	set ref_function_Trig_Capitol_3_Dummies_Actions = function Trig_Capitol_3_Dummies_Actions
	set ref_function_Trig_CITY_HALL_Conditions = function Trig_CITY_HALL_Conditions
	set ref_function_Trig_CITY_HALL_Actions = function Trig_CITY_HALL_Actions
	set ref_function_Trig_Castle_BYZ_T1_Conditions = function Trig_Castle_BYZ_T1_Conditions
	set ref_function_Trig_Castle_BYZ_T1_Actions = function Trig_Castle_BYZ_T1_Actions
	set ref_function_Trig_Castle_BYZ_T2_Conditions = function Trig_Castle_BYZ_T2_Conditions
	set ref_function_Trig_Castle_BYZ_T2_Actions = function Trig_Castle_BYZ_T2_Actions
	set ref_function_Trig_Castle_BYZ_T3_Conditions = function Trig_Castle_BYZ_T3_Conditions
	set ref_function_Trig_Castle_BYZ_T3_Actions = function Trig_Castle_BYZ_T3_Actions
	set ref_function_Trig_Castle_EE_T1_Conditions = function Trig_Castle_EE_T1_Conditions
	set ref_function_Trig_Castle_EE_T1_Actions = function Trig_Castle_EE_T1_Actions
	set ref_function_Trig_Castle_EE_T2_Conditions = function Trig_Castle_EE_T2_Conditions
	set ref_function_Trig_Castle_EE_T2_Actions = function Trig_Castle_EE_T2_Actions
	set ref_function_Trig_Castle_EE_T3_Conditions = function Trig_Castle_EE_T3_Conditions
	set ref_function_Trig_Castle_EE_T3_Actions = function Trig_Castle_EE_T3_Actions
	set ref_function_Trig_Castle_ME__T1_Conditions = function Trig_Castle_ME__T1_Conditions
	set ref_function_Trig_Castle_ME__T1_Actions = function Trig_Castle_ME__T1_Actions
	set ref_function_Trig_Castle_ME__T2_Conditions = function Trig_Castle_ME__T2_Conditions
	set ref_function_Trig_Castle_ME__T2_Actions = function Trig_Castle_ME__T2_Actions
	set ref_function_Trig_Castle_ME_T3_Conditions = function Trig_Castle_ME_T3_Conditions
	set ref_function_Trig_Castle_ME_T3_Actions = function Trig_Castle_ME_T3_Actions
	set ref_function_Trig_Castle_WE_T1_Conditions = function Trig_Castle_WE_T1_Conditions
	set ref_function_Trig_Castle_WE_T1_Actions = function Trig_Castle_WE_T1_Actions
	set ref_function_Trig_Castle_WE_T2_Conditions = function Trig_Castle_WE_T2_Conditions
	set ref_function_Trig_Castle_WE_T2_Actions = function Trig_Castle_WE_T2_Actions
	set ref_function_Trig_Castle_WE_T3_Conditions = function Trig_Castle_WE_T3_Conditions
	set ref_function_Trig_Castle_WE_T3_Actions = function Trig_Castle_WE_T3_Actions
	set ref_function_Trig_Capitol_Keep_UPG_WE_T2_Conditions = function Trig_Capitol_Keep_UPG_WE_T2_Conditions
	set ref_function_Trig_Capitol_Keep_UPG_WE_T2_Actions = function Trig_Capitol_Keep_UPG_WE_T2_Actions
	set ref_function_Trig_Capitol_Keep_Upg_BYZ_T2_Conditions = function Trig_Capitol_Keep_Upg_BYZ_T2_Conditions
	set ref_function_Trig_Capitol_Keep_Upg_BYZ_T2_Actions = function Trig_Capitol_Keep_Upg_BYZ_T2_Actions
	set ref_function_Trig_Capitol_Keep_Upg_EE_T2_Conditions = function Trig_Capitol_Keep_Upg_EE_T2_Conditions
	set ref_function_Trig_Capitol_Keep_Upg_EE_T2_Actions = function Trig_Capitol_Keep_Upg_EE_T2_Actions
	set ref_function_Trig_Capitol_Keep_Upg_ME_T2_Conditions = function Trig_Capitol_Keep_Upg_ME_T2_Conditions
	set ref_function_Trig_Capitol_Keep_Upg_ME_T2_Actions = function Trig_Capitol_Keep_Upg_ME_T2_Actions
	set ref_function_Trig_Capitol_Castle_Up_BYZ_T3_Conditions = function Trig_Capitol_Castle_Up_BYZ_T3_Conditions
	set ref_function_Trig_Capitol_Castle_Up_BYZ_T3_Actions = function Trig_Capitol_Castle_Up_BYZ_T3_Actions
	set ref_function_Trig_Capitol_Castle_Up_ME_T3_Conditions = function Trig_Capitol_Castle_Up_ME_T3_Conditions
	set ref_function_Trig_Capitol_Castle_Up_ME_T3_Actions = function Trig_Capitol_Castle_Up_ME_T3_Actions
	set ref_function_Trig_Capitol_Castle_Up_EE_T3_Conditions = function Trig_Capitol_Castle_Up_EE_T3_Conditions
	set ref_function_Trig_Capitol_Castle_Up_EE_T3_Actions = function Trig_Capitol_Castle_Up_EE_T3_Actions
	set ref_function_Trig_Capitol_Castle_UP_WE_T3_Conditions = function Trig_Capitol_Castle_UP_WE_T3_Conditions
	set ref_function_Trig_Capitol_Castle_UP_WE_T3_Actions = function Trig_Capitol_Castle_UP_WE_T3_Actions
	set ref_function_init_Real = function init_Real
	set ref_function_init_Integer = function init_Integer
	set ref_function_init_String = function init_String
	set ref_function_init_Angle = function init_Angle
	set ref_function_init_Vectors = function init_Vectors
	set ref_function_init_Maths = function init_Maths
	set ref_function_init_Player = function init_Player
	set ref_function_init_Printing = function init_Printing
	set ref_function_init_Basics = function init_Basics
	set ref_function_init_GameTimer = function init_GameTimer
	set ref_function_init_MagicFunctions = function init_MagicFunctions
	set ref_function_init_ErrorHandling = function init_ErrorHandling
	set ref_function_init_Matrices = function init_Matrices
	set ref_function_init_Quaternion = function init_Quaternion
	set ref_function_init_Table = function init_Table
	set ref_function_init_Playercolor = function init_Playercolor
	set ref_function_bridge_init_Colors = function bridge_init_Colors
	set ref_function_init_Group = function init_Group
	set ref_function_init_Lightning = function init_Lightning
	set ref_function_init_WeatherEffects = function init_WeatherEffects
	set ref_function_bridge_init_TypeCasting = function bridge_init_TypeCasting
	set ref_function_init_ClosureForGroups = function init_ClosureForGroups
	set ref_function_bridge_init_LinkedList = function bridge_init_LinkedList
	set ref_function_bridge_init_Abilities = function bridge_init_Abilities
	set ref_function_init_AbilityIds = function init_AbilityIds
	set ref_function_init_Bootleg = function init_Bootleg
	set ref_function_init_Buildings = function init_Buildings
	set ref_function_init_MutliboardTools = function init_MutliboardTools
	set ref_function_init_HashList = function init_HashList
	set ref_function_bridge_init_EventHelper = function bridge_init_EventHelper
	set ref_function_bridge_init_RegisterEvents = function bridge_init_RegisterEvents
	set ref_function_bridge_init_TimerUtils = function bridge_init_TimerUtils
	set ref_function_init_ClosureTimers = function init_ClosureTimers
	set ref_function_init_TargetsAllowed = function init_TargetsAllowed
	set ref_function_init_Doodads = function init_Doodads
	set ref_function_init_Icons = function init_Icons
	set ref_function_init_Objects = function init_Objects
	set ref_function_init_Sounds = function init_Sounds
	set ref_function_init_Soundsets = function init_Soundsets
	set ref_function_init_Textures = function init_Textures
	set ref_function_init_UI = function init_UI
	set ref_function_bridge_init_Units = function bridge_init_Units
	set ref_function_init_UnitIds = function init_UnitIds
	set ref_function_init_MapBounds = function init_MapBounds
	set ref_function_bridge_init_DummyRecycler = function bridge_init_DummyRecycler
	set ref_function_bridge_init_StringUtils = function bridge_init_StringUtils
	set ref_function_init_ObjectIds = function init_ObjectIds
	set ref_function_bridge_init_Preloader = function bridge_init_Preloader
	set ref_function_bridge_init_ObjectIdGenerator = function bridge_init_ObjectIdGenerator
	set ref_function_bridge_init_OnUnitEnterLeave = function bridge_init_OnUnitEnterLeave
	set ref_function_init_UnitIndexer = function init_UnitIndexer
	set ref_function_bridge_init_ClosureEvents = function bridge_init_ClosureEvents
	set ref_function_init_MathTools = function init_MathTools
	set ref_function_init_Forces = function init_Forces
	set ref_function_init_Strings = function init_Strings
	set ref_function_bridge_init_CityBaseTaxes = function bridge_init_CityBaseTaxes
	set ref_function_init_Revolts = function init_Revolts
	set ref_function_bridge_init_City = function bridge_init_City
	set ref_function_bridge_init_Multiboards = function bridge_init_Multiboards
	set ref_function_init_PlayerStats = function init_PlayerStats
	set ref_function_init_Main = function init_Main
	set ref_function_bridge_init_CastleCapture = function bridge_init_CastleCapture
	set ref_function_bridge_init_CityBuilded = function bridge_init_CityBuilded
	set ref_function_bridge_init_CityManage = function bridge_init_CityManage
	set ref_function_bridge_init_CityModifiers = function bridge_init_CityModifiers
	set ref_function_bridge_init_Clerics = function bridge_init_Clerics
	set ref_function_init_HashSet = function init_HashSet
	set ref_function_bridge_init_VoteKick = function bridge_init_VoteKick
	set ref_function_init_Commands = function init_Commands
	set ref_function_bridge_init_Credits = function bridge_init_Credits
	set ref_function_bridge_init_Economy = function bridge_init_Economy
	set ref_function_bridge_init_DateTime = function bridge_init_DateTime
	set ref_function_init_Diplomacy = function init_Diplomacy
	set ref_function_bridge_init_Garissons = function bridge_init_Garissons
	set ref_function_bridge_init_LimitEncampments = function bridge_init_LimitEncampments
	set ref_function_bridge_init_LimitMercenaryCamps = function bridge_init_LimitMercenaryCamps
	set ref_function_init_Logarithm = function init_Logarithm
	set ref_function_bridge_init_MainInit = function bridge_init_MainInit
	set ref_function_bridge_init_MassControl = function bridge_init_MassControl
	set ref_function_bridge_init_MultiboardCityUpdate = function bridge_init_MultiboardCityUpdate
	set ref_function_bridge_init_NoShipsNearRivers = function bridge_init_NoShipsNearRivers
	set ref_function_bridge_init_NoStarvationOnBoat = function bridge_init_NoStarvationOnBoat
	set ref_function_bridge_init_OnPlayerLeave = function bridge_init_OnPlayerLeave
	set ref_function_bridge_init_OreCapture = function bridge_init_OreCapture
	set ref_function_bridge_init_RangeChecks = function bridge_init_RangeChecks
	set ref_function_bridge_init_Religion = function bridge_init_Religion
	set ref_function_bridge_init_Taxation = function bridge_init_Taxation
	set ref_function_bridge_init_Upkeep = function bridge_init_Upkeep
	set ref_function_CityManage_closure_impl = function CityManage_closure_impl
	set ref_function_bridge_CityManage_closure_impl = function bridge_CityManage_closure_impl
	set ref_function_ClosureEvents_closure_impl = function ClosureEvents_closure_impl
	set ref_function_bridge_ClosureEvents_closure_impl = function bridge_ClosureEvents_closure_impl_4
	set ref_function_bridge_EventListener_generalEventCallback = function bridge_EventListener_generalEventCallback
	set ref_function_bridge_ClosureForGroups_closure_impl = function bridge_ClosureForGroups_closure_impl
	set ref_function_cond = function cond_2
	set ref_function_bridge_action = function bridge_action
	set ref_function_bridge_cond = function bridge_cond
	set ref_function_bridge_action_2 = function bridge_action_2
	set ref_function_bridge_DelayNode_recycle = function bridge_DelayNode_recycle
	set ref_function_GameTimer_closure_impl = function GameTimer_closure_impl
	set ref_function_Group_closure_impl = function Group_closure_impl
	set ref_function_Main_closure_impl = function Main_closure_impl
	set ref_function_bridge_cinematicTutorial = function bridge_cinematicTutorial
	set ref_function_bridge_RegisterEvents_closure_impl = function bridge_RegisterEvents_closure_impl
	set ref_function_bridge_UnitIndexer_closure_impl = function bridge_UnitIndexer_closure_impl
	set ref_function_bridge_UnitIndexer_closure_impl_2 = function bridge_UnitIndexer_closure_impl_2
	set ref_function_bridge_Upkeep_closure_impl = function bridge_Upkeep_closure_impl
	set ref_function_bridge_ClosureEvents_closure_impl_2 = function bridge_ClosureEvents_closure_impl_2
	set ref_function_bridge_ClosureEvents_closure_impl_3 = function bridge_ClosureEvents_closure_impl_5
	set ref_function_bridge_ClosureEvents_closure_impl_4 = function bridge_ClosureEvents_closure_impl_3
	set ref_function_bridge_ClosureEvents_closure_impl_5 = function bridge_ClosureEvents_closure_impl
	set ref_function_bridge_CallbackPeriodic_staticCallback = function bridge_CallbackPeriodic_staticCallback
	set ref_function_bridge_CallbackSingle_closure_impl = function bridge_CallbackSingle_closure_impl
	set ref_function_OnUnitEnterLeave_closure_impl = function OnUnitEnterLeave_closure_impl_3
	set ref_function_OnUnitEnterLeave_closure_impl_2 = function OnUnitEnterLeave_closure_impl
	set ref_function_OnUnitEnterLeave_closure_impl_3 = function OnUnitEnterLeave_closure_impl_2
endfunction

function main takes nothing returns nothing
	local trigger initTrig
	call initGlobals()
	call SetCameraBounds(( - 30720.0) + GetCameraMargin(CAMERA_MARGIN_LEFT), ( - 30720.0) + GetCameraMargin(CAMERA_MARGIN_BOTTOM), 30720.0 - GetCameraMargin(CAMERA_MARGIN_RIGHT), 30720.0 - GetCameraMargin(CAMERA_MARGIN_TOP), ( - 30720.0) + GetCameraMargin(CAMERA_MARGIN_LEFT), 30720.0 - GetCameraMargin(CAMERA_MARGIN_TOP), 30720.0 - GetCameraMargin(CAMERA_MARGIN_RIGHT), ( - 30720.0) + GetCameraMargin(CAMERA_MARGIN_BOTTOM))
	call SetDayNightModels("Environment\\DNC\\DNCLordaeron\\DNCLordaeronTerrain\\DNCLordaeronTerrain.mdl", "Environment\\DNC\\DNCLordaeron\\DNCLordaeronUnit\\DNCLordaeronUnit.mdl")
	call NewSoundEnvironment("Default")
	call SetAmbientDaySound("LordaeronSummerDay")
	call SetAmbientNightSound("LordaeronSummerNight")
	call SetMapMusic("Music", true, 0)
	call InitSounds()
	call CreateRegions()
	call CreateAllUnits()
	call InitBlizzard()
	call InitGlobals()
	call InitCustomTriggers()
	call RunInitializationTriggers()
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Real))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Real.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Integer))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Integer.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_String))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package String.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Angle))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Angle.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Vectors))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Vectors.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Maths))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Maths.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Player))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Player.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Printing))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Printing.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Basics))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Basics.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_GameTimer))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package GameTimer.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_MagicFunctions))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package MagicFunctions.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_ErrorHandling))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package ErrorHandling.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Matrices))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Matrices.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Quaternion))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Quaternion.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Table))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Table.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Playercolor))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Playercolor.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_Colors))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Colors.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Group))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Group.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Lightning))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Lightning.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_WeatherEffects))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package WeatherEffects.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_TypeCasting))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package TypeCasting.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_ClosureForGroups))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package ClosureForGroups.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_LinkedList))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package LinkedList.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_Abilities))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Abilities.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_AbilityIds))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package AbilityIds.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Bootleg))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Bootleg.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Buildings))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Buildings.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_MutliboardTools))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package MutliboardTools.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_HashList))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package HashList.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_EventHelper))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package EventHelper.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_RegisterEvents))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package RegisterEvents.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_TimerUtils))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package TimerUtils.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_ClosureTimers))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package ClosureTimers.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_TargetsAllowed))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package TargetsAllowed.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Doodads))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Doodads.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Icons))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Icons.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Objects))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Objects.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Sounds))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Sounds.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Soundsets))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Soundsets.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Textures))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Textures.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_UI))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package UI.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_Units))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Units.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_UnitIds))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package UnitIds.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_MapBounds))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package MapBounds.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_DummyRecycler))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package DummyRecycler.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_StringUtils))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package StringUtils.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_ObjectIds))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package ObjectIds.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_Preloader))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Preloader.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_ObjectIdGenerator))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package ObjectIdGenerator.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_OnUnitEnterLeave))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package OnUnitEnterLeave.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_UnitIndexer))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package UnitIndexer.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_ClosureEvents))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package ClosureEvents.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_MathTools))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package MathTools.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Forces))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Forces.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Strings))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Strings.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_CityBaseTaxes))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package CityBaseTaxes.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Revolts))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Revolts.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_City))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package City.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_Multiboards))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Multiboards.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_PlayerStats))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package PlayerStats.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Main))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Main.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_CastleCapture))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package CastleCapture.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_CityBuilded))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package CityBuilded.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_CityManage))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package CityManage.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_CityModifiers))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package CityModifiers.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_Clerics))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Clerics.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_HashSet))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package HashSet.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_VoteKick))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package VoteKick.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Commands))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Commands.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_Credits))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Credits.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_Economy))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Economy.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_DateTime))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package DateTime.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Diplomacy))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Diplomacy.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_Garissons))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Garissons.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_LimitEncampments))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package LimitEncampments.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_LimitMercenaryCamps))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package LimitMercenaryCamps.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Logarithm))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Logarithm.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_MainInit))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package MainInit.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_MassControl))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package MassControl.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_MultiboardCityUpdate))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package MultiboardCityUpdate.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_NoShipsNearRivers))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package NoShipsNearRivers.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_NoStarvationOnBoat))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package NoStarvationOnBoat.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_OnPlayerLeave))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package OnPlayerLeave.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_OreCapture))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package OreCapture.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_RangeChecks))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package RangeChecks.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_Religion))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Religion.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_Taxation))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Taxation.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_bridge_init_Upkeep))
	if  not TriggerEvaluate(initTrig) then
		call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 45., "Could not initialize package Upkeep.")
	endif
	call TriggerClearConditions(initTrig)
	call DestroyTrigger(initTrig)
	set initTrig = null
endfunction

function InitAllyPriorities takes nothing returns nothing
	call SetStartLocPrioCount(0, 19)
	call SetStartLocPrio(0, 0, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 1, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 2, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 3, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 4, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 5, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 6, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 7, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 8, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 9, 10, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 10, 11, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 11, 12, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 12, 13, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 13, 14, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 14, 15, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 15, 16, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 16, 17, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 17, 18, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(0, 18, 19, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(1, 9)
	call SetStartLocPrio(1, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(1, 1, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(1, 2, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(1, 3, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(1, 4, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(1, 5, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(1, 6, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(1, 7, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(1, 8, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(2, 9)
	call SetStartLocPrio(2, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(2, 1, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(2, 2, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(2, 3, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(2, 4, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(2, 5, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(2, 6, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(2, 7, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(2, 8, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(3, 9)
	call SetStartLocPrio(3, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(3, 1, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(3, 2, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(3, 3, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(3, 4, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(3, 5, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(3, 6, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(3, 7, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(3, 8, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(4, 9)
	call SetStartLocPrio(4, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(4, 1, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(4, 2, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(4, 3, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(4, 4, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(4, 5, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(4, 6, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(4, 7, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(4, 8, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(5, 9)
	call SetStartLocPrio(5, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(5, 1, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(5, 2, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(5, 3, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(5, 4, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(5, 5, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(5, 6, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(5, 7, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(5, 8, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(6, 9)
	call SetStartLocPrio(6, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(6, 1, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(6, 2, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(6, 3, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(6, 4, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(6, 5, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(6, 6, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(6, 7, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(6, 8, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(7, 9)
	call SetStartLocPrio(7, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(7, 1, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(7, 2, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(7, 3, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(7, 4, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(7, 5, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(7, 6, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(7, 7, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(7, 8, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(8, 9)
	call SetStartLocPrio(8, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(8, 1, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(8, 2, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(8, 3, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(8, 4, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(8, 5, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(8, 6, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(8, 7, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(8, 8, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(9, 9)
	call SetStartLocPrio(9, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(9, 1, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(9, 2, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(9, 3, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(9, 4, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(9, 5, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(9, 6, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(9, 7, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(9, 8, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(10, 16)
	call SetStartLocPrio(10, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 1, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 2, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 3, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 4, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 5, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 6, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 7, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 8, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 9, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 10, 12, MAP_LOC_PRIO_LOW)
	call SetStartLocPrio(10, 11, 13, MAP_LOC_PRIO_LOW)
	call SetStartLocPrio(10, 12, 14, MAP_LOC_PRIO_LOW)
	call SetStartLocPrio(10, 13, 15, MAP_LOC_PRIO_LOW)
	call SetStartLocPrio(10, 14, 16, MAP_LOC_PRIO_LOW)
	call SetStartLocPrio(10, 15, 17, MAP_LOC_PRIO_LOW)
	call SetStartLocPrioCount(11, 19)
	call SetStartLocPrio(11, 0, 0, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 1, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 2, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 3, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 4, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 5, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 6, 6, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 7, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 8, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 9, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 10, 10, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 11, 12, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 12, 13, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 13, 14, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 14, 15, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 15, 16, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 16, 17, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 17, 18, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 18, 19, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(12, 5)
	call SetStartLocPrio(12, 0, 13, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(12, 1, 14, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(12, 2, 15, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(12, 3, 16, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(12, 4, 17, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(13, 5)
	call SetStartLocPrio(13, 0, 12, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(13, 1, 14, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(13, 2, 15, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(13, 3, 16, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(13, 4, 17, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(14, 5)
	call SetStartLocPrio(14, 0, 12, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(14, 1, 13, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(14, 2, 15, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(14, 3, 16, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(14, 4, 17, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(15, 5)
	call SetStartLocPrio(15, 0, 12, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(15, 1, 13, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(15, 2, 14, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(15, 3, 16, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(15, 4, 17, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(16, 5)
	call SetStartLocPrio(16, 0, 12, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(16, 1, 13, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(16, 2, 14, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(16, 3, 15, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(16, 4, 17, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(17, 5)
	call SetStartLocPrio(17, 0, 12, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(17, 1, 13, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(17, 2, 14, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(17, 3, 15, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(17, 4, 16, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(18, 1)
	call SetStartLocPrio(18, 0, 19, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(19, 1)
	call SetStartLocPrio(19, 0, 18, MAP_LOC_PRIO_HIGH)
endfunction

function InitCustomPlayerSlots takes nothing returns nothing
	call SetPlayerStartLocation(Player(0), 0)
	call ForcePlayerStartLocation(Player(0), 0)
	call SetPlayerColor(Player(0), ConvertPlayerColor(0))
	call SetPlayerRacePreference(Player(0), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(0), false)
	call SetPlayerController(Player(0), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(1), 1)
	call ForcePlayerStartLocation(Player(1), 1)
	call SetPlayerColor(Player(1), ConvertPlayerColor(1))
	call SetPlayerRacePreference(Player(1), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(1), false)
	call SetPlayerController(Player(1), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(2), 2)
	call ForcePlayerStartLocation(Player(2), 2)
	call SetPlayerColor(Player(2), ConvertPlayerColor(2))
	call SetPlayerRacePreference(Player(2), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(2), false)
	call SetPlayerController(Player(2), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(3), 3)
	call ForcePlayerStartLocation(Player(3), 3)
	call SetPlayerColor(Player(3), ConvertPlayerColor(3))
	call SetPlayerRacePreference(Player(3), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(3), false)
	call SetPlayerController(Player(3), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(4), 4)
	call ForcePlayerStartLocation(Player(4), 4)
	call SetPlayerColor(Player(4), ConvertPlayerColor(4))
	call SetPlayerRacePreference(Player(4), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(4), false)
	call SetPlayerController(Player(4), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(5), 5)
	call ForcePlayerStartLocation(Player(5), 5)
	call SetPlayerColor(Player(5), ConvertPlayerColor(5))
	call SetPlayerRacePreference(Player(5), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(5), false)
	call SetPlayerController(Player(5), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(6), 6)
	call ForcePlayerStartLocation(Player(6), 6)
	call SetPlayerColor(Player(6), ConvertPlayerColor(6))
	call SetPlayerRacePreference(Player(6), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(6), false)
	call SetPlayerController(Player(6), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(7), 7)
	call ForcePlayerStartLocation(Player(7), 7)
	call SetPlayerColor(Player(7), ConvertPlayerColor(7))
	call SetPlayerRacePreference(Player(7), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(7), false)
	call SetPlayerController(Player(7), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(8), 8)
	call ForcePlayerStartLocation(Player(8), 8)
	call SetPlayerColor(Player(8), ConvertPlayerColor(8))
	call SetPlayerRacePreference(Player(8), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(8), false)
	call SetPlayerController(Player(8), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(9), 9)
	call ForcePlayerStartLocation(Player(9), 9)
	call SetPlayerColor(Player(9), ConvertPlayerColor(9))
	call SetPlayerRacePreference(Player(9), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(9), false)
	call SetPlayerController(Player(9), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(10), 10)
	call ForcePlayerStartLocation(Player(10), 10)
	call SetPlayerColor(Player(10), ConvertPlayerColor(10))
	call SetPlayerRacePreference(Player(10), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(10), false)
	call SetPlayerController(Player(10), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(11), 11)
	call ForcePlayerStartLocation(Player(11), 11)
	call SetPlayerColor(Player(11), ConvertPlayerColor(11))
	call SetPlayerRacePreference(Player(11), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(11), false)
	call SetPlayerController(Player(11), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(12), 12)
	call ForcePlayerStartLocation(Player(12), 12)
	call SetPlayerColor(Player(12), ConvertPlayerColor(12))
	call SetPlayerRacePreference(Player(12), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(12), false)
	call SetPlayerController(Player(12), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(13), 13)
	call ForcePlayerStartLocation(Player(13), 13)
	call SetPlayerColor(Player(13), ConvertPlayerColor(13))
	call SetPlayerRacePreference(Player(13), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(13), false)
	call SetPlayerController(Player(13), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(14), 14)
	call ForcePlayerStartLocation(Player(14), 14)
	call SetPlayerColor(Player(14), ConvertPlayerColor(14))
	call SetPlayerRacePreference(Player(14), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(14), false)
	call SetPlayerController(Player(14), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(15), 15)
	call ForcePlayerStartLocation(Player(15), 15)
	call SetPlayerColor(Player(15), ConvertPlayerColor(15))
	call SetPlayerRacePreference(Player(15), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(15), false)
	call SetPlayerController(Player(15), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(16), 16)
	call ForcePlayerStartLocation(Player(16), 16)
	call SetPlayerColor(Player(16), ConvertPlayerColor(16))
	call SetPlayerRacePreference(Player(16), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(16), false)
	call SetPlayerController(Player(16), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(17), 17)
	call ForcePlayerStartLocation(Player(17), 17)
	call SetPlayerColor(Player(17), ConvertPlayerColor(17))
	call SetPlayerRacePreference(Player(17), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(17), false)
	call SetPlayerController(Player(17), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(18), 18)
	call ForcePlayerStartLocation(Player(18), 18)
	call SetPlayerColor(Player(18), ConvertPlayerColor(18))
	call SetPlayerRacePreference(Player(18), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(18), false)
	call SetPlayerController(Player(18), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(19), 19)
	call ForcePlayerStartLocation(Player(19), 19)
	call SetPlayerColor(Player(19), ConvertPlayerColor(19))
	call SetPlayerRacePreference(Player(19), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(19), false)
	call SetPlayerController(Player(19), MAP_CONTROL_USER)
endfunction

function InitCustomTeams takes nothing returns nothing
	call SetPlayerTeam(Player(0), 0)
	call SetPlayerTeam(Player(1), 0)
	call SetPlayerTeam(Player(2), 0)
	call SetPlayerTeam(Player(3), 0)
	call SetPlayerTeam(Player(4), 0)
	call SetPlayerTeam(Player(5), 0)
	call SetPlayerTeam(Player(6), 0)
	call SetPlayerTeam(Player(7), 0)
	call SetPlayerTeam(Player(8), 0)
	call SetPlayerTeam(Player(9), 0)
	call SetPlayerTeam(Player(10), 0)
	call SetPlayerTeam(Player(11), 0)
	call SetPlayerTeam(Player(12), 1)
	call SetPlayerTeam(Player(13), 1)
	call SetPlayerTeam(Player(14), 1)
	call SetPlayerTeam(Player(15), 1)
	call SetPlayerTeam(Player(16), 1)
	call SetPlayerTeam(Player(17), 1)
	call SetPlayerTeam(Player(18), 1)
	call SetPlayerTeam(Player(19), 1)
endfunction

function config takes nothing returns nothing
	call SetMapName("TRIGSTR_001")
	call SetMapDescription("TRIGSTR_003")
	call SetPlayers(20)
	call SetTeams(20)
	call SetGamePlacement(MAP_PLACEMENT_TEAMS_TOGETHER)
	call DefineStartLocation(0, 320.0, 5184.0)
	call DefineStartLocation(1, 320.0, 5184.0)
	call DefineStartLocation(2, 320.0, 5184.0)
	call DefineStartLocation(3, 320.0, 5184.0)
	call DefineStartLocation(4, 320.0, 5184.0)
	call DefineStartLocation(5, 320.0, 5184.0)
	call DefineStartLocation(6, 320.0, 5184.0)
	call DefineStartLocation(7, 320.0, 5184.0)
	call DefineStartLocation(8, 320.0, 5184.0)
	call DefineStartLocation(9, 320.0, 5184.0)
	call DefineStartLocation(10, 320.0, 5184.0)
	call DefineStartLocation(11, 320.0, 5184.0)
	call DefineStartLocation(12, 320.0, 5184.0)
	call DefineStartLocation(13, 320.0, 5184.0)
	call DefineStartLocation(14, 320.0, 5184.0)
	call DefineStartLocation(15, 320.0, 5184.0)
	call DefineStartLocation(16, 320.0, 5184.0)
	call DefineStartLocation(17, 320.0, 5184.0)
	call DefineStartLocation(18, 320.0, 5184.0)
	call DefineStartLocation(19, 320.0, 5184.0)
	call InitCustomPlayerSlots()
	call InitCustomTeams()
	call InitAllyPriorities()
endfunction

