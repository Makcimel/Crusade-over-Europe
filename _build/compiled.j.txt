// this script was compiled with wurst 1.8.0.0-jenkins-Wurst-1072
globals
group w=null
location u=null
integer array r
force s=null
location t=null
location i=null
location S=null
location c=null
rect o=null
rect O=null
group l=null
group b=null
location y=null
boolean array p
boolean array e
rect q=null
rect a=null
rect n=null
rect d=null
rect f=null
rect R=null
rect T=null
rect Y=null
rect G=null
rect g=null
rect h=null
rect F=null
rect k=null
rect j=null
rect x=null
rect v=null
rect m=null
rect Q=null
rect W=null
rect E=null
rect Z=null
rect U=null
rect I=null
rect P=null
rect A=null
rect D=null
rect H=null
rect J=null
rect K=null
rect L=null
rect X=null
rect C=null
rect V=null
rect B=null
rect N=null
rect M=null
rect ww=null
rect uw=null
rect rw=null
rect sw=null
rect tw=null
rect iw=null
rect Sw=null
rect cw=null
rect ow=null
rect Ow=null
rect lw=null
rect bw=null
rect yw=null
rect pw=null
rect ew=null
rect qw=null
rect aw=null
rect nw=null
rect dw=null
rect fw=null
rect Rw=null
rect Tw=null
rect Yw=null
rect Gw=null
rect gw=null
rect hw=null
rect Fw=null
rect kw=null
rect jw=null
rect xw=null
rect vw=null
rect mw=null
rect Qw=null
rect Ww=null
rect Ew=null
rect Zw=null
rect Uw=null
rect Iw=null
rect Pw=null
rect Aw=null
rect Dw=null
rect Hw=null
rect Jw=null
rect Kw=null
rect Lw=null
rect Xw=null
rect Cw=null
rect Vw=null
rect Bw=null
rect Nw=null
rect Mw=null
rect wu=null
rect uu=null
rect ru=null
rect su=null
rect tu=null
rect iu=null
rect Su=null
rect cu=null
rect ou=null
rect Ou=null
rect lu=null
rect bu=null
rect yu=null
rect pu=null
rect eu=null
rect qu=null
rect au=null
rect nu=null
rect du=null
rect fu=null
rect Ru=null
rect Tu=null
rect Yu=null
rect Gu=null
rect gu=null
rect hu=null
rect Fu=null
rect ku=null
rect ju=null
rect xu=null
rect vu=null
rect mu=null
rect Qu=null
rect Wu=null
rect Eu=null
rect Zu=null
rect Uu=null
rect Iu=null
rect Pu=null
rect Au=null
rect Du=null
rect Hu=null
rect Ju=null
rect Ku=null
rect Lu=null
rect Xu=null
rect Cu=null
rect Vu=null
rect Bu=null
rect Nu=null
rect Mu=null
rect wr=null
rect ur=null
rect rr=null
rect sr=null
rect tr=null
rect ir=null
rect Sr=null
rect cr=null
rect lr=null
rect br=null
rect yr=null
rect pr=null
rect er=null
rect qr=null
rect ar=null
rect nr=null
rect dr=null
rect fr=null
rect Rr=null
rect Tr=null
rect Yr=null
rect Gr=null
rect gr=null
rect hr=null
rect Fr=null
rect kr=null
rect jr=null
rect xr=null
rect vr=null
rect mr=null
rect Qr=null
rect Wr=null
rect Er=null
rect Zr=null
rect Ur=null
rect Ir=null
rect Pr=null
rect Ar=null
rect Dr=null
rect Hr=null
rect Jr=null
rect Kr=null
rect Lr=null
rect Xr=null
rect Cr=null
rect Vr=null
rect Br=null
rect Nr=null
rect Mr=null
rect ws=null
rect us=null
rect rs=null
rect ss=null
rect ts=null
rect is=null
rect Ss=null
rect cs=null
rect os=null
rect Os=null
rect ls=null
rect bs=null
rect ys=null
rect ps=null
rect es=null
rect qs=null
rect as=null
rect ns=null
rect ds=null
sound fs=null
trigger Rs=null
trigger Ts=null
trigger Ys=null
trigger Gs=null
trigger gs=null
trigger hs=null
trigger Fs=null
trigger ks=null
trigger js=null
trigger xs=null
trigger vs=null
trigger ms=null
trigger Qs=null
trigger Ws=null
trigger Es=null
trigger Zs=null
trigger Us=null
trigger Is=null
trigger Ps=null
trigger As=null
trigger Ds=null
trigger Hs=null
trigger Js=null
trigger Ks=null
trigger Ls=null
trigger Xs=null
trigger Cs=null
trigger Vs=null
trigger Bs=null
trigger Ns=null
trigger Ms=null
trigger wt=null
trigger ut=null
trigger rt=null
trigger st=null
trigger tt=null
trigger St=null
trigger ct=null
trigger ot=null
trigger Ot=null
trigger lt=null
trigger bt=null
trigger yt=null
trigger pt=null
trigger et=null
trigger qt=null
trigger at=null
trigger nt=null
trigger dt=null
trigger ft=null
trigger Rt=null
trigger Tt=null
trigger Yt=null
trigger Gt=null
trigger gt=null
trigger ht=null
trigger Ft=null
trigger kt=null
trigger jt=null
trigger xt=null
trigger vt=null
trigger mt=null
trigger Qt=null
trigger Wt=null
trigger Et=null
trigger Zt=null
trigger Ut=null
trigger It=null
trigger Pt=null
trigger At=null
trigger Dt=null
trigger Ht=null
trigger Jt=null
trigger Kt=null
trigger Lt=null
trigger Xt=null
trigger Ct=null
trigger Vt=null
trigger Bt=null
trigger Nt=null
trigger Mt=null
trigger wi=null
trigger ui=null
trigger ri=null
trigger si=null
trigger ti=null
trigger ii=null
trigger Si=null
trigger ci=null
trigger oi=null
trigger Oi=null
trigger li=null
trigger bi=null
trigger yi=null
trigger pi=null
trigger ei=null
trigger qi=null
trigger ai=null
trigger ni=null
trigger di=null
trigger fi=null
trigger Ri=null
trigger Ti=null
trigger Yi=null
trigger Gi=null
trigger gi=null
trigger hi=null
trigger Fi=null
trigger ki=null
trigger ji=null
trigger xi=null
trigger vi=null
trigger mi=null
trigger Qi=null
trigger Wi=null
trigger Ei=null
trigger Zi=null
trigger Ui=null
trigger Ii=null
trigger Pi=null
trigger Ai=null
trigger Di=null
trigger Hi=null
trigger Ji=null
trigger Ki=null
trigger Li=null
trigger Xi=null
trigger Ci=null
trigger Vi=null
trigger Bi=null
trigger Ni=null
trigger Mi=null
trigger wS=null
integer uS=0
player rS=null
integer sS=0
integer array tS
integer iS=0
integer SS=0
integer cS=0
integer oS=0
integer OS=0
integer lS=0
integer bS=0
integer yS=0
integer pS=0
integer eS=0
real array qS
real array aS
boolean array nS
real array dS
integer array fS
real array RS
real array TS
string array YS
string array GS
integer gS=0
real hS=0.
real array FS
integer array kS
real array jS
real array xS
real array vS
real array mS
integer array QS
integer array WS
integer array ES
integer array ZS
integer array US
unit array IS
string array PS
integer array AS
integer array DS
integer array HS
real array JS
real array KS
integer array LS
integer array XS
real array CS
real array VS
real array BS
real array NS
integer array MS
real array wc
integer array uc
integer array rc
integer array sc
playerevent tc=null
trigger ic=null
trigger Sc=null
trigger cc=null
integer array oc
integer Oc=0
integer lc=0
integer bc=0
integer array yc
integer array pc
integer array ec
integer array qc
integer array ac
integer array nc
integer array dc
integer array fc
unit array Rc
group Tc=null
integer array Yc
integer Gc=0
filterfunc gc=null
integer hc=0
timer array Fc
timer array kc
integer array jc
integer array xc
integer array vc
string array mc
integer Qc=0
real array Wc
real Ec=0.
integer array Zc
integer array Uc
integer array Ic
integer array Pc
integer array Ac
integer Dc=0
integer array Hc
integer array Jc
hashtable Kc=null
force Lc=null
force Xc=null
force Cc=null
force Vc=null
force array Bc
integer array Nc
integer array Mc
integer array wo
timer uo=null
real ro=0.
group so=null
hashtable io=null
hashtable So=null
integer array co
integer array oo
hashtable Oo=null
integer array lo
unit array bo
integer array yo
unit array po
integer array eo
integer array qo
integer array ao
integer array no
integer array do
integer array fo
integer array Ro
boolean array To
integer array Yo
integer array Go
string array go
boolean array ho
integer Fo=0
integer ko=0
boolean jo=false
boolean xo=false
boolean vo=false
timer mo=null
real Qo=0.
rect Wo=null
rect Eo=null
region Zo=null
real Uo=0.
real Io=0.
integer Po=0
integer Ao=0
integer Do=0
player array Ho
unit array Jo
integer array Ko
unit array Lo
integer array Xo
real array Co
real array Vo
integer array Bo
integer array No
integer array Mo
integer array wO
integer array uO
integer array rO
integer array sO
integer array tO
integer array iO
multiboard array SO
unit array cO
trigger oO=null
group OO=null
unit array lO
integer bO=0
integer array yO
integer array pO
player array eO
boolean array qO
integer array aO
integer array nO
player array dO
player fO=null
playercolor RO=null
playercolor TO=null
playercolor YO=null
playercolor GO=null
playercolor array gO
group hO=null
unit FO=null
integer kO=0
unit array jO
real xO=0.
trigger array vO
integer mO=0
real array QO
integer WO=0
string array EO
string array ZO
string array UO
string array IO
string array PO
string array AO
string array DO
string array HO
string array JO
string array KO
string array LO
string array XO
string array CO
string array VO
string array BO
string array NO
string array MO
hashtable wl=null
timer array ul
integer rl=0
integer sl=0
integer tl=0
trigger il=null
trigger Sl=null
unit cl=null
unit ol=null
unit array Ol
integer ll=0
integer bl=0
integer array yl
integer pl=0
integer el=0
integer ql=0
integer al=0
integer array nl
integer dl=0
integer array fl
integer array Rl
integer Tl=0
integer array Yl
integer Gl=0
integer gl=0
integer array hl
integer array Fl
integer kl=0
integer jl=0
integer array xl
integer vl=0
integer ml=0
integer array Ql
integer array Wl
integer El=0
integer Zl=0
integer array Ul
integer array Il
integer Pl=0
integer Al=0
integer array Dl
integer array Hl
integer Jl=0
integer Kl=0
integer array Ll
integer Xl=0
integer array Cl
integer array Vl
integer Bl=0
integer Nl=0
integer array Ml
integer array wb
integer ub=0
integer rb=0
integer array sb
integer array tb
integer ib=0
integer Sb=0
integer array cb
integer ob=0
integer Ob=0
integer array lb
integer bb=0
integer yb=0
integer array pb
integer array eb
integer qb=0
integer ab=0
integer array nb
integer array db
integer fb=0
integer Rb=0
integer array Tb
integer Yb=0
integer Gb=0
integer array gb
integer hb=0
integer Fb=0
integer array kb
integer array jb
integer xb=0
integer vb=0
integer array mb
integer Qb=0
string array Wb
integer Eb=0
integer Zb=0
integer Ub=0
integer array Ib
integer array Pb
integer array Ab
integer array Db
integer array Hb
integer array Jb
integer array Kb
integer array Lb
integer array Xb
integer array Cb
integer array Vb
integer array Bb
integer array Nb
integer array Mb
integer array wy
integer array uy
integer array ry
integer array sy
integer array ty
integer array iy
integer array Sy
integer array cy
integer array oy
integer array Oy
code ly=null
code by=null
code yy=null
code py=null
code ey=null
code qy=null
code ay=null
code ny=null
code dy=null
code fy=null
code Ry=null
code Ty=null
code Yy=null
code Gy=null
code gy=null
code hy=null
code Fy=null
code ky=null
code jy=null
code xy=null
code vy=null
code my=null
code Qy=null
code Wy=null
code Ey=null
code Zy=null
code Uy=null
code Iy=null
code Py=null
code Ay=null
code Dy=null
code Hy=null
code Jy=null
code Ky=null
code Ly=null
code Xy=null
code Cy=null
code Vy=null
code By=null
code Ny=null
code My=null
code wp=null
code up=null
code rp=null
code sp=null
code tp=null
code ip=null
code Sp=null
code cp=null
code op=null
code Op=null
code lp=null
code bp=null
code yp=null
code pp=null
code ep=null
code qp=null
code ap=null
code np=null
code dp=null
code fp=null
code Rp=null
code Tp=null
code Yp=null
code Gp=null
code gp=null
code hp=null
code Fp=null
code kp=null
code jp=null
code xp=null
code vp=null
code mp=null
code Qp=null
code Wp=null
code Ep=null
code Zp=null
code Up=null
code Ip=null
code Pp=null
code Ap=null
code Dp=null
code Hp=null
code Jp=null
code Kp=null
code Lp=null
code Xp=null
code Cp=null
code Vp=null
code Bp=null
code Np=null
code Mp=null
code we=null
code ue=null
code re=null
code se=null
code te=null
code ie=null
code Se=null
code ce=null
code oe=null
code Oe=null
code le=null
code be=null
code ye=null
code pe=null
code ee=null
code qe=null
code ae=null
code ne=null
code de=null
code fe=null
code Re=null
code Te=null
code Ye=null
code Ge=null
code ge=null
code he=null
code Fe=null
code ke=null
code je=null
code xe=null
code ve=null
code me=null
code Qe=null
code We=null
code Ee=null
code Ze=null
code Ue=null
code Ie=null
code Pe=null
code Ae=null
code De=null
code He=null
code Je=null
code Ke=null
code Le=null
code Xe=null
code Ce=null
code Ve=null
code Be=null
code Ne=null
code Me=null
code wq=null
code uq=null
code rq=null
code sq=null
code tq=null
code iq=null
code Sq=null
code cq=null
code oq=null
code Oq=null
code lq=null
code bq=null
code yq=null
code pq=null
code eq=null
code qq=null
code aq=null
code nq=null
code dq=null
code fq=null
code Rq=null
code Tq=null
code Yq=null
code Gq=null
code gq=null
code hq=null
code Fq=null
code kq=null
code jq=null
code xq=null
code vq=null
code mq=null
code Qq=null
code Wq=null
code Eq=null
code Zq=null
code Uq=null
code Iq=null
code Pq=null
code Aq=null
code Dq=null
code Hq=null
code Jq=null
code Kq=null
code Lq=null
code Xq=null
code Cq=null
code Vq=null
code Bq=null
code Nq=null
code Mq=null
code wa=null
code ua=null
code ra=null
code sa=null
code ta=null
code ia=null
code Sa=null
code ca=null
code oa=null
code Oa=null
code la=null
code ba=null
code ya=null
code pa=null
code ea=null
code qa=null
code aa=null
code na=null
code da=null
code fa=null
code Ra=null
code Ta=null
code Ya=null
code Ga=null
code ga=null
code ha=null
code Fa=null
code ka=null
code ja=null
code xa=null
code va=null
code ma=null
code Qa=null
code Wa=null
code Ea=null
code Za=null
code Ua=null
code Ia=null
code Pa=null
code Aa=null
code Da=null
code Ha=null
code Ja=null
code Ka=null
code La=null
code Xa=null
code Ca=null
code Va=null
code Ba=null
code Na=null
code Ma=null
code wn=null
code un=null
code rn=null
code sn=null
code tn=null
code Sn=null
code cn=null
code on=null
code On=null
code ln=null
code bn=null
code yn=null
code pn=null
code en=null
code qn=null
code an=null
code nn=null
code dn=null
code fn=null
code Rn=null
code Tn=null
code Yn=null
code Gn=null
code gn=null
code hn=null
code Fn=null
code kn=null
code jn=null
code xn=null
code vn=null
code mn=null
code Qn=null
code Wn=null
code En=null
code Zn=null
code Un=null
code In=null
code Pn=null
code An=null
code Dn=null
code Hn=null
code Jn=null
code Kn=null
code Ln=null
code Xn=null
code Cn=null
code Vn=null
code Bn=null
code Nn=null
code Mn=null
code wd=null
code ud=null
code rd=null
code sd=null
code td=null
code id=null
code Sd=null
code cd=null
code od=null
code Od=null
code ld=null
code bd=null
code yd=null
code pd=null
code ed=null
code qd=null
code ad=null
code nd=null
code dd=null
code fd=null
code Rd=null
code Td=null
code Yd=null
code Gd=null
code gd=null
code hd=null
code Fd=null
code kd=null
code jd=null
code xd=null
code vd=null
code md=null
code Qd=null
code Wd=null
code Ed=null
code Zd=null
code Ud=null
code Id=null
code Pd=null
code Ad=null
code Dd=null
code Hd=null
code Jd=null
code Kd=null
code Ld=null
code Xd=null
code Cd=null
code Vd=null
code Bd=null
code Nd=null
code Md=null
code wf=null
code uf=null
code rf=null
code sf=null
code tf=null
code Sf=null
code cf=null
code of=null
code Of=null
code lf=null
code bf=null
code yf=null
code pf=null
code ef=null
code qf=null
code af=null
code nf=null
code df=null
code ff=null
code Rf=null
code Tf=null
code Yf=null
code Gf=null
code gf=null
code hf=null
code Ff=null
code kf=null
code jf=null
unit xf=null
multiboard vf=null
timer mf=null
unit Qf=null
trigger Wf=null
rect Ef=null
endglobals
function If takes nothing returns nothing
local integer Uf=0
set Uf=0
loop
exitwhen Uf>8192
call CreateGroup()
set Uf=Uf+1
endloop
call CreateForce()
call CreateGroup()
call CreateForce()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateForce()
call CreateForce()
call CreateForce()
call CreateTimer()
call CreateForce()
call CreateGroup()
set w=CreateGroup()
call CreateGroup()
call CreateForce()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateTimer()
set Uf=0
loop
exitwhen Uf>24
set Uf=Uf+1
endloop
set Uf=0
loop
exitwhen Uf>24
set r[Uf]=0
set Uf=Uf+1
endloop
set s=CreateForce()
set Uf=0
loop
exitwhen Uf>24
set Uf=Uf+1
endloop
call CreateGroup()
set Uf=0
loop
exitwhen Uf>24
set Uf=Uf+1
endloop
set Uf=0
loop
exitwhen Uf>24
set Uf=Uf+1
endloop
call CreateForce()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
set l=CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
set Uf=0
loop
exitwhen Uf>24
set Uf=Uf+1
endloop
set Uf=0
loop
exitwhen Uf>24
set Uf=Uf+1
endloop
call CreateGroup()
set Uf=0
loop
exitwhen Uf>24
set Uf=Uf+1
endloop
set Uf=0
loop
exitwhen Uf>24
set Uf=Uf+1
endloop
set Uf=0
loop
exitwhen Uf>24
set Uf=Uf+1
endloop
set Uf=0
loop
exitwhen Uf>24
set Uf=Uf+1
endloop
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateForce()
call CreateForce()
set Uf=0
loop
exitwhen Uf>1
set Uf=Uf+1
endloop
set Uf=0
loop
exitwhen Uf>1
set Uf=Uf+1
endloop
set Uf=0
loop
exitwhen Uf>1
set Uf=Uf+1
endloop
set b=CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
call CreateGroup()
set Uf=0
loop
exitwhen Uf>24
set p[Uf]=false
set Uf=Uf+1
endloop
set Uf=0
loop
exitwhen Uf>24
set e[Uf]=false
set Uf=Uf+1
endloop
endfunction
function AF takes nothing returns boolean
if GetUnitTypeId(GetDyingUnit())!=1747988792 then
return false
endif
return true
endfunction
function PH takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990350 then
return false
endif
return true
endfunction
function AH takes nothing returns boolean
if not PH() then
return false
endif
return true
endfunction
function AP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990601,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990599,0)
endfunction
function PT takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989045 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function AT takes nothing returns boolean
if not PT() then
return false
endif
return true
endfunction
function Viw takes integer Ciw returns string
if Ciw==0 then
return "|cffADADADtrace|r"
elseif Ciw==1 then
return "|cff2685DCdebug|r"
elseif Ciw==2 then
return "|cffFFCC00info|r"
elseif Ciw==3 then
return "|cffF47E3Ewarning|r"
elseif Ciw==4 then
return "|cffFB2700error|r"
endif
return "?"
endfunction
function g6 takes string e6,string q6 returns nothing
local integer a6
local string n6
local integer d6
local integer f6
local integer R6
local integer T6
local string Y6
local string G6
set Wb[Qb]=q6
set Qb=Qb+1
set a6=StringHash(e6)
if HaveSavedInteger(Kc,-1,a6) then
if LoadInteger(Kc,-1,a6)+60<ro then
set Y6=e6
set n6=""
set d6=Qb
set f6=0
loop
set d6=d6-1
set f6=f6+1
exitwhen f6>20 or d6<0
set n6=n6+"\n   "+Wb[d6]
endloop
call DisplayTimedTextToPlayer(fO,0.,0.,45.,Viw(4)+" - "+Y6+n6)
call SaveInteger(Kc,-1,a6,R2I(ro))
call SaveBoolean(Kc,-1,a6,false)
elseif HaveSavedBoolean(Kc,-1,a6) then
if not LoadBoolean(Kc,-1,a6) then
call DisplayTimedTextToPlayer(fO,0.,0.,45.,Viw(4)+" - "+"|cffFF3A29Excessive repeating errors are being omitted")
call SaveBoolean(Kc,-1,a6,true)
endif
else
call DisplayTimedTextToPlayer(fO,0.,0.,45.,Viw(4)+" - "+"|cffFF3A29Excessive repeating errors are being omitted")
call SaveBoolean(Kc,-1,a6,true)
endif
else
call SaveInteger(Kc,-1,a6,R2I(ro))
set G6="Message: "+e6
set q6=""
set R6=Qb
set T6=0
loop
set R6=R6-1
set T6=T6+1
exitwhen T6>20 or R6<0
set q6=q6+"\n   "+Wb[R6]
endloop
call DisplayTimedTextToPlayer(fO,0.,0.,45.,Viw(4)+" - "+G6+q6)
endif
call I2S(1/0)
set Qb=Qb-1
endfunction
function JSw takes playerunitevent WSw,code ESw,code ZSw,code USw returns nothing
local integer ISw=GetHandleId(WSw)
local integer PSw
local filterfunc ASw
local trigger DSw
local player HSw
if vO[ISw]==null then
set vO[ISw]=CreateTrigger()
set PSw=bj_MAX_PLAYER_SLOTS-1
loop
exitwhen PSw<0
set DSw=vO[ISw]
set HSw=dO[PSw]
if ESw!=null then
set ASw=Filter(ESw)
else
set ASw=null
endif
call TriggerRegisterPlayerUnitEvent(DSw,HSw,WSw,ASw)
set PSw=PSw-1
endloop
endif
if ZSw!=null then
call TriggerAddCondition(vO[ISw],Filter(ZSw))
endif
if USw!=null then
call TriggerAddAction(vO[ISw],USw)
endif
set ASw=null
set DSw=null
set HSw=null
endfunction
function tM takes eventid VN,string BN returns integer
local integer NN
local integer MN
local integer wM
local integer uM
local boolean rM
local boolean sM
set Wb[Qb]=BN
set Qb=Qb+1
set NN=GetHandleId(VN)
set Oc=Oc+1
set oc[NN]=Oc
set MN=GetHandleId(VN)
if (MN>=18 and MN<=51)or(MN>=269 and MN<=277) then
call JSw(ConvertPlayerUnitEvent(NN),null,sf,null)
else
if VN!=EVENT_UNIT_DAMAGED and VN!=EVENT_PLAYER_LEAVE and VN!=tc then
set wM=GetHandleId(VN)
set rM=wM<261 or wM>268 and wM!=17
else
set rM=false
endif
if rM then
set uM=GetHandleId(VN)
set sM=uM<305 or uM>307
else
set sM=false
endif
if sM then
call g6("registering handleid: "+I2S(NN)+" non-playerunitevent. Except EVENT_UNIT_DAMAGED and EVENT_PLAYER_LEAVE these are not supported right now.","when calling error in ClosureEvents, line 242")
endif
endif
set Qb=Qb-1
return Oc
endfunction
function q8 takes string o8 returns boolean
local playerunitevent O8
local playerunitevent l8
local integer b8
local integer y8
local integer p8
local integer e8
set Wb[Qb]=o8
set Qb=Qb+1
set O8=EVENT_PLAYER_UNIT_DEATH
set Wb[Qb]="when calling alloc_Closure in LimitMercenaryCamps, line 8"
set Qb=Qb+1
if Gl==0 then
if gl<32768 then
set gl=gl+1
set b8=gl
set hl[b8]=668
else
call g6("Out of memory: Could not create Closure.","when calling error in LimitMercenaryCamps, line 8")
set b8=0
endif
else
set Gl=Gl-1
set b8=Yl[Gl]
set hl[b8]=668
endif
set Qb=Qb-1
set ec[b8]=0
set qc[b8]=0
set ac[b8]=0
set Wb[Qb]="when calling add in LimitMercenaryCamps, line 8"
set Qb=Qb+1
set Wb[Qb]="when calling toIntId in ClosureEvents, line 111"
set Qb=Qb+1
set y8=oc[GetHandleId(O8)]
if y8==0 then
set y8=tM(O8,"when calling registerEventId in ClosureEvents, line 228")
endif
set Qb=Qb-1
set ec[b8]=y8
if yc[ec[b8]]!=0 then
set ac[yc[ec[b8]]]=b8
set qc[b8]=yc[ec[b8]]
endif
set yc[ec[b8]]=b8
set Qb=Qb-1
set l8=EVENT_PLAYER_UNIT_CONSTRUCT_START
set Wb[Qb]="when calling alloc_Closure in LimitMercenaryCamps, line 12"
set Qb=Qb+1
if Gl==0 then
if gl<32768 then
set gl=gl+1
set p8=gl
set hl[p8]=669
else
call g6("Out of memory: Could not create Closure.","when calling error in LimitMercenaryCamps, line 12")
set p8=0
endif
else
set Gl=Gl-1
set p8=Yl[Gl]
set hl[p8]=669
endif
set Qb=Qb-1
set ec[p8]=0
set qc[p8]=0
set ac[p8]=0
set Wb[Qb]="when calling add in LimitMercenaryCamps, line 12"
set Qb=Qb+1
set Wb[Qb]="when calling toIntId in ClosureEvents, line 111"
set Qb=Qb+1
set e8=oc[GetHandleId(l8)]
if e8==0 then
set e8=tM(l8,"when calling registerEventId in ClosureEvents, line 228")
endif
set Qb=Qb-1
set ec[p8]=e8
if yc[ec[p8]]!=0 then
set ac[yc[ec[p8]]]=p8
set qc[p8]=yc[ec[p8]]
endif
set yc[ec[p8]]=p8
set Qb=Qb-1-1
set O8=null
set l8=null
return true
endfunction
function Aaw takes nothing returns boolean
set Qb=0
return q8("LimitMercenaryCamps, line 1")
endfunction
function Ak takes nothing returns boolean
if GetUnitTypeId(GetDyingUnit())!=1747988793 then
return false
endif
return true
endfunction
function Av takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651824,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651825,0)
endfunction
function VD takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990354 then
return false
endif
return true
endfunction
function BD takes nothing returns boolean
if not VD() then
return false
endif
return true
endfunction
function BG takes nothing returns nothing
local location AG
local location DG
local real HG
local real JG
local rect KG
local group LG
local group XG
local code CG
local boolean VG
set u=GetUnitLoc(GetSpellAbilityUnit())
set AG=u
set c=Location(GetLocationX(AG)+200.00,GetLocationY(AG)+0.00)
set DG=u
set HG=GetLocationX(DG)
set JG=GetLocationY(DG)
set O=Rect(HG-150,JG-140,HG+150,JG+140)
set KG=O
set LG=CreateGroup()
call GroupEnumUnitsInRect(LG,KG,null)
call DestroyBoolExpr(null)
set l=LG
set XG=l
set CG=Ey
set VG=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(XG,CG)
if VG then
call DestroyGroup(XG)
endif
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747988825,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"stand")
call DestroyGroup(l)
call RemoveLocation(c)
call RemoveLocation(u)
set AG=null
set DG=null
set KG=null
set LG=null
set XG=null
endfunction
function BI takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651852,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651855,0)
endfunction
function VY takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989305 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function BY takes nothing returns boolean
if not VY() then
return false
endif
return true
endfunction
function VZ takes nothing returns boolean
if GetResearched()!=1378889797 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889797,true)!=2 then
return false
endif
return true
endfunction
function BZ takes nothing returns boolean
if not VZ() then
return false
endif
return true
endfunction
function Gpw takes integer fpw,string Rpw returns nothing
local integer Tpw
local integer Ypw
set Wb[Qb]=Rpw
set Qb=Qb+1
if nb[fpw]==0 then
if fpw==0 then
call g6("Nullpointer exception when calling LLIterator.reset","when calling error in LinkedList, line 421")
else
call g6("Called LLIterator.reset on invalid object.","when calling error in LinkedList, line 421")
endif
endif
set Wb[Qb]="when calling reset in LinkedList, line 421"
set Qb=Qb+1
set Tpw=Ro[fpw]
set Wb[Qb]="when calling getDummy in LinkedList, line 422"
set Qb=Qb+1
if Tb[Tpw]==0 then
if Tpw==0 then
call g6("Nullpointer exception when calling LinkedList.getDummy","when calling error in LinkedList, line 362")
else
call g6("Called LinkedList.getDummy on invalid object.","when calling error in LinkedList, line 362")
endif
endif
set Ypw=Yo[Tpw]
set Qb=Qb-1
set do[fpw]=Ypw
set fo[fpw]=do[fpw]
set Qb=Qb-1-1
endfunction
function A8 takes integer U8,string I8 returns integer
local integer P8
set Wb[Qb]=I8
set Qb=Qb+1
set Wb[Qb]="when calling LLIterator in LinkedList, line 412"
set Qb=Qb+1
if qb==0 then
if ab<32768 then
set ab=ab+1
set P8=ab
set nb[P8]=698
else
call g6("Out of memory: Could not create LLIterator.","when calling error in LinkedList, line 406")
set P8=0
endif
else
set qb=qb-1
set P8=eb[qb]
set nb[P8]=698
endif
set Qb=Qb-1
set Wb[Qb]="when calling construct_LLIterator in LinkedList, line 412"
set Qb=Qb+1
set To[P8]=true
set Ro[P8]=U8
call Gpw(P8,"when calling reset in LinkedList, line 414")
set Qb=Qb-1-1
return P8
endfunction
function Dsw takes multiboard msw,integer Qsw,integer Wsw,string Esw,real Zsw returns nothing
local multiboarditem Usw=MultiboardGetItem(msw,Wsw,Qsw)
local string Isw=Esw
local integer Psw=R2I((R2I(Zsw/0.004)-StringLength(Esw))*1./2)
local string Asw=""
set Qsw=0
set Wsw=Psw-1
loop
exitwhen Qsw>Wsw
set Asw=Asw+" "
set Qsw=Qsw+1
endloop
if ModuloReal(Psw,2)==1. then
set Isw=" "+Isw
endif
set Isw=Asw+Isw
call MultiboardSetItemValue(Usw,Isw)
set Usw=null
endfunction
function Dww takes player Zww,string Uww returns string
local integer Iww
local integer Pww
local integer Aww
set Wb[Qb]=Uww
set Qb=Qb+1
set Pww=yO[GetPlayerId(Zww)]
set Wb[Qb]="when calling getForceId in Messages, line 53"
set Qb=Qb+1
if kb[Pww]==0 then
if Pww==0 then
call g6("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 94")
else
call g6("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 94")
endif
endif
set Aww=pO[Pww]
set Qb=Qb-1
set Iww=GetRandomInt(0,2)
if Aww==0 then
set Uww=CO[Iww]
elseif Aww==1 then
set Uww=VO[Iww]
elseif Aww==2 then
set Uww=BO[Iww]
elseif Aww==3 then
set Uww=NO[Iww]
else
set Uww="Attention!"
endif
set Qb=Qb-1
return "|cffffa600"+Uww+"|r"
endfunction
function Pbw takes integer vbw,string mbw returns string
local integer Qbw
local integer Wbw
local integer Ebw
local integer Zbw
local integer Ubw
local integer Ibw
set Wb[Qb]=mbw
set Qb=Qb+1
if Ql[vbw]==0 then
if vbw==0 then
call g6("Nullpointer exception when calling City.getCityNameColored","when calling error in City, line 167")
else
call g6("Called City.getCityNameColored on invalid object.","when calling error in City, line 167")
endif
endif
set Zbw=Nc[DS[vbw]]
set Ubw=Mc[DS[vbw]]
set Ibw=wo[DS[vbw]]
set Qbw=Zbw/16
set Wbw=Ubw/16
set Ebw=Ibw/16
set mbw="|cff"+mc[Qbw]+mc[Zbw-Qbw*16]+mc[Wbw]+mc[Ubw-Wbw*16]+mc[Ebw]+mc[Ibw-Ebw*16]+PS[vbw]+"|r"
set Qb=Qb-1
return mbw
endfunction
function dpw takes integer apw,string npw returns nothing
set Wb[Qb]=npw
set Qb=Qb+1
if nb[apw]==0 then
if apw==0 then
call g6("Nullpointer exception when calling LLIterator.LLIterator","when calling error in LinkedList, line 406")
else
call g6("Called LLIterator.LLIterator on invalid object.","when calling error in LinkedList, line 406")
endif
endif
set Wb[Qb]="when calling destroyLLIterator in LinkedList, line 406"
set Qb=Qb+1
set Wb[Qb]="when calling LLIterator in LinkedList, line 406"
set Qb=Qb+1
if nb[apw]==0 then
call g6("Double free: object of type LLIterator","when calling error in LinkedList, line 406")
else
set eb[qb]=apw
set qb=qb+1
set nb[apw]=0
endif
set Qb=Qb-1-1-1
endfunction
function B8 takes integer X8,integer C8 returns boolean
local integer V8=no[Yo[X8]]
loop
exitwhen V8==Yo[X8]
if qo[V8]==C8 then
return true
endif
set V8=no[V8]
endloop
return false
endfunction
function opw takes integer tpw,integer ipw,string Spw returns integer
local integer cpw
set Wb[Qb]=Spw
set Qb=Qb+1
if cb[tpw]==0 then
if tpw==0 then
call g6("Nullpointer exception when calling HashMap.get","when calling error in HashMap, line 19")
else
call g6("Called HashMap.get on invalid object.","when calling error in HashMap, line 19")
endif
endif
set Wb[Qb]="when calling get in HashMap, line 19"
set Qb=Qb+1
set Wb[Qb]="when calling loadInt in HashMap, line 20"
set Qb=Qb+1
if cb[tpw]==0 then
if tpw==0 then
call g6("Nullpointer exception when calling Table.loadInt","when calling error in Table, line 39")
else
call g6("Called Table.loadInt on invalid object.","when calling error in Table, line 39")
endif
endif
set cpw=LoadInteger(wl,tpw,ipw)
set Qb=Qb-1-1-1
return cpw
endfunction
function Jbw takes integer Abw,integer Dbw,string Hbw returns nothing
set Wb[Qb]=Hbw
set Qb=Qb+1
if Ql[Abw]==0 then
if Abw==0 then
call g6("Nullpointer exception when calling City.getCityModifierOnAdd","when calling error in City, line 405")
else
call g6("Called City.getCityModifierOnAdd on invalid object.","when calling error in City, line 405")
endif
endif
set Wb[Qb]="when calling getCityModifierOnAdd in City, line 405"
set Qb=Qb+1
set BS[Abw]=BS[Abw]+aS[opw(eS,Dbw,"when calling get in City, line 406")]
set NS[Abw]=NS[Abw]+TS[opw(eS,Dbw,"when calling get in City, line 407")]
set Qb=Qb-1-1
endfunction
function Z8 takes integer v8,integer m8,integer Q8,string W8 returns integer
local integer E8
set Wb[Qb]=W8
set Qb=Qb+1
set Wb[Qb]="when calling LLEntry in LinkedList, line 401"
set Qb=Qb+1
if bb==0 then
if yb<32768 then
set yb=yb+1
set E8=yb
set pb[E8]=697
else
call g6("Out of memory: Could not create LLEntry.","when calling error in LinkedList, line 396")
set E8=0
endif
else
set bb=bb-1
set E8=lb[bb]
set pb[E8]=697
endif
set Qb=Qb-1
set qo[E8]=v8
set ao[E8]=m8
set no[E8]=Q8
set Qb=Qb-1
return E8
endfunction
function Lpw takes integer Dpw,integer Hpw,string Jpw returns nothing
local integer Kpw
set Wb[Qb]=Jpw
set Qb=Qb+1
if Tb[Dpw]==0 then
if Dpw==0 then
call g6("Nullpointer exception when calling LinkedList.add","when calling error in LinkedList, line 37")
else
call g6("Called LinkedList.add on invalid object.","when calling error in LinkedList, line 37")
endif
endif
set Wb[Qb]="when calling add in LinkedList, line 37"
set Qb=Qb+1
set Kpw=Z8(Hpw,ao[Yo[Dpw]],Yo[Dpw],"when calling new_LLEntry in LinkedList, line 39")
set no[ao[Yo[Dpw]]]=Kpw
set ao[Yo[Dpw]]=Kpw
set Go[Dpw]=Go[Dpw]+1
set Qb=Qb-1-1
endfunction
function pow takes timer oow,integer Oow,string low returns nothing
local integer bow
local integer yow
set Wb[Qb]=low
set Qb=Qb+1
set bow=sl
set yow=GetHandleId(oow)
set Wb[Qb]="when calling saveInt in TimerUtils, line 17"
set Qb=Qb+1
if cb[bow]==0 then
if bow==0 then
call g6("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call g6("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(wl,bow,yow,Oow)
set Qb=Qb-1-1
endfunction
function Yow takes string Row returns timer
local timer Tow
set Wb[Qb]=Row
set Qb=Qb+1
if rl>0 then
set rl=rl-1
call pow(ul[rl],0,"when calling setData in TimerUtils, line 29")
set Qb=Qb-1
set Tow=null
return ul[rl]
else
set Tow=CreateTimer()
call pow(Tow,0,"when calling setData in TimerUtils, line 32")
set Qb=Qb-1
set mf=Tow
set Tow=null
return mf
endif
endfunction
function g3 takes integer R3,real T3,string Y3 returns nothing
local timer G3
set Wb[Qb]=Y3
set Qb=Qb+1
set G3=Yow("when calling getTimer in ClosureTimers, line 68")
call pow(G3,R3,"when calling setData in ClosureTimers, line 69")
call TimerStart(G3,T3,false,pf)
set kc[R3]=G3
set Qb=Qb-1
set G3=null
endfunction
function tV takes integer BC,integer NC,string MC returns boolean
local real wV
local integer uV
local boolean rV
local integer sV
set Wb[Qb]=MC
set Qb=Qb+1
set uV=uc[BC]
set Wb[Qb]="when calling has in City, line 355"
set Qb=Qb+1
if Tb[uV]==0 then
if uV==0 then
call g6("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call g6("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set rV=B8(uV,NC)
set Qb=Qb-1
if rV then
set Qb=Qb-1
return false
endif
call Lpw(uc[BC],NC,"when calling add in City, line 357")
call Jbw(BC,NC,"when calling getCityModifierOnAdd in City, line 358")
set wV=qS[opw(eS,NC,"when calling get in City, line 360")]
set Wb[Qb]="when calling alloc_Closure in City, line 360"
set Qb=Qb+1
if Pl==0 then
if Al<32768 then
set Al=Al+1
set sV=Al
set Dl[sV]=639
else
call g6("Out of memory: Could not create Closure.","when calling error in City, line 360")
set sV=0
endif
else
set Pl=Pl-1
set sV=Il[Pl]
set Dl[sV]=639
endif
set Qb=Qb-1
set ZS[sV]=BC
set US[sV]=NC
set Wb[Qb]="when calling doAfter in City, line 360"
set Qb=Qb+1
set Wb[Qb]="when calling start in ClosureTimers, line 15"
set Qb=Qb+1
if Dl[sV]==0 then
if sV==0 then
call g6("Nullpointer exception when calling CallbackSingle.start","when calling error in ClosureTimers, line 67")
else
call g6("Called CallbackSingle.start on invalid object.","when calling error in ClosureTimers, line 67")
endif
endif
call g3(sV,wV,"when calling start in ClosureTimers, line 67")
set Qb=Qb-1-1-1
return true
endfunction
function acw takes integer VSw,string BSw returns nothing
local unit NSw
local integer MSw
local integer wcw
local integer ucw
local integer rcw
local real scw
local integer tcw
local unit icw
local player Scw
local integer ccw
local player ocw
local integer Ocw
local integer lcw
local integer bcw
local integer ycw
local integer pcw
local integer ecw
local boolean qcw
set Wb[Qb]=BSw
set Qb=Qb+1
if VSw<0 or VSw>=gS then
set Qb=Qb-1
set NSw=null
set icw=null
set Scw=null
set ocw=null
return
endif
if Qo-QO[VSw]<=60 then
set Qb=Qb-1
set NSw=null
set icw=null
set Scw=null
set ocw=null
return
endif
set rcw=QS[VSw]
set Wb[Qb]="when calling getLastPublicOrder in Revolts, line 18"
set Qb=Qb+1
if Ql[rcw]==0 then
if rcw==0 then
call g6("Nullpointer exception when calling City.getLastPublicOrder","when calling error in City, line 318")
else
call g6("Called City.getLastPublicOrder on invalid object.","when calling error in City, line 318")
endif
endif
set scw=VS[rcw]
set Qb=Qb-1
set tcw=QS[VSw]
set Wb[Qb]="when calling getCityUnit in Revolts, line 19"
set Qb=Qb+1
if Ql[tcw]==0 then
if tcw==0 then
call g6("Nullpointer exception when calling City.getCityUnit","when calling error in City, line 176")
else
call g6("Called City.getCityUnit on invalid object.","when calling error in City, line 176")
endif
endif
set icw=IS[tcw]
set Qb=Qb-1
set NSw=icw
set Scw=GetOwningPlayer(icw)
if GetPlayerSlotState(Scw)==PLAYER_SLOT_STATE_PLAYING then
set qcw=GetPlayerController(Scw)==MAP_CONTROL_USER
else
set qcw=false
endif
if not qcw then
set Qb=Qb-1
set NSw=null
set icw=null
set Scw=null
set ocw=null
return
endif
if scw<50.0 then
set QO[VSw]=Qo
set ccw=QS[VSw]
set Wb[Qb]="when calling addModifier in Revolts, line 24"
set Qb=Qb+1
if Ql[ccw]==0 then
if ccw==0 then
call g6("Nullpointer exception when calling City.addModifier","when calling error in City, line 354")
else
call g6("Called City.addModifier on invalid object.","when calling error in City, line 354")
endif
endif
call tV(ccw,1,"when calling addModifier in City, line 354")
set Qb=Qb-1
set BSw="A violent mob has appeared near the gates of "+Pbw(QS[VSw],"when calling getCityNameColored in Revolts, line 25")+"!"
set ocw=GetOwningPlayer(icw)
set Wb[Qb]="when calling attentionToPlayer in Revolts, line 25"
set Qb=Qb+1
call DisplayTimedTextToPlayer(ocw,0.,0.,10.0,Dww(ocw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(ocw,0.,0.,10.0,BSw)
set Qb=Qb-1
if scw>=30.0 then
set Ocw=nl[0]
set Wb[Qb]="when calling iterator in Revolts, line 28"
set Qb=Qb+1
set lcw=A8(Ocw,"when calling new_LLIterator in LinkedList, line 165")
set Qb=Qb-1
set MSw=lcw
loop
exitwhen no[fo[MSw]]==do[MSw]
set fo[MSw]=no[fo[MSw]]
call CreateUnit(dO[PLAYER_NEUTRAL_AGGRESSIVE],qo[fo[MSw]],GetUnitX(NSw),GetUnitY(NSw),0.)
endloop
set Wb[Qb]="when calling close in Revolts, line 28"
set Qb=Qb+1
if To[MSw]then
call dpw(MSw,"when calling LLIterator in LinkedList, line 450")
endif
set Qb=Qb-1
elseif scw>=15.0 then
set bcw=nl[1]
set Wb[Qb]="when calling iterator in Revolts, line 32"
set Qb=Qb+1
set ycw=A8(bcw,"when calling new_LLIterator in LinkedList, line 165")
set Qb=Qb-1
set wcw=ycw
loop
exitwhen no[fo[wcw]]==do[wcw]
set fo[wcw]=no[fo[wcw]]
call CreateUnit(dO[PLAYER_NEUTRAL_AGGRESSIVE],qo[fo[wcw]],GetUnitX(NSw),GetUnitY(NSw),0.)
endloop
set Wb[Qb]="when calling close in Revolts, line 32"
set Qb=Qb+1
if To[wcw]then
call dpw(wcw,"when calling LLIterator in LinkedList, line 450")
endif
set Qb=Qb-1
else
set pcw=nl[2]
set Wb[Qb]="when calling iterator in Revolts, line 36"
set Qb=Qb+1
set ecw=A8(pcw,"when calling new_LLIterator in LinkedList, line 165")
set Qb=Qb-1
set ucw=ecw
loop
exitwhen no[fo[ucw]]==do[ucw]
set fo[ucw]=no[fo[ucw]]
call CreateUnit(dO[PLAYER_NEUTRAL_AGGRESSIVE],qo[fo[ucw]],GetUnitX(NSw),GetUnitY(NSw),0.)
endloop
set Wb[Qb]="when calling close in Revolts, line 36"
set Qb=Qb+1
if To[ucw]then
call dpw(ucw,"when calling LLIterator in LinkedList, line 450")
endif
set Qb=Qb-1
endif
endif
set Qb=Qb-1
set NSw=null
set icw=null
set Scw=null
set ocw=null
endfunction
function oyw takes integer Syw,string cyw returns nothing
set Wb[Qb]=cyw
set Qb=Qb+1
if Ul[Syw]==0 then
if Syw==0 then
call g6("Nullpointer exception when calling ForGroupCallback.ForGroupCallback","when calling error in ClosureForGroups, line 3")
else
call g6("Called ForGroupCallback.ForGroupCallback on invalid object.","when calling error in ClosureForGroups, line 3")
endif
endif
set Wb[Qb]="when calling destroyForGroupCallback in ClosureForGroups, line 3"
set Qb=Qb+1
set Wb[Qb]="when calling ForGroupCallback in ClosureForGroups, line 3"
set Qb=Qb+1
if Ul[Syw]==0 then
call g6("Double free: object of type ForGroupCallback","when calling error in ClosureForGroups, line 3")
else
set Wl[El]=Syw
set El=El+1
set Ul[Syw]=0
endif
set Qb=Qb-1-1-1
endfunction
function e3 takes real O3,real l3,real b3,integer y3,string p3 returns nothing
set Wb[Qb]=p3
set Qb=Qb+1
set Yc[Gc]=y3
set Gc=Gc+1
call GroupEnumUnitsInRange(Tc,O3,l3,b3,gc)
set Wb[Qb]="when calling popCallback in ClosureForGroups, line 85"
set Qb=Qb+1
call GroupClear(Tc)
set Gc=Gc-1
call oyw(Yc[Gc],"when calling ForGroupCallback in ClosureForGroups, line 21")
set Qb=Qb-1-1
endfunction
function oB takes integer MV,string wB returns real
local integer uB
local integer rB
local boolean sB
local real tB
local real iB
local real SB
local real cB
set Wb[Qb]=wB
set Qb=Qb+1
set VS[MV]=100.0-CS[MV]*1000.-SquareRoot(LS[MV]*1.)/17.+BS[MV]-LS[MV]*1./1000*vS[MS[MV]]
set tB=JS[MV]
set iB=KS[MV]
set Wb[Qb]="when calling alloc_Closure in City, line 299"
set Qb=Qb+1
if El==0 then
if Zl<32768 then
set Zl=Zl+1
set uB=Zl
set Ul[uB]=681
else
call g6("Out of memory: Could not create Closure.","when calling error in City, line 299")
set uB=0
endif
else
set El=El-1
set uB=Wl[El]
set Ul[uB]=681
endif
set Qb=Qb-1
set WS[uB]=MV
call e3(tB,iB,500,uB,"when calling forUnitsInRange in City, line 299")
set SB=JS[MV]
set cB=KS[MV]
set Wb[Qb]="when calling alloc_Closure in City, line 303"
set Qb=Qb+1
if El==0 then
if Zl<32768 then
set Zl=Zl+1
set rB=Zl
set Ul[rB]=682
else
call g6("Out of memory: Could not create Closure.","when calling error in City, line 303")
set rB=0
endif
else
set El=El-1
set rB=Wl[El]
set Ul[rB]=682
endif
set Qb=Qb-1
set ES[rB]=MV
call e3(SB,cB,1500.0,rB,"when calling forUnitsInRange in City, line 303")
if VS[MV]<0.0 then
set VS[MV]=0.0
endif
if VS[MV]>100.0 then
set VS[MV]=100.0
endif
if VS[MV]<50.0 then
set sB=GetRandomReal(0.0,1.0)<=0.01
else
set sB=false
endif
if sB then
call acw(AS[MV],"when calling checkForRevolt in City, line 314")
endif
set Qb=Qb-1
return VS[MV]
endfunction
function LC takes integer IC,string PC returns string
local real AC
local integer DC
local integer HC
local integer JC
local integer KC
set Wb[Qb]=PC
set Qb=Qb+1
set Wb[Qb]="when calling countPublicOrder in City, line 322"
set Qb=Qb+1
if Ql[IC]==0 then
if IC==0 then
call g6("Nullpointer exception when calling City.countPublicOrder","when calling error in City, line 294")
else
call g6("Called City.countPublicOrder on invalid object.","when calling error in City, line 294")
endif
endif
set AC=oB(IC,"when calling countPublicOrder in City, line 294")
set Qb=Qb-1
set JC=R2I(255.-AC/100.*255.)
set KC=R2I(AC/100.*255.)
set DC=JC/16
set HC=KC/16
set PC=StringCase("|cff"+mc[DC]+mc[JC-DC*16]+mc[HC]+mc[KC-HC*16]+mc[0]+mc[0],false)+I2S(R2I(AC))+","+I2S(R2I(ModuloReal(R2I(AC*10.),10)))+"%|r"
set Qb=Qb-1
return PC
endfunction
function UC takes integer jC,string xC returns integer
local integer vC
local real mC
local real QC
local real WC
local real EC
local real ZC
set Wb[Qb]=xC
set Qb=Qb+1
set vC=0
set vC=0+opw(sS,GetUnitTypeId(IS[jC]),"when calling get in City, line 269")
set ZC=LS[jC]*1.
set Wb[Qb]="when calling countPublicOrder in City, line 281"
set Qb=Qb+1
if Ql[jC]==0 then
if jC==0 then
call g6("Nullpointer exception when calling City.countPublicOrder","when calling error in City, line 294")
else
call g6("Called City.countPublicOrder on invalid object.","when calling error in City, line 294")
endif
endif
set EC=oB(jC,"when calling countPublicOrder in City, line 294")
set Qb=Qb-1
set mC=EC/100.
set QC=xO
if 0.75>QC then
set WC=0.75
else
set WC=QC
endif
if mC>WC then
set WC=mC
endif
set vC=vC+R2I(SquareRoot(ZC*WC)/6.)
set vC=R2I(vC*NS[jC]*jS[MS[jC]])
set Qb=Qb-1
return vC
endfunction
function VC takes integer XC returns string
local string CC
if xo then
return I2S(LS[XC])
endif
if LS[XC]<100000 then
set CC=I2S(R2I(LS[XC]*1./1000))+","+I2S(R2I(ModuloReal(LS[XC],1000)/100.))+"k"
else
set CC=I2S(R2I(LS[XC]*1./1000))+"k"
endif
return CC
endfunction
function oww takes real cww returns real
if cww>0. then
return 1.
elseif cww<0. then
return -1.
else
return 0.
endif
endfunction
function vcw takes integer jcw returns string
local string xcw="|cff15ff00+"
if oww(jcw*1.)==-1. then
set xcw="|cffff0000"
endif
return xcw+I2S(jcw)+"|r"
endfunction
function fiw takes integer Jtw,string Ktw returns nothing
local integer Ltw
local multiboard Xtw
local integer Ctw
local integer Vtw
local integer Btw
local multiboard Ntw
local integer Mtw
local integer wiw
local multiboard uiw
local integer riw
local integer siw
local integer tiw
local integer iiw
local string Siw
local integer ciw
local string oiw
local integer Oiw
local string liw
local integer biw
local integer yiw
local string piw
local integer eiw
local integer qiw
local integer aiw
local string niw
local string diw
set Wb[Qb]=Ktw
set Qb=Qb+1
if aO[Jtw]==-1 then
set Qb=Qb-1
set Xtw=null
set Ntw=null
set uiw=null
return
endif
set Ltw=GetPlayerId(eO[Jtw])
call Dsw(SO[Ltw],tO[0],tO[1],Pbw(QS[aO[Jtw]],"when calling getCityNameColored in PlayerStats, line 48"),0.40)
set riw=QS[aO[Jtw]]
set Wb[Qb]="when calling countTax in PlayerStats, line 57"
set Qb=Qb+1
if Ql[riw]==0 then
if riw==0 then
call g6("Nullpointer exception when calling City.countTax","when calling error in City, line 265")
else
call g6("Called City.countTax on invalid object.","when calling error in City, line 265")
endif
endif
set siw=UC(riw,"when calling countTax in City, line 265")
set Qb=Qb-1
set tiw=QS[aO[Jtw]]
set Wb[Qb]="when calling getTaxLevelString in PlayerStats, line 58"
set Qb=Qb+1
if Ql[tiw]==0 then
if tiw==0 then
call g6("Nullpointer exception when calling City.getTaxLevelString","when calling error in City, line 164")
else
call g6("Called City.getTaxLevelString on invalid object.","when calling error in City, line 164")
endif
endif
set Ktw=MO[MS[tiw]]
set Qb=Qb-1
set iiw=QS[aO[Jtw]]
set Wb[Qb]="when calling getPublicOrderStr in PlayerStats, line 59"
set Qb=Qb+1
if Ql[iiw]==0 then
if iiw==0 then
call g6("Nullpointer exception when calling City.getPublicOrderStr","when calling error in City, line 321")
else
call g6("Called City.getPublicOrderStr on invalid object.","when calling error in City, line 321")
endif
endif
set Siw=LC(iiw,"when calling getPublicOrderStr in City, line 321")
set Qb=Qb-1
set ciw=QS[aO[Jtw]]
set Wb[Qb]="when calling getPopulationStr in PlayerStats, line 60"
set Qb=Qb+1
if Ql[ciw]==0 then
if ciw==0 then
call g6("Nullpointer exception when calling City.getPopulationStr","when calling error in City, line 342")
else
call g6("Called City.getPopulationStr on invalid object.","when calling error in City, line 342")
endif
endif
set oiw=VC(ciw)
set Qb=Qb-1
set Oiw=QS[aO[Jtw]]
set Wb[Qb]="when calling getPopulationGrowthStr in PlayerStats, line 61"
set Qb=Qb+1
if Ql[Oiw]==0 then
if Oiw==0 then
call g6("Nullpointer exception when calling City.getPopulationGrowthStr","when calling error in City, line 339")
else
call g6("Called City.getPopulationGrowthStr on invalid object.","when calling error in City, line 339")
endif
endif
set liw=vcw(XS[Oiw])
set Qb=Qb-1
set Xtw=SO[Ltw]
set biw=wO[0]
set yiw=wO[1]
set piw=I2S(siw)
call MultiboardSetItemValue(MultiboardGetItem(Xtw,yiw,biw),piw)
call MultiboardSetItemValue(MultiboardGetItem(Xtw,wO[1],wO[0]+1),Ktw)
call MultiboardSetItemValue(MultiboardGetItem(Xtw,uO[1],uO[0]),Siw)
call MultiboardSetItemValue(MultiboardGetItem(Xtw,rO[1],rO[0]),oiw)
call MultiboardSetItemValue(MultiboardGetItem(Xtw,sO[1],sO[0]),liw)
set Ctw=0
set qiw=QS[aO[Jtw]]
set Wb[Qb]="when calling getModifiers in PlayerStats, line 71"
set Qb=Qb+1
if Ql[qiw]==0 then
if qiw==0 then
call g6("Nullpointer exception when calling City.getModifiers","when calling error in City, line 377")
else
call g6("Called City.getModifiers on invalid object.","when calling error in City, line 377")
endif
endif
set aiw=uc[qiw]
set Qb=Qb-1
set Wb[Qb]="when calling iterator in PlayerStats, line 71"
set Qb=Qb+1
set eiw=A8(aiw,"when calling new_LLIterator in LinkedList, line 165")
set Qb=Qb-1
set Vtw=eiw
loop
exitwhen no[fo[Vtw]]==do[Vtw]
set fo[Vtw]=no[fo[Vtw]]
set Btw=qo[fo[Vtw]]
set Ntw=SO[Ltw]
set niw=YS[opw(eS,Btw,"when calling get in PlayerStats, line 73")]
call MultiboardSetItemValue(MultiboardGetItem(Ntw,4+Ctw,4),niw)
set diw="("+GS[opw(eS,Btw,"when calling get in PlayerStats, line 74")]+")"
call MultiboardSetItemValue(MultiboardGetItem(Ntw,4+Ctw,5),diw)
set Ctw=Ctw+1
endloop
set Wb[Qb]="when calling close in PlayerStats, line 71"
set Qb=Qb+1
if To[Vtw]then
call dpw(Vtw,"when calling LLIterator in LinkedList, line 450")
endif
set Qb=Qb-1
set Mtw=Ctw
set wiw=9
loop
exitwhen Mtw>wiw
set uiw=SO[Ltw]
call MultiboardSetItemValue(MultiboardGetItem(uiw,4+Mtw,4)," ")
call MultiboardSetItemValue(MultiboardGetItem(uiw,4+Mtw,5)," ")
set Mtw=Mtw+1
endloop
set Qb=Qb-1
set Xtw=null
set Ntw=null
set uiw=null
endfunction
function Apw takes integer Upw,integer Ipw,string Ppw returns nothing
set Wb[Qb]=Ppw
set Qb=Qb+1
if kb[Upw]==0 then
if Upw==0 then
call g6("Nullpointer exception when calling PlayerStats.setSelectedCityId","when calling error in PlayerStats, line 88")
else
call g6("Called PlayerStats.setSelectedCityId on invalid object.","when calling error in PlayerStats, line 88")
endif
endif
set Wb[Qb]="when calling setSelectedCityId in PlayerStats, line 88"
set Qb=Qb+1
if Ipw>=0 and Ipw<gS then
set aO[Upw]=Ipw
set Wb[Qb]="when calling refreshMultiboardCity in PlayerStats, line 91"
set Qb=Qb+1
if kb[Upw]==0 then
if Upw==0 then
call g6("Nullpointer exception when calling PlayerStats.refreshMultiboardCity","when calling error in PlayerStats, line 43")
else
call g6("Called PlayerStats.refreshMultiboardCity on invalid object.","when calling error in PlayerStats, line 43")
endif
endif
call fiw(Upw,"when calling refreshMultiboardCity in PlayerStats, line 43")
set Qb=Qb-1
endif
set Qb=Qb-1-1
endfunction
function kC takes unit TC,string YC returns integer
local integer GC
local integer gC
local integer hC
local unit FC
set Wb[Qb]=YC
set Qb=Qb+1
set GC=0
set gC=gS-1
loop
exitwhen GC>gC
set hC=QS[GC]
set YC="when calling getCityUnit in City, line 428"
set Wb[Qb]="when calling getCityUnit in City, line 428"
set Qb=Qb+1
if Ql[hC]==0 then
if hC==0 then
call g6("Nullpointer exception when calling City.getCityUnit","when calling error in City, line 176")
else
call g6("Called City.getCityUnit on invalid object.","when calling error in City, line 176")
endif
endif
set FC=IS[hC]
set Qb=Qb-1
if FC==TC then
set Qb=Qb-1
set FC=null
return GC
endif
set GC=GC+1
endloop
set Qb=Qb-1
set FC=null
return -1
endfunction
function BL takes integer KL,string LL returns nothing
local unit XL
local integer CL
local boolean VL
set Wb[Qb]=LL
set Qb=Qb+1
set XL=GetTriggerUnit()
set Wb[Qb]="when calling isCity in CityManage, line 10"
set Qb=Qb+1
set Wb[Qb]="when calling isCity in UnitTools, line 5"
set Qb=Qb+1
set KL=al
set CL=GetUnitTypeId(XL)
set Wb[Qb]="when calling has in City, line 422"
set Qb=Qb+1
if Tb[KL]==0 then
if KL==0 then
call g6("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call g6("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set VL=B8(KL,CL)
set Qb=Qb-1-1-1
if VL then
call Apw(yO[GetPlayerId(GetTriggerPlayer())],kC(GetTriggerUnit(),"when calling getCityId in CityManage, line 11"),"when calling setSelectedCityId in CityManage, line 11")
endif
set Qb=Qb-1
set XL=null
endfunction
function r1 takes playercolor H3 returns integer
local playercolor X3=H3
local integer C3=0
local integer V3=0
local integer B3=bj_MAX_PLAYER_SLOTS-1
local integer J3
local integer K3
local integer L3
local playercolor N3
local integer M3
local integer w1
local integer u1
loop
exitwhen V3>B3
if gO[V3]==X3 then
set C3=V3
exitwhen true
endif
set V3=V3+1
endloop
if C3<=23 then
set N3=H3
set M3=0
set w1=0
set u1=bj_MAX_PLAYER_SLOTS-1
loop
exitwhen w1>u1
if gO[w1]==N3 then
set M3=w1
exitwhen true
endif
set w1=w1+1
endloop
set J3=jc[M3]
set K3=xc[M3]
set L3=vc[M3]
else
set J3=0
set K3=0
set L3=0
endif
set Eb=J3
set Zb=K3
set Ub=L3
set X3=null
set N3=null
return Eb
endfunction
function D3 takes player W3 returns string
local integer I3=r1(GetPlayerColor(W3))
local integer P3=Zb
local integer A3=Ub
local integer E3=I3/16
local integer Z3=P3/16
local integer U3=A3/16
return "|cff"+mc[E3]+mc[I3-E3*16]+mc[Z3]+mc[P3-Z3*16]+mc[U3]+mc[A3-U3*16]+GetPlayerName(W3)+"|r"
endfunction
function RC takes integer dC,integer fC returns integer
if dC==1 then
if fC==0 then
return 1747988529
elseif fC==1 then
return 1747990326
elseif fC==2 then
return 1747990084
elseif fC==3 then
return 1747989590
else
return 1747988529
endif
elseif dC==2 then
if fC==0 then
return 1747988530
elseif fC==1 then
return 1747990327
elseif fC==2 then
return 1747990087
elseif fC==3 then
return 1747989591
else
return 1747988530
endif
elseif dC==3 then
if fC==0 then
return 1747988531
elseif fC==1 then
return 1747990328
elseif fC==2 then
return 1747990085
elseif fC==3 then
return 1747989592
else
return 1747988531
endif
elseif fC==0 then
return 1747988529
elseif fC==1 then
return 1747990326
elseif fC==2 then
return 1747990084
elseif fC==3 then
return 1747989590
else
return 1747988529
endif
endfunction
function dV takes integer pV,integer eV,string qV returns nothing
local integer aV
local boolean nV
set Wb[Qb]=qV
set Qb=Qb+1
set aV=al
set Wb[Qb]="when calling has in City, line 183"
set Qb=Qb+1
if Tb[aV]==0 then
if aV==0 then
call g6("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call g6("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set nV=B8(aV,eV)
set Qb=Qb-1
if not nV then
set Qb=Qb-1
return
endif
set IS[pV]=ReplaceUnitBJ(IS[pV],eV,bj_UNIT_STATE_METHOD_RELATIVE)
set Qb=Qb-1
endfunction
function yV takes integer iV,string SV returns nothing
local integer cV
local integer oV
local integer OV
local integer lV
local integer bV
set Wb[Qb]=SV
set Qb=Qb+1
set cV=0
set oV=23
loop
exitwhen cV>oV
set OV=yO[cV]
set SV="when calling getSelectedCityId in City, line 239"
set Wb[Qb]="when calling getSelectedCityId in City, line 239"
set Qb=Qb+1
if kb[OV]==0 then
if OV==0 then
call g6("Nullpointer exception when calling PlayerStats.getSelectedCityId","when calling error in PlayerStats, line 84")
else
call g6("Called PlayerStats.getSelectedCityId on invalid object.","when calling error in PlayerStats, line 84")
endif
endif
set lV=aO[OV]
set Qb=Qb-1
if lV==AS[iV]then
set bV=yO[cV]
set Wb[Qb]="when calling refreshMultiboardCity in City, line 240"
set Qb=Qb+1
if kb[bV]==0 then
if bV==0 then
call g6("Nullpointer exception when calling PlayerStats.refreshMultiboardCity","when calling error in PlayerStats, line 43")
else
call g6("Called PlayerStats.refreshMultiboardCity on invalid object.","when calling error in PlayerStats, line 43")
endif
endif
call fiw(bV,"when calling refreshMultiboardCity in PlayerStats, line 43")
set Qb=Qb-1
endif
set cV=cV+1
endloop
set Qb=Qb-1
endfunction
function gV takes integer fV,integer RV,string TV returns nothing
local integer YV
local integer GV
set Wb[Qb]=TV
set Qb=Qb+1
if RV==PLAYER_NEUTRAL_AGGRESSIVE then
call SetUnitOwner(IS[fV],Player(RV),true)
set Wb[Qb]="when calling changeTaxLevelFORCED in City, line 192"
set Qb=Qb+1
if Ql[fV]==0 then
if fV==0 then
call g6("Nullpointer exception when calling City.changeTaxLevelFORCED","when calling error in City, line 259")
else
call g6("Called City.changeTaxLevelFORCED on invalid object.","when calling error in City, line 259")
endif
endif
set BS[fV]=BS[fV]-xS[MS[fV]]
set BS[fV]=BS[fV]+xS[0]
set MS[fV]=0
set Qb=Qb-1
else
call SetUnitOwner(IS[fV],dO[RV],true)
endif
set HS[fV]=RV
if RV>=0 and RV<24 then
set YV=yO[RV]
set Wb[Qb]="when calling getForceId in City, line 199"
set Qb=Qb+1
if kb[YV]==0 then
if YV==0 then
call g6("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 94")
else
call g6("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 94")
endif
endif
set GV=pO[YV]
set Qb=Qb-1
set DS[fV]=GV
endif
set Wb[Qb]="when calling refreshMultiboardIfPossible in City, line 201"
set Qb=Qb+1
if Ql[fV]==0 then
if fV==0 then
call g6("Nullpointer exception when calling City.refreshMultiboardIfPossible","when calling error in City, line 237")
else
call g6("Called City.refreshMultiboardIfPossible on invalid object.","when calling error in City, line 237")
endif
endif
call yV(fV,"when calling refreshMultiboardIfPossible in City, line 237")
set Qb=Qb-1-1
endfunction
function nC takes integer aC returns integer
if aC==1747988529 then
return 1
elseif aC==1747988530 then
return 2
elseif aC==1747988531 then
return 3
elseif aC==1747990326 then
return 1
elseif aC==1747990327 then
return 2
elseif aC==1747990328 then
return 3
elseif aC==1747990084 then
return 1
elseif aC==1747990087 then
return 2
elseif aC==1747990085 then
return 3
elseif aC==1747989590 then
return 1
elseif aC==1747989591 then
return 2
elseif aC==1747989592 then
return 3
else
return 1
endif
endfunction
function LV takes integer vV,player mV,string QV returns nothing
local integer WV
local integer EV
local unit ZV
local unit UV
local real IV
local integer PV
local integer AV
local integer DV
local integer HV
local boolean JV
local integer KV
set Wb[Qb]=QV
set Qb=Qb+1
set ZV=IS[vV]
call SetUnitState(ZV,UNIT_STATE_LIFE,GetUnitState(ZV,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,60.0)*0.01)
set UV=IS[vV]
call SetUnitState(UV,UNIT_STATE_MANA,GetUnitState(UV,UNIT_STATE_MAX_MANA)*RMaxBJ(0.,30.0)*0.01)
set Wb[Qb]="when calling addModifier in City, line 222"
set Qb=Qb+1
if Ql[vV]==0 then
if vV==0 then
call g6("Nullpointer exception when calling City.addModifier","when calling error in City, line 354")
else
call g6("Called City.addModifier on invalid object.","when calling error in City, line 354")
endif
endif
call tV(vV,0,"when calling addModifier in City, line 354")
set Qb=Qb-1
set IV=dS[opw(eS,6,"when calling get in City, line 223")]
if GetRandomReal(0.0,1.0)<=IV then
set Wb[Qb]="when calling addModifier in City, line 224"
set Qb=Qb+1
if Ql[vV]==0 then
if vV==0 then
call g6("Nullpointer exception when calling City.addModifier","when calling error in City, line 354")
else
call g6("Called City.addModifier on invalid object.","when calling error in City, line 354")
endif
endif
call tV(vV,6,"when calling addModifier in City, line 354")
set Qb=Qb-1
endif
set WV=DS[vV]
set EV=GetPlayerId(mV)
if EV>=0 and EV<24 then
set PV=yO[EV]
set Wb[Qb]="when calling getForceId in City, line 229"
set Qb=Qb+1
if kb[PV]==0 then
if PV==0 then
call g6("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 94")
else
call g6("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 94")
endif
endif
set AV=pO[PV]
set Qb=Qb-1
set WV=AV
endif
set DV=el
set HV=GetUnitTypeId(IS[vV])
set Wb[Qb]="when calling has in City, line 231"
set Qb=Qb+1
if Tb[DV]==0 then
if DV==0 then
call g6("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call g6("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set JV=B8(DV,HV)
set Qb=Qb-1
if JV then
set KV=RC(nC(GetUnitTypeId(IS[vV])),WV)
set Wb[Qb]="when calling replaceCity in City, line 232"
set Qb=Qb+1
if Ql[vV]==0 then
if vV==0 then
call g6("Nullpointer exception when calling City.replaceCity","when calling error in City, line 182")
else
call g6("Called City.replaceCity on invalid object.","when calling error in City, line 182")
endif
endif
call dV(vV,KV,"when calling replaceCity in City, line 182")
set Qb=Qb-1
call UnitAddAbility(IS[vV],1093677634)
endif
set Wb[Qb]="when calling changeOwner in City, line 235"
set Qb=Qb+1
if Ql[vV]==0 then
if vV==0 then
call g6("Nullpointer exception when calling City.changeOwner","when calling error in City, line 187")
else
call g6("Called City.changeOwner on invalid object.","when calling error in City, line 187")
endif
endif
call gV(vV,EV,"when calling changeOwner in City, line 187")
set Qb=Qb-1-1
set ZV=null
set UV=null
endfunction
function www takes string Kww,force Lww,string Xww returns nothing
local integer Cww
local integer Vww
local player Bww
local player Nww
local force Mww
set Wb[Qb]=Xww
set Qb=Qb+1
set Cww=0
set Vww=23
loop
exitwhen Cww>Vww
set Nww=dO[Cww]
set Mww=CreateForce()
call ForceAddPlayer(Mww,Nww)
if Mww==Lww then
set Bww=dO[Cww]
call DisplayTimedTextToPlayer(Bww,0.,0.,10.0,Dww(Bww,"when calling getAttentionStringForPlayer in Messages, line 116"))
call DisplayTimedTextToPlayer(Bww,0.,0.,10.0,Kww)
endif
set Cww=Cww+1
endloop
set Qb=Qb-1
set Bww=null
set Nww=null
set Mww=null
endfunction
function EX takes integer nX,string dX returns nothing
local unit fX
local integer RX
local integer TX
local integer YX
local boolean GX
local unit gX
local integer hX
local integer FX
local player kX
local boolean jX
local boolean xX
local real vX
local real mX
local real QX
local real WX
set Wb[Qb]=dX
set Qb=Qb+1
set fX=GetTriggerUnit()
set Wb[Qb]="when calling isCity in CityManage, line 36"
set Qb=Qb+1
set Wb[Qb]="when calling isCity in UnitTools, line 5"
set Qb=Qb+1
set TX=al
set YX=GetUnitTypeId(fX)
set Wb[Qb]="when calling has in City, line 422"
set Qb=Qb+1
if Tb[TX]==0 then
if TX==0 then
call g6("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call g6("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set GX=B8(TX,YX)
set Qb=Qb-1-1-1
if GX then
if GetUnitStatePercent(fX,UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)<=50.0 then
set xX=GetOwningPlayer(fX)!=GetOwningPlayer(GetAttacker())
else
set xX=false
endif
if xX then
set vX=GetUnitX(fX)
set mX=GetUnitY(fX)
set gX=GetAttacker()
set QX=vX-GetUnitX(gX)
set WX=mX-GetUnitY(gX)
if SquareRoot(QX*QX+WX*WX)>300.0 then
call SetUnitState(fX,UNIT_STATE_LIFE,GetUnitState(fX,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,50.0)*0.01)
else
set Wb[Qb]="when calling getCityId in CityManage, line 41"
set Qb=Qb+1
set hX=kC(fX,"when calling getCityId in UnitTools, line 9")
set Qb=Qb-1
set FX=QS[hX]
set kX=GetOwningPlayer(GetAttacker())
set Wb[Qb]="when calling capture in CityManage, line 42"
set Qb=Qb+1
if Ql[FX]==0 then
if FX==0 then
call g6("Nullpointer exception when calling City.capture","when calling error in City, line 218")
else
call g6("Called City.capture on invalid object.","when calling error in City, line 218")
endif
endif
call LV(FX,kX,"when calling capture in City, line 218")
set Qb=Qb-1
set RX=GetUnitTypeId(fX)
set nX=el
set Wb[Qb]="when calling has in CityManage, line 44"
set Qb=Qb+1
if Tb[nX]==0 then
if nX==0 then
call g6("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call g6("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set jX=B8(nX,RX)
set Qb=Qb-1
if jX then
call www(D3(GetOwningPlayer(GetAttacker()))+" has just captured "+D3(GetOwningPlayer(GetTriggerUnit()))+" Capitol!",bj_FORCE_ALL_PLAYERS,"when calling attentionToForce in CityManage, line 45")
endif
endif
elseif GetUnitStatePercent(fX,UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)<=50.0 then
call SetUnitState(fX,UNIT_STATE_LIFE,GetUnitState(fX,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,50.0)*0.01)
endif
endif
set Qb=Qb-1
set fX=null
set gX=null
set kX=null
endfunction
function R8 takes integer a8 returns nothing
local unit n8=GetConstructingStructure()
local player d8
local player f8
if GetUnitTypeId(n8)==1747990614 then
set d8=GetOwningPlayer(n8)
set f8=GetOwningPlayer(n8)
set yo[GetPlayerId(d8)]=yo[GetPlayerId(f8)]-1
endif
set n8=null
set d8=null
set f8=null
endfunction
function jww takes player Gww,string gww returns string
local integer hww
local integer Fww
local integer kww
set Wb[Qb]=gww
set Qb=Qb+1
set Fww=yO[GetPlayerId(Gww)]
set Wb[Qb]="when calling getForceId in Messages, line 21"
set Qb=Qb+1
if kb[Fww]==0 then
if Fww==0 then
call g6("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 94")
else
call g6("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 94")
endif
endif
set kww=pO[Fww]
set Qb=Qb-1
set hww=GetRandomInt(0,2)
if kww==0 then
set gww=PO[hww]
elseif kww==1 then
set gww=AO[hww]
elseif kww==2 then
set gww=DO[hww]
elseif kww==3 then
set gww=HO[hww]
else
set gww="Note:"
endif
set Qb=Qb-1
return "|cff00ccff"+gww+"|r"
endfunction
function NV takes integer XV,integer CV,string VV returns nothing
local player BV
set Wb[Qb]=VV
set Qb=Qb+1
if Qo-wc[XV]>=hS then
set wc[XV]=Qo
set BS[XV]=BS[XV]-xS[MS[XV]]
set BS[XV]=BS[XV]+xS[CV]
set MS[XV]=CV
else
set BV=dO[HS[XV]]
set Wb[Qb]="when calling noteToPlayer in City, line 257"
set Qb=Qb+1
call DisplayTimedTextToPlayer(BV,0.,0.,10.0,jww(BV,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(BV,0.,0.,10.0,"Wait 1 turn to be able to change tax level.")
set Qb=Qb-1
endif
set Qb=Qb-1
set BV=null
endfunction
function Sow takes integer Ccw,string Vcw returns nothing
local integer Bcw
local integer Ncw
local integer Mcw
local boolean wow
local unit uow
local integer row
local integer sow
local boolean tow
local integer iow
set Wb[Qb]=Vcw
set Qb=Qb+1
set Ccw=uS
set Mcw=GetSpellAbilityId()
set Wb[Qb]="when calling has in Taxation, line 7"
set Qb=Qb+1
if Tb[Ccw]==0 then
if Ccw==0 then
call g6("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call g6("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set wow=B8(Ccw,Mcw)
set Qb=Qb-1
if wow then
set uow=GetSpellTargetUnit()
set Wb[Qb]="when calling isCity in Taxation, line 8"
set Qb=Qb+1
set row=al
set sow=GetUnitTypeId(uow)
set Wb[Qb]="when calling has in City, line 422"
set Qb=Qb+1
if Tb[row]==0 then
if row==0 then
call g6("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call g6("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set tow=B8(row,sow)
set Qb=Qb-1-1
if tow then
if GetOwningPlayer(GetSpellTargetUnit())==GetOwningPlayer(GetSpellAbilityUnit()) then
set Bcw=0
set Ncw=GetSpellAbilityId()
if Ncw==1093677642 then
set Bcw=1
elseif Ncw==1093677641 then
set Bcw=0
elseif Ncw==1093677640 then
set Bcw=2
elseif Ncw==1093678155 then
set Bcw=3
endif
set iow=QS[kC(GetSpellTargetUnit(),"when calling getCityId in Taxation, line 20")]
set Wb[Qb]="when calling changeTaxLevel in Taxation, line 20"
set Qb=Qb+1
if Ql[iow]==0 then
if iow==0 then
call g6("Nullpointer exception when calling City.changeTaxLevel","when calling error in City, line 248")
else
call g6("Called City.changeTaxLevel on invalid object.","when calling error in City, line 248")
endif
endif
call NV(iow,Bcw,"when calling changeTaxLevel in City, line 248")
set Qb=Qb-1
endif
endif
endif
set Qb=Qb-1
set uow=null
endfunction
function i9 takes string s9 returns integer
local integer t9
set Wb[Qb]=s9
set Qb=Qb+1
set Wb[Qb]="when calling LinkedList in LinkedList, line 31"
set Qb=Qb+1
if fb==0 then
if Rb<32768 then
set Rb=Rb+1
set t9=Rb
set Tb[t9]=701
else
call g6("Out of memory: Could not create LinkedList.","when calling error in LinkedList, line 17")
set t9=0
endif
else
set fb=fb-1
set t9=db[fb]
set Tb[t9]=701
endif
set Qb=Qb-1
set Wb[Qb]="when calling construct_LinkedList2 in LinkedList, line 31"
set Qb=Qb+1
set Yo[t9]=Z8(0,0,0,"when calling new_LLEntry in LinkedList, line 18")
set Go[t9]=0
set no[Yo[t9]]=Yo[t9]
set ao[Yo[t9]]=Yo[t9]
set Qb=Qb-1-1
return t9
endfunction
function mpw takes integer gpw,integer hpw,string Fpw returns integer
local integer kpw
local integer jpw
local integer xpw
local integer vpw
set Wb[Qb]=Fpw
set Qb=Qb+1
if Tb[gpw]==0 then
if gpw==0 then
call g6("Nullpointer exception when calling LinkedList.get","when calling error in LinkedList, line 50")
else
call g6("Called LinkedList.get on invalid object.","when calling error in LinkedList, line 50")
endif
endif
set Wb[Qb]="when calling get in LinkedList, line 50"
set Qb=Qb+1
set Wb[Qb]="when calling getEntry in LinkedList, line 51"
set Qb=Qb+1
if Tb[gpw]==0 then
if gpw==0 then
call g6("Nullpointer exception when calling LinkedList.getEntry","when calling error in LinkedList, line 366")
else
call g6("Called LinkedList.getEntry on invalid object.","when calling error in LinkedList, line 366")
endif
endif
set jpw=Yo[gpw]
set xpw=0
set vpw=hpw
loop
exitwhen xpw>vpw
set jpw=no[jpw]
set xpw=xpw+1
endloop
set Qb=Qb-1
set kpw=qo[jpw]
set Qb=Qb-1-1
return kpw
endfunction
function Lyw takes integer Dyw,integer Hyw,string Jyw returns boolean
local integer Kyw
set Wb[Qb]=Jyw
set Qb=Qb+1
if sb[Dyw]==0 then
if Dyw==0 then
call g6("Nullpointer exception when calling HashList.has","when calling error in HashList, line 87")
else
call g6("Called HashList.has on invalid object.","when calling error in HashList, line 87")
endif
endif
set Wb[Qb]="when calling has in HashList, line 87"
set Qb=Qb+1
set Wb[Qb]="when calling count in HashList, line 88"
set Qb=Qb+1
if sb[Dyw]==0 then
if Dyw==0 then
call g6("Nullpointer exception when calling HashList.count","when calling error in HashList, line 15")
else
call g6("Called HashList.count on invalid object.","when calling error in HashList, line 15")
endif
endif
set Kyw=LoadInteger(So,Dyw,Hyw)
set Qb=Qb-1
set Qb=Qb-1-1
return Kyw>0
endfunction
function U6 takes integer m6,integer Q6,string W6 returns nothing
local hashtable E6
local integer Z6
set Wb[Qb]=W6
set Qb=Qb+1
set E6=So
set Wb[Qb]="when calling count in HashList, line 19"
set Qb=Qb+1
if sb[m6]==0 then
if m6==0 then
call g6("Nullpointer exception when calling HashList.count","when calling error in HashList, line 15")
else
call g6("Called HashList.count on invalid object.","when calling error in HashList, line 15")
endif
endif
set Z6=LoadInteger(So,m6,Q6)
set Qb=Qb-1
call SaveInteger(E6,m6,Q6,Z6+1)
set Qb=Qb-1
set E6=null
endfunction
function Bpw takes integer Xpw,integer Cpw,string Vpw returns nothing
set Wb[Qb]=Vpw
set Qb=Qb+1
call SaveInteger(io,Xpw,co[Xpw],Cpw)
set Wb[Qb]="when calling incrOccurences in HashList, line 28"
set Qb=Qb+1
if sb[Xpw]==0 then
if Xpw==0 then
call g6("Nullpointer exception when calling HashList.incrOccurences","when calling error in HashList, line 18")
else
call g6("Called HashList.incrOccurences on invalid object.","when calling error in HashList, line 18")
endif
endif
call U6(Xpw,Cpw,"when calling incrOccurences in HashList, line 18")
set Qb=Qb-1
set co[Xpw]=co[Xpw]+1
set Qb=Qb-1
endfunction
function tew takes integer Npw,integer Mpw,string wew returns nothing
local integer uew
local hashtable rew
local integer sew
set Wb[Qb]=wew
set Qb=Qb+1
set Wb[Qb]="when calling count in HashSet, line 11"
set Qb=Qb+1
if sb[Npw]==0 then
if Npw==0 then
call g6("Nullpointer exception when calling HashList.count","when calling error in HashList, line 15")
else
call g6("Called HashList.count on invalid object.","when calling error in HashList, line 15")
endif
endif
set uew=LoadInteger(So,Npw,Mpw)
set Qb=Qb-1
if uew<=0 then
set rew=Oo
set Wb[Qb]="when calling size in HashSet, line 12"
set Qb=Qb+1
if sb[Npw]==0 then
if Npw==0 then
call g6("Nullpointer exception when calling HashList.size","when calling error in HashList, line 67")
else
call g6("Called HashList.size on invalid object.","when calling error in HashList, line 67")
endif
endif
set sew=co[Npw]
set Qb=Qb-1
call SaveInteger(rew,Npw,Mpw,sew)
call Bpw(Npw,Mpw,"when calling add in HashSet, line 13")
endif
set Qb=Qb-1
set rew=null
endfunction
function oew takes integer iew,integer Sew,string cew returns nothing
set Wb[Qb]=cew
set Qb=Qb+1
if sb[iew]==0 then
if iew==0 then
call g6("Nullpointer exception when calling HashList.add","when calling error in HashList, line 25")
else
call g6("Called HashList.add on invalid object.","when calling error in HashList, line 25")
endif
endif
if sb[iew]<=690 then
call Bpw(iew,Sew,"when calling add in HashList, line 25")
else
call tew(iew,Sew,"when calling add in HashList, line 25")
endif
set Qb=Qb-1
endfunction
function c7 takes integer r7,integer s7,integer t7,string i7 returns nothing
local boolean S7
set Wb[Qb]=i7
set Qb=Qb+1
set Wb[Qb]="when calling put in HashMap, line 48"
set Qb=Qb+1
set Wb[Qb]="when calling saveInt in HashMap, line 16"
set Qb=Qb+1
if cb[r7]==0 then
if r7==0 then
call g6("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call g6("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(wl,r7,s7,t7)
set Qb=Qb-1-1
set Wb[Qb]="when calling hasKey in HashMap, line 49"
set Qb=Qb+1
if cb[r7]==0 then
if r7==0 then
call g6("Nullpointer exception when calling IterableMap.hasKey","when calling error in HashMap, line 75")
else
call g6("Called IterableMap.hasKey on invalid object.","when calling error in HashMap, line 75")
endif
endif
set Wb[Qb]="when calling hasKey in HashMap, line 75"
set Qb=Qb+1
set S7=Lyw(oo[r7],s7,"when calling has in HashMap, line 76")
set Qb=Qb-1-1
if not S7 then
call oew(oo[r7],s7,"when calling add in HashMap, line 50")
endif
set Qb=Qb-1
endfunction
function spw takes integer Myw,integer wpw,integer upw,string rpw returns nothing
set Wb[Qb]=rpw
set Qb=Qb+1
if cb[Myw]==0 then
if Myw==0 then
call g6("Nullpointer exception when calling HashMap.put","when calling error in HashMap, line 15")
else
call g6("Called HashMap.put on invalid object.","when calling error in HashMap, line 15")
endif
endif
if cb[Myw]<=726 then
set Wb[Qb]="when calling put in HashMap, line 15"
set Qb=Qb+1
set Wb[Qb]="when calling saveInt in HashMap, line 16"
set Qb=Qb+1
if cb[Myw]==0 then
if Myw==0 then
call g6("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call g6("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(wl,Myw,wpw,upw)
set Qb=Qb-1-1
else
call c7(Myw,wpw,upw,"when calling put in HashMap, line 15")
endif
set Qb=Qb-1
endfunction
function W0w takes integer h0w,string F0w returns nothing
local integer k0w
local unit j0w
local player x0w
local real v0w
local real m0w
local real Q0w
set Wb[Qb]=F0w
set Qb=Qb+1
if GetSpellAbilityId()==1093678154 then
set k0w=i9("when calling new_LinkedList in MassControl, line 24")
set j0w=GetSpellAbilityUnit()
set x0w=GetOwningPlayer(j0w)
set m0w=GetSpellTargetX()
set Q0w=GetSpellTargetY()
set v0w=mpw(Ao,GetLearnedSkillLevel(),"when calling get in MassControl, line 27")/1000.
set Wb[Qb]="when calling alloc_Closure in MassControl, line 27"
set Qb=Qb+1
if El==0 then
if Zl<32768 then
set Zl=Zl+1
set h0w=Zl
set Ul[h0w]=685
else
call g6("Out of memory: Could not create Closure.","when calling error in MassControl, line 27")
set h0w=0
endif
else
set El=El-1
set h0w=Wl[El]
set Ul[h0w]=685
endif
set Qb=Qb-1
set Ho[h0w]=x0w
set Jo[h0w]=j0w
set Ko[h0w]=k0w
call e3(m0w,Q0w,v0w,h0w,"when calling forUnitsInRange in MassControl, line 27")
call spw(Po,GetHandleId(j0w),k0w,"when calling put in MassControl, line 30")
endif
set Qb=Qb-1
set j0w=null
set x0w=null
endfunction
function Zlw takes integer jlw,string xlw returns nothing
local unit vlw
local player mlw
local integer Qlw
local integer Wlw
local boolean Elw
set Wb[Qb]=xlw
set Qb=Qb+1
set vlw=GetDyingUnit()
set jlw=GetPlayerId(GetOwningPlayer(vlw))
set mlw=dO[jlw]
if GetPlayerSlotState(mlw)==PLAYER_SLOT_STATE_PLAYING then
set Elw=GetPlayerController(mlw)==MAP_CONTROL_USER
else
set Elw=false
endif
if Elw and(not IsUnitType(vlw,UNIT_TYPE_STRUCTURE)) then
set Qlw=yO[jlw]
set Wlw=GetUnitLevel(vlw)
set Wb[Qb]="when calling changeUpkeep in Upkeep, line 19"
set Qb=Qb+1
if kb[Qlw]==0 then
if Qlw==0 then
call g6("Nullpointer exception when calling PlayerStats.changeUpkeep","when calling error in PlayerStats, line 23")
else
call g6("Called PlayerStats.changeUpkeep on invalid object.","when calling error in PlayerStats, line 23")
endif
endif
set nO[Qlw]=nO[Qlw]+Wlw
set Qb=Qb-1
endif
set Qb=Qb-1
set vlw=null
set mlw=null
endfunction
function c8 takes integer u8,string r8 returns nothing
local unit s8
local player t8
local player i8
local player S8
set Wb[Qb]=r8
set Qb=Qb+1
set s8=GetConstructingStructure()
if GetUnitTypeId(s8)==1747988808 then
if lo[GetPlayerId(GetOwningPlayer(s8))]<3 then
set t8=GetOwningPlayer(s8)
set i8=GetOwningPlayer(s8)
set lo[GetPlayerId(t8)]=lo[GetPlayerId(i8)]+1
else
set S8=GetOwningPlayer(s8)
set Wb[Qb]="when calling attentionToPlayer in LimitEncampments, line 18"
set Qb=Qb+1
call DisplayTimedTextToPlayer(S8,0.,0.,10.0,Dww(S8,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(S8,0.,0.,10.0,"You cannot build more than 3 encampments.")
set Qb=Qb-1
set Wb[Qb]="when calling alloc_Closure in LimitEncampments, line 19"
set Qb=Qb+1
if Pl==0 then
if Al<32768 then
set Al=Al+1
set u8=Al
set Dl[u8]=645
else
call g6("Out of memory: Could not create Closure.","when calling error in LimitEncampments, line 19")
set u8=0
endif
else
set Pl=Pl-1
set u8=Il[Pl]
set Dl[u8]=645
endif
set Qb=Qb-1
set bo[u8]=s8
set Wb[Qb]="when calling doAfter in LimitEncampments, line 19"
set Qb=Qb+1
set Wb[Qb]="when calling start in ClosureTimers, line 15"
set Qb=Qb+1
if Dl[u8]==0 then
if u8==0 then
call g6("Nullpointer exception when calling CallbackSingle.start","when calling error in ClosureTimers, line 67")
else
call g6("Called CallbackSingle.start on invalid object.","when calling error in ClosureTimers, line 67")
endif
endif
call g3(u8,0.01,"when calling start in ClosureTimers, line 67")
set Qb=Qb-1-1
endif
endif
set Qb=Qb-1
set s8=null
set t8=null
set i8=null
set S8=null
endfunction
function vOw takes unit gOw,unit hOw returns real
local real FOw=GetUnitX(gOw)
local real kOw=GetUnitY(gOw)
local real jOw=FOw-GetUnitX(hOw)
local real xOw=kOw-GetUnitY(hOw)
return SquareRoot(jOw*jOw+xOw*xOw)
endfunction
function gSw takes integer iSw,string SSw returns nothing
local unit cSw
local integer oSw
local player OSw
local group lSw
local boolean bSw
local location ySw
local group pSw
local unit eSw
local integer qSw
local boolean aSw
local integer nSw
local integer dSw
local boolean fSw
local integer RSw
local boolean TSw
local boolean YSw
local boolean GSw
set Wb[Qb]=SSw
set Qb=Qb+1
set cSw=GetTriggerUnit()
set oSw=GetUnitTypeId(cSw)
set iSw=kO
set Wb[Qb]="when calling has in RangeChecks, line 13"
set Qb=Qb+1
if Tb[iSw]==0 then
if iSw==0 then
call g6("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call g6("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set bSw=B8(iSw,oSw)
set Qb=Qb-1
if bSw then
set OSw=GetOwningPlayer(cSw)
set ySw=GetUnitLoc(cSw)
set pSw=CreateGroup()
call GroupEnumUnitsInRangeOfLoc(pSw,ySw,3000.0,null)
call DestroyBoolExpr(null)
set so=CreateGroup()
call ForGroup(pSw,gf)
set lSw=so
loop
exitwhen FirstOfGroup(lSw)==null
set eSw=FirstOfGroup(lSw)
call GroupRemoveUnit(lSw,eSw)
if GetOwningPlayer(eSw)==OSw and eSw!=cSw then
if GetUnitTypeId(eSw)==oSw and vOw(eSw,cSw)<=1500 then
set YSw=true
else
set qSw=ql
set Wb[Qb]="when calling has in RangeChecks, line 20"
set Qb=Qb+1
if Tb[qSw]==0 then
if qSw==0 then
call g6("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call g6("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set aSw=B8(qSw,oSw)
set Qb=Qb-1
if aSw then
set nSw=ql
set dSw=GetUnitTypeId(eSw)
set Wb[Qb]="when calling has in RangeChecks, line 20"
set Qb=Qb+1
if Tb[nSw]==0 then
if nSw==0 then
call g6("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call g6("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set fSw=B8(nSw,dSw)
set Qb=Qb-1
set TSw=fSw
else
set TSw=false
endif
set YSw=TSw
endif
set GSw=YSw
else
set GSw=false
endif
if GSw then
set Wb[Qb]="when calling alloc_Closure in RangeChecks, line 22"
set Qb=Qb+1
if Pl==0 then
if Al<32768 then
set Al=Al+1
set RSw=Al
set Dl[RSw]=652
else
call g6("Out of memory: Could not create Closure.","when calling error in RangeChecks, line 22")
set RSw=0
endif
else
set Pl=Pl-1
set RSw=Il[Pl]
set Dl[RSw]=652
endif
set Qb=Qb-1
set jO[RSw]=cSw
set Wb[Qb]="when calling doAfter in RangeChecks, line 22"
set Qb=Qb+1
set Wb[Qb]="when calling start in ClosureTimers, line 15"
set Qb=Qb+1
if Dl[RSw]==0 then
if RSw==0 then
call g6("Nullpointer exception when calling CallbackSingle.start","when calling error in ClosureTimers, line 67")
else
call g6("Called CallbackSingle.start on invalid object.","when calling error in ClosureTimers, line 67")
endif
endif
call g3(RSw,0.01,"when calling start in ClosureTimers, line 67")
set Qb=Qb-1-1
if oSw==1747988557 then
set Wb[Qb]="when calling attentionToPlayer in RangeChecks, line 26"
set Qb=Qb+1
call DisplayTimedTextToPlayer(OSw,0.,0.,10.0,Dww(OSw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(OSw,0.,0.,10.0,"You cannot build settlements too close to each other.")
set Qb=Qb-1
elseif oSw==1747989075 then
set Wb[Qb]="when calling attentionToPlayer in RangeChecks, line 28"
set Qb=Qb+1
call DisplayTimedTextToPlayer(OSw,0.,0.,10.0,Dww(OSw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(OSw,0.,0.,10.0,"You cannot build churches too close to each other.")
set Qb=Qb-1
elseif oSw==1747990102 then
set Wb[Qb]="when calling attentionToPlayer in RangeChecks, line 30"
set Qb=Qb+1
call DisplayTimedTextToPlayer(OSw,0.,0.,10.0,Dww(OSw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(OSw,0.,0.,10.0,"You cannot build churches too close to each other.")
set Qb=Qb-1
elseif oSw==1747988785 then
set Wb[Qb]="when calling attentionToPlayer in RangeChecks, line 32"
set Qb=Qb+1
call DisplayTimedTextToPlayer(OSw,0.,0.,10.0,Dww(OSw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(OSw,0.,0.,10.0,"You cannot build churches too close to each other.")
set Qb=Qb-1
elseif oSw==1747989839 then
set Wb[Qb]="when calling attentionToPlayer in RangeChecks, line 34"
set Qb=Qb+1
call DisplayTimedTextToPlayer(OSw,0.,0.,10.0,Dww(OSw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(OSw,0.,0.,10.0,"You cannot build mosques too close to each other.")
set Qb=Qb-1
elseif oSw==1747989059 then
set Wb[Qb]="when calling attentionToPlayer in RangeChecks, line 36"
set Qb=Qb+1
call DisplayTimedTextToPlayer(OSw,0.,0.,10.0,Dww(OSw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(OSw,0.,0.,10.0,"You cannot build castles too close to each other.")
set Qb=Qb-1
elseif oSw==1747989331 then
set Wb[Qb]="when calling attentionToPlayer in RangeChecks, line 38"
set Qb=Qb+1
call DisplayTimedTextToPlayer(OSw,0.,0.,10.0,Dww(OSw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(OSw,0.,0.,10.0,"You cannot build castles too close to each other.")
set Qb=Qb-1
elseif oSw==1747990351 then
set Wb[Qb]="when calling attentionToPlayer in RangeChecks, line 40"
set Qb=Qb+1
call DisplayTimedTextToPlayer(OSw,0.,0.,10.0,Dww(OSw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(OSw,0.,0.,10.0,"You cannot build castles too close to each other.")
set Qb=Qb-1
elseif oSw==1747990353 then
set SSw="when calling attentionToPlayer in RangeChecks, line 42"
set Wb[Qb]="when calling attentionToPlayer in RangeChecks, line 42"
set Qb=Qb+1
call DisplayTimedTextToPlayer(OSw,0.,0.,10.0,Dww(OSw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(OSw,0.,0.,10.0,"You cannot build castles too close to each other.")
set Qb=Qb-1
elseif oSw==1747988568 then
set Wb[Qb]="when calling attentionToPlayer in RangeChecks, line 44"
set Qb=Qb+1
call DisplayTimedTextToPlayer(OSw,0.,0.,10.0,Dww(OSw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(OSw,0.,0.,10.0,"You cannot build inns too close to each other.")
set Qb=Qb-1
elseif oSw==1747990341 then
set Wb[Qb]="when calling attentionToPlayer in RangeChecks, line 46"
set Qb=Qb+1
call DisplayTimedTextToPlayer(OSw,0.,0.,10.0,Dww(OSw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(OSw,0.,0.,10.0,"You cannot build inns too close to each other.")
set Qb=Qb-1
endif
exitwhen true
endif
endloop
call GroupClear(lSw)
call DestroyGroup(lSw)
endif
set Qb=Qb-1
set cSw=null
set OSw=null
set lSw=null
set ySw=null
set pSw=null
set eSw=null
endfunction
function eww takes real Oww,real lww,real bww,real yww,real pww returns real
set bww=GetRandomReal(bww,yww)
return (Oww+lww)/2.+oww(bww)*Pow(2.718281828,-(Pow(bww,2.)/2.*pww))/SquareRoot(6.283185482*pww)*((lww-Oww)/2.)
endfunction
function f3 takes integer a3,real n3,string d3 returns nothing
set Wb[Qb]=d3
set Qb=Qb+1
set Fc[a3]=Yow("when calling getTimer in ClosureTimers, line 89")
call pow(Fc[a3],a3,"when calling setData in ClosureTimers, line 90")
call TimerStart(Fc[a3],n3,true,yf)
set Qb=Qb-1
endfunction
function pN takes integer NB,unit MB,string wN,integer uN,integer rN,string sN returns nothing
local real tN
local real iN
local unit SN
local player cN
local real oN
local integer ON
local integer lN
local real bN
local real yN
set Wb[Qb]=sN
set Qb=Qb+1
set MS[NB]=0
set wc[NB]=0.
set uc[NB]=i9("when calling new_LinkedList in City, line 103")
set NS[NB]=1.0
set IS[NB]=MB
set SN=IS[NB]
set bN=GetUnitX(SN)
set yN=GetUnitY(SN)
set JS[NB]=bN
set KS[NB]=yN
set PS[NB]=wN
set DS[NB]=uN
set cN=GetOwningPlayer(IS[NB])
set HS[NB]=GetPlayerId(cN)
set PS[NB]=SubString(wN,0,24)
set AS[NB]=gS
set gS=gS+1
set CS[NB]=eww(FS[0],FS[1],-5.0,5.0,0.15)
set oN=eww(mpw(kS[rN],0,"when calling get in City, line 121")*1.,mpw(kS[rN],1,"when calling get in City, line 121")*1.,-5.0,5.0,0.15)
set LS[NB]=R2I(oN)
set BS[NB]=0.
set tN=2.5+GetRandomReal(2.5,5.0)
set Wb[Qb]="when calling alloc_Closure in City, line 126"
set Qb=Qb+1
if Jl==0 then
if Kl<32768 then
set Kl=Kl+1
set ON=Kl
set Ll[ON]=631
else
call g6("Out of memory: Could not create Closure.","when calling error in City, line 126")
set ON=0
endif
else
set Jl=Jl-1
set ON=Hl[Jl]
set Ll[ON]=631
endif
set Qb=Qb-1
set rc[ON]=NB
set Wb[Qb]="when calling doPeriodically in City, line 126"
set Qb=Qb+1
set Wb[Qb]="when calling start in ClosureTimers, line 36"
set Qb=Qb+1
if Ll[ON]==0 then
if ON==0 then
call g6("Nullpointer exception when calling CallbackPeriodic.start","when calling error in ClosureTimers, line 88")
else
call g6("Called CallbackPeriodic.start on invalid object.","when calling error in ClosureTimers, line 88")
endif
endif
call f3(ON,tN,"when calling start in ClosureTimers, line 88")
set Qb=Qb-1-1
set iN=60+GetRandomReal(60,120.0)
set Wb[Qb]="when calling alloc_Closure in City, line 142"
set Qb=Qb+1
if Jl==0 then
if Kl<32768 then
set Kl=Kl+1
set lN=Kl
set Ll[lN]=632
else
call g6("Out of memory: Could not create Closure.","when calling error in City, line 142")
set lN=0
endif
else
set Jl=Jl-1
set lN=Hl[Jl]
set Ll[lN]=632
endif
set Qb=Qb-1
set sc[lN]=NB
set Wb[Qb]="when calling doPeriodically in City, line 142"
set Qb=Qb+1
set Wb[Qb]="when calling start in ClosureTimers, line 36"
set Qb=Qb+1
if Ll[lN]==0 then
if lN==0 then
call g6("Nullpointer exception when calling CallbackPeriodic.start","when calling error in ClosureTimers, line 88")
else
call g6("Called CallbackPeriodic.start on invalid object.","when calling error in ClosureTimers, line 88")
endif
endif
call f3(lN,iN,"when calling start in ClosureTimers, line 88")
set Qb=Qb-1-1-1
set SN=null
set cN=null
endfunction
function BB takes unit JB,string KB,integer LB,integer XB,string CB returns integer
local integer VB
set Wb[Qb]=CB
set Qb=Qb+1
set Wb[Qb]="when calling City in City, line 100"
set Qb=Qb+1
if vl==0 then
if ml<32768 then
set ml=ml+1
set VB=ml
set Ql[VB]=653
else
call g6("Out of memory: Could not create City.","when calling error in City, line 70")
set VB=0
endif
else
set vl=vl-1
set VB=xl[vl]
set Ql[VB]=653
endif
set Qb=Qb-1
call pN(VB,JB,KB,LB,XB,"when calling construct_City in City, line 100")
set Qb=Qb-1
return VB
endfunction
function hL takes integer nL,string dL returns nothing
local unit fL
local integer RL
local boolean TL
local integer YL
local integer GL
local unit gL
set Wb[Qb]=dL
set Qb=Qb+1
set fL=GetConstructedStructure()
set Wb[Qb]="when calling isCity in CityBuilded, line 10"
set Qb=Qb+1
set Wb[Qb]="when calling isCity in UnitTools, line 5"
set Qb=Qb+1
set RL=al
set nL=GetUnitTypeId(fL)
set Wb[Qb]="when calling has in City, line 422"
set Qb=Qb+1
if Tb[RL]==0 then
if RL==0 then
call g6("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call g6("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set TL=B8(RL,nL)
set Qb=Qb-1-1-1
if TL then
set gL=GetConstructedStructure()
set YL=yO[GetPlayerId(GetOwningPlayer(GetConstructedStructure()))]
set Wb[Qb]="when calling getForceId in CityBuilded, line 11"
set Qb=Qb+1
if kb[YL]==0 then
if YL==0 then
call g6("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 94")
else
call g6("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 94")
endif
endif
set GL=pO[YL]
set Qb=Qb-1
set QS[gS]=BB(gL,"New",GL,1,"when calling new_City in CityBuilded, line 11")
endif
set Qb=Qb-1
set fL=null
set gL=null
endfunction
function Jww takes string Hww returns nothing
if (not xo)and(not vo) then
return
endif
call DisplayTimedTextToPlayer(dO[0],0.,0.,60.,Hww)
endfunction
function Kow takes integer Uow,string Iow returns unit
local integer Aow
local fogstate Dow
local integer How
local unit Jow
set Wb[Qb]=Iow
set Qb=Qb+1
set Aow=tl
set Dow=ConvertFogState(Uow)
set Wb[Qb]="when calling saveFogState in TypeCasting, line 46"
set Qb=Qb+1
if cb[Aow]==0 then
if Aow==0 then
call g6("Nullpointer exception when calling Table.saveFogState","when calling error in Table, line 168")
else
call g6("Called Table.saveFogState on invalid object.","when calling error in Table, line 168")
endif
endif
call SaveFogStateHandle(wl,Aow,0,Dow)
set Qb=Qb-1
set How=tl
set Wb[Qb]="when calling loadUnit in TypeCasting, line 47"
set Qb=Qb+1
if cb[How]==0 then
if How==0 then
call g6("Nullpointer exception when calling Table.loadUnit","when calling error in Table, line 75")
else
call g6("Called Table.loadUnit on invalid object.","when calling error in Table, line 75")
endif
endif
set Jow=LoadUnitHandle(wl,How,0)
set Qb=Qb-1-1
set Qf=Jow
set Dow=null
set Jow=null
return Qf
endfunction
function Nyw takes integer Xyw,integer Cyw,string Vyw returns boolean
local boolean Byw
set Wb[Qb]=Vyw
set Qb=Qb+1
if cb[Xyw]==0 then
if Xyw==0 then
call g6("Nullpointer exception when calling HashMap.has","when calling error in HashMap, line 11")
else
call g6("Called HashMap.has on invalid object.","when calling error in HashMap, line 11")
endif
endif
set Wb[Qb]="when calling has in HashMap, line 11"
set Qb=Qb+1
set Wb[Qb]="when calling hasInt in HashMap, line 12"
set Qb=Qb+1
if cb[Xyw]==0 then
if Xyw==0 then
call g6("Nullpointer exception when calling Table.hasInt","when calling error in Table, line 9")
else
call g6("Called Table.hasInt on invalid object.","when calling error in Table, line 9")
endif
endif
set Byw=HaveSavedInteger(wl,Xyw,Cyw)
set Qb=Qb-1-1-1
return Byw
endfunction
function J6 takes integer I6,integer P6,string A6 returns nothing
local hashtable D6
local integer H6
set Wb[Qb]=A6
set Qb=Qb+1
set D6=So
set Wb[Qb]="when calling count in HashList, line 22"
set Qb=Qb+1
if sb[I6]==0 then
if I6==0 then
call g6("Nullpointer exception when calling HashList.count","when calling error in HashList, line 15")
else
call g6("Called HashList.count on invalid object.","when calling error in HashList, line 15")
endif
endif
set H6=LoadInteger(So,I6,P6)
set Qb=Qb-1
call SaveInteger(D6,I6,P6,H6-1)
set Qb=Qb-1
set D6=null
endfunction
function N6 takes integer K6,integer L6,string X6 returns nothing
local integer C6
local integer V6
local integer B6
set Wb[Qb]=X6
set Qb=Qb+1
set B6=LoadInteger(io,K6,L6)
set Wb[Qb]="when calling decrOccurences in HashList, line 54"
set Qb=Qb+1
if sb[K6]==0 then
if K6==0 then
call g6("Nullpointer exception when calling HashList.decrOccurences","when calling error in HashList, line 21")
else
call g6("Called HashList.decrOccurences on invalid object.","when calling error in HashList, line 21")
endif
endif
call J6(K6,B6,"when calling decrOccurences in HashList, line 21")
set Qb=Qb-1
set C6=L6
set V6=co[K6]
loop
exitwhen C6>V6
call SaveInteger(io,K6,C6,LoadInteger(io,K6,C6+1))
set C6=C6+1
endloop
set co[K6]=co[K6]-1
set Qb=Qb-1
endfunction
function F7 takes integer e7,integer q7,string a7 returns nothing
local integer n7
local integer d7
local hashtable f7
local integer R7
local integer T7
local hashtable Y7
local integer G7
local hashtable g7
local integer h7
set Wb[Qb]=a7
set Qb=Qb+1
set f7=Oo
set Wb[Qb]="when calling get in HashSet, line 22"
set Qb=Qb+1
if sb[e7]==0 then
if e7==0 then
call g6("Nullpointer exception when calling HashList.get","when calling error in HashList, line 79")
else
call g6("Called HashList.get on invalid object.","when calling error in HashList, line 79")
endif
endif
set R7=LoadInteger(io,e7,q7)
set Qb=Qb-1
call RemoveSavedInteger(f7,e7,R7)
set n7=q7+1
set Wb[Qb]="when calling size in HashSet, line 23"
set Qb=Qb+1
if sb[e7]==0 then
if e7==0 then
call g6("Nullpointer exception when calling HashList.size","when calling error in HashList, line 67")
else
call g6("Called HashList.size on invalid object.","when calling error in HashList, line 67")
endif
endif
set T7=co[e7]
set Qb=Qb-1
set d7=T7
loop
exitwhen n7>d7
set Y7=Oo
set a7="when calling get in HashSet, line 24"
set Wb[Qb]="when calling get in HashSet, line 24"
set Qb=Qb+1
if sb[e7]==0 then
if e7==0 then
call g6("Nullpointer exception when calling HashList.get","when calling error in HashList, line 79")
else
call g6("Called HashList.get on invalid object.","when calling error in HashList, line 79")
endif
endif
set G7=LoadInteger(io,e7,n7)
set Qb=Qb-1
set g7=Oo
set Wb[Qb]="when calling get in HashSet, line 24"
set Qb=Qb+1
if sb[e7]==0 then
if e7==0 then
call g6("Nullpointer exception when calling HashList.get","when calling error in HashList, line 79")
else
call g6("Called HashList.get on invalid object.","when calling error in HashList, line 79")
endif
endif
set h7=LoadInteger(io,e7,n7)
set Qb=Qb-1
call SaveInteger(Y7,e7,G7,LoadInteger(g7,e7,h7)-1)
set n7=n7+1
endloop
call N6(e7,q7,"when calling removeAt in HashSet, line 25")
set Qb=Qb-1
set f7=null
set Y7=null
set g7=null
endfunction
function Q7 takes integer k7,integer j7,string x7 returns nothing
local integer v7
local integer m7
set Wb[Qb]=x7
set Qb=Qb+1
set Wb[Qb]="when calling count in HashSet, line 17"
set Qb=Qb+1
if sb[k7]==0 then
if k7==0 then
call g6("Nullpointer exception when calling HashList.count","when calling error in HashList, line 15")
else
call g6("Called HashList.count on invalid object.","when calling error in HashList, line 15")
endif
endif
set v7=LoadInteger(So,k7,j7)
set Qb=Qb-1
if v7>0 then
set m7=LoadInteger(Oo,k7,j7)
set Wb[Qb]="when calling removeAt in HashSet, line 18"
set Qb=Qb+1
if sb[k7]==0 then
if k7==0 then
call g6("Nullpointer exception when calling HashSet.removeAt","when calling error in HashSet, line 21")
else
call g6("Called HashSet.removeAt on invalid object.","when calling error in HashSet, line 21")
endif
endif
call F7(k7,m7,"when calling removeAt in HashSet, line 21")
set Qb=Qb-1
endif
set Qb=Qb-1
endfunction
function myw takes integer jyw,integer xyw,string vyw returns nothing
set Wb[Qb]=vyw
set Qb=Qb+1
if sb[jyw]==0 then
if jyw==0 then
call g6("Nullpointer exception when calling HashList.removeAt","when calling error in HashList, line 53")
else
call g6("Called HashList.removeAt on invalid object.","when calling error in HashList, line 53")
endif
endif
if sb[jyw]<=690 then
call N6(jyw,xyw,"when calling removeAt in HashList, line 53")
else
call F7(jyw,xyw,"when calling removeAt in HashList, line 53")
endif
set Qb=Qb-1
endfunction
function Ayw takes integer Qyw,integer Wyw,string Eyw returns nothing
local integer Zyw
local integer Uyw
local integer Iyw
local integer Pyw
set Wb[Qb]=Eyw
set Qb=Qb+1
if sb[Qyw]==0 then
if Qyw==0 then
call g6("Nullpointer exception when calling HashList.remove","when calling error in HashList, line 60")
else
call g6("Called HashList.remove on invalid object.","when calling error in HashList, line 60")
endif
endif
if sb[Qyw]<=690 then
set Zyw=Qyw
set Uyw=Wyw
set Wb[Qb]="when calling remove in HashList, line 60"
set Qb=Qb+1
set Iyw=0
set Pyw=co[Qyw]-1
loop
exitwhen Iyw>Pyw
if Uyw==LoadInteger(io,Zyw,Iyw) then
call myw(Zyw,Iyw,"when calling removeAt in HashList, line 63")
exitwhen true
endif
set Iyw=Iyw+1
endloop
set Qb=Qb-1
else
call Q7(Qyw,Wyw,"when calling remove in HashList, line 60")
endif
set Qb=Qb-1
endfunction
function y7 takes integer o7,integer O7,string l7 returns nothing
local boolean b7
set Wb[Qb]=l7
set Qb=Qb+1
set Wb[Qb]="when calling remove in HashMap, line 54"
set Qb=Qb+1
set Wb[Qb]="when calling removeInt in HashMap, line 24"
set Qb=Qb+1
if cb[o7]==0 then
if o7==0 then
call g6("Nullpointer exception when calling Table.removeInt","when calling error in Table, line 24")
else
call g6("Called Table.removeInt on invalid object.","when calling error in Table, line 24")
endif
endif
call RemoveSavedInteger(wl,o7,O7)
set Qb=Qb-1-1
set Wb[Qb]="when calling hasKey in HashMap, line 55"
set Qb=Qb+1
if cb[o7]==0 then
if o7==0 then
call g6("Nullpointer exception when calling IterableMap.hasKey","when calling error in HashMap, line 75")
else
call g6("Called IterableMap.hasKey on invalid object.","when calling error in HashMap, line 75")
endif
endif
set Wb[Qb]="when calling hasKey in HashMap, line 75"
set Qb=Qb+1
set b7=Lyw(oo[o7],O7,"when calling has in HashMap, line 76")
set Qb=Qb-1-1
if b7 then
call Ayw(oo[o7],O7,"when calling remove in HashMap, line 56")
endif
set Qb=Qb-1
endfunction
function ypw takes integer Opw,integer lpw,string bpw returns nothing
set Wb[Qb]=bpw
set Qb=Qb+1
if cb[Opw]==0 then
if Opw==0 then
call g6("Nullpointer exception when calling HashMap.remove","when calling error in HashMap, line 23")
else
call g6("Called HashMap.remove on invalid object.","when calling error in HashMap, line 23")
endif
endif
if cb[Opw]<=726 then
set Wb[Qb]="when calling remove in HashMap, line 23"
set Qb=Qb+1
set Wb[Qb]="when calling removeInt in HashMap, line 24"
set Qb=Qb+1
if cb[Opw]==0 then
if Opw==0 then
call g6("Nullpointer exception when calling Table.removeInt","when calling error in Table, line 24")
else
call g6("Called Table.removeInt on invalid object.","when calling error in Table, line 24")
endif
endif
call RemoveSavedInteger(wl,Opw,lpw)
set Qb=Qb-1-1
else
call y7(Opw,lpw,"when calling remove in HashMap, line 23")
endif
set Qb=Qb-1
endfunction
function iww takes integer J0w,string K0w returns nothing
local integer L0w
local integer X0w
local real C0w
local real V0w
local integer B0w
local unit N0w
local integer M0w
local boolean www_2
local integer uww
local integer rww
local integer sww
local integer tww
set Wb[Qb]=K0w
set Qb=Qb+1
set M0w=Do
set J0w=GetUnitTypeId(GetOrderedUnit())
set Wb[Qb]="when calling has in MassControl, line 33"
set Qb=Qb+1
if Tb[M0w]==0 then
if M0w==0 then
call g6("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call g6("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set www_2=B8(M0w,J0w)
set Qb=Qb-1
if www_2 then
if Nyw(Po,GetHandleId(GetOrderedUnit()),"when calling has in MassControl, line 34") then
set uww=opw(Po,GetHandleId(GetOrderedUnit()),"when calling get in MassControl, line 35")
set Wb[Qb]="when calling size in MassControl, line 35"
set Qb=Qb+1
if Tb[uww]==0 then
if uww==0 then
call g6("Nullpointer exception when calling LinkedList.size","when calling error in LinkedList, line 135")
else
call g6("Called LinkedList.size on invalid object.","when calling error in LinkedList, line 135")
endif
endif
set rww=Go[uww]
set Qb=Qb-1
call Jww(I2S(rww))
set L0w=opw(Po,GetHandleId(GetOrderedUnit()),"when calling get in MassControl, line 36")
set X0w=GetIssuedOrderId()
set C0w=GetOrderPointX()
set V0w=GetOrderPointY()
set Wb[Qb]="when calling iterator in MassControl, line 39"
set Qb=Qb+1
set sww=A8(L0w,"when calling new_LLIterator in LinkedList, line 165")
set Qb=Qb-1
set B0w=sww
loop
exitwhen no[fo[B0w]]==do[B0w]
set fo[B0w]=no[fo[B0w]]
set N0w=Kow(qo[fo[B0w]],"when calling unitFromIndex in MassControl, line 39")
set Wb[Qb]="when calling alloc_Closure in MassControl, line 40"
set Qb=Qb+1
if Pl==0 then
if Al<32768 then
set Al=Al+1
set tww=Al
set Dl[tww]=647
else
call g6("Out of memory: Could not create Closure.","when calling error in MassControl, line 40")
set tww=0
endif
else
set Pl=Pl-1
set tww=Il[Pl]
set Dl[tww]=647
endif
set Qb=Qb-1
set Lo[tww]=N0w
set Xo[tww]=X0w
set Co[tww]=C0w
set Vo[tww]=V0w
set Wb[Qb]="when calling doAfter in MassControl, line 40"
set Qb=Qb+1
set Wb[Qb]="when calling start in ClosureTimers, line 15"
set Qb=Qb+1
if Dl[tww]==0 then
if tww==0 then
call g6("Nullpointer exception when calling CallbackSingle.start","when calling error in ClosureTimers, line 67")
else
call g6("Called CallbackSingle.start on invalid object.","when calling error in ClosureTimers, line 67")
endif
endif
call g3(tww,0.01,"when calling start in ClosureTimers, line 67")
set Qb=Qb-1-1
call Jww(" issued = "+GetUnitName(N0w))
endloop
set Wb[Qb]="when calling close in MassControl, line 39"
set Qb=Qb+1
if To[B0w]then
call dpw(B0w,"when calling LLIterator in LinkedList, line 450")
endif
set Qb=Qb-1
call ypw(Po,GetHandleId(GetOrderedUnit()),"when calling remove in MassControl, line 44")
endif
endif
set Qb=Qb-1
set N0w=null
endfunction
function k8 takes integer T8,string Y8 returns nothing
local unit G8
local player g8
local player h8
local player F8
set Wb[Qb]=Y8
set Qb=Qb+1
set G8=GetConstructingStructure()
if GetUnitTypeId(G8)==1747990614 then
if yo[GetPlayerId(GetOwningPlayer(G8))]<3 then
set g8=GetOwningPlayer(G8)
set h8=GetOwningPlayer(G8)
set yo[GetPlayerId(g8)]=yo[GetPlayerId(h8)]+1
else
set F8=GetOwningPlayer(G8)
set Wb[Qb]="when calling attentionToPlayer in LimitMercenaryCamps, line 18"
set Qb=Qb+1
call DisplayTimedTextToPlayer(F8,0.,0.,10.0,Dww(F8,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(F8,0.,0.,10.0,"You cannot build more than 3 mercenary camps.")
set Qb=Qb-1
set Wb[Qb]="when calling alloc_Closure in LimitMercenaryCamps, line 19"
set Qb=Qb+1
if Pl==0 then
if Al<32768 then
set Al=Al+1
set T8=Al
set Dl[T8]=646
else
call g6("Out of memory: Could not create Closure.","when calling error in LimitMercenaryCamps, line 19")
set T8=0
endif
else
set Pl=Pl-1
set T8=Il[Pl]
set Dl[T8]=646
endif
set Qb=Qb-1
set po[T8]=G8
set Wb[Qb]="when calling doAfter in LimitMercenaryCamps, line 19"
set Qb=Qb+1
set Wb[Qb]="when calling start in ClosureTimers, line 15"
set Qb=Qb+1
if Dl[T8]==0 then
if T8==0 then
call g6("Nullpointer exception when calling CallbackSingle.start","when calling error in ClosureTimers, line 67")
else
call g6("Called CallbackSingle.start on invalid object.","when calling error in ClosureTimers, line 67")
endif
endif
call g3(T8,0.01,"when calling start in ClosureTimers, line 67")
set Qb=Qb-1-1
endif
endif
set Qb=Qb-1
set G8=null
set g8=null
set h8=null
set F8=null
endfunction
function s3 takes player w3,integer u3,string r3 returns nothing
set Wb[Qb]=r3
set Qb=Qb+1
set Yc[Gc]=u3
set Gc=Gc+1
call GroupEnumUnitsOfPlayer(Tc,w3,gc)
set Wb[Qb]="when calling popCallback in ClosureForGroups, line 57"
set Qb=Qb+1
call GroupClear(Tc)
set Gc=Gc-1
call oyw(Yc[Gc],"when calling ForGroupCallback in ClosureForGroups, line 21")
set Qb=Qb-1-1
endfunction
function ntw takes integer ytw,string ptw returns nothing
local player etw
local force qtw
local integer atw
set Wb[Qb]=ptw
set Qb=Qb+1
set ptw=D3(GetTriggerPlayer())+" has left the game!"
set qtw=bj_FORCE_ALL_PLAYERS
if IsPlayerInForce(GetLocalPlayer(),qtw) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,5.0,ptw)
endif
set ytw=yO[GetPlayerId(GetTriggerPlayer())]
set Wb[Qb]="when calling setInGame in OnPlayerLeave, line 8"
set Qb=Qb+1
if kb[ytw]==0 then
if ytw==0 then
call g6("Nullpointer exception when calling PlayerStats.setInGame","when calling error in PlayerStats, line 17")
else
call g6("Called PlayerStats.setInGame on invalid object.","when calling error in PlayerStats, line 17")
endif
endif
set qO[ytw]=false
set Qb=Qb-1
set etw=GetTriggerPlayer()
set Wb[Qb]="when calling alloc_Closure in OnPlayerLeave, line 9"
set Qb=Qb+1
if El==0 then
if Zl<32768 then
set Zl=Zl+1
set atw=Zl
set Ul[atw]=686
else
call g6("Out of memory: Could not create Closure.","when calling error in OnPlayerLeave, line 9")
set atw=0
endif
else
set El=El-1
set atw=Wl[El]
set Ul[atw]=686
endif
set Qb=Qb-1
call s3(etw,atw,"when calling forUnitsOfPlayer in OnPlayerLeave, line 9")
set Qb=Qb-1
set etw=null
set qtw=null
endfunction
function qC takes integer pC,integer eC returns integer
if pC==1 then
if eC==0 then
return 1747989059
elseif eC==1 then
return 1747990351
elseif eC==2 then
return 1747989331
elseif eC==3 then
return 1747990353
else
return 1747989059
endif
elseif pC==2 then
if eC==0 then
return 1747989060
elseif eC==1 then
return 1747990352
elseif eC==2 then
return 1747990350
elseif eC==3 then
return 1747990354
else
return 1747989060
endif
elseif pC==3 then
if eC==0 then
return 1747988844
elseif eC==1 then
return 1747990356
elseif eC==2 then
return 1747989809
elseif eC==3 then
return 1747990355
else
return 1747988844
endif
elseif eC==0 then
return 1747989059
elseif eC==1 then
return 1747990351
elseif eC==2 then
return 1747989331
elseif eC==3 then
return 1747990353
else
return 1747989059
endif
endfunction
function yC takes integer bC returns integer
if bC==1747989059 then
return 1
elseif bC==1747989060 then
return 2
elseif bC==1747988844 then
return 3
elseif bC==1747990351 then
return 1
elseif bC==1747990352 then
return 2
elseif bC==1747990356 then
return 3
elseif bC==1747989331 then
return 1
elseif bC==1747990350 then
return 2
elseif bC==1747989809 then
return 3
elseif bC==1747990353 then
return 1
elseif bC==1747990354 then
return 2
elseif bC==1747990355 then
return 3
else
return 1
endif
endfunction
function oL takes integer KK,string LK returns nothing
local unit XK
local player CK
local integer VK
local integer BK
local boolean NK
local unit MK
local integer wL
local integer uL
local boolean rL
local real sL
local boolean tL
local real iL
local real SL
local real cL
set Wb[Qb]=LK
set Qb=Qb+1
set XK=GetTriggerUnit()
set VK=ql
set BK=GetUnitTypeId(XK)
set Wb[Qb]="when calling has in CastleCapture, line 11"
set Qb=Qb+1
if Tb[VK]==0 then
if VK==0 then
call g6("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call g6("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set NK=B8(VK,BK)
set Qb=Qb-1
if NK then
if GetUnitStatePercent(XK,UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)<=50.0 then
set rL=GetOwningPlayer(XK)!=GetOwningPlayer(GetAttacker())
else
set rL=false
endif
if rL then
set sL=GetUnitX(XK)
set iL=GetUnitY(XK)
set MK=GetAttacker()
set SL=sL-GetUnitX(MK)
set cL=iL-GetUnitY(MK)
set tL=SquareRoot(SL*SL+cL*cL)<=300.0
else
set tL=false
endif
if tL then
set CK=GetOwningPlayer(GetAttacker())
call SetUnitOwner(XK,CK,true)
if GetPlayerId(CK)!=PLAYER_NEUTRAL_AGGRESSIVE then
set KK=yC(GetUnitTypeId(XK))
set wL=yO[GetPlayerId(CK)]
set Wb[Qb]="when calling getForceId in CastleCapture, line 17"
set Qb=Qb+1
if kb[wL]==0 then
if wL==0 then
call g6("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 94")
else
call g6("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 94")
endif
endif
set uL=pO[wL]
set Qb=Qb-1
call ReplaceUnitBJ(XK,qC(KK,uL),bj_UNIT_STATE_METHOD_RELATIVE)
endif
call SetUnitState(XK,UNIT_STATE_LIFE,GetUnitState(XK,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,60.0)*0.01)
call SetUnitState(XK,UNIT_STATE_MANA,GetUnitState(XK,UNIT_STATE_MAX_MANA)*RMaxBJ(0.,0.0)*0.01)
call UnitAddAbility(XK,1093677896)
endif
endif
set Qb=Qb-1
set XK=null
set CK=null
set MK=null
endfunction
function t0w takes integer V9 returns nothing
local integer B9
local integer N9
local player M9
local string w0w
local force u0w
local force r0w
local boolean s0w
if (not ho[GetPlayerId(GetTriggerPlayer())])and(not jo) then
set B9=0
set N9=0
set V9=23
loop
exitwhen N9>V9
set M9=dO[N9]
if GetPlayerSlotState(M9)==PLAYER_SLOT_STATE_PLAYING then
set s0w=GetPlayerController(M9)==MAP_CONTROL_USER
else
set s0w=false
endif
if s0w then
set B9=B9+1
endif
set N9=N9+1
endloop
set Fo=B9
set ho[GetPlayerId(GetTriggerPlayer())]=true
set ko=ko+1
set w0w="|cffff0000"+I2S(ko)+"|r out of |cffff0000"+I2S(R2I((Fo+1)*1./2))+"|r voted to skip the tutorial!"
set u0w=bj_FORCE_ALL_PLAYERS
if IsPlayerInForce(GetLocalPlayer(),u0w) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,5.0,w0w)
endif
if ko>=R2I((Fo+1)*1./2) then
set jo=true
set r0w=bj_FORCE_ALL_PLAYERS
if IsPlayerInForce(GetLocalPlayer(),r0w) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,5.0,"|cffff0000Tutorial will shut down soon...|r")
endif
endif
endif
set M9=null
set u0w=null
set r0w=null
endfunction
function QSw takes rect FSw,real kSw,real jSw returns boolean
local boolean xSw
local boolean vSw
local boolean mSw
if kSw>GetRectMinX(FSw) then
set xSw=kSw<GetRectMaxX(FSw)
else
set xSw=false
endif
if xSw then
set vSw=jSw>GetRectMinY(FSw)
else
set vSw=false
endif
if vSw then
set mSw=jSw<GetRectMaxY(FSw)
else
set mSw=false
endif
return mSw
endfunction
function SOw takes integer wOw,string uOw returns rect
local integer rOw
local fogstate sOw
local integer tOw
local rect iOw
set Wb[Qb]=uOw
set Qb=Qb+1
set rOw=tl
set sOw=ConvertFogState(wOw)
set Wb[Qb]="when calling saveFogState in TypeCasting, line 130"
set Qb=Qb+1
if cb[rOw]==0 then
if rOw==0 then
call g6("Nullpointer exception when calling Table.saveFogState","when calling error in Table, line 168")
else
call g6("Called Table.saveFogState on invalid object.","when calling error in Table, line 168")
endif
endif
call SaveFogStateHandle(wl,rOw,0,sOw)
set Qb=Qb-1
set tOw=tl
set Wb[Qb]="when calling loadRect in TypeCasting, line 131"
set Qb=Qb+1
if cb[tOw]==0 then
if tOw==0 then
call g6("Nullpointer exception when calling Table.loadRect","when calling error in Table, line 147")
else
call g6("Called Table.loadRect on invalid object.","when calling error in Table, line 147")
endif
endif
set iOw=LoadRectHandle(wl,tOw,0)
set Qb=Qb-1-1
set Ef=iOw
set sOw=null
set iOw=null
return Ef
endfunction
function ttw takes integer Csw,string Vsw returns nothing
local unit Bsw
local real Nsw
local real Msw
local integer wtw
local integer utw
local integer rtw
local player stw
set Wb[Qb]=Vsw
set Qb=Qb+1
set Bsw=GetTriggerUnit()
if GetUnitTypeId(Bsw)==1747988569 then
set Nsw=GetUnitX(Bsw)
set Msw=GetUnitY(Bsw)
set utw=dl
set Wb[Qb]="when calling iterator in NoShipsNearRivers, line 11"
set Qb=Qb+1
set Csw=A8(utw,"when calling new_LLIterator in LinkedList, line 165")
set Qb=Qb-1
set wtw=Csw
loop
exitwhen no[fo[wtw]]==do[wtw]
set fo[wtw]=no[fo[wtw]]
if QSw(SOw(qo[fo[wtw]],"when calling rectFromIndex in NoShipsNearRivers, line 11"),Nsw,Msw) then
set Wb[Qb]="when calling alloc_Closure in NoShipsNearRivers, line 14"
set Qb=Qb+1
if Pl==0 then
if Al<32768 then
set Al=Al+1
set rtw=Al
set Dl[rtw]=649
else
call g6("Out of memory: Could not create Closure.","when calling error in NoShipsNearRivers, line 14")
set rtw=0
endif
else
set Pl=Pl-1
set rtw=Il[Pl]
set Dl[rtw]=649
endif
set Qb=Qb-1
set cO[rtw]=Bsw
set Wb[Qb]="when calling doAfter in NoShipsNearRivers, line 14"
set Qb=Qb+1
set Wb[Qb]="when calling start in ClosureTimers, line 15"
set Qb=Qb+1
if Dl[rtw]==0 then
if rtw==0 then
call g6("Nullpointer exception when calling CallbackSingle.start","when calling error in ClosureTimers, line 67")
else
call g6("Called CallbackSingle.start on invalid object.","when calling error in ClosureTimers, line 67")
endif
endif
call g3(rtw,0.01,"when calling start in ClosureTimers, line 67")
set Qb=Qb-1-1
set stw=GetOwningPlayer(Bsw)
set Wb[Qb]="when calling attentionToPlayer in NoShipsNearRivers, line 16"
set Qb=Qb+1
call DisplayTimedTextToPlayer(stw,0.,0.,10.0,Dww(stw,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(stw,0.,0.,10.0,"You cannot build shipyards near rivers")
set Qb=Qb-1
endif
endloop
set Wb[Qb]="when calling close in NoShipsNearRivers, line 11"
set Qb=Qb+1
if To[wtw]then
call dpw(wtw,"when calling LLIterator in LinkedList, line 450")
endif
set Qb=Qb-1
endif
set Qb=Qb-1
set Bsw=null
set stw=null
endfunction
function w8 takes integer V7 returns nothing
local unit B7=GetConstructingStructure()
local player N7
local player M7
if GetUnitTypeId(B7)==1747988808 then
set N7=GetOwningPlayer(B7)
set M7=GetOwningPlayer(B7)
set lo[GetPlayerId(N7)]=lo[GetPlayerId(M7)]-1
endif
set B7=null
set N7=null
set M7=null
endfunction
function Nbw takes integer Vbw,string Bbw returns nothing
set Wb[Qb]=Bbw
set Qb=Qb+1
if hl[Vbw]==0 then
if Vbw==0 then
call g6("Nullpointer exception when calling EventListener.onEvent","when calling error in ClosureEvents, line 108")
else
call g6("Called EventListener.onEvent on invalid object.","when calling error in ClosureEvents, line 108")
endif
endif
if hl[Vbw]<=669 then
if hl[Vbw]<=665 then
if hl[Vbw]<=663 then
if hl[Vbw]<=662 then
call oL(Vbw,"when calling CastleCapture_closure_impl in ClosureEvents, line 108")
else
call hL(Vbw,"when calling CityBuilded_closure_impl in ClosureEvents, line 108")
endif
elseif hl[Vbw]<=664 then
call BL(Vbw,"when calling CityManage_closure_impl in ClosureEvents, line 108")
else
call EX(Vbw,"when calling CityManage_closure_impl in ClosureEvents, line 108")
endif
elseif hl[Vbw]<=667 then
if hl[Vbw]<=666 then
call w8(Vbw)
else
call c8(Vbw,"when calling LimitEncampments_closure_impl in ClosureEvents, line 108")
endif
elseif hl[Vbw]<=668 then
call R8(Vbw)
else
call k8(Vbw,"when calling LimitMercenaryCamps_closure_impl in ClosureEvents, line 108")
endif
elseif hl[Vbw]<=673 then
if hl[Vbw]<=671 then
if hl[Vbw]<=670 then
call t0w(Vbw)
else
call W0w(Vbw,"when calling MassControl_closure_impl in ClosureEvents, line 108")
endif
elseif hl[Vbw]<=672 then
call iww(Vbw,"when calling MassControl_closure_impl in ClosureEvents, line 108")
else
call ttw(Vbw,"when calling NoShipsNearRivers_closure_impl in ClosureEvents, line 108")
endif
elseif hl[Vbw]<=675 then
if hl[Vbw]<=674 then
call ntw(Vbw,"when calling OnPlayerLeave_closure_impl in ClosureEvents, line 108")
else
call gSw(Vbw,"when calling RangeChecks_closure_impl in ClosureEvents, line 108")
endif
elseif hl[Vbw]<=676 then
call Sow(Vbw,"when calling Taxation_closure_impl in ClosureEvents, line 108")
else
call Zlw(Vbw,"when calling Upkeep_closure_impl in ClosureEvents, line 108")
endif
set Qb=Qb-1
endfunction
function vM takes string YM returns nothing
local unit GM
local integer gM
local integer hM
local integer FM
local eventid kM
local integer jM
local boolean xM
set Wb[Qb]=YM
set Qb=Qb+1
set GM=GetTriggerUnit()
set kM=GetTriggerEventId()
set Wb[Qb]="when calling toIntId in ClosureEvents, line 169"
set Qb=Qb+1
set jM=oc[GetHandleId(kM)]
if jM==0 then
set jM=tM(kM,"when calling registerEventId in ClosureEvents, line 228")
endif
set Qb=Qb-1
set gM=jM
if GM!=null then
set xM=GetUnitUserData(GM)>0
else
set xM=false
endif
if xM then
if pc[GetUnitUserData(GM)]!=0 then
set hM=pc[GetUnitUserData(GM)]
loop
exitwhen hM==0
if ec[hM]==gM then
call Nbw(hM,"when calling onEvent in ClosureEvents, line 176")
endif
set hM=qc[hM]
endloop
endif
endif
if yc[gM]!=0 then
set FM=yc[gM]
loop
exitwhen FM==0
call Nbw(FM,"when calling onEvent in ClosureEvents, line 182")
set FM=qc[FM]
endloop
endif
set Qb=Qb-1
set GM=null
set kM=null
endfunction
function Baw takes nothing returns nothing
set Qb=0
call vM("ClosureEvents, line 240")
endfunction
function Bg takes nothing returns nothing
local location Ag
local location Dg
local real Hg
local real Jg
local rect Kg
local group Lg
local group Xg
local code Cg
local boolean Vg
set u=GetUnitLoc(GetSpellAbilityUnit())
set Ag=u
set S=Location(GetLocationX(Ag)+0.00,GetLocationY(Ag)+200.00)
set Dg=u
set Hg=GetLocationX(Dg)
set Jg=GetLocationY(Dg)
set o=Rect(Hg-140,Jg-150,Hg+140,Jg+150)
set Kg=o
set Lg=CreateGroup()
call GroupEnumUnitsInRect(Lg,Kg,null)
call DestroyBoolExpr(null)
set l=Lg
set Xg=l
set Cg=Ky
set Vg=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(Xg,Cg)
if Vg then
call DestroyGroup(Xg)
endif
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747989079,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"stand")
call DestroyGroup(l)
call RemoveLocation(S)
call RemoveLocation(u)
set Ag=null
set Dg=null
set Kg=null
set Lg=null
set Xg=null
endfunction
function Bx takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988566,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988562,0)
endfunction
function XH takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989809 then
return false
endif
return true
endfunction
function CH takes nothing returns boolean
if not XH() then
return false
endif
return true
endfunction
function CP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990598,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990597,0)
endfunction
function CSw takes nothing returns boolean
return true
endfunction
function flw takes string ylw returns boolean
local trigger plw
local playerunitevent elw
local rect qlw
local region alw
local integer nlw
local integer dlw
set Wb[Qb]=ylw
set Qb=Qb+1
set plw=CreateTrigger()
set qlw=GetWorldBounds()
set alw=CreateRegion()
call RegionAddRect(alw,qlw)
call TriggerRegisterEnterRegion(plw,alw,null)
call TriggerAddAction(plw,kf)
set elw=EVENT_PLAYER_UNIT_DEATH
set Wb[Qb]="when calling alloc_Closure in Upkeep, line 15"
set Qb=Qb+1
if Gl==0 then
if gl<32768 then
set gl=gl+1
set nlw=gl
set hl[nlw]=677
else
call g6("Out of memory: Could not create Closure.","when calling error in Upkeep, line 15")
set nlw=0
endif
else
set Gl=Gl-1
set nlw=Yl[Gl]
set hl[nlw]=677
endif
set Qb=Qb-1
set ec[nlw]=0
set qc[nlw]=0
set ac[nlw]=0
set Wb[Qb]="when calling add in Upkeep, line 15"
set Qb=Qb+1
set Wb[Qb]="when calling toIntId in ClosureEvents, line 111"
set Qb=Qb+1
set dlw=oc[GetHandleId(elw)]
if dlw==0 then
set dlw=tM(elw,"when calling registerEventId in ClosureEvents, line 228")
endif
set Qb=Qb-1
set ec[nlw]=dlw
if yc[ec[nlw]]!=0 then
set ac[yc[ec[nlw]]]=nlw
set qc[nlw]=yc[ec[nlw]]
endif
set yc[ec[nlw]]=nlw
set Qb=Qb-1-1
set plw=null
set elw=null
set qlw=null
set alw=null
return true
endfunction
function Caw takes nothing returns boolean
set Qb=0
return flw("Upkeep, line 1")
endfunction
function Cv takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651826,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651824,0)
endfunction
function DH takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function AI takes nothing returns boolean
if GetResearched()!=1378890053 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890053,true)!=1 then
return false
endif
return true
endfunction
function DI takes nothing returns boolean
if not AI() then
return false
endif
return true
endfunction
function I9 takes string Y9 returns nothing
local integer G9
local integer g9
local real h9
local player F9
local integer k9
local integer j9
local integer x9
local boolean v9
local location m9
local location Q9
local integer W9
local real E9
local real Z9
local real U9
set Wb[Qb]=Y9
set Qb=Qb+1
set G9=24
set g9=6
set h9=100.0
loop
exitwhen G9<=0
set k9=1
set j9=g9
loop
exitwhen k9>j9
set E9=k9*6.28318/g9
set Z9=311.2+h9*Cos(E9)
set U9=5166.7+h9*Sin(E9)
set F9=dO[24-G9+k9-1]
set x9=yO[GetPlayerId(F9)]
set Y9="when calling isInGame in MainInit, line 55"
set Wb[Qb]="when calling isInGame in MainInit, line 55"
set Qb=Qb+1
if kb[x9]==0 then
if x9==0 then
call g6("Nullpointer exception when calling PlayerStats.isInGame","when calling error in PlayerStats, line 14")
else
call g6("Called PlayerStats.isInGame on invalid object.","when calling error in PlayerStats, line 14")
endif
endif
set v9=qO[x9]
set Qb=Qb-1
if v9 then
set m9=Location(Z9,U9)
set Q9=Location(311.2,5166.7)
call CreateNUnitsAtLoc(1,1747988554,F9,m9,bj_RADTODEG*Atan2(GetLocationY(Q9)-GetLocationY(m9),GetLocationX(Q9)-GetLocationX(m9)))
endif
set k9=k9+1
endloop
set h9=h9+50.0
set G9=G9-g9
set g9=g9+2
if G9<2147483647 then
set W9=G9
else
set W9=2147483647
endif
if g9<W9 then
set W9=g9
endif
set g9=W9
endloop
set Qb=Qb-1
set F9=null
set m9=null
set Q9=null
endfunction
function O0w takes player i0w returns nothing
local fogstate S0w
local location c0w
local rect o0w
call SetPlayerState(i0w,PLAYER_STATE_RESOURCE_GOLD,99999999)
call SetPlayerState(i0w,PLAYER_STATE_RESOURCE_LUMBER,99999999)
set S0w=FOG_OF_WAR_VISIBLE
set o0w=bj_mapInitialPlayableArea
set c0w=Location(GetRectCenterX(o0w),GetRectCenterY(o0w))
set bj_lastCreatedFogModifier=CreateFogModifierRadiusLoc(i0w,S0w,c0w,999999.00,true,false)
call FogModifierStart(bj_lastCreatedFogModifier)
set S0w=null
set c0w=null
set o0w=null
endfunction
function dnw takes integer enw,integer qnw,integer anw,string nnw returns nothing
if qnw<0 or qnw>=24 then
call g6("Index out of Bounds",nnw)
elseif qnw<=11 then
if qnw<=5 then
if qnw<=2 then
if qnw<=1 then
if qnw<=0 then
set Ib[enw]=anw
else
set Pb[enw]=anw
endif
else
set Ab[enw]=anw
endif
elseif qnw<=4 then
if qnw<=3 then
set Db[enw]=anw
else
set Hb[enw]=anw
endif
else
set Jb[enw]=anw
endif
elseif qnw<=8 then
if qnw<=7 then
if qnw<=6 then
set Kb[enw]=anw
else
set Lb[enw]=anw
endif
else
set Xb[enw]=anw
endif
elseif qnw<=10 then
if qnw<=9 then
set Cb[enw]=anw
else
set Vb[enw]=anw
endif
else
set Bb[enw]=anw
endif
elseif qnw<=17 then
if qnw<=14 then
if qnw<=13 then
if qnw<=12 then
set Nb[enw]=anw
else
set Mb[enw]=anw
endif
else
set wy[enw]=anw
endif
elseif qnw<=16 then
if qnw<=15 then
set uy[enw]=anw
else
set ry[enw]=anw
endif
else
set sy[enw]=anw
endif
elseif qnw<=20 then
if qnw<=19 then
if qnw<=18 then
set ty[enw]=anw
else
set iy[enw]=anw
endif
else
set Sy[enw]=anw
endif
elseif qnw<=22 then
if qnw<=21 then
set cy[enw]=anw
else
set oy[enw]=anw
endif
else
set Oy[enw]=anw
endif
endfunction
function Wiw takes player giw,string hiw returns integer
local integer Fiw
local integer kiw
local integer jiw
local player xiw
local integer viw
local integer miw
local boolean Qiw
set Wb[Qb]=hiw
set Qb=Qb+1
set Wb[Qb]="when calling PlayerStats in PlayerStats, line 129"
set Qb=Qb+1
if hb==0 then
if Fb<32768 then
set Fb=Fb+1
set kiw=Fb
set kb[kiw]=712
else
call g6("Out of memory: Could not create PlayerStats.","when calling error in PlayerStats, line 6")
set kiw=0
endif
else
set hb=hb-1
set kiw=gb[hb]
set kb[kiw]=712
endif
set Qb=Qb-1
set Fiw=kiw
set jiw=kiw
set xiw=giw
set Wb[Qb]="when calling construct_PlayerStats in PlayerStats, line 129"
set Qb=Qb+1
set qO[kiw]=false
set nO[kiw]=0
set pO[kiw]=-1
set aO[kiw]=-1
set eO[kiw]=giw
if GetPlayerSlotState(giw)==PLAYER_SLOT_STATE_PLAYING then
set Qiw=GetPlayerController(giw)==MAP_CONTROL_USER
else
set Qiw=false
endif
set qO[kiw]=Qiw
set viw=0
set miw=23
loop
exitwhen viw>miw
if dO[viw]==xiw then
call dnw(jiw,viw,-1,"when writing array PlayerStats_alliance_states in PlayerStats, line 137")
else
call dnw(jiw,viw,bj_ALLIANCE_UNALLIED,"when writing array PlayerStats_alliance_states in PlayerStats, line 139")
endif
set viw=viw+1
endloop
set Qb=Qb-1-1
set xiw=null
return Fiw
endfunction
function gcw takes rect ncw,string dcw,integer fcw,integer Rcw,string Tcw returns nothing
local group Ycw
local unit Gcw
set Wb[Qb]=Tcw
set Qb=Qb+1
set Ycw=CreateGroup()
call GroupEnumUnitsInRect(Ycw,ncw,null)
call DestroyBoolExpr(null)
set Gcw=FirstOfGroup(Ycw)
call GroupRemoveUnit(Ycw,Gcw)
set QS[gS]=BB(Gcw,dcw,fcw,Rcw,"when calling new_City in SettingCities, line 7")
set Qb=Qb-1
set Ycw=null
set Gcw=null
endfunction
function T9 takes string O9 returns boolean
local integer l9
local integer b9
local trigger y9
local integer p9
local integer e9
local integer q9
local player a9
local integer n9
local player d9
local boolean f9
local boolean R9
set Wb[Qb]=O9
set Qb=Qb+1
set go[0]="You're playing |cffffff65Crusade over Europe|r.\nA grand strategy medieval game inspired by many games and genres.\nCreate alliances and dissolve them just as easily, declare war on your neighbours and |cfff5da16Conquer Europe|r.\n|cffff0000To skip the tutorial, press ESC|r"
set go[1]="Use your |cffff8040Settler|r to choose the location of your Kingdom, use the ability |cffffff80Create Capitol|r on any Town Hall to build your Capitol.\nChoose your postion carefully and be mindful of the other players positions."
set go[2]="|cfff5da16Mechanics|r\n\n|cff80ff00Supply & Nutrition:|r All units and building will continuously lose Hit Points if not supplied by |cff00f7ffCities or Supply Horses|r.\n|cffff0000Public Order|r represents satisfaction level of population of each city and can be checked in top-right menu.\nLow Public Order will cause revolts."
set go[3]="|cfff5da16Combat & Diplomacy|r\n\nBuild your army but keep in mind that every army will have its weaknesses. Use general's Mass Control ability to quickly manipulate your army.\nUse |cffffff80Diplomacy|r (F1) menu to create Alliances and Declare War."
set go[4]="|cfff5da16Economy|r\n\n|cffffff80Florins|r (Gold) are given each Turn (2 minutes), you can increase the amount generated by capturing |cffffff80Cities|r or precious |cffffff80Ores|r and upgrading them into |cffffff80Mines|r.\nLumber is harvested from Trees.\n|cffff0000You can check public order of currently selected city and your income in top-right menu|r"
set p9=0
set e9=0
set q9=23
loop
exitwhen e9>q9
set a9=dO[e9]
if GetPlayerSlotState(a9)==PLAYER_SLOT_STATE_PLAYING then
set f9=GetPlayerController(a9)==MAP_CONTROL_USER
else
set f9=false
endif
if f9 then
set p9=p9+1
endif
set e9=e9+1
endloop
set Fo=p9
if xo then
call Jww("Debug info is enabled. Only for Red.")
endif
if vo then
call DisplayTimedTextToPlayer(fO,0.,0.,45.,"Debug mode is on.")
endif
set Wb[Qb]="when calling setupCities in MainInit, line 98"
set Qb=Qb+1
call gcw(h,"Adrianopolis",3,1,"when calling newCity in SettingCities, line 26")
call gcw(Ss,"Arta",3,0,"when calling newCity in SettingCities, line 27")
call gcw(Br,"Athens",3,1,"when calling newCity in SettingCities, line 28")
call gcw(Vr,"Ragusa",3,0,"when calling newCity in SettingCities, line 29")
call gcw(ls,"Canakkale",3,0,"when calling newCity in SettingCities, line 30")
call gcw(cs,"Candia",3,0,"when calling newCity in SettingCities, line 31")
call gcw(k,"Constantinople",3,4,"when calling newCity in SettingCities, line 32")
call gcw(is,"Corinth",3,0,"when calling newCity in SettingCities, line 33")
call gcw(g,"Durazzo",3,0,"when calling newCity in SettingCities, line 34")
call gcw(ws,"Nikomedeia",3,0,"when calling newCity in SettingCities, line 35")
call gcw(lu,"Kutaisi",3,0,"when calling newCity in SettingCities, line 36")
call gcw(Dw,"Nicae",3,2,"when calling newCity in SettingCities, line 37")
call gcw(Zw,"Nicosia",3,0,"when calling newCity in SettingCities, line 38")
call gcw(Nr,"Rhodes",3,0,"when calling newCity in SettingCities, line 39")
call gcw(x,"Scopia",3,0,"when calling newCity in SettingCities, line 40")
call gcw(Pw,"Smyrna",3,0,"when calling newCity in SettingCities, line 41")
call gcw(bu,"Tbilisi",3,0,"when calling newCity in SettingCities, line 42")
call gcw(Ew,"Trebizond",3,1,"when calling newCity in SettingCities, line 43")
call gcw(F,"Thessalonika",3,3,"when calling newCity in SettingCities, line 44")
call gcw(Qu,"Astrakhan'",1,2,"when calling newCity in SettingCities, line 48")
call gcw(Gw,"Azaq",1,0,"when calling newCity in SettingCities, line 49")
call gcw(ru,"Baia",1,0,"when calling newCity in SettingCities, line 50")
call gcw(cu,"Bryansk",1,0,"when calling newCity in SettingCities, line 51")
call gcw(sw,"Caffa",1,0,"when calling newCity in SettingCities, line 52")
call gcw(U,"Constanta",1,0,"when calling newCity in SettingCities, line 53")
call gcw(iu,"Dnipro",1,0,"when calling newCity in SettingCities, line 54")
call gcw(nw,"Halych",1,0,"when calling newCity in SettingCities, line 55")
call gcw(gw,"Kiev",1,2,"when calling newCity in SettingCities, line 56")
call gcw(N,"Konigsberg",1,0,"when calling newCity in SettingCities, line 57")
call gcw(uw,"Hrodna",1,0,"when calling newCity in SettingCities, line 58")
call gcw(hw,"Minsk",1,1,"when calling newCity in SettingCities, line 59")
call gcw(Su,"Moscow",1,0,"when calling newCity in SettingCities, line 60")
call gcw(Sw,"Novgorod",1,0,"when calling newCity in SettingCities, line 61")
call gcw(tu,"Olesh'e",1,0,"when calling newCity in SettingCities, line 62")
call gcw(cw,"Polotsk",1,0,"when calling newCity in SettingCities, line 63")
call gcw(tw,"Pskov",1,0,"when calling newCity in SettingCities, line 64")
call gcw(iw,"Reval",1,0,"when calling newCity in SettingCities, line 65")
call gcw(M,"Riga",1,1,"when calling newCity in SettingCities, line 66")
call gcw(bs,"Bulgar",1,0,"when calling newCity in SettingCities, line 67")
call gcw(Wu,"Ryazan'",1,0,"when calling newCity in SettingCities, line 68")
call gcw(Ou,"Sarkel",1,0,"when calling newCity in SettingCities, line 69")
call gcw(Fw,"Smolensk",1,1,"when calling newCity in SettingCities, line 70")
call gcw(L,"Sofia",1,0,"when calling newCity in SettingCities, line 71")
call gcw(I,"Targovitse",1,1,"when calling newCity in SettingCities, line 72")
call gcw(uu,"Tmutarakan'",1,0,"when calling newCity in SettingCities, line 73")
call gcw(Mr,"Turku",1,0,"when calling newCity in SettingCities, line 74")
call gcw(rw,"Vilnius",1,1,"when calling newCity in SettingCities, line 75")
call gcw(su,"Zhytomir",1,0,"when calling newCity in SettingCities, line 76")
call gcw(au,"Acre",2,2,"when calling newCity in SettingCities, line 80")
call gcw(mw,"Adana",2,0,"when calling newCity in SettingCities, line 81")
call gcw(as,"Alamut",2,0,"when calling newCity in SettingCities, line 82")
call gcw(nu,"Al-Aqaba",2,0,"when calling newCity in SettingCities, line 83")
call gcw(Nw,"Alexandria",2,2,"when calling newCity in SettingCities, line 84")
call gcw(Kw,"Algiers",2,0,"when calling newCity in SettingCities, line 85")
call gcw(Aw,"Ankara",2,1,"when calling newCity in SettingCities, line 86")
call gcw(Ww,"Antioch",2,2,"when calling newCity in SettingCities, line 87")
call gcw(us,"Badajoz",2,0,"when calling newCity in SettingCities, line 88")
call gcw(Os,"Baghdad",2,4,"when calling newCity in SettingCities, line 89")
call gcw(ns,"Baku",2,0,"when calling newCity in SettingCities, line 90")
call gcw(Cw,"Benghazi",2,1,"when calling newCity in SettingCities, line 91")
call gcw(es,"Beleb-el-Anab",2,0,"when calling newCity in SettingCities, line 92")
call gcw(wu,"Cairo",2,3,"when calling newCity in SettingCities, line 93")
call gcw(Tr,"Cordoba",2,4,"when calling newCity in SettingCities, line 94")
call gcw(yu,"Damascus",2,2,"when calling newCity in SettingCities, line 95")
call gcw(Mw,"Damietta",2,1,"when calling newCity in SettingCities, line 96")
call gcw(Ru,"Diyarbakir",2,0,"when calling newCity in SettingCities, line 97")
call gcw(Iw,"Edessa",2,1,"when calling newCity in SettingCities, line 98")
call gcw(Tu,"Erez",2,1,"when calling newCity in SettingCities, line 99")
call gcw(Hw,"Fes",2,3,"when calling newCity in SettingCities, line 100")
call gcw(eu,"Gaza",2,0,"when calling newCity in SettingCities, line 101")
call gcw(Rr,"Granada",2,2,"when calling newCity in SettingCities, line 102")
call gcw(xw,"Isparta",2,0,"when calling newCity in SettingCities, line 103")
call gcw(Uw,"Jerusalem",2,3,"when calling newCity in SettingCities, line 104")
call gcw(vw,"Kayseri",2,1,"when calling newCity in SettingCities, line 105")
call gcw(os,"Kerak",2,0,"when calling newCity in SettingCities, line 106")
call gcw(ds,"Kermanshah",2,0,"when calling newCity in SettingCities, line 107")
call gcw(Qw,"Konya",2,0,"when calling newCity in SettingCities, line 108")
call gcw(Sr,"Lisbon",2,0,"when calling newCity in SettingCities, line 109")
call gcw(Ur,"Luxor",2,0,"when calling newCity in SettingCities, line 110")
call gcw(tr,"Madrid",2,0,"when calling newCity in SettingCities, line 111")
call gcw(Lw,"Mahdya",2,0,"when calling newCity in SettingCities, line 112")
call gcw(Zr,"Marrakesh",2,3,"when calling newCity in SettingCities, line 113")
call gcw(Bw,"Medina",2,2,"when calling newCity in SettingCities, line 114")
call gcw(ps,"Melilla",2,0,"when calling newCity in SettingCities, line 115")
call gcw(qu,"Mosul",2,1,"when calling newCity in SettingCities, line 116")
call gcw(Yr,"Murcia",2,1,"when calling newCity in SettingCities, line 117")
call gcw(Jw,"Oran",2,0,"when calling newCity in SettingCities, line 118")
call gcw(mu,"Palma",2,1,"when calling newCity in SettingCities, line 119")
call gcw(du,"Quarisiya",2,1,"when calling newCity in SettingCities, line 120")
call gcw(Er,"Silves",2,0,"when calling newCity in SettingCities, line 121")
call gcw(jw,"Sinop",2,0,"when calling newCity in SettingCities, line 122")
call gcw(fu,"Tamiya",2,0,"when calling newCity in SettingCities, line 123")
call gcw(pu,"Tartus",2,0,"when calling newCity in SettingCities, line 124")
call gcw(qs,"Tabriz",2,0,"when calling newCity in SettingCities, line 125")
call gcw(Xw,"Tripoli",2,1,"when calling newCity in SettingCities, line 126")
call gcw(Yw,"Tunis",2,1,"when calling newCity in SettingCities, line 127")
call gcw(Gr,"Valencia",2,0,"when calling newCity in SettingCities, line 128")
call gcw(ou,"Yerevan",2,0,"when calling newCity in SettingCities, line 129")
call gcw(J,"Aarhus",0,1,"when calling newCity in SettingCities, line 133")
call gcw(Zu,"Aberdeen",0,1,"when calling newCity in SettingCities, line 134")
call gcw(Ar,"Ajaccio",0,0,"when calling newCity in SettingCities, line 135")
call gcw(dr,"Ancona",0,1,"when calling newCity in SettingCities, line 136")
call gcw(Pr,"Angers",0,0,"when calling newCity in SettingCities, line 137")
call gcw(yr,"Antwerp",0,0,"when calling newCity in SettingCities, line 138")
call gcw(ur,"Barcelona",0,1,"when calling newCity in SettingCities, line 139")
call gcw(Kr,"Bari",0,0,"when calling newCity in SettingCities, line 140")
call gcw(A,"Belgrade",0,1,"when calling newCity in SettingCities, line 141")
call gcw(mr,"Bergen",0,1,"when calling newCity in SettingCities, line 142")
call gcw(hr,"Bern",0,0,"when calling newCity in SettingCities, line 143")
call gcw(ar,"Bologna",0,1,"when calling newCity in SettingCities, line 144")
call gcw(Mu,"Bordeaux",0,1,"when calling newCity in SettingCities, line 145")
call gcw(P,"Brasov",0,0,"when calling newCity in SettingCities, line 146")
call gcw(br,"Bruges",0,0,"when calling newCity in SettingCities, line 147")
call gcw(f,"Burgh",0,0,"when calling newCity in SettingCities, line 148")
call gcw(sr,"Burgos",0,1,"when calling newCity in SettingCities, line 149")
call gcw(Lu,"Caen",0,0,"when calling newCity in SettingCities, line 150")
call gcw(Du,"Caenarfon",0,0,"when calling newCity in SettingCities, line 151")
call gcw(Dr,"Cagliari",0,0,"when calling newCity in SettingCities, line 152")
call gcw(R,"Cardiff",0,0,"when calling newCity in SettingCities, line 153")
call gcw(Bu,"Clermont",0,1,"when calling newCity in SettingCities, line 154")
call gcw(ju,"Cologne",0,1,"when calling newCity in SettingCities, line 155")
call gcw(Vu,"Dijon",0,0,"when calling newCity in SettingCities, line 156")
call gcw(Pu,"Dublin",0,0,"when calling newCity in SettingCities, line 157")
call gcw(Eu,"Edinburgh",0,0,"when calling newCity in SettingCities, line 158")
call gcw(vr,"Eikundarsund",0,0,"when calling newCity in SettingCities, line 159")
call gcw(Q,"Esztergom",0,1,"when calling newCity in SettingCities, line 160")
call gcw(Ku,"Exeter",0,0,"when calling newCity in SettingCities, line 161")
call gcw(ww,"Gdansk",0,0,"when calling newCity in SettingCities, line 162")
call gcw(D,"Flensburg",0,0,"when calling newCity in SettingCities, line 163")
call gcw(xu,"Frankfurt",0,1,"when calling newCity in SettingCities, line 164")
call gcw(T,"Galway",0,0,"when calling newCity in SettingCities, line 165")
call gcw(pr,"Genoa",0,2,"when calling newCity in SettingCities, line 166")
call gcw(Tw,"Groningen",0,0,"when calling newCity in SettingCities, line 167")
call gcw(ku,"Innsbruck",0,0,"when calling newCity in SettingCities, line 168")
call gcw(Uu,"Inverness",0,0,"when calling newCity in SettingCities, line 169")
call gcw(Au,"Desmond",0,0,"when calling newCity in SettingCities, line 170")
call gcw(Jr,"Reggio",0,0,"when calling newCity in SettingCities, line 172")
call gcw(ts,"Kalmar",0,0,"when calling newCity in SettingCities, line 173")
call gcw(V,"Kassa",0,0,"when calling newCity in SettingCities, line 174")
call gcw(E,"Krakow",0,2,"when calling newCity in SettingCities, line 175")
call gcw(rr,"Leon",0,1,"when calling newCity in SettingCities, line 176")
call gcw(Hu,"London",0,0,"when calling newCity in SettingCities, line 177")
call gcw(kr,"Lund",0,0,"when calling newCity in SettingCities, line 178")
call gcw(Fr,"Lyon",0,0,"when calling newCity in SettingCities, line 179")
call gcw(K,"Madgeburg",0,0,"when calling newCity in SettingCities, line 180")
call gcw(lr,"Marsellie",0,1,"when calling newCity in SettingCities, line 181")
call gcw(Cr,"Metz",0,0,"when calling newCity in SettingCities, line 182")
call gcw(er,"Milan",0,1,"when calling newCity in SettingCities, line 183")
call gcw(Hr,"Naples",0,1,"when calling newCity in SettingCities, line 184")
call gcw(gr,"Nuremburg",0,0,"when calling newCity in SettingCities, line 185")
call gcw(Wr,"Nykoping",0,0,"when calling newCity in SettingCities, line 186")
call gcw(rs,"Oporto",0,0,"when calling newCity in SettingCities, line 187")
call gcw(xr,"Oslo",0,1,"when calling newCity in SettingCities, line 188")
call gcw(ys,"Buda",0,1,"when calling newCity in SettingCities, line 189")
call gcw(Lr,"Palermo",0,3,"when calling newCity in SettingCities, line 190")
call gcw(cr,"Pamplona",0,0,"when calling newCity in SettingCities, line 191")
call gcw(Cu,"Paris",0,1,"when calling newCity in SettingCities, line 192")
call gcw(nr,"Pisa",0,0,"when calling newCity in SettingCities, line 193")
call gcw(X,"Plock",0,0,"when calling newCity in SettingCities, line 194")
call gcw(C,"Poznan",0,1,"when calling newCity in SettingCities, line 195")
call gcw(m,"Prague",0,0,"when calling newCity in SettingCities, line 196")
call gcw(G,"Zadar",0,0,"when calling newCity in SettingCities, line 197")
call gcw(Ir,"Rennes",0,0,"when calling newCity in SettingCities, line 198")
call gcw(Xu,"Rheims",0,0,"when calling newCity in SettingCities, line 199")
call gcw(fr,"Rome",0,1,"when calling newCity in SettingCities, line 200")
call gcw(H,"Roskilde",0,0,"when calling newCity in SettingCities, line 201")
call gcw(ir,"Salamanca",0,0,"when calling newCity in SettingCities, line 202")
call gcw(Fu,"Salzburg",0,0,"when calling newCity in SettingCities, line 203")
call gcw(jr,"Skara",0,0,"when calling newCity in SettingCities, line 204")
call gcw(W,"Stettin",0,0,"when calling newCity in SettingCities, line 205")
call gcw(ss,"Stockholm",0,1,"when calling newCity in SettingCities, line 206")
call gcw(Xr,"Syracuse",0,0,"when calling newCity in SettingCities, line 207")
call gcw(Nu,"Toulouse",0,0,"when calling newCity in SettingCities, line 208")
call gcw(B,"Varad",0,0,"when calling newCity in SettingCities, line 209")
call gcw(qr,"Venice",0,2,"when calling newCity in SettingCities, line 210")
call gcw(v,"Vienna",0,0,"when calling newCity in SettingCities, line 211")
call gcw(Qr,"Visby",0,0,"when calling newCity in SettingCities, line 212")
call gcw(j,"Warwick",0,0,"when calling newCity in SettingCities, line 213")
call gcw(Ju,"Winchester",0,1,"when calling newCity in SettingCities, line 214")
call gcw(Z,"Wroclaw",0,0,"when calling newCity in SettingCities, line 215")
call gcw(Iu,"York",0,1,"when calling newCity in SettingCities, line 216")
call gcw(Y,"Zagreb",0,0,"when calling newCity in SettingCities, line 217")
call gcw(wr,"Zaragoza",0,0,"when calling newCity in SettingCities, line 218")
call gcw(vu,"Hamburg",0,1,"when calling newCity in SettingCities, line 219")
set Qb=Qb-1
call SetForceAllianceStateBJ(bj_FORCE_ALL_PLAYERS,bj_FORCE_PLAYER[PLAYER_NEUTRAL_PASSIVE],bj_ALLIANCE_NEUTRAL)
call SetForceAllianceStateBJ(bj_FORCE_ALL_PLAYERS,bj_FORCE_ALL_PLAYERS,bj_ALLIANCE_UNALLIED)
call SetForceAllianceStateBJ(Lc,Lc,bj_ALLIANCE_NEUTRAL)
call SetForceAllianceStateBJ(Xc,Xc,bj_ALLIANCE_NEUTRAL)
call SetForceAllianceStateBJ(Cc,Cc,bj_ALLIANCE_NEUTRAL)
call SetForceAllianceStateBJ(Vc,Vc,bj_ALLIANCE_NEUTRAL)
set l9=0
set b9=23
loop
exitwhen l9>b9
call SetPlayerState(dO[l9],PLAYER_STATE_RESOURCE_GOLD,250)
call SetPlayerState(dO[l9],PLAYER_STATE_RESOURCE_LUMBER,200)
if vo then
call O0w(dO[l9])
endif
call SetPlayerTechMaxAllowed(dO[l9],1747988789,1)
set yO[l9]=Wiw(dO[l9],"when calling new_PlayerStats in MainInit, line 121")
set n9=yO[l9]
set d9=dO[l9]
if GetPlayerSlotState(d9)==PLAYER_SLOT_STATE_PLAYING then
set R9=GetPlayerController(d9)==MAP_CONTROL_USER
else
set R9=false
endif
set Wb[Qb]="when calling setInGame in MainInit, line 122"
set Qb=Qb+1
if kb[n9]==0 then
if n9==0 then
call g6("Nullpointer exception when calling PlayerStats.setInGame","when calling error in PlayerStats, line 17")
else
call g6("Called PlayerStats.setInGame on invalid object.","when calling error in PlayerStats, line 17")
endif
endif
set qO[n9]=R9
set Qb=Qb-1
set l9=l9+1
endloop
call I9("when calling setPlayersAtStart in MainInit, line 124")
set y9=CreateTrigger()
call TriggerRegisterTimerEvent(y9,0.01,false)
call TriggerAddAction(y9,Rf)
set Qb=Qb-1
set y9=null
set a9=null
set d9=null
return true
endfunction
function Daw takes nothing returns boolean
set Qb=0
return T9("MainInit, line 1")
endfunction
function Dcw takes nothing returns boolean
return true
endfunction
function Ax takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function Dx takes nothing returns boolean
if not Ax() then
return false
endif
return true
endfunction
function WD takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989325 then
return false
endif
return true
endfunction
function ED takes nothing returns boolean
if not WD() then
return false
endif
return true
endfunction
function EF takes nothing returns nothing
local player GF=GetOwningPlayer(GetSpellTargetUnit())
local playerstate gF=PLAYER_STATE_RESOURCE_GOLD
local playerstate hF
local playerstate FF
local player kF
local force jF
local location xF
local real vF
local real mF
local player QF
local force WF
if gF==PLAYER_STATE_RESOURCE_GOLD then
set hF=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(GF,hF,GetPlayerState(GF,hF)+500)
elseif gF==PLAYER_STATE_RESOURCE_LUMBER then
set FF=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(GF,FF,GetPlayerState(GF,FF)+500)
endif
call SetPlayerState(GF,gF,GetPlayerState(GF,gF)+500)
call RemoveUnit(GetSpellAbilityUnit())
set kF=GetOwningPlayer(GetSpellTargetUnit())
set jF=CreateForce()
call ForceAddPlayer(jF,kF)
if IsPlayerInForce(GetLocalPlayer(),jF) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_1231")
endif
set y=GetUnitLoc(GetSpellTargetUnit())
set QF=GetOwningPlayer(GetSpellTargetUnit())
set WF=CreateForce()
call ForceAddPlayer(WF,QF)
set xF=y
set vF=GetLocationX(xF)
set mF=GetLocationY(xF)
if IsPlayerInForce(GetLocalPlayer(),WF) then
call PingMinimap(vF,mF,2.00)
endif
call RemoveLocation(y)
set GF=null
set gF=null
set hF=null
set FF=null
set kF=null
set jF=null
set xF=null
set QF=null
set WF=null
endfunction
function EI takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990607,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990583,0)
endfunction
function EK takes nothing returns boolean
return true
endfunction
function WZ takes nothing returns boolean
if GetResearched()!=1378890033 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890033,true)!=2 then
return false
endif
return true
endfunction
function EZ takes nothing returns boolean
if not WZ() then
return false
endif
return true
endfunction
function H1 takes string A1 returns boolean
local integer D1
set Wb[Qb]=A1
set Qb=Qb+1
set Wb[Qb]="when calling alloc_Closure in Credits, line 5"
set Qb=Qb+1
if Jl==0 then
if Kl<32768 then
set Kl=Kl+1
set D1=Kl
set Ll[D1]=633
else
call g6("Out of memory: Could not create Closure.","when calling error in Credits, line 5")
set D1=0
endif
else
set Jl=Jl-1
set D1=Hl[Jl]
set Ll[D1]=633
endif
set Qb=Qb-1
set Wb[Qb]="when calling doPeriodically in Credits, line 5"
set Qb=Qb+1
set Wb[Qb]="when calling start in ClosureTimers, line 36"
set Qb=Qb+1
if Ll[D1]==0 then
if D1==0 then
call g6("Nullpointer exception when calling CallbackPeriodic.start","when calling error in ClosureTimers, line 88")
else
call g6("Called CallbackPeriodic.start on invalid object.","when calling error in ClosureTimers, line 88")
endif
endif
call f3(D1,600,"when calling start in ClosureTimers, line 88")
set Qb=Qb-1-1-1
return true
endfunction
function Eaw takes nothing returns boolean
set Qb=0
return H1("Credits, line 1")
endfunction
function Eiw takes nothing returns boolean
set RO=ConvertPlayerColor(24)
set TO=ConvertPlayerColor(25)
set YO=ConvertPlayerColor(26)
set GO=ConvertPlayerColor(27)
set gO[0]=PLAYER_COLOR_RED
set gO[1]=PLAYER_COLOR_BLUE
set gO[2]=PLAYER_COLOR_CYAN
set gO[3]=PLAYER_COLOR_PURPLE
set gO[4]=PLAYER_COLOR_YELLOW
set gO[5]=PLAYER_COLOR_ORANGE
set gO[6]=PLAYER_COLOR_GREEN
set gO[7]=PLAYER_COLOR_PINK
set gO[8]=PLAYER_COLOR_LIGHT_GRAY
set gO[9]=PLAYER_COLOR_LIGHT_BLUE
set gO[10]=PLAYER_COLOR_AQUA
set gO[11]=PLAYER_COLOR_BROWN
set gO[12]=PLAYER_COLOR_MAROON
set gO[13]=PLAYER_COLOR_NAVY
set gO[14]=PLAYER_COLOR_TURQUOISE
set gO[15]=PLAYER_COLOR_VIOLET
set gO[16]=PLAYER_COLOR_WHEAT
set gO[17]=PLAYER_COLOR_PEACH
set gO[18]=PLAYER_COLOR_MINT
set gO[19]=PLAYER_COLOR_LAVENDER
set gO[20]=PLAYER_COLOR_COAL
set gO[21]=PLAYER_COLOR_SNOW
set gO[22]=PLAYER_COLOR_EMERALD
set gO[23]=PLAYER_COLOR_PEANUT
set gO[24]=RO
set gO[25]=TO
set gO[26]=YO
set gO[27]=GO
return true
endfunction
function Ek takes nothing returns nothing
local player Gk=GetOwningPlayer(GetKillingUnit())
local playerstate gk=PLAYER_STATE_RESOURCE_GOLD
local playerstate hk
local playerstate Fk
local player kk
local force jk
local location xk
local real vk
local real mk
local player Qk
local force Wk
if gk==PLAYER_STATE_RESOURCE_GOLD then
set hk=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(Gk,hk,GetPlayerState(Gk,hk)+125)
elseif gk==PLAYER_STATE_RESOURCE_LUMBER then
set Fk=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(Gk,Fk,GetPlayerState(Gk,Fk)+125)
endif
call SetPlayerState(Gk,gk,GetPlayerState(Gk,gk)+125)
set kk=GetOwningPlayer(GetKillingUnit())
set jk=CreateForce()
call ForceAddPlayer(jk,kk)
if IsPlayerInForce(GetLocalPlayer(),jk) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_091")
endif
set y=GetUnitLoc(GetDyingUnit())
set Qk=GetOwningPlayer(GetDyingUnit())
set Wk=CreateForce()
call ForceAddPlayer(Wk,Qk)
set xk=y
set vk=GetLocationX(xk)
set mk=GetLocationY(xk)
if IsPlayerInForce(GetLocalPlayer(),Wk) then
call PingMinimap(vk,mk,2.00)
endif
call RemoveLocation(y)
set Gk=null
set gk=null
set hk=null
set Fk=null
set kk=null
set jk=null
set xk=null
set Qk=null
set Wk=null
endfunction
function Etw takes nothing returns boolean
local integer Qtw
local integer Wtw
set fO=GetLocalPlayer()
set Qtw=0
set Wtw=bj_MAX_PLAYER_SLOTS-1
loop
exitwhen Qtw>Wtw
set dO[Qtw]=Player(Qtw)
set Qtw=Qtw+1
endloop
return true
endfunction
function Ex takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988561,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988784,0)
endfunction
function F6 takes nothing returns boolean
set uo=CreateTimer()
call TimerStart(uo,100000.,false,null)
call TimerStart(CreateTimer(),0.030,true,df)
return true
endfunction
function hE takes nothing returns boolean
if GetResearched()!=1378890035 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890035,true)!=1 then
return false
endif
return true
endfunction
function FE takes nothing returns boolean
if not hE() then
return false
endif
return true
endfunction
function FH takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function hI takes nothing returns boolean
if GetResearched()!=1378890051 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890051,true)!=1 then
return false
endif
return true
endfunction
function FI takes nothing returns boolean
if not hI() then
return false
endif
return true
endfunction
function FQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989057,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988558,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988551,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989066,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651824,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651826,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988818,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989080,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989072,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989082,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988559,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988812,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651828,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989065,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989067,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989301,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651843,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988561,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988788,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988565,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988566,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747988567,0)
endfunction
function FU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989830,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989829,0)
endfunction
function Fcw takes nothing returns boolean
return true
endfunction
function hx takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function Fx takes nothing returns boolean
if not hx() then
return false
endif
return true
endfunction
function YJ takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747988530 then
return false
endif
return true
endfunction
function GJ takes nothing returns boolean
if not YJ() then
return false
endif
return true
endfunction
function Gbw takes nothing returns boolean
return true
endfunction
function Gm takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988812,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988559,0)
endfunction
function Gsw takes nothing returns boolean
return true
endfunction
function DD takes nothing returns boolean
if GetUnitTypeId(GetConstructedStructure())!=1747990353 then
return false
endif
return true
endfunction
function HD takes nothing returns boolean
if not DD() then
return false
endif
return true
endfunction
function HI takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651855,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651851,0)
endfunction
function DZ takes nothing returns boolean
if GetResearched()!=1378889797 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889797,true)!=1 then
return false
endif
return true
endfunction
function HZ takes nothing returns boolean
if not DZ() then
return false
endif
return true
endfunction
function u7 takes string M6 returns integer
local integer w7
set Wb[Qb]=M6
set Qb=Qb+1
set Wb[Qb]="when calling HashMap in HashMap, line 7"
set Qb=Qb+1
if ib==0 then
if Sb<32768 then
set Sb=Sb+1
set w7=Sb
set cb[w7]=726
else
call g6("Out of memory: Could not create HashMap.","when calling error in HashMap, line 8")
set w7=0
endif
else
set ib=ib-1
set w7=tb[ib]
set cb[w7]=726
endif
set Qb=Qb-1-1
return w7
endfunction
function g0w takes string y0w returns boolean
local playerunitevent p0w
local playerunitevent e0w
local integer q0w
local integer a0w
local integer n0w
local integer d0w
local integer f0w
local integer R0w
local integer T0w
local integer Y0w
local integer G0w
set Wb[Qb]=y0w
set Qb=Qb+1
set Po=u7("when calling new_HashMap in MassControl, line 7")
set q0w=R2I(500000)
set a0w=R2I(700000)
set n0w=R2I(1000000)
set Wb[Qb]="when calling asList in MassControl, line 8"
set Qb=Qb+1
set d0w=i9("when calling new_LinkedList in LinkedList, line 391")
call Lpw(d0w,q0w,"when calling add in LinkedList, line 393")
call Lpw(d0w,a0w,"when calling add in LinkedList, line 393")
call Lpw(d0w,n0w,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set Ao=d0w
set Wb[Qb]="when calling asList in MassControl, line 14"
set Qb=Qb+1
set f0w=i9("when calling new_LinkedList in LinkedList, line 391")
call Lpw(f0w,1211118401,"when calling add in LinkedList, line 393")
call Lpw(f0w,1211119699,"when calling add in LinkedList, line 393")
call Lpw(f0w,1211119701,"when calling add in LinkedList, line 393")
call Lpw(f0w,1211119700,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set Do=f0w
set p0w=EVENT_PLAYER_UNIT_SPELL_CAST
set Wb[Qb]="when calling alloc_Closure in MassControl, line 22"
set Qb=Qb+1
if Gl==0 then
if gl<32768 then
set gl=gl+1
set R0w=gl
set hl[R0w]=671
else
call g6("Out of memory: Could not create Closure.","when calling error in MassControl, line 22")
set R0w=0
endif
else
set Gl=Gl-1
set R0w=Yl[Gl]
set hl[R0w]=671
endif
set Qb=Qb-1
set ec[R0w]=0
set qc[R0w]=0
set ac[R0w]=0
set Wb[Qb]="when calling add in MassControl, line 22"
set Qb=Qb+1
set Wb[Qb]="when calling toIntId in ClosureEvents, line 111"
set Qb=Qb+1
set T0w=oc[GetHandleId(p0w)]
if T0w==0 then
set T0w=tM(p0w,"when calling registerEventId in ClosureEvents, line 228")
endif
set Qb=Qb-1
set ec[R0w]=T0w
if yc[ec[R0w]]!=0 then
set ac[yc[ec[R0w]]]=R0w
set qc[R0w]=yc[ec[R0w]]
endif
set yc[ec[R0w]]=R0w
set Qb=Qb-1
set e0w=EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER
set Wb[Qb]="when calling alloc_Closure in MassControl, line 32"
set Qb=Qb+1
if Gl==0 then
if gl<32768 then
set gl=gl+1
set Y0w=gl
set hl[Y0w]=672
else
call g6("Out of memory: Could not create Closure.","when calling error in MassControl, line 32")
set Y0w=0
endif
else
set Gl=Gl-1
set Y0w=Yl[Gl]
set hl[Y0w]=672
endif
set Qb=Qb-1
set ec[Y0w]=0
set qc[Y0w]=0
set ac[Y0w]=0
set Wb[Qb]="when calling add in MassControl, line 32"
set Qb=Qb+1
set Wb[Qb]="when calling toIntId in ClosureEvents, line 111"
set Qb=Qb+1
set G0w=oc[GetHandleId(e0w)]
if G0w==0 then
set G0w=tM(e0w,"when calling registerEventId in ClosureEvents, line 228")
endif
set Qb=Qb-1
set ec[Y0w]=G0w
if yc[ec[Y0w]]!=0 then
set ac[yc[ec[Y0w]]]=Y0w
set qc[Y0w]=yc[ec[Y0w]]
endif
set yc[ec[Y0w]]=Y0w
set Qb=Qb-1-1
set p0w=null
set e0w=null
return true
endfunction
function Haw takes nothing returns boolean
set Qb=0
return g0w("MassControl, line 1")
endfunction
function Hj takes nothing returns nothing
call SetMapFlag(MAP_LOCK_RESOURCE_TRADING,false)
endfunction
function Hx takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988565,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988563,0)
endfunction
function I7 takes nothing returns boolean
return true
endfunction
function IE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989825,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989817,0)
endfunction
function UJ takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990327 then
return false
endif
return true
endfunction
function IJ takes nothing returns boolean
if not UJ() then
return false
endif
return true
endfunction
function IK takes nothing returns boolean
return true
endfunction
function UQ takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function IQ takes nothing returns boolean
if not UQ() then
return false
endif
return true
endfunction
function tww takes string uww returns boolean
local integer rww
local integer sww
set Wb[Qb]=uww
set Qb=Qb+1
set Wb[Qb]="when calling alloc_Closure in MultiboardCityUpdate, line 18"
set Qb=Qb+1
if Pl==0 then
if Al<32768 then
set Al=Al+1
set rww=Al
set Dl[rww]=648
else
call g6("Out of memory: Could not create Closure.","when calling error in MultiboardCityUpdate, line 18")
set rww=0
endif
else
set Pl=Pl-1
set rww=Il[Pl]
set Dl[rww]=648
endif
set Qb=Qb-1
set Wb[Qb]="when calling doAfter in MultiboardCityUpdate, line 18"
set Qb=Qb+1
set Wb[Qb]="when calling start in ClosureTimers, line 15"
set Qb=Qb+1
if Dl[rww]==0 then
if rww==0 then
call g6("Nullpointer exception when calling CallbackSingle.start","when calling error in ClosureTimers, line 67")
else
call g6("Called CallbackSingle.start on invalid object.","when calling error in ClosureTimers, line 67")
endif
endif
call g3(rww,0.01,"when calling start in ClosureTimers, line 67")
set Qb=Qb-1-1
set Wb[Qb]="when calling alloc_Closure in MultiboardCityUpdate, line 25"
set Qb=Qb+1
if Jl==0 then
if Kl<32768 then
set Kl=Kl+1
set sww=Kl
set Ll[sww]=637
else
call g6("Out of memory: Could not create Closure.","when calling error in MultiboardCityUpdate, line 25")
set sww=0
endif
else
set Jl=Jl-1
set sww=Hl[Jl]
set Ll[sww]=637
endif
set Qb=Qb-1
set Wb[Qb]="when calling doPeriodically in MultiboardCityUpdate, line 25"
set Qb=Qb+1
set Wb[Qb]="when calling start in ClosureTimers, line 36"
set Qb=Qb+1
if Ll[sww]==0 then
if sww==0 then
call g6("Nullpointer exception when calling CallbackPeriodic.start","when calling error in ClosureTimers, line 88")
else
call g6("Called CallbackPeriodic.start on invalid object.","when calling error in ClosureTimers, line 88")
endif
endif
call f3(sww,1.0,"when calling start in ClosureTimers, line 88")
set Qb=Qb-1-1-1
return true
endfunction
function Iaw takes nothing returns boolean
set Qb=0
return tww("MultiboardCityUpdate, line 1")
endfunction
function Uh takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988801 then
return false
endif
if GetUnitTypeId(GetSpellTargetUnit())!=1747988787 then
return false
endif
return true
endfunction
function Ih takes nothing returns boolean
if not Uh() then
return false
endif
return true
endfunction
function Im takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989082,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989072,0)
endfunction
function JD takes nothing returns nothing
call UnitAddAbility(GetConstructedStructure(),1093677896)
endfunction
function HU takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function JU takes nothing returns boolean
if not HU() then
return false
endif
return true
endfunction
function HW takes nothing returns boolean
if GetResearched()!=1378889809 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889809,true)!=2 then
return false
endif
return true
endfunction
function JW takes nothing returns boolean
if not HW() then
return false
endif
return true
endfunction
function JY takes nothing returns nothing
local player IY=GetOwningPlayer(GetAttacker())
local player PY=GetOwningPlayer(GetAttacker())
local player AY
local player DY
local unit HY
set r[GetPlayerId(IY)+1]=r[GetPlayerId(PY)+1]+1
set AY=GetOwningPlayer(GetTriggerUnit())
set DY=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(AY)+1]=r[GetPlayerId(DY)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set HY=GetTriggerUnit()
call SetUnitState(HY,UNIT_STATE_LIFE,GetUnitState(HY,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set IY=null
set PY=null
set AY=null
set DY=null
set HY=null
endfunction
function JZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989833,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989834,0)
endfunction
function Xsw takes string Hsw returns boolean
local playerunitevent Jsw
local integer Ksw
local integer Lsw
set Wb[Qb]=Hsw
set Qb=Qb+1
set Jsw=EVENT_PLAYER_UNIT_CONSTRUCT_START
set Wb[Qb]="when calling alloc_Closure in NoShipsNearRivers, line 7"
set Qb=Qb+1
if Gl==0 then
if gl<32768 then
set gl=gl+1
set Ksw=gl
set hl[Ksw]=673
else
call g6("Out of memory: Could not create Closure.","when calling error in NoShipsNearRivers, line 7")
set Ksw=0
endif
else
set Gl=Gl-1
set Ksw=Yl[Gl]
set hl[Ksw]=673
endif
set Qb=Qb-1
set ec[Ksw]=0
set qc[Ksw]=0
set ac[Ksw]=0
set Wb[Qb]="when calling add in NoShipsNearRivers, line 7"
set Qb=Qb+1
set Wb[Qb]="when calling toIntId in ClosureEvents, line 111"
set Qb=Qb+1
set Lsw=oc[GetHandleId(Jsw)]
if Lsw==0 then
set Lsw=tM(Jsw,"when calling registerEventId in ClosureEvents, line 228")
endif
set Qb=Qb-1
set ec[Ksw]=Lsw
if yc[ec[Ksw]]!=0 then
set ac[yc[ec[Ksw]]]=Ksw
set qc[Ksw]=yc[ec[Ksw]]
endif
set yc[ec[Ksw]]=Ksw
set Qb=Qb-1-1
set Jsw=null
return true
endfunction
function Jaw takes nothing returns boolean
set Qb=0
return Xsw("NoShipsNearRivers, line 1")
endfunction
function Jj takes nothing returns boolean
if GetUnitTypeId(GetDyingUnit())!=1747989049 then
return false
endif
return true
endfunction
function KA takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747988553 then
return false
endif
return true
endfunction
function JE takes nothing returns boolean
if GetResearched()!=1378889818 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889818,true)!=2 then
return false
endif
return true
endfunction
function KE takes nothing returns boolean
if not JE() then
return false
endif
return true
endfunction
function KU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990321,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990104,0)
endfunction
function KW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651833,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651841,0)
endfunction
function btw takes string ctw returns boolean
local playerevent otw
local integer Otw
local integer ltw
set Wb[Qb]=ctw
set Qb=Qb+1
set otw=EVENT_PLAYER_LEAVE
set Wb[Qb]="when calling alloc_Closure in OnPlayerLeave, line 6"
set Qb=Qb+1
if Gl==0 then
if gl<32768 then
set gl=gl+1
set Otw=gl
set hl[Otw]=674
else
call g6("Out of memory: Could not create Closure.","when calling error in OnPlayerLeave, line 6")
set Otw=0
endif
else
set Gl=Gl-1
set Otw=Yl[Gl]
set hl[Otw]=674
endif
set Qb=Qb-1
set ec[Otw]=0
set qc[Otw]=0
set ac[Otw]=0
set Wb[Qb]="when calling add in OnPlayerLeave, line 6"
set Qb=Qb+1
set Wb[Qb]="when calling toIntId in ClosureEvents, line 111"
set Qb=Qb+1
set ltw=oc[GetHandleId(otw)]
if ltw==0 then
set ltw=tM(otw,"when calling registerEventId in ClosureEvents, line 228")
endif
set Qb=Qb-1
set ec[Otw]=ltw
if yc[ec[Otw]]!=0 then
set ac[yc[ec[Otw]]]=Otw
set qc[Otw]=yc[ec[Otw]]
endif
set yc[ec[Otw]]=Otw
set Qb=Qb-1-1
set otw=null
return true
endfunction
function Kaw takes nothing returns boolean
set Qb=0
return btw("OnPlayerLeave, line 1")
endfunction
function Jm takes nothing returns boolean
if GetResearched()!=1378889800 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889800,true)!=1 then
return false
endif
return true
endfunction
function Km takes nothing returns boolean
if not Jm() then
return false
endif
return true
endfunction
function LE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989814,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989825,0)
endfunction
function KJ takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990085 then
return false
endif
return true
endfunction
function LJ takes nothing returns boolean
if not KJ() then
return false
endif
return true
endfunction
function LM takes nothing returns boolean
set Tc=CreateGroup()
set gc=Filter(bf)
return true
endfunction
function KQ takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function LQ takes nothing returns boolean
if not KQ() then
return false
endif
return true
endfunction
function Zew takes integer Oew,integer lew,integer bew,integer yew,integer pew,integer eew,integer qew,integer aew,integer dew,integer few,integer Rew,integer Tew,integer Yew,integer Gew,integer gew,integer hew,integer Few,integer kew,integer jew,integer xew,integer vew,integer mew,integer Qew,string Wew returns integer
local integer Eew
set Wb[Qb]=Wew
set Qb=Qb+1
set Eew=i9("when calling new_LinkedList in LinkedList, line 391")
call Lpw(Eew,Oew,"when calling add in LinkedList, line 393")
call Lpw(Eew,lew,"when calling add in LinkedList, line 393")
call Lpw(Eew,bew,"when calling add in LinkedList, line 393")
call Lpw(Eew,yew,"when calling add in LinkedList, line 393")
call Lpw(Eew,pew,"when calling add in LinkedList, line 393")
call Lpw(Eew,eew,"when calling add in LinkedList, line 393")
call Lpw(Eew,qew,"when calling add in LinkedList, line 393")
call Lpw(Eew,aew,"when calling add in LinkedList, line 393")
call Lpw(Eew,dew,"when calling add in LinkedList, line 393")
call Lpw(Eew,few,"when calling add in LinkedList, line 393")
call Lpw(Eew,Rew,"when calling add in LinkedList, line 393")
call Lpw(Eew,Tew,"when calling add in LinkedList, line 393")
call Lpw(Eew,Yew,"when calling add in LinkedList, line 393")
call Lpw(Eew,Gew,"when calling add in LinkedList, line 393")
call Lpw(Eew,gew,"when calling add in LinkedList, line 393")
call Lpw(Eew,hew,"when calling add in LinkedList, line 393")
call Lpw(Eew,Few,"when calling add in LinkedList, line 393")
call Lpw(Eew,kew,"when calling add in LinkedList, line 393")
call Lpw(Eew,jew,"when calling add in LinkedList, line 393")
call Lpw(Eew,xew,"when calling add in LinkedList, line 393")
call Lpw(Eew,vew,"when calling add in LinkedList, line 393")
call Lpw(Eew,mew,"when calling add in LinkedList, line 393")
call Lpw(Eew,Qew,"when calling add in LinkedList, line 393")
set Qb=Qb-1
return Eew
endfunction
function tSw takes string wSw returns boolean
local playerunitevent uSw
local integer rSw
local integer sSw
set Wb[Qb]=wSw
set Qb=Qb+1
set kO=Zew(1747988557,1747989075,1747990102,1747988785,1747989839,1747990101,1747989554,1747989041,1747990344,1747989059,1747989060,1747988844,1747990351,1747990352,1747990356,1747989331,1747990350,1747989809,1747990353,1747990354,1747990355,1747988568,1747990341,"when calling asList in RangeChecks, line 5")
set uSw=EVENT_PLAYER_UNIT_CONSTRUCT_START
set Wb[Qb]="when calling alloc_Closure in RangeChecks, line 10"
set Qb=Qb+1
if Gl==0 then
if gl<32768 then
set gl=gl+1
set rSw=gl
set hl[rSw]=675
else
call g6("Out of memory: Could not create Closure.","when calling error in RangeChecks, line 10")
set rSw=0
endif
else
set Gl=Gl-1
set rSw=Yl[Gl]
set hl[rSw]=675
endif
set Qb=Qb-1
set ec[rSw]=0
set qc[rSw]=0
set ac[rSw]=0
set Wb[Qb]="when calling add in RangeChecks, line 10"
set Qb=Qb+1
set Wb[Qb]="when calling toIntId in ClosureEvents, line 111"
set Qb=Qb+1
set sSw=oc[GetHandleId(uSw)]
if sSw==0 then
set sSw=tM(uSw,"when calling registerEventId in ClosureEvents, line 228")
endif
set Qb=Qb-1
set ec[rSw]=sSw
if yc[ec[rSw]]!=0 then
set ac[yc[ec[rSw]]]=rSw
set qc[rSw]=yc[ec[rSw]]
endif
set yc[ec[rSw]]=rSw
set Qb=Qb-1-1
set uSw=null
return true
endfunction
function Law takes nothing returns boolean
set Qb=0
return tSw("RangeChecks, line 1")
endfunction
function Lm takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988818,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988552,0)
endfunction
function NE takes nothing returns boolean
if GetResearched()!=1378890037 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890037,true)!=1 then
return false
endif
return true
endfunction
function ME takes nothing returns boolean
if not NE() then
return false
endif
return true
endfunction
function MU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990322,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990105,0)
endfunction
function MW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989560,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989579,0)
endfunction
function Maw takes nothing returns nothing
set Qb=0
set Wb[Qb]="ClosureEvents, line 286"
set Qb=Qb+1
call vM("when calling generalEventCallback in ClosureEvents, line 286")
set Qb=Qb-1
endfunction
function Miw takes nothing returns boolean
return true
endfunction
function Nm takes nothing returns boolean
if GetResearched()!=1378889800 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889800,true)!=2 then
return false
endif
return true
endfunction
function Mm takes nothing returns boolean
if not Nm() then
return false
endif
return true
endfunction
function ND takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function BU takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function NU takes nothing returns boolean
if not BU() then
return false
endif
return true
endfunction
function BW takes nothing returns boolean
if GetResearched()!=1378889811 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889811,true)!=1 then
return false
endif
return true
endfunction
function NW takes nothing returns boolean
if not BW() then
return false
endif
return true
endfunction
function NZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989832,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989833,0)
endfunction
function DM takes integer IM,string PM returns nothing
local integer AM
set Wb[Qb]=PM
set Qb=Qb+1
set AM=yc[ec[IM]]
if AM==IM then
set yc[ec[IM]]=qc[IM]
elseif ac[IM]!=0 then
set qc[ac[IM]]=qc[IM]
endif
set ac[qc[IM]]=ac[IM]
set AM=pc[ec[IM]]
if AM==IM then
set pc[ec[IM]]=qc[IM]
elseif ac[IM]!=0 then
set qc[ac[IM]]=qc[IM]
endif
set ac[qc[IM]]=ac[IM]
set qc[IM]=0
set ac[IM]=0
set Wb[Qb]="when calling EventListener in ClosureEvents, line 201"
set Qb=Qb+1
if hl[IM]==0 then
call g6("Double free: object of type EventListener","when calling error in ClosureEvents, line 98")
else
set Yl[Gl]=IM
set Gl=Gl+1
set hl[IM]=0
endif
set Qb=Qb-1-1
endfunction
function aM takes integer yM,string pM returns nothing
local integer eM
local integer qM
set Wb[Qb]=pM
set Qb=Qb+1
if yM>0 then
if pc[yM]!=0 then
set eM=pc[yM]
set pc[yM]=0
loop
exitwhen eM==0
set qM=eM
set eM=qc[eM]
set pM="when calling EventListener in ClosureEvents, line 275"
set Wb[Qb]="when calling EventListener in ClosureEvents, line 275"
set Qb=Qb+1
if hl[qM]==0 then
if qM==0 then
call g6("Nullpointer exception when calling EventListener.EventListener","when calling error in ClosureEvents, line 98")
else
call g6("Called EventListener.EventListener on invalid object.","when calling error in ClosureEvents, line 98")
endif
endif
call DM(qM,"when calling destroyEventListener in ClosureEvents, line 98")
set Qb=Qb-1
endloop
endif
endif
set Qb=Qb-1
endfunction
function KM takes integer HM,string JM returns nothing
set Wb[Qb]=JM
set Qb=Qb+1
if Rc[HM]!=null then
if opw(bc,GetHandleId(Rc[HM]),"when calling get in ClosureEvents, line 60")==HM then
call spw(bc,GetHandleId(Rc[HM]),nc[HM],"when calling put in ClosureEvents, line 62")
elseif dc[HM]!=0 then
set nc[dc[HM]]=nc[HM]
endif
elseif opw(lc,fc[HM],"when calling get in ClosureEvents, line 66")==HM then
call spw(lc,fc[HM],nc[HM],"when calling put in ClosureEvents, line 68")
elseif dc[HM]!=0 then
set nc[dc[HM]]=nc[HM]
endif
set dc[nc[HM]]=dc[HM]
set nc[HM]=0
set dc[HM]=0
set Qb=Qb-1
endfunction
function uyw takes integer Mbw,string wyw returns nothing
set Wb[Qb]=wyw
set Qb=Qb+1
if Cl[Mbw]==0 then
if Mbw==0 then
call g6("Nullpointer exception when calling OnCastListener.OnCastListener","when calling error in ClosureEvents, line 50")
else
call g6("Called OnCastListener.OnCastListener on invalid object.","when calling error in ClosureEvents, line 50")
endif
endif
set Wb[Qb]="when calling destroyOnCastListener in ClosureEvents, line 50"
set Qb=Qb+1
call KM(Mbw,"when calling OnCastListener_onDestroy in ClosureEvents, line 58")
set Wb[Qb]="when calling OnCastListener in ClosureEvents, line 58"
set Qb=Qb+1
if Cl[Mbw]==0 then
call g6("Double free: object of type OnCastListener","when calling error in ClosureEvents, line 50")
else
set Xl=Xl+1
set Cl[Mbw]=0
endif
set Qb=Qb-1-1-1
endfunction
function bM takes unit iM,string SM returns nothing
local integer cM
local integer oM
local integer OM
local integer lM
set Wb[Qb]=SM
set Qb=Qb+1
call aM(GetUnitUserData(iM),"when calling unregisterEvents in ClosureEvents, line 251")
if Nyw(bc,GetHandleId(iM),"when calling has in ClosureEvents, line 252") then
set cM=opw(bc,GetHandleId(iM),"when calling get in ClosureEvents, line 253")
call ypw(bc,GetHandleId(iM),"when calling remove in ClosureEvents, line 254")
loop
exitwhen cM==0
set oM=cM
set cM=nc[cM]
call uyw(oM,"when calling OnCastListener in ClosureEvents, line 258")
endloop
endif
if Nyw(bc,GetHandleId(iM),"when calling has in ClosureEvents, line 259") then
set OM=opw(bc,GetHandleId(iM),"when calling get in ClosureEvents, line 260")
loop
exitwhen OM==0
set lM=OM
set OM=nc[OM]
call uyw(lM,"when calling OnCastListener in ClosureEvents, line 264")
endloop
endif
set Qb=Qb-1
endfunction
function Naw takes nothing returns nothing
set Qb=0
set Wb[Qb]="ClosureEvents, line 283"
set Qb=Qb+1
call bM(ol,"when calling unregisterEventsForUnit in ClosureEvents, line 283")
set Qb=Qb-1
endfunction
function Nh takes nothing returns nothing
local player Ph=GetOwningPlayer(GetSpellTargetUnit())
local playerstate Ah=PLAYER_STATE_RESOURCE_LUMBER
local playerstate Dh
local playerstate Hh
local player Jh
local force Kh
local location Lh
local real Xh
local real Ch
local player Vh
local force Bh
if Ah==PLAYER_STATE_RESOURCE_GOLD then
set Dh=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(Ph,Dh,GetPlayerState(Ph,Dh)+500)
elseif Ah==PLAYER_STATE_RESOURCE_LUMBER then
set Hh=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(Ph,Hh,GetPlayerState(Ph,Hh)+500)
endif
call SetPlayerState(Ph,Ah,GetPlayerState(Ph,Ah)+500)
call RemoveUnit(GetSpellAbilityUnit())
set Jh=GetOwningPlayer(GetSpellTargetUnit())
set Kh=CreateForce()
call ForceAddPlayer(Kh,Jh)
if IsPlayerInForce(GetLocalPlayer(),Kh) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_1228")
endif
set y=GetUnitLoc(GetSpellTargetUnit())
set Vh=GetOwningPlayer(GetSpellTargetUnit())
set Bh=CreateForce()
call ForceAddPlayer(Bh,Vh)
set Lh=y
set Xh=GetLocationX(Lh)
set Ch=GetLocationY(Lh)
if IsPlayerInForce(GetLocalPlayer(),Bh) then
call PingMinimap(Xh,Ch,2.00)
endif
call RemoveLocation(y)
set Ph=null
set Ah=null
set Dh=null
set Hh=null
set Jh=null
set Kh=null
set Lh=null
set Vh=null
set Bh=null
endfunction
function oG takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1966092336 then
return false
endif
if GetSpellAbilityId()!=1093677906 then
return false
endif
if GetOwningPlayer(GetSpellTargetUnit())==Player(PLAYER_NEUTRAL_AGGRESSIVE) then
return false
endif
if IsUnitType(GetSpellTargetUnit(),UNIT_TYPE_STRUCTURE)!=true then
return false
endif
return true
endfunction
function OG takes nothing returns boolean
if not oG() then
return false
endif
return true
endfunction
function oJ takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747988809 then
return false
endif
return true
endfunction
function OJ takes nothing returns boolean
if not oJ() then
return false
endif
return true
endfunction
function OOw takes nothing returns boolean
set il=CreateTrigger()
set Sl=CreateTrigger()
set cl=null
set ol=null
call TriggerAddCondition(oO,Filter(hf))
call TriggerAddAction(oO,Ff)
return true
endfunction
function OT takes nothing returns nothing
local group ST=GetUnitsOfTypeIdAll(1747988554)
local code cT=ly
local boolean oT=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(ST,cT)
if oT then
call DestroyGroup(ST)
endif
set ST=null
endfunction
function Om takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989067,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989065,0)
endfunction
function C9 takes string P9 returns nothing
local integer A9
local integer D9
local playerevent H9
local integer J9
local integer K9
local force L9
local force X9
set Wb[Qb]=P9
set Qb=Qb+1
if vo then
set Qb=Qb-1
set H9=null
set L9=null
set X9=null
return
endif
set H9=EVENT_PLAYER_END_CINEMATIC
set Wb[Qb]="when calling alloc_Closure in MainInit, line 72"
set Qb=Qb+1
if Gl==0 then
if gl<32768 then
set gl=gl+1
set J9=gl
set hl[J9]=670
else
call g6("Out of memory: Could not create Closure.","when calling error in MainInit, line 72")
set J9=0
endif
else
set Gl=Gl-1
set J9=Yl[Gl]
set hl[J9]=670
endif
set Qb=Qb-1
set ec[J9]=0
set qc[J9]=0
set ac[J9]=0
set Wb[Qb]="when calling add in MainInit, line 72"
set Qb=Qb+1
set Wb[Qb]="when calling toIntId in ClosureEvents, line 111"
set Qb=Qb+1
set K9=oc[GetHandleId(H9)]
if K9==0 then
set K9=tM(H9,"when calling registerEventId in ClosureEvents, line 228")
endif
set Qb=Qb-1
set ec[J9]=K9
if yc[ec[J9]]!=0 then
set ac[yc[ec[J9]]]=J9
set qc[J9]=yc[ec[J9]]
endif
set yc[ec[J9]]=J9
set Qb=Qb-1
set L9=bj_FORCE_ALL_PLAYERS
if IsPlayerInForce(GetLocalPlayer(),L9) then
call ShowInterface(false,0.50)
endif
set A9=0
set D9=4
loop
exitwhen A9>D9
if not jo then
set X9=bj_FORCE_ALL_PLAYERS
set P9=go[A9]
if IsPlayerInForce(GetLocalPlayer(),X9) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,10.0,P9)
endif
call TriggerSleepAction(12.5)
endif
set A9=A9+1
endloop
call CinematicModeExBJ(false,bj_FORCE_ALL_PLAYERS,bj_CINEMODE_INTERFACEFADE)
set jo=true
set Qb=Qb-1
set H9=null
set L9=null
set X9=null
endfunction
function Onw takes nothing returns nothing
set Qb=0
call C9("MainInit, line 128")
endfunction
function Ecw takes string mcw,string Qcw returns boolean
local integer Wcw=StringLength(mcw)
if StringLength(Qcw)>Wcw then
return false
endif
return SubString(mcw,0,StringLength(Qcw))==Qcw
endfunction
function P1 takes nothing returns boolean
return Ecw(GetEventPlayerChatString(),"-")
endfunction
function P7 takes nothing returns boolean
return true
endfunction
function PA takes nothing returns nothing
local integer mA=1
local integer QA=1751277938
local player WA=GetOwningPlayer(GetConstructedStructure())
local rect IA=bj_mapInitialPlayableArea
local location UA=Location(GetRectCenterX(IA),GetRectCenterY(IA))
local location EA=Location(GetLocationX(UA)+100000000.00,GetLocationY(UA)+1000000000.00)
local real ZA=bj_UNIT_FACING
call GroupClear(bj_lastCreatedGroup)
loop
set mA=mA-1
exitwhen mA<0
call CreateUnitAtLocSaveLast(WA,QA,EA,ZA)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
call ShowUnit(bj_lastCreatedUnit,false)
set p[GetPlayerId(GetOwningPlayer(GetConstructedStructure()))+1]=true
set WA=null
set EA=null
set UA=null
set IA=null
endfunction
function IG takes nothing returns boolean
if IsUnitType(GetEnumUnit(),UNIT_TYPE_STRUCTURE)!=false then
return false
endif
return true
endfunction
function PG takes nothing returns nothing
if IG() then
call SetUnitPositionLoc(GetEnumUnit(),c)
endif
endfunction
function PJ takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function IP takes nothing returns boolean
if GetResearched()!=1378890052 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890052,true)!=2 then
return false
endif
return true
endfunction
function PP takes nothing returns boolean
if not IP() then
return false
endif
return true
endfunction
function PQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989812,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989811,0)
endfunction
function C7 takes string A7 returns boolean
local playerunitevent D7
local playerunitevent H7
local integer J7
local integer K7
local integer L7
local integer X7
set Wb[Qb]=A7
set Qb=Qb+1
set D7=EVENT_PLAYER_UNIT_DEATH
set Wb[Qb]="when calling alloc_Closure in LimitEncampments, line 8"
set Qb=Qb+1
if Gl==0 then
if gl<32768 then
set gl=gl+1
set J7=gl
set hl[J7]=666
else
call g6("Out of memory: Could not create Closure.","when calling error in LimitEncampments, line 8")
set J7=0
endif
else
set Gl=Gl-1
set J7=Yl[Gl]
set hl[J7]=666
endif
set Qb=Qb-1
set ec[J7]=0
set qc[J7]=0
set ac[J7]=0
set Wb[Qb]="when calling add in LimitEncampments, line 8"
set Qb=Qb+1
set Wb[Qb]="when calling toIntId in ClosureEvents, line 111"
set Qb=Qb+1
set K7=oc[GetHandleId(D7)]
if K7==0 then
set K7=tM(D7,"when calling registerEventId in ClosureEvents, line 228")
endif
set Qb=Qb-1
set ec[J7]=K7
if yc[ec[J7]]!=0 then
set ac[yc[ec[J7]]]=J7
set qc[J7]=yc[ec[J7]]
endif
set yc[ec[J7]]=J7
set Qb=Qb-1
set H7=EVENT_PLAYER_UNIT_CONSTRUCT_START
set Wb[Qb]="when calling alloc_Closure in LimitEncampments, line 12"
set Qb=Qb+1
if Gl==0 then
if gl<32768 then
set gl=gl+1
set L7=gl
set hl[L7]=667
else
call g6("Out of memory: Could not create Closure.","when calling error in LimitEncampments, line 12")
set L7=0
endif
else
set Gl=Gl-1
set L7=Yl[Gl]
set hl[L7]=667
endif
set Qb=Qb-1
set ec[L7]=0
set qc[L7]=0
set ac[L7]=0
set Wb[Qb]="when calling add in LimitEncampments, line 12"
set Qb=Qb+1
set Wb[Qb]="when calling toIntId in ClosureEvents, line 111"
set Qb=Qb+1
set X7=oc[GetHandleId(H7)]
if X7==0 then
set X7=tM(H7,"when calling registerEventId in ClosureEvents, line 228")
endif
set Qb=Qb-1
set ec[L7]=X7
if yc[ec[L7]]!=0 then
set ac[yc[ec[L7]]]=L7
set qc[L7]=yc[ec[L7]]
endif
set yc[ec[L7]]=L7
set Qb=Qb-1-1
set D7=null
set H7=null
return true
endfunction
function Paw takes nothing returns boolean
set Qb=0
return C7("LimitEncampments, line 1")
endfunction
function Ig takes nothing returns boolean
if IsUnitType(GetEnumUnit(),UNIT_TYPE_STRUCTURE)!=false then
return false
endif
return true
endfunction
function Pg takes nothing returns nothing
if Ig() then
call SetUnitPositionLoc(GetEnumUnit(),S)
endif
endfunction
function Iv takes nothing returns boolean
if GetResearched()!=1378889802 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889802,true)!=1 then
return false
endif
return true
endfunction
function Pv takes nothing returns boolean
if not Iv() then
return false
endif
return true
endfunction
function QE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989570,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989556,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989559,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989557,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989560,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989573,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989574,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651841,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651833,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651832,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989582,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990097,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989812,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990098,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990099,0)
endfunction
function mH takes nothing returns boolean
if GetUnitTypeId(GetConstructedStructure())!=1747989331 then
return false
endif
return true
endfunction
function QH takes nothing returns boolean
if not mH() then
return false
endif
return true
endfunction
function QP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990599,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990600,0)
endfunction
function QU takes nothing returns nothing
set s=bj_FORCE_ALL_PLAYERS
call ForForce(s,kq)
endfunction
function JL takes string FL returns boolean
local trigger kL
local playerunitevent jL
local playerunitevent xL
local integer vL
local integer mL
local player QL
local location WL
local real EL
local integer ZL
local integer UL
local trigger IL
local playerunitevent PL
local integer AL
local integer DL
local integer HL
set Wb[Qb]=FL
set Qb=Qb+1
if vo then
set vL=5
set mL=1747988553
set QL=dO[0]
set WL=Location(-3000.0,1700.0)
set EL=0.
call GroupClear(bj_lastCreatedGroup)
loop
set vL=vL-1
exitwhen vL<0
call CreateUnitAtLocSaveLast(QL,mL,WL,EL)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
endif
set jL=EVENT_PLAYER_UNIT_SELECTED
set Wb[Qb]="when calling alloc_Closure in CityManage, line 9"
set Qb=Qb+1
if Gl==0 then
if gl<32768 then
set gl=gl+1
set ZL=gl
set hl[ZL]=664
else
call g6("Out of memory: Could not create Closure.","when calling error in CityManage, line 9")
set ZL=0
endif
else
set Gl=Gl-1
set ZL=Yl[Gl]
set hl[ZL]=664
endif
set Qb=Qb-1
set ec[ZL]=0
set qc[ZL]=0
set ac[ZL]=0
set Wb[Qb]="when calling add in CityManage, line 9"
set Qb=Qb+1
set Wb[Qb]="when calling toIntId in ClosureEvents, line 111"
set Qb=Qb+1
set UL=oc[GetHandleId(jL)]
if UL==0 then
set UL=tM(jL,"when calling registerEventId in ClosureEvents, line 228")
endif
set Qb=Qb-1
set ec[ZL]=UL
if yc[ec[ZL]]!=0 then
set ac[yc[ec[ZL]]]=ZL
set qc[ZL]=yc[ec[ZL]]
endif
set yc[ec[ZL]]=ZL
set Qb=Qb-1
set kL=CreateTrigger()
call TriggerAddCondition(kL,Condition(uf))
call TriggerAddAction(kL,rf)
set IL=kL
set PL=EVENT_PLAYER_UNIT_SPELL_CAST
set AL=0
loop
call TriggerRegisterPlayerUnitEvent(IL,Player(AL),PL,null)
set AL=AL+1
exitwhen AL==bj_MAX_PLAYER_SLOTS
endloop
set xL=EVENT_PLAYER_UNIT_ATTACKED
set Wb[Qb]="when calling alloc_Closure in CityManage, line 33"
set Qb=Qb+1
if Gl==0 then
if gl<32768 then
set gl=gl+1
set DL=gl
set hl[DL]=665
else
call g6("Out of memory: Could not create Closure.","when calling error in CityManage, line 33")
set DL=0
endif
else
set Gl=Gl-1
set DL=Yl[Gl]
set hl[DL]=665
endif
set Qb=Qb-1
set ec[DL]=0
set qc[DL]=0
set ac[DL]=0
set Wb[Qb]="when calling add in CityManage, line 33"
set Qb=Qb+1
set Wb[Qb]="when calling toIntId in ClosureEvents, line 111"
set Qb=Qb+1
set HL=oc[GetHandleId(xL)]
if HL==0 then
set HL=tM(xL,"when calling registerEventId in ClosureEvents, line 228")
endif
set Qb=Qb-1
set ec[DL]=HL
if yc[ec[DL]]!=0 then
set ac[yc[ec[DL]]]=DL
set qc[DL]=yc[ec[DL]]
endif
set yc[ec[DL]]=DL
set Qb=Qb-1-1
set kL=null
set jL=null
set xL=null
set QL=null
set WL=null
set IL=null
set PL=null
return true
endfunction
function Qaw takes nothing returns boolean
set Qb=0
return JL("CityManage, line 1")
endfunction
function Qv takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989066,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988551,0)
endfunction
function fD takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())==1747988531 then
return true
endif
if GetUnitTypeId(GetTriggerUnit())==1747990328 then
return true
endif
if GetUnitTypeId(GetTriggerUnit())==1747989592 then
return true
endif
if GetUnitTypeId(GetTriggerUnit())==1747990086 then
return true
endif
return false
endfunction
function RD takes nothing returns boolean
if not fD() then
return false
endif
return true
endfunction
function RE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651832,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651830,0)
endfunction
function RI takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990594,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990584,0)
endfunction
function fQ takes nothing returns boolean
if GetResearched()!=1378889783 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889783,true)!=2 then
return false
endif
return true
endfunction
function RQ takes nothing returns boolean
if not fQ() then
return false
endif
return true
endfunction
function fZ takes nothing returns boolean
if GetResearched()!=1378890034 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890034,true)!=2 then
return false
endif
return true
endfunction
function RZ takes nothing returns boolean
if not fZ() then
return false
endif
return true
endfunction
function CN takes string LN returns boolean
local integer XN
set Wb[Qb]=LN
set Qb=Qb+1
set tc=ConvertPlayerEvent(96)
set lc=u7("when calling new_HashMap in ClosureEvents, line 99")
set bc=u7("when calling new_HashMap in ClosureEvents, line 100")
set ic=CreateTrigger()
set Sc=CreateTrigger()
set cc=CreateTrigger()
set Wb[Qb]="when calling alloc_Closure in ClosureEvents, line 279"
set Qb=Qb+1
if Pl==0 then
if Al<32768 then
set Al=Al+1
set XN=Al
set Dl[XN]=640
else
call g6("Out of memory: Could not create Closure.","when calling error in ClosureEvents, line 279")
set XN=0
endif
else
set Pl=Pl-1
set XN=Il[Pl]
set Dl[XN]=640
endif
set Qb=Qb-1
set Wb[Qb]="when calling nullTimer in ClosureEvents, line 279"
set Qb=Qb+1
set Wb[Qb]="when calling doAfter in ClosureTimers, line 22"
set Qb=Qb+1
set Wb[Qb]="when calling start in ClosureTimers, line 15"
set Qb=Qb+1
if Dl[XN]==0 then
if XN==0 then
call g6("Nullpointer exception when calling CallbackSingle.start","when calling error in ClosureTimers, line 67")
else
call g6("Called CallbackSingle.start on invalid object.","when calling error in ClosureTimers, line 67")
endif
endif
call g3(XN,0.,"when calling start in ClosureTimers, line 67")
set Qb=Qb-1-1-1-1
return true
endfunction
function Raw takes nothing returns boolean
set Qb=0
return CN("ClosureEvents, line 1")
endfunction
function Rx takes nothing returns nothing
local player Ox=GetOwningPlayer(GetKillingUnit())
local playerstate lx=PLAYER_STATE_RESOURCE_LUMBER
local playerstate bx
local playerstate yx
local player px
local force ex
local location qx
local real ax
local real nx
local player dx
local force fx
if lx==PLAYER_STATE_RESOURCE_GOLD then
set bx=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(Ox,bx,GetPlayerState(Ox,bx)+500)
elseif lx==PLAYER_STATE_RESOURCE_LUMBER then
set yx=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(Ox,yx,GetPlayerState(Ox,yx)+500)
endif
call SetPlayerState(Ox,lx,GetPlayerState(Ox,lx)+500)
set px=GetOwningPlayer(GetKillingUnit())
set ex=CreateForce()
call ForceAddPlayer(ex,px)
if IsPlayerInForce(GetLocalPlayer(),ex) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_084")
endif
set y=GetUnitLoc(GetDyingUnit())
set dx=GetOwningPlayer(GetDyingUnit())
set fx=CreateForce()
call ForceAddPlayer(fx,dx)
set qx=y
set ax=GetLocationX(qx)
set nx=GetLocationY(qx)
if IsPlayerInForce(GetLocalPlayer(),fx) then
call PingMinimap(ax,nx,2.00)
endif
call RemoveLocation(y)
set Ox=null
set lx=null
set bx=null
set yx=null
set px=null
set ex=null
set qx=null
set dx=null
set fx=null
endfunction
function S9 takes nothing returns boolean
return true
endfunction
function iD takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())==1747988530 then
return true
endif
if GetUnitTypeId(GetTriggerUnit())==1747990327 then
return true
endif
if GetUnitTypeId(GetTriggerUnit())==1747989591 then
return true
endif
if GetUnitTypeId(GetTriggerUnit())==1747990085 then
return true
endif
return false
endfunction
function SD takes nothing returns boolean
if not iD() then
return false
endif
return true
endfunction
function SE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989573,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989572,0)
endfunction
function SI takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990323,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990106,0)
endfunction
function iQ takes nothing returns boolean
if GetResearched()!=1378889803 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889803,true)!=1 then
return false
endif
return true
endfunction
function SQ takes nothing returns boolean
if not iQ() then
return false
endif
return true
endfunction
function SY takes nothing returns nothing
local player uY=GetOwningPlayer(GetAttacker())
local player rY=GetOwningPlayer(GetAttacker())
local player sY
local player tY
local unit iY
set r[GetPlayerId(uY)+1]=r[GetPlayerId(rY)+1]+1
set sY=GetOwningPlayer(GetTriggerUnit())
set tY=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(sY)+1]=r[GetPlayerId(tY)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set iY=GetTriggerUnit()
call SetUnitState(iY,UNIT_STATE_LIFE,GetUnitState(iY,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set uY=null
set rY=null
set sY=null
set tY=null
set iY=null
endfunction
function iZ takes nothing returns boolean
if GetResearched()!=1378890037 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890037,true)!=2 then
return false
endif
return true
endfunction
function SZ takes nothing returns boolean
if not iZ() then
return false
endif
return true
endfunction
function Acw takes string Icw returns integer
local integer Pcw
set Wb[Qb]=Icw
set Qb=Qb+1
set Wb[Qb]="when calling Table in Table, line 5"
set Qb=Qb+1
if ib==0 then
if Sb<32768 then
set Sb=Sb+1
set Pcw=Sb
set cb[Pcw]=725
else
call g6("Out of memory: Could not create Table.","when calling error in Table, line 6")
set Pcw=0
endif
else
set ib=ib-1
set Pcw=tb[ib]
set cb[Pcw]=725
endif
set Qb=Qb-1-1
return Pcw
endfunction
function initializeTable takes string stackPos returns nothing
local integer i_2
local integer this
local integer parentKey
set Wb[Qb]=stackPos
set Qb=Qb+1
set i_2=0
loop
exitwhen i_2>15
set this=Qc
set parentKey=StringHash(mc[i_2])
set stackPos="when calling saveInt in Colors, line 206"
set Wb[Qb]="when calling saveInt in Colors, line 206"
set Qb=Qb+1
if cb[this]==0 then
if this==0 then
call g6("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call g6("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(wl,this,parentKey,i_2)
set Qb=Qb-1
set i_2=i_2+1
endloop
set Qb=Qb-1
endfunction
function Q3 takes string m3 returns boolean
set Wb[Qb]=m3
set Qb=Qb+1
set jc[0]=255
set xc[0]=2
set vc[0]=2
set jc[1]=0
set xc[1]=65
set vc[1]=255
set jc[2]=27
set xc[2]=229
set vc[2]=184
set jc[3]=83
set xc[3]=0
set vc[3]=128
set jc[4]=255
set xc[4]=252
set vc[4]=0
set jc[5]=254
set xc[5]=137
set vc[5]=13
set jc[6]=31
set xc[6]=191
set vc[6]=0
set jc[7]=228
set xc[7]=90
set vc[7]=175
set jc[8]=148
set xc[8]=149
set vc[8]=150
set jc[9]=125
set xc[9]=190
set vc[9]=241
set jc[10]=15
set xc[10]=97
set vc[10]=69
set jc[11]=77
set xc[11]=41
set vc[11]=3
set jc[12]=155
set xc[12]=0
set vc[12]=0
set jc[13]=0
set xc[13]=0
set vc[13]=195
set jc[14]=0
set xc[14]=234
set vc[14]=255
set jc[15]=190
set xc[15]=0
set vc[15]=254
set jc[16]=235
set xc[16]=205
set vc[16]=135
set jc[17]=248
set xc[17]=164
set vc[17]=139
set jc[18]=191
set xc[18]=255
set vc[18]=128
set jc[19]=220
set xc[19]=185
set vc[19]=235
set jc[20]=40
set xc[20]=40
set vc[20]=40
set jc[21]=235
set xc[21]=240
set vc[21]=255
set jc[22]=0
set xc[22]=120
set vc[22]=30
set jc[23]=164
set xc[23]=11
set vc[23]=51
set mc[0]="0"
set mc[1]="1"
set mc[2]="2"
set mc[3]="3"
set mc[4]="4"
set mc[5]="5"
set mc[6]="6"
set mc[7]="7"
set mc[8]="8"
set mc[9]="9"
set mc[10]="A"
set mc[11]="B"
set mc[12]="C"
set mc[13]="D"
set mc[14]="E"
set mc[15]="F"
set Qc=Acw("when calling new_Table in Colors, line 154")
call initializeTable("when calling initializeTable in Colors, line 209")
set Qb=Qb-1
return true
endfunction
function Saw takes nothing returns boolean
set Qb=0
return Q3("Colors, line 1")
endfunction
function ij takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989048 then
return false
endif
if GetUnitTypeId(GetSpellTargetUnit())!=1747988569 then
return false
endif
return true
endfunction
function Sj takes nothing returns boolean
if not ij() then
return false
endif
return true
endfunction
function vsw takes multiboard gsw,integer hsw,integer Fsw,real ksw,string jsw returns nothing
local multiboarditem xsw=MultiboardGetItem(gsw,Fsw,hsw)
call MultiboardSetItemWidth(xsw,ksw)
call MultiboardSetItemValue(xsw,jsw)
set xsw=null
endfunction
function nww takes string iww_2 returns multiboard
local multiboard Sww
local integer cww
local integer oww_2
local integer Oww
local integer lww
local integer bww
local integer yww
local integer pww
local integer eww_2
local string qww
local real aww
set Wb[Qb]=iww_2
set Qb=Qb+1
set bj_lastCreatedMultiboard=CreateMultiboard()
call MultiboardSetRowCount(bj_lastCreatedMultiboard,10)
call MultiboardSetColumnCount(bj_lastCreatedMultiboard,6)
call MultiboardSetTitleText(bj_lastCreatedMultiboard,"Income: 2:00")
call MultiboardDisplay(bj_lastCreatedMultiboard,true)
set Sww=bj_lastCreatedMultiboard
call MultiboardMinimize(Sww,true)
call MultiboardSetItemsStyle(Sww,true,false)
set cww=0
set oww_2=23
loop
exitwhen cww>oww_2
if fO==dO[cww]then
call MultiboardDisplay(Sww,false)
endif
set cww=cww+1
endloop
set Oww=0
set lww=9
loop
exitwhen Oww>lww
set bww=0
set yww=5
loop
exitwhen bww>yww
set aww=mpw(Bo[Oww],bww,"when calling get in MultiboardCityUpdate, line 14")/1000.
set pww=mpw(iO[Oww],bww,"when calling get in MultiboardCityUpdate, line 14")
set Wb[Qb]="when calling stringFromIndex in MultiboardCityUpdate, line 14"
set Qb=Qb+1
set eww_2=tl
set Wb[Qb]="when calling loadString in TypeCasting, line 29"
set Qb=Qb+1
if cb[eww_2]==0 then
if eww_2==0 then
call g6("Nullpointer exception when calling Table.loadString","when calling error in Table, line 57")
else
call g6("Called Table.loadString on invalid object.","when calling error in Table, line 57")
endif
endif
set qww=LoadStr(wl,eww_2,pww)
set Qb=Qb-1
set iww_2=qww
set Qb=Qb-1
call vsw(Sww,bww,Oww,aww,qww)
set bww=bww+1
endloop
set Oww=Oww+1
endloop
set Qb=Qb-1
set vf=Sww
set Sww=null
return vf
endfunction
function Fww takes integer dww,string fww returns nothing
local integer Rww
local integer Tww
local integer Yww
local integer Gww
local boolean gww
local multiboard hww
set Wb[Qb]=fww
set Qb=Qb+1
set Rww=0
set Tww=23
loop
exitwhen Rww>Tww
set Gww=yO[Rww]
set fww="when calling isInGame in MultiboardCityUpdate, line 20"
set Wb[Qb]="when calling isInGame in MultiboardCityUpdate, line 20"
set Qb=Qb+1
if kb[Gww]==0 then
if Gww==0 then
call g6("Nullpointer exception when calling PlayerStats.isInGame","when calling error in PlayerStats, line 14")
else
call g6("Called PlayerStats.isInGame on invalid object.","when calling error in PlayerStats, line 14")
endif
endif
set gww=qO[Gww]
set Qb=Qb-1
if gww then
set SO[Rww]=nww("when calling createCoEMultiboard in MultiboardCityUpdate, line 21")
endif
set Rww=Rww+1
endloop
set Yww=0
set dww=23
loop
exitwhen Yww>dww
set hww=SO[Yww]
if fO==dO[Yww]then
call MultiboardDisplay(hww,true)
endif
set Yww=Yww+1
endloop
set Qb=Qb-1
set hww=null
endfunction
function H0w takes integer E0w,unit Z0w,string U0w returns nothing
local integer I0w
local integer P0w
local boolean A0w
local boolean D0w
set Wb[Qb]=U0w
set Qb=Qb+1
if GetOwningPlayer(Z0w)==Ho[E0w]then
set I0w=pl
set P0w=GetUnitTypeId(Z0w)
set Wb[Qb]="when calling has in MassControl, line 28"
set Qb=Qb+1
if Tb[I0w]==0 then
if I0w==0 then
call g6("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call g6("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set A0w=B8(I0w,P0w)
set Qb=Qb-1
set D0w=not A0w
else
set D0w=false
endif
if D0w and Z0w!=Jo[E0w] and(not IsUnitType(Z0w,UNIT_TYPE_STRUCTURE)) then
call Lpw(Ko[E0w],GetHandleId(Z0w),"when calling add in MassControl, line 29")
endif
set Qb=Qb-1
endfunction
function Niw takes integer Biw returns real
if Biw==1747988785 then
return 10.0
elseif Biw==1747989075 then
return 10.0
elseif Biw==1747990102 then
return 10.0
elseif Biw==1747989839 then
return 10.0
elseif Biw==1747988568 then
return 5.0
elseif Biw==1747990341 then
return 5.0
elseif Biw==1747988789 then
return 15.0
elseif Biw==1747990103 then
return 15.0
elseif Biw==1747990064 then
return 15.0
elseif Biw==1747989846 then
return 15.0
else
return 0.0
endif
endfunction
function RB takes integer nB,unit dB returns nothing
local boolean fB
if IsUnitType(dB,UNIT_TYPE_STRUCTURE) then
set fB=GetOwningPlayer(dB)==dO[HS[ES[nB]]]
else
set fB=false
endif
if fB then
set VS[ES[nB]]=VS[ES[nB]]+Niw(GetUnitTypeId(dB))
endif
endfunction
function aB takes integer OB,unit lB,string bB returns nothing
local integer yB
local integer pB
local boolean eB
local boolean qB
set Wb[Qb]=bB
set Qb=Qb+1
set yB=pl
set pB=GetUnitTypeId(lB)
set Wb[Qb]="when calling has in City, line 300"
set Qb=Qb+1
if Tb[yB]==0 then
if yB==0 then
call g6("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call g6("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set eB=B8(yB,pB)
set Qb=Qb-1
if not eB then
set qB=GetOwningPlayer(lB)==dO[HS[WS[OB]]]
else
set qB=false
endif
if qB then
set VS[WS[OB]]=VS[WS[OB]]+0.5
endif
set Qb=Qb-1
endfunction
function h5 takes integer e5,unit q5,string a5 returns nothing
local integer n5
local integer d5
local boolean f5
local player R5
local player T5
local boolean Y5
local boolean G5
local integer g5
set Wb[Qb]=a5
set Qb=Qb+1
set n5=ll
set d5=GetUnitTypeId(q5)
set Wb[Qb]="when calling has in Economy, line 39"
set Qb=Qb+1
if Tb[n5]==0 then
if n5==0 then
call g6("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call g6("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set f5=B8(n5,d5)
set Qb=Qb-1
if f5 then
set R5=dO[GetPlayerId(GetOwningPlayer(q5))]
if GetPlayerSlotState(R5)==PLAYER_SLOT_STATE_PLAYING then
set Y5=GetPlayerController(R5)==MAP_CONTROL_USER
else
set Y5=false
endif
set G5=Y5
else
set G5=false
endif
if G5 then
set T5=GetOwningPlayer(q5)
set e5=Pc[GetPlayerId(GetOwningPlayer(q5))]
set g5=bl
set Pc[GetPlayerId(T5)]=e5+opw(g5,GetUnitTypeId(q5),"when calling get in Economy, line 40")
endif
set Qb=Qb-1
set R5=null
set T5=null
endfunction
function yyw takes integer Oyw,unit lyw,string byw returns nothing
set Wb[Qb]=byw
set Qb=Qb+1
if Ul[Oyw]==0 then
if Oyw==0 then
call g6("Nullpointer exception when calling ForGroupCallback.callback","when calling error in ClosureForGroups, line 4")
else
call g6("Called ForGroupCallback.callback on invalid object.","when calling error in ClosureForGroups, line 4")
endif
endif
if Ul[Oyw]<=684 then
if Ul[Oyw]<=682 then
if Ul[Oyw]<=681 then
call aB(Oyw,lyw,"when calling City_closure_impl in ClosureForGroups, line 4")
else
call RB(Oyw,lyw)
endif
elseif Ul[Oyw]<=683 then
call h5(Oyw,lyw,"when calling Economy_closure_impl in ClosureForGroups, line 4")
else
set Wb[Qb]="when calling LinkedList_closure_impl in ClosureForGroups, line 4"
set Qb=Qb+1
call Lpw(eo[Oyw],GetHandleId(lyw),"when calling add in LinkedList, line 515")
set Qb=Qb-1
endif
elseif Ul[Oyw]<=686 then
if Ul[Oyw]<=685 then
call H0w(Oyw,lyw,"when calling MassControl_closure_impl in ClosureForGroups, line 4")
else
call SetUnitOwner(lyw,dO[PLAYER_NEUTRAL_AGGRESSIVE],true)
endif
else
call RemoveUnit(lyw)
endif
set Qb=Qb-1
endfunction
function MM takes group XM,integer CM,string VM returns nothing
local group BM
local unit NM
set Wb[Qb]=VM
set Qb=Qb+1
set BM=XM
loop
exitwhen FirstOfGroup(BM)==null
set NM=FirstOfGroup(BM)
call GroupRemoveUnit(BM,NM)
call yyw(CM,NM,"when calling callback in ClosureForGroups, line 31")
endloop
set Qb=Qb-1
set BM=null
set NM=null
endfunction
function Liw takes string Hiw returns nothing
local group Jiw
local integer Kiw
set Wb[Qb]=Hiw
set Qb=Qb+1
call RemoveUnit(FO)
set Jiw=hO
set Wb[Qb]="when calling alloc_Closure in Preloader, line 45"
set Qb=Qb+1
if El==0 then
if Zl<32768 then
set Zl=Zl+1
set Kiw=Zl
set Ul[Kiw]=687
else
call g6("Out of memory: Could not create Closure.","when calling error in Preloader, line 45")
set Kiw=0
endif
else
set El=El-1
set Kiw=Wl[El]
set Ul[Kiw]=687
endif
set Qb=Qb-1
call MM(Jiw,Kiw,"when calling forEachFrom in Preloader, line 45")
call DestroyGroup(hO)
set hO=null
set Qb=Qb-1
set Jiw=null
endfunction
function RM takes integer nM returns nothing
local integer dM
local trigger fM
call TriggerAddCondition(il,Condition(tf))
call TriggerAddCondition(Sl,Condition(Sf))
call TriggerAddAction(ic,cf)
call TriggerAddAction(Sc,of)
call TriggerAddAction(cc,Of)
set dM=0
set nM=bj_MAX_PLAYERS-1
loop
exitwhen dM>nM
call TriggerRegisterPlayerEvent(Sc,dO[dM],EVENT_PLAYER_LEAVE)
set fM=cc
call TriggerRegisterPlayerEvent(fM,dO[dM],EVENT_PLAYER_ARROW_DOWN_DOWN)
call TriggerRegisterPlayerEvent(fM,dO[dM],EVENT_PLAYER_ARROW_DOWN_UP)
call TriggerRegisterPlayerEvent(fM,dO[dM],EVENT_PLAYER_ARROW_UP_DOWN)
call TriggerRegisterPlayerEvent(fM,dO[dM],EVENT_PLAYER_ARROW_UP_UP)
call TriggerRegisterPlayerEvent(fM,dO[dM],EVENT_PLAYER_ARROW_LEFT_DOWN)
call TriggerRegisterPlayerEvent(fM,dO[dM],EVENT_PLAYER_ARROW_LEFT_UP)
call TriggerRegisterPlayerEvent(fM,dO[dM],EVENT_PLAYER_ARROW_RIGHT_DOWN)
call TriggerRegisterPlayerEvent(fM,dO[dM],EVENT_PLAYER_ARROW_RIGHT_UP)
call TriggerRegisterPlayerEvent(fM,dO[dM],EVENT_PLAYER_END_CINEMATIC)
call TriggerRegisterPlayerEvent(fM,dO[dM],EVENT_PLAYER_MOUSE_UP)
call TriggerRegisterPlayerEvent(fM,dO[dM],EVENT_PLAYER_MOUSE_DOWN)
call TriggerRegisterPlayerEvent(fM,dO[dM],EVENT_PLAYER_MOUSE_MOVE)
call TriggerRegisterPlayerChatEvent(fM,dO[dM],"",false)
set dM=dM+1
endloop
call JSw(EVENT_PLAYER_UNIT_SPELL_EFFECT,null,lf,null)
set fM=null
endfunction
function hbw takes string gbw returns nothing
endfunction
function Cbw takes integer Kbw,integer Lbw,string Xbw returns nothing
set Wb[Qb]=Xbw
set Qb=Qb+1
if Ql[Kbw]==0 then
if Kbw==0 then
call g6("Nullpointer exception when calling City.getCityModifierOnRemove","when calling error in City, line 410")
else
call g6("Called City.getCityModifierOnRemove on invalid object.","when calling error in City, line 410")
endif
endif
set Wb[Qb]="when calling getCityModifierOnRemove in City, line 410"
set Qb=Qb+1
if nS[opw(eS,Lbw,"when calling get in City, line 411")]then
set BS[Kbw]=BS[Kbw]-aS[opw(eS,Lbw,"when calling get in City, line 412")]
endif
set NS[Kbw]=NS[Kbw]-TS[opw(eS,Lbw,"when calling get in City, line 413")]
set Qb=Qb-1-1
endfunction
function qpw takes integer ppw,string epw returns nothing
set Wb[Qb]=epw
set Qb=Qb+1
if pb[ppw]==0 then
if ppw==0 then
call g6("Nullpointer exception when calling LLEntry.LLEntry","when calling error in LinkedList, line 396")
else
call g6("Called LLEntry.LLEntry on invalid object.","when calling error in LinkedList, line 396")
endif
endif
set Wb[Qb]="when calling destroyLLEntry in LinkedList, line 396"
set Qb=Qb+1
set Wb[Qb]="when calling LLEntry in LinkedList, line 396"
set Qb=Qb+1
if pb[ppw]==0 then
call g6("Double free: object of type LLEntry","when calling error in LinkedList, line 396")
else
set lb[bb]=ppw
set bb=bb+1
set pb[ppw]=0
endif
set Qb=Qb-1-1-1
endfunction
function Zpw takes integer Qpw,integer Wpw,string Epw returns nothing
set Wb[Qb]=Epw
set Qb=Qb+1
if Tb[Qpw]==0 then
if Qpw==0 then
call g6("Nullpointer exception when calling LinkedList.removeEntry","when calling error in LinkedList, line 373")
else
call g6("Called LinkedList.removeEntry on invalid object.","when calling error in LinkedList, line 373")
endif
endif
set Wb[Qb]="when calling removeEntry in LinkedList, line 373"
set Qb=Qb+1
set no[ao[Wpw]]=no[Wpw]
set ao[no[Wpw]]=ao[Wpw]
call qpw(Wpw,"when calling LLEntry in LinkedList, line 376")
set Go[Qpw]=Go[Qpw]-1
set Qb=Qb-1-1
endfunction
function r9 takes integer N8,integer M8,string w9 returns nothing
local integer u9
set Wb[Qb]=w9
set Qb=Qb+1
set u9=no[Yo[N8]]
loop
exitwhen u9==Yo[N8]
if qo[u9]==M8 then
call Zpw(N8,u9,"when calling removeEntry in LinkedList, line 126")
set Qb=Qb-1
return
endif
set u9=no[u9]
endloop
set Qb=Qb-1
endfunction
function kB takes integer TB,integer YB,string GB returns boolean
local integer gB
local boolean hB
local integer FB
set Wb[Qb]=GB
set Qb=Qb+1
set gB=uc[TB]
set Wb[Qb]="when calling has in City, line 365"
set Qb=Qb+1
if Tb[gB]==0 then
if gB==0 then
call g6("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call g6("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set hB=B8(gB,YB)
set Qb=Qb-1
if not hB then
set Qb=Qb-1
return false
endif
set FB=uc[TB]
set Wb[Qb]="when calling remove in City, line 367"
set Qb=Qb+1
if Tb[FB]==0 then
if FB==0 then
call g6("Nullpointer exception when calling LinkedList.remove","when calling error in LinkedList, line 122")
else
call g6("Called LinkedList.remove on invalid object.","when calling error in LinkedList, line 122")
endif
endif
call r9(FB,YB,"when calling remove in LinkedList, line 122")
set Qb=Qb-1
call Cbw(TB,YB,"when calling getCityModifierOnRemove in City, line 369")
set Qb=Qb-1
return true
endfunction
function ktw takes integer htw returns nothing
local group Ftw
call TriggerRegisterEnterRegion(CreateTrigger(),Zo,Filter(Tf))
call JSw(EVENT_PLAYER_UNIT_ISSUED_ORDER,null,Yf,null)
call GroupEnumUnitsInRect(OO,Eo,null)
call ForGroup(OO,Gf)
set Ftw=OO
call GroupClear(Ftw)
call DestroyGroup(Ftw)
set Ftw=null
endfunction
function p5 takes integer V2,string B2 returns nothing
local integer N2
local integer M2
local integer w5
local integer u5
local integer r5
local integer s5
local integer t5
local unit i5
local player S5
local integer c5
local unit o5
local integer O5
local integer l5
local boolean b5
local integer y5
set Wb[Qb]=B2
set Qb=Qb+1
set N2=Hc[V2]*Jc[V2]
set u5=gS-1
set r5=(Hc[V2]+1)*Jc[V2]-1
if u5<2147483647 then
set s5=u5
else
set s5=2147483647
endif
if r5<s5 then
set s5=r5
endif
set M2=s5
loop
exitwhen N2>M2
set t5=QS[N2]
set B2="when calling getCityUnit in Economy, line 31"
set Wb[Qb]="when calling getCityUnit in Economy, line 31"
set Qb=Qb+1
if Ql[t5]==0 then
if t5==0 then
call g6("Nullpointer exception when calling City.getCityUnit","when calling error in City, line 176")
else
call g6("Called City.getCityUnit on invalid object.","when calling error in City, line 176")
endif
endif
set i5=IS[t5]
set Qb=Qb-1
set w5=GetPlayerId(GetOwningPlayer(i5))
set c5=QS[N2]
set Wb[Qb]="when calling getCityUnit in Economy, line 32"
set Qb=Qb+1
if Ql[c5]==0 then
if c5==0 then
call g6("Nullpointer exception when calling City.getCityUnit","when calling error in City, line 176")
else
call g6("Called City.getCityUnit on invalid object.","when calling error in City, line 176")
endif
endif
set o5=IS[c5]
set Qb=Qb-1
set S5=GetOwningPlayer(o5)
if GetPlayerSlotState(S5)==PLAYER_SLOT_STATE_PLAYING then
set b5=GetPlayerController(S5)==MAP_CONTROL_USER
else
set b5=false
endif
if b5 then
set y5=Pc[w5]
set O5=QS[N2]
set Wb[Qb]="when calling countTax in Economy, line 33"
set Qb=Qb+1
if Ql[O5]==0 then
if O5==0 then
call g6("Nullpointer exception when calling City.countTax","when calling error in City, line 265")
else
call g6("Called City.countTax on invalid object.","when calling error in City, line 265")
endif
endif
set l5=UC(O5,"when calling countTax in City, line 265")
set Qb=Qb-1
set Pc[w5]=y5+l5
endif
set N2=N2+1
endloop
set Qb=Qb-1
set i5=null
set S5=null
set o5=null
endfunction
function Gyw takes integer dyw,string fyw returns nothing
local integer Ryw
local integer Tyw
local integer Yyw
set Wb[Qb]=fyw
set Qb=Qb+1
if Dl[dyw]==0 then
if dyw==0 then
call g6("Nullpointer exception when calling CallbackSingle.call","when calling error in ClosureTimers, line 65")
else
call g6("Called CallbackSingle.call on invalid object.","when calling error in ClosureTimers, line 65")
endif
endif
if Dl[dyw]<=645 then
if Dl[dyw]<=642 then
if Dl[dyw]<=640 then
if Dl[dyw]<=639 then
set Wb[Qb]="when calling City_closure_impl in ClosureTimers, line 65"
set Qb=Qb+1
set Ryw=ZS[dyw]
set Tyw=US[dyw]
set Wb[Qb]="when calling removeModifier in City, line 361"
set Qb=Qb+1
if Ql[Ryw]==0 then
if Ryw==0 then
call g6("Nullpointer exception when calling City.removeModifier","when calling error in City, line 364")
else
call g6("Called City.removeModifier on invalid object.","when calling error in City, line 364")
endif
endif
call kB(Ryw,Tyw,"when calling removeModifier in City, line 364")
set Qb=Qb-1-1
else
call RM(dyw)
endif
elseif Dl[dyw]<=641 then
set hc=hc+50
else
set hc=hc*2
endif
elseif Dl[dyw]<=644 then
if Dl[dyw]<=643 then
set hc=hc/2
set Yyw=hc
if Yyw!=250 then
call hbw("Expected <"+I2S(250)+">, Actual <"+I2S(Yyw)+">")
endif
else
call p5(dyw,"when calling Economy_closure_impl in ClosureTimers, line 65")
endif
else
call IssueImmediateOrderById(bo[dyw],851976)
endif
elseif Dl[dyw]<=649 then
if Dl[dyw]<=647 then
if Dl[dyw]<=646 then
call IssueImmediateOrderById(po[dyw],851976)
else
call IssuePointOrderById(Lo[dyw],Xo[dyw],Co[dyw],Vo[dyw])
endif
elseif Dl[dyw]<=648 then
call Fww(dyw,"when calling MultiboardCityUpdate_closure_impl in ClosureTimers, line 65")
else
call IssueImmediateOrderById(cO[dyw],851976)
endif
elseif Dl[dyw]<=651 then
if Dl[dyw]<=650 then
call ktw(dyw)
else
set Wb[Qb]="when calling Preloader_closure_impl in ClosureTimers, line 65"
set Qb=Qb+1
call Liw("when calling finishPreload in Preloader, line 54")
set Qb=Qb-1
endif
else
call IssueImmediateOrderById(jO[dyw],851976)
endif
set Qb=Qb-1
endfunction
function fow takes timer eow,string qow returns integer
local integer aow
local integer now
local integer dow
set Wb[Qb]=qow
set Qb=Qb+1
set aow=sl
set now=GetHandleId(eow)
set Wb[Qb]="when calling loadInt in TimerUtils, line 21"
set Qb=Qb+1
if cb[aow]==0 then
if aow==0 then
call g6("Nullpointer exception when calling Table.loadInt","when calling error in Table, line 39")
else
call g6("Called Table.loadInt on invalid object.","when calling error in Table, line 39")
endif
endif
set dow=LoadInteger(wl,aow,now)
set Qb=Qb-1-1
return dow
endfunction
function how takes timer Gow,string gow returns nothing
set Wb[Qb]=gow
set Qb=Qb+1
if Gow==null then
call g6("Trying to release a null timer","when calling error in TimerUtils, line 37")
set Qb=Qb-1
return
endif
if fow(Gow,"when calling getData in TimerUtils, line 39")==679645218 then
call g6("ReleaseTimer: Double free!","when calling error in TimerUtils, line 40")
set Qb=Qb-1
return
endif
call pow(Gow,679645218,"when calling setData in TimerUtils, line 42")
call PauseTimer(Gow)
set ul[rl]=Gow
set rl=rl+1
set Qb=Qb-1
endfunction
function v3 takes integer j3,string x3 returns nothing
set Wb[Qb]=x3
set Qb=Qb+1
set Wb[Qb]="when calling CallbackSingle_onDestroy in ClosureTimers, line 79"
set Qb=Qb+1
call how(kc[j3],"when calling release in ClosureTimers, line 80")
set Qb=Qb-1
set Wb[Qb]="when calling CallbackSingle in ClosureTimers, line 79"
set Qb=Qb+1
if Dl[j3]==0 then
call g6("Double free: object of type CallbackSingle","when calling error in ClosureTimers, line 63")
else
set Il[Pl]=j3
set Pl=Pl+1
set Dl[j3]=0
endif
set Qb=Qb-1-1
endfunction
function k3 takes string h3 returns nothing
local integer F3
set Wb[Qb]=h3
set Qb=Qb+1
set F3=fow(GetExpiredTimer(),"when calling getData in ClosureTimers, line 75")
call Gyw(F3,"when calling call in ClosureTimers, line 76")
set Wb[Qb]="when calling CallbackSingle in ClosureTimers, line 77"
set Qb=Qb+1
if Dl[F3]==0 then
if F3==0 then
call g6("Nullpointer exception when calling CallbackSingle.CallbackSingle","when calling error in ClosureTimers, line 63")
else
call g6("Called CallbackSingle.CallbackSingle on invalid object.","when calling error in ClosureTimers, line 63")
endif
endif
call v3(F3,"when calling destroyCallbackSingle in ClosureTimers, line 63")
set Qb=Qb-1-1
endfunction
function Snw takes nothing returns nothing
set Qb=0
set Wb[Qb]="ClosureTimers, line 68"
set Qb=Qb+1
call k3("when calling staticCallback in ClosureTimers, line 70")
set Qb=Qb-1
endfunction
function Stw takes nothing returns boolean
return true
endfunction
function Sww takes nothing returns boolean
return true
endfunction
function RK takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747988531 then
return false
endif
return true
endfunction
function TK takes nothing returns boolean
if not RK() then
return false
endif
return true
endfunction
function TM takes nothing returns nothing
call TriggerRegisterUnitEvent(ic,cl,EVENT_UNIT_DAMAGED)
endfunction
function TQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989301,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988790,0)
endfunction
function TT takes nothing returns nothing
local player aT=GetOwningPlayer(GetAttacker())
local player nT=GetOwningPlayer(GetAttacker())
local player dT
local player fT
local unit RT
set r[GetPlayerId(aT)+1]=r[GetPlayerId(nT)+1]+1
set dT=GetOwningPlayer(GetTriggerUnit())
set fT=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(dT)+1]=r[GetPlayerId(fT)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set RT=GetTriggerUnit()
call SetUnitState(RT,UNIT_STATE_LIFE,GetUnitState(RT,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set aT=null
set nT=null
set dT=null
set fT=null
set RT=null
endfunction
function RW takes nothing returns boolean
if GetResearched()!=1378889806 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889806,true)!=1 then
return false
endif
return true
endfunction
function TW takes nothing returns boolean
if not RW() then
return false
endif
return true
endfunction
function TZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989816,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989815,0)
endfunction
function bL takes string OL returns boolean
local integer lL
set Wb[Qb]=OL
set Qb=Qb+1
set sS=u7("when calling new_HashMap in CityBaseTaxes, line 5")
set lL=sS
set Wb[Qb]="when calling saveInt in CityBaseTaxes, line 9"
set Qb=Qb+1
if cb[lL]==0 then
if lL==0 then
call g6("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call g6("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(wl,lL,1747988529,20)
set Qb=Qb-1
set Wb[Qb]="when calling saveInt in CityBaseTaxes, line 10"
set Qb=Qb+1
if cb[lL]==0 then
if lL==0 then
call g6("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call g6("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(wl,lL,1747988530,50)
set Qb=Qb-1
set Wb[Qb]="when calling saveInt in CityBaseTaxes, line 11"
set Qb=Qb+1
if cb[lL]==0 then
if lL==0 then
call g6("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call g6("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(wl,lL,1747988531,120)
set Qb=Qb-1
set Wb[Qb]="when calling saveInt in CityBaseTaxes, line 12"
set Qb=Qb+1
if cb[lL]==0 then
if lL==0 then
call g6("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call g6("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(wl,lL,1747990326,20)
set Qb=Qb-1
set Wb[Qb]="when calling saveInt in CityBaseTaxes, line 13"
set Qb=Qb+1
if cb[lL]==0 then
if lL==0 then
call g6("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call g6("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(wl,lL,1747990327,50)
set Qb=Qb-1
set Wb[Qb]="when calling saveInt in CityBaseTaxes, line 14"
set Qb=Qb+1
if cb[lL]==0 then
if lL==0 then
call g6("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call g6("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(wl,lL,1747990328,120)
set Qb=Qb-1
set Wb[Qb]="when calling saveInt in CityBaseTaxes, line 15"
set Qb=Qb+1
if cb[lL]==0 then
if lL==0 then
call g6("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call g6("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(wl,lL,1747990084,20)
set Qb=Qb-1
set Wb[Qb]="when calling saveInt in CityBaseTaxes, line 16"
set Qb=Qb+1
if cb[lL]==0 then
if lL==0 then
call g6("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call g6("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(wl,lL,1747990087,50)
set Qb=Qb-1
set Wb[Qb]="when calling saveInt in CityBaseTaxes, line 17"
set Qb=Qb+1
if cb[lL]==0 then
if lL==0 then
call g6("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call g6("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(wl,lL,1747990085,120)
set Qb=Qb-1
set Wb[Qb]="when calling saveInt in CityBaseTaxes, line 18"
set Qb=Qb+1
if cb[lL]==0 then
if lL==0 then
call g6("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call g6("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(wl,lL,1747989590,20)
set Qb=Qb-1
set Wb[Qb]="when calling saveInt in CityBaseTaxes, line 19"
set Qb=Qb+1
if cb[lL]==0 then
if lL==0 then
call g6("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call g6("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(wl,lL,1747989591,50)
set Qb=Qb-1
set Wb[Qb]="when calling saveInt in CityBaseTaxes, line 20"
set Qb=Qb+1
if cb[lL]==0 then
if lL==0 then
call g6("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call g6("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(wl,lL,1747989592,120)
set Qb=Qb-1
set Wb[Qb]="when calling saveInt in CityBaseTaxes, line 22"
set Qb=Qb+1
if cb[lL]==0 then
if lL==0 then
call g6("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call g6("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(wl,lL,1747989555,5)
set Qb=Qb-1
set Wb[Qb]="when calling saveInt in CityBaseTaxes, line 23"
set Qb=Qb+1
if cb[lL]==0 then
if lL==0 then
call g6("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call g6("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(wl,lL,1747989297,10)
set Qb=Qb-1
set Wb[Qb]="when calling saveInt in CityBaseTaxes, line 24"
set Qb=Qb+1
if cb[lL]==0 then
if lL==0 then
call g6("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call g6("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call SaveInteger(wl,lL,1747989325,30)
set Qb=Qb-1-1
return true
endfunction
function Taw takes nothing returns boolean
set Qb=0
return bL("CityBaseTaxes, line 1")
endfunction
function Rg takes nothing returns boolean
if IsUnitType(GetEnumUnit(),UNIT_TYPE_STRUCTURE)!=false then
return false
endif
return true
endfunction
function Tg takes nothing returns nothing
if Rg() then
call SetUnitPositionLoc(GetEnumUnit(),c)
endif
endfunction
function U7 takes nothing returns boolean
return true
endfunction
function ZE takes nothing returns boolean
if GetResearched()!=1378889818 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889818,true)!=1 then
return false
endif
return true
endfunction
function UE takes nothing returns boolean
if not ZE() then
return false
endif
return true
endfunction
function UG takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989047 then
return false
endif
return true
endfunction
function UK takes nothing returns boolean
set rS=dO[PLAYER_NEUTRAL_PASSIVE]
return true
endfunction
function UU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990324,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990325,0)
endfunction
function UW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651841,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651831,0)
endfunction
function ZY takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989044 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function UY takes nothing returns boolean
if not ZY() then
return false
endif
return true
endfunction
function L1 takes string J1 returns boolean
local integer K1
set Wb[Qb]=J1
set Qb=Qb+1
set Wb[Qb]="when calling alloc_Closure in DateTime, line 31"
set Qb=Qb+1
if Jl==0 then
if Kl<32768 then
set Kl=Kl+1
set K1=Kl
set Ll[K1]=634
else
call g6("Out of memory: Could not create Closure.","when calling error in DateTime, line 31")
set K1=0
endif
else
set Jl=Jl-1
set K1=Hl[Jl]
set Ll[K1]=634
endif
set Qb=Qb-1
set Wc[K1]=120.0
set Wb[Qb]="when calling doPeriodically in DateTime, line 31"
set Qb=Qb+1
set Wb[Qb]="when calling start in ClosureTimers, line 36"
set Qb=Qb+1
if Ll[K1]==0 then
if K1==0 then
call g6("Nullpointer exception when calling CallbackPeriodic.start","when calling error in ClosureTimers, line 88")
else
call g6("Called CallbackPeriodic.start on invalid object.","when calling error in ClosureTimers, line 88")
endif
endif
call f3(K1,1.0,"when calling start in ClosureTimers, line 88")
set Qb=Qb-1-1-1
return true
endfunction
function Uaw takes nothing returns boolean
set Qb=0
return L1("DateTime, line 1")
endfunction
function Ucw takes nothing returns boolean
set wl=InitHashtable()
return true
endfunction
function Ug takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989078 then
return false
endif
return true
endfunction
function Uj takes nothing returns nothing
local player hj=GetOwningPlayer(GetSpellTargetUnit())
local playerstate Fj=PLAYER_STATE_RESOURCE_GOLD
local playerstate kj
local playerstate jj
local player xj
local force vj
local location mj
local real Qj
local real Wj
local player Ej
local force Zj
if Fj==PLAYER_STATE_RESOURCE_GOLD then
set kj=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(hj,kj,GetPlayerState(hj,kj)+500)
elseif Fj==PLAYER_STATE_RESOURCE_LUMBER then
set jj=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(hj,jj,GetPlayerState(hj,jj)+500)
endif
call SetPlayerState(hj,Fj,GetPlayerState(hj,Fj)+500)
call RemoveUnit(GetSpellAbilityUnit())
set xj=GetOwningPlayer(GetSpellTargetUnit())
set vj=CreateForce()
call ForceAddPlayer(vj,xj)
if IsPlayerInForce(GetLocalPlayer(),vj) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_1234")
endif
set y=GetUnitLoc(GetSpellTargetUnit())
set Ej=GetOwningPlayer(GetSpellTargetUnit())
set Zj=CreateForce()
call ForceAddPlayer(Zj,Ej)
set mj=y
set Qj=GetLocationX(mj)
set Wj=GetLocationY(mj)
if IsPlayerInForce(GetLocalPlayer(),Zj) then
call PingMinimap(Qj,Wj,2.00)
endif
call RemoveLocation(y)
set hj=null
set Fj=null
set kj=null
set jj=null
set xj=null
set vj=null
set mj=null
set Ej=null
set Zj=null
endfunction
function Ulw takes nothing returns boolean
call Location(0.,0.)
return true
endfunction
function Zm takes nothing returns boolean
if GetResearched()!=1378889801 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889801,true)!=2 then
return false
endif
return true
endfunction
function Um takes nothing returns boolean
if not Zm() then
return false
endif
return true
endfunction
function VH takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function CI takes nothing returns boolean
if GetResearched()!=1378890053 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890053,true)!=2 then
return false
endif
return true
endfunction
function VI takes nothing returns boolean
if not CI() then
return false
endif
return true
endfunction
function Giw takes integer Riw,integer Tiw returns nothing
local integer Yiw
if pO[Riw]!=-1 then
call ForceRemovePlayer(Bc[pO[Riw]],eO[Riw])
endif
set pO[Riw]=Tiw
call ForceAddPlayer(Bc[pO[Riw]],eO[Riw])
call SetPlayerTechMaxAllowed(eO[Riw],1747990087,0)
call SetPlayerTechMaxAllowed(eO[Riw],1747990088,0)
call SetPlayerTechMaxAllowed(eO[Riw],1747989558,0)
call SetPlayerTechMaxAllowed(eO[Riw],1747989575,0)
call SetPlayerTechMaxAllowed(eO[Riw],1747990339,0)
call SetPlayerTechMaxAllowed(eO[Riw],1747990340,0)
call SetPlayerTechMaxAllowed(eO[Riw],1747988528,0)
call SetPlayerTechMaxAllowed(eO[Riw],1747988532,0)
set Yiw=pO[Riw]
if Yiw==0 then
call SetPlayerTechMaxAllowed(eO[Riw],1747988528,-1)
call SetPlayerTechMaxAllowed(eO[Riw],1747988532,-1)
elseif Yiw==1 then
call SetPlayerTechMaxAllowed(eO[Riw],1747990339,-1)
call SetPlayerTechMaxAllowed(eO[Riw],1747990340,-1)
elseif Yiw==2 then
call SetPlayerTechMaxAllowed(eO[Riw],1747990087,-1)
call SetPlayerTechMaxAllowed(eO[Riw],1747990088,-1)
elseif Yiw==3 then
call SetPlayerTechMaxAllowed(eO[Riw],1747989558,-1)
call SetPlayerTechMaxAllowed(eO[Riw],1747989575,-1)
endif
endfunction
function xV takes integer hV,integer FV,string kV returns nothing
local integer jV
set Wb[Qb]=kV
set Qb=Qb+1
set jV=DS[hV]
if jV==0 then
set Wb[Qb]="when calling replaceCity in City, line 206"
set Qb=Qb+1
if Ql[hV]==0 then
if hV==0 then
call g6("Nullpointer exception when calling City.replaceCity","when calling error in City, line 182")
else
call g6("Called City.replaceCity on invalid object.","when calling error in City, line 182")
endif
endif
call dV(hV,1747988529,"when calling replaceCity in City, line 182")
set Qb=Qb-1
elseif jV==3 then
set Wb[Qb]="when calling replaceCity in City, line 208"
set Qb=Qb+1
if Ql[hV]==0 then
if hV==0 then
call g6("Nullpointer exception when calling City.replaceCity","when calling error in City, line 182")
else
call g6("Called City.replaceCity on invalid object.","when calling error in City, line 182")
endif
endif
call dV(hV,1747989590,"when calling replaceCity in City, line 182")
set Qb=Qb-1
elseif jV==1 then
set Wb[Qb]="when calling replaceCity in City, line 210"
set Qb=Qb+1
if Ql[hV]==0 then
if hV==0 then
call g6("Nullpointer exception when calling City.replaceCity","when calling error in City, line 182")
else
call g6("Called City.replaceCity on invalid object.","when calling error in City, line 182")
endif
endif
call dV(hV,1747990326,"when calling replaceCity in City, line 182")
set Qb=Qb-1
elseif jV==2 then
set Wb[Qb]="when calling replaceCity in City, line 212"
set Qb=Qb+1
if Ql[hV]==0 then
if hV==0 then
call g6("Nullpointer exception when calling City.replaceCity","when calling error in City, line 182")
else
call g6("Called City.replaceCity on invalid object.","when calling error in City, line 182")
endif
endif
call dV(hV,1747990084,"when calling replaceCity in City, line 182")
set Qb=Qb-1
endif
set Wb[Qb]="when calling changeOwner in City, line 213"
set Qb=Qb+1
if Ql[hV]==0 then
if hV==0 then
call g6("Nullpointer exception when calling City.changeOwner","when calling error in City, line 187")
else
call g6("Called City.changeOwner on invalid object.","when calling error in City, line 187")
endif
endif
call gV(hV,FV,"when calling changeOwner in City, line 187")
set Qb=Qb-1-1
endfunction
function aX takes string uX returns nothing
local integer rX
local integer sX
local integer tX
local integer iX
local integer SX
local integer cX
local integer oX
local integer OX
local integer lX
local integer bX
local player yX
local location pX
local real eX
local integer qX
set Wb[Qb]=uX
set Qb=Qb+1
set rX=kC(GetSpellTargetUnit(),"when calling getCityId in CityManage, line 18")
set iX=QS[rX]
set Wb[Qb]="when calling getCityForceId in CityManage, line 19"
set Qb=Qb+1
if Ql[iX]==0 then
if iX==0 then
call g6("Nullpointer exception when calling City.getCityForceId","when calling error in City, line 179")
else
call g6("Called City.getCityForceId on invalid object.","when calling error in City, line 179")
endif
endif
set SX=DS[iX]
set Qb=Qb-1
set sX=GetPlayerId(GetOwningPlayer(GetSpellAbilityUnit()))
set cX=yO[sX]
set Wb[Qb]="when calling changeForce in CityManage, line 21"
set Qb=Qb+1
if kb[cX]==0 then
if cX==0 then
call g6("Nullpointer exception when calling PlayerStats.changeForce","when calling error in PlayerStats, line 97")
else
call g6("Called PlayerStats.changeForce on invalid object.","when calling error in PlayerStats, line 97")
endif
endif
call Giw(cX,SX)
set Qb=Qb-1
set oX=yl[SX]
set Wb[Qb]="when calling iterator in CityManage, line 24"
set Qb=Qb+1
set OX=A8(oX,"when calling new_LLIterator in LinkedList, line 165")
set Qb=Qb-1
set tX=OX
loop
exitwhen no[fo[tX]]==do[tX]
set fo[tX]=no[fo[tX]]
set lX=1
set bX=qo[fo[tX]]
set yX=dO[sX]
set pX=GetSpellTargetLoc()
set eX=0.
call GroupClear(bj_lastCreatedGroup)
loop
set lX=lX-1
exitwhen lX<0
call CreateUnitAtLocSaveLast(yX,bX,pX,eX)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
endloop
set Wb[Qb]="when calling close in CityManage, line 24"
set Qb=Qb+1
if To[tX]then
call dpw(tX,"when calling LLIterator in LinkedList, line 450")
endif
set Qb=Qb-1
set qX=QS[rX]
set Wb[Qb]="when calling settleCity in CityManage, line 27"
set Qb=Qb+1
if Ql[qX]==0 then
if qX==0 then
call g6("Nullpointer exception when calling City.settleCity","when calling error in City, line 203")
else
call g6("Called City.settleCity on invalid object.","when calling error in City, line 203")
endif
endif
call xV(qX,sX,"when calling settleCity in City, line 203")
set Qb=Qb-1
call KillUnit(GetSpellAbilityUnit())
set Qb=Qb-1
set yX=null
set pX=null
endfunction
function Vaw takes nothing returns nothing
set Qb=0
call aX("CityManage, line 14")
endfunction
function Cx takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function Vx takes nothing returns boolean
if not Cx() then
return false
endif
return true
endfunction
function WE takes nothing returns nothing
set s=bj_FORCE_ALL_PLAYERS
call ForForce(s,Be)
endfunction
function WH takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function QI takes nothing returns boolean
if GetResearched()!=1378890051 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890051,true)!=2 then
return false
endif
return true
endfunction
function WI takes nothing returns boolean
if not QI() then
return false
endif
return true
endfunction
function WT takes nothing returns nothing
local player jT=GetOwningPlayer(GetAttacker())
local player xT=GetOwningPlayer(GetAttacker())
local player vT
local player mT
local unit QT
set r[GetPlayerId(jT)+1]=r[GetPlayerId(xT)+1]+1
set vT=GetOwningPlayer(GetTriggerUnit())
set mT=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(vT)+1]=r[GetPlayerId(mT)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set QT=GetTriggerUnit()
call SetUnitState(QT,UNIT_STATE_LIFE,GetUnitState(QT,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set jT=null
set xT=null
set vT=null
set mT=null
set QT=null
endfunction
function Z7 takes string W7 returns integer
local integer E7
set Wb[Qb]=W7
set Qb=Qb+1
set Wb[Qb]="when calling HashSet in HashSet, line 4"
set Qb=Qb+1
if ub==0 then
if rb<32768 then
set rb=rb+1
set E7=rb
set sb[E7]=691
else
call g6("Out of memory: Could not create HashSet.","when calling error in HashSet, line 5")
set E7=0
endif
else
set ub=ub-1
set E7=wb[ub]
set sb[E7]=691
endif
set Qb=Qb-1
set co[E7]=0
set Qb=Qb-1
return E7
endfunction
function Zow takes string xow,string vow returns integer
local integer mow
local integer Qow
local boolean Wow
local integer Eow
set Wb[Qb]=vow
set Qb=Qb+1
set mow=StringHash(xow)
set Qow=tl
set Wb[Qb]="when calling hasString in TypeCasting, line 24"
set Qb=Qb+1
if cb[Qow]==0 then
if Qow==0 then
call g6("Nullpointer exception when calling Table.hasString","when calling error in Table, line 18")
else
call g6("Called Table.hasString on invalid object.","when calling error in Table, line 18")
endif
endif
set Wow=HaveSavedString(wl,Qow,mow)
set Qb=Qb-1
if not Wow then
set Eow=tl
set Wb[Qb]="when calling saveString in TypeCasting, line 25"
set Qb=Qb+1
if cb[Eow]==0 then
if Eow==0 then
call g6("Nullpointer exception when calling Table.saveString","when calling error in Table, line 60")
else
call g6("Called Table.saveString on invalid object.","when calling error in Table, line 60")
endif
endif
call SaveStr(wl,Eow,mow,xow)
set Qb=Qb-1
endif
set Qb=Qb-1
return mow
endfunction
function iaw takes integer vqw,integer mqw,integer Qqw,integer Wqw,integer Eqw,integer Zqw,integer Uqw,integer Iqw,integer Pqw,integer Aqw,integer Dqw,integer Hqw,integer Jqw,integer Kqw,integer Lqw,integer Xqw,integer Cqw,integer Vqw,integer Bqw,integer Nqw,integer Mqw,integer waw,integer uaw,integer raw,string saw returns integer
local integer taw
set Wb[Qb]=saw
set Qb=Qb+1
set taw=i9("when calling new_LinkedList in LinkedList, line 391")
call Lpw(taw,vqw,"when calling add in LinkedList, line 393")
call Lpw(taw,mqw,"when calling add in LinkedList, line 393")
call Lpw(taw,Qqw,"when calling add in LinkedList, line 393")
call Lpw(taw,Wqw,"when calling add in LinkedList, line 393")
call Lpw(taw,Eqw,"when calling add in LinkedList, line 393")
call Lpw(taw,Zqw,"when calling add in LinkedList, line 393")
call Lpw(taw,Uqw,"when calling add in LinkedList, line 393")
call Lpw(taw,Iqw,"when calling add in LinkedList, line 393")
call Lpw(taw,Pqw,"when calling add in LinkedList, line 393")
call Lpw(taw,Aqw,"when calling add in LinkedList, line 393")
call Lpw(taw,Dqw,"when calling add in LinkedList, line 393")
call Lpw(taw,Hqw,"when calling add in LinkedList, line 393")
call Lpw(taw,Jqw,"when calling add in LinkedList, line 393")
call Lpw(taw,Kqw,"when calling add in LinkedList, line 393")
call Lpw(taw,Lqw,"when calling add in LinkedList, line 393")
call Lpw(taw,Xqw,"when calling add in LinkedList, line 393")
call Lpw(taw,Cqw,"when calling add in LinkedList, line 393")
call Lpw(taw,Vqw,"when calling add in LinkedList, line 393")
call Lpw(taw,Bqw,"when calling add in LinkedList, line 393")
call Lpw(taw,Nqw,"when calling add in LinkedList, line 393")
call Lpw(taw,Mqw,"when calling add in LinkedList, line 393")
call Lpw(taw,waw,"when calling add in LinkedList, line 393")
call Lpw(taw,uaw,"when calling add in LinkedList, line 393")
call Lpw(taw,raw,"when calling add in LinkedList, line 393")
set Qb=Qb-1
return taw
endfunction
function Dlw takes string Ilw returns boolean
local integer Plw
local integer Alw
set Wb[Qb]=Ilw
set Qb=Qb+1
set Plw=0
set Alw=23
loop
exitwhen Plw>Alw
set Rl[Plw]=Z7("when calling new_HashSet in VoteKick, line 10")
set Plw=Plw+1
endloop
set Tl=iaw(Zow("red","when calling stringToIndex in VoteKick, line 13"),Zow("blue","when calling stringToIndex in VoteKick, line 14"),Zow("teal","when calling stringToIndex in VoteKick, line 15"),Zow("purple","when calling stringToIndex in VoteKick, line 16"),Zow("yellow","when calling stringToIndex in VoteKick, line 17"),Zow("orange","when calling stringToIndex in VoteKick, line 18"),Zow("green","when calling stringToIndex in VoteKick, line 19"),Zow("pink","when calling stringToIndex in VoteKick, line 20"),Zow("grey","when calling stringToIndex in VoteKick, line 21"),Zow("light blue","when calling stringToIndex in VoteKick, line 22"),Zow("dark green","when calling stringToIndex in VoteKick, line 23"),Zow("brown","when calling stringToIndex in VoteKick, line 24"),Zow("maroon","when calling stringToIndex in VoteKick, line 25"),Zow("navy","when calling stringToIndex in VoteKick, line 26"),Zow("turquoise","when calling stringToIndex in VoteKick, line 27"),Zow("violet","when calling stringToIndex in VoteKick, line 28"),Zow("wheat","when calling stringToIndex in VoteKick, line 29"),Zow("peach","when calling stringToIndex in VoteKick, line 30"),Zow("mint","when calling stringToIndex in VoteKick, line 31"),Zow("lavender","when calling stringToIndex in VoteKick, line 32"),Zow("coal","when calling stringToIndex in VoteKick, line 33"),Zow("snow","when calling stringToIndex in VoteKick, line 34"),Zow("emerald","when calling stringToIndex in VoteKick, line 35"),Zow("peanut","when calling stringToIndex in VoteKick, line 36"),"when calling asList in VoteKick, line 12")
set Qb=Qb-1
return true
endfunction
function Waw takes nothing returns boolean
set Qb=0
return Dlw("VoteKick, line 1")
endfunction
function Qx takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function Wx takes nothing returns boolean
if not Qx() then
return false
endif
return true
endfunction
function XJ takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function LP takes nothing returns boolean
if GetResearched()!=1378889818 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889818,true)!=1 then
return false
endif
return true
endfunction
function XP takes nothing returns boolean
if not LP() then
return false
endif
return true
endfunction
function XQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990098,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990095,0)
endfunction
function XT takes nothing returns nothing
local player DT=GetOwningPlayer(GetAttacker())
local player HT=GetOwningPlayer(GetAttacker())
local player JT
local player KT
local unit LT
set r[GetPlayerId(DT)+1]=r[GetPlayerId(HT)+1]+1
set JT=GetOwningPlayer(GetTriggerUnit())
set KT=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(JT)+1]=r[GetPlayerId(KT)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set LT=GetTriggerUnit()
call SetUnitState(LT,UNIT_STATE_LIFE,GetUnitState(LT,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set DT=null
set HT=null
set JT=null
set KT=null
set LT=null
endfunction
function Xcw takes string Hcw returns boolean
local playerunitevent Jcw
local integer Kcw
local integer Lcw
set Wb[Qb]=Hcw
set Qb=Qb+1
set Jcw=EVENT_PLAYER_UNIT_SPELL_CAST
set Wb[Qb]="when calling alloc_Closure in Taxation, line 6"
set Qb=Qb+1
if Gl==0 then
if gl<32768 then
set gl=gl+1
set Kcw=gl
set hl[Kcw]=676
else
call g6("Out of memory: Could not create Closure.","when calling error in Taxation, line 6")
set Kcw=0
endif
else
set Gl=Gl-1
set Kcw=Yl[Gl]
set hl[Kcw]=676
endif
set Qb=Qb-1
set ec[Kcw]=0
set qc[Kcw]=0
set ac[Kcw]=0
set Wb[Qb]="when calling add in Taxation, line 6"
set Qb=Qb+1
set Wb[Qb]="when calling toIntId in ClosureEvents, line 111"
set Qb=Qb+1
set Lcw=oc[GetHandleId(Jcw)]
if Lcw==0 then
set Lcw=tM(Jcw,"when calling registerEventId in ClosureEvents, line 228")
endif
set Qb=Qb-1
set ec[Kcw]=Lcw
if yc[ec[Kcw]]!=0 then
set ac[yc[ec[Kcw]]]=Kcw
set qc[Kcw]=yc[ec[Kcw]]
endif
set yc[ec[Kcw]]=Kcw
set Qb=Qb-1-1
set Jcw=null
return true
endfunction
function Xaw takes nothing returns boolean
set Qb=0
return Xcw("Taxation, line 1")
endfunction
function Xiw takes nothing returns boolean
return true
endfunction
function Lv takes nothing returns boolean
if GetResearched()!=1378889802 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889802,true)!=2 then
return false
endif
return true
endfunction
function Xv takes nothing returns boolean
if not Lv() then
return false
endif
return true
endfunction
function TF takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988793 then
return false
endif
if GetUnitTypeId(GetSpellTargetUnit())!=1747988787 then
return false
endif
return true
endfunction
function YF takes nothing returns boolean
if not TF() then
return false
endif
return true
endfunction
function YK takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function YW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989559,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989569,0)
endfunction
function Yk takes nothing returns boolean
if GetUnitTypeId(GetDyingUnit())!=1747988791 then
return false
endif
return true
endfunction
function Tm takes nothing returns boolean
if GetResearched()!=1378889799 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889799,true)!=2 then
return false
endif
return true
endfunction
function Ym takes nothing returns boolean
if not Tm() then
return false
endif
return true
endfunction
function ZD takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function ZK takes nothing returns boolean
return true
endfunction
function EU takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function ZU takes nothing returns boolean
if not EU() then
return false
endif
return true
endfunction
function EW takes nothing returns boolean
if GetResearched()!=1378889809 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889809,true)!=1 then
return false
endif
return true
endfunction
function ZW takes nothing returns boolean
if not EW() then
return false
endif
return true
endfunction
function ZZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989826,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989828,0)
endfunction
function W2 takes string v2 returns boolean
local integer m2
local integer Q2
set Wb[Qb]=v2
set Qb=Qb+1
set Wb[Qb]="when calling alloc_Closure in Economy, line 43"
set Qb=Qb+1
if Jl==0 then
if Kl<32768 then
set Kl=Kl+1
set m2=Kl
set Ll[m2]=635
else
call g6("Out of memory: Could not create Closure.","when calling error in Economy, line 43")
set m2=0
endif
else
set Jl=Jl-1
set m2=Hl[Jl]
set Ll[m2]=635
endif
set Qb=Qb-1
set Wb[Qb]="when calling doPeriodically in Economy, line 43"
set Qb=Qb+1
set Wb[Qb]="when calling start in ClosureTimers, line 36"
set Qb=Qb+1
if Ll[m2]==0 then
if m2==0 then
call g6("Nullpointer exception when calling CallbackPeriodic.start","when calling error in ClosureTimers, line 88")
else
call g6("Called CallbackPeriodic.start on invalid object.","when calling error in ClosureTimers, line 88")
endif
endif
call f3(m2,0.333333343,"when calling start in ClosureTimers, line 88")
set Qb=Qb-1-1
set Wb[Qb]="when calling alloc_Closure in Economy, line 50"
set Qb=Qb+1
if Jl==0 then
if Kl<32768 then
set Kl=Kl+1
set Q2=Kl
set Ll[Q2]=636
else
call g6("Out of memory: Could not create Closure.","when calling error in Economy, line 50")
set Q2=0
endif
else
set Jl=Jl-1
set Q2=Hl[Jl]
set Ll[Q2]=636
endif
set Qb=Qb-1
set Wb[Qb]="when calling doPeriodically in Economy, line 50"
set Qb=Qb+1
set Wb[Qb]="when calling start in ClosureTimers, line 36"
set Qb=Qb+1
if Ll[Q2]==0 then
if Q2==0 then
call g6("Nullpointer exception when calling CallbackPeriodic.start","when calling error in ClosureTimers, line 88")
else
call g6("Called CallbackPeriodic.start on invalid object.","when calling error in ClosureTimers, line 88")
endif
endif
call f3(Q2,10.0,"when calling start in ClosureTimers, line 88")
set Qb=Qb-1-1-1
return true
endfunction
function Zaw takes nothing returns boolean
set Qb=0
return W2("Economy, line 1")
endfunction
function Zcw takes nothing returns boolean
set EO[0]="Terrible! Terrible news, my lord!"
set EO[1]="The messenger came to us with horrific news! May we execute him?"
set EO[2]="A mere nightmare, Your Mightiness!"
set ZO[0]="Holy Mother of God, we have horrific news!"
set ZO[1]="Lord Preserve us, Great Prince!"
set ZO[2]="Great Prince, we have horrific news!"
set UO[0]="Allah be merciful! I bring terrible news"
set UO[1]="Oh, Great Sultan! We have terrible news"
set UO[2]="Oh, Great one! I bring ill news"
set IO[0]="Saints save us, we have some most horrific news!"
set IO[1]="My Basileus! We have horrific news!"
set IO[2]="My Basileus, by the grace of our lord. We have horrific news!"
set PO[0]="My King, we have received news concerning our realm"
set PO[1]="The messenger arrived with news. No matter, could I execute him?"
set PO[2]="My liege I bring news about the realm"
set AO[0]="Great Prince, a messenger came with news"
set AO[1]="May the God bless you, Great Prince, we have some news"
set AO[2]="There is something you should know, Great Prince"
set DO[0]="My Sultan! We have news"
set DO[1]="Praise be to Allah, Sultan! We bring news"
set DO[2]="Great Sultan! We have some news"
set HO[0]="My Basileus, we have some news"
set HO[1]="My Basileus, we have some news"
set HO[2]="My Basileus, we have some news"
set JO[0]="Milord! Good news!"
set JO[1]="Praise the Holy Lord! We have good news"
set JO[2]="My King, we bring great news for you!"
set KO[0]="By the grace of our Lord, we bring good news!"
set KO[1]="We received great news my Lord! Still the Messenger deserves to be pusnished"
set KO[2]="My Lord, we have received delightful news!"
set LO[0]="Praise be to Allah, Sultan! We have great news"
set LO[1]="Good tidings Sultan! I bring good news"
set LO[2]="Allah is glorious, Sultan! We have great news"
set XO[0]="Good news, my Basileus!"
set XO[1]="Praise the Holy Lord, we bring great news, my Basileus!"
set XO[2]="We received good news my Basileus! We shouldn’t blind this messenger"
set CO[0]="Your Majesty, important news!"
set CO[1]="May the God bless you, my lord. There is something you must know!"
set CO[2]="There is something that needs your attention, my lord!"
set VO[0]="By the Saints! Great Prince, you must hear to this"
set VO[1]="You should hear this, Great Prince!"
set VO[2]="You need to see this, Great Prince!"
set BO[0]="Great one, urgent news must be brought to your attention!"
set BO[1]="My Sultan, there is something you need to know!"
set BO[2]="My Great Sultan, there is something you must know!"
set NO[0]="My Basileus, there is something you need to know!"
set NO[1]="My Basileus, we can not delay this news!"
set NO[2]="My Basileus, you should be aware of this!"
set MO[0]="|cffffd900Med."
set MO[1]="|cff00ff00Low"
set MO[2]="|cffff0000High"
set MO[3]="|cff940000Harsh"
return true
endfunction
function Ztw takes nothing returns boolean
return true
endfunction
function qA takes nothing returns boolean
if GetUnitTypeId(GetConstructedStructure())==1747989040 then
return true
endif
if GetUnitTypeId(GetConstructedStructure())==1747990361 then
return true
endif
if GetUnitTypeId(GetConstructedStructure())==1747989831 then
return true
endif
return false
endfunction
function aA takes nothing returns boolean
if e[GetPlayerId(GetOwningPlayer(GetConstructedStructure()))+1]!=false then
return false
endif
if not qA() then
return false
endif
return true
endfunction
function aF takes nothing returns nothing
local player iF=GetOwningPlayer(GetSpellTargetUnit())
local playerstate SF=PLAYER_STATE_RESOURCE_GOLD
local playerstate cF
local playerstate oF
local player OF
local force lF
local location bF
local real yF
local real pF
local player eF
local force qF
if SF==PLAYER_STATE_RESOURCE_GOLD then
set cF=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(iF,cF,GetPlayerState(iF,cF)+250)
elseif SF==PLAYER_STATE_RESOURCE_LUMBER then
set oF=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(iF,oF,GetPlayerState(iF,oF)+250)
endif
call SetPlayerState(iF,SF,GetPlayerState(iF,SF)+250)
call RemoveUnit(GetSpellAbilityUnit())
set OF=GetOwningPlayer(GetSpellTargetUnit())
set lF=CreateForce()
call ForceAddPlayer(lF,OF)
if IsPlayerInForce(GetLocalPlayer(),lF) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_1230")
endif
set y=GetUnitLoc(GetSpellTargetUnit())
set eF=GetOwningPlayer(GetSpellTargetUnit())
set qF=CreateForce()
call ForceAddPlayer(qF,eF)
set bF=y
set yF=GetLocationX(bF)
set pF=GetLocationY(bF)
if IsPlayerInForce(GetLocalPlayer(),qF) then
call PingMinimap(yF,pF,2.00)
endif
call RemoveLocation(y)
set iF=null
set SF=null
set cF=null
set oF=null
set OF=null
set lF=null
set bF=null
set eF=null
set qF=null
endfunction
function qJ takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989060 then
return false
endif
return true
endfunction
function aJ takes nothing returns boolean
if not qJ() then
return false
endif
return true
endfunction
function initialize takes nothing returns nothing
local integer i_2=0
local integer temp=WO
loop
exitwhen i_2>temp
set i_2=i_2+1
endloop
endfunction
function aaw takes nothing returns boolean
set Qb=0
set Wb[Qb]="StringUtils, line 1"
set Qb=Qb+1
set WO=127
call initialize()
call Zow("","when calling stringToIndex in StringUtils, line 167")
set Qb=Qb-1
return true
endfunction
function ah takes nothing returns nothing
local group ph
local code eh
local boolean qh
set b=GetUnitsOfTypeIdAll(1747989301)
set ph=w
set eh=By
set qh=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(ph,eh)
if qh then
call DestroyGroup(ph)
endif
call DestroyGroup(b)
set ph=null
endfunction
function am takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988559,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989064,0)
endfunction
function aww takes nothing returns boolean
return true
endfunction
function initMapBounds takes nothing returns nothing
local rect cond_result
local region receiver
local real temp
local real tuple_temp
set Wo=bj_mapInitialPlayableArea
call RegionAddRect(CreateRegion(),Wo)
set cond_result=GetWorldBounds()
set Eo=cond_result
set receiver=CreateRegion()
call RegionAddRect(receiver,Eo)
set Zo=receiver
set temp=GetRectMaxX(Eo)
set tuple_temp=GetRectMaxY(Eo)
set Uo=temp
set Io=tuple_temp
endfunction
function b0w takes nothing returns boolean
call initMapBounds()
return true
endfunction
function lH takes nothing returns boolean
if GetUnitTypeId(GetConstructedStructure())!=1747990351 then
return false
endif
return true
endfunction
function bH takes nothing returns boolean
if not lH() then
return false
endif
return true
endfunction
function bP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990596,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990595,0)
endfunction
function bT takes nothing returns nothing
call SetFloatGameState(GAME_STATE_TIME_OF_DAY,bj_MELEE_STARTING_TOD)
call MeleeStartingHeroLimit()
endfunction
function lU takes nothing returns boolean
if GetResearched()!=1378890036 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890036,true)!=2 then
return false
endif
return true
endfunction
function bU takes nothing returns boolean
if not lU() then
return false
endif
return true
endfunction
function baw takes nothing returns boolean
set Qb=0
set Wb[Qb]="EventHelper, line 1"
set Qb=Qb+1
call u7("when calling new_HashMap in EventHelper, line 6")
call u7("when calling new_HashMap in EventHelper, line 7")
call Acw("when calling new_Table in EventHelper, line 8")
set Qb=Qb-1
return true
endfunction
function ROw takes unit nOw,string dOw returns integer
local integer fOw
set Wb[Qb]=dOw
set Qb=Qb+1
set Wb[Qb]="when calling UnitIndex in UnitIndexer, line 166"
set Qb=Qb+1
if xb==0 then
if vb<32768 then
set vb=vb+1
set fOw=vb
set mb[fOw]=735
else
call g6("Out of memory: Could not create UnitIndex.","when calling error in UnitIndexer, line 157")
set fOw=0
endif
else
set xb=xb-1
set fOw=jb[xb]
set mb[fOw]=735
endif
set Qb=Qb-1
set Ol[fOw]=nOw
call SetUnitUserData(Ol[fOw],fOw)
set cl=Ol[fOw]
call TriggerEvaluate(il)
set Qb=Qb-1
return fOw
endfunction
function aOw takes string eOw returns nothing
local unit qOw
set Wb[Qb]=eOw
set Qb=Qb+1
set qOw=lO[bO-1]
set Wb[Qb]="when calling toUnitIndex in UnitIndexer, line 179"
set Qb=Qb+1
if GetUnitUserData(qOw)==0 then
call ROw(qOw,"when calling new_UnitIndex in UnitIndexer, line 125")
endif
set Qb=Qb-1-1
set qOw=null
endfunction
function bnw takes nothing returns nothing
set Qb=0
call aOw("UnitIndexer, line 179")
endfunction
function bv takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989057,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989058,0)
endfunction
function c1 takes nothing returns boolean
local trigger t1=CreateTrigger()
local trigger s1
local integer i1
local integer S1
call TriggerAddCondition(t1,Condition(ef))
call TriggerAddAction(t1,qf)
set s1=t1
set i1=0
set S1=23
loop
exitwhen i1>S1
call TriggerRegisterPlayerChatEvent(s1,dO[i1],"-",false)
set i1=i1+1
endloop
set s1=null
set t1=null
return true
endfunction
function c9 takes nothing returns boolean
return true
endfunction
function cA takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990584,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990594,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990583,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990607,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990598,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990606,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990599,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990601,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651855,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651852,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651850,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990595,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990596,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990604,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990603,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990322,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990323,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990321,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747990324,0)
endfunction
function SK takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990086 then
return false
endif
return true
endfunction
function cK takes nothing returns boolean
if not SK() then
return false
endif
return true
endfunction
function cOw takes nothing returns boolean
return true
endfunction
function cQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651828,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651827,0)
endfunction
function SW takes nothing returns boolean
if GetResearched()!=1378889807 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889807,true)!=1 then
return false
endif
return true
endfunction
function cW takes nothing returns boolean
if not SW() then
return false
endif
return true
endfunction
function cZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651848,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651846,0)
endfunction
function jow takes string Fow returns boolean
local integer kow
set Wb[Qb]=Fow
set Qb=Qb+1
set tl=Acw("when calling new_Table in TypeCasting, line 6")
set Wb[Qb]="when calling initTypecastData in TypeCasting, line 14"
set Qb=Qb+1
set kow=tl
set Wb[Qb]="when calling saveString in TypeCasting, line 11"
set Qb=Qb+1
if cb[kow]==0 then
if kow==0 then
call g6("Nullpointer exception when calling Table.saveString","when calling error in Table, line 60")
else
call g6("Called Table.saveString on invalid object.","when calling error in Table, line 60")
endif
endif
call SaveStr(wl,kow,0,"")
set Qb=Qb-1-1-1
return true
endfunction
function caw takes nothing returns boolean
set Qb=0
return jow("TypeCasting, line 1")
endfunction
function L8 takes integer D8,integer H8 returns integer
local integer J8=no[Yo[D8]]
local integer K8=0
loop
exitwhen J8==Yo[D8]
if qo[J8]==H8 then
return K8
endif
set J8=no[J8]
set K8=K8+1
endloop
return -1
endfunction
function Obw takes integer Sbw,player cbw,string obw returns nothing
set Wb[Qb]=obw
set Qb=Qb+1
if Sbw<0 then
set Qb=Qb-1
return
endif
if not Lyw(Rl[Sbw],GetPlayerId(cbw),"when calling has in VoteKick, line 68") then
set fl[Sbw]=fl[Sbw]+1
endif
set Qb=Qb-1
endfunction
function ibw takes string rbw returns integer
local integer sbw=0
local integer tbw=23
loop
exitwhen sbw>tbw
if GetPlayerName(dO[sbw])==rbw then
return sbw
endif
set sbw=sbw+1
endloop
return -1
endfunction
function Clw takes nothing returns integer
local integer Hlw=0
local integer Jlw=0
local integer Klw=23
local player Llw
local boolean Xlw
loop
exitwhen Jlw>Klw
set Llw=dO[Jlw]
if GetPlayerSlotState(Llw)==PLAYER_SLOT_STATE_PLAYING then
set Xlw=GetPlayerController(Llw)==MAP_CONTROL_USER
else
set Xlw=false
endif
if Xlw then
set Hlw=Hlw+1
endif
set Jlw=Jlw+1
endloop
set Llw=null
return R2I((Hlw-1)*1./2)+1
endfunction
function ubw takes integer Vlw returns nothing
local string Blw
local force Nlw
local string Mlw
local force wbw
if Vlw<0 then
set Nlw=null
set wbw=null
return
endif
if fl[Vlw]>=Clw() then
call CustomDefeatBJ(dO[Vlw],"You've been kicked from the game!")
set Blw="The player "+D3(dO[Vlw])+" has been kicked with the power of democracy!"
set Nlw=bj_FORCE_ALL_PLAYERS
if IsPlayerInForce(GetLocalPlayer(),Nlw) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,10.0,Blw)
endif
else
set Mlw=I2S(fl[Vlw])+" |cffff0000out of|r "+I2S(Clw())+" |cffff0000voted to kick the player|r "+D3(dO[Vlw])+"! |cff00ffdd(player number is "+I2S(Vlw)+")|r"
set wbw=bj_FORCE_ALL_PLAYERS
if IsPlayerInForce(GetLocalPlayer(),wbw) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,10.0,Mlw)
endif
endif
set Nlw=null
set wbw=null
endfunction
function Ybw takes player lbw,string bbw,string ybw returns nothing
local integer pbw
local integer ebw
local integer qbw
local boolean abw
local integer nbw
local integer dbw
local integer fbw
local boolean Rbw
local boolean Tbw
set Wb[Qb]=ybw
set Qb=Qb+1
set pbw=24
if StringLength(bbw)<=2 then
set Rbw=S2I(bbw)>=0
else
set Rbw=false
endif
if Rbw then
set Tbw=S2I(bbw)<24
else
set Tbw=false
endif
if Tbw then
set pbw=S2I(bbw)
else
set ebw=Tl
set qbw=Zow(bbw,"when calling stringToIndex in VoteKick, line 77")
set Wb[Qb]="when calling has in VoteKick, line 77"
set Qb=Qb+1
if Tb[ebw]==0 then
if ebw==0 then
call g6("Nullpointer exception when calling LinkedList.has","when calling error in LinkedList, line 103")
else
call g6("Called LinkedList.has on invalid object.","when calling error in LinkedList, line 103")
endif
endif
set abw=B8(ebw,qbw)
set Qb=Qb-1
if abw then
set nbw=Tl
set dbw=Zow(bbw,"when calling stringToIndex in VoteKick, line 78")
set Wb[Qb]="when calling indexOf in VoteKick, line 78"
set Qb=Qb+1
if Tb[nbw]==0 then
if nbw==0 then
call g6("Nullpointer exception when calling LinkedList.indexOf","when calling error in LinkedList, line 54")
else
call g6("Called LinkedList.indexOf on invalid object.","when calling error in LinkedList, line 54")
endif
endif
set fbw=L8(nbw,dbw)
set Qb=Qb-1
set pbw=fbw
elseif ibw(bbw)!=-1 then
set pbw=ibw(bbw)
endif
endif
call Obw(pbw,lbw,"when calling addVote in VoteKick, line 82")
call ubw(pbw)
set Qb=Qb-1
endfunction
function xbw takes integer Fbw,string kbw,string jbw returns nothing
set Wb[Qb]=jbw
set Qb=Qb+1
if Ql[Fbw]==0 then
if Fbw==0 then
call g6("Nullpointer exception when calling City.changeCityName","when calling error in City, line 159")
else
call g6("Called City.changeCityName on invalid object.","when calling error in City, line 159")
endif
endif
set Wb[Qb]="when calling changeCityName in City, line 159"
set Qb=Qb+1
set PS[Fbw]=SubString(kbw,0,24)
set Wb[Qb]="when calling refreshMultiboardIfPossible in City, line 162"
set Qb=Qb+1
if Ql[Fbw]==0 then
if Fbw==0 then
call g6("Nullpointer exception when calling City.refreshMultiboardIfPossible","when calling error in City, line 237")
else
call g6("Called City.refreshMultiboardIfPossible on invalid object.","when calling error in City, line 237")
endif
endif
call yV(Fbw,"when calling refreshMultiboardIfPossible in City, line 237")
set Qb=Qb-1-1-1
endfunction
function I1 takes string o1 returns nothing
local string array O1
local string l1
local player b1
local integer y1
local integer p1
local integer e1
local string q1
local string a1
local player n1
local camerafield d1
local player f1
local camerafield R1
local integer T1
local integer Y1
local integer G1
local unit g1
local integer h1
local integer F1
local integer k1
local integer j1
local integer x1
local integer v1
local integer m1
local integer Q1
local integer W1
local integer E1
local integer Z1
local boolean U1
set Wb[Qb]=o1
set Qb=Qb+1
set o1=GetEventPlayerChatString()
set l1=""
set b1=GetTriggerPlayer()
set y1=0
set p1=1
set e1=StringLength(o1)
loop
exitwhen p1>e1
set q1=SubString(o1,p1,p1+1)
if y1>0 then
set U1=p1>StringLength(O1[0])+1
else
set U1=false
endif
if U1 then
set l1=l1+q1
endif
if q1!=" " then
set O1[y1]=O1[y1]+q1
else
set y1=y1+1
endif
set p1=p1+1
endloop
if O1[0]=="far" then
set n1=GetTriggerPlayer()
set d1=CAMERA_FIELD_TARGET_DISTANCE
if GetLocalPlayer()==n1 then
call SetCameraField(d1,3000.0,0.)
endif
elseif O1[0]=="med" then
set f1=GetTriggerPlayer()
set R1=CAMERA_FIELD_TARGET_DISTANCE
if GetLocalPlayer()==f1 then
call SetCameraField(R1,2300.0,0.)
endif
elseif O1[0]=="name" then
call SetPlayerName(GetTriggerPlayer(),l1)
elseif O1[0]=="rename" then
set T1=yO[GetPlayerId(b1)]
set Wb[Qb]="when calling getSelectedCityId in Commands, line 47"
set Qb=Qb+1
if kb[T1]==0 then
if T1==0 then
call g6("Nullpointer exception when calling PlayerStats.getSelectedCityId","when calling error in PlayerStats, line 84")
else
call g6("Called PlayerStats.getSelectedCityId on invalid object.","when calling error in PlayerStats, line 84")
endif
endif
set Y1=aO[T1]
set Qb=Qb-1
if Y1>=0 and Y1<gS then
set G1=QS[Y1]
set Wb[Qb]="when calling getCityUnit in Commands, line 49"
set Qb=Qb+1
if Ql[G1]==0 then
if G1==0 then
call g6("Nullpointer exception when calling City.getCityUnit","when calling error in City, line 176")
else
call g6("Called City.getCityUnit on invalid object.","when calling error in City, line 176")
endif
endif
set g1=IS[G1]
set Qb=Qb-1
if GetOwningPlayer(g1)!=b1 then
set Wb[Qb]="when calling noteToPlayer in Commands, line 50"
set Qb=Qb+1
call DisplayTimedTextToPlayer(b1,0.,0.,10.0,jww(b1,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(b1,0.,0.,10.0,"The city you wanted to rename so eagerly doesn't belong to you!")
set Qb=Qb-1
else
call xbw(QS[Y1],l1,"when calling changeCityName in Commands, line 52")
endif
endif
elseif O1[0]=="add_mod" then
set h1=yO[GetPlayerId(b1)]
set Wb[Qb]="when calling getSelectedCityId in Commands, line 54"
set Qb=Qb+1
if kb[h1]==0 then
if h1==0 then
call g6("Nullpointer exception when calling PlayerStats.getSelectedCityId","when calling error in PlayerStats, line 84")
else
call g6("Called PlayerStats.getSelectedCityId on invalid object.","when calling error in PlayerStats, line 84")
endif
endif
set F1=aO[h1]
set Qb=Qb-1
if not vo then
set Qb=Qb-1
set b1=null
set n1=null
set d1=null
set f1=null
set R1=null
set g1=null
return
endif
if F1>=0 and F1<gS then
set a1=O1[1]
if a1=="massacred_pop" then
set k1=QS[F1]
set Wb[Qb]="when calling addModifier in Commands, line 60"
set Qb=Qb+1
if Ql[k1]==0 then
if k1==0 then
call g6("Nullpointer exception when calling City.addModifier","when calling error in City, line 354")
else
call g6("Called City.addModifier on invalid object.","when calling error in City, line 354")
endif
endif
call tV(k1,6,"when calling addModifier in City, line 354")
set Qb=Qb-1
elseif a1=="recently_conquered" then
set j1=QS[F1]
set Wb[Qb]="when calling addModifier in Commands, line 62"
set Qb=Qb+1
if Ql[j1]==0 then
if j1==0 then
call g6("Nullpointer exception when calling City.addModifier","when calling error in City, line 354")
else
call g6("Called City.addModifier on invalid object.","when calling error in City, line 354")
endif
endif
call tV(j1,0,"when calling addModifier in City, line 354")
set Qb=Qb-1
elseif a1=="recently_revolted" then
set x1=QS[F1]
set Wb[Qb]="when calling addModifier in Commands, line 64"
set Qb=Qb+1
if Ql[x1]==0 then
if x1==0 then
call g6("Nullpointer exception when calling City.addModifier","when calling error in City, line 354")
else
call g6("Called City.addModifier on invalid object.","when calling error in City, line 354")
endif
endif
call tV(x1,1,"when calling addModifier in City, line 354")
set Qb=Qb-1
elseif a1=="more_trade_estabilished" then
set v1=QS[F1]
set Wb[Qb]="when calling addModifier in Commands, line 66"
set Qb=Qb+1
if Ql[v1]==0 then
if v1==0 then
call g6("Nullpointer exception when calling City.addModifier","when calling error in City, line 354")
else
call g6("Called City.addModifier on invalid object.","when calling error in City, line 354")
endif
endif
call tV(v1,5,"when calling addModifier in City, line 354")
set Qb=Qb-1
elseif a1=="on_fire" then
set m1=QS[F1]
set Wb[Qb]="when calling addModifier in Commands, line 68"
set Qb=Qb+1
if Ql[m1]==0 then
if m1==0 then
call g6("Nullpointer exception when calling City.addModifier","when calling error in City, line 354")
else
call g6("Called City.addModifier on invalid object.","when calling error in City, line 354")
endif
endif
call tV(m1,4,"when calling addModifier in City, line 354")
set Qb=Qb-1
elseif a1=="plague_outburst" then
set Q1=QS[F1]
set Wb[Qb]="when calling addModifier in Commands, line 70"
set Qb=Qb+1
if Ql[Q1]==0 then
if Q1==0 then
call g6("Nullpointer exception when calling City.addModifier","when calling error in City, line 354")
else
call g6("Called City.addModifier on invalid object.","when calling error in City, line 354")
endif
endif
call tV(Q1,3,"when calling addModifier in City, line 354")
set Qb=Qb-1
elseif a1=="population_boom" then
set W1=QS[F1]
set Wb[Qb]="when calling addModifier in Commands, line 72"
set Qb=Qb+1
if Ql[W1]==0 then
if W1==0 then
call g6("Nullpointer exception when calling City.addModifier","when calling error in City, line 354")
else
call g6("Called City.addModifier on invalid object.","when calling error in City, line 354")
endif
endif
call tV(W1,2,"when calling addModifier in City, line 354")
set Qb=Qb-1
elseif a1=="prospering" then
set E1=QS[F1]
set Wb[Qb]="when calling addModifier in Commands, line 74"
set Qb=Qb+1
if Ql[E1]==0 then
if E1==0 then
call g6("Nullpointer exception when calling City.addModifier","when calling error in City, line 354")
else
call g6("Called City.addModifier on invalid object.","when calling error in City, line 354")
endif
endif
call tV(E1,7,"when calling addModifier in City, line 354")
set Qb=Qb-1
elseif a1=="sieged" then
set Z1=QS[F1]
set Wb[Qb]="when calling addModifier in Commands, line 76"
set Qb=Qb+1
if Ql[Z1]==0 then
if Z1==0 then
call g6("Nullpointer exception when calling City.addModifier","when calling error in City, line 354")
else
call g6("Called City.addModifier on invalid object.","when calling error in City, line 354")
endif
endif
call tV(Z1,8,"when calling addModifier in City, line 354")
set Qb=Qb-1
endif
endif
elseif O1[0]=="непереводимоесочетаниебукв" then
set vo=not vo
set xo=not xo
call O0w(b1)
elseif O1[0]=="votekick" then
call Ybw(b1,O1[1],"when calling voteKick in Commands, line 82")
endif
set Qb=Qb-1
set b1=null
set n1=null
set d1=null
set f1=null
set R1=null
set g1=null
endfunction
function cnw takes nothing returns nothing
set Qb=0
call I1("Commands, line 89")
endfunction
function cow takes nothing returns boolean
return true
endfunction
function dG takes nothing returns nothing
set t=GetUnitLoc(GetSpellTargetUnit())
set bj_lastCreatedEffect=AddSpecialEffectLoc("Abilities\\Spells\\Orc\\Voodoo\\VoodooAuraTarget.mdl",t)
call DestroyEffect(bj_lastCreatedEffect)
set i=GetUnitLoc(GetSpellAbilityUnit())
set bj_lastCreatedEffect=AddSpecialEffectLoc("Abilities\\Spells\\Orc\\Voodoo\\VoodooAura.mdl",i)
call DestroyEffect(bj_lastCreatedEffect)
call RemoveLocation(t)
call RemoveLocation(i)
endfunction
function nH takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990352 then
return false
endif
return true
endfunction
function dH takes nothing returns boolean
if not nH() then
return false
endif
return true
endfunction
function dP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990604,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990602,0)
endfunction
function nU takes nothing returns boolean
if GetResearched()!=1378890032 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890032,true)!=1 then
return false
endif
return true
endfunction
function dU takes nothing returns boolean
if not nU() then
return false
endif
return true
endfunction
function dY takes nothing returns nothing
local player pY=GetOwningPlayer(GetAttacker())
local player eY=GetOwningPlayer(GetAttacker())
local player qY
local player aY
local unit nY
set r[GetPlayerId(pY)+1]=r[GetPlayerId(eY)+1]+1
set qY=GetOwningPlayer(GetTriggerUnit())
set aY=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(qY)+1]=r[GetPlayerId(aY)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set nY=GetTriggerUnit()
call SetUnitState(nY,UNIT_STATE_LIFE,GetUnitState(nY,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set pY=null
set eY=null
set qY=null
set aY=null
set nY=null
endfunction
function daw takes nothing returns boolean
set Qb=0
set Wb[Qb]="ObjectIdGenerator, line 1"
set Qb=Qb+1
set Wb[Qb]="when calling new_IdGenerator in ObjectIdGenerator, line 7"
set Qb=Qb+1
set Wb[Qb]="when calling IdGenerator in ObjectIdGenerator, line 20"
set Qb=Qb+1
if Yb==0 then
if Gb<32768 then
set Gb=Gb+1
else
call g6("Out of memory: Could not create IdGenerator.","when calling error in ObjectIdGenerator, line 14")
endif
else
set Yb=Yb-1
endif
set Qb=Qb-1-1
set Wb[Qb]="when calling new_IdGenerator in ObjectIdGenerator, line 8"
set Qb=Qb+1
set Wb[Qb]="when calling IdGenerator in ObjectIdGenerator, line 20"
set Qb=Qb+1
if Yb==0 then
if Gb<32768 then
set Gb=Gb+1
else
call g6("Out of memory: Could not create IdGenerator.","when calling error in ObjectIdGenerator, line 14")
endif
else
set Yb=Yb-1
endif
set Qb=Qb-1-1
set Wb[Qb]="when calling new_IdGenerator in ObjectIdGenerator, line 9"
set Qb=Qb+1
set Wb[Qb]="when calling IdGenerator in ObjectIdGenerator, line 20"
set Qb=Qb+1
if Yb==0 then
if Gb<32768 then
set Gb=Gb+1
else
call g6("Out of memory: Could not create IdGenerator.","when calling error in ObjectIdGenerator, line 14")
endif
else
set Yb=Yb-1
endif
set Qb=Qb-1-1
set Wb[Qb]="when calling new_IdGenerator in ObjectIdGenerator, line 10"
set Qb=Qb+1
set Wb[Qb]="when calling IdGenerator in ObjectIdGenerator, line 20"
set Qb=Qb+1
if Yb==0 then
if Gb<32768 then
set Gb=Gb+1
else
call g6("Out of memory: Could not create IdGenerator.","when calling error in ObjectIdGenerator, line 14")
endif
else
set Yb=Yb-1
endif
set Qb=Qb-1-1
set Wb[Qb]="when calling new_IdGenerator in ObjectIdGenerator, line 11"
set Qb=Qb+1
set Wb[Qb]="when calling IdGenerator in ObjectIdGenerator, line 20"
set Qb=Qb+1
if Yb==0 then
if Gb<32768 then
set Gb=Gb+1
else
call g6("Out of memory: Could not create IdGenerator.","when calling error in ObjectIdGenerator, line 14")
endif
else
set Yb=Yb-1
endif
set Qb=Qb-1-1
set Wb[Qb]="when calling new_IdGenerator in ObjectIdGenerator, line 12"
set Qb=Qb+1
set Wb[Qb]="when calling IdGenerator in ObjectIdGenerator, line 20"
set Qb=Qb+1
if Yb==0 then
if Gb<32768 then
set Gb=Gb+1
else
call g6("Out of memory: Could not create IdGenerator.","when calling error in ObjectIdGenerator, line 14")
endif
else
set Yb=Yb-1
endif
set Qb=Qb-1-1-1
return true
endfunction
function dj takes nothing returns nothing
local player cj=GetOwningPlayer(GetSpellTargetUnit())
local playerstate oj=PLAYER_STATE_RESOURCE_LUMBER
local playerstate Oj
local playerstate lj
local player bj
local force yj
local location pj
local real ej
local real qj
local player aj
local force nj
if oj==PLAYER_STATE_RESOURCE_GOLD then
set Oj=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(cj,Oj,GetPlayerState(cj,Oj)+500)
elseif oj==PLAYER_STATE_RESOURCE_LUMBER then
set lj=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(cj,lj,GetPlayerState(cj,lj)+500)
endif
call SetPlayerState(cj,oj,GetPlayerState(cj,oj)+500)
call RemoveUnit(GetSpellAbilityUnit())
set bj=GetOwningPlayer(GetSpellTargetUnit())
set yj=CreateForce()
call ForceAddPlayer(yj,bj)
if IsPlayerInForce(GetLocalPlayer(),yj) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_1232")
endif
set y=GetUnitLoc(GetSpellTargetUnit())
set aj=GetOwningPlayer(GetSpellTargetUnit())
set nj=CreateForce()
call ForceAddPlayer(nj,aj)
set pj=y
set ej=GetLocationX(pj)
set qj=GetLocationY(pj)
if IsPlayerInForce(GetLocalPlayer(),nj) then
call PingMinimap(ej,qj,2.00)
endif
call RemoveLocation(y)
set cj=null
set oj=null
set Oj=null
set lj=null
set bj=null
set yj=null
set pj=null
set aj=null
set nj=null
endfunction
function dv takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988558,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989057,0)
endfunction
function e2 takes nothing returns boolean
return true
endfunction
function eD takes nothing returns nothing
local integer cD=1
local integer oD=1751868773
local player OD=GetOwningPlayer(GetTriggerUnit())
local rect pD=bj_mapInitialPlayableArea
local location yD=Location(GetRectCenterX(pD),GetRectCenterY(pD))
local location lD=Location(GetLocationX(yD)+100000000.00,GetLocationY(yD)+100000000.00)
local real bD=bj_UNIT_FACING
call GroupClear(bj_lastCreatedGroup)
loop
set cD=cD-1
exitwhen cD<0
call CreateUnitAtLocSaveLast(OD,oD,lD,bD)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
call ShowUnit(bj_lastCreatedUnit,false)
set OD=null
set lD=null
set yD=null
set pD=null
endfunction
function pK takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990328 then
return false
endif
return true
endfunction
function eK takes nothing returns boolean
if not pK() then
return false
endif
return true
endfunction
function eQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651843,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651842,0)
endfunction
function pW takes nothing returns boolean
if GetResearched()!=1378889807 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889807,true)!=2 then
return false
endif
return true
endfunction
function eW takes nothing returns boolean
if not pW() then
return false
endif
return true
endfunction
function eZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989815,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989838,0)
endfunction
function tqw takes integer Uew,integer Iew,integer Pew,integer Aew,integer Dew,integer Hew,integer Jew,integer Kew,integer Lew,integer Xew,integer Cew,integer Vew,integer Bew,integer New,integer Mew,integer wqw,integer uqw,string rqw returns integer
local integer sqw
set Wb[Qb]=rqw
set Qb=Qb+1
set sqw=i9("when calling new_LinkedList in LinkedList, line 391")
call Lpw(sqw,Uew,"when calling add in LinkedList, line 393")
call Lpw(sqw,Iew,"when calling add in LinkedList, line 393")
call Lpw(sqw,Pew,"when calling add in LinkedList, line 393")
call Lpw(sqw,Aew,"when calling add in LinkedList, line 393")
call Lpw(sqw,Dew,"when calling add in LinkedList, line 393")
call Lpw(sqw,Hew,"when calling add in LinkedList, line 393")
call Lpw(sqw,Jew,"when calling add in LinkedList, line 393")
call Lpw(sqw,Kew,"when calling add in LinkedList, line 393")
call Lpw(sqw,Lew,"when calling add in LinkedList, line 393")
call Lpw(sqw,Xew,"when calling add in LinkedList, line 393")
call Lpw(sqw,Cew,"when calling add in LinkedList, line 393")
call Lpw(sqw,Vew,"when calling add in LinkedList, line 393")
call Lpw(sqw,Bew,"when calling add in LinkedList, line 393")
call Lpw(sqw,New,"when calling add in LinkedList, line 393")
call Lpw(sqw,Mew,"when calling add in LinkedList, line 393")
call Lpw(sqw,wqw,"when calling add in LinkedList, line 393")
call Lpw(sqw,uqw,"when calling add in LinkedList, line 393")
set Qb=Qb-1
return sqw
endfunction
function xqw takes integer iqw,integer Sqw,integer cqw,integer oqw,integer Oqw,integer lqw,integer bqw,integer yqw,integer pqw,integer eqw,integer qqw,integer aqw,integer nqw,integer dqw,integer fqw,integer Rqw,integer Tqw,integer Yqw,integer Gqw,integer gqw,integer hqw,integer Fqw,string kqw returns integer
local integer jqw
set Wb[Qb]=kqw
set Qb=Qb+1
set jqw=i9("when calling new_LinkedList in LinkedList, line 391")
call Lpw(jqw,iqw,"when calling add in LinkedList, line 393")
call Lpw(jqw,Sqw,"when calling add in LinkedList, line 393")
call Lpw(jqw,cqw,"when calling add in LinkedList, line 393")
call Lpw(jqw,oqw,"when calling add in LinkedList, line 393")
call Lpw(jqw,Oqw,"when calling add in LinkedList, line 393")
call Lpw(jqw,lqw,"when calling add in LinkedList, line 393")
call Lpw(jqw,bqw,"when calling add in LinkedList, line 393")
call Lpw(jqw,yqw,"when calling add in LinkedList, line 393")
call Lpw(jqw,pqw,"when calling add in LinkedList, line 393")
call Lpw(jqw,eqw,"when calling add in LinkedList, line 393")
call Lpw(jqw,qqw,"when calling add in LinkedList, line 393")
call Lpw(jqw,aqw,"when calling add in LinkedList, line 393")
call Lpw(jqw,nqw,"when calling add in LinkedList, line 393")
call Lpw(jqw,dqw,"when calling add in LinkedList, line 393")
call Lpw(jqw,fqw,"when calling add in LinkedList, line 393")
call Lpw(jqw,Rqw,"when calling add in LinkedList, line 393")
call Lpw(jqw,Tqw,"when calling add in LinkedList, line 393")
call Lpw(jqw,Yqw,"when calling add in LinkedList, line 393")
call Lpw(jqw,Gqw,"when calling add in LinkedList, line 393")
call Lpw(jqw,gqw,"when calling add in LinkedList, line 393")
call Lpw(jqw,hqw,"when calling add in LinkedList, line 393")
call Lpw(jqw,Fqw,"when calling add in LinkedList, line 393")
set Qb=Qb-1
return jqw
endfunction
function blw takes string mOw returns boolean
local integer QOw
local integer WOw
local integer EOw
local integer ZOw
local integer UOw
local integer IOw
local integer POw
local integer AOw
local integer DOw
local integer HOw
local integer JOw
local integer KOw
local integer LOw
local integer XOw
local integer COw
local integer VOw
local integer BOw
local integer NOw
local integer MOw
local integer wlw
local integer ulw
local integer rlw
local integer slw
local integer tlw
local integer ilw
local integer Slw
local integer clw
local integer olw
local integer Olw
local integer llw
set Wb[Qb]=mOw
set Qb=Qb+1
set Wb[Qb]="when calling asList in Units, line 115"
set Qb=Qb+1
set WOw=i9("when calling new_LinkedList in LinkedList, line 391")
call Lpw(WOw,1747989317,"when calling add in LinkedList, line 393")
call Lpw(WOw,1747989305,"when calling add in LinkedList, line 393")
call Lpw(WOw,1747989316,"when calling add in LinkedList, line 393")
call Lpw(WOw,1747989315,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set ll=WOw
set bl=u7("when calling new_HashMap in Units, line 116")
set yl[0]=tqw(1747988528,1747988528,1747988528,1747988528,1747988528,1747988528,1747988532,1747988532,1747988532,1747988532,1211118401,1747989058,1747989058,1747989058,1747989058,1747989058,1747989058,"when calling asList in Units, line 123")
set yl[1]=tqw(1747990339,1747990339,1747990339,1747990339,1747990339,1747990339,1747990340,1747990340,1747990340,1747990340,1211119699,1747990593,1747990593,1747990593,1747990593,1747990593,1747990593,"when calling asList in Units, line 128")
set yl[2]=tqw(1747990087,1747990087,1747990087,1747990087,1747990087,1747990087,1747990088,1747990088,1747990088,1747990088,1211119701,1747989817,1747989817,1747989817,1747989817,1747989817,1747989817,"when calling asList in Units, line 134")
set yl[3]=tqw(1747989558,1747989558,1747989558,1747989558,1747989558,1747989558,1747989575,1747989575,1747989575,1747989575,1211119700,1747989571,1747989571,1747989571,1747989571,1747989571,1747989571,"when calling asList in Units, line 140")
set Wb[Qb]="when calling asList in Units, line 148"
set Qb=Qb+1
set EOw=i9("when calling new_LinkedList in LinkedList, line 391")
call Lpw(EOw,1747989558,"when calling add in LinkedList, line 393")
call Lpw(EOw,1747990339,"when calling add in LinkedList, line 393")
call Lpw(EOw,1747990087,"when calling add in LinkedList, line 393")
call Lpw(EOw,1747988528,"when calling add in LinkedList, line 393")
call Lpw(EOw,1747989575,"when calling add in LinkedList, line 393")
call Lpw(EOw,1747990340,"when calling add in LinkedList, line 393")
call Lpw(EOw,1747990088,"when calling add in LinkedList, line 393")
call Lpw(EOw,1747988532,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set pl=EOw
set Wb[Qb]="when calling asList in Units, line 160"
set Qb=Qb+1
set ZOw=i9("when calling new_LinkedList in LinkedList, line 391")
call Lpw(ZOw,1747988529,"when calling add in LinkedList, line 393")
call Lpw(ZOw,1747988530,"when calling add in LinkedList, line 393")
call Lpw(ZOw,1747988531,"when calling add in LinkedList, line 393")
call Lpw(ZOw,1747990326,"when calling add in LinkedList, line 393")
call Lpw(ZOw,1747990327,"when calling add in LinkedList, line 393")
call Lpw(ZOw,1747990328,"when calling add in LinkedList, line 393")
call Lpw(ZOw,1747990084,"when calling add in LinkedList, line 393")
call Lpw(ZOw,1747990087,"when calling add in LinkedList, line 393")
call Lpw(ZOw,1747990085,"when calling add in LinkedList, line 393")
call Lpw(ZOw,1747989590,"when calling add in LinkedList, line 393")
call Lpw(ZOw,1747989591,"when calling add in LinkedList, line 393")
call Lpw(ZOw,1747989592,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set el=ZOw
set Wb[Qb]="when calling asList in Units, line 175"
set Qb=Qb+1
set UOw=i9("when calling new_LinkedList in LinkedList, line 391")
call Lpw(UOw,1747989059,"when calling add in LinkedList, line 393")
call Lpw(UOw,1747989060,"when calling add in LinkedList, line 393")
call Lpw(UOw,1747988844,"when calling add in LinkedList, line 393")
call Lpw(UOw,1747990351,"when calling add in LinkedList, line 393")
call Lpw(UOw,1747990352,"when calling add in LinkedList, line 393")
call Lpw(UOw,1747990356,"when calling add in LinkedList, line 393")
call Lpw(UOw,1747989331,"when calling add in LinkedList, line 393")
call Lpw(UOw,1747990350,"when calling add in LinkedList, line 393")
call Lpw(UOw,1747989809,"when calling add in LinkedList, line 393")
call Lpw(UOw,1747990353,"when calling add in LinkedList, line 393")
call Lpw(UOw,1747990354,"when calling add in LinkedList, line 393")
call Lpw(UOw,1747990355,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set ql=UOw
set Wb[Qb]="when calling asList in Units, line 190"
set Qb=Qb+1
set IOw=i9("when calling new_LinkedList in LinkedList, line 391")
call Lpw(IOw,1747988529,"when calling add in LinkedList, line 393")
call Lpw(IOw,1747988530,"when calling add in LinkedList, line 393")
call Lpw(IOw,1747988531,"when calling add in LinkedList, line 393")
call Lpw(IOw,1747990326,"when calling add in LinkedList, line 393")
call Lpw(IOw,1747990327,"when calling add in LinkedList, line 393")
call Lpw(IOw,1747990328,"when calling add in LinkedList, line 393")
call Lpw(IOw,1747990084,"when calling add in LinkedList, line 393")
call Lpw(IOw,1747990087,"when calling add in LinkedList, line 393")
call Lpw(IOw,1747990085,"when calling add in LinkedList, line 393")
call Lpw(IOw,1747989590,"when calling add in LinkedList, line 393")
call Lpw(IOw,1747989591,"when calling add in LinkedList, line 393")
call Lpw(IOw,1747989592,"when calling add in LinkedList, line 393")
call Lpw(IOw,1747989555,"when calling add in LinkedList, line 393")
call Lpw(IOw,1747989297,"when calling add in LinkedList, line 393")
call Lpw(IOw,1747989325,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set al=IOw
set Wb[Qb]="when calling asList in Units, line 199"
set Qb=Qb+1
set POw=i9("when calling new_LinkedList in LinkedList, line 391")
call Lpw(POw,1747989321,"when calling add in LinkedList, line 393")
call Lpw(POw,1747989321,"when calling add in LinkedList, line 393")
call Lpw(POw,1747989321,"when calling add in LinkedList, line 393")
call Lpw(POw,1747989321,"when calling add in LinkedList, line 393")
call Lpw(POw,1747989321,"when calling add in LinkedList, line 393")
call Lpw(POw,1747989321,"when calling add in LinkedList, line 393")
call Lpw(POw,1747989321,"when calling add in LinkedList, line 393")
call Lpw(POw,1747989321,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set nl[0]=POw
set Wb[Qb]="when calling asList in Units, line 200"
set Qb=Qb+1
set AOw=i9("when calling new_LinkedList in LinkedList, line 391")
call Lpw(AOw,1747989321,"when calling add in LinkedList, line 393")
call Lpw(AOw,1747989321,"when calling add in LinkedList, line 393")
call Lpw(AOw,1747989321,"when calling add in LinkedList, line 393")
call Lpw(AOw,1747989321,"when calling add in LinkedList, line 393")
call Lpw(AOw,1747989326,"when calling add in LinkedList, line 393")
call Lpw(AOw,1747989326,"when calling add in LinkedList, line 393")
call Lpw(AOw,1747989321,"when calling add in LinkedList, line 393")
call Lpw(AOw,1747989321,"when calling add in LinkedList, line 393")
call Lpw(AOw,1747989321,"when calling add in LinkedList, line 393")
call Lpw(AOw,1747989321,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set nl[1]=AOw
set Wb[Qb]="when calling asList in Units, line 201"
set Qb=Qb+1
set DOw=i9("when calling new_LinkedList in LinkedList, line 391")
call Lpw(DOw,1747989321,"when calling add in LinkedList, line 393")
call Lpw(DOw,1747989321,"when calling add in LinkedList, line 393")
call Lpw(DOw,1747989321,"when calling add in LinkedList, line 393")
call Lpw(DOw,1747989321,"when calling add in LinkedList, line 393")
call Lpw(DOw,1747989326,"when calling add in LinkedList, line 393")
call Lpw(DOw,1747989326,"when calling add in LinkedList, line 393")
call Lpw(DOw,1747989326,"when calling add in LinkedList, line 393")
call Lpw(DOw,1747989326,"when calling add in LinkedList, line 393")
call Lpw(DOw,1747989326,"when calling add in LinkedList, line 393")
call Lpw(DOw,1747989326,"when calling add in LinkedList, line 393")
call Lpw(DOw,1747989337,"when calling add in LinkedList, line 393")
call Lpw(DOw,1747989337,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set nl[2]=DOw
set HOw=GetHandleId(gu)
set JOw=GetHandleId(kw)
set KOw=GetHandleId(ew)
set LOw=GetHandleId(qw)
set XOw=GetHandleId(Ow)
set COw=GetHandleId(hu)
set VOw=GetHandleId(Yu)
set BOw=GetHandleId(Vw)
set NOw=GetHandleId(q)
set MOw=GetHandleId(Gu)
set wlw=GetHandleId(a)
set ulw=GetHandleId(fw)
set rlw=GetHandleId(dw)
set slw=GetHandleId(Rw)
set tlw=GetHandleId(ow)
set ilw=GetHandleId(lw)
set Slw=GetHandleId(bw)
set clw=GetHandleId(yw)
set olw=GetHandleId(pw)
set Olw=GetHandleId(aw)
set llw=GetHandleId(d)
set dl=xqw(HOw,JOw,KOw,LOw,XOw,COw,VOw,BOw,NOw,MOw,wlw,ulw,rlw,slw,tlw,ilw,Slw,clw,olw,Olw,llw,GetHandleId(n),"when calling asList in Units, line 204")
set QOw=bl
call spw(QOw,1747989317,15,"when calling put in Units, line 231")
call spw(QOw,1747989305,50,"when calling put in Units, line 232")
call spw(QOw,1747989316,25,"when calling put in Units, line 233")
call spw(QOw,1747989315,40,"when calling put in Units, line 234")
set Qb=Qb-1
return true
endfunction
function eaw takes nothing returns boolean
set Qb=0
return blw("Units, line 1")
endfunction
function eg takes nothing returns nothing
local location ig
local location Sg
local real cg
local real og
local rect Og
local group lg
local group bg
local code yg
local boolean pg
set u=GetUnitLoc(GetSpellAbilityUnit())
set ig=u
set S=Location(GetLocationX(ig)+0.00,GetLocationY(ig)+200.00)
set Sg=u
set cg=GetLocationX(Sg)
set og=GetLocationY(Sg)
set o=Rect(cg-140,og-150,cg+140,og+150)
set Og=o
set lg=CreateGroup()
call GroupEnumUnitsInRect(lg,Og,null)
call DestroyBoolExpr(null)
set l=lg
set bg=l
set yg=Iy
set pg=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(bg,yg)
if pg then
call DestroyGroup(bg)
endif
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747988824,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"stand")
call DestroyGroup(l)
call RemoveLocation(S)
call RemoveLocation(u)
set ig=null
set Sg=null
set Og=null
set lg=null
set bg=null
endfunction
function dE takes nothing returns boolean
if GetResearched()!=1378889808 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889808,true)!=1 then
return false
endif
return true
endfunction
function fE takes nothing returns boolean
if not dE() then
return false
endif
return true
endfunction
function fH takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function dI takes nothing returns boolean
if GetResearched()!=1378890049 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890049,true)!=2 then
return false
endif
return true
endfunction
function fI takes nothing returns boolean
if not dI() then
return false
endif
return true
endfunction
function fU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651844,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651845,0)
endfunction
function Ytw takes string dtw returns boolean
local integer ftw
local integer Rtw
local integer Ttw
set Wb[Qb]=dtw
set Qb=Qb+1
set oO=CreateTrigger()
set OO=CreateGroup()
set ftw=0
set Rtw=bj_MAX_PLAYER_SLOTS-1
loop
exitwhen ftw>Rtw
call SetPlayerAbilityAvailable(dO[ftw],1095577649,false)
set ftw=ftw+1
endloop
set Wb[Qb]="when calling alloc_Closure in OnUnitEnterLeave, line 59"
set Qb=Qb+1
if Pl==0 then
if Al<32768 then
set Al=Al+1
set Ttw=Al
set Dl[Ttw]=650
else
call g6("Out of memory: Could not create Closure.","when calling error in OnUnitEnterLeave, line 59")
set Ttw=0
endif
else
set Pl=Pl-1
set Ttw=Il[Pl]
set Dl[Ttw]=650
endif
set Qb=Qb-1
set Wb[Qb]="when calling nullTimer in OnUnitEnterLeave, line 59"
set Qb=Qb+1
set Wb[Qb]="when calling doAfter in ClosureTimers, line 22"
set Qb=Qb+1
set Wb[Qb]="when calling start in ClosureTimers, line 15"
set Qb=Qb+1
if Dl[Ttw]==0 then
if Ttw==0 then
call g6("Nullpointer exception when calling CallbackSingle.start","when calling error in ClosureTimers, line 67")
else
call g6("Called CallbackSingle.start on invalid object.","when calling error in ClosureTimers, line 67")
endif
endif
call g3(Ttw,0.,"when calling start in ClosureTimers, line 67")
set Qb=Qb-1-1-1-1
return true
endfunction
function faw takes nothing returns boolean
set Qb=0
return Ytw("OnUnitEnterLeave, line 1")
endfunction
function fg takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989077 then
return false
endif
return true
endfunction
function dh takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988792 then
return false
endif
if GetUnitTypeId(GetSpellTargetUnit())!=1747988787 then
return false
endif
return true
endfunction
function fh takes nothing returns boolean
if not dh() then
return false
endif
return true
endfunction
function gA takes nothing returns nothing
local integer nA=1
local integer dA=1747988787
local player fA=GetOwningPlayer(GetConstructedStructure())
local rect GA=bj_mapInitialPlayableArea
local location YA=Location(GetRectCenterX(GA),GetRectCenterY(GA))
local location RA=Location(GetLocationX(YA)+100000000.00,GetLocationY(YA)+1000000000.00)
local real TA=bj_UNIT_FACING
call GroupClear(bj_lastCreatedGroup)
loop
set nA=nA-1
exitwhen nA<0
call CreateUnitAtLocSaveLast(fA,dA,RA,TA)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
call ShowUnit(bj_lastCreatedUnit,false)
set e[GetPlayerId(GetOwningPlayer(GetConstructedStructure()))+1]=true
set fA=null
set RA=null
set YA=null
set GA=null
endfunction
function gJ takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function GP takes nothing returns boolean
if GetResearched()!=1378890054 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890054,true)!=2 then
return false
endif
return true
endfunction
function gP takes nothing returns boolean
if not GP() then
return false
endif
return true
endfunction
function GY takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989315 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function gY takes nothing returns boolean
if not GY() then
return false
endif
return true
endfunction
function Gj takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989049 then
return false
endif
if GetUnitTypeId(GetSpellTargetUnit())!=1747988569 then
return false
endif
return true
endfunction
function gj takes nothing returns boolean
if not Gj() then
return false
endif
return true
endfunction
function Gv takes nothing returns boolean
if GetResearched()!=1378889798 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889798,true)!=1 then
return false
endif
return true
endfunction
function gv takes nothing returns boolean
if not Gv() then
return false
endif
return true
endfunction
function h6 takes nothing returns boolean
set Lc=CreateForce()
set Xc=CreateForce()
set Cc=CreateForce()
set Vc=CreateForce()
set Bc[0]=Lc
set Bc[1]=Xc
set Bc[2]=Cc
set Bc[3]=Vc
set Nc[0]=62
set Mc[0]=194
set wo[0]=255
set Nc[1]=255
set Mc[1]=238
set wo[1]=0
set Nc[2]=0
set Mc[2]=201
set wo[2]=10
set Nc[3]=219
set Mc[3]=0
set wo[3]=201
return true
endfunction
function gH takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990356 then
return false
endif
return true
endfunction
function hH takes nothing returns boolean
if not gH() then
return false
endif
return true
endfunction
function hP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990603,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990604,0)
endfunction
function hSw takes nothing returns boolean
set xO=-340282366920938000000000000000000000000.
return true
endfunction
function gU takes nothing returns boolean
if GetResearched()!=1378890038 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890038,true)!=1 then
return false
endif
return true
endfunction
function hU takes nothing returns boolean
if not gU() then
return false
endif
return true
endfunction
function hcw takes nothing returns boolean
return true
endfunction
function hv takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988551,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989081,0)
endfunction
function tE takes nothing returns boolean
if GetResearched()!=1378889810 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889810,true)!=1 then
return false
endif
return true
endfunction
function iE takes nothing returns boolean
if not tE() then
return false
endif
return true
endfunction
function iH takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function tI takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function iI takes nothing returns boolean
if not tI() then
return false
endif
return true
endfunction
function iT takes nothing returns nothing
call ReplaceUnitBJ(GetEnumUnit(),1747988553,bj_UNIT_STATE_METHOD_RELATIVE)
endfunction
function iU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989836,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989837,0)
endfunction
function ik takes nothing returns boolean
if GetUnitTypeId(GetDyingUnit())!=1747988801 then
return false
endif
return true
endfunction
function B1 takes integer X1,integer C1 returns nothing
local integer V1
set Wc[X1]=Wc[X1]-1.
set C1=0
set V1=23
loop
exitwhen C1>V1
call MultiboardSetTitleText(SO[C1],"Income: "+I2S(R2I(Wc[X1]/60.))+":"+I2S(R2I(ModuloReal(Wc[X1],60.)/10.))+I2S(R2I(ModuloReal(ModuloReal(Wc[X1],60.),10.))))
set C1=C1+1
endloop
if Wc[X1]<=0. then
set Wc[X1]=120.0
endif
endfunction
function ZB takes integer jB,integer xB,real vB,string mB returns nothing
local integer QB
local real WB
local integer EB
set Wb[Qb]=mB
set Qb=Qb+1
set QB=LS[jB]
set EB=LS[jB]
set WB=vB*GetRandomReal(mpw(tS[xB],0,"when calling get in City, line 388")/1000.,mpw(tS[xB],1,"when calling get in City, line 388")/1000.)*LS[jB]
set LS[jB]=EB+R2I(WB)
set XS[jB]=XS[jB]+(LS[jB]-QB)
set Qb=Qb-1
endfunction
function HB takes integer UB,integer IB,string PB returns nothing
local integer AB
local real DB
set Wb[Qb]=PB
set Qb=Qb+1
set AB=fS[opw(eS,IB,"when calling get in City, line 393")]
set DB=RS[opw(eS,IB,"when calling get in City, line 394")]
set Wb[Qb]="when calling addPopulation in City, line 395"
set Qb=Qb+1
if Ql[UB]==0 then
if UB==0 then
call g6("Nullpointer exception when calling City.addPopulation","when calling error in City, line 386")
else
call g6("Called City.addPopulation on invalid object.","when calling error in City, line 386")
endif
endif
call ZB(UB,AB,DB,"when calling addPopulation in City, line 386")
set Qb=Qb-1
if nS[opw(eS,IB,"when calling get in City, line 397")]==false then
set BS[UB]=BS[UB]-aS[opw(eS,IB,"when calling get in City, line 398")]*5.0/qS[opw(eS,IB,"when calling get in City, line 398")]
endif
set Qb=Qb-1
endfunction
function FN takes integer eN,integer qN,string aN returns nothing
local integer nN
local integer dN
local integer fN
local integer RN
local integer TN
local real YN
local integer GN
local integer gN
local integer hN
set Wb[Qb]=aN
set Qb=Qb+1
set CS[rc[eN]]=CS[rc[eN]]+GetRandomReal(-0.0001,0.00015)*CS[rc[eN]]
set nN=LS[rc[eN]]
set hN=LS[rc[eN]]
set YN=Pow(LS[rc[eN]]*CS[rc[eN]],0.8)*mS[MS[rc[eN]]]
set LS[rc[eN]]=hN+R2I(YN)
set dN=LS[rc[eN]]-nN
set fN=GetRandomInt(R2I(-(0.25*dN)),R2I(0.25*dN))
set LS[rc[eN]]=LS[rc[eN]]+fN
set XS[rc[eN]]=LS[rc[eN]]-nN
set GN=uc[rc[eN]]
set Wb[Qb]="when calling iterator in City, line 137"
set Qb=Qb+1
set gN=A8(GN,"when calling new_LLIterator in LinkedList, line 165")
set Qb=Qb-1
set RN=gN
loop
exitwhen no[fo[RN]]==do[RN]
set fo[RN]=no[fo[RN]]
set TN=qo[fo[RN]]
set qN=rc[eN]
set aN="when calling getCityModifierOnFastCount in City, line 138"
set Wb[Qb]="when calling getCityModifierOnFastCount in City, line 138"
set Qb=Qb+1
if Ql[qN]==0 then
if qN==0 then
call g6("Nullpointer exception when calling City.getCityModifierOnFastCount","when calling error in City, line 392")
else
call g6("Called City.getCityModifierOnFastCount on invalid object.","when calling error in City, line 392")
endif
endif
call HB(qN,TN,"when calling getCityModifierOnFastCount in City, line 392")
set Qb=Qb-1
endloop
set Wb[Qb]="when calling close in City, line 137"
set Qb=Qb+1
if To[RN]then
call dpw(RN,"when calling LLIterator in LinkedList, line 450")
endif
set Qb=Qb-1-1
endfunction
function I5 takes integer F5,integer k5,string j5 returns nothing
local integer x5
local integer v5
local multiboard m5
local boolean Q5
local integer W5
local string E5
local integer Z5
local integer U5
set Wb[Qb]=j5
set Qb=Qb+1
set x5=0
set v5=23
loop
exitwhen x5>v5
set F5=yO[x5]
set Wb[Qb]="when calling isInGame in Economy, line 45"
set Qb=Qb+1
if kb[F5]==0 then
if F5==0 then
call g6("Nullpointer exception when calling PlayerStats.isInGame","when calling error in PlayerStats, line 14")
else
call g6("Called PlayerStats.isInGame on invalid object.","when calling error in PlayerStats, line 14")
endif
endif
set Q5=qO[F5]
set Qb=Qb-1
if Q5 then
set m5=SO[x5]
set k5=Mo[0]
set W5=Mo[1]
set Z5=yO[x5]
set j5="when calling getUpkeep in Economy, line 47"
set Wb[Qb]="when calling getUpkeep in Economy, line 47"
set Qb=Qb+1
if kb[Z5]==0 then
if Z5==0 then
call g6("Nullpointer exception when calling PlayerStats.getUpkeep","when calling error in PlayerStats, line 20")
else
call g6("Called PlayerStats.getUpkeep on invalid object.","when calling error in PlayerStats, line 20")
endif
endif
set U5=nO[Z5]
set Qb=Qb-1
set E5=vcw(U5)
call MultiboardSetItemValue(MultiboardGetItem(m5,W5,k5),E5)
endif
set x5=x5+1
endloop
set Qb=Qb-1
set m5=null
endfunction
function KN takes integer kN,integer jN,string xN returns nothing
local integer vN
local real mN
local integer QN
local real WN
local real EN
local integer ZN
local real UN
local integer IN
local real PN
local integer AN
local integer DN
local integer HN
local integer JN
set Wb[Qb]=xN
set Qb=Qb+1
set mN=dS[opw(eS,2,"when calling get in City, line 143")]
if GetRandomReal(0.0,1.0)<=mN then
set QN=sc[kN]
set Wb[Qb]="when calling addModifier in City, line 144"
set Qb=Qb+1
if Ql[QN]==0 then
if QN==0 then
call g6("Nullpointer exception when calling City.addModifier","when calling error in City, line 354")
else
call g6("Called City.addModifier on invalid object.","when calling error in City, line 354")
endif
endif
call tV(QN,2,"when calling addModifier in City, line 354")
set Qb=Qb-1
endif
set WN=dS[opw(eS,5,"when calling get in City, line 145")]
if GetRandomReal(0.0,1.0)<=WN then
set jN=sc[kN]
set Wb[Qb]="when calling addModifier in City, line 146"
set Qb=Qb+1
if Ql[jN]==0 then
if jN==0 then
call g6("Nullpointer exception when calling City.addModifier","when calling error in City, line 354")
else
call g6("Called City.addModifier on invalid object.","when calling error in City, line 354")
endif
endif
call tV(jN,5,"when calling addModifier in City, line 354")
set Qb=Qb-1
endif
set EN=dS[opw(eS,7,"when calling get in City, line 147")]
if GetRandomReal(0.0,1.0)<=EN then
set ZN=sc[kN]
set Wb[Qb]="when calling addModifier in City, line 148"
set Qb=Qb+1
if Ql[ZN]==0 then
if ZN==0 then
call g6("Nullpointer exception when calling City.addModifier","when calling error in City, line 354")
else
call g6("Called City.addModifier on invalid object.","when calling error in City, line 354")
endif
endif
call tV(ZN,7,"when calling addModifier in City, line 354")
set Qb=Qb-1
endif
set UN=dS[opw(eS,3,"when calling get in City, line 149")]
if GetRandomReal(0.0,1.0)<=UN then
set IN=sc[kN]
set Wb[Qb]="when calling addModifier in City, line 150"
set Qb=Qb+1
if Ql[IN]==0 then
if IN==0 then
call g6("Nullpointer exception when calling City.addModifier","when calling error in City, line 354")
else
call g6("Called City.addModifier on invalid object.","when calling error in City, line 354")
endif
endif
call tV(IN,3,"when calling addModifier in City, line 354")
set Qb=Qb-1
endif
set PN=dS[opw(eS,4,"when calling get in City, line 151")]
if GetRandomReal(0.0,1.0)<=PN then
set AN=sc[kN]
set Wb[Qb]="when calling addModifier in City, line 152"
set Qb=Qb+1
if Ql[AN]==0 then
if AN==0 then
call g6("Nullpointer exception when calling City.addModifier","when calling error in City, line 354")
else
call g6("Called City.addModifier on invalid object.","when calling error in City, line 354")
endif
endif
call tV(AN,4,"when calling addModifier in City, line 354")
set Qb=Qb-1
endif
set DN=uc[sc[kN]]
set Wb[Qb]="when calling iterator in City, line 154"
set Qb=Qb+1
set HN=A8(DN,"when calling new_LLIterator in LinkedList, line 165")
set Qb=Qb-1
set vN=HN
loop
exitwhen no[fo[vN]]==do[vN]
set fo[vN]=no[fo[vN]]
set JN=sc[kN]
set Wb[Qb]="when calling getCityModifierOnLongCount in City, line 155"
set Qb=Qb+1
if Ql[JN]==0 then
if JN==0 then
call g6("Nullpointer exception when calling City.getCityModifierOnLongCount","when calling error in City, line 401")
else
call g6("Called City.getCityModifierOnLongCount on invalid object.","when calling error in City, line 401")
endif
endif
set Qb=Qb-1
endloop
set Wb[Qb]="when calling close in City, line 154"
set Qb=Qb+1
if To[vN]then
call dpw(vN,"when calling LLIterator in LinkedList, line 450")
endif
set Qb=Qb-1-1
endfunction
function Www takes integer kww,integer jww_2,string xww returns nothing
local integer vww
local boolean mww
local integer Qww
set Wb[Qb]=xww
set Qb=Qb+1
set vww=0
set kww=23
loop
exitwhen vww>kww
set jww_2=yO[vww]
set Wb[Qb]="when calling isInGame in MultiboardCityUpdate, line 27"
set Qb=Qb+1
if kb[jww_2]==0 then
if jww_2==0 then
call g6("Nullpointer exception when calling PlayerStats.isInGame","when calling error in PlayerStats, line 14")
else
call g6("Called PlayerStats.isInGame on invalid object.","when calling error in PlayerStats, line 14")
endif
endif
set mww=qO[jww_2]
set Qb=Qb-1
if mww then
set Qww=yO[vww]
set xww="when calling refreshMultiboardCity in MultiboardCityUpdate, line 28"
set Wb[Qb]="when calling refreshMultiboardCity in MultiboardCityUpdate, line 28"
set Qb=Qb+1
if kb[Qww]==0 then
if Qww==0 then
call g6("Nullpointer exception when calling PlayerStats.refreshMultiboardCity","when calling error in PlayerStats, line 43")
else
call g6("Called PlayerStats.refreshMultiboardCity on invalid object.","when calling error in PlayerStats, line 43")
endif
endif
call fiw(Qww,"when calling refreshMultiboardCity in PlayerStats, line 43")
set Qb=Qb-1
endif
set vww=vww+1
endloop
set Qb=Qb-1
endfunction
function o3 takes integer t3,string i3 returns nothing
local integer S3
local integer c3
set Wb[Qb]=i3
set Qb=Qb+1
set S3=0
set c3=bj_MAX_PLAYER_SLOTS-1
loop
exitwhen S3>c3
set Yc[Gc]=t3
set Gc=Gc+1
call GroupEnumUnitsOfPlayer(Tc,dO[S3],gc)
call GroupClear(Tc)
set Gc=Gc-1
set S3=S3+1
endloop
call oyw(t3,"when calling ForGroupCallback in ClosureForGroups, line 66")
set Qb=Qb-1
endfunction
function C2 takes string E2 returns nothing
local integer Z2
local integer U2
local integer I2
local integer P2
local integer A2
local real D2
local integer H2
local integer J2
local integer K2
local integer L2
local integer X2
set Wb[Qb]=E2
set Qb=Qb+1
set Z2=0
set U2=23
loop
exitwhen Z2>U2
set Pc[Z2]=0
set Ac[Z2]=0
set Z2=Z2+1
endloop
set I2=R2I(gS*0.5/10.0)+1
set P2=0
set A2=R2I(20)-1
loop
exitwhen P2>A2
set D2=P2*0.5
set Wb[Qb]="when calling alloc_Closure in Economy, line 29"
set Qb=Qb+1
if Pl==0 then
if Al<32768 then
set Al=Al+1
set H2=Al
set Dl[H2]=644
else
call g6("Out of memory: Could not create Closure.","when calling error in Economy, line 29")
set H2=0
endif
else
set Pl=Pl-1
set H2=Il[Pl]
set Dl[H2]=644
endif
set Qb=Qb-1
set Hc[H2]=P2
set Jc[H2]=I2
set Wb[Qb]="when calling doAfter in Economy, line 29"
set Qb=Qb+1
set E2="when calling start in ClosureTimers, line 15"
set Wb[Qb]="when calling start in ClosureTimers, line 15"
set Qb=Qb+1
if Dl[H2]==0 then
if H2==0 then
call g6("Nullpointer exception when calling CallbackSingle.start","when calling error in ClosureTimers, line 67")
else
call g6("Called CallbackSingle.start on invalid object.","when calling error in ClosureTimers, line 67")
endif
endif
call g3(H2,D2,"when calling start in ClosureTimers, line 67")
set Qb=Qb-1-1
set J2=gS-1
set K2=(P2+1)*I2-1
if J2<2147483647 then
set L2=J2
else
set L2=2147483647
endif
if K2<L2 then
set L2=K2
endif
exitwhen L2==gS-1
set P2=P2+1
endloop
set Wb[Qb]="when calling alloc_Closure in Economy, line 38"
set Qb=Qb+1
if El==0 then
if Zl<32768 then
set Zl=Zl+1
set X2=Zl
set Ul[X2]=683
else
call g6("Out of memory: Could not create Closure.","when calling error in Economy, line 38")
set X2=0
endif
else
set El=El-1
set X2=Wl[El]
set Ul[X2]=683
endif
set Qb=Qb-1
call o3(X2,"when calling forUnitsAll in Economy, line 38")
set Qb=Qb-1
endfunction
function y6 takes integer P5,integer A5,string D5 returns nothing
local integer H5
local integer J5
local multiboard K5
local integer L5
local integer X5
local integer C5
local integer V5
local boolean B5
local integer N5
local string M5
local integer w6
local integer u6
local string r6
local integer s6
local integer t6
local integer i6
local boolean S6
local integer c6
local integer o6
local integer O6
local player l6
local playerstate b6
set Wb[Qb]=D5
set Qb=Qb+1
set Dc=Dc+1
set H5=0
set J5=23
loop
exitwhen H5>J5
set V5=yO[H5]
set D5="when calling isInGame in Economy, line 53"
set Wb[Qb]="when calling isInGame in Economy, line 53"
set Qb=Qb+1
if kb[V5]==0 then
if V5==0 then
call g6("Nullpointer exception when calling PlayerStats.isInGame","when calling error in PlayerStats, line 14")
else
call g6("Called PlayerStats.isInGame on invalid object.","when calling error in PlayerStats, line 14")
endif
endif
set B5=qO[V5]
set Qb=Qb-1
if B5 then
set K5=SO[H5]
set P5=No[0]
set N5=No[1]
set M5=vcw(Pc[H5])
call MultiboardSetItemValue(MultiboardGetItem(K5,N5,P5),M5)
set w6=Mo[0]
set u6=Mo[1]
set s6=yO[H5]
set Wb[Qb]="when calling getUpkeep in Economy, line 56"
set Qb=Qb+1
if kb[s6]==0 then
if s6==0 then
call g6("Nullpointer exception when calling PlayerStats.getUpkeep","when calling error in PlayerStats, line 20")
else
call g6("Called PlayerStats.getUpkeep on invalid object.","when calling error in PlayerStats, line 20")
endif
endif
set t6=nO[s6]
set Qb=Qb-1
set r6=vcw(t6)
call MultiboardSetItemValue(MultiboardGetItem(K5,u6,w6),r6)
endif
set H5=H5+1
endloop
if Dc==R2I(12) then
set Dc=0
set L5=0
set X5=23
loop
exitwhen L5>X5
set i6=yO[L5]
set Wb[Qb]="when calling isInGame in Economy, line 61"
set Qb=Qb+1
if kb[i6]==0 then
if i6==0 then
call g6("Nullpointer exception when calling PlayerStats.isInGame","when calling error in PlayerStats, line 14")
else
call g6("Called PlayerStats.isInGame on invalid object.","when calling error in PlayerStats, line 14")
endif
endif
set S6=qO[i6]
set Qb=Qb-1
if S6 then
set A5=GetPlayerState(dO[L5],PLAYER_STATE_RESOURCE_GOLD)
set C5=GetPlayerState(dO[L5],PLAYER_STATE_RESOURCE_LUMBER)
set l6=dO[L5]
set b6=PLAYER_STATE_RESOURCE_GOLD
set O6=A5+Pc[L5]
set c6=yO[L5]
set Wb[Qb]="when calling getUpkeep in Economy, line 64"
set Qb=Qb+1
if kb[c6]==0 then
if c6==0 then
call g6("Nullpointer exception when calling PlayerStats.getUpkeep","when calling error in PlayerStats, line 20")
else
call g6("Called PlayerStats.getUpkeep on invalid object.","when calling error in PlayerStats, line 20")
endif
endif
set o6=nO[c6]
set Qb=Qb-1
call SetPlayerState(l6,b6,O6+o6)
call SetPlayerState(dO[L5],PLAYER_STATE_RESOURCE_LUMBER,C5+Ac[L5])
endif
set L5=L5+1
endloop
endif
call C2("when calling countIncomeForAll in Economy, line 68")
set Qb=Qb-1
set K5=null
set l6=null
set b6=null
endfunction
function nyw takes integer pyw,integer eyw,string qyw returns nothing
local force ayw
set Wb[Qb]=qyw
set Qb=Qb+1
if Ll[pyw]==0 then
if pyw==0 then
call g6("Nullpointer exception when calling CallbackPeriodic.call","when calling error in ClosureTimers, line 86")
else
call g6("Called CallbackPeriodic.call on invalid object.","when calling error in ClosureTimers, line 86")
endif
endif
if Ll[pyw]<=634 then
if Ll[pyw]<=632 then
if Ll[pyw]<=631 then
call FN(pyw,eyw,"when calling City_closure_impl in ClosureTimers, line 86")
else
call KN(pyw,eyw,"when calling City_closure_impl in ClosureTimers, line 86")
endif
elseif Ll[pyw]<=633 then
set ayw=bj_FORCE_ALL_PLAYERS
if IsPlayerInForce(GetLocalPlayer(),ayw) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,20.0,"Enjoying the map? Join the |cffe100ffofficial CoE discord channel|r! Link: |cffffff00discord.gg/V6kmxsy|r")
endif
else
call B1(pyw,eyw)
endif
elseif Ll[pyw]<=636 then
if Ll[pyw]<=635 then
call I5(pyw,eyw,"when calling Economy_closure_impl in ClosureTimers, line 86")
else
call y6(pyw,eyw,"when calling Economy_closure_impl in ClosureTimers, line 86")
endif
else
call Www(pyw,eyw,"when calling MultiboardCityUpdate_closure_impl in ClosureTimers, line 86")
endif
set Qb=Qb-1
set ayw=null
endfunction
function inw takes nothing returns nothing
local integer tnw
set Qb=0
set Wb[Qb]="ClosureTimers, line 91"
set Qb=Qb+1
set tnw=fow(GetExpiredTimer(),"when calling getData in ClosureTimers, line 94")
call nyw(tnw,tnw,"when calling call in ClosureTimers, line 95")
set Qb=Qb-1
endfunction
function itw takes nothing returns boolean
return true
endfunction
function j6 takes nothing returns boolean
call CreateGroup()
return true
endfunction
function jD takes nothing returns nothing
local integer TD=1
local integer YD=1751343475
local player GD=GetOwningPlayer(GetTriggerUnit())
local rect kD=bj_mapInitialPlayableArea
local location FD=Location(GetRectCenterX(kD),GetRectCenterY(kD))
local location gD=Location(GetLocationX(FD)+100000000.00,GetLocationY(FD)+100000000.00)
local real hD=bj_UNIT_FACING
call GroupClear(bj_lastCreatedGroup)
loop
set TD=TD-1
exitwhen TD<0
call CreateUnitAtLocSaveLast(GD,YD,gD,hD)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
call ShowUnit(bj_lastCreatedUnit,false)
set GD=null
set gD=null
set FD=null
set kD=null
endfunction
function kW takes nothing returns boolean
if GetResearched()!=1378889806 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889806,true)!=2 then
return false
endif
return true
endfunction
function jW takes nothing returns boolean
if not kW() then
return false
endif
return true
endfunction
function jZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989828,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989827,0)
endfunction
function Ysw takes string Eww returns boolean
local integer Zww
local integer Uww
local integer Iww
local integer Pww
local integer Aww
local integer Dww_2
local integer Hww
local integer Jww_2
local integer Kww
local integer Lww
local integer Xww
local integer Cww
local integer Vww
local integer Bww
local integer Nww
local integer Mww
local integer wuw
local integer uuw
local integer ruw
local integer suw
local integer tuw
local integer iuw
local integer Suw
local integer cuw
local integer ouw
local integer Ouw
local integer luw
local integer buw
local integer yuw
local integer puw
local integer euw
local integer quw
local integer auw
local integer nuw
local integer duw
local integer fuw
local integer Ruw
local integer Tuw
local integer Yuw
local integer Guw
local integer guw
local integer huw
local integer Fuw
local integer kuw
local integer juw
local integer xuw
local integer vuw
local integer muw
local integer Quw
local integer Wuw
local integer Euw
local integer Zuw
local integer Uuw
local integer Iuw
local integer Puw
local integer Auw
local integer Duw
local integer Huw
local integer Juw
local integer Kuw
local integer Luw
local integer Xuw
local integer Cuw
local integer Vuw
local integer Buw
local integer Nuw
local integer Muw
local integer wrw
local integer urw
local integer rrw
local integer srw
local integer trw
local integer irw
local integer Srw
local integer crw
local integer orw
local integer Orw
local integer lrw
local integer brw
local integer yrw
local integer prw
local integer erw
local integer qrw
local integer arw
local integer nrw
local integer drw
local integer frw
local integer Rrw
local integer Trw
local integer Yrw
local integer Grw
local integer grw
local integer hrw
local integer Frw
local integer krw
local integer jrw
local integer xrw
local integer vrw
local integer mrw
local integer Qrw
local integer Wrw
local integer Erw
local integer Zrw
local integer Urw
local integer Irw
local integer Prw
local integer Arw
local integer Drw
local integer Hrw
local integer Jrw
local integer Krw
local integer Lrw
local integer Xrw
local integer Crw
local integer Vrw
local integer Brw
local integer Nrw
local integer Mrw
local integer wsw
local integer usw
local integer rsw
local integer ssw
local integer tsw
local integer isw
local integer Ssw
local integer csw
local integer osw
local integer Osw
local integer lsw
local integer bsw
local integer ysw
local integer psw
local integer esw
local integer qsw
local integer asw
local integer nsw
local integer dsw
local integer fsw
local integer Rsw
local integer Tsw
set Wb[Qb]=Eww
set Qb=Qb+1
set Zww=R2I(70)
set Uww=R2I(30)
set Iww=R2I(10)
set Pww=R2I(70)
set Aww=R2I(30)
set Dww_2=R2I(140)
set Wb[Qb]="when calling asList in Multiboards, line 23"
set Qb=Qb+1
set Hww=i9("when calling new_LinkedList in LinkedList, line 391")
call Lpw(Hww,Zww,"when calling add in LinkedList, line 393")
call Lpw(Hww,Uww,"when calling add in LinkedList, line 393")
call Lpw(Hww,Iww,"when calling add in LinkedList, line 393")
call Lpw(Hww,Pww,"when calling add in LinkedList, line 393")
call Lpw(Hww,Aww,"when calling add in LinkedList, line 393")
call Lpw(Hww,Dww_2,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set Bo[0]=Hww
set Jww_2=R2I(70)
set Kww=R2I(30)
set Lww=R2I(10)
set Xww=R2I(70)
set Cww=R2I(30)
set Vww=R2I(140)
set Wb[Qb]="when calling asList in Multiboards, line 24"
set Qb=Qb+1
set Bww=i9("when calling new_LinkedList in LinkedList, line 391")
call Lpw(Bww,Jww_2,"when calling add in LinkedList, line 393")
call Lpw(Bww,Kww,"when calling add in LinkedList, line 393")
call Lpw(Bww,Lww,"when calling add in LinkedList, line 393")
call Lpw(Bww,Xww,"when calling add in LinkedList, line 393")
call Lpw(Bww,Cww,"when calling add in LinkedList, line 393")
call Lpw(Bww,Vww,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set Bo[1]=Bww
set Nww=R2I(70)
set Mww=R2I(30)
set wuw=R2I(10)
set uuw=R2I(70)
set ruw=R2I(30)
set suw=R2I(140)
set Wb[Qb]="when calling asList in Multiboards, line 25"
set Qb=Qb+1
set tuw=i9("when calling new_LinkedList in LinkedList, line 391")
call Lpw(tuw,Nww,"when calling add in LinkedList, line 393")
call Lpw(tuw,Mww,"when calling add in LinkedList, line 393")
call Lpw(tuw,wuw,"when calling add in LinkedList, line 393")
call Lpw(tuw,uuw,"when calling add in LinkedList, line 393")
call Lpw(tuw,ruw,"when calling add in LinkedList, line 393")
call Lpw(tuw,suw,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set Bo[2]=tuw
set iuw=R2I(2.5)
set Suw=R2I(2.5)
set cuw=R2I(400)
set ouw=R2I(2.5)
set Ouw=R2I(2.5)
set luw=R2I(2.5)
set Wb[Qb]="when calling asList in Multiboards, line 27"
set Qb=Qb+1
set buw=i9("when calling new_LinkedList in LinkedList, line 391")
call Lpw(buw,iuw,"when calling add in LinkedList, line 393")
call Lpw(buw,Suw,"when calling add in LinkedList, line 393")
call Lpw(buw,cuw,"when calling add in LinkedList, line 393")
call Lpw(buw,ouw,"when calling add in LinkedList, line 393")
call Lpw(buw,Ouw,"when calling add in LinkedList, line 393")
call Lpw(buw,luw,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set Bo[3]=buw
set yuw=R2I(70)
set puw=R2I(30)
set euw=R2I(30)
set quw=R2I(10)
set auw=R2I(126)
set nuw=R2I(84.000007629)
set Wb[Qb]="when calling asList in Multiboards, line 28"
set Qb=Qb+1
set duw=i9("when calling new_LinkedList in LinkedList, line 391")
call Lpw(duw,yuw,"when calling add in LinkedList, line 393")
call Lpw(duw,puw,"when calling add in LinkedList, line 393")
call Lpw(duw,euw,"when calling add in LinkedList, line 393")
call Lpw(duw,quw,"when calling add in LinkedList, line 393")
call Lpw(duw,auw,"when calling add in LinkedList, line 393")
call Lpw(duw,nuw,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set Bo[4]=duw
set fuw=R2I(70)
set Ruw=R2I(30)
set Tuw=R2I(30)
set Yuw=R2I(10)
set Guw=R2I(126)
set guw=R2I(84.000007629)
set Wb[Qb]="when calling asList in Multiboards, line 29"
set Qb=Qb+1
set huw=i9("when calling new_LinkedList in LinkedList, line 391")
call Lpw(huw,fuw,"when calling add in LinkedList, line 393")
call Lpw(huw,Ruw,"when calling add in LinkedList, line 393")
call Lpw(huw,Tuw,"when calling add in LinkedList, line 393")
call Lpw(huw,Yuw,"when calling add in LinkedList, line 393")
call Lpw(huw,Guw,"when calling add in LinkedList, line 393")
call Lpw(huw,guw,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set Bo[5]=huw
set Fuw=R2I(70)
set kuw=R2I(30)
set juw=R2I(30)
set xuw=R2I(10)
set vuw=R2I(126)
set muw=R2I(84.000007629)
set Wb[Qb]="when calling asList in Multiboards, line 30"
set Qb=Qb+1
set Quw=i9("when calling new_LinkedList in LinkedList, line 391")
call Lpw(Quw,Fuw,"when calling add in LinkedList, line 393")
call Lpw(Quw,kuw,"when calling add in LinkedList, line 393")
call Lpw(Quw,juw,"when calling add in LinkedList, line 393")
call Lpw(Quw,xuw,"when calling add in LinkedList, line 393")
call Lpw(Quw,vuw,"when calling add in LinkedList, line 393")
call Lpw(Quw,muw,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set Bo[6]=Quw
set Wuw=R2I(70)
set Euw=R2I(30)
set Zuw=R2I(30)
set Uuw=R2I(10)
set Iuw=R2I(126)
set Puw=R2I(84.000007629)
set Wb[Qb]="when calling asList in Multiboards, line 31"
set Qb=Qb+1
set Auw=i9("when calling new_LinkedList in LinkedList, line 391")
call Lpw(Auw,Wuw,"when calling add in LinkedList, line 393")
call Lpw(Auw,Euw,"when calling add in LinkedList, line 393")
call Lpw(Auw,Zuw,"when calling add in LinkedList, line 393")
call Lpw(Auw,Uuw,"when calling add in LinkedList, line 393")
call Lpw(Auw,Iuw,"when calling add in LinkedList, line 393")
call Lpw(Auw,Puw,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set Bo[7]=Auw
set Duw=R2I(70)
set Huw=R2I(30)
set Juw=R2I(30)
set Kuw=R2I(10)
set Luw=R2I(126)
set Xuw=R2I(84.000007629)
set Wb[Qb]="when calling asList in Multiboards, line 32"
set Qb=Qb+1
set Cuw=i9("when calling new_LinkedList in LinkedList, line 391")
call Lpw(Cuw,Duw,"when calling add in LinkedList, line 393")
call Lpw(Cuw,Huw,"when calling add in LinkedList, line 393")
call Lpw(Cuw,Juw,"when calling add in LinkedList, line 393")
call Lpw(Cuw,Kuw,"when calling add in LinkedList, line 393")
call Lpw(Cuw,Luw,"when calling add in LinkedList, line 393")
call Lpw(Cuw,Xuw,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set Bo[8]=Cuw
set Vuw=R2I(70)
set Buw=R2I(30)
set Nuw=R2I(30)
set Muw=R2I(10)
set wrw=R2I(126)
set urw=R2I(84.000007629)
set Wb[Qb]="when calling asList in Multiboards, line 33"
set Qb=Qb+1
set rrw=i9("when calling new_LinkedList in LinkedList, line 391")
call Lpw(rrw,Vuw,"when calling add in LinkedList, line 393")
call Lpw(rrw,Buw,"when calling add in LinkedList, line 393")
call Lpw(rrw,Nuw,"when calling add in LinkedList, line 393")
call Lpw(rrw,Muw,"when calling add in LinkedList, line 393")
call Lpw(rrw,wrw,"when calling add in LinkedList, line 393")
call Lpw(rrw,urw,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set Bo[9]=rrw
set No[0]=4
set No[1]=0
set Mo[0]=4
set Mo[1]=1
set wO[0]=1
set wO[1]=4
set uO[0]=1
set uO[1]=5
set rO[0]=1
set rO[1]=6
set sO[0]=2
set sO[1]=6
set tO[0]=2
set tO[1]=3
set srw=Zow("Food","when calling stringToIndex in Multiboards, line 56")
set trw=Zow("0","when calling stringToIndex in Multiboards, line 56")
set irw=Zow("|","when calling stringToIndex in Multiboards, line 56")
set Srw=Zow("Income","when calling stringToIndex in Multiboards, line 56")
set crw=Zow("0","when calling stringToIndex in Multiboards, line 56")
set orw=Zow(" ","when calling stringToIndex in Multiboards, line 56")
set Wb[Qb]="when calling asList in Multiboards, line 56"
set Qb=Qb+1
set Orw=i9("when calling new_LinkedList in LinkedList, line 391")
call Lpw(Orw,srw,"when calling add in LinkedList, line 393")
call Lpw(Orw,trw,"when calling add in LinkedList, line 393")
call Lpw(Orw,irw,"when calling add in LinkedList, line 393")
call Lpw(Orw,Srw,"when calling add in LinkedList, line 393")
call Lpw(Orw,crw,"when calling add in LinkedList, line 393")
call Lpw(Orw,orw,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set iO[0]=Orw
set lrw=Zow("Iron","when calling stringToIndex in Multiboards, line 57")
set brw=Zow("0","when calling stringToIndex in Multiboards, line 57")
set yrw=Zow("|","when calling stringToIndex in Multiboards, line 57")
set prw=Zow("Upkeep","when calling stringToIndex in Multiboards, line 57")
set erw=Zow("0","when calling stringToIndex in Multiboards, line 57")
set qrw=Zow(" ","when calling stringToIndex in Multiboards, line 57")
set Wb[Qb]="when calling asList in Multiboards, line 57"
set Qb=Qb+1
set arw=i9("when calling new_LinkedList in LinkedList, line 391")
call Lpw(arw,lrw,"when calling add in LinkedList, line 393")
call Lpw(arw,brw,"when calling add in LinkedList, line 393")
call Lpw(arw,yrw,"when calling add in LinkedList, line 393")
call Lpw(arw,prw,"when calling add in LinkedList, line 393")
call Lpw(arw,erw,"when calling add in LinkedList, line 393")
call Lpw(arw,qrw,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set iO[1]=arw
set nrw=Zow("Stone","when calling stringToIndex in Multiboards, line 58")
set drw=Zow("0","when calling stringToIndex in Multiboards, line 58")
set frw=Zow("|","when calling stringToIndex in Multiboards, line 58")
set Rrw=Zow(" ","when calling stringToIndex in Multiboards, line 58")
set Trw=Zow(" ","when calling stringToIndex in Multiboards, line 58")
set Yrw=Zow(" ","when calling stringToIndex in Multiboards, line 58")
set Wb[Qb]="when calling asList in Multiboards, line 58"
set Qb=Qb+1
set Grw=i9("when calling new_LinkedList in LinkedList, line 391")
call Lpw(Grw,nrw,"when calling add in LinkedList, line 393")
call Lpw(Grw,drw,"when calling add in LinkedList, line 393")
call Lpw(Grw,frw,"when calling add in LinkedList, line 393")
call Lpw(Grw,Rrw,"when calling add in LinkedList, line 393")
call Lpw(Grw,Trw,"when calling add in LinkedList, line 393")
call Lpw(Grw,Yrw,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set iO[2]=Grw
set grw=Zow(" ","when calling stringToIndex in Multiboards, line 60")
set hrw=Zow(" ","when calling stringToIndex in Multiboards, line 60")
set Frw=Zow("                           City info","when calling stringToIndex in Multiboards, line 60")
set krw=Zow(" ","when calling stringToIndex in Multiboards, line 60")
set jrw=Zow(" ","when calling stringToIndex in Multiboards, line 60")
set xrw=Zow(" ","when calling stringToIndex in Multiboards, line 60")
set Wb[Qb]="when calling asList in Multiboards, line 60"
set Qb=Qb+1
set vrw=i9("when calling new_LinkedList in LinkedList, line 391")
call Lpw(vrw,grw,"when calling add in LinkedList, line 393")
call Lpw(vrw,hrw,"when calling add in LinkedList, line 393")
call Lpw(vrw,Frw,"when calling add in LinkedList, line 393")
call Lpw(vrw,krw,"when calling add in LinkedList, line 393")
call Lpw(vrw,jrw,"when calling add in LinkedList, line 393")
call Lpw(vrw,xrw,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set iO[3]=vrw
set mrw=Zow("Tax","when calling stringToIndex in Multiboards, line 61")
set Qrw=Zow("0","when calling stringToIndex in Multiboards, line 61")
set Wrw=Zow(" ","when calling stringToIndex in Multiboards, line 61")
set Erw=Zow("|","when calling stringToIndex in Multiboards, line 61")
set Zrw=Zow(" ","when calling stringToIndex in Multiboards, line 61")
set Urw=Zow(" ","when calling stringToIndex in Multiboards, line 61")
set Wb[Qb]="when calling asList in Multiboards, line 61"
set Qb=Qb+1
set Irw=i9("when calling new_LinkedList in LinkedList, line 391")
call Lpw(Irw,mrw,"when calling add in LinkedList, line 393")
call Lpw(Irw,Qrw,"when calling add in LinkedList, line 393")
call Lpw(Irw,Wrw,"when calling add in LinkedList, line 393")
call Lpw(Irw,Erw,"when calling add in LinkedList, line 393")
call Lpw(Irw,Zrw,"when calling add in LinkedList, line 393")
call Lpw(Irw,Urw,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set iO[4]=Irw
set Prw=Zow("Public order","when calling stringToIndex in Multiboards, line 62")
set Arw=Zow("0","when calling stringToIndex in Multiboards, line 62")
set Drw=Zow(" ","when calling stringToIndex in Multiboards, line 62")
set Hrw=Zow("|","when calling stringToIndex in Multiboards, line 62")
set Jrw=Zow(" ","when calling stringToIndex in Multiboards, line 62")
set Krw=Zow(" ","when calling stringToIndex in Multiboards, line 62")
set Wb[Qb]="when calling asList in Multiboards, line 62"
set Qb=Qb+1
set Lrw=i9("when calling new_LinkedList in LinkedList, line 391")
call Lpw(Lrw,Prw,"when calling add in LinkedList, line 393")
call Lpw(Lrw,Arw,"when calling add in LinkedList, line 393")
call Lpw(Lrw,Drw,"when calling add in LinkedList, line 393")
call Lpw(Lrw,Hrw,"when calling add in LinkedList, line 393")
call Lpw(Lrw,Jrw,"when calling add in LinkedList, line 393")
call Lpw(Lrw,Krw,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set iO[5]=Lrw
set Xrw=Zow("Population","when calling stringToIndex in Multiboards, line 63")
set Crw=Zow("0","when calling stringToIndex in Multiboards, line 63")
set Vrw=Zow(" ","when calling stringToIndex in Multiboards, line 63")
set Brw=Zow("|","when calling stringToIndex in Multiboards, line 63")
set Nrw=Zow(" ","when calling stringToIndex in Multiboards, line 63")
set Mrw=Zow(" ","when calling stringToIndex in Multiboards, line 63")
set Wb[Qb]="when calling asList in Multiboards, line 63"
set Qb=Qb+1
set wsw=i9("when calling new_LinkedList in LinkedList, line 391")
call Lpw(wsw,Xrw,"when calling add in LinkedList, line 393")
call Lpw(wsw,Crw,"when calling add in LinkedList, line 393")
call Lpw(wsw,Vrw,"when calling add in LinkedList, line 393")
call Lpw(wsw,Brw,"when calling add in LinkedList, line 393")
call Lpw(wsw,Nrw,"when calling add in LinkedList, line 393")
call Lpw(wsw,Mrw,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set iO[6]=wsw
set usw=Zow(" ","when calling stringToIndex in Multiboards, line 64")
set rsw=Zow(" ","when calling stringToIndex in Multiboards, line 64")
set ssw=Zow(" ","when calling stringToIndex in Multiboards, line 64")
set tsw=Zow("|","when calling stringToIndex in Multiboards, line 64")
set isw=Zow(" ","when calling stringToIndex in Multiboards, line 64")
set Ssw=Zow(" ","when calling stringToIndex in Multiboards, line 64")
set Wb[Qb]="when calling asList in Multiboards, line 64"
set Qb=Qb+1
set csw=i9("when calling new_LinkedList in LinkedList, line 391")
call Lpw(csw,usw,"when calling add in LinkedList, line 393")
call Lpw(csw,rsw,"when calling add in LinkedList, line 393")
call Lpw(csw,ssw,"when calling add in LinkedList, line 393")
call Lpw(csw,tsw,"when calling add in LinkedList, line 393")
call Lpw(csw,isw,"when calling add in LinkedList, line 393")
call Lpw(csw,Ssw,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set iO[7]=csw
set osw=Zow(" ","when calling stringToIndex in Multiboards, line 65")
set Osw=Zow(" ","when calling stringToIndex in Multiboards, line 65")
set lsw=Zow(" ","when calling stringToIndex in Multiboards, line 65")
set bsw=Zow("|","when calling stringToIndex in Multiboards, line 65")
set ysw=Zow(" ","when calling stringToIndex in Multiboards, line 65")
set psw=Zow(" ","when calling stringToIndex in Multiboards, line 65")
set Wb[Qb]="when calling asList in Multiboards, line 65"
set Qb=Qb+1
set esw=i9("when calling new_LinkedList in LinkedList, line 391")
call Lpw(esw,osw,"when calling add in LinkedList, line 393")
call Lpw(esw,Osw,"when calling add in LinkedList, line 393")
call Lpw(esw,lsw,"when calling add in LinkedList, line 393")
call Lpw(esw,bsw,"when calling add in LinkedList, line 393")
call Lpw(esw,ysw,"when calling add in LinkedList, line 393")
call Lpw(esw,psw,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set iO[8]=esw
set qsw=Zow(" ","when calling stringToIndex in Multiboards, line 66")
set asw=Zow(" ","when calling stringToIndex in Multiboards, line 66")
set nsw=Zow(" ","when calling stringToIndex in Multiboards, line 66")
set dsw=Zow("|","when calling stringToIndex in Multiboards, line 66")
set fsw=Zow(" ","when calling stringToIndex in Multiboards, line 66")
set Rsw=Zow(" ","when calling stringToIndex in Multiboards, line 66")
set Wb[Qb]="when calling asList in Multiboards, line 66"
set Qb=Qb+1
set Tsw=i9("when calling new_LinkedList in LinkedList, line 391")
call Lpw(Tsw,qsw,"when calling add in LinkedList, line 393")
call Lpw(Tsw,asw,"when calling add in LinkedList, line 393")
call Lpw(Tsw,nsw,"when calling add in LinkedList, line 393")
call Lpw(Tsw,dsw,"when calling add in LinkedList, line 393")
call Lpw(Tsw,fsw,"when calling add in LinkedList, line 393")
call Lpw(Tsw,Rsw,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set iO[9]=Tsw
set Qb=Qb-1
return true
endfunction
function jaw takes nothing returns boolean
set Qb=0
return Ysw("Multiboards, line 1")
endfunction
function gtw takes unit Gtw returns nothing
call UnitAddAbility(Gtw,1095577649)
call UnitMakeAbilityPermanent(Gtw,true,1095577649)
set lO[bO]=Gtw
set bO=bO+1
call TriggerEvaluate(oO)
set bO=bO-1
endfunction
function jtw takes nothing returns nothing
call gtw(GetFilterUnit())
endfunction
function k6 takes nothing returns nothing
set ro=ro+0.030
endfunction
function kE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989582,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989583,0)
endfunction
function kI takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989825,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989817,0)
endfunction
function kQ takes nothing returns nothing
set s=bj_FORCE_ALL_PLAYERS
call ForForce(s,ae)
endfunction
function FT takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989317 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function kT takes nothing returns boolean
if not FT() then
return false
endif
return true
endfunction
function FZ takes nothing returns boolean
if GetResearched()!=1378890033 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890033,true)!=1 then
return false
endif
return true
endfunction
function kZ takes nothing returns boolean
if not FZ() then
return false
endif
return true
endfunction
function kaw takes nothing returns boolean
local integer Yaw
local integer Gaw
local integer gaw
local integer haw
local integer Faw
set Qb=0
set Wb[Qb]="City, line 1"
set Qb=Qb+1
set hS=120.0
set FS[0]=0.0020
set FS[1]=0.0025
set Wb[Qb]="when calling asList in City, line 36"
set Qb=Qb+1
set Yaw=i9("when calling new_LinkedList in LinkedList, line 391")
call Lpw(Yaw,10000,"when calling add in LinkedList, line 393")
call Lpw(Yaw,20000,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set kS[0]=Yaw
set Wb[Qb]="when calling asList in City, line 37"
set Qb=Qb+1
set Gaw=i9("when calling new_LinkedList in LinkedList, line 391")
call Lpw(Gaw,30000,"when calling add in LinkedList, line 393")
call Lpw(Gaw,40000,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set kS[1]=Gaw
set Wb[Qb]="when calling asList in City, line 38"
set Qb=Qb+1
set gaw=i9("when calling new_LinkedList in LinkedList, line 391")
call Lpw(gaw,60000,"when calling add in LinkedList, line 393")
call Lpw(gaw,90000,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set kS[2]=gaw
set Wb[Qb]="when calling asList in City, line 39"
set Qb=Qb+1
set haw=i9("when calling new_LinkedList in LinkedList, line 391")
call Lpw(haw,120000,"when calling add in LinkedList, line 393")
call Lpw(haw,160000,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set kS[3]=haw
set Wb[Qb]="when calling asList in City, line 40"
set Qb=Qb+1
set Faw=i9("when calling new_LinkedList in LinkedList, line 391")
call Lpw(Faw,180000,"when calling add in LinkedList, line 393")
call Lpw(Faw,220000,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set kS[4]=Faw
set jS[0]=1.0
set jS[1]=0.5
set jS[2]=1.6
set jS[3]=2.0
set xS[0]=0.0
set xS[1]=20.0
set xS[2]=-25.0
set xS[3]=-60.0
set vS[0]=0.05
set vS[1]=0.0
set vS[2]=0.15
set vS[3]=0.30
set mS[0]=1.0
set mS[1]=1.1
set mS[2]=0.85
set mS[3]=0.7
set Qb=Qb-1
return true
endfunction
function kcw takes nothing returns boolean
return true
endfunction
function kx takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988788,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988535,0)
endfunction
function l0w takes nothing returns nothing
set Qo=Qo+0.01
endfunction
function lA takes nothing returns nothing
call UnitRemoveAbility(GetTriggerUnit(),1093677402)
endfunction
function lJ takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function OP takes nothing returns boolean
if GetResearched()!=1378890040 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890040,true)!=2 then
return false
endif
return true
endfunction
function lP takes nothing returns boolean
if not OP() then
return false
endif
return true
endfunction
function law takes nothing returns boolean
local integer Oaw
set Qb=0
set Wb[Qb]="Abilities, line 1"
set Qb=Qb+1
set Wb[Qb]="when calling asList in Abilities, line 17"
set Qb=Qb+1
set Oaw=i9("when calling new_LinkedList in LinkedList, line 391")
call Lpw(Oaw,1093677642,"when calling add in LinkedList, line 393")
call Lpw(Oaw,1093677641,"when calling add in LinkedList, line 393")
call Lpw(Oaw,1093677640,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set uS=Oaw
set Qb=Qb-1
return true
endfunction
function Mow takes integer Low,string Xow returns trigger
local integer Cow
local fogstate Vow
local integer Bow
local trigger Now
set Wb[Qb]=Xow
set Qb=Qb+1
set Cow=tl
set Vow=ConvertFogState(Low)
set Wb[Qb]="when calling saveFogState in TypeCasting, line 88"
set Qb=Qb+1
if cb[Cow]==0 then
if Cow==0 then
call g6("Nullpointer exception when calling Table.saveFogState","when calling error in Table, line 168")
else
call g6("Called Table.saveFogState on invalid object.","when calling error in Table, line 168")
endif
endif
call SaveFogStateHandle(wl,Cow,0,Vow)
set Qb=Qb-1
set Bow=tl
set Wb[Qb]="when calling loadTrigger in TypeCasting, line 89"
set Qb=Qb+1
if cb[Bow]==0 then
if Bow==0 then
call g6("Nullpointer exception when calling Table.loadTrigger","when calling error in Table, line 111")
else
call g6("Called Table.loadTrigger on invalid object.","when calling error in Table, line 111")
endif
endif
set Now=LoadTriggerHandle(wl,Bow,0)
set Qb=Qb-1-1
set Wf=Now
set Vow=null
set Now=null
return Wf
endfunction
function XSw takes string KSw returns boolean
local boolean LSw
set Wb[Qb]=KSw
set Qb=Qb+1
set LSw=TriggerEvaluate(Mow(opw(mO,GetSpellAbilityId(),"when calling get in RegisterEvents, line 58"),"when calling triggerFromIndex in RegisterEvents, line 58"))
set Qb=Qb-1
return LSw
endfunction
function lnw takes nothing returns boolean
set Qb=0
return XSw("RegisterEvents, line 58")
endfunction
function Ov takes nothing returns boolean
if GetResearched()!=1378889796 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889796,true)!=1 then
return false
endif
return true
endfunction
function lv takes nothing returns boolean
if not Ov() then
return false
endif
return true
endfunction
function hG takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988824 then
return false
endif
return true
endfunction
function FG takes nothing returns boolean
if not hG() then
return false
endif
return true
endfunction
function GG takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988825 then
return false
endif
return true
endfunction
function gG takes nothing returns boolean
if not GG() then
return false
endif
return true
endfunction
function kG takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988826 then
return false
endif
return true
endfunction
function jG takes nothing returns boolean
if not kG() then
return false
endif
return true
endfunction
function xG takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989079 then
return false
endif
return true
endfunction
function vG takes nothing returns boolean
if not xG() then
return false
endif
return true
endfunction
function mG takes nothing returns nothing
if gG() then
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747989047,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"Death Alternate")
endif
if FG() then
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747989046,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"Death Alternate")
endif
if jG() then
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747989077,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"Death Alternate")
endif
if vG() then
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747989078,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"Death Alternate")
endif
endfunction
function mJ takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function vP takes nothing returns boolean
if GetResearched()!=1378890052 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890052,true)!=1 then
return false
endif
return true
endfunction
function mP takes nothing returns boolean
if not vP() then
return false
endif
return true
endfunction
function mQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990097,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989594,0)
endfunction
function mU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989815,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989816,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989825,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989814,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989830,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651844,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989833,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989832,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989835,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989836,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651848,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1848651846,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989828,0)
call SetPlayerTechMaxAllowed(GetEnumPlayer(),1747989826,0)
endfunction
function aL takes string yL returns boolean
local playerunitevent pL
local integer eL
local integer qL
set Wb[Qb]=yL
set Qb=Qb+1
set pL=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set Wb[Qb]="when calling alloc_Closure in CityBuilded, line 9"
set Qb=Qb+1
if Gl==0 then
if gl<32768 then
set gl=gl+1
set eL=gl
set hl[eL]=663
else
call g6("Out of memory: Could not create Closure.","when calling error in CityBuilded, line 9")
set eL=0
endif
else
set Gl=Gl-1
set eL=Yl[Gl]
set hl[eL]=663
endif
set Qb=Qb-1
set ec[eL]=0
set qc[eL]=0
set ac[eL]=0
set Wb[Qb]="when calling add in CityBuilded, line 9"
set Qb=Qb+1
set Wb[Qb]="when calling toIntId in ClosureEvents, line 111"
set Qb=Qb+1
set qL=oc[GetHandleId(pL)]
if qL==0 then
set qL=tM(pL,"when calling registerEventId in ClosureEvents, line 228")
endif
set Qb=Qb-1
set ec[eL]=qL
if yc[ec[eL]]!=0 then
set ac[yc[ec[eL]]]=eL
set qc[eL]=yc[ec[eL]]
endif
set yc[ec[eL]]=eL
set Qb=Qb-1-1
set pL=null
return true
endfunction
function maw takes nothing returns boolean
set Qb=0
return aL("CityBuilded, line 1")
endfunction
function mg takes nothing returns nothing
local location Yg
local location Gg
local real gg
local real hg
local rect Fg
local group kg
local group jg
local code xg
local boolean vg
set u=GetUnitLoc(GetSpellAbilityUnit())
set Yg=u
set c=Location(GetLocationX(Yg)+200.00,GetLocationY(Yg)+0.00)
set Gg=u
set gg=GetLocationX(Gg)
set hg=GetLocationY(Gg)
set O=Rect(gg-150,hg-140,gg+150,hg+140)
set Fg=O
set kg=CreateGroup()
call GroupEnumUnitsInRect(kg,Fg,null)
call DestroyBoolExpr(null)
set l=kg
set jg=l
set xg=Dy
set vg=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(jg,xg)
if vg then
call DestroyGroup(jg)
endif
call ReplaceUnitBJ(GetSpellAbilityUnit(),1747988826,bj_UNIT_STATE_METHOD_RELATIVE)
call SetUnitAnimation(bj_lastReplacedUnit,"stand")
call DestroyGroup(l)
call RemoveLocation(c)
call RemoveLocation(u)
set Yg=null
set Gg=null
set Fg=null
set kg=null
set jg=null
endfunction
function mh takes nothing returns nothing
local player Rh=GetOwningPlayer(GetSpellTargetUnit())
local playerstate Th=PLAYER_STATE_RESOURCE_LUMBER
local playerstate Yh
local playerstate Gh
local player gh
local force hh
local location Fh
local real kh
local real jh
local player xh
local force vh
if Th==PLAYER_STATE_RESOURCE_GOLD then
set Yh=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(Rh,Yh,GetPlayerState(Rh,Yh)+250)
elseif Th==PLAYER_STATE_RESOURCE_LUMBER then
set Gh=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(Rh,Gh,GetPlayerState(Rh,Gh)+250)
endif
call SetPlayerState(Rh,Th,GetPlayerState(Rh,Th)+250)
call RemoveUnit(GetSpellAbilityUnit())
set gh=GetOwningPlayer(GetSpellTargetUnit())
set hh=CreateForce()
call ForceAddPlayer(hh,gh)
if IsPlayerInForce(GetLocalPlayer(),hh) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_1229")
endif
set y=GetUnitLoc(GetSpellTargetUnit())
set xh=GetOwningPlayer(GetSpellTargetUnit())
set vh=CreateForce()
call ForceAddPlayer(vh,xh)
set Fh=y
set kh=GetLocationX(Fh)
set jh=GetLocationY(Fh)
if IsPlayerInForce(GetLocalPlayer(),vh) then
call PingMinimap(kh,jh,2.00)
endif
call RemoveLocation(y)
set Rh=null
set Th=null
set Yh=null
set Gh=null
set gh=null
set hh=null
set Fh=null
set xh=null
set vh=null
endfunction
function mtw takes nothing returns nothing
call gtw(GetEnumUnit())
endfunction
function vv takes nothing returns boolean
if GetResearched()!=1378889798 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889798,true)!=2 then
return false
endif
return true
endfunction
function mv takes nothing returns boolean
if not vv() then
return false
endif
return true
endfunction
function nG takes nothing returns boolean
if GetSpellAbilityId()!=1093677620 then
return false
endif
return true
endfunction
function nJ takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function aP takes nothing returns boolean
if GetResearched()!=1378890054 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890054,true)!=1 then
return false
endif
return true
endfunction
function nP takes nothing returns boolean
if not aP() then
return false
endif
return true
endfunction
function Diw takes string Ziw returns boolean
local integer Uiw
local integer Iiw
local integer Piw
local integer Aiw
set Wb[Qb]=Ziw
set Qb=Qb+1
set hO=CreateGroup()
set FO=CreateUnit(rS,2019849581,0.,0.,0)
if FO==null then
set Ziw=""
set Uiw=2019849581
set Iiw=0
loop
exitwhen Iiw>3
set Piw=ModuloInteger(Uiw,256)
set Uiw=Uiw/256
set Ziw=SubString(".................................!.#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[.]^_`abcdefghijklmnopqrstuvwxyz{|}~.................................................................................................................................",Piw,Piw+1)+Ziw
set Iiw=Iiw+1
endloop
call g6("DUMMY_UNITID ("+Ziw+") not added correctly to the map.","when calling error in Preloader, line 52")
endif
set Wb[Qb]="when calling alloc_Closure in Preloader, line 54"
set Qb=Qb+1
if Pl==0 then
if Al<32768 then
set Al=Al+1
set Aiw=Al
set Dl[Aiw]=651
else
call g6("Out of memory: Could not create Closure.","when calling error in Preloader, line 54")
set Aiw=0
endif
else
set Pl=Pl-1
set Aiw=Il[Pl]
set Dl[Aiw]=651
endif
set Qb=Qb-1
set Wb[Qb]="when calling nullTimer in Preloader, line 54"
set Qb=Qb+1
set Wb[Qb]="when calling doAfter in ClosureTimers, line 22"
set Qb=Qb+1
set Wb[Qb]="when calling start in ClosureTimers, line 15"
set Qb=Qb+1
if Dl[Aiw]==0 then
if Aiw==0 then
call g6("Nullpointer exception when calling CallbackSingle.start","when calling error in ClosureTimers, line 67")
else
call g6("Called CallbackSingle.start on invalid object.","when calling error in ClosureTimers, line 67")
endif
endif
call g3(Aiw,0.,"when calling start in ClosureTimers, line 67")
set Qb=Qb-1-1-1-1
return true
endfunction
function naw takes nothing returns boolean
set Qb=0
return Diw("Preloader, line 1")
endfunction
function nk takes nothing returns nothing
local player Sk=GetOwningPlayer(GetKillingUnit())
local playerstate ck=PLAYER_STATE_RESOURCE_LUMBER
local playerstate ok
local playerstate Ok
local player lk
local force bk
local location yk
local real pk
local real ek
local player qk
local force ak
if ck==PLAYER_STATE_RESOURCE_GOLD then
set ok=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(Sk,ok,GetPlayerState(Sk,ok)+250)
elseif ck==PLAYER_STATE_RESOURCE_LUMBER then
set Ok=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(Sk,Ok,GetPlayerState(Sk,Ok)+250)
endif
call SetPlayerState(Sk,ck,GetPlayerState(Sk,ck)+250)
set lk=GetOwningPlayer(GetKillingUnit())
set bk=CreateForce()
call ForceAddPlayer(bk,lk)
if IsPlayerInForce(GetLocalPlayer(),bk) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_090")
endif
set y=GetUnitLoc(GetDyingUnit())
set qk=GetOwningPlayer(GetDyingUnit())
set ak=CreateForce()
call ForceAddPlayer(ak,qk)
set yk=y
set pk=GetLocationX(yk)
set ek=GetLocationY(yk)
if IsPlayerInForce(GetLocalPlayer(),ak) then
call PingMinimap(pk,ek,2.00)
endif
call RemoveLocation(y)
set Sk=null
set ck=null
set ok=null
set Ok=null
set lk=null
set bk=null
set yk=null
set qk=null
set ak=null
endfunction
function av takes nothing returns boolean
if GetResearched()!=1378889796 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889796,true)!=2 then
return false
endif
return true
endfunction
function nv takes nothing returns boolean
if not av() then
return false
endif
return true
endfunction
function o9 takes nothing returns boolean
set xo=false
set vo=false
set mo=CreateTimer()
call TimerStart(mo,0.01,true,ff)
return true
endfunction
function oA takes nothing returns nothing
set s=bj_FORCE_ALL_PLAYERS
call ForForce(s,ea)
endfunction
function oK takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function oOw takes nothing returns boolean
return true
endfunction
function oW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989570,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989571,0)
endfunction
function x8 takes string j8 returns boolean
set Wb[Qb]=j8
set Qb=Qb+1
set Wb[Qb]="when calling alloc_Closure in LinkedList, line 504"
set Qb=Qb+1
if ob==0 then
if Ob<32768 then
set Ob=Ob+1
else
call g6("Out of memory: Could not create Closure.","when calling error in LinkedList, line 504")
endif
else
set ob=ob-1
endif
set Qb=Qb-1
set Wb[Qb]="when calling alloc_Closure in LinkedList, line 508"
set Qb=Qb+1
if ob==0 then
if Ob<32768 then
set Ob=Ob+1
else
call g6("Out of memory: Could not create Closure.","when calling error in LinkedList, line 508")
endif
else
set ob=ob-1
endif
set Qb=Qb-1-1
return true
endfunction
function oaw takes nothing returns boolean
set Qb=0
return x8("LinkedList, line 1")
endfunction
function oh takes nothing returns nothing
local group ih
local code Sh
local boolean ch
set w=GetUnitsOfTypeIdAll(1747988790)
set ih=w
set Sh=Cy
set ch=bj_wantDestroyGroup
set bj_wantDestroyGroup=false
call ForGroup(ih,Sh)
if ch then
call DestroyGroup(ih)
endif
call DestroyGroup(w)
set ih=null
endfunction
function cm takes nothing returns boolean
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889797,true)!=2 then
return false
endif
return true
endfunction
function om takes nothing returns boolean
if not cm() then
return false
endif
return true
endfunction
function Eww takes player xww,string vww returns string
local integer mww
local integer Qww
local integer Www_2
set Wb[Qb]=vww
set Qb=Qb+1
set Qww=yO[GetPlayerId(xww)]
set Wb[Qb]="when calling getForceId in Messages, line 37"
set Qb=Qb+1
if kb[Qww]==0 then
if Qww==0 then
call g6("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 94")
else
call g6("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 94")
endif
endif
set Www_2=pO[Qww]
set Qb=Qb-1
set mww=GetRandomInt(0,2)
if Www_2==0 then
set vww=JO[mww]
elseif Www_2==1 then
set vww=KO[mww]
elseif Www_2==2 then
set vww=LO[mww]
elseif Www_2==3 then
set vww=XO[mww]
else
set vww="Good news!"
endif
set Qb=Qb-1
return "|cff00ff00"+vww+"|r"
endfunction
function Gnw takes integer fnw,integer Rnw,string Tnw returns integer
local integer Ynw
if Rnw<0 or Rnw>=24 then
call g6("Index out of Bounds",Tnw)
elseif Rnw<=11 then
if Rnw<=5 then
if Rnw<=2 then
if Rnw<=1 then
if Rnw<=0 then
set Ynw=Ib[fnw]
else
set Ynw=Pb[fnw]
endif
else
set Ynw=Ab[fnw]
endif
elseif Rnw<=4 then
if Rnw<=3 then
set Ynw=Db[fnw]
else
set Ynw=Hb[fnw]
endif
else
set Ynw=Jb[fnw]
endif
elseif Rnw<=8 then
if Rnw<=7 then
if Rnw<=6 then
set Ynw=Kb[fnw]
else
set Ynw=Lb[fnw]
endif
else
set Ynw=Xb[fnw]
endif
elseif Rnw<=10 then
if Rnw<=9 then
set Ynw=Cb[fnw]
else
set Ynw=Vb[fnw]
endif
else
set Ynw=Bb[fnw]
endif
elseif Rnw<=17 then
if Rnw<=14 then
if Rnw<=13 then
if Rnw<=12 then
set Ynw=Nb[fnw]
else
set Ynw=Mb[fnw]
endif
else
set Ynw=wy[fnw]
endif
elseif Rnw<=16 then
if Rnw<=15 then
set Ynw=uy[fnw]
else
set Ynw=ry[fnw]
endif
else
set Ynw=sy[fnw]
endif
elseif Rnw<=20 then
if Rnw<=19 then
if Rnw<=18 then
set Ynw=ty[fnw]
else
set Ynw=iy[fnw]
endif
else
set Ynw=Sy[fnw]
endif
elseif Rnw<=22 then
if Rnw<=21 then
set Ynw=cy[fnw]
else
set Ynw=oy[fnw]
endif
else
set Ynw=Oy[fnw]
endif
return Ynw
endfunction
function Htw takes integer Utw,player Itw,integer Ptw,string Atw returns nothing
local integer Dtw
set Wb[Qb]=Atw
set Qb=Qb+1
set Dtw=GetPlayerId(Itw)
if not qO[Utw]then
set Qb=Qb-1
return
endif
if Dtw>=24 then
set Qb=Qb-1
return
endif
if Gnw(Utw,Dtw,"when reading array PlayerStats_alliance_states in PlayerStats, line 33")==Ptw or Itw==eO[Utw]then
set Qb=Qb-1
return
endif
call dnw(Utw,Dtw,Ptw,"when writing array PlayerStats_alliance_states in PlayerStats, line 35")
call SetPlayerAllianceStateBJ(eO[Utw],Itw,Ptw)
set Qb=Qb-1
endfunction
function Yww takes player nww_2,string dww returns string
local integer fww
local integer Rww
local integer Tww
set Wb[Qb]=dww
set Qb=Qb+1
set Rww=yO[GetPlayerId(nww_2)]
set Wb[Qb]="when calling getForceId in Messages, line 5"
set Qb=Qb+1
if kb[Rww]==0 then
if Rww==0 then
call g6("Nullpointer exception when calling PlayerStats.getForceId","when calling error in PlayerStats, line 94")
else
call g6("Called PlayerStats.getForceId on invalid object.","when calling error in PlayerStats, line 94")
endif
endif
set Tww=pO[Rww]
set Qb=Qb-1
set fww=GetRandomInt(0,2)
if Tww==0 then
set dww=EO[fww]
elseif Tww==1 then
set dww=ZO[fww]
elseif Tww==2 then
set dww=UO[fww]
elseif Tww==3 then
set dww=IO[fww]
else
set dww="Warning!"
endif
set Qb=Qb-1
return "|cffff0000"+dww+"|r"
endfunction
function o2 takes string s4 returns nothing
local player t4
local player i4
local string S4
local integer c4
local force o4
local force O4
local integer l4
local integer b4
local integer y4
local integer p4
local integer e4
local integer q4
local integer a4
local integer n4
local integer d4
local force f4
local force R4
local integer T4
local integer Y4
local integer G4
local integer g4
local integer h4
local integer F4
local player k4
local force j4
local player x4
local player v4
local player m4
local integer Q4
local integer W4
local integer E4
local integer Z4
local player U4
local force I4
local player P4
local player A4
local player D4
local integer H4
local integer J4
local integer K4
local integer L4
local player X4
local force C4
local player V4
local player B4
local player N4
local integer M4
local integer w2
local integer u2
local integer r2
local player s2
local force t2
local player i2
local player S2
local player c2
set Wb[Qb]=s4
set Qb=Qb+1
set t4=GetOwningPlayer(GetSpellAbilityUnit())
set i4=GetOwningPlayer(GetSpellTargetUnit())
set S4=D3(t4)
set s4=D3(i4)
set c4=GetPlayerId(t4)
set f4=CreateForce()
call ForceAddPlayer(f4,t4)
set o4=f4
set R4=CreateForce()
call ForceAddPlayer(R4,t4)
set O4=R4
set l4=GetSpellAbilityId()
if l4==1093677396 then
set T4=yO[c4]
set Wb[Qb]="when calling getAllianceState in Diplomacy, line 17"
set Qb=Qb+1
if kb[T4]==0 then
if T4==0 then
call g6("Nullpointer exception when calling PlayerStats.getAllianceState","when calling error in PlayerStats, line 38")
else
call g6("Called PlayerStats.getAllianceState on invalid object.","when calling error in PlayerStats, line 38")
endif
endif
set Wb[Qb]="when calling getAllianceState in PlayerStats, line 38"
set Qb=Qb+1
set Y4=Gnw(T4,GetPlayerId(i4),"when reading array PlayerStats_alliance_states in PlayerStats, line 39")
set Qb=Qb-1-1
if Y4==bj_ALLIANCE_UNALLIED then
set Qb=Qb-1
set t4=null
set i4=null
set o4=null
set O4=null
set f4=null
set R4=null
set k4=null
set j4=null
set x4=null
set v4=null
set m4=null
set U4=null
set I4=null
set P4=null
set A4=null
set D4=null
set X4=null
set C4=null
set V4=null
set B4=null
set N4=null
set s2=null
set t2=null
set i2=null
set S2=null
set c2=null
return
endif
set G4=yO[c4]
set g4=bj_ALLIANCE_UNALLIED
set Wb[Qb]="when calling setAlliance in Diplomacy, line 19"
set Qb=Qb+1
if kb[G4]==0 then
if G4==0 then
call g6("Nullpointer exception when calling PlayerStats.setAlliance","when calling error in PlayerStats, line 27")
else
call g6("Called PlayerStats.setAlliance on invalid object.","when calling error in PlayerStats, line 27")
endif
endif
call Htw(G4,i4,g4,"when calling setAlliance in PlayerStats, line 27")
set Qb=Qb-1
set h4=yO[GetPlayerId(i4)]
set F4=bj_ALLIANCE_UNALLIED
set Wb[Qb]="when calling setAlliance in Diplomacy, line 20"
set Qb=Qb+1
if kb[h4]==0 then
if h4==0 then
call g6("Nullpointer exception when calling PlayerStats.setAlliance","when calling error in PlayerStats, line 27")
else
call g6("Called PlayerStats.setAlliance on invalid object.","when calling error in PlayerStats, line 27")
endif
endif
call Htw(h4,t4,F4,"when calling setAlliance in PlayerStats, line 27")
set Qb=Qb-1
set b4=0
set y4=23
loop
exitwhen b4>y4
set k4=dO[b4]
set j4=CreateForce()
call ForceAddPlayer(j4,k4)
if dO[b4]==i4 then
set x4=dO[b4]
set Wb[Qb]="when calling warningToPlayer in Diplomacy, line 25"
set Qb=Qb+1
call DisplayTimedTextToPlayer(x4,0.,0.,10.0,Yww(x4,"when calling getWarningStringForPlayer in Messages, line 79"))
call DisplayTimedTextToPlayer(x4,0.,0.,10.0,S4+" has declared war on you!")
set Qb=Qb-1
elseif j4==o4 or j4==O4 then
set v4=dO[b4]
set Wb[Qb]="when calling attentionToPlayer in Diplomacy, line 27"
set Qb=Qb+1
call DisplayTimedTextToPlayer(v4,0.,0.,10.0,Dww(v4,"when calling getAttentionStringForPlayer in Messages, line 88"))
call DisplayTimedTextToPlayer(v4,0.,0.,10.0,S4+" has declared war on your brother-in-arms, "+s4+"!")
set Qb=Qb-1
else
set m4=dO[b4]
set Wb[Qb]="when calling noteToPlayer in Diplomacy, line 29"
set Qb=Qb+1
call DisplayTimedTextToPlayer(m4,0.,0.,10.0,jww(m4,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(m4,0.,0.,10.0,S4+" has declared war on "+s4)
set Qb=Qb-1
endif
set b4=b4+1
endloop
elseif l4==1093677397 then
set Q4=yO[c4]
set Wb[Qb]="when calling getAllianceState in Diplomacy, line 32"
set Qb=Qb+1
if kb[Q4]==0 then
if Q4==0 then
call g6("Nullpointer exception when calling PlayerStats.getAllianceState","when calling error in PlayerStats, line 38")
else
call g6("Called PlayerStats.getAllianceState on invalid object.","when calling error in PlayerStats, line 38")
endif
endif
set Wb[Qb]="when calling getAllianceState in PlayerStats, line 38"
set Qb=Qb+1
set W4=Gnw(Q4,GetPlayerId(i4),"when reading array PlayerStats_alliance_states in PlayerStats, line 39")
set Qb=Qb-1-1
if W4==bj_ALLIANCE_ALLIED_VISION then
set Qb=Qb-1
set t4=null
set i4=null
set o4=null
set O4=null
set f4=null
set R4=null
set k4=null
set j4=null
set x4=null
set v4=null
set m4=null
set U4=null
set I4=null
set P4=null
set A4=null
set D4=null
set X4=null
set C4=null
set V4=null
set B4=null
set N4=null
set s2=null
set t2=null
set i2=null
set S2=null
set c2=null
return
endif
set E4=yO[c4]
set Z4=bj_ALLIANCE_ALLIED_VISION
set Wb[Qb]="when calling setAlliance in Diplomacy, line 34"
set Qb=Qb+1
if kb[E4]==0 then
if E4==0 then
call g6("Nullpointer exception when calling PlayerStats.setAlliance","when calling error in PlayerStats, line 27")
else
call g6("Called PlayerStats.setAlliance on invalid object.","when calling error in PlayerStats, line 27")
endif
endif
call Htw(E4,i4,Z4,"when calling setAlliance in PlayerStats, line 27")
set Qb=Qb-1
set p4=0
set e4=23
loop
exitwhen p4>e4
set U4=dO[p4]
set I4=CreateForce()
call ForceAddPlayer(I4,U4)
if dO[p4]==i4 then
set P4=dO[p4]
set Wb[Qb]="when calling goodNewsToPlayer in Diplomacy, line 39"
set Qb=Qb+1
call DisplayTimedTextToPlayer(P4,0.,0.,10.0,Eww(P4,"when calling getGoodNewsStringForPlayer in Messages, line 85"))
call DisplayTimedTextToPlayer(P4,0.,0.,10.0,S4+" wants to ally you")
set Qb=Qb-1
elseif I4==o4 or I4==O4 then
set A4=dO[p4]
set Wb[Qb]="when calling noteToPlayer in Diplomacy, line 41"
set Qb=Qb+1
call DisplayTimedTextToPlayer(A4,0.,0.,10.0,jww(A4,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(A4,0.,0.,10.0,S4+" allied "+s4)
set Qb=Qb-1
else
set D4=dO[p4]
set Wb[Qb]="when calling noteToPlayer in Diplomacy, line 43"
set Qb=Qb+1
call DisplayTimedTextToPlayer(D4,0.,0.,10.0,jww(D4,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(D4,0.,0.,10.0,S4+" allied "+s4)
set Qb=Qb-1
endif
set p4=p4+1
endloop
elseif l4==1093677398 then
set H4=yO[c4]
set Wb[Qb]="when calling getAllianceState in Diplomacy, line 46"
set Qb=Qb+1
if kb[H4]==0 then
if H4==0 then
call g6("Nullpointer exception when calling PlayerStats.getAllianceState","when calling error in PlayerStats, line 38")
else
call g6("Called PlayerStats.getAllianceState on invalid object.","when calling error in PlayerStats, line 38")
endif
endif
set Wb[Qb]="when calling getAllianceState in PlayerStats, line 38"
set Qb=Qb+1
set J4=Gnw(H4,GetPlayerId(i4),"when reading array PlayerStats_alliance_states in PlayerStats, line 39")
set Qb=Qb-1-1
if J4==bj_ALLIANCE_NEUTRAL then
set Qb=Qb-1
set t4=null
set i4=null
set o4=null
set O4=null
set f4=null
set R4=null
set k4=null
set j4=null
set x4=null
set v4=null
set m4=null
set U4=null
set I4=null
set P4=null
set A4=null
set D4=null
set X4=null
set C4=null
set V4=null
set B4=null
set N4=null
set s2=null
set t2=null
set i2=null
set S2=null
set c2=null
return
endif
set K4=yO[c4]
set L4=bj_ALLIANCE_NEUTRAL
set Wb[Qb]="when calling setAlliance in Diplomacy, line 48"
set Qb=Qb+1
if kb[K4]==0 then
if K4==0 then
call g6("Nullpointer exception when calling PlayerStats.setAlliance","when calling error in PlayerStats, line 27")
else
call g6("Called PlayerStats.setAlliance on invalid object.","when calling error in PlayerStats, line 27")
endif
endif
call Htw(K4,i4,L4,"when calling setAlliance in PlayerStats, line 27")
set Qb=Qb-1
set q4=0
set a4=23
loop
exitwhen q4>a4
set X4=dO[q4]
set C4=CreateForce()
call ForceAddPlayer(C4,X4)
if dO[q4]==i4 then
set V4=dO[q4]
set Wb[Qb]="when calling noteToPlayer in Diplomacy, line 53"
set Qb=Qb+1
call DisplayTimedTextToPlayer(V4,0.,0.,10.0,jww(V4,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(V4,0.,0.,10.0,S4+" is now neutral towards you")
set Qb=Qb-1
elseif C4==o4 or C4==O4 then
set B4=dO[q4]
set Wb[Qb]="when calling noteToPlayer in Diplomacy, line 55"
set Qb=Qb+1
call DisplayTimedTextToPlayer(B4,0.,0.,10.0,jww(B4,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(B4,0.,0.,10.0,S4+" shows "+s4+" neutrality")
set Qb=Qb-1
else
set N4=dO[q4]
set Wb[Qb]="when calling noteToPlayer in Diplomacy, line 57"
set Qb=Qb+1
call DisplayTimedTextToPlayer(N4,0.,0.,10.0,jww(N4,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(N4,0.,0.,10.0,S4+" shows "+s4+" neutrality")
set Qb=Qb-1
endif
set q4=q4+1
endloop
elseif l4==1093677400 then
set M4=yO[c4]
set Wb[Qb]="when calling getAllianceState in Diplomacy, line 60"
set Qb=Qb+1
if kb[M4]==0 then
if M4==0 then
call g6("Nullpointer exception when calling PlayerStats.getAllianceState","when calling error in PlayerStats, line 38")
else
call g6("Called PlayerStats.getAllianceState on invalid object.","when calling error in PlayerStats, line 38")
endif
endif
set Wb[Qb]="when calling getAllianceState in PlayerStats, line 38"
set Qb=Qb+1
set w2=Gnw(M4,GetPlayerId(i4),"when reading array PlayerStats_alliance_states in PlayerStats, line 39")
set Qb=Qb-1-1
if w2==bj_ALLIANCE_NEUTRAL then
set Qb=Qb-1
set t4=null
set i4=null
set o4=null
set O4=null
set f4=null
set R4=null
set k4=null
set j4=null
set x4=null
set v4=null
set m4=null
set U4=null
set I4=null
set P4=null
set A4=null
set D4=null
set X4=null
set C4=null
set V4=null
set B4=null
set N4=null
set s2=null
set t2=null
set i2=null
set S2=null
set c2=null
return
endif
set u2=yO[c4]
set r2=bj_ALLIANCE_NEUTRAL
set Wb[Qb]="when calling setAlliance in Diplomacy, line 62"
set Qb=Qb+1
if kb[u2]==0 then
if u2==0 then
call g6("Nullpointer exception when calling PlayerStats.setAlliance","when calling error in PlayerStats, line 27")
else
call g6("Called PlayerStats.setAlliance on invalid object.","when calling error in PlayerStats, line 27")
endif
endif
call Htw(u2,i4,r2,"when calling setAlliance in PlayerStats, line 27")
set Qb=Qb-1
set n4=0
set d4=23
loop
exitwhen n4>d4
set s2=dO[n4]
set t2=CreateForce()
call ForceAddPlayer(t2,s2)
if dO[n4]==i4 then
set i2=dO[n4]
set Wb[Qb]="when calling noteToPlayer in Diplomacy, line 67"
set Qb=Qb+1
call DisplayTimedTextToPlayer(i2,0.,0.,10.0,jww(i2,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(i2,0.,0.,10.0,S4+" unallies you!")
set Qb=Qb-1
elseif t2==o4 or t2==O4 then
set S2=dO[n4]
set Wb[Qb]="when calling noteToPlayer in Diplomacy, line 69"
set Qb=Qb+1
call DisplayTimedTextToPlayer(S2,0.,0.,10.0,jww(S2,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(S2,0.,0.,10.0,S4+" unallied "+s4)
set Qb=Qb-1
else
set c2=dO[n4]
set Wb[Qb]="when calling noteToPlayer in Diplomacy, line 71"
set Qb=Qb+1
call DisplayTimedTextToPlayer(c2,0.,0.,10.0,jww(c2,"when calling getNoteStringForPlayer in Messages, line 82"))
call DisplayTimedTextToPlayer(c2,0.,0.,10.0,S4+" unallied "+s4)
set Qb=Qb-1
endif
set n4=n4+1
endloop
endif
set Qb=Qb-1
set t4=null
set i4=null
set o4=null
set O4=null
set f4=null
set R4=null
set k4=null
set j4=null
set x4=null
set v4=null
set m4=null
set U4=null
set I4=null
set P4=null
set A4=null
set D4=null
set X4=null
set C4=null
set V4=null
set B4=null
set N4=null
set s2=null
set t2=null
set i2=null
set S2=null
set c2=null
endfunction
function onw takes nothing returns nothing
set Qb=0
call o2("Diplomacy, line 116")
endfunction
function ox takes nothing returns boolean
if GetUnitTypeId(GetDyingUnit())!=1747989048 then
return false
endif
return true
endfunction
function p2 takes nothing returns boolean
local integer O2
local player l2
local boolean b2
local boolean y2
if GetOwningPlayer(GetSpellAbilityUnit())==GetOwningPlayer(GetSpellTargetUnit()) then
set y2=true
else
set l2=GetOwningPlayer(GetSpellTargetUnit())
if GetPlayerSlotState(l2)==PLAYER_SLOT_STATE_PLAYING then
set b2=GetPlayerController(l2)==MAP_CONTROL_USER
else
set b2=false
endif
set y2=not b2
endif
if y2 then
set l2=null
return false
endif
set O2=GetSpellAbilityId()
set l2=null
return O2==1093677396 or O2==1093677397 or O2==1093677398 or O2==1093677400 or O2==1093677399
endfunction
function p6 takes nothing returns boolean
set Kc=InitHashtable()
return true
endfunction
function p7 takes nothing returns boolean
set Oo=InitHashtable()
return true
endfunction
function pE takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989574,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989573,0)
endfunction
function pI takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990584,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990593,0)
endfunction
function yQ takes nothing returns boolean
if GetResearched()!=1378889812 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889812,true)!=1 then
return false
endif
return true
endfunction
function pQ takes nothing returns boolean
if not yQ() then
return false
endif
return true
endfunction
function yZ takes nothing returns boolean
if GetResearched()!=1378890034 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890034,true)!=1 then
return false
endif
return true
endfunction
function pZ takes nothing returns boolean
if not yZ() then
return false
endif
return true
endfunction
function paw takes nothing returns boolean
set Qb=0
set Wb[Qb]="TimerUtils, line 1"
set Qb=Qb+1
set sl=Acw("when calling new_Table in TimerUtils, line 12")
call CreateTimer()
call CreateTrigger()
set Qb=Qb-1
return true
endfunction
function klw takes string Rlw returns nothing
local unit Tlw
local integer Ylw
local player Glw
local integer glw
local integer hlw
local boolean Flw
set Wb[Qb]=Rlw
set Qb=Qb+1
set Tlw=GetEnteringUnit()
set Ylw=GetPlayerId(GetOwningPlayer(Tlw))
set Glw=dO[Ylw]
if GetPlayerSlotState(Glw)==PLAYER_SLOT_STATE_PLAYING then
set Flw=GetPlayerController(Glw)==MAP_CONTROL_USER
else
set Flw=false
endif
if Flw and(not IsUnitType(Tlw,UNIT_TYPE_STRUCTURE)) then
set glw=yO[Ylw]
set hlw=-GetUnitLevel(Tlw)
set Wb[Qb]="when calling changeUpkeep in Upkeep, line 12"
set Qb=Qb+1
if kb[glw]==0 then
if glw==0 then
call g6("Nullpointer exception when calling PlayerStats.changeUpkeep","when calling error in PlayerStats, line 23")
else
call g6("Called PlayerStats.changeUpkeep on invalid object.","when calling error in PlayerStats, line 23")
endif
endif
set nO[glw]=nO[glw]+hlw
set Qb=Qb-1
endif
set Qb=Qb-1
set Tlw=null
set Glw=null
endfunction
function pnw takes nothing returns nothing
set Qb=0
call klw("Upkeep, line 8")
endfunction
function q3 takes nothing returns boolean
set hc=200
return true
endfunction
function qK takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function eT takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989043 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function qT takes nothing returns boolean
if not eT() then
return false
endif
return true
endfunction
function qW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989556,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989570,0)
endfunction
function F2 takes real T2,real Y2,player G2,real g2 returns unit
local unit h2=CreateUnit(G2,2019849581,T2,Y2,g2*57.295779513)
call SetUnitX(h2,T2)
call SetUnitY(h2,Y2)
call UnitAddAbility(h2,1097691750)
call UnitRemoveAbility(h2,1097691750)
call UnitAddAbility(h2,1097625443)
set xf=h2
set h2=null
return xf
endfunction
function kyw takes integer gyw,unit hyw,string Fyw returns nothing
set Wb[Qb]=Fyw
set Qb=Qb+1
if Ml[gyw]==0 then
if gyw==0 then
call g6("Nullpointer exception when calling ArrayQueue.enqueue","when calling error in DummyRecycler, line 54")
else
call g6("Called ArrayQueue.enqueue on invalid object.","when calling error in DummyRecycler, line 54")
endif
endif
set Wb[Qb]="when calling enqueue in DummyRecycler, line 54"
set Qb=Qb+1
if Uc[gyw]<6 then
set Uc[gyw]=Uc[gyw]+1
set Zc[gyw]=ModuloInteger(Zc[gyw]+1,6)
else
call g6("Queue Overflow","when calling error in DummyRecycler, line 60")
endif
set Qb=Qb-1-1
endfunction
function x2 takes string k2 returns integer
local integer j2
set Wb[Qb]=k2
set Qb=Qb+1
set Wb[Qb]="when calling ArrayQueue in DummyRecycler, line 48"
set Qb=Qb+1
if Bl==0 then
if Nl<32768 then
set Nl=Nl+1
set j2=Nl
set Ml[j2]=626
else
call g6("Out of memory: Could not create ArrayQueue.","when calling error in DummyRecycler, line 48")
set j2=0
endif
else
set Bl=Bl-1
set j2=Vl[Bl]
set Ml[j2]=626
endif
set Qb=Qb-1
set Zc[j2]=0
set Uc[j2]=0
set Qb=Qb-1
return j2
endfunction
function R2 takes string q2 returns boolean
local integer a2
local integer n2
local integer d2
local integer f2
set Wb[Qb]=q2
set Qb=Qb+1
set Ec=360*1./8
call CreateTimer()
set a2=0
set n2=7
loop
exitwhen a2>n2
set Ic[a2]=x2("when calling new_ArrayQueue in DummyRecycler, line 139")
set d2=0
set f2=5
loop
exitwhen d2>f2
call kyw(Ic[a2],F2(Uo,Io,rS,a2*Ec*0.017453293),"when calling enqueue in DummyRecycler, line 141")
set d2=d2+1
endloop
set a2=a2+1
endloop
set Qb=Qb-1
return true
endfunction
function qaw takes nothing returns boolean
set Qb=0
return R2("DummyRecycler, line 1")
endfunction
function em takes nothing returns boolean
if GetResearched()!=1378889799 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889799,true)!=1 then
return false
endif
return true
endfunction
function qm takes nothing returns boolean
if not em() then
return false
endif
return true
endfunction
function qww takes nothing returns boolean
return true
endfunction
function r4 takes nothing returns boolean
local trigger N1=CreateTrigger()
local trigger M1=N1
local playerunitevent w4=EVENT_PLAYER_UNIT_SPELL_EFFECT
local integer u4=0
loop
call TriggerRegisterPlayerUnitEvent(M1,Player(u4),w4,null)
set u4=u4+1
exitwhen u4==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(N1,Condition(af))
call TriggerAddAction(N1,nf)
set N1=null
set M1=null
set w4=null
return true
endfunction
function rA takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651850,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651849,0)
endfunction
function uJ takes nothing returns boolean
if GetUnitTypeId(GetConstructedStructure())!=1747989059 then
return false
endif
return true
endfunction
function rJ takes nothing returns boolean
if not uJ() then
return false
endif
return true
endfunction
function rg takes nothing returns boolean
if GetSpellAbilityId()!=1093677624 then
return false
endif
if GetUnitTypeId(GetSpellAbilityUnit())!=1747989046 then
return false
endif
return true
endfunction
function rm takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989065,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989296,0)
endfunction
function iyw takes integer ryw,unit syw,string tyw returns nothing
set Wb[Qb]=tyw
set Qb=Qb+1
if Cl[ryw]==0 then
if ryw==0 then
call g6("Nullpointer exception when calling OnCastListener.fire","when calling error in ClosureEvents, line 56")
else
call g6("Called OnCastListener.fire on invalid object.","when calling error in ClosureEvents, line 56")
endif
endif
set Qb=Qb-1
endfunction
function UM takes string mM returns nothing
local unit QM
local integer WM
local integer EM
local integer ZM
set Wb[Qb]=mM
set Qb=Qb+1
set QM=GetTriggerUnit()
set WM=GetSpellAbilityId()
if Nyw(bc,GetHandleId(QM),"when calling has in ClosureEvents, line 188") then
set EM=opw(bc,GetHandleId(QM),"when calling get in ClosureEvents, line 189")
loop
exitwhen EM==0
if fc[EM]==-1 or fc[EM]==WM then
call iyw(EM,GetSpellAbilityUnit(),"when calling fire in ClosureEvents, line 192")
endif
set EM=nc[EM]
endloop
endif
if Nyw(lc,WM,"when calling has in ClosureEvents, line 194") then
set ZM=opw(lc,WM,"when calling get in ClosureEvents, line 195")
loop
exitwhen ZM==0
if Rc[ZM]==null or Rc[ZM]==QM then
call iyw(ZM,GetSpellAbilityUnit(),"when calling fire in ClosureEvents, line 198")
endif
set ZM=nc[ZM]
endloop
endif
set Qb=Qb-1
set QM=null
endfunction
function rnw takes nothing returns nothing
set Qb=0
set Wb[Qb]="ClosureEvents, line 306"
set Qb=Qb+1
call UM("when calling onSpellEffect in ClosureEvents, line 306")
set Qb=Qb-1
endfunction
function sG takes nothing returns nothing
local player NY=GetOwningPlayer(GetAttacker())
local player MY=GetOwningPlayer(GetAttacker())
local player wG
local player uG
local unit rG
set r[GetPlayerId(NY)+1]=r[GetPlayerId(MY)+1]+1
set wG=GetOwningPlayer(GetTriggerUnit())
set uG=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(wG)+1]=r[GetPlayerId(uG)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set rG=GetTriggerUnit()
call SetUnitState(rG,UNIT_STATE_LIFE,GetUnitState(rG,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set NY=null
set MY=null
set wG=null
set uG=null
set rG=null
endfunction
function sJ takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677896)
endfunction
function rP takes nothing returns boolean
if GetResearched()!=1378890040 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890040,true)!=1 then
return false
endif
return true
endfunction
function sP takes nothing returns boolean
if not rP() then
return false
endif
return true
endfunction
function snw takes nothing returns nothing
set Qb=0
set Wb[Qb]="ClosureForGroups, line 12"
set Qb=Qb+1
call yyw(Yc[Gc-1],GetFilterUnit(),"when calling callback in ClosureForGroups, line 12")
set Qb=Qb-1
endfunction
function rv takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function sv takes nothing returns boolean
if not rv() then
return false
endif
return true
endfunction
function sx takes nothing returns nothing
local player Kj=GetOwningPlayer(GetKillingUnit())
local playerstate Lj=PLAYER_STATE_RESOURCE_GOLD
local playerstate Xj
local playerstate Cj
local player Vj
local force Bj
local location Nj
local real Mj
local real wx
local player ux
local force rx
if Lj==PLAYER_STATE_RESOURCE_GOLD then
set Xj=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(Kj,Xj,GetPlayerState(Kj,Xj)+500)
elseif Lj==PLAYER_STATE_RESOURCE_LUMBER then
set Cj=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(Kj,Cj,GetPlayerState(Kj,Cj)+500)
endif
call SetPlayerState(Kj,Lj,GetPlayerState(Kj,Lj)+500)
set Vj=GetOwningPlayer(GetKillingUnit())
set Bj=CreateForce()
call ForceAddPlayer(Bj,Vj)
if IsPlayerInForce(GetLocalPlayer(),Bj) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_083")
endif
set y=GetUnitLoc(GetDyingUnit())
set ux=GetOwningPlayer(GetDyingUnit())
set rx=CreateForce()
call ForceAddPlayer(rx,ux)
set Nj=y
set Mj=GetLocationX(Nj)
set wx=GetLocationY(Nj)
if IsPlayerInForce(GetLocalPlayer(),rx) then
call PingMinimap(Mj,wx,2.00)
endif
call RemoveLocation(y)
set Kj=null
set Lj=null
set Xj=null
set Cj=null
set Vj=null
set Bj=null
set Nj=null
set ux=null
set rx=null
endfunction
function sF takes nothing returns boolean
if GetUnitTypeId(GetSpellAbilityUnit())!=1747988791 then
return false
endif
if GetUnitTypeId(GetSpellTargetUnit())!=1747988787 then
return false
endif
return true
endfunction
function tF takes nothing returns boolean
if not sF() then
return false
endif
return true
endfunction
function sH takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747990356 then
return false
endif
return true
endfunction
function tH takes nothing returns boolean
if not sH() then
return false
endif
return true
endfunction
function tP takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990595,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990608,0)
endfunction
function sU takes nothing returns boolean
if GetResearched()!=1378890036 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890036,true)!=1 then
return false
endif
return true
endfunction
function tU takes nothing returns boolean
if not sU() then
return false
endif
return true
endfunction
function sg takes nothing returns boolean
if IsUnitType(GetEnumUnit(),UNIT_TYPE_STRUCTURE)!=false then
return false
endif
return true
endfunction
function tg takes nothing returns nothing
if sg() then
call SetUnitPositionLoc(GetEnumUnit(),S)
endif
endfunction
function sh takes nothing returns boolean
local unitstate rh=UNIT_STATE_MANA
if GetUnitState(GetEnumUnit(),rh)>0.00 then
set rh=null
return false
endif
set rh=null
return true
endfunction
function th takes nothing returns nothing
if sh() then
call KillUnit(GetEnumUnit())
endif
endfunction
function tv takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988567,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988564,0)
endfunction
function wA takes nothing returns boolean
if GetResearched()!=1378890041 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890041,true)!=1 then
return false
endif
return true
endfunction
function uA takes nothing returns boolean
if not wA() then
return false
endif
return true
endfunction
function uK takes nothing returns nothing
call UnitAddAbility(GetTriggerUnit(),1093677634)
endfunction
function uW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990099,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747990096,0)
endfunction
function wm takes nothing returns boolean
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889797,true)!=1 then
return false
endif
return true
endfunction
function um takes nothing returns boolean
if not wm() then
return false
endif
return true
endfunction
function unw takes nothing returns nothing
set Qb=0
set Wb[Qb]="ClosureEvents, line 288"
set Qb=Qb+1
call vM("when calling generalEventCallback in ClosureEvents, line 288")
set Qb=Qb-1
endfunction
function v6 takes nothing returns boolean
set io=InitHashtable()
set So=InitHashtable()
return true
endfunction
function xA takes nothing returns boolean
if GetUnitTypeId(GetConstructedStructure())==1747988545 then
return true
endif
if GetUnitTypeId(GetConstructedStructure())==1747989577 then
return true
endif
if GetUnitTypeId(GetConstructedStructure())==1747990320 then
return true
endif
if GetUnitTypeId(GetConstructedStructure())==1747989845 then
return true
endif
return false
endfunction
function vA takes nothing returns boolean
if p[GetPlayerId(GetOwningPlayer(GetConstructedStructure()))+1]!=false then
return false
endif
if not xA() then
return false
endif
return true
endfunction
function xJ takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989591 then
return false
endif
return true
endfunction
function vJ takes nothing returns boolean
if not xJ() then
return false
endif
return true
endfunction
function xQ takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function vQ takes nothing returns boolean
if not xQ() then
return false
endif
return true
endfunction
function vY takes nothing returns nothing
local player hY=GetOwningPlayer(GetAttacker())
local player FY=GetOwningPlayer(GetAttacker())
local player kY
local player jY
local unit xY
set r[GetPlayerId(hY)+1]=r[GetPlayerId(FY)+1]+1
set kY=GetOwningPlayer(GetTriggerUnit())
set jY=GetOwningPlayer(GetTriggerUnit())
set r[GetPlayerId(kY)+1]=r[GetPlayerId(jY)+1]-1
call ReplaceUnitBJ(GetTriggerUnit(),GetUnitTypeId(GetTriggerUnit()),bj_UNIT_STATE_METHOD_DEFAULTS)
call SetUnitOwner(bj_lastReplacedUnit,GetOwningPlayer(GetAttacker()),true)
set xY=GetTriggerUnit()
call SetUnitState(xY,UNIT_STATE_LIFE,GetUnitState(xY,UNIT_STATE_MAX_LIFE)*RMaxBJ(0.,100.)*0.01)
set hY=null
set FY=null
set kY=null
set jY=null
set xY=null
endfunction
function JK takes string PK returns boolean
local playerunitevent AK
local integer DK
local integer HK
set Wb[Qb]=PK
set Qb=Qb+1
set AK=EVENT_PLAYER_UNIT_ATTACKED
set Wb[Qb]="when calling alloc_Closure in CastleCapture, line 8"
set Qb=Qb+1
if Gl==0 then
if gl<32768 then
set gl=gl+1
set DK=gl
set hl[DK]=662
else
call g6("Out of memory: Could not create Closure.","when calling error in CastleCapture, line 8")
set DK=0
endif
else
set Gl=Gl-1
set DK=Yl[Gl]
set hl[DK]=662
endif
set Qb=Qb-1
set ec[DK]=0
set qc[DK]=0
set ac[DK]=0
set Wb[Qb]="when calling add in CastleCapture, line 8"
set Qb=Qb+1
set Wb[Qb]="when calling toIntId in ClosureEvents, line 111"
set Qb=Qb+1
set HK=oc[GetHandleId(AK)]
if HK==0 then
set HK=tM(AK,"when calling registerEventId in ClosureEvents, line 228")
endif
set Qb=Qb-1
set ec[DK]=HK
if yc[ec[DK]]!=0 then
set ac[yc[ec[DK]]]=DK
set qc[DK]=yc[ec[DK]]
endif
set yc[ec[DK]]=DK
set Qb=Qb-1-1
set AK=null
return true
endfunction
function vaw takes nothing returns boolean
set Qb=0
return JK("CastleCapture, line 1")
endfunction
function vm takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989072,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989073,0)
endfunction
function vtw takes nothing returns nothing
local unit xtw=GetTriggerUnit()
if GetUnitAbilityLevel(xtw,1095577649)==0 then
set lO[bO]=xtw
set bO=bO+1
call TriggerExecute(oO)
set bO=bO-1
endif
set xtw=null
endfunction
function wD takes nothing returns nothing
local integer LA=1
local integer XA=1752461175
local player CA=GetOwningPlayer(GetTriggerUnit())
local rect MA=bj_mapInitialPlayableArea
local location NA=Location(GetRectCenterX(MA),GetRectCenterY(MA))
local location VA=Location(GetLocationX(NA)+100000000.00,GetLocationY(NA)+100000000.00)
local real BA=bj_UNIT_FACING
call GroupClear(bj_lastCreatedGroup)
loop
set LA=LA-1
exitwhen LA<0
call CreateUnitAtLocSaveLast(CA,XA,VA,BA)
call GroupAddUnit(bj_lastCreatedGroup,bj_lastCreatedUnit)
endloop
call ShowUnit(bj_lastCreatedUnit,false)
set CA=null
set VA=null
set NA=null
set MA=null
endfunction
function MJ takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989592 then
return false
endif
return true
endfunction
function wK takes nothing returns boolean
if not MJ() then
return false
endif
return true
endfunction
function wQ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989080,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747988818,0)
endfunction
function MQ takes nothing returns boolean
if GetResearched()!=1378889780 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889780,true)!=1 then
return false
endif
return true
endfunction
function wW takes nothing returns boolean
if not MQ() then
return false
endif
return true
endfunction
function wX takes nothing returns boolean
local boolean NL
local boolean ML
if GetUnitTypeId(GetSpellAbilityUnit())==1747988553 then
set NL=GetUnitTypeId(GetSpellTargetUnit())==1747989297
else
set NL=false
endif
if NL then
set ML=GetPlayerId(GetOwningPlayer(GetSpellTargetUnit()))==PLAYER_NEUTRAL_AGGRESSIVE
else
set ML=false
endif
return ML
endfunction
function MT takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989316 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function wY takes nothing returns boolean
if not MT() then
return false
endif
return true
endfunction
function wZ takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651846,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1848651847,0)
endfunction
function wj takes nothing returns nothing
local player Dk=GetOwningPlayer(GetKillingUnit())
local playerstate Hk=PLAYER_STATE_RESOURCE_GOLD
local playerstate Jk
local playerstate Kk
local player Lk
local force Xk
local location Ck
local real Vk
local real Bk
local player Nk
local force Mk
if Hk==PLAYER_STATE_RESOURCE_GOLD then
set Jk=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(Dk,Jk,GetPlayerState(Dk,Jk)+250)
elseif Hk==PLAYER_STATE_RESOURCE_LUMBER then
set Kk=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(Dk,Kk,GetPlayerState(Dk,Kk)+250)
endif
call SetPlayerState(Dk,Hk,GetPlayerState(Dk,Hk)+250)
set Lk=GetOwningPlayer(GetKillingUnit())
set Xk=CreateForce()
call ForceAddPlayer(Xk,Lk)
if IsPlayerInForce(GetLocalPlayer(),Xk) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_092")
endif
set y=GetUnitLoc(GetDyingUnit())
set Nk=GetOwningPlayer(GetDyingUnit())
set Mk=CreateForce()
call ForceAddPlayer(Mk,Nk)
set Ck=y
set Vk=GetLocationX(Ck)
set Bk=GetLocationY(Ck)
if IsPlayerInForce(GetLocalPlayer(),Mk) then
call PingMinimap(Vk,Bk,2.00)
endif
call RemoveLocation(y)
set Dk=null
set Hk=null
set Jk=null
set Kk=null
set Lk=null
set Xk=null
set Ck=null
set Nk=null
set Mk=null
endfunction
function wk takes nothing returns nothing
local player DF=GetOwningPlayer(GetKillingUnit())
local playerstate HF=PLAYER_STATE_RESOURCE_LUMBER
local playerstate JF
local playerstate KF
local player LF
local force XF
local location CF
local real VF
local real BF
local player NF
local force MF
if HF==PLAYER_STATE_RESOURCE_GOLD then
set JF=PLAYER_STATE_GOLD_GATHERED
call SetPlayerState(DF,JF,GetPlayerState(DF,JF)+125)
elseif HF==PLAYER_STATE_RESOURCE_LUMBER then
set KF=PLAYER_STATE_LUMBER_GATHERED
call SetPlayerState(DF,KF,GetPlayerState(DF,KF)+125)
endif
call SetPlayerState(DF,HF,GetPlayerState(DF,HF)+125)
set LF=GetOwningPlayer(GetKillingUnit())
set XF=CreateForce()
call ForceAddPlayer(XF,LF)
if IsPlayerInForce(GetLocalPlayer(),XF) then
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,"TRIGSTR_089")
endif
set y=GetUnitLoc(GetDyingUnit())
set NF=GetOwningPlayer(GetDyingUnit())
set MF=CreateForce()
call ForceAddPlayer(MF,NF)
set CF=y
set VF=GetLocationX(CF)
set BF=GetLocationY(CF)
if IsPlayerInForce(GetLocalPlayer(),MF) then
call PingMinimap(VF,BF,2.00)
endif
call RemoveLocation(y)
set DF=null
set HF=null
set JF=null
set KF=null
set LF=null
set XF=null
set CF=null
set NF=null
set MF=null
endfunction
function wnw takes nothing returns nothing
set Qb=0
set Wb[Qb]="ClosureEvents, line 287"
set Qb=Qb+1
call vM("when calling generalEventCallback in ClosureEvents, line 287")
set Qb=Qb-1
endfunction
function x6 takes nothing returns nothing
call GroupAddUnit(so,GetEnumUnit())
endfunction
function xW takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989557,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989559,0)
endfunction
function lC takes string MX,string wC,real uC,real rC,real sC,integer tC,real iC,real SC,boolean cC,string oC returns integer
local integer OC
set Wb[Qb]=oC
set Qb=Qb+1
set Wb[Qb]="when calling CityModifierClass in CityModifiers, line 39"
set Qb=Qb+1
if kl==0 then
if jl<32768 then
set jl=jl+1
set OC=jl
else
call g6("Out of memory: Could not create CityModifierClass.","when calling error in CityModifiers, line 28")
set OC=0
endif
else
set kl=kl-1
set OC=Fl[kl]
endif
set Qb=Qb-1
set qS[OC]=uC
set aS[OC]=SC
set nS[OC]=cC
set dS[OC]=rC
set fS[OC]=tC
set RS[OC]=iC
set TS[OC]=sC
set YS[OC]=MX
set GS[OC]=wC
set Qb=Qb-1
return OC
endfunction
function NX takes string ZX returns boolean
local integer UX
local integer IX
local integer PX
local integer AX
local integer DX
local integer HX
local integer JX
local integer KX
local integer LX
local integer XX
local integer CX
local integer VX
local integer BX
set Wb[Qb]=ZX
set Qb=Qb+1
set IX=R2I(0.5)
set PX=R2I(1)
set Wb[Qb]="when calling asList in CityModifiers, line 9"
set Qb=Qb+1
set AX=i9("when calling new_LinkedList in LinkedList, line 391")
call Lpw(AX,IX,"when calling add in LinkedList, line 393")
call Lpw(AX,PX,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set tS[0]=AX
set DX=R2I(1)
set HX=R2I(3)
set Wb[Qb]="when calling asList in CityModifiers, line 10"
set Qb=Qb+1
set JX=i9("when calling new_LinkedList in LinkedList, line 391")
call Lpw(JX,DX,"when calling add in LinkedList, line 393")
call Lpw(JX,HX,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set tS[1]=JX
set KX=R2I(3)
set LX=R2I(10)
set Wb[Qb]="when calling asList in CityModifiers, line 11"
set Qb=Qb+1
set XX=i9("when calling new_LinkedList in LinkedList, line 391")
call Lpw(XX,KX,"when calling add in LinkedList, line 393")
call Lpw(XX,LX,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set tS[2]=XX
set CX=R2I(10)
set VX=R2I(20)
set Wb[Qb]="when calling asList in CityModifiers, line 12"
set Qb=Qb+1
set BX=i9("when calling new_LinkedList in LinkedList, line 391")
call Lpw(BX,CX,"when calling add in LinkedList, line 393")
call Lpw(BX,VX,"when calling add in LinkedList, line 393")
set Qb=Qb-1
set tS[3]=BX
set iS=lC("|cffff0000Just conquered|r","|cffc00000-PO -pop|r",240,1.0,0.0,1,-1.0,-30.0,false,"when calling new_CityModifierClass in CityModifiers, line 70")
set SS=lC("|cfffffb00Just revolted|r","|cff00af00+PO|r|cffc00000 -pop|r",120.0,1.0,0.0,0,0.,30.0,false,"when calling new_CityModifierClass in CityModifiers, line 78")
set cS=lC("|cff33ff00Population Boom|r","|cff33ff00++pop|r",120.0,0.01,0.,0,0.,0.,true,"when calling new_CityModifierClass in CityModifiers, line 86")
set oS=lC("|cffff0000Plague outburst|r","|cffff0000--pop|r",240,0.03,0.,2,-1.,0.,true,"when calling new_CityModifierClass in CityModifiers, line 94")
set OS=lC("|cffaf0000Big Fire|r","|cffc00000-pop|r",30,0.01,0.,2,-1.,0.,true,"when calling new_CityModifierClass in CityModifiers, line 102")
set lS=lC("|cff15ff00More trade estabilished|r","|cff00af00+tax +pop|r",240,0.01,0.15,0,1.,0.,true,"when calling new_CityModifierClass in CityModifiers, line 110")
set bS=lC("|cffff0000Massacred population|r","|cff00af00+PO |r|cffff0000--pop|r",30,0.05,0.,3,-1.,10.,true,"when calling new_CityModifierClass in CityModifiers, line 118")
set yS=lC("|cff00ff00Prospering|r","|cff00af00+PO +pop +tax|r",240,0.01,0.10,1,1.,20.0,true,"when calling new_CityModifierClass in CityModifiers, line 126")
set pS=lC("|cffff0000Sieged|r","|cffc00000-PO -pop|r",5,1.0,0.,0,-1.,-10.0,true,"when calling new_CityModifierClass in CityModifiers, line 134")
set eS=u7("when calling new_HashMap in CityModifiers, line 144")
set UX=eS
call spw(UX,0,iS,"when calling put in CityModifiers, line 151")
call spw(UX,1,SS,"when calling put in CityModifiers, line 152")
call spw(UX,2,cS,"when calling put in CityModifiers, line 153")
call spw(UX,3,oS,"when calling put in CityModifiers, line 154")
call spw(UX,4,OS,"when calling put in CityModifiers, line 155")
call spw(UX,5,lS,"when calling put in CityModifiers, line 156")
call spw(UX,6,bS,"when calling put in CityModifiers, line 157")
call spw(UX,7,yS,"when calling put in CityModifiers, line 158")
call spw(UX,8,pS,"when calling put in CityModifiers, line 159")
set Qb=Qb-1
return true
endfunction
function xaw takes nothing returns boolean
set Qb=0
return NX("CityModifiers, line 1")
endfunction
function jm takes nothing returns boolean
if GetResearched()!=1378889801 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889801,true)!=1 then
return false
endif
return true
endfunction
function xm takes nothing returns boolean
if not jm() then
return false
endif
return true
endfunction
function bE takes nothing returns boolean
if GetResearched()!=1378889810 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378889810,true)!=2 then
return false
endif
return true
endfunction
function yE takes nothing returns boolean
if not bE() then
return false
endif
return true
endfunction
function yG takes nothing returns nothing
local unit lG=GetSpellTargetUnit()
local unitstate bG=UNIT_STATE_MANA
call SetUnitState(lG,UNIT_STATE_MANA,RMaxBJ(0.,GetUnitState(GetSpellTargetUnit(),bG)-600.00))
set lG=null
set bG=null
endfunction
function yH takes nothing returns nothing
call UnitAddAbility(GetConstructedStructure(),1093677896)
endfunction
function bI takes nothing returns boolean
if GetResearched()!=1378890049 then
return false
endif
if GetPlayerTechCount(GetOwningPlayer(GetResearchingUnit()),1378890049,true)!=1 then
return false
endif
return true
endfunction
function yI takes nothing returns boolean
if not bI() then
return false
endif
return true
endfunction
function yT takes nothing returns nothing
call CreateQuestBJ(bj_QUESTTYPE_OPT_DISCOVERED,"TRIGSTR_097","TRIGSTR_098","ReplaceableTextures\\CommandButtons\\BTNSteelMelee.blp")
call CreateQuestBJ(bj_QUESTTYPE_OPT_DISCOVERED,"TRIGSTR_103","TRIGSTR_104","ReplaceableTextures\\WorldEditUI\\Doodad-Cinematic.blp")
call CreateQuestBJ(bj_QUESTTYPE_OPT_DISCOVERED,"TRIGSTR_2667","TRIGSTR_2668","ReplaceableTextures\\WorldEditUI\\Editor-MultipleUnits.blp")
endfunction
function yU takes nothing returns nothing
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989835,-1)
call SetPlayerTechMaxAllowed(GetOwningPlayer(GetResearchingUnit()),1747989836,0)
endfunction
function bY takes nothing returns boolean
if GetUnitTypeId(GetTriggerUnit())!=1747989042 then
return false
endif
if GetUnitStatePercent(GetTriggerUnit(),UNIT_STATE_LIFE,UNIT_STATE_MAX_LIFE)>80.00 then
return false
endif
return true
endfunction
function yY takes nothing returns boolean
if not bY() then
return false
endif
return true
endfunction
function yaw takes nothing returns boolean
set Qb=0
set Wb[Qb]="RegisterEvents, line 1"
set Qb=Qb+1
set mO=u7("when calling new_HashMap in RegisterEvents, line 55")
call JSw(EVENT_PLAYER_UNIT_SPELL_EFFECT,null,jf,null)
set Qb=Qb-1
return true
endfunction
function bh takes nothing returns boolean
local unitstate lh=UNIT_STATE_MANA
if GetUnitState(GetEnumUnit(),lh)>0.00 then
set lh=null
return false
endif
set lh=null
return true
endfunction
function yh takes nothing returns nothing
if bh() then
call KillUnit(GetEnumUnit())
endif
endfunction
function GOw takes integer TOw,string YOw returns nothing
set Wb[Qb]=YOw
set Qb=Qb+1
set ol=Ol[TOw]
call TriggerEvaluate(Sl)
call SetUnitUserData(Ol[TOw],0)
set Wb[Qb]="when calling UnitIndex in UnitIndexer, line 172"
set Qb=Qb+1
if mb[TOw]==0 then
call g6("Double free: object of type UnitIndex","when calling error in UnitIndexer, line 157")
else
set jb[xb]=TOw
set xb=xb+1
set mb[TOw]=0
endif
set Qb=Qb-1-1
endfunction
function pOw takes unit lOw,string bOw returns boolean
local integer yOw
set Wb[Qb]=bOw
set Qb=Qb+1
if GetUnitUserData(lOw)==0 then
set Qb=Qb-1
return false
else
set Wb[Qb]="when calling toUnitIndex in UnitIndexer, line 154"
set Qb=Qb+1
set yOw=GetUnitUserData(lOw)
if yOw==0 then
set yOw=ROw(lOw,"when calling new_UnitIndex in UnitIndexer, line 125")
endif
set Qb=Qb-1
set Wb[Qb]="when calling UnitIndex in UnitIndexer, line 154"
set Qb=Qb+1
if mb[yOw]==0 then
if yOw==0 then
call g6("Nullpointer exception when calling UnitIndex.UnitIndex","when calling error in UnitIndexer, line 157")
else
call g6("Called UnitIndex.UnitIndex on invalid object.","when calling error in UnitIndexer, line 157")
endif
endif
call GOw(yOw,"when calling destroyUnitIndex in UnitIndexer, line 157")
set Qb=Qb-1-1
return true
endif
endfunction
function ynw takes nothing returns nothing
set Qb=0
set Wb[Qb]="UnitIndexer, line 180"
set Qb=Qb+1
call pOw(lO[bO-1],"when calling deindex in UnitIndexer, line 180")
set Qb=Qb-1
endfunction
function Zf takes nothing returns nothing
set w=null
set u=null
set s=null
set t=null
set i=null
set S=null
set c=null
set o=null
set O=null
set l=null
set b=null
set y=null
set q=null
set a=null
set n=null
set d=null
set f=null
set R=null
set T=null
set Y=null
set G=null
set g=null
set h=null
set F=null
set k=null
set j=null
set x=null
set v=null
set m=null
set Q=null
set W=null
set E=null
set Z=null
set U=null
set I=null
set P=null
set A=null
set D=null
set H=null
set J=null
set K=null
set L=null
set X=null
set C=null
set V=null
set B=null
set N=null
set M=null
set ww=null
set uw=null
set rw=null
set sw=null
set tw=null
set iw=null
set Sw=null
set cw=null
set ow=null
set Ow=null
set lw=null
set bw=null
set yw=null
set pw=null
set ew=null
set qw=null
set aw=null
set nw=null
set dw=null
set fw=null
set Rw=null
set Tw=null
set Yw=null
set Gw=null
set gw=null
set hw=null
set Fw=null
set kw=null
set jw=null
set xw=null
set vw=null
set mw=null
set Qw=null
set Ww=null
set Ew=null
set Zw=null
set Uw=null
set Iw=null
set Pw=null
set Aw=null
set Dw=null
set Hw=null
set Jw=null
set Kw=null
set Lw=null
set Xw=null
set Cw=null
set Vw=null
set Bw=null
set Nw=null
set Mw=null
set wu=null
set uu=null
set ru=null
set su=null
set tu=null
set iu=null
set Su=null
set cu=null
set ou=null
set Ou=null
set lu=null
set bu=null
set yu=null
set pu=null
set eu=null
set qu=null
set au=null
set nu=null
set du=null
set fu=null
set Ru=null
set Tu=null
set Yu=null
set Gu=null
set gu=null
set hu=null
set Fu=null
set ku=null
set ju=null
set xu=null
set vu=null
set mu=null
set Qu=null
set Wu=null
set Eu=null
set Zu=null
set Uu=null
set Iu=null
set Pu=null
set Au=null
set Du=null
set Hu=null
set Ju=null
set Ku=null
set Lu=null
set Xu=null
set Cu=null
set Vu=null
set Bu=null
set Nu=null
set Mu=null
set wr=null
set ur=null
set rr=null
set sr=null
set tr=null
set ir=null
set Sr=null
set cr=null
set lr=null
set br=null
set yr=null
set pr=null
set er=null
set qr=null
set ar=null
set nr=null
set dr=null
set fr=null
set Rr=null
set Tr=null
set Yr=null
set Gr=null
set gr=null
set hr=null
set Fr=null
set kr=null
set jr=null
set xr=null
set vr=null
set mr=null
set Qr=null
set Wr=null
set Er=null
set Zr=null
set Ur=null
set Ir=null
set Pr=null
set Ar=null
set Dr=null
set Hr=null
set Jr=null
set Kr=null
set Lr=null
set Xr=null
set Cr=null
set Vr=null
set Br=null
set Nr=null
set Mr=null
set ws=null
set us=null
set rs=null
set ss=null
set ts=null
set is=null
set Ss=null
set cs=null
set os=null
set Os=null
set ls=null
set bs=null
set ys=null
set ps=null
set es=null
set qs=null
set as=null
set ns=null
set ds=null
set fs=null
set Rs=null
set Ts=null
set Ys=null
set Gs=null
set gs=null
set hs=null
set Fs=null
set ks=null
set js=null
set xs=null
set vs=null
set ms=null
set Qs=null
set Ws=null
set Es=null
set Zs=null
set Us=null
set Is=null
set Ps=null
set As=null
set Ds=null
set Hs=null
set Js=null
set Ks=null
set Ls=null
set Xs=null
set Cs=null
set Vs=null
set Bs=null
set Ns=null
set Ms=null
set wt=null
set ut=null
set rt=null
set st=null
set tt=null
set St=null
set ct=null
set ot=null
set Ot=null
set lt=null
set bt=null
set yt=null
set pt=null
set et=null
set qt=null
set at=null
set nt=null
set dt=null
set ft=null
set Rt=null
set Tt=null
set Yt=null
set Gt=null
set gt=null
set ht=null
set Ft=null
set kt=null
set jt=null
set xt=null
set vt=null
set mt=null
set Qt=null
set Wt=null
set Et=null
set Zt=null
set Ut=null
set It=null
set Pt=null
set At=null
set Dt=null
set Ht=null
set Jt=null
set Kt=null
set Lt=null
set Xt=null
set Ct=null
set Vt=null
set Bt=null
set Nt=null
set Mt=null
set wi=null
set ui=null
set ri=null
set si=null
set ti=null
set ii=null
set Si=null
set ci=null
set oi=null
set Oi=null
set li=null
set bi=null
set yi=null
set pi=null
set ei=null
set qi=null
set ai=null
set ni=null
set di=null
set fi=null
set Ri=null
set Ti=null
set Yi=null
set Gi=null
set gi=null
set hi=null
set Fi=null
set ki=null
set ji=null
set xi=null
set vi=null
set mi=null
set Qi=null
set Wi=null
set Ei=null
set Zi=null
set Ui=null
set Ii=null
set Pi=null
set Ai=null
set Di=null
set Hi=null
set Ji=null
set Ki=null
set Li=null
set Xi=null
set Ci=null
set Vi=null
set Bi=null
set Ni=null
set Mi=null
set wS=null
set ly=function iT
set by=function OT
set yy=function yT
set py=function qT
set ey=function TT
set qy=function kT
set ay=function WT
set ny=function AT
set dy=function XT
set fy=function wY
set Ry=function SY
set Ty=function yY
set Yy=function dY
set Gy=function gY
set gy=function vY
set hy=function UY
set Fy=function JY
set ky=function BY
set jy=function sG
set xy=function OG
set vy=function yG
set my=function nG
set Qy=function dG
set Wy=function mG
set Ey=function PG
set Zy=function UG
set Uy=function BG
set Iy=function tg
set Py=function rg
set Ay=function eg
set Dy=function Tg
set Hy=function fg
set Jy=function mg
set Ky=function Pg
set Ly=function Ug
set Xy=function Bg
set Cy=function th
set Vy=function oh
set By=function yh
set Ny=function ah
set My=function fh
set wp=function mh
set up=function Ih
set rp=function Nh
set sp=function tF
set tp=function aF
set ip=function YF
set Sp=function EF
set cp=function AF
set op=function wk
set Op=function ik
set lp=function nk
set bp=function Yk
set yp=function Ek
set pp=function Ak
set ep=function wj
set qp=function Sj
set ap=function dj
set np=function gj
set dp=function Uj
set fp=function Jj
set Rp=function sx
set Tp=function ox
set Yp=function Rx
set Gp=function Fx
set gp=function kx
set hp=function Wx
set Fp=function Ex
set kp=function Dx
set jp=function Hx
set xp=function Vx
set vp=function Bx
set mp=function sv
set Qp=function tv
set Wp=function lv
set Ep=function bv
set Zp=function nv
set Up=function dv
set Ip=function gv
set Pp=function hv
set Ap=function mv
set Dp=function Qv
set Hp=function Pv
set Jp=function Av
set Kp=function Xv
set Lp=function Cv
set Xp=function um
set Cp=function rm
set Vp=function om
set Bp=function Om
set Np=function qm
set Mp=function am
set we=function Ym
set ue=function Gm
set re=function xm
set se=function vm
set te=function Um
set ie=function Im
set Se=function Km
set ce=function Lm
set oe=function Mm
set Oe=function wQ
set le=function SQ
set be=function cQ
set ye=function pQ
set pe=function eQ
set ee=function RQ
set qe=function TQ
set ae=function FQ
set ne=function kQ
set de=function vQ
set fe=function mQ
set Re=function IQ
set Te=function PQ
set Ye=function LQ
set Ge=function XQ
set ge=function wW
set he=function uW
set Fe=function cW
set ke=function oW
set je=function eW
set xe=function qW
set ve=function TW
set me=function YW
set Qe=function jW
set We=function xW
set Ee=function ZW
set Ze=function UW
set Ue=function JW
set Ie=function KW
set Pe=function NW
set Ae=function MW
set De=function iE
set He=function SE
set Je=function yE
set Ke=function pE
set Le=function fE
set Xe=function RE
set Ce=function FE
set Ve=function kE
set Be=function QE
set Ne=function WE
set Me=function UE
set wq=function IE
set uq=function KE
set rq=function LE
set sq=function ME
set tq=function wZ
set iq=function SZ
set Sq=function cZ
set cq=function pZ
set oq=function eZ
set Oq=function RZ
set lq=function TZ
set bq=function kZ
set yq=function jZ
set pq=function EZ
set eq=function ZZ
set qq=function HZ
set aq=function JZ
set nq=function BZ
set dq=function NZ
set fq=function tU
set Rq=function iU
set Tq=function bU
set Yq=function yU
set Gq=function dU
set gq=function fU
set hq=function hU
set Fq=function FU
set kq=function mU
set jq=function QU
set xq=function ZU
set vq=function UU
set mq=function JU
set Qq=function KU
set Wq=function NU
set Eq=function MU
set Zq=function iI
set Uq=function SI
set Iq=function yI
set Pq=function pI
set Aq=function fI
set Dq=function RI
set Hq=function FI
set Jq=function kI
set Kq=function WI
set Lq=function EI
set Xq=function DI
set Cq=function HI
set Vq=function VI
set Bq=function BI
set Nq=function sP
set Mq=function tP
set wa=function lP
set ua=function bP
set ra=function nP
set sa=function dP
set ta=function gP
set ia=function hP
set Sa=function mP
set ca=function QP
set oa=function PP
set Oa=function AP
set la=function XP
set ba=function CP
set ya=function uA
set pa=function rA
set ea=function cA
set qa=function oA
set aa=function lA
set na=function aA
set da=function gA
set fa=function vA
set Ra=function PA
set Ta=function KA
set Ya=function wD
set Ga=function SD
set ga=function eD
set ha=function RD
set Fa=function jD
set ka=function ED
set ja=function ZD
set xa=function HD
set va=function JD
set ma=function BD
set Qa=function ND
set Wa=function tH
set Ea=function iH
set Za=function bH
set Ua=function yH
set Ia=function dH
set Pa=function fH
set Aa=function hH
set Da=function FH
set Ha=function QH
set Ja=function WH
set Ka=function AH
set La=function DH
set Xa=function CH
set Ca=function VH
set Va=function rJ
set Ba=function sJ
set Na=function OJ
set Ma=function lJ
set wn=function aJ
set un=function nJ
set rn=function GJ
set sn=function gJ
set tn=function vJ
set Sn=function mJ
set cn=function IJ
set on=function PJ
set On=function LJ
set ln=function XJ
set bn=function wK
set yn=function uK
set pn=function cK
set en=function oK
set qn=function eK
set an=function qK
set nn=function TK
set dn=function YK
set fn=function bT
set Rn=function Hj
set Tn=function hSw
set Yn=function I7
set Gn=function kcw
set gn=function ZK
set hn=function Ulw
set Fn=function qww
set kn=function Etw
set jn=function Xiw
set xn=function UK
set vn=function F6
set mn=function c9
set Qn=function p6
set Wn=function aww
set En=function Miw
set Zn=function Ucw
set Un=function Eiw
set In=function Saw
set Pn=function j6
set An=function P7
set Dn=function Gbw
set Hn=function caw
set Jn=function LM
set Kn=function oaw
set Ln=function law
set Xn=function EK
set Cn=function IK
set Vn=function Gsw
set Bn=function v6
set Nn=function baw
set Mn=function yaw
set wd=function paw
set ud=function q3
set rd=function Dcw
set sd=function e2
set td=function U7
set id=function Stw
set Sd=function hcw
set cd=function Fcw
set od=function cow
set Od=function cOw
set ld=function eaw
set bd=function oOw
set yd=function b0w
set pd=function qaw
set ed=function aaw
set qd=function itw
set ad=function naw
set nd=function daw
set dd=function faw
set fd=function OOw
set Rd=function Raw
set Td=function Sww
set Yd=function h6
set Gd=function Zcw
set gd=function Taw
set hd=function CSw
set Fd=function kaw
set kd=function jaw
set jd=function Ztw
set xd=function xaw
set vd=function o9
set md=function vaw
set Qd=function maw
set Wd=function Qaw
set Ed=function p7
set Zd=function Waw
set Ud=function c1
set Id=function Eaw
set Pd=function Zaw
set Ad=function Uaw
set Dd=function Iaw
set Hd=function r4
set Jd=function Paw
set Kd=function Aaw
set Ld=function S9
set Xd=function Daw
set Cd=function Haw
set Vd=function Jaw
set Bd=function Kaw
set Nd=function Law
set Md=function Xaw
set wf=function Caw
set uf=function wX
set rf=function Vaw
set sf=function Baw
set tf=function TM
set Sf=function Naw
set cf=function Maw
set of=function wnw
set Of=function unw
set lf=function rnw
set bf=function snw
set yf=function inw
set pf=function Snw
set ef=function P1
set qf=function cnw
set af=function p2
set nf=function onw
set df=function k6
set ff=function l0w
set Rf=function Onw
set Tf=function jtw
set Yf=function vtw
set Gf=function mtw
set gf=function x6
set hf=function bnw
set Ff=function ynw
set kf=function pnw
set jf=function lnw
endfunction
function AD takes nothing returns nothing
local trigger UD
local playerunitevent ID
local integer PD
set mi=CreateTrigger()
set UD=mi
set ID=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set PD=0
loop
call TriggerRegisterPlayerUnitEvent(UD,Player(PD),ID,null)
set PD=PD+1
exitwhen PD==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(mi,Condition(ka))
call TriggerAddAction(mi,ja)
set UD=null
set ID=null
endfunction
function AZ takes nothing returns nothing
local trigger UZ
local playerunitevent IZ
local integer PZ
set Nt=CreateTrigger()
set UZ=Nt
set IZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set PZ=0
loop
call TriggerRegisterPlayerUnitEvent(UZ,Player(PZ),IZ,null)
set PZ=PZ+1
exitwhen PZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Nt,Condition(pq))
call TriggerAddAction(Nt,eq)
set UZ=null
set IZ=null
endfunction
function BE takes nothing returns nothing
local trigger XE
local playerunitevent CE
local integer VE
set Kt=CreateTrigger()
set XE=Kt
set CE=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set VE=0
loop
call TriggerRegisterPlayerUnitEvent(XE,Player(VE),CE,null)
set VE=VE+1
exitwhen VE==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Kt,Condition(uq))
call TriggerAddAction(Kt,rq)
set XE=null
set CE=null
endfunction
function Bm takes nothing returns nothing
local trigger Xm
local playerunitevent Cm
local integer Vm
set Rt=CreateTrigger()
set Xm=Rt
set Cm=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Vm=0
loop
call TriggerRegisterPlayerUnitEvent(Xm,Player(Vm),Cm,null)
set Vm=Vm+1
exitwhen Vm==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Rt,Condition(Se))
call TriggerAddAction(Rt,ce)
set Xm=null
set Cm=null
endfunction
function CD takes nothing returns nothing
local trigger KD
local playerunitevent LD
local integer XD
set Qi=CreateTrigger()
set KD=Qi
set LD=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set XD=0
loop
call TriggerRegisterPlayerUnitEvent(KD,Player(XD),LD,null)
set XD=XD+1
exitwhen XD==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Qi,Condition(xa))
call TriggerAddAction(Qi,va)
set KD=null
set LD=null
endfunction
function CY takes nothing returns nothing
local trigger KY
local playerunitevent LY
local integer XY
set xs=CreateTrigger()
set KY=xs
set LY=EVENT_PLAYER_UNIT_ATTACKED
set XY=0
loop
call TriggerRegisterPlayerUnitEvent(KY,Player(XY),LY,null)
set XY=XY+1
exitwhen XY==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(xs,Condition(hy))
call TriggerAddAction(xs,Fy)
set KY=null
set LY=null
endfunction
function CZ takes nothing returns nothing
local trigger KZ
local playerunitevent LZ
local integer XZ
set Mt=CreateTrigger()
set KZ=Mt
set LZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set XZ=0
loop
call TriggerRegisterPlayerUnitEvent(KZ,Player(XZ),LZ,null)
set XZ=XZ+1
exitwhen XZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Mt,Condition(qq))
call TriggerAddAction(Mt,aq)
set KZ=null
set LZ=null
endfunction
function DU takes nothing returns nothing
local trigger IU
local playerunitevent PU
local integer AU
set Si=CreateTrigger()
set IU=Si
set PU=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set AU=0
loop
call TriggerRegisterPlayerUnitEvent(IU,Player(AU),PU,null)
set AU=AU+1
exitwhen AU==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Si,Condition(xq))
call TriggerAddAction(Si,vq)
set IU=null
set PU=null
endfunction
function DW takes nothing returns nothing
local trigger IW
local playerunitevent PW
local integer AW
set Et=CreateTrigger()
set IW=Et
set PW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set AW=0
loop
call TriggerRegisterPlayerUnitEvent(IW,Player(AW),PW,null)
set AW=AW+1
exitwhen AW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Et,Condition(Ee))
call TriggerAddAction(Et,Ze)
set IW=null
set PW=null
endfunction
function Dj takes nothing returns nothing
local trigger Ij
local playerunitevent Pj
local integer Aj
set Ns=CreateTrigger()
set Ij=Ns
set Pj=EVENT_PLAYER_UNIT_SPELL_CAST
set Aj=0
loop
call TriggerRegisterPlayerUnitEvent(Ij,Player(Aj),Pj,null)
set Aj=Aj+1
exitwhen Aj==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ns,Condition(np))
call TriggerAddAction(Ns,dp)
set Ij=null
set Pj=null
endfunction
function EE takes nothing returns nothing
set Ht=CreateTrigger()
call TriggerRegisterTimerEvent(Ht,0.10,false)
call TriggerAddAction(Ht,Ne)
endfunction
function EY takes nothing returns nothing
local trigger mY
local playerunitevent QY
local integer WY
set js=CreateTrigger()
set mY=js
set QY=EVENT_PLAYER_UNIT_ATTACKED
set WY=0
loop
call TriggerRegisterPlayerUnitEvent(mY,Player(WY),QY,null)
set WY=WY+1
exitwhen WY==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(js,Condition(Gy))
call TriggerAddAction(js,gy)
set mY=null
set QY=null
endfunction
function Em takes nothing returns nothing
local trigger mm
local playerunitevent Qm
local integer Wm
set dt=CreateTrigger()
set mm=dt
set Qm=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Wm=0
loop
call TriggerRegisterPlayerUnitEvent(mm,Player(Wm),Qm,null)
set Wm=Wm+1
exitwhen Wm==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(dt,Condition(re))
call TriggerAddAction(dt,se)
set mm=null
set Qm=null
endfunction
function FK takes nothing returns nothing
local trigger GK
local playerunitevent gK
local integer hK
set wS=CreateTrigger()
set GK=wS
set gK=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set hK=0
loop
call TriggerRegisterPlayerUnitEvent(GK,Player(hK),gK,null)
set hK=hK+1
exitwhen hK==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(wS,Condition(nn))
call TriggerAddAction(wS,dn)
set GK=null
set gK=null
endfunction
function FW takes nothing returns nothing
local trigger GW
local playerunitevent gW
local integer hW
set Qt=CreateTrigger()
set GW=Qt
set gW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set hW=0
loop
call TriggerRegisterPlayerUnitEvent(GW,Player(hW),gW,null)
set hW=hW+1
exitwhen hW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Qt,Condition(ve))
call TriggerAddAction(Qt,me)
set GW=null
set gW=null
endfunction
function GH takes nothing returns nothing
local trigger RH
local playerunitevent TH
local integer YH
set Ui=CreateTrigger()
set RH=Ui
set TH=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set YH=0
loop
call TriggerRegisterPlayerUnitEvent(RH,Player(YH),TH,null)
set YH=YH+1
exitwhen YH==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ui,Condition(Ia))
call TriggerAddAction(Ui,Pa)
set RH=null
set TH=null
endfunction
function GU takes nothing returns nothing
local trigger RU
local playerunitevent TU
local integer YU
set si=CreateTrigger()
set RU=si
set TU=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set YU=0
loop
call TriggerRegisterPlayerUnitEvent(RU,Player(YU),TU,null)
set YU=YU+1
exitwhen YU==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(si,Condition(Gq))
call TriggerAddAction(si,gq)
set RU=null
set TU=null
endfunction
function HE takes nothing returns nothing
local trigger PE
local playerunitevent AE
local integer DE
set Jt=CreateTrigger()
set PE=Jt
set AE=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set DE=0
loop
call TriggerRegisterPlayerUnitEvent(PE,Player(DE),AE,null)
set DE=DE+1
exitwhen DE==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Jt,Condition(Me))
call TriggerAddAction(Jt,wq)
set PE=null
set AE=null
endfunction
function Hm takes nothing returns nothing
local trigger Pm
local playerunitevent Am
local integer Dm
set ft=CreateTrigger()
set Pm=ft
set Am=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Dm=0
loop
call TriggerRegisterPlayerUnitEvent(Pm,Player(Dm),Am,null)
set Dm=Dm+1
exitwhen Dm==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ft,Condition(te))
call TriggerAddAction(ft,ie)
set Pm=null
set Am=null
endfunction
function IH takes nothing returns nothing
local trigger EH
local playerunitevent ZH
local integer UH
set Pi=CreateTrigger()
set EH=Pi
set ZH=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set UH=0
loop
call TriggerRegisterPlayerUnitEvent(EH,Player(UH),ZH,null)
set UH=UH+1
exitwhen UH==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Pi,Condition(Ha))
call TriggerAddAction(Pi,Ja)
set EH=null
set ZH=null
endfunction
function IT takes nothing returns nothing
local trigger ET
local playerunitevent ZT
local integer UT
set gs=CreateTrigger()
set ET=gs
set ZT=EVENT_PLAYER_UNIT_ATTACKED
set UT=0
loop
call TriggerRegisterPlayerUnitEvent(ET,Player(UT),ZT,null)
set UT=UT+1
exitwhen UT==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(gs,Condition(qy))
call TriggerAddAction(gs,ay)
set ET=null
set ZT=null
endfunction
function JA takes nothing returns nothing
local trigger AA
local playerunitevent DA
local integer HA
set ki=CreateTrigger()
set AA=ki
set DA=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set HA=0
loop
call TriggerRegisterPlayerUnitEvent(AA,Player(HA),DA,null)
set HA=HA+1
exitwhen HA==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ki,Condition(fa))
call TriggerAddAction(ki,Ra)
set AA=null
set DA=null
endfunction
function JJ takes nothing returns nothing
local trigger AJ
local playerunitevent DJ
local integer HJ
set Ci=CreateTrigger()
set AJ=Ci
set DJ=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set HJ=0
loop
call TriggerRegisterPlayerUnitEvent(AJ,Player(HJ),DJ,null)
set HJ=HJ+1
exitwhen HJ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ci,Condition(cn))
call TriggerAddAction(Ci,on)
set AJ=null
set DJ=null
endfunction
function JQ takes nothing returns nothing
local trigger AQ
local playerunitevent DQ
local integer HQ
set kt=CreateTrigger()
set AQ=kt
set DQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set HQ=0
loop
call TriggerRegisterPlayerUnitEvent(AQ,Player(HQ),DQ,null)
set HQ=HQ+1
exitwhen HQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(kt,Condition(Re))
call TriggerAddAction(kt,Te)
set AQ=null
set DQ=null
endfunction
function KP takes nothing returns nothing
local trigger DP
local playerunitevent HP
local integer JP
set Ti=CreateTrigger()
set DP=Ti
set HP=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set JP=0
loop
call TriggerRegisterPlayerUnitEvent(DP,Player(JP),HP,null)
set JP=JP+1
exitwhen JP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ti,Condition(oa))
call TriggerAddAction(Ti,Oa)
set DP=null
set HP=null
endfunction
function Kv takes nothing returns nothing
local trigger Dv
local playerunitevent Hv
local integer Jv
set yt=CreateTrigger()
set Dv=yt
set Hv=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Jv=0
loop
call TriggerRegisterPlayerUnitEvent(Dv,Player(Jv),Hv,null)
set Jv=Jv+1
exitwhen Jv==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(yt,Condition(Hp))
call TriggerAddAction(yt,Jp)
set Dv=null
set Hv=null
endfunction
function LH takes nothing returns nothing
local trigger HH
local playerunitevent JH
local integer KH
set Ai=CreateTrigger()
set HH=Ai
set JH=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set KH=0
loop
call TriggerRegisterPlayerUnitEvent(HH,Player(KH),JH,null)
set KH=KH+1
exitwhen KH==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ai,Condition(Ka))
call TriggerAddAction(Ai,La)
set HH=null
set JH=null
endfunction
function MP takes nothing returns nothing
local trigger VP
local playerunitevent BP
local integer NP
set Yi=CreateTrigger()
set VP=Yi
set BP=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set NP=0
loop
call TriggerRegisterPlayerUnitEvent(VP,Player(NP),BP,null)
set NP=NP+1
exitwhen NP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Yi,Condition(la))
call TriggerAddAction(Yi,ba)
set VP=null
set BP=null
endfunction
function Mv takes nothing returns nothing
local trigger Vv
local playerunitevent Bv
local integer Nv
set pt=CreateTrigger()
set Vv=pt
set Bv=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Nv=0
loop
call TriggerRegisterPlayerUnitEvent(Vv,Player(Nv),Bv,null)
set Nv=Nv+1
exitwhen Nv==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(pt,Condition(Kp))
call TriggerAddAction(pt,Lp)
set Vv=null
set Bv=null
endfunction
function NJ takes nothing returns nothing
local trigger CJ
local playerunitevent VJ
local integer BJ
set Vi=CreateTrigger()
set CJ=Vi
set VJ=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set BJ=0
loop
call TriggerRegisterPlayerUnitEvent(CJ,Player(BJ),VJ,null)
set BJ=BJ+1
exitwhen BJ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Vi,Condition(On))
call TriggerAddAction(Vi,ln)
set CJ=null
set VJ=null
endfunction
function NQ takes nothing returns nothing
local trigger CQ
local playerunitevent VQ
local integer BQ
set jt=CreateTrigger()
set CQ=jt
set VQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set BQ=0
loop
call TriggerRegisterPlayerUnitEvent(CQ,Player(BQ),VQ,null)
set BQ=BQ+1
exitwhen BQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(jt,Condition(Ye))
call TriggerAddAction(jt,Ge)
set CQ=null
set VQ=null
endfunction
function NT takes nothing returns nothing
local trigger CT
local playerunitevent VT
local integer BT
set hs=CreateTrigger()
set CT=hs
set VT=EVENT_PLAYER_UNIT_ATTACKED
set BT=0
loop
call TriggerRegisterPlayerUnitEvent(CT,Player(BT),VT,null)
set BT=BT+1
exitwhen BT==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(hs,Condition(ny))
call TriggerAddAction(hs,dy)
set CT=null
set VT=null
endfunction
function OA takes nothing returns nothing
set gi=CreateTrigger()
call TriggerRegisterTimerEvent(gi,0.10,false)
call TriggerAddAction(gi,qa)
endfunction
function OH takes nothing returns nothing
local trigger SH
local playerunitevent cH
local integer oH
set Ei=CreateTrigger()
set SH=Ei
set cH=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set oH=0
loop
call TriggerRegisterPlayerUnitEvent(SH,Player(oH),cH,null)
set oH=oH+1
exitwhen oH==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ei,Condition(Wa))
call TriggerAddAction(Ei,Ea)
set SH=null
set cH=null
endfunction
function OU takes nothing returns nothing
local trigger SU
local playerunitevent cU
local integer oU
set ui=CreateTrigger()
set SU=ui
set cU=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set oU=0
loop
call TriggerRegisterPlayerUnitEvent(SU,Player(oU),cU,null)
set oU=oU+1
exitwhen oU==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ui,Condition(fq))
call TriggerAddAction(ui,Rq)
set SU=null
set cU=null
endfunction
function Oh takes nothing returns nothing
set Ps=CreateTrigger()
call TriggerRegisterTimerEvent(Ps,5.00,true)
call TriggerAddAction(Ps,Vy)
endfunction
function PF takes nothing returns nothing
local trigger ZF
local playerunitevent UF
local integer IF
set Ks=CreateTrigger()
set ZF=Ks
set UF=EVENT_PLAYER_UNIT_SPELL_CAST
set IF=0
loop
call TriggerRegisterPlayerUnitEvent(ZF,Player(IF),UF,null)
set IF=IF+1
exitwhen IF==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ks,Condition(ip))
call TriggerAddAction(Ks,Sp)
set ZF=null
set UF=null
endfunction
function PI takes nothing returns nothing
local trigger ZI
local playerunitevent UI
local integer II
set pi=CreateTrigger()
set ZI=pi
set UI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set II=0
loop
call TriggerRegisterPlayerUnitEvent(ZI,Player(II),UI,null)
set II=II+1
exitwhen II==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(pi,Condition(Kq))
call TriggerAddAction(pi,Lq)
set ZI=null
set UI=null
endfunction
function Pk takes nothing returns nothing
local trigger Zk
local playerunitevent Uk
local integer Ik
set Cs=CreateTrigger()
set Zk=Cs
set Uk=EVENT_PLAYER_UNIT_DEATH
set Ik=0
loop
call TriggerRegisterPlayerUnitEvent(Zk,Player(Ik),Uk,null)
set Ik=Ik+1
exitwhen Ik==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Cs,Condition(bp))
call TriggerAddAction(Cs,yp)
set Zk=null
set Uk=null
endfunction
function Px takes nothing returns nothing
local trigger Zx
local playerunitevent Ux
local integer Ix
set st=CreateTrigger()
set Zx=st
set Ux=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Ix=0
loop
call TriggerRegisterPlayerUnitEvent(Zx,Player(Ix),Ux,null)
set Ix=Ix+1
exitwhen Ix==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(st,Condition(hp))
call TriggerAddAction(st,Fp)
set Zx=null
set Ux=null
endfunction
function QD takes nothing returns nothing
local trigger xD
local playerunitevent vD
local integer mD
set vi=CreateTrigger()
set xD=vi
set vD=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set mD=0
loop
call TriggerRegisterPlayerUnitEvent(xD,Player(mD),vD,null)
set mD=mD+1
exitwhen mD==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(vi,Condition(ha))
call TriggerAddAction(vi,Fa)
set xD=null
set vD=null
endfunction
function QZ takes nothing returns nothing
local trigger xZ
local playerunitevent vZ
local integer mZ
set Bt=CreateTrigger()
set xZ=Bt
set vZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set mZ=0
loop
call TriggerRegisterPlayerUnitEvent(xZ,Player(mZ),vZ,null)
set mZ=mZ+1
exitwhen mZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Bt,Condition(bq))
call TriggerAddAction(Bt,yq)
set xZ=null
set vZ=null
endfunction
function RF takes nothing returns nothing
local trigger nF
local playerunitevent dF
local integer fF
set Js=CreateTrigger()
set nF=Js
set dF=EVENT_PLAYER_UNIT_SPELL_CAST
set fF=0
loop
call TriggerRegisterPlayerUnitEvent(nF,Player(fF),dF,null)
set fF=fF+1
exitwhen fF==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Js,Condition(sp))
call TriggerAddAction(Js,tp)
set nF=null
set dF=null
endfunction
function Rm takes nothing returns nothing
local trigger nm
local playerunitevent dm
local integer fm
set at=CreateTrigger()
set nm=at
set dm=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set fm=0
loop
call TriggerRegisterPlayerUnitEvent(nm,Player(fm),dm,null)
set fm=fm+1
exitwhen fm==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(at,Condition(Np))
call TriggerAddAction(at,Mp)
set nm=null
set dm=null
endfunction
function SA takes nothing returns nothing
local trigger sA
local playerunitevent tA
local integer iA
set Gi=CreateTrigger()
set sA=Gi
set tA=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set iA=0
loop
call TriggerRegisterPlayerUnitEvent(sA,Player(iA),tA,null)
set iA=iA+1
exitwhen iA==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Gi,Condition(ya))
call TriggerAddAction(Gi,pa)
set sA=null
set tA=null
endfunction
function Sm takes nothing returns nothing
local trigger sm
local playerunitevent tm
local integer im
set et=CreateTrigger()
set sm=et
set tm=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set im=0
loop
call TriggerRegisterPlayerUnitEvent(sm,Player(im),tm,null)
set im=im+1
exitwhen im==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(et,Condition(Xp))
call TriggerAddAction(et,Cp)
set sm=null
set tm=null
endfunction
function TJ takes nothing returns nothing
local trigger dJ
local playerunitevent fJ
local integer RJ
set Ki=CreateTrigger()
set dJ=Ki
set fJ=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set RJ=0
loop
call TriggerRegisterPlayerUnitEvent(dJ,Player(RJ),fJ,null)
set RJ=RJ+1
exitwhen RJ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ki,Condition(wn))
call TriggerAddAction(Ki,un)
set dJ=null
set fJ=null
endfunction
function Tk takes nothing returns nothing
local trigger dk
local playerunitevent fk
local integer Rk
set Xs=CreateTrigger()
set dk=Xs
set fk=EVENT_PLAYER_UNIT_DEATH
set Rk=0
loop
call TriggerRegisterPlayerUnitEvent(dk,Player(Rk),fk,null)
set Rk=Rk+1
exitwhen Rk==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Xs,Condition(Op))
call TriggerAddAction(Xs,lp)
set dk=null
set fk=null
endfunction
function UP takes nothing returns nothing
local trigger WP
local playerunitevent EP
local integer ZP
set Ri=CreateTrigger()
set WP=Ri
set EP=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set ZP=0
loop
call TriggerRegisterPlayerUnitEvent(WP,Player(ZP),EP,null)
set ZP=ZP+1
exitwhen ZP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ri,Condition(Sa))
call TriggerAddAction(Ri,ca)
set WP=null
set EP=null
endfunction
function Uv takes nothing returns nothing
local trigger Wv
local playerunitevent Ev
local integer Zv
set bt=CreateTrigger()
set Wv=bt
set Ev=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Zv=0
loop
call TriggerRegisterPlayerUnitEvent(Wv,Player(Zv),Ev,null)
set Zv=Zv+1
exitwhen Zv==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(bt,Condition(Ap))
call TriggerAddAction(bt,Dp)
set Wv=null
set Ev=null
endfunction
function VU takes nothing returns nothing
local trigger LU
local playerunitevent XU
local integer CU
set ci=CreateTrigger()
set LU=ci
set XU=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set CU=0
loop
call TriggerRegisterPlayerUnitEvent(LU,Player(CU),XU,null)
set CU=CU+1
exitwhen CU==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ci,Condition(mq))
call TriggerAddAction(ci,Qq)
set LU=null
set XU=null
endfunction
function VW takes nothing returns nothing
local trigger LW
local playerunitevent XW
local integer CW
set Zt=CreateTrigger()
set LW=Zt
set XW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set CW=0
loop
call TriggerRegisterPlayerUnitEvent(LW,Player(CW),XW,null)
set CW=CW+1
exitwhen CW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Zt,Condition(Ue))
call TriggerAddAction(Zt,Ie)
set LW=null
set XW=null
endfunction
function WU takes nothing returns nothing
set ii=CreateTrigger()
call TriggerRegisterTimerEvent(ii,0.10,false)
call TriggerAddAction(ii,jq)
endfunction
function WW takes nothing returns nothing
local trigger vW
local playerunitevent mW
local integer QW
set Wt=CreateTrigger()
set vW=Wt
set mW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set QW=0
loop
call TriggerRegisterPlayerUnitEvent(vW,Player(QW),mW,null)
set QW=QW+1
exitwhen QW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Wt,Condition(Qe))
call TriggerAddAction(Wt,We)
set vW=null
set mW=null
endfunction
function XI takes nothing returns nothing
local trigger JI
local playerunitevent KI
local integer LI
set ei=CreateTrigger()
set JI=ei
set KI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set LI=0
loop
call TriggerRegisterPlayerUnitEvent(JI,Player(LI),KI,null)
set LI=LI+1
exitwhen LI==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ei,Condition(Xq))
call TriggerAddAction(ei,Cq)
set JI=null
set KI=null
endfunction
function Xx takes nothing returns nothing
local trigger Jx
local playerunitevent Kx
local integer Lx
set tt=CreateTrigger()
set Jx=tt
set Kx=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Lx=0
loop
call TriggerRegisterPlayerUnitEvent(Jx,Player(Lx),Kx,null)
set Lx=Lx+1
exitwhen Lx==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(tt,Condition(kp))
call TriggerAddAction(tt,jp)
set Jx=null
set Kx=null
endfunction
function YG takes nothing returns nothing
local trigger fG
local playerunitevent RG
local integer TG
set Qs=CreateTrigger()
set fG=Qs
set RG=EVENT_PLAYER_UNIT_SPELL_EFFECT
set TG=0
loop
call TriggerRegisterPlayerUnitEvent(fG,Player(TG),RG,null)
set TG=TG+1
exitwhen TG==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Qs,Condition(my))
call TriggerAddAction(Qs,Qy)
set fG=null
set RG=null
endfunction
function YP takes nothing returns nothing
local trigger fP
local playerunitevent RP
local integer TP
set di=CreateTrigger()
set fP=di
set RP=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set TP=0
loop
call TriggerRegisterPlayerUnitEvent(fP,Player(TP),RP,null)
set TP=TP+1
exitwhen TP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(di,Condition(ra))
call TriggerAddAction(di,sa)
set fP=null
set RP=null
endfunction
function YY takes nothing returns nothing
local trigger fY
local playerunitevent RY
local integer TY
set ks=CreateTrigger()
set fY=ks
set RY=EVENT_PLAYER_UNIT_ATTACKED
set TY=0
loop
call TriggerRegisterPlayerUnitEvent(fY,Player(TY),RY,null)
set TY=TY+1
exitwhen TY==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ks,Condition(Ty))
call TriggerAddAction(ks,Yy)
set fY=null
set RY=null
endfunction
function Yj takes nothing returns nothing
local trigger fj
local playerunitevent Rj
local integer Tj
set Bs=CreateTrigger()
set fj=Bs
set Rj=EVENT_PLAYER_UNIT_SPELL_CAST
set Tj=0
loop
call TriggerRegisterPlayerUnitEvent(fj,Player(Tj),Rj,null)
set Tj=Tj+1
exitwhen Tj==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Bs,Condition(qp))
call TriggerAddAction(Bs,ap)
set fj=null
set Rj=null
endfunction
function Yv takes nothing returns nothing
local trigger fv
local playerunitevent Rv
local integer Tv
set Ot=CreateTrigger()
set fv=Ot
set Rv=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Tv=0
loop
call TriggerRegisterPlayerUnitEvent(fv,Player(Tv),Rv,null)
set Tv=Tv+1
exitwhen Tv==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ot,Condition(Zp))
call TriggerAddAction(Ot,Up)
set fv=null
set Rv=null
endfunction
function ZG takes nothing returns nothing
local trigger QG
local playerunitevent WG
local integer EG
set Ws=CreateTrigger()
set QG=Ws
set WG=EVENT_PLAYER_UNIT_SPELL_CAST
set EG=0
loop
call TriggerRegisterPlayerUnitEvent(QG,Player(EG),WG,null)
set EG=EG+1
exitwhen EG==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(Ws,Wy)
set QG=null
set WG=null
endfunction
function ZJ takes nothing returns nothing
local trigger QJ
local playerunitevent WJ
local integer EJ
set Xi=CreateTrigger()
set QJ=Xi
set WJ=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set EJ=0
loop
call TriggerRegisterPlayerUnitEvent(QJ,Player(EJ),WJ,null)
set EJ=EJ+1
exitwhen EJ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Xi,Condition(tn))
call TriggerAddAction(Xi,Sn)
set QJ=null
set WJ=null
endfunction
function ZQ takes nothing returns nothing
local trigger QQ
local playerunitevent WQ
local integer EQ
set Ft=CreateTrigger()
set QQ=Ft
set WQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set EQ=0
loop
call TriggerRegisterPlayerUnitEvent(QQ,Player(EQ),WQ,null)
set EQ=EQ+1
exitwhen EQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ft,Condition(de))
call TriggerAddAction(Ft,fe)
set QQ=null
set WQ=null
endfunction
function Zg takes nothing returns nothing
local trigger Qg
local playerunitevent Wg
local integer Eg
set Us=CreateTrigger()
set Qg=Us
set Wg=EVENT_PLAYER_UNIT_SPELL_CAST
set Eg=0
loop
call TriggerRegisterPlayerUnitEvent(Qg,Player(Eg),Wg,null)
set Eg=Eg+1
exitwhen Eg==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Us,Condition(Hy))
call TriggerAddAction(Us,Jy)
set Qg=null
set Wg=null
endfunction
function Zh takes nothing returns nothing
local trigger Qh
local playerunitevent Wh
local integer Eh
set Ds=CreateTrigger()
set Qh=Ds
set Wh=EVENT_PLAYER_UNIT_SPELL_CAST
set Eh=0
loop
call TriggerRegisterPlayerUnitEvent(Qh,Player(Eh),Wh,null)
set Eh=Eh+1
exitwhen Eh==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ds,Condition(My))
call TriggerAddAction(Ds,wp)
set Qh=null
set Wh=null
endfunction
function aG takes nothing returns nothing
local trigger pG
local playerunitevent eG
local integer qG
set ms=CreateTrigger()
set pG=ms
set eG=EVENT_PLAYER_UNIT_SPELL_CAST
set qG=0
loop
call TriggerRegisterPlayerUnitEvent(pG,Player(qG),eG,null)
set qG=qG+1
exitwhen qG==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ms,Condition(xy))
call TriggerAddAction(ms,vy)
set pG=null
set eG=null
endfunction
function aH takes nothing returns nothing
local trigger pH
local playerunitevent eH
local integer qH
set Zi=CreateTrigger()
set pH=Zi
set eH=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set qH=0
loop
call TriggerRegisterPlayerUnitEvent(pH,Player(qH),eH,null)
set qH=qH+1
exitwhen qH==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Zi,Condition(Za))
call TriggerAddAction(Zi,Ua)
set pH=null
set eH=null
endfunction
function aU takes nothing returns nothing
local trigger pU
local playerunitevent eU
local integer qU
set ri=CreateTrigger()
set pU=ri
set eU=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set qU=0
loop
call TriggerRegisterPlayerUnitEvent(pU,Player(qU),eU,null)
set qU=qU+1
exitwhen qU==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ri,Condition(Tq))
call TriggerAddAction(ri,Yq)
set pU=null
set eU=null
endfunction
function bQ takes nothing returns nothing
local trigger oQ
local playerunitevent OQ
local integer lQ
set Yt=CreateTrigger()
set oQ=Yt
set OQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set lQ=0
loop
call TriggerRegisterPlayerUnitEvent(oQ,Player(lQ),OQ,null)
set lQ=lQ+1
exitwhen lQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Yt,Condition(le))
call TriggerAddAction(Yt,be)
set oQ=null
set OQ=null
endfunction
function bZ takes nothing returns nothing
local trigger oZ
local playerunitevent OZ
local integer lZ
set Xt=CreateTrigger()
set oZ=Xt
set OZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set lZ=0
loop
call TriggerRegisterPlayerUnitEvent(oZ,Player(lZ),OZ,null)
set lZ=lZ+1
exitwhen lZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Xt,Condition(iq))
call TriggerAddAction(Xt,Sq)
set oZ=null
set OZ=null
endfunction
function cG takes nothing returns nothing
local trigger tG
local playerunitevent iG
local integer SG
set vs=CreateTrigger()
set tG=vs
set iG=EVENT_PLAYER_UNIT_ATTACKED
set SG=0
loop
call TriggerRegisterPlayerUnitEvent(tG,Player(SG),iG,null)
set SG=SG+1
exitwhen SG==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(vs,Condition(ky))
call TriggerAddAction(vs,jy)
set tG=null
set iG=null
endfunction
function cJ takes nothing returns nothing
local trigger tJ
local playerunitevent iJ
local integer SJ
set Hi=CreateTrigger()
set tJ=Hi
set iJ=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set SJ=0
loop
call TriggerRegisterPlayerUnitEvent(tJ,Player(SJ),iJ,null)
set SJ=SJ+1
exitwhen SJ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Hi,Condition(Va))
call TriggerAddAction(Hi,Ba)
set tJ=null
set iJ=null
endfunction
function cx takes nothing returns nothing
local trigger tx
local playerunitevent ix
local integer Sx
set wt=CreateTrigger()
set tx=wt
set ix=EVENT_PLAYER_UNIT_DEATH
set Sx=0
loop
call TriggerRegisterPlayerUnitEvent(tx,Player(Sx),ix,null)
set Sx=Sx+1
exitwhen Sx==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(wt,Condition(fp))
call TriggerAddAction(wt,Rp)
set tx=null
set ix=null
endfunction
function dD takes nothing returns nothing
local trigger qD
local playerunitevent aD
local integer nD
set xi=CreateTrigger()
set qD=xi
set aD=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set nD=0
loop
call TriggerRegisterPlayerUnitEvent(qD,Player(nD),aD,null)
set nD=nD+1
exitwhen nD==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(xi,Condition(Ga))
call TriggerAddAction(xi,ga)
set qD=null
set aD=null
endfunction
function dQ takes nothing returns nothing
local trigger qQ
local playerunitevent aQ
local integer nQ
set Gt=CreateTrigger()
set qQ=Gt
set aQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set nQ=0
loop
call TriggerRegisterPlayerUnitEvent(qQ,Player(nQ),aQ,null)
set nQ=nQ+1
exitwhen nQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Gt,Condition(ye))
call TriggerAddAction(Gt,pe)
set qQ=null
set aQ=null
endfunction
function dZ takes nothing returns nothing
local trigger qZ
local playerunitevent aZ
local integer nZ
set Ct=CreateTrigger()
set qZ=Ct
set aZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set nZ=0
loop
call TriggerRegisterPlayerUnitEvent(qZ,Player(nZ),aZ,null)
set nZ=nZ+1
exitwhen nZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ct,Condition(cq))
call TriggerAddAction(Ct,oq)
set qZ=null
set aZ=null
endfunction
function dg takes nothing returns nothing
local trigger qg
local playerunitevent ag
local integer ng
set Zs=CreateTrigger()
set qg=Zs
set ag=EVENT_PLAYER_UNIT_SPELL_CAST
set ng=0
loop
call TriggerRegisterPlayerUnitEvent(qg,Player(ng),ag,null)
set ng=ng+1
exitwhen ng==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Zs,Condition(Py))
call TriggerAddAction(Zs,Ay)
set qg=null
set ag=null
endfunction
function eA takes nothing returns nothing
local trigger bA
local playerunitevent yA
local integer pA
set hi=CreateTrigger()
set bA=hi
set yA=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set pA=0
loop
call TriggerRegisterPlayerUnitEvent(bA,Player(pA),yA,null)
set pA=pA+1
exitwhen pA==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddAction(hi,aa)
set bA=null
set yA=null
endfunction
function eJ takes nothing returns nothing
local trigger bJ
local playerunitevent yJ
local integer pJ
set Ji=CreateTrigger()
set bJ=Ji
set yJ=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set pJ=0
loop
call TriggerRegisterPlayerUnitEvent(bJ,Player(pJ),yJ,null)
set pJ=pJ+1
exitwhen pJ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ji,Condition(Na))
call TriggerAddAction(Ji,Ma)
set bJ=null
set yJ=null
endfunction
function fK takes nothing returns nothing
local trigger aK
local playerunitevent nK
local integer dK
set Mi=CreateTrigger()
set aK=Mi
set nK=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set dK=0
loop
call TriggerRegisterPlayerUnitEvent(aK,Player(dK),nK,null)
set dK=dK+1
exitwhen dK==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Mi,Condition(qn))
call TriggerAddAction(Mi,an)
set aK=null
set nK=null
endfunction
function fW takes nothing returns nothing
local trigger aW
local playerunitevent nW
local integer dW
set mt=CreateTrigger()
set aW=mt
set nW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set dW=0
loop
call TriggerRegisterPlayerUnitEvent(aW,Player(dW),nW,null)
set dW=dW+1
exitwhen dW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(mt,Condition(je))
call TriggerAddAction(mt,xe)
set aW=null
set nW=null
endfunction
function gE takes nothing returns nothing
local trigger TE
local playerunitevent YE
local integer GE
set At=CreateTrigger()
set TE=At
set YE=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set GE=0
loop
call TriggerRegisterPlayerUnitEvent(TE,Player(GE),YE,null)
set GE=GE+1
exitwhen GE==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(At,Condition(Le))
call TriggerAddAction(At,Xe)
set TE=null
set YE=null
endfunction
function gI takes nothing returns nothing
local trigger TI
local playerunitevent YI
local integer GI
set bi=CreateTrigger()
set TI=bi
set YI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set GI=0
loop
call TriggerRegisterPlayerUnitEvent(TI,Player(GI),YI,null)
set GI=GI+1
exitwhen GI==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(bi,Condition(Aq))
call TriggerAddAction(bi,Dq)
set TI=null
set YI=null
endfunction
function gx takes nothing returns nothing
local trigger Tx
local playerunitevent Yx
local integer Gx
set ut=CreateTrigger()
set Tx=ut
set Yx=EVENT_PLAYER_UNIT_DEATH
set Gx=0
loop
call TriggerRegisterPlayerUnitEvent(Tx,Player(Gx),Yx,null)
set Gx=Gx+1
exitwhen Gx==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ut,Condition(Tp))
call TriggerAddAction(ut,Yp)
set Tx=null
set Yx=null
endfunction
function hQ takes nothing returns nothing
local trigger YQ
local playerunitevent GQ
local integer gQ
set gt=CreateTrigger()
set YQ=gt
set GQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set gQ=0
loop
call TriggerRegisterPlayerUnitEvent(YQ,Player(gQ),GQ,null)
set gQ=gQ+1
exitwhen gQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(gt,Condition(ee))
call TriggerAddAction(gt,qe)
set YQ=null
set GQ=null
endfunction
function hT takes nothing returns nothing
local trigger YT
local playerunitevent GT
local integer gT
set Gs=CreateTrigger()
set YT=Gs
set GT=EVENT_PLAYER_UNIT_ATTACKED
set gT=0
loop
call TriggerRegisterPlayerUnitEvent(YT,Player(gT),GT,null)
set gT=gT+1
exitwhen gT==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Gs,Condition(py))
call TriggerAddAction(Gs,ey)
set YT=null
set GT=null
endfunction
function hZ takes nothing returns nothing
local trigger YZ
local playerunitevent GZ
local integer gZ
set Vt=CreateTrigger()
set YZ=Vt
set GZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set gZ=0
loop
call TriggerRegisterPlayerUnitEvent(YZ,Player(gZ),GZ,null)
set gZ=gZ+1
exitwhen gZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Vt,Condition(Oq))
call TriggerAddAction(Vt,lq)
set YZ=null
set GZ=null
endfunction
function iK takes nothing returns nothing
local trigger rK
local playerunitevent sK
local integer tK
set Bi=CreateTrigger()
set rK=Bi
set sK=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set tK=0
loop
call TriggerRegisterPlayerUnitEvent(rK,Player(tK),sK,null)
set tK=tK+1
exitwhen tK==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Bi,Condition(bn))
call TriggerAddAction(Bi,yn)
set rK=null
set sK=null
endfunction
function iW takes nothing returns nothing
local trigger rW
local playerunitevent sW
local integer tW
set xt=CreateTrigger()
set rW=xt
set sW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set tW=0
loop
call TriggerRegisterPlayerUnitEvent(rW,Player(tW),sW,null)
set tW=tW+1
exitwhen tW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(xt,Condition(ge))
call TriggerAddAction(xt,he)
set rW=null
set sW=null
endfunction
function jA takes nothing returns nothing
local trigger hA
local playerunitevent FA
local integer kA
set Fi=CreateTrigger()
set hA=Fi
set FA=EVENT_PLAYER_UNIT_CONSTRUCT_FINISH
set kA=0
loop
call TriggerRegisterPlayerUnitEvent(hA,Player(kA),FA,null)
set kA=kA+1
exitwhen kA==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Fi,Condition(na))
call TriggerAddAction(Fi,da)
set hA=null
set FA=null
endfunction
function jJ takes nothing returns nothing
local trigger hJ
local playerunitevent FJ
local integer kJ
set Li=CreateTrigger()
set hJ=Li
set FJ=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set kJ=0
loop
call TriggerRegisterPlayerUnitEvent(hJ,Player(kJ),FJ,null)
set kJ=kJ+1
exitwhen kJ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Li,Condition(rn))
call TriggerAddAction(Li,sn)
set hJ=null
set FJ=null
endfunction
function jQ takes nothing returns nothing
set ht=CreateTrigger()
call TriggerRegisterTimerEvent(ht,0.10,false)
call TriggerAddAction(ht,ne)
endfunction
function km takes nothing returns nothing
local trigger gm
local playerunitevent hm
local integer Fm
set nt=CreateTrigger()
set gm=nt
set hm=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set Fm=0
loop
call TriggerRegisterPlayerUnitEvent(gm,Player(Fm),hm,null)
set Fm=Fm+1
exitwhen Fm==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(nt,Condition(we))
call TriggerAddAction(nt,ue)
set gm=null
set hm=null
endfunction
function lE takes nothing returns nothing
local trigger cE
local playerunitevent oE
local integer OE
set It=CreateTrigger()
set cE=It
set oE=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set OE=0
loop
call TriggerRegisterPlayerUnitEvent(cE,Player(OE),oE,null)
set OE=OE+1
exitwhen OE==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(It,Condition(De))
call TriggerAddAction(It,He)
set cE=null
set oE=null
endfunction
function lI takes nothing returns nothing
local trigger cI
local playerunitevent oI
local integer OI
set Oi=CreateTrigger()
set cI=Oi
set oI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set OI=0
loop
call TriggerRegisterPlayerUnitEvent(cI,Player(OI),oI,null)
set OI=OI+1
exitwhen OI==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Oi,Condition(Zq))
call TriggerAddAction(Oi,Uq)
set cI=null
set oI=null
endfunction
function lT takes nothing returns nothing
set Rs=CreateTrigger()
call TriggerRegisterTimerEvent(Rs,120.00,false)
call TriggerAddAction(Rs,by)
endfunction
function lY takes nothing returns nothing
local trigger cY
local playerunitevent oY
local integer OY
set Fs=CreateTrigger()
set cY=Fs
set oY=EVENT_PLAYER_UNIT_ATTACKED
set OY=0
loop
call TriggerRegisterPlayerUnitEvent(cY,Player(OY),oY,null)
set OY=OY+1
exitwhen OY==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Fs,Condition(fy))
call TriggerAddAction(Fs,Ry)
set cY=null
set oY=null
endfunction
function mE takes nothing returns nothing
local trigger jE
local playerunitevent xE
local integer vE
set Dt=CreateTrigger()
set jE=Dt
set xE=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set vE=0
loop
call TriggerRegisterPlayerUnitEvent(jE,Player(vE),xE,null)
set vE=vE+1
exitwhen vE==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Dt,Condition(Ce))
call TriggerAddAction(Dt,Ve)
set jE=null
set xE=null
endfunction
function mI takes nothing returns nothing
local trigger jI
local playerunitevent xI
local integer vI
set yi=CreateTrigger()
set jI=yi
set xI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set vI=0
loop
call TriggerRegisterPlayerUnitEvent(jI,Player(vI),xI,null)
set vI=vI+1
exitwhen vI==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(yi,Condition(Hq))
call TriggerAddAction(yi,Jq)
set jI=null
set xI=null
endfunction
function mx takes nothing returns nothing
local trigger jx
local playerunitevent xx
local integer vx
set rt=CreateTrigger()
set jx=rt
set xx=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set vx=0
loop
call TriggerRegisterPlayerUnitEvent(jx,Player(vx),xx,null)
set vx=vx+1
exitwhen vx==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(rt,Condition(Gp))
call TriggerAddAction(rt,gp)
set jx=null
set xx=null
endfunction
function nE takes nothing returns nothing
local trigger eE
local playerunitevent qE
local integer aE
set Pt=CreateTrigger()
set eE=Pt
set qE=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set aE=0
loop
call TriggerRegisterPlayerUnitEvent(eE,Player(aE),qE,null)
set aE=aE+1
exitwhen aE==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Pt,Condition(Je))
call TriggerAddAction(Pt,Ke)
set eE=null
set qE=null
endfunction
function nI takes nothing returns nothing
local trigger eI
local playerunitevent qI
local integer aI
set li=CreateTrigger()
set eI=li
set qI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set aI=0
loop
call TriggerRegisterPlayerUnitEvent(eI,Player(aI),qI,null)
set aI=aI+1
exitwhen aI==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(li,Condition(Iq))
call TriggerAddAction(li,Pq)
set eI=null
set qI=null
endfunction
function nh takes nothing returns nothing
set As=CreateTrigger()
call TriggerRegisterTimerEvent(As,5.00,true)
call TriggerAddAction(As,Ny)
endfunction
function oP takes nothing returns nothing
local trigger iP
local playerunitevent SP
local integer cP
set ai=CreateTrigger()
set iP=ai
set SP=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set cP=0
loop
call TriggerRegisterPlayerUnitEvent(iP,Player(cP),SP,null)
set cP=cP+1
exitwhen cP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ai,Condition(Nq))
call TriggerAddAction(ai,Mq)
set iP=null
set SP=null
endfunction
function ov takes nothing returns nothing
local trigger iv
local playerunitevent Sv
local integer cv
set ct=CreateTrigger()
set iv=ct
set Sv=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set cv=0
loop
call TriggerRegisterPlayerUnitEvent(iv,Player(cv),Sv,null)
set cv=cv+1
exitwhen cv==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ct,Condition(mp))
call TriggerAddAction(ct,Qp)
set iv=null
set Sv=null
endfunction
function pT takes nothing returns nothing
set Ys=CreateTrigger()
call TriggerRegisterTimerEvent(Ys,1.00,false)
call TriggerAddAction(Ys,yy)
endfunction
function pm takes nothing returns nothing
local trigger lm
local playerunitevent bm
local integer ym
set qt=CreateTrigger()
set lm=qt
set bm=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set ym=0
loop
call TriggerRegisterPlayerUnitEvent(lm,Player(ym),bm,null)
set ym=ym+1
exitwhen ym==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(qt,Condition(Vp))
call TriggerAddAction(qt,Bp)
set lm=null
set bm=null
endfunction
function qP takes nothing returns nothing
local trigger yP
local playerunitevent pP
local integer eP
set ni=CreateTrigger()
set yP=ni
set pP=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set eP=0
loop
call TriggerRegisterPlayerUnitEvent(yP,Player(eP),pP,null)
set eP=eP+1
exitwhen eP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ni,Condition(wa))
call TriggerAddAction(ni,ua)
set yP=null
set pP=null
endfunction
function qv takes nothing returns nothing
local trigger yv
local playerunitevent pv
local integer ev
set ot=CreateTrigger()
set yv=ot
set pv=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set ev=0
loop
call TriggerRegisterPlayerUnitEvent(yv,Player(ev),pv,null)
set ev=ev+1
exitwhen ev==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ot,Condition(Wp))
call TriggerAddAction(ot,Ep)
set yv=null
set pv=null
endfunction
function rF takes nothing returns nothing
local trigger Mh
local playerunitevent wF
local integer uF
set Hs=CreateTrigger()
set Mh=Hs
set wF=EVENT_PLAYER_UNIT_SPELL_CAST
set uF=0
loop
call TriggerRegisterPlayerUnitEvent(Mh,Player(uF),wF,null)
set uF=uF+1
exitwhen uF==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Hs,Condition(up))
call TriggerAddAction(Hs,rp)
set Mh=null
set wF=null
endfunction
function rH takes nothing returns nothing
local trigger MD
local playerunitevent wH
local integer uH
set Wi=CreateTrigger()
set MD=Wi
set wH=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set uH=0
loop
call TriggerRegisterPlayerUnitEvent(MD,Player(uH),wH,null)
set uH=uH+1
exitwhen uH==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Wi,Condition(ma))
call TriggerAddAction(Wi,Qa)
set MD=null
set wH=null
endfunction
function rU takes nothing returns nothing
local trigger MZ
local playerunitevent wU
local integer uU
set wi=CreateTrigger()
set MZ=wi
set wU=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set uU=0
loop
call TriggerRegisterPlayerUnitEvent(MZ,Player(uU),wU,null)
set uU=uU+1
exitwhen uU==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(wi,Condition(nq))
call TriggerAddAction(wi,dq)
set MZ=null
set wU=null
endfunction
function sE takes nothing returns nothing
local trigger wE
local playerunitevent uE
local integer rE
set Ut=CreateTrigger()
set wE=Ut
set uE=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set rE=0
loop
call TriggerRegisterPlayerUnitEvent(wE,Player(rE),uE,null)
set rE=rE+1
exitwhen rE==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ut,Condition(Pe))
call TriggerAddAction(Ut,Ae)
set wE=null
set uE=null
endfunction
function sI takes nothing returns nothing
local trigger wI
local playerunitevent uI
local integer rI
set oi=CreateTrigger()
set wI=oi
set uI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set rI=0
loop
call TriggerRegisterPlayerUnitEvent(wI,Player(rI),uI,null)
set rI=rI+1
exitwhen rI==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(oi,Condition(Wq))
call TriggerAddAction(oi,Eq)
set wI=null
set uI=null
endfunction
function tD takes nothing returns nothing
local trigger uD
local playerunitevent rD
local integer sD
set ji=CreateTrigger()
set uD=ji
set rD=EVENT_PLAYER_UNIT_SPELL_CAST
set sD=0
loop
call TriggerRegisterPlayerUnitEvent(uD,Player(sD),rD,null)
set sD=sD+1
exitwhen sD==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ji,Condition(Ta))
call TriggerAddAction(ji,Ya)
set uD=null
set rD=null
endfunction
function tQ takes nothing returns nothing
local trigger uQ
local playerunitevent rQ
local integer sQ
set Tt=CreateTrigger()
set uQ=Tt
set rQ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set sQ=0
loop
call TriggerRegisterPlayerUnitEvent(uQ,Player(sQ),rQ,null)
set sQ=sQ+1
exitwhen sQ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Tt,Condition(oe))
call TriggerAddAction(Tt,Oe)
set uQ=null
set rQ=null
endfunction
function tZ takes nothing returns nothing
local trigger uZ
local playerunitevent rZ
local integer sZ
set Lt=CreateTrigger()
set uZ=Lt
set rZ=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set sZ=0
loop
call TriggerRegisterPlayerUnitEvent(uZ,Player(sZ),rZ,null)
set sZ=sZ+1
exitwhen sZ==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Lt,Condition(sq))
call TriggerAddAction(Lt,tq)
set uZ=null
set rZ=null
endfunction
function tj takes nothing returns nothing
local trigger uj
local playerunitevent rj
local integer sj
set Vs=CreateTrigger()
set uj=Vs
set rj=EVENT_PLAYER_UNIT_DEATH
set sj=0
loop
call TriggerRegisterPlayerUnitEvent(uj,Player(sj),rj,null)
set sj=sj+1
exitwhen sj==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Vs,Condition(pp))
call TriggerAddAction(Vs,ep)
set uj=null
set rj=null
endfunction
function tk takes nothing returns nothing
local trigger uk
local playerunitevent rk
local integer sk
set Ls=CreateTrigger()
set uk=Ls
set rk=EVENT_PLAYER_UNIT_DEATH
set sk=0
loop
call TriggerRegisterPlayerUnitEvent(uk,Player(sk),rk,null)
set sk=sk+1
exitwhen sk==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ls,Condition(cp))
call TriggerAddAction(Ls,op)
set uk=null
set rk=null
endfunction
function uP takes nothing returns nothing
local trigger NI
local playerunitevent MI
local integer wP
set qi=CreateTrigger()
set NI=qi
set MI=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set wP=0
loop
call TriggerRegisterPlayerUnitEvent(NI,Player(wP),MI,null)
set wP=wP+1
exitwhen wP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(qi,Condition(Vq))
call TriggerAddAction(qi,Bq)
set NI=null
set MI=null
endfunction
function ug takes nothing returns nothing
local trigger NG
local playerunitevent MG
local integer wg
set Es=CreateTrigger()
set NG=Es
set MG=EVENT_PLAYER_UNIT_SPELL_CAST
set wg=0
loop
call TriggerRegisterPlayerUnitEvent(NG,Player(wg),MG,null)
set wg=wg+1
exitwhen wg==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Es,Condition(Zy))
call TriggerAddAction(Es,Uy)
set NG=null
set MG=null
endfunction
function uh takes nothing returns nothing
local trigger Ng
local playerunitevent Mg
local integer wh
set Is=CreateTrigger()
set Ng=Is
set Mg=EVENT_PLAYER_UNIT_SPELL_CAST
set wh=0
loop
call TriggerRegisterPlayerUnitEvent(Ng,Player(wh),Mg,null)
set wh=wh+1
exitwhen wh==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Is,Condition(Ly))
call TriggerAddAction(Is,Xy)
set Ng=null
set Mg=null
endfunction
function uv takes nothing returns nothing
local trigger Nx
local playerunitevent Mx
local integer wv
set St=CreateTrigger()
set Nx=St
set Mx=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set wv=0
loop
call TriggerRegisterPlayerUnitEvent(Nx,Player(wv),Mx,null)
set wv=wv+1
exitwhen wv==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(St,Condition(xp))
call TriggerAddAction(St,vp)
set Nx=null
set Mx=null
endfunction
function vH takes nothing returns nothing
local trigger kH
local playerunitevent jH
local integer xH
set Ii=CreateTrigger()
set kH=Ii
set jH=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set xH=0
loop
call TriggerRegisterPlayerUnitEvent(kH,Player(xH),jH,null)
set xH=xH+1
exitwhen xH==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ii,Condition(Aa))
call TriggerAddAction(Ii,Da)
set kH=null
set jH=null
endfunction
function vU takes nothing returns nothing
local trigger kU
local playerunitevent jU
local integer xU
set ti=CreateTrigger()
set kU=ti
set jU=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set xU=0
loop
call TriggerRegisterPlayerUnitEvent(kU,Player(xU),jU,null)
set xU=xU+1
exitwhen xU==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(ti,Condition(hq))
call TriggerAddAction(ti,Fq)
set kU=null
set jU=null
endfunction
function wJ takes nothing returns nothing
local trigger BH
local playerunitevent NH
local integer MH
set Di=CreateTrigger()
set BH=Di
set NH=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set MH=0
loop
call TriggerRegisterPlayerUnitEvent(BH,Player(MH),NH,null)
set MH=MH+1
exitwhen MH==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Di,Condition(Xa))
call TriggerAddAction(Di,Ca)
set BH=null
set NH=null
endfunction
function xP takes nothing returns nothing
local trigger FP
local playerunitevent kP
local integer jP
set fi=CreateTrigger()
set FP=fi
set kP=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set jP=0
loop
call TriggerRegisterPlayerUnitEvent(FP,Player(jP),kP,null)
set jP=jP+1
exitwhen jP==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(fi,Condition(ta))
call TriggerAddAction(fi,ia)
set FP=null
set kP=null
endfunction
function xv takes nothing returns nothing
local trigger Fv
local playerunitevent kv
local integer jv
set lt=CreateTrigger()
set Fv=lt
set kv=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set jv=0
loop
call TriggerRegisterPlayerUnitEvent(Fv,Player(jv),kv,null)
set jv=jv+1
exitwhen jv==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(lt,Condition(Ip))
call TriggerAddAction(lt,Pp)
set Fv=null
set kv=null
endfunction
function yK takes nothing returns nothing
local trigger OK
local playerunitevent lK
local integer bK
set Ni=CreateTrigger()
set OK=Ni
set lK=EVENT_PLAYER_UNIT_UPGRADE_FINISH
set bK=0
loop
call TriggerRegisterPlayerUnitEvent(OK,Player(bK),lK,null)
set bK=bK+1
exitwhen bK==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(Ni,Condition(pn))
call TriggerAddAction(Ni,en)
set OK=null
set lK=null
endfunction
function yW takes nothing returns nothing
local trigger OW
local playerunitevent lW
local integer bW
set vt=CreateTrigger()
set OW=vt
set lW=EVENT_PLAYER_UNIT_RESEARCH_FINISH
set bW=0
loop
call TriggerRegisterPlayerUnitEvent(OW,Player(bW),lW,null)
set bW=bW+1
exitwhen bW==bj_MAX_PLAYER_SLOTS
endloop
call TriggerAddCondition(vt,Condition(Fe))
call TriggerAddAction(vt,ke)
set OW=null
set lW=null
endfunction
function kK takes nothing returns nothing
call lT()
set Ts=CreateTrigger()
call TriggerAddAction(Ts,fn)
call pT()
call hT()
call IT()
call NT()
call lY()
call YY()
call EY()
call CY()
call cG()
call aG()
call YG()
call ZG()
call ug()
call dg()
call Zg()
call uh()
call Oh()
call nh()
call Zh()
call rF()
call RF()
call PF()
call tk()
call Tk()
call Pk()
call tj()
call Yj()
call Dj()
set Ms=CreateTrigger()
call TriggerAddAction(Ms,Rn)
call cx()
call gx()
call mx()
call Px()
call Xx()
call uv()
call ov()
call qv()
call Yv()
call xv()
call Uv()
call Kv()
call Mv()
call Sm()
call pm()
call Rm()
call km()
call Em()
call Hm()
call Bm()
call tQ()
call bQ()
call dQ()
call hQ()
call jQ()
call ZQ()
call JQ()
call NQ()
call iW()
call yW()
call fW()
call FW()
call WW()
call DW()
call VW()
call sE()
call lE()
call nE()
call gE()
call mE()
call EE()
call HE()
call BE()
call tZ()
call bZ()
call dZ()
call hZ()
call QZ()
call AZ()
call CZ()
call rU()
call OU()
call aU()
call GU()
call vU()
call WU()
call DU()
call VU()
call sI()
call lI()
call nI()
call gI()
call mI()
call PI()
call XI()
call uP()
call oP()
call qP()
call YP()
call xP()
call UP()
call KP()
call MP()
call SA()
call OA()
call eA()
call jA()
call JA()
call tD()
call dD()
call QD()
call AD()
call CD()
call rH()
call OH()
call aH()
call GH()
call vH()
call IH()
call LH()
call wJ()
call cJ()
call eJ()
call TJ()
call jJ()
call ZJ()
call JJ()
call NJ()
call iK()
call yK()
call fK()
call FK()
endfunction
function sT takes nothing returns nothing
local player rT=Player(PLAYER_NEUTRAL_AGGRESSIVE)
call CreateUnit(rT,1747989297,-1600.0,-128.0,270.000)
call CreateUnit(rT,1747989297,-15040.0,10816.0,270.000)
call CreateUnit(rT,1747989297,-256.0,-2432.0,270.000)
call CreateUnit(rT,1747989297,-24320.0,3904.0,270.000)
call CreateUnit(rT,1747989297,-23552.0,-4544.0,270.000)
call CreateUnit(rT,1747989297,-23360.0,-64.0,270.000)
call CreateUnit(rT,1747989297,2176.0,-7744.0,270.000)
call CreateUnit(rT,1747989297,-6336.0,8000.0,270.000)
call CreateUnit(rT,1747989297,832.0,-5568.0,270.000)
call CreateUnit(rT,1747989297,-3648.0,1856.0,270.000)
call CreateUnit(rT,1747989042,-768.0,24384.0,270.000)
call CreateUnit(rT,1747989297,-26304.0,-8704.0,270.000)
call CreateUnit(rT,1747989297,2688.0,-3008.0,270.000)
call CreateUnit(rT,1747989297,-5568.0,-2752.0,270.000)
call CreateUnit(rT,1747989297,-3456.0,-2880.0,270.000)
call CreateUnit(rT,1747989297,-6464.0,1280.0,270.000)
call CreateUnit(rT,1747989297,-8064.0,3200.0,270.000)
call CreateUnit(rT,1747989297,-8768.0,1984.0,270.000)
call CreateUnit(rT,1747989297,-7104.0,-768.0,270.000)
call CreateUnit(rT,1747989297,-28544.0,0.0,270.000)
call CreateUnit(rT,1747989297,-27840.0,-2752.0,270.000)
call CreateUnit(rT,1747989297,-27008.0,2688.0,270.000)
call CreateUnit(rT,1747989297,-17024.0,512.0,270.000)
call CreateUnit(rT,1747989297,-21696.0,-4224.0,270.000)
call CreateUnit(rT,1747989042,17536.0,-9024.0,270.000)
call CreateUnit(rT,1747989297,10816.0,-7360.0,270.000)
call CreateUnit(rT,1747989297,12800.0,-6912.0,270.000)
call CreateUnit(rT,1747989297,15488.0,-7552.0,270.000)
call CreateUnit(rT,1747989297,19072.0,-7424.0,270.000)
call CreateUnit(rT,1747989297,15360.0,-5568.0,270.000)
call CreateUnit(rT,1747989297,17216.0,-8640.0,270.000)
call CreateUnit(rT,1747989297,16960.0,-16192.0,270.000)
call CreateUnit(rT,1747989297,6976.0,-6592.0,270.000)
call CreateUnit(rT,1747989297,24000.0,256.0,270.000)
call CreateUnit(rT,1747989297,-10688.0,-384.0,270.000)
call CreateUnit(rT,1747989297,13952.0,-11008.0,270.000)
call CreateUnit(rT,1747989297,-10944.0,-4608.0,270.000)
call CreateUnit(rT,1747989297,-21440.0,-8384.0,270.000)
call CreateUnit(rT,1747989297,17472.0,9472.0,270.000)
call CreateUnit(rT,1747989297,-16768.0,-8064.0,270.000)
call CreateUnit(rT,1747989297,-9920.0,-11264.0,270.000)
call CreateUnit(rT,1747989297,-7488.0,-16256.0,270.000)
call CreateUnit(rT,1747989297,448.0,-17600.0,270.000)
call CreateUnit(rT,1747989297,11008.0,-18496.0,270.000)
call CreateUnit(rT,1747989297,13248.0,-17856.0,270.000)
call CreateUnit(rT,1747989297,12288.0,-20864.0,270.000)
call CreateUnit(rT,1747989297,-11456.0,11008.0,270.000)
call CreateUnit(rT,1747989297,-8640.0,7104.0,270.000)
call CreateUnit(rT,1747989297,-7360.0,17088.0,270.000)
call CreateUnit(rT,1747989297,-5120.0,14528.0,270.000)
call CreateUnit(rT,1747989297,15488.0,-26816.0,270.000)
call CreateUnit(rT,1747989297,-9600.0,13120.0,270.000)
call CreateUnit(rT,1747989297,-11456.0,14528.0,270.000)
call CreateUnit(rT,1747989297,-12544.0,16320.0,270.000)
call CreateUnit(rT,1747989297,-7680.0,22272.0,270.000)
call CreateUnit(rT,1747989297,-6272.0,21376.0,270.000)
call CreateUnit(rT,1747989297,-4992.0,21888.0,270.000)
call CreateUnit(rT,1747989297,-1280.0,23936.0,270.000)
call CreateUnit(rT,1747989297,-3328.0,23232.0,270.000)
call CreateUnit(rT,1747989297,-2560.0,26368.0,270.000)
call CreateUnit(rT,1747989297,-6528.0,28288.0,270.000)
call CreateUnit(rT,1747989297,-9856.0,28416.0,270.000)
call CreateUnit(rT,1747989297,-13376.0,15104.0,270.000)
call CreateUnit(rT,1747989297,-10688.0,3520.0,270.000)
call CreateUnit(rT,1747989297,-9856.0,5440.0,270.000)
call CreateUnit(rT,1747989297,-6720.0,4096.0,270.000)
call CreateUnit(rT,1747989297,-13632.0,2368.0,270.000)
call CreateUnit(rT,1747989297,-10496.0,17728.0,270.000)
call CreateUnit(rT,1747989297,-7616.0,11200.0,270.000)
call CreateUnit(rT,1747989297,-18688.0,5760.0,270.000)
call CreateUnit(rT,1747989297,-25024.0,-3008.0,270.000)
call CreateUnit(rT,1747989297,-20096.0,1408.0,270.000)
call CreateUnit(rT,1747989297,-7040.0,-7808.0,270.000)
call CreateUnit(rT,1747989297,-5376.0,-9216.0,270.000)
call CreateUnit(rT,1747989297,24896.0,-27456.0,270.000)
call CreateUnit(rT,1747989297,-20352.0,12224.0,270.000)
call CreateUnit(rT,1747989297,-13568.0,5184.0,270.000)
call CreateUnit(rT,1747989297,-5120.0,24576.0,270.000)
call CreateUnit(rT,1747989297,-1856.0,27776.0,270.000)
call CreateUnit(rT,1747989297,-16704.0,24192.0,270.000)
call CreateUnit(rT,1747989297,-15936.0,17088.0,270.000)
call CreateUnit(rT,1747989297,-17792.0,16064.0,270.000)
call CreateUnit(rT,1747989297,-20224.0,21632.0,270.000)
call CreateUnit(rT,1747989297,-22400.0,19968.0,270.000)
call CreateUnit(rT,1747989297,-15872.0,20544.0,270.000)
call CreateUnit(rT,1747989297,-19776.0,16512.0,270.000)
call CreateUnit(rT,1747989297,-17088.0,12672.0,270.000)
call CreateUnit(rT,1747989297,-18560.0,19712.0,270.000)
call CreateUnit(rT,1747989297,-15680.0,26112.0,270.000)
call CreateUnit(rT,1747989297,-17088.0,26816.0,270.000)
call CreateUnit(rT,1747989297,-16704.0,3584.0,270.000)
call CreateUnit(rT,1747989297,-11456.0,7232.0,270.000)
call CreateUnit(rT,1747989297,-18176.0,10816.0,270.000)
call CreateUnit(rT,1747989297,-16000.0,6016.0,270.000)
call CreateUnit(rT,1747989297,-8896.0,26688.0,270.000)
call CreateUnit(rT,1747989297,9216.0,-4416.0,270.000)
call CreateUnit(rT,1747989297,6656.0,-4480.0,270.000)
call CreateUnit(rT,1747989297,5184.0,-1856.0,270.000)
call CreateUnit(rT,1747989297,18624.0,-448.0,270.000)
call CreateUnit(rT,1747989297,11008.0,-1984.0,270.000)
call CreateUnit(rT,1747989297,14144.0,-128.0,270.000)
call CreateUnit(rT,1747989297,8384.0,-10368.0,270.000)
call CreateUnit(rT,1747989297,5376.0,-12224.0,270.000)
call CreateUnit(rT,1747989297,3392.0,-7296.0,270.000)
call CreateUnit(rT,1747989297,12672.0,-3904.0,270.000)
call CreateUnit(rT,1747989297,27008.0,-11520.0,270.000)
call CreateUnit(rT,1747989297,-25216.0,1472.0,270.000)
call CreateUnit(rT,1747989297,23552.0,11072.0,270.000)
call CreateUnit(rT,1747989297,-20736.0,-2112.0,270.000)
call CreateUnit(rT,1747989297,-22592.0,2560.0,270.000)
call CreateUnit(rT,1747989297,-20864.0,3136.0,270.000)
call CreateUnit(rT,1747989297,-17280.0,-3136.0,270.000)
call CreateUnit(rT,1747989297,-3584.0,4608.0,270.000)
call CreateUnit(rT,1747989297,1536.0,29440.0,270.000)
call CreateUnit(rT,1747989297,-23104.0,-8832.0,270.000)
call CreateUnit(rT,1747989297,1216.0,-960.0,270.000)
call CreateUnit(rT,1747989297,-13312.0,-8512.0,270.000)
call CreateUnit(rT,1747989297,26240.0,-2688.0,270.000)
call CreateUnit(rT,1747989043,-7872.0,17536.0,270.000)
call CreateUnit(rT,1747989297,-13568.0,12160.0,270.000)
call CreateUnit(rT,1747989297,-13696.0,8064.0,270.000)
call CreateUnit(rT,1747989297,27648.0,-5824.0,270.000)
call CreateUnit(rT,1747989297,-4544.0,11648.0,270.000)
call CreateUnit(rT,1747989297,28992.0,-3200.0,270.000)
call CreateUnit(rT,1747989297,-3072.0,8320.0,270.000)
call CreateUnit(rT,1747989297,-384.0,8512.0,270.000)
call CreateUnit(rT,1747989297,28224.0,2752.0,270.000)
call CreateUnit(rT,1747989297,-4992.0,17280.0,270.000)
call CreateUnit(rT,1747989297,64.0,12608.0,270.000)
call CreateUnit(rT,1747989297,-2112.0,13696.0,270.000)
call CreateUnit(rT,1747989297,4160.0,5376.0,270.000)
call CreateUnit(rT,1747989297,4224.0,3904.0,270.000)
call CreateUnit(rT,1747989297,7232.0,2240.0,270.000)
call CreateUnit(rT,1747989297,-384.0,3072.0,270.000)
call CreateUnit(rT,1747989297,-8128.0,19968.0,270.000)
call CreateUnit(rT,1747989297,3072.0,192.0,270.000)
call CreateUnit(rT,1747989297,832.0,15872.0,270.000)
call CreateUnit(rT,1747989297,-2304.0,16064.0,270.000)
call CreateUnit(rT,1747989297,4416.0,19648.0,270.000)
call CreateUnit(rT,1747989297,1792.0,6976.0,270.000)
call CreateUnit(rT,1747989297,5888.0,24960.0,270.000)
call CreateUnit(rT,1747989297,-1792.0,19200.0,270.000)
call CreateUnit(rT,1747989297,3008.0,22784.0,270.000)
call CreateUnit(rT,1747989297,3200.0,18240.0,270.000)
call CreateUnit(rT,1747989297,-3712.0,-6528.0,270.000)
call CreateUnit(rT,1747989297,-17216.0,22208.0,270.000)
call CreateUnit(rT,1747989297,-18880.0,17920.0,270.000)
call CreateUnit(rT,1747989297,-17280.0,18304.0,270.000)
call CreateUnit(rT,1747989297,-22272.0,22400.0,270.000)
call CreateUnit(rT,1747989297,-10496.0,-9152.0,270.000)
call CreateUnit(rT,1747989297,13248.0,5120.0,270.000)
call CreateUnit(rT,1747989297,7936.0,-2368.0,270.000)
call CreateUnit(rT,1747989297,3520.0,27008.0,270.000)
call CreateUnit(rT,1747989297,8832.0,26368.0,270.000)
call CreateUnit(rT,1747989297,6848.0,21440.0,270.000)
call CreateUnit(rT,1747989297,6144.0,18560.0,270.000)
call CreateUnit(rT,1747989297,3904.0,11072.0,270.000)
call CreateUnit(rT,1747989297,8512.0,12352.0,270.000)
call CreateUnit(rT,1747989297,9280.0,20032.0,270.000)
call CreateUnit(rT,1747989297,1216.0,11008.0,270.000)
call CreateUnit(rT,1747989044,-15680.0,11200.0,270.000)
call CreateUnit(rT,1747989044,-15104.0,17408.0,270.000)
call CreateUnit(rT,1747989045,-1728.0,28608.0,270.000)
call CreateUnit(rT,1747989043,-18304.0,18112.0,270.000)
call CreateUnit(rT,1747989044,-9600.0,13888.0,270.000)
call CreateUnit(rT,1747989297,384.0,19456.0,270.000)
call CreateUnit(rT,1747989044,4864.0,5952.0,270.000)
call CreateUnit(rT,1747989044,8000.0,-1664.0,270.000)
call CreateUnit(rT,1747989044,9280.0,-3008.0,270.000)
call CreateUnit(rT,1747989045,-21056.0,21056.0,270.000)
call CreateUnit(rT,1747989045,-19648.0,12224.0,270.000)
call CreateUnit(rT,1747989045,17984.0,-13120.0,270.000)
call CreateUnit(rT,1747989042,-28544.0,704.0,270.000)
call CreateUnit(rT,1747989045,-9344.0,7168.0,270.000)
call CreateUnit(rT,1747989043,-6336.0,8576.0,270.000)
call CreateUnit(rT,1747989045,-15616.0,21248.0,270.000)
call CreateUnit(rT,1747989045,-16640.0,1024.0,270.000)
call CreateUnit(rT,1747989045,13760.0,-11584.0,270.000)
call CreateUnit(rT,1747989042,-11328.0,3712.0,270.000)
call CreateUnit(rT,1747989042,-16768.0,25920.0,270.000)
call CreateUnit(rT,1747989045,-19200.0,28352.0,270.000)
call CreateUnit(rT,1747989043,3456.0,11584.0,270.000)
call CreateUnit(rT,1747989044,-24640.0,4352.0,270.000)
call CreateUnit(rT,1747989044,-23232.0,-5120.0,270.000)
call CreateUnit(rT,1747989042,-23424.0,768.0,270.000)
call CreateUnit(rT,1747989045,-15936.0,-2688.0,270.000)
call CreateUnit(rT,1747989045,-10752.0,-3456.0,270.000)
call CreateUnit(rT,1747989044,-7552.0,4416.0,270.000)
call CreateUnit(rT,1747989045,-20160.0,-1600.0,270.000)
call CreateUnit(rT,1747989045,-21824.0,2560.0,270.000)
call CreateUnit(rT,1747989045,11392.0,-7104.0,270.000)
call CreateUnit(rT,1747989042,4352.0,20224.0,270.000)
call CreateUnit(rT,1747989044,-15360.0,4992.0,270.000)
call CreateUnit(rT,1747989042,-896.0,3392.0,270.000)
call CreateUnit(rT,1747989045,-6528.0,-832.0,270.000)
call CreateUnit(rT,1747989043,-4928.0,-3264.0,270.000)
call CreateUnit(rT,1747989042,-6144.0,-8192.0,270.000)
call CreateUnit(rT,1747989043,23424.0,640.0,270.000)
call CreateUnit(rT,1747989043,-6976.0,1344.0,270.000)
call CreateUnit(rT,1747989043,4352.0,128.0,270.000)
call CreateUnit(rT,1747989297,17472.0,19648.0,270.000)
call CreateUnit(rT,1747989044,-7872.0,22784.0,270.000)
call CreateUnit(rT,1747989297,20864.0,21504.0,270.000)
call CreateUnit(rT,1747989044,-9152.0,28480.0,270.000)
call CreateUnit(rT,1747989042,-27712.0,-9536.0,270.000)
call CreateUnit(rT,1747989042,4800.0,-12480.0,270.000)
call CreateUnit(rT,1747989045,7232.0,-11328.0,270.000)
call CreateUnit(rT,1747989045,1792.0,-8064.0,270.000)
call CreateUnit(rT,1747989297,-1600.0,5952.0,270.000)
call CreateUnit(rT,1747989043,-128.0,-1792.0,270.000)
call CreateUnit(rT,1747989042,-3392.0,8640.0,270.000)
call CreateUnit(rT,1747989044,-1856.0,16576.0,270.000)
call CreateUnit(rT,1747989043,-13888.0,14784.0,270.000)
call CreateUnit(rT,1747989297,-29568.0,-9792.0,270.000)
call CreateUnit(rT,1747989043,-9088.0,26240.0,270.000)
call CreateUnit(rT,1747989045,-5440.0,23808.0,270.000)
call CreateUnit(rT,1747989045,2176.0,30080.0,270.000)
call CreateUnit(rT,1747989043,1984.0,6464.0,270.000)
call CreateUnit(rT,1747989297,-26304.0,-1408.0,270.000)
call CreateUnit(rT,1747989043,448.0,13056.0,270.000)
call CreateUnit(rT,1747989045,3072.0,26752.0,270.000)
call CreateUnit(rT,1747989043,6656.0,18880.0,270.000)
call CreateUnit(rT,1747989043,3264.0,-3712.0,270.000)
call CreateUnit(rT,1747989297,15872.0,5760.0,270.000)
call CreateUnit(rT,1747989043,6528.0,22080.0,270.000)
call CreateUnit(rT,1747989044,8896.0,27008.0,270.000)
call CreateUnit(rT,1747989297,18496.0,-17280.0,270.000)
call CreateUnit(rT,1747989297,11392.0,7872.0,270.000)
call CreateUnit(rT,1747989297,12672.0,11328.0,270.000)
call CreateUnit(rT,1747989297,6016.0,12416.0,270.000)
call CreateUnit(rT,1747989297,7104.0,7808.0,270.000)
call CreateUnit(rT,1747989297,20864.0,2688.0,270.000)
call CreateUnit(rT,1747989297,24000.0,2560.0,270.000)
call CreateUnit(rT,1747989297,19648.0,11328.0,270.000)
call CreateUnit(rT,1747989297,11584.0,16960.0,270.000)
call CreateUnit(rT,1747989297,18496.0,-13248.0,270.000)
call CreateUnit(rT,1747989297,17216.0,-11456.0,270.000)
call CreateUnit(rT,1747989297,25088.0,-8320.0,270.000)
call CreateUnit(rT,1747989297,15680.0,-17536.0,270.000)
call CreateUnit(rT,1747989297,16640.0,-14208.0,270.000)
call CreateUnit(rT,1747989297,17280.0,-19584.0,270.000)
call CreateUnit(rT,1747989297,22912.0,-10240.0,270.000)
call CreateUnit(rT,1747989297,20864.0,-23040.0,270.000)
call CreateUnit(rT,1747989044,13120.0,-21696.0,270.000)
call CreateUnit(rT,1747989297,20096.0,-5760.0,270.000)
call CreateUnit(rT,1747989297,18816.0,-3776.0,270.000)
call CreateUnit(rT,1747989042,14464.0,-26432.0,270.000)
call CreateUnit(rT,1747989044,23808.0,-27776.0,270.000)
call CreateUnit(rT,1747989042,11776.0,-18688.0,270.000)
call CreateUnit(rT,1747989043,256.0,-18048.0,270.000)
call CreateUnit(rT,1747989045,-16192.0,-8192.0,270.000)
call CreateUnit(rT,1747989045,-11520.0,-10944.0,270.000)
call CreateUnit(rT,1747989045,16512.0,-19968.0,270.000)
call CreateUnit(rT,1747989045,20416.0,-22272.0,270.000)
call CreateUnit(rT,1747989044,28800.0,-11904.0,270.000)
call CreateUnit(rT,1747989297,15040.0,23104.0,270.000)
call CreateUnit(rT,1747989044,8128.0,12928.0,270.000)
call CreateUnit(rT,1747989044,16896.0,-15744.0,270.000)
call CreateUnit(rT,1747989042,17984.0,-640.0,270.000)
call CreateUnit(rT,1747989045,20608.0,3136.0,270.000)
call CreateUnit(rT,1747989045,7232.0,-5120.0,270.000)
call CreateUnit(rT,1747989045,25984.0,-8128.0,270.000)
call CreateUnit(rT,1747989045,20544.0,-5440.0,270.000)
call CreateUnit(rT,1747989045,11968.0,17856.0,270.000)
call CreateUnit(rT,1747989045,10048.0,20032.0,270.000)
call CreateUnit(rT,1747989043,15296.0,-7232.0,270.000)
call CreateUnit(rT,1747989043,13056.0,11776.0,270.000)
call CreateUnit(rT,1747989043,15744.0,23488.0,270.000)
call CreateUnit(rT,1747989043,17984.0,9280.0,270.000)
set rT=null
endfunction
function CR takes nothing returns nothing
local player LR=Player(19)
local unit XR=CreateUnit(LR,1211118391,-29820.0,29950.4,269.903)
call SetHeroLevel(XR,15,false)
call SetUnitState(XR,UNIT_STATE_MANA,85.)
set XR=CreateUnit(LR,1211118406,-29707.1,29309.8,269.793)
call SetHeroLevel(XR,15,false)
set LR=null
set XR=null
endfunction
function Cf takes nothing returns nothing
local player Lf=Player(2)
local unit Xf=CreateUnit(Lf,1211118391,-30324.4,30466.1,270.380)
call SetHeroLevel(Xf,15,false)
call SetUnitState(Xf,UNIT_STATE_MANA,85.)
set Xf=CreateUnit(Lf,1211118406,-30346.6,29573.7,270.406)
call SetHeroLevel(Xf,15,false)
set Lf=null
set Xf=null
endfunction
function DR takes nothing returns nothing
local player PR=Player(17)
local unit AR=CreateUnit(PR,1211118391,-29951.6,30084.7,270.028)
call SetHeroLevel(AR,15,false)
call SetUnitState(AR,UNIT_STATE_MANA,85.)
set AR=CreateUnit(PR,1211118406,-29862.1,29302.2,269.942)
call SetHeroLevel(AR,15,false)
set PR=null
set AR=null
endfunction
function Df takes nothing returns nothing
local player Pf=Player(0)
local unit Af=CreateUnit(Pf,1211118391,-30470.9,30602.5,270.516)
call SetHeroLevel(Af,15,false)
call SetUnitState(Af,UNIT_STATE_MANA,85.)
set Af=CreateUnit(Pf,1211118406,-30360.2,29312.6,270.421)
call SetHeroLevel(Af,15,false)
set Pf=null
set Af=null
endfunction
function ER takes nothing returns nothing
local player QR=Player(15)
local unit WR=CreateUnit(QR,1211118391,-30467.2,29834.7,270.519)
call SetHeroLevel(WR,15,false)
call SetUnitState(WR,UNIT_STATE_MANA,85.)
set WR=CreateUnit(QR,1211118406,-29874.4,29559.4,269.954)
call SetHeroLevel(WR,15,false)
set QR=null
set WR=null
endfunction
function IR takes nothing returns nothing
local player ZR=Player(16)
local unit UR=CreateUnit(ZR,1211118391,-30203.1,29826.8,270.268)
call SetHeroLevel(UR,15,false)
call SetUnitState(UR,UNIT_STATE_MANA,85.)
set UR=CreateUnit(ZR,1211118406,-29780.4,29300.3,269.864)
call SetHeroLevel(UR,15,false)
set ZR=null
set UR=null
endfunction
function KR takes nothing returns nothing
local player HR=Player(18)
local unit JR=CreateUnit(HR,1211118391,-29691.7,30077.9,269.782)
call SetHeroLevel(JR,15,false)
call SetUnitState(JR,UNIT_STATE_MANA,85.)
set JR=CreateUnit(HR,1211118406,-29792.0,29571.7,269.875)
call SetHeroLevel(JR,15,false)
set HR=null
set JR=null
endfunction
function Kf takes nothing returns nothing
local player Hf=Player(1)
local unit Jf=CreateUnit(Hf,1211118391,-30205.9,30601.1,270.267)
call SetHeroLevel(Jf,15,false)
call SetUnitState(Jf,UNIT_STATE_MANA,85.)
set Jf=CreateUnit(Hf,1211118406,-30199.1,29448.7,270.266)
call SetHeroLevel(Jf,15,false)
set Hf=null
set Jf=null
endfunction
function NR takes nothing returns nothing
local player VR=Player(22)
local unit BR=CreateUnit(VR,1211118391,-29948.2,29831.1,270.025)
call SetHeroLevel(BR,15,false)
call SetUnitState(BR,UNIT_STATE_MANA,85.)
set BR=CreateUnit(VR,1211118406,-29699.3,29565.4,269.787)
call SetHeroLevel(BR,15,false)
set VR=null
set BR=null
endfunction
function Nf takes nothing returns nothing
local player Vf=Player(3)
local unit Bf=CreateUnit(Vf,1211118391,-30468.2,30345.3,270.516)
call SetHeroLevel(Bf,15,false)
call SetUnitState(Bf,UNIT_STATE_MANA,85.)
set Bf=CreateUnit(Vf,1211118406,-30252.3,29576.9,270.316)
call SetHeroLevel(Bf,15,false)
set Vf=null
set Bf=null
endfunction
function YR takes nothing returns nothing
local player RR=Player(11)
local unit TR=CreateUnit(RR,1211118391,-29827.0,30210.1,269.911)
call SetHeroLevel(TR,15,false)
call SetUnitState(TR,UNIT_STATE_MANA,85.)
set TR=CreateUnit(RR,1211118406,-30125.9,29321.4,270.196)
call SetHeroLevel(TR,15,false)
set RR=null
set TR=null
endfunction
function aR takes nothing returns nothing
local player eR=Player(9)
local unit qR=CreateUnit(eR,1211118391,-29693.5,30338.3,269.785)
call SetHeroLevel(qR,15,false)
call SetUnitState(qR,UNIT_STATE_MANA,85.)
set qR=CreateUnit(eR,1211118406,-30045.2,29554.8,270.118)
call SetHeroLevel(qR,15,false)
set eR=null
set qR=null
endfunction
function cR takes nothing returns nothing
local player iR=Player(6)
local unit SR=CreateUnit(iR,1211118391,-29693.7,30597.0,269.786)
call SetHeroLevel(SR,15,false)
call SetUnitState(SR,UNIT_STATE_MANA,85.)
set SR=CreateUnit(iR,1211118406,-30199.8,29310.0,270.267)
call SetHeroLevel(SR,15,false)
set iR=null
set SR=null
endfunction
function fR takes nothing returns nothing
local player nR=Player(10)
local unit dR=CreateUnit(nR,1211118391,-30338.2,30210.1,270.394)
call SetHeroLevel(dR,15,false)
call SetUnitState(dR,UNIT_STATE_MANA,85.)
set dR=CreateUnit(nR,1211118406,-29904.6,29442.8,269.983)
call SetHeroLevel(dR,15,false)
set nR=null
set dR=null
endfunction
function hR takes nothing returns nothing
local player GR=Player(12)
local unit gR=CreateUnit(GR,1211118391,-30464.7,30089.7,270.515)
call SetHeroLevel(gR,15,false)
call SetUnitState(gR,UNIT_STATE_MANA,85.)
set gR=CreateUnit(GR,1211118406,-29962.2,29311.8,270.038)
call SetHeroLevel(gR,15,false)
set GR=null
set gR=null
endfunction
function jR takes nothing returns nothing
local player FR=Player(13)
local unit kR=CreateUnit(FR,1211118391,-30204.3,30080.3,270.268)
call SetHeroLevel(kR,15,false)
call SetUnitState(kR,UNIT_STATE_MANA,85.)
set kR=CreateUnit(FR,1211118406,-30039.0,29306.5,270.112)
call SetHeroLevel(kR,15,false)
set FR=null
set kR=null
endfunction
function lR takes nothing returns nothing
local player oR=Player(7)
local unit OR=CreateUnit(oR,1211118391,-29818.2,30468.8,269.903)
call SetHeroLevel(OR,15,false)
call SetUnitState(OR,UNIT_STATE_MANA,85.)
set OR=CreateUnit(oR,1211118406,-29998.9,29444.3,270.074)
call SetHeroLevel(OR,15,false)
set oR=null
set OR=null
endfunction
function mR takes nothing returns nothing
local player xR=Player(14)
local unit vR=CreateUnit(xR,1211118391,-30339.8,29950.4,270.397)
call SetHeroLevel(vR,15,false)
call SetUnitState(vR,UNIT_STATE_MANA,85.)
set vR=CreateUnit(xR,1211118406,-29968.7,29556.2,270.045)
call SetHeroLevel(vR,15,false)
set xR=null
set vR=null
endfunction
function pR takes nothing returns nothing
local player bR=Player(8)
local unit yR=CreateUnit(bR,1211118391,-29946.0,30342.9,270.023)
call SetHeroLevel(yR,15,false)
call SetUnitState(yR,UNIT_STATE_MANA,85.)
set yR=CreateUnit(bR,1211118406,-30137.9,29561.1,270.206)
call SetHeroLevel(yR,15,false)
set bR=null
set yR=null
endfunction
function tR takes nothing returns nothing
local player rR=Player(5)
local unit sR=CreateUnit(rR,1211118391,-29950.2,30589.5,270.027)
call SetHeroLevel(sR,15,false)
call SetUnitState(sR,UNIT_STATE_MANA,85.)
set sR=CreateUnit(rR,1211118406,-30283.9,29308.8,270.348)
call SetHeroLevel(sR,15,false)
set rR=null
set sR=null
endfunction
function uR takes nothing returns nothing
local player Mf=Player(4)
local unit wR=CreateUnit(Mf,1211118391,-30204.6,30339.2,270.267)
call SetHeroLevel(wR,15,false)
call SetUnitState(wR,UNIT_STATE_MANA,85.)
set wR=CreateUnit(Mf,1211118406,-30106.5,29439.8,270.177)
call SetHeroLevel(wR,15,false)
set Mf=null
set wR=null
endfunction
function uT takes nothing returns nothing
local player MR=Player(23)
local unit wT=CreateUnit(MR,1211118391,-29689.5,29824.6,269.779)
call SetHeroLevel(wT,15,false)
call SetUnitState(wT,UNIT_STATE_MANA,85.)
set wT=CreateUnit(MR,1211118406,-29815.4,29434.4,269.898)
call SetHeroLevel(wT,15,false)
set MR=null
set wT=null
endfunction
function tT takes nothing returns nothing
call Df()
call Kf()
call Cf()
call Nf()
call uR()
call tR()
call cR()
call lR()
call pR()
call aR()
call fR()
call YR()
call hR()
call jR()
call mR()
call ER()
call IR()
call DR()
call KR()
call CR()
call NR()
call uT()
endfunction
function main takes nothing returns nothing
local trigger mK
local trigger QK
local trigger WK
call Zf()
call SetCameraBounds((-30720.0)+GetCameraMargin(CAMERA_MARGIN_LEFT),(-30720.0)+GetCameraMargin(CAMERA_MARGIN_BOTTOM),30720.0-GetCameraMargin(CAMERA_MARGIN_RIGHT),30720.0-GetCameraMargin(CAMERA_MARGIN_TOP),(-30720.0)+GetCameraMargin(CAMERA_MARGIN_LEFT),30720.0-GetCameraMargin(CAMERA_MARGIN_TOP),30720.0-GetCameraMargin(CAMERA_MARGIN_RIGHT),(-30720.0)+GetCameraMargin(CAMERA_MARGIN_BOTTOM))
call SetDayNightModels("Environment\\DNC\\DNCLordaeron\\DNCLordaeronTerrain\\DNCLordaeronTerrain.mdl","Environment\\DNC\\DNCLordaeron\\DNCLordaeronUnit\\DNCLordaeronUnit.mdl")
call NewSoundEnvironment("Default")
call SetAmbientDaySound("LordaeronSummerDay")
call SetAmbientNightSound("LordaeronSummerNight")
call SetMapMusic("Music",true,0)
set fs=CreateSound("Sound\\Interface\\Warning.wav",false,false,false,10,10,"")
call SetSoundParamsFromLabel(fs,"Warning")
call SetSoundDuration(fs,1903)
set q=Rect(11872.0,-24096.0,13376.0,-18304.0)
set a=Rect(14080.0,-30720.0,16256.0,-25664.0)
set n=Rect(12096.0,-26240.0,14944.0,-23776.0)
set d=Rect(-17120.0,15936.0,-15520.0,17408.0)
call Rect(-29824.0,-30080.0,-29312.0,-28672.0)
call Rect(-29216.0,-30112.0,-28672.0,-28672.0)
call Rect(-25984.0,-29760.0,-24992.0,-29504.0)
call Rect(-25984.0,-30080.0,-25472.0,-29824.0)
call Rect(-25984.0,-30400.0,-25472.0,-30144.0)
call Rect(-26464.0,-30048.0,-26176.0,-29056.0)
call Rect(-25440.0,-30368.0,-25184.0,-29856.0)
call Rect(-25184.0,-30368.0,-24928.0,-29856.0)
call Rect(-24672.0,-29568.0,-24064.0,-28800.0)
call Rect(-24704.0,-30208.0,-24064.0,-29696.0)
set f=Rect(-17408.0,22016.0,-17056.0,22368.0)
set R=Rect(-19072.0,17728.0,-18688.0,18080.0)
set T=Rect(-22464.0,22208.0,-22112.0,22560.0)
set Y=Rect(-3776.0,4416.0,-3392.0,4768.0)
set G=Rect(-3872.0,1664.0,-3456.0,2016.0)
set g=Rect(-416.0,-2592.0,-128.0,-2272.0)
set h=Rect(4992.0,-2016.0,5344.0,-1696.0)
set F=Rect(2528.0,-3168.0,2848.0,-2880.0)
set k=Rect(7744.0,-2528.0,8096.0,-2208.0)
set j=Rect(-17504.0,18080.0,-17056.0,18496.0)
set x=Rect(1024.0,-1120.0,1376.0,-800.0)
set v=Rect(-3328.0,8096.0,-2848.0,8512.0)
set m=Rect(-4704.0,11488.0,-4416.0,11776.0)
set Q=Rect(-640.0,8288.0,-160.0,8704.0)
set W=Rect(-5184.0,17120.0,-4832.0,17440.0)
set E=Rect(-96.0,12448.0,224.0,12768.0)
set Z=Rect(-2272.0,13536.0,-1984.0,13856.0)
set U=Rect(7008.0,1984.0,7456.0,2432.0)
set I=Rect(4032.0,3744.0,4416.0,4064.0)
set P=Rect(4000.0,5216.0,4320.0,5536.0)
set A=Rect(-576.0,2880.0,-224.0,3232.0)
set D=Rect(-8288.0,19776.0,-7936.0,20160.0)
set H=Rect(-6464.0,21184.0,-6080.0,21568.0)
set J=Rect(-7904.0,22048.0,-7488.0,22464.0)
set K=Rect(-5344.0,14304.0,-4960.0,14720.0)
set L=Rect(2880.0,32.0,3264.0,352.0)
set X=Rect(608.0,15680.0,992.0,16096.0)
set C=Rect(-2496.0,15872.0,-2112.0,16224.0)
set V=Rect(1056.0,10848.0,1344.0,11136.0)
set B=Rect(1600.0,6784.0,1984.0,7136.0)
set N=Rect(224.0,19296.0,544.0,19648.0)
set M=Rect(2784.0,22592.0,3200.0,22944.0)
set ww=Rect(-1984.0,19008.0,-1600.0,19360.0)
set uw=Rect(3008.0,18048.0,3392.0,18400.0)
call Rect(-28544.0,-30080.0,-28064.0,-29344.0)
call Rect(-27744.0,-30080.0,-27456.0,-29760.0)
set rw=Rect(4224.0,19488.0,4608.0,19776.0)
set sw=Rect(13056.0,4960.0,13408.0,5280.0)
set tw=Rect(5696.0,24768.0,6048.0,25088.0)
set iw=Rect(3328.0,26816.0,3680.0,27168.0)
set Sw=Rect(8608.0,26144.0,9024.0,26528.0)
set cw=Rect(6656.0,21248.0,7008.0,21600.0)
set ow=Rect(-16640.0,10368.0,-13504.0,13056.0)
set Ow=Rect(-18944.0,5312.0,-16864.0,7328.0)
set lw=Rect(-28032.0,-1120.0,-22464.0,640.0)
set bw=Rect(-27264.0,2784.0,-26208.0,3328.0)
set yw=Rect(-26912.0,-4320.0,-23872.0,-2976.0)
set pw=Rect(-19328.0,-288.0,-18592.0,1568.0)
set ew=Rect(-11936.0,7616.0,-448.0,11424.0)
set qw=Rect(-1664.0,1216.0,6848.0,7776.0)
set aw=Rect(-5472.0,24704.0,-3232.0,27616.0)
set nw=Rect(3744.0,10880.0,4064.0,11232.0)
set dw=Rect(-12064.0,11392.0,-8832.0,16576.0)
set fw=Rect(-8832.0,10176.0,23520.0,17760.0)
set Rw=Rect(4384.0,17728.0,23424.0,27040.0)
set Tw=Rect(-10688.0,17536.0,-10304.0,17888.0)
set Yw=Rect(-10688.0,-9312.0,-10336.0,-9024.0)
set Gw=Rect(17280.0,9280.0,17632.0,9632.0)
set gw=Rect(8352.0,12192.0,8672.0,12512.0)
set hw=Rect(5952.0,18400.0,6304.0,18688.0)
set Fw=Rect(9120.0,19872.0,9408.0,20192.0)
set kw=Rect(23328.0,-14080.0,30688.0,17792.0)
set jw=Rect(13984.0,-288.0,14336.0,0.0)
set xw=Rect(10624.0,-7552.0,11008.0,-7200.0)
set vw=Rect(15168.0,-5792.0,15552.0,-5408.0)
set mw=Rect(15328.0,-7712.0,15648.0,-7424.0)
set Qw=Rect(12640.0,-7104.0,12992.0,-6752.0)
set Ww=Rect(17056.0,-8800.0,17376.0,-8512.0)
set Ew=Rect(18432.0,-608.0,18784.0,-320.0)
set Zw=Rect(13760.0,-11168.0,14112.0,-10752.0)
set Uw=Rect(16768.0,-16416.0,17120.0,-16032.0)
set Iw=Rect(18880.0,-7616.0,19232.0,-7296.0)
set Pw=Rect(6816.0,-6752.0,7136.0,-6464.0)
set Aw=Rect(12512.0,-4064.0,12832.0,-3712.0)
set Dw=Rect(9056.0,-4576.0,9344.0,-4288.0)
set Hw=Rect(-26464.0,-8896.0,-26144.0,-8544.0)
set Jw=Rect(-21632.0,-8544.0,-21248.0,-8224.0)
set Kw=Rect(-16928.0,-8224.0,-16608.0,-7904.0)
set Lw=Rect(-10112.0,-11424.0,-9760.0,-11136.0)
set Xw=Rect(-7680.0,-16416.0,-7328.0,-16128.0)
set Cw=Rect(288.0,-17760.0,608.0,-17472.0)
set Vw=Rect(9248.0,-21376.0,9984.0,-20640.0)
set Bw=Rect(24704.0,-27648.0,25088.0,-27264.0)
set Nw=Rect(10816.0,-18688.0,11168.0,-18304.0)
set Mw=Rect(13056.0,-18016.0,13408.0,-17760.0)
set wu=Rect(12096.0,-21024.0,12448.0,-20704.0)
set uu=Rect(15680.0,5600.0,16032.0,5920.0)
set ru=Rect(6944.0,7648.0,7264.0,7968.0)
set su=Rect(5824.0,12256.0,6176.0,12576.0)
set tu=Rect(11200.0,7712.0,11552.0,8064.0)
set iu=Rect(12480.0,11136.0,12832.0,11456.0)
set Su=Rect(14880.0,22944.0,15200.0,23232.0)
set cu=Rect(11392.0,16768.0,11744.0,17088.0)
set ou=Rect(23840.0,96.0,24128.0,384.0)
set Ou=Rect(19488.0,11168.0,19808.0,11488.0)
set lu=Rect(20672.0,2528.0,21056.0,2848.0)
set bu=Rect(23776.0,2368.0,24160.0,2720.0)
set yu=Rect(18336.0,-13408.0,18624.0,-13120.0)
set pu=Rect(17056.0,-11648.0,17376.0,-11264.0)
set eu=Rect(15488.0,-17696.0,15840.0,-17376.0)
set qu=Rect(24896.0,-8480.0,25248.0,-8128.0)
set au=Rect(16480.0,-14368.0,16768.0,-14048.0)
set nu=Rect(17088.0,-19744.0,17440.0,-19456.0)
set du=Rect(22720.0,-10432.0,23072.0,-10048.0)
set fu=Rect(20672.0,-23232.0,21056.0,-22848.0)
set Ru=Rect(19904.0,-5920.0,20256.0,-5632.0)
set Tu=Rect(18624.0,-3936.0,18976.0,-3616.0)
set Yu=Rect(-13632.0,-14816.0,-12192.0,-13376.0)
set Gu=Rect(17760.0,-10400.0,23360.0,-1344.0)
set gu=Rect(12384.0,-5984.0,13824.0,-4352.0)
set hu=Rect(-10944.0,3968.0,-7680.0,5120.0)
set Fu=Rect(-6528.0,7808.0,-6176.0,8160.0)
set ku=Rect(-8864.0,6912.0,-8448.0,7264.0)
set ju=Rect(-11680.0,14304.0,-11264.0,14752.0)
set xu=Rect(-9760.0,12928.0,-9472.0,13280.0)
set vu=Rect(-7552.0,16928.0,-7232.0,17248.0)
set mu=Rect(-17472.0,-3328.0,-17120.0,-2976.0)
call Rect(-24576.0,-1376.0,-24224.0,-1024.0)
set Qu=Rect(23392.0,10912.0,23712.0,11232.0)
set Wu=Rect(17280.0,19456.0,17632.0,19808.0)
set Eu=Rect(-16896.0,24032.0,-16544.0,24352.0)
set Zu=Rect(-15904.0,25952.0,-15520.0,26304.0)
set Uu=Rect(-17312.0,26624.0,-16896.0,27008.0)
set Iu=Rect(-16096.0,20352.0,-15712.0,20768.0)
set Pu=Rect(-20448.0,21440.0,-20064.0,21792.0)
set Au=Rect(-22560.0,19808.0,-22272.0,20128.0)
set Du=Rect(-18752.0,19520.0,-18400.0,19872.0)
set Hu=Rect(-16128.0,16896.0,-15808.0,17248.0)
set Ju=Rect(-17952.0,15904.0,-17632.0,16224.0)
set Ku=Rect(-19936.0,16352.0,-19648.0,16672.0)
set Lu=Rect(-17248.0,12448.0,-16928.0,12832.0)
set Xu=Rect(-13728.0,11968.0,-13408.0,12352.0)
set Cu=Rect(-15232.0,10624.0,-14880.0,10976.0)
set Vu=Rect(-13856.0,7872.0,-13568.0,8256.0)
set Bu=Rect(-16192.0,5824.0,-15840.0,6208.0)
set Nu=Rect(-16864.0,3392.0,-16576.0,3776.0)
set Mu=Rect(-18880.0,5568.0,-18528.0,5920.0)
set wr=Rect(-20288.0,1216.0,-19936.0,1600.0)
set ur=Rect(-17216.0,352.0,-16896.0,736.0)
set rr=Rect(-24512.0,3744.0,-24128.0,4064.0)
set sr=Rect(-22720.0,2368.0,-22432.0,2752.0)
set tr=Rect(-23552.0,-256.0,-23200.0,128.0)
set ir=Rect(-25376.0,1312.0,-25056.0,1632.0)
set Sr=Rect(-28736.0,-192.0,-28352.0,160.0)
set cr=Rect(-21024.0,2944.0,-20704.0,3360.0)
set lr=Rect(-13792.0,2144.0,-13440.0,2592.0)
set br=Rect(-13568.0,14912.0,-13216.0,15296.0)
set yr=Rect(-12736.0,16128.0,-12352.0,16512.0)
set pr=Rect(-10880.0,3360.0,-10528.0,3712.0)
set er=Rect(-10048.0,5280.0,-9696.0,5600.0)
set qr=Rect(-6880.0,3936.0,-6560.0,4256.0)
set ar=Rect(-8224.0,3040.0,-7904.0,3392.0)
set nr=Rect(-8960.0,1760.0,-8608.0,2176.0)
set dr=Rect(-6624.0,1088.0,-6304.0,1472.0)
set fr=Rect(-7296.0,-960.0,-6944.0,-544.0)
set Rr=Rect(-23712.0,-4704.0,-23392.0,-4416.0)
set Tr=Rect(-25184.0,-3168.0,-24864.0,-2848.0)
set Yr=Rect(-21888.0,-4416.0,-21536.0,-4032.0)
set Gr=Rect(-20928.0,-2304.0,-20576.0,-1888.0)
set gr=Rect(-7776.0,11040.0,-7456.0,11392.0)
set hr=Rect(-11648.0,7072.0,-11296.0,7360.0)
set Fr=Rect(-13728.0,4992.0,-13408.0,5376.0)
set kr=Rect(-5152.0,21696.0,-4832.0,22080.0)
set jr=Rect(-5248.0,24416.0,-4960.0,24768.0)
set xr=Rect(-6688.0,28096.0,-6368.0,28480.0)
set vr=Rect(-9024.0,26496.0,-8736.0,26880.0)
set mr=Rect(-10048.0,28224.0,-9696.0,28576.0)
set Qr=Rect(-1408.0,23776.0,-1152.0,24096.0)
set Wr=Rect(-2720.0,26176.0,-2432.0,26560.0)
set Er=Rect(-28032.0,-2944.0,-27680.0,-2560.0)
set Zr=Rect(-29760.0,-10016.0,-29408.0,-9632.0)
set Ur=Rect(15296.0,-26976.0,15648.0,-26624.0)
set Ir=Rect(-20544.0,12032.0,-20160.0,12416.0)
set Pr=Rect(-18368.0,10624.0,-18016.0,11008.0)
set Ar=Rect(-10880.0,-576.0,-10528.0,-224.0)
set Dr=Rect(-11104.0,-4768.0,-10816.0,-4448.0)
set Hr=Rect(-5728.0,-2912.0,-5440.0,-2560.0)
set Jr=Rect(-3904.0,-6720.0,-3552.0,-6336.0)
set Kr=Rect(-3616.0,-3040.0,-3328.0,-2688.0)
set Lr=Rect(-7200.0,-8000.0,-6880.0,-7616.0)
set Xr=Rect(-5504.0,-9344.0,-5248.0,-9056.0)
set Cr=Rect(-11616.0,10848.0,-11296.0,11168.0)
set Vr=Rect(-1792.0,-320.0,-1440.0,64.0)
set Br=Rect(3232.0,-7488.0,3552.0,-7136.0)
set Nr=Rect(8224.0,-10496.0,8512.0,-10208.0)
set Mr=Rect(1344.0,29280.0,1696.0,29632.0)
set ws=Rect(10848.0,-2144.0,11136.0,-1824.0)
set us=Rect(-26496.0,-1568.0,-26144.0,-1248.0)
set rs=Rect(-27168.0,2528.0,-26880.0,2816.0)
set ss=Rect(-2016.0,27552.0,-1696.0,27936.0)
set ts=Rect(-3488.0,23040.0,-3200.0,23392.0)
set is=Rect(2016.0,-7904.0,2336.0,-7584.0)
set Ss=Rect(640.0,-5760.0,992.0,-5376.0)
set cs=Rect(5216.0,-12384.0,5504.0,-12064.0)
set os=Rect(18272.0,-17504.0,18656.0,-17056.0)
set Os=Rect(26848.0,-11680.0,27168.0,-11360.0)
set ls=Rect(6464.0,-4672.0,6816.0,-4288.0)
set bs=Rect(20672.0,21312.0,21024.0,21696.0)
set ys=Rect(-1824.0,5792.0,-1440.0,6144.0)
set ps=Rect(-23264.0,-8992.0,-22944.0,-8704.0)
set es=Rect(-13504.0,-8640.0,-13184.0,-8384.0)
set qs=Rect(26048.0,-2848.0,26400.0,-2528.0)
set as=Rect(28864.0,-3360.0,29152.0,-3040.0)
set ns=Rect(28064.0,2592.0,28352.0,2880.0)
set ds=Rect(27488.0,-5984.0,27808.0,-5664.0)
call sT()
call tT()
call InitBlizzard()
call If()
call kK()
set QK=Ts
if TriggerEvaluate(QK) then
call TriggerExecute(QK)
endif
set WK=Ms
if TriggerEvaluate(WK) then
call TriggerExecute(WK)
endif
set mK=CreateTrigger()
call TriggerAddCondition(mK,Condition(Tn))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Real.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(Yn))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Integer.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(Gn))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package String.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(gn))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Angle.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(hn))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Vectors.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(Fn))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Maths.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(kn))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Player.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(jn))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Printing.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(xn))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Basics.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(vn))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package GameTimer.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(mn))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MagicFunctions.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(Qn))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package ErrorHandling.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(Wn))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Matrices.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(En))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Quaternion.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(Zn))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Table.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(Un))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Playercolor.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(In))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Colors.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(Pn))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Group.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(An))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Lightning.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(Dn))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package WeatherEffects.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(Hn))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package TypeCasting.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(Jn))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package ClosureForGroups.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(Kn))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package LinkedList.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(Ln))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Abilities.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(Xn))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package AbilityIds.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(Cn))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Buildings.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(Vn))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MutliboardTools.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(Bn))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package HashList.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(Nn))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package EventHelper.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(Mn))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package RegisterEvents.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(wd))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package TimerUtils.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(ud))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package ClosureTimers.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(rd))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package TargetsAllowed.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(sd))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Doodads.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(td))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Icons.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(id))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Objects.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(Sd))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Sounds.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(cd))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Soundsets.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(od))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Textures.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(Od))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package UI.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(ld))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Units.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(bd))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package UnitIds.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(yd))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MapBounds.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(pd))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package DummyRecycler.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(ed))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package StringUtils.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(qd))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package ObjectIds.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(ad))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Preloader.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(nd))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package ObjectIdGenerator.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(dd))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package OnUnitEnterLeave.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(fd))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package UnitIndexer.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(Rd))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package ClosureEvents.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(Td))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MathTools.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(Yd))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Forces.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(Gd))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Strings.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(gd))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package CityBaseTaxes.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(hd))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Revolts.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(Fd))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package City.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(kd))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Multiboards.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(jd))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package PlayerStats.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(xd))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package CityModifiers.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(vd))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Main.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(md))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package CastleCapture.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(Qd))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package CityBuilded.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(Wd))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package CityManage.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(Ed))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package HashSet.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(Zd))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package VoteKick.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(Ud))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Commands.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(Id))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Credits.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(Pd))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Economy.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(Ad))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package DateTime.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(Dd))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MultiboardCityUpdate.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(Hd))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Diplomacy.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(Jd))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package LimitEncampments.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(Kd))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package LimitMercenaryCamps.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(Ld))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Logarithm.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(Xd))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MainInit.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(Cd))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package MassControl.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(Vd))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package NoShipsNearRivers.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(Bd))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package OnPlayerLeave.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(Nd))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package RangeChecks.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(Md))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Taxation.")
endif
call TriggerClearConditions(mK)
call TriggerAddCondition(mK,Condition(wf))
if not TriggerEvaluate(mK) then
call DisplayTimedTextToPlayer(GetLocalPlayer(),0.,0.,45.,"Could not initialize package Upkeep.")
endif
call TriggerClearConditions(mK)
call DestroyTrigger(mK)
set mK=null
set QK=null
set WK=null
endfunction
function jK takes nothing returns nothing
call SetPlayerStartLocation(Player(0),0)
call ForcePlayerStartLocation(Player(0),0)
call SetPlayerColor(Player(0),ConvertPlayerColor(0))
call SetPlayerRacePreference(Player(0),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(0),false)
call SetPlayerController(Player(0),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(1),1)
call ForcePlayerStartLocation(Player(1),1)
call SetPlayerColor(Player(1),ConvertPlayerColor(1))
call SetPlayerRacePreference(Player(1),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(1),false)
call SetPlayerController(Player(1),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(2),2)
call ForcePlayerStartLocation(Player(2),2)
call SetPlayerColor(Player(2),ConvertPlayerColor(2))
call SetPlayerRacePreference(Player(2),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(2),false)
call SetPlayerController(Player(2),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(3),3)
call ForcePlayerStartLocation(Player(3),3)
call SetPlayerColor(Player(3),ConvertPlayerColor(3))
call SetPlayerRacePreference(Player(3),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(3),false)
call SetPlayerController(Player(3),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(4),4)
call ForcePlayerStartLocation(Player(4),4)
call SetPlayerColor(Player(4),ConvertPlayerColor(4))
call SetPlayerRacePreference(Player(4),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(4),false)
call SetPlayerController(Player(4),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(5),5)
call ForcePlayerStartLocation(Player(5),5)
call SetPlayerColor(Player(5),ConvertPlayerColor(5))
call SetPlayerRacePreference(Player(5),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(5),false)
call SetPlayerController(Player(5),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(6),6)
call ForcePlayerStartLocation(Player(6),6)
call SetPlayerColor(Player(6),ConvertPlayerColor(6))
call SetPlayerRacePreference(Player(6),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(6),false)
call SetPlayerController(Player(6),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(7),7)
call ForcePlayerStartLocation(Player(7),7)
call SetPlayerColor(Player(7),ConvertPlayerColor(7))
call SetPlayerRacePreference(Player(7),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(7),false)
call SetPlayerController(Player(7),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(8),8)
call ForcePlayerStartLocation(Player(8),8)
call SetPlayerColor(Player(8),ConvertPlayerColor(8))
call SetPlayerRacePreference(Player(8),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(8),false)
call SetPlayerController(Player(8),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(9),9)
call ForcePlayerStartLocation(Player(9),9)
call SetPlayerColor(Player(9),ConvertPlayerColor(9))
call SetPlayerRacePreference(Player(9),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(9),false)
call SetPlayerController(Player(9),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(10),10)
call ForcePlayerStartLocation(Player(10),10)
call SetPlayerColor(Player(10),ConvertPlayerColor(10))
call SetPlayerRacePreference(Player(10),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(10),false)
call SetPlayerController(Player(10),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(11),11)
call ForcePlayerStartLocation(Player(11),11)
call SetPlayerColor(Player(11),ConvertPlayerColor(11))
call SetPlayerRacePreference(Player(11),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(11),false)
call SetPlayerController(Player(11),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(12),12)
call ForcePlayerStartLocation(Player(12),12)
call SetPlayerColor(Player(12),ConvertPlayerColor(12))
call SetPlayerRacePreference(Player(12),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(12),false)
call SetPlayerController(Player(12),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(13),13)
call ForcePlayerStartLocation(Player(13),13)
call SetPlayerColor(Player(13),ConvertPlayerColor(13))
call SetPlayerRacePreference(Player(13),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(13),false)
call SetPlayerController(Player(13),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(14),14)
call ForcePlayerStartLocation(Player(14),14)
call SetPlayerColor(Player(14),ConvertPlayerColor(14))
call SetPlayerRacePreference(Player(14),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(14),false)
call SetPlayerController(Player(14),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(15),15)
call ForcePlayerStartLocation(Player(15),15)
call SetPlayerColor(Player(15),ConvertPlayerColor(15))
call SetPlayerRacePreference(Player(15),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(15),false)
call SetPlayerController(Player(15),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(16),16)
call ForcePlayerStartLocation(Player(16),16)
call SetPlayerColor(Player(16),ConvertPlayerColor(16))
call SetPlayerRacePreference(Player(16),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(16),false)
call SetPlayerController(Player(16),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(17),17)
call ForcePlayerStartLocation(Player(17),17)
call SetPlayerColor(Player(17),ConvertPlayerColor(17))
call SetPlayerRacePreference(Player(17),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(17),false)
call SetPlayerController(Player(17),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(18),18)
call ForcePlayerStartLocation(Player(18),18)
call SetPlayerColor(Player(18),ConvertPlayerColor(18))
call SetPlayerRacePreference(Player(18),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(18),false)
call SetPlayerController(Player(18),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(19),19)
call ForcePlayerStartLocation(Player(19),19)
call SetPlayerColor(Player(19),ConvertPlayerColor(19))
call SetPlayerRacePreference(Player(19),RACE_PREF_HUMAN)
call SetPlayerRaceSelectable(Player(19),false)
call SetPlayerController(Player(19),MAP_CONTROL_USER)
endfunction
function vK takes nothing returns nothing
call SetStartLocPrioCount(0,19)
call SetStartLocPrio(0,0,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,1,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,2,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,3,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,4,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,9,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,10,11,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,11,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,12,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,13,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,14,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,15,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,16,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,17,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,18,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(1,9)
call SetStartLocPrio(1,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,1,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,2,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,3,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,4,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(2,9)
call SetStartLocPrio(2,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,2,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,3,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,4,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(3,9)
call SetStartLocPrio(3,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,3,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,4,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(4,9)
call SetStartLocPrio(4,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,4,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(5,9)
call SetStartLocPrio(5,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(6,9)
call SetStartLocPrio(6,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(7,9)
call SetStartLocPrio(7,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(8,9)
call SetStartLocPrio(8,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(9,9)
call SetStartLocPrio(9,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,8,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(10,16)
call SetStartLocPrio(10,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,8,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,9,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,10,12,MAP_LOC_PRIO_LOW)
call SetStartLocPrio(10,11,13,MAP_LOC_PRIO_LOW)
call SetStartLocPrio(10,12,14,MAP_LOC_PRIO_LOW)
call SetStartLocPrio(10,13,15,MAP_LOC_PRIO_LOW)
call SetStartLocPrio(10,14,16,MAP_LOC_PRIO_LOW)
call SetStartLocPrio(10,15,17,MAP_LOC_PRIO_LOW)
call SetStartLocPrioCount(11,19)
call SetStartLocPrio(11,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,8,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,9,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,10,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,11,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,12,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,13,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,14,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,15,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,16,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,17,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,18,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(12,5)
call SetStartLocPrio(12,0,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,1,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,2,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,3,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,4,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(13,5)
call SetStartLocPrio(13,0,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,1,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,2,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,3,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,4,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(14,5)
call SetStartLocPrio(14,0,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,1,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,2,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,3,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,4,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(15,5)
call SetStartLocPrio(15,0,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,1,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,2,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,3,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,4,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(16,5)
call SetStartLocPrio(16,0,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,1,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,2,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,3,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,4,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(17,5)
call SetStartLocPrio(17,0,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,1,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,2,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,3,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,4,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(18,1)
call SetStartLocPrio(18,0,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(19,1)
call SetStartLocPrio(19,0,18,MAP_LOC_PRIO_HIGH)
endfunction
function xK takes nothing returns nothing
call SetPlayerTeam(Player(0),0)
call SetPlayerTeam(Player(1),0)
call SetPlayerTeam(Player(2),0)
call SetPlayerTeam(Player(3),0)
call SetPlayerTeam(Player(4),0)
call SetPlayerTeam(Player(5),0)
call SetPlayerTeam(Player(6),0)
call SetPlayerTeam(Player(7),0)
call SetPlayerTeam(Player(8),0)
call SetPlayerTeam(Player(9),0)
call SetPlayerTeam(Player(10),0)
call SetPlayerTeam(Player(11),0)
call SetPlayerTeam(Player(12),1)
call SetPlayerTeam(Player(13),1)
call SetPlayerTeam(Player(14),1)
call SetPlayerTeam(Player(15),1)
call SetPlayerTeam(Player(16),1)
call SetPlayerTeam(Player(17),1)
call SetPlayerTeam(Player(18),1)
call SetPlayerTeam(Player(19),1)
endfunction
function config takes nothing returns nothing
call SetMapName("TRIGSTR_001")
call SetMapDescription("TRIGSTR_003")
call SetPlayers(20)
call SetTeams(20)
call SetGamePlacement(MAP_PLACEMENT_TEAMS_TOGETHER)
call DefineStartLocation(0,320.0,5184.0)
call DefineStartLocation(1,320.0,5184.0)
call DefineStartLocation(2,320.0,5184.0)
call DefineStartLocation(3,320.0,5184.0)
call DefineStartLocation(4,320.0,5184.0)
call DefineStartLocation(5,320.0,5184.0)
call DefineStartLocation(6,320.0,5184.0)
call DefineStartLocation(7,320.0,5184.0)
call DefineStartLocation(8,320.0,5184.0)
call DefineStartLocation(9,320.0,5184.0)
call DefineStartLocation(10,320.0,5184.0)
call DefineStartLocation(11,320.0,5184.0)
call DefineStartLocation(12,320.0,5184.0)
call DefineStartLocation(13,320.0,5184.0)
call DefineStartLocation(14,320.0,5184.0)
call DefineStartLocation(15,320.0,5184.0)
call DefineStartLocation(16,320.0,5184.0)
call DefineStartLocation(17,320.0,5184.0)
call DefineStartLocation(18,320.0,5184.0)
call DefineStartLocation(19,320.0,5184.0)
call jK()
call xK()
call vK()
endfunction
